<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11218.c" pos:tabs="8"><function pos:start="1:1" pos:end="62:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:18">l2_load</name><parameter_list pos:start="1:19" pos:end="3:24">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:39"><name pos:start="1:20" pos:end="1:35">BlockDriverState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">bs</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:49">uint64_t</name></type> <name pos:start="1:51" pos:end="1:59">l2_offset</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:23"><decl pos:start="3:5" pos:end="3:23"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:12">uint64_t</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier><modifier pos:start="3:15" pos:end="3:15">*</modifier></type><name pos:start="3:16" pos:end="3:23">l2_table</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="62:1">{<block_content pos:start="7:5" pos:end="60:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">min_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:64">/* seek if the table for the given offset is in the cache */</comment>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><operator pos:start="19:5" pos:end="19:5">*</operator><name pos:start="19:6" pos:end="19:13">l2_table</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:43"><name pos:start="19:17" pos:end="19:29">seek_l2_table</name><argument_list pos:start="19:30" pos:end="19:43">(<argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">s</name></expr></argument>, <argument pos:start="19:34" pos:end="19:42"><expr pos:start="19:34" pos:end="19:42"><name pos:start="19:34" pos:end="19:42">l2_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:17">l2_table</name> <operator pos:start="21:19" pos:end="21:20">!=</operator> <name pos:start="21:22" pos:end="21:25">NULL</name></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:59">/* not found: load a new entry in the least used one */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:39"><expr pos:start="33:5" pos:end="33:38"><name pos:start="33:5" pos:end="33:13">min_index</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <call pos:start="33:17" pos:end="33:38"><name pos:start="33:17" pos:end="33:34">l2_cache_new_entry</name><argument_list pos:start="33:35" pos:end="33:38">(<argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><operator pos:start="35:5" pos:end="35:5">*</operator><name pos:start="35:6" pos:end="35:13">l2_table</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">l2_cache</name></name> <operator pos:start="35:29" pos:end="35:29">+</operator> <operator pos:start="35:31" pos:end="35:31">(</operator><name pos:start="35:32" pos:end="35:40">min_index</name> <operator pos:start="35:42" pos:end="35:43">&lt;&lt;</operator> <name pos:start="35:45" pos:end="35:54"><name pos:start="35:45" pos:end="35:45">s</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:54">l2_bits</name></name><operator pos:start="35:55" pos:end="35:55">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:43"><expr pos:start="39:5" pos:end="39:42"><call pos:start="39:5" pos:end="39:42"><name pos:start="39:5" pos:end="39:16">BLKDBG_EVENT</name><argument_list pos:start="39:17" pos:end="39:42">(<argument pos:start="39:18" pos:end="39:25"><expr pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:25"><name pos:start="39:18" pos:end="39:19">bs</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:25">file</name></name></expr></argument>, <argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41">BLKDBG_L2_LOAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:39"><expr pos:start="41:5" pos:end="43:38"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="43:38"><name pos:start="41:11" pos:end="41:20">bdrv_pread</name><argument_list pos:start="41:21" pos:end="43:38">(<argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:23">bs</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">file</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:40"><expr pos:start="41:32" pos:end="41:40"><name pos:start="41:32" pos:end="41:40">l2_offset</name></expr></argument>, <argument pos:start="41:43" pos:end="41:51"><expr pos:start="41:43" pos:end="41:51"><operator pos:start="41:43" pos:end="41:43">*</operator><name pos:start="41:44" pos:end="41:51">l2_table</name></expr></argument>,

        <argument pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">l2_size</name></name> <operator pos:start="43:20" pos:end="43:20">*</operator> <sizeof pos:start="43:22" pos:end="43:37">sizeof<argument_list pos:start="43:28" pos:end="43:37">(<argument pos:start="43:29" pos:end="43:36"><expr pos:start="43:29" pos:end="43:36"><name pos:start="43:29" pos:end="43:36">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="50:5"><if pos:start="45:5" pos:end="50:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="50:5">{<block_content pos:start="48:9" pos:end="48:19">


        <return pos:start="48:9" pos:end="48:19">return <expr pos:start="48:16" pos:end="48:18"><name pos:start="48:16" pos:end="48:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="54:5" pos:end="54:47"><expr pos:start="54:5" pos:end="54:46"><name pos:start="54:5" pos:end="54:34"><name pos:start="54:5" pos:end="54:5">s</name><operator pos:start="54:6" pos:end="54:7">-&gt;</operator><name pos:start="54:8" pos:end="54:23">l2_cache_offsets</name><index pos:start="54:24" pos:end="54:34">[<expr pos:start="54:25" pos:end="54:33"><name pos:start="54:25" pos:end="54:33">min_index</name></expr>]</index></name> <operator pos:start="54:36" pos:end="54:36">=</operator> <name pos:start="54:38" pos:end="54:46">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:38"><expr pos:start="56:5" pos:end="56:37"><name pos:start="56:5" pos:end="56:33"><name pos:start="56:5" pos:end="56:5">s</name><operator pos:start="56:6" pos:end="56:7">-&gt;</operator><name pos:start="56:8" pos:end="56:22">l2_cache_counts</name><index pos:start="56:23" pos:end="56:33">[<expr pos:start="56:24" pos:end="56:32"><name pos:start="56:24" pos:end="56:32">min_index</name></expr>]</index></name> <operator pos:start="56:35" pos:end="56:35">=</operator> <literal type="number" pos:start="56:37" pos:end="56:37">1</literal></expr>;</expr_stmt>



    <return pos:start="60:5" pos:end="60:13">return <expr pos:start="60:12" pos:end="60:12"><literal type="number" pos:start="60:12" pos:end="60:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
