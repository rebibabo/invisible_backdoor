<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23801.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">nut_write_header</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:49">avf</name></decl></parameter>)</parameter_list> <block pos:start="1:52" pos:end="137:1">{<block_content pos:start="3:5" pos:end="135:13">

    <decl_stmt pos:start="3:5" pos:end="3:39"><decl pos:start="3:5" pos:end="3:38"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">NUTContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type> <name pos:start="3:18" pos:end="3:21">priv</name> <init pos:start="3:23" pos:end="3:38">= <expr pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:27">avf</name><operator pos:start="3:28" pos:end="3:29">-&gt;</operator><name pos:start="3:30" pos:end="3:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type> <name pos:start="5:19" pos:end="5:20">bc</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:26">avf</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="27:6"><decl pos:start="7:5" pos:end="27:5"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21">nut_muxer_opts_tt</name></type> <name pos:start="7:23" pos:end="7:27">mopts</name> <init pos:start="7:29" pos:end="27:5">= <expr pos:start="7:31" pos:end="27:5"><block pos:start="7:31" pos:end="27:5">{

        <expr pos:start="9:9" pos:end="15:9"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:15">output</name> <operator pos:start="9:17" pos:end="9:17">=</operator> <block pos:start="9:19" pos:end="15:9">{

            <expr pos:start="11:13" pos:end="11:22"><operator pos:start="11:13" pos:end="11:13">.</operator><name pos:start="11:14" pos:end="11:17">priv</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <name pos:start="11:21" pos:end="11:22">bc</name></expr>,

            <expr pos:start="13:13" pos:end="13:29"><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:18">write</name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:29">av_write</name></expr>,

        }</block></expr>,

        <expr pos:start="17:9" pos:end="17:51"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:14">alloc</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <block pos:start="17:18" pos:end="17:51">{ <expr pos:start="17:20" pos:end="17:28"><name pos:start="17:20" pos:end="17:28">av_malloc</name></expr>, <expr pos:start="17:31" pos:end="17:40"><name pos:start="17:31" pos:end="17:40">av_realloc</name></expr>, <expr pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:49">av_free</name></expr> }</block></expr>,

        <expr pos:start="19:9" pos:end="19:24"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:20">write_index</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">1</literal></expr>,

        <expr pos:start="21:9" pos:end="21:28"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:24">realtime_stream</name> <operator pos:start="21:26" pos:end="21:26">=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr>,

        <expr pos:start="23:9" pos:end="23:29"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:21">max_distance</name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:29">32768</literal></expr>,

        <expr pos:start="25:9" pos:end="25:19"><operator pos:start="25:9" pos:end="25:9">.</operator><name pos:start="25:10" pos:end="25:12">fti</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:19">NULL</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:29"><decl pos:start="29:5" pos:end="29:28"><type pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:24">nut_stream_header_tt</name> <modifier pos:start="29:26" pos:end="29:26">*</modifier></type> <name pos:start="29:28" pos:end="29:28">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:10"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:63"><expr pos:start="35:5" pos:end="35:62"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:8">priv</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:11">s</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:15">s</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:62"><name pos:start="35:19" pos:end="35:28">av_mallocz</name><argument_list pos:start="35:29" pos:end="35:62">(<argument pos:start="35:30" pos:end="35:61"><expr pos:start="35:30" pos:end="35:61"><operator pos:start="35:30" pos:end="35:30">(</operator><name pos:start="35:31" pos:end="35:45"><name pos:start="35:31" pos:end="35:33">avf</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:45">nb_streams</name></name> <operator pos:start="35:47" pos:end="35:47">+</operator> <literal type="number" pos:start="35:49" pos:end="35:49">1</literal><operator pos:start="35:50" pos:end="35:50">)</operator> <operator pos:start="35:52" pos:end="35:52">*</operator> <sizeof pos:start="35:54" pos:end="35:59">sizeof<name/></sizeof>*<name pos:start="35:61" pos:end="35:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <for pos:start="41:5" pos:end="125:5">for <control pos:start="41:9" pos:end="41:41">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:36"><expr pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:35"><name pos:start="41:21" pos:end="41:23">avf</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:35">nb_streams</name></name></expr>;</condition> <incr pos:start="41:38" pos:end="41:40"><expr pos:start="41:38" pos:end="41:40"><name pos:start="41:38" pos:end="41:38">i</name><operator pos:start="41:39" pos:end="41:40">++</operator></expr></incr>)</control> <block pos:start="41:43" pos:end="125:5">{<block_content pos:start="43:9" pos:end="123:9">

        <decl_stmt pos:start="43:9" pos:end="43:56"><decl pos:start="43:9" pos:end="43:55"><type pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:22">AVCodecContext</name> <modifier pos:start="43:24" pos:end="43:24">*</modifier></type> <name pos:start="43:26" pos:end="43:30">codec</name> <init pos:start="43:32" pos:end="43:55">= <expr pos:start="43:34" pos:end="43:55"><name pos:start="43:34" pos:end="43:48"><name pos:start="43:34" pos:end="43:36">avf</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:45">streams</name><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><name pos:start="43:47" pos:end="43:47">i</name></expr>]</index></name><operator pos:start="43:49" pos:end="43:50">-&gt;</operator><name pos:start="43:51" pos:end="43:55">codec</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:14"><decl pos:start="45:9" pos:end="45:13"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:13">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:23"><decl pos:start="47:9" pos:end="47:22"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:18">fourcc</name> <init pos:start="47:20" pos:end="47:22">= <expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:30"><decl pos:start="49:9" pos:end="49:15"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:15">num</name></decl>, <decl pos:start="49:18" pos:end="49:22"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:18" pos:end="49:22">denom</name></decl>, <decl pos:start="49:25" pos:end="49:29"><type ref="prev" pos:start="49:9" pos:end="49:11"/><name pos:start="49:25" pos:end="49:29">ssize</name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:96"><expr pos:start="53:9" pos:end="53:95"><name pos:start="53:9" pos:end="53:12"><name pos:start="53:9" pos:end="53:9">s</name><index pos:start="53:10" pos:end="53:12">[<expr pos:start="53:11" pos:end="53:11"><name pos:start="53:11" pos:end="53:11">i</name></expr>]</index></name><operator pos:start="53:13" pos:end="53:13">.</operator><name pos:start="53:14" pos:end="53:17">type</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <ternary pos:start="53:21" pos:end="53:95"><condition pos:start="53:21" pos:end="53:61"><expr pos:start="53:21" pos:end="53:59"><name pos:start="53:21" pos:end="53:37"><name pos:start="53:21" pos:end="53:25">codec</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:37">codec_type</name></name> <operator pos:start="53:39" pos:end="53:40">==</operator> <name pos:start="53:42" pos:end="53:59">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="53:63" pos:end="53:77"> <expr pos:start="53:63" pos:end="53:77"><name pos:start="53:63" pos:end="53:77">NUT_VIDEO_CLASS</name></expr> </then><else pos:start="53:79" pos:end="53:95">: <expr pos:start="53:81" pos:end="53:95"><name pos:start="53:81" pos:end="53:95">NUT_AUDIO_CLASS</name></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="59:66"><if pos:start="57:9" pos:end="57:56">if <condition pos:start="57:12" pos:end="57:29">(<expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="57:31" pos:end="57:56"><block_content pos:start="57:31" pos:end="57:56"> <expr_stmt pos:start="57:31" pos:end="57:56"><expr pos:start="57:31" pos:end="57:55"><name pos:start="57:31" pos:end="57:36">fourcc</name> <operator pos:start="57:38" pos:end="57:38">=</operator> <name pos:start="57:40" pos:end="57:55"><name pos:start="57:40" pos:end="57:44">codec</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:55">codec_tag</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="59:66">else<block type="pseudo" pos:start="59:14" pos:end="59:66"><block_content pos:start="59:14" pos:end="59:66"> <expr_stmt pos:start="59:14" pos:end="59:66"><expr pos:start="59:14" pos:end="59:65"><name pos:start="59:14" pos:end="59:19">fourcc</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <call pos:start="59:23" pos:end="59:65"><name pos:start="59:23" pos:end="59:38">ff_codec_get_tag</name><argument_list pos:start="59:39" pos:end="59:65">(<argument pos:start="59:40" pos:end="59:47"><expr pos:start="59:40" pos:end="59:47"><name pos:start="59:40" pos:end="59:47">nut_tags</name></expr></argument>, <argument pos:start="59:50" pos:end="59:64"><expr pos:start="59:50" pos:end="59:64"><name pos:start="59:50" pos:end="59:64"><name pos:start="59:50" pos:end="59:54">codec</name><operator pos:start="59:55" pos:end="59:56">-&gt;</operator><name pos:start="59:57" pos:end="59:64">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:19">fourcc</name></expr>)</condition> <block pos:start="63:22" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:119">

            <if_stmt pos:start="65:13" pos:end="65:119"><if pos:start="65:13" pos:end="65:119">if <condition pos:start="65:16" pos:end="65:56">(<expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:33"><name pos:start="65:17" pos:end="65:21">codec</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:33">codec_type</name></name> <operator pos:start="65:35" pos:end="65:36">==</operator> <name pos:start="65:38" pos:end="65:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="65:58" pos:end="65:119"><block_content pos:start="65:58" pos:end="65:119"> <expr_stmt pos:start="65:58" pos:end="65:119"><expr pos:start="65:58" pos:end="65:118"><name pos:start="65:58" pos:end="65:63">fourcc</name> <operator pos:start="65:65" pos:end="65:65">=</operator> <call pos:start="65:67" pos:end="65:118"><name pos:start="65:67" pos:end="65:82">ff_codec_get_tag</name><argument_list pos:start="65:83" pos:end="65:118">(<argument pos:start="65:84" pos:end="65:100"><expr pos:start="65:84" pos:end="65:100"><name pos:start="65:84" pos:end="65:100">ff_codec_bmp_tags</name></expr></argument>, <argument pos:start="65:103" pos:end="65:117"><expr pos:start="65:103" pos:end="65:117"><name pos:start="65:103" pos:end="65:117"><name pos:start="65:103" pos:end="65:107">codec</name><operator pos:start="65:108" pos:end="65:109">-&gt;</operator><name pos:start="65:110" pos:end="65:117">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="67:119"><if pos:start="67:13" pos:end="67:119">if <condition pos:start="67:16" pos:end="67:56">(<expr pos:start="67:17" pos:end="67:55"><name pos:start="67:17" pos:end="67:33"><name pos:start="67:17" pos:end="67:21">codec</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:33">codec_type</name></name> <operator pos:start="67:35" pos:end="67:36">==</operator> <name pos:start="67:38" pos:end="67:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="67:58" pos:end="67:119"><block_content pos:start="67:58" pos:end="67:119"> <expr_stmt pos:start="67:58" pos:end="67:119"><expr pos:start="67:58" pos:end="67:118"><name pos:start="67:58" pos:end="67:63">fourcc</name> <operator pos:start="67:65" pos:end="67:65">=</operator> <call pos:start="67:67" pos:end="67:118"><name pos:start="67:67" pos:end="67:82">ff_codec_get_tag</name><argument_list pos:start="67:83" pos:end="67:118">(<argument pos:start="67:84" pos:end="67:100"><expr pos:start="67:84" pos:end="67:100"><name pos:start="67:84" pos:end="67:100">ff_codec_wav_tags</name></expr></argument>, <argument pos:start="67:103" pos:end="67:117"><expr pos:start="67:103" pos:end="67:117"><name pos:start="67:103" pos:end="67:117"><name pos:start="67:103" pos:end="67:107">codec</name><operator pos:start="67:108" pos:end="67:109">-&gt;</operator><name pos:start="67:110" pos:end="67:117">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:12"><name pos:start="73:9" pos:end="73:9">s</name><index pos:start="73:10" pos:end="73:12">[<expr pos:start="73:11" pos:end="73:11"><name pos:start="73:11" pos:end="73:11">i</name></expr>]</index></name><operator pos:start="73:13" pos:end="73:13">.</operator><name pos:start="73:14" pos:end="73:23">fourcc_len</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <literal type="number" pos:start="73:27" pos:end="73:27">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:9">s</name><index pos:start="75:10" pos:end="75:12">[<expr pos:start="75:11" pos:end="75:11"><name pos:start="75:11" pos:end="75:11">i</name></expr>]</index></name><operator pos:start="75:13" pos:end="75:13">.</operator><name pos:start="75:14" pos:end="75:19">fourcc</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:48"><name pos:start="75:23" pos:end="75:31">av_malloc</name><argument_list pos:start="75:32" pos:end="75:48">(<argument pos:start="75:33" pos:end="75:47"><expr pos:start="75:33" pos:end="75:47"><name pos:start="75:33" pos:end="75:36"><name pos:start="75:33" pos:end="75:33">s</name><index pos:start="75:34" pos:end="75:36">[<expr pos:start="75:35" pos:end="75:35"><name pos:start="75:35" pos:end="75:35">i</name></expr>]</index></name><operator pos:start="75:37" pos:end="75:37">.</operator><name pos:start="75:38" pos:end="75:47">fourcc_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="77:9" pos:end="77:88">for <control pos:start="77:13" pos:end="77:45">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">j</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:40"><expr pos:start="77:21" pos:end="77:39"><name pos:start="77:21" pos:end="77:21">j</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:28"><name pos:start="77:25" pos:end="77:25">s</name><index pos:start="77:26" pos:end="77:28">[<expr pos:start="77:27" pos:end="77:27"><name pos:start="77:27" pos:end="77:27">i</name></expr>]</index></name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:39">fourcc_len</name></expr>;</condition> <incr pos:start="77:42" pos:end="77:44"><expr pos:start="77:42" pos:end="77:44"><name pos:start="77:42" pos:end="77:42">j</name><operator pos:start="77:43" pos:end="77:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:47" pos:end="77:88"><block_content pos:start="77:47" pos:end="77:88"> <expr_stmt pos:start="77:47" pos:end="77:88"><expr pos:start="77:47" pos:end="77:87"><name pos:start="77:47" pos:end="77:50"><name pos:start="77:47" pos:end="77:47">s</name><index pos:start="77:48" pos:end="77:50">[<expr pos:start="77:49" pos:end="77:49"><name pos:start="77:49" pos:end="77:49">i</name></expr>]</index></name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:60"><name pos:start="77:52" pos:end="77:57">fourcc</name><index pos:start="77:58" pos:end="77:60">[<expr pos:start="77:59" pos:end="77:59"><name pos:start="77:59" pos:end="77:59">j</name></expr>]</index></name> <operator pos:start="77:62" pos:end="77:62">=</operator> <operator pos:start="77:64" pos:end="77:64">(</operator><name pos:start="77:65" pos:end="77:70">fourcc</name> <operator pos:start="77:72" pos:end="77:73">&gt;&gt;</operator> <operator pos:start="77:75" pos:end="77:75">(</operator><name pos:start="77:76" pos:end="77:76">j</name><operator pos:start="77:77" pos:end="77:77">*</operator><literal type="number" pos:start="77:78" pos:end="77:78">8</literal><operator pos:start="77:79" pos:end="77:79">)</operator><operator pos:start="77:80" pos:end="77:80">)</operator> <operator pos:start="77:82" pos:end="77:82">&amp;</operator> <literal type="number" pos:start="77:84" pos:end="77:87">0xFF</literal></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="81:9" pos:end="81:62"><expr pos:start="81:9" pos:end="81:61"><call pos:start="81:9" pos:end="81:61"><name pos:start="81:9" pos:end="81:32">ff_parse_specific_params</name><argument_list pos:start="81:33" pos:end="81:61">(<argument pos:start="81:34" pos:end="81:38"><expr pos:start="81:34" pos:end="81:38"><name pos:start="81:34" pos:end="81:38">codec</name></expr></argument>, <argument pos:start="81:41" pos:end="81:44"><expr pos:start="81:41" pos:end="81:44"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:44">num</name></expr></argument>, <argument pos:start="81:47" pos:end="81:52"><expr pos:start="81:47" pos:end="81:52"><operator pos:start="81:47" pos:end="81:47">&amp;</operator><name pos:start="81:48" pos:end="81:52">ssize</name></expr></argument>, <argument pos:start="81:55" pos:end="81:60"><expr pos:start="81:55" pos:end="81:60"><operator pos:start="81:55" pos:end="81:55">&amp;</operator><name pos:start="81:56" pos:end="81:60">denom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:61"><expr pos:start="83:9" pos:end="83:60"><call pos:start="83:9" pos:end="83:60"><name pos:start="83:9" pos:end="83:27">avpriv_set_pts_info</name><argument_list pos:start="83:28" pos:end="83:60">(<argument pos:start="83:29" pos:end="83:43"><expr pos:start="83:29" pos:end="83:43"><name pos:start="83:29" pos:end="83:43"><name pos:start="83:29" pos:end="83:31">avf</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:40">streams</name><index pos:start="83:41" pos:end="83:43">[<expr pos:start="83:42" pos:end="83:42"><name pos:start="83:42" pos:end="83:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:46" pos:end="83:47"><expr pos:start="83:46" pos:end="83:47"><literal type="number" pos:start="83:46" pos:end="83:47">60</literal></expr></argument>, <argument pos:start="83:50" pos:end="83:54"><expr pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:54">denom</name></expr></argument>, <argument pos:start="83:57" pos:end="83:59"><expr pos:start="83:57" pos:end="83:59"><name pos:start="83:57" pos:end="83:59">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:12"><name pos:start="87:9" pos:end="87:9">s</name><index pos:start="87:10" pos:end="87:12">[<expr pos:start="87:11" pos:end="87:11"><name pos:start="87:11" pos:end="87:11">i</name></expr>]</index></name><operator pos:start="87:13" pos:end="87:13">.</operator><name pos:start="87:14" pos:end="87:26"><name pos:start="87:14" pos:end="87:22">time_base</name><operator pos:start="87:23" pos:end="87:23">.</operator><name pos:start="87:24" pos:end="87:26">num</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:34">denom</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:12"><name pos:start="89:9" pos:end="89:9">s</name><index pos:start="89:10" pos:end="89:12">[<expr pos:start="89:11" pos:end="89:11"><name pos:start="89:11" pos:end="89:11">i</name></expr>]</index></name><operator pos:start="89:13" pos:end="89:13">.</operator><name pos:start="89:14" pos:end="89:26"><name pos:start="89:14" pos:end="89:22">time_base</name><operator pos:start="89:23" pos:end="89:23">.</operator><name pos:start="89:24" pos:end="89:26">den</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:32">num</name></expr>;</expr_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:12"><name pos:start="93:9" pos:end="93:9">s</name><index pos:start="93:10" pos:end="93:12">[<expr pos:start="93:11" pos:end="93:11"><name pos:start="93:11" pos:end="93:11">i</name></expr>]</index></name><operator pos:start="93:13" pos:end="93:13">.</operator><name pos:start="93:14" pos:end="93:22">fixed_fps</name> <operator pos:start="93:24" pos:end="93:24">=</operator> <literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:48"><expr pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:9">s</name><index pos:start="95:10" pos:end="95:12">[<expr pos:start="95:11" pos:end="95:11"><name pos:start="95:11" pos:end="95:11">i</name></expr>]</index></name><operator pos:start="95:13" pos:end="95:13">.</operator><name pos:start="95:14" pos:end="95:25">decode_delay</name> <operator pos:start="95:27" pos:end="95:27">=</operator> <name pos:start="95:29" pos:end="95:47"><name pos:start="95:29" pos:end="95:33">codec</name><operator pos:start="95:34" pos:end="95:35">-&gt;</operator><name pos:start="95:36" pos:end="95:47">has_b_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:56"><expr pos:start="97:9" pos:end="97:55"><name pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">s</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><name pos:start="97:11" pos:end="97:11">i</name></expr>]</index></name><operator pos:start="97:13" pos:end="97:13">.</operator><name pos:start="97:14" pos:end="97:31">codec_specific_len</name> <operator pos:start="97:33" pos:end="97:33">=</operator> <name pos:start="97:35" pos:end="97:55"><name pos:start="97:35" pos:end="97:39">codec</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:55">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:47"><expr pos:start="99:9" pos:end="99:46"><name pos:start="99:9" pos:end="99:12"><name pos:start="99:9" pos:end="99:9">s</name><index pos:start="99:10" pos:end="99:12">[<expr pos:start="99:11" pos:end="99:11"><name pos:start="99:11" pos:end="99:11">i</name></expr>]</index></name><operator pos:start="99:13" pos:end="99:13">.</operator><name pos:start="99:14" pos:end="99:27">codec_specific</name> <operator pos:start="99:29" pos:end="99:29">=</operator> <name pos:start="99:31" pos:end="99:46"><name pos:start="99:31" pos:end="99:35">codec</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:46">extradata</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="123:9"><if pos:start="103:9" pos:end="115:9">if <condition pos:start="103:12" pos:end="103:52">(<expr pos:start="103:13" pos:end="103:51"><name pos:start="103:13" pos:end="103:29"><name pos:start="103:13" pos:end="103:17">codec</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:29">codec_type</name></name> <operator pos:start="103:31" pos:end="103:32">==</operator> <name pos:start="103:34" pos:end="103:51">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="103:54" pos:end="115:9">{<block_content pos:start="105:13" pos:end="113:37">

            <expr_stmt pos:start="105:13" pos:end="105:38"><expr pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:16"><name pos:start="105:13" pos:end="105:13">s</name><index pos:start="105:14" pos:end="105:16">[<expr pos:start="105:15" pos:end="105:15"><name pos:start="105:15" pos:end="105:15">i</name></expr>]</index></name><operator pos:start="105:17" pos:end="105:17">.</operator><name pos:start="105:18" pos:end="105:22">width</name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:37"><name pos:start="105:26" pos:end="105:30">codec</name><operator pos:start="105:31" pos:end="105:32">-&gt;</operator><name pos:start="105:33" pos:end="105:37">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:40"><expr pos:start="107:13" pos:end="107:39"><name pos:start="107:13" pos:end="107:16"><name pos:start="107:13" pos:end="107:13">s</name><index pos:start="107:14" pos:end="107:16">[<expr pos:start="107:15" pos:end="107:15"><name pos:start="107:15" pos:end="107:15">i</name></expr>]</index></name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:23">height</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:31">codec</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:39">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:34"><expr pos:start="109:13" pos:end="109:33"><name pos:start="109:13" pos:end="109:16"><name pos:start="109:13" pos:end="109:13">s</name><index pos:start="109:14" pos:end="109:16">[<expr pos:start="109:15" pos:end="109:15"><name pos:start="109:15" pos:end="109:15">i</name></expr>]</index></name><operator pos:start="109:17" pos:end="109:17">.</operator><name pos:start="109:18" pos:end="109:29">sample_width</name> <operator pos:start="109:31" pos:end="109:31">=</operator> <literal type="number" pos:start="109:33" pos:end="109:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:16"><name pos:start="111:13" pos:end="111:13">s</name><index pos:start="111:14" pos:end="111:16">[<expr pos:start="111:15" pos:end="111:15"><name pos:start="111:15" pos:end="111:15">i</name></expr>]</index></name><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:30">sample_height</name> <operator pos:start="111:32" pos:end="111:32">=</operator> <literal type="number" pos:start="111:34" pos:end="111:34">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:37"><expr pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:16"><name pos:start="113:13" pos:end="113:13">s</name><index pos:start="113:14" pos:end="113:16">[<expr pos:start="113:15" pos:end="113:15"><name pos:start="113:15" pos:end="113:15">i</name></expr>]</index></name><operator pos:start="113:17" pos:end="113:17">.</operator><name pos:start="113:18" pos:end="113:32">colorspace_type</name> <operator pos:start="113:34" pos:end="113:34">=</operator> <literal type="number" pos:start="113:36" pos:end="113:36">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="115:11" pos:end="123:9">else <block pos:start="115:16" pos:end="123:9">{<block_content pos:start="117:13" pos:end="121:49">

            <expr_stmt pos:start="117:13" pos:end="117:53"><expr pos:start="117:13" pos:end="117:52"><name pos:start="117:13" pos:end="117:16"><name pos:start="117:13" pos:end="117:13">s</name><index pos:start="117:14" pos:end="117:16">[<expr pos:start="117:15" pos:end="117:15"><name pos:start="117:15" pos:end="117:15">i</name></expr>]</index></name><operator pos:start="117:17" pos:end="117:17">.</operator><name pos:start="117:18" pos:end="117:31">samplerate_num</name> <operator pos:start="117:33" pos:end="117:33">=</operator> <name pos:start="117:35" pos:end="117:52"><name pos:start="117:35" pos:end="117:39">codec</name><operator pos:start="117:40" pos:end="117:41">-&gt;</operator><name pos:start="117:42" pos:end="117:52">sample_rate</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:16"><name pos:start="119:13" pos:end="119:13">s</name><index pos:start="119:14" pos:end="119:16">[<expr pos:start="119:15" pos:end="119:15"><name pos:start="119:15" pos:end="119:15">i</name></expr>]</index></name><operator pos:start="119:17" pos:end="119:17">.</operator><name pos:start="119:18" pos:end="119:33">samplerate_denom</name> <operator pos:start="119:35" pos:end="119:35">=</operator> <literal type="number" pos:start="119:37" pos:end="119:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:49"><expr pos:start="121:13" pos:end="121:48"><name pos:start="121:13" pos:end="121:16"><name pos:start="121:13" pos:end="121:13">s</name><index pos:start="121:14" pos:end="121:16">[<expr pos:start="121:15" pos:end="121:15"><name pos:start="121:15" pos:end="121:15">i</name></expr>]</index></name><operator pos:start="121:17" pos:end="121:17">.</operator><name pos:start="121:18" pos:end="121:30">channel_count</name> <operator pos:start="121:32" pos:end="121:32">=</operator> <name pos:start="121:34" pos:end="121:48"><name pos:start="121:34" pos:end="121:38">codec</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:48">channels</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="129:5" pos:end="129:33"><expr pos:start="129:5" pos:end="129:32"><name pos:start="129:5" pos:end="129:22"><name pos:start="129:5" pos:end="129:5">s</name><index pos:start="129:6" pos:end="129:22">[<expr pos:start="129:7" pos:end="129:21"><name pos:start="129:7" pos:end="129:21"><name pos:start="129:7" pos:end="129:9">avf</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:21">nb_streams</name></name></expr>]</index></name><operator pos:start="129:23" pos:end="129:23">.</operator><name pos:start="129:24" pos:end="129:27">type</name> <operator pos:start="129:29" pos:end="129:29">=</operator> <operator pos:start="129:31" pos:end="129:31">-</operator><literal type="number" pos:start="129:32" pos:end="129:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:48"><expr pos:start="131:5" pos:end="131:47"><name pos:start="131:5" pos:end="131:13"><name pos:start="131:5" pos:end="131:8">priv</name><operator pos:start="131:9" pos:end="131:10">-&gt;</operator><name pos:start="131:11" pos:end="131:13">nut</name></name> <operator pos:start="131:15" pos:end="131:15">=</operator> <call pos:start="131:17" pos:end="131:47"><name pos:start="131:17" pos:end="131:30">nut_muxer_init</name><argument_list pos:start="131:31" pos:end="131:47">(<argument pos:start="131:32" pos:end="131:37"><expr pos:start="131:32" pos:end="131:37"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:37">mopts</name></expr></argument>, <argument pos:start="131:40" pos:end="131:40"><expr pos:start="131:40" pos:end="131:40"><name pos:start="131:40" pos:end="131:40">s</name></expr></argument>, <argument pos:start="131:43" pos:end="131:46"><expr pos:start="131:43" pos:end="131:46"><name pos:start="131:43" pos:end="131:46">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
