<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19068.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">helper_fxtract</name><parameter_list pos:start="1:20" pos:end="1:25">(<parameter pos:start="1:21" pos:end="1:24"><decl pos:start="1:21" pos:end="1:24"><type pos:start="1:21" pos:end="1:24"><name pos:start="1:21" pos:end="1:24">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:17">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:18">CPU86_LDoubleU</name></type> <name pos:start="5:20" pos:end="5:23">temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:23">expdif</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">temp</name><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:10">d</name></name> <operator pos:start="11:12" pos:end="11:12">=</operator> <name pos:start="11:14" pos:end="11:16">ST0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:10">expdif</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:23"><name pos:start="13:14" pos:end="13:17">EXPD</name><argument_list pos:start="13:18" pos:end="13:23">(<argument pos:start="13:19" pos:end="13:22"><expr pos:start="13:19" pos:end="13:22"><name pos:start="13:19" pos:end="13:22">temp</name></expr></argument>)</argument_list></call> <operator pos:start="13:25" pos:end="13:25">-</operator> <name pos:start="13:27" pos:end="13:33">EXPBIAS</name></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:24">/*DP exponent bias*/</comment>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">ST0</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:16">expdif</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:12"><expr pos:start="19:5" pos:end="19:11"><call pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:9">fpush</name><argument_list pos:start="19:10" pos:end="19:11">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:16">BIASEXPONENT</name><argument_list pos:start="21:17" pos:end="21:22">(<argument pos:start="21:18" pos:end="21:21"><expr pos:start="21:18" pos:end="21:21"><name pos:start="21:18" pos:end="21:21">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">ST0</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <name pos:start="23:11" pos:end="23:16"><name pos:start="23:11" pos:end="23:14">temp</name><operator pos:start="23:15" pos:end="23:15">.</operator><name pos:start="23:16" pos:end="23:16">d</name></name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
