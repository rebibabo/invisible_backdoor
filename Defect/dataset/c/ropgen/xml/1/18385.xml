<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18385.c" pos:tabs="8"><function pos:start="1:1" pos:end="130:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_cell_data</name><parameter_list pos:start="1:28" pos:end="4:78">(<parameter pos:start="1:29" pos:end="1:38"><decl pos:start="1:29" pos:end="1:38"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:32">Cell</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">cell</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">uint8_t</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">block</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:74">ref_block</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:37"><decl pos:start="2:29" pos:end="2:37"><type pos:start="2:29" pos:end="2:37"><name pos:start="2:29" pos:end="2:31">int</name></type> <name pos:start="2:33" pos:end="2:37">pitch</name></decl></parameter>, <parameter pos:start="2:40" pos:end="2:49"><decl pos:start="2:40" pos:end="2:49"><type pos:start="2:40" pos:end="2:49"><name pos:start="2:40" pos:end="2:42">int</name></type> <name pos:start="2:44" pos:end="2:49">h_zoom</name></decl></parameter>, <parameter pos:start="2:52" pos:end="2:61"><decl pos:start="2:52" pos:end="2:61"><type pos:start="2:52" pos:end="2:61"><name pos:start="2:52" pos:end="2:54">int</name></type> <name pos:start="2:56" pos:end="2:61">v_zoom</name></decl></parameter>, <parameter pos:start="2:64" pos:end="2:71"><decl pos:start="2:64" pos:end="2:71"><type pos:start="2:64" pos:end="2:71"><name pos:start="2:64" pos:end="2:66">int</name></type> <name pos:start="2:68" pos:end="2:71">mode</name></decl></parameter>,
                            <parameter pos:start="3:29" pos:end="3:51"><decl pos:start="3:29" pos:end="3:51"><type pos:start="3:29" pos:end="3:48"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:41">vqEntry</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier></type><name pos:start="3:44" pos:end="3:51"><name pos:start="3:44" pos:end="3:48">delta</name><index pos:start="3:49" pos:end="3:51">[<expr pos:start="3:50" pos:end="3:50"><literal type="number" pos:start="3:50" pos:end="3:50">2</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:70"><decl pos:start="3:54" pos:end="3:70"><type pos:start="3:54" pos:end="3:67"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:67">swap_quads</name><index pos:start="3:68" pos:end="3:70">[<expr pos:start="3:69" pos:end="3:69"><literal type="number" pos:start="3:69" pos:end="3:69">2</literal></expr>]</index></name></decl></parameter>,
                            <parameter pos:start="4:29" pos:end="4:52"><decl pos:start="4:29" pos:end="4:52"><type pos:start="4:29" pos:end="4:52"><specifier pos:start="4:29" pos:end="4:33">const</specifier> <name pos:start="4:35" pos:end="4:41">uint8_t</name> <modifier pos:start="4:43" pos:end="4:43">*</modifier><modifier pos:start="4:44" pos:end="4:44">*</modifier></type><name pos:start="4:45" pos:end="4:52">data_ptr</name></decl></parameter>, <parameter pos:start="4:55" pos:end="4:77"><decl pos:start="4:55" pos:end="4:77"><type pos:start="4:55" pos:end="4:77"><specifier pos:start="4:55" pos:end="4:59">const</specifier> <name pos:start="4:61" pos:end="4:67">uint8_t</name> <modifier pos:start="4:69" pos:end="4:69">*</modifier></type><name pos:start="4:70" pos:end="4:77">last_ptr</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="130:1">{<block_content pos:start="6:5" pos:end="129:21">
    <decl_stmt pos:start="6:5" pos:end="6:40"><decl pos:start="6:5" pos:end="6:19"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type>           <name pos:start="6:19" pos:end="6:19">x</name></decl>, <decl pos:start="6:22" pos:end="6:22"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:22" pos:end="6:22">y</name></decl>, <decl pos:start="6:25" pos:end="6:28"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:25" pos:end="6:28">line</name></decl>, <decl pos:start="6:31" pos:end="6:39"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:31" pos:end="6:39">num_lines</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type>           <name pos:start="7:19" pos:end="7:28">rle_blocks</name> <init pos:start="7:30" pos:end="7:32">= <expr pos:start="7:32" pos:end="7:32"><literal type="number" pos:start="7:32" pos:end="7:32">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:35"><decl pos:start="8:5" pos:end="8:22"><type pos:start="8:5" pos:end="8:11"><name pos:start="8:5" pos:end="8:11">uint8_t</name></type>       <name pos:start="8:19" pos:end="8:22">code</name></decl>, <decl pos:start="8:25" pos:end="8:28"><type ref="prev" pos:start="8:5" pos:end="8:11"><modifier pos:start="8:25" pos:end="8:25">*</modifier></type><name pos:start="8:26" pos:end="8:28">dst</name></decl>, <decl pos:start="8:31" pos:end="8:34"><type ref="prev" pos:start="8:5" pos:end="8:11"><modifier pos:start="8:31" pos:end="8:31">*</modifier></type><name pos:start="8:32" pos:end="8:34">ref</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">vqEntry</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:28">delta_tab</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:31"><decl pos:start="10:5" pos:end="10:23"><type pos:start="10:5" pos:end="10:16"><name pos:start="10:5" pos:end="10:12">unsigned</name> <name pos:start="10:14" pos:end="10:16">int</name></type>  <name pos:start="10:19" pos:end="10:23">dyad1</name></decl>, <decl pos:start="10:26" pos:end="10:30"><type ref="prev" pos:start="10:5" pos:end="10:16"/><name pos:start="10:26" pos:end="10:30">dyad2</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type>      <name pos:start="11:19" pos:end="11:23">pix64</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:66"><decl pos:start="12:5" pos:end="12:31"><type pos:start="12:5" pos:end="12:7"><name pos:start="12:5" pos:end="12:7">int</name></type>           <name pos:start="12:19" pos:end="12:27">skip_flag</name> <init pos:start="12:29" pos:end="12:31">= <expr pos:start="12:31" pos:end="12:31"><literal type="number" pos:start="12:31" pos:end="12:31">0</literal></expr></init></decl>, <decl pos:start="12:34" pos:end="12:47"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:34" pos:end="12:47">is_top_of_cell</name></decl>, <decl pos:start="12:50" pos:end="12:65"><type ref="prev" pos:start="12:5" pos:end="12:7"/><name pos:start="12:50" pos:end="12:61">is_first_row</name> <init pos:start="12:63" pos:end="12:65">= <expr pos:start="12:65" pos:end="12:65"><literal type="number" pos:start="12:65" pos:end="12:65">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:58"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>           <name pos:start="13:19" pos:end="13:28">row_offset</name></decl>, <decl pos:start="13:31" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:31" pos:end="13:44">blk_row_offset</name></decl>, <decl pos:start="13:47" pos:end="13:57"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:47" pos:end="13:57">line_offset</name></decl>;</decl_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:28"><expr pos:start="14:5" pos:end="14:27"><name pos:start="14:5" pos:end="14:14">row_offset</name>     <operator pos:start="14:20" pos:end="14:20">=</operator>  <name pos:start="14:23" pos:end="14:27">pitch</name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:71"><expr pos:start="15:5" pos:end="15:70"><name pos:start="15:5" pos:end="15:18">blk_row_offset</name> <operator pos:start="15:20" pos:end="15:20">=</operator> <operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:32">row_offset</name> <operator pos:start="15:34" pos:end="15:35">&lt;&lt;</operator> <operator pos:start="15:37" pos:end="15:37">(</operator><literal type="number" pos:start="15:38" pos:end="15:40">2</literal> <operator pos:start="15:40" pos:end="15:40">+</operator> <name pos:start="15:42" pos:end="15:47">v_zoom</name><operator pos:start="15:48" pos:end="15:48">)</operator><operator pos:start="15:49" pos:end="15:49">)</operator> <operator pos:start="15:51" pos:end="15:51">-</operator> <operator pos:start="15:53" pos:end="15:53">(</operator><name pos:start="15:54" pos:end="15:64"><name pos:start="15:54" pos:end="15:57">cell</name><operator pos:start="15:58" pos:end="15:59">-&gt;</operator><name pos:start="15:60" pos:end="15:64">width</name></name> <operator pos:start="15:66" pos:end="15:67">&lt;&lt;</operator> <literal type="number" pos:start="15:69" pos:end="15:69">2</literal><operator pos:start="15:70" pos:end="15:70">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:45"><expr pos:start="16:5" pos:end="16:44"><name pos:start="16:5" pos:end="16:15">line_offset</name>    <operator pos:start="16:20" pos:end="16:20">=</operator> <ternary pos:start="16:22" pos:end="16:44"><condition pos:start="16:22" pos:end="16:29"><expr pos:start="16:22" pos:end="16:27"><name pos:start="16:22" pos:end="16:27">v_zoom</name></expr> ?</condition><then pos:start="16:31" pos:end="16:40"> <expr pos:start="16:31" pos:end="16:40"><name pos:start="16:31" pos:end="16:40">row_offset</name></expr> </then><else pos:start="16:42" pos:end="16:44">: <expr pos:start="16:44" pos:end="16:44"><literal type="number" pos:start="16:44" pos:end="16:44">0</literal></expr></else></ternary></expr>;</expr_stmt>
    <for pos:start="17:5" pos:end="128:5">for <control pos:start="17:9" pos:end="17:68">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">y</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:33"><expr pos:start="17:17" pos:end="17:32"><name pos:start="17:17" pos:end="17:17">y</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:32"><name pos:start="17:21" pos:end="17:24">cell</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:32">height</name></name></expr>;</condition> <incr pos:start="17:35" pos:end="17:67"><expr pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:46">is_first_row</name> <operator pos:start="17:48" pos:end="17:48">=</operator> <literal type="number" pos:start="17:50" pos:end="17:50">0</literal></expr><operator pos:start="17:51" pos:end="17:51">,</operator> <expr pos:start="17:53" pos:end="17:67"><name pos:start="17:53" pos:end="17:53">y</name> <operator pos:start="17:55" pos:end="17:56">+=</operator> <literal type="number" pos:start="17:58" pos:end="17:60">1</literal> <operator pos:start="17:60" pos:end="17:60">+</operator> <name pos:start="17:62" pos:end="17:67">v_zoom</name></expr></incr>)</control> <block pos:start="17:70" pos:end="128:5">{<block_content pos:start="18:9" pos:end="127:36">
        <for pos:start="18:9" pos:end="124:9">for <control pos:start="18:13" pos:end="18:53">(<init pos:start="18:14" pos:end="18:19"><expr pos:start="18:14" pos:end="18:18"><name pos:start="18:14" pos:end="18:14">x</name> <operator pos:start="18:16" pos:end="18:16">=</operator> <literal type="number" pos:start="18:18" pos:end="18:18">0</literal></expr>;</init> <condition pos:start="18:21" pos:end="18:36"><expr pos:start="18:21" pos:end="18:35"><name pos:start="18:21" pos:end="18:21">x</name> <operator pos:start="18:23" pos:end="18:23">&lt;</operator> <name pos:start="18:25" pos:end="18:35"><name pos:start="18:25" pos:end="18:28">cell</name><operator pos:start="18:29" pos:end="18:30">-&gt;</operator><name pos:start="18:31" pos:end="18:35">width</name></name></expr>;</condition> <incr pos:start="18:38" pos:end="18:52"><expr pos:start="18:38" pos:end="18:52"><name pos:start="18:38" pos:end="18:38">x</name> <operator pos:start="18:40" pos:end="18:41">+=</operator> <literal type="number" pos:start="18:43" pos:end="18:45">1</literal> <operator pos:start="18:45" pos:end="18:45">+</operator> <name pos:start="18:47" pos:end="18:52">h_zoom</name></expr></incr>)</control> <block pos:start="18:55" pos:end="124:9">{<block_content pos:start="19:13" pos:end="123:37">
            <expr_stmt pos:start="19:13" pos:end="19:28"><expr pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:15">ref</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:27">ref_block</name></expr>;</expr_stmt>
            <expr_stmt pos:start="20:13" pos:end="20:24"><expr pos:start="20:13" pos:end="20:23"><name pos:start="20:13" pos:end="20:15">dst</name> <operator pos:start="20:17" pos:end="20:17">=</operator> <name pos:start="20:19" pos:end="20:23">block</name></expr>;</expr_stmt>
            <if_stmt pos:start="21:13" pos:end="120:13"><if pos:start="21:13" pos:end="28:13">if <condition pos:start="21:16" pos:end="21:31">(<expr pos:start="21:17" pos:end="21:30"><name pos:start="21:17" pos:end="21:26">rle_blocks</name> <operator pos:start="21:28" pos:end="21:28">&gt;</operator> <literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr>)</condition> <block pos:start="21:33" pos:end="28:13">{<block_content pos:start="22:17" pos:end="27:29">
                <if_stmt pos:start="22:17" pos:end="26:17"><if pos:start="22:17" pos:end="24:17">if <condition pos:start="22:20" pos:end="22:30">(<expr pos:start="22:21" pos:end="22:29"><name pos:start="22:21" pos:end="22:24">mode</name> <operator pos:start="22:26" pos:end="22:27">&lt;=</operator> <literal type="number" pos:start="22:29" pos:end="22:29">4</literal></expr>)</condition> <block pos:start="22:32" pos:end="24:17">{<block_content pos:start="23:21" pos:end="23:35">
                    <expr_stmt pos:start="23:21" pos:end="23:35"><expr pos:start="23:21" pos:end="23:34"><name pos:start="23:21" pos:end="23:34">RLE_BLOCK_COPY</name></expr>;</expr_stmt>
                </block_content>}</block></if> <if type="elseif" pos:start="24:19" pos:end="26:17">else if <condition pos:start="24:27" pos:end="24:55">(<expr pos:start="24:28" pos:end="24:54"><name pos:start="24:28" pos:end="24:31">mode</name> <operator pos:start="24:33" pos:end="24:34">==</operator> <literal type="number" pos:start="24:36" pos:end="24:37">10</literal> <operator pos:start="24:39" pos:end="24:40">&amp;&amp;</operator> <operator pos:start="24:42" pos:end="24:42">!</operator><name pos:start="24:43" pos:end="24:54"><name pos:start="24:43" pos:end="24:46">cell</name><operator pos:start="24:47" pos:end="24:48">-&gt;</operator><name pos:start="24:49" pos:end="24:54">mv_ptr</name></name></expr>)</condition> <block pos:start="24:57" pos:end="26:17">{<block_content pos:start="25:21" pos:end="25:37">
                    <expr_stmt pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:36">RLE_BLOCK_COPY_8</name></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
                <expr_stmt pos:start="27:17" pos:end="27:29"><expr pos:start="27:17" pos:end="27:28"><name pos:start="27:17" pos:end="27:26">rle_blocks</name><operator pos:start="27:27" pos:end="27:28">--</operator></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="28:15" pos:end="120:13">else <block pos:start="28:20" pos:end="120:13">{<block_content pos:start="29:17" pos:end="119:17">
                <for pos:start="29:17" pos:end="119:17">for <control pos:start="29:21" pos:end="29:41">(<init pos:start="29:22" pos:end="29:30"><expr pos:start="29:22" pos:end="29:29"><name pos:start="29:22" pos:end="29:25">line</name> <operator pos:start="29:27" pos:end="29:27">=</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>;</init> <condition pos:start="29:32" pos:end="29:40"><expr pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:35">line</name> <operator pos:start="29:37" pos:end="29:37">&lt;</operator> <literal type="number" pos:start="29:39" pos:end="29:39">4</literal></expr>;</condition><incr/>)</control> <block pos:start="29:43" pos:end="119:17">{<block_content pos:start="30:21" pos:end="118:63">
                    <expr_stmt pos:start="30:21" pos:end="30:34"><expr pos:start="30:21" pos:end="30:33"><name pos:start="30:21" pos:end="30:29">num_lines</name> <operator pos:start="30:31" pos:end="30:31">=</operator> <literal type="number" pos:start="30:33" pos:end="30:33">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="31:21" pos:end="31:59"><expr pos:start="31:21" pos:end="31:58"><name pos:start="31:21" pos:end="31:34">is_top_of_cell</name> <operator pos:start="31:36" pos:end="31:36">=</operator> <name pos:start="31:38" pos:end="31:49">is_first_row</name> <operator pos:start="31:51" pos:end="31:52">&amp;&amp;</operator> <operator pos:start="31:54" pos:end="31:54">!</operator><name pos:start="31:55" pos:end="31:58">line</name></expr>;</expr_stmt>
                    <comment type="block" pos:start="32:21" pos:end="32:83">/* select primary VQ table for odd, secondary for even lines */</comment>
                    <if_stmt pos:start="33:21" pos:end="36:45"><if pos:start="33:21" pos:end="34:52">if <condition pos:start="33:24" pos:end="33:34">(<expr pos:start="33:25" pos:end="33:33"><name pos:start="33:25" pos:end="33:28">mode</name> <operator pos:start="33:30" pos:end="33:31">&lt;=</operator> <literal type="number" pos:start="33:33" pos:end="33:33">4</literal></expr>)</condition><block type="pseudo" pos:start="34:25" pos:end="34:52"><block_content pos:start="34:25" pos:end="34:52">
                        <expr_stmt pos:start="34:25" pos:end="34:52"><expr pos:start="34:25" pos:end="34:51"><name pos:start="34:25" pos:end="34:33">delta_tab</name> <operator pos:start="34:35" pos:end="34:35">=</operator> <name pos:start="34:37" pos:end="34:51"><name pos:start="34:37" pos:end="34:41">delta</name><index pos:start="34:42" pos:end="34:51">[<expr pos:start="34:43" pos:end="34:50"><name pos:start="34:43" pos:end="34:46">line</name> <operator pos:start="34:48" pos:end="34:48">&amp;</operator> <literal type="number" pos:start="34:50" pos:end="34:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
                    <else pos:start="35:21" pos:end="36:45">else<block type="pseudo" pos:start="36:25" pos:end="36:45"><block_content pos:start="36:25" pos:end="36:45">
                        <expr_stmt pos:start="36:25" pos:end="36:45"><expr pos:start="36:25" pos:end="36:44"><name pos:start="36:25" pos:end="36:33">delta_tab</name> <operator pos:start="36:35" pos:end="36:35">=</operator> <name pos:start="36:37" pos:end="36:44"><name pos:start="36:37" pos:end="36:41">delta</name><index pos:start="36:42" pos:end="36:44">[<expr pos:start="36:43" pos:end="36:43"><literal type="number" pos:start="36:43" pos:end="36:43">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    <expr_stmt pos:start="37:21" pos:end="37:36"><expr pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:35">BUFFER_PRECHECK</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="38:21" pos:end="38:57"><expr pos:start="38:21" pos:end="38:56"><name pos:start="38:21" pos:end="38:24">code</name> <operator pos:start="38:26" pos:end="38:26">=</operator> <call pos:start="38:28" pos:end="38:56"><name pos:start="38:28" pos:end="38:46">bytestream_get_byte</name><argument_list pos:start="38:47" pos:end="38:56">(<argument pos:start="38:48" pos:end="38:55"><expr pos:start="38:48" pos:end="38:55"><name pos:start="38:48" pos:end="38:55">data_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if_stmt pos:start="39:21" pos:end="115:21"><if pos:start="39:21" pos:end="60:21">if <condition pos:start="39:24" pos:end="39:35">(<expr pos:start="39:25" pos:end="39:34"><name pos:start="39:25" pos:end="39:28">code</name> <operator pos:start="39:30" pos:end="39:30">&lt;</operator> <literal type="number" pos:start="39:32" pos:end="39:34">248</literal></expr>)</condition> <block pos:start="39:37" pos:end="60:21">{<block_content pos:start="40:25" pos:end="59:25">
                        <if_stmt pos:start="40:25" pos:end="52:25"><if pos:start="40:25" pos:end="45:25">if <condition pos:start="40:28" pos:end="40:56">(<expr pos:start="40:29" pos:end="40:55"><name pos:start="40:29" pos:end="40:32">code</name> <operator pos:start="40:34" pos:end="40:34">&lt;</operator> <name pos:start="40:36" pos:end="40:55"><name pos:start="40:36" pos:end="40:44">delta_tab</name><operator pos:start="40:45" pos:end="40:46">-&gt;</operator><name pos:start="40:47" pos:end="40:55">num_dyads</name></name></expr>)</condition> <block pos:start="40:58" pos:end="45:25">{<block_content pos:start="41:29" pos:end="44:78">
                            <expr_stmt pos:start="41:29" pos:end="41:44"><expr pos:start="41:29" pos:end="41:43"><name pos:start="41:29" pos:end="41:43">BUFFER_PRECHECK</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="42:29" pos:end="42:66"><expr pos:start="42:29" pos:end="42:65"><name pos:start="42:29" pos:end="42:33">dyad1</name> <operator pos:start="42:35" pos:end="42:35">=</operator> <call pos:start="42:37" pos:end="42:65"><name pos:start="42:37" pos:end="42:55">bytestream_get_byte</name><argument_list pos:start="42:56" pos:end="42:65">(<argument pos:start="42:57" pos:end="42:64"><expr pos:start="42:57" pos:end="42:64"><name pos:start="42:57" pos:end="42:64">data_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt pos:start="43:29" pos:end="43:41"><expr pos:start="43:29" pos:end="43:40"><name pos:start="43:29" pos:end="43:33">dyad2</name> <operator pos:start="43:35" pos:end="43:35">=</operator> <name pos:start="43:37" pos:end="43:40">code</name></expr>;</expr_stmt>
                            <if_stmt pos:start="44:29" pos:end="44:78"><if pos:start="44:29" pos:end="44:78">if <condition pos:start="44:32" pos:end="44:78">(<expr pos:start="44:33" pos:end="44:77"><name pos:start="44:33" pos:end="44:37">dyad1</name> <operator pos:start="44:39" pos:end="44:40">&gt;=</operator> <name pos:start="44:42" pos:end="44:61"><name pos:start="44:42" pos:end="44:50">delta_tab</name><operator pos:start="44:51" pos:end="44:52">-&gt;</operator><name pos:start="44:53" pos:end="44:61">num_dyads</name></name> <operator pos:start="44:63" pos:end="44:64">||</operator> <name pos:start="44:66" pos:end="44:70">dyad1</name> <operator pos:start="44:72" pos:end="44:73">&gt;=</operator> <literal type="number" pos:start="44:75" pos:end="44:77">248</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>
                        </block_content>}</block></if> <else pos:start="45:27" pos:end="52:25">else <block pos:start="45:32" pos:end="52:25">{<block_content pos:start="47:29" pos:end="51:67">
                            <comment type="block" pos:start="46:29" pos:end="46:47">/* process QUADS */</comment>
                            <expr_stmt pos:start="47:29" pos:end="47:57"><expr pos:start="47:29" pos:end="47:56"><name pos:start="47:29" pos:end="47:32">code</name> <operator pos:start="47:34" pos:end="47:35">-=</operator> <name pos:start="47:37" pos:end="47:56"><name pos:start="47:37" pos:end="47:45">delta_tab</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:56">num_dyads</name></name></expr>;</expr_stmt>
                            <expr_stmt pos:start="48:29" pos:end="48:63"><expr pos:start="48:29" pos:end="48:62"><name pos:start="48:29" pos:end="48:33">dyad1</name> <operator pos:start="48:35" pos:end="48:35">=</operator> <name pos:start="48:37" pos:end="48:40">code</name> <operator pos:start="48:42" pos:end="48:42">/</operator> <name pos:start="48:44" pos:end="48:62"><name pos:start="48:44" pos:end="48:52">delta_tab</name><operator pos:start="48:53" pos:end="48:54">-&gt;</operator><name pos:start="48:55" pos:end="48:62">quad_exp</name></name></expr>;</expr_stmt>
                            <expr_stmt pos:start="49:29" pos:end="49:63"><expr pos:start="49:29" pos:end="49:62"><name pos:start="49:29" pos:end="49:33">dyad2</name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:40">code</name> <operator pos:start="49:42" pos:end="49:42">%</operator> <name pos:start="49:44" pos:end="49:62"><name pos:start="49:44" pos:end="49:52">delta_tab</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:62">quad_exp</name></name></expr>;</expr_stmt>
                            <if_stmt pos:start="50:29" pos:end="51:67"><if pos:start="50:29" pos:end="51:67">if <condition pos:start="50:32" pos:end="50:53">(<expr pos:start="50:33" pos:end="50:52"><name pos:start="50:33" pos:end="50:52"><name pos:start="50:33" pos:end="50:42">swap_quads</name><index pos:start="50:43" pos:end="50:52">[<expr pos:start="50:44" pos:end="50:51"><name pos:start="50:44" pos:end="50:47">line</name> <operator pos:start="50:49" pos:end="50:49">&amp;</operator> <literal type="number" pos:start="50:51" pos:end="50:51">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="51:33" pos:end="51:67"><block_content pos:start="51:33" pos:end="51:67">
                                <macro pos:start="51:33" pos:end="51:66"><name pos:start="51:33" pos:end="51:38">FFSWAP</name><argument_list pos:start="51:39" pos:end="51:66">(<argument pos:start="51:40" pos:end="51:51">unsigned int</argument>, <argument pos:start="51:54" pos:end="51:58">dyad1</argument>, <argument pos:start="51:61" pos:end="51:65">dyad2</argument>)</argument_list></macro><empty_stmt pos:start="51:67" pos:end="51:67">;</empty_stmt></block_content></block></if></if_stmt>
                        </block_content>}</block></else></if_stmt>
                        <if_stmt pos:start="53:25" pos:end="59:25"><if pos:start="53:25" pos:end="55:25">if <condition pos:start="53:28" pos:end="53:38">(<expr pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:32">mode</name> <operator pos:start="53:34" pos:end="53:35">&lt;=</operator> <literal type="number" pos:start="53:37" pos:end="53:37">4</literal></expr>)</condition> <block pos:start="53:40" pos:end="55:25">{<block_content pos:start="54:29" pos:end="54:42">
                            <expr_stmt pos:start="54:29" pos:end="54:42"><expr pos:start="54:29" pos:end="54:41"><name pos:start="54:29" pos:end="54:41">APPLY_DELTA_4</name></expr>;</expr_stmt>
                        </block_content>}</block></if> <if type="elseif" pos:start="55:27" pos:end="57:25">else if <condition pos:start="55:35" pos:end="55:63">(<expr pos:start="55:36" pos:end="55:62"><name pos:start="55:36" pos:end="55:39">mode</name> <operator pos:start="55:41" pos:end="55:42">==</operator> <literal type="number" pos:start="55:44" pos:end="55:45">10</literal> <operator pos:start="55:47" pos:end="55:48">&amp;&amp;</operator> <operator pos:start="55:50" pos:end="55:50">!</operator><name pos:start="55:51" pos:end="55:62"><name pos:start="55:51" pos:end="55:54">cell</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:62">mv_ptr</name></name></expr>)</condition> <block pos:start="55:65" pos:end="57:25">{<block_content pos:start="56:29" pos:end="56:42">
                            <expr_stmt pos:start="56:29" pos:end="56:42"><expr pos:start="56:29" pos:end="56:41"><name pos:start="56:29" pos:end="56:41">APPLY_DELTA_8</name></expr>;</expr_stmt>
                        </block_content>}</block></if> <else pos:start="57:27" pos:end="59:25">else <block pos:start="57:32" pos:end="59:25">{<block_content pos:start="58:29" pos:end="58:51">
                            <expr_stmt pos:start="58:29" pos:end="58:51"><expr pos:start="58:29" pos:end="58:50"><name pos:start="58:29" pos:end="58:50">APPLY_DELTA_1011_INTER</name></expr>;</expr_stmt>
                        </block_content>}</block></else></if_stmt>
                    </block_content>}</block></if> <else pos:start="60:23" pos:end="115:21">else <block pos:start="60:28" pos:end="115:21">{<block_content pos:start="62:25" pos:end="114:25">
                        <comment type="block" pos:start="61:25" pos:end="61:47">/* process RLE codes */</comment>
                        <switch pos:start="62:25" pos:end="114:25">switch <condition pos:start="62:32" pos:end="62:37">(<expr pos:start="62:33" pos:end="62:36"><name pos:start="62:33" pos:end="62:36">code</name></expr>)</condition> <block pos:start="62:39" pos:end="114:25">{<block_content pos:start="63:25" pos:end="113:51">
                        <case pos:start="63:25" pos:end="63:40">case <expr pos:start="63:30" pos:end="63:39"><name pos:start="63:30" pos:end="63:39">RLE_ESC_FC</name></expr>:</case>
                            <expr_stmt pos:start="64:29" pos:end="64:43"><expr pos:start="64:29" pos:end="64:42"><name pos:start="64:29" pos:end="64:37">skip_flag</name>  <operator pos:start="64:40" pos:end="64:40">=</operator> <literal type="number" pos:start="64:42" pos:end="64:42">0</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="65:29" pos:end="65:43"><expr pos:start="65:29" pos:end="65:42"><name pos:start="65:29" pos:end="65:38">rle_blocks</name> <operator pos:start="65:40" pos:end="65:40">=</operator> <literal type="number" pos:start="65:42" pos:end="65:42">1</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="66:29" pos:end="66:45"><expr pos:start="66:29" pos:end="66:44"><name pos:start="66:29" pos:end="66:32">code</name>       <operator pos:start="66:40" pos:end="66:40">=</operator> <literal type="number" pos:start="66:42" pos:end="66:44">253</literal></expr>;</expr_stmt>
                            <comment type="block" pos:start="67:29" pos:end="67:45">/* FALLTHROUGH */</comment>
                        <case pos:start="68:25" pos:end="68:40">case <expr pos:start="68:30" pos:end="68:39"><name pos:start="68:30" pos:end="68:39">RLE_ESC_FF</name></expr>:</case>
                        <case pos:start="69:25" pos:end="69:40">case <expr pos:start="69:30" pos:end="69:39"><name pos:start="69:30" pos:end="69:39">RLE_ESC_FE</name></expr>:</case>
                        <case pos:start="70:25" pos:end="70:40">case <expr pos:start="70:30" pos:end="70:39"><name pos:start="70:30" pos:end="70:39">RLE_ESC_FD</name></expr>:</case>
                            <expr_stmt pos:start="71:29" pos:end="71:58"><expr pos:start="71:29" pos:end="71:57"><name pos:start="71:29" pos:end="71:37">num_lines</name> <operator pos:start="71:39" pos:end="71:39">=</operator> <literal type="number" pos:start="71:41" pos:end="71:45">257</literal> <operator pos:start="71:45" pos:end="71:45">-</operator> <name pos:start="71:47" pos:end="71:50">code</name> <operator pos:start="71:52" pos:end="71:52">-</operator> <name pos:start="71:54" pos:end="71:57">line</name></expr>;</expr_stmt>
                            <if_stmt pos:start="72:29" pos:end="73:51"><if pos:start="72:29" pos:end="73:51">if <condition pos:start="72:32" pos:end="72:47">(<expr pos:start="72:33" pos:end="72:46"><name pos:start="72:33" pos:end="72:41">num_lines</name> <operator pos:start="72:43" pos:end="72:44">&lt;=</operator> <literal type="number" pos:start="72:46" pos:end="72:46">0</literal></expr>)</condition><block type="pseudo" pos:start="73:33" pos:end="73:51"><block_content pos:start="73:33" pos:end="73:51">
                                <return pos:start="73:33" pos:end="73:51">return <expr pos:start="73:40" pos:end="73:50"><name pos:start="73:40" pos:end="73:50">IV3_BAD_RLE</name></expr>;</return></block_content></block></if></if_stmt>
                            <if_stmt pos:start="74:29" pos:end="78:29"><if pos:start="74:29" pos:end="76:29">if <condition pos:start="74:32" pos:end="74:42">(<expr pos:start="74:33" pos:end="74:41"><name pos:start="74:33" pos:end="74:36">mode</name> <operator pos:start="74:38" pos:end="74:39">&lt;=</operator> <literal type="number" pos:start="74:41" pos:end="74:41">4</literal></expr>)</condition> <block pos:start="74:44" pos:end="76:29">{<block_content pos:start="75:33" pos:end="75:47">
                                <expr_stmt pos:start="75:33" pos:end="75:47"><expr pos:start="75:33" pos:end="75:46"><name pos:start="75:33" pos:end="75:46">RLE_LINES_COPY</name></expr>;</expr_stmt>
                            </block_content>}</block></if> <if type="elseif" pos:start="76:31" pos:end="78:29">else if <condition pos:start="76:39" pos:end="76:67">(<expr pos:start="76:40" pos:end="76:66"><name pos:start="76:40" pos:end="76:43">mode</name> <operator pos:start="76:45" pos:end="76:46">==</operator> <literal type="number" pos:start="76:48" pos:end="76:49">10</literal> <operator pos:start="76:51" pos:end="76:52">&amp;&amp;</operator> <operator pos:start="76:54" pos:end="76:54">!</operator><name pos:start="76:55" pos:end="76:66"><name pos:start="76:55" pos:end="76:58">cell</name><operator pos:start="76:59" pos:end="76:60">-&gt;</operator><name pos:start="76:61" pos:end="76:66">mv_ptr</name></name></expr>)</condition> <block pos:start="76:69" pos:end="78:29">{<block_content pos:start="77:33" pos:end="77:51">
                                <expr_stmt pos:start="77:33" pos:end="77:51"><expr pos:start="77:33" pos:end="77:50"><name pos:start="77:33" pos:end="77:50">RLE_LINES_COPY_M10</name></expr>;</expr_stmt>
                            </block_content>}</block></if></if_stmt>
                            <break pos:start="79:29" pos:end="79:34">break;</break>
                        <case pos:start="80:25" pos:end="80:40">case <expr pos:start="80:30" pos:end="80:39"><name pos:start="80:30" pos:end="80:39">RLE_ESC_FB</name></expr>:</case>
                            <expr_stmt pos:start="81:29" pos:end="81:44"><expr pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:43">BUFFER_PRECHECK</name></expr>;</expr_stmt>
                            <expr_stmt pos:start="82:29" pos:end="82:65"><expr pos:start="82:29" pos:end="82:64"><name pos:start="82:29" pos:end="82:32">code</name> <operator pos:start="82:34" pos:end="82:34">=</operator> <call pos:start="82:36" pos:end="82:64"><name pos:start="82:36" pos:end="82:54">bytestream_get_byte</name><argument_list pos:start="82:55" pos:end="82:64">(<argument pos:start="82:56" pos:end="82:63"><expr pos:start="82:56" pos:end="82:63"><name pos:start="82:56" pos:end="82:63">data_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt pos:start="83:29" pos:end="83:59"><expr pos:start="83:29" pos:end="83:58"><name pos:start="83:29" pos:end="83:38">rle_blocks</name> <operator pos:start="83:40" pos:end="83:40">=</operator> <operator pos:start="83:42" pos:end="83:42">(</operator><name pos:start="83:43" pos:end="83:46">code</name> <operator pos:start="83:48" pos:end="83:48">&amp;</operator> <literal type="number" pos:start="83:50" pos:end="83:53">0x1F</literal><operator pos:start="83:54" pos:end="83:54">)</operator> <operator pos:start="83:56" pos:end="83:56">-</operator> <literal type="number" pos:start="83:58" pos:end="83:58">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="83:61" pos:end="83:83">/* set block counter */</comment>
                            <if_stmt pos:start="84:29" pos:end="85:55"><if pos:start="84:29" pos:end="85:55">if <condition pos:start="84:32" pos:end="84:61">(<expr pos:start="84:33" pos:end="84:60"><name pos:start="84:33" pos:end="84:36">code</name> <operator pos:start="84:38" pos:end="84:39">&gt;=</operator> <literal type="number" pos:start="84:41" pos:end="84:42">64</literal> <operator pos:start="84:44" pos:end="84:45">||</operator> <name pos:start="84:47" pos:end="84:56">rle_blocks</name> <operator pos:start="84:58" pos:end="84:58">&lt;</operator> <literal type="number" pos:start="84:60" pos:end="84:60">0</literal></expr>)</condition><block type="pseudo" pos:start="85:33" pos:end="85:55"><block_content pos:start="85:33" pos:end="85:55">
                                <return pos:start="85:33" pos:end="85:55">return <expr pos:start="85:40" pos:end="85:54"><name pos:start="85:40" pos:end="85:54">IV3_BAD_COUNTER</name></expr>;</return></block_content></block></if></if_stmt>
                            <expr_stmt pos:start="86:29" pos:end="86:52"><expr pos:start="86:29" pos:end="86:51"><name pos:start="86:29" pos:end="86:37">skip_flag</name> <operator pos:start="86:39" pos:end="86:39">=</operator> <name pos:start="86:41" pos:end="86:44">code</name> <operator pos:start="86:46" pos:end="86:46">&amp;</operator> <literal type="number" pos:start="86:48" pos:end="86:51">0x20</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="87:29" pos:end="87:49"><expr pos:start="87:29" pos:end="87:48"><name pos:start="87:29" pos:end="87:37">num_lines</name> <operator pos:start="87:39" pos:end="87:39">=</operator> <literal type="number" pos:start="87:41" pos:end="87:43">4</literal> <operator pos:start="87:43" pos:end="87:43">-</operator> <name pos:start="87:45" pos:end="87:48">line</name></expr>;</expr_stmt> <comment type="block" pos:start="87:51" pos:end="87:85">/* enforce next block processing */</comment>
                            <if_stmt pos:start="88:29" pos:end="94:29"><if pos:start="88:29" pos:end="94:29">if <condition pos:start="88:32" pos:end="88:75">(<expr pos:start="88:33" pos:end="88:74"><name pos:start="88:33" pos:end="88:36">mode</name> <operator pos:start="88:38" pos:end="88:39">&gt;=</operator> <literal type="number" pos:start="88:41" pos:end="88:42">10</literal> <operator pos:start="88:44" pos:end="88:45">||</operator> <operator pos:start="88:47" pos:end="88:47">(</operator><name pos:start="88:48" pos:end="88:59"><name pos:start="88:48" pos:end="88:51">cell</name><operator pos:start="88:52" pos:end="88:53">-&gt;</operator><name pos:start="88:54" pos:end="88:59">mv_ptr</name></name> <operator pos:start="88:61" pos:end="88:62">||</operator> <operator pos:start="88:64" pos:end="88:64">!</operator><name pos:start="88:65" pos:end="88:73">skip_flag</name><operator pos:start="88:74" pos:end="88:74">)</operator></expr>)</condition> <block pos:start="88:77" pos:end="94:29">{<block_content pos:start="89:33" pos:end="93:33">
                                <if_stmt pos:start="89:33" pos:end="93:33"><if pos:start="89:33" pos:end="91:33">if <condition pos:start="89:36" pos:end="89:46">(<expr pos:start="89:37" pos:end="89:45"><name pos:start="89:37" pos:end="89:40">mode</name> <operator pos:start="89:42" pos:end="89:43">&lt;=</operator> <literal type="number" pos:start="89:45" pos:end="89:45">4</literal></expr>)</condition> <block pos:start="89:48" pos:end="91:33">{<block_content pos:start="90:37" pos:end="90:51">
                                    <expr_stmt pos:start="90:37" pos:end="90:51"><expr pos:start="90:37" pos:end="90:50"><name pos:start="90:37" pos:end="90:50">RLE_LINES_COPY</name></expr>;</expr_stmt>
                                </block_content>}</block></if> <if type="elseif" pos:start="91:35" pos:end="93:33">else if <condition pos:start="91:43" pos:end="91:71">(<expr pos:start="91:44" pos:end="91:70"><name pos:start="91:44" pos:end="91:47">mode</name> <operator pos:start="91:49" pos:end="91:50">==</operator> <literal type="number" pos:start="91:52" pos:end="91:53">10</literal> <operator pos:start="91:55" pos:end="91:56">&amp;&amp;</operator> <operator pos:start="91:58" pos:end="91:58">!</operator><name pos:start="91:59" pos:end="91:70"><name pos:start="91:59" pos:end="91:62">cell</name><operator pos:start="91:63" pos:end="91:64">-&gt;</operator><name pos:start="91:65" pos:end="91:70">mv_ptr</name></name></expr>)</condition> <block pos:start="91:73" pos:end="93:33">{<block_content pos:start="92:37" pos:end="92:55">
                                    <expr_stmt pos:start="92:37" pos:end="92:55"><expr pos:start="92:37" pos:end="92:54"><name pos:start="92:37" pos:end="92:54">RLE_LINES_COPY_M10</name></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                            </block_content>}</block></if></if_stmt>
                            <break pos:start="95:29" pos:end="95:34">break;</break>
                        <case pos:start="96:25" pos:end="96:40">case <expr pos:start="96:30" pos:end="96:39"><name pos:start="96:30" pos:end="96:39">RLE_ESC_F9</name></expr>:</case>
                            <expr_stmt pos:start="97:29" pos:end="97:43"><expr pos:start="97:29" pos:end="97:42"><name pos:start="97:29" pos:end="97:37">skip_flag</name>  <operator pos:start="97:40" pos:end="97:40">=</operator> <literal type="number" pos:start="97:42" pos:end="97:42">1</literal></expr>;</expr_stmt>
                            <expr_stmt pos:start="98:29" pos:end="98:43"><expr pos:start="98:29" pos:end="98:42"><name pos:start="98:29" pos:end="98:38">rle_blocks</name> <operator pos:start="98:40" pos:end="98:40">=</operator> <literal type="number" pos:start="98:42" pos:end="98:42">1</literal></expr>;</expr_stmt>
                            <comment type="block" pos:start="99:29" pos:end="99:45">/* FALLTHROUGH */</comment>
                        <case pos:start="100:25" pos:end="100:40">case <expr pos:start="100:30" pos:end="100:39"><name pos:start="100:30" pos:end="100:39">RLE_ESC_FA</name></expr>:</case>
                            <if_stmt pos:start="101:29" pos:end="102:51"><if pos:start="101:29" pos:end="102:51">if <condition pos:start="101:32" pos:end="101:37">(<expr pos:start="101:33" pos:end="101:36"><name pos:start="101:33" pos:end="101:36">line</name></expr>)</condition><block type="pseudo" pos:start="102:33" pos:end="102:51"><block_content pos:start="102:33" pos:end="102:51">
                                <return pos:start="102:33" pos:end="102:51">return <expr pos:start="102:40" pos:end="102:50"><name pos:start="102:40" pos:end="102:50">IV3_BAD_RLE</name></expr>;</return></block_content></block></if></if_stmt>
                            <expr_stmt pos:start="103:29" pos:end="103:42"><expr pos:start="103:29" pos:end="103:41"><name pos:start="103:29" pos:end="103:37">num_lines</name> <operator pos:start="103:39" pos:end="103:39">=</operator> <literal type="number" pos:start="103:41" pos:end="103:41">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="103:44" pos:end="103:78">/* enforce next block processing */</comment>
                            <if_stmt pos:start="104:29" pos:end="110:29"><if pos:start="104:29" pos:end="110:29">if <condition pos:start="104:32" pos:end="104:45">(<expr pos:start="104:33" pos:end="104:44"><name pos:start="104:33" pos:end="104:44"><name pos:start="104:33" pos:end="104:36">cell</name><operator pos:start="104:37" pos:end="104:38">-&gt;</operator><name pos:start="104:39" pos:end="104:44">mv_ptr</name></name></expr>)</condition> <block pos:start="104:47" pos:end="110:29">{<block_content pos:start="105:33" pos:end="109:33">
                                <if_stmt pos:start="105:33" pos:end="109:33"><if pos:start="105:33" pos:end="107:33">if <condition pos:start="105:36" pos:end="105:46">(<expr pos:start="105:37" pos:end="105:45"><name pos:start="105:37" pos:end="105:40">mode</name> <operator pos:start="105:42" pos:end="105:43">&lt;=</operator> <literal type="number" pos:start="105:45" pos:end="105:45">4</literal></expr>)</condition> <block pos:start="105:48" pos:end="107:33">{<block_content pos:start="106:37" pos:end="106:51">
                                    <expr_stmt pos:start="106:37" pos:end="106:51"><expr pos:start="106:37" pos:end="106:50"><name pos:start="106:37" pos:end="106:50">RLE_LINES_COPY</name></expr>;</expr_stmt>
                                </block_content>}</block></if> <if type="elseif" pos:start="107:35" pos:end="109:33">else if <condition pos:start="107:43" pos:end="107:71">(<expr pos:start="107:44" pos:end="107:70"><name pos:start="107:44" pos:end="107:47">mode</name> <operator pos:start="107:49" pos:end="107:50">==</operator> <literal type="number" pos:start="107:52" pos:end="107:53">10</literal> <operator pos:start="107:55" pos:end="107:56">&amp;&amp;</operator> <operator pos:start="107:58" pos:end="107:58">!</operator><name pos:start="107:59" pos:end="107:70"><name pos:start="107:59" pos:end="107:62">cell</name><operator pos:start="107:63" pos:end="107:64">-&gt;</operator><name pos:start="107:65" pos:end="107:70">mv_ptr</name></name></expr>)</condition> <block pos:start="107:73" pos:end="109:33">{<block_content pos:start="108:37" pos:end="108:55">
                                    <expr_stmt pos:start="108:37" pos:end="108:55"><expr pos:start="108:37" pos:end="108:54"><name pos:start="108:37" pos:end="108:54">RLE_LINES_COPY_M10</name></expr>;</expr_stmt>
                                </block_content>}</block></if></if_stmt>
                            </block_content>}</block></if></if_stmt>
                            <break pos:start="111:29" pos:end="111:34">break;</break>
                        <default pos:start="112:25" pos:end="112:32">default:</default>
                            <return pos:start="113:29" pos:end="113:51">return <expr pos:start="113:36" pos:end="113:50"><name pos:start="113:36" pos:end="113:50">IV3_UNSUPPORTED</name></expr>;</return>
                        </block_content>}</block></switch>
                    </block_content>}</block></else></if_stmt>
                    <expr_stmt pos:start="116:21" pos:end="116:38"><expr pos:start="116:21" pos:end="116:37"><name pos:start="116:21" pos:end="116:24">line</name> <operator pos:start="116:26" pos:end="116:27">+=</operator> <name pos:start="116:29" pos:end="116:37">num_lines</name></expr>;</expr_stmt>
                    <expr_stmt pos:start="117:21" pos:end="117:63"><expr pos:start="117:21" pos:end="117:62"><name pos:start="117:21" pos:end="117:23">ref</name>  <operator pos:start="117:26" pos:end="117:27">+=</operator> <name pos:start="117:29" pos:end="117:38">row_offset</name> <operator pos:start="117:40" pos:end="117:40">*</operator> <operator pos:start="117:42" pos:end="117:42">(</operator><name pos:start="117:43" pos:end="117:51">num_lines</name> <operator pos:start="117:53" pos:end="117:54">&lt;&lt;</operator> <name pos:start="117:56" pos:end="117:61">v_zoom</name><operator pos:start="117:62" pos:end="117:62">)</operator></expr>;</expr_stmt>
                    <expr_stmt pos:start="118:21" pos:end="118:63"><expr pos:start="118:21" pos:end="118:62"><name pos:start="118:21" pos:end="118:23">dst</name>  <operator pos:start="118:26" pos:end="118:27">+=</operator> <name pos:start="118:29" pos:end="118:38">row_offset</name> <operator pos:start="118:40" pos:end="118:40">*</operator> <operator pos:start="118:42" pos:end="118:42">(</operator><name pos:start="118:43" pos:end="118:51">num_lines</name> <operator pos:start="118:53" pos:end="118:54">&lt;&lt;</operator> <name pos:start="118:56" pos:end="118:61">v_zoom</name><operator pos:start="118:62" pos:end="118:62">)</operator></expr>;</expr_stmt>
                </block_content>}</block></for>
            </block_content>}</block></else></if_stmt>
            <comment type="block" pos:start="121:13" pos:end="121:47">/* move to next horizontal block */</comment>
            <expr_stmt pos:start="122:13" pos:end="122:37"><expr pos:start="122:13" pos:end="122:36"><name pos:start="122:13" pos:end="122:17">block</name>     <operator pos:start="122:23" pos:end="122:24">+=</operator> <literal type="number" pos:start="122:26" pos:end="122:26">4</literal> <operator pos:start="122:28" pos:end="122:29">&lt;&lt;</operator> <name pos:start="122:31" pos:end="122:36">h_zoom</name></expr>;</expr_stmt>
            <expr_stmt pos:start="123:13" pos:end="123:37"><expr pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:21">ref_block</name> <operator pos:start="123:23" pos:end="123:24">+=</operator> <literal type="number" pos:start="123:26" pos:end="123:26">4</literal> <operator pos:start="123:28" pos:end="123:29">&lt;&lt;</operator> <name pos:start="123:31" pos:end="123:36">h_zoom</name></expr>;</expr_stmt>
        </block_content>}</block></for>
        <comment type="block" pos:start="125:9" pos:end="125:41">/* move to next line of blocks */</comment>
        <expr_stmt pos:start="126:9" pos:end="126:36"><expr pos:start="126:9" pos:end="126:35"><name pos:start="126:9" pos:end="126:17">ref_block</name> <operator pos:start="126:19" pos:end="126:20">+=</operator> <name pos:start="126:22" pos:end="126:35">blk_row_offset</name></expr>;</expr_stmt>
        <expr_stmt pos:start="127:9" pos:end="127:36"><expr pos:start="127:9" pos:end="127:35"><name pos:start="127:9" pos:end="127:13">block</name>     <operator pos:start="127:19" pos:end="127:20">+=</operator> <name pos:start="127:22" pos:end="127:35">blk_row_offset</name></expr>;</expr_stmt>
    </block_content>}</block></for>
    <return pos:start="129:5" pos:end="129:21">return <expr pos:start="129:12" pos:end="129:20"><name pos:start="129:12" pos:end="129:20">IV3_NOERR</name></expr>;</return>
</block_content>}</block></function></unit>
