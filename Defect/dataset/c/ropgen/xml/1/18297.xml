<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18297.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:21"><name pos:start="1:1" pos:end="1:6">struct</name> <name pos:start="1:8" pos:end="1:21">pxa2xx_state_s</name></name> <modifier pos:start="1:23" pos:end="1:23">*</modifier></type><name pos:start="1:24" pos:end="1:34">pxa255_init</name><parameter_list pos:start="1:35" pos:end="3:33">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:43">unsigned</name> <name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:58">sdram_size</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:32"><decl pos:start="3:17" pos:end="3:32"><type pos:start="3:17" pos:end="3:32"><name pos:start="3:17" pos:end="3:28">DisplayState</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:32">ds</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:25">pxa2xx_state_s</name></name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:28">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">pxa2xx_ssp_s</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">ssp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">iomemtype</name></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:78"><expr pos:start="13:5" pos:end="13:77"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <operator pos:start="13:9" pos:end="13:9">(</operator>struct <name pos:start="13:17" pos:end="13:30">pxa2xx_state_s</name> <operator pos:start="13:32" pos:end="13:32">*</operator><operator pos:start="13:33" pos:end="13:33">)</operator> <call pos:start="13:35" pos:end="13:77"><name pos:start="13:35" pos:end="13:46">qemu_mallocz</name><argument_list pos:start="13:47" pos:end="13:77">(<argument pos:start="13:48" pos:end="13:76"><expr pos:start="13:48" pos:end="13:76"><sizeof pos:start="13:48" pos:end="13:76">sizeof<argument_list pos:start="13:54" pos:end="13:76">(<argument pos:start="13:55" pos:end="13:75"><expr pos:start="13:55" pos:end="13:75">struct <name pos:start="13:62" pos:end="13:75">pxa2xx_state_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:10">env</name></name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:23"><name pos:start="17:14" pos:end="17:21">cpu_init</name><argument_list pos:start="17:22" pos:end="17:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><call pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:21">cpu_arm_set_model</name><argument_list pos:start="19:22" pos:end="19:39">(<argument pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:28"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">env</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:38"><expr pos:start="19:31" pos:end="19:38"><literal type="string" pos:start="19:31" pos:end="19:38">"pxa255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:61"><expr pos:start="21:5" pos:end="21:60"><call pos:start="21:5" pos:end="21:60"><name pos:start="21:5" pos:end="21:19">register_savevm</name><argument_list pos:start="21:20" pos:end="21:60">(<argument pos:start="21:21" pos:end="21:25"><expr pos:start="21:21" pos:end="21:25"><literal type="string" pos:start="21:21" pos:end="21:25">"cpu"</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:28"><expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></argument>, <argument pos:start="21:34" pos:end="21:41"><expr pos:start="21:34" pos:end="21:41"><name pos:start="21:34" pos:end="21:41">cpu_save</name></expr></argument>, <argument pos:start="21:44" pos:end="21:51"><expr pos:start="21:44" pos:end="21:51"><name pos:start="21:44" pos:end="21:51">cpu_load</name></expr></argument>, <argument pos:start="21:54" pos:end="21:59"><expr pos:start="21:54" pos:end="21:59"><name pos:start="21:54" pos:end="21:59"><name pos:start="21:54" pos:end="21:54">s</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:59">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:41">/* SDRAM &amp; Internal Memory Storage */</comment>

    <expr_stmt pos:start="27:5" pos:end="29:61"><expr pos:start="27:5" pos:end="29:60"><call pos:start="27:5" pos:end="29:60"><name pos:start="27:5" pos:end="27:32">cpu_register_physical_memory</name><argument_list pos:start="27:33" pos:end="29:60">(<argument pos:start="27:34" pos:end="27:50"><expr pos:start="27:34" pos:end="27:50"><name pos:start="27:34" pos:end="27:50">PXA2XX_SDRAM_BASE</name></expr></argument>, <argument pos:start="27:53" pos:end="27:62"><expr pos:start="27:53" pos:end="27:62"><name pos:start="27:53" pos:end="27:62">sdram_size</name></expr></argument>,

                    <argument pos:start="29:21" pos:end="29:59"><expr pos:start="29:21" pos:end="29:59"><call pos:start="29:21" pos:end="29:46"><name pos:start="29:21" pos:end="29:34">qemu_ram_alloc</name><argument_list pos:start="29:35" pos:end="29:46">(<argument pos:start="29:36" pos:end="29:45"><expr pos:start="29:36" pos:end="29:45"><name pos:start="29:36" pos:end="29:45">sdram_size</name></expr></argument>)</argument_list></call> <operator pos:start="29:48" pos:end="29:48">|</operator> <name pos:start="29:50" pos:end="29:59">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:71"><expr pos:start="31:5" pos:end="33:70"><call pos:start="31:5" pos:end="33:70"><name pos:start="31:5" pos:end="31:32">cpu_register_physical_memory</name><argument_list pos:start="31:33" pos:end="33:70">(<argument pos:start="31:34" pos:end="31:53"><expr pos:start="31:34" pos:end="31:53"><name pos:start="31:34" pos:end="31:53">PXA2XX_INTERNAL_BASE</name></expr></argument>, <argument pos:start="31:56" pos:end="31:75"><expr pos:start="31:56" pos:end="31:75"><name pos:start="31:56" pos:end="31:75">PXA2XX_INTERNAL_SIZE</name></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:69"><expr pos:start="33:21" pos:end="33:69"><call pos:start="33:21" pos:end="33:56"><name pos:start="33:21" pos:end="33:34">qemu_ram_alloc</name><argument_list pos:start="33:35" pos:end="33:56">(<argument pos:start="33:36" pos:end="33:55"><expr pos:start="33:36" pos:end="33:55"><name pos:start="33:36" pos:end="33:55">PXA2XX_INTERNAL_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="33:58" pos:end="33:58">|</operator> <name pos:start="33:60" pos:end="33:69">IO_MEM_RAM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:10">pic</name></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <call pos:start="37:14" pos:end="37:48"><name pos:start="37:14" pos:end="37:28">pxa2xx_pic_init</name><argument_list pos:start="37:29" pos:end="37:48">(<argument pos:start="37:30" pos:end="37:39"><expr pos:start="37:30" pos:end="37:39"><literal type="number" pos:start="37:30" pos:end="37:39">0x40d00000</literal></expr></argument>, <argument pos:start="37:42" pos:end="37:47"><expr pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:47"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:47">env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:65"><expr pos:start="41:5" pos:end="41:64"><name pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">dma</name></name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:64"><name pos:start="41:14" pos:end="41:28">pxa255_dma_init</name><argument_list pos:start="41:29" pos:end="41:64">(<argument pos:start="41:30" pos:end="41:39"><expr pos:start="41:30" pos:end="41:39"><literal type="number" pos:start="41:30" pos:end="41:39">0x40000000</literal></expr></argument>, <argument pos:start="41:42" pos:end="41:63"><expr pos:start="41:42" pos:end="41:63"><name pos:start="41:42" pos:end="41:63"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:47">pic</name><index pos:start="41:48" pos:end="41:63">[<expr pos:start="41:49" pos:end="41:62"><name pos:start="41:49" pos:end="41:62">PXA2XX_PIC_DMA</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:61"><expr pos:start="45:5" pos:end="45:60"><call pos:start="45:5" pos:end="45:60"><name pos:start="45:5" pos:end="45:21">pxa25x_timer_init</name><argument_list pos:start="45:22" pos:end="45:60">(<argument pos:start="45:23" pos:end="45:32"><expr pos:start="45:23" pos:end="45:32"><literal type="number" pos:start="45:23" pos:end="45:32">0x40a00000</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:59"><expr pos:start="45:35" pos:end="45:59"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:59"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:41">pic</name><index pos:start="45:42" pos:end="45:59">[<expr pos:start="45:43" pos:end="45:58"><name pos:start="45:43" pos:end="45:58">PXA2XX_PIC_OST_0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:63"><expr pos:start="49:5" pos:end="49:62"><name pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:11">gpio</name></name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="49:62"><name pos:start="49:15" pos:end="49:30">pxa2xx_gpio_init</name><argument_list pos:start="49:31" pos:end="49:62">(<argument pos:start="49:32" pos:end="49:41"><expr pos:start="49:32" pos:end="49:41"><literal type="number" pos:start="49:32" pos:end="49:41">0x40e00000</literal></expr></argument>, <argument pos:start="49:44" pos:end="49:49"><expr pos:start="49:44" pos:end="49:49"><name pos:start="49:44" pos:end="49:49"><name pos:start="49:44" pos:end="49:44">s</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:49">env</name></name></expr></argument>, <argument pos:start="49:52" pos:end="49:57"><expr pos:start="49:52" pos:end="49:57"><name pos:start="49:52" pos:end="49:57"><name pos:start="49:52" pos:end="49:52">s</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:57">pic</name></name></expr></argument>, <argument pos:start="49:60" pos:end="49:61"><expr pos:start="49:60" pos:end="49:61"><literal type="number" pos:start="49:60" pos:end="49:61">85</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:74"><expr pos:start="53:5" pos:end="53:73"><name pos:start="53:5" pos:end="53:10"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:10">mmc</name></name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:73"><name pos:start="53:14" pos:end="53:29">pxa2xx_mmci_init</name><argument_list pos:start="53:30" pos:end="53:73">(<argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><literal type="number" pos:start="53:31" pos:end="53:40">0x41100000</literal></expr></argument>, <argument pos:start="53:43" pos:end="53:64"><expr pos:start="53:43" pos:end="53:64"><name pos:start="53:43" pos:end="53:64"><name pos:start="53:43" pos:end="53:43">s</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:48">pic</name><index pos:start="53:49" pos:end="53:64">[<expr pos:start="53:50" pos:end="53:63"><name pos:start="53:50" pos:end="53:63">PXA2XX_PIC_MMC</name></expr>]</index></name></expr></argument>, <argument pos:start="53:67" pos:end="53:72"><expr pos:start="53:67" pos:end="53:72"><name pos:start="53:67" pos:end="53:72"><name pos:start="53:67" pos:end="53:67">s</name><operator pos:start="53:68" pos:end="53:69">-&gt;</operator><name pos:start="53:70" pos:end="53:72">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="57:5" pos:end="67:18">for <control pos:start="57:9" pos:end="57:47">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:41"><expr pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:32"><name pos:start="57:17" pos:end="57:29">pxa255_serial</name><index pos:start="57:30" pos:end="57:32">[<expr pos:start="57:31" pos:end="57:31"><name pos:start="57:31" pos:end="57:31">i</name></expr>]</index></name><operator pos:start="57:33" pos:end="57:33">.</operator><name pos:start="57:34" pos:end="57:40">io_base</name></expr>;</condition> <incr pos:start="57:43" pos:end="57:46"><expr pos:start="57:43" pos:end="57:46"><name pos:start="57:43" pos:end="57:43">i</name> <operator pos:start="57:45" pos:end="57:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:9" pos:end="67:18"><block_content pos:start="59:9" pos:end="67:18">

        <if_stmt pos:start="59:9" pos:end="67:18"><if pos:start="59:9" pos:end="63:77">if <condition pos:start="59:12" pos:end="59:26">(<expr pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:22">serial_hds</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="63:77"><block_content pos:start="61:13" pos:end="63:77">

            <expr_stmt pos:start="61:13" pos:end="63:77"><expr pos:start="61:13" pos:end="63:76"><call pos:start="61:13" pos:end="63:76"><name pos:start="61:13" pos:end="61:26">serial_mm_init</name><argument_list pos:start="61:27" pos:end="63:76">(<argument pos:start="61:28" pos:end="61:51"><expr pos:start="61:28" pos:end="61:51"><name pos:start="61:28" pos:end="61:43"><name pos:start="61:28" pos:end="61:40">pxa255_serial</name><index pos:start="61:41" pos:end="61:43">[<expr pos:start="61:42" pos:end="61:42"><name pos:start="61:42" pos:end="61:42">i</name></expr>]</index></name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:51">io_base</name></expr></argument>, <argument pos:start="61:54" pos:end="61:54"><expr pos:start="61:54" pos:end="61:54"><literal type="number" pos:start="61:54" pos:end="61:54">2</literal></expr></argument>,

                            <argument pos:start="63:29" pos:end="63:57"><expr pos:start="63:29" pos:end="63:57"><name pos:start="63:29" pos:end="63:57"><name pos:start="63:29" pos:end="63:29">s</name><operator pos:start="63:30" pos:end="63:31">-&gt;</operator><name pos:start="63:32" pos:end="63:34">pic</name><index pos:start="63:35" pos:end="63:57">[<expr pos:start="63:36" pos:end="63:56"><name pos:start="63:36" pos:end="63:51"><name pos:start="63:36" pos:end="63:48">pxa255_serial</name><index pos:start="63:49" pos:end="63:51">[<expr pos:start="63:50" pos:end="63:50"><name pos:start="63:50" pos:end="63:50">i</name></expr>]</index></name><operator pos:start="63:52" pos:end="63:52">.</operator><name pos:start="63:53" pos:end="63:56">irqn</name></expr>]</index></name></expr></argument>, <argument pos:start="63:60" pos:end="63:72"><expr pos:start="63:60" pos:end="63:72"><name pos:start="63:60" pos:end="63:72"><name pos:start="63:60" pos:end="63:69">serial_hds</name><index pos:start="63:70" pos:end="63:72">[<expr pos:start="63:71" pos:end="63:71"><name pos:start="63:71" pos:end="63:71">i</name></expr>]</index></name></expr></argument>, <argument pos:start="63:75" pos:end="63:75"><expr pos:start="63:75" pos:end="63:75"><literal type="number" pos:start="63:75" pos:end="63:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="65:9" pos:end="67:18">else<block type="pseudo" pos:start="67:13" pos:end="67:18"><block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break></block_content></block></else></if_stmt></block_content></block></for>

    <if_stmt pos:start="69:5" pos:end="73:47"><if pos:start="69:5" pos:end="73:47">if <condition pos:start="69:8" pos:end="69:22">(<expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:18">serial_hds</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="73:47"><block_content pos:start="71:9" pos:end="73:47">

        <expr_stmt pos:start="71:9" pos:end="73:47"><expr pos:start="71:9" pos:end="73:46"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">fir</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="73:46"><name pos:start="71:18" pos:end="71:32">pxa2xx_fir_init</name><argument_list pos:start="71:33" pos:end="73:46">(<argument pos:start="71:34" pos:end="71:43"><expr pos:start="71:34" pos:end="71:43"><literal type="number" pos:start="71:34" pos:end="71:43">0x40800000</literal></expr></argument>, <argument pos:start="71:46" pos:end="71:67"><expr pos:start="71:46" pos:end="71:67"><name pos:start="71:46" pos:end="71:67"><name pos:start="71:46" pos:end="71:46">s</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:51">pic</name><index pos:start="71:52" pos:end="71:67">[<expr pos:start="71:53" pos:end="71:66"><name pos:start="71:53" pos:end="71:66">PXA2XX_PIC_ICP</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="73:25" pos:end="73:30"><expr pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:30">dma</name></name></expr></argument>, <argument pos:start="73:33" pos:end="73:45"><expr pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:42">serial_hds</name><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:74"><if pos:start="77:5" pos:end="79:74">if <condition pos:start="77:8" pos:end="77:11">(<expr pos:start="77:9" pos:end="77:10"><name pos:start="77:9" pos:end="77:10">ds</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:74"><block_content pos:start="79:9" pos:end="79:74">

        <expr_stmt pos:start="79:9" pos:end="79:74"><expr pos:start="79:9" pos:end="79:73"><name pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:14">lcd</name></name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:73"><name pos:start="79:18" pos:end="79:33">pxa2xx_lcdc_init</name><argument_list pos:start="79:34" pos:end="79:73">(<argument pos:start="79:35" pos:end="79:44"><expr pos:start="79:35" pos:end="79:44"><literal type="number" pos:start="79:35" pos:end="79:44">0x44000000</literal></expr></argument>, <argument pos:start="79:47" pos:end="79:68"><expr pos:start="79:47" pos:end="79:68"><name pos:start="79:47" pos:end="79:68"><name pos:start="79:47" pos:end="79:47">s</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:52">pic</name><index pos:start="79:53" pos:end="79:68">[<expr pos:start="79:54" pos:end="79:67"><name pos:start="79:54" pos:end="79:67">PXA2XX_PIC_LCD</name></expr>]</index></name></expr></argument>, <argument pos:start="79:71" pos:end="79:72"><expr pos:start="79:71" pos:end="79:72"><name pos:start="79:71" pos:end="79:72">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:14"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">cm_base</name></name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:27">0x41300000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:39"><expr pos:start="85:5" pos:end="85:38"><name pos:start="85:5" pos:end="85:25"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:14">cm_regs</name><index pos:start="85:15" pos:end="85:25">[<expr pos:start="85:16" pos:end="85:24"><name pos:start="85:16" pos:end="85:19">CCCR</name> <operator pos:start="85:21" pos:end="85:22">&gt;&gt;</operator> <literal type="number" pos:start="85:24" pos:end="85:24">4</literal></expr>]</index></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <literal type="number" pos:start="85:29" pos:end="85:38">0x02000210</literal></expr>;</expr_stmt>	<comment type="block" pos:start="85:41" pos:end="85:55">/* 416.0 MHz */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:13">clkcfg</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="number" pos:start="87:17" pos:end="87:26">0x00000009</literal></expr>;</expr_stmt>		<comment type="block" pos:start="87:41" pos:end="87:63">/* Turbo mode active */</comment>

    <expr_stmt pos:start="89:5" pos:end="91:42"><expr pos:start="89:5" pos:end="91:41"><name pos:start="89:5" pos:end="89:13">iomemtype</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <call pos:start="89:17" pos:end="91:41"><name pos:start="89:17" pos:end="89:38">cpu_register_io_memory</name><argument_list pos:start="89:39" pos:end="91:41">(<argument pos:start="89:40" pos:end="89:40"><expr pos:start="89:40" pos:end="89:40"><literal type="number" pos:start="89:40" pos:end="89:40">0</literal></expr></argument>, <argument pos:start="89:43" pos:end="89:58"><expr pos:start="89:43" pos:end="89:58"><name pos:start="89:43" pos:end="89:58">pxa2xx_cm_readfn</name></expr></argument>,

                    <argument pos:start="91:21" pos:end="91:37"><expr pos:start="91:21" pos:end="91:37"><name pos:start="91:21" pos:end="91:37">pxa2xx_cm_writefn</name></expr></argument>, <argument pos:start="91:40" pos:end="91:40"><expr pos:start="91:40" pos:end="91:40"><name pos:start="91:40" pos:end="91:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:63"><expr pos:start="93:5" pos:end="93:62"><call pos:start="93:5" pos:end="93:62"><name pos:start="93:5" pos:end="93:32">cpu_register_physical_memory</name><argument_list pos:start="93:33" pos:end="93:62">(<argument pos:start="93:34" pos:end="93:43"><expr pos:start="93:34" pos:end="93:43"><name pos:start="93:34" pos:end="93:43"><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">-&gt;</operator><name pos:start="93:37" pos:end="93:43">cm_base</name></name></expr></argument>, <argument pos:start="93:46" pos:end="93:50"><expr pos:start="93:46" pos:end="93:50"><literal type="number" pos:start="93:46" pos:end="93:50">0xfff</literal></expr></argument>, <argument pos:start="93:53" pos:end="93:61"><expr pos:start="93:53" pos:end="93:61"><name pos:start="93:53" pos:end="93:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:74"><expr pos:start="95:5" pos:end="95:73"><call pos:start="95:5" pos:end="95:73"><name pos:start="95:5" pos:end="95:19">register_savevm</name><argument_list pos:start="95:20" pos:end="95:73">(<argument pos:start="95:21" pos:end="95:31"><expr pos:start="95:21" pos:end="95:31"><literal type="string" pos:start="95:21" pos:end="95:31">"pxa2xx_cm"</literal></expr></argument>, <argument pos:start="95:34" pos:end="95:34"><expr pos:start="95:34" pos:end="95:34"><literal type="number" pos:start="95:34" pos:end="95:34">0</literal></expr></argument>, <argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><literal type="number" pos:start="95:37" pos:end="95:37">0</literal></expr></argument>, <argument pos:start="95:40" pos:end="95:53"><expr pos:start="95:40" pos:end="95:53"><name pos:start="95:40" pos:end="95:53">pxa2xx_cm_save</name></expr></argument>, <argument pos:start="95:56" pos:end="95:69"><expr pos:start="95:56" pos:end="95:69"><name pos:start="95:56" pos:end="95:69">pxa2xx_cm_load</name></expr></argument>, <argument pos:start="95:72" pos:end="95:72"><expr pos:start="95:72" pos:end="95:72"><name pos:start="95:72" pos:end="95:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:74"><expr pos:start="99:5" pos:end="99:73"><call pos:start="99:5" pos:end="99:73"><name pos:start="99:5" pos:end="99:21">cpu_arm_set_cp_io</name><argument_list pos:start="99:22" pos:end="99:73">(<argument pos:start="99:23" pos:end="99:28"><expr pos:start="99:23" pos:end="99:28"><name pos:start="99:23" pos:end="99:28"><name pos:start="99:23" pos:end="99:23">s</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:28">env</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:32"><expr pos:start="99:31" pos:end="99:32"><literal type="number" pos:start="99:31" pos:end="99:32">14</literal></expr></argument>, <argument pos:start="99:35" pos:end="99:50"><expr pos:start="99:35" pos:end="99:50"><name pos:start="99:35" pos:end="99:50">pxa2xx_cp14_read</name></expr></argument>, <argument pos:start="99:53" pos:end="99:69"><expr pos:start="99:53" pos:end="99:69"><name pos:start="99:53" pos:end="99:69">pxa2xx_cp14_write</name></expr></argument>, <argument pos:start="99:72" pos:end="99:72"><expr pos:start="99:72" pos:end="99:72"><name pos:start="99:72" pos:end="99:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><name pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:14">mm_base</name></name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:27">0x48000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:40"><expr pos:start="105:5" pos:end="105:39"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:14">mm_regs</name><index pos:start="105:15" pos:end="105:26">[<expr pos:start="105:16" pos:end="105:25"><name pos:start="105:16" pos:end="105:20">MDMRS</name> <operator pos:start="105:22" pos:end="105:23">&gt;&gt;</operator> <literal type="number" pos:start="105:25" pos:end="105:25">2</literal></expr>]</index></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:39">0x00020002</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:41"><expr pos:start="107:5" pos:end="107:40"><name pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:14">mm_regs</name><index pos:start="107:15" pos:end="107:27">[<expr pos:start="107:16" pos:end="107:26"><name pos:start="107:16" pos:end="107:21">MDREFR</name> <operator pos:start="107:23" pos:end="107:24">&gt;&gt;</operator> <literal type="number" pos:start="107:26" pos:end="107:26">2</literal></expr>]</index></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <literal type="number" pos:start="107:31" pos:end="107:40">0x03ca4000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:39"><expr pos:start="109:5" pos:end="109:38"><name pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">mm_regs</name><index pos:start="109:15" pos:end="109:25">[<expr pos:start="109:16" pos:end="109:24"><name pos:start="109:16" pos:end="109:19">MECR</name> <operator pos:start="109:21" pos:end="109:22">&gt;&gt;</operator> <literal type="number" pos:start="109:24" pos:end="109:24">2</literal></expr>]</index></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <literal type="number" pos:start="109:29" pos:end="109:38">0x00000001</literal></expr>;</expr_stmt>	<comment type="block" pos:start="109:41" pos:end="109:65">/* Two PC Card sockets */</comment>

    <expr_stmt pos:start="111:5" pos:end="113:42"><expr pos:start="111:5" pos:end="113:41"><name pos:start="111:5" pos:end="111:13">iomemtype</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="113:41"><name pos:start="111:17" pos:end="111:38">cpu_register_io_memory</name><argument_list pos:start="111:39" pos:end="113:41">(<argument pos:start="111:40" pos:end="111:40"><expr pos:start="111:40" pos:end="111:40"><literal type="number" pos:start="111:40" pos:end="111:40">0</literal></expr></argument>, <argument pos:start="111:43" pos:end="111:58"><expr pos:start="111:43" pos:end="111:58"><name pos:start="111:43" pos:end="111:58">pxa2xx_mm_readfn</name></expr></argument>,

                    <argument pos:start="113:21" pos:end="113:37"><expr pos:start="113:21" pos:end="113:37"><name pos:start="113:21" pos:end="113:37">pxa2xx_mm_writefn</name></expr></argument>, <argument pos:start="113:40" pos:end="113:40"><expr pos:start="113:40" pos:end="113:40"><name pos:start="113:40" pos:end="113:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:63"><expr pos:start="115:5" pos:end="115:62"><call pos:start="115:5" pos:end="115:62"><name pos:start="115:5" pos:end="115:32">cpu_register_physical_memory</name><argument_list pos:start="115:33" pos:end="115:62">(<argument pos:start="115:34" pos:end="115:43"><expr pos:start="115:34" pos:end="115:43"><name pos:start="115:34" pos:end="115:43"><name pos:start="115:34" pos:end="115:34">s</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:43">mm_base</name></name></expr></argument>, <argument pos:start="115:46" pos:end="115:50"><expr pos:start="115:46" pos:end="115:50"><literal type="number" pos:start="115:46" pos:end="115:50">0xfff</literal></expr></argument>, <argument pos:start="115:53" pos:end="115:61"><expr pos:start="115:53" pos:end="115:61"><name pos:start="115:53" pos:end="115:61">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:74"><expr pos:start="117:5" pos:end="117:73"><call pos:start="117:5" pos:end="117:73"><name pos:start="117:5" pos:end="117:19">register_savevm</name><argument_list pos:start="117:20" pos:end="117:73">(<argument pos:start="117:21" pos:end="117:31"><expr pos:start="117:21" pos:end="117:31"><literal type="string" pos:start="117:21" pos:end="117:31">"pxa2xx_mm"</literal></expr></argument>, <argument pos:start="117:34" pos:end="117:34"><expr pos:start="117:34" pos:end="117:34"><literal type="number" pos:start="117:34" pos:end="117:34">0</literal></expr></argument>, <argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><literal type="number" pos:start="117:37" pos:end="117:37">0</literal></expr></argument>, <argument pos:start="117:40" pos:end="117:53"><expr pos:start="117:40" pos:end="117:53"><name pos:start="117:40" pos:end="117:53">pxa2xx_mm_save</name></expr></argument>, <argument pos:start="117:56" pos:end="117:69"><expr pos:start="117:56" pos:end="117:69"><name pos:start="117:56" pos:end="117:69">pxa2xx_mm_load</name></expr></argument>, <argument pos:start="117:72" pos:end="117:72"><expr pos:start="117:72" pos:end="117:72"><name pos:start="117:72" pos:end="117:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:28"><expr pos:start="121:5" pos:end="121:27"><name pos:start="121:5" pos:end="121:14"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:14">pm_base</name></name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:27">0x40f00000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="125:42"><expr pos:start="123:5" pos:end="125:41"><name pos:start="123:5" pos:end="123:13">iomemtype</name> <operator pos:start="123:15" pos:end="123:15">=</operator> <call pos:start="123:17" pos:end="125:41"><name pos:start="123:17" pos:end="123:38">cpu_register_io_memory</name><argument_list pos:start="123:39" pos:end="125:41">(<argument pos:start="123:40" pos:end="123:40"><expr pos:start="123:40" pos:end="123:40"><literal type="number" pos:start="123:40" pos:end="123:40">0</literal></expr></argument>, <argument pos:start="123:43" pos:end="123:58"><expr pos:start="123:43" pos:end="123:58"><name pos:start="123:43" pos:end="123:58">pxa2xx_pm_readfn</name></expr></argument>,

                    <argument pos:start="125:21" pos:end="125:37"><expr pos:start="125:21" pos:end="125:37"><name pos:start="125:21" pos:end="125:37">pxa2xx_pm_writefn</name></expr></argument>, <argument pos:start="125:40" pos:end="125:40"><expr pos:start="125:40" pos:end="125:40"><name pos:start="125:40" pos:end="125:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:62"><expr pos:start="127:5" pos:end="127:61"><call pos:start="127:5" pos:end="127:61"><name pos:start="127:5" pos:end="127:32">cpu_register_physical_memory</name><argument_list pos:start="127:33" pos:end="127:61">(<argument pos:start="127:34" pos:end="127:43"><expr pos:start="127:34" pos:end="127:43"><name pos:start="127:34" pos:end="127:43"><name pos:start="127:34" pos:end="127:34">s</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:43">pm_base</name></name></expr></argument>, <argument pos:start="127:46" pos:end="127:49"><expr pos:start="127:46" pos:end="127:49"><literal type="number" pos:start="127:46" pos:end="127:49">0xff</literal></expr></argument>, <argument pos:start="127:52" pos:end="127:60"><expr pos:start="127:52" pos:end="127:60"><name pos:start="127:52" pos:end="127:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:74"><expr pos:start="129:5" pos:end="129:73"><call pos:start="129:5" pos:end="129:73"><name pos:start="129:5" pos:end="129:19">register_savevm</name><argument_list pos:start="129:20" pos:end="129:73">(<argument pos:start="129:21" pos:end="129:31"><expr pos:start="129:21" pos:end="129:31"><literal type="string" pos:start="129:21" pos:end="129:31">"pxa2xx_pm"</literal></expr></argument>, <argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr></argument>, <argument pos:start="129:37" pos:end="129:37"><expr pos:start="129:37" pos:end="129:37"><literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr></argument>, <argument pos:start="129:40" pos:end="129:53"><expr pos:start="129:40" pos:end="129:53"><name pos:start="129:40" pos:end="129:53">pxa2xx_pm_save</name></expr></argument>, <argument pos:start="129:56" pos:end="129:69"><expr pos:start="129:56" pos:end="129:69"><name pos:start="129:56" pos:end="129:69">pxa2xx_pm_load</name></expr></argument>, <argument pos:start="129:72" pos:end="129:72"><expr pos:start="129:72" pos:end="129:72"><name pos:start="129:72" pos:end="129:72">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="133:5" pos:end="133:45">for <control pos:start="133:9" pos:end="133:44">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:38"><expr pos:start="133:17" pos:end="133:37"><name pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:26">pxa255_ssp</name><index pos:start="133:27" pos:end="133:29">[<expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">i</name></expr>]</index></name><operator pos:start="133:30" pos:end="133:30">.</operator><name pos:start="133:31" pos:end="133:37">io_base</name></expr>;</condition> <incr pos:start="133:40" pos:end="133:43"><expr pos:start="133:40" pos:end="133:43"><name pos:start="133:40" pos:end="133:40">i</name> <operator pos:start="133:42" pos:end="133:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="133:45" pos:end="133:45"><block_content pos:start="133:45" pos:end="133:45"><empty_stmt pos:start="133:45" pos:end="133:45">;</empty_stmt></block_content></block></for>

    <expr_stmt pos:start="135:5" pos:end="137:60"><expr pos:start="135:5" pos:end="137:59"><name pos:start="135:5" pos:end="135:10"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:10">ssp</name></name> <operator pos:start="135:12" pos:end="135:12">=</operator> <operator pos:start="135:14" pos:end="135:14">(</operator>struct <name pos:start="135:22" pos:end="135:33">pxa2xx_ssp_s</name> <operator pos:start="135:35" pos:end="135:35">*</operator><operator pos:start="135:36" pos:end="135:36">*</operator><operator pos:start="135:37" pos:end="135:37">)</operator>

            <call pos:start="137:13" pos:end="137:59"><name pos:start="137:13" pos:end="137:24">qemu_mallocz</name><argument_list pos:start="137:25" pos:end="137:59">(<argument pos:start="137:26" pos:end="137:58"><expr pos:start="137:26" pos:end="137:58"><sizeof pos:start="137:26" pos:end="137:54">sizeof<argument_list pos:start="137:32" pos:end="137:54">(<argument pos:start="137:33" pos:end="137:53"><expr pos:start="137:33" pos:end="137:53">struct <name pos:start="137:40" pos:end="137:51">pxa2xx_ssp_s</name> <operator pos:start="137:53" pos:end="137:53">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="137:56" pos:end="137:56">*</operator> <name pos:start="137:58" pos:end="137:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:58"><expr pos:start="139:5" pos:end="141:57"><name pos:start="139:5" pos:end="139:7">ssp</name> <operator pos:start="139:9" pos:end="139:9">=</operator> <operator pos:start="139:11" pos:end="139:11">(</operator>struct <name pos:start="139:19" pos:end="139:30">pxa2xx_ssp_s</name> <operator pos:start="139:32" pos:end="139:32">*</operator><operator pos:start="139:33" pos:end="139:33">)</operator>

            <call pos:start="141:13" pos:end="141:57"><name pos:start="141:13" pos:end="141:24">qemu_mallocz</name><argument_list pos:start="141:25" pos:end="141:57">(<argument pos:start="141:26" pos:end="141:56"><expr pos:start="141:26" pos:end="141:56"><sizeof pos:start="141:26" pos:end="141:52">sizeof<argument_list pos:start="141:32" pos:end="141:52">(<argument pos:start="141:33" pos:end="141:51"><expr pos:start="141:33" pos:end="141:51">struct <name pos:start="141:40" pos:end="141:51">pxa2xx_ssp_s</name></expr></argument>)</argument_list></sizeof> <operator pos:start="141:54" pos:end="141:54">*</operator> <name pos:start="141:56" pos:end="141:56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="143:5" pos:end="163:5">for <control pos:start="143:9" pos:end="143:44">(<init pos:start="143:10" pos:end="143:15"><expr pos:start="143:10" pos:end="143:14"><name pos:start="143:10" pos:end="143:10">i</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>;</init> <condition pos:start="143:17" pos:end="143:38"><expr pos:start="143:17" pos:end="143:37"><name pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:26">pxa255_ssp</name><index pos:start="143:27" pos:end="143:29">[<expr pos:start="143:28" pos:end="143:28"><name pos:start="143:28" pos:end="143:28">i</name></expr>]</index></name><operator pos:start="143:30" pos:end="143:30">.</operator><name pos:start="143:31" pos:end="143:37">io_base</name></expr>;</condition> <incr pos:start="143:40" pos:end="143:43"><expr pos:start="143:40" pos:end="143:43"><name pos:start="143:40" pos:end="143:40">i</name> <operator pos:start="143:42" pos:end="143:43">++</operator></expr></incr>)</control> <block pos:start="143:46" pos:end="163:5">{<block_content pos:start="145:9" pos:end="161:61">

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:17"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:14">ssp</name><index pos:start="145:15" pos:end="145:17">[<expr pos:start="145:16" pos:end="145:16"><name pos:start="145:16" pos:end="145:16">i</name></expr>]</index></name> <operator pos:start="145:19" pos:end="145:19">=</operator> <operator pos:start="145:21" pos:end="145:21">&amp;</operator><name pos:start="145:22" pos:end="145:27"><name pos:start="145:22" pos:end="145:24">ssp</name><index pos:start="145:25" pos:end="145:27">[<expr pos:start="145:26" pos:end="145:26"><name pos:start="145:26" pos:end="145:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:44"><expr pos:start="147:9" pos:end="147:43"><name pos:start="147:9" pos:end="147:14"><name pos:start="147:9" pos:end="147:11">ssp</name><index pos:start="147:12" pos:end="147:14">[<expr pos:start="147:13" pos:end="147:13"><name pos:start="147:13" pos:end="147:13">i</name></expr>]</index></name><operator pos:start="147:15" pos:end="147:15">.</operator><name pos:start="147:16" pos:end="147:19">base</name> <operator pos:start="147:21" pos:end="147:21">=</operator> <name pos:start="147:23" pos:end="147:35"><name pos:start="147:23" pos:end="147:32">pxa255_ssp</name><index pos:start="147:33" pos:end="147:35">[<expr pos:start="147:34" pos:end="147:34"><name pos:start="147:34" pos:end="147:34">i</name></expr>]</index></name><operator pos:start="147:36" pos:end="147:36">.</operator><name pos:start="147:37" pos:end="147:43">io_base</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:48"><expr pos:start="149:9" pos:end="149:47"><name pos:start="149:9" pos:end="149:14"><name pos:start="149:9" pos:end="149:11">ssp</name><index pos:start="149:12" pos:end="149:14">[<expr pos:start="149:13" pos:end="149:13"><name pos:start="149:13" pos:end="149:13">i</name></expr>]</index></name><operator pos:start="149:15" pos:end="149:15">.</operator><name pos:start="149:16" pos:end="149:18">irq</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:47"><name pos:start="149:22" pos:end="149:22">s</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:27">pic</name><index pos:start="149:28" pos:end="149:47">[<expr pos:start="149:29" pos:end="149:46"><name pos:start="149:29" pos:end="149:41"><name pos:start="149:29" pos:end="149:38">pxa255_ssp</name><index pos:start="149:39" pos:end="149:41">[<expr pos:start="149:40" pos:end="149:40"><name pos:start="149:40" pos:end="149:40">i</name></expr>]</index></name><operator pos:start="149:42" pos:end="149:42">.</operator><name pos:start="149:43" pos:end="149:46">irqn</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="155:53"><expr pos:start="153:9" pos:end="155:52"><name pos:start="153:9" pos:end="153:17">iomemtype</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="155:52"><name pos:start="153:21" pos:end="153:42">cpu_register_io_memory</name><argument_list pos:start="153:43" pos:end="155:52">(<argument pos:start="153:44" pos:end="153:44"><expr pos:start="153:44" pos:end="153:44"><literal type="number" pos:start="153:44" pos:end="153:44">0</literal></expr></argument>, <argument pos:start="153:47" pos:end="153:63"><expr pos:start="153:47" pos:end="153:63"><name pos:start="153:47" pos:end="153:63">pxa2xx_ssp_readfn</name></expr></argument>,

                        <argument pos:start="155:25" pos:end="155:42"><expr pos:start="155:25" pos:end="155:42"><name pos:start="155:25" pos:end="155:42">pxa2xx_ssp_writefn</name></expr></argument>, <argument pos:start="155:45" pos:end="155:51"><expr pos:start="155:45" pos:end="155:51"><operator pos:start="155:45" pos:end="155:45">&amp;</operator><name pos:start="155:46" pos:end="155:51"><name pos:start="155:46" pos:end="155:48">ssp</name><index pos:start="155:49" pos:end="155:51">[<expr pos:start="155:50" pos:end="155:50"><name pos:start="155:50" pos:end="155:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:68"><expr pos:start="157:9" pos:end="157:67"><call pos:start="157:9" pos:end="157:67"><name pos:start="157:9" pos:end="157:36">cpu_register_physical_memory</name><argument_list pos:start="157:37" pos:end="157:67">(<argument pos:start="157:38" pos:end="157:48"><expr pos:start="157:38" pos:end="157:48"><name pos:start="157:38" pos:end="157:43"><name pos:start="157:38" pos:end="157:40">ssp</name><index pos:start="157:41" pos:end="157:43">[<expr pos:start="157:42" pos:end="157:42"><name pos:start="157:42" pos:end="157:42">i</name></expr>]</index></name><operator pos:start="157:44" pos:end="157:44">.</operator><name pos:start="157:45" pos:end="157:48">base</name></expr></argument>, <argument pos:start="157:51" pos:end="157:55"><expr pos:start="157:51" pos:end="157:55"><literal type="number" pos:start="157:51" pos:end="157:55">0xfff</literal></expr></argument>, <argument pos:start="157:58" pos:end="157:66"><expr pos:start="157:58" pos:end="157:66"><name pos:start="157:58" pos:end="157:66">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="161:61"><expr pos:start="159:9" pos:end="161:60"><call pos:start="159:9" pos:end="161:60"><name pos:start="159:9" pos:end="159:23">register_savevm</name><argument_list pos:start="159:24" pos:end="161:60">(<argument pos:start="159:25" pos:end="159:36"><expr pos:start="159:25" pos:end="159:36"><literal type="string" pos:start="159:25" pos:end="159:36">"pxa2xx_ssp"</literal></expr></argument>, <argument pos:start="159:39" pos:end="159:39"><expr pos:start="159:39" pos:end="159:39"><name pos:start="159:39" pos:end="159:39">i</name></expr></argument>, <argument pos:start="159:42" pos:end="159:42"><expr pos:start="159:42" pos:end="159:42"><literal type="number" pos:start="159:42" pos:end="159:42">0</literal></expr></argument>,

                        <argument pos:start="161:25" pos:end="161:39"><expr pos:start="161:25" pos:end="161:39"><name pos:start="161:25" pos:end="161:39">pxa2xx_ssp_save</name></expr></argument>, <argument pos:start="161:42" pos:end="161:56"><expr pos:start="161:42" pos:end="161:56"><name pos:start="161:42" pos:end="161:56">pxa2xx_ssp_load</name></expr></argument>, <argument pos:start="161:59" pos:end="161:59"><expr pos:start="161:59" pos:end="161:59"><name pos:start="161:59" pos:end="161:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="167:5" pos:end="171:5"><if pos:start="167:5" pos:end="171:5">if <condition pos:start="167:8" pos:end="167:20">(<expr pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:19">usb_enabled</name></expr>)</condition> <block pos:start="167:22" pos:end="171:5">{<block_content pos:start="169:9" pos:end="169:71">

        <expr_stmt pos:start="169:9" pos:end="169:71"><expr pos:start="169:9" pos:end="169:70"><call pos:start="169:9" pos:end="169:70"><name pos:start="169:9" pos:end="169:25">usb_ohci_init_pxa</name><argument_list pos:start="169:26" pos:end="169:70">(<argument pos:start="169:27" pos:end="169:36"><expr pos:start="169:27" pos:end="169:36"><literal type="number" pos:start="169:27" pos:end="169:36">0x4c000000</literal></expr></argument>, <argument pos:start="169:39" pos:end="169:39"><expr pos:start="169:39" pos:end="169:39"><literal type="number" pos:start="169:39" pos:end="169:39">3</literal></expr></argument>, <argument pos:start="169:42" pos:end="169:43"><expr pos:start="169:42" pos:end="169:43"><operator pos:start="169:42" pos:end="169:42">-</operator><literal type="number" pos:start="169:43" pos:end="169:43">1</literal></expr></argument>, <argument pos:start="169:46" pos:end="169:69"><expr pos:start="169:46" pos:end="169:69"><name pos:start="169:46" pos:end="169:69"><name pos:start="169:46" pos:end="169:46">s</name><operator pos:start="169:47" pos:end="169:48">-&gt;</operator><name pos:start="169:49" pos:end="169:51">pic</name><index pos:start="169:52" pos:end="169:69">[<expr pos:start="169:53" pos:end="169:68"><name pos:start="169:53" pos:end="169:68">PXA2XX_PIC_USBH1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:50"><expr pos:start="175:5" pos:end="175:49"><name pos:start="175:5" pos:end="175:16"><name pos:start="175:5" pos:end="175:5">s</name><operator pos:start="175:6" pos:end="175:7">-&gt;</operator><name pos:start="175:8" pos:end="175:13">pcmcia</name><index pos:start="175:14" pos:end="175:16">[<expr pos:start="175:15" pos:end="175:15"><literal type="number" pos:start="175:15" pos:end="175:15">0</literal></expr>]</index></name> <operator pos:start="175:18" pos:end="175:18">=</operator> <call pos:start="175:20" pos:end="175:49"><name pos:start="175:20" pos:end="175:37">pxa2xx_pcmcia_init</name><argument_list pos:start="175:38" pos:end="175:49">(<argument pos:start="175:39" pos:end="175:48"><expr pos:start="175:39" pos:end="175:48"><literal type="number" pos:start="175:39" pos:end="175:48">0x20000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:50"><expr pos:start="177:5" pos:end="177:49"><name pos:start="177:5" pos:end="177:16"><name pos:start="177:5" pos:end="177:5">s</name><operator pos:start="177:6" pos:end="177:7">-&gt;</operator><name pos:start="177:8" pos:end="177:13">pcmcia</name><index pos:start="177:14" pos:end="177:16">[<expr pos:start="177:15" pos:end="177:15"><literal type="number" pos:start="177:15" pos:end="177:15">1</literal></expr>]</index></name> <operator pos:start="177:18" pos:end="177:18">=</operator> <call pos:start="177:20" pos:end="177:49"><name pos:start="177:20" pos:end="177:37">pxa2xx_pcmcia_init</name><argument_list pos:start="177:38" pos:end="177:49">(<argument pos:start="177:39" pos:end="177:48"><expr pos:start="177:39" pos:end="177:48"><literal type="number" pos:start="177:39" pos:end="177:48">0x30000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:29"><expr pos:start="181:5" pos:end="181:28"><name pos:start="181:5" pos:end="181:15"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:15">rtc_base</name></name> <operator pos:start="181:17" pos:end="181:17">=</operator> <literal type="number" pos:start="181:19" pos:end="181:28">0x40900000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="185:43"><expr pos:start="183:5" pos:end="185:42"><name pos:start="183:5" pos:end="183:13">iomemtype</name> <operator pos:start="183:15" pos:end="183:15">=</operator> <call pos:start="183:17" pos:end="185:42"><name pos:start="183:17" pos:end="183:38">cpu_register_io_memory</name><argument_list pos:start="183:39" pos:end="185:42">(<argument pos:start="183:40" pos:end="183:40"><expr pos:start="183:40" pos:end="183:40"><literal type="number" pos:start="183:40" pos:end="183:40">0</literal></expr></argument>, <argument pos:start="183:43" pos:end="183:59"><expr pos:start="183:43" pos:end="183:59"><name pos:start="183:43" pos:end="183:59">pxa2xx_rtc_readfn</name></expr></argument>,

                    <argument pos:start="185:21" pos:end="185:38"><expr pos:start="185:21" pos:end="185:38"><name pos:start="185:21" pos:end="185:38">pxa2xx_rtc_writefn</name></expr></argument>, <argument pos:start="185:41" pos:end="185:41"><expr pos:start="185:41" pos:end="185:41"><name pos:start="185:41" pos:end="185:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:64"><expr pos:start="187:5" pos:end="187:63"><call pos:start="187:5" pos:end="187:63"><name pos:start="187:5" pos:end="187:32">cpu_register_physical_memory</name><argument_list pos:start="187:33" pos:end="187:63">(<argument pos:start="187:34" pos:end="187:44"><expr pos:start="187:34" pos:end="187:44"><name pos:start="187:34" pos:end="187:44"><name pos:start="187:34" pos:end="187:34">s</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:44">rtc_base</name></name></expr></argument>, <argument pos:start="187:47" pos:end="187:51"><expr pos:start="187:47" pos:end="187:51"><literal type="number" pos:start="187:47" pos:end="187:51">0xfff</literal></expr></argument>, <argument pos:start="187:54" pos:end="187:62"><expr pos:start="187:54" pos:end="187:62"><name pos:start="187:54" pos:end="187:62">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:23"><expr pos:start="189:5" pos:end="189:22"><call pos:start="189:5" pos:end="189:22"><name pos:start="189:5" pos:end="189:19">pxa2xx_rtc_init</name><argument_list pos:start="189:20" pos:end="189:22">(<argument pos:start="189:21" pos:end="189:21"><expr pos:start="189:21" pos:end="189:21"><name pos:start="189:21" pos:end="189:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:77"><expr pos:start="191:5" pos:end="191:76"><call pos:start="191:5" pos:end="191:76"><name pos:start="191:5" pos:end="191:19">register_savevm</name><argument_list pos:start="191:20" pos:end="191:76">(<argument pos:start="191:21" pos:end="191:32"><expr pos:start="191:21" pos:end="191:32"><literal type="string" pos:start="191:21" pos:end="191:32">"pxa2xx_rtc"</literal></expr></argument>, <argument pos:start="191:35" pos:end="191:35"><expr pos:start="191:35" pos:end="191:35"><literal type="number" pos:start="191:35" pos:end="191:35">0</literal></expr></argument>, <argument pos:start="191:38" pos:end="191:38"><expr pos:start="191:38" pos:end="191:38"><literal type="number" pos:start="191:38" pos:end="191:38">0</literal></expr></argument>, <argument pos:start="191:41" pos:end="191:55"><expr pos:start="191:41" pos:end="191:55"><name pos:start="191:41" pos:end="191:55">pxa2xx_rtc_save</name></expr></argument>, <argument pos:start="191:58" pos:end="191:72"><expr pos:start="191:58" pos:end="191:72"><name pos:start="191:58" pos:end="191:72">pxa2xx_rtc_load</name></expr></argument>, <argument pos:start="191:75" pos:end="191:75"><expr pos:start="191:75" pos:end="191:75"><name pos:start="191:75" pos:end="191:75">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:76"><expr pos:start="195:5" pos:end="195:75"><name pos:start="195:5" pos:end="195:13"><name pos:start="195:5" pos:end="195:5">s</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:10">i2c</name><index pos:start="195:11" pos:end="195:13">[<expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>]</index></name> <operator pos:start="195:15" pos:end="195:15">=</operator> <call pos:start="195:17" pos:end="195:75"><name pos:start="195:17" pos:end="195:31">pxa2xx_i2c_init</name><argument_list pos:start="195:32" pos:end="195:75">(<argument pos:start="195:33" pos:end="195:42"><expr pos:start="195:33" pos:end="195:42"><literal type="number" pos:start="195:33" pos:end="195:42">0x40301600</literal></expr></argument>, <argument pos:start="195:45" pos:end="195:66"><expr pos:start="195:45" pos:end="195:66"><name pos:start="195:45" pos:end="195:66"><name pos:start="195:45" pos:end="195:45">s</name><operator pos:start="195:46" pos:end="195:47">-&gt;</operator><name pos:start="195:48" pos:end="195:50">pic</name><index pos:start="195:51" pos:end="195:66">[<expr pos:start="195:52" pos:end="195:65"><name pos:start="195:52" pos:end="195:65">PXA2XX_PIC_I2C</name></expr>]</index></name></expr></argument>, <argument pos:start="195:69" pos:end="195:74"><expr pos:start="195:69" pos:end="195:74"><literal type="number" pos:start="195:69" pos:end="195:74">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:77"><expr pos:start="197:5" pos:end="197:76"><name pos:start="197:5" pos:end="197:13"><name pos:start="197:5" pos:end="197:5">s</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:10">i2c</name><index pos:start="197:11" pos:end="197:13">[<expr pos:start="197:12" pos:end="197:12"><literal type="number" pos:start="197:12" pos:end="197:12">1</literal></expr>]</index></name> <operator pos:start="197:15" pos:end="197:15">=</operator> <call pos:start="197:17" pos:end="197:76"><name pos:start="197:17" pos:end="197:31">pxa2xx_i2c_init</name><argument_list pos:start="197:32" pos:end="197:76">(<argument pos:start="197:33" pos:end="197:42"><expr pos:start="197:33" pos:end="197:42"><literal type="number" pos:start="197:33" pos:end="197:42">0x40f00100</literal></expr></argument>, <argument pos:start="197:45" pos:end="197:69"><expr pos:start="197:45" pos:end="197:69"><name pos:start="197:45" pos:end="197:69"><name pos:start="197:45" pos:end="197:45">s</name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:50">pic</name><index pos:start="197:51" pos:end="197:69">[<expr pos:start="197:52" pos:end="197:68"><name pos:start="197:52" pos:end="197:68">PXA2XX_PIC_PWRI2C</name></expr>]</index></name></expr></argument>, <argument pos:start="197:72" pos:end="197:75"><expr pos:start="197:72" pos:end="197:75"><literal type="number" pos:start="197:72" pos:end="197:75">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:73"><expr pos:start="201:5" pos:end="201:72"><name pos:start="201:5" pos:end="201:10"><name pos:start="201:5" pos:end="201:5">s</name><operator pos:start="201:6" pos:end="201:7">-&gt;</operator><name pos:start="201:8" pos:end="201:10">i2s</name></name> <operator pos:start="201:12" pos:end="201:12">=</operator> <call pos:start="201:14" pos:end="201:72"><name pos:start="201:14" pos:end="201:28">pxa2xx_i2s_init</name><argument_list pos:start="201:29" pos:end="201:72">(<argument pos:start="201:30" pos:end="201:39"><expr pos:start="201:30" pos:end="201:39"><literal type="number" pos:start="201:30" pos:end="201:39">0x40400000</literal></expr></argument>, <argument pos:start="201:42" pos:end="201:63"><expr pos:start="201:42" pos:end="201:63"><name pos:start="201:42" pos:end="201:63"><name pos:start="201:42" pos:end="201:42">s</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:47">pic</name><index pos:start="201:48" pos:end="201:63">[<expr pos:start="201:49" pos:end="201:62"><name pos:start="201:49" pos:end="201:62">PXA2XX_PIC_I2S</name></expr>]</index></name></expr></argument>, <argument pos:start="201:66" pos:end="201:71"><expr pos:start="201:66" pos:end="201:71"><name pos:start="201:66" pos:end="201:71"><name pos:start="201:66" pos:end="201:66">s</name><operator pos:start="201:67" pos:end="201:68">-&gt;</operator><name pos:start="201:69" pos:end="201:71">dma</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="205:5" pos:end="205:36">/* GPIO1 resets the processor */</comment>

    <comment type="block" pos:start="207:5" pos:end="207:61">/* The handler can be overriden by board-specific code */</comment>

    <expr_stmt pos:start="209:5" pos:end="209:57"><expr pos:start="209:5" pos:end="209:56"><call pos:start="209:5" pos:end="209:56"><name pos:start="209:5" pos:end="209:27">pxa2xx_gpio_handler_set</name><argument_list pos:start="209:28" pos:end="209:56">(<argument pos:start="209:29" pos:end="209:35"><expr pos:start="209:29" pos:end="209:35"><name pos:start="209:29" pos:end="209:35"><name pos:start="209:29" pos:end="209:29">s</name><operator pos:start="209:30" pos:end="209:31">-&gt;</operator><name pos:start="209:32" pos:end="209:35">gpio</name></name></expr></argument>, <argument pos:start="209:38" pos:end="209:38"><expr pos:start="209:38" pos:end="209:38"><literal type="number" pos:start="209:38" pos:end="209:38">1</literal></expr></argument>, <argument pos:start="209:41" pos:end="209:52"><expr pos:start="209:41" pos:end="209:52"><name pos:start="209:41" pos:end="209:52">pxa2xx_reset</name></expr></argument>, <argument pos:start="209:55" pos:end="209:55"><expr pos:start="209:55" pos:end="209:55"><name pos:start="209:55" pos:end="209:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="211:5" pos:end="211:13">return <expr pos:start="211:12" pos:end="211:12"><name pos:start="211:12" pos:end="211:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
