<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9398.c" pos:tabs="8"><function pos:start="1:1" pos:end="325:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">g723_1_decode_frame</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:64"><decl pos:start="1:55" pos:end="1:64"><type pos:start="1:55" pos:end="1:64"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:34">int</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:49">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">AVPacket</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="325:1">{<block_content pos:start="7:5" pos:end="323:32">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">G723_1_Context</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">p</name>  <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name>     <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name> <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:30">avpkt</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>       <init pos:start="13:24" pos:end="13:36">= <expr pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:36"><name pos:start="13:26" pos:end="13:30">avpkt</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">dec_mode</name>       <init pos:start="15:24" pos:end="15:35">= <expr pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:31"><name pos:start="15:26" pos:end="15:28">buf</name><index pos:start="15:29" pos:end="15:31">[<expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">0</literal></expr>]</index></name> <operator pos:start="15:33" pos:end="15:33">&amp;</operator> <literal type="number" pos:start="15:35" pos:end="15:35">3</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">PPFParam</name></type> <name pos:start="19:14" pos:end="19:27"><name pos:start="19:14" pos:end="19:16">ppf</name><index pos:start="19:17" pos:end="19:27">[<expr pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:26">SUBFRAMES</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int16_t</name></type> <name pos:start="21:13" pos:end="21:30"><name pos:start="21:13" pos:end="21:19">cur_lsp</name><index pos:start="21:20" pos:end="21:30">[<expr pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:29">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:39"><decl pos:start="23:5" pos:end="23:38"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int16_t</name></type> <name pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:15">lpc</name><index pos:start="23:16" pos:end="23:38">[<expr pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:25">SUBFRAMES</name> <operator pos:start="23:27" pos:end="23:27">*</operator> <name pos:start="23:29" pos:end="23:37">LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:37"><decl pos:start="25:5" pos:end="25:36"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">int16_t</name></type> <name pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:22">acb_vector</name><index pos:start="25:23" pos:end="25:36">[<expr pos:start="25:24" pos:end="25:35"><name pos:start="25:24" pos:end="25:35">SUBFRAME_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">int16_t</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:33"><decl pos:start="29:5" pos:end="29:21"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:17">bad_frame</name> <init pos:start="29:19" pos:end="29:21">= <expr pos:start="29:21" pos:end="29:21"><literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr></init></decl>, <decl pos:start="29:24" pos:end="29:24"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:24" pos:end="29:24">i</name></decl>, <decl pos:start="29:27" pos:end="29:27"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:27" pos:end="29:27">j</name></decl>, <decl pos:start="29:30" pos:end="29:32"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:30" pos:end="29:32">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:30"><decl pos:start="31:5" pos:end="31:29"><type pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:11">int16_t</name> <modifier pos:start="31:13" pos:end="31:13">*</modifier></type><name pos:start="31:14" pos:end="31:18">audio</name> <init pos:start="31:20" pos:end="31:29">= <expr pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:29"><name pos:start="31:22" pos:end="31:22">p</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:29">audio</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="49:5"><if pos:start="35:5" pos:end="49:5">if <condition pos:start="35:8" pos:end="35:40">(<expr pos:start="35:9" pos:end="35:39"><name pos:start="35:9" pos:end="35:16">buf_size</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:39"><name pos:start="35:20" pos:end="35:29">frame_size</name><index pos:start="35:30" pos:end="35:39">[<expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:38">dec_mode</name></expr>]</index></name></expr>)</condition> <block pos:start="35:42" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:24">

        <if_stmt pos:start="37:9" pos:end="43:51"><if pos:start="37:9" pos:end="43:51">if <condition pos:start="37:12" pos:end="37:21">(<expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">buf_size</name></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="43:51"><block_content pos:start="39:13" pos:end="43:51">

            <expr_stmt pos:start="39:13" pos:end="43:51"><expr pos:start="39:13" pos:end="43:50"><call pos:start="39:13" pos:end="43:50"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="43:50">(<argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">avctx</name></expr></argument>, <argument pos:start="39:27" pos:end="39:40"><expr pos:start="39:27" pos:end="39:40"><name pos:start="39:27" pos:end="39:40">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:66"><expr pos:start="41:20" pos:end="41:66"><literal type="string" pos:start="41:20" pos:end="41:66">"Expected %d bytes, got %d - skipping packet\n"</literal></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:39"><expr pos:start="43:20" pos:end="43:39"><name pos:start="43:20" pos:end="43:39"><name pos:start="43:20" pos:end="43:29">frame_size</name><index pos:start="43:30" pos:end="43:39">[<expr pos:start="43:31" pos:end="43:38"><name pos:start="43:31" pos:end="43:38">dec_mode</name></expr>]</index></name></expr></argument>, <argument pos:start="43:42" pos:end="43:49"><expr pos:start="43:42" pos:end="43:49"><name pos:start="43:42" pos:end="43:49">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:22">got_frame_ptr</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:24">return <expr pos:start="47:16" pos:end="47:23"><name pos:start="47:16" pos:end="47:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="65:5"><if pos:start="53:5" pos:end="65:5">if <condition pos:start="53:8" pos:end="53:47">(<expr pos:start="53:9" pos:end="53:46"><call pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:24">unpack_bitstream</name><argument_list pos:start="53:25" pos:end="53:42">(<argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><name pos:start="53:26" pos:end="53:26">p</name></expr></argument>, <argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">buf</name></expr></argument>, <argument pos:start="53:34" pos:end="53:41"><expr pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:41">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="53:44" pos:end="53:44">&lt;</operator> <literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr>)</condition> <block pos:start="53:49" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:52">

        <expr_stmt pos:start="55:9" pos:end="55:22"><expr pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:17">bad_frame</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:52"><if pos:start="57:9" pos:end="59:45">if <condition pos:start="57:12" pos:end="57:47">(<expr pos:start="57:13" pos:end="57:46"><name pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:13">p</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:30">past_frame_type</name></name> <operator pos:start="57:32" pos:end="57:33">==</operator> <name pos:start="57:35" pos:end="57:46">ACTIVE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:45"><block_content pos:start="59:13" pos:end="59:45">

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:13">p</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:29">cur_frame_type</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:44">ACTIVE_FRAME</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="61:9" pos:end="63:52">else<block type="pseudo" pos:start="63:13" pos:end="63:52"><block_content pos:start="63:13" pos:end="63:52">

            <expr_stmt pos:start="63:13" pos:end="63:52"><expr pos:start="63:13" pos:end="63:51"><name pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:13">p</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:29">cur_frame_type</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:51">UNTRANSMITTED_FRAME</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:34"><expr pos:start="69:5" pos:end="69:33"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:9">frame</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">nb_samples</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <name pos:start="69:25" pos:end="69:33">FRAME_LEN</name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:19"><if pos:start="71:5" pos:end="73:19">if <condition pos:start="71:8" pos:end="71:51">(<expr pos:start="71:9" pos:end="71:50"><operator pos:start="71:9" pos:end="71:9">(</operator><name pos:start="71:10" pos:end="71:12">ret</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:45"><name pos:start="71:16" pos:end="71:28">ff_get_buffer</name><argument_list pos:start="71:29" pos:end="71:45">(<argument pos:start="71:30" pos:end="71:34"><expr pos:start="71:30" pos:end="71:34"><name pos:start="71:30" pos:end="71:34">avctx</name></expr></argument>, <argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:41">frame</name></expr></argument>, <argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="71:46" pos:end="71:46">)</operator> <operator pos:start="71:48" pos:end="71:48">&lt;</operator> <literal type="number" pos:start="71:50" pos:end="71:50">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:19"><block_content pos:start="73:9" pos:end="73:19">

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:7">out</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <operator pos:start="77:11" pos:end="77:11">(</operator><name pos:start="77:12" pos:end="77:18">int16_t</name> <operator pos:start="77:20" pos:end="77:20">*</operator><operator pos:start="77:21" pos:end="77:21">)</operator><name pos:start="77:22" pos:end="77:35"><name pos:start="77:22" pos:end="77:26">frame</name><operator pos:start="77:27" pos:end="77:28">-&gt;</operator><name pos:start="77:29" pos:end="77:32">data</name><index pos:start="77:33" pos:end="77:35">[<expr pos:start="77:34" pos:end="77:34"><literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="283:5"><if pos:start="81:5" pos:end="251:5">if <condition pos:start="81:8" pos:end="81:42">(<expr pos:start="81:9" pos:end="81:41"><name pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:9">p</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:25">cur_frame_type</name></name> <operator pos:start="81:27" pos:end="81:28">==</operator> <name pos:start="81:30" pos:end="81:41">ACTIVE_FRAME</name></expr>)</condition> <block pos:start="81:44" pos:end="251:5">{<block_content pos:start="83:9" pos:end="249:45">

        <if_stmt pos:start="83:9" pos:end="89:31"><if pos:start="83:9" pos:end="85:33">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:22">bad_frame</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:33"><block_content pos:start="85:13" pos:end="85:33">

            <expr_stmt pos:start="85:13" pos:end="85:33"><expr pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:13">p</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:28">erased_frames</name></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="87:9" pos:end="89:31">else if <condition pos:start="87:17" pos:end="87:39">(<expr pos:start="87:18" pos:end="87:38"><name pos:start="87:18" pos:end="87:33"><name pos:start="87:18" pos:end="87:18">p</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:33">erased_frames</name></name> <operator pos:start="87:35" pos:end="87:36">!=</operator> <literal type="number" pos:start="87:38" pos:end="87:38">3</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:31"><block_content pos:start="89:13" pos:end="89:31">

            <expr_stmt pos:start="89:13" pos:end="89:31"><expr pos:start="89:13" pos:end="89:30"><name pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:13">p</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:28">erased_frames</name></name><operator pos:start="89:29" pos:end="89:30">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:79"><expr pos:start="93:9" pos:end="93:78"><call pos:start="93:9" pos:end="93:78"><name pos:start="93:9" pos:end="93:31">ff_g723_1_inverse_quant</name><argument_list pos:start="93:32" pos:end="93:78">(<argument pos:start="93:33" pos:end="93:39"><expr pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:39">cur_lsp</name></expr></argument>, <argument pos:start="93:42" pos:end="93:52"><expr pos:start="93:42" pos:end="93:52"><name pos:start="93:42" pos:end="93:52"><name pos:start="93:42" pos:end="93:42">p</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:52">prev_lsp</name></name></expr></argument>, <argument pos:start="93:55" pos:end="93:66"><expr pos:start="93:55" pos:end="93:66"><name pos:start="93:55" pos:end="93:66"><name pos:start="93:55" pos:end="93:55">p</name><operator pos:start="93:56" pos:end="93:57">-&gt;</operator><name pos:start="93:58" pos:end="93:66">lsp_index</name></name></expr></argument>, <argument pos:start="93:69" pos:end="93:77"><expr pos:start="93:69" pos:end="93:77"><name pos:start="93:69" pos:end="93:77">bad_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:61"><expr pos:start="95:9" pos:end="95:60"><call pos:start="95:9" pos:end="95:60"><name pos:start="95:9" pos:end="95:33">ff_g723_1_lsp_interpolate</name><argument_list pos:start="95:34" pos:end="95:60">(<argument pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><name pos:start="95:35" pos:end="95:37">lpc</name></expr></argument>, <argument pos:start="95:40" pos:end="95:46"><expr pos:start="95:40" pos:end="95:46"><name pos:start="95:40" pos:end="95:46">cur_lsp</name></expr></argument>, <argument pos:start="95:49" pos:end="95:59"><expr pos:start="95:49" pos:end="95:59"><name pos:start="95:49" pos:end="95:59"><name pos:start="95:49" pos:end="95:49">p</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:59">prev_lsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="99:9" pos:end="99:52">/* Save the lsp_vector for the next frame */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:71"><expr pos:start="101:9" pos:end="101:70"><call pos:start="101:9" pos:end="101:70"><name pos:start="101:9" pos:end="101:14">memcpy</name><argument_list pos:start="101:15" pos:end="101:70">(<argument pos:start="101:16" pos:end="101:26"><expr pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:26"><name pos:start="101:16" pos:end="101:16">p</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:26">prev_lsp</name></name></expr></argument>, <argument pos:start="101:29" pos:end="101:35"><expr pos:start="101:29" pos:end="101:35"><name pos:start="101:29" pos:end="101:35">cur_lsp</name></expr></argument>, <argument pos:start="101:38" pos:end="101:69"><expr pos:start="101:38" pos:end="101:69"><name pos:start="101:38" pos:end="101:46">LPC_ORDER</name> <operator pos:start="101:48" pos:end="101:48">*</operator> <sizeof pos:start="101:50" pos:end="101:69">sizeof<argument_list pos:start="101:56" pos:end="101:69">(<argument pos:start="101:57" pos:end="101:68"><expr pos:start="101:57" pos:end="101:68"><operator pos:start="101:57" pos:end="101:57">*</operator><name pos:start="101:58" pos:end="101:68"><name pos:start="101:58" pos:end="101:58">p</name><operator pos:start="101:59" pos:end="101:60">-&gt;</operator><name pos:start="101:61" pos:end="101:68">prev_lsp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="105:9" pos:end="105:51">/* Generate the excitation for the frame */</comment>

        <expr_stmt pos:start="107:9" pos:end="109:51"><expr pos:start="107:9" pos:end="109:50"><call pos:start="107:9" pos:end="109:50"><name pos:start="107:9" pos:end="107:14">memcpy</name><argument_list pos:start="107:15" pos:end="109:50">(<argument pos:start="107:16" pos:end="107:28"><expr pos:start="107:16" pos:end="107:28"><name pos:start="107:16" pos:end="107:28"><name pos:start="107:16" pos:end="107:16">p</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:28">excitation</name></name></expr></argument>, <argument pos:start="107:31" pos:end="107:48"><expr pos:start="107:31" pos:end="107:48"><name pos:start="107:31" pos:end="107:48"><name pos:start="107:31" pos:end="107:31">p</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:48">prev_excitation</name></name></expr></argument>,

               <argument pos:start="109:16" pos:end="109:49"><expr pos:start="109:16" pos:end="109:49"><name pos:start="109:16" pos:end="109:24">PITCH_MAX</name> <operator pos:start="109:26" pos:end="109:26">*</operator> <sizeof pos:start="109:28" pos:end="109:49">sizeof<argument_list pos:start="109:34" pos:end="109:49">(<argument pos:start="109:35" pos:end="109:48"><expr pos:start="109:35" pos:end="109:48"><operator pos:start="109:35" pos:end="109:35">*</operator><name pos:start="109:36" pos:end="109:48"><name pos:start="109:36" pos:end="109:36">p</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:48">excitation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="247:9"><if pos:start="111:9" pos:end="205:9">if <condition pos:start="111:12" pos:end="111:30">(<expr pos:start="111:13" pos:end="111:29"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:14">p</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:29">erased_frames</name></name></expr>)</condition> <block pos:start="111:32" pos:end="205:9">{<block_content pos:start="113:13" pos:end="203:55">

            <decl_stmt pos:start="113:13" pos:end="113:60"><decl pos:start="113:13" pos:end="113:59"><type pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:19">int16_t</name> <modifier pos:start="113:21" pos:end="113:21">*</modifier></type><name pos:start="113:22" pos:end="113:31">vector_ptr</name> <init pos:start="113:33" pos:end="113:59">= <expr pos:start="113:35" pos:end="113:59"><name pos:start="113:35" pos:end="113:47"><name pos:start="113:35" pos:end="113:35">p</name><operator pos:start="113:36" pos:end="113:37">-&gt;</operator><name pos:start="113:38" pos:end="113:47">excitation</name></name> <operator pos:start="113:49" pos:end="113:49">+</operator> <name pos:start="113:51" pos:end="113:59">PITCH_MAX</name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="117:13" pos:end="117:50">/* Update interpolation gain memory */</comment>

            <expr_stmt pos:start="119:13" pos:end="121:76"><expr pos:start="119:13" pos:end="121:75"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:13">p</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:26">interp_gain</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="121:75"><name pos:start="119:30" pos:end="119:42">fixed_cb_gain</name><index pos:start="119:43" pos:end="121:75">[<expr pos:start="119:44" pos:end="121:74"><operator pos:start="119:44" pos:end="119:44">(</operator><name pos:start="119:45" pos:end="119:58"><name pos:start="119:45" pos:end="119:45">p</name><operator pos:start="119:46" pos:end="119:47">-&gt;</operator><name pos:start="119:48" pos:end="119:55">subframe</name><index pos:start="119:56" pos:end="119:58">[<expr pos:start="119:57" pos:end="119:57"><literal type="number" pos:start="119:57" pos:end="119:57">2</literal></expr>]</index></name><operator pos:start="119:59" pos:end="119:59">.</operator><name pos:start="119:60" pos:end="119:68">amp_index</name> <operator pos:start="119:70" pos:end="119:70">+</operator>

                                            <name pos:start="121:45" pos:end="121:58"><name pos:start="121:45" pos:end="121:45">p</name><operator pos:start="121:46" pos:end="121:47">-&gt;</operator><name pos:start="121:48" pos:end="121:55">subframe</name><index pos:start="121:56" pos:end="121:58">[<expr pos:start="121:57" pos:end="121:57"><literal type="number" pos:start="121:57" pos:end="121:57">3</literal></expr>]</index></name><operator pos:start="121:59" pos:end="121:59">.</operator><name pos:start="121:60" pos:end="121:68">amp_index</name><operator pos:start="121:69" pos:end="121:69">)</operator> <operator pos:start="121:71" pos:end="121:72">&gt;&gt;</operator> <literal type="number" pos:start="121:74" pos:end="121:74">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="123:13" pos:end="149:13">for <control pos:start="123:17" pos:end="123:43">(<init pos:start="123:18" pos:end="123:23"><expr pos:start="123:18" pos:end="123:22"><name pos:start="123:18" pos:end="123:18">i</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <literal type="number" pos:start="123:22" pos:end="123:22">0</literal></expr>;</init> <condition pos:start="123:25" pos:end="123:38"><expr pos:start="123:25" pos:end="123:37"><name pos:start="123:25" pos:end="123:25">i</name> <operator pos:start="123:27" pos:end="123:27">&lt;</operator> <name pos:start="123:29" pos:end="123:37">SUBFRAMES</name></expr>;</condition> <incr pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:40">i</name><operator pos:start="123:41" pos:end="123:42">++</operator></expr></incr>)</control> <block pos:start="123:45" pos:end="149:13">{<block_content pos:start="125:17" pos:end="147:43">

                <expr_stmt pos:start="125:17" pos:end="127:60"><expr pos:start="125:17" pos:end="127:59"><call pos:start="125:17" pos:end="127:59"><name pos:start="125:17" pos:end="125:34">gen_fcb_excitation</name><argument_list pos:start="125:35" pos:end="127:59">(<argument pos:start="125:36" pos:end="125:45"><expr pos:start="125:36" pos:end="125:45"><name pos:start="125:36" pos:end="125:45">vector_ptr</name></expr></argument>, <argument pos:start="125:48" pos:end="125:62"><expr pos:start="125:48" pos:end="125:62"><operator pos:start="125:48" pos:end="125:48">&amp;</operator><name pos:start="125:49" pos:end="125:62"><name pos:start="125:49" pos:end="125:49">p</name><operator pos:start="125:50" pos:end="125:51">-&gt;</operator><name pos:start="125:52" pos:end="125:59">subframe</name><index pos:start="125:60" pos:end="125:62">[<expr pos:start="125:61" pos:end="125:61"><name pos:start="125:61" pos:end="125:61">i</name></expr>]</index></name></expr></argument>, <argument pos:start="125:65" pos:end="125:75"><expr pos:start="125:65" pos:end="125:75"><name pos:start="125:65" pos:end="125:75"><name pos:start="125:65" pos:end="125:65">p</name><operator pos:start="125:66" pos:end="125:67">-&gt;</operator><name pos:start="125:68" pos:end="125:75">cur_rate</name></name></expr></argument>,

                                   <argument pos:start="127:36" pos:end="127:55"><expr pos:start="127:36" pos:end="127:55"><name pos:start="127:36" pos:end="127:55"><name pos:start="127:36" pos:end="127:36">p</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:47">pitch_lag</name><index pos:start="127:48" pos:end="127:55">[<expr pos:start="127:49" pos:end="127:54"><name pos:start="127:49" pos:end="127:49">i</name> <operator pos:start="127:51" pos:end="127:52">&gt;&gt;</operator> <literal type="number" pos:start="127:54" pos:end="127:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:58" pos:end="127:58"><expr pos:start="127:58" pos:end="127:58"><name pos:start="127:58" pos:end="127:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="135:75"><expr pos:start="129:17" pos:end="135:74"><call pos:start="129:17" pos:end="135:74"><name pos:start="129:17" pos:end="129:44">ff_g723_1_gen_acb_excitation</name><argument_list pos:start="129:45" pos:end="135:74">(<argument pos:start="129:46" pos:end="129:55"><expr pos:start="129:46" pos:end="129:55"><name pos:start="129:46" pos:end="129:55">acb_vector</name></expr></argument>,

                                             <argument pos:start="131:46" pos:end="131:77"><expr pos:start="131:46" pos:end="131:77"><operator pos:start="131:46" pos:end="131:46">&amp;</operator><name pos:start="131:47" pos:end="131:77"><name pos:start="131:47" pos:end="131:47">p</name><operator pos:start="131:48" pos:end="131:49">-&gt;</operator><name pos:start="131:50" pos:end="131:59">excitation</name><index pos:start="131:60" pos:end="131:77">[<expr pos:start="131:61" pos:end="131:76"><name pos:start="131:61" pos:end="131:72">SUBFRAME_LEN</name> <operator pos:start="131:74" pos:end="131:74">*</operator> <name pos:start="131:76" pos:end="131:76">i</name></expr>]</index></name></expr></argument>,

                                             <argument pos:start="133:46" pos:end="133:65"><expr pos:start="133:46" pos:end="133:65"><name pos:start="133:46" pos:end="133:65"><name pos:start="133:46" pos:end="133:46">p</name><operator pos:start="133:47" pos:end="133:48">-&gt;</operator><name pos:start="133:49" pos:end="133:57">pitch_lag</name><index pos:start="133:58" pos:end="133:65">[<expr pos:start="133:59" pos:end="133:64"><name pos:start="133:59" pos:end="133:59">i</name> <operator pos:start="133:61" pos:end="133:62">&gt;&gt;</operator> <literal type="number" pos:start="133:64" pos:end="133:64">1</literal></expr>]</index></name></expr></argument>,

                                             <argument pos:start="135:46" pos:end="135:60"><expr pos:start="135:46" pos:end="135:60"><operator pos:start="135:46" pos:end="135:46">&amp;</operator><name pos:start="135:47" pos:end="135:60"><name pos:start="135:47" pos:end="135:47">p</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:57">subframe</name><index pos:start="135:58" pos:end="135:60">[<expr pos:start="135:59" pos:end="135:59"><name pos:start="135:59" pos:end="135:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="135:63" pos:end="135:73"><expr pos:start="135:63" pos:end="135:73"><name pos:start="135:63" pos:end="135:73"><name pos:start="135:63" pos:end="135:63">p</name><operator pos:start="135:64" pos:end="135:65">-&gt;</operator><name pos:start="135:66" pos:end="135:73">cur_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="137:17" pos:end="137:46">/* Get the total excitation */</comment>

                <for pos:start="139:17" pos:end="145:17">for <control pos:start="139:21" pos:end="139:50">(<init pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:22">j</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</init> <condition pos:start="139:29" pos:end="139:45"><expr pos:start="139:29" pos:end="139:44"><name pos:start="139:29" pos:end="139:29">j</name> <operator pos:start="139:31" pos:end="139:31">&lt;</operator> <name pos:start="139:33" pos:end="139:44">SUBFRAME_LEN</name></expr>;</condition> <incr pos:start="139:47" pos:end="139:49"><expr pos:start="139:47" pos:end="139:49"><name pos:start="139:47" pos:end="139:47">j</name><operator pos:start="139:48" pos:end="139:49">++</operator></expr></incr>)</control> <block pos:start="139:52" pos:end="145:17">{<block_content pos:start="141:21" pos:end="143:69">

                    <decl_stmt pos:start="141:21" pos:end="141:62"><decl pos:start="141:21" pos:end="141:61"><type pos:start="141:21" pos:end="141:23"><name pos:start="141:21" pos:end="141:23">int</name></type> <name pos:start="141:25" pos:end="141:25">v</name> <init pos:start="141:27" pos:end="141:61">= <expr pos:start="141:29" pos:end="141:61"><call pos:start="141:29" pos:end="141:61"><name pos:start="141:29" pos:end="141:41">av_clip_int16</name><argument_list pos:start="141:42" pos:end="141:61">(<argument pos:start="141:43" pos:end="141:60"><expr pos:start="141:43" pos:end="141:60"><name pos:start="141:43" pos:end="141:55"><name pos:start="141:43" pos:end="141:52">vector_ptr</name><index pos:start="141:53" pos:end="141:55">[<expr pos:start="141:54" pos:end="141:54"><name pos:start="141:54" pos:end="141:54">j</name></expr>]</index></name> <operator pos:start="141:57" pos:end="141:58">&lt;&lt;</operator> <literal type="number" pos:start="141:60" pos:end="141:60">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="143:21" pos:end="143:69"><expr pos:start="143:21" pos:end="143:68"><name pos:start="143:21" pos:end="143:33"><name pos:start="143:21" pos:end="143:30">vector_ptr</name><index pos:start="143:31" pos:end="143:33">[<expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">j</name></expr>]</index></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <call pos:start="143:37" pos:end="143:68"><name pos:start="143:37" pos:end="143:49">av_clip_int16</name><argument_list pos:start="143:50" pos:end="143:68">(<argument pos:start="143:51" pos:end="143:67"><expr pos:start="143:51" pos:end="143:67"><name pos:start="143:51" pos:end="143:51">v</name> <operator pos:start="143:53" pos:end="143:53">+</operator> <name pos:start="143:55" pos:end="143:67"><name pos:start="143:55" pos:end="143:64">acb_vector</name><index pos:start="143:65" pos:end="143:67">[<expr pos:start="143:66" pos:end="143:66"><name pos:start="143:66" pos:end="143:66">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="147:17" pos:end="147:43"><expr pos:start="147:17" pos:end="147:42"><name pos:start="147:17" pos:end="147:26">vector_ptr</name> <operator pos:start="147:28" pos:end="147:29">+=</operator> <name pos:start="147:31" pos:end="147:42">SUBFRAME_LEN</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="153:13" pos:end="153:51"><expr pos:start="153:13" pos:end="153:50"><name pos:start="153:13" pos:end="153:22">vector_ptr</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:38"><name pos:start="153:26" pos:end="153:26">p</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:38">excitation</name></name> <operator pos:start="153:40" pos:end="153:40">+</operator> <name pos:start="153:42" pos:end="153:50">PITCH_MAX</name></expr>;</expr_stmt>



            <expr_stmt pos:start="157:13" pos:end="159:76"><expr pos:start="157:13" pos:end="159:75"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:13">p</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:27">interp_index</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <call pos:start="157:31" pos:end="159:75"><name pos:start="157:31" pos:end="157:47">comp_interp_index</name><argument_list pos:start="157:48" pos:end="159:75">(<argument pos:start="157:49" pos:end="157:49"><expr pos:start="157:49" pos:end="157:49"><name pos:start="157:49" pos:end="157:49">p</name></expr></argument>, <argument pos:start="157:52" pos:end="157:66"><expr pos:start="157:52" pos:end="157:66"><name pos:start="157:52" pos:end="157:66"><name pos:start="157:52" pos:end="157:52">p</name><operator pos:start="157:53" pos:end="157:54">-&gt;</operator><name pos:start="157:55" pos:end="157:63">pitch_lag</name><index pos:start="157:64" pos:end="157:66">[<expr pos:start="157:65" pos:end="157:65"><literal type="number" pos:start="157:65" pos:end="157:65">1</literal></expr>]</index></name></expr></argument>,

                                                <argument pos:start="159:49" pos:end="159:60"><expr pos:start="159:49" pos:end="159:60"><operator pos:start="159:49" pos:end="159:49">&amp;</operator><name pos:start="159:50" pos:end="159:60"><name pos:start="159:50" pos:end="159:50">p</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:60">sid_gain</name></name></expr></argument>, <argument pos:start="159:63" pos:end="159:74"><expr pos:start="159:63" pos:end="159:74"><operator pos:start="159:63" pos:end="159:63">&amp;</operator><name pos:start="159:64" pos:end="159:74"><name pos:start="159:64" pos:end="159:64">p</name><operator pos:start="159:65" pos:end="159:66">-&gt;</operator><name pos:start="159:67" pos:end="159:74">cur_gain</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="163:13" pos:end="163:45">/* Perform pitch postfiltering */</comment>

            <if_stmt pos:start="165:13" pos:end="195:13"><if pos:start="165:13" pos:end="191:13">if <condition pos:start="165:16" pos:end="165:30">(<expr pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:17">p</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:29">postfilter</name></name></expr>)</condition> <block pos:start="165:32" pos:end="191:13">{<block_content pos:start="167:17" pos:end="189:76">

                <expr_stmt pos:start="167:17" pos:end="167:30"><expr pos:start="167:17" pos:end="167:29"><name pos:start="167:17" pos:end="167:17">i</name> <operator pos:start="167:19" pos:end="167:19">=</operator> <name pos:start="167:21" pos:end="167:29">PITCH_MAX</name></expr>;</expr_stmt>

                <for pos:start="169:17" pos:end="173:57">for <control pos:start="169:21" pos:end="169:66">(<init pos:start="169:22" pos:end="169:27"><expr pos:start="169:22" pos:end="169:26"><name pos:start="169:22" pos:end="169:22">j</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal></expr>;</init> <condition pos:start="169:29" pos:end="169:42"><expr pos:start="169:29" pos:end="169:41"><name pos:start="169:29" pos:end="169:29">j</name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <name pos:start="169:33" pos:end="169:41">SUBFRAMES</name></expr>;</condition> <incr pos:start="169:44" pos:end="169:65"><expr pos:start="169:44" pos:end="169:60"><name pos:start="169:44" pos:end="169:44">i</name> <operator pos:start="169:46" pos:end="169:47">+=</operator> <name pos:start="169:49" pos:end="169:60">SUBFRAME_LEN</name></expr><operator pos:start="169:61" pos:end="169:61">,</operator> <expr pos:start="169:63" pos:end="169:65"><name pos:start="169:63" pos:end="169:63">j</name><operator pos:start="169:64" pos:end="169:65">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:21" pos:end="173:57"><block_content pos:start="171:21" pos:end="173:57">

                    <expr_stmt pos:start="171:21" pos:end="173:57"><expr pos:start="171:21" pos:end="173:56"><call pos:start="171:21" pos:end="173:56"><name pos:start="171:21" pos:end="171:34">comp_ppf_coeff</name><argument_list pos:start="171:35" pos:end="173:56">(<argument pos:start="171:36" pos:end="171:36"><expr pos:start="171:36" pos:end="171:36"><name pos:start="171:36" pos:end="171:36">p</name></expr></argument>, <argument pos:start="171:39" pos:end="171:39"><expr pos:start="171:39" pos:end="171:39"><name pos:start="171:39" pos:end="171:39">i</name></expr></argument>, <argument pos:start="171:42" pos:end="171:61"><expr pos:start="171:42" pos:end="171:61"><name pos:start="171:42" pos:end="171:61"><name pos:start="171:42" pos:end="171:42">p</name><operator pos:start="171:43" pos:end="171:44">-&gt;</operator><name pos:start="171:45" pos:end="171:53">pitch_lag</name><index pos:start="171:54" pos:end="171:61">[<expr pos:start="171:55" pos:end="171:60"><name pos:start="171:55" pos:end="171:55">j</name> <operator pos:start="171:57" pos:end="171:58">&gt;&gt;</operator> <literal type="number" pos:start="171:60" pos:end="171:60">1</literal></expr>]</index></name></expr></argument>,

                                   <argument pos:start="173:36" pos:end="173:42"><expr pos:start="173:36" pos:end="173:42"><name pos:start="173:36" pos:end="173:38">ppf</name> <operator pos:start="173:40" pos:end="173:40">+</operator> <name pos:start="173:42" pos:end="173:42">j</name></expr></argument>, <argument pos:start="173:45" pos:end="173:55"><expr pos:start="173:45" pos:end="173:55"><name pos:start="173:45" pos:end="173:55"><name pos:start="173:45" pos:end="173:45">p</name><operator pos:start="173:46" pos:end="173:47">-&gt;</operator><name pos:start="173:48" pos:end="173:55">cur_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <for pos:start="177:17" pos:end="189:76">for <control pos:start="177:21" pos:end="177:73">(<init pos:start="177:22" pos:end="177:34"><expr pos:start="177:22" pos:end="177:26"><name pos:start="177:22" pos:end="177:22">i</name> <operator pos:start="177:24" pos:end="177:24">=</operator> <literal type="number" pos:start="177:26" pos:end="177:26">0</literal></expr><operator pos:start="177:27" pos:end="177:27">,</operator> <expr pos:start="177:29" pos:end="177:33"><name pos:start="177:29" pos:end="177:29">j</name> <operator pos:start="177:31" pos:end="177:31">=</operator> <literal type="number" pos:start="177:33" pos:end="177:33">0</literal></expr>;</init> <condition pos:start="177:36" pos:end="177:49"><expr pos:start="177:36" pos:end="177:48"><name pos:start="177:36" pos:end="177:36">j</name> <operator pos:start="177:38" pos:end="177:38">&lt;</operator> <name pos:start="177:40" pos:end="177:48">SUBFRAMES</name></expr>;</condition> <incr pos:start="177:51" pos:end="177:72"><expr pos:start="177:51" pos:end="177:67"><name pos:start="177:51" pos:end="177:51">i</name> <operator pos:start="177:53" pos:end="177:54">+=</operator> <name pos:start="177:56" pos:end="177:67">SUBFRAME_LEN</name></expr><operator pos:start="177:68" pos:end="177:68">,</operator> <expr pos:start="177:70" pos:end="177:72"><name pos:start="177:70" pos:end="177:70">j</name><operator pos:start="177:71" pos:end="177:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:21" pos:end="189:76"><block_content pos:start="179:21" pos:end="189:76">

                    <expr_stmt pos:start="179:21" pos:end="189:76"><expr pos:start="179:21" pos:end="189:75"><call pos:start="179:21" pos:end="189:75"><name pos:start="179:21" pos:end="179:48">ff_acelp_weighted_vector_sum</name><argument_list pos:start="179:49" pos:end="189:75">(<argument pos:start="179:50" pos:end="179:73"><expr pos:start="179:50" pos:end="179:73"><name pos:start="179:50" pos:end="179:57"><name pos:start="179:50" pos:end="179:50">p</name><operator pos:start="179:51" pos:end="179:52">-&gt;</operator><name pos:start="179:53" pos:end="179:57">audio</name></name> <operator pos:start="179:59" pos:end="179:59">+</operator> <name pos:start="179:61" pos:end="179:69">LPC_ORDER</name> <operator pos:start="179:71" pos:end="179:71">+</operator> <name pos:start="179:73" pos:end="179:73">i</name></expr></argument>,

                                                 <argument pos:start="181:50" pos:end="181:63"><expr pos:start="181:50" pos:end="181:63"><name pos:start="181:50" pos:end="181:59">vector_ptr</name> <operator pos:start="181:61" pos:end="181:61">+</operator> <name pos:start="181:63" pos:end="181:63">i</name></expr></argument>,

                                                 <argument pos:start="183:50" pos:end="183:78"><expr pos:start="183:50" pos:end="183:78"><name pos:start="183:50" pos:end="183:59">vector_ptr</name> <operator pos:start="183:61" pos:end="183:61">+</operator> <name pos:start="183:63" pos:end="183:63">i</name> <operator pos:start="183:65" pos:end="183:65">+</operator> <name pos:start="183:67" pos:end="183:72"><name pos:start="183:67" pos:end="183:69">ppf</name><index pos:start="183:70" pos:end="183:72">[<expr pos:start="183:71" pos:end="183:71"><name pos:start="183:71" pos:end="183:71">j</name></expr>]</index></name><operator pos:start="183:73" pos:end="183:73">.</operator><name pos:start="183:74" pos:end="183:78">index</name></expr></argument>,

                                                 <argument pos:start="185:50" pos:end="185:63"><expr pos:start="185:50" pos:end="185:63"><name pos:start="185:50" pos:end="185:55"><name pos:start="185:50" pos:end="185:52">ppf</name><index pos:start="185:53" pos:end="185:55">[<expr pos:start="185:54" pos:end="185:54"><name pos:start="185:54" pos:end="185:54">j</name></expr>]</index></name><operator pos:start="185:56" pos:end="185:56">.</operator><name pos:start="185:57" pos:end="185:63">sc_gain</name></expr></argument>,

                                                 <argument pos:start="187:50" pos:end="187:64"><expr pos:start="187:50" pos:end="187:64"><name pos:start="187:50" pos:end="187:55"><name pos:start="187:50" pos:end="187:52">ppf</name><index pos:start="187:53" pos:end="187:55">[<expr pos:start="187:54" pos:end="187:54"><name pos:start="187:54" pos:end="187:54">j</name></expr>]</index></name><operator pos:start="187:56" pos:end="187:56">.</operator><name pos:start="187:57" pos:end="187:64">opt_gain</name></expr></argument>,

                                                 <argument pos:start="189:50" pos:end="189:56"><expr pos:start="189:50" pos:end="189:56"><literal type="number" pos:start="189:50" pos:end="189:50">1</literal> <operator pos:start="189:52" pos:end="189:53">&lt;&lt;</operator> <literal type="number" pos:start="189:55" pos:end="189:56">14</literal></expr></argument>, <argument pos:start="189:59" pos:end="189:60"><expr pos:start="189:59" pos:end="189:60"><literal type="number" pos:start="189:59" pos:end="189:60">15</literal></expr></argument>, <argument pos:start="189:63" pos:end="189:74"><expr pos:start="189:63" pos:end="189:74"><name pos:start="189:63" pos:end="189:74">SUBFRAME_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="191:15" pos:end="195:13">else <block pos:start="191:20" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:47">

                <expr_stmt pos:start="193:17" pos:end="193:47"><expr pos:start="193:17" pos:end="193:46"><name pos:start="193:17" pos:end="193:21">audio</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:34">vector_ptr</name> <operator pos:start="193:36" pos:end="193:36">-</operator> <name pos:start="193:38" pos:end="193:46">LPC_ORDER</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <comment type="block" pos:start="199:13" pos:end="199:56">/* Save the excitation for the next frame */</comment>

            <expr_stmt pos:start="201:13" pos:end="203:55"><expr pos:start="201:13" pos:end="203:54"><call pos:start="201:13" pos:end="203:54"><name pos:start="201:13" pos:end="201:18">memcpy</name><argument_list pos:start="201:19" pos:end="203:54">(<argument pos:start="201:20" pos:end="201:37"><expr pos:start="201:20" pos:end="201:37"><name pos:start="201:20" pos:end="201:37"><name pos:start="201:20" pos:end="201:20">p</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:37">prev_excitation</name></name></expr></argument>, <argument pos:start="201:40" pos:end="201:64"><expr pos:start="201:40" pos:end="201:64"><name pos:start="201:40" pos:end="201:52"><name pos:start="201:40" pos:end="201:40">p</name><operator pos:start="201:41" pos:end="201:42">-&gt;</operator><name pos:start="201:43" pos:end="201:52">excitation</name></name> <operator pos:start="201:54" pos:end="201:54">+</operator> <name pos:start="201:56" pos:end="201:64">FRAME_LEN</name></expr></argument>,

                   <argument pos:start="203:20" pos:end="203:53"><expr pos:start="203:20" pos:end="203:53"><name pos:start="203:20" pos:end="203:28">PITCH_MAX</name> <operator pos:start="203:30" pos:end="203:30">*</operator> <sizeof pos:start="203:32" pos:end="203:53">sizeof<argument_list pos:start="203:38" pos:end="203:53">(<argument pos:start="203:39" pos:end="203:52"><expr pos:start="203:39" pos:end="203:52"><operator pos:start="203:39" pos:end="203:39">*</operator><name pos:start="203:40" pos:end="203:52"><name pos:start="203:40" pos:end="203:40">p</name><operator pos:start="203:41" pos:end="203:42">-&gt;</operator><name pos:start="203:43" pos:end="203:52">excitation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="205:11" pos:end="247:9">else <block pos:start="205:16" pos:end="247:9">{<block_content pos:start="207:13" pos:end="245:13">

            <expr_stmt pos:start="207:13" pos:end="207:59"><expr pos:start="207:13" pos:end="207:58"><name pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:13">p</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:26">interp_gain</name></name> <operator pos:start="207:28" pos:end="207:28">=</operator> <operator pos:start="207:30" pos:end="207:30">(</operator><name pos:start="207:31" pos:end="207:44"><name pos:start="207:31" pos:end="207:31">p</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:44">interp_gain</name></name> <operator pos:start="207:46" pos:end="207:46">*</operator> <literal type="number" pos:start="207:48" pos:end="207:50">3</literal> <operator pos:start="207:50" pos:end="207:50">+</operator> <literal type="number" pos:start="207:52" pos:end="207:52">2</literal><operator pos:start="207:53" pos:end="207:53">)</operator> <operator pos:start="207:55" pos:end="207:56">&gt;&gt;</operator> <literal type="number" pos:start="207:58" pos:end="207:58">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="245:13"><if pos:start="209:13" pos:end="225:13">if <condition pos:start="209:16" pos:end="209:38">(<expr pos:start="209:17" pos:end="209:37"><name pos:start="209:17" pos:end="209:32"><name pos:start="209:17" pos:end="209:17">p</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:32">erased_frames</name></name> <operator pos:start="209:34" pos:end="209:35">==</operator> <literal type="number" pos:start="209:37" pos:end="209:37">3</literal></expr>)</condition> <block pos:start="209:40" pos:end="225:13">{<block_content pos:start="213:17" pos:end="223:66">

                <comment type="block" pos:start="211:17" pos:end="211:33">/* Mute output */</comment>

                <expr_stmt pos:start="213:17" pos:end="215:73"><expr pos:start="213:17" pos:end="215:72"><call pos:start="213:17" pos:end="215:72"><name pos:start="213:17" pos:end="213:22">memset</name><argument_list pos:start="213:23" pos:end="215:72">(<argument pos:start="213:24" pos:end="213:36"><expr pos:start="213:24" pos:end="213:36"><name pos:start="213:24" pos:end="213:36"><name pos:start="213:24" pos:end="213:24">p</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:36">excitation</name></name></expr></argument>, <argument pos:start="213:39" pos:end="213:39"><expr pos:start="213:39" pos:end="213:39"><literal type="number" pos:start="213:39" pos:end="213:39">0</literal></expr></argument>,

                       <argument pos:start="215:24" pos:end="215:71"><expr pos:start="215:24" pos:end="215:71"><operator pos:start="215:24" pos:end="215:24">(</operator><name pos:start="215:25" pos:end="215:33">FRAME_LEN</name> <operator pos:start="215:35" pos:end="215:35">+</operator> <name pos:start="215:37" pos:end="215:45">PITCH_MAX</name><operator pos:start="215:46" pos:end="215:46">)</operator> <operator pos:start="215:48" pos:end="215:48">*</operator> <sizeof pos:start="215:50" pos:end="215:71">sizeof<argument_list pos:start="215:56" pos:end="215:71">(<argument pos:start="215:57" pos:end="215:70"><expr pos:start="215:57" pos:end="215:70"><operator pos:start="215:57" pos:end="215:57">*</operator><name pos:start="215:58" pos:end="215:70"><name pos:start="215:58" pos:end="215:58">p</name><operator pos:start="215:59" pos:end="215:60">-&gt;</operator><name pos:start="215:61" pos:end="215:70">excitation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="219:59"><expr pos:start="217:17" pos:end="219:58"><call pos:start="217:17" pos:end="219:58"><name pos:start="217:17" pos:end="217:22">memset</name><argument_list pos:start="217:23" pos:end="219:58">(<argument pos:start="217:24" pos:end="217:41"><expr pos:start="217:24" pos:end="217:41"><name pos:start="217:24" pos:end="217:41"><name pos:start="217:24" pos:end="217:24">p</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:41">prev_excitation</name></name></expr></argument>, <argument pos:start="217:44" pos:end="217:44"><expr pos:start="217:44" pos:end="217:44"><literal type="number" pos:start="217:44" pos:end="217:44">0</literal></expr></argument>,

                       <argument pos:start="219:24" pos:end="219:57"><expr pos:start="219:24" pos:end="219:57"><name pos:start="219:24" pos:end="219:32">PITCH_MAX</name> <operator pos:start="219:34" pos:end="219:34">*</operator> <sizeof pos:start="219:36" pos:end="219:57">sizeof<argument_list pos:start="219:42" pos:end="219:57">(<argument pos:start="219:43" pos:end="219:56"><expr pos:start="219:43" pos:end="219:56"><operator pos:start="219:43" pos:end="219:43">*</operator><name pos:start="219:44" pos:end="219:56"><name pos:start="219:44" pos:end="219:44">p</name><operator pos:start="219:45" pos:end="219:46">-&gt;</operator><name pos:start="219:47" pos:end="219:56">excitation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="223:66"><expr pos:start="221:17" pos:end="223:65"><call pos:start="221:17" pos:end="223:65"><name pos:start="221:17" pos:end="221:22">memset</name><argument_list pos:start="221:23" pos:end="223:65">(<argument pos:start="221:24" pos:end="221:37"><expr pos:start="221:24" pos:end="221:37"><name pos:start="221:24" pos:end="221:37"><name pos:start="221:24" pos:end="221:28">frame</name><operator pos:start="221:29" pos:end="221:30">-&gt;</operator><name pos:start="221:31" pos:end="221:34">data</name><index pos:start="221:35" pos:end="221:37">[<expr pos:start="221:36" pos:end="221:36"><literal type="number" pos:start="221:36" pos:end="221:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="221:40" pos:end="221:40"><expr pos:start="221:40" pos:end="221:40"><literal type="number" pos:start="221:40" pos:end="221:40">0</literal></expr></argument>,

                       <argument pos:start="223:24" pos:end="223:64"><expr pos:start="223:24" pos:end="223:64"><operator pos:start="223:24" pos:end="223:24">(</operator><name pos:start="223:25" pos:end="223:33">FRAME_LEN</name> <operator pos:start="223:35" pos:end="223:35">+</operator> <name pos:start="223:37" pos:end="223:45">LPC_ORDER</name><operator pos:start="223:46" pos:end="223:46">)</operator> <operator pos:start="223:48" pos:end="223:48">*</operator> <sizeof pos:start="223:50" pos:end="223:64">sizeof<argument_list pos:start="223:56" pos:end="223:64">(<argument pos:start="223:57" pos:end="223:63"><expr pos:start="223:57" pos:end="223:63"><name pos:start="223:57" pos:end="223:63">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="225:15" pos:end="245:13">else <block pos:start="225:20" pos:end="245:13">{<block_content pos:start="227:17" pos:end="243:59">

                <decl_stmt pos:start="227:17" pos:end="227:52"><decl pos:start="227:17" pos:end="227:51"><type pos:start="227:17" pos:end="227:25"><name pos:start="227:17" pos:end="227:23">int16_t</name> <modifier pos:start="227:25" pos:end="227:25">*</modifier></type><name pos:start="227:26" pos:end="227:28">buf</name> <init pos:start="227:30" pos:end="227:51">= <expr pos:start="227:32" pos:end="227:51"><name pos:start="227:32" pos:end="227:39"><name pos:start="227:32" pos:end="227:32">p</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:39">audio</name></name> <operator pos:start="227:41" pos:end="227:41">+</operator> <name pos:start="227:43" pos:end="227:51">LPC_ORDER</name></expr></init></decl>;</decl_stmt>



                <comment type="block" pos:start="231:17" pos:end="231:38">/* Regenerate frame */</comment>

                <expr_stmt pos:start="233:17" pos:end="235:65"><expr pos:start="233:17" pos:end="235:64"><call pos:start="233:17" pos:end="235:64"><name pos:start="233:17" pos:end="233:31">residual_interp</name><argument_list pos:start="233:32" pos:end="235:64">(<argument pos:start="233:33" pos:end="233:45"><expr pos:start="233:33" pos:end="233:45"><name pos:start="233:33" pos:end="233:45"><name pos:start="233:33" pos:end="233:33">p</name><operator pos:start="233:34" pos:end="233:35">-&gt;</operator><name pos:start="233:36" pos:end="233:45">excitation</name></name></expr></argument>, <argument pos:start="233:48" pos:end="233:50"><expr pos:start="233:48" pos:end="233:50"><name pos:start="233:48" pos:end="233:50">buf</name></expr></argument>, <argument pos:start="233:53" pos:end="233:67"><expr pos:start="233:53" pos:end="233:67"><name pos:start="233:53" pos:end="233:67"><name pos:start="233:53" pos:end="233:53">p</name><operator pos:start="233:54" pos:end="233:55">-&gt;</operator><name pos:start="233:56" pos:end="233:67">interp_index</name></name></expr></argument>,

                                <argument pos:start="235:33" pos:end="235:46"><expr pos:start="235:33" pos:end="235:46"><name pos:start="235:33" pos:end="235:46"><name pos:start="235:33" pos:end="235:33">p</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:46">interp_gain</name></name></expr></argument>, <argument pos:start="235:49" pos:end="235:63"><expr pos:start="235:49" pos:end="235:63"><operator pos:start="235:49" pos:end="235:49">&amp;</operator><name pos:start="235:50" pos:end="235:63"><name pos:start="235:50" pos:end="235:50">p</name><operator pos:start="235:51" pos:end="235:52">-&gt;</operator><name pos:start="235:53" pos:end="235:63">random_seed</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="239:17" pos:end="239:60">/* Save the excitation for the next frame */</comment>

                <expr_stmt pos:start="241:17" pos:end="243:59"><expr pos:start="241:17" pos:end="243:58"><call pos:start="241:17" pos:end="243:58"><name pos:start="241:17" pos:end="241:22">memcpy</name><argument_list pos:start="241:23" pos:end="243:58">(<argument pos:start="241:24" pos:end="241:41"><expr pos:start="241:24" pos:end="241:41"><name pos:start="241:24" pos:end="241:41"><name pos:start="241:24" pos:end="241:24">p</name><operator pos:start="241:25" pos:end="241:26">-&gt;</operator><name pos:start="241:27" pos:end="241:41">prev_excitation</name></name></expr></argument>, <argument pos:start="241:44" pos:end="241:72"><expr pos:start="241:44" pos:end="241:72"><name pos:start="241:44" pos:end="241:46">buf</name> <operator pos:start="241:48" pos:end="241:48">+</operator> <operator pos:start="241:50" pos:end="241:50">(</operator><name pos:start="241:51" pos:end="241:59">FRAME_LEN</name> <operator pos:start="241:61" pos:end="241:61">-</operator> <name pos:start="241:63" pos:end="241:71">PITCH_MAX</name><operator pos:start="241:72" pos:end="241:72">)</operator></expr></argument>,

                       <argument pos:start="243:24" pos:end="243:57"><expr pos:start="243:24" pos:end="243:57"><name pos:start="243:24" pos:end="243:32">PITCH_MAX</name> <operator pos:start="243:34" pos:end="243:34">*</operator> <sizeof pos:start="243:36" pos:end="243:57">sizeof<argument_list pos:start="243:42" pos:end="243:57">(<argument pos:start="243:43" pos:end="243:56"><expr pos:start="243:43" pos:end="243:56"><operator pos:start="243:43" pos:end="243:43">*</operator><name pos:start="243:44" pos:end="243:56"><name pos:start="243:44" pos:end="243:44">p</name><operator pos:start="243:45" pos:end="243:46">-&gt;</operator><name pos:start="243:47" pos:end="243:56">excitation</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:45"><expr pos:start="249:9" pos:end="249:44"><name pos:start="249:9" pos:end="249:26"><name pos:start="249:9" pos:end="249:9">p</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:26">cng_random_seed</name></name> <operator pos:start="249:28" pos:end="249:28">=</operator> <name pos:start="249:30" pos:end="249:44">CNG_RANDOM_SEED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="251:7" pos:end="283:5">else <block pos:start="251:12" pos:end="283:5">{<block_content pos:start="253:9" pos:end="281:74">

        <if_stmt pos:start="253:9" pos:end="263:9"><if pos:start="253:9" pos:end="259:9">if <condition pos:start="253:12" pos:end="253:43">(<expr pos:start="253:13" pos:end="253:42"><name pos:start="253:13" pos:end="253:29"><name pos:start="253:13" pos:end="253:13">p</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:29">cur_frame_type</name></name> <operator pos:start="253:31" pos:end="253:32">==</operator> <name pos:start="253:34" pos:end="253:42">SID_FRAME</name></expr>)</condition> <block pos:start="253:45" pos:end="259:9">{<block_content pos:start="255:13" pos:end="257:78">

            <expr_stmt pos:start="255:13" pos:end="255:74"><expr pos:start="255:13" pos:end="255:73"><name pos:start="255:13" pos:end="255:23"><name pos:start="255:13" pos:end="255:13">p</name><operator pos:start="255:14" pos:end="255:15">-&gt;</operator><name pos:start="255:16" pos:end="255:23">sid_gain</name></name> <operator pos:start="255:25" pos:end="255:25">=</operator> <call pos:start="255:27" pos:end="255:73"><name pos:start="255:27" pos:end="255:47">sid_gain_to_lsp_index</name><argument_list pos:start="255:48" pos:end="255:73">(<argument pos:start="255:49" pos:end="255:72"><expr pos:start="255:49" pos:end="255:72"><name pos:start="255:49" pos:end="255:62"><name pos:start="255:49" pos:end="255:49">p</name><operator pos:start="255:50" pos:end="255:51">-&gt;</operator><name pos:start="255:52" pos:end="255:59">subframe</name><index pos:start="255:60" pos:end="255:62">[<expr pos:start="255:61" pos:end="255:61"><literal type="number" pos:start="255:61" pos:end="255:61">0</literal></expr>]</index></name><operator pos:start="255:63" pos:end="255:63">.</operator><name pos:start="255:64" pos:end="255:72">amp_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:78"><expr pos:start="257:13" pos:end="257:77"><call pos:start="257:13" pos:end="257:77"><name pos:start="257:13" pos:end="257:35">ff_g723_1_inverse_quant</name><argument_list pos:start="257:36" pos:end="257:77">(<argument pos:start="257:37" pos:end="257:46"><expr pos:start="257:37" pos:end="257:46"><name pos:start="257:37" pos:end="257:46"><name pos:start="257:37" pos:end="257:37">p</name><operator pos:start="257:38" pos:end="257:39">-&gt;</operator><name pos:start="257:40" pos:end="257:46">sid_lsp</name></name></expr></argument>, <argument pos:start="257:49" pos:end="257:59"><expr pos:start="257:49" pos:end="257:59"><name pos:start="257:49" pos:end="257:59"><name pos:start="257:49" pos:end="257:49">p</name><operator pos:start="257:50" pos:end="257:51">-&gt;</operator><name pos:start="257:52" pos:end="257:59">prev_lsp</name></name></expr></argument>, <argument pos:start="257:62" pos:end="257:73"><expr pos:start="257:62" pos:end="257:73"><name pos:start="257:62" pos:end="257:73"><name pos:start="257:62" pos:end="257:62">p</name><operator pos:start="257:63" pos:end="257:64">-&gt;</operator><name pos:start="257:65" pos:end="257:73">lsp_index</name></name></expr></argument>, <argument pos:start="257:76" pos:end="257:76"><expr pos:start="257:76" pos:end="257:76"><literal type="number" pos:start="257:76" pos:end="257:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="259:11" pos:end="263:9">else if <condition pos:start="259:19" pos:end="259:54">(<expr pos:start="259:20" pos:end="259:53"><name pos:start="259:20" pos:end="259:37"><name pos:start="259:20" pos:end="259:20">p</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:37">past_frame_type</name></name> <operator pos:start="259:39" pos:end="259:40">==</operator> <name pos:start="259:42" pos:end="259:53">ACTIVE_FRAME</name></expr>)</condition> <block pos:start="259:56" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:47">

            <expr_stmt pos:start="261:13" pos:end="261:47"><expr pos:start="261:13" pos:end="261:46"><name pos:start="261:13" pos:end="261:23"><name pos:start="261:13" pos:end="261:13">p</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:23">sid_gain</name></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <call pos:start="261:27" pos:end="261:46"><name pos:start="261:27" pos:end="261:43">estimate_sid_gain</name><argument_list pos:start="261:44" pos:end="261:46">(<argument pos:start="261:45" pos:end="261:45"><expr pos:start="261:45" pos:end="261:45"><name pos:start="261:45" pos:end="261:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="267:9" pos:end="273:63"><if pos:start="267:9" pos:end="269:38">if <condition pos:start="267:12" pos:end="267:47">(<expr pos:start="267:13" pos:end="267:46"><name pos:start="267:13" pos:end="267:30"><name pos:start="267:13" pos:end="267:13">p</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:30">past_frame_type</name></name> <operator pos:start="267:32" pos:end="267:33">==</operator> <name pos:start="267:35" pos:end="267:46">ACTIVE_FRAME</name></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:38"><block_content pos:start="269:13" pos:end="269:38">

            <expr_stmt pos:start="269:13" pos:end="269:38"><expr pos:start="269:13" pos:end="269:37"><name pos:start="269:13" pos:end="269:23"><name pos:start="269:13" pos:end="269:13">p</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:23">cur_gain</name></name> <operator pos:start="269:25" pos:end="269:25">=</operator> <name pos:start="269:27" pos:end="269:37"><name pos:start="269:27" pos:end="269:27">p</name><operator pos:start="269:28" pos:end="269:29">-&gt;</operator><name pos:start="269:30" pos:end="269:37">sid_gain</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="271:9" pos:end="273:63">else<block type="pseudo" pos:start="273:13" pos:end="273:63"><block_content pos:start="273:13" pos:end="273:63">

            <expr_stmt pos:start="273:13" pos:end="273:63"><expr pos:start="273:13" pos:end="273:62"><name pos:start="273:13" pos:end="273:23"><name pos:start="273:13" pos:end="273:13">p</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:23">cur_gain</name></name> <operator pos:start="273:25" pos:end="273:25">=</operator> <operator pos:start="273:27" pos:end="273:27">(</operator><name pos:start="273:28" pos:end="273:38"><name pos:start="273:28" pos:end="273:28">p</name><operator pos:start="273:29" pos:end="273:30">-&gt;</operator><name pos:start="273:31" pos:end="273:38">cur_gain</name></name> <operator pos:start="273:40" pos:end="273:40">*</operator> <literal type="number" pos:start="273:42" pos:end="273:44">7</literal> <operator pos:start="273:44" pos:end="273:44">+</operator> <name pos:start="273:46" pos:end="273:56"><name pos:start="273:46" pos:end="273:46">p</name><operator pos:start="273:47" pos:end="273:48">-&gt;</operator><name pos:start="273:49" pos:end="273:56">sid_gain</name></name><operator pos:start="273:57" pos:end="273:57">)</operator> <operator pos:start="273:59" pos:end="273:60">&gt;&gt;</operator> <literal type="number" pos:start="273:62" pos:end="273:62">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:26"><expr pos:start="275:9" pos:end="275:25"><call pos:start="275:9" pos:end="275:25"><name pos:start="275:9" pos:end="275:22">generate_noise</name><argument_list pos:start="275:23" pos:end="275:25">(<argument pos:start="275:24" pos:end="275:24"><expr pos:start="275:24" pos:end="275:24"><name pos:start="275:24" pos:end="275:24">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:64"><expr pos:start="277:9" pos:end="277:63"><call pos:start="277:9" pos:end="277:63"><name pos:start="277:9" pos:end="277:33">ff_g723_1_lsp_interpolate</name><argument_list pos:start="277:34" pos:end="277:63">(<argument pos:start="277:35" pos:end="277:37"><expr pos:start="277:35" pos:end="277:37"><name pos:start="277:35" pos:end="277:37">lpc</name></expr></argument>, <argument pos:start="277:40" pos:end="277:49"><expr pos:start="277:40" pos:end="277:49"><name pos:start="277:40" pos:end="277:49"><name pos:start="277:40" pos:end="277:40">p</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:49">sid_lsp</name></name></expr></argument>, <argument pos:start="277:52" pos:end="277:62"><expr pos:start="277:52" pos:end="277:62"><name pos:start="277:52" pos:end="277:62"><name pos:start="277:52" pos:end="277:52">p</name><operator pos:start="277:53" pos:end="277:54">-&gt;</operator><name pos:start="277:55" pos:end="277:62">prev_lsp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="279:9" pos:end="279:52">/* Save the lsp_vector for the next frame */</comment>

        <expr_stmt pos:start="281:9" pos:end="281:74"><expr pos:start="281:9" pos:end="281:73"><call pos:start="281:9" pos:end="281:73"><name pos:start="281:9" pos:end="281:14">memcpy</name><argument_list pos:start="281:15" pos:end="281:73">(<argument pos:start="281:16" pos:end="281:26"><expr pos:start="281:16" pos:end="281:26"><name pos:start="281:16" pos:end="281:26"><name pos:start="281:16" pos:end="281:16">p</name><operator pos:start="281:17" pos:end="281:18">-&gt;</operator><name pos:start="281:19" pos:end="281:26">prev_lsp</name></name></expr></argument>, <argument pos:start="281:29" pos:end="281:38"><expr pos:start="281:29" pos:end="281:38"><name pos:start="281:29" pos:end="281:38"><name pos:start="281:29" pos:end="281:29">p</name><operator pos:start="281:30" pos:end="281:31">-&gt;</operator><name pos:start="281:32" pos:end="281:38">sid_lsp</name></name></expr></argument>, <argument pos:start="281:41" pos:end="281:72"><expr pos:start="281:41" pos:end="281:72"><name pos:start="281:41" pos:end="281:49">LPC_ORDER</name> <operator pos:start="281:51" pos:end="281:51">*</operator> <sizeof pos:start="281:53" pos:end="281:72">sizeof<argument_list pos:start="281:59" pos:end="281:72">(<argument pos:start="281:60" pos:end="281:71"><expr pos:start="281:60" pos:end="281:71"><operator pos:start="281:60" pos:end="281:60">*</operator><name pos:start="281:61" pos:end="281:71"><name pos:start="281:61" pos:end="281:61">p</name><operator pos:start="281:62" pos:end="281:63">-&gt;</operator><name pos:start="281:64" pos:end="281:71">prev_lsp</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="287:5" pos:end="287:43"><expr pos:start="287:5" pos:end="287:42"><name pos:start="287:5" pos:end="287:22"><name pos:start="287:5" pos:end="287:5">p</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:22">past_frame_type</name></name> <operator pos:start="287:24" pos:end="287:24">=</operator> <name pos:start="287:26" pos:end="287:42"><name pos:start="287:26" pos:end="287:26">p</name><operator pos:start="287:27" pos:end="287:28">-&gt;</operator><name pos:start="287:29" pos:end="287:42">cur_frame_type</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:66"><expr pos:start="291:5" pos:end="291:65"><call pos:start="291:5" pos:end="291:65"><name pos:start="291:5" pos:end="291:10">memcpy</name><argument_list pos:start="291:11" pos:end="291:65">(<argument pos:start="291:12" pos:end="291:19"><expr pos:start="291:12" pos:end="291:19"><name pos:start="291:12" pos:end="291:19"><name pos:start="291:12" pos:end="291:12">p</name><operator pos:start="291:13" pos:end="291:14">-&gt;</operator><name pos:start="291:15" pos:end="291:19">audio</name></name></expr></argument>, <argument pos:start="291:22" pos:end="291:33"><expr pos:start="291:22" pos:end="291:33"><name pos:start="291:22" pos:end="291:33"><name pos:start="291:22" pos:end="291:22">p</name><operator pos:start="291:23" pos:end="291:24">-&gt;</operator><name pos:start="291:25" pos:end="291:33">synth_mem</name></name></expr></argument>, <argument pos:start="291:36" pos:end="291:64"><expr pos:start="291:36" pos:end="291:64"><name pos:start="291:36" pos:end="291:44">LPC_ORDER</name> <operator pos:start="291:46" pos:end="291:46">*</operator> <sizeof pos:start="291:48" pos:end="291:64">sizeof<argument_list pos:start="291:54" pos:end="291:64">(<argument pos:start="291:55" pos:end="291:63"><expr pos:start="291:55" pos:end="291:63"><operator pos:start="291:55" pos:end="291:55">*</operator><name pos:start="291:56" pos:end="291:63"><name pos:start="291:56" pos:end="291:56">p</name><operator pos:start="291:57" pos:end="291:58">-&gt;</operator><name pos:start="291:59" pos:end="291:63">audio</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="293:5" pos:end="299:51">for <control pos:start="293:9" pos:end="293:69">(<init pos:start="293:10" pos:end="293:30"><expr pos:start="293:10" pos:end="293:22"><name pos:start="293:10" pos:end="293:10">i</name> <operator pos:start="293:12" pos:end="293:12">=</operator> <name pos:start="293:14" pos:end="293:22">LPC_ORDER</name></expr><operator pos:start="293:23" pos:end="293:23">,</operator> <expr pos:start="293:25" pos:end="293:29"><name pos:start="293:25" pos:end="293:25">j</name> <operator pos:start="293:27" pos:end="293:27">=</operator> <literal type="number" pos:start="293:29" pos:end="293:29">0</literal></expr>;</init> <condition pos:start="293:32" pos:end="293:45"><expr pos:start="293:32" pos:end="293:44"><name pos:start="293:32" pos:end="293:32">j</name> <operator pos:start="293:34" pos:end="293:34">&lt;</operator> <name pos:start="293:36" pos:end="293:44">SUBFRAMES</name></expr>;</condition> <incr pos:start="293:47" pos:end="293:68"><expr pos:start="293:47" pos:end="293:63"><name pos:start="293:47" pos:end="293:47">i</name> <operator pos:start="293:49" pos:end="293:50">+=</operator> <name pos:start="293:52" pos:end="293:63">SUBFRAME_LEN</name></expr><operator pos:start="293:64" pos:end="293:64">,</operator> <expr pos:start="293:66" pos:end="293:68"><name pos:start="293:66" pos:end="293:66">j</name><operator pos:start="293:67" pos:end="293:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="295:9" pos:end="299:51"><block_content pos:start="295:9" pos:end="299:51">

        <expr_stmt pos:start="295:9" pos:end="299:51"><expr pos:start="295:9" pos:end="299:50"><call pos:start="295:9" pos:end="299:50"><name pos:start="295:9" pos:end="295:35">ff_celp_lp_synthesis_filter</name><argument_list pos:start="295:36" pos:end="299:50">(<argument pos:start="295:37" pos:end="295:48"><expr pos:start="295:37" pos:end="295:48"><name pos:start="295:37" pos:end="295:44"><name pos:start="295:37" pos:end="295:37">p</name><operator pos:start="295:38" pos:end="295:39">-&gt;</operator><name pos:start="295:40" pos:end="295:44">audio</name></name> <operator pos:start="295:46" pos:end="295:46">+</operator> <name pos:start="295:48" pos:end="295:48">i</name></expr></argument>, <argument pos:start="295:51" pos:end="295:69"><expr pos:start="295:51" pos:end="295:69"><operator pos:start="295:51" pos:end="295:51">&amp;</operator><name pos:start="295:52" pos:end="295:69"><name pos:start="295:52" pos:end="295:54">lpc</name><index pos:start="295:55" pos:end="295:69">[<expr pos:start="295:56" pos:end="295:68"><name pos:start="295:56" pos:end="295:56">j</name> <operator pos:start="295:58" pos:end="295:58">*</operator> <name pos:start="295:60" pos:end="295:68">LPC_ORDER</name></expr>]</index></name></expr></argument>,

                                    <argument pos:start="297:37" pos:end="297:45"><expr pos:start="297:37" pos:end="297:45"><name pos:start="297:37" pos:end="297:41">audio</name> <operator pos:start="297:43" pos:end="297:43">+</operator> <name pos:start="297:45" pos:end="297:45">i</name></expr></argument>, <argument pos:start="297:48" pos:end="297:59"><expr pos:start="297:48" pos:end="297:59"><name pos:start="297:48" pos:end="297:59">SUBFRAME_LEN</name></expr></argument>, <argument pos:start="297:62" pos:end="297:70"><expr pos:start="297:62" pos:end="297:70"><name pos:start="297:62" pos:end="297:70">LPC_ORDER</name></expr></argument>,

                                    <argument pos:start="299:37" pos:end="299:37"><expr pos:start="299:37" pos:end="299:37"><literal type="number" pos:start="299:37" pos:end="299:37">0</literal></expr></argument>, <argument pos:start="299:40" pos:end="299:40"><expr pos:start="299:40" pos:end="299:40"><literal type="number" pos:start="299:40" pos:end="299:40">1</literal></expr></argument>, <argument pos:start="299:43" pos:end="299:49"><expr pos:start="299:43" pos:end="299:49"><literal type="number" pos:start="299:43" pos:end="299:43">1</literal> <operator pos:start="299:45" pos:end="299:46">&lt;&lt;</operator> <literal type="number" pos:start="299:48" pos:end="299:49">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="301:5" pos:end="301:78"><expr pos:start="301:5" pos:end="301:77"><call pos:start="301:5" pos:end="301:77"><name pos:start="301:5" pos:end="301:10">memcpy</name><argument_list pos:start="301:11" pos:end="301:77">(<argument pos:start="301:12" pos:end="301:23"><expr pos:start="301:12" pos:end="301:23"><name pos:start="301:12" pos:end="301:23"><name pos:start="301:12" pos:end="301:12">p</name><operator pos:start="301:13" pos:end="301:14">-&gt;</operator><name pos:start="301:15" pos:end="301:23">synth_mem</name></name></expr></argument>, <argument pos:start="301:26" pos:end="301:45"><expr pos:start="301:26" pos:end="301:45"><name pos:start="301:26" pos:end="301:33"><name pos:start="301:26" pos:end="301:26">p</name><operator pos:start="301:27" pos:end="301:28">-&gt;</operator><name pos:start="301:29" pos:end="301:33">audio</name></name> <operator pos:start="301:35" pos:end="301:35">+</operator> <name pos:start="301:37" pos:end="301:45">FRAME_LEN</name></expr></argument>, <argument pos:start="301:48" pos:end="301:76"><expr pos:start="301:48" pos:end="301:76"><name pos:start="301:48" pos:end="301:56">LPC_ORDER</name> <operator pos:start="301:58" pos:end="301:58">*</operator> <sizeof pos:start="301:60" pos:end="301:76">sizeof<argument_list pos:start="301:66" pos:end="301:76">(<argument pos:start="301:67" pos:end="301:75"><expr pos:start="301:67" pos:end="301:75"><operator pos:start="301:67" pos:end="301:67">*</operator><name pos:start="301:68" pos:end="301:75"><name pos:start="301:68" pos:end="301:68">p</name><operator pos:start="301:69" pos:end="301:70">-&gt;</operator><name pos:start="301:71" pos:end="301:75">audio</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="305:5" pos:end="315:5"><if pos:start="305:5" pos:end="309:5">if <condition pos:start="305:8" pos:end="305:22">(<expr pos:start="305:9" pos:end="305:21"><name pos:start="305:9" pos:end="305:21"><name pos:start="305:9" pos:end="305:9">p</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:21">postfilter</name></name></expr>)</condition> <block pos:start="305:24" pos:end="309:5">{<block_content pos:start="307:9" pos:end="307:50">

        <expr_stmt pos:start="307:9" pos:end="307:50"><expr pos:start="307:9" pos:end="307:49"><call pos:start="307:9" pos:end="307:49"><name pos:start="307:9" pos:end="307:26">formant_postfilter</name><argument_list pos:start="307:27" pos:end="307:49">(<argument pos:start="307:28" pos:end="307:28"><expr pos:start="307:28" pos:end="307:28"><name pos:start="307:28" pos:end="307:28">p</name></expr></argument>, <argument pos:start="307:31" pos:end="307:33"><expr pos:start="307:31" pos:end="307:33"><name pos:start="307:31" pos:end="307:33">lpc</name></expr></argument>, <argument pos:start="307:36" pos:end="307:43"><expr pos:start="307:36" pos:end="307:43"><name pos:start="307:36" pos:end="307:43"><name pos:start="307:36" pos:end="307:36">p</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:43">audio</name></name></expr></argument>, <argument pos:start="307:46" pos:end="307:48"><expr pos:start="307:46" pos:end="307:48"><name pos:start="307:46" pos:end="307:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="309:7" pos:end="315:5">else <block pos:start="309:12" pos:end="315:5">{<block_content pos:start="311:9" pos:end="313:65"> <comment type="line" pos:start="309:14" pos:end="309:70">// if output is not postfiltered it should be scaled by 2</comment>

        <for pos:start="311:9" pos:end="313:65">for <control pos:start="311:13" pos:end="311:39">(<init pos:start="311:14" pos:end="311:19"><expr pos:start="311:14" pos:end="311:18"><name pos:start="311:14" pos:end="311:14">i</name> <operator pos:start="311:16" pos:end="311:16">=</operator> <literal type="number" pos:start="311:18" pos:end="311:18">0</literal></expr>;</init> <condition pos:start="311:21" pos:end="311:34"><expr pos:start="311:21" pos:end="311:33"><name pos:start="311:21" pos:end="311:21">i</name> <operator pos:start="311:23" pos:end="311:23">&lt;</operator> <name pos:start="311:25" pos:end="311:33">FRAME_LEN</name></expr>;</condition> <incr pos:start="311:36" pos:end="311:38"><expr pos:start="311:36" pos:end="311:38"><name pos:start="311:36" pos:end="311:36">i</name><operator pos:start="311:37" pos:end="311:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="313:13" pos:end="313:65"><block_content pos:start="313:13" pos:end="313:65">

            <expr_stmt pos:start="313:13" pos:end="313:65"><expr pos:start="313:13" pos:end="313:64"><name pos:start="313:13" pos:end="313:18"><name pos:start="313:13" pos:end="313:15">out</name><index pos:start="313:16" pos:end="313:18">[<expr pos:start="313:17" pos:end="313:17"><name pos:start="313:17" pos:end="313:17">i</name></expr>]</index></name> <operator pos:start="313:20" pos:end="313:20">=</operator> <call pos:start="313:22" pos:end="313:64"><name pos:start="313:22" pos:end="313:34">av_clip_int16</name><argument_list pos:start="313:35" pos:end="313:64">(<argument pos:start="313:36" pos:end="313:63"><expr pos:start="313:36" pos:end="313:63"><name pos:start="313:36" pos:end="313:58"><name pos:start="313:36" pos:end="313:36">p</name><operator pos:start="313:37" pos:end="313:38">-&gt;</operator><name pos:start="313:39" pos:end="313:43">audio</name><index pos:start="313:44" pos:end="313:58">[<expr pos:start="313:45" pos:end="313:57"><name pos:start="313:45" pos:end="313:53">LPC_ORDER</name> <operator pos:start="313:55" pos:end="313:55">+</operator> <name pos:start="313:57" pos:end="313:57">i</name></expr>]</index></name> <operator pos:start="313:60" pos:end="313:61">&lt;&lt;</operator> <literal type="number" pos:start="313:63" pos:end="313:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="319:5" pos:end="319:23"><expr pos:start="319:5" pos:end="319:22"><operator pos:start="319:5" pos:end="319:5">*</operator><name pos:start="319:6" pos:end="319:18">got_frame_ptr</name> <operator pos:start="319:20" pos:end="319:20">=</operator> <literal type="number" pos:start="319:22" pos:end="319:22">1</literal></expr>;</expr_stmt>



    <return pos:start="323:5" pos:end="323:32">return <expr pos:start="323:12" pos:end="323:31"><name pos:start="323:12" pos:end="323:31"><name pos:start="323:12" pos:end="323:21">frame_size</name><index pos:start="323:22" pos:end="323:31">[<expr pos:start="323:23" pos:end="323:30"><name pos:start="323:23" pos:end="323:30">dec_mode</name></expr>]</index></name></expr>;</return>

</block_content>}</block></function>
</unit>
