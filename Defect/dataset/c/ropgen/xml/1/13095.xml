<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13095.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">ram_save_target_page</name><parameter_list pos:start="1:32" pos:end="9:57">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:46">MigrationState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">ms</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:60">QEMUFile</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">f</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:40">RAMBlock</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">block</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:66"><decl pos:start="3:50" pos:end="3:66"><type pos:start="3:50" pos:end="3:66"><name pos:start="3:50" pos:end="3:59">ram_addr_t</name></type> <name pos:start="3:61" pos:end="3:66">offset</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:47"><decl pos:start="5:33" pos:end="5:47"><type pos:start="5:33" pos:end="5:47"><name pos:start="5:33" pos:end="5:36">bool</name></type> <name pos:start="5:38" pos:end="5:47">last_stage</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:59"><decl pos:start="7:33" pos:end="7:59"><type pos:start="7:33" pos:end="7:59"><name pos:start="7:33" pos:end="7:40">uint64_t</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:59">bytes_transferred</name></decl></parameter>,

                                <parameter pos:start="9:33" pos:end="9:56"><decl pos:start="9:33" pos:end="9:56"><type pos:start="9:33" pos:end="9:56"><name pos:start="9:33" pos:end="9:42">ram_addr_t</name></type> <name pos:start="9:44" pos:end="9:56">dirty_ram_abs</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="63:1">{<block_content pos:start="13:5" pos:end="61:15">

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">res</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:55">/* Check the pages is dirty and if it is send it */</comment>

    <if_stmt pos:start="19:5" pos:end="57:5"><if pos:start="19:5" pos:end="57:5">if <condition pos:start="19:8" pos:end="19:52">(<expr pos:start="19:9" pos:end="19:51"><call pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:36">migration_bitmap_clear_dirty</name><argument_list pos:start="19:37" pos:end="19:51">(<argument pos:start="19:38" pos:end="19:50"><expr pos:start="19:38" pos:end="19:50"><name pos:start="19:38" pos:end="19:50">dirty_ram_abs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:54" pos:end="57:5">{<block_content pos:start="21:9" pos:end="55:32">

        <decl_stmt pos:start="21:9" pos:end="21:33"><decl pos:start="21:9" pos:end="21:32"><type pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:16">unsigned</name> <name pos:start="21:18" pos:end="21:21">long</name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:32">unsentmap</name></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="37:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:60">(<expr pos:start="23:13" pos:end="23:59"><name pos:start="23:13" pos:end="23:30">compression_switch</name> <operator pos:start="23:32" pos:end="23:33">&amp;&amp;</operator> <call pos:start="23:35" pos:end="23:59"><name pos:start="23:35" pos:end="23:57">migrate_use_compression</name><argument_list pos:start="23:58" pos:end="23:59">()</argument_list></call></expr>)</condition> <block pos:start="23:62" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:62">

            <expr_stmt pos:start="25:13" pos:end="29:62"><expr pos:start="25:13" pos:end="29:61"><name pos:start="25:13" pos:end="25:15">res</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="29:61"><name pos:start="25:19" pos:end="25:42">ram_save_compressed_page</name><argument_list pos:start="25:43" pos:end="29:61">(<argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">f</name></expr></argument>, <argument pos:start="25:47" pos:end="25:51"><expr pos:start="25:47" pos:end="25:51"><name pos:start="25:47" pos:end="25:51">block</name></expr></argument>, <argument pos:start="25:54" pos:end="25:59"><expr pos:start="25:54" pos:end="25:59"><name pos:start="25:54" pos:end="25:59">offset</name></expr></argument>,

                                           <argument pos:start="27:44" pos:end="27:53"><expr pos:start="27:44" pos:end="27:53"><name pos:start="27:44" pos:end="27:53">last_stage</name></expr></argument>,

                                           <argument pos:start="29:44" pos:end="29:60"><expr pos:start="29:44" pos:end="29:60"><name pos:start="29:44" pos:end="29:60">bytes_transferred</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="37:9">else <block pos:start="31:16" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:51">

            <expr_stmt pos:start="33:13" pos:end="35:51"><expr pos:start="33:13" pos:end="35:50"><name pos:start="33:13" pos:end="33:15">res</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="35:50"><name pos:start="33:19" pos:end="33:31">ram_save_page</name><argument_list pos:start="33:32" pos:end="35:50">(<argument pos:start="33:33" pos:end="33:33"><expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">f</name></expr></argument>, <argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><name pos:start="33:36" pos:end="33:40">block</name></expr></argument>, <argument pos:start="33:43" pos:end="33:48"><expr pos:start="33:43" pos:end="33:48"><name pos:start="33:43" pos:end="33:48">offset</name></expr></argument>, <argument pos:start="33:51" pos:end="33:60"><expr pos:start="33:51" pos:end="33:60"><name pos:start="33:51" pos:end="33:60">last_stage</name></expr></argument>,

                                <argument pos:start="35:33" pos:end="35:49"><expr pos:start="35:33" pos:end="35:49"><name pos:start="35:33" pos:end="35:49">bytes_transferred</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">res</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:23">

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:70"><expr pos:start="47:9" pos:end="47:69"><name pos:start="47:9" pos:end="47:17">unsentmap</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:58"><name pos:start="47:21" pos:end="47:35">atomic_rcu_read</name><argument_list pos:start="47:36" pos:end="47:58">(<argument pos:start="47:37" pos:end="47:57"><expr pos:start="47:37" pos:end="47:57"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:57">migration_bitmap_rcu</name></expr></argument>)</argument_list></call><operator pos:start="47:59" pos:end="47:60">-&gt;</operator><name pos:start="47:61" pos:end="47:69">unsentmap</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:22">(<expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:21">unsentmap</name></expr>)</condition> <block pos:start="49:24" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:68">

            <expr_stmt pos:start="51:13" pos:end="51:68"><expr pos:start="51:13" pos:end="51:67"><call pos:start="51:13" pos:end="51:67"><name pos:start="51:13" pos:end="51:21">clear_bit</name><argument_list pos:start="51:22" pos:end="51:67">(<argument pos:start="51:23" pos:end="51:55"><expr pos:start="51:23" pos:end="51:55"><name pos:start="51:23" pos:end="51:35">dirty_ram_abs</name> <operator pos:start="51:37" pos:end="51:38">&gt;&gt;</operator> <name pos:start="51:40" pos:end="51:55">TARGET_PAGE_BITS</name></expr></argument>, <argument pos:start="51:58" pos:end="51:66"><expr pos:start="51:58" pos:end="51:66"><name pos:start="51:58" pos:end="51:66">unsentmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:23">last_sent_block</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:31">block</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
