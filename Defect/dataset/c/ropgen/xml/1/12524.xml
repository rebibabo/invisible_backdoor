<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12524.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">av_seek_frame_binary</name><parameter_list pos:start="1:25" pos:end="1:92">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:61">stream_index</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:80"><decl pos:start="1:64" pos:end="1:80"><type pos:start="1:64" pos:end="1:80"><name pos:start="1:64" pos:end="1:70">int64_t</name></type> <name pos:start="1:72" pos:end="1:80">target_ts</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:91"><decl pos:start="1:83" pos:end="1:91"><type pos:start="1:83" pos:end="1:91"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:91">flags</name></decl></parameter>)</parameter_list><block pos:start="1:93" pos:end="125:1">{<block_content pos:start="3:5" pos:end="123:13">

    <decl_stmt pos:start="3:5" pos:end="3:36"><decl pos:start="3:5" pos:end="3:35"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">AVInputFormat</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:23">avif</name><init pos:start="3:24" pos:end="3:35">= <expr pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:35"><name pos:start="3:26" pos:end="3:26">s</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:35">iformat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:67"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:21">av_uninit</name><argument_list pos:start="5:22" pos:end="5:30">(<argument pos:start="5:23" pos:end="5:29"><expr pos:start="5:23" pos:end="5:29"><name pos:start="5:23" pos:end="5:29">pos_min</name></expr></argument>)</argument_list></decl>, <decl pos:start="5:33" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:33" pos:end="5:41">av_uninit</name><argument_list pos:start="5:42" pos:end="5:50">(<argument pos:start="5:43" pos:end="5:49"><expr pos:start="5:43" pos:end="5:49"><name pos:start="5:43" pos:end="5:49">pos_max</name></expr></argument>)</argument_list></decl>, <decl pos:start="5:53" pos:end="5:55"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:53" pos:end="5:55">pos</name></decl>, <decl pos:start="5:58" pos:end="5:66"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:58" pos:end="5:66">pos_limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:18">ts_min</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:26">ts_max</name></decl>, <decl pos:start="7:29" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:29" pos:end="7:30">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="22:0"><if pos:start="15:5" pos:end="22:0">if <condition pos:start="15:8" pos:end="15:25">(<expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:20">stream_index</name> <operator pos:start="15:22" pos:end="15:22">&lt;</operator> <literal type="number" pos:start="15:24" pos:end="15:24">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="22:0"><block_content pos:start="17:9" pos:end="22:0">

        <return pos:start="17:9" pos:end="22:0">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="21:1" pos:end="21:17">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:17">DEBUG_SEEK</name></cpp:ifdef>

    <expr_stmt pos:start="23:5" pos:end="26:0"><expr pos:start="23:5" pos:end="23:81"><call pos:start="23:5" pos:end="23:81"><name pos:start="23:5" pos:end="23:10">av_log</name><argument_list pos:start="23:11" pos:end="23:81">(<argument pos:start="23:12" pos:end="23:12"><expr pos:start="23:12" pos:end="23:12"><name pos:start="23:12" pos:end="23:12">s</name></expr></argument>, <argument pos:start="23:15" pos:end="23:26"><expr pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="23:29" pos:end="23:55"><expr pos:start="23:29" pos:end="23:55"><literal type="string" pos:start="23:29" pos:end="23:45">"read_seek: %d %"</literal><name pos:start="23:46" pos:end="23:51">PRId64</name><literal type="string" pos:start="23:52" pos:end="23:55">"\n"</literal></expr></argument>, <argument pos:start="23:58" pos:end="23:69"><expr pos:start="23:58" pos:end="23:69"><name pos:start="23:58" pos:end="23:69">stream_index</name></expr></argument>, <argument pos:start="23:72" pos:end="23:80"><expr pos:start="23:72" pos:end="23:80"><name pos:start="23:72" pos:end="23:80">target_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="29:5" pos:end="31:27"><expr pos:start="29:5" pos:end="31:26"><name pos:start="29:5" pos:end="29:10">ts_max</name><operator pos:start="29:11" pos:end="29:11">=</operator>

    <name pos:start="31:5" pos:end="31:10">ts_min</name><operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:26">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:18"><expr pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:13">pos_limit</name><operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="33:20" pos:end="33:61">//gcc falsely says it may be uninitialized</comment>



    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:7">=</operator> <name pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">streams</name><index pos:start="37:19" pos:end="37:32">[<expr pos:start="37:20" pos:end="37:31"><name pos:start="37:20" pos:end="37:31">stream_index</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="101:5"><if pos:start="39:5" pos:end="101:5">if<condition pos:start="39:7" pos:end="39:25">(<expr pos:start="39:8" pos:end="39:24"><name pos:start="39:8" pos:end="39:24"><name pos:start="39:8" pos:end="39:9">st</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:24">index_entries</name></name></expr>)</condition><block pos:start="39:26" pos:end="101:5">{<block_content pos:start="41:9" pos:end="99:9">

        <decl_stmt pos:start="41:9" pos:end="41:24"><decl pos:start="41:9" pos:end="41:23"><type pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:20">AVIndexEntry</name> <modifier pos:start="41:22" pos:end="41:22">*</modifier></type><name pos:start="41:23" pos:end="41:23">e</name></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:86"><expr pos:start="45:9" pos:end="45:85"><name pos:start="45:9" pos:end="45:13">index</name><operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:85"><name pos:start="45:16" pos:end="45:40">av_index_search_timestamp</name><argument_list pos:start="45:41" pos:end="45:85">(<argument pos:start="45:42" pos:end="45:43"><expr pos:start="45:42" pos:end="45:43"><name pos:start="45:42" pos:end="45:43">st</name></expr></argument>, <argument pos:start="45:46" pos:end="45:54"><expr pos:start="45:46" pos:end="45:54"><name pos:start="45:46" pos:end="45:54">target_ts</name></expr></argument>, <argument pos:start="45:57" pos:end="45:84"><expr pos:start="45:57" pos:end="45:84"><name pos:start="45:57" pos:end="45:61">flags</name> <operator pos:start="45:63" pos:end="45:63">|</operator> <name pos:start="45:65" pos:end="45:84">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="45:88" pos:end="45:189">//FIXME whole func must be checked for non-keyframe entries in index case, especially read_timestamp()</comment>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:13">index</name><operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:20">FFMAX</name><argument_list pos:start="47:21" pos:end="47:30">(<argument pos:start="47:22" pos:end="47:26"><expr pos:start="47:22" pos:end="47:26"><name pos:start="47:22" pos:end="47:26">index</name></expr></argument>, <argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:9">e</name><operator pos:start="49:10" pos:end="49:10">=</operator> <operator pos:start="49:12" pos:end="49:12">&amp;</operator><name pos:start="49:13" pos:end="49:36"><name pos:start="49:13" pos:end="49:14">st</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:29">index_entries</name><index pos:start="49:30" pos:end="49:36">[<expr pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:35">index</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="71:9"><if pos:start="53:9" pos:end="67:9">if<condition pos:start="53:11" pos:end="53:66">(<expr pos:start="53:12" pos:end="53:65"><name pos:start="53:12" pos:end="53:23"><name pos:start="53:12" pos:end="53:12">e</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:23">timestamp</name></name> <operator pos:start="53:25" pos:end="53:26">&lt;=</operator> <name pos:start="53:28" pos:end="53:36">target_ts</name> <operator pos:start="53:38" pos:end="53:39">||</operator> <name pos:start="53:41" pos:end="53:46"><name pos:start="53:41" pos:end="53:41">e</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">pos</name></name> <operator pos:start="53:48" pos:end="53:49">==</operator> <name pos:start="53:51" pos:end="53:65"><name pos:start="53:51" pos:end="53:51">e</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:65">min_distance</name></name></expr>)</condition><block pos:start="53:67" pos:end="67:9">{<block_content pos:start="55:13" pos:end="66:0">

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:19">pos_min</name><operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:27"><name pos:start="55:22" pos:end="55:22">e</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:27">pos</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="60:0"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:18">ts_min</name><operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:21">e</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:32">timestamp</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="59:1" pos:end="59:17">#<cpp:directive pos:start="59:2" pos:end="59:6">ifdef</cpp:directive> <name pos:start="59:8" pos:end="59:17">DEBUG_SEEK</name></cpp:ifdef>

            <expr_stmt pos:start="61:13" pos:end="66:0"><expr pos:start="61:13" pos:end="63:34"><call pos:start="61:13" pos:end="63:34"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="63:34">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:37" pos:end="61:90"><expr pos:start="61:37" pos:end="61:90"><literal type="string" pos:start="61:37" pos:end="61:62">"using cached pos_min=0x%"</literal><name pos:start="61:63" pos:end="61:68">PRIx64</name><literal type="string" pos:start="61:69" pos:end="61:80">" dts_min=%"</literal><name pos:start="61:81" pos:end="61:86">PRId64</name><literal type="string" pos:start="61:87" pos:end="61:90">"\n"</literal></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:26"><expr pos:start="63:20" pos:end="63:26"><name pos:start="63:20" pos:end="63:26">pos_min</name></expr></argument>,<argument pos:start="63:28" pos:end="63:33"><expr pos:start="63:28" pos:end="63:33"><name pos:start="63:28" pos:end="63:33">ts_min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if><else pos:start="67:10" pos:end="71:9">else<block pos:start="67:14" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:29">

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><call pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:18">assert</name><argument_list pos:start="69:19" pos:end="69:28">(<argument pos:start="69:20" pos:end="69:27"><expr pos:start="69:20" pos:end="69:27"><name pos:start="69:20" pos:end="69:24">index</name><operator pos:start="69:25" pos:end="69:26">==</operator><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:87"><expr pos:start="75:9" pos:end="75:86"><name pos:start="75:9" pos:end="75:13">index</name><operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:86"><name pos:start="75:16" pos:end="75:40">av_index_search_timestamp</name><argument_list pos:start="75:41" pos:end="75:86">(<argument pos:start="75:42" pos:end="75:43"><expr pos:start="75:42" pos:end="75:43"><name pos:start="75:42" pos:end="75:43">st</name></expr></argument>, <argument pos:start="75:46" pos:end="75:54"><expr pos:start="75:46" pos:end="75:54"><name pos:start="75:46" pos:end="75:54">target_ts</name></expr></argument>, <argument pos:start="75:57" pos:end="75:85"><expr pos:start="75:57" pos:end="75:85"><name pos:start="75:57" pos:end="75:61">flags</name> <operator pos:start="75:63" pos:end="75:63">&amp;</operator> <operator pos:start="75:65" pos:end="75:65">~</operator><name pos:start="75:66" pos:end="75:85">AVSEEK_FLAG_BACKWARD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:45"><expr pos:start="77:9" pos:end="77:44"><call pos:start="77:9" pos:end="77:44"><name pos:start="77:9" pos:end="77:14">assert</name><argument_list pos:start="77:15" pos:end="77:44">(<argument pos:start="77:16" pos:end="77:43"><expr pos:start="77:16" pos:end="77:43"><name pos:start="77:16" pos:end="77:20">index</name> <operator pos:start="77:22" pos:end="77:22">&lt;</operator> <name pos:start="77:24" pos:end="77:43"><name pos:start="77:24" pos:end="77:25">st</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:43">nb_index_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="99:9"><if pos:start="79:9" pos:end="99:9">if<condition pos:start="79:11" pos:end="79:22">(<expr pos:start="79:12" pos:end="79:21"><name pos:start="79:12" pos:end="79:16">index</name> <operator pos:start="79:18" pos:end="79:19">&gt;=</operator> <literal type="number" pos:start="79:21" pos:end="79:21">0</literal></expr>)</condition><block pos:start="79:23" pos:end="99:9">{<block_content pos:start="81:13" pos:end="98:0">

            <expr_stmt pos:start="81:13" pos:end="81:41"><expr pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:13">e</name><operator pos:start="81:14" pos:end="81:14">=</operator> <operator pos:start="81:16" pos:end="81:16">&amp;</operator><name pos:start="81:17" pos:end="81:40"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:33">index_entries</name><index pos:start="81:34" pos:end="81:40">[<expr pos:start="81:35" pos:end="81:39"><name pos:start="81:35" pos:end="81:39">index</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:46"><expr pos:start="83:13" pos:end="83:45"><call pos:start="83:13" pos:end="83:45"><name pos:start="83:13" pos:end="83:18">assert</name><argument_list pos:start="83:19" pos:end="83:45">(<argument pos:start="83:20" pos:end="83:44"><expr pos:start="83:20" pos:end="83:44"><name pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:20">e</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:31">timestamp</name></name> <operator pos:start="83:33" pos:end="83:34">&gt;=</operator> <name pos:start="83:36" pos:end="83:44">target_ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:28"><expr pos:start="85:13" pos:end="85:27"><name pos:start="85:13" pos:end="85:19">pos_max</name><operator pos:start="85:20" pos:end="85:20">=</operator> <name pos:start="85:22" pos:end="85:27"><name pos:start="85:22" pos:end="85:22">e</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:27">pos</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:33"><expr pos:start="87:13" pos:end="87:32"><name pos:start="87:13" pos:end="87:18">ts_max</name><operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:21">e</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:32">timestamp</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="92:0"><expr pos:start="89:13" pos:end="89:48"><name pos:start="89:13" pos:end="89:21">pos_limit</name><operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:30">pos_max</name> <operator pos:start="89:32" pos:end="89:32">-</operator> <name pos:start="89:34" pos:end="89:48"><name pos:start="89:34" pos:end="89:34">e</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:48">min_distance</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="91:1" pos:end="91:17">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:17">DEBUG_SEEK</name></cpp:ifdef>

            <expr_stmt pos:start="93:13" pos:end="98:0"><expr pos:start="93:13" pos:end="95:45"><call pos:start="93:13" pos:end="95:45"><name pos:start="93:13" pos:end="93:18">av_log</name><argument_list pos:start="93:19" pos:end="95:45">(<argument pos:start="93:20" pos:end="93:20"><expr pos:start="93:20" pos:end="93:20"><name pos:start="93:20" pos:end="93:20">s</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:37" pos:end="93:112"><expr pos:start="93:37" pos:end="93:112"><literal type="string" pos:start="93:37" pos:end="93:62">"using cached pos_max=0x%"</literal><name pos:start="93:63" pos:end="93:68">PRIx64</name><literal type="string" pos:start="93:69" pos:end="93:84">" pos_limit=0x%"</literal><name pos:start="93:85" pos:end="93:90">PRIx64</name><literal type="string" pos:start="93:91" pos:end="93:102">" dts_max=%"</literal><name pos:start="93:103" pos:end="93:108">PRId64</name><literal type="string" pos:start="93:109" pos:end="93:112">"\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:26"><expr pos:start="95:20" pos:end="95:26"><name pos:start="95:20" pos:end="95:26">pos_max</name></expr></argument>,<argument pos:start="95:28" pos:end="95:36"><expr pos:start="95:28" pos:end="95:36"><name pos:start="95:28" pos:end="95:36">pos_limit</name></expr></argument>, <argument pos:start="95:39" pos:end="95:44"><expr pos:start="95:39" pos:end="95:44"><name pos:start="95:39" pos:end="95:44">ts_max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:130"><expr pos:start="105:5" pos:end="105:129"><name pos:start="105:5" pos:end="105:7">pos</name><operator pos:start="105:8" pos:end="105:8">=</operator> <call pos:start="105:10" pos:end="105:129"><name pos:start="105:10" pos:end="105:22">av_gen_search</name><argument_list pos:start="105:23" pos:end="105:129">(<argument pos:start="105:24" pos:end="105:24"><expr pos:start="105:24" pos:end="105:24"><name pos:start="105:24" pos:end="105:24">s</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">stream_index</name></expr></argument>, <argument pos:start="105:41" pos:end="105:49"><expr pos:start="105:41" pos:end="105:49"><name pos:start="105:41" pos:end="105:49">target_ts</name></expr></argument>, <argument pos:start="105:52" pos:end="105:58"><expr pos:start="105:52" pos:end="105:58"><name pos:start="105:52" pos:end="105:58">pos_min</name></expr></argument>, <argument pos:start="105:61" pos:end="105:67"><expr pos:start="105:61" pos:end="105:67"><name pos:start="105:61" pos:end="105:67">pos_max</name></expr></argument>, <argument pos:start="105:70" pos:end="105:78"><expr pos:start="105:70" pos:end="105:78"><name pos:start="105:70" pos:end="105:78">pos_limit</name></expr></argument>, <argument pos:start="105:81" pos:end="105:86"><expr pos:start="105:81" pos:end="105:86"><name pos:start="105:81" pos:end="105:86">ts_min</name></expr></argument>, <argument pos:start="105:89" pos:end="105:94"><expr pos:start="105:89" pos:end="105:94"><name pos:start="105:89" pos:end="105:94">ts_max</name></expr></argument>, <argument pos:start="105:97" pos:end="105:101"><expr pos:start="105:97" pos:end="105:101"><name pos:start="105:97" pos:end="105:101">flags</name></expr></argument>, <argument pos:start="105:104" pos:end="105:106"><expr pos:start="105:104" pos:end="105:106"><operator pos:start="105:104" pos:end="105:104">&amp;</operator><name pos:start="105:105" pos:end="105:106">ts</name></expr></argument>, <argument pos:start="105:109" pos:end="105:128"><expr pos:start="105:109" pos:end="105:128"><name pos:start="105:109" pos:end="105:128"><name pos:start="105:109" pos:end="105:112">avif</name><operator pos:start="105:113" pos:end="105:114">-&gt;</operator><name pos:start="105:115" pos:end="105:128">read_timestamp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="109:18"><if pos:start="107:5" pos:end="109:18">if<condition pos:start="107:7" pos:end="107:13">(<expr pos:start="107:8" pos:end="107:12"><name pos:start="107:8" pos:end="107:10">pos</name><operator pos:start="107:11" pos:end="107:11">&lt;</operator><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:18"><block_content pos:start="109:9" pos:end="109:18">

        <return pos:start="109:9" pos:end="109:18">return <expr pos:start="109:16" pos:end="109:17"><operator pos:start="109:16" pos:end="109:16">-</operator><literal type="number" pos:start="109:17" pos:end="109:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:21">/* do the seek */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:36"><expr pos:start="115:5" pos:end="115:35"><call pos:start="115:5" pos:end="115:35"><name pos:start="115:5" pos:end="115:13">url_fseek</name><argument_list pos:start="115:14" pos:end="115:35">(<argument pos:start="115:15" pos:end="115:19"><expr pos:start="115:15" pos:end="115:19"><name pos:start="115:15" pos:end="115:19"><name pos:start="115:15" pos:end="115:15">s</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:19">pb</name></name></expr></argument>, <argument pos:start="115:22" pos:end="115:24"><expr pos:start="115:22" pos:end="115:24"><name pos:start="115:22" pos:end="115:24">pos</name></expr></argument>, <argument pos:start="115:27" pos:end="115:34"><expr pos:start="115:27" pos:end="115:34"><name pos:start="115:27" pos:end="115:34">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:33"><expr pos:start="119:5" pos:end="119:32"><call pos:start="119:5" pos:end="119:32"><name pos:start="119:5" pos:end="119:21">av_update_cur_dts</name><argument_list pos:start="119:22" pos:end="119:32">(<argument pos:start="119:23" pos:end="119:23"><expr pos:start="119:23" pos:end="119:23"><name pos:start="119:23" pos:end="119:23">s</name></expr></argument>, <argument pos:start="119:26" pos:end="119:27"><expr pos:start="119:26" pos:end="119:27"><name pos:start="119:26" pos:end="119:27">st</name></expr></argument>, <argument pos:start="119:30" pos:end="119:31"><expr pos:start="119:30" pos:end="119:31"><name pos:start="119:30" pos:end="119:31">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
