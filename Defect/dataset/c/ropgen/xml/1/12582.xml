<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12582.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">vorbis_encode_init</name><parameter_list pos:start="1:38" pos:end="1:65">(<parameter pos:start="1:39" pos:end="1:64"><decl pos:start="1:39" pos:end="1:64"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:64">avccontext</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">vorbis_enc_context</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">venc</name> <init pos:start="5:30" pos:end="5:52">= <expr pos:start="5:32" pos:end="5:52"><name pos:start="5:32" pos:end="5:52"><name pos:start="5:32" pos:end="5:41">avccontext</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:52">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:18">avccontext</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:28">channels</name></name> <operator pos:start="9:30" pos:end="9:31">!=</operator> <literal type="number" pos:start="9:33" pos:end="9:33">2</literal></expr>)</condition> <block pos:start="9:36" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:101"><expr pos:start="11:9" pos:end="11:100"><call pos:start="11:9" pos:end="11:100"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:100">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25">avccontext</name></expr></argument>, <argument pos:start="11:28" pos:end="11:39"><expr pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:42" pos:end="11:99"><expr pos:start="11:42" pos:end="11:99"><literal type="string" pos:start="11:42" pos:end="11:99">"Current Libav Vorbis encoder only supports 2 channels.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:25">create_vorbis_context</name><argument_list pos:start="19:26" pos:end="19:43">(<argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">venc</name></expr></argument>, <argument pos:start="19:33" pos:end="19:42"><expr pos:start="19:33" pos:end="19:42"><name pos:start="19:33" pos:end="19:42">avccontext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:29"><if pos:start="23:5" pos:end="25:79">if <condition pos:start="23:8" pos:end="23:46">(<expr pos:start="23:9" pos:end="23:45"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:18">avccontext</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:25">flags</name></name> <operator pos:start="23:27" pos:end="23:27">&amp;</operator> <name pos:start="23:29" pos:end="23:45">CODEC_FLAG_QSCALE</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:79"><block_content pos:start="25:9" pos:end="25:79">

        <expr_stmt pos:start="25:9" pos:end="25:79"><expr pos:start="25:9" pos:end="25:78"><name pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:12">venc</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">quality</name></name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:50"><name pos:start="25:25" pos:end="25:34">avccontext</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:50">global_quality</name></name> <operator pos:start="25:52" pos:end="25:52">/</operator> <operator pos:start="25:54" pos:end="25:54">(</operator><name pos:start="25:55" pos:end="25:59">float</name><operator pos:start="25:60" pos:end="25:60">)</operator><name pos:start="25:61" pos:end="25:72">FF_QP2LAMBDA</name> <operator pos:start="25:74" pos:end="25:74">/</operator> <literal type="number" pos:start="25:76" pos:end="25:78">10.</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="27:5" pos:end="29:29">else<block type="pseudo" pos:start="29:9" pos:end="29:29"><block_content pos:start="29:9" pos:end="29:29">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:12">venc</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:21">quality</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:28">0.03</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:8">venc</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:17">quality</name></name> <operator pos:start="31:19" pos:end="31:20">*=</operator> <name pos:start="31:22" pos:end="31:34"><name pos:start="31:22" pos:end="31:25">venc</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:34">quality</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:90"><expr pos:start="35:5" pos:end="35:89"><name pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:14">avccontext</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:30">extradata_size</name></name> <operator pos:start="35:32" pos:end="35:32">=</operator> <call pos:start="35:34" pos:end="35:89"><name pos:start="35:34" pos:end="35:48">put_main_header</name><argument_list pos:start="35:49" pos:end="35:89">(<argument pos:start="35:50" pos:end="35:53"><expr pos:start="35:50" pos:end="35:53"><name pos:start="35:50" pos:end="35:53">venc</name></expr></argument>, <argument pos:start="35:56" pos:end="35:88"><expr pos:start="35:56" pos:end="35:88"><operator pos:start="35:56" pos:end="35:56">(</operator><name pos:start="35:57" pos:end="35:63">uint8_t</name><operator pos:start="35:64" pos:end="35:64">*</operator><operator pos:start="35:65" pos:end="35:65">*</operator><operator pos:start="35:66" pos:end="35:66">)</operator><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:88"><name pos:start="35:68" pos:end="35:77">avccontext</name><operator pos:start="35:78" pos:end="35:79">-&gt;</operator><name pos:start="35:80" pos:end="35:88">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:68"><expr pos:start="39:5" pos:end="39:67"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:14">avccontext</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:26">frame_size</name></name>     <operator pos:start="39:32" pos:end="39:32">=</operator> <literal type="number" pos:start="39:34" pos:end="39:34">1</literal> <operator pos:start="39:36" pos:end="39:37">&lt;&lt;</operator> <operator pos:start="39:39" pos:end="39:39">(</operator><name pos:start="39:40" pos:end="39:62"><name pos:start="39:40" pos:end="39:43">venc</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:59">log2_blocksize</name><index pos:start="39:60" pos:end="39:62">[<expr pos:start="39:61" pos:end="39:61"><literal type="number" pos:start="39:61" pos:end="39:61">0</literal></expr>]</index></name> <operator pos:start="39:64" pos:end="39:64">-</operator> <literal type="number" pos:start="39:66" pos:end="39:66">1</literal><operator pos:start="39:67" pos:end="39:67">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:14">avccontext</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:27">coded_frame</name></name>            <operator pos:start="43:40" pos:end="43:40">=</operator> <call pos:start="43:42" pos:end="43:62"><name pos:start="43:42" pos:end="43:60">avcodec_alloc_frame</name><argument_list pos:start="43:61" pos:end="43:62">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:14">avccontext</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:27">coded_frame</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:38">key_frame</name></name> <operator pos:start="45:40" pos:end="45:40">=</operator> <literal type="number" pos:start="45:42" pos:end="45:42">1</literal></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
