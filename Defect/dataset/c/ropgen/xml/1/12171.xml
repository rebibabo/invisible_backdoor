<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12171.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:32"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">av_unused</name> <name pos:start="1:18" pos:end="1:32">FFPsyWindowInfo</name></type> <name pos:start="1:34" pos:end="1:48">psy_3gpp_window</name><parameter_list pos:start="1:49" pos:end="7:76">(<parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:61">FFPsyContext</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">ctx</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:69"><decl pos:start="3:50" pos:end="3:69"><type pos:start="3:50" pos:end="3:69"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:62">int16_t</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:69">audio</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:66"><decl pos:start="5:50" pos:end="5:66"><type pos:start="5:50" pos:end="5:66"><specifier pos:start="5:50" pos:end="5:54">const</specifier> <name pos:start="5:56" pos:end="5:62">int16_t</name> <modifier pos:start="5:64" pos:end="5:64">*</modifier></type><name pos:start="5:65" pos:end="5:66">la</name></decl></parameter>,

                                                 <parameter pos:start="7:50" pos:end="7:60"><decl pos:start="7:50" pos:end="7:60"><type pos:start="7:50" pos:end="7:60"><name pos:start="7:50" pos:end="7:52">int</name></type> <name pos:start="7:54" pos:end="7:60">channel</name></decl></parameter>, <parameter pos:start="7:63" pos:end="7:75"><decl pos:start="7:63" pos:end="7:75"><type pos:start="7:63" pos:end="7:75"><name pos:start="7:63" pos:end="7:65">int</name></type> <name pos:start="7:67" pos:end="7:75">prev_type</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="167:1">{<block_content pos:start="11:5" pos:end="165:14">

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:71"><decl pos:start="13:5" pos:end="13:70"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">br</name>               <init pos:start="13:26" pos:end="13:70">= <expr pos:start="13:28" pos:end="13:70"><name pos:start="13:28" pos:end="13:47"><name pos:start="13:28" pos:end="13:30">ctx</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:37">avctx</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:47">bit_rate</name></name> <operator pos:start="13:49" pos:end="13:49">/</operator> <name pos:start="13:51" pos:end="13:70"><name pos:start="13:51" pos:end="13:53">ctx</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:60">avctx</name><operator pos:start="13:61" pos:end="13:62">-&gt;</operator><name pos:start="13:63" pos:end="13:70">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">attack_ratio</name>     <init pos:start="15:26" pos:end="15:48">= <expr pos:start="15:28" pos:end="15:48"><ternary pos:start="15:28" pos:end="15:48"><condition pos:start="15:28" pos:end="15:40"><expr pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:29">br</name> <operator pos:start="15:31" pos:end="15:32">&lt;=</operator> <literal type="number" pos:start="15:34" pos:end="15:38">16000</literal></expr> ?</condition><then pos:start="15:42" pos:end="15:43"> <expr pos:start="15:42" pos:end="15:43"><literal type="number" pos:start="15:42" pos:end="15:43">18</literal></expr> </then><else pos:start="15:45" pos:end="15:48">: <expr pos:start="15:47" pos:end="15:48"><literal type="number" pos:start="15:47" pos:end="15:48">10</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:64"><decl pos:start="17:5" pos:end="17:63"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">AacPsyContext</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:23">pctx</name> <init pos:start="17:25" pos:end="17:63">= <expr pos:start="17:27" pos:end="17:63"><operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:40">AacPsyContext</name><operator pos:start="17:41" pos:end="17:41">*</operator><operator pos:start="17:42" pos:end="17:42">)</operator> <name pos:start="17:44" pos:end="17:63"><name pos:start="17:44" pos:end="17:46">ctx</name><operator pos:start="17:47" pos:end="17:48">-&gt;</operator><name pos:start="17:49" pos:end="17:63">model_priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:17">AacPsyChannel</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:22">pch</name>  <init pos:start="19:25" pos:end="19:44">= <expr pos:start="19:27" pos:end="19:44"><operator pos:start="19:27" pos:end="19:27">&amp;</operator><name pos:start="19:28" pos:end="19:44"><name pos:start="19:28" pos:end="19:31">pctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">ch</name><index pos:start="19:36" pos:end="19:44">[<expr pos:start="19:37" pos:end="19:43"><name pos:start="19:37" pos:end="19:43">channel</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">uint8_t</name></type> <name pos:start="21:13" pos:end="21:20">grouping</name>     <init pos:start="21:26" pos:end="21:28">= <expr pos:start="21:28" pos:end="21:28"><literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:48"><decl pos:start="23:5" pos:end="23:47"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">next_type</name>        <init pos:start="23:26" pos:end="23:47">= <expr pos:start="23:28" pos:end="23:47"><name pos:start="23:28" pos:end="23:47"><name pos:start="23:28" pos:end="23:30">pch</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:47">next_window_seq</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:36"><decl pos:start="25:5" pos:end="25:35"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:19">FFPsyWindowInfo</name></type> <name pos:start="25:21" pos:end="25:22">wi</name>  <init pos:start="25:25" pos:end="25:35">= <expr pos:start="25:27" pos:end="25:35"><block pos:start="25:27" pos:end="25:35">{ <expr pos:start="25:29" pos:end="25:33"><block pos:start="25:29" pos:end="25:33">{ <expr pos:start="25:31" pos:end="25:31"><literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr> }</block></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="133:5"><if pos:start="29:5" pos:end="125:5">if <condition pos:start="29:8" pos:end="29:11">(<expr pos:start="29:9" pos:end="29:10"><name pos:start="29:9" pos:end="29:10">la</name></expr>)</condition> <block pos:start="29:13" pos:end="125:5">{<block_content pos:start="31:9" pos:end="123:41">

        <decl_stmt pos:start="31:9" pos:end="31:22"><decl pos:start="31:9" pos:end="31:18"><type pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:13">float</name></type> <name pos:start="31:15" pos:end="31:18"><name pos:start="31:15" pos:end="31:15">s</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">8</literal></expr>]</index></name></decl>, <decl pos:start="31:21" pos:end="31:21"><type ref="prev" pos:start="31:9" pos:end="31:13"/><name pos:start="31:21" pos:end="31:21">v</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:32"><decl pos:start="33:9" pos:end="33:31"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:27">switch_to_eight</name> <init pos:start="33:29" pos:end="33:31">= <expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:36"><decl pos:start="35:9" pos:end="35:23"><type pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:13">float</name></type> <name pos:start="35:15" pos:end="35:17">sum</name> <init pos:start="35:19" pos:end="35:23">= <expr pos:start="35:21" pos:end="35:23"><literal type="number" pos:start="35:21" pos:end="35:23">0.0</literal></expr></init></decl>, <decl pos:start="35:26" pos:end="35:35"><type ref="prev" pos:start="35:9" pos:end="35:13"/><name pos:start="35:26" pos:end="35:29">sum2</name> <init pos:start="35:31" pos:end="35:35">= <expr pos:start="35:33" pos:end="35:35"><literal type="number" pos:start="35:33" pos:end="35:35">0.0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:25"><decl pos:start="37:9" pos:end="37:24"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:20">attack_n</name> <init pos:start="37:22" pos:end="37:24">= <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:27"><decl pos:start="39:9" pos:end="39:26"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:22">stay_short</name> <init pos:start="39:24" pos:end="39:26">= <expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="41:9" pos:end="55:9">for <control pos:start="41:13" pos:end="41:31">(<init pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:18"><name pos:start="41:14" pos:end="41:14">i</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</init> <condition pos:start="41:21" pos:end="41:26"><expr pos:start="41:21" pos:end="41:25"><name pos:start="41:21" pos:end="41:21">i</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">8</literal></expr>;</condition> <incr pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:28">i</name><operator pos:start="41:29" pos:end="41:30">++</operator></expr></incr>)</control> <block pos:start="41:33" pos:end="55:9">{<block_content pos:start="43:13" pos:end="53:24">

            <for pos:start="43:13" pos:end="49:13">for <control pos:start="43:17" pos:end="43:37">(<init pos:start="43:18" pos:end="43:23"><expr pos:start="43:18" pos:end="43:22"><name pos:start="43:18" pos:end="43:18">j</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">0</literal></expr>;</init> <condition pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:25">j</name> <operator pos:start="43:27" pos:end="43:27">&lt;</operator> <literal type="number" pos:start="43:29" pos:end="43:31">128</literal></expr>;</condition> <incr pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:34">j</name><operator pos:start="43:35" pos:end="43:36">++</operator></expr></incr>)</control> <block pos:start="43:39" pos:end="49:13">{<block_content pos:start="45:17" pos:end="47:27">

                <expr_stmt pos:start="45:17" pos:end="45:60"><expr pos:start="45:17" pos:end="45:59"><name pos:start="45:17" pos:end="45:17">v</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <call pos:start="45:21" pos:end="45:59"><name pos:start="45:21" pos:end="45:30">iir_filter</name><argument_list pos:start="45:31" pos:end="45:59">(<argument pos:start="45:32" pos:end="45:42"><expr pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:42"><name pos:start="45:32" pos:end="45:33">la</name><index pos:start="45:34" pos:end="45:42">[<expr pos:start="45:35" pos:end="45:41"><name pos:start="45:35" pos:end="45:35">i</name><operator pos:start="45:36" pos:end="45:36">*</operator><literal type="number" pos:start="45:37" pos:end="45:40">128</literal><operator pos:start="45:40" pos:end="45:40">+</operator><name pos:start="45:41" pos:end="45:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="45:45" pos:end="45:58"><expr pos:start="45:45" pos:end="45:58"><name pos:start="45:45" pos:end="45:58"><name pos:start="45:45" pos:end="45:47">pch</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:58">iir_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:27"><expr pos:start="47:17" pos:end="47:26"><name pos:start="47:17" pos:end="47:19">sum</name> <operator pos:start="47:21" pos:end="47:22">+=</operator> <name pos:start="47:24" pos:end="47:24">v</name><operator pos:start="47:25" pos:end="47:25">*</operator><name pos:start="47:26" pos:end="47:26">v</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:16"><name pos:start="51:13" pos:end="51:13">s</name><index pos:start="51:14" pos:end="51:16">[<expr pos:start="51:15" pos:end="51:15"><name pos:start="51:15" pos:end="51:15">i</name></expr>]</index></name>  <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:23">sum</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:24"><expr pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:16">sum2</name> <operator pos:start="53:18" pos:end="53:19">+=</operator> <name pos:start="53:21" pos:end="53:23">sum</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="57:9" pos:end="69:9">for <control pos:start="57:13" pos:end="57:31">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:26"><expr pos:start="57:21" pos:end="57:25"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <literal type="number" pos:start="57:25" pos:end="57:25">8</literal></expr>;</condition> <incr pos:start="57:28" pos:end="57:30"><expr pos:start="57:28" pos:end="57:30"><name pos:start="57:28" pos:end="57:28">i</name><operator pos:start="57:29" pos:end="57:30">++</operator></expr></incr>)</control> <block pos:start="57:33" pos:end="69:9">{<block_content pos:start="59:13" pos:end="67:13">

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="67:13">if <condition pos:start="59:16" pos:end="59:54">(<expr pos:start="59:17" pos:end="59:53"><name pos:start="59:17" pos:end="59:20"><name pos:start="59:17" pos:end="59:17">s</name><index pos:start="59:18" pos:end="59:20">[<expr pos:start="59:19" pos:end="59:19"><name pos:start="59:19" pos:end="59:19">i</name></expr>]</index></name> <operator pos:start="59:22" pos:end="59:22">&gt;</operator> <name pos:start="59:24" pos:end="59:38"><name pos:start="59:24" pos:end="59:26">pch</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:38">win_energy</name></name> <operator pos:start="59:40" pos:end="59:40">*</operator> <name pos:start="59:42" pos:end="59:53">attack_ratio</name></expr>)</condition> <block pos:start="59:56" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:22">

                <expr_stmt pos:start="61:17" pos:end="61:40"><expr pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:24">attack_n</name>        <operator pos:start="61:33" pos:end="61:33">=</operator> <name pos:start="61:35" pos:end="61:35">i</name> <operator pos:start="61:37" pos:end="61:37">+</operator> <literal type="number" pos:start="61:39" pos:end="61:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:36"><expr pos:start="63:17" pos:end="63:35"><name pos:start="63:17" pos:end="63:31">switch_to_eight</name> <operator pos:start="63:33" pos:end="63:33">=</operator> <literal type="number" pos:start="63:35" pos:end="63:35">1</literal></expr>;</expr_stmt>

                <break pos:start="65:17" pos:end="65:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:11">pch</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:23">win_energy</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:41"><name pos:start="71:27" pos:end="71:29">pch</name><operator pos:start="71:30" pos:end="71:31">-&gt;</operator><name pos:start="71:32" pos:end="71:41">win_energy</name></name><operator pos:start="71:42" pos:end="71:42">*</operator><literal type="number" pos:start="71:43" pos:end="71:43">7</literal><operator pos:start="71:44" pos:end="71:44">/</operator><literal type="number" pos:start="71:45" pos:end="71:47">8</literal> <operator pos:start="71:47" pos:end="71:47">+</operator> <name pos:start="71:49" pos:end="71:52">sum2</name><operator pos:start="71:53" pos:end="71:53">/</operator><literal type="number" pos:start="71:54" pos:end="71:55">64</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:10">wi</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:22">window_type</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><literal type="number" pos:start="75:24" pos:end="75:24">1</literal></expr>]</index></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:37">prev_type</name></expr>;</expr_stmt>

        <switch pos:start="77:9" pos:end="117:9">switch <condition pos:start="77:16" pos:end="77:26">(<expr pos:start="77:17" pos:end="77:25"><name pos:start="77:17" pos:end="77:25">prev_type</name></expr>)</condition> <block pos:start="77:28" pos:end="117:9">{<block_content pos:start="79:9" pos:end="115:18">

        <case pos:start="79:9" pos:end="79:32">case <expr pos:start="79:14" pos:end="79:31"><name pos:start="79:14" pos:end="79:31">ONLY_LONG_SEQUENCE</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:91"><expr pos:start="81:13" pos:end="81:90"><name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:14">wi</name><operator pos:start="81:15" pos:end="81:15">.</operator><name pos:start="81:16" pos:end="81:26">window_type</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>]</index></name> <operator pos:start="81:31" pos:end="81:31">=</operator> <ternary pos:start="81:33" pos:end="81:90"><condition pos:start="81:33" pos:end="81:49"><expr pos:start="81:33" pos:end="81:47"><name pos:start="81:33" pos:end="81:47">switch_to_eight</name></expr> ?</condition><then pos:start="81:51" pos:end="81:69"> <expr pos:start="81:51" pos:end="81:69"><name pos:start="81:51" pos:end="81:69">LONG_START_SEQUENCE</name></expr> </then><else pos:start="81:71" pos:end="81:90">: <expr pos:start="81:73" pos:end="81:90"><name pos:start="81:73" pos:end="81:90">ONLY_LONG_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:84"><expr pos:start="83:13" pos:end="83:83"><name pos:start="83:13" pos:end="83:21">next_type</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <ternary pos:start="83:25" pos:end="83:83"><condition pos:start="83:25" pos:end="83:41"><expr pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:39">switch_to_eight</name></expr> ?</condition><then pos:start="83:43" pos:end="83:62"> <expr pos:start="83:43" pos:end="83:62"><name pos:start="83:43" pos:end="83:62">EIGHT_SHORT_SEQUENCE</name></expr> </then><else pos:start="83:64" pos:end="83:83">: <expr pos:start="83:66" pos:end="83:83"><name pos:start="83:66" pos:end="83:83">ONLY_LONG_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:33">case <expr pos:start="87:14" pos:end="87:32"><name pos:start="87:14" pos:end="87:32">LONG_START_SEQUENCE</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:29"><name pos:start="89:13" pos:end="89:14">wi</name><operator pos:start="89:15" pos:end="89:15">.</operator><name pos:start="89:16" pos:end="89:26">window_type</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr>]</index></name> <operator pos:start="89:31" pos:end="89:31">=</operator> <name pos:start="89:33" pos:end="89:52">EIGHT_SHORT_SEQUENCE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:42"><expr pos:start="91:13" pos:end="91:41"><name pos:start="91:13" pos:end="91:20">grouping</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:41"><name pos:start="91:24" pos:end="91:26">pch</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:41">next_grouping</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:84"><expr pos:start="93:13" pos:end="93:83"><name pos:start="93:13" pos:end="93:21">next_type</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <ternary pos:start="93:25" pos:end="93:83"><condition pos:start="93:25" pos:end="93:41"><expr pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:39">switch_to_eight</name></expr> ?</condition><then pos:start="93:43" pos:end="93:62"> <expr pos:start="93:43" pos:end="93:62"><name pos:start="93:43" pos:end="93:62">EIGHT_SHORT_SEQUENCE</name></expr> </then><else pos:start="93:64" pos:end="93:83">: <expr pos:start="93:66" pos:end="93:83"><name pos:start="93:66" pos:end="93:83">LONG_STOP_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:32">case <expr pos:start="97:14" pos:end="97:31"><name pos:start="97:14" pos:end="97:31">LONG_STOP_SEQUENCE</name></expr>:</case>

            <expr_stmt pos:start="99:13" pos:end="99:91"><expr pos:start="99:13" pos:end="99:90"><name pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:14">wi</name><operator pos:start="99:15" pos:end="99:15">.</operator><name pos:start="99:16" pos:end="99:26">window_type</name><index pos:start="99:27" pos:end="99:29">[<expr pos:start="99:28" pos:end="99:28"><literal type="number" pos:start="99:28" pos:end="99:28">0</literal></expr>]</index></name> <operator pos:start="99:31" pos:end="99:31">=</operator> <ternary pos:start="99:33" pos:end="99:90"><condition pos:start="99:33" pos:end="99:49"><expr pos:start="99:33" pos:end="99:47"><name pos:start="99:33" pos:end="99:47">switch_to_eight</name></expr> ?</condition><then pos:start="99:51" pos:end="99:69"> <expr pos:start="99:51" pos:end="99:69"><name pos:start="99:51" pos:end="99:69">LONG_START_SEQUENCE</name></expr> </then><else pos:start="99:71" pos:end="99:90">: <expr pos:start="99:73" pos:end="99:90"><name pos:start="99:73" pos:end="99:90">ONLY_LONG_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:84"><expr pos:start="101:13" pos:end="101:83"><name pos:start="101:13" pos:end="101:21">next_type</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <ternary pos:start="101:25" pos:end="101:83"><condition pos:start="101:25" pos:end="101:41"><expr pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:39">switch_to_eight</name></expr> ?</condition><then pos:start="101:43" pos:end="101:62"> <expr pos:start="101:43" pos:end="101:62"><name pos:start="101:43" pos:end="101:62">EIGHT_SHORT_SEQUENCE</name></expr> </then><else pos:start="101:64" pos:end="101:83">: <expr pos:start="101:66" pos:end="101:83"><name pos:start="101:66" pos:end="101:83">ONLY_LONG_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        <case pos:start="105:9" pos:end="105:34">case <expr pos:start="105:14" pos:end="105:33"><name pos:start="105:14" pos:end="105:33">EIGHT_SHORT_SEQUENCE</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:78"><expr pos:start="107:13" pos:end="107:77"><name pos:start="107:13" pos:end="107:22">stay_short</name> <operator pos:start="107:24" pos:end="107:24">=</operator> <name pos:start="107:26" pos:end="107:34">next_type</name> <operator pos:start="107:36" pos:end="107:37">==</operator> <name pos:start="107:39" pos:end="107:58">EIGHT_SHORT_SEQUENCE</name> <operator pos:start="107:60" pos:end="107:61">||</operator> <name pos:start="107:63" pos:end="107:77">switch_to_eight</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:87"><expr pos:start="109:13" pos:end="109:86"><name pos:start="109:13" pos:end="109:29"><name pos:start="109:13" pos:end="109:14">wi</name><operator pos:start="109:15" pos:end="109:15">.</operator><name pos:start="109:16" pos:end="109:26">window_type</name><index pos:start="109:27" pos:end="109:29">[<expr pos:start="109:28" pos:end="109:28"><literal type="number" pos:start="109:28" pos:end="109:28">0</literal></expr>]</index></name> <operator pos:start="109:31" pos:end="109:31">=</operator> <ternary pos:start="109:33" pos:end="109:86"><condition pos:start="109:33" pos:end="109:44"><expr pos:start="109:33" pos:end="109:42"><name pos:start="109:33" pos:end="109:42">stay_short</name></expr> ?</condition><then pos:start="109:46" pos:end="109:65"> <expr pos:start="109:46" pos:end="109:65"><name pos:start="109:46" pos:end="109:65">EIGHT_SHORT_SEQUENCE</name></expr> </then><else pos:start="109:67" pos:end="109:86">: <expr pos:start="109:69" pos:end="109:86"><name pos:start="109:69" pos:end="109:86">LONG_STOP_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:82"><expr pos:start="111:13" pos:end="111:81"><name pos:start="111:13" pos:end="111:20">grouping</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <ternary pos:start="111:24" pos:end="111:81"><condition pos:start="111:24" pos:end="111:58"><expr pos:start="111:24" pos:end="111:56"><name pos:start="111:24" pos:end="111:32">next_type</name> <operator pos:start="111:34" pos:end="111:35">==</operator> <name pos:start="111:37" pos:end="111:56">EIGHT_SHORT_SEQUENCE</name></expr> ?</condition><then pos:start="111:60" pos:end="111:77"> <expr pos:start="111:60" pos:end="111:77"><name pos:start="111:60" pos:end="111:77"><name pos:start="111:60" pos:end="111:62">pch</name><operator pos:start="111:63" pos:end="111:64">-&gt;</operator><name pos:start="111:65" pos:end="111:77">next_grouping</name></name></expr> </then><else pos:start="111:79" pos:end="111:81">: <expr pos:start="111:81" pos:end="111:81"><literal type="number" pos:start="111:81" pos:end="111:81">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:84"><expr pos:start="113:13" pos:end="113:83"><name pos:start="113:13" pos:end="113:21">next_type</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <ternary pos:start="113:25" pos:end="113:83"><condition pos:start="113:25" pos:end="113:41"><expr pos:start="113:25" pos:end="113:39"><name pos:start="113:25" pos:end="113:39">switch_to_eight</name></expr> ?</condition><then pos:start="113:43" pos:end="113:62"> <expr pos:start="113:43" pos:end="113:62"><name pos:start="113:43" pos:end="113:62">EIGHT_SHORT_SEQUENCE</name></expr> </then><else pos:start="113:64" pos:end="113:83">: <expr pos:start="113:66" pos:end="113:83"><name pos:start="113:66" pos:end="113:83">LONG_STOP_SEQUENCE</name></expr></else></ternary></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block></switch>



        <expr_stmt pos:start="121:9" pos:end="121:55"><expr pos:start="121:9" pos:end="121:54"><name pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:11">pch</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:26">next_grouping</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:54"><name pos:start="121:30" pos:end="121:44">window_grouping</name><index pos:start="121:45" pos:end="121:54">[<expr pos:start="121:46" pos:end="121:53"><name pos:start="121:46" pos:end="121:53">attack_n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:11">pch</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:28">next_window_seq</name></name> <operator pos:start="123:30" pos:end="123:30">=</operator> <name pos:start="123:32" pos:end="123:40">next_type</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="133:5">else <block pos:start="125:12" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:80">

        <for pos:start="127:9" pos:end="129:42">for <control pos:start="127:13" pos:end="127:31">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:25"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:25">3</literal></expr>;</condition> <incr pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:28">i</name><operator pos:start="127:29" pos:end="127:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="129:42"><block_content pos:start="129:13" pos:end="129:42">

            <expr_stmt pos:start="129:13" pos:end="129:42"><expr pos:start="129:13" pos:end="129:41"><name pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:14">wi</name><operator pos:start="129:15" pos:end="129:15">.</operator><name pos:start="129:16" pos:end="129:26">window_type</name><index pos:start="129:27" pos:end="129:29">[<expr pos:start="129:28" pos:end="129:28"><name pos:start="129:28" pos:end="129:28">i</name></expr>]</index></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <name pos:start="129:33" pos:end="129:41">prev_type</name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="131:9" pos:end="131:80"><expr pos:start="131:9" pos:end="131:79"><name pos:start="131:9" pos:end="131:16">grouping</name> <operator pos:start="131:18" pos:end="131:18">=</operator> <ternary pos:start="131:20" pos:end="131:79"><condition pos:start="131:20" pos:end="131:56"><expr pos:start="131:20" pos:end="131:54"><operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:29">prev_type</name> <operator pos:start="131:31" pos:end="131:32">==</operator> <name pos:start="131:34" pos:end="131:53">EIGHT_SHORT_SEQUENCE</name><operator pos:start="131:54" pos:end="131:54">)</operator></expr> ?</condition><then pos:start="131:58" pos:end="131:75"> <expr pos:start="131:58" pos:end="131:75"><name pos:start="131:58" pos:end="131:75"><name pos:start="131:58" pos:end="131:72">window_grouping</name><index pos:start="131:73" pos:end="131:75">[<expr pos:start="131:74" pos:end="131:74"><literal type="number" pos:start="131:74" pos:end="131:74">0</literal></expr>]</index></name></expr> </then><else pos:start="131:77" pos:end="131:79">: <expr pos:start="131:79" pos:end="131:79"><literal type="number" pos:start="131:79" pos:end="131:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:26"><expr pos:start="137:5" pos:end="137:25"><name pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:6">wi</name><operator pos:start="137:7" pos:end="137:7">.</operator><name pos:start="137:8" pos:end="137:19">window_shape</name></name>   <operator pos:start="137:23" pos:end="137:23">=</operator> <literal type="number" pos:start="137:25" pos:end="137:25">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="161:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:50">(<expr pos:start="139:9" pos:end="139:49"><name pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:10">wi</name><operator pos:start="139:11" pos:end="139:11">.</operator><name pos:start="139:12" pos:end="139:22">window_type</name><index pos:start="139:23" pos:end="139:25">[<expr pos:start="139:24" pos:end="139:24"><literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>]</index></name> <operator pos:start="139:27" pos:end="139:28">!=</operator> <name pos:start="139:30" pos:end="139:49">EIGHT_SHORT_SEQUENCE</name></expr>)</condition> <block pos:start="139:52" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:27">

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:10">wi</name><operator pos:start="141:11" pos:end="141:11">.</operator><name pos:start="141:12" pos:end="141:22">num_windows</name></name> <operator pos:start="141:24" pos:end="141:24">=</operator> <literal type="number" pos:start="141:26" pos:end="141:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:27"><expr pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:10">wi</name><operator pos:start="143:11" pos:end="143:11">.</operator><name pos:start="143:12" pos:end="143:19">grouping</name><index pos:start="143:20" pos:end="143:22">[<expr pos:start="143:21" pos:end="143:21"><literal type="number" pos:start="143:21" pos:end="143:21">0</literal></expr>]</index></name> <operator pos:start="143:24" pos:end="143:24">=</operator> <literal type="number" pos:start="143:26" pos:end="143:26">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="161:5">else <block pos:start="145:12" pos:end="161:5">{<block_content pos:start="147:9" pos:end="159:9">

        <decl_stmt pos:start="147:9" pos:end="147:24"><decl pos:start="147:9" pos:end="147:23"><type pos:start="147:9" pos:end="147:11"><name pos:start="147:9" pos:end="147:11">int</name></type> <name pos:start="147:13" pos:end="147:19">lastgrp</name> <init pos:start="147:21" pos:end="147:23">= <expr pos:start="147:23" pos:end="147:23"><literal type="number" pos:start="147:23" pos:end="147:23">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:27"><expr pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:22"><name pos:start="149:9" pos:end="149:10">wi</name><operator pos:start="149:11" pos:end="149:11">.</operator><name pos:start="149:12" pos:end="149:22">num_windows</name></name> <operator pos:start="149:24" pos:end="149:24">=</operator> <literal type="number" pos:start="149:26" pos:end="149:26">8</literal></expr>;</expr_stmt>

        <for pos:start="151:9" pos:end="159:9">for <control pos:start="151:13" pos:end="151:31">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">i</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:26"><expr pos:start="151:21" pos:end="151:25"><name pos:start="151:21" pos:end="151:21">i</name> <operator pos:start="151:23" pos:end="151:23">&lt;</operator> <literal type="number" pos:start="151:25" pos:end="151:25">8</literal></expr>;</condition> <incr pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:28">i</name><operator pos:start="151:29" pos:end="151:30">++</operator></expr></incr>)</control> <block pos:start="151:33" pos:end="159:9">{<block_content pos:start="153:13" pos:end="157:35">

            <if_stmt pos:start="153:13" pos:end="155:28"><if pos:start="153:13" pos:end="155:28">if <condition pos:start="153:16" pos:end="153:39">(<expr pos:start="153:17" pos:end="153:38"><operator pos:start="153:17" pos:end="153:17">!</operator><operator pos:start="153:18" pos:end="153:18">(</operator><operator pos:start="153:19" pos:end="153:19">(</operator><name pos:start="153:20" pos:end="153:27">grouping</name> <operator pos:start="153:29" pos:end="153:30">&gt;&gt;</operator> <name pos:start="153:32" pos:end="153:32">i</name><operator pos:start="153:33" pos:end="153:33">)</operator> <operator pos:start="153:35" pos:end="153:35">&amp;</operator> <literal type="number" pos:start="153:37" pos:end="153:37">1</literal><operator pos:start="153:38" pos:end="153:38">)</operator></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:28"><block_content pos:start="155:17" pos:end="155:28">

                <expr_stmt pos:start="155:17" pos:end="155:28"><expr pos:start="155:17" pos:end="155:27"><name pos:start="155:17" pos:end="155:23">lastgrp</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:27">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:32"><name pos:start="157:13" pos:end="157:14">wi</name><operator pos:start="157:15" pos:end="157:15">.</operator><name pos:start="157:16" pos:end="157:23">grouping</name><index pos:start="157:24" pos:end="157:32">[<expr pos:start="157:25" pos:end="157:31"><name pos:start="157:25" pos:end="157:31">lastgrp</name></expr>]</index></name><operator pos:start="157:33" pos:end="157:34">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="165:5" pos:end="165:14">return <expr pos:start="165:12" pos:end="165:13"><name pos:start="165:12" pos:end="165:13">wi</name></expr>;</return>

</block_content>}</block></function>
</unit>
