<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5835.c" pos:tabs="8"><function pos:start="1:1" pos:end="76:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">pmp_packet</name><parameter_list pos:start="1:22" pos:end="1:56">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:55"><decl pos:start="1:43" pos:end="1:55"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:50">AVPacket</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="76:15">{<block_content pos:start="5:5" pos:end="76:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PMPContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">pmp</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:21">(<expr pos:start="15:9" pos:end="15:20"><call pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:16">url_feof</name><argument_list pos:start="15:17" pos:end="15:20">(<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <return pos:start="17:9" pos:end="17:27">return <expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="76:15"><if pos:start="19:5" pos:end="76:15">if <condition pos:start="19:8" pos:end="19:29">(<expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:11">pmp</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:23">cur_stream</name></name> <operator pos:start="19:25" pos:end="19:26">==</operator> <literal type="number" pos:start="19:28" pos:end="19:28">0</literal></expr>)</condition> <block pos:start="19:31" pos:end="76:15">{<block_content pos:start="21:9" pos:end="76:15">

        <decl_stmt pos:start="21:9" pos:end="21:24"><decl pos:start="21:9" pos:end="21:23"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:23">num_packets</name></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">pmp</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:26">audio_packets</name></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <call pos:start="23:30" pos:end="23:40"><name pos:start="23:30" pos:end="23:36">avio_r8</name><argument_list pos:start="23:37" pos:end="23:40">(<argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





        <expr_stmt pos:start="29:9" pos:end="29:70"><expr pos:start="29:9" pos:end="29:69"><name pos:start="29:9" pos:end="29:19">num_packets</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <operator pos:start="29:23" pos:end="29:23">(</operator><name pos:start="29:24" pos:end="29:39"><name pos:start="29:24" pos:end="29:26">pmp</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:39">num_streams</name></name> <operator pos:start="29:41" pos:end="29:41">-</operator> <literal type="number" pos:start="29:43" pos:end="29:43">1</literal><operator pos:start="29:44" pos:end="29:44">)</operator> <operator pos:start="29:46" pos:end="29:46">*</operator> <name pos:start="29:48" pos:end="29:65"><name pos:start="29:48" pos:end="29:50">pmp</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:65">audio_packets</name></name> <operator pos:start="29:67" pos:end="29:67">+</operator> <literal type="number" pos:start="29:69" pos:end="29:69">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><call pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17">avio_skip</name><argument_list pos:start="31:18" pos:end="31:24">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">pb</name></expr></argument>, <argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:11">pmp</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:27">current_packet</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="39:65"><expr pos:start="35:9" pos:end="39:64"><call pos:start="35:9" pos:end="39:64"><name pos:start="35:9" pos:end="35:22">av_fast_malloc</name><argument_list pos:start="35:23" pos:end="39:64">(<argument pos:start="35:24" pos:end="35:41"><expr pos:start="35:24" pos:end="35:41"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:41"><name pos:start="35:25" pos:end="35:27">pmp</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:41">packet_sizes</name></name></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:47"><expr pos:start="37:24" pos:end="37:47"><operator pos:start="37:24" pos:end="37:24">&amp;</operator><name pos:start="37:25" pos:end="37:47"><name pos:start="37:25" pos:end="37:27">pmp</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:47">packet_sizes_alloc</name></name></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:63"><expr pos:start="39:24" pos:end="39:63"><name pos:start="39:24" pos:end="39:34">num_packets</name> <operator pos:start="39:36" pos:end="39:36">*</operator> <sizeof pos:start="39:38" pos:end="39:63">sizeof<argument_list pos:start="39:44" pos:end="39:63">(<argument pos:start="39:45" pos:end="39:62"><expr pos:start="39:45" pos:end="39:62"><operator pos:start="39:45" pos:end="39:45">*</operator><name pos:start="39:46" pos:end="39:62"><name pos:start="39:46" pos:end="39:48">pmp</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:62">packet_sizes</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="76:15"><if pos:start="41:9" pos:end="76:15">if <condition pos:start="41:12" pos:end="41:37">(<expr pos:start="41:13" pos:end="41:36"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:36"><name pos:start="41:14" pos:end="41:16">pmp</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:36">packet_sizes_alloc</name></name></expr>)</condition> <block pos:start="41:39" pos:end="76:15">{<block_content pos:start="43:13" pos:end="76:15">

            <expr_stmt pos:start="43:13" pos:end="43:75"><expr pos:start="43:13" pos:end="43:74"><call pos:start="43:13" pos:end="43:74"><name pos:start="43:13" pos:end="43:18">av_log</name><argument_list pos:start="43:19" pos:end="43:74">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">s</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:73"><expr pos:start="43:37" pos:end="43:73"><literal type="string" pos:start="43:37" pos:end="43:73">"Cannot (re)allocate packet buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:35">return <expr pos:start="45:20" pos:end="45:34"><call pos:start="45:20" pos:end="45:34"><name pos:start="45:20" pos:end="45:26">AVERROR</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>


        <for pos:start="48:9" pos:end="50:49">for <control pos:start="48:13" pos:end="48:41">(<init pos:start="48:14" pos:end="48:19"><expr pos:start="48:14" pos:end="48:18"><name pos:start="48:14" pos:end="48:14">i</name> <operator pos:start="48:16" pos:end="48:16">=</operator> <literal type="number" pos:start="48:18" pos:end="48:18">0</literal></expr>;</init> <condition pos:start="48:21" pos:end="48:36"><expr pos:start="48:21" pos:end="48:35"><name pos:start="48:21" pos:end="48:21">i</name> <operator pos:start="48:23" pos:end="48:23">&lt;</operator> <name pos:start="48:25" pos:end="48:35">num_packets</name></expr>;</condition> <incr pos:start="48:38" pos:end="48:40"><expr pos:start="48:38" pos:end="48:40"><name pos:start="48:38" pos:end="48:38">i</name><operator pos:start="48:39" pos:end="48:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="50:13" pos:end="50:49"><block_content pos:start="50:13" pos:end="50:49">

            <expr_stmt pos:start="50:13" pos:end="50:49"><expr pos:start="50:13" pos:end="50:48"><name pos:start="50:13" pos:end="50:32"><name pos:start="50:13" pos:end="50:15">pmp</name><operator pos:start="50:16" pos:end="50:17">-&gt;</operator><name pos:start="50:18" pos:end="50:29">packet_sizes</name><index pos:start="50:30" pos:end="50:32">[<expr pos:start="50:31" pos:end="50:31"><name pos:start="50:31" pos:end="50:31">i</name></expr>]</index></name> <operator pos:start="50:34" pos:end="50:34">=</operator> <call pos:start="50:36" pos:end="50:48"><name pos:start="50:36" pos:end="50:44">avio_rl32</name><argument_list pos:start="50:45" pos:end="50:48">(<argument pos:start="50:46" pos:end="50:47"><expr pos:start="50:46" pos:end="50:47"><name pos:start="50:46" pos:end="50:47">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>


    <expr_stmt pos:start="53:5" pos:end="53:73"><expr pos:start="53:5" pos:end="53:72"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:72"><name pos:start="53:11" pos:end="53:23">av_get_packet</name><argument_list pos:start="53:24" pos:end="53:72">(<argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><name pos:start="53:25" pos:end="53:26">pb</name></expr></argument>, <argument pos:start="53:29" pos:end="53:31"><expr pos:start="53:29" pos:end="53:31"><name pos:start="53:29" pos:end="53:31">pkt</name></expr></argument>, <argument pos:start="53:34" pos:end="53:71"><expr pos:start="53:34" pos:end="53:71"><name pos:start="53:34" pos:end="53:71"><name pos:start="53:34" pos:end="53:36">pmp</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:50">packet_sizes</name><index pos:start="53:51" pos:end="53:71">[<expr pos:start="53:52" pos:end="53:70"><name pos:start="53:52" pos:end="53:70"><name pos:start="53:52" pos:end="53:54">pmp</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:70">current_packet</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="76:15"><if pos:start="55:5" pos:end="76:15">if <condition pos:start="55:8" pos:end="55:17">(<expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:14">&gt;=</operator> <literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>)</condition> <block pos:start="55:19" pos:end="76:15">{<block_content pos:start="57:9" pos:end="76:15">

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">0</literal></expr>;</expr_stmt>

        <comment type="line" pos:start="59:9" pos:end="59:60">// FIXME: this is a hack that should be removed once</comment>

        <comment type="line" pos:start="61:9" pos:end="61:62">// compute_pkt_fields() can handle timestamps properly</comment>

        <if_stmt pos:start="63:9" pos:end="65:48"><if pos:start="63:9" pos:end="65:48">if <condition pos:start="63:12" pos:end="63:33">(<expr pos:start="63:13" pos:end="63:32"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:15">pmp</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:27">cur_stream</name></name> <operator pos:start="63:29" pos:end="63:30">==</operator> <literal type="number" pos:start="63:32" pos:end="63:32">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:48"><block_content pos:start="65:13" pos:end="65:48">

            <expr_stmt pos:start="65:13" pos:end="65:48"><expr pos:start="65:13" pos:end="65:47"><name pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:20">dts</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:36"><name pos:start="65:24" pos:end="65:24">s</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:33">streams</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>]</index></name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:45">cur_dts</name><operator pos:start="65:46" pos:end="65:47">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:11">pkt</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:25">stream_index</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <name pos:start="67:29" pos:end="67:43"><name pos:start="67:29" pos:end="67:31">pmp</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:43">cur_stream</name></name></expr>;</expr_stmt>


    <if_stmt pos:start="70:5" pos:end="72:67"><if pos:start="70:5" pos:end="72:67">if <condition pos:start="70:8" pos:end="70:54">(<expr pos:start="70:9" pos:end="70:53"><name pos:start="70:9" pos:end="70:27"><name pos:start="70:9" pos:end="70:11">pmp</name><operator pos:start="70:12" pos:end="70:13">-&gt;</operator><name pos:start="70:14" pos:end="70:27">current_packet</name></name> <operator pos:start="70:29" pos:end="70:29">%</operator> <name pos:start="70:31" pos:end="70:48"><name pos:start="70:31" pos:end="70:33">pmp</name><operator pos:start="70:34" pos:end="70:35">-&gt;</operator><name pos:start="70:36" pos:end="70:48">audio_packets</name></name> <operator pos:start="70:50" pos:end="70:51">==</operator> <literal type="number" pos:start="70:53" pos:end="70:53">0</literal></expr>)</condition><block type="pseudo" pos:start="72:9" pos:end="72:67"><block_content pos:start="72:9" pos:end="72:67">

        <expr_stmt pos:start="72:9" pos:end="72:67"><expr pos:start="72:9" pos:end="72:66"><name pos:start="72:9" pos:end="72:23"><name pos:start="72:9" pos:end="72:11">pmp</name><operator pos:start="72:12" pos:end="72:13">-&gt;</operator><name pos:start="72:14" pos:end="72:23">cur_stream</name></name> <operator pos:start="72:25" pos:end="72:25">=</operator> <operator pos:start="72:27" pos:end="72:27">(</operator><name pos:start="72:28" pos:end="72:42"><name pos:start="72:28" pos:end="72:30">pmp</name><operator pos:start="72:31" pos:end="72:32">-&gt;</operator><name pos:start="72:33" pos:end="72:42">cur_stream</name></name> <operator pos:start="72:44" pos:end="72:44">+</operator> <literal type="number" pos:start="72:46" pos:end="72:46">1</literal><operator pos:start="72:47" pos:end="72:47">)</operator> <operator pos:start="72:49" pos:end="72:49">%</operator> <name pos:start="72:51" pos:end="72:66"><name pos:start="72:51" pos:end="72:53">pmp</name><operator pos:start="72:54" pos:end="72:55">-&gt;</operator><name pos:start="72:56" pos:end="72:66">num_streams</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="74:5" pos:end="74:26"><expr pos:start="74:5" pos:end="74:25"><name pos:start="74:5" pos:end="74:23"><name pos:start="74:5" pos:end="74:7">pmp</name><operator pos:start="74:8" pos:end="74:9">-&gt;</operator><name pos:start="74:10" pos:end="74:23">current_packet</name></name><operator pos:start="74:24" pos:end="74:25">++</operator></expr>;</expr_stmt>

    <return pos:start="76:5" pos:end="76:15">return <expr pos:start="76:12" pos:end="76:14"><name pos:start="76:12" pos:end="76:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
