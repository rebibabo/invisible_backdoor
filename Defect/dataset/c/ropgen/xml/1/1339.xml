<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1339.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">qcow2_check_metadata_overlap</name><parameter_list pos:start="1:33" pos:end="3:46">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:62"><decl pos:start="1:56" pos:end="1:62"><type pos:start="1:56" pos:end="1:62"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:62">ign</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:71">int64_t</name></type> <name pos:start="1:73" pos:end="1:78">offset</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:40">int64_t</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="195:1">{<block_content pos:start="7:5" pos:end="193:13">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">chk</name> <init pos:start="9:13" pos:end="9:37">= <expr pos:start="9:15" pos:end="9:37"><name pos:start="9:15" pos:end="9:30"><name pos:start="9:15" pos:end="9:15">s</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:30">overlap_check</name></name> <operator pos:start="9:32" pos:end="9:32">&amp;</operator> <operator pos:start="9:34" pos:end="9:34">~</operator><name pos:start="9:35" pos:end="9:37">ign</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">j</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:14">(<expr pos:start="15:9" pos:end="15:13"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:13">size</name></expr>)</condition> <block pos:start="15:16" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:11">chk</name> <operator pos:start="23:13" pos:end="23:13">&amp;</operator> <name pos:start="23:15" pos:end="23:34">QCOW2_OL_MAIN_HEADER</name></expr>)</condition> <block pos:start="23:37" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:37">(<expr pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:18">offset</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <name pos:start="25:22" pos:end="25:36"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:36">cluster_size</name></name></expr>)</condition> <block pos:start="25:39" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:40">

            <return pos:start="27:13" pos:end="27:40">return <expr pos:start="27:20" pos:end="27:39"><name pos:start="27:20" pos:end="27:39">QCOW2_OL_MAIN_HEADER</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:51">/* align range to test to cluster boundaries */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:80"><expr pos:start="37:5" pos:end="37:79"><name pos:start="37:5" pos:end="37:8">size</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:79"><name pos:start="37:12" pos:end="37:23">align_offset</name><argument_list pos:start="37:24" pos:end="37:79">(<argument pos:start="37:25" pos:end="37:61"><expr pos:start="37:25" pos:end="37:61"><call pos:start="37:25" pos:end="37:54"><name pos:start="37:25" pos:end="37:43">offset_into_cluster</name><argument_list pos:start="37:44" pos:end="37:54">(<argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><name pos:start="37:45" pos:end="37:45">s</name></expr></argument>, <argument pos:start="37:48" pos:end="37:53"><expr pos:start="37:48" pos:end="37:53"><name pos:start="37:48" pos:end="37:53">offset</name></expr></argument>)</argument_list></call> <operator pos:start="37:56" pos:end="37:56">+</operator> <name pos:start="37:58" pos:end="37:61">size</name></expr></argument>, <argument pos:start="37:64" pos:end="37:78"><expr pos:start="37:64" pos:end="37:78"><name pos:start="37:64" pos:end="37:78"><name pos:start="37:64" pos:end="37:64">s</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:78">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:10">offset</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:40"><name pos:start="39:14" pos:end="39:29">start_of_cluster</name><argument_list pos:start="39:30" pos:end="39:40">(<argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">s</name></expr></argument>, <argument pos:start="39:34" pos:end="39:39"><expr pos:start="39:34" pos:end="39:39"><name pos:start="39:34" pos:end="39:39">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:49">(<expr pos:start="43:9" pos:end="43:48"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:12">chk</name> <operator pos:start="43:14" pos:end="43:14">&amp;</operator> <name pos:start="43:16" pos:end="43:33">QCOW2_OL_ACTIVE_L1</name><operator pos:start="43:34" pos:end="43:34">)</operator> <operator pos:start="43:36" pos:end="43:37">&amp;&amp;</operator> <name pos:start="43:39" pos:end="43:48"><name pos:start="43:39" pos:end="43:39">s</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:48">l1_size</name></name></expr>)</condition> <block pos:start="43:51" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:9">

        <if_stmt pos:start="45:9" pos:end="49:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:77">(<expr pos:start="45:13" pos:end="45:76"><call pos:start="45:13" pos:end="45:76"><name pos:start="45:13" pos:end="45:25">overlaps_with</name><argument_list pos:start="45:26" pos:end="45:76">(<argument pos:start="45:27" pos:end="45:44"><expr pos:start="45:27" pos:end="45:44"><name pos:start="45:27" pos:end="45:44"><name pos:start="45:27" pos:end="45:27">s</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:44">l1_table_offset</name></name></expr></argument>, <argument pos:start="45:47" pos:end="45:75"><expr pos:start="45:47" pos:end="45:75"><name pos:start="45:47" pos:end="45:56"><name pos:start="45:47" pos:end="45:47">s</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:56">l1_size</name></name> <operator pos:start="45:58" pos:end="45:58">*</operator> <sizeof pos:start="45:60" pos:end="45:75">sizeof<argument_list pos:start="45:66" pos:end="45:75">(<argument pos:start="45:67" pos:end="45:74"><expr pos:start="45:67" pos:end="45:74"><name pos:start="45:67" pos:end="45:74">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:79" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:38">

            <return pos:start="47:13" pos:end="47:38">return <expr pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:37">QCOW2_OL_ACTIVE_L1</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="65:5"><if pos:start="55:5" pos:end="65:5">if <condition pos:start="55:8" pos:end="55:66">(<expr pos:start="55:9" pos:end="55:65"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:12">chk</name> <operator pos:start="55:14" pos:end="55:14">&amp;</operator> <name pos:start="55:16" pos:end="55:38">QCOW2_OL_REFCOUNT_TABLE</name><operator pos:start="55:39" pos:end="55:39">)</operator> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator> <name pos:start="55:44" pos:end="55:65"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:65">refcount_table_size</name></name></expr>)</condition> <block pos:start="55:68" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:9">

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="59:55">(<expr pos:start="57:13" pos:end="59:54"><call pos:start="57:13" pos:end="59:54"><name pos:start="57:13" pos:end="57:25">overlaps_with</name><argument_list pos:start="57:26" pos:end="59:54">(<argument pos:start="57:27" pos:end="57:50"><expr pos:start="57:27" pos:end="57:50"><name pos:start="57:27" pos:end="57:50"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:50">refcount_table_offset</name></name></expr></argument>,

            <argument pos:start="59:13" pos:end="59:53"><expr pos:start="59:13" pos:end="59:53"><name pos:start="59:13" pos:end="59:34"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:34">refcount_table_size</name></name> <operator pos:start="59:36" pos:end="59:36">*</operator> <sizeof pos:start="59:38" pos:end="59:53">sizeof<argument_list pos:start="59:44" pos:end="59:53">(<argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><name pos:start="59:45" pos:end="59:52">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:57" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:43">

            <return pos:start="61:13" pos:end="61:43">return <expr pos:start="61:20" pos:end="61:42"><name pos:start="61:20" pos:end="61:42">QCOW2_OL_REFCOUNT_TABLE</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:61">(<expr pos:start="69:9" pos:end="69:60"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:12">chk</name> <operator pos:start="69:14" pos:end="69:14">&amp;</operator> <name pos:start="69:16" pos:end="69:38">QCOW2_OL_SNAPSHOT_TABLE</name><operator pos:start="69:39" pos:end="69:39">)</operator> <operator pos:start="69:41" pos:end="69:42">&amp;&amp;</operator> <name pos:start="69:44" pos:end="69:60"><name pos:start="69:44" pos:end="69:44">s</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:60">snapshots_size</name></name></expr>)</condition> <block pos:start="69:63" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:9">

        <if_stmt pos:start="71:9" pos:end="75:9"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:66">(<expr pos:start="71:13" pos:end="71:65"><call pos:start="71:13" pos:end="71:65"><name pos:start="71:13" pos:end="71:25">overlaps_with</name><argument_list pos:start="71:26" pos:end="71:65">(<argument pos:start="71:27" pos:end="71:45"><expr pos:start="71:27" pos:end="71:45"><name pos:start="71:27" pos:end="71:45"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:45">snapshots_offset</name></name></expr></argument>, <argument pos:start="71:48" pos:end="71:64"><expr pos:start="71:48" pos:end="71:64"><name pos:start="71:48" pos:end="71:64"><name pos:start="71:48" pos:end="71:48">s</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:64">snapshots_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:68" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:43">

            <return pos:start="73:13" pos:end="73:43">return <expr pos:start="73:20" pos:end="73:42"><name pos:start="73:20" pos:end="73:42">QCOW2_OL_SNAPSHOT_TABLE</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="97:5"><if pos:start="81:5" pos:end="97:5">if <condition pos:start="81:8" pos:end="81:53">(<expr pos:start="81:9" pos:end="81:52"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">chk</name> <operator pos:start="81:14" pos:end="81:14">&amp;</operator> <name pos:start="81:16" pos:end="81:35">QCOW2_OL_INACTIVE_L1</name><operator pos:start="81:36" pos:end="81:36">)</operator> <operator pos:start="81:38" pos:end="81:39">&amp;&amp;</operator> <name pos:start="81:41" pos:end="81:52"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:52">snapshots</name></name></expr>)</condition> <block pos:start="81:55" pos:end="97:5">{<block_content pos:start="83:9" pos:end="95:9">

        <for pos:start="83:9" pos:end="95:9">for <control pos:start="83:13" pos:end="83:45">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:40"><expr pos:start="83:21" pos:end="83:39"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <name pos:start="83:25" pos:end="83:39"><name pos:start="83:25" pos:end="83:25">s</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:39">nb_snapshots</name></name></expr>;</condition> <incr pos:start="83:42" pos:end="83:44"><expr pos:start="83:42" pos:end="83:44"><name pos:start="83:42" pos:end="83:42">i</name><operator pos:start="83:43" pos:end="83:44">++</operator></expr></incr>)</control> <block pos:start="83:47" pos:end="95:9">{<block_content pos:start="85:13" pos:end="93:13">

            <if_stmt pos:start="85:13" pos:end="93:13"><if pos:start="85:13" pos:end="93:13">if <condition pos:start="85:16" pos:end="89:60">(<expr pos:start="85:17" pos:end="89:59"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:28">snapshots</name><index pos:start="85:29" pos:end="85:31">[<expr pos:start="85:30" pos:end="85:30"><name pos:start="85:30" pos:end="85:30">i</name></expr>]</index></name><operator pos:start="85:32" pos:end="85:32">.</operator><name pos:start="85:33" pos:end="85:39">l1_size</name> <operator pos:start="85:41" pos:end="85:42">&amp;&amp;</operator>

                <call pos:start="87:17" pos:end="89:59"><name pos:start="87:17" pos:end="87:29">overlaps_with</name><argument_list pos:start="87:30" pos:end="89:59">(<argument pos:start="87:31" pos:end="87:61"><expr pos:start="87:31" pos:end="87:61"><name pos:start="87:31" pos:end="87:45"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:42">snapshots</name><index pos:start="87:43" pos:end="87:45">[<expr pos:start="87:44" pos:end="87:44"><name pos:start="87:44" pos:end="87:44">i</name></expr>]</index></name><operator pos:start="87:46" pos:end="87:46">.</operator><name pos:start="87:47" pos:end="87:61">l1_table_offset</name></expr></argument>,

                <argument pos:start="89:17" pos:end="89:58"><expr pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:17">s</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:28">snapshots</name><index pos:start="89:29" pos:end="89:31">[<expr pos:start="89:30" pos:end="89:30"><name pos:start="89:30" pos:end="89:30">i</name></expr>]</index></name><operator pos:start="89:32" pos:end="89:32">.</operator><name pos:start="89:33" pos:end="89:39">l1_size</name> <operator pos:start="89:41" pos:end="89:41">*</operator> <sizeof pos:start="89:43" pos:end="89:58">sizeof<argument_list pos:start="89:49" pos:end="89:58">(<argument pos:start="89:50" pos:end="89:57"><expr pos:start="89:50" pos:end="89:57"><name pos:start="89:50" pos:end="89:57">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:62" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:44">

                <return pos:start="91:17" pos:end="91:44">return <expr pos:start="91:24" pos:end="91:43"><name pos:start="91:24" pos:end="91:43">QCOW2_OL_INACTIVE_L1</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="117:5"><if pos:start="101:5" pos:end="117:5">if <condition pos:start="101:8" pos:end="101:50">(<expr pos:start="101:9" pos:end="101:49"><operator pos:start="101:9" pos:end="101:9">(</operator><name pos:start="101:10" pos:end="101:12">chk</name> <operator pos:start="101:14" pos:end="101:14">&amp;</operator> <name pos:start="101:16" pos:end="101:33">QCOW2_OL_ACTIVE_L2</name><operator pos:start="101:34" pos:end="101:34">)</operator> <operator pos:start="101:36" pos:end="101:37">&amp;&amp;</operator> <name pos:start="101:39" pos:end="101:49"><name pos:start="101:39" pos:end="101:39">s</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:49">l1_table</name></name></expr>)</condition> <block pos:start="101:52" pos:end="117:5">{<block_content pos:start="103:9" pos:end="115:9">

        <for pos:start="103:9" pos:end="115:9">for <control pos:start="103:13" pos:end="103:40">(<init pos:start="103:14" pos:end="103:19"><expr pos:start="103:14" pos:end="103:18"><name pos:start="103:14" pos:end="103:14">i</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>;</init> <condition pos:start="103:21" pos:end="103:35"><expr pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:21">i</name> <operator pos:start="103:23" pos:end="103:23">&lt;</operator> <name pos:start="103:25" pos:end="103:34"><name pos:start="103:25" pos:end="103:25">s</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:34">l1_size</name></name></expr>;</condition> <incr pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:37">i</name><operator pos:start="103:38" pos:end="103:39">++</operator></expr></incr>)</control> <block pos:start="103:42" pos:end="115:9">{<block_content pos:start="105:13" pos:end="113:13">

            <if_stmt pos:start="105:13" pos:end="113:13"><if pos:start="105:13" pos:end="113:13">if <condition pos:start="105:16" pos:end="109:33">(<expr pos:start="105:17" pos:end="109:32"><operator pos:start="105:17" pos:end="105:17">(</operator><name pos:start="105:18" pos:end="105:31"><name pos:start="105:18" pos:end="105:18">s</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:28">l1_table</name><index pos:start="105:29" pos:end="105:31">[<expr pos:start="105:30" pos:end="105:30"><name pos:start="105:30" pos:end="105:30">i</name></expr>]</index></name> <operator pos:start="105:33" pos:end="105:33">&amp;</operator> <name pos:start="105:35" pos:end="105:49">L1E_OFFSET_MASK</name><operator pos:start="105:50" pos:end="105:50">)</operator> <operator pos:start="105:52" pos:end="105:53">&amp;&amp;</operator>

                <call pos:start="107:17" pos:end="109:32"><name pos:start="107:17" pos:end="107:29">overlaps_with</name><argument_list pos:start="107:30" pos:end="109:32">(<argument pos:start="107:31" pos:end="107:62"><expr pos:start="107:31" pos:end="107:62"><name pos:start="107:31" pos:end="107:44"><name pos:start="107:31" pos:end="107:31">s</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:41">l1_table</name><index pos:start="107:42" pos:end="107:44">[<expr pos:start="107:43" pos:end="107:43"><name pos:start="107:43" pos:end="107:43">i</name></expr>]</index></name> <operator pos:start="107:46" pos:end="107:46">&amp;</operator> <name pos:start="107:48" pos:end="107:62">L1E_OFFSET_MASK</name></expr></argument>,

                <argument pos:start="109:17" pos:end="109:31"><expr pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:17">s</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:31">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:35" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:42">

                <return pos:start="111:17" pos:end="111:42">return <expr pos:start="111:24" pos:end="111:41"><name pos:start="111:24" pos:end="111:41">QCOW2_OL_ACTIVE_L2</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="137:5"><if pos:start="121:5" pos:end="137:5">if <condition pos:start="121:8" pos:end="121:61">(<expr pos:start="121:9" pos:end="121:60"><operator pos:start="121:9" pos:end="121:9">(</operator><name pos:start="121:10" pos:end="121:12">chk</name> <operator pos:start="121:14" pos:end="121:14">&amp;</operator> <name pos:start="121:16" pos:end="121:38">QCOW2_OL_REFCOUNT_BLOCK</name><operator pos:start="121:39" pos:end="121:39">)</operator> <operator pos:start="121:41" pos:end="121:42">&amp;&amp;</operator> <name pos:start="121:44" pos:end="121:60"><name pos:start="121:44" pos:end="121:44">s</name><operator pos:start="121:45" pos:end="121:46">-&gt;</operator><name pos:start="121:47" pos:end="121:60">refcount_table</name></name></expr>)</condition> <block pos:start="121:63" pos:end="137:5">{<block_content pos:start="123:9" pos:end="135:9">

        <for pos:start="123:9" pos:end="135:9">for <control pos:start="123:13" pos:end="123:52">(<init pos:start="123:14" pos:end="123:19"><expr pos:start="123:14" pos:end="123:18"><name pos:start="123:14" pos:end="123:14">i</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>;</init> <condition pos:start="123:21" pos:end="123:47"><expr pos:start="123:21" pos:end="123:46"><name pos:start="123:21" pos:end="123:21">i</name> <operator pos:start="123:23" pos:end="123:23">&lt;</operator> <name pos:start="123:25" pos:end="123:46"><name pos:start="123:25" pos:end="123:25">s</name><operator pos:start="123:26" pos:end="123:27">-&gt;</operator><name pos:start="123:28" pos:end="123:46">refcount_table_size</name></name></expr>;</condition> <incr pos:start="123:49" pos:end="123:51"><expr pos:start="123:49" pos:end="123:51"><name pos:start="123:49" pos:end="123:49">i</name><operator pos:start="123:50" pos:end="123:51">++</operator></expr></incr>)</control> <block pos:start="123:54" pos:end="135:9">{<block_content pos:start="125:13" pos:end="133:13">

            <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if <condition pos:start="125:16" pos:end="129:33">(<expr pos:start="125:17" pos:end="129:32"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:37"><name pos:start="125:18" pos:end="125:18">s</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:34">refcount_table</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">i</name></expr>]</index></name> <operator pos:start="125:39" pos:end="125:39">&amp;</operator> <name pos:start="125:41" pos:end="125:56">REFT_OFFSET_MASK</name><operator pos:start="125:57" pos:end="125:57">)</operator> <operator pos:start="125:59" pos:end="125:60">&amp;&amp;</operator>

                <call pos:start="127:17" pos:end="129:32"><name pos:start="127:17" pos:end="127:29">overlaps_with</name><argument_list pos:start="127:30" pos:end="129:32">(<argument pos:start="127:31" pos:end="127:69"><expr pos:start="127:31" pos:end="127:69"><name pos:start="127:31" pos:end="127:50"><name pos:start="127:31" pos:end="127:31">s</name><operator pos:start="127:32" pos:end="127:33">-&gt;</operator><name pos:start="127:34" pos:end="127:47">refcount_table</name><index pos:start="127:48" pos:end="127:50">[<expr pos:start="127:49" pos:end="127:49"><name pos:start="127:49" pos:end="127:49">i</name></expr>]</index></name> <operator pos:start="127:52" pos:end="127:52">&amp;</operator> <name pos:start="127:54" pos:end="127:69">REFT_OFFSET_MASK</name></expr></argument>,

                <argument pos:start="129:17" pos:end="129:31"><expr pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:31"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:31">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:35" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:47">

                <return pos:start="131:17" pos:end="131:47">return <expr pos:start="131:24" pos:end="131:46"><name pos:start="131:24" pos:end="131:46">QCOW2_OL_REFCOUNT_BLOCK</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="189:5"><if pos:start="141:5" pos:end="189:5">if <condition pos:start="141:8" pos:end="141:53">(<expr pos:start="141:9" pos:end="141:52"><operator pos:start="141:9" pos:end="141:9">(</operator><name pos:start="141:10" pos:end="141:12">chk</name> <operator pos:start="141:14" pos:end="141:14">&amp;</operator> <name pos:start="141:16" pos:end="141:35">QCOW2_OL_INACTIVE_L2</name><operator pos:start="141:36" pos:end="141:36">)</operator> <operator pos:start="141:38" pos:end="141:39">&amp;&amp;</operator> <name pos:start="141:41" pos:end="141:52"><name pos:start="141:41" pos:end="141:41">s</name><operator pos:start="141:42" pos:end="141:43">-&gt;</operator><name pos:start="141:44" pos:end="141:52">snapshots</name></name></expr>)</condition> <block pos:start="141:55" pos:end="189:5">{<block_content pos:start="143:9" pos:end="187:9">

        <for pos:start="143:9" pos:end="187:9">for <control pos:start="143:13" pos:end="143:45">(<init pos:start="143:14" pos:end="143:19"><expr pos:start="143:14" pos:end="143:18"><name pos:start="143:14" pos:end="143:14">i</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal></expr>;</init> <condition pos:start="143:21" pos:end="143:40"><expr pos:start="143:21" pos:end="143:39"><name pos:start="143:21" pos:end="143:21">i</name> <operator pos:start="143:23" pos:end="143:23">&lt;</operator> <name pos:start="143:25" pos:end="143:39"><name pos:start="143:25" pos:end="143:25">s</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:39">nb_snapshots</name></name></expr>;</condition> <incr pos:start="143:42" pos:end="143:44"><expr pos:start="143:42" pos:end="143:44"><name pos:start="143:42" pos:end="143:42">i</name><operator pos:start="143:43" pos:end="143:44">++</operator></expr></incr>)</control> <block pos:start="143:47" pos:end="187:9">{<block_content pos:start="145:13" pos:end="185:23">

            <decl_stmt pos:start="145:13" pos:end="145:62"><decl pos:start="145:13" pos:end="145:61"><type pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:20">uint64_t</name></type> <name pos:start="145:22" pos:end="145:27">l1_ofs</name> <init pos:start="145:29" pos:end="145:61">= <expr pos:start="145:31" pos:end="145:61"><name pos:start="145:31" pos:end="145:45"><name pos:start="145:31" pos:end="145:31">s</name><operator pos:start="145:32" pos:end="145:33">-&gt;</operator><name pos:start="145:34" pos:end="145:42">snapshots</name><index pos:start="145:43" pos:end="145:45">[<expr pos:start="145:44" pos:end="145:44"><name pos:start="145:44" pos:end="145:44">i</name></expr>]</index></name><operator pos:start="145:46" pos:end="145:46">.</operator><name pos:start="145:47" pos:end="145:61">l1_table_offset</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="147:13" pos:end="147:54"><decl pos:start="147:13" pos:end="147:53"><type pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:20">uint32_t</name></type> <name pos:start="147:22" pos:end="147:26">l1_sz</name>  <init pos:start="147:29" pos:end="147:53">= <expr pos:start="147:31" pos:end="147:53"><name pos:start="147:31" pos:end="147:45"><name pos:start="147:31" pos:end="147:31">s</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:42">snapshots</name><index pos:start="147:43" pos:end="147:45">[<expr pos:start="147:44" pos:end="147:44"><name pos:start="147:44" pos:end="147:44">i</name></expr>]</index></name><operator pos:start="147:46" pos:end="147:46">.</operator><name pos:start="147:47" pos:end="147:53">l1_size</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:55"><decl pos:start="149:13" pos:end="149:54"><type pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:20">uint64_t</name></type> <name pos:start="149:22" pos:end="149:27">l1_sz2</name> <init pos:start="149:29" pos:end="149:54">= <expr pos:start="149:31" pos:end="149:54"><name pos:start="149:31" pos:end="149:35">l1_sz</name> <operator pos:start="149:37" pos:end="149:37">*</operator> <sizeof pos:start="149:39" pos:end="149:54">sizeof<argument_list pos:start="149:45" pos:end="149:54">(<argument pos:start="149:46" pos:end="149:53"><expr pos:start="149:46" pos:end="149:53"><name pos:start="149:46" pos:end="149:53">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="151:13" pos:end="151:44"><decl pos:start="151:13" pos:end="151:43"><type pos:start="151:13" pos:end="151:22"><name pos:start="151:13" pos:end="151:20">uint64_t</name> <modifier pos:start="151:22" pos:end="151:22">*</modifier></type><name pos:start="151:23" pos:end="151:24">l1</name> <init pos:start="151:26" pos:end="151:43">= <expr pos:start="151:28" pos:end="151:43"><call pos:start="151:28" pos:end="151:43"><name pos:start="151:28" pos:end="151:35">g_malloc</name><argument_list pos:start="151:36" pos:end="151:43">(<argument pos:start="151:37" pos:end="151:42"><expr pos:start="151:37" pos:end="151:42"><name pos:start="151:37" pos:end="151:42">l1_sz2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="153:13" pos:end="153:20"><decl pos:start="153:13" pos:end="153:19"><type pos:start="153:13" pos:end="153:15"><name pos:start="153:13" pos:end="153:15">int</name></type> <name pos:start="153:17" pos:end="153:19">ret</name></decl>;</decl_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:59"><expr pos:start="157:13" pos:end="157:58"><name pos:start="157:13" pos:end="157:15">ret</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:58"><name pos:start="157:19" pos:end="157:28">bdrv_pread</name><argument_list pos:start="157:29" pos:end="157:58">(<argument pos:start="157:30" pos:end="157:37"><expr pos:start="157:30" pos:end="157:37"><name pos:start="157:30" pos:end="157:37"><name pos:start="157:30" pos:end="157:31">bs</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:37">file</name></name></expr></argument>, <argument pos:start="157:40" pos:end="157:45"><expr pos:start="157:40" pos:end="157:45"><name pos:start="157:40" pos:end="157:45">l1_ofs</name></expr></argument>, <argument pos:start="157:48" pos:end="157:49"><expr pos:start="157:48" pos:end="157:49"><name pos:start="157:48" pos:end="157:49">l1</name></expr></argument>, <argument pos:start="157:52" pos:end="157:57"><expr pos:start="157:52" pos:end="157:57"><name pos:start="157:52" pos:end="157:57">l1_sz2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="165:13"><if pos:start="159:13" pos:end="165:13">if <condition pos:start="159:16" pos:end="159:24">(<expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:19">ret</name> <operator pos:start="159:21" pos:end="159:21">&lt;</operator> <literal type="number" pos:start="159:23" pos:end="159:23">0</literal></expr>)</condition> <block pos:start="159:26" pos:end="165:13">{<block_content pos:start="161:17" pos:end="163:27">

                <expr_stmt pos:start="161:17" pos:end="161:27"><expr pos:start="161:17" pos:end="161:26"><call pos:start="161:17" pos:end="161:26"><name pos:start="161:17" pos:end="161:22">g_free</name><argument_list pos:start="161:23" pos:end="161:26">(<argument pos:start="161:24" pos:end="161:25"><expr pos:start="161:24" pos:end="161:25"><name pos:start="161:24" pos:end="161:25">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="163:17" pos:end="163:27">return <expr pos:start="163:24" pos:end="163:26"><name pos:start="163:24" pos:end="163:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <for pos:start="169:13" pos:end="181:13">for <control pos:start="169:17" pos:end="169:39">(<init pos:start="169:18" pos:end="169:23"><expr pos:start="169:18" pos:end="169:22"><name pos:start="169:18" pos:end="169:18">j</name> <operator pos:start="169:20" pos:end="169:20">=</operator> <literal type="number" pos:start="169:22" pos:end="169:22">0</literal></expr>;</init> <condition pos:start="169:25" pos:end="169:34"><expr pos:start="169:25" pos:end="169:33"><name pos:start="169:25" pos:end="169:25">j</name> <operator pos:start="169:27" pos:end="169:27">&lt;</operator> <name pos:start="169:29" pos:end="169:33">l1_sz</name></expr>;</condition> <incr pos:start="169:36" pos:end="169:38"><expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:36">j</name><operator pos:start="169:37" pos:end="169:38">++</operator></expr></incr>)</control> <block pos:start="169:41" pos:end="181:13">{<block_content pos:start="171:17" pos:end="179:17">

                <decl_stmt pos:start="171:17" pos:end="171:71"><decl pos:start="171:17" pos:end="171:70"><type pos:start="171:17" pos:end="171:24"><name pos:start="171:17" pos:end="171:24">uint64_t</name></type> <name pos:start="171:26" pos:end="171:31">l2_ofs</name> <init pos:start="171:33" pos:end="171:70">= <expr pos:start="171:35" pos:end="171:70"><call pos:start="171:35" pos:end="171:52"><name pos:start="171:35" pos:end="171:45">be64_to_cpu</name><argument_list pos:start="171:46" pos:end="171:52">(<argument pos:start="171:47" pos:end="171:51"><expr pos:start="171:47" pos:end="171:51"><name pos:start="171:47" pos:end="171:51"><name pos:start="171:47" pos:end="171:48">l1</name><index pos:start="171:49" pos:end="171:51">[<expr pos:start="171:50" pos:end="171:50"><name pos:start="171:50" pos:end="171:50">j</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="171:54" pos:end="171:54">&amp;</operator> <name pos:start="171:56" pos:end="171:70">L1E_OFFSET_MASK</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:69">(<expr pos:start="173:21" pos:end="173:68"><name pos:start="173:21" pos:end="173:26">l2_ofs</name> <operator pos:start="173:28" pos:end="173:29">&amp;&amp;</operator> <call pos:start="173:31" pos:end="173:68"><name pos:start="173:31" pos:end="173:43">overlaps_with</name><argument_list pos:start="173:44" pos:end="173:68">(<argument pos:start="173:45" pos:end="173:50"><expr pos:start="173:45" pos:end="173:50"><name pos:start="173:45" pos:end="173:50">l2_ofs</name></expr></argument>, <argument pos:start="173:53" pos:end="173:67"><expr pos:start="173:53" pos:end="173:67"><name pos:start="173:53" pos:end="173:67"><name pos:start="173:53" pos:end="173:53">s</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:67">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="173:71" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:48">

                    <expr_stmt pos:start="175:21" pos:end="175:31"><expr pos:start="175:21" pos:end="175:30"><call pos:start="175:21" pos:end="175:30"><name pos:start="175:21" pos:end="175:26">g_free</name><argument_list pos:start="175:27" pos:end="175:30">(<argument pos:start="175:28" pos:end="175:29"><expr pos:start="175:28" pos:end="175:29"><name pos:start="175:28" pos:end="175:29">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="177:21" pos:end="177:48">return <expr pos:start="177:28" pos:end="177:47"><name pos:start="177:28" pos:end="177:47">QCOW2_OL_INACTIVE_L2</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="185:13" pos:end="185:23"><expr pos:start="185:13" pos:end="185:22"><call pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:18">g_free</name><argument_list pos:start="185:19" pos:end="185:22">(<argument pos:start="185:20" pos:end="185:21"><expr pos:start="185:20" pos:end="185:21"><name pos:start="185:20" pos:end="185:21">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="193:5" pos:end="193:13">return <expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
