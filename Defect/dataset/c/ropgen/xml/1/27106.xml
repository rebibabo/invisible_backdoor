<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27106.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">net_check_clients</name><parameter_list pos:start="1:23" pos:end="1:28">(<parameter pos:start="1:24" pos:end="1:27"><decl pos:start="1:24" pos:end="1:27"><type pos:start="1:24" pos:end="1:27"><name pos:start="1:24" pos:end="1:27">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VLANState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">vlan</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">VLANClientState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">vc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:15">has_nic</name></decl>, <decl pos:start="9:18" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:29">has_host_dev</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:38">(<argument pos:start="13:20" pos:end="13:23">vlan</argument>, <argument pos:start="13:26" pos:end="13:31">&amp;vlans</argument>, <argument pos:start="13:34" pos:end="13:37">next</argument>)</argument_list></macro> <block pos:start="13:40" pos:end="55:5">{<block_content pos:start="15:9" pos:end="53:30">

        <macro pos:start="15:9" pos:end="15:48"><name pos:start="15:9" pos:end="15:22">QTAILQ_FOREACH</name><argument_list pos:start="15:23" pos:end="15:48">(<argument pos:start="15:24" pos:end="15:25">vc</argument>, <argument pos:start="15:28" pos:end="15:41">&amp;vlan-&gt;clients</argument>, <argument pos:start="15:44" pos:end="15:47">next</argument>)</argument_list></macro> <block pos:start="15:50" pos:end="41:9">{<block_content pos:start="17:13" pos:end="39:13">

            <switch pos:start="17:13" pos:end="39:13">switch <condition pos:start="17:20" pos:end="17:35">(<expr pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:22">vc</name><operator pos:start="17:23" pos:end="17:24">-&gt;</operator><name pos:start="17:25" pos:end="17:28">info</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:34">type</name></name></expr>)</condition> <block pos:start="17:37" pos:end="39:13">{<block_content pos:start="19:13" pos:end="37:22">

            <case pos:start="19:13" pos:end="19:37">case <expr pos:start="19:18" pos:end="19:36"><name pos:start="19:18" pos:end="19:36">NET_CLIENT_TYPE_NIC</name></expr>:</case>

                <expr_stmt pos:start="21:17" pos:end="21:28"><expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:23">has_nic</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <literal type="number" pos:start="21:27" pos:end="21:27">1</literal></expr>;</expr_stmt>

                <break pos:start="23:17" pos:end="23:22">break;</break>

            <case pos:start="25:13" pos:end="25:39">case <expr pos:start="25:18" pos:end="25:38"><name pos:start="25:18" pos:end="25:38">NET_CLIENT_TYPE_SLIRP</name></expr>:</case>

            <case pos:start="27:13" pos:end="27:37">case <expr pos:start="27:18" pos:end="27:36"><name pos:start="27:18" pos:end="27:36">NET_CLIENT_TYPE_TAP</name></expr>:</case>

            <case pos:start="29:13" pos:end="29:40">case <expr pos:start="29:18" pos:end="29:39"><name pos:start="29:18" pos:end="29:39">NET_CLIENT_TYPE_SOCKET</name></expr>:</case>

            <case pos:start="31:13" pos:end="31:37">case <expr pos:start="31:18" pos:end="31:36"><name pos:start="31:18" pos:end="31:36">NET_CLIENT_TYPE_VDE</name></expr>:</case>

                <expr_stmt pos:start="33:17" pos:end="33:33"><expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:28">has_host_dev</name> <operator pos:start="33:30" pos:end="33:30">=</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>;</expr_stmt>

                <break pos:start="35:17" pos:end="35:22">break;</break>

            <default pos:start="37:13" pos:end="37:20">default:</default> <empty_stmt pos:start="37:22" pos:end="37:22">;</empty_stmt>

            </block_content>}</block></switch>

        </block_content>}</block>

        <if_stmt pos:start="43:9" pos:end="45:73"><if pos:start="43:9" pos:end="45:73">if <condition pos:start="43:12" pos:end="43:37">(<expr pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:24">has_host_dev</name> <operator pos:start="43:26" pos:end="43:27">&amp;&amp;</operator> <operator pos:start="43:29" pos:end="43:29">!</operator><name pos:start="43:30" pos:end="43:36">has_nic</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:73"><block_content pos:start="45:13" pos:end="45:73">

            <expr_stmt pos:start="45:13" pos:end="45:73"><expr pos:start="45:13" pos:end="45:72"><call pos:start="45:13" pos:end="45:72"><name pos:start="45:13" pos:end="45:19">fprintf</name><argument_list pos:start="45:20" pos:end="45:72">(<argument pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:26"><name pos:start="45:21" pos:end="45:26">stderr</name></expr></argument>, <argument pos:start="45:29" pos:end="45:61"><expr pos:start="45:29" pos:end="45:61"><literal type="string" pos:start="45:29" pos:end="45:61">"Warning: vlan %d with no nics\n"</literal></expr></argument>, <argument pos:start="45:64" pos:end="45:71"><expr pos:start="45:64" pos:end="45:71"><name pos:start="45:64" pos:end="45:71"><name pos:start="45:64" pos:end="45:67">vlan</name><operator pos:start="45:68" pos:end="45:69">-&gt;</operator><name pos:start="45:70" pos:end="45:71">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="53:30"><if pos:start="47:9" pos:end="53:30">if <condition pos:start="47:12" pos:end="47:37">(<expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:19">has_nic</name> <operator pos:start="47:21" pos:end="47:22">&amp;&amp;</operator> <operator pos:start="47:24" pos:end="47:24">!</operator><name pos:start="47:25" pos:end="47:36">has_host_dev</name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="53:30"><block_content pos:start="49:13" pos:end="53:30">

            <expr_stmt pos:start="49:13" pos:end="53:30"><expr pos:start="49:13" pos:end="53:29"><call pos:start="49:13" pos:end="53:29"><name pos:start="49:13" pos:end="49:19">fprintf</name><argument_list pos:start="49:20" pos:end="53:29">(<argument pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:26"><name pos:start="49:21" pos:end="49:26">stderr</name></expr></argument>,

                    <argument pos:start="51:21" pos:end="51:73"><expr pos:start="51:21" pos:end="51:73"><literal type="string" pos:start="51:21" pos:end="51:73">"Warning: vlan %d is not connected to host network\n"</literal></expr></argument>,

                    <argument pos:start="53:21" pos:end="53:28"><expr pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:28"><name pos:start="53:21" pos:end="53:24">vlan</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:28">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block>

    <macro pos:start="57:5" pos:end="57:47"><name pos:start="57:5" pos:end="57:18">QTAILQ_FOREACH</name><argument_list pos:start="57:19" pos:end="57:47">(<argument pos:start="57:20" pos:end="57:21">vc</argument>, <argument pos:start="57:24" pos:end="57:40">&amp;non_vlan_clients</argument>, <argument pos:start="57:43" pos:end="57:46">next</argument>)</argument_list></macro> <block pos:start="57:49" pos:end="69:5">{<block_content pos:start="59:9" pos:end="67:9">

        <if_stmt pos:start="59:9" pos:end="67:9"><if pos:start="59:9" pos:end="67:9">if <condition pos:start="59:12" pos:end="59:22">(<expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:15">vc</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">peer</name></name></expr>)</condition> <block pos:start="59:24" pos:end="67:9">{<block_content pos:start="61:13" pos:end="65:30">

            <expr_stmt pos:start="61:13" pos:end="65:30"><expr pos:start="61:13" pos:end="65:29"><call pos:start="61:13" pos:end="65:29"><name pos:start="61:13" pos:end="61:19">fprintf</name><argument_list pos:start="61:20" pos:end="65:29">(<argument pos:start="61:21" pos:end="61:26"><expr pos:start="61:21" pos:end="61:26"><name pos:start="61:21" pos:end="61:26">stderr</name></expr></argument>, <argument pos:start="61:29" pos:end="61:58"><expr pos:start="61:29" pos:end="61:58"><literal type="string" pos:start="61:29" pos:end="61:58">"Warning: %s %s has no peer\n"</literal></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:76"><expr pos:start="63:21" pos:end="63:76"><ternary pos:start="63:21" pos:end="63:76"><condition pos:start="63:21" pos:end="63:59"><expr pos:start="63:21" pos:end="63:57"><name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:22">vc</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:28">info</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:34">type</name></name> <operator pos:start="63:36" pos:end="63:37">==</operator> <name pos:start="63:39" pos:end="63:57">NET_CLIENT_TYPE_NIC</name></expr> ?</condition><then pos:start="63:61" pos:end="63:65"> <expr pos:start="63:61" pos:end="63:65"><literal type="string" pos:start="63:61" pos:end="63:65">"nic"</literal></expr> </then><else pos:start="63:67" pos:end="63:76">: <expr pos:start="63:69" pos:end="63:76"><literal type="string" pos:start="63:69" pos:end="63:76">"netdev"</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:28"><expr pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:28"><name pos:start="65:21" pos:end="65:22">vc</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:28">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
