<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27258.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">test_qga_config</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:41">gconstpointer</name></type> <name pos:start="1:43" pos:end="1:46">data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:24">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">GError</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:17">error</name> <init pos:start="5:19" pos:end="5:24">= <expr pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">cwd</name></decl>, <decl pos:start="7:16" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">cmd</name></decl>, <decl pos:start="7:22" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">out</name></decl>, <decl pos:start="7:28" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:31">err</name></decl>, <decl pos:start="7:34" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:37">str</name></decl>, <decl pos:start="7:40" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:40" pos:end="7:40">*</modifier><modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:45">strv</name></decl>, <decl pos:start="7:48" pos:end="7:60"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:48" pos:end="7:48">*</modifier><modifier pos:start="7:49" pos:end="7:49">*</modifier></type><name pos:start="7:50" pos:end="7:53">argv</name> <init pos:start="7:55" pos:end="7:60">= <expr pos:start="7:57" pos:end="7:60"><name pos:start="7:57" pos:end="7:60">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:16"><name pos:start="9:11" pos:end="9:13">env</name><index pos:start="9:14" pos:end="9:16">[<expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">gsize</name></type> <name pos:start="13:11" pos:end="13:11">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">GKeyFile</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:16">kf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:30"><expr pos:start="19:5" pos:end="19:29"><name pos:start="19:5" pos:end="19:7">cwd</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:29"><name pos:start="19:11" pos:end="19:27">g_get_current_dir</name><argument_list pos:start="19:28" pos:end="19:29">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="23:48"><expr pos:start="21:5" pos:end="23:47"><name pos:start="21:5" pos:end="21:7">cmd</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="23:47"><name pos:start="21:11" pos:end="21:25">g_strdup_printf</name><argument_list pos:start="21:26" pos:end="23:47">(<argument pos:start="21:27" pos:end="21:42"><expr pos:start="21:27" pos:end="21:42"><literal type="string" pos:start="21:27" pos:end="21:42">"%s%cqemu-ga -D"</literal></expr></argument>,

                          <argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">cwd</name></expr></argument>, <argument pos:start="23:32" pos:end="23:46"><expr pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:46">G_DIR_SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="26:5" pos:end="26:49"><expr pos:start="26:5" pos:end="26:48"><call pos:start="26:5" pos:end="26:48"><name pos:start="26:5" pos:end="26:22">g_shell_parse_argv</name><argument_list pos:start="26:23" pos:end="26:48">(<argument pos:start="26:24" pos:end="26:26"><expr pos:start="26:24" pos:end="26:26"><name pos:start="26:24" pos:end="26:26">cmd</name></expr></argument>, <argument pos:start="26:29" pos:end="26:32"><expr pos:start="26:29" pos:end="26:32"><name pos:start="26:29" pos:end="26:32">NULL</name></expr></argument>, <argument pos:start="26:35" pos:end="26:39"><expr pos:start="26:35" pos:end="26:39"><operator pos:start="26:35" pos:end="26:35">&amp;</operator><name pos:start="26:36" pos:end="26:39">argv</name></expr></argument>, <argument pos:start="26:42" pos:end="26:47"><expr pos:start="26:42" pos:end="26:47"><operator pos:start="26:42" pos:end="26:42">&amp;</operator><name pos:start="26:43" pos:end="26:47">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:21">g_assert_no_error</name><argument_list pos:start="29:22" pos:end="29:28">(<argument pos:start="29:23" pos:end="29:27"><expr pos:start="29:23" pos:end="29:27"><name pos:start="29:23" pos:end="29:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:63"><expr pos:start="33:5" pos:end="35:62"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">env</name><index pos:start="33:8" pos:end="33:10">[<expr pos:start="33:9" pos:end="33:9"><literal type="number" pos:start="33:9" pos:end="33:9">0</literal></expr>]</index></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <call pos:start="33:14" pos:end="35:62"><name pos:start="33:14" pos:end="33:28">g_strdup_printf</name><argument_list pos:start="33:29" pos:end="35:62">(<argument pos:start="33:30" pos:end="33:68"><expr pos:start="33:30" pos:end="33:68"><literal type="string" pos:start="33:30" pos:end="33:68">"QGA_CONF=tests%cdata%ctest-qga-config"</literal></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:44"><expr pos:start="35:30" pos:end="35:44"><name pos:start="35:30" pos:end="35:44">G_DIR_SEPARATOR</name></expr></argument>, <argument pos:start="35:47" pos:end="35:61"><expr pos:start="35:47" pos:end="35:61"><name pos:start="35:47" pos:end="35:61">G_DIR_SEPARATOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:10"><name pos:start="37:5" pos:end="37:7">env</name><index pos:start="37:8" pos:end="37:10">[<expr pos:start="37:9" pos:end="37:9"><literal type="number" pos:start="37:9" pos:end="37:9">1</literal></expr>]</index></name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:17">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:58"><expr pos:start="39:5" pos:end="41:57"><call pos:start="39:5" pos:end="41:57"><name pos:start="39:5" pos:end="39:16">g_spawn_sync</name><argument_list pos:start="39:17" pos:end="41:57">(<argument pos:start="39:18" pos:end="39:21"><expr pos:start="39:18" pos:end="39:21"><name pos:start="39:18" pos:end="39:21">NULL</name></expr></argument>, <argument pos:start="39:24" pos:end="39:27"><expr pos:start="39:24" pos:end="39:27"><name pos:start="39:24" pos:end="39:27">argv</name></expr></argument>, <argument pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:32">env</name></expr></argument>, <argument pos:start="39:35" pos:end="39:35"><expr pos:start="39:35" pos:end="39:35"><literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr></argument>,

                 <argument pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:21"><name pos:start="41:18" pos:end="41:21">NULL</name></expr></argument>, <argument pos:start="41:24" pos:end="41:27"><expr pos:start="41:24" pos:end="41:27"><name pos:start="41:24" pos:end="41:27">NULL</name></expr></argument>, <argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:33">out</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:39">err</name></expr></argument>, <argument pos:start="41:42" pos:end="41:48"><expr pos:start="41:42" pos:end="41:48"><operator pos:start="41:42" pos:end="41:42">&amp;</operator><name pos:start="41:43" pos:end="41:48">status</name></expr></argument>, <argument pos:start="41:51" pos:end="41:56"><expr pos:start="41:51" pos:end="41:56"><operator pos:start="41:51" pos:end="41:51">&amp;</operator><name pos:start="41:52" pos:end="41:56">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:21"><expr pos:start="43:5" pos:end="43:20"><call pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:14">g_strfreev</name><argument_list pos:start="43:15" pos:end="43:20">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:21">g_assert_no_error</name><argument_list pos:start="47:22" pos:end="47:28">(<argument pos:start="47:23" pos:end="47:27"><expr pos:start="47:23" pos:end="47:27"><name pos:start="47:23" pos:end="47:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><call pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:19">g_assert_cmpstr</name><argument_list pos:start="49:20" pos:end="49:32">(<argument pos:start="49:21" pos:end="49:23"><expr pos:start="49:21" pos:end="49:23"><name pos:start="49:21" pos:end="49:23">err</name></expr></argument>, <argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><operator pos:start="49:26" pos:end="49:27">==</operator></expr></argument>, <argument pos:start="49:30" pos:end="49:31"><expr pos:start="49:30" pos:end="49:31"><literal type="string" pos:start="49:30" pos:end="49:31">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:35"><expr pos:start="51:5" pos:end="51:34"><call pos:start="51:5" pos:end="51:34"><name pos:start="51:5" pos:end="51:19">g_assert_cmpint</name><argument_list pos:start="51:20" pos:end="51:34">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">status</name></expr></argument>, <argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><operator pos:start="51:29" pos:end="51:30">==</operator></expr></argument>, <argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:6">kf</name> <operator pos:start="55:8" pos:end="55:8">=</operator> <call pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:23">g_key_file_new</name><argument_list pos:start="55:24" pos:end="55:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:68"><expr pos:start="57:5" pos:end="57:67"><call pos:start="57:5" pos:end="57:67"><name pos:start="57:5" pos:end="57:29">g_key_file_load_from_data</name><argument_list pos:start="57:30" pos:end="57:67">(<argument pos:start="57:31" pos:end="57:32"><expr pos:start="57:31" pos:end="57:32"><name pos:start="57:31" pos:end="57:32">kf</name></expr></argument>, <argument pos:start="57:35" pos:end="57:37"><expr pos:start="57:35" pos:end="57:37"><name pos:start="57:35" pos:end="57:37">out</name></expr></argument>, <argument pos:start="57:40" pos:end="57:41"><expr pos:start="57:40" pos:end="57:41"><operator pos:start="57:40" pos:end="57:40">-</operator><literal type="number" pos:start="57:41" pos:end="57:41">1</literal></expr></argument>, <argument pos:start="57:44" pos:end="57:58"><expr pos:start="57:44" pos:end="57:58"><name pos:start="57:44" pos:end="57:58">G_KEY_FILE_NONE</name></expr></argument>, <argument pos:start="57:61" pos:end="57:66"><expr pos:start="57:61" pos:end="57:66"><operator pos:start="57:61" pos:end="57:61">&amp;</operator><name pos:start="57:62" pos:end="57:66">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><call pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:21">g_assert_no_error</name><argument_list pos:start="59:22" pos:end="59:28">(<argument pos:start="59:23" pos:end="59:27"><expr pos:start="59:23" pos:end="59:27"><name pos:start="59:23" pos:end="59:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:41"><expr pos:start="63:5" pos:end="63:40"><name pos:start="63:5" pos:end="63:7">str</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:40"><name pos:start="63:11" pos:end="63:36">g_key_file_get_start_group</name><argument_list pos:start="63:37" pos:end="63:40">(<argument pos:start="63:38" pos:end="63:39"><expr pos:start="63:38" pos:end="63:39"><name pos:start="63:38" pos:end="63:39">kf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:40"><expr pos:start="65:5" pos:end="65:39"><call pos:start="65:5" pos:end="65:39"><name pos:start="65:5" pos:end="65:19">g_assert_cmpstr</name><argument_list pos:start="65:20" pos:end="65:39">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">str</name></expr></argument>, <argument pos:start="65:26" pos:end="65:27"><expr pos:start="65:26" pos:end="65:27"><operator pos:start="65:26" pos:end="65:27">==</operator></expr></argument>, <argument pos:start="65:30" pos:end="65:38"><expr pos:start="65:30" pos:end="65:38"><literal type="string" pos:start="65:30" pos:end="65:38">"general"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><call pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:15">(<argument pos:start="67:12" pos:end="67:14"><expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:76"><expr pos:start="71:5" pos:end="71:75"><call pos:start="71:5" pos:end="71:75"><name pos:start="71:5" pos:end="71:18">g_assert_false</name><argument_list pos:start="71:19" pos:end="71:75">(<argument pos:start="71:20" pos:end="71:74"><expr pos:start="71:20" pos:end="71:74"><call pos:start="71:20" pos:end="71:74"><name pos:start="71:20" pos:end="71:41">g_key_file_get_boolean</name><argument_list pos:start="71:42" pos:end="71:74">(<argument pos:start="71:43" pos:end="71:44"><expr pos:start="71:43" pos:end="71:44"><name pos:start="71:43" pos:end="71:44">kf</name></expr></argument>, <argument pos:start="71:47" pos:end="71:55"><expr pos:start="71:47" pos:end="71:55"><literal type="string" pos:start="71:47" pos:end="71:55">"general"</literal></expr></argument>, <argument pos:start="71:58" pos:end="71:65"><expr pos:start="71:58" pos:end="71:65"><literal type="string" pos:start="71:58" pos:end="71:65">"daemon"</literal></expr></argument>, <argument pos:start="71:68" pos:end="71:73"><expr pos:start="71:68" pos:end="71:73"><operator pos:start="71:68" pos:end="71:68">&amp;</operator><name pos:start="71:69" pos:end="71:73">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:29"><expr pos:start="73:5" pos:end="73:28"><call pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:21">g_assert_no_error</name><argument_list pos:start="73:22" pos:end="73:28">(<argument pos:start="73:23" pos:end="73:27"><expr pos:start="73:23" pos:end="73:27"><name pos:start="73:23" pos:end="73:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:65"><expr pos:start="77:5" pos:end="77:64"><name pos:start="77:5" pos:end="77:7">str</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:64"><name pos:start="77:11" pos:end="77:31">g_key_file_get_string</name><argument_list pos:start="77:32" pos:end="77:64">(<argument pos:start="77:33" pos:end="77:34"><expr pos:start="77:33" pos:end="77:34"><name pos:start="77:33" pos:end="77:34">kf</name></expr></argument>, <argument pos:start="77:37" pos:end="77:45"><expr pos:start="77:37" pos:end="77:45"><literal type="string" pos:start="77:37" pos:end="77:45">"general"</literal></expr></argument>, <argument pos:start="77:48" pos:end="77:55"><expr pos:start="77:48" pos:end="77:55"><literal type="string" pos:start="77:48" pos:end="77:55">"method"</literal></expr></argument>, <argument pos:start="77:58" pos:end="77:63"><expr pos:start="77:58" pos:end="77:63"><operator pos:start="77:58" pos:end="77:58">&amp;</operator><name pos:start="77:59" pos:end="77:63">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><call pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:21">g_assert_no_error</name><argument_list pos:start="79:22" pos:end="79:28">(<argument pos:start="79:23" pos:end="79:27"><expr pos:start="79:23" pos:end="79:27"><name pos:start="79:23" pos:end="79:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:46"><expr pos:start="81:5" pos:end="81:45"><call pos:start="81:5" pos:end="81:45"><name pos:start="81:5" pos:end="81:19">g_assert_cmpstr</name><argument_list pos:start="81:20" pos:end="81:45">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">str</name></expr></argument>, <argument pos:start="81:26" pos:end="81:27"><expr pos:start="81:26" pos:end="81:27"><operator pos:start="81:26" pos:end="81:27">==</operator></expr></argument>, <argument pos:start="81:30" pos:end="81:44"><expr pos:start="81:30" pos:end="81:44"><literal type="string" pos:start="81:30" pos:end="81:44">"virtio-serial"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:16"><expr pos:start="83:5" pos:end="83:15"><call pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:10">g_free</name><argument_list pos:start="83:11" pos:end="83:15">(<argument pos:start="83:12" pos:end="83:14"><expr pos:start="83:12" pos:end="83:14"><name pos:start="83:12" pos:end="83:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:63"><expr pos:start="87:5" pos:end="87:62"><name pos:start="87:5" pos:end="87:7">str</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:62"><name pos:start="87:11" pos:end="87:31">g_key_file_get_string</name><argument_list pos:start="87:32" pos:end="87:62">(<argument pos:start="87:33" pos:end="87:34"><expr pos:start="87:33" pos:end="87:34"><name pos:start="87:33" pos:end="87:34">kf</name></expr></argument>, <argument pos:start="87:37" pos:end="87:45"><expr pos:start="87:37" pos:end="87:45"><literal type="string" pos:start="87:37" pos:end="87:45">"general"</literal></expr></argument>, <argument pos:start="87:48" pos:end="87:53"><expr pos:start="87:48" pos:end="87:53"><literal type="string" pos:start="87:48" pos:end="87:53">"path"</literal></expr></argument>, <argument pos:start="87:56" pos:end="87:61"><expr pos:start="87:56" pos:end="87:61"><operator pos:start="87:56" pos:end="87:56">&amp;</operator><name pos:start="87:57" pos:end="87:61">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:21">g_assert_no_error</name><argument_list pos:start="89:22" pos:end="89:28">(<argument pos:start="89:23" pos:end="89:27"><expr pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:64"><expr pos:start="91:5" pos:end="91:63"><call pos:start="91:5" pos:end="91:63"><name pos:start="91:5" pos:end="91:19">g_assert_cmpstr</name><argument_list pos:start="91:20" pos:end="91:63">(<argument pos:start="91:21" pos:end="91:23"><expr pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">str</name></expr></argument>, <argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><operator pos:start="91:26" pos:end="91:27">==</operator></expr></argument>, <argument pos:start="91:30" pos:end="91:62"><expr pos:start="91:30" pos:end="91:62"><literal type="string" pos:start="91:30" pos:end="91:62">"/path/to/org.qemu.guest_agent.0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:16"><expr pos:start="93:5" pos:end="93:15"><call pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:10">g_free</name><argument_list pos:start="93:11" pos:end="93:15">(<argument pos:start="93:12" pos:end="93:14"><expr pos:start="93:12" pos:end="93:14"><name pos:start="93:12" pos:end="93:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:66"><expr pos:start="97:5" pos:end="97:65"><name pos:start="97:5" pos:end="97:7">str</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:65"><name pos:start="97:11" pos:end="97:31">g_key_file_get_string</name><argument_list pos:start="97:32" pos:end="97:65">(<argument pos:start="97:33" pos:end="97:34"><expr pos:start="97:33" pos:end="97:34"><name pos:start="97:33" pos:end="97:34">kf</name></expr></argument>, <argument pos:start="97:37" pos:end="97:45"><expr pos:start="97:37" pos:end="97:45"><literal type="string" pos:start="97:37" pos:end="97:45">"general"</literal></expr></argument>, <argument pos:start="97:48" pos:end="97:56"><expr pos:start="97:48" pos:end="97:56"><literal type="string" pos:start="97:48" pos:end="97:56">"pidfile"</literal></expr></argument>, <argument pos:start="97:59" pos:end="97:64"><expr pos:start="97:59" pos:end="97:64"><operator pos:start="97:59" pos:end="97:59">&amp;</operator><name pos:start="97:60" pos:end="97:64">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:29"><expr pos:start="99:5" pos:end="99:28"><call pos:start="99:5" pos:end="99:28"><name pos:start="99:5" pos:end="99:21">g_assert_no_error</name><argument_list pos:start="99:22" pos:end="99:28">(<argument pos:start="99:23" pos:end="99:27"><expr pos:start="99:23" pos:end="99:27"><name pos:start="99:23" pos:end="99:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:53"><expr pos:start="101:5" pos:end="101:52"><call pos:start="101:5" pos:end="101:52"><name pos:start="101:5" pos:end="101:19">g_assert_cmpstr</name><argument_list pos:start="101:20" pos:end="101:52">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">str</name></expr></argument>, <argument pos:start="101:26" pos:end="101:27"><expr pos:start="101:26" pos:end="101:27"><operator pos:start="101:26" pos:end="101:27">==</operator></expr></argument>, <argument pos:start="101:30" pos:end="101:51"><expr pos:start="101:30" pos:end="101:51"><literal type="string" pos:start="101:30" pos:end="101:51">"/var/foo/qemu-ga.pid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:16"><expr pos:start="103:5" pos:end="103:15"><call pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:15">(<argument pos:start="103:12" pos:end="103:14"><expr pos:start="103:12" pos:end="103:14"><name pos:start="103:12" pos:end="103:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:67"><expr pos:start="107:5" pos:end="107:66"><name pos:start="107:5" pos:end="107:7">str</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:66"><name pos:start="107:11" pos:end="107:31">g_key_file_get_string</name><argument_list pos:start="107:32" pos:end="107:66">(<argument pos:start="107:33" pos:end="107:34"><expr pos:start="107:33" pos:end="107:34"><name pos:start="107:33" pos:end="107:34">kf</name></expr></argument>, <argument pos:start="107:37" pos:end="107:45"><expr pos:start="107:37" pos:end="107:45"><literal type="string" pos:start="107:37" pos:end="107:45">"general"</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:57"><expr pos:start="107:48" pos:end="107:57"><literal type="string" pos:start="107:48" pos:end="107:57">"statedir"</literal></expr></argument>, <argument pos:start="107:60" pos:end="107:65"><expr pos:start="107:60" pos:end="107:65"><operator pos:start="107:60" pos:end="107:60">&amp;</operator><name pos:start="107:61" pos:end="107:65">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><call pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:21">g_assert_no_error</name><argument_list pos:start="109:22" pos:end="109:28">(<argument pos:start="109:23" pos:end="109:27"><expr pos:start="109:23" pos:end="109:27"><name pos:start="109:23" pos:end="109:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:43"><expr pos:start="111:5" pos:end="111:42"><call pos:start="111:5" pos:end="111:42"><name pos:start="111:5" pos:end="111:19">g_assert_cmpstr</name><argument_list pos:start="111:20" pos:end="111:42">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">str</name></expr></argument>, <argument pos:start="111:26" pos:end="111:27"><expr pos:start="111:26" pos:end="111:27"><operator pos:start="111:26" pos:end="111:27">==</operator></expr></argument>, <argument pos:start="111:30" pos:end="111:41"><expr pos:start="111:30" pos:end="111:41"><literal type="string" pos:start="111:30" pos:end="111:41">"/var/state"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:16"><expr pos:start="113:5" pos:end="113:15"><call pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:10">g_free</name><argument_list pos:start="113:11" pos:end="113:15">(<argument pos:start="113:12" pos:end="113:14"><expr pos:start="113:12" pos:end="113:14"><name pos:start="113:12" pos:end="113:14">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:76"><expr pos:start="117:5" pos:end="117:75"><call pos:start="117:5" pos:end="117:75"><name pos:start="117:5" pos:end="117:17">g_assert_true</name><argument_list pos:start="117:18" pos:end="117:75">(<argument pos:start="117:19" pos:end="117:74"><expr pos:start="117:19" pos:end="117:74"><call pos:start="117:19" pos:end="117:74"><name pos:start="117:19" pos:end="117:40">g_key_file_get_boolean</name><argument_list pos:start="117:41" pos:end="117:74">(<argument pos:start="117:42" pos:end="117:43"><expr pos:start="117:42" pos:end="117:43"><name pos:start="117:42" pos:end="117:43">kf</name></expr></argument>, <argument pos:start="117:46" pos:end="117:54"><expr pos:start="117:46" pos:end="117:54"><literal type="string" pos:start="117:46" pos:end="117:54">"general"</literal></expr></argument>, <argument pos:start="117:57" pos:end="117:65"><expr pos:start="117:57" pos:end="117:65"><literal type="string" pos:start="117:57" pos:end="117:65">"verbose"</literal></expr></argument>, <argument pos:start="117:68" pos:end="117:73"><expr pos:start="117:68" pos:end="117:73"><operator pos:start="117:68" pos:end="117:68">&amp;</operator><name pos:start="117:69" pos:end="117:73">error</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:29"><expr pos:start="119:5" pos:end="119:28"><call pos:start="119:5" pos:end="119:28"><name pos:start="119:5" pos:end="119:21">g_assert_no_error</name><argument_list pos:start="119:22" pos:end="119:28">(<argument pos:start="119:23" pos:end="119:27"><expr pos:start="119:23" pos:end="119:27"><name pos:start="119:23" pos:end="119:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:78"><expr pos:start="123:5" pos:end="123:77"><name pos:start="123:5" pos:end="123:8">strv</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <call pos:start="123:12" pos:end="123:77"><name pos:start="123:12" pos:end="123:37">g_key_file_get_string_list</name><argument_list pos:start="123:38" pos:end="123:77">(<argument pos:start="123:39" pos:end="123:40"><expr pos:start="123:39" pos:end="123:40"><name pos:start="123:39" pos:end="123:40">kf</name></expr></argument>, <argument pos:start="123:43" pos:end="123:51"><expr pos:start="123:43" pos:end="123:51"><literal type="string" pos:start="123:43" pos:end="123:51">"general"</literal></expr></argument>, <argument pos:start="123:54" pos:end="123:64"><expr pos:start="123:54" pos:end="123:64"><literal type="string" pos:start="123:54" pos:end="123:64">"blacklist"</literal></expr></argument>, <argument pos:start="123:67" pos:end="123:68"><expr pos:start="123:67" pos:end="123:68"><operator pos:start="123:67" pos:end="123:67">&amp;</operator><name pos:start="123:68" pos:end="123:68">n</name></expr></argument>, <argument pos:start="123:71" pos:end="123:76"><expr pos:start="123:71" pos:end="123:76"><operator pos:start="123:71" pos:end="123:71">&amp;</operator><name pos:start="123:72" pos:end="123:76">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="128:0"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:19">g_assert_cmpint</name><argument_list pos:start="125:20" pos:end="125:29">(<argument pos:start="125:21" pos:end="125:21"><expr pos:start="125:21" pos:end="125:21"><name pos:start="125:21" pos:end="125:21">n</name></expr></argument>, <argument pos:start="125:24" pos:end="125:25"><expr pos:start="125:24" pos:end="125:25"><operator pos:start="125:24" pos:end="125:25">==</operator></expr></argument>, <argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><literal type="number" pos:start="125:28" pos:end="125:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="127:1" pos:end="127:32">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:32"><call pos:start="127:5" pos:end="127:32"><name pos:start="127:5" pos:end="127:22">GLIB_CHECK_VERSION</name><argument_list pos:start="127:23" pos:end="127:32">(<argument pos:start="127:24" pos:end="127:31"><expr pos:start="127:24" pos:end="127:31"><literal type="number" pos:start="127:24" pos:end="127:24">2</literal><operator pos:start="127:25" pos:end="127:25">,</operator> <literal type="number" pos:start="127:27" pos:end="127:28">44</literal><operator pos:start="127:29" pos:end="127:29">,</operator> <literal type="number" pos:start="127:31" pos:end="127:31">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="129:5" pos:end="131:49"><expr pos:start="129:5" pos:end="131:48"><call pos:start="129:5" pos:end="131:48"><name pos:start="129:5" pos:end="129:17">g_assert_true</name><argument_list pos:start="129:18" pos:end="131:48">(<argument pos:start="129:19" pos:end="131:47"><expr pos:start="129:19" pos:end="131:47"><call pos:start="129:19" pos:end="131:47"><name pos:start="129:19" pos:end="129:33">g_strv_contains</name><argument_list pos:start="129:34" pos:end="131:47">(<argument pos:start="129:35" pos:end="129:60"><expr pos:start="129:35" pos:end="129:60"><operator pos:start="129:35" pos:end="129:35">(</operator><specifier pos:start="129:36" pos:end="129:40">const</specifier> <name pos:start="129:42" pos:end="129:45">char</name> <operator pos:start="129:47" pos:end="129:47">*</operator> <specifier pos:start="129:49" pos:end="129:53">const</specifier> <operator pos:start="129:55" pos:end="129:55">*</operator><operator pos:start="129:56" pos:end="129:56">)</operator><name pos:start="129:57" pos:end="129:60">strv</name></expr></argument>,

                                  <argument pos:start="131:35" pos:end="131:46"><expr pos:start="131:35" pos:end="131:46"><literal type="string" pos:start="131:35" pos:end="131:46">"guest-ping"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="138:0"><expr pos:start="133:5" pos:end="135:52"><call pos:start="133:5" pos:end="135:52"><name pos:start="133:5" pos:end="133:17">g_assert_true</name><argument_list pos:start="133:18" pos:end="135:52">(<argument pos:start="133:19" pos:end="135:51"><expr pos:start="133:19" pos:end="135:51"><call pos:start="133:19" pos:end="135:51"><name pos:start="133:19" pos:end="133:33">g_strv_contains</name><argument_list pos:start="133:34" pos:end="135:51">(<argument pos:start="133:35" pos:end="133:60"><expr pos:start="133:35" pos:end="133:60"><operator pos:start="133:35" pos:end="133:35">(</operator><specifier pos:start="133:36" pos:end="133:40">const</specifier> <name pos:start="133:42" pos:end="133:45">char</name> <operator pos:start="133:47" pos:end="133:47">*</operator> <specifier pos:start="133:49" pos:end="133:53">const</specifier> <operator pos:start="133:55" pos:end="133:55">*</operator><operator pos:start="133:56" pos:end="133:56">)</operator><name pos:start="133:57" pos:end="133:60">strv</name></expr></argument>,

                                  <argument pos:start="135:35" pos:end="135:50"><expr pos:start="135:35" pos:end="135:50"><literal type="string" pos:start="135:35" pos:end="135:50">"guest-get-time"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="139:5" pos:end="139:29"><expr pos:start="139:5" pos:end="139:28"><call pos:start="139:5" pos:end="139:28"><name pos:start="139:5" pos:end="139:21">g_assert_no_error</name><argument_list pos:start="139:22" pos:end="139:28">(<argument pos:start="139:23" pos:end="139:27"><expr pos:start="139:23" pos:end="139:27"><name pos:start="139:23" pos:end="139:27">error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:21"><expr pos:start="141:5" pos:end="141:20"><call pos:start="141:5" pos:end="141:20"><name pos:start="141:5" pos:end="141:14">g_strfreev</name><argument_list pos:start="141:15" pos:end="141:20">(<argument pos:start="141:16" pos:end="141:19"><expr pos:start="141:16" pos:end="141:19"><name pos:start="141:16" pos:end="141:19">strv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:16"><expr pos:start="145:5" pos:end="145:15"><call pos:start="145:5" pos:end="145:15"><name pos:start="145:5" pos:end="145:10">g_free</name><argument_list pos:start="145:11" pos:end="145:15">(<argument pos:start="145:12" pos:end="145:14"><expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:16"><expr pos:start="147:5" pos:end="147:15"><call pos:start="147:5" pos:end="147:15"><name pos:start="147:5" pos:end="147:10">g_free</name><argument_list pos:start="147:11" pos:end="147:15">(<argument pos:start="147:12" pos:end="147:14"><expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:19"><expr pos:start="149:5" pos:end="149:18"><call pos:start="149:5" pos:end="149:18"><name pos:start="149:5" pos:end="149:10">g_free</name><argument_list pos:start="149:11" pos:end="149:18">(<argument pos:start="149:12" pos:end="149:17"><expr pos:start="149:12" pos:end="149:17"><name pos:start="149:12" pos:end="149:17"><name pos:start="149:12" pos:end="149:14">env</name><index pos:start="149:15" pos:end="149:17">[<expr pos:start="149:16" pos:end="149:16"><literal type="number" pos:start="149:16" pos:end="149:16">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:24"><expr pos:start="151:5" pos:end="151:23"><call pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:19">g_key_file_free</name><argument_list pos:start="151:20" pos:end="151:23">(<argument pos:start="151:21" pos:end="151:22"><expr pos:start="151:21" pos:end="151:22"><name pos:start="151:21" pos:end="151:22">kf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
