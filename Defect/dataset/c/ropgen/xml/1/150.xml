<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/150.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">vnc_zlib_stop</name><parameter_list pos:start="1:25" pos:end="1:53">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:33">VncState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">vs</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:52">stream_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:45">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">z_streamp</name></type> <name pos:start="5:15" pos:end="5:21">zstream</name> <init pos:start="5:23" pos:end="5:51">= <expr pos:start="5:25" pos:end="5:51"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:51"><name pos:start="5:26" pos:end="5:27">vs</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:40">zlib_stream</name><index pos:start="5:41" pos:end="5:51">[<expr pos:start="5:42" pos:end="5:50"><name pos:start="5:42" pos:end="5:50">stream_id</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">previous_out</name></decl>;</decl_stmt>



    <comment type="line" pos:start="11:5" pos:end="11:48">// switch back to normal output/zlib buffers</comment>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:12">zlib</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:17">vs</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:25">output</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:6">vs</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:14">output</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:29"><name pos:start="15:18" pos:end="15:19">vs</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:29">zlib_tmp</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:31">// compress the zlib buffer</comment>



    <comment type="line" pos:start="23:5" pos:end="23:28">// initialize the stream</comment>

    <comment type="line" pos:start="25:5" pos:end="25:38">// XXX need one stream per session</comment>

    <if_stmt pos:start="27:5" pos:end="61:5"><if pos:start="27:5" pos:end="61:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:15">zstream</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:23">opaque</name></name> <operator pos:start="27:25" pos:end="27:26">!=</operator> <name pos:start="27:28" pos:end="27:29">vs</name></expr>)</condition> <block pos:start="27:32" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:29">

        <decl_stmt pos:start="29:9" pos:end="29:16"><decl pos:start="29:9" pos:end="29:15"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:15">err</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:67"><expr pos:start="33:9" pos:end="33:66"><call pos:start="33:9" pos:end="33:66"><name pos:start="33:9" pos:end="33:17">VNC_DEBUG</name><argument_list pos:start="33:18" pos:end="33:66">(<argument pos:start="33:19" pos:end="33:54"><expr pos:start="33:19" pos:end="33:54"><literal type="string" pos:start="33:19" pos:end="33:54">"VNC: initializing zlib stream %d\n"</literal></expr></argument>, <argument pos:start="33:57" pos:end="33:65"><expr pos:start="33:57" pos:end="33:65"><name pos:start="33:57" pos:end="33:65">stream_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:71"><expr pos:start="35:9" pos:end="35:70"><call pos:start="35:9" pos:end="35:70"><name pos:start="35:9" pos:end="35:17">VNC_DEBUG</name><argument_list pos:start="35:18" pos:end="35:70">(<argument pos:start="35:19" pos:end="35:48"><expr pos:start="35:19" pos:end="35:48"><literal type="string" pos:start="35:19" pos:end="35:48">"VNC: opaque = %p | vs = %p\n"</literal></expr></argument>, <argument pos:start="35:51" pos:end="35:65"><expr pos:start="35:51" pos:end="35:65"><name pos:start="35:51" pos:end="35:65"><name pos:start="35:51" pos:end="35:57">zstream</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:65">opaque</name></name></expr></argument>, <argument pos:start="35:68" pos:end="35:69"><expr pos:start="35:68" pos:end="35:69"><name pos:start="35:68" pos:end="35:69">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:15">zstream</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:23">zalloc</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:32">Z_NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:15">zstream</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:22">zfree</name></name> <operator pos:start="39:24" pos:end="39:24">=</operator> <name pos:start="39:26" pos:end="39:31">Z_NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="45:62"><expr pos:start="43:9" pos:end="45:61"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="45:61"><name pos:start="43:15" pos:end="43:26">deflateInit2</name><argument_list pos:start="43:27" pos:end="45:61">(<argument pos:start="43:28" pos:end="43:34"><expr pos:start="43:28" pos:end="43:34"><name pos:start="43:28" pos:end="43:34">zstream</name></expr></argument>, <argument pos:start="43:37" pos:end="43:57"><expr pos:start="43:37" pos:end="43:57"><name pos:start="43:37" pos:end="43:57"><name pos:start="43:37" pos:end="43:38">vs</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:57">tight_compression</name></name></expr></argument>, <argument pos:start="43:60" pos:end="43:69"><expr pos:start="43:60" pos:end="43:69"><name pos:start="43:60" pos:end="43:69">Z_DEFLATED</name></expr></argument>, <argument pos:start="43:72" pos:end="43:80"><expr pos:start="43:72" pos:end="43:80"><name pos:start="43:72" pos:end="43:80">MAX_WBITS</name></expr></argument>,

                           <argument pos:start="45:28" pos:end="45:40"><expr pos:start="45:28" pos:end="45:40"><name pos:start="45:28" pos:end="45:40">MAX_MEM_LEVEL</name></expr></argument>, <argument pos:start="45:43" pos:end="45:60"><expr pos:start="45:43" pos:end="45:60"><name pos:start="45:43" pos:end="45:60">Z_DEFAULT_STRATEGY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:24">(<expr pos:start="49:13" pos:end="49:23"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:18">!=</operator> <name pos:start="49:20" pos:end="49:23">Z_OK</name></expr>)</condition> <block pos:start="49:26" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:22">

            <expr_stmt pos:start="51:13" pos:end="51:62"><expr pos:start="51:13" pos:end="51:61"><call pos:start="51:13" pos:end="51:61"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="51:61">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="51:60"><expr pos:start="51:29" pos:end="51:60"><literal type="string" pos:start="51:29" pos:end="51:60">"VNC: error initializing zlib\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:22">return <expr pos:start="53:20" pos:end="53:21"><operator pos:start="53:20" pos:end="53:20">-</operator><literal type="number" pos:start="53:21" pos:end="53:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:15">zstream</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:23">opaque</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:28">vs</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:62">// XXX what to do if tight_compression changed in between?</comment>



    <comment type="line" pos:start="69:5" pos:end="69:38">// reserve memory in output buffer</comment>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><call pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:18">buffer_reserve</name><argument_list pos:start="71:19" pos:end="71:53">(<argument pos:start="71:20" pos:end="71:30"><expr pos:start="71:20" pos:end="71:30"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:30"><name pos:start="71:21" pos:end="71:22">vs</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:30">output</name></name></expr></argument>, <argument pos:start="71:33" pos:end="71:52"><expr pos:start="71:33" pos:end="71:52"><name pos:start="71:33" pos:end="71:47"><name pos:start="71:33" pos:end="71:34">vs</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:40">zlib</name><operator pos:start="71:41" pos:end="71:41">.</operator><name pos:start="71:42" pos:end="71:47">offset</name></name> <operator pos:start="71:49" pos:end="71:49">+</operator> <literal type="number" pos:start="71:51" pos:end="71:52">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:19">// set pointers</comment>

    <expr_stmt pos:start="77:5" pos:end="77:39"><expr pos:start="77:5" pos:end="77:38"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:11">zstream</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:20">next_in</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:38"><name pos:start="77:24" pos:end="77:25">vs</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:31">zlib</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:38">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:21"><name pos:start="79:5" pos:end="79:11">zstream</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:21">avail_in</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:39"><name pos:start="79:25" pos:end="79:26">vs</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:32">zlib</name><operator pos:start="79:33" pos:end="79:33">.</operator><name pos:start="79:34" pos:end="79:39">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:62"><expr pos:start="81:5" pos:end="81:61"><name pos:start="81:5" pos:end="81:21"><name pos:start="81:5" pos:end="81:11">zstream</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:21">next_out</name></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:41"><name pos:start="81:25" pos:end="81:26">vs</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:34">output</name><operator pos:start="81:35" pos:end="81:35">.</operator><name pos:start="81:36" pos:end="81:41">buffer</name></name> <operator pos:start="81:43" pos:end="81:43">+</operator> <name pos:start="81:45" pos:end="81:61"><name pos:start="81:45" pos:end="81:46">vs</name><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:54">output</name><operator pos:start="81:55" pos:end="81:55">.</operator><name pos:start="81:56" pos:end="81:61">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:65"><expr pos:start="83:5" pos:end="83:64"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:11">zstream</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">avail_out</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:44"><name pos:start="83:26" pos:end="83:27">vs</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:35">output</name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:44">capacity</name></name> <operator pos:start="83:46" pos:end="83:46">-</operator> <name pos:start="83:48" pos:end="83:64"><name pos:start="83:48" pos:end="83:49">vs</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:57">output</name><operator pos:start="83:58" pos:end="83:58">.</operator><name pos:start="83:59" pos:end="83:64">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:11">zstream</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">data_type</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <name pos:start="85:26" pos:end="85:33">Z_BINARY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:16">previous_out</name> <operator pos:start="87:18" pos:end="87:18">=</operator> <name pos:start="87:20" pos:end="87:37"><name pos:start="87:20" pos:end="87:26">zstream</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:37">total_out</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="91:5" pos:end="91:21">// start encoding</comment>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:47">(<expr pos:start="93:9" pos:end="93:46"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:15">deflate</name><argument_list pos:start="93:16" pos:end="93:38">(<argument pos:start="93:17" pos:end="93:23"><expr pos:start="93:17" pos:end="93:23"><name pos:start="93:17" pos:end="93:23">zstream</name></expr></argument>, <argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37">Z_SYNC_FLUSH</name></expr></argument>)</argument_list></call> <operator pos:start="93:40" pos:end="93:41">!=</operator> <name pos:start="93:43" pos:end="93:46">Z_OK</name></expr>)</condition> <block pos:start="93:49" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:18">

        <expr_stmt pos:start="95:9" pos:end="95:64"><expr pos:start="95:9" pos:end="95:63"><call pos:start="95:9" pos:end="95:63"><name pos:start="95:9" pos:end="95:15">fprintf</name><argument_list pos:start="95:16" pos:end="95:63">(<argument pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:22">stderr</name></expr></argument>, <argument pos:start="95:25" pos:end="95:62"><expr pos:start="95:25" pos:end="95:62"><literal type="string" pos:start="95:25" pos:end="95:62">"VNC: error during zlib compression\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:18">return <expr pos:start="97:16" pos:end="97:17"><operator pos:start="97:16" pos:end="97:16">-</operator><literal type="number" pos:start="97:17" pos:end="97:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:65"><expr pos:start="103:5" pos:end="103:64"><name pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:6">vs</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:14">output</name><operator pos:start="103:15" pos:end="103:15">.</operator><name pos:start="103:16" pos:end="103:21">offset</name></name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:43"><name pos:start="103:25" pos:end="103:26">vs</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:34">output</name><operator pos:start="103:35" pos:end="103:35">.</operator><name pos:start="103:36" pos:end="103:43">capacity</name></name> <operator pos:start="103:45" pos:end="103:45">-</operator> <name pos:start="103:47" pos:end="103:64"><name pos:start="103:47" pos:end="103:53">zstream</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:64">avail_out</name></name></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:45">return <expr pos:start="105:12" pos:end="105:44"><name pos:start="105:12" pos:end="105:29"><name pos:start="105:12" pos:end="105:18">zstream</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:29">total_out</name></name> <operator pos:start="105:31" pos:end="105:31">-</operator> <name pos:start="105:33" pos:end="105:44">previous_out</name></expr>;</return>

</block_content>}</block></function>
</unit>
