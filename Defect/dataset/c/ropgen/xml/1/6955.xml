<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6955.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:13"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:33">ff_nvenc_encode_close</name><parameter_list pos:start="1:34" pos:end="1:56">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="23:13">{<block_content pos:start="3:5" pos:end="23:13">
    <decl_stmt pos:start="3:5" pos:end="3:55"><decl pos:start="3:5" pos:end="3:54"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:16">NVENCContext</name> <modifier pos:start="3:18" pos:end="3:18">*</modifier></type><name pos:start="3:19" pos:end="3:21">ctx</name>               <init pos:start="3:37" pos:end="3:54">= <expr pos:start="3:39" pos:end="3:54"><name pos:start="3:39" pos:end="3:54"><name pos:start="3:39" pos:end="3:43">avctx</name><operator pos:start="3:44" pos:end="3:45">-&gt;</operator><name pos:start="3:46" pos:end="3:54">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:61"><decl pos:start="4:5" pos:end="4:60"><type pos:start="4:5" pos:end="4:33"><name pos:start="4:5" pos:end="4:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="4:33" pos:end="4:33">*</modifier></type><name pos:start="4:34" pos:end="4:35">nv</name> <init pos:start="4:37" pos:end="4:60">= <expr pos:start="4:39" pos:end="4:60"><operator pos:start="4:39" pos:end="4:39">&amp;</operator><name pos:start="4:40" pos:end="4:60"><name pos:start="4:40" pos:end="4:42">ctx</name><operator pos:start="4:43" pos:end="4:44">-&gt;</operator><name pos:start="4:45" pos:end="4:48">nvel</name><operator pos:start="4:49" pos:end="4:49">.</operator><name pos:start="4:50" pos:end="4:60">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:34"><expr pos:start="6:5" pos:end="6:33"><call pos:start="6:5" pos:end="6:33"><name pos:start="6:5" pos:end="6:16">av_fifo_free</name><argument_list pos:start="6:17" pos:end="6:33">(<argument pos:start="6:18" pos:end="6:32"><expr pos:start="6:18" pos:end="6:32"><name pos:start="6:18" pos:end="6:32"><name pos:start="6:18" pos:end="6:20">ctx</name><operator pos:start="6:21" pos:end="6:22">-&gt;</operator><name pos:start="6:23" pos:end="6:32">timestamps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><call pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:16">av_fifo_free</name><argument_list pos:start="7:17" pos:end="7:30">(<argument pos:start="7:18" pos:end="7:29"><expr pos:start="7:18" pos:end="7:29"><name pos:start="7:18" pos:end="7:29"><name pos:start="7:18" pos:end="7:20">ctx</name><operator pos:start="7:21" pos:end="7:22">-&gt;</operator><name pos:start="7:23" pos:end="7:29">pending</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:29"><expr pos:start="8:5" pos:end="8:28"><call pos:start="8:5" pos:end="8:28"><name pos:start="8:5" pos:end="8:16">av_fifo_free</name><argument_list pos:start="8:17" pos:end="8:28">(<argument pos:start="8:18" pos:end="8:27"><expr pos:start="8:18" pos:end="8:27"><name pos:start="8:18" pos:end="8:27"><name pos:start="8:18" pos:end="8:20">ctx</name><operator pos:start="8:21" pos:end="8:22">-&gt;</operator><name pos:start="8:23" pos:end="8:27">ready</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="23:13"><if pos:start="9:5" pos:end="23:13">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:11">ctx</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:15">in</name></name></expr>)</condition> <block pos:start="9:18" pos:end="23:13">{<block_content pos:start="10:9" pos:end="23:13">
        <for pos:start="10:9" pos:end="23:13">for <control pos:start="10:13" pos:end="10:46">(<init pos:start="10:14" pos:end="10:19"><expr pos:start="10:14" pos:end="10:18"><name pos:start="10:14" pos:end="10:14">i</name> <operator pos:start="10:16" pos:end="10:16">=</operator> <literal type="number" pos:start="10:18" pos:end="10:18">0</literal></expr>;</init> <condition pos:start="10:21" pos:end="10:41"><expr pos:start="10:21" pos:end="10:40"><name pos:start="10:21" pos:end="10:21">i</name> <operator pos:start="10:23" pos:end="10:23">&lt;</operator> <name pos:start="10:25" pos:end="10:40"><name pos:start="10:25" pos:end="10:27">ctx</name><operator pos:start="10:28" pos:end="10:29">-&gt;</operator><name pos:start="10:30" pos:end="10:40">nb_surfaces</name></name></expr>;</condition> <incr pos:start="10:43" pos:end="10:45"><expr pos:start="10:43" pos:end="10:45"><operator pos:start="10:43" pos:end="10:44">++</operator><name pos:start="10:45" pos:end="10:45">i</name></expr></incr>)</control> <block pos:start="10:48" pos:end="23:13">{<block_content pos:start="11:13" pos:end="23:13">
            <expr_stmt pos:start="11:13" pos:end="11:71"><expr pos:start="11:13" pos:end="11:70"><call pos:start="11:13" pos:end="11:70"><name pos:start="11:13" pos:end="11:39"><name pos:start="11:13" pos:end="11:14">nv</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:39">nvEncDestroyInputBuffer</name></name><argument_list pos:start="11:40" pos:end="11:70">(<argument pos:start="11:41" pos:end="11:54"><expr pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:54"><name pos:start="11:41" pos:end="11:43">ctx</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:54">nvenc_ctx</name></name></expr></argument>, <argument pos:start="11:57" pos:end="11:69"><expr pos:start="11:57" pos:end="11:69"><name pos:start="11:57" pos:end="11:66"><name pos:start="11:57" pos:end="11:59">ctx</name><operator pos:start="11:60" pos:end="11:61">-&gt;</operator><name pos:start="11:62" pos:end="11:63">in</name><index pos:start="11:64" pos:end="11:66">[<expr pos:start="11:65" pos:end="11:65"><name pos:start="11:65" pos:end="11:65">i</name></expr>]</index></name><operator pos:start="11:67" pos:end="11:67">.</operator><name pos:start="11:68" pos:end="11:69">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="12:13" pos:end="12:77"><expr pos:start="12:13" pos:end="12:76"><call pos:start="12:13" pos:end="12:76"><name pos:start="12:13" pos:end="12:43"><name pos:start="12:13" pos:end="12:14">nv</name><operator pos:start="12:15" pos:end="12:16">-&gt;</operator><name pos:start="12:17" pos:end="12:43">nvEncDestroyBitstreamBuffer</name></name><argument_list pos:start="12:44" pos:end="12:76">(<argument pos:start="12:45" pos:end="12:58"><expr pos:start="12:45" pos:end="12:58"><name pos:start="12:45" pos:end="12:58"><name pos:start="12:45" pos:end="12:47">ctx</name><operator pos:start="12:48" pos:end="12:49">-&gt;</operator><name pos:start="12:50" pos:end="12:58">nvenc_ctx</name></name></expr></argument>, <argument pos:start="12:61" pos:end="12:75"><expr pos:start="12:61" pos:end="12:75"><name pos:start="12:61" pos:end="12:71"><name pos:start="12:61" pos:end="12:63">ctx</name><operator pos:start="12:64" pos:end="12:65">-&gt;</operator><name pos:start="12:66" pos:end="12:68">out</name><index pos:start="12:69" pos:end="12:71">[<expr pos:start="12:70" pos:end="12:70"><name pos:start="12:70" pos:end="12:70">i</name></expr>]</index></name><operator pos:start="12:72" pos:end="12:72">.</operator><name pos:start="12:73" pos:end="12:75">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:12">av_freep</name><argument_list pos:start="13:13" pos:end="13:22">(<argument pos:start="13:14" pos:end="13:21"><expr pos:start="13:14" pos:end="13:21"><operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:21"><name pos:start="13:15" pos:end="13:17">ctx</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:21">in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:24"><expr pos:start="14:5" pos:end="14:23"><call pos:start="14:5" pos:end="14:23"><name pos:start="14:5" pos:end="14:12">av_freep</name><argument_list pos:start="14:13" pos:end="14:23">(<argument pos:start="14:14" pos:end="14:22"><expr pos:start="14:14" pos:end="14:22"><operator pos:start="14:14" pos:end="14:14">&amp;</operator><name pos:start="14:15" pos:end="14:22"><name pos:start="14:15" pos:end="14:17">ctx</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:22">out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="16:48"><if pos:start="15:5" pos:end="16:48">if <condition pos:start="15:8" pos:end="15:23">(<expr pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:11">ctx</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:22">nvenc_ctx</name></name></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="16:48"><block_content pos:start="16:9" pos:end="16:48">
        <expr_stmt pos:start="16:9" pos:end="16:48"><expr pos:start="16:9" pos:end="16:47"><call pos:start="16:9" pos:end="16:47"><name pos:start="16:9" pos:end="16:31"><name pos:start="16:9" pos:end="16:10">nv</name><operator pos:start="16:11" pos:end="16:12">-&gt;</operator><name pos:start="16:13" pos:end="16:31">nvEncDestroyEncoder</name></name><argument_list pos:start="16:32" pos:end="16:47">(<argument pos:start="16:33" pos:end="16:46"><expr pos:start="16:33" pos:end="16:46"><name pos:start="16:33" pos:end="16:46"><name pos:start="16:33" pos:end="16:35">ctx</name><operator pos:start="16:36" pos:end="16:37">-&gt;</operator><name pos:start="16:38" pos:end="16:46">nvenc_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="17:5" pos:end="18:50"><if pos:start="17:5" pos:end="18:50">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:23">cu_context</name></name></expr>)</condition><block type="pseudo" pos:start="18:9" pos:end="18:50"><block_content pos:start="18:9" pos:end="18:50">
        <expr_stmt pos:start="18:9" pos:end="18:50"><expr pos:start="18:9" pos:end="18:49"><call pos:start="18:9" pos:end="18:49"><name pos:start="18:9" pos:end="18:32"><name pos:start="18:9" pos:end="18:11">ctx</name><operator pos:start="18:12" pos:end="18:13">-&gt;</operator><name pos:start="18:14" pos:end="18:17">nvel</name><operator pos:start="18:18" pos:end="18:18">.</operator><name pos:start="18:19" pos:end="18:32">cu_ctx_destroy</name></name><argument_list pos:start="18:33" pos:end="18:49">(<argument pos:start="18:34" pos:end="18:48"><expr pos:start="18:34" pos:end="18:48"><name pos:start="18:34" pos:end="18:48"><name pos:start="18:34" pos:end="18:36">ctx</name><operator pos:start="18:37" pos:end="18:38">-&gt;</operator><name pos:start="18:39" pos:end="18:48">cu_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="19:5" pos:end="20:33"><if pos:start="19:5" pos:end="20:33">if <condition pos:start="19:8" pos:end="19:24">(<expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:11">ctx</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:17">nvel</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:23">nvenc</name></name></expr>)</condition><block type="pseudo" pos:start="20:9" pos:end="20:33"><block_content pos:start="20:9" pos:end="20:33">
        <expr_stmt pos:start="20:9" pos:end="20:33"><expr pos:start="20:9" pos:end="20:32"><call pos:start="20:9" pos:end="20:32"><name pos:start="20:9" pos:end="20:15">dlclose</name><argument_list pos:start="20:16" pos:end="20:32">(<argument pos:start="20:17" pos:end="20:31"><expr pos:start="20:17" pos:end="20:31"><name pos:start="20:17" pos:end="20:31"><name pos:start="20:17" pos:end="20:19">ctx</name><operator pos:start="20:20" pos:end="20:21">-&gt;</operator><name pos:start="20:22" pos:end="20:25">nvel</name><operator pos:start="20:26" pos:end="20:26">.</operator><name pos:start="20:27" pos:end="20:31">nvenc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="22:32"><if pos:start="21:5" pos:end="22:32">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:11">ctx</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:17">nvel</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:22">cuda</name></name></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:32"><block_content pos:start="22:9" pos:end="22:32">
        <expr_stmt pos:start="22:9" pos:end="22:32"><expr pos:start="22:9" pos:end="22:31"><call pos:start="22:9" pos:end="22:31"><name pos:start="22:9" pos:end="22:15">dlclose</name><argument_list pos:start="22:16" pos:end="22:31">(<argument pos:start="22:17" pos:end="22:30"><expr pos:start="22:17" pos:end="22:30"><name pos:start="22:17" pos:end="22:30"><name pos:start="22:17" pos:end="22:19">ctx</name><operator pos:start="22:20" pos:end="22:21">-&gt;</operator><name pos:start="22:22" pos:end="22:25">nvel</name><operator pos:start="22:26" pos:end="22:26">.</operator><name pos:start="22:27" pos:end="22:30">cuda</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
