<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17760.c" pos:tabs="8"><function pos:start="1:1" pos:end="68:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">dec_barrel</name><parameter_list pos:start="1:23" pos:end="1:40">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:35">DisasContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="68:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:11">t0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">bool</name></type> <name pos:start="7:10" pos:end="7:10">s</name></decl>, <decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:13" pos:end="7:13">t</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="23:5">if <condition pos:start="11:8" pos:end="15:38">(<expr pos:start="11:9" pos:end="15:37"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:11">dc</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">tb_flags</name></name> <operator pos:start="11:23" pos:end="11:23">&amp;</operator> <name pos:start="11:25" pos:end="11:35">MSR_EE_FLAG</name><operator pos:start="11:36" pos:end="11:36">)</operator>

          <operator pos:start="13:11" pos:end="13:12">&amp;&amp;</operator> <operator pos:start="13:14" pos:end="13:14">(</operator><name pos:start="13:15" pos:end="13:38"><name pos:start="13:15" pos:end="13:16">dc</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:21">cpu</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:26">env</name><operator pos:start="13:27" pos:end="13:27">.</operator><name pos:start="13:28" pos:end="13:30">pvr</name><operator pos:start="13:31" pos:end="13:31">.</operator><name pos:start="13:32" pos:end="13:35">regs</name><index pos:start="13:36" pos:end="13:38">[<expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">2</literal></expr>]</index></name> <operator pos:start="13:40" pos:end="13:40">&amp;</operator> <name pos:start="13:42" pos:end="13:65">PVR2_ILL_OPCODE_EXC_MASK</name><operator pos:start="13:66" pos:end="13:66">)</operator>

          <operator pos:start="15:11" pos:end="15:12">&amp;&amp;</operator> <operator pos:start="15:14" pos:end="15:14">!</operator><name pos:start="15:15" pos:end="15:37"><name pos:start="15:15" pos:end="15:16">dc</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:21">cpu</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:26">cfg</name><operator pos:start="15:27" pos:end="15:27">.</operator><name pos:start="15:28" pos:end="15:37">use_barrel</name></name></expr>)</condition> <block pos:start="15:40" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:15">

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:23">tcg_gen_movi_tl</name><argument_list pos:start="17:24" pos:end="17:58">(<argument pos:start="17:25" pos:end="17:38"><expr pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:30">cpu_SR</name><index pos:start="17:31" pos:end="17:38">[<expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">SR_ESR</name></expr>]</index></name></expr></argument>, <argument pos:start="17:41" pos:end="17:57"><expr pos:start="17:41" pos:end="17:57"><name pos:start="17:41" pos:end="17:57">ESR_EC_ILLEGAL_OP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:29">t_gen_raise_exception</name><argument_list pos:start="19:30" pos:end="19:47">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">dc</name></expr></argument>, <argument pos:start="19:35" pos:end="19:46"><expr pos:start="19:35" pos:end="19:46"><name pos:start="19:35" pos:end="19:46">EXCP_HW_EXCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:17">extract32</name><argument_list pos:start="27:18" pos:end="27:33">(<argument pos:start="27:19" pos:end="27:25"><expr pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:25"><name pos:start="27:19" pos:end="27:20">dc</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:25">imm</name></name></expr></argument>, <argument pos:start="27:28" pos:end="27:29"><expr pos:start="27:28" pos:end="27:29"><literal type="number" pos:start="27:28" pos:end="27:29">10</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:32"><expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:5">t</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:17">extract32</name><argument_list pos:start="29:18" pos:end="29:32">(<argument pos:start="29:19" pos:end="29:25"><expr pos:start="29:19" pos:end="29:25"><name pos:start="29:19" pos:end="29:25"><name pos:start="29:19" pos:end="29:20">dc</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:25">imm</name></name></expr></argument>, <argument pos:start="29:28" pos:end="29:28"><expr pos:start="29:28" pos:end="29:28"><literal type="number" pos:start="29:28" pos:end="29:28">9</literal></expr></argument>, <argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:66"><expr pos:start="33:5" pos:end="35:65"><call pos:start="33:5" pos:end="35:65"><name pos:start="33:5" pos:end="33:11">LOG_DIS</name><argument_list pos:start="33:12" pos:end="35:65">(<argument pos:start="33:13" pos:end="33:34"><expr pos:start="33:13" pos:end="33:34"><literal type="string" pos:start="33:13" pos:end="33:34">"bs%s%s r%d r%d r%d\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:25"><ternary pos:start="35:13" pos:end="35:25"><condition pos:start="35:13" pos:end="35:15"><expr pos:start="35:13" pos:end="35:13"><name pos:start="35:13" pos:end="35:13">s</name></expr> ?</condition><then pos:start="35:17" pos:end="35:19"> <expr pos:start="35:17" pos:end="35:19"><literal type="string" pos:start="35:17" pos:end="35:19">"l"</literal></expr> </then><else pos:start="35:21" pos:end="35:25">: <expr pos:start="35:23" pos:end="35:25"><literal type="string" pos:start="35:23" pos:end="35:25">"r"</literal></expr></else></ternary></expr></argument>, <argument pos:start="35:28" pos:end="35:40"><expr pos:start="35:28" pos:end="35:40"><ternary pos:start="35:28" pos:end="35:40"><condition pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">t</name></expr> ?</condition><then pos:start="35:32" pos:end="35:34"> <expr pos:start="35:32" pos:end="35:34"><literal type="string" pos:start="35:32" pos:end="35:34">"a"</literal></expr> </then><else pos:start="35:36" pos:end="35:40">: <expr pos:start="35:38" pos:end="35:40"><literal type="string" pos:start="35:38" pos:end="35:40">"l"</literal></expr></else></ternary></expr></argument>, <argument pos:start="35:43" pos:end="35:48"><expr pos:start="35:43" pos:end="35:48"><name pos:start="35:43" pos:end="35:48"><name pos:start="35:43" pos:end="35:44">dc</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:48">rd</name></name></expr></argument>, <argument pos:start="35:51" pos:end="35:56"><expr pos:start="35:51" pos:end="35:56"><name pos:start="35:51" pos:end="35:56"><name pos:start="35:51" pos:end="35:52">dc</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:56">ra</name></name></expr></argument>, <argument pos:start="35:59" pos:end="35:64"><expr pos:start="35:59" pos:end="35:64"><name pos:start="35:59" pos:end="35:64"><name pos:start="35:59" pos:end="35:60">dc</name><operator pos:start="35:61" pos:end="35:62">-&gt;</operator><name pos:start="35:63" pos:end="35:64">rb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:6">t0</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:21">tcg_temp_new</name><argument_list pos:start="39:22" pos:end="39:23">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><call pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:18">tcg_gen_mov_tl</name><argument_list pos:start="43:19" pos:end="43:43">(<argument pos:start="43:20" pos:end="43:21"><expr pos:start="43:20" pos:end="43:21"><name pos:start="43:20" pos:end="43:21">t0</name></expr></argument>, <argument pos:start="43:24" pos:end="43:42"><expr pos:start="43:24" pos:end="43:42"><operator pos:start="43:24" pos:end="43:24">*</operator><operator pos:start="43:25" pos:end="43:25">(</operator><call pos:start="43:26" pos:end="43:41"><name pos:start="43:26" pos:end="43:37">dec_alu_op_b</name><argument_list pos:start="43:38" pos:end="43:41">(<argument pos:start="43:39" pos:end="43:40"><expr pos:start="43:39" pos:end="43:40"><name pos:start="43:39" pos:end="43:40">dc</name></expr></argument>)</argument_list></call><operator pos:start="43:42" pos:end="43:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:19">tcg_gen_andi_tl</name><argument_list pos:start="45:20" pos:end="45:31">(<argument pos:start="45:21" pos:end="45:22"><expr pos:start="45:21" pos:end="45:22"><name pos:start="45:21" pos:end="45:22">t0</name></expr></argument>, <argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">t0</name></expr></argument>, <argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><literal type="number" pos:start="45:29" pos:end="45:30">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="65:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:10">(<expr pos:start="49:9" pos:end="49:9"><name pos:start="49:9" pos:end="49:9">s</name></expr>)</condition> <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:57">

        <expr_stmt pos:start="51:9" pos:end="51:57"><expr pos:start="51:9" pos:end="51:56"><call pos:start="51:9" pos:end="51:56"><name pos:start="51:9" pos:end="51:22">tcg_gen_shl_tl</name><argument_list pos:start="51:23" pos:end="51:56">(<argument pos:start="51:24" pos:end="51:36"><expr pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:28">cpu_R</name><index pos:start="51:29" pos:end="51:36">[<expr pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:35"><name pos:start="51:30" pos:end="51:31">dc</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:35">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="51:39" pos:end="51:51"><expr pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:43">cpu_R</name><index pos:start="51:44" pos:end="51:51">[<expr pos:start="51:45" pos:end="51:50"><name pos:start="51:45" pos:end="51:50"><name pos:start="51:45" pos:end="51:46">dc</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:50">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="51:54" pos:end="51:55"><expr pos:start="51:54" pos:end="51:55"><name pos:start="51:54" pos:end="51:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="65:5">else <block pos:start="53:12" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:9">

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:14">(<expr pos:start="55:13" pos:end="55:13"><name pos:start="55:13" pos:end="55:13">t</name></expr>)</condition> <block pos:start="55:16" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:61">

            <expr_stmt pos:start="57:13" pos:end="57:61"><expr pos:start="57:13" pos:end="57:60"><call pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:26">tcg_gen_sar_tl</name><argument_list pos:start="57:27" pos:end="57:60">(<argument pos:start="57:28" pos:end="57:40"><expr pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:40"><name pos:start="57:28" pos:end="57:32">cpu_R</name><index pos:start="57:33" pos:end="57:40">[<expr pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:39"><name pos:start="57:34" pos:end="57:35">dc</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:39">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="57:43" pos:end="57:55"><expr pos:start="57:43" pos:end="57:55"><name pos:start="57:43" pos:end="57:55"><name pos:start="57:43" pos:end="57:47">cpu_R</name><index pos:start="57:48" pos:end="57:55">[<expr pos:start="57:49" pos:end="57:54"><name pos:start="57:49" pos:end="57:54"><name pos:start="57:49" pos:end="57:50">dc</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:54">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="57:58" pos:end="57:59"><expr pos:start="57:58" pos:end="57:59"><name pos:start="57:58" pos:end="57:59">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="63:9">else <block pos:start="59:16" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:61">

            <expr_stmt pos:start="61:13" pos:end="61:61"><expr pos:start="61:13" pos:end="61:60"><call pos:start="61:13" pos:end="61:60"><name pos:start="61:13" pos:end="61:26">tcg_gen_shr_tl</name><argument_list pos:start="61:27" pos:end="61:60">(<argument pos:start="61:28" pos:end="61:40"><expr pos:start="61:28" pos:end="61:40"><name pos:start="61:28" pos:end="61:40"><name pos:start="61:28" pos:end="61:32">cpu_R</name><index pos:start="61:33" pos:end="61:40">[<expr pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:35">dc</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:39">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="61:43" pos:end="61:55"><expr pos:start="61:43" pos:end="61:55"><name pos:start="61:43" pos:end="61:55"><name pos:start="61:43" pos:end="61:47">cpu_R</name><index pos:start="61:48" pos:end="61:55">[<expr pos:start="61:49" pos:end="61:54"><name pos:start="61:49" pos:end="61:54"><name pos:start="61:49" pos:end="61:50">dc</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:54">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="61:58" pos:end="61:59"><expr pos:start="61:58" pos:end="61:59"><name pos:start="61:58" pos:end="61:59">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>


</block_content>}</block></function></unit>
