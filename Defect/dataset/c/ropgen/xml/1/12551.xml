<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12551.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">unix_listen</name><parameter_list pos:start="1:16" pos:end="1:54">(<parameter pos:start="1:17" pos:end="1:31"><decl pos:start="1:17" pos:end="1:31"><type pos:start="1:17" pos:end="1:31"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">str</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:43"><decl pos:start="1:34" pos:end="1:43"><type pos:start="1:34" pos:end="1:43"><name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">ostr</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:53">olen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:16">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>, <decl pos:start="7:17" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">optstr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">sock</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:49"><name pos:start="13:12" pos:end="13:27">qemu_opts_create</name><argument_list pos:start="13:28" pos:end="13:49">(<argument pos:start="13:29" pos:end="13:39"><expr pos:start="13:29" pos:end="13:39"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:39">dummy_opts</name></expr></argument>, <argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></argument>, <argument pos:start="13:48" pos:end="13:48"><expr pos:start="13:48" pos:end="13:48"><literal type="number" pos:start="13:48" pos:end="13:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:10">optstr</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:19">strchr</name><argument_list pos:start="17:20" pos:end="17:29">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">str</name></expr></argument>, <argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><literal type="char" pos:start="17:26" pos:end="17:28">','</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="35:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">optstr</name></expr>)</condition> <block pos:start="19:17" pos:end="35:5">{<block_content pos:start="21:9" pos:end="33:9">

        <expr_stmt pos:start="21:9" pos:end="21:27"><expr pos:start="21:9" pos:end="21:26"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:20">optstr</name> <operator pos:start="21:22" pos:end="21:22">-</operator> <name pos:start="21:24" pos:end="21:26">str</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:16">(<expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">len</name></expr>)</condition> <block pos:start="23:18" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:25">

            <expr_stmt pos:start="25:13" pos:end="25:35"><expr pos:start="25:13" pos:end="25:34"><name pos:start="25:13" pos:end="25:16">path</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:27">g_malloc</name><argument_list pos:start="25:28" pos:end="25:34">(<argument pos:start="25:29" pos:end="25:33"><expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:31">len</name><operator pos:start="25:32" pos:end="25:32">+</operator><literal type="number" pos:start="25:33" pos:end="25:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:52"><expr pos:start="27:13" pos:end="27:51"><call pos:start="27:13" pos:end="27:51"><name pos:start="27:13" pos:end="27:20">snprintf</name><argument_list pos:start="27:21" pos:end="27:51">(<argument pos:start="27:22" pos:end="27:25"><expr pos:start="27:22" pos:end="27:25"><name pos:start="27:22" pos:end="27:25">path</name></expr></argument>, <argument pos:start="27:28" pos:end="27:32"><expr pos:start="27:28" pos:end="27:32"><name pos:start="27:28" pos:end="27:30">len</name><operator pos:start="27:31" pos:end="27:31">+</operator><literal type="number" pos:start="27:32" pos:end="27:32">1</literal></expr></argument>, <argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><literal type="string" pos:start="27:35" pos:end="27:40">"%.*s"</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:45"><expr pos:start="27:43" pos:end="27:45"><name pos:start="27:43" pos:end="27:45">len</name></expr></argument>, <argument pos:start="27:48" pos:end="27:50"><expr pos:start="27:48" pos:end="27:50"><name pos:start="27:48" pos:end="27:50">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><call pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:24">qemu_opt_set</name><argument_list pos:start="29:25" pos:end="29:44">(<argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">opts</name></expr></argument>, <argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><literal type="string" pos:start="29:32" pos:end="29:37">"path"</literal></expr></argument>, <argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:25"><expr pos:start="31:13" pos:end="31:24"><call pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:18">g_free</name><argument_list pos:start="31:19" pos:end="31:24">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:40">

        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><call pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:20">qemu_opt_set</name><argument_list pos:start="37:21" pos:end="37:39">(<argument pos:start="37:22" pos:end="37:25"><expr pos:start="37:22" pos:end="37:25"><name pos:start="37:22" pos:end="37:25">opts</name></expr></argument>, <argument pos:start="37:28" pos:end="37:33"><expr pos:start="37:28" pos:end="37:33"><literal type="string" pos:start="37:28" pos:end="37:33">"path"</literal></expr></argument>, <argument pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:38">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:8">sock</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:33"><name pos:start="43:12" pos:end="43:27">unix_listen_opts</name><argument_list pos:start="43:28" pos:end="43:33">(<argument pos:start="43:29" pos:end="43:32"><expr pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:32">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="49:87"><if pos:start="47:5" pos:end="49:87">if <condition pos:start="47:8" pos:end="47:27">(<expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:12">sock</name> <operator pos:start="47:14" pos:end="47:15">!=</operator> <operator pos:start="47:17" pos:end="47:17">-</operator><literal type="number" pos:start="47:18" pos:end="47:18">1</literal> <operator pos:start="47:20" pos:end="47:21">&amp;&amp;</operator> <name pos:start="47:23" pos:end="47:26">ostr</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:87"><block_content pos:start="49:9" pos:end="49:87">

        <expr_stmt pos:start="49:9" pos:end="49:87"><expr pos:start="49:9" pos:end="49:86"><call pos:start="49:9" pos:end="49:86"><name pos:start="49:9" pos:end="49:16">snprintf</name><argument_list pos:start="49:17" pos:end="49:86">(<argument pos:start="49:18" pos:end="49:21"><expr pos:start="49:18" pos:end="49:21"><name pos:start="49:18" pos:end="49:21">ostr</name></expr></argument>, <argument pos:start="49:24" pos:end="49:27"><expr pos:start="49:24" pos:end="49:27"><name pos:start="49:24" pos:end="49:27">olen</name></expr></argument>, <argument pos:start="49:30" pos:end="49:35"><expr pos:start="49:30" pos:end="49:35"><literal type="string" pos:start="49:30" pos:end="49:35">"%s%s"</literal></expr></argument>, <argument pos:start="49:38" pos:end="49:63"><expr pos:start="49:38" pos:end="49:63"><call pos:start="49:38" pos:end="49:63"><name pos:start="49:38" pos:end="49:49">qemu_opt_get</name><argument_list pos:start="49:50" pos:end="49:63">(<argument pos:start="49:51" pos:end="49:54"><expr pos:start="49:51" pos:end="49:54"><name pos:start="49:51" pos:end="49:54">opts</name></expr></argument>, <argument pos:start="49:57" pos:end="49:62"><expr pos:start="49:57" pos:end="49:62"><literal type="string" pos:start="49:57" pos:end="49:62">"path"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:66" pos:end="49:85"><expr pos:start="49:66" pos:end="49:85"><ternary pos:start="49:66" pos:end="49:85"><condition pos:start="49:66" pos:end="49:73"><expr pos:start="49:66" pos:end="49:71"><name pos:start="49:66" pos:end="49:71">optstr</name></expr> ?</condition><then pos:start="49:75" pos:end="49:80"> <expr pos:start="49:75" pos:end="49:80"><name pos:start="49:75" pos:end="49:80">optstr</name></expr> </then><else pos:start="49:82" pos:end="49:85">: <expr pos:start="49:84" pos:end="49:85"><literal type="string" pos:start="49:84" pos:end="49:85">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:24"><expr pos:start="51:5" pos:end="51:23"><call pos:start="51:5" pos:end="51:23"><name pos:start="51:5" pos:end="51:17">qemu_opts_del</name><argument_list pos:start="51:18" pos:end="51:23">(<argument pos:start="51:19" pos:end="51:22"><expr pos:start="51:19" pos:end="51:22"><name pos:start="51:19" pos:end="51:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:16">return <expr pos:start="53:12" pos:end="53:15"><name pos:start="53:12" pos:end="53:15">sock</name></expr>;</return>

</block_content>}</block></function>
</unit>
