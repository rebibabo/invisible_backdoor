<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5537.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:24"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">ide_dma_cb</name><parameter_list pos:start="1:16" pos:end="1:38">(<parameter pos:start="1:17" pos:end="1:28"><decl pos:start="1:17" pos:end="1:28"><type pos:start="1:17" pos:end="1:28"><name pos:start="1:17" pos:end="1:20">void</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:28">opaque</name></decl></parameter>, <parameter pos:start="1:31" pos:end="1:37"><decl pos:start="1:31" pos:end="1:37"><type pos:start="1:31" pos:end="1:37"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:37">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:24">{<block_content pos:start="5:5" pos:end="153:24">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IDEState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:15">s</name> <init pos:start="5:17" pos:end="5:24">= <expr pos:start="5:19" pos:end="5:24"><name pos:start="5:19" pos:end="5:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:22">sector_num</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:20">stay_active</name> <init pos:start="11:22" pos:end="11:28">= <expr pos:start="11:24" pos:end="11:28"><name pos:start="11:24" pos:end="11:28">false</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="153:24"><if pos:start="15:5" pos:end="153:24">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="153:24">{<block_content pos:start="17:9" pos:end="153:24">

        <decl_stmt pos:start="17:9" pos:end="17:37"><decl pos:start="17:9" pos:end="17:36"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:14">op</name> <init pos:start="17:16" pos:end="17:36">= <expr pos:start="17:18" pos:end="17:36"><name pos:start="17:18" pos:end="17:36">BM_STATUS_DMA_RETRY</name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="21:9" pos:end="27:39"><if pos:start="21:9" pos:end="23:39">if <condition pos:start="21:12" pos:end="21:39">(<expr pos:start="21:13" pos:end="21:38"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">dma_cmd</name></name> <operator pos:start="21:24" pos:end="21:25">==</operator> <name pos:start="21:27" pos:end="21:38">IDE_DMA_READ</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:39"><block_content pos:start="23:13" pos:end="23:39">

            <expr_stmt pos:start="23:13" pos:end="23:39"><expr pos:start="23:13" pos:end="23:38"><name pos:start="23:13" pos:end="23:14">op</name> <operator pos:start="23:16" pos:end="23:17">|=</operator> <name pos:start="23:19" pos:end="23:38">BM_STATUS_RETRY_READ</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="25:9" pos:end="27:39">else if <condition pos:start="25:17" pos:end="25:44">(<expr pos:start="25:18" pos:end="25:43"><name pos:start="25:18" pos:end="25:27"><name pos:start="25:18" pos:end="25:18">s</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:27">dma_cmd</name></name> <operator pos:start="25:29" pos:end="25:30">==</operator> <name pos:start="25:32" pos:end="25:43">IDE_DMA_TRIM</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <expr_stmt pos:start="27:13" pos:end="27:39"><expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:14">op</name> <operator pos:start="27:16" pos:end="27:17">|=</operator> <name pos:start="27:19" pos:end="27:38">BM_STATUS_RETRY_TRIM</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="31:9" pos:end="153:24"><if pos:start="31:9" pos:end="153:24">if <condition pos:start="31:12" pos:end="31:45">(<expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:31">ide_handle_rw_error</name><argument_list pos:start="31:32" pos:end="31:44">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">s</name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><operator pos:start="31:36" pos:end="31:36">-</operator><name pos:start="31:37" pos:end="31:39">ret</name></expr></argument>, <argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><name pos:start="31:42" pos:end="31:43">op</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:47" pos:end="153:24">{<block_content pos:start="33:13" pos:end="153:24">

            <return pos:start="33:13" pos:end="33:19">return;</return>





    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:5">n</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:25">io_buffer_size</name></name> <operator pos:start="39:27" pos:end="39:28">&gt;&gt;</operator> <literal type="number" pos:start="39:30" pos:end="39:30">9</literal></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="153:24"><if pos:start="41:5" pos:end="153:24">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:9">n</name> <operator pos:start="41:11" pos:end="41:11">&gt;</operator> <name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:22">nsector</name></name></expr>)</condition> <block pos:start="41:25" pos:end="153:24">{<block_content pos:start="49:9" pos:end="153:24">

        <comment type="block" pos:start="43:9" pos:end="47:42">/* The PRDs were longer than needed for this request. Shorten them so

         * we don't get a negative remainder. The Active bit must remain set

         * after the request completes. */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:9">n</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">nsector</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:27"><expr pos:start="51:9" pos:end="51:26"><name pos:start="51:9" pos:end="51:19">stay_active</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:26">true</name></expr>;</expr_stmt>




    <expr_stmt pos:start="56:5" pos:end="56:35"><expr pos:start="56:5" pos:end="56:34"><name pos:start="56:5" pos:end="56:14">sector_num</name> <operator pos:start="56:16" pos:end="56:16">=</operator> <call pos:start="56:18" pos:end="56:34"><name pos:start="56:18" pos:end="56:31">ide_get_sector</name><argument_list pos:start="56:32" pos:end="56:34">(<argument pos:start="56:33" pos:end="56:33"><expr pos:start="56:33" pos:end="56:33"><name pos:start="56:33" pos:end="56:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="58:5" pos:end="153:24"><if pos:start="58:5" pos:end="153:24">if <condition pos:start="58:8" pos:end="58:14">(<expr pos:start="58:9" pos:end="58:13"><name pos:start="58:9" pos:end="58:9">n</name> <operator pos:start="58:11" pos:end="58:11">&gt;</operator> <literal type="number" pos:start="58:13" pos:end="58:13">0</literal></expr>)</condition> <block pos:start="58:16" pos:end="153:24">{<block_content pos:start="60:9" pos:end="153:24">

        <expr_stmt pos:start="60:9" pos:end="60:26"><expr pos:start="60:9" pos:end="60:25"><call pos:start="60:9" pos:end="60:25"><name pos:start="60:9" pos:end="60:22">dma_buf_commit</name><argument_list pos:start="60:23" pos:end="60:25">(<argument pos:start="60:24" pos:end="60:24"><expr pos:start="60:24" pos:end="60:24"><name pos:start="60:24" pos:end="60:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="62:9" pos:end="62:24"><expr pos:start="62:9" pos:end="62:23"><name pos:start="62:9" pos:end="62:18">sector_num</name> <operator pos:start="62:20" pos:end="62:21">+=</operator> <name pos:start="62:23" pos:end="62:23">n</name></expr>;</expr_stmt>

        <expr_stmt pos:start="64:9" pos:end="64:38"><expr pos:start="64:9" pos:end="64:37"><call pos:start="64:9" pos:end="64:37"><name pos:start="64:9" pos:end="64:22">ide_set_sector</name><argument_list pos:start="64:23" pos:end="64:37">(<argument pos:start="64:24" pos:end="64:24"><expr pos:start="64:24" pos:end="64:24"><name pos:start="64:24" pos:end="64:24">s</name></expr></argument>, <argument pos:start="64:27" pos:end="64:36"><expr pos:start="64:27" pos:end="64:36"><name pos:start="64:27" pos:end="64:36">sector_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:24"><expr pos:start="66:9" pos:end="66:23"><name pos:start="66:9" pos:end="66:18"><name pos:start="66:9" pos:end="66:9">s</name><operator pos:start="66:10" pos:end="66:11">-&gt;</operator><name pos:start="66:12" pos:end="66:18">nsector</name></name> <operator pos:start="66:20" pos:end="66:21">-=</operator> <name pos:start="66:23" pos:end="66:23">n</name></expr>;</expr_stmt>




    <comment type="block" pos:start="71:5" pos:end="71:27">/* end of transfer ? */</comment>

    <if_stmt pos:start="73:5" pos:end="153:24"><if pos:start="73:5" pos:end="153:24">if <condition pos:start="73:8" pos:end="73:24">(<expr pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:18">nsector</name></name> <operator pos:start="73:20" pos:end="73:21">==</operator> <literal type="number" pos:start="73:23" pos:end="73:23">0</literal></expr>)</condition> <block pos:start="73:26" pos:end="153:24">{<block_content pos:start="75:9" pos:end="153:24">

        <expr_stmt pos:start="75:9" pos:end="75:43"><expr pos:start="75:9" pos:end="75:42"><name pos:start="75:9" pos:end="75:17"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">status</name></name> <operator pos:start="75:19" pos:end="75:19">=</operator> <name pos:start="75:21" pos:end="75:30">READY_STAT</name> <operator pos:start="75:32" pos:end="75:32">|</operator> <name pos:start="75:34" pos:end="75:42">SEEK_STAT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:19">ide_set_irq</name><argument_list pos:start="77:20" pos:end="77:27">(<argument pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:26"><name pos:start="77:21" pos:end="77:21">s</name><operator pos:start="77:22" pos:end="77:23">-&gt;</operator><name pos:start="77:24" pos:end="77:26">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="79:9" pos:end="79:17">goto <name pos:start="79:14" pos:end="79:16">eot</name>;</goto>




    <comment type="block" pos:start="84:5" pos:end="84:30">/* launch next transfer */</comment>

    <expr_stmt pos:start="86:5" pos:end="86:19"><expr pos:start="86:5" pos:end="86:18"><name pos:start="86:5" pos:end="86:5">n</name> <operator pos:start="86:7" pos:end="86:7">=</operator> <name pos:start="86:9" pos:end="86:18"><name pos:start="86:9" pos:end="86:9">s</name><operator pos:start="86:10" pos:end="86:11">-&gt;</operator><name pos:start="86:12" pos:end="86:18">nsector</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="88:5" pos:end="88:27"><expr pos:start="88:5" pos:end="88:26"><name pos:start="88:5" pos:end="88:22"><name pos:start="88:5" pos:end="88:5">s</name><operator pos:start="88:6" pos:end="88:7">-&gt;</operator><name pos:start="88:8" pos:end="88:22">io_buffer_index</name></name> <operator pos:start="88:24" pos:end="88:24">=</operator> <literal type="number" pos:start="88:26" pos:end="88:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:32"><expr pos:start="90:5" pos:end="90:31"><name pos:start="90:5" pos:end="90:21"><name pos:start="90:5" pos:end="90:5">s</name><operator pos:start="90:6" pos:end="90:7">-&gt;</operator><name pos:start="90:8" pos:end="90:21">io_buffer_size</name></name> <operator pos:start="90:23" pos:end="90:23">=</operator> <name pos:start="90:25" pos:end="90:25">n</name> <operator pos:start="90:27" pos:end="90:27">*</operator> <literal type="number" pos:start="90:29" pos:end="90:31">512</literal></expr>;</expr_stmt>

    <if_stmt pos:start="92:5" pos:end="153:24"><if pos:start="92:5" pos:end="153:24">if <condition pos:start="92:8" pos:end="92:76">(<expr pos:start="92:9" pos:end="92:75"><call pos:start="92:9" pos:end="92:70"><name pos:start="92:9" pos:end="92:37"><name pos:start="92:9" pos:end="92:9">s</name><operator pos:start="92:10" pos:end="92:11">-&gt;</operator><name pos:start="92:12" pos:end="92:14">bus</name><operator pos:start="92:15" pos:end="92:16">-&gt;</operator><name pos:start="92:17" pos:end="92:19">dma</name><operator pos:start="92:20" pos:end="92:21">-&gt;</operator><name pos:start="92:22" pos:end="92:24">ops</name><operator pos:start="92:25" pos:end="92:26">-&gt;</operator><name pos:start="92:27" pos:end="92:37">prepare_buf</name></name><argument_list pos:start="92:38" pos:end="92:70">(<argument pos:start="92:39" pos:end="92:49"><expr pos:start="92:39" pos:end="92:49"><name pos:start="92:39" pos:end="92:49"><name pos:start="92:39" pos:end="92:39">s</name><operator pos:start="92:40" pos:end="92:41">-&gt;</operator><name pos:start="92:42" pos:end="92:44">bus</name><operator pos:start="92:45" pos:end="92:46">-&gt;</operator><name pos:start="92:47" pos:end="92:49">dma</name></name></expr></argument>, <argument pos:start="92:52" pos:end="92:69"><expr pos:start="92:52" pos:end="92:69"><call pos:start="92:52" pos:end="92:69"><name pos:start="92:52" pos:end="92:66">ide_cmd_is_read</name><argument_list pos:start="92:67" pos:end="92:69">(<argument pos:start="92:68" pos:end="92:68"><expr pos:start="92:68" pos:end="92:68"><name pos:start="92:68" pos:end="92:68">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="92:72" pos:end="92:73">==</operator> <literal type="number" pos:start="92:75" pos:end="92:75">0</literal></expr>)</condition> <block pos:start="92:78" pos:end="153:24">{<block_content pos:start="98:9" pos:end="153:24">

        <comment type="block" pos:start="94:9" pos:end="96:24">/* The PRDs were too short. Reset the Active bit, but don't raise an

         * interrupt. */</comment>

        <goto pos:start="98:9" pos:end="104:0">goto <name pos:start="98:14" pos:end="98:16">eot</name>;</goto>




<cpp:ifdef pos:start="103:1" pos:end="103:16">#<cpp:directive pos:start="103:2" pos:end="103:6">ifdef</cpp:directive> <name pos:start="103:8" pos:end="103:16">DEBUG_AIO</name></cpp:ifdef>

    <expr_stmt pos:start="105:5" pos:end="110:0"><expr pos:start="105:5" pos:end="107:37"><call pos:start="105:5" pos:end="107:37"><name pos:start="105:5" pos:end="105:10">printf</name><argument_list pos:start="105:11" pos:end="107:37">(<argument pos:start="105:12" pos:end="105:66"><expr pos:start="105:12" pos:end="105:66"><literal type="string" pos:start="105:12" pos:end="105:37">"ide_dma_cb: sector_num=%"</literal> <name pos:start="105:39" pos:end="105:44">PRId64</name> <literal type="string" pos:start="105:46" pos:end="105:66">" n=%d, cmd_cmd=%d\n"</literal></expr></argument>,

           <argument pos:start="107:12" pos:end="107:21"><expr pos:start="107:12" pos:end="107:21"><name pos:start="107:12" pos:end="107:21">sector_num</name></expr></argument>, <argument pos:start="107:24" pos:end="107:24"><expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">n</name></expr></argument>, <argument pos:start="107:27" pos:end="107:36"><expr pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:27">s</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:36">dma_cmd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>



    <switch pos:start="113:5" pos:end="153:24">switch <condition pos:start="113:12" pos:end="113:23">(<expr pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">dma_cmd</name></name></expr>)</condition> <block pos:start="113:25" pos:end="153:24">{<block_content pos:start="115:5" pos:end="153:24">

    <case pos:start="115:5" pos:end="115:22">case <expr pos:start="115:10" pos:end="115:21"><name pos:start="115:10" pos:end="115:21">IDE_DMA_READ</name></expr>:</case>

        <expr_stmt pos:start="117:9" pos:end="119:58"><expr pos:start="117:9" pos:end="119:57"><name pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:14">bus</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:19">dma</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:26">aiocb</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <call pos:start="117:30" pos:end="119:57"><name pos:start="117:30" pos:end="117:42">dma_bdrv_read</name><argument_list pos:start="117:43" pos:end="119:57">(<argument pos:start="117:44" pos:end="117:48"><expr pos:start="117:44" pos:end="117:48"><name pos:start="117:44" pos:end="117:48"><name pos:start="117:44" pos:end="117:44">s</name><operator pos:start="117:45" pos:end="117:46">-&gt;</operator><name pos:start="117:47" pos:end="117:48">bs</name></name></expr></argument>, <argument pos:start="117:51" pos:end="117:56"><expr pos:start="117:51" pos:end="117:56"><operator pos:start="117:51" pos:end="117:51">&amp;</operator><name pos:start="117:52" pos:end="117:56"><name pos:start="117:52" pos:end="117:52">s</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:56">sg</name></name></expr></argument>, <argument pos:start="117:59" pos:end="117:68"><expr pos:start="117:59" pos:end="117:68"><name pos:start="117:59" pos:end="117:68">sector_num</name></expr></argument>,

                                           <argument pos:start="119:44" pos:end="119:53"><expr pos:start="119:44" pos:end="119:53"><name pos:start="119:44" pos:end="119:53">ide_dma_cb</name></expr></argument>, <argument pos:start="119:56" pos:end="119:56"><expr pos:start="119:56" pos:end="119:56"><name pos:start="119:56" pos:end="119:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:23">case <expr pos:start="123:10" pos:end="123:22"><name pos:start="123:10" pos:end="123:22">IDE_DMA_WRITE</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="127:59"><expr pos:start="125:9" pos:end="127:58"><name pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:14">bus</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:19">dma</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:26">aiocb</name></name> <operator pos:start="125:28" pos:end="125:28">=</operator> <call pos:start="125:30" pos:end="127:58"><name pos:start="125:30" pos:end="125:43">dma_bdrv_write</name><argument_list pos:start="125:44" pos:end="127:58">(<argument pos:start="125:45" pos:end="125:49"><expr pos:start="125:45" pos:end="125:49"><name pos:start="125:45" pos:end="125:49"><name pos:start="125:45" pos:end="125:45">s</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:49">bs</name></name></expr></argument>, <argument pos:start="125:52" pos:end="125:57"><expr pos:start="125:52" pos:end="125:57"><operator pos:start="125:52" pos:end="125:52">&amp;</operator><name pos:start="125:53" pos:end="125:57"><name pos:start="125:53" pos:end="125:53">s</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:57">sg</name></name></expr></argument>, <argument pos:start="125:60" pos:end="125:69"><expr pos:start="125:60" pos:end="125:69"><name pos:start="125:60" pos:end="125:69">sector_num</name></expr></argument>,

                                            <argument pos:start="127:45" pos:end="127:54"><expr pos:start="127:45" pos:end="127:54"><name pos:start="127:45" pos:end="127:54">ide_dma_cb</name></expr></argument>, <argument pos:start="127:57" pos:end="127:57"><expr pos:start="127:57" pos:end="127:57"><name pos:start="127:57" pos:end="127:57">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:22">case <expr pos:start="131:10" pos:end="131:21"><name pos:start="131:10" pos:end="131:21">IDE_DMA_TRIM</name></expr>:</case>

        <expr_stmt pos:start="133:9" pos:end="137:66"><expr pos:start="133:9" pos:end="137:65"><name pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:14">bus</name><operator pos:start="133:15" pos:end="133:16">-&gt;</operator><name pos:start="133:17" pos:end="133:19">dma</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:26">aiocb</name></name> <operator pos:start="133:28" pos:end="133:28">=</operator> <call pos:start="133:30" pos:end="137:65"><name pos:start="133:30" pos:end="133:40">dma_bdrv_io</name><argument_list pos:start="133:41" pos:end="137:65">(<argument pos:start="133:42" pos:end="133:46"><expr pos:start="133:42" pos:end="133:46"><name pos:start="133:42" pos:end="133:46"><name pos:start="133:42" pos:end="133:42">s</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:46">bs</name></name></expr></argument>, <argument pos:start="133:49" pos:end="133:54"><expr pos:start="133:49" pos:end="133:54"><operator pos:start="133:49" pos:end="133:49">&amp;</operator><name pos:start="133:50" pos:end="133:54"><name pos:start="133:50" pos:end="133:50">s</name><operator pos:start="133:51" pos:end="133:52">-&gt;</operator><name pos:start="133:53" pos:end="133:54">sg</name></name></expr></argument>, <argument pos:start="133:57" pos:end="133:66"><expr pos:start="133:57" pos:end="133:66"><name pos:start="133:57" pos:end="133:66">sector_num</name></expr></argument>,

                                         <argument pos:start="135:42" pos:end="135:55"><expr pos:start="135:42" pos:end="135:55"><name pos:start="135:42" pos:end="135:55">ide_issue_trim</name></expr></argument>, <argument pos:start="135:58" pos:end="135:67"><expr pos:start="135:58" pos:end="135:67"><name pos:start="135:58" pos:end="135:67">ide_dma_cb</name></expr></argument>, <argument pos:start="135:70" pos:end="135:70"><expr pos:start="135:70" pos:end="135:70"><name pos:start="135:70" pos:end="135:70">s</name></expr></argument>,

                                         <argument pos:start="137:42" pos:end="137:64"><expr pos:start="137:42" pos:end="137:64"><name pos:start="137:42" pos:end="137:64">DMA_DIRECTION_TO_DEVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>


    <return pos:start="142:5" pos:end="142:11">return;</return>



<label pos:start="146:1" pos:end="146:4"><name pos:start="146:1" pos:end="146:3">eot</name>:</label>

    <if_stmt pos:start="148:5" pos:end="153:24"><if pos:start="148:5" pos:end="153:24">if <condition pos:start="148:8" pos:end="148:66">(<expr pos:start="148:9" pos:end="148:65"><name pos:start="148:9" pos:end="148:18"><name pos:start="148:9" pos:end="148:9">s</name><operator pos:start="148:10" pos:end="148:11">-&gt;</operator><name pos:start="148:12" pos:end="148:18">dma_cmd</name></name> <operator pos:start="148:20" pos:end="148:21">==</operator> <name pos:start="148:23" pos:end="148:34">IDE_DMA_READ</name> <operator pos:start="148:36" pos:end="148:37">||</operator> <name pos:start="148:39" pos:end="148:48"><name pos:start="148:39" pos:end="148:39">s</name><operator pos:start="148:40" pos:end="148:41">-&gt;</operator><name pos:start="148:42" pos:end="148:48">dma_cmd</name></name> <operator pos:start="148:50" pos:end="148:51">==</operator> <name pos:start="148:53" pos:end="148:65">IDE_DMA_WRITE</name></expr>)</condition> <block pos:start="148:68" pos:end="153:24">{<block_content pos:start="150:9" pos:end="153:24">

        <expr_stmt pos:start="150:9" pos:end="150:40"><expr pos:start="150:9" pos:end="150:39"><call pos:start="150:9" pos:end="150:39"><name pos:start="150:9" pos:end="150:22">bdrv_acct_done</name><argument_list pos:start="150:23" pos:end="150:39">(<argument pos:start="150:24" pos:end="150:28"><expr pos:start="150:24" pos:end="150:28"><name pos:start="150:24" pos:end="150:28"><name pos:start="150:24" pos:end="150:24">s</name><operator pos:start="150:25" pos:end="150:26">-&gt;</operator><name pos:start="150:27" pos:end="150:28">bs</name></name></expr></argument>, <argument pos:start="150:31" pos:end="150:38"><expr pos:start="150:31" pos:end="150:38"><operator pos:start="150:31" pos:end="150:31">&amp;</operator><name pos:start="150:32" pos:end="150:38"><name pos:start="150:32" pos:end="150:32">s</name><operator pos:start="150:33" pos:end="150:34">-&gt;</operator><name pos:start="150:35" pos:end="150:38">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="153:5" pos:end="153:24"><expr pos:start="153:5" pos:end="153:23"><call pos:start="153:5" pos:end="153:23"><name pos:start="153:5" pos:end="153:20">ide_set_inactive</name><argument_list pos:start="153:21" pos:end="153:23">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><name pos:start="153:22" pos:end="153:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>



</unit>
