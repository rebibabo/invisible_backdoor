<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8607.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">msrle_decode_frame</name><parameter_list pos:start="1:30" pos:end="5:46">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="9:5" pos:end="123:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">MsrleContext</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">s</name> <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:27">avctx</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:77"><decl pos:start="15:5" pos:end="15:76"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">istride</name> <init pos:start="15:17" pos:end="15:76">= <expr pos:start="15:19" pos:end="15:76"><call pos:start="15:19" pos:end="15:72"><name pos:start="15:19" pos:end="15:25">FFALIGN</name><argument_list pos:start="15:26" pos:end="15:72">(<argument pos:start="15:27" pos:end="15:67"><expr pos:start="15:27" pos:end="15:67"><name pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:31">avctx</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:38">width</name></name><operator pos:start="15:39" pos:end="15:39">*</operator><name pos:start="15:40" pos:end="15:67"><name pos:start="15:40" pos:end="15:44">avctx</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:67">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="15:70" pos:end="15:71"><expr pos:start="15:70" pos:end="15:71"><literal type="number" pos:start="15:70" pos:end="15:71">32</literal></expr></argument>)</argument_list></call> <operator pos:start="15:74" pos:end="15:74">/</operator> <literal type="number" pos:start="15:76" pos:end="15:76">8</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:17"><expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:10">buf</name></name> <operator pos:start="19:12" pos:end="19:12">=</operator> <name pos:start="19:14" pos:end="19:16">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">size</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:22">buf_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:12">frame</name><operator pos:start="25:13" pos:end="25:13">.</operator><name pos:start="25:14" pos:end="25:22">reference</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <literal type="number" pos:start="25:26" pos:end="25:26">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:104"><expr pos:start="27:5" pos:end="27:103"><name pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:12">frame</name><operator pos:start="27:13" pos:end="27:13">.</operator><name pos:start="27:14" pos:end="27:25">buffer_hints</name></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <name pos:start="27:29" pos:end="27:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="27:51" pos:end="27:51">|</operator> <name pos:start="27:53" pos:end="27:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="27:78" pos:end="27:78">|</operator> <name pos:start="27:80" pos:end="27:103">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:46">(<expr pos:start="29:9" pos:end="29:45"><call pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:13">avctx</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:27">reget_buffer</name></name><argument_list pos:start="29:28" pos:end="29:45">(<argument pos:start="29:29" pos:end="29:33"><expr pos:start="29:29" pos:end="29:33"><name pos:start="29:29" pos:end="29:33">avctx</name></expr></argument>, <argument pos:start="29:36" pos:end="29:44"><expr pos:start="29:36" pos:end="29:44"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:44"><name pos:start="29:37" pos:end="29:37">s</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:44">frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:48" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:63"><expr pos:start="31:9" pos:end="31:62"><call pos:start="31:9" pos:end="31:62"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:62">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:61"><expr pos:start="31:37" pos:end="31:61"><literal type="string" pos:start="31:37" pos:end="31:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="53:5"><if pos:start="39:5" pos:end="53:5">if <condition pos:start="39:8" pos:end="39:78">(<expr pos:start="39:9" pos:end="39:77"><name pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:36">bits_per_coded_sample</name></name> <operator pos:start="39:38" pos:end="39:38">&gt;</operator> <literal type="number" pos:start="39:40" pos:end="39:40">1</literal> <operator pos:start="39:42" pos:end="39:43">&amp;&amp;</operator> <name pos:start="39:45" pos:end="39:72"><name pos:start="39:45" pos:end="39:49">avctx</name><operator pos:start="39:50" pos:end="39:51">-&gt;</operator><name pos:start="39:52" pos:end="39:72">bits_per_coded_sample</name></name> <operator pos:start="39:74" pos:end="39:75">&lt;=</operator> <literal type="number" pos:start="39:77" pos:end="39:77">8</literal></expr>)</condition> <block pos:start="39:80" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <decl_stmt pos:start="41:9" pos:end="41:87"><decl pos:start="41:9" pos:end="41:86"><type pos:start="41:9" pos:end="41:23"><specifier pos:start="41:9" pos:end="41:13">const</specifier> <name pos:start="41:15" pos:end="41:21">uint8_t</name> <modifier pos:start="41:23" pos:end="41:23">*</modifier></type><name pos:start="41:24" pos:end="41:26">pal</name> <init pos:start="41:28" pos:end="41:86">= <expr pos:start="41:30" pos:end="41:86"><call pos:start="41:30" pos:end="41:86"><name pos:start="41:30" pos:end="41:52">av_packet_get_side_data</name><argument_list pos:start="41:53" pos:end="41:86">(<argument pos:start="41:54" pos:end="41:58"><expr pos:start="41:54" pos:end="41:58"><name pos:start="41:54" pos:end="41:58">avpkt</name></expr></argument>, <argument pos:start="41:61" pos:end="41:79"><expr pos:start="41:61" pos:end="41:79"><name pos:start="41:61" pos:end="41:79">AV_PKT_DATA_PALETTE</name></expr></argument>, <argument pos:start="41:82" pos:end="41:85"><expr pos:start="41:82" pos:end="41:85"><name pos:start="41:82" pos:end="41:85">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">pal</name></expr>)</condition> <block pos:start="45:18" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:48">

            <expr_stmt pos:start="47:13" pos:end="47:45"><expr pos:start="47:13" pos:end="47:44"><name pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">frame</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:40">palette_has_changed</name></name> <operator pos:start="47:42" pos:end="47:42">=</operator> <literal type="number" pos:start="47:44" pos:end="47:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:48"><expr pos:start="49:13" pos:end="49:47"><call pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:18">memcpy</name><argument_list pos:start="49:19" pos:end="49:47">(<argument pos:start="49:20" pos:end="49:25"><expr pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:20">s</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:25">pal</name></name></expr></argument>, <argument pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:30">pal</name></expr></argument>, <argument pos:start="49:33" pos:end="49:46"><expr pos:start="49:33" pos:end="49:46"><name pos:start="49:33" pos:end="49:46">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:36">/* make the palette available */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><call pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:10">memcpy</name><argument_list pos:start="59:11" pos:end="59:52">(<argument pos:start="59:12" pos:end="59:27"><expr pos:start="59:12" pos:end="59:27"><name pos:start="59:12" pos:end="59:27"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:19">frame</name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:24">data</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="59:30" pos:end="59:35"><expr pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:35"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:35">pal</name></name></expr></argument>, <argument pos:start="59:38" pos:end="59:51"><expr pos:start="59:38" pos:end="59:51"><name pos:start="59:38" pos:end="59:51">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:47">/* FIXME how to correctly detect RLE ??? */</comment>

    <if_stmt pos:start="65:5" pos:end="111:5"><if pos:start="65:5" pos:end="105:5">if <condition pos:start="65:8" pos:end="65:47">(<expr pos:start="65:9" pos:end="65:46"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:13">avctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:21">height</name></name> <operator pos:start="65:23" pos:end="65:23">*</operator> <name pos:start="65:25" pos:end="65:31">istride</name> <operator pos:start="65:33" pos:end="65:34">==</operator> <name pos:start="65:36" pos:end="65:46"><name pos:start="65:36" pos:end="65:40">avpkt</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:46">size</name></name></expr>)</condition> <block pos:start="65:49" pos:end="105:5">{<block_content pos:start="67:9" pos:end="103:9"> <comment type="block" pos:start="65:51" pos:end="65:75">/* assume uncompressed */</comment>

        <decl_stmt pos:start="67:9" pos:end="67:77"><decl pos:start="67:9" pos:end="67:76"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:20">linesize</name> <init pos:start="67:22" pos:end="67:76">= <expr pos:start="67:24" pos:end="67:76"><operator pos:start="67:24" pos:end="67:24">(</operator><name pos:start="67:25" pos:end="67:36"><name pos:start="67:25" pos:end="67:29">avctx</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:36">width</name></name> <operator pos:start="67:38" pos:end="67:38">*</operator> <name pos:start="67:40" pos:end="67:67"><name pos:start="67:40" pos:end="67:44">avctx</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:67">bits_per_coded_sample</name></name> <operator pos:start="67:69" pos:end="67:69">+</operator> <literal type="number" pos:start="67:71" pos:end="67:71">7</literal><operator pos:start="67:72" pos:end="67:72">)</operator> <operator pos:start="67:74" pos:end="67:74">/</operator> <literal type="number" pos:start="67:76" pos:end="67:76">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:40"><decl pos:start="69:9" pos:end="69:39"><type pos:start="69:9" pos:end="69:17"><name pos:start="69:9" pos:end="69:15">uint8_t</name> <modifier pos:start="69:17" pos:end="69:17">*</modifier></type><name pos:start="69:18" pos:end="69:20">ptr</name> <init pos:start="69:22" pos:end="69:39">= <expr pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:31">frame</name><operator pos:start="69:32" pos:end="69:32">.</operator><name pos:start="69:33" pos:end="69:36">data</name><index pos:start="69:37" pos:end="69:39">[<expr pos:start="69:38" pos:end="69:38"><literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="71:9" pos:end="71:63"><decl pos:start="71:9" pos:end="71:62"><type pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:15">uint8_t</name> <modifier pos:start="71:17" pos:end="71:17">*</modifier></type><name pos:start="71:18" pos:end="71:20">buf</name> <init pos:start="71:22" pos:end="71:62">= <expr pos:start="71:24" pos:end="71:62"><name pos:start="71:24" pos:end="71:34"><name pos:start="71:24" pos:end="71:28">avpkt</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:34">data</name></name> <operator pos:start="71:36" pos:end="71:36">+</operator> <operator pos:start="71:38" pos:end="71:38">(</operator><name pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:43">avctx</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:51">height</name></name><operator pos:start="71:52" pos:end="71:52">-</operator><literal type="number" pos:start="71:53" pos:end="71:53">1</literal><operator pos:start="71:54" pos:end="71:54">)</operator><operator pos:start="71:55" pos:end="71:55">*</operator><name pos:start="71:56" pos:end="71:62">istride</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:17"><decl pos:start="73:9" pos:end="73:13"><type pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">int</name></type> <name pos:start="73:13" pos:end="73:13">i</name></decl>, <decl pos:start="73:16" pos:end="73:16"><type ref="prev" pos:start="73:9" pos:end="73:11"/><name pos:start="73:16" pos:end="73:16">j</name></decl>;</decl_stmt>



        <for pos:start="77:9" pos:end="103:9">for <control pos:start="77:13" pos:end="77:43">(<init pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:18"><name pos:start="77:14" pos:end="77:14">i</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>;</init> <condition pos:start="77:21" pos:end="77:38"><expr pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">&lt;</operator> <name pos:start="77:25" pos:end="77:37"><name pos:start="77:25" pos:end="77:29">avctx</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:37">height</name></name></expr>;</condition> <incr pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:40">i</name><operator pos:start="77:41" pos:end="77:42">++</operator></expr></incr>)</control> <block pos:start="77:45" pos:end="103:9">{<block_content pos:start="79:13" pos:end="101:40">

            <if_stmt pos:start="79:13" pos:end="97:13"><if pos:start="79:13" pos:end="93:13">if <condition pos:start="79:16" pos:end="79:50">(<expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:44"><name pos:start="79:17" pos:end="79:21">avctx</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:44">bits_per_coded_sample</name></name> <operator pos:start="79:46" pos:end="79:47">==</operator> <literal type="number" pos:start="79:49" pos:end="79:49">4</literal></expr>)</condition> <block pos:start="79:52" pos:end="93:13">{<block_content pos:start="81:17" pos:end="91:46">

                <for pos:start="81:17" pos:end="87:17">for <control pos:start="81:21" pos:end="81:57">(<init pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:22">j</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</init> <condition pos:start="81:29" pos:end="81:49"><expr pos:start="81:29" pos:end="81:48"><name pos:start="81:29" pos:end="81:29">j</name> <operator pos:start="81:31" pos:end="81:31">&lt;</operator> <name pos:start="81:33" pos:end="81:44"><name pos:start="81:33" pos:end="81:37">avctx</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:44">width</name></name> <operator pos:start="81:46" pos:end="81:46">-</operator> <literal type="number" pos:start="81:48" pos:end="81:48">1</literal></expr>;</condition> <incr pos:start="81:51" pos:end="81:56"><expr pos:start="81:51" pos:end="81:56"><name pos:start="81:51" pos:end="81:51">j</name> <operator pos:start="81:53" pos:end="81:54">+=</operator> <literal type="number" pos:start="81:56" pos:end="81:56">2</literal></expr></incr>)</control> <block pos:start="81:59" pos:end="87:17">{<block_content pos:start="83:21" pos:end="85:47">

                    <expr_stmt pos:start="83:21" pos:end="83:46"><expr pos:start="83:21" pos:end="83:45"><name pos:start="83:21" pos:end="83:28"><name pos:start="83:21" pos:end="83:23">ptr</name><index pos:start="83:24" pos:end="83:28">[<expr pos:start="83:25" pos:end="83:27"><name pos:start="83:25" pos:end="83:25">j</name><operator pos:start="83:26" pos:end="83:26">+</operator><literal type="number" pos:start="83:27" pos:end="83:27">0</literal></expr>]</index></name> <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:40"><name pos:start="83:32" pos:end="83:34">buf</name><index pos:start="83:35" pos:end="83:40">[<expr pos:start="83:36" pos:end="83:39"><name pos:start="83:36" pos:end="83:36">j</name><operator pos:start="83:37" pos:end="83:38">&gt;&gt;</operator><literal type="number" pos:start="83:39" pos:end="83:39">1</literal></expr>]</index></name> <operator pos:start="83:42" pos:end="83:43">&gt;&gt;</operator> <literal type="number" pos:start="83:45" pos:end="83:45">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:47"><expr pos:start="85:21" pos:end="85:46"><name pos:start="85:21" pos:end="85:28"><name pos:start="85:21" pos:end="85:23">ptr</name><index pos:start="85:24" pos:end="85:28">[<expr pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:25">j</name><operator pos:start="85:26" pos:end="85:26">+</operator><literal type="number" pos:start="85:27" pos:end="85:27">1</literal></expr>]</index></name> <operator pos:start="85:30" pos:end="85:30">=</operator> <name pos:start="85:32" pos:end="85:40"><name pos:start="85:32" pos:end="85:34">buf</name><index pos:start="85:35" pos:end="85:40">[<expr pos:start="85:36" pos:end="85:39"><name pos:start="85:36" pos:end="85:36">j</name><operator pos:start="85:37" pos:end="85:38">&gt;&gt;</operator><literal type="number" pos:start="85:39" pos:end="85:39">1</literal></expr>]</index></name> <operator pos:start="85:42" pos:end="85:42">&amp;</operator> <literal type="number" pos:start="85:44" pos:end="85:46">0xF</literal></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="89:17" pos:end="91:46"><if pos:start="89:17" pos:end="91:46">if <condition pos:start="89:20" pos:end="89:37">(<expr pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:25">avctx</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:32">width</name></name> <operator pos:start="89:34" pos:end="89:34">&amp;</operator> <literal type="number" pos:start="89:36" pos:end="89:36">1</literal></expr>)</condition><block type="pseudo" pos:start="91:21" pos:end="91:46"><block_content pos:start="91:21" pos:end="91:46">

                    <expr_stmt pos:start="91:21" pos:end="91:46"><expr pos:start="91:21" pos:end="91:45"><name pos:start="91:21" pos:end="91:28"><name pos:start="91:21" pos:end="91:23">ptr</name><index pos:start="91:24" pos:end="91:28">[<expr pos:start="91:25" pos:end="91:27"><name pos:start="91:25" pos:end="91:25">j</name><operator pos:start="91:26" pos:end="91:26">+</operator><literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>]</index></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <name pos:start="91:32" pos:end="91:40"><name pos:start="91:32" pos:end="91:34">buf</name><index pos:start="91:35" pos:end="91:40">[<expr pos:start="91:36" pos:end="91:39"><name pos:start="91:36" pos:end="91:36">j</name><operator pos:start="91:37" pos:end="91:38">&gt;&gt;</operator><literal type="number" pos:start="91:39" pos:end="91:39">1</literal></expr>]</index></name> <operator pos:start="91:42" pos:end="91:43">&gt;&gt;</operator> <literal type="number" pos:start="91:45" pos:end="91:45">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="93:15" pos:end="97:13">else <block pos:start="93:20" pos:end="97:13">{<block_content pos:start="95:17" pos:end="95:43">

                <expr_stmt pos:start="95:17" pos:end="95:43"><expr pos:start="95:17" pos:end="95:42"><call pos:start="95:17" pos:end="95:42"><name pos:start="95:17" pos:end="95:22">memcpy</name><argument_list pos:start="95:23" pos:end="95:42">(<argument pos:start="95:24" pos:end="95:26"><expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">ptr</name></expr></argument>, <argument pos:start="95:29" pos:end="95:31"><expr pos:start="95:29" pos:end="95:31"><name pos:start="95:29" pos:end="95:31">buf</name></expr></argument>, <argument pos:start="95:34" pos:end="95:41"><expr pos:start="95:34" pos:end="95:41"><name pos:start="95:34" pos:end="95:41">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:15">buf</name> <operator pos:start="99:17" pos:end="99:18">-=</operator> <name pos:start="99:20" pos:end="99:26">istride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:40"><expr pos:start="101:13" pos:end="101:39"><name pos:start="101:13" pos:end="101:15">ptr</name> <operator pos:start="101:17" pos:end="101:18">+=</operator> <name pos:start="101:20" pos:end="101:39"><name pos:start="101:20" pos:end="101:20">s</name><operator pos:start="101:21" pos:end="101:22">-&gt;</operator><name pos:start="101:23" pos:end="101:27">frame</name><operator pos:start="101:28" pos:end="101:28">.</operator><name pos:start="101:29" pos:end="101:36">linesize</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="111:5">else <block pos:start="105:12" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:92">

        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><call pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:24">bytestream2_init</name><argument_list pos:start="107:25" pos:end="107:47">(<argument pos:start="107:26" pos:end="107:31"><expr pos:start="107:26" pos:end="107:31"><operator pos:start="107:26" pos:end="107:26">&amp;</operator><name pos:start="107:27" pos:end="107:31"><name pos:start="107:27" pos:end="107:27">s</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:31">gb</name></name></expr></argument>, <argument pos:start="107:34" pos:end="107:36"><expr pos:start="107:34" pos:end="107:36"><name pos:start="107:34" pos:end="107:36">buf</name></expr></argument>, <argument pos:start="107:39" pos:end="107:46"><expr pos:start="107:39" pos:end="107:46"><name pos:start="107:39" pos:end="107:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:92"><expr pos:start="109:9" pos:end="109:91"><call pos:start="109:9" pos:end="109:91"><name pos:start="109:9" pos:end="109:23">ff_msrle_decode</name><argument_list pos:start="109:24" pos:end="109:91">(<argument pos:start="109:25" pos:end="109:29"><expr pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:29">avctx</name></expr></argument>, <argument pos:start="109:32" pos:end="109:52"><expr pos:start="109:32" pos:end="109:52"><operator pos:start="109:32" pos:end="109:32">(</operator><name pos:start="109:33" pos:end="109:41">AVPicture</name><operator pos:start="109:42" pos:end="109:42">*</operator><operator pos:start="109:43" pos:end="109:43">)</operator><operator pos:start="109:44" pos:end="109:44">&amp;</operator><name pos:start="109:45" pos:end="109:52"><name pos:start="109:45" pos:end="109:45">s</name><operator pos:start="109:46" pos:end="109:47">-&gt;</operator><name pos:start="109:48" pos:end="109:52">frame</name></name></expr></argument>, <argument pos:start="109:55" pos:end="109:82"><expr pos:start="109:55" pos:end="109:82"><name pos:start="109:55" pos:end="109:82"><name pos:start="109:55" pos:end="109:59">avctx</name><operator pos:start="109:60" pos:end="109:61">-&gt;</operator><name pos:start="109:62" pos:end="109:82">bits_per_coded_sample</name></name></expr></argument>, <argument pos:start="109:85" pos:end="109:90"><expr pos:start="109:85" pos:end="109:90"><operator pos:start="109:85" pos:end="109:85">&amp;</operator><name pos:start="109:86" pos:end="109:90"><name pos:start="109:86" pos:end="109:86">s</name><operator pos:start="109:87" pos:end="109:88">-&gt;</operator><name pos:start="109:89" pos:end="109:90">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:33"><expr pos:start="115:5" pos:end="115:32"><operator pos:start="115:5" pos:end="115:5">*</operator><name pos:start="115:6" pos:end="115:14">data_size</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <sizeof pos:start="115:18" pos:end="115:32">sizeof<argument_list pos:start="115:24" pos:end="115:32">(<argument pos:start="115:25" pos:end="115:31"><expr pos:start="115:25" pos:end="115:31"><name pos:start="115:25" pos:end="115:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:31"><expr pos:start="117:5" pos:end="117:30"><operator pos:start="117:5" pos:end="117:5">*</operator><operator pos:start="117:6" pos:end="117:6">(</operator><name pos:start="117:7" pos:end="117:13">AVFrame</name><operator pos:start="117:14" pos:end="117:14">*</operator><operator pos:start="117:15" pos:end="117:15">)</operator><name pos:start="117:16" pos:end="117:19">data</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:30"><name pos:start="117:23" pos:end="117:23">s</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:30">frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="121:5" pos:end="121:56">/* report that the buffer was completely consumed */</comment>

    <return pos:start="123:5" pos:end="123:20">return <expr pos:start="123:12" pos:end="123:19"><name pos:start="123:12" pos:end="123:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
