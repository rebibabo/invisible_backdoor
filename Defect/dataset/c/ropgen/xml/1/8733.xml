<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8733.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">av_write_header</name><parameter_list pos:start="1:20" pos:end="1:39">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:1">{<block_content pos:start="5:5" pos:end="229:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <comment type="line" pos:start="11:5" pos:end="11:25">// some sanity checks</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:21">nb_streams</name></name> <operator pos:start="13:23" pos:end="13:24">==</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>)</condition> <block pos:start="13:29" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:31">

        <expr_stmt pos:start="15:9" pos:end="15:48"><expr pos:start="15:9" pos:end="15:47"><call pos:start="15:9" pos:end="15:47"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:47">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">s</name></expr></argument>, <argument pos:start="15:19" pos:end="15:30"><expr pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:33" pos:end="15:46"><expr pos:start="15:33" pos:end="15:46"><literal type="string" pos:start="15:33" pos:end="15:46">"no streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="23:5" pos:end="123:5">for<control pos:start="23:8" pos:end="23:32">(<init pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">i</name><operator pos:start="23:10" pos:end="23:10">=</operator><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</init><condition pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:13">i</name><operator pos:start="23:14" pos:end="23:14">&lt;</operator><name pos:start="23:15" pos:end="23:27"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:27">nb_streams</name></name></expr>;</condition><incr pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:29">i</name><operator pos:start="23:30" pos:end="23:31">++</operator></expr></incr>)</control> <block pos:start="23:34" pos:end="123:5">{<block_content pos:start="25:9" pos:end="121:137">

        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:10">st</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:23">streams</name><index pos:start="25:24" pos:end="25:26">[<expr pos:start="25:25" pos:end="25:25"><name pos:start="25:25" pos:end="25:25">i</name></expr>]</index></name></expr>;</expr_stmt>



        <switch pos:start="29:9" pos:end="77:9">switch <condition pos:start="29:16" pos:end="29:38">(<expr pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:18">st</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:25">codec</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:37">codec_type</name></name></expr>)</condition> <block pos:start="29:40" pos:end="77:9">{<block_content pos:start="31:9" pos:end="75:18">

        <case pos:start="31:9" pos:end="31:32">case <expr pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if<condition pos:start="33:15" pos:end="33:41">(<expr pos:start="33:16" pos:end="33:40"><name pos:start="33:16" pos:end="33:37"><name pos:start="33:16" pos:end="33:17">st</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:24">codec</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:37">sample_rate</name></name><operator pos:start="33:38" pos:end="33:39">&lt;=</operator><literal type="number" pos:start="33:40" pos:end="33:40">0</literal></expr>)</condition><block pos:start="33:42" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:39">

                <expr_stmt pos:start="35:17" pos:end="35:65"><expr pos:start="35:17" pos:end="35:64"><call pos:start="35:17" pos:end="35:64"><name pos:start="35:17" pos:end="35:22">av_log</name><argument_list pos:start="35:23" pos:end="35:64">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">s</name></expr></argument>, <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:41" pos:end="35:63"><expr pos:start="35:41" pos:end="35:63"><literal type="string" pos:start="35:41" pos:end="35:63">"sample rate not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="37:17" pos:end="37:39">return <expr pos:start="37:24" pos:end="37:38"><call pos:start="37:24" pos:end="37:38"><name pos:start="37:24" pos:end="37:30">AVERROR</name><argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><name pos:start="37:32" pos:end="37:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="41:13" pos:end="45:69"><if pos:start="41:13" pos:end="45:69">if<condition pos:start="41:15" pos:end="41:39">(<expr pos:start="41:16" pos:end="41:38"><operator pos:start="41:16" pos:end="41:16">!</operator><name pos:start="41:17" pos:end="41:38"><name pos:start="41:17" pos:end="41:18">st</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">codec</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:38">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="45:69"><block_content pos:start="43:17" pos:end="45:69">

                <expr_stmt pos:start="43:17" pos:end="45:69"><expr pos:start="43:17" pos:end="45:68"><name pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:18">st</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">codec</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:38">block_align</name></name> <operator pos:start="43:40" pos:end="43:40">=</operator> <name pos:start="43:42" pos:end="43:60"><name pos:start="43:42" pos:end="43:43">st</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:50">codec</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:60">channels</name></name> <operator pos:start="43:62" pos:end="43:62">*</operator>

                    <call pos:start="45:21" pos:end="45:63"><name pos:start="45:21" pos:end="45:42">av_get_bits_per_sample</name><argument_list pos:start="45:43" pos:end="45:63">(<argument pos:start="45:44" pos:end="45:62"><expr pos:start="45:44" pos:end="45:62"><name pos:start="45:44" pos:end="45:62"><name pos:start="45:44" pos:end="45:45">st</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:52">codec</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:62">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:65" pos:end="45:66">&gt;&gt;</operator> <literal type="number" pos:start="45:68" pos:end="45:68">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        <case pos:start="49:9" pos:end="49:32">case <expr pos:start="49:14" pos:end="49:31"><name pos:start="49:14" pos:end="49:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="57:13"><if pos:start="51:13" pos:end="57:13">if<condition pos:start="51:15" pos:end="51:74">(<expr pos:start="51:16" pos:end="51:73"><name pos:start="51:16" pos:end="51:39"><name pos:start="51:16" pos:end="51:17">st</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">codec</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">time_base</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:39">num</name></name><operator pos:start="51:40" pos:end="51:41">&lt;=</operator><literal type="number" pos:start="51:42" pos:end="51:42">0</literal> <operator pos:start="51:44" pos:end="51:45">||</operator> <name pos:start="51:47" pos:end="51:70"><name pos:start="51:47" pos:end="51:48">st</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:55">codec</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:66">time_base</name><operator pos:start="51:67" pos:end="51:67">.</operator><name pos:start="51:68" pos:end="51:70">den</name></name><operator pos:start="51:71" pos:end="51:72">&lt;=</operator><literal type="number" pos:start="51:73" pos:end="51:73">0</literal></expr>)</condition><block pos:start="51:75" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:39"> <comment type="line" pos:start="51:77" pos:end="51:94">//FIXME audio too?</comment>

                <expr_stmt pos:start="53:17" pos:end="53:63"><expr pos:start="53:17" pos:end="53:62"><call pos:start="53:17" pos:end="53:62"><name pos:start="53:17" pos:end="53:22">av_log</name><argument_list pos:start="53:23" pos:end="53:62">(<argument pos:start="53:24" pos:end="53:24"><expr pos:start="53:24" pos:end="53:24"><name pos:start="53:24" pos:end="53:24">s</name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:41" pos:end="53:61"><expr pos:start="53:41" pos:end="53:61"><literal type="string" pos:start="53:41" pos:end="53:61">"time base not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="55:17" pos:end="55:39">return <expr pos:start="55:24" pos:end="55:38"><call pos:start="55:24" pos:end="55:38"><name pos:start="55:24" pos:end="55:30">AVERROR</name><argument_list pos:start="55:31" pos:end="55:38">(<argument pos:start="55:32" pos:end="55:37"><expr pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if<condition pos:start="59:15" pos:end="59:106">(<expr pos:start="59:16" pos:end="59:105"><operator pos:start="59:16" pos:end="59:16">(</operator><name pos:start="59:17" pos:end="59:32"><name pos:start="59:17" pos:end="59:18">st</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:25">codec</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:32">width</name></name><operator pos:start="59:33" pos:end="59:34">&lt;=</operator><literal type="number" pos:start="59:35" pos:end="59:35">0</literal> <operator pos:start="59:37" pos:end="59:38">||</operator> <name pos:start="59:40" pos:end="59:56"><name pos:start="59:40" pos:end="59:41">st</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:48">codec</name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:56">height</name></name><operator pos:start="59:57" pos:end="59:58">&lt;=</operator><literal type="number" pos:start="59:59" pos:end="59:59">0</literal><operator pos:start="59:60" pos:end="59:60">)</operator> <operator pos:start="59:62" pos:end="59:63">&amp;&amp;</operator> <operator pos:start="59:65" pos:end="59:65">!</operator><operator pos:start="59:66" pos:end="59:66">(</operator><name pos:start="59:67" pos:end="59:83"><name pos:start="59:67" pos:end="59:67">s</name><operator pos:start="59:68" pos:end="59:69">-&gt;</operator><name pos:start="59:70" pos:end="59:76">oformat</name><operator pos:start="59:77" pos:end="59:78">-&gt;</operator><name pos:start="59:79" pos:end="59:83">flags</name></name> <operator pos:start="59:85" pos:end="59:85">&amp;</operator> <name pos:start="59:87" pos:end="59:104">AVFMT_NODIMENSIONS</name><operator pos:start="59:105" pos:end="59:105">)</operator></expr>)</condition><block pos:start="59:107" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:39">

                <expr_stmt pos:start="61:17" pos:end="61:64"><expr pos:start="61:17" pos:end="61:63"><call pos:start="61:17" pos:end="61:63"><name pos:start="61:17" pos:end="61:22">av_log</name><argument_list pos:start="61:23" pos:end="61:63">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">s</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:41" pos:end="61:62"><expr pos:start="61:41" pos:end="61:62"><literal type="string" pos:start="61:41" pos:end="61:62">"dimensions not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="63:17" pos:end="63:39">return <expr pos:start="63:24" pos:end="63:38"><call pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:30">AVERROR</name><argument_list pos:start="63:31" pos:end="63:38">(<argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="73:13"><if pos:start="67:13" pos:end="73:13">if<condition pos:start="67:15" pos:end="67:81">(<expr pos:start="67:16" pos:end="67:80"><call pos:start="67:16" pos:end="67:80"><name pos:start="67:16" pos:end="67:23">av_cmp_q</name><argument_list pos:start="67:24" pos:end="67:80">(<argument pos:start="67:25" pos:end="67:47"><expr pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:47"><name pos:start="67:25" pos:end="67:26">st</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:47">sample_aspect_ratio</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:79"><expr pos:start="67:50" pos:end="67:79"><name pos:start="67:50" pos:end="67:79"><name pos:start="67:50" pos:end="67:51">st</name><operator pos:start="67:52" pos:end="67:53">-&gt;</operator><name pos:start="67:54" pos:end="67:58">codec</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:79">sample_aspect_ratio</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="67:82" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:39">

                <expr_stmt pos:start="69:17" pos:end="69:99"><expr pos:start="69:17" pos:end="69:98"><call pos:start="69:17" pos:end="69:98"><name pos:start="69:17" pos:end="69:22">av_log</name><argument_list pos:start="69:23" pos:end="69:98">(<argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">s</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:41" pos:end="69:97"><expr pos:start="69:41" pos:end="69:97"><literal type="string" pos:start="69:41" pos:end="69:97">"Aspect ratio mismatch between encoder and muxer layer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="71:17" pos:end="71:39">return <expr pos:start="71:24" pos:end="71:38"><call pos:start="71:24" pos:end="71:38"><name pos:start="71:24" pos:end="71:30">AVERROR</name><argument_list pos:start="71:31" pos:end="71:38">(<argument pos:start="71:32" pos:end="71:37"><expr pos:start="71:32" pos:end="71:37"><name pos:start="71:32" pos:end="71:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="81:9" pos:end="113:9"><if pos:start="81:9" pos:end="113:9">if<condition pos:start="81:11" pos:end="81:33">(<expr pos:start="81:12" pos:end="81:32"><name pos:start="81:12" pos:end="81:32"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:21">oformat</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:32">codec_tag</name></name></expr>)</condition><block pos:start="81:34" pos:end="113:9">{<block_content pos:start="83:13" pos:end="111:99">

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if<condition pos:start="83:15" pos:end="83:179">(<expr pos:start="83:16" pos:end="83:178"><name pos:start="83:16" pos:end="83:35"><name pos:start="83:16" pos:end="83:17">st</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:24">codec</name><operator pos:start="83:25" pos:end="83:26">-&gt;</operator><name pos:start="83:27" pos:end="83:35">codec_tag</name></name> <operator pos:start="83:37" pos:end="83:38">&amp;&amp;</operator> <name pos:start="83:40" pos:end="83:58"><name pos:start="83:40" pos:end="83:41">st</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:48">codec</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:58">codec_id</name></name> <operator pos:start="83:60" pos:end="83:61">==</operator> <name pos:start="83:63" pos:end="83:79">CODEC_ID_RAWVIDEO</name> <operator pos:start="83:81" pos:end="83:82">&amp;&amp;</operator> <call pos:start="83:84" pos:end="83:143"><name pos:start="83:84" pos:end="83:99">av_codec_get_tag</name><argument_list pos:start="83:100" pos:end="83:143">(<argument pos:start="83:101" pos:end="83:121"><expr pos:start="83:101" pos:end="83:121"><name pos:start="83:101" pos:end="83:121"><name pos:start="83:101" pos:end="83:101">s</name><operator pos:start="83:102" pos:end="83:103">-&gt;</operator><name pos:start="83:104" pos:end="83:110">oformat</name><operator pos:start="83:111" pos:end="83:112">-&gt;</operator><name pos:start="83:113" pos:end="83:121">codec_tag</name></name></expr></argument>, <argument pos:start="83:124" pos:end="83:142"><expr pos:start="83:124" pos:end="83:142"><name pos:start="83:124" pos:end="83:142"><name pos:start="83:124" pos:end="83:125">st</name><operator pos:start="83:126" pos:end="83:127">-&gt;</operator><name pos:start="83:128" pos:end="83:132">codec</name><operator pos:start="83:133" pos:end="83:134">-&gt;</operator><name pos:start="83:135" pos:end="83:142">codec_id</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:145" pos:end="83:146">==</operator> <literal type="number" pos:start="83:148" pos:end="83:148">0</literal> <operator pos:start="83:150" pos:end="83:151">&amp;&amp;</operator> <operator pos:start="83:153" pos:end="83:153">!</operator><call pos:start="83:154" pos:end="83:178"><name pos:start="83:154" pos:end="83:171">validate_codec_tag</name><argument_list pos:start="83:172" pos:end="83:178">(<argument pos:start="83:173" pos:end="83:173"><expr pos:start="83:173" pos:end="83:173"><name pos:start="83:173" pos:end="83:173">s</name></expr></argument>, <argument pos:start="83:176" pos:end="83:177"><expr pos:start="83:176" pos:end="83:177"><name pos:start="83:176" pos:end="83:177">st</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="83:180" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:40">

                <comment type="line" pos:start="85:17" pos:end="85:119">//the current rawvideo encoding system ends up setting the wrong codec_tag for avi, we override it here</comment>

                <expr_stmt pos:start="87:17" pos:end="87:40"><expr pos:start="87:17" pos:end="87:39"><name pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:18">st</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:25">codec</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:36">codec_tag</name></name><operator pos:start="87:37" pos:end="87:37">=</operator> <literal type="number" pos:start="87:39" pos:end="87:39">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="111:99"><if pos:start="91:13" pos:end="109:13">if<condition pos:start="91:15" pos:end="91:36">(<expr pos:start="91:16" pos:end="91:35"><name pos:start="91:16" pos:end="91:35"><name pos:start="91:16" pos:end="91:17">st</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:24">codec</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:35">codec_tag</name></name></expr>)</condition><block pos:start="91:37" pos:end="109:13">{<block_content pos:start="93:17" pos:end="107:17">

                <if_stmt pos:start="93:17" pos:end="107:17"><if pos:start="93:17" pos:end="107:17">if <condition pos:start="93:20" pos:end="93:47">(<expr pos:start="93:21" pos:end="93:46"><operator pos:start="93:21" pos:end="93:21">!</operator><call pos:start="93:22" pos:end="93:46"><name pos:start="93:22" pos:end="93:39">validate_codec_tag</name><argument_list pos:start="93:40" pos:end="93:46">(<argument pos:start="93:41" pos:end="93:41"><expr pos:start="93:41" pos:end="93:41"><name pos:start="93:41" pos:end="93:41">s</name></expr></argument>, <argument pos:start="93:44" pos:end="93:45"><expr pos:start="93:44" pos:end="93:45"><name pos:start="93:44" pos:end="93:45">st</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:49" pos:end="107:17">{<block_content pos:start="95:21" pos:end="105:47">

                    <decl_stmt pos:start="95:21" pos:end="95:36"><decl pos:start="95:21" pos:end="95:35"><type pos:start="95:21" pos:end="95:24"><name pos:start="95:21" pos:end="95:24">char</name></type> <name pos:start="95:26" pos:end="95:35"><name pos:start="95:26" pos:end="95:31">tagbuf</name><index pos:start="95:32" pos:end="95:35">[<expr pos:start="95:33" pos:end="95:34"><literal type="number" pos:start="95:33" pos:end="95:34">32</literal></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="97:21" pos:end="97:90"><expr pos:start="97:21" pos:end="97:89"><call pos:start="97:21" pos:end="97:89"><name pos:start="97:21" pos:end="97:43">av_get_codec_tag_string</name><argument_list pos:start="97:44" pos:end="97:89">(<argument pos:start="97:45" pos:end="97:50"><expr pos:start="97:45" pos:end="97:50"><name pos:start="97:45" pos:end="97:50">tagbuf</name></expr></argument>, <argument pos:start="97:53" pos:end="97:66"><expr pos:start="97:53" pos:end="97:66"><sizeof pos:start="97:53" pos:end="97:66">sizeof<argument_list pos:start="97:59" pos:end="97:66">(<argument pos:start="97:60" pos:end="97:65"><expr pos:start="97:60" pos:end="97:65"><name pos:start="97:60" pos:end="97:65">tagbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="97:69" pos:end="97:88"><expr pos:start="97:69" pos:end="97:88"><name pos:start="97:69" pos:end="97:88"><name pos:start="97:69" pos:end="97:70">st</name><operator pos:start="97:71" pos:end="97:72">-&gt;</operator><name pos:start="97:73" pos:end="97:77">codec</name><operator pos:start="97:78" pos:end="97:79">-&gt;</operator><name pos:start="97:80" pos:end="97:88">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="103:81"><expr pos:start="99:21" pos:end="103:80"><call pos:start="99:21" pos:end="103:80"><name pos:start="99:21" pos:end="99:26">av_log</name><argument_list pos:start="99:27" pos:end="103:80">(<argument pos:start="99:28" pos:end="99:28"><expr pos:start="99:28" pos:end="99:28"><name pos:start="99:28" pos:end="99:28">s</name></expr></argument>, <argument pos:start="99:31" pos:end="99:42"><expr pos:start="99:31" pos:end="99:42"><name pos:start="99:31" pos:end="99:42">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="101:28" pos:end="101:80"><expr pos:start="101:28" pos:end="101:80"><literal type="string" pos:start="101:28" pos:end="101:80">"Tag %s/0x%08x incompatible with output codec '%s'\n"</literal></expr></argument>,

                           <argument pos:start="103:28" pos:end="103:33"><expr pos:start="103:28" pos:end="103:33"><name pos:start="103:28" pos:end="103:33">tagbuf</name></expr></argument>, <argument pos:start="103:36" pos:end="103:55"><expr pos:start="103:36" pos:end="103:55"><name pos:start="103:36" pos:end="103:55"><name pos:start="103:36" pos:end="103:37">st</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:44">codec</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:55">codec_tag</name></name></expr></argument>, <argument pos:start="103:58" pos:end="103:79"><expr pos:start="103:58" pos:end="103:79"><name pos:start="103:58" pos:end="103:79"><name pos:start="103:58" pos:end="103:59">st</name><operator pos:start="103:60" pos:end="103:61">-&gt;</operator><name pos:start="103:62" pos:end="103:66">codec</name><operator pos:start="103:67" pos:end="103:68">-&gt;</operator><name pos:start="103:69" pos:end="103:73">codec</name><operator pos:start="103:74" pos:end="103:75">-&gt;</operator><name pos:start="103:76" pos:end="103:79">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="105:21" pos:end="105:47">return <expr pos:start="105:28" pos:end="105:46"><name pos:start="105:28" pos:end="105:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if><else pos:start="109:14" pos:end="111:99">else<block type="pseudo" pos:start="111:17" pos:end="111:99"><block_content pos:start="111:17" pos:end="111:99">

                <expr_stmt pos:start="111:17" pos:end="111:99"><expr pos:start="111:17" pos:end="111:98"><name pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:18">st</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:25">codec</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:36">codec_tag</name></name><operator pos:start="111:37" pos:end="111:37">=</operator> <call pos:start="111:39" pos:end="111:98"><name pos:start="111:39" pos:end="111:54">av_codec_get_tag</name><argument_list pos:start="111:55" pos:end="111:98">(<argument pos:start="111:56" pos:end="111:76"><expr pos:start="111:56" pos:end="111:76"><name pos:start="111:56" pos:end="111:76"><name pos:start="111:56" pos:end="111:56">s</name><operator pos:start="111:57" pos:end="111:58">-&gt;</operator><name pos:start="111:59" pos:end="111:65">oformat</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:76">codec_tag</name></name></expr></argument>, <argument pos:start="111:79" pos:end="111:97"><expr pos:start="111:79" pos:end="111:97"><name pos:start="111:79" pos:end="111:97"><name pos:start="111:79" pos:end="111:80">st</name><operator pos:start="111:81" pos:end="111:82">-&gt;</operator><name pos:start="111:83" pos:end="111:87">codec</name><operator pos:start="111:88" pos:end="111:89">-&gt;</operator><name pos:start="111:90" pos:end="111:97">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="117:9" pos:end="121:137"><if pos:start="117:9" pos:end="121:137">if<condition pos:start="117:11" pos:end="119:59">(<expr pos:start="117:12" pos:end="119:58"><name pos:start="117:12" pos:end="117:28"><name pos:start="117:12" pos:end="117:12">s</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:21">oformat</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:28">flags</name></name> <operator pos:start="117:30" pos:end="117:30">&amp;</operator> <name pos:start="117:32" pos:end="117:49">AVFMT_GLOBALHEADER</name> <operator pos:start="117:51" pos:end="117:52">&amp;&amp;</operator>

            <operator pos:start="119:13" pos:end="119:13">!</operator><operator pos:start="119:14" pos:end="119:14">(</operator><name pos:start="119:15" pos:end="119:30"><name pos:start="119:15" pos:end="119:16">st</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:23">codec</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:30">flags</name></name> <operator pos:start="119:32" pos:end="119:32">&amp;</operator> <name pos:start="119:34" pos:end="119:57">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="119:58" pos:end="119:58">)</operator></expr>)</condition><block type="pseudo" pos:start="121:11" pos:end="121:137"><block_content pos:start="121:11" pos:end="121:137">

          <expr_stmt pos:start="121:11" pos:end="121:137"><expr pos:start="121:11" pos:end="121:136"><call pos:start="121:11" pos:end="121:136"><name pos:start="121:11" pos:end="121:16">av_log</name><argument_list pos:start="121:17" pos:end="121:136">(<argument pos:start="121:18" pos:end="121:18"><expr pos:start="121:18" pos:end="121:18"><name pos:start="121:18" pos:end="121:18">s</name></expr></argument>, <argument pos:start="121:21" pos:end="121:34"><expr pos:start="121:21" pos:end="121:34"><name pos:start="121:21" pos:end="121:34">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="121:37" pos:end="121:132"><expr pos:start="121:37" pos:end="121:132"><literal type="string" pos:start="121:37" pos:end="121:132">"Codec for stream %d does not use global headers but container format requires global headers\n"</literal></expr></argument>, <argument pos:start="121:135" pos:end="121:135"><expr pos:start="121:135" pos:end="121:135"><name pos:start="121:135" pos:end="121:135">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="127:5" pos:end="140:0"><if pos:start="127:5" pos:end="140:0">if <condition pos:start="127:8" pos:end="127:56">(<expr pos:start="127:9" pos:end="127:55"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:21"><name pos:start="127:10" pos:end="127:10">s</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:21">priv_data</name></name> <operator pos:start="127:23" pos:end="127:24">&amp;&amp;</operator> <name pos:start="127:26" pos:end="127:51"><name pos:start="127:26" pos:end="127:26">s</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:35">oformat</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:51">priv_data_size</name></name> <operator pos:start="127:53" pos:end="127:53">&gt;</operator> <literal type="number" pos:start="127:55" pos:end="127:55">0</literal></expr>)</condition> <block pos:start="127:58" pos:end="140:0">{<block_content pos:start="129:9" pos:end="133:35">

        <expr_stmt pos:start="129:9" pos:end="129:62"><expr pos:start="129:9" pos:end="129:61"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:20">priv_data</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <call pos:start="129:24" pos:end="129:61"><name pos:start="129:24" pos:end="129:33">av_mallocz</name><argument_list pos:start="129:34" pos:end="129:61">(<argument pos:start="129:35" pos:end="129:60"><expr pos:start="129:35" pos:end="129:60"><name pos:start="129:35" pos:end="129:60"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:44">oformat</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:60">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="133:35"><if pos:start="131:9" pos:end="133:35">if <condition pos:start="131:12" pos:end="131:26">(<expr pos:start="131:13" pos:end="131:25"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:25"><name pos:start="131:14" pos:end="131:14">s</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:25">priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="133:35"><block_content pos:start="133:13" pos:end="133:35">

            <return pos:start="133:13" pos:end="133:35">return <expr pos:start="133:20" pos:end="133:34"><call pos:start="133:20" pos:end="133:34"><name pos:start="133:20" pos:end="133:26">AVERROR</name><argument_list pos:start="133:27" pos:end="133:34">(<argument pos:start="133:28" pos:end="133:33"><expr pos:start="133:28" pos:end="133:33"><name pos:start="133:28" pos:end="133:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="139:1" pos:end="139:34">#<cpp:directive pos:start="139:2" pos:end="139:3">if</cpp:directive> <expr pos:start="139:5" pos:end="139:34"><name pos:start="139:5" pos:end="139:29">LIBAVFORMAT_VERSION_MAJOR</name> <operator pos:start="139:31" pos:end="139:31">&lt;</operator> <literal type="number" pos:start="139:33" pos:end="139:34">53</literal></expr></cpp:if>

    <expr_stmt pos:start="141:5" pos:end="144:0"><expr pos:start="141:5" pos:end="141:29"><call pos:start="141:5" pos:end="141:29"><name pos:start="141:5" pos:end="141:26">ff_metadata_mux_compat</name><argument_list pos:start="141:27" pos:end="141:29">(<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="147:5" pos:end="147:41">/* set muxer identification string */</comment>

    <if_stmt pos:start="149:5" pos:end="171:5"><if pos:start="149:5" pos:end="171:5">if <condition pos:start="149:8" pos:end="149:61">(<expr pos:start="149:9" pos:end="149:60"><operator pos:start="149:9" pos:end="149:9">!</operator><operator pos:start="149:10" pos:end="149:10">(</operator><name pos:start="149:11" pos:end="149:23"><name pos:start="149:11" pos:end="149:11">s</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:20">streams</name><index pos:start="149:21" pos:end="149:23">[<expr pos:start="149:22" pos:end="149:22"><literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>]</index></name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:37"><name pos:start="149:26" pos:end="149:30">codec</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:37">flags</name></name> <operator pos:start="149:39" pos:end="149:39">&amp;</operator> <name pos:start="149:41" pos:end="149:59">CODEC_FLAG_BITEXACT</name><operator pos:start="149:60" pos:end="149:60">)</operator></expr>)</condition> <block pos:start="149:63" pos:end="171:5">{<block_content pos:start="151:9" pos:end="169:29">

        <decl_stmt pos:start="151:9" pos:end="151:22"><decl pos:start="151:9" pos:end="151:21"><type pos:start="151:9" pos:end="151:20"><name pos:start="151:9" pos:end="151:18">AVMetadata</name> <modifier pos:start="151:20" pos:end="151:20">*</modifier></type><name pos:start="151:21" pos:end="151:21">m</name></decl>;</decl_stmt>

        <decl_stmt pos:start="153:9" pos:end="153:25"><decl pos:start="153:9" pos:end="153:24"><type pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:21">AVMetadataTag</name> <modifier pos:start="153:23" pos:end="153:23">*</modifier></type><name pos:start="153:24" pos:end="153:24">t</name></decl>;</decl_stmt>



        <if_stmt pos:start="157:9" pos:end="159:35"><if pos:start="157:9" pos:end="159:35">if <condition pos:start="157:12" pos:end="157:50">(<expr pos:start="157:13" pos:end="157:49"><operator pos:start="157:13" pos:end="157:13">!</operator><operator pos:start="157:14" pos:end="157:14">(</operator><name pos:start="157:15" pos:end="157:15">m</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <call pos:start="157:19" pos:end="157:48"><name pos:start="157:19" pos:end="157:28">av_mallocz</name><argument_list pos:start="157:29" pos:end="157:48">(<argument pos:start="157:30" pos:end="157:47"><expr pos:start="157:30" pos:end="157:47"><sizeof pos:start="157:30" pos:end="157:47">sizeof<argument_list pos:start="157:36" pos:end="157:47">(<argument pos:start="157:37" pos:end="157:46"><expr pos:start="157:37" pos:end="157:46"><name pos:start="157:37" pos:end="157:46">AVMetadata</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="157:49" pos:end="157:49">)</operator></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:35"><block_content pos:start="159:13" pos:end="159:35">

            <return pos:start="159:13" pos:end="159:35">return <expr pos:start="159:20" pos:end="159:34"><call pos:start="159:20" pos:end="159:34"><name pos:start="159:20" pos:end="159:26">AVERROR</name><argument_list pos:start="159:27" pos:end="159:34">(<argument pos:start="159:28" pos:end="159:33"><expr pos:start="159:28" pos:end="159:33"><name pos:start="159:28" pos:end="159:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:62"><expr pos:start="161:9" pos:end="161:61"><call pos:start="161:9" pos:end="161:61"><name pos:start="161:9" pos:end="161:24">av_metadata_set2</name><argument_list pos:start="161:25" pos:end="161:61">(<argument pos:start="161:26" pos:end="161:27"><expr pos:start="161:26" pos:end="161:27"><operator pos:start="161:26" pos:end="161:26">&amp;</operator><name pos:start="161:27" pos:end="161:27">m</name></expr></argument>, <argument pos:start="161:30" pos:end="161:38"><expr pos:start="161:30" pos:end="161:38"><literal type="string" pos:start="161:30" pos:end="161:38">"encoder"</literal></expr></argument>, <argument pos:start="161:41" pos:end="161:57"><expr pos:start="161:41" pos:end="161:57"><name pos:start="161:41" pos:end="161:57">LIBAVFORMAT_IDENT</name></expr></argument>, <argument pos:start="161:60" pos:end="161:60"><expr pos:start="161:60" pos:end="161:60"><literal type="number" pos:start="161:60" pos:end="161:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:59"><expr pos:start="163:9" pos:end="163:58"><call pos:start="163:9" pos:end="163:58"><name pos:start="163:9" pos:end="163:21">metadata_conv</name><argument_list pos:start="163:22" pos:end="163:58">(<argument pos:start="163:23" pos:end="163:24"><expr pos:start="163:23" pos:end="163:24"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:24">m</name></expr></argument>, <argument pos:start="163:27" pos:end="163:51"><expr pos:start="163:27" pos:end="163:51"><name pos:start="163:27" pos:end="163:51"><name pos:start="163:27" pos:end="163:27">s</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:36">oformat</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:51">metadata_conv</name></name></expr></argument>, <argument pos:start="163:54" pos:end="163:57"><expr pos:start="163:54" pos:end="163:57"><name pos:start="163:54" pos:end="163:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="167:64"><if pos:start="165:9" pos:end="167:64">if <condition pos:start="165:12" pos:end="165:74">(<expr pos:start="165:13" pos:end="165:73"><operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:14">t</name> <operator pos:start="165:16" pos:end="165:16">=</operator> <call pos:start="165:18" pos:end="165:72"><name pos:start="165:18" pos:end="165:32">av_metadata_get</name><argument_list pos:start="165:33" pos:end="165:72">(<argument pos:start="165:34" pos:end="165:34"><expr pos:start="165:34" pos:end="165:34"><name pos:start="165:34" pos:end="165:34">m</name></expr></argument>, <argument pos:start="165:37" pos:end="165:38"><expr pos:start="165:37" pos:end="165:38"><literal type="string" pos:start="165:37" pos:end="165:38">""</literal></expr></argument>, <argument pos:start="165:41" pos:end="165:44"><expr pos:start="165:41" pos:end="165:44"><name pos:start="165:41" pos:end="165:44">NULL</name></expr></argument>, <argument pos:start="165:47" pos:end="165:71"><expr pos:start="165:47" pos:end="165:71"><name pos:start="165:47" pos:end="165:71">AV_METADATA_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="165:73" pos:end="165:73">)</operator></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:64"><block_content pos:start="167:13" pos:end="167:64">

            <expr_stmt pos:start="167:13" pos:end="167:64"><expr pos:start="167:13" pos:end="167:63"><call pos:start="167:13" pos:end="167:63"><name pos:start="167:13" pos:end="167:28">av_metadata_set2</name><argument_list pos:start="167:29" pos:end="167:63">(<argument pos:start="167:30" pos:end="167:41"><expr pos:start="167:30" pos:end="167:41"><operator pos:start="167:30" pos:end="167:30">&amp;</operator><name pos:start="167:31" pos:end="167:41"><name pos:start="167:31" pos:end="167:31">s</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:41">metadata</name></name></expr></argument>, <argument pos:start="167:44" pos:end="167:49"><expr pos:start="167:44" pos:end="167:49"><name pos:start="167:44" pos:end="167:49"><name pos:start="167:44" pos:end="167:44">t</name><operator pos:start="167:45" pos:end="167:46">-&gt;</operator><name pos:start="167:47" pos:end="167:49">key</name></name></expr></argument>, <argument pos:start="167:52" pos:end="167:59"><expr pos:start="167:52" pos:end="167:59"><name pos:start="167:52" pos:end="167:59"><name pos:start="167:52" pos:end="167:52">t</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:59">value</name></name></expr></argument>, <argument pos:start="167:62" pos:end="167:62"><expr pos:start="167:62" pos:end="167:62"><literal type="number" pos:start="167:62" pos:end="167:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:29"><expr pos:start="169:9" pos:end="169:28"><call pos:start="169:9" pos:end="169:28"><name pos:start="169:9" pos:end="169:24">av_metadata_free</name><argument_list pos:start="169:25" pos:end="169:28">(<argument pos:start="169:26" pos:end="169:27"><expr pos:start="169:26" pos:end="169:27"><operator pos:start="169:26" pos:end="169:26">&amp;</operator><name pos:start="169:27" pos:end="169:27">m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="183:5"><if pos:start="175:5" pos:end="183:5">if<condition pos:start="175:7" pos:end="175:32">(<expr pos:start="175:8" pos:end="175:31"><name pos:start="175:8" pos:end="175:31"><name pos:start="175:8" pos:end="175:8">s</name><operator pos:start="175:9" pos:end="175:10">-&gt;</operator><name pos:start="175:11" pos:end="175:17">oformat</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:31">write_header</name></name></expr>)</condition><block pos:start="175:33" pos:end="183:5">{<block_content pos:start="177:9" pos:end="181:23">

        <expr_stmt pos:start="177:9" pos:end="177:42"><expr pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <call pos:start="177:15" pos:end="177:41"><name pos:start="177:15" pos:end="177:38"><name pos:start="177:15" pos:end="177:15">s</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:24">oformat</name><operator pos:start="177:25" pos:end="177:26">-&gt;</operator><name pos:start="177:27" pos:end="177:38">write_header</name></name><argument_list pos:start="177:39" pos:end="177:41">(<argument pos:start="177:40" pos:end="177:40"><expr pos:start="177:40" pos:end="177:40"><name pos:start="177:40" pos:end="177:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="181:23"><if pos:start="179:9" pos:end="181:23">if <condition pos:start="179:12" pos:end="179:20">(<expr pos:start="179:13" pos:end="179:19"><name pos:start="179:13" pos:end="179:15">ret</name> <operator pos:start="179:17" pos:end="179:17">&lt;</operator> <literal type="number" pos:start="179:19" pos:end="179:19">0</literal></expr>)</condition><block type="pseudo" pos:start="181:13" pos:end="181:23"><block_content pos:start="181:13" pos:end="181:23">

            <return pos:start="181:13" pos:end="181:23">return <expr pos:start="181:20" pos:end="181:22"><name pos:start="181:20" pos:end="181:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="187:5" pos:end="187:29">/* init PTS generation */</comment>

    <for pos:start="189:5" pos:end="227:5">for<control pos:start="189:8" pos:end="189:32">(<init pos:start="189:9" pos:end="189:12"><expr pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:9">i</name><operator pos:start="189:10" pos:end="189:10">=</operator><literal type="number" pos:start="189:11" pos:end="189:11">0</literal></expr>;</init><condition pos:start="189:13" pos:end="189:28"><expr pos:start="189:13" pos:end="189:27"><name pos:start="189:13" pos:end="189:13">i</name><operator pos:start="189:14" pos:end="189:14">&lt;</operator><name pos:start="189:15" pos:end="189:27"><name pos:start="189:15" pos:end="189:15">s</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:27">nb_streams</name></name></expr>;</condition><incr pos:start="189:29" pos:end="189:31"><expr pos:start="189:29" pos:end="189:31"><name pos:start="189:29" pos:end="189:29">i</name><operator pos:start="189:30" pos:end="189:31">++</operator></expr></incr>)</control> <block pos:start="189:34" pos:end="227:5">{<block_content pos:start="191:9" pos:end="225:9">

        <decl_stmt pos:start="191:9" pos:end="191:37"><decl pos:start="191:9" pos:end="191:36"><type pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:15">int64_t</name></type> <name pos:start="191:17" pos:end="191:19">den</name> <init pos:start="191:21" pos:end="191:36">= <expr pos:start="191:23" pos:end="191:36"><name pos:start="191:23" pos:end="191:36">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:27"><expr pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:10">st</name> <operator pos:start="193:12" pos:end="193:12">=</operator> <name pos:start="193:14" pos:end="193:26"><name pos:start="193:14" pos:end="193:14">s</name><operator pos:start="193:15" pos:end="193:16">-&gt;</operator><name pos:start="193:17" pos:end="193:23">streams</name><index pos:start="193:24" pos:end="193:26">[<expr pos:start="193:25" pos:end="193:25"><name pos:start="193:25" pos:end="193:25">i</name></expr>]</index></name></expr>;</expr_stmt>



        <switch pos:start="197:9" pos:end="215:9">switch <condition pos:start="197:16" pos:end="197:38">(<expr pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:18">st</name><operator pos:start="197:19" pos:end="197:20">-&gt;</operator><name pos:start="197:21" pos:end="197:25">codec</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:37">codec_type</name></name></expr>)</condition> <block pos:start="197:40" pos:end="215:9">{<block_content pos:start="199:9" pos:end="213:18">

        <case pos:start="199:9" pos:end="199:32">case <expr pos:start="199:14" pos:end="199:31"><name pos:start="199:14" pos:end="199:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="201:13" pos:end="201:70"><expr pos:start="201:13" pos:end="201:69"><name pos:start="201:13" pos:end="201:15">den</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <operator pos:start="201:19" pos:end="201:19">(</operator><name pos:start="201:20" pos:end="201:26">int64_t</name><operator pos:start="201:27" pos:end="201:27">)</operator><name pos:start="201:28" pos:end="201:44"><name pos:start="201:28" pos:end="201:29">st</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:40">time_base</name><operator pos:start="201:41" pos:end="201:41">.</operator><name pos:start="201:42" pos:end="201:44">num</name></name> <operator pos:start="201:46" pos:end="201:46">*</operator> <name pos:start="201:48" pos:end="201:69"><name pos:start="201:48" pos:end="201:49">st</name><operator pos:start="201:50" pos:end="201:51">-&gt;</operator><name pos:start="201:52" pos:end="201:56">codec</name><operator pos:start="201:57" pos:end="201:58">-&gt;</operator><name pos:start="201:59" pos:end="201:69">sample_rate</name></name></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:32">case <expr pos:start="205:14" pos:end="205:31"><name pos:start="205:14" pos:end="205:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <expr_stmt pos:start="207:13" pos:end="207:72"><expr pos:start="207:13" pos:end="207:71"><name pos:start="207:13" pos:end="207:15">den</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <operator pos:start="207:19" pos:end="207:19">(</operator><name pos:start="207:20" pos:end="207:26">int64_t</name><operator pos:start="207:27" pos:end="207:27">)</operator><name pos:start="207:28" pos:end="207:44"><name pos:start="207:28" pos:end="207:29">st</name><operator pos:start="207:30" pos:end="207:31">-&gt;</operator><name pos:start="207:32" pos:end="207:40">time_base</name><operator pos:start="207:41" pos:end="207:41">.</operator><name pos:start="207:42" pos:end="207:44">num</name></name> <operator pos:start="207:46" pos:end="207:46">*</operator> <name pos:start="207:48" pos:end="207:71"><name pos:start="207:48" pos:end="207:49">st</name><operator pos:start="207:50" pos:end="207:51">-&gt;</operator><name pos:start="207:52" pos:end="207:56">codec</name><operator pos:start="207:57" pos:end="207:58">-&gt;</operator><name pos:start="207:59" pos:end="207:67">time_base</name><operator pos:start="207:68" pos:end="207:68">.</operator><name pos:start="207:69" pos:end="207:71">den</name></name></expr>;</expr_stmt>

            <break pos:start="209:13" pos:end="209:18">break;</break>

        <default pos:start="211:9" pos:end="211:16">default:</default>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="217:9" pos:end="225:9"><if pos:start="217:9" pos:end="225:9">if <condition pos:start="217:12" pos:end="217:34">(<expr pos:start="217:13" pos:end="217:33"><name pos:start="217:13" pos:end="217:15">den</name> <operator pos:start="217:17" pos:end="217:18">!=</operator> <name pos:start="217:20" pos:end="217:33">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="217:36" pos:end="225:9">{<block_content pos:start="219:13" pos:end="223:46">

            <if_stmt pos:start="219:13" pos:end="221:43"><if pos:start="219:13" pos:end="221:43">if <condition pos:start="219:16" pos:end="219:25">(<expr pos:start="219:17" pos:end="219:24"><name pos:start="219:17" pos:end="219:19">den</name> <operator pos:start="219:21" pos:end="219:22">&lt;=</operator> <literal type="number" pos:start="219:24" pos:end="219:24">0</literal></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:43"><block_content pos:start="221:17" pos:end="221:43">

                <return pos:start="221:17" pos:end="221:43">return <expr pos:start="221:24" pos:end="221:42"><name pos:start="221:24" pos:end="221:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:46"><expr pos:start="223:13" pos:end="223:45"><call pos:start="223:13" pos:end="223:45"><name pos:start="223:13" pos:end="223:24">av_frac_init</name><argument_list pos:start="223:25" pos:end="223:45">(<argument pos:start="223:26" pos:end="223:33"><expr pos:start="223:26" pos:end="223:33"><operator pos:start="223:26" pos:end="223:26">&amp;</operator><name pos:start="223:27" pos:end="223:33"><name pos:start="223:27" pos:end="223:28">st</name><operator pos:start="223:29" pos:end="223:30">-&gt;</operator><name pos:start="223:31" pos:end="223:33">pts</name></name></expr></argument>, <argument pos:start="223:36" pos:end="223:36"><expr pos:start="223:36" pos:end="223:36"><literal type="number" pos:start="223:36" pos:end="223:36">0</literal></expr></argument>, <argument pos:start="223:39" pos:end="223:39"><expr pos:start="223:39" pos:end="223:39"><literal type="number" pos:start="223:39" pos:end="223:39">0</literal></expr></argument>, <argument pos:start="223:42" pos:end="223:44"><expr pos:start="223:42" pos:end="223:44"><name pos:start="223:42" pos:end="223:44">den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
