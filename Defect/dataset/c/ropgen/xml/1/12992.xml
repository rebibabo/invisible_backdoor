<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12992.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">aio_set_fd_handler</name><parameter_list pos:start="1:24" pos:end="13:37">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:34">AioContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:30"><decl pos:start="3:25" pos:end="3:30"><type pos:start="3:25" pos:end="3:30"><name pos:start="3:25" pos:end="3:27">int</name></type> <name pos:start="3:29" pos:end="3:30">fd</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:40"><decl pos:start="5:25" pos:end="5:40"><type pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:28">bool</name></type> <name pos:start="5:30" pos:end="5:40">is_external</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:42"><decl pos:start="7:25" pos:end="7:42"><type pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:33">IOHandler</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:42">io_read</name></decl></parameter>,

                        <parameter pos:start="9:25" pos:end="9:43"><decl pos:start="9:25" pos:end="9:43"><type pos:start="9:25" pos:end="9:43"><name pos:start="9:25" pos:end="9:33">IOHandler</name> <modifier pos:start="9:35" pos:end="9:35">*</modifier></type><name pos:start="9:36" pos:end="9:43">io_write</name></decl></parameter>,

                        <parameter pos:start="11:25" pos:end="11:42"><decl pos:start="11:25" pos:end="11:42"><type pos:start="11:25" pos:end="11:42"><name pos:start="11:25" pos:end="11:33">AioPollFn</name> <modifier pos:start="11:35" pos:end="11:35">*</modifier></type><name pos:start="11:36" pos:end="11:42">io_poll</name></decl></parameter>,

                        <parameter pos:start="13:25" pos:end="13:36"><decl pos:start="13:25" pos:end="13:36"><type pos:start="13:25" pos:end="13:36"><name pos:start="13:25" pos:end="13:28">void</name> <modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="15:1" pos:end="149:1">{<block_content pos:start="17:5" pos:end="147:5">

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">AioHandler</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">node</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">bool</name></type> <name pos:start="19:10" pos:end="19:15">is_new</name> <init pos:start="19:17" pos:end="19:23">= <expr pos:start="19:19" pos:end="19:23"><name pos:start="19:19" pos:end="19:23">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">bool</name></type> <name pos:start="21:10" pos:end="21:16">deleted</name> <init pos:start="21:18" pos:end="21:24">= <expr pos:start="21:20" pos:end="21:24"><name pos:start="21:20" pos:end="21:24">false</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:21">qemu_lockcnt_lock</name><argument_list pos:start="25:22" pos:end="25:38">(<argument pos:start="25:23" pos:end="25:37"><expr pos:start="25:23" pos:end="25:37"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:37"><name pos:start="25:24" pos:end="25:26">ctx</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:37">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:8">node</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:36"><name pos:start="29:12" pos:end="29:27">find_aio_handler</name><argument_list pos:start="29:28" pos:end="29:36">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">ctx</name></expr></argument>, <argument pos:start="29:34" pos:end="29:35"><expr pos:start="29:34" pos:end="29:35"><name pos:start="29:34" pos:end="29:35">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:41">/* Are we deleting the fd handler? */</comment>

    <if_stmt pos:start="35:5" pos:end="131:5"><if pos:start="35:5" pos:end="83:5">if <condition pos:start="35:8" pos:end="35:42">(<expr pos:start="35:9" pos:end="35:41"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:16">io_read</name> <operator pos:start="35:18" pos:end="35:19">&amp;&amp;</operator> <operator pos:start="35:21" pos:end="35:21">!</operator><name pos:start="35:22" pos:end="35:29">io_write</name> <operator pos:start="35:31" pos:end="35:32">&amp;&amp;</operator> <operator pos:start="35:34" pos:end="35:34">!</operator><name pos:start="35:35" pos:end="35:41">io_poll</name></expr>)</condition> <block pos:start="35:44" pos:end="83:5">{<block_content pos:start="37:9" pos:end="81:9">

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:25">(<expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:16">node</name> <operator pos:start="37:18" pos:end="37:19">==</operator> <name pos:start="37:21" pos:end="37:24">NULL</name></expr>)</condition> <block pos:start="37:27" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:19">

            <expr_stmt pos:start="39:13" pos:end="39:49"><expr pos:start="39:13" pos:end="39:48"><call pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:31">qemu_lockcnt_unlock</name><argument_list pos:start="39:32" pos:end="39:48">(<argument pos:start="39:33" pos:end="39:47"><expr pos:start="39:33" pos:end="39:47"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:47"><name pos:start="39:34" pos:end="39:36">ctx</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:47">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:28">g_source_remove_poll</name><argument_list pos:start="47:29" pos:end="47:54">(<argument pos:start="47:30" pos:end="47:41"><expr pos:start="47:30" pos:end="47:41"><operator pos:start="47:30" pos:end="47:30">&amp;</operator><name pos:start="47:31" pos:end="47:41"><name pos:start="47:31" pos:end="47:33">ctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:41">source</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:53"><expr pos:start="47:44" pos:end="47:53"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:53"><name pos:start="47:45" pos:end="47:48">node</name><operator pos:start="47:49" pos:end="47:50">-&gt;</operator><name pos:start="47:51" pos:end="47:53">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="51:64">/* If the lock is held, just mark the node as deleted */</comment>

        <if_stmt pos:start="53:9" pos:end="73:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:48">(<expr pos:start="53:13" pos:end="53:47"><call pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:30">qemu_lockcnt_count</name><argument_list pos:start="53:31" pos:end="53:47">(<argument pos:start="53:32" pos:end="53:46"><expr pos:start="53:32" pos:end="53:46"><operator pos:start="53:32" pos:end="53:32">&amp;</operator><name pos:start="53:33" pos:end="53:46"><name pos:start="53:33" pos:end="53:35">ctx</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:46">list_lock</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:50" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:34">

            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:16">node</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:25">deleted</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:29">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:16">node</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:21">pfd</name><operator pos:start="57:22" pos:end="57:22">.</operator><name pos:start="57:23" pos:end="57:29">revents</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <literal type="number" pos:start="57:33" pos:end="57:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="73:9">else <block pos:start="59:16" pos:end="73:9">{<block_content pos:start="69:13" pos:end="71:27">

            <comment type="block" pos:start="61:13" pos:end="67:15">/* Otherwise, delete it for real.  We can't just mark it as

             * deleted because deleted nodes are only cleaned up while

             * no one is walking the handlers list.

             */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><call pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:24">QLIST_REMOVE</name><argument_list pos:start="69:25" pos:end="69:36">(<argument pos:start="69:26" pos:end="69:29"><expr pos:start="69:26" pos:end="69:29"><name pos:start="69:26" pos:end="69:29">node</name></expr></argument>, <argument pos:start="69:32" pos:end="69:35"><expr pos:start="69:32" pos:end="69:35"><name pos:start="69:32" pos:end="69:35">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:27"><expr pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:19">deleted</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:26">true</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:27">(<expr pos:start="77:13" pos:end="77:26"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:26"><name pos:start="77:14" pos:end="77:17">node</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:26">io_poll</name></name></expr>)</condition> <block pos:start="77:29" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:36">

            <expr_stmt pos:start="79:13" pos:end="79:36"><expr pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:15">ctx</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:33">poll_disable_cnt</name></name><operator pos:start="79:34" pos:end="79:35">--</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="83:7" pos:end="131:5">else <block pos:start="83:12" pos:end="131:5">{<block_content pos:start="85:9" pos:end="129:65">

        <if_stmt pos:start="85:9" pos:end="109:9"><if pos:start="85:9" pos:end="105:9">if <condition pos:start="85:12" pos:end="85:25">(<expr pos:start="85:13" pos:end="85:24"><name pos:start="85:13" pos:end="85:16">node</name> <operator pos:start="85:18" pos:end="85:19">==</operator> <name pos:start="85:21" pos:end="85:24">NULL</name></expr>)</condition> <block pos:start="85:27" pos:end="105:9">{<block_content pos:start="89:13" pos:end="103:46">

            <comment type="block" pos:start="87:13" pos:end="87:60">/* Alloc and insert if it's not already there */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:16">node</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:40"><name pos:start="89:20" pos:end="89:25">g_new0</name><argument_list pos:start="89:26" pos:end="89:40">(<argument pos:start="89:27" pos:end="89:36"><expr pos:start="89:27" pos:end="89:36"><name pos:start="89:27" pos:end="89:36">AioHandler</name></expr></argument>, <argument pos:start="89:39" pos:end="89:39"><expr pos:start="89:39" pos:end="89:39"><literal type="number" pos:start="89:39" pos:end="89:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:30"><expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:16">node</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:21">pfd</name><operator pos:start="91:22" pos:end="91:22">.</operator><name pos:start="91:23" pos:end="91:24">fd</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <name pos:start="91:28" pos:end="91:29">fd</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:66"><expr pos:start="93:13" pos:end="93:65"><call pos:start="93:13" pos:end="93:65"><name pos:start="93:13" pos:end="93:33">QLIST_INSERT_HEAD_RCU</name><argument_list pos:start="93:34" pos:end="93:65">(<argument pos:start="93:35" pos:end="93:52"><expr pos:start="93:35" pos:end="93:52"><operator pos:start="93:35" pos:end="93:35">&amp;</operator><name pos:start="93:36" pos:end="93:52"><name pos:start="93:36" pos:end="93:38">ctx</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:52">aio_handlers</name></name></expr></argument>, <argument pos:start="93:55" pos:end="93:58"><expr pos:start="93:55" pos:end="93:58"><name pos:start="93:55" pos:end="93:58">node</name></expr></argument>, <argument pos:start="93:61" pos:end="93:64"><expr pos:start="93:61" pos:end="93:64"><name pos:start="93:61" pos:end="93:64">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:56"><expr pos:start="97:13" pos:end="97:55"><call pos:start="97:13" pos:end="97:55"><name pos:start="97:13" pos:end="97:29">g_source_add_poll</name><argument_list pos:start="97:30" pos:end="97:55">(<argument pos:start="97:31" pos:end="97:42"><expr pos:start="97:31" pos:end="97:42"><operator pos:start="97:31" pos:end="97:31">&amp;</operator><name pos:start="97:32" pos:end="97:42"><name pos:start="97:32" pos:end="97:34">ctx</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:42">source</name></name></expr></argument>, <argument pos:start="97:45" pos:end="97:54"><expr pos:start="97:45" pos:end="97:54"><operator pos:start="97:45" pos:end="97:45">&amp;</operator><name pos:start="97:46" pos:end="97:54"><name pos:start="97:46" pos:end="97:49">node</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:54">pfd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:26"><expr pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:18">is_new</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:25">true</name></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:33">poll_disable_cnt</name></name> <operator pos:start="103:35" pos:end="103:36">+=</operator> <operator pos:start="103:38" pos:end="103:38">!</operator><name pos:start="103:39" pos:end="103:45">io_poll</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="109:9">else <block pos:start="105:16" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:63">

            <expr_stmt pos:start="107:13" pos:end="107:63"><expr pos:start="107:13" pos:end="107:62"><name pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:15">ctx</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:33">poll_disable_cnt</name></name> <operator pos:start="107:35" pos:end="107:36">+=</operator> <operator pos:start="107:38" pos:end="107:38">!</operator><name pos:start="107:39" pos:end="107:45">io_poll</name> <operator pos:start="107:47" pos:end="107:47">-</operator> <operator pos:start="107:49" pos:end="107:49">!</operator><name pos:start="107:50" pos:end="107:62"><name pos:start="107:50" pos:end="107:53">node</name><operator pos:start="107:54" pos:end="107:55">-&gt;</operator><name pos:start="107:56" pos:end="107:62">io_poll</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="113:9" pos:end="113:52">/* Update handler with latest information */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:32"><expr pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:21"><name pos:start="115:9" pos:end="115:12">node</name><operator pos:start="115:13" pos:end="115:14">-&gt;</operator><name pos:start="115:15" pos:end="115:21">io_read</name></name> <operator pos:start="115:23" pos:end="115:23">=</operator> <name pos:start="115:25" pos:end="115:31">io_read</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:12">node</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:22">io_write</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <name pos:start="117:26" pos:end="117:33">io_write</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:32"><expr pos:start="119:9" pos:end="119:31"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:12">node</name><operator pos:start="119:13" pos:end="119:14">-&gt;</operator><name pos:start="119:15" pos:end="119:21">io_poll</name></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <name pos:start="119:25" pos:end="119:31">io_poll</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:30"><expr pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:12">node</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:20">opaque</name></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <name pos:start="121:24" pos:end="121:29">opaque</name></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:25"><name pos:start="123:9" pos:end="123:12">node</name><operator pos:start="123:13" pos:end="123:14">-&gt;</operator><name pos:start="123:15" pos:end="123:25">is_external</name></name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:39">is_external</name></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:73"><expr pos:start="127:9" pos:end="127:72"><name pos:start="127:9" pos:end="127:24"><name pos:start="127:9" pos:end="127:12">node</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:17">pfd</name><operator pos:start="127:18" pos:end="127:18">.</operator><name pos:start="127:19" pos:end="127:24">events</name></name> <operator pos:start="127:26" pos:end="127:26">=</operator> <operator pos:start="127:28" pos:end="127:28">(</operator><ternary pos:start="127:29" pos:end="127:71"><condition pos:start="127:29" pos:end="127:37"><expr pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:35">io_read</name></expr> ?</condition><then pos:start="127:39" pos:end="127:67"> <expr pos:start="127:39" pos:end="127:67"><name pos:start="127:39" pos:end="127:45">G_IO_IN</name> <operator pos:start="127:47" pos:end="127:47">|</operator> <name pos:start="127:49" pos:end="127:56">G_IO_HUP</name> <operator pos:start="127:58" pos:end="127:58">|</operator> <name pos:start="127:60" pos:end="127:67">G_IO_ERR</name></expr> </then><else pos:start="127:69" pos:end="127:71">: <expr pos:start="127:71" pos:end="127:71"><literal type="number" pos:start="127:71" pos:end="127:71">0</literal></expr></else></ternary><operator pos:start="127:72" pos:end="127:72">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:65"><expr pos:start="129:9" pos:end="129:64"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:12">node</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:17">pfd</name><operator pos:start="129:18" pos:end="129:18">.</operator><name pos:start="129:19" pos:end="129:24">events</name></name> <operator pos:start="129:26" pos:end="129:27">|=</operator> <operator pos:start="129:29" pos:end="129:29">(</operator><ternary pos:start="129:30" pos:end="129:63"><condition pos:start="129:30" pos:end="129:39"><expr pos:start="129:30" pos:end="129:37"><name pos:start="129:30" pos:end="129:37">io_write</name></expr> ?</condition><then pos:start="129:41" pos:end="129:59"> <expr pos:start="129:41" pos:end="129:59"><name pos:start="129:41" pos:end="129:48">G_IO_OUT</name> <operator pos:start="129:50" pos:end="129:50">|</operator> <name pos:start="129:52" pos:end="129:59">G_IO_ERR</name></expr> </then><else pos:start="129:61" pos:end="129:63">: <expr pos:start="129:63" pos:end="129:63"><literal type="number" pos:start="129:63" pos:end="129:63">0</literal></expr></else></ternary><operator pos:start="129:64" pos:end="129:64">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:40"><expr pos:start="135:5" pos:end="135:39"><call pos:start="135:5" pos:end="135:39"><name pos:start="135:5" pos:end="135:20">aio_epoll_update</name><argument_list pos:start="135:21" pos:end="135:39">(<argument pos:start="135:22" pos:end="135:24"><expr pos:start="135:22" pos:end="135:24"><name pos:start="135:22" pos:end="135:24">ctx</name></expr></argument>, <argument pos:start="135:27" pos:end="135:30"><expr pos:start="135:27" pos:end="135:30"><name pos:start="135:27" pos:end="135:30">node</name></expr></argument>, <argument pos:start="135:33" pos:end="135:38"><expr pos:start="135:33" pos:end="135:38"><name pos:start="135:33" pos:end="135:38">is_new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:41"><expr pos:start="137:5" pos:end="137:40"><call pos:start="137:5" pos:end="137:40"><name pos:start="137:5" pos:end="137:23">qemu_lockcnt_unlock</name><argument_list pos:start="137:24" pos:end="137:40">(<argument pos:start="137:25" pos:end="137:39"><expr pos:start="137:25" pos:end="137:39"><operator pos:start="137:25" pos:end="137:25">&amp;</operator><name pos:start="137:26" pos:end="137:39"><name pos:start="137:26" pos:end="137:28">ctx</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:39">list_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:20"><expr pos:start="139:5" pos:end="139:19"><call pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:14">aio_notify</name><argument_list pos:start="139:15" pos:end="139:19">(<argument pos:start="139:16" pos:end="139:18"><expr pos:start="139:16" pos:end="139:18"><name pos:start="139:16" pos:end="139:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:16">(<expr pos:start="143:9" pos:end="143:15"><name pos:start="143:9" pos:end="143:15">deleted</name></expr>)</condition> <block pos:start="143:18" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:21">

        <expr_stmt pos:start="145:9" pos:end="145:21"><expr pos:start="145:9" pos:end="145:20"><call pos:start="145:9" pos:end="145:20"><name pos:start="145:9" pos:end="145:14">g_free</name><argument_list pos:start="145:15" pos:end="145:20">(<argument pos:start="145:16" pos:end="145:19"><expr pos:start="145:16" pos:end="145:19"><name pos:start="145:16" pos:end="145:19">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
