<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24610.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qcow2_grow_l1_table</name><parameter_list pos:start="1:24" pos:end="1:59">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:58">min_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:32">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">new_l1_size</name></decl>, <decl pos:start="7:22" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:33">new_l1_size2</name></decl>, <decl pos:start="7:36" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:36" pos:end="7:38">ret</name></decl>, <decl pos:start="7:41" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:41">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">uint64_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:26">new_l1_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:31">new_l1_table_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:16">data</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">12</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:15">new_l1_size</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:28"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:28">l1_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:32">(<expr pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:16">min_size</name> <operator pos:start="19:18" pos:end="19:19">&lt;=</operator> <name pos:start="19:21" pos:end="19:31">new_l1_size</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:25">(<expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:19">new_l1_size</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>)</condition> <block pos:start="23:27" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:24">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:19">new_l1_size</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <literal type="number" pos:start="25:23" pos:end="25:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <while pos:start="29:5" pos:end="36:0">while <condition pos:start="29:11" pos:end="29:34">(<expr pos:start="29:12" pos:end="29:33"><name pos:start="29:12" pos:end="29:19">min_size</name> <operator pos:start="29:21" pos:end="29:21">&gt;</operator> <name pos:start="29:23" pos:end="29:33">new_l1_size</name></expr>)</condition> <block pos:start="29:36" pos:end="36:0">{<block_content pos:start="31:9" pos:end="31:48">

        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:19">new_l1_size</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:34">new_l1_size</name> <operator pos:start="31:36" pos:end="31:36">*</operator> <literal type="number" pos:start="31:38" pos:end="31:40">3</literal> <operator pos:start="31:40" pos:end="31:40">+</operator> <literal type="number" pos:start="31:42" pos:end="31:42">1</literal><operator pos:start="31:43" pos:end="31:43">)</operator> <operator pos:start="31:45" pos:end="31:45">/</operator> <literal type="number" pos:start="31:47" pos:end="31:47">2</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

<cpp:ifdef pos:start="35:1" pos:end="35:19">#<cpp:directive pos:start="35:2" pos:end="35:6">ifdef</cpp:directive> <name pos:start="35:8" pos:end="35:19">DEBUG_ALLOC2</name></cpp:ifdef>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:68"><call pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:10">printf</name><argument_list pos:start="37:11" pos:end="37:68">(<argument pos:start="37:12" pos:end="37:42"><expr pos:start="37:12" pos:end="37:42"><literal type="string" pos:start="37:12" pos:end="37:42">"grow l1_table from %d to %d\n"</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:54"><expr pos:start="37:45" pos:end="37:54"><name pos:start="37:45" pos:end="37:54"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:54">l1_size</name></name></expr></argument>, <argument pos:start="37:57" pos:end="37:67"><expr pos:start="37:57" pos:end="37:67"><name pos:start="37:57" pos:end="37:67">new_l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:16">new_l1_size2</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <sizeof pos:start="43:20" pos:end="43:35">sizeof<argument_list pos:start="43:26" pos:end="43:35">(<argument pos:start="43:27" pos:end="43:34"><expr pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:34">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="43:37" pos:end="43:37">*</operator> <name pos:start="43:39" pos:end="43:49">new_l1_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:65"><expr pos:start="45:5" pos:end="45:64"><name pos:start="45:5" pos:end="45:16">new_l1_table</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:64"><name pos:start="45:20" pos:end="45:31">qemu_mallocz</name><argument_list pos:start="45:32" pos:end="45:64">(<argument pos:start="45:33" pos:end="45:63"><expr pos:start="45:33" pos:end="45:63"><call pos:start="45:33" pos:end="45:63"><name pos:start="45:33" pos:end="45:44">align_offset</name><argument_list pos:start="45:45" pos:end="45:63">(<argument pos:start="45:46" pos:end="45:57"><expr pos:start="45:46" pos:end="45:57"><name pos:start="45:46" pos:end="45:57">new_l1_size2</name></expr></argument>, <argument pos:start="45:60" pos:end="45:62"><expr pos:start="45:60" pos:end="45:62"><literal type="number" pos:start="45:60" pos:end="45:62">512</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:69"><expr pos:start="47:5" pos:end="47:68"><call pos:start="47:5" pos:end="47:68"><name pos:start="47:5" pos:end="47:10">memcpy</name><argument_list pos:start="47:11" pos:end="47:68">(<argument pos:start="47:12" pos:end="47:23"><expr pos:start="47:12" pos:end="47:23"><name pos:start="47:12" pos:end="47:23">new_l1_table</name></expr></argument>, <argument pos:start="47:26" pos:end="47:36"><expr pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:26">s</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:36">l1_table</name></name></expr></argument>, <argument pos:start="47:39" pos:end="47:67"><expr pos:start="47:39" pos:end="47:67"><name pos:start="47:39" pos:end="47:48"><name pos:start="47:39" pos:end="47:39">s</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:48">l1_size</name></name> <operator pos:start="47:50" pos:end="47:50">*</operator> <sizeof pos:start="47:52" pos:end="47:67">sizeof<argument_list pos:start="47:58" pos:end="47:67">(<argument pos:start="47:59" pos:end="47:66"><expr pos:start="47:59" pos:end="47:66"><name pos:start="47:59" pos:end="47:66">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:44">/* write new table (align to cluster) */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><call pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:16">BLKDBG_EVENT</name><argument_list pos:start="53:17" pos:end="53:54">(<argument pos:start="53:18" pos:end="53:25"><expr pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:25"><name pos:start="53:18" pos:end="53:19">bs</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">file</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:53"><expr pos:start="53:28" pos:end="53:53"><name pos:start="53:28" pos:end="53:53">BLKDBG_L1_GROW_ALLOC_TABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:65"><expr pos:start="55:5" pos:end="55:64"><name pos:start="55:5" pos:end="55:23">new_l1_table_offset</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:64"><name pos:start="55:27" pos:end="55:46">qcow2_alloc_clusters</name><argument_list pos:start="55:47" pos:end="55:64">(<argument pos:start="55:48" pos:end="55:49"><expr pos:start="55:48" pos:end="55:49"><name pos:start="55:48" pos:end="55:49">bs</name></expr></argument>, <argument pos:start="55:52" pos:end="55:63"><expr pos:start="55:52" pos:end="55:63"><name pos:start="55:52" pos:end="55:63">new_l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:32">(<expr pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:27">new_l1_table_offset</name> <operator pos:start="57:29" pos:end="57:29">&lt;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr>)</condition> <block pos:start="57:34" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:35">

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><call pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:17">qemu_free</name><argument_list pos:start="59:18" pos:end="59:31">(<argument pos:start="59:19" pos:end="59:30"><expr pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:30">new_l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34">new_l1_table_offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:55"><expr pos:start="67:5" pos:end="67:54"><call pos:start="67:5" pos:end="67:54"><name pos:start="67:5" pos:end="67:16">BLKDBG_EVENT</name><argument_list pos:start="67:17" pos:end="67:54">(<argument pos:start="67:18" pos:end="67:25"><expr pos:start="67:18" pos:end="67:25"><name pos:start="67:18" pos:end="67:25"><name pos:start="67:18" pos:end="67:19">bs</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:25">file</name></name></expr></argument>, <argument pos:start="67:28" pos:end="67:53"><expr pos:start="67:28" pos:end="67:53"><name pos:start="67:28" pos:end="67:53">BLKDBG_L1_GROW_WRITE_TABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="69:5" pos:end="71:55">for<control pos:start="69:8" pos:end="69:35">(<init pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">i</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>;</init> <condition pos:start="69:16" pos:end="69:30"><expr pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:16">i</name> <operator pos:start="69:18" pos:end="69:18">&lt;</operator> <name pos:start="69:20" pos:end="69:29"><name pos:start="69:20" pos:end="69:20">s</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:29">l1_size</name></name></expr>;</condition> <incr pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:32">i</name><operator pos:start="69:33" pos:end="69:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="71:9" pos:end="71:55"><block_content pos:start="71:9" pos:end="71:55">

        <expr_stmt pos:start="71:9" pos:end="71:55"><expr pos:start="71:9" pos:end="71:54"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:20">new_l1_table</name><index pos:start="71:21" pos:end="71:23">[<expr pos:start="71:22" pos:end="71:22"><name pos:start="71:22" pos:end="71:22">i</name></expr>]</index></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:54"><name pos:start="71:27" pos:end="71:37">cpu_to_be64</name><argument_list pos:start="71:38" pos:end="71:54">(<argument pos:start="71:39" pos:end="71:53"><expr pos:start="71:39" pos:end="71:53"><name pos:start="71:39" pos:end="71:53"><name pos:start="71:39" pos:end="71:50">new_l1_table</name><index pos:start="71:51" pos:end="71:53">[<expr pos:start="71:52" pos:end="71:52"><name pos:start="71:52" pos:end="71:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="73:5" pos:end="73:81"><expr pos:start="73:5" pos:end="73:80"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="73:80"><name pos:start="73:11" pos:end="73:21">bdrv_pwrite</name><argument_list pos:start="73:22" pos:end="73:80">(<argument pos:start="73:23" pos:end="73:30"><expr pos:start="73:23" pos:end="73:30"><name pos:start="73:23" pos:end="73:30"><name pos:start="73:23" pos:end="73:24">bs</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:30">file</name></name></expr></argument>, <argument pos:start="73:33" pos:end="73:51"><expr pos:start="73:33" pos:end="73:51"><name pos:start="73:33" pos:end="73:51">new_l1_table_offset</name></expr></argument>, <argument pos:start="73:54" pos:end="73:65"><expr pos:start="73:54" pos:end="73:65"><name pos:start="73:54" pos:end="73:65">new_l1_table</name></expr></argument>, <argument pos:start="73:68" pos:end="73:79"><expr pos:start="73:68" pos:end="73:79"><name pos:start="73:68" pos:end="73:79">new_l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:28">(<expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:14">!=</operator> <name pos:start="75:16" pos:end="75:27">new_l1_size2</name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="79:5" pos:end="81:55">for<control pos:start="79:8" pos:end="79:35">(<init pos:start="79:9" pos:end="79:14"><expr pos:start="79:9" pos:end="79:13"><name pos:start="79:9" pos:end="79:9">i</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <literal type="number" pos:start="79:13" pos:end="79:13">0</literal></expr>;</init> <condition pos:start="79:16" pos:end="79:30"><expr pos:start="79:16" pos:end="79:29"><name pos:start="79:16" pos:end="79:16">i</name> <operator pos:start="79:18" pos:end="79:18">&lt;</operator> <name pos:start="79:20" pos:end="79:29"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:29">l1_size</name></name></expr>;</condition> <incr pos:start="79:32" pos:end="79:34"><expr pos:start="79:32" pos:end="79:34"><name pos:start="79:32" pos:end="79:32">i</name><operator pos:start="79:33" pos:end="79:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="81:9" pos:end="81:55"><block_content pos:start="81:9" pos:end="81:55">

        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:20">new_l1_table</name><index pos:start="81:21" pos:end="81:23">[<expr pos:start="81:22" pos:end="81:22"><name pos:start="81:22" pos:end="81:22">i</name></expr>]</index></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <call pos:start="81:27" pos:end="81:54"><name pos:start="81:27" pos:end="81:37">be64_to_cpu</name><argument_list pos:start="81:38" pos:end="81:54">(<argument pos:start="81:39" pos:end="81:53"><expr pos:start="81:39" pos:end="81:53"><name pos:start="81:39" pos:end="81:53"><name pos:start="81:39" pos:end="81:50">new_l1_table</name><index pos:start="81:51" pos:end="81:53">[<expr pos:start="81:52" pos:end="81:52"><name pos:start="81:52" pos:end="81:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <comment type="block" pos:start="85:5" pos:end="85:23">/* set new table */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:58"><expr pos:start="87:5" pos:end="87:57"><call pos:start="87:5" pos:end="87:57"><name pos:start="87:5" pos:end="87:16">BLKDBG_EVENT</name><argument_list pos:start="87:17" pos:end="87:57">(<argument pos:start="87:18" pos:end="87:25"><expr pos:start="87:18" pos:end="87:25"><name pos:start="87:18" pos:end="87:25"><name pos:start="87:18" pos:end="87:19">bs</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:25">file</name></name></expr></argument>, <argument pos:start="87:28" pos:end="87:56"><expr pos:start="87:28" pos:end="87:56"><name pos:start="87:28" pos:end="87:56">BLKDBG_L1_GROW_ACTIVATE_TABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:47"><expr pos:start="89:5" pos:end="89:46"><call pos:start="89:5" pos:end="89:46"><name pos:start="89:5" pos:end="89:16">cpu_to_be32w</name><argument_list pos:start="89:17" pos:end="89:46">(<argument pos:start="89:18" pos:end="89:32"><expr pos:start="89:18" pos:end="89:32"><operator pos:start="89:18" pos:end="89:18">(</operator><name pos:start="89:19" pos:end="89:26">uint32_t</name><operator pos:start="89:27" pos:end="89:27">*</operator><operator pos:start="89:28" pos:end="89:28">)</operator><name pos:start="89:29" pos:end="89:32">data</name></expr></argument>, <argument pos:start="89:35" pos:end="89:45"><expr pos:start="89:35" pos:end="89:45"><name pos:start="89:35" pos:end="89:45">new_l1_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:61"><expr pos:start="91:5" pos:end="91:60"><call pos:start="91:5" pos:end="91:60"><name pos:start="91:5" pos:end="91:16">cpu_to_be64w</name><argument_list pos:start="91:17" pos:end="91:60">(<argument pos:start="91:18" pos:end="91:38"><expr pos:start="91:18" pos:end="91:38"><operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:26">uint64_t</name><operator pos:start="91:27" pos:end="91:27">*</operator><operator pos:start="91:28" pos:end="91:28">)</operator><operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:33">data</name> <operator pos:start="91:35" pos:end="91:35">+</operator> <literal type="number" pos:start="91:37" pos:end="91:37">4</literal><operator pos:start="91:38" pos:end="91:38">)</operator></expr></argument>, <argument pos:start="91:41" pos:end="91:59"><expr pos:start="91:41" pos:end="91:59"><name pos:start="91:41" pos:end="91:59">new_l1_table_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:82"><expr pos:start="93:5" pos:end="93:81"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:81"><name pos:start="93:11" pos:end="93:21">bdrv_pwrite</name><argument_list pos:start="93:22" pos:end="93:81">(<argument pos:start="93:23" pos:end="93:30"><expr pos:start="93:23" pos:end="93:30"><name pos:start="93:23" pos:end="93:30"><name pos:start="93:23" pos:end="93:24">bs</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:30">file</name></name></expr></argument>, <argument pos:start="93:33" pos:end="93:61"><expr pos:start="93:33" pos:end="93:61"><call pos:start="93:33" pos:end="93:61"><name pos:start="93:33" pos:end="93:40">offsetof</name><argument_list pos:start="93:41" pos:end="93:61">(<argument pos:start="93:42" pos:end="93:51"><expr pos:start="93:42" pos:end="93:51"><name pos:start="93:42" pos:end="93:51">QCowHeader</name></expr></argument>, <argument pos:start="93:54" pos:end="93:60"><expr pos:start="93:54" pos:end="93:60"><name pos:start="93:54" pos:end="93:60">l1_size</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:64" pos:end="93:67"><expr pos:start="93:64" pos:end="93:67"><name pos:start="93:64" pos:end="93:67">data</name></expr></argument>,<argument pos:start="93:69" pos:end="93:80"><expr pos:start="93:69" pos:end="93:80"><sizeof pos:start="93:69" pos:end="93:80">sizeof<argument_list pos:start="93:75" pos:end="93:80">(<argument pos:start="93:76" pos:end="93:79"><expr pos:start="93:76" pos:end="93:79"><name pos:start="93:76" pos:end="93:79">data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:28">(<expr pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:14">!=</operator> <sizeof pos:start="95:16" pos:end="95:27">sizeof<argument_list pos:start="95:22" pos:end="95:27">(<argument pos:start="95:23" pos:end="95:26"><expr pos:start="95:23" pos:end="95:26"><name pos:start="95:23" pos:end="95:26">data</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="95:30" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:18">

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><call pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:13">qemu_free</name><argument_list pos:start="101:14" pos:end="101:26">(<argument pos:start="101:15" pos:end="101:25"><expr pos:start="101:15" pos:end="101:25"><name pos:start="101:15" pos:end="101:25"><name pos:start="101:15" pos:end="101:15">s</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:25">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:79"><expr pos:start="103:5" pos:end="103:78"><call pos:start="103:5" pos:end="103:78"><name pos:start="103:5" pos:end="103:23">qcow2_free_clusters</name><argument_list pos:start="103:24" pos:end="103:78">(<argument pos:start="103:25" pos:end="103:26"><expr pos:start="103:25" pos:end="103:26"><name pos:start="103:25" pos:end="103:26">bs</name></expr></argument>, <argument pos:start="103:29" pos:end="103:46"><expr pos:start="103:29" pos:end="103:46"><name pos:start="103:29" pos:end="103:46"><name pos:start="103:29" pos:end="103:29">s</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:46">l1_table_offset</name></name></expr></argument>, <argument pos:start="103:49" pos:end="103:77"><expr pos:start="103:49" pos:end="103:77"><name pos:start="103:49" pos:end="103:58"><name pos:start="103:49" pos:end="103:49">s</name><operator pos:start="103:50" pos:end="103:51">-&gt;</operator><name pos:start="103:52" pos:end="103:58">l1_size</name></name> <operator pos:start="103:60" pos:end="103:60">*</operator> <sizeof pos:start="103:62" pos:end="103:77">sizeof<argument_list pos:start="103:68" pos:end="103:77">(<argument pos:start="103:69" pos:end="103:76"><expr pos:start="103:69" pos:end="103:76"><name pos:start="103:69" pos:end="103:76">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:45"><expr pos:start="105:5" pos:end="105:44"><name pos:start="105:5" pos:end="105:22"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:22">l1_table_offset</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <name pos:start="105:26" pos:end="105:44">new_l1_table_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:31"><expr pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:15">l1_table</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <name pos:start="107:19" pos:end="107:30">new_l1_table</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">l1_size</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:28">new_l1_size</name></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

 <label pos:start="113:2" pos:end="113:6"><name pos:start="113:2" pos:end="113:5">fail</name>:</label>

    <expr_stmt pos:start="115:5" pos:end="115:28"><expr pos:start="115:5" pos:end="115:27"><call pos:start="115:5" pos:end="115:27"><name pos:start="115:5" pos:end="115:13">qemu_free</name><argument_list pos:start="115:14" pos:end="115:27">(<argument pos:start="115:15" pos:end="115:26"><expr pos:start="115:15" pos:end="115:26"><name pos:start="115:15" pos:end="115:26">new_l1_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:63"><expr pos:start="117:5" pos:end="117:62"><call pos:start="117:5" pos:end="117:62"><name pos:start="117:5" pos:end="117:23">qcow2_free_clusters</name><argument_list pos:start="117:24" pos:end="117:62">(<argument pos:start="117:25" pos:end="117:26"><expr pos:start="117:25" pos:end="117:26"><name pos:start="117:25" pos:end="117:26">bs</name></expr></argument>, <argument pos:start="117:29" pos:end="117:47"><expr pos:start="117:29" pos:end="117:47"><name pos:start="117:29" pos:end="117:47">new_l1_table_offset</name></expr></argument>, <argument pos:start="117:50" pos:end="117:61"><expr pos:start="117:50" pos:end="117:61"><name pos:start="117:50" pos:end="117:61">new_l1_size2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:32">return <expr pos:start="119:12" pos:end="119:31"><ternary pos:start="119:12" pos:end="119:31"><condition pos:start="119:12" pos:end="119:20"><expr pos:start="119:12" pos:end="119:18"><name pos:start="119:12" pos:end="119:14">ret</name> <operator pos:start="119:16" pos:end="119:16">&lt;</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr> ?</condition><then pos:start="119:22" pos:end="119:24"> <expr pos:start="119:22" pos:end="119:24"><name pos:start="119:22" pos:end="119:24">ret</name></expr> </then><else pos:start="119:26" pos:end="119:31">: <expr pos:start="119:28" pos:end="119:31"><operator pos:start="119:28" pos:end="119:28">-</operator><name pos:start="119:29" pos:end="119:31">EIO</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
