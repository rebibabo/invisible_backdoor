<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18514.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">qemu_signal_init</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">sigfd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="12:0"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">sigset_t</name></type> <name pos:start="7:14" pos:end="7:16">set</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="11:1" pos:end="11:22">#<cpp:directive pos:start="11:2" pos:end="11:6">ifdef</cpp:directive> <name pos:start="11:8" pos:end="11:22">CONFIG_IOTHREAD</name></cpp:ifdef>

    <comment type="block" pos:start="13:5" pos:end="13:44">/* SIGUSR2 used by posix-aio-compat.c */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:15">sigemptyset</name><argument_list pos:start="15:16" pos:end="15:21">(<argument pos:start="15:17" pos:end="15:20"><expr pos:start="15:17" pos:end="15:20"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><call pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:13">sigaddset</name><argument_list pos:start="17:14" pos:end="17:28">(<argument pos:start="17:15" pos:end="17:18"><expr pos:start="17:15" pos:end="17:18"><operator pos:start="17:15" pos:end="17:15">&amp;</operator><name pos:start="17:16" pos:end="17:18">set</name></expr></argument>, <argument pos:start="17:21" pos:end="17:27"><expr pos:start="17:21" pos:end="17:27"><name pos:start="17:21" pos:end="17:27">SIGUSR2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:19">pthread_sigmask</name><argument_list pos:start="19:20" pos:end="19:44">(<argument pos:start="19:21" pos:end="19:31"><expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:31">SIG_UNBLOCK</name></expr></argument>, <argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><operator pos:start="19:34" pos:end="19:34">&amp;</operator><name pos:start="19:35" pos:end="19:37">set</name></expr></argument>, <argument pos:start="19:40" pos:end="19:43"><expr pos:start="19:40" pos:end="19:43"><name pos:start="19:40" pos:end="19:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="31:7">/*

     * SIG_IPI must be blocked in the main thread and must not be caught

     * by sigwait() in the signal thread. Otherwise, the cpu thread will

     * not catch it reliably.

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><call pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:15">sigemptyset</name><argument_list pos:start="33:16" pos:end="33:21">(<argument pos:start="33:17" pos:end="33:20"><expr pos:start="33:17" pos:end="33:20"><operator pos:start="33:17" pos:end="33:17">&amp;</operator><name pos:start="33:18" pos:end="33:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:13">sigaddset</name><argument_list pos:start="35:14" pos:end="35:28">(<argument pos:start="35:15" pos:end="35:18"><expr pos:start="35:15" pos:end="35:18"><operator pos:start="35:15" pos:end="35:15">&amp;</operator><name pos:start="35:16" pos:end="35:18">set</name></expr></argument>, <argument pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:27">SIG_IPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><call pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:19">pthread_sigmask</name><argument_list pos:start="37:20" pos:end="37:42">(<argument pos:start="37:21" pos:end="37:29"><expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:29">SIG_BLOCK</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:35">set</name></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:22"><expr pos:start="41:5" pos:end="41:21"><call pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:15">sigemptyset</name><argument_list pos:start="41:16" pos:end="41:21">(<argument pos:start="41:17" pos:end="41:20"><expr pos:start="41:17" pos:end="41:20"><operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:27"><expr pos:start="43:5" pos:end="43:26"><call pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:13">sigaddset</name><argument_list pos:start="43:14" pos:end="43:26">(<argument pos:start="43:15" pos:end="43:18"><expr pos:start="43:15" pos:end="43:18"><operator pos:start="43:15" pos:end="43:15">&amp;</operator><name pos:start="43:16" pos:end="43:18">set</name></expr></argument>, <argument pos:start="43:21" pos:end="43:25"><expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:25">SIGIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:13">sigaddset</name><argument_list pos:start="45:14" pos:end="45:28">(<argument pos:start="45:15" pos:end="45:18"><expr pos:start="45:15" pos:end="45:18"><operator pos:start="45:15" pos:end="45:15">&amp;</operator><name pos:start="45:16" pos:end="45:18">set</name></expr></argument>, <argument pos:start="45:21" pos:end="45:27"><expr pos:start="45:21" pos:end="45:27"><name pos:start="45:21" pos:end="45:27">SIGALRM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:27"><call pos:start="47:5" pos:end="47:27"><name pos:start="47:5" pos:end="47:13">sigaddset</name><argument_list pos:start="47:14" pos:end="47:27">(<argument pos:start="47:15" pos:end="47:18"><expr pos:start="47:15" pos:end="47:18"><operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:18">set</name></expr></argument>, <argument pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">SIGBUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="49:1" pos:end="49:5">#<cpp:directive pos:start="49:2" pos:end="49:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><call pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:15">sigemptyset</name><argument_list pos:start="51:16" pos:end="51:21">(<argument pos:start="51:17" pos:end="51:20"><expr pos:start="51:17" pos:end="51:20"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:13">sigaddset</name><argument_list pos:start="53:14" pos:end="53:27">(<argument pos:start="53:15" pos:end="53:18"><expr pos:start="53:15" pos:end="53:18"><operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:18">set</name></expr></argument>, <argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><name pos:start="53:21" pos:end="53:26">SIGBUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="72:0"><if pos:start="55:5" pos:end="72:0">if <condition pos:start="55:8" pos:end="55:22">(<expr pos:start="55:9" pos:end="55:21"><call pos:start="55:9" pos:end="55:21"><name pos:start="55:9" pos:end="55:19">kvm_enabled</name><argument_list pos:start="55:20" pos:end="55:21">()</argument_list></call></expr>)</condition> <block pos:start="55:24" pos:end="72:0">{<block_content pos:start="65:9" pos:end="67:33">

        <comment type="block" pos:start="57:9" pos:end="63:11">/*

         * We need to process timer signals synchronously to avoid a race

         * between exit_request check and KVM vcpu entry.

         */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:17">sigaddset</name><argument_list pos:start="65:18" pos:end="65:30">(<argument pos:start="65:19" pos:end="65:22"><expr pos:start="65:19" pos:end="65:22"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:22">set</name></expr></argument>, <argument pos:start="65:25" pos:end="65:29"><expr pos:start="65:25" pos:end="65:29"><name pos:start="65:25" pos:end="65:29">SIGIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><call pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:17">sigaddset</name><argument_list pos:start="67:18" pos:end="67:32">(<argument pos:start="67:19" pos:end="67:22"><expr pos:start="67:19" pos:end="67:22"><operator pos:start="67:19" pos:end="67:19">&amp;</operator><name pos:start="67:20" pos:end="67:22">set</name></expr></argument>, <argument pos:start="67:25" pos:end="67:31"><expr pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:31">SIGALRM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="73:5" pos:end="73:43"><expr pos:start="73:5" pos:end="73:42"><call pos:start="73:5" pos:end="73:42"><name pos:start="73:5" pos:end="73:19">pthread_sigmask</name><argument_list pos:start="73:20" pos:end="73:42">(<argument pos:start="73:21" pos:end="73:29"><expr pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:29">SIG_BLOCK</name></expr></argument>, <argument pos:start="73:32" pos:end="73:35"><expr pos:start="73:32" pos:end="73:35"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:35">set</name></expr></argument>, <argument pos:start="73:38" pos:end="73:41"><expr pos:start="73:38" pos:end="73:41"><name pos:start="73:38" pos:end="73:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:9">sigfd</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <call pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:25">qemu_signalfd</name><argument_list pos:start="77:26" pos:end="77:31">(<argument pos:start="77:27" pos:end="77:30"><expr pos:start="77:27" pos:end="77:30"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:30">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:20">(<expr pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:13">sigfd</name> <operator pos:start="79:15" pos:end="79:16">==</operator> <operator pos:start="79:18" pos:end="79:18">-</operator><literal type="number" pos:start="79:19" pos:end="79:19">1</literal></expr>)</condition> <block pos:start="79:22" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:22">

        <expr_stmt pos:start="81:9" pos:end="81:55"><expr pos:start="81:9" pos:end="81:54"><call pos:start="81:9" pos:end="81:54"><name pos:start="81:9" pos:end="81:15">fprintf</name><argument_list pos:start="81:16" pos:end="81:54">(<argument pos:start="81:17" pos:end="81:22"><expr pos:start="81:17" pos:end="81:22"><name pos:start="81:17" pos:end="81:22">stderr</name></expr></argument>, <argument pos:start="81:25" pos:end="81:53"><expr pos:start="81:25" pos:end="81:53"><literal type="string" pos:start="81:25" pos:end="81:53">"failed to create signalfd\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:22">return <expr pos:start="83:16" pos:end="83:21"><operator pos:start="83:16" pos:end="83:16">-</operator><name pos:start="83:17" pos:end="83:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:35"><expr pos:start="89:5" pos:end="89:34"><call pos:start="89:5" pos:end="89:34"><name pos:start="89:5" pos:end="89:15">fcntl_setfl</name><argument_list pos:start="89:16" pos:end="89:34">(<argument pos:start="89:17" pos:end="89:21"><expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:21">sigfd</name></expr></argument>, <argument pos:start="89:24" pos:end="89:33"><expr pos:start="89:24" pos:end="89:33"><name pos:start="89:24" pos:end="89:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="95:50"><expr pos:start="93:5" pos:end="95:49"><call pos:start="93:5" pos:end="95:49"><name pos:start="93:5" pos:end="93:24">qemu_set_fd_handler2</name><argument_list pos:start="93:25" pos:end="95:49">(<argument pos:start="93:26" pos:end="93:30"><expr pos:start="93:26" pos:end="93:30"><name pos:start="93:26" pos:end="93:30">sigfd</name></expr></argument>, <argument pos:start="93:33" pos:end="93:36"><expr pos:start="93:33" pos:end="93:36"><name pos:start="93:33" pos:end="93:36">NULL</name></expr></argument>, <argument pos:start="93:39" pos:end="93:51"><expr pos:start="93:39" pos:end="93:51"><name pos:start="93:39" pos:end="93:51">sigfd_handler</name></expr></argument>, <argument pos:start="93:54" pos:end="93:57"><expr pos:start="93:54" pos:end="93:57"><name pos:start="93:54" pos:end="93:57">NULL</name></expr></argument>,

                         <argument pos:start="95:26" pos:end="95:48"><expr pos:start="95:26" pos:end="95:48"><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:30">void</name> <operator pos:start="95:32" pos:end="95:32">*</operator><operator pos:start="95:33" pos:end="95:33">)</operator><operator pos:start="95:34" pos:end="95:34">(</operator><name pos:start="95:35" pos:end="95:42">intptr_t</name><operator pos:start="95:43" pos:end="95:43">)</operator><name pos:start="95:44" pos:end="95:48">sigfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
