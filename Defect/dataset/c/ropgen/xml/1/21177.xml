<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21177.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">AVFilterContext</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:47">create_filter_with_args</name><parameter_list pos:start="1:48" pos:end="1:79">(<parameter pos:start="1:49" pos:end="1:64"><decl pos:start="1:49" pos:end="1:64"><type pos:start="1:49" pos:end="1:64"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">filt</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:78"><decl pos:start="1:67" pos:end="1:78"><type pos:start="1:67" pos:end="1:78"><name pos:start="1:67" pos:end="1:70">void</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:78">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="25:1">{<block_content pos:start="3:5" pos:end="24:16">
    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:24"><type pos:start="3:5" pos:end="3:21"><name pos:start="3:5" pos:end="3:19">AVFilterContext</name> <modifier pos:start="3:21" pos:end="3:21">*</modifier></type><name pos:start="3:22" pos:end="3:24">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:35"><decl pos:start="4:5" pos:end="4:34"><type pos:start="4:5" pos:end="4:10"><name pos:start="4:5" pos:end="4:8">char</name> <modifier pos:start="4:10" pos:end="4:10">*</modifier></type><name pos:start="4:11" pos:end="4:16">filter</name> <init pos:start="4:18" pos:end="4:34">= <expr pos:start="4:20" pos:end="4:34"><call pos:start="4:20" pos:end="4:34"><name pos:start="4:20" pos:end="4:28">av_strdup</name><argument_list pos:start="4:29" pos:end="4:34">(<argument pos:start="4:30" pos:end="4:33"><expr pos:start="4:30" pos:end="4:33"><name pos:start="4:30" pos:end="4:33">filt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="4:37" pos:end="4:78">/* copy - don't mangle the input string */</comment>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:14">name</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:10"><modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">args</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:18"><expr pos:start="6:5" pos:end="6:17"><name pos:start="6:5" pos:end="6:8">name</name> <operator pos:start="6:10" pos:end="6:10">=</operator> <name pos:start="6:12" pos:end="6:17">filter</name></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="12:5"><if pos:start="7:5" pos:end="12:5">if<condition pos:start="7:7" pos:end="7:36">(<expr pos:start="7:8" pos:end="7:35"><operator pos:start="7:8" pos:end="7:8">(</operator><name pos:start="7:9" pos:end="7:12">args</name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:34"><name pos:start="7:16" pos:end="7:21">strchr</name><argument_list pos:start="7:22" pos:end="7:34">(<argument pos:start="7:23" pos:end="7:28"><expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">filter</name></expr></argument>, <argument pos:start="7:31" pos:end="7:33"><expr pos:start="7:31" pos:end="7:33"><literal type="char" pos:start="7:31" pos:end="7:33">'='</literal></expr></argument>)</argument_list></call><operator pos:start="7:35" pos:end="7:35">)</operator></expr>)</condition> <block pos:start="7:38" pos:end="12:5">{<block_content pos:start="9:9" pos:end="11:21">
        <comment type="block" pos:start="8:9" pos:end="8:44">/* ensure we at least have a name */</comment>
        <if_stmt pos:start="9:9" pos:end="10:22"><if pos:start="9:9" pos:end="10:22">if<condition pos:start="9:11" pos:end="9:26">(<expr pos:start="9:12" pos:end="9:25"><name pos:start="9:12" pos:end="9:15">args</name> <operator pos:start="9:17" pos:end="9:18">==</operator> <name pos:start="9:20" pos:end="9:25">filter</name></expr>)</condition><block type="pseudo" pos:start="10:13" pos:end="10:22"><block_content pos:start="10:13" pos:end="10:22">
            <goto pos:start="10:13" pos:end="10:22">goto <name pos:start="10:18" pos:end="10:21">fail</name>;</goto></block_content></block></if></if_stmt>
        <expr_stmt pos:start="11:9" pos:end="11:21"><expr pos:start="11:9" pos:end="11:20"><operator pos:start="11:9" pos:end="11:9">*</operator><name pos:start="11:10" pos:end="11:13">args</name> <operator pos:start="11:15" pos:end="11:16">++</operator> <operator pos:start="11:18" pos:end="11:18">=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">0</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="14:41"><expr pos:start="13:5" pos:end="14:40"><call pos:start="13:5" pos:end="14:40"><name pos:start="13:5" pos:end="13:10">av_log</name><argument_list pos:start="13:11" pos:end="14:40">(<argument pos:start="13:12" pos:end="13:15"><expr pos:start="13:12" pos:end="13:15"><name pos:start="13:12" pos:end="13:15">NULL</name></expr></argument>, <argument pos:start="13:18" pos:end="13:28"><expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="13:31" pos:end="13:73"><expr pos:start="13:31" pos:end="13:73"><literal type="string" pos:start="13:31" pos:end="13:73">"creating filter \"%s\" with args \"%s\"\n"</literal></expr></argument>,
           <argument pos:start="14:12" pos:end="14:15"><expr pos:start="14:12" pos:end="14:15"><name pos:start="14:12" pos:end="14:15">name</name></expr></argument>, <argument pos:start="14:18" pos:end="14:39"><expr pos:start="14:18" pos:end="14:39"><ternary pos:start="14:18" pos:end="14:39"><condition pos:start="14:18" pos:end="14:23"><expr pos:start="14:18" pos:end="14:21"><name pos:start="14:18" pos:end="14:21">args</name></expr> ?</condition><then pos:start="14:25" pos:end="14:28"> <expr pos:start="14:25" pos:end="14:28"><name pos:start="14:25" pos:end="14:28">args</name></expr> </then><else pos:start="14:30" pos:end="14:39">: <expr pos:start="14:32" pos:end="14:39"><literal type="string" pos:start="14:32" pos:end="14:39">"(none)"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="21:66"><if pos:start="15:5" pos:end="21:5">if<condition pos:start="15:7" pos:end="15:51">(<expr pos:start="15:8" pos:end="15:50"><operator pos:start="15:8" pos:end="15:8">(</operator><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:49"><name pos:start="15:15" pos:end="15:37">avfilter_create_by_name</name><argument_list pos:start="15:38" pos:end="15:49">(<argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><name pos:start="15:39" pos:end="15:42">name</name></expr></argument>, <argument pos:start="15:45" pos:end="15:48"><expr pos:start="15:45" pos:end="15:48"><name pos:start="15:45" pos:end="15:48">NULL</name></expr></argument>)</argument_list></call><operator pos:start="15:50" pos:end="15:50">)</operator></expr>)</condition> <block pos:start="15:53" pos:end="21:5">{<block_content pos:start="16:9" pos:end="20:9">
        <if_stmt pos:start="16:9" pos:end="20:9"><if pos:start="16:9" pos:end="20:9">if<condition pos:start="16:11" pos:end="16:51">(<expr pos:start="16:12" pos:end="16:50"><call pos:start="16:12" pos:end="16:50"><name pos:start="16:12" pos:end="16:31">avfilter_init_filter</name><argument_list pos:start="16:32" pos:end="16:50">(<argument pos:start="16:33" pos:end="16:35"><expr pos:start="16:33" pos:end="16:35"><name pos:start="16:33" pos:end="16:35">ret</name></expr></argument>, <argument pos:start="16:38" pos:end="16:41"><expr pos:start="16:38" pos:end="16:41"><name pos:start="16:38" pos:end="16:41">args</name></expr></argument>, <argument pos:start="16:44" pos:end="16:49"><expr pos:start="16:44" pos:end="16:49"><name pos:start="16:44" pos:end="16:49">opaque</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="16:53" pos:end="20:9">{<block_content pos:start="17:13" pos:end="19:22">
            <expr_stmt pos:start="17:13" pos:end="17:71"><expr pos:start="17:13" pos:end="17:70"><call pos:start="17:13" pos:end="17:70"><name pos:start="17:13" pos:end="17:18">av_log</name><argument_list pos:start="17:19" pos:end="17:70">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">NULL</name></expr></argument>, <argument pos:start="17:26" pos:end="17:37"><expr pos:start="17:26" pos:end="17:37"><name pos:start="17:26" pos:end="17:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="17:40" pos:end="17:69"><expr pos:start="17:40" pos:end="17:69"><literal type="string" pos:start="17:40" pos:end="17:69">"error initializing filter!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="18:13" pos:end="18:34"><expr pos:start="18:13" pos:end="18:33"><call pos:start="18:13" pos:end="18:33"><name pos:start="18:13" pos:end="18:28">avfilter_destroy</name><argument_list pos:start="18:29" pos:end="18:33">(<argument pos:start="18:30" pos:end="18:32"><expr pos:start="18:30" pos:end="18:32"><name pos:start="18:30" pos:end="18:32">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="19:13" pos:end="19:22">goto <name pos:start="19:18" pos:end="19:21">fail</name>;</goto>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="21:7" pos:end="21:66">else<block type="pseudo" pos:start="21:12" pos:end="21:66"><block_content pos:start="21:12" pos:end="21:66"> <expr_stmt pos:start="21:12" pos:end="21:66"><expr pos:start="21:12" pos:end="21:65"><call pos:start="21:12" pos:end="21:65"><name pos:start="21:12" pos:end="21:17">av_log</name><argument_list pos:start="21:18" pos:end="21:65">(<argument pos:start="21:19" pos:end="21:22"><expr pos:start="21:19" pos:end="21:22"><name pos:start="21:19" pos:end="21:22">NULL</name></expr></argument>, <argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:39" pos:end="21:64"><expr pos:start="21:39" pos:end="21:64"><literal type="string" pos:start="21:39" pos:end="21:64">"error creating filter!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <return pos:start="22:5" pos:end="22:15">return <expr pos:start="22:12" pos:end="22:14"><name pos:start="22:12" pos:end="22:14">ret</name></expr>;</return>
<label pos:start="23:1" pos:end="23:5"><name pos:start="23:1" pos:end="23:4">fail</name>:</label>
    <return pos:start="24:5" pos:end="24:16">return <expr pos:start="24:12" pos:end="24:15"><name pos:start="24:12" pos:end="24:15">NULL</name></expr>;</return>
</block_content>}</block></function></unit>
