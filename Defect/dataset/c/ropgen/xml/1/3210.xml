<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3210.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:15">pl181_init</name><parameter_list pos:start="1:16" pos:end="3:45">(<parameter pos:start="1:17" pos:end="1:29"><decl pos:start="1:17" pos:end="1:29"><type pos:start="1:17" pos:end="1:29"><name pos:start="1:17" pos:end="1:24">uint32_t</name></type> <name pos:start="1:26" pos:end="1:29">base</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bd</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:29"><decl pos:start="3:17" pos:end="3:29"><type pos:start="3:17" pos:end="3:29"><name pos:start="3:17" pos:end="3:24">qemu_irq</name></type> <name pos:start="3:26" pos:end="3:29">irq0</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:44"><decl pos:start="3:32" pos:end="3:44"><type pos:start="3:32" pos:end="3:44"><name pos:start="3:32" pos:end="3:39">qemu_irq</name></type> <name pos:start="3:41" pos:end="3:44">irq1</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="31:19">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">pl181_state</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:5">s</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:20">pl181_state</name> <operator pos:start="13:22" pos:end="13:22">*</operator><operator pos:start="13:23" pos:end="13:23">)</operator><call pos:start="13:24" pos:end="13:56"><name pos:start="13:24" pos:end="13:35">qemu_mallocz</name><argument_list pos:start="13:36" pos:end="13:56">(<argument pos:start="13:37" pos:end="13:55"><expr pos:start="13:37" pos:end="13:55"><sizeof pos:start="13:37" pos:end="13:55">sizeof<argument_list pos:start="13:43" pos:end="13:55">(<argument pos:start="13:44" pos:end="13:54"><expr pos:start="13:44" pos:end="13:54"><name pos:start="13:44" pos:end="13:54">pl181_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:57"><expr pos:start="15:5" pos:end="17:56"><name pos:start="15:5" pos:end="15:13">iomemtype</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="17:56"><name pos:start="15:17" pos:end="15:38">cpu_register_io_memory</name><argument_list pos:start="15:39" pos:end="17:56">(<argument pos:start="15:40" pos:end="15:40"><expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr></argument>, <argument pos:start="15:43" pos:end="15:54"><expr pos:start="15:43" pos:end="15:54"><name pos:start="15:43" pos:end="15:54">pl181_readfn</name></expr></argument>,

                                       <argument pos:start="17:40" pos:end="17:52"><expr pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:52">pl181_writefn</name></expr></argument>, <argument pos:start="17:55" pos:end="17:55"><expr pos:start="17:55" pos:end="17:55"><name pos:start="17:55" pos:end="17:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><call pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:32">cpu_register_physical_memory</name><argument_list pos:start="19:33" pos:end="19:61">(<argument pos:start="19:34" pos:end="19:37"><expr pos:start="19:34" pos:end="19:37"><name pos:start="19:34" pos:end="19:37">base</name></expr></argument>, <argument pos:start="19:40" pos:end="19:49"><expr pos:start="19:40" pos:end="19:49"><literal type="number" pos:start="19:40" pos:end="19:49">0x00000fff</literal></expr></argument>, <argument pos:start="19:52" pos:end="19:60"><expr pos:start="19:52" pos:end="19:60"><name pos:start="19:52" pos:end="19:60">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">base</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:18">base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:11">card</name></name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:21">sd_init</name><argument_list pos:start="23:22" pos:end="23:25">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:10">irq</name><index pos:start="25:11" pos:end="25:13">[<expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>]</index></name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:20">irq0</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:10">irq</name><index pos:start="27:11" pos:end="27:13">[<expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">1</literal></expr>]</index></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">irq1</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:40"><expr pos:start="29:5" pos:end="29:39"><call pos:start="29:5" pos:end="29:39"><name pos:start="29:5" pos:end="29:23">qemu_register_reset</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:35"><expr pos:start="29:25" pos:end="29:35"><name pos:start="29:25" pos:end="29:35">pl181_reset</name></expr></argument>, <argument pos:start="29:38" pos:end="29:38"><expr pos:start="29:38" pos:end="29:38"><name pos:start="29:38" pos:end="29:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><call pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:15">pl181_reset</name><argument_list pos:start="31:16" pos:end="31:18">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
