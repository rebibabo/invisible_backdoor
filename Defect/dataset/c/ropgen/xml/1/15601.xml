<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15601.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:25"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">dec_load</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:25">{<block_content pos:start="5:5" pos:end="59:25">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:10">t</name></decl>, <decl pos:start="5:13" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:8"><modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:8">size</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <literal type="number" pos:start="11:12" pos:end="11:12">1</literal> <operator pos:start="11:14" pos:end="11:15">&lt;&lt;</operator> <operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:27"><name pos:start="11:18" pos:end="11:19">dc</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:27">opcode</name></name> <operator pos:start="11:29" pos:end="11:29">&amp;</operator> <literal type="number" pos:start="11:31" pos:end="11:31">3</literal><operator pos:start="11:32" pos:end="11:32">)</operator></expr>;</expr_stmt>









    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><call pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:11">LOG_DIS</name><argument_list pos:start="21:12" pos:end="21:42">(<argument pos:start="21:13" pos:end="21:23"><expr pos:start="21:13" pos:end="21:23"><literal type="string" pos:start="21:13" pos:end="21:23">"l %x %d\n"</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:27">dc</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:35">opcode</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:21"><expr pos:start="23:5" pos:end="23:20"><call pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:16">t_sync_flags</name><argument_list pos:start="23:17" pos:end="23:20">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:8">addr</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:36"><name pos:start="25:12" pos:end="25:28">compute_ldst_addr</name><argument_list pos:start="25:29" pos:end="25:36">(<argument pos:start="25:30" pos:end="25:31"><expr pos:start="25:30" pos:end="25:31"><name pos:start="25:30" pos:end="25:31">dc</name></expr></argument>, <argument pos:start="25:34" pos:end="25:35"><expr pos:start="25:34" pos:end="25:35"><operator pos:start="25:34" pos:end="25:34">&amp;</operator><name pos:start="25:35" pos:end="25:35">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:72">/* If we get a fault on a dslot, the jmpstate better be in sync.  */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><call pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17">sync_jmpstate</name><argument_list pos:start="31:18" pos:end="31:21">(<argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><name pos:start="31:19" pos:end="31:20">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:38">/* Verify alignment if needed.  */</comment>

    <if_stmt pos:start="37:5" pos:end="59:25"><if pos:start="37:5" pos:end="59:25">if <condition pos:start="37:8" pos:end="37:69">(<expr pos:start="37:9" pos:end="37:68"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:29"><name pos:start="37:10" pos:end="37:11">dc</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">env</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:21">pvr</name><operator pos:start="37:22" pos:end="37:22">.</operator><name pos:start="37:23" pos:end="37:26">regs</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><literal type="number" pos:start="37:28" pos:end="37:28">2</literal></expr>]</index></name> <operator pos:start="37:31" pos:end="37:31">&amp;</operator> <name pos:start="37:33" pos:end="37:55">PVR2_UNALIGNED_EXC_MASK</name><operator pos:start="37:56" pos:end="37:56">)</operator> <operator pos:start="37:58" pos:end="37:59">&amp;&amp;</operator> <name pos:start="37:61" pos:end="37:64">size</name> <operator pos:start="37:66" pos:end="37:66">&gt;</operator> <literal type="number" pos:start="37:68" pos:end="37:68">1</literal></expr>)</condition> <block pos:start="37:71" pos:end="59:25">{<block_content pos:start="39:9" pos:end="59:25">

        <expr_stmt pos:start="39:9" pos:end="41:69"><expr pos:start="39:9" pos:end="41:68"><call pos:start="39:9" pos:end="41:68"><name pos:start="39:9" pos:end="39:27">gen_helper_memalign</name><argument_list pos:start="39:28" pos:end="41:68">(<argument pos:start="39:29" pos:end="39:33"><expr pos:start="39:29" pos:end="39:33"><operator pos:start="39:29" pos:end="39:29">*</operator><name pos:start="39:30" pos:end="39:33">addr</name></expr></argument>, <argument pos:start="39:36" pos:end="39:55"><expr pos:start="39:36" pos:end="39:55"><call pos:start="39:36" pos:end="39:55"><name pos:start="39:36" pos:end="39:47">tcg_const_tl</name><argument_list pos:start="39:48" pos:end="39:55">(<argument pos:start="39:49" pos:end="39:54"><expr pos:start="39:49" pos:end="39:54"><name pos:start="39:49" pos:end="39:54"><name pos:start="39:49" pos:end="39:50">dc</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:54">rd</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="41:29" pos:end="41:43"><expr pos:start="41:29" pos:end="41:43"><call pos:start="41:29" pos:end="41:43"><name pos:start="41:29" pos:end="41:40">tcg_const_tl</name><argument_list pos:start="41:41" pos:end="41:43">(<argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><literal type="number" pos:start="41:42" pos:end="41:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:46" pos:end="41:67"><expr pos:start="41:46" pos:end="41:67"><call pos:start="41:46" pos:end="41:67"><name pos:start="41:46" pos:end="41:57">tcg_const_tl</name><argument_list pos:start="41:58" pos:end="41:67">(<argument pos:start="41:59" pos:end="41:66"><expr pos:start="41:59" pos:end="41:66"><name pos:start="41:59" pos:end="41:62">size</name> <operator pos:start="41:64" pos:end="41:64">-</operator> <literal type="number" pos:start="41:66" pos:end="41:66">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="46:5" pos:end="59:25"><if pos:start="46:5" pos:end="50:5">if <condition pos:start="46:8" pos:end="46:15">(<expr pos:start="46:9" pos:end="46:14"><name pos:start="46:9" pos:end="46:14"><name pos:start="46:9" pos:end="46:10">dc</name><operator pos:start="46:11" pos:end="46:12">-&gt;</operator><name pos:start="46:13" pos:end="46:14">rd</name></name></expr>)</condition> <block pos:start="46:17" pos:end="50:5">{<block_content pos:start="48:9" pos:end="48:49">

        <expr_stmt pos:start="48:9" pos:end="48:49"><expr pos:start="48:9" pos:end="48:48"><call pos:start="48:9" pos:end="48:48"><name pos:start="48:9" pos:end="48:16">gen_load</name><argument_list pos:start="48:17" pos:end="48:48">(<argument pos:start="48:18" pos:end="48:19"><expr pos:start="48:18" pos:end="48:19"><name pos:start="48:18" pos:end="48:19">dc</name></expr></argument>, <argument pos:start="48:22" pos:end="48:34"><expr pos:start="48:22" pos:end="48:34"><name pos:start="48:22" pos:end="48:34"><name pos:start="48:22" pos:end="48:26">cpu_R</name><index pos:start="48:27" pos:end="48:34">[<expr pos:start="48:28" pos:end="48:33"><name pos:start="48:28" pos:end="48:33"><name pos:start="48:28" pos:end="48:29">dc</name><operator pos:start="48:30" pos:end="48:31">-&gt;</operator><name pos:start="48:32" pos:end="48:33">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="48:37" pos:end="48:41"><expr pos:start="48:37" pos:end="48:41"><operator pos:start="48:37" pos:end="48:37">*</operator><name pos:start="48:38" pos:end="48:41">addr</name></expr></argument>, <argument pos:start="48:44" pos:end="48:47"><expr pos:start="48:44" pos:end="48:47"><name pos:start="48:44" pos:end="48:47">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="50:7" pos:end="59:25">else <block pos:start="50:12" pos:end="59:25">{<block_content pos:start="52:9" pos:end="59:25">

        <expr_stmt pos:start="52:9" pos:end="52:43"><expr pos:start="52:9" pos:end="52:42"><call pos:start="52:9" pos:end="52:42"><name pos:start="52:9" pos:end="52:16">gen_load</name><argument_list pos:start="52:17" pos:end="52:42">(<argument pos:start="52:18" pos:end="52:19"><expr pos:start="52:18" pos:end="52:19"><name pos:start="52:18" pos:end="52:19">dc</name></expr></argument>, <argument pos:start="52:22" pos:end="52:28"><expr pos:start="52:22" pos:end="52:28"><name pos:start="52:22" pos:end="52:28">env_imm</name></expr></argument>, <argument pos:start="52:31" pos:end="52:35"><expr pos:start="52:31" pos:end="52:35"><operator pos:start="52:31" pos:end="52:31">*</operator><name pos:start="52:32" pos:end="52:35">addr</name></expr></argument>, <argument pos:start="52:38" pos:end="52:41"><expr pos:start="52:38" pos:end="52:41"><name pos:start="52:38" pos:end="52:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="57:5" pos:end="59:25"><if pos:start="57:5" pos:end="59:25">if <condition pos:start="57:8" pos:end="57:19">(<expr pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:12">addr</name> <operator pos:start="57:14" pos:end="57:15">==</operator> <operator pos:start="57:17" pos:end="57:17">&amp;</operator><name pos:start="57:18" pos:end="57:18">t</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:25"><block_content pos:start="59:9" pos:end="59:25">

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><call pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:21">tcg_temp_free</name><argument_list pos:start="59:22" pos:end="59:24">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
