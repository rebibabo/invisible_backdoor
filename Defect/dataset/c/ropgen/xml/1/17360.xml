<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17360.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ea_read_header</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">EaDemuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">ea</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:28"><if pos:start="11:5" pos:end="13:28">if <condition pos:start="11:8" pos:end="11:32">(<expr pos:start="11:9" pos:end="11:31"><call pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:25">process_ea_header</name><argument_list pos:start="11:26" pos:end="11:28">(<argument pos:start="11:27" pos:end="11:27"><expr pos:start="11:27" pos:end="11:27"><name pos:start="11:27" pos:end="11:27">s</name></expr></argument>)</argument_list></call><operator pos:start="11:29" pos:end="11:30">&lt;=</operator><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:28"><block_content pos:start="13:9" pos:end="13:28">

        <return pos:start="13:9" pos:end="13:28">return <expr pos:start="13:16" pos:end="13:27"><call pos:start="13:16" pos:end="13:27"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:77">(<expr pos:start="17:9" pos:end="17:76"><call pos:start="17:9" pos:end="17:40"><name pos:start="17:9" pos:end="17:25">init_video_stream</name><argument_list pos:start="17:26" pos:end="17:40">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">s</name></expr></argument>, <argument pos:start="17:30" pos:end="17:39"><expr pos:start="17:30" pos:end="17:39"><operator pos:start="17:30" pos:end="17:30">&amp;</operator><name pos:start="17:31" pos:end="17:39"><name pos:start="17:31" pos:end="17:32">ea</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:39">video</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:42" pos:end="17:43">||</operator> <call pos:start="17:45" pos:end="17:76"><name pos:start="17:45" pos:end="17:61">init_video_stream</name><argument_list pos:start="17:62" pos:end="17:76">(<argument pos:start="17:63" pos:end="17:63"><expr pos:start="17:63" pos:end="17:63"><name pos:start="17:63" pos:end="17:63">s</name></expr></argument>, <argument pos:start="17:66" pos:end="17:75"><expr pos:start="17:66" pos:end="17:75"><operator pos:start="17:66" pos:end="17:66">&amp;</operator><name pos:start="17:67" pos:end="17:75"><name pos:start="17:67" pos:end="17:68">ea</name><operator pos:start="17:69" pos:end="17:70">-&gt;</operator><name pos:start="17:71" pos:end="17:75">alpha</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="99:5"><if pos:start="23:5" pos:end="99:5">if <condition pos:start="23:8" pos:end="23:24">(<expr pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:10">ea</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:23">audio_codec</name></name></expr>)</condition> <block pos:start="23:26" pos:end="99:5">{<block_content pos:start="25:9" pos:end="97:45">

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="35:9">if <condition pos:start="25:12" pos:end="25:58">(<expr pos:start="25:13" pos:end="25:57"><name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:14">ea</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:28">num_channels</name></name> <operator pos:start="25:30" pos:end="25:31">&lt;=</operator> <literal type="number" pos:start="25:33" pos:end="25:33">0</literal> <operator pos:start="25:35" pos:end="25:36">||</operator> <name pos:start="25:38" pos:end="25:53"><name pos:start="25:38" pos:end="25:39">ea</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:53">num_channels</name></name> <operator pos:start="25:55" pos:end="25:55">&gt;</operator> <literal type="number" pos:start="25:57" pos:end="25:57">2</literal></expr>)</condition> <block pos:start="25:60" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:21">

            <expr_stmt pos:start="27:13" pos:end="29:77"><expr pos:start="27:13" pos:end="29:76"><call pos:start="27:13" pos:end="29:76"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="29:76">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:36"><expr pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="29:20" pos:end="29:57"><expr pos:start="29:20" pos:end="29:57"><literal type="string" pos:start="29:20" pos:end="29:57">"Unsupported number of channels: %d\n"</literal></expr></argument>, <argument pos:start="29:60" pos:end="29:75"><expr pos:start="29:60" pos:end="29:75"><name pos:start="29:60" pos:end="29:75"><name pos:start="29:60" pos:end="29:61">ea</name><operator pos:start="29:62" pos:end="29:63">-&gt;</operator><name pos:start="29:64" pos:end="29:75">num_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:32"><expr pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:14">ea</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:27">audio_codec</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:33">(<expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:14">ea</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:27">sample_rate</name></name> <operator pos:start="37:29" pos:end="37:30">&lt;=</operator> <literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr>)</condition> <block pos:start="37:35" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:21">

            <expr_stmt pos:start="39:13" pos:end="41:69"><expr pos:start="39:13" pos:end="41:68"><call pos:start="39:13" pos:end="41:68"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="41:68">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:50"><expr pos:start="41:20" pos:end="41:50"><literal type="string" pos:start="41:20" pos:end="41:50">"Unsupported sample rate: %d\n"</literal></expr></argument>, <argument pos:start="41:53" pos:end="41:67"><expr pos:start="41:53" pos:end="41:67"><name pos:start="41:53" pos:end="41:67"><name pos:start="41:53" pos:end="41:54">ea</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:67">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:32"><expr pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:14">ea</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:27">audio_codec</name></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:14">ea</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:21">bytes</name></name> <operator pos:start="49:23" pos:end="49:24">&lt;=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>)</condition> <block pos:start="49:29" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:21">

            <expr_stmt pos:start="51:13" pos:end="53:74"><expr pos:start="51:13" pos:end="53:73"><call pos:start="51:13" pos:end="53:73"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="53:73">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="53:20" pos:end="53:61"><expr pos:start="53:20" pos:end="53:61"><literal type="string" pos:start="53:20" pos:end="53:61">"Invalid number of bytes per sample: %d\n"</literal></expr></argument>, <argument pos:start="53:64" pos:end="53:72"><expr pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:72"><name pos:start="53:64" pos:end="53:65">ea</name><operator pos:start="53:66" pos:end="53:67">-&gt;</operator><name pos:start="53:68" pos:end="53:72">bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:14">ea</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:27">audio_codec</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:46">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:21">return <expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="63:9" pos:end="63:49">/* initialize the audio decoder stream */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:42"><expr pos:start="65:9" pos:end="65:41"><name pos:start="65:9" pos:end="65:10">st</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:41"><name pos:start="65:14" pos:end="65:32">avformat_new_stream</name><argument_list pos:start="65:33" pos:end="65:41">(<argument pos:start="65:34" pos:end="65:34"><expr pos:start="65:34" pos:end="65:34"><name pos:start="65:34" pos:end="65:34">s</name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:35"><if pos:start="67:9" pos:end="69:35">if <condition pos:start="67:12" pos:end="67:16">(<expr pos:start="67:13" pos:end="67:15"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:15">st</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:35"><block_content pos:start="69:13" pos:end="69:35">

            <return pos:start="69:13" pos:end="69:35">return <expr pos:start="69:20" pos:end="69:34"><call pos:start="69:20" pos:end="69:34"><name pos:start="69:20" pos:end="69:26">AVERROR</name><argument_list pos:start="69:27" pos:end="69:34">(<argument pos:start="69:28" pos:end="69:33"><expr pos:start="69:28" pos:end="69:33"><name pos:start="69:28" pos:end="69:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:27">avpriv_set_pts_info</name><argument_list pos:start="71:28" pos:end="71:55">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">st</name></expr></argument>, <argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><literal type="number" pos:start="71:33" pos:end="71:34">33</literal></expr></argument>, <argument pos:start="71:37" pos:end="71:37"><expr pos:start="71:37" pos:end="71:37"><literal type="number" pos:start="71:37" pos:end="71:37">1</literal></expr></argument>, <argument pos:start="71:40" pos:end="71:54"><expr pos:start="71:40" pos:end="71:54"><name pos:start="71:40" pos:end="71:54"><name pos:start="71:40" pos:end="71:41">ea</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:54">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:10">st</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:20">codecpar</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:32">codec_type</name></name>            <operator pos:start="73:45" pos:end="73:45">=</operator> <name pos:start="73:47" pos:end="73:64">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:62"><expr pos:start="75:9" pos:end="75:61"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:10">st</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:20">codecpar</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:30">codec_id</name></name>              <operator pos:start="75:45" pos:end="75:45">=</operator> <name pos:start="75:47" pos:end="75:61"><name pos:start="75:47" pos:end="75:48">ea</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:61">audio_codec</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">codecpar</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:31">codec_tag</name></name>             <operator pos:start="77:45" pos:end="77:45">=</operator> <literal type="number" pos:start="77:47" pos:end="77:47">0</literal></expr>;</expr_stmt>   <comment type="block" pos:start="77:52" pos:end="77:63">/* no tag */</comment>

        <expr_stmt pos:start="79:9" pos:end="79:63"><expr pos:start="79:9" pos:end="79:62"><name pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:10">st</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:20">codecpar</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">channels</name></name>              <operator pos:start="79:45" pos:end="79:45">=</operator> <name pos:start="79:47" pos:end="79:62"><name pos:start="79:47" pos:end="79:48">ea</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:62">num_channels</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:62"><expr pos:start="81:9" pos:end="81:61"><name pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:10">st</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:20">codecpar</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:33">sample_rate</name></name>           <operator pos:start="81:45" pos:end="81:45">=</operator> <name pos:start="81:47" pos:end="81:61"><name pos:start="81:47" pos:end="81:48">ea</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:61">sample_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:60"><expr pos:start="83:9" pos:end="83:59"><name pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:10">st</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">codecpar</name><operator pos:start="83:21" pos:end="83:22">-&gt;</operator><name pos:start="83:23" pos:end="83:43">bits_per_coded_sample</name></name> <operator pos:start="83:45" pos:end="83:45">=</operator> <name pos:start="83:47" pos:end="83:55"><name pos:start="83:47" pos:end="83:48">ea</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:55">bytes</name></name> <operator pos:start="83:57" pos:end="83:57">*</operator> <literal type="number" pos:start="83:59" pos:end="83:59">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="89:86"><expr pos:start="85:9" pos:end="89:85"><name pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:10">st</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:20">codecpar</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:30">bit_rate</name></name>              <operator pos:start="85:45" pos:end="85:45">=</operator> <operator pos:start="85:47" pos:end="85:47">(</operator><name pos:start="85:48" pos:end="85:54">int64_t</name><operator pos:start="85:55" pos:end="85:55">)</operator><name pos:start="85:56" pos:end="85:77"><name pos:start="85:56" pos:end="85:57">st</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:67">codecpar</name><operator pos:start="85:68" pos:end="85:69">-&gt;</operator><name pos:start="85:70" pos:end="85:77">channels</name></name> <operator pos:start="85:79" pos:end="85:79">*</operator>

                                              <name pos:start="87:47" pos:end="87:71"><name pos:start="87:47" pos:end="87:48">st</name><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:58">codecpar</name><operator pos:start="87:59" pos:end="87:60">-&gt;</operator><name pos:start="87:61" pos:end="87:71">sample_rate</name></name> <operator pos:start="87:73" pos:end="87:73">*</operator>

                                              <name pos:start="89:47" pos:end="89:81"><name pos:start="89:47" pos:end="89:48">st</name><operator pos:start="89:49" pos:end="89:50">-&gt;</operator><name pos:start="89:51" pos:end="89:58">codecpar</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:81">bits_per_coded_sample</name></name> <operator pos:start="89:83" pos:end="89:83">/</operator> <literal type="number" pos:start="89:85" pos:end="89:85">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="93:82"><expr pos:start="91:9" pos:end="93:81"><name pos:start="91:9" pos:end="91:33"><name pos:start="91:9" pos:end="91:10">st</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:20">codecpar</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:33">block_align</name></name>           <operator pos:start="91:45" pos:end="91:45">=</operator> <name pos:start="91:47" pos:end="91:68"><name pos:start="91:47" pos:end="91:48">st</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:58">codecpar</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:68">channels</name></name> <operator pos:start="91:70" pos:end="91:70">*</operator>

                                              <name pos:start="93:47" pos:end="93:81"><name pos:start="93:47" pos:end="93:48">st</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:58">codecpar</name><operator pos:start="93:59" pos:end="93:60">-&gt;</operator><name pos:start="93:61" pos:end="93:81">bits_per_coded_sample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:53"><expr pos:start="95:9" pos:end="95:52"><name pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:10">ea</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:30">audio_stream_index</name></name>           <operator pos:start="95:42" pos:end="95:42">=</operator> <name pos:start="95:44" pos:end="95:52"><name pos:start="95:44" pos:end="95:45">st</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:52">index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:45"><expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:10">st</name><operator pos:start="97:11" pos:end="97:12">-&gt;</operator><name pos:start="97:13" pos:end="97:22">start_time</name></name>                   <operator pos:start="97:42" pos:end="97:42">=</operator> <literal type="number" pos:start="97:44" pos:end="97:44">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
