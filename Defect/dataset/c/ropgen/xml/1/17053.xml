<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17053.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">h263_encode_picture_header</name><parameter_list pos:start="1:32" pos:end="1:71">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:46">MpegEncContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type> <name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:70">picture_number</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:27">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><call pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:18">align_put_bits</name><argument_list pos:start="9:19" pos:end="9:26">(<argument pos:start="9:20" pos:end="9:25"><expr pos:start="9:20" pos:end="9:25"><operator pos:start="9:20" pos:end="9:20">&amp;</operator><name pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:21">s</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:12">put_bits</name><argument_list pos:start="11:13" pos:end="11:30">(<argument pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:19"><operator pos:start="11:14" pos:end="11:14">&amp;</operator><name pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:19">pb</name></name></expr></argument>, <argument pos:start="11:22" pos:end="11:23"><expr pos:start="11:22" pos:end="11:23"><literal type="number" pos:start="11:22" pos:end="11:23">22</literal></expr></argument>, <argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><literal type="number" pos:start="11:26" pos:end="11:29">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:48"><expr pos:start="13:5" pos:end="15:47"><call pos:start="13:5" pos:end="15:47"><name pos:start="13:5" pos:end="13:12">put_bits</name><argument_list pos:start="13:13" pos:end="15:47">(<argument pos:start="13:14" pos:end="13:19"><expr pos:start="13:14" pos:end="13:19"><operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:19"><name pos:start="13:15" pos:end="13:15">s</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:19">pb</name></name></expr></argument>, <argument pos:start="13:22" pos:end="13:22"><expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">8</literal></expr></argument>, <argument pos:start="13:25" pos:end="15:46"><expr pos:start="13:25" pos:end="15:46"><operator pos:start="13:25" pos:end="13:25">(</operator><operator pos:start="13:26" pos:end="13:26">(</operator><name pos:start="13:27" pos:end="13:43"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:43">picture_number</name></name> <operator pos:start="13:45" pos:end="13:45">*</operator> <literal type="number" pos:start="13:47" pos:end="13:48">30</literal> <operator pos:start="13:50" pos:end="13:50">*</operator> <name pos:start="13:52" pos:end="13:66">FRAME_RATE_BASE</name><operator pos:start="13:67" pos:end="13:67">)</operator> <operator pos:start="13:69" pos:end="13:69">/</operator> 

                         <name pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:26">s</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:38">frame_rate</name></name><operator pos:start="15:39" pos:end="15:39">)</operator> <operator pos:start="15:41" pos:end="15:41">&amp;</operator> <literal type="number" pos:start="15:43" pos:end="15:46">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="19:26">(<argument pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:19"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>, <argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr></argument>, <argument pos:start="19:25" pos:end="19:25"><expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="19:33" pos:end="19:44">/* marker */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:12">put_bits</name><argument_list pos:start="21:13" pos:end="21:26">(<argument pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:19"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">pb</name></name></expr></argument>, <argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr></argument>, <argument pos:start="21:25" pos:end="21:25"><expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="21:33" pos:end="21:45">/* h263 id */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:12">put_bits</name><argument_list pos:start="23:13" pos:end="23:26">(<argument pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:19"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:19"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:19">pb</name></name></expr></argument>, <argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><literal type="number" pos:start="23:25" pos:end="23:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="23:33" pos:end="23:54">/* split screen off */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:12">put_bits</name><argument_list pos:start="25:13" pos:end="25:26">(<argument pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:19"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">pb</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>, <argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="25:33" pos:end="25:49">/* camera  off */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:12">put_bits</name><argument_list pos:start="27:13" pos:end="27:26">(<argument pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:19"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">pb</name></name></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">1</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="27:33" pos:end="27:64">/* freeze picture release off */</comment>

    

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:10">format</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:57"><name pos:start="31:14" pos:end="31:36">h263_get_picture_format</name><argument_list pos:start="31:37" pos:end="31:57">(<argument pos:start="31:38" pos:end="31:45"><expr pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:45"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:45">width</name></name></expr></argument>, <argument pos:start="31:48" pos:end="31:56"><expr pos:start="31:48" pos:end="31:56"><name pos:start="31:48" pos:end="31:56"><name pos:start="31:48" pos:end="31:48">s</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:56">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="157:5"><if pos:start="33:5" pos:end="59:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:10">s</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:21">h263_plus</name></name></expr>)</condition> <block pos:start="33:24" pos:end="59:5">{<block_content pos:start="37:9" pos:end="57:31">

        <comment type="block" pos:start="35:9" pos:end="35:21">/* H.263v1 */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:16">put_bits</name><argument_list pos:start="37:17" pos:end="37:35">(<argument pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:23"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:19">s</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:23">pb</name></name></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">3</literal></expr></argument>, <argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><name pos:start="37:29" pos:end="37:34">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:54"><expr pos:start="39:9" pos:end="39:53"><call pos:start="39:9" pos:end="39:53"><name pos:start="39:9" pos:end="39:16">put_bits</name><argument_list pos:start="39:17" pos:end="39:53">(<argument pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:23"><operator pos:start="39:18" pos:end="39:18">&amp;</operator><name pos:start="39:19" pos:end="39:23"><name pos:start="39:19" pos:end="39:19">s</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:23">pb</name></name></expr></argument>, <argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr></argument>, <argument pos:start="39:29" pos:end="39:52"><expr pos:start="39:29" pos:end="39:52"><operator pos:start="39:29" pos:end="39:29">(</operator><name pos:start="39:30" pos:end="39:41"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:41">pict_type</name></name> <operator pos:start="39:43" pos:end="39:44">==</operator> <name pos:start="39:46" pos:end="39:51">P_TYPE</name><operator pos:start="39:52" pos:end="39:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="41:9" pos:end="45:70">/* By now UMV IS DISABLED ON H.263v1, since the restrictions

        of H.263v1 UMV implies to check the predicted MV after

        calculation of the current MB to see if we're on the limits */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><call pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:16">put_bits</name><argument_list pos:start="47:17" pos:end="47:30">(<argument pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:23"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">pb</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>, <argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><literal type="number" pos:start="47:29" pos:end="47:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="47:33" pos:end="47:69">/* unrestricted motion vector: off */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><call pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:16">put_bits</name><argument_list pos:start="49:17" pos:end="49:30">(<argument pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:23"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:23"><name pos:start="49:19" pos:end="49:19">s</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:23">pb</name></name></expr></argument>, <argument pos:start="49:26" pos:end="49:26"><expr pos:start="49:26" pos:end="49:26"><literal type="number" pos:start="49:26" pos:end="49:26">1</literal></expr></argument>, <argument pos:start="49:29" pos:end="49:29"><expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="49:33" pos:end="49:46">/* SAC: off */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:31"><expr pos:start="51:9" pos:end="51:30"><call pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:16">put_bits</name><argument_list pos:start="51:17" pos:end="51:30">(<argument pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:23"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">pb</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">1</literal></expr></argument>, <argument pos:start="51:29" pos:end="51:29"><expr pos:start="51:29" pos:end="51:29"><literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="51:33" pos:end="51:67">/* advanced prediction mode: off */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:31"><expr pos:start="53:9" pos:end="53:30"><call pos:start="53:9" pos:end="53:30"><name pos:start="53:9" pos:end="53:16">put_bits</name><argument_list pos:start="53:17" pos:end="53:30">(<argument pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:23"><operator pos:start="53:18" pos:end="53:18">&amp;</operator><name pos:start="53:19" pos:end="53:23"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:23">pb</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:26"><expr pos:start="53:26" pos:end="53:26"><literal type="number" pos:start="53:26" pos:end="53:26">1</literal></expr></argument>, <argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="53:33" pos:end="53:50">/* not PB frame */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><call pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:16">put_bits</name><argument_list pos:start="55:17" pos:end="55:38">(<argument pos:start="55:18" pos:end="55:23"><expr pos:start="55:18" pos:end="55:23"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:23"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:23">pb</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:26"><expr pos:start="55:26" pos:end="55:26"><literal type="number" pos:start="55:26" pos:end="55:26">5</literal></expr></argument>, <argument pos:start="55:29" pos:end="55:37"><expr pos:start="55:29" pos:end="55:37"><name pos:start="55:29" pos:end="55:37"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:37">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><call pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:16">put_bits</name><argument_list pos:start="57:17" pos:end="57:30">(<argument pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:23"><operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:23">pb</name></name></expr></argument>, <argument pos:start="57:26" pos:end="57:26"><expr pos:start="57:26" pos:end="57:26"><literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr></argument>, <argument pos:start="57:29" pos:end="57:29"><expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="57:33" pos:end="57:78">/* Continuous Presence Multipoint mode: off */</comment>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="157:5">else <block pos:start="59:12" pos:end="157:5">{<block_content pos:start="65:9" pos:end="155:39">

        <comment type="block" pos:start="61:9" pos:end="61:21">/* H.263v2 */</comment>

        <comment type="block" pos:start="63:9" pos:end="63:30">/* H.263 Plus PTYPE */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:16">put_bits</name><argument_list pos:start="65:17" pos:end="65:30">(<argument pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:23"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:23"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:23">pb</name></name></expr></argument>, <argument pos:start="65:26" pos:end="65:26"><expr pos:start="65:26" pos:end="65:26"><literal type="number" pos:start="65:26" pos:end="65:26">3</literal></expr></argument>, <argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><literal type="number" pos:start="65:29" pos:end="65:29">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:29"><expr pos:start="67:9" pos:end="67:28"><call pos:start="67:9" pos:end="67:28"><name pos:start="67:9" pos:end="67:16">put_bits</name><argument_list pos:start="67:17" pos:end="67:28">(<argument pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:23"><operator pos:start="67:18" pos:end="67:18">&amp;</operator><name pos:start="67:19" pos:end="67:23"><name pos:start="67:19" pos:end="67:19">s</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:23">pb</name></name></expr></argument>,<argument pos:start="67:25" pos:end="67:25"><expr pos:start="67:25" pos:end="67:25"><literal type="number" pos:start="67:25" pos:end="67:25">3</literal></expr></argument>,<argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:31" pos:end="67:62">/* Update Full Extended PTYPE */</comment>

        <if_stmt pos:start="69:9" pos:end="75:40"><if pos:start="69:9" pos:end="71:33">if <condition pos:start="69:12" pos:end="69:24">(<expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:18">format</name> <operator pos:start="69:20" pos:end="69:21">==</operator> <literal type="number" pos:start="69:23" pos:end="69:23">7</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:33"><block_content pos:start="71:13" pos:end="71:33">

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><call pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:20">put_bits</name><argument_list pos:start="71:21" pos:end="71:32">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:27">pb</name></name></expr></argument>,<argument pos:start="71:29" pos:end="71:29"><expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">3</literal></expr></argument>,<argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="71:35" pos:end="71:60">/* Custom Source Format */</comment>

        <else pos:start="73:9" pos:end="75:40">else<block type="pseudo" pos:start="75:13" pos:end="75:40"><block_content pos:start="75:13" pos:end="75:40">

            <expr_stmt pos:start="75:13" pos:end="75:40"><expr pos:start="75:13" pos:end="75:39"><call pos:start="75:13" pos:end="75:39"><name pos:start="75:13" pos:end="75:20">put_bits</name><argument_list pos:start="75:21" pos:end="75:39">(<argument pos:start="75:22" pos:end="75:27"><expr pos:start="75:22" pos:end="75:27"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:27"><name pos:start="75:23" pos:end="75:23">s</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:27">pb</name></name></expr></argument>, <argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><literal type="number" pos:start="75:30" pos:end="75:30">3</literal></expr></argument>, <argument pos:start="75:33" pos:end="75:38"><expr pos:start="75:33" pos:end="75:38"><name pos:start="75:33" pos:end="75:38">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

        <expr_stmt pos:start="79:9" pos:end="79:29"><expr pos:start="79:9" pos:end="79:28"><call pos:start="79:9" pos:end="79:28"><name pos:start="79:9" pos:end="79:16">put_bits</name><argument_list pos:start="79:17" pos:end="79:28">(<argument pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:23"><operator pos:start="79:18" pos:end="79:18">&amp;</operator><name pos:start="79:19" pos:end="79:23"><name pos:start="79:19" pos:end="79:19">s</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:23">pb</name></name></expr></argument>,<argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr></argument>,<argument pos:start="79:27" pos:end="79:27"><expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="79:31" pos:end="79:51">/* Custom PCF: off */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:15">umvplus</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <operator pos:start="81:19" pos:end="81:19">(</operator><name pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:20">s</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:31">pict_type</name></name> <operator pos:start="81:33" pos:end="81:34">==</operator> <name pos:start="81:36" pos:end="81:41">P_TYPE</name><operator pos:start="81:42" pos:end="81:42">)</operator> <operator pos:start="81:44" pos:end="81:45">&amp;&amp;</operator> <name pos:start="81:47" pos:end="81:64"><name pos:start="81:47" pos:end="81:47">s</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:64">unrestricted_mv</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><call pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:16">put_bits</name><argument_list pos:start="83:17" pos:end="83:36">(<argument pos:start="83:18" pos:end="83:23"><expr pos:start="83:18" pos:end="83:23"><operator pos:start="83:18" pos:end="83:18">&amp;</operator><name pos:start="83:19" pos:end="83:23"><name pos:start="83:19" pos:end="83:19">s</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:23">pb</name></name></expr></argument>, <argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><literal type="number" pos:start="83:26" pos:end="83:26">1</literal></expr></argument>, <argument pos:start="83:29" pos:end="83:35"><expr pos:start="83:29" pos:end="83:35"><name pos:start="83:29" pos:end="83:35">umvplus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:39" pos:end="83:70">/* Unrestricted Motion Vector */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><call pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:16">put_bits</name><argument_list pos:start="85:17" pos:end="85:28">(<argument pos:start="85:18" pos:end="85:23"><expr pos:start="85:18" pos:end="85:23"><operator pos:start="85:18" pos:end="85:18">&amp;</operator><name pos:start="85:19" pos:end="85:23"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:23">pb</name></name></expr></argument>,<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><literal type="number" pos:start="85:25" pos:end="85:25">1</literal></expr></argument>,<argument pos:start="85:27" pos:end="85:27"><expr pos:start="85:27" pos:end="85:27"><literal type="number" pos:start="85:27" pos:end="85:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:31" pos:end="85:44">/* SAC: off */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><call pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:16">put_bits</name><argument_list pos:start="87:17" pos:end="87:28">(<argument pos:start="87:18" pos:end="87:23"><expr pos:start="87:18" pos:end="87:23"><operator pos:start="87:18" pos:end="87:18">&amp;</operator><name pos:start="87:19" pos:end="87:23"><name pos:start="87:19" pos:end="87:19">s</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:23">pb</name></name></expr></argument>,<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><literal type="number" pos:start="87:25" pos:end="87:25">1</literal></expr></argument>,<argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:31" pos:end="87:65">/* Advanced Prediction Mode: off */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:16">put_bits</name><argument_list pos:start="89:17" pos:end="89:28">(<argument pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:23"><operator pos:start="89:18" pos:end="89:18">&amp;</operator><name pos:start="89:19" pos:end="89:23"><name pos:start="89:19" pos:end="89:19">s</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:23">pb</name></name></expr></argument>,<argument pos:start="89:25" pos:end="89:25"><expr pos:start="89:25" pos:end="89:25"><literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr></argument>,<argument pos:start="89:27" pos:end="89:27"><expr pos:start="89:27" pos:end="89:27"><literal type="number" pos:start="89:27" pos:end="89:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:31" pos:end="89:62">/* Advanced Intra Coding: off */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><call pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:16">put_bits</name><argument_list pos:start="91:17" pos:end="91:28">(<argument pos:start="91:18" pos:end="91:23"><expr pos:start="91:18" pos:end="91:23"><operator pos:start="91:18" pos:end="91:18">&amp;</operator><name pos:start="91:19" pos:end="91:23"><name pos:start="91:19" pos:end="91:19">s</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:23">pb</name></name></expr></argument>,<argument pos:start="91:25" pos:end="91:25"><expr pos:start="91:25" pos:end="91:25"><literal type="number" pos:start="91:25" pos:end="91:25">1</literal></expr></argument>,<argument pos:start="91:27" pos:end="91:27"><expr pos:start="91:27" pos:end="91:27"><literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:31" pos:end="91:58">/* Deblocking Filter: off */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><call pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:16">put_bits</name><argument_list pos:start="93:17" pos:end="93:28">(<argument pos:start="93:18" pos:end="93:23"><expr pos:start="93:18" pos:end="93:23"><operator pos:start="93:18" pos:end="93:18">&amp;</operator><name pos:start="93:19" pos:end="93:23"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:23">pb</name></name></expr></argument>,<argument pos:start="93:25" pos:end="93:25"><expr pos:start="93:25" pos:end="93:25"><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr></argument>,<argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:31" pos:end="93:57">/* Slice Structured: off */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:16">put_bits</name><argument_list pos:start="95:17" pos:end="95:28">(<argument pos:start="95:18" pos:end="95:23"><expr pos:start="95:18" pos:end="95:23"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:23"><name pos:start="95:19" pos:end="95:19">s</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:23">pb</name></name></expr></argument>,<argument pos:start="95:25" pos:end="95:25"><expr pos:start="95:25" pos:end="95:25"><literal type="number" pos:start="95:25" pos:end="95:25">1</literal></expr></argument>,<argument pos:start="95:27" pos:end="95:27"><expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="95:31" pos:end="95:68">/* Reference Picture Selection: off */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:29"><expr pos:start="97:9" pos:end="97:28"><call pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:16">put_bits</name><argument_list pos:start="97:17" pos:end="97:28">(<argument pos:start="97:18" pos:end="97:23"><expr pos:start="97:18" pos:end="97:23"><operator pos:start="97:18" pos:end="97:18">&amp;</operator><name pos:start="97:19" pos:end="97:23"><name pos:start="97:19" pos:end="97:19">s</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:23">pb</name></name></expr></argument>,<argument pos:start="97:25" pos:end="97:25"><expr pos:start="97:25" pos:end="97:25"><literal type="number" pos:start="97:25" pos:end="97:25">1</literal></expr></argument>,<argument pos:start="97:27" pos:end="97:27"><expr pos:start="97:27" pos:end="97:27"><literal type="number" pos:start="97:27" pos:end="97:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:31" pos:end="97:69">/* Independent Segment Decoding: off */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><call pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">put_bits</name><argument_list pos:start="99:17" pos:end="99:28">(<argument pos:start="99:18" pos:end="99:23"><expr pos:start="99:18" pos:end="99:23"><operator pos:start="99:18" pos:end="99:18">&amp;</operator><name pos:start="99:19" pos:end="99:23"><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:23">pb</name></name></expr></argument>,<argument pos:start="99:25" pos:end="99:25"><expr pos:start="99:25" pos:end="99:25"><literal type="number" pos:start="99:25" pos:end="99:25">1</literal></expr></argument>,<argument pos:start="99:27" pos:end="99:27"><expr pos:start="99:27" pos:end="99:27"><literal type="number" pos:start="99:27" pos:end="99:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="99:31" pos:end="99:62">/* Alternative Inter VLC: off */</comment>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><call pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:16">put_bits</name><argument_list pos:start="101:17" pos:end="101:28">(<argument pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:23"><operator pos:start="101:18" pos:end="101:18">&amp;</operator><name pos:start="101:19" pos:end="101:23"><name pos:start="101:19" pos:end="101:19">s</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:23">pb</name></name></expr></argument>,<argument pos:start="101:25" pos:end="101:25"><expr pos:start="101:25" pos:end="101:25"><literal type="number" pos:start="101:25" pos:end="101:25">1</literal></expr></argument>,<argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><literal type="number" pos:start="101:27" pos:end="101:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="101:31" pos:end="101:62">/* Modified Quantization: off */</comment>

        <expr_stmt pos:start="103:9" pos:end="103:29"><expr pos:start="103:9" pos:end="103:28"><call pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:16">put_bits</name><argument_list pos:start="103:17" pos:end="103:28">(<argument pos:start="103:18" pos:end="103:23"><expr pos:start="103:18" pos:end="103:23"><operator pos:start="103:18" pos:end="103:18">&amp;</operator><name pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:23">pb</name></name></expr></argument>,<argument pos:start="103:25" pos:end="103:25"><expr pos:start="103:25" pos:end="103:25"><literal type="number" pos:start="103:25" pos:end="103:25">1</literal></expr></argument>,<argument pos:start="103:27" pos:end="103:27"><expr pos:start="103:27" pos:end="103:27"><literal type="number" pos:start="103:27" pos:end="103:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:31" pos:end="103:71">/* "1" to prevent start code emulation */</comment>

        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><call pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:16">put_bits</name><argument_list pos:start="105:17" pos:end="105:28">(<argument pos:start="105:18" pos:end="105:23"><expr pos:start="105:18" pos:end="105:23"><operator pos:start="105:18" pos:end="105:18">&amp;</operator><name pos:start="105:19" pos:end="105:23"><name pos:start="105:19" pos:end="105:19">s</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:23">pb</name></name></expr></argument>,<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><literal type="number" pos:start="105:25" pos:end="105:25">3</literal></expr></argument>,<argument pos:start="105:27" pos:end="105:27"><expr pos:start="105:27" pos:end="105:27"><literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:31" pos:end="105:44">/* Reserved */</comment>

		

        <expr_stmt pos:start="109:9" pos:end="109:52"><expr pos:start="109:9" pos:end="109:51"><call pos:start="109:9" pos:end="109:51"><name pos:start="109:9" pos:end="109:16">put_bits</name><argument_list pos:start="109:17" pos:end="109:51">(<argument pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:23"><operator pos:start="109:18" pos:end="109:18">&amp;</operator><name pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">s</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:23">pb</name></name></expr></argument>, <argument pos:start="109:26" pos:end="109:26"><expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">3</literal></expr></argument>, <argument pos:start="109:29" pos:end="109:50"><expr pos:start="109:29" pos:end="109:50"><name pos:start="109:29" pos:end="109:40"><name pos:start="109:29" pos:end="109:29">s</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:40">pict_type</name></name> <operator pos:start="109:42" pos:end="109:43">==</operator> <name pos:start="109:45" pos:end="109:50">P_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><call pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:16">put_bits</name><argument_list pos:start="113:17" pos:end="113:28">(<argument pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:23"><operator pos:start="113:18" pos:end="113:18">&amp;</operator><name pos:start="113:19" pos:end="113:23"><name pos:start="113:19" pos:end="113:19">s</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:23">pb</name></name></expr></argument>,<argument pos:start="113:25" pos:end="113:25"><expr pos:start="113:25" pos:end="113:25"><literal type="number" pos:start="113:25" pos:end="113:25">1</literal></expr></argument>,<argument pos:start="113:27" pos:end="113:27"><expr pos:start="113:27" pos:end="113:27"><literal type="number" pos:start="113:27" pos:end="113:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="113:31" pos:end="113:69">/* Reference Picture Resampling: off */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:29"><expr pos:start="115:9" pos:end="115:28"><call pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:16">put_bits</name><argument_list pos:start="115:17" pos:end="115:28">(<argument pos:start="115:18" pos:end="115:23"><expr pos:start="115:18" pos:end="115:23"><operator pos:start="115:18" pos:end="115:18">&amp;</operator><name pos:start="115:19" pos:end="115:23"><name pos:start="115:19" pos:end="115:19">s</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:23">pb</name></name></expr></argument>,<argument pos:start="115:25" pos:end="115:25"><expr pos:start="115:25" pos:end="115:25"><literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr></argument>,<argument pos:start="115:27" pos:end="115:27"><expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:31" pos:end="115:66">/* Reduced-Resolution Update: off */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><call pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:16">put_bits</name><argument_list pos:start="117:17" pos:end="117:28">(<argument pos:start="117:18" pos:end="117:23"><expr pos:start="117:18" pos:end="117:23"><operator pos:start="117:18" pos:end="117:18">&amp;</operator><name pos:start="117:19" pos:end="117:23"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:23">pb</name></name></expr></argument>,<argument pos:start="117:25" pos:end="117:25"><expr pos:start="117:25" pos:end="117:25"><literal type="number" pos:start="117:25" pos:end="117:25">1</literal></expr></argument>,<argument pos:start="117:27" pos:end="117:27"><expr pos:start="117:27" pos:end="117:27"><literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="117:31" pos:end="117:49">/* Rounding Type */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:29"><expr pos:start="119:9" pos:end="119:28"><call pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:16">put_bits</name><argument_list pos:start="119:17" pos:end="119:28">(<argument pos:start="119:18" pos:end="119:23"><expr pos:start="119:18" pos:end="119:23"><operator pos:start="119:18" pos:end="119:18">&amp;</operator><name pos:start="119:19" pos:end="119:23"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:23">pb</name></name></expr></argument>,<argument pos:start="119:25" pos:end="119:25"><expr pos:start="119:25" pos:end="119:25"><literal type="number" pos:start="119:25" pos:end="119:25">2</literal></expr></argument>,<argument pos:start="119:27" pos:end="119:27"><expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="119:31" pos:end="119:44">/* Reserved */</comment>

        <expr_stmt pos:start="121:9" pos:end="121:29"><expr pos:start="121:9" pos:end="121:28"><call pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:16">put_bits</name><argument_list pos:start="121:17" pos:end="121:28">(<argument pos:start="121:18" pos:end="121:23"><expr pos:start="121:18" pos:end="121:23"><operator pos:start="121:18" pos:end="121:18">&amp;</operator><name pos:start="121:19" pos:end="121:23"><name pos:start="121:19" pos:end="121:19">s</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:23">pb</name></name></expr></argument>,<argument pos:start="121:25" pos:end="121:25"><expr pos:start="121:25" pos:end="121:25"><literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr></argument>,<argument pos:start="121:27" pos:end="121:27"><expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="121:31" pos:end="121:71">/* "1" to prevent start code emulation */</comment>

		

        <comment type="block" pos:start="125:9" pos:end="125:46">/* This should be here if PLUSPTYPE */</comment>

        <expr_stmt pos:start="127:9" pos:end="127:31"><expr pos:start="127:9" pos:end="127:30"><call pos:start="127:9" pos:end="127:30"><name pos:start="127:9" pos:end="127:16">put_bits</name><argument_list pos:start="127:17" pos:end="127:30">(<argument pos:start="127:18" pos:end="127:23"><expr pos:start="127:18" pos:end="127:23"><operator pos:start="127:18" pos:end="127:18">&amp;</operator><name pos:start="127:19" pos:end="127:23"><name pos:start="127:19" pos:end="127:19">s</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:23">pb</name></name></expr></argument>, <argument pos:start="127:26" pos:end="127:26"><expr pos:start="127:26" pos:end="127:26"><literal type="number" pos:start="127:26" pos:end="127:26">1</literal></expr></argument>, <argument pos:start="127:29" pos:end="127:29"><expr pos:start="127:29" pos:end="127:29"><literal type="number" pos:start="127:29" pos:end="127:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="127:33" pos:end="127:78">/* Continuous Presence Multipoint mode: off */</comment>

		

		<if_stmt pos:start="131:17" pos:end="145:9"><if pos:start="131:17" pos:end="145:9">if <condition pos:start="131:20" pos:end="131:32">(<expr pos:start="131:21" pos:end="131:31"><name pos:start="131:21" pos:end="131:26">format</name> <operator pos:start="131:28" pos:end="131:29">==</operator> <literal type="number" pos:start="131:31" pos:end="131:31">7</literal></expr>)</condition> <block pos:start="131:34" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:48">

            <comment type="block" pos:start="133:13" pos:end="133:47">/* Custom Picture Format (CPFMT) */</comment>

		

            <expr_stmt pos:start="137:13" pos:end="137:33"><expr pos:start="137:13" pos:end="137:32"><call pos:start="137:13" pos:end="137:32"><name pos:start="137:13" pos:end="137:20">put_bits</name><argument_list pos:start="137:21" pos:end="137:32">(<argument pos:start="137:22" pos:end="137:27"><expr pos:start="137:22" pos:end="137:27"><operator pos:start="137:22" pos:end="137:22">&amp;</operator><name pos:start="137:23" pos:end="137:27"><name pos:start="137:23" pos:end="137:23">s</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:27">pb</name></name></expr></argument>,<argument pos:start="137:29" pos:end="137:29"><expr pos:start="137:29" pos:end="137:29"><literal type="number" pos:start="137:29" pos:end="137:29">4</literal></expr></argument>,<argument pos:start="137:31" pos:end="137:31"><expr pos:start="137:31" pos:end="137:31"><literal type="number" pos:start="137:31" pos:end="137:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:35" pos:end="137:77">/* Aspect ratio: CIF 12:11 (4:3) picture */</comment>

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><call pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:20">put_bits</name><argument_list pos:start="139:21" pos:end="139:50">(<argument pos:start="139:22" pos:end="139:27"><expr pos:start="139:22" pos:end="139:27"><operator pos:start="139:22" pos:end="139:22">&amp;</operator><name pos:start="139:23" pos:end="139:27"><name pos:start="139:23" pos:end="139:23">s</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:27">pb</name></name></expr></argument>,<argument pos:start="139:29" pos:end="139:29"><expr pos:start="139:29" pos:end="139:29"><literal type="number" pos:start="139:29" pos:end="139:29">9</literal></expr></argument>,<argument pos:start="139:31" pos:end="139:49"><expr pos:start="139:31" pos:end="139:49"><operator pos:start="139:31" pos:end="139:31">(</operator><name pos:start="139:32" pos:end="139:39"><name pos:start="139:32" pos:end="139:32">s</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:39">width</name></name> <operator pos:start="139:41" pos:end="139:42">&gt;&gt;</operator> <literal type="number" pos:start="139:44" pos:end="139:44">2</literal><operator pos:start="139:45" pos:end="139:45">)</operator> <operator pos:start="139:47" pos:end="139:47">-</operator> <literal type="number" pos:start="139:49" pos:end="139:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:33"><expr pos:start="141:13" pos:end="141:32"><call pos:start="141:13" pos:end="141:32"><name pos:start="141:13" pos:end="141:20">put_bits</name><argument_list pos:start="141:21" pos:end="141:32">(<argument pos:start="141:22" pos:end="141:27"><expr pos:start="141:22" pos:end="141:27"><operator pos:start="141:22" pos:end="141:22">&amp;</operator><name pos:start="141:23" pos:end="141:27"><name pos:start="141:23" pos:end="141:23">s</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:27">pb</name></name></expr></argument>,<argument pos:start="141:29" pos:end="141:29"><expr pos:start="141:29" pos:end="141:29"><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr></argument>,<argument pos:start="141:31" pos:end="141:31"><expr pos:start="141:31" pos:end="141:31"><literal type="number" pos:start="141:31" pos:end="141:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="141:35" pos:end="141:75">/* "1" to prevent start code emulation */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:48"><expr pos:start="143:13" pos:end="143:47"><call pos:start="143:13" pos:end="143:47"><name pos:start="143:13" pos:end="143:20">put_bits</name><argument_list pos:start="143:21" pos:end="143:47">(<argument pos:start="143:22" pos:end="143:27"><expr pos:start="143:22" pos:end="143:27"><operator pos:start="143:22" pos:end="143:22">&amp;</operator><name pos:start="143:23" pos:end="143:27"><name pos:start="143:23" pos:end="143:23">s</name><operator pos:start="143:24" pos:end="143:25">-&gt;</operator><name pos:start="143:26" pos:end="143:27">pb</name></name></expr></argument>,<argument pos:start="143:29" pos:end="143:29"><expr pos:start="143:29" pos:end="143:29"><literal type="number" pos:start="143:29" pos:end="143:29">9</literal></expr></argument>,<argument pos:start="143:31" pos:end="143:46"><expr pos:start="143:31" pos:end="143:46"><operator pos:start="143:31" pos:end="143:31">(</operator><name pos:start="143:32" pos:end="143:40"><name pos:start="143:32" pos:end="143:32">s</name><operator pos:start="143:33" pos:end="143:34">-&gt;</operator><name pos:start="143:35" pos:end="143:40">height</name></name> <operator pos:start="143:42" pos:end="143:43">&gt;&gt;</operator> <literal type="number" pos:start="143:45" pos:end="143:45">2</literal><operator pos:start="143:46" pos:end="143:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <comment type="block" pos:start="149:9" pos:end="149:67">/* Unlimited Unrestricted Motion Vectors Indicator (UUI) */</comment>

        <if_stmt pos:start="151:9" pos:end="153:33"><if pos:start="151:9" pos:end="153:33">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:19">umvplus</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:33"><block_content pos:start="153:13" pos:end="153:33">

            <expr_stmt pos:start="153:13" pos:end="153:33"><expr pos:start="153:13" pos:end="153:32"><call pos:start="153:13" pos:end="153:32"><name pos:start="153:13" pos:end="153:20">put_bits</name><argument_list pos:start="153:21" pos:end="153:32">(<argument pos:start="153:22" pos:end="153:27"><expr pos:start="153:22" pos:end="153:27"><operator pos:start="153:22" pos:end="153:22">&amp;</operator><name pos:start="153:23" pos:end="153:27"><name pos:start="153:23" pos:end="153:23">s</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:27">pb</name></name></expr></argument>,<argument pos:start="153:29" pos:end="153:29"><expr pos:start="153:29" pos:end="153:29"><literal type="number" pos:start="153:29" pos:end="153:29">1</literal></expr></argument>,<argument pos:start="153:31" pos:end="153:31"><expr pos:start="153:31" pos:end="153:31"><literal type="number" pos:start="153:31" pos:end="153:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="153:35" pos:end="153:75">/* Limited according tables of Annex D */</comment>

        <expr_stmt pos:start="155:9" pos:end="155:39"><expr pos:start="155:9" pos:end="155:38"><call pos:start="155:9" pos:end="155:38"><name pos:start="155:9" pos:end="155:16">put_bits</name><argument_list pos:start="155:17" pos:end="155:38">(<argument pos:start="155:18" pos:end="155:23"><expr pos:start="155:18" pos:end="155:23"><operator pos:start="155:18" pos:end="155:18">&amp;</operator><name pos:start="155:19" pos:end="155:23"><name pos:start="155:19" pos:end="155:19">s</name><operator pos:start="155:20" pos:end="155:21">-&gt;</operator><name pos:start="155:22" pos:end="155:23">pb</name></name></expr></argument>, <argument pos:start="155:26" pos:end="155:26"><expr pos:start="155:26" pos:end="155:26"><literal type="number" pos:start="155:26" pos:end="155:26">5</literal></expr></argument>, <argument pos:start="155:29" pos:end="155:37"><expr pos:start="155:29" pos:end="155:37"><name pos:start="155:29" pos:end="155:37"><name pos:start="155:29" pos:end="155:29">s</name><operator pos:start="155:30" pos:end="155:31">-&gt;</operator><name pos:start="155:32" pos:end="155:37">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="161:5" pos:end="161:27"><expr pos:start="161:5" pos:end="161:26"><call pos:start="161:5" pos:end="161:26"><name pos:start="161:5" pos:end="161:12">put_bits</name><argument_list pos:start="161:13" pos:end="161:26">(<argument pos:start="161:14" pos:end="161:19"><expr pos:start="161:14" pos:end="161:19"><operator pos:start="161:14" pos:end="161:14">&amp;</operator><name pos:start="161:15" pos:end="161:19"><name pos:start="161:15" pos:end="161:15">s</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:19">pb</name></name></expr></argument>, <argument pos:start="161:22" pos:end="161:22"><expr pos:start="161:22" pos:end="161:22"><literal type="number" pos:start="161:22" pos:end="161:22">1</literal></expr></argument>, <argument pos:start="161:25" pos:end="161:25"><expr pos:start="161:25" pos:end="161:25"><literal type="number" pos:start="161:25" pos:end="161:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="161:33" pos:end="161:44">/* no PEI */</comment>

</block_content>}</block></function>
</unit>
