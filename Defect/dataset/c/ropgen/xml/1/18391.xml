<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18391.c" pos:tabs="8"><function pos:start="1:1" pos:end="258:5"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">mlp_parse</name><parameter_list pos:start="1:21" pos:end="7:54">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:41">AVCodecParserContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:42"><decl pos:start="3:22" pos:end="3:42"><type pos:start="3:22" pos:end="3:42"><name pos:start="3:22" pos:end="3:35">AVCodecContext</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:42">avctx</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:44"><decl pos:start="5:22" pos:end="5:44"><type pos:start="5:22" pos:end="5:44"><specifier pos:start="5:22" pos:end="5:26">const</specifier> <name pos:start="5:28" pos:end="5:34">uint8_t</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier><modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:44">poutbuf</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:63"><decl pos:start="5:47" pos:end="5:63"><type pos:start="5:47" pos:end="5:63"><name pos:start="5:47" pos:end="5:49">int</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:63">poutbuf_size</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:39"><decl pos:start="7:22" pos:end="7:39"><type pos:start="7:22" pos:end="7:39"><specifier pos:start="7:22" pos:end="7:26">const</specifier> <name pos:start="7:28" pos:end="7:34">uint8_t</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:39">buf</name></decl></parameter>, <parameter pos:start="7:42" pos:end="7:53"><decl pos:start="7:42" pos:end="7:53"><type pos:start="7:42" pos:end="7:53"><name pos:start="7:42" pos:end="7:44">int</name></type> <name pos:start="7:46" pos:end="7:53">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="258:5">{<block_content pos:start="11:5" pos:end="256:47">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">MLPParseContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:23">mp</name> <init pos:start="11:25" pos:end="11:38">= <expr pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:38"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:20">sync_present</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:23">parity_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:16"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">p</name> <init pos:start="19:14" pos:end="19:16">= <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><operator pos:start="23:5" pos:end="23:5">*</operator><name pos:start="23:6" pos:end="23:17">poutbuf_size</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:16">buf_size</name> <operator pos:start="25:18" pos:end="25:19">==</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="75:5"><if pos:start="31:5" pos:end="75:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:11">mp</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:20">in_sync</name></name></expr>)</condition> <block pos:start="31:23" pos:end="75:5">{<block_content pos:start="37:9" pos:end="73:21">

        <comment type="line" pos:start="33:9" pos:end="33:49">// Not in sync - find a major sync header</comment>



        <for pos:start="37:9" pos:end="55:9">for <control pos:start="37:13" pos:end="37:38">(<init pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:18"><name pos:start="37:14" pos:end="37:14">i</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</init> <condition pos:start="37:21" pos:end="37:33"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:32">buf_size</name></expr>;</condition> <incr pos:start="37:35" pos:end="37:37"><expr pos:start="37:35" pos:end="37:37"><name pos:start="37:35" pos:end="37:35">i</name><operator pos:start="37:36" pos:end="37:37">++</operator></expr></incr>)</control> <block pos:start="37:40" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:13">

            <expr_stmt pos:start="39:13" pos:end="39:56"><expr pos:start="39:13" pos:end="39:55"><name pos:start="39:13" pos:end="39:24"><name pos:start="39:13" pos:end="39:14">mp</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:18">pc</name><operator pos:start="39:19" pos:end="39:19">.</operator><name pos:start="39:20" pos:end="39:24">state</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <operator pos:start="39:28" pos:end="39:28">(</operator><name pos:start="39:29" pos:end="39:40"><name pos:start="39:29" pos:end="39:30">mp</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:34">pc</name><operator pos:start="39:35" pos:end="39:35">.</operator><name pos:start="39:36" pos:end="39:40">state</name></name> <operator pos:start="39:42" pos:end="39:43">&lt;&lt;</operator> <literal type="number" pos:start="39:45" pos:end="39:45">8</literal><operator pos:start="39:46" pos:end="39:46">)</operator> <operator pos:start="39:48" pos:end="39:48">|</operator> <name pos:start="39:50" pos:end="39:55"><name pos:start="39:50" pos:end="39:52">buf</name><index pos:start="39:53" pos:end="39:55">[<expr pos:start="39:54" pos:end="39:54"><name pos:start="39:54" pos:end="39:54">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="53:13"><if pos:start="41:13" pos:end="53:13">if <condition pos:start="41:16" pos:end="45:38">(<expr pos:start="41:17" pos:end="45:37"><operator pos:start="41:17" pos:end="41:17">(</operator><name pos:start="41:18" pos:end="41:29"><name pos:start="41:18" pos:end="41:19">mp</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pc</name><operator pos:start="41:24" pos:end="41:24">.</operator><name pos:start="41:25" pos:end="41:29">state</name></name> <operator pos:start="41:31" pos:end="41:31">&amp;</operator> <literal type="number" pos:start="41:33" pos:end="41:42">0xfffffffe</literal><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:46">==</operator> <literal type="number" pos:start="41:48" pos:end="41:57">0xf8726fba</literal> <operator pos:start="41:59" pos:end="41:60">&amp;&amp;</operator>

                <comment type="line" pos:start="43:17" pos:end="43:76">// ignore if we do not have the data for the start of header</comment>

                <name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:18">mp</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:22">pc</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:28">index</name></name> <operator pos:start="45:30" pos:end="45:30">+</operator> <name pos:start="45:32" pos:end="45:32">i</name> <operator pos:start="45:34" pos:end="45:35">&gt;=</operator> <literal type="number" pos:start="45:37" pos:end="45:37">7</literal></expr>)</condition> <block pos:start="45:40" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:22">

                <expr_stmt pos:start="47:17" pos:end="47:32"><expr pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:18">mp</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:27">in_sync</name></name> <operator pos:start="47:29" pos:end="47:29">=</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:35"><expr pos:start="49:17" pos:end="49:34"><name pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:18">mp</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:30">bytes_left</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">0</literal></expr>;</expr_stmt>

                <break pos:start="51:17" pos:end="51:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:24"><name pos:start="59:14" pos:end="59:15">mp</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:24">in_sync</name></name></expr>)</condition> <block pos:start="59:27" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:28">

            <expr_stmt pos:start="61:13" pos:end="61:70"><expr pos:start="61:13" pos:end="61:69"><call pos:start="61:13" pos:end="61:69"><name pos:start="61:13" pos:end="61:28">ff_combine_frame</name><argument_list pos:start="61:29" pos:end="61:69">(<argument pos:start="61:30" pos:end="61:36"><expr pos:start="61:30" pos:end="61:36"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:32">mp</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:36">pc</name></name></expr></argument>, <argument pos:start="61:39" pos:end="61:51"><expr pos:start="61:39" pos:end="61:51"><name pos:start="61:39" pos:end="61:51">END_NOT_FOUND</name></expr></argument>, <argument pos:start="61:54" pos:end="61:57"><expr pos:start="61:54" pos:end="61:57"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:57">buf</name></expr></argument>, <argument pos:start="61:60" pos:end="61:68"><expr pos:start="61:60" pos:end="61:68"><operator pos:start="61:60" pos:end="61:60">&amp;</operator><name pos:start="61:61" pos:end="61:68">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:28">return <expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:58"><expr pos:start="69:9" pos:end="69:57"><call pos:start="69:9" pos:end="69:57"><name pos:start="69:9" pos:end="69:24">ff_combine_frame</name><argument_list pos:start="69:25" pos:end="69:57">(<argument pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:32"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:32"><name pos:start="69:27" pos:end="69:28">mp</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:32">pc</name></name></expr></argument>, <argument pos:start="69:35" pos:end="69:39"><expr pos:start="69:35" pos:end="69:39"><name pos:start="69:35" pos:end="69:35">i</name> <operator pos:start="69:37" pos:end="69:37">-</operator> <literal type="number" pos:start="69:39" pos:end="69:39">7</literal></expr></argument>, <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><operator pos:start="69:42" pos:end="69:42">&amp;</operator><name pos:start="69:43" pos:end="69:45">buf</name></expr></argument>, <argument pos:start="69:48" pos:end="69:56"><expr pos:start="69:48" pos:end="69:56"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:56">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="73:9" pos:end="73:21">return <expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:16">i</name> <operator pos:start="73:18" pos:end="73:18">-</operator> <literal type="number" pos:start="73:20" pos:end="73:20">7</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="119:5"><if pos:start="79:5" pos:end="119:5">if <condition pos:start="79:8" pos:end="79:28">(<expr pos:start="79:9" pos:end="79:27"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:10">mp</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:22">bytes_left</name></name> <operator pos:start="79:24" pos:end="79:25">==</operator> <literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>)</condition> <block pos:start="79:30" pos:end="119:5">{<block_content pos:start="87:9" pos:end="117:39">

        <comment type="line" pos:start="81:9" pos:end="81:37">// Find length of this packet</comment>



        <comment type="block" pos:start="85:9" pos:end="85:62">/* Copy overread bytes from last frame into buffer. */</comment>

        <for pos:start="87:9" pos:end="91:9">for<control pos:start="87:12" pos:end="87:51">(<init pos:start="87:13" pos:end="87:13">;</init> <condition pos:start="87:15" pos:end="87:32"><expr pos:start="87:15" pos:end="87:31"><name pos:start="87:15" pos:end="87:29"><name pos:start="87:15" pos:end="87:16">mp</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:20">pc</name><operator pos:start="87:21" pos:end="87:21">.</operator><name pos:start="87:22" pos:end="87:29">overread</name></name><operator pos:start="87:30" pos:end="87:30">&gt;</operator><literal type="number" pos:start="87:31" pos:end="87:31">0</literal></expr>;</condition> <incr pos:start="87:34" pos:end="87:50"><expr pos:start="87:34" pos:end="87:50"><name pos:start="87:34" pos:end="87:48"><name pos:start="87:34" pos:end="87:35">mp</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:39">pc</name><operator pos:start="87:40" pos:end="87:40">.</operator><name pos:start="87:41" pos:end="87:48">overread</name></name><operator pos:start="87:49" pos:end="87:50">--</operator></expr></incr>)</control> <block pos:start="87:53" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:82">

            <expr_stmt pos:start="89:13" pos:end="89:82"><expr pos:start="89:13" pos:end="89:81"><name pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:14">mp</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:18">pc</name><operator pos:start="89:19" pos:end="89:19">.</operator><name pos:start="89:20" pos:end="89:25">buffer</name><index pos:start="89:26" pos:end="89:41">[<expr pos:start="89:27" pos:end="89:40"><name pos:start="89:27" pos:end="89:38"><name pos:start="89:27" pos:end="89:28">mp</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:32">pc</name><operator pos:start="89:33" pos:end="89:33">.</operator><name pos:start="89:34" pos:end="89:38">index</name></name><operator pos:start="89:39" pos:end="89:40">++</operator></expr>]</index></name><operator pos:start="89:42" pos:end="89:42">=</operator> <name pos:start="89:44" pos:end="89:81"><name pos:start="89:44" pos:end="89:45">mp</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:49">pc</name><operator pos:start="89:50" pos:end="89:50">.</operator><name pos:start="89:51" pos:end="89:56">buffer</name><index pos:start="89:57" pos:end="89:81">[<expr pos:start="89:58" pos:end="89:80"><name pos:start="89:58" pos:end="89:78"><name pos:start="89:58" pos:end="89:59">mp</name><operator pos:start="89:60" pos:end="89:61">-&gt;</operator><name pos:start="89:62" pos:end="89:63">pc</name><operator pos:start="89:64" pos:end="89:64">.</operator><name pos:start="89:65" pos:end="89:78">overread_index</name></name><operator pos:start="89:79" pos:end="89:80">++</operator></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="95:9" pos:end="101:9"><if pos:start="95:9" pos:end="101:9">if <condition pos:start="95:12" pos:end="95:40">(<expr pos:start="95:13" pos:end="95:39"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:14">mp</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:18">pc</name><operator pos:start="95:19" pos:end="95:19">.</operator><name pos:start="95:20" pos:end="95:24">index</name></name> <operator pos:start="95:26" pos:end="95:26">+</operator> <name pos:start="95:28" pos:end="95:35">buf_size</name> <operator pos:start="95:37" pos:end="95:37">&lt;</operator> <literal type="number" pos:start="95:39" pos:end="95:39">2</literal></expr>)</condition> <block pos:start="95:42" pos:end="101:9">{<block_content pos:start="97:13" pos:end="99:28">

            <expr_stmt pos:start="97:13" pos:end="97:70"><expr pos:start="97:13" pos:end="97:69"><call pos:start="97:13" pos:end="97:69"><name pos:start="97:13" pos:end="97:28">ff_combine_frame</name><argument_list pos:start="97:29" pos:end="97:69">(<argument pos:start="97:30" pos:end="97:36"><expr pos:start="97:30" pos:end="97:36"><operator pos:start="97:30" pos:end="97:30">&amp;</operator><name pos:start="97:31" pos:end="97:36"><name pos:start="97:31" pos:end="97:32">mp</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:36">pc</name></name></expr></argument>, <argument pos:start="97:39" pos:end="97:51"><expr pos:start="97:39" pos:end="97:51"><name pos:start="97:39" pos:end="97:51">END_NOT_FOUND</name></expr></argument>, <argument pos:start="97:54" pos:end="97:57"><expr pos:start="97:54" pos:end="97:57"><operator pos:start="97:54" pos:end="97:54">&amp;</operator><name pos:start="97:55" pos:end="97:57">buf</name></expr></argument>, <argument pos:start="97:60" pos:end="97:68"><expr pos:start="97:60" pos:end="97:68"><operator pos:start="97:60" pos:end="97:60">&amp;</operator><name pos:start="97:61" pos:end="97:68">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="99:13" pos:end="99:28">return <expr pos:start="99:20" pos:end="99:27"><name pos:start="99:20" pos:end="99:27">buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="107:86"><expr pos:start="105:9" pos:end="107:85"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:10">mp</name><operator pos:start="105:11" pos:end="105:12">-&gt;</operator><name pos:start="105:13" pos:end="105:22">bytes_left</name></name> <operator pos:start="105:24" pos:end="105:24">=</operator> <operator pos:start="105:26" pos:end="105:26">(</operator><operator pos:start="105:27" pos:end="105:27">(</operator><ternary pos:start="105:28" pos:end="105:71"><condition pos:start="105:28" pos:end="105:45"><expr pos:start="105:28" pos:end="105:43"><name pos:start="105:28" pos:end="105:39"><name pos:start="105:28" pos:end="105:29">mp</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:33">pc</name><operator pos:start="105:34" pos:end="105:34">.</operator><name pos:start="105:35" pos:end="105:39">index</name></name> <operator pos:start="105:41" pos:end="105:41">&gt;</operator> <literal type="number" pos:start="105:43" pos:end="105:43">0</literal></expr> ?</condition><then pos:start="105:47" pos:end="105:62"> <expr pos:start="105:47" pos:end="105:62"><name pos:start="105:47" pos:end="105:62"><name pos:start="105:47" pos:end="105:48">mp</name><operator pos:start="105:49" pos:end="105:50">-&gt;</operator><name pos:start="105:51" pos:end="105:52">pc</name><operator pos:start="105:53" pos:end="105:53">.</operator><name pos:start="105:54" pos:end="105:59">buffer</name><index pos:start="105:60" pos:end="105:62">[<expr pos:start="105:61" pos:end="105:61"><literal type="number" pos:start="105:61" pos:end="105:61">0</literal></expr>]</index></name></expr> </then><else pos:start="105:64" pos:end="105:71">: <expr pos:start="105:66" pos:end="105:71"><name pos:start="105:66" pos:end="105:71"><name pos:start="105:66" pos:end="105:68">buf</name><index pos:start="105:69" pos:end="105:71">[<expr pos:start="105:70" pos:end="105:70"><literal type="number" pos:start="105:70" pos:end="105:70">0</literal></expr>]</index></name></expr></else></ternary><operator pos:start="105:72" pos:end="105:72">)</operator> <operator pos:start="105:74" pos:end="105:75">&lt;&lt;</operator> <literal type="number" pos:start="105:77" pos:end="105:77">8</literal><operator pos:start="105:78" pos:end="105:78">)</operator>

                       <operator pos:start="107:24" pos:end="107:24">|</operator>  <operator pos:start="107:27" pos:end="107:27">(</operator><ternary pos:start="107:28" pos:end="107:84"><condition pos:start="107:28" pos:end="107:45"><expr pos:start="107:28" pos:end="107:43"><name pos:start="107:28" pos:end="107:39"><name pos:start="107:28" pos:end="107:29">mp</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:33">pc</name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:39">index</name></name> <operator pos:start="107:41" pos:end="107:41">&gt;</operator> <literal type="number" pos:start="107:43" pos:end="107:43">1</literal></expr> ?</condition><then pos:start="107:47" pos:end="107:62"> <expr pos:start="107:47" pos:end="107:62"><name pos:start="107:47" pos:end="107:62"><name pos:start="107:47" pos:end="107:48">mp</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:52">pc</name><operator pos:start="107:53" pos:end="107:53">.</operator><name pos:start="107:54" pos:end="107:59">buffer</name><index pos:start="107:60" pos:end="107:62">[<expr pos:start="107:61" pos:end="107:61"><literal type="number" pos:start="107:61" pos:end="107:61">1</literal></expr>]</index></name></expr> </then><else pos:start="107:64" pos:end="107:84">: <expr pos:start="107:66" pos:end="107:84"><name pos:start="107:66" pos:end="107:84"><name pos:start="107:66" pos:end="107:68">buf</name><index pos:start="107:69" pos:end="107:84">[<expr pos:start="107:70" pos:end="107:83"><literal type="number" pos:start="107:70" pos:end="107:71">1</literal><operator pos:start="107:71" pos:end="107:71">-</operator><name pos:start="107:72" pos:end="107:83"><name pos:start="107:72" pos:end="107:73">mp</name><operator pos:start="107:74" pos:end="107:75">-&gt;</operator><name pos:start="107:76" pos:end="107:77">pc</name><operator pos:start="107:78" pos:end="107:78">.</operator><name pos:start="107:79" pos:end="107:83">index</name></name></expr>]</index></name></expr></else></ternary><operator pos:start="107:85" pos:end="107:85">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:54"><expr pos:start="109:9" pos:end="109:53"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:10">mp</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:22">bytes_left</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <operator pos:start="109:26" pos:end="109:26">(</operator><name pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:28">mp</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:40">bytes_left</name></name> <operator pos:start="109:42" pos:end="109:42">&amp;</operator> <literal type="number" pos:start="109:44" pos:end="109:48">0xfff</literal><operator pos:start="109:49" pos:end="109:49">)</operator> <operator pos:start="109:51" pos:end="109:51">*</operator> <literal type="number" pos:start="109:53" pos:end="109:53">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:32">(<expr pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:26"><name pos:start="111:13" pos:end="111:14">mp</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:26">bytes_left</name></name> <operator pos:start="111:28" pos:end="111:29">&lt;=</operator> <literal type="number" pos:start="111:31" pos:end="111:31">0</literal></expr>)</condition> <block pos:start="111:34" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:27"> <comment type="line" pos:start="111:36" pos:end="111:59">// prevent infinite loop</comment>

            <goto pos:start="113:13" pos:end="113:27">goto <name pos:start="113:18" pos:end="113:26">lost_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:22"><name pos:start="117:9" pos:end="117:10">mp</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:22">bytes_left</name></name> <operator pos:start="117:24" pos:end="117:25">-=</operator> <name pos:start="117:27" pos:end="117:38"><name pos:start="117:27" pos:end="117:28">mp</name><operator pos:start="117:29" pos:end="117:30">-&gt;</operator><name pos:start="117:31" pos:end="117:32">pc</name><operator pos:start="117:33" pos:end="117:33">.</operator><name pos:start="117:34" pos:end="117:38">index</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:72"><expr pos:start="123:5" pos:end="123:71"><name pos:start="123:5" pos:end="123:8">next</name> <operator pos:start="123:10" pos:end="123:10">=</operator> <ternary pos:start="123:12" pos:end="123:71"><condition pos:start="123:12" pos:end="123:40"><expr pos:start="123:12" pos:end="123:38"><operator pos:start="123:12" pos:end="123:12">(</operator><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:14">mp</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:26">bytes_left</name></name> <operator pos:start="123:28" pos:end="123:28">&gt;</operator> <name pos:start="123:30" pos:end="123:37">buf_size</name><operator pos:start="123:38" pos:end="123:38">)</operator></expr> ?</condition><then pos:start="123:42" pos:end="123:54"> <expr pos:start="123:42" pos:end="123:54"><name pos:start="123:42" pos:end="123:54">END_NOT_FOUND</name></expr> </then><else pos:start="123:56" pos:end="123:71">: <expr pos:start="123:58" pos:end="123:71"><name pos:start="123:58" pos:end="123:71"><name pos:start="123:58" pos:end="123:59">mp</name><operator pos:start="123:60" pos:end="123:61">-&gt;</operator><name pos:start="123:62" pos:end="123:71">bytes_left</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:61">(<expr pos:start="127:9" pos:end="127:60"><call pos:start="127:9" pos:end="127:56"><name pos:start="127:9" pos:end="127:24">ff_combine_frame</name><argument_list pos:start="127:25" pos:end="127:56">(<argument pos:start="127:26" pos:end="127:32"><expr pos:start="127:26" pos:end="127:32"><operator pos:start="127:26" pos:end="127:26">&amp;</operator><name pos:start="127:27" pos:end="127:32"><name pos:start="127:27" pos:end="127:28">mp</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:32">pc</name></name></expr></argument>, <argument pos:start="127:35" pos:end="127:38"><expr pos:start="127:35" pos:end="127:38"><name pos:start="127:35" pos:end="127:38">next</name></expr></argument>, <argument pos:start="127:41" pos:end="127:44"><expr pos:start="127:41" pos:end="127:44"><operator pos:start="127:41" pos:end="127:41">&amp;</operator><name pos:start="127:42" pos:end="127:44">buf</name></expr></argument>, <argument pos:start="127:47" pos:end="127:55"><expr pos:start="127:47" pos:end="127:55"><operator pos:start="127:47" pos:end="127:47">&amp;</operator><name pos:start="127:48" pos:end="127:55">buf_size</name></expr></argument>)</argument_list></call> <operator pos:start="127:58" pos:end="127:58">&lt;</operator> <literal type="number" pos:start="127:60" pos:end="127:60">0</literal></expr>)</condition> <block pos:start="127:63" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:24">

        <expr_stmt pos:start="129:9" pos:end="129:35"><expr pos:start="129:9" pos:end="129:34"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:10">mp</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:22">bytes_left</name></name> <operator pos:start="129:24" pos:end="129:25">-=</operator> <name pos:start="129:27" pos:end="129:34">buf_size</name></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:24">return <expr pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:23">buf_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:23"><expr pos:start="137:5" pos:end="137:22"><name pos:start="137:5" pos:end="137:18"><name pos:start="137:5" pos:end="137:6">mp</name><operator pos:start="137:7" pos:end="137:8">-&gt;</operator><name pos:start="137:9" pos:end="137:18">bytes_left</name></name> <operator pos:start="137:20" pos:end="137:20">=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:65"><expr pos:start="141:5" pos:end="141:64"><name pos:start="141:5" pos:end="141:16">sync_present</name> <operator pos:start="141:18" pos:end="141:18">=</operator> <operator pos:start="141:20" pos:end="141:20">(</operator><call pos:start="141:21" pos:end="141:36"><name pos:start="141:21" pos:end="141:27">AV_RB32</name><argument_list pos:start="141:28" pos:end="141:36">(<argument pos:start="141:29" pos:end="141:35"><expr pos:start="141:29" pos:end="141:35"><name pos:start="141:29" pos:end="141:31">buf</name> <operator pos:start="141:33" pos:end="141:33">+</operator> <literal type="number" pos:start="141:35" pos:end="141:35">4</literal></expr></argument>)</argument_list></call> <operator pos:start="141:38" pos:end="141:38">&amp;</operator> <literal type="number" pos:start="141:40" pos:end="141:49">0xfffffffe</literal><operator pos:start="141:50" pos:end="141:50">)</operator> <operator pos:start="141:52" pos:end="141:53">==</operator> <literal type="number" pos:start="141:55" pos:end="141:64">0xf8726fba</literal></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="246:9"><if pos:start="145:5" pos:end="185:5">if <condition pos:start="145:8" pos:end="145:22">(<expr pos:start="145:9" pos:end="145:21"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:21">sync_present</name></expr>)</condition> <block pos:start="145:24" pos:end="185:5">{<block_content pos:start="155:9" pos:end="183:9">

        <comment type="block" pos:start="147:9" pos:end="149:76">/* The first nibble of a frame is a parity check of the 4-byte

         * access unit header and all the 2- or 4-byte substream headers. */</comment>

        <comment type="line" pos:start="151:9" pos:end="151:75">// Only check when this isn't a sync frame - syncs have a checksum.</comment>



        <expr_stmt pos:start="155:9" pos:end="155:24"><expr pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:19">parity_bits</name> <operator pos:start="155:21" pos:end="155:21">=</operator> <literal type="number" pos:start="155:23" pos:end="155:23">0</literal></expr>;</expr_stmt>

        <for pos:start="157:9" pos:end="173:9">for <control pos:start="157:13" pos:end="157:49">(<init pos:start="157:14" pos:end="157:20"><expr pos:start="157:14" pos:end="157:19"><name pos:start="157:14" pos:end="157:14">i</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <operator pos:start="157:18" pos:end="157:18">-</operator><literal type="number" pos:start="157:19" pos:end="157:19">1</literal></expr>;</init> <condition pos:start="157:22" pos:end="157:44"><expr pos:start="157:22" pos:end="157:43"><name pos:start="157:22" pos:end="157:22">i</name> <operator pos:start="157:24" pos:end="157:24">&lt;</operator> <name pos:start="157:26" pos:end="157:43"><name pos:start="157:26" pos:end="157:27">mp</name><operator pos:start="157:28" pos:end="157:29">-&gt;</operator><name pos:start="157:30" pos:end="157:43">num_substreams</name></name></expr>;</condition> <incr pos:start="157:46" pos:end="157:48"><expr pos:start="157:46" pos:end="157:48"><name pos:start="157:46" pos:end="157:46">i</name><operator pos:start="157:47" pos:end="157:48">++</operator></expr></incr>)</control> <block pos:start="157:51" pos:end="173:9">{<block_content pos:start="159:13" pos:end="171:13">

            <expr_stmt pos:start="159:13" pos:end="159:36"><expr pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:23">parity_bits</name> <operator pos:start="159:25" pos:end="159:26">^=</operator> <name pos:start="159:28" pos:end="159:35"><name pos:start="159:28" pos:end="159:30">buf</name><index pos:start="159:31" pos:end="159:35">[<expr pos:start="159:32" pos:end="159:34"><name pos:start="159:32" pos:end="159:32">p</name><operator pos:start="159:33" pos:end="159:34">++</operator></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:23">parity_bits</name> <operator pos:start="161:25" pos:end="161:26">^=</operator> <name pos:start="161:28" pos:end="161:35"><name pos:start="161:28" pos:end="161:30">buf</name><index pos:start="161:31" pos:end="161:35">[<expr pos:start="161:32" pos:end="161:34"><name pos:start="161:32" pos:end="161:32">p</name><operator pos:start="161:33" pos:end="161:34">++</operator></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="165:13" pos:end="171:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:41">(<expr pos:start="165:17" pos:end="165:40"><name pos:start="165:17" pos:end="165:17">i</name> <operator pos:start="165:19" pos:end="165:19">&lt;</operator> <literal type="number" pos:start="165:21" pos:end="165:21">0</literal> <operator pos:start="165:23" pos:end="165:24">||</operator> <name pos:start="165:26" pos:end="165:33"><name pos:start="165:26" pos:end="165:28">buf</name><index pos:start="165:29" pos:end="165:33">[<expr pos:start="165:30" pos:end="165:32"><name pos:start="165:30" pos:end="165:30">p</name><operator pos:start="165:31" pos:end="165:31">-</operator><literal type="number" pos:start="165:32" pos:end="165:32">2</literal></expr>]</index></name> <operator pos:start="165:35" pos:end="165:35">&amp;</operator> <literal type="number" pos:start="165:37" pos:end="165:40">0x80</literal></expr>)</condition> <block pos:start="165:43" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:40">

                <expr_stmt pos:start="167:17" pos:end="167:40"><expr pos:start="167:17" pos:end="167:39"><name pos:start="167:17" pos:end="167:27">parity_bits</name> <operator pos:start="167:29" pos:end="167:30">^=</operator> <name pos:start="167:32" pos:end="167:39"><name pos:start="167:32" pos:end="167:34">buf</name><index pos:start="167:35" pos:end="167:39">[<expr pos:start="167:36" pos:end="167:38"><name pos:start="167:36" pos:end="167:36">p</name><operator pos:start="167:37" pos:end="167:38">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:40"><expr pos:start="169:17" pos:end="169:39"><name pos:start="169:17" pos:end="169:27">parity_bits</name> <operator pos:start="169:29" pos:end="169:30">^=</operator> <name pos:start="169:32" pos:end="169:39"><name pos:start="169:32" pos:end="169:34">buf</name><index pos:start="169:35" pos:end="169:39">[<expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:36">p</name><operator pos:start="169:37" pos:end="169:38">++</operator></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="177:9" pos:end="183:9"><if pos:start="177:9" pos:end="183:9">if <condition pos:start="177:12" pos:end="177:62">(<expr pos:start="177:13" pos:end="177:61"><operator pos:start="177:13" pos:end="177:13">(</operator><operator pos:start="177:14" pos:end="177:14">(</operator><operator pos:start="177:15" pos:end="177:15">(</operator><name pos:start="177:16" pos:end="177:26">parity_bits</name> <operator pos:start="177:28" pos:end="177:29">&gt;&gt;</operator> <literal type="number" pos:start="177:31" pos:end="177:31">4</literal><operator pos:start="177:32" pos:end="177:32">)</operator> <operator pos:start="177:34" pos:end="177:34">^</operator> <name pos:start="177:36" pos:end="177:46">parity_bits</name><operator pos:start="177:47" pos:end="177:47">)</operator> <operator pos:start="177:49" pos:end="177:49">&amp;</operator> <literal type="number" pos:start="177:51" pos:end="177:53">0xF</literal><operator pos:start="177:54" pos:end="177:54">)</operator> <operator pos:start="177:56" pos:end="177:57">!=</operator> <literal type="number" pos:start="177:59" pos:end="177:61">0xF</literal></expr>)</condition> <block pos:start="177:64" pos:end="183:9">{<block_content pos:start="179:13" pos:end="181:27">

            <expr_stmt pos:start="179:13" pos:end="179:75"><expr pos:start="179:13" pos:end="179:74"><call pos:start="179:13" pos:end="179:74"><name pos:start="179:13" pos:end="179:18">av_log</name><argument_list pos:start="179:19" pos:end="179:74">(<argument pos:start="179:20" pos:end="179:24"><expr pos:start="179:20" pos:end="179:24"><name pos:start="179:20" pos:end="179:24">avctx</name></expr></argument>, <argument pos:start="179:27" pos:end="179:37"><expr pos:start="179:27" pos:end="179:37"><name pos:start="179:27" pos:end="179:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="179:40" pos:end="179:73"><expr pos:start="179:40" pos:end="179:73"><literal type="string" pos:start="179:40" pos:end="179:73">"mlpparse: Parity check failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="181:13" pos:end="181:27">goto <name pos:start="181:18" pos:end="181:26">lost_sync</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="185:7" pos:end="246:9">else <block pos:start="185:12" pos:end="246:9">{<block_content pos:start="187:9" pos:end="244:9">

        <decl_stmt pos:start="187:9" pos:end="187:25"><decl pos:start="187:9" pos:end="187:24"><type pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:21">GetBitContext</name></type> <name pos:start="187:23" pos:end="187:24">gb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="189:25"><decl pos:start="189:9" pos:end="189:24"><type pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:21">MLPHeaderInfo</name></type> <name pos:start="189:23" pos:end="189:24">mh</name></decl>;</decl_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:57"><expr pos:start="193:9" pos:end="193:56"><call pos:start="193:9" pos:end="193:56"><name pos:start="193:9" pos:end="193:21">init_get_bits</name><argument_list pos:start="193:22" pos:end="193:56">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><operator pos:start="193:23" pos:end="193:23">&amp;</operator><name pos:start="193:24" pos:end="193:25">gb</name></expr></argument>, <argument pos:start="193:28" pos:end="193:34"><expr pos:start="193:28" pos:end="193:34"><name pos:start="193:28" pos:end="193:30">buf</name> <operator pos:start="193:32" pos:end="193:32">+</operator> <literal type="number" pos:start="193:34" pos:end="193:34">4</literal></expr></argument>, <argument pos:start="193:37" pos:end="193:55"><expr pos:start="193:37" pos:end="193:55"><operator pos:start="193:37" pos:end="193:37">(</operator><name pos:start="193:38" pos:end="193:45">buf_size</name> <operator pos:start="193:47" pos:end="193:47">-</operator> <literal type="number" pos:start="193:49" pos:end="193:49">4</literal><operator pos:start="193:50" pos:end="193:50">)</operator> <operator pos:start="193:52" pos:end="193:53">&lt;&lt;</operator> <literal type="number" pos:start="193:55" pos:end="193:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="195:9" pos:end="197:27"><if pos:start="195:9" pos:end="197:27">if <condition pos:start="195:12" pos:end="195:56">(<expr pos:start="195:13" pos:end="195:55"><call pos:start="195:13" pos:end="195:51"><name pos:start="195:13" pos:end="195:34">ff_mlp_read_major_sync</name><argument_list pos:start="195:35" pos:end="195:51">(<argument pos:start="195:36" pos:end="195:40"><expr pos:start="195:36" pos:end="195:40"><name pos:start="195:36" pos:end="195:40">avctx</name></expr></argument>, <argument pos:start="195:43" pos:end="195:45"><expr pos:start="195:43" pos:end="195:45"><operator pos:start="195:43" pos:end="195:43">&amp;</operator><name pos:start="195:44" pos:end="195:45">mh</name></expr></argument>, <argument pos:start="195:48" pos:end="195:50"><expr pos:start="195:48" pos:end="195:50"><operator pos:start="195:48" pos:end="195:48">&amp;</operator><name pos:start="195:49" pos:end="195:50">gb</name></expr></argument>)</argument_list></call> <operator pos:start="195:53" pos:end="195:53">&lt;</operator> <literal type="number" pos:start="195:55" pos:end="195:55">0</literal></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:27"><block_content pos:start="197:13" pos:end="197:27">

            <goto pos:start="197:13" pos:end="197:27">goto <name pos:start="197:18" pos:end="197:26">lost_sync</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="201:9" pos:end="201:52"><expr pos:start="201:9" pos:end="201:51"><name pos:start="201:9" pos:end="201:34"><name pos:start="201:9" pos:end="201:13">avctx</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:34">bits_per_raw_sample</name></name> <operator pos:start="201:36" pos:end="201:36">=</operator> <name pos:start="201:38" pos:end="201:51"><name pos:start="201:38" pos:end="201:39">mh</name><operator pos:start="201:40" pos:end="201:40">.</operator><name pos:start="201:41" pos:end="201:51">group1_bits</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="209:50"><if pos:start="203:9" pos:end="205:50">if <condition pos:start="203:12" pos:end="203:44">(<expr pos:start="203:13" pos:end="203:43"><name pos:start="203:13" pos:end="203:38"><name pos:start="203:13" pos:end="203:17">avctx</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:38">bits_per_raw_sample</name></name> <operator pos:start="203:40" pos:end="203:40">&gt;</operator> <literal type="number" pos:start="203:42" pos:end="203:43">16</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:50"><block_content pos:start="205:13" pos:end="205:50">

            <expr_stmt pos:start="205:13" pos:end="205:50"><expr pos:start="205:13" pos:end="205:49"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:17">avctx</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:29">sample_fmt</name></name> <operator pos:start="205:31" pos:end="205:31">=</operator> <name pos:start="205:33" pos:end="205:49">AV_SAMPLE_FMT_S32</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="207:9" pos:end="209:50">else<block type="pseudo" pos:start="209:13" pos:end="209:50"><block_content pos:start="209:13" pos:end="209:50">

            <expr_stmt pos:start="209:13" pos:end="209:50"><expr pos:start="209:13" pos:end="209:49"><name pos:start="209:13" pos:end="209:29"><name pos:start="209:13" pos:end="209:17">avctx</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:29">sample_fmt</name></name> <operator pos:start="209:31" pos:end="209:31">=</operator> <name pos:start="209:33" pos:end="209:49">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:50"><expr pos:start="211:9" pos:end="211:49"><name pos:start="211:9" pos:end="211:26"><name pos:start="211:9" pos:end="211:13">avctx</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:26">sample_rate</name></name> <operator pos:start="211:28" pos:end="211:28">=</operator> <name pos:start="211:30" pos:end="211:49"><name pos:start="211:30" pos:end="211:31">mh</name><operator pos:start="211:32" pos:end="211:32">.</operator><name pos:start="211:33" pos:end="211:49">group1_samplerate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:42"><expr pos:start="213:9" pos:end="213:41"><name pos:start="213:9" pos:end="213:19"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:19">duration</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:41"><name pos:start="213:23" pos:end="213:24">mh</name><operator pos:start="213:25" pos:end="213:25">.</operator><name pos:start="213:26" pos:end="213:41">access_unit_size</name></name></expr>;</expr_stmt>




        <if_stmt pos:start="218:9" pos:end="244:9"><if pos:start="218:9" pos:end="226:9">if <condition pos:start="218:12" pos:end="218:35">(<expr pos:start="218:13" pos:end="218:34"><name pos:start="218:13" pos:end="218:26"><name pos:start="218:13" pos:end="218:14">mh</name><operator pos:start="218:15" pos:end="218:15">.</operator><name pos:start="218:16" pos:end="218:26">stream_type</name></name> <operator pos:start="218:28" pos:end="218:29">==</operator> <literal type="number" pos:start="218:31" pos:end="218:34">0xbb</literal></expr>)</condition> <block pos:start="218:37" pos:end="226:9">{<block_content pos:start="222:13" pos:end="224:67">

            <comment type="block" pos:start="220:13" pos:end="220:28">/* MLP stream */</comment>

            <expr_stmt pos:start="222:13" pos:end="222:60"><expr pos:start="222:13" pos:end="222:59"><name pos:start="222:13" pos:end="222:27"><name pos:start="222:13" pos:end="222:17">avctx</name><operator pos:start="222:18" pos:end="222:19">-&gt;</operator><name pos:start="222:20" pos:end="222:27">channels</name></name> <operator pos:start="222:29" pos:end="222:29">=</operator> <name pos:start="222:31" pos:end="222:59"><name pos:start="222:31" pos:end="222:42">mlp_channels</name><index pos:start="222:43" pos:end="222:59">[<expr pos:start="222:44" pos:end="222:58"><name pos:start="222:44" pos:end="222:58"><name pos:start="222:44" pos:end="222:45">mh</name><operator pos:start="222:46" pos:end="222:46">.</operator><name pos:start="222:47" pos:end="222:58">channels_mlp</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="224:13" pos:end="224:67"><expr pos:start="224:13" pos:end="224:66"><name pos:start="224:13" pos:end="224:33"><name pos:start="224:13" pos:end="224:17">avctx</name><operator pos:start="224:18" pos:end="224:19">-&gt;</operator><name pos:start="224:20" pos:end="224:33">channel_layout</name></name> <operator pos:start="224:35" pos:end="224:35">=</operator> <name pos:start="224:37" pos:end="224:66"><name pos:start="224:37" pos:end="224:49">ff_mlp_layout</name><index pos:start="224:50" pos:end="224:66">[<expr pos:start="224:51" pos:end="224:65"><name pos:start="224:51" pos:end="224:65"><name pos:start="224:51" pos:end="224:52">mh</name><operator pos:start="224:53" pos:end="224:53">.</operator><name pos:start="224:54" pos:end="224:65">channels_mlp</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="226:11" pos:end="244:9">else <block pos:start="226:16" pos:end="244:9">{<block_content pos:start="230:13" pos:end="242:13"> <comment type="block" pos:start="226:18" pos:end="226:45">/* mh.stream_type == 0xba */</comment>

            <comment type="block" pos:start="228:13" pos:end="228:31">/* TrueHD stream */</comment>

            <if_stmt pos:start="230:13" pos:end="242:13"><if pos:start="230:13" pos:end="236:13">if <condition pos:start="230:16" pos:end="230:40">(<expr pos:start="230:17" pos:end="230:39"><name pos:start="230:17" pos:end="230:39"><name pos:start="230:17" pos:end="230:18">mh</name><operator pos:start="230:19" pos:end="230:19">.</operator><name pos:start="230:20" pos:end="230:39">channels_thd_stream2</name></name></expr>)</condition> <block pos:start="230:42" pos:end="236:13">{<block_content pos:start="232:17" pos:end="234:82">

                <expr_stmt pos:start="232:17" pos:end="232:75"><expr pos:start="232:17" pos:end="232:74"><name pos:start="232:17" pos:end="232:31"><name pos:start="232:17" pos:end="232:21">avctx</name><operator pos:start="232:22" pos:end="232:23">-&gt;</operator><name pos:start="232:24" pos:end="232:31">channels</name></name> <operator pos:start="232:33" pos:end="232:33">=</operator> <call pos:start="232:35" pos:end="232:74"><name pos:start="232:35" pos:end="232:49">truehd_channels</name><argument_list pos:start="232:50" pos:end="232:74">(<argument pos:start="232:51" pos:end="232:73"><expr pos:start="232:51" pos:end="232:73"><name pos:start="232:51" pos:end="232:73"><name pos:start="232:51" pos:end="232:52">mh</name><operator pos:start="232:53" pos:end="232:53">.</operator><name pos:start="232:54" pos:end="232:73">channels_thd_stream2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="234:17" pos:end="234:82"><expr pos:start="234:17" pos:end="234:81"><name pos:start="234:17" pos:end="234:37"><name pos:start="234:17" pos:end="234:21">avctx</name><operator pos:start="234:22" pos:end="234:23">-&gt;</operator><name pos:start="234:24" pos:end="234:37">channel_layout</name></name> <operator pos:start="234:39" pos:end="234:39">=</operator> <call pos:start="234:41" pos:end="234:81"><name pos:start="234:41" pos:end="234:56">ff_truehd_layout</name><argument_list pos:start="234:57" pos:end="234:81">(<argument pos:start="234:58" pos:end="234:80"><expr pos:start="234:58" pos:end="234:80"><name pos:start="234:58" pos:end="234:80"><name pos:start="234:58" pos:end="234:59">mh</name><operator pos:start="234:60" pos:end="234:60">.</operator><name pos:start="234:61" pos:end="234:80">channels_thd_stream2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="236:15" pos:end="242:13">else <block pos:start="236:20" pos:end="242:13">{<block_content pos:start="238:17" pos:end="240:82">

                <expr_stmt pos:start="238:17" pos:end="238:75"><expr pos:start="238:17" pos:end="238:74"><name pos:start="238:17" pos:end="238:31"><name pos:start="238:17" pos:end="238:21">avctx</name><operator pos:start="238:22" pos:end="238:23">-&gt;</operator><name pos:start="238:24" pos:end="238:31">channels</name></name> <operator pos:start="238:33" pos:end="238:33">=</operator> <call pos:start="238:35" pos:end="238:74"><name pos:start="238:35" pos:end="238:49">truehd_channels</name><argument_list pos:start="238:50" pos:end="238:74">(<argument pos:start="238:51" pos:end="238:73"><expr pos:start="238:51" pos:end="238:73"><name pos:start="238:51" pos:end="238:73"><name pos:start="238:51" pos:end="238:52">mh</name><operator pos:start="238:53" pos:end="238:53">.</operator><name pos:start="238:54" pos:end="238:73">channels_thd_stream1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="240:17" pos:end="240:82"><expr pos:start="240:17" pos:end="240:81"><name pos:start="240:17" pos:end="240:37"><name pos:start="240:17" pos:end="240:21">avctx</name><operator pos:start="240:22" pos:end="240:23">-&gt;</operator><name pos:start="240:24" pos:end="240:37">channel_layout</name></name> <operator pos:start="240:39" pos:end="240:39">=</operator> <call pos:start="240:41" pos:end="240:81"><name pos:start="240:41" pos:end="240:56">ff_truehd_layout</name><argument_list pos:start="240:57" pos:end="240:81">(<argument pos:start="240:58" pos:end="240:80"><expr pos:start="240:58" pos:end="240:80"><name pos:start="240:58" pos:end="240:80"><name pos:start="240:58" pos:end="240:59">mh</name><operator pos:start="240:60" pos:end="240:60">.</operator><name pos:start="240:61" pos:end="240:80">channels_thd_stream1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="250:9" pos:end="252:46"><if pos:start="250:9" pos:end="252:46">if <condition pos:start="250:12" pos:end="250:23">(<expr pos:start="250:13" pos:end="250:22"><operator pos:start="250:13" pos:end="250:13">!</operator><name pos:start="250:14" pos:end="250:22"><name pos:start="250:14" pos:end="250:15">mh</name><operator pos:start="250:16" pos:end="250:16">.</operator><name pos:start="250:17" pos:end="250:22">is_vbr</name></name></expr>)</condition><block type="pseudo" pos:start="252:13" pos:end="252:46"><block_content pos:start="252:13" pos:end="252:46"> <comment type="block" pos:start="250:25" pos:end="250:43">/* Stream is CBR */</comment>

            <expr_stmt pos:start="252:13" pos:end="252:46"><expr pos:start="252:13" pos:end="252:45"><name pos:start="252:13" pos:end="252:27"><name pos:start="252:13" pos:end="252:17">avctx</name><operator pos:start="252:18" pos:end="252:19">-&gt;</operator><name pos:start="252:20" pos:end="252:27">bit_rate</name></name> <operator pos:start="252:29" pos:end="252:29">=</operator> <name pos:start="252:31" pos:end="252:45"><name pos:start="252:31" pos:end="252:32">mh</name><operator pos:start="252:33" pos:end="252:33">.</operator><name pos:start="252:34" pos:end="252:45">peak_bitrate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="256:9" pos:end="256:47"><expr pos:start="256:9" pos:end="256:46"><name pos:start="256:9" pos:end="256:26"><name pos:start="256:9" pos:end="256:10">mp</name><operator pos:start="256:11" pos:end="256:12">-&gt;</operator><name pos:start="256:13" pos:end="256:26">num_substreams</name></name> <operator pos:start="256:28" pos:end="256:28">=</operator> <name pos:start="256:30" pos:end="256:46"><name pos:start="256:30" pos:end="256:31">mh</name><operator pos:start="256:32" pos:end="256:32">.</operator><name pos:start="256:33" pos:end="256:46">num_substreams</name></name></expr>;</expr_stmt>

    </block_content>}</block></function>



    <expr_stmt pos:start="262:5" pos:end="262:19"><expr pos:start="262:5" pos:end="262:18"><operator pos:start="262:5" pos:end="262:5">*</operator><name pos:start="262:6" pos:end="262:12">poutbuf</name> <operator pos:start="262:14" pos:end="262:14">=</operator> <name pos:start="262:16" pos:end="262:18">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="264:5" pos:end="264:29"><expr pos:start="264:5" pos:end="264:28"><operator pos:start="264:5" pos:end="264:5">*</operator><name pos:start="264:6" pos:end="264:17">poutbuf_size</name> <operator pos:start="264:19" pos:end="264:19">=</operator> <name pos:start="264:21" pos:end="264:28">buf_size</name></expr>;</expr_stmt>



    <return pos:start="268:5" pos:end="268:16">return <expr pos:start="268:12" pos:end="268:15"><name pos:start="268:12" pos:end="268:15">next</name></expr>;</return>



<label pos:start="272:1" pos:end="272:10"><name pos:start="272:1" pos:end="272:9">lost_sync</name>:</label>

    <expr_stmt pos:start="274:5" pos:end="274:20"><expr pos:start="274:5" pos:end="274:19"><name pos:start="274:5" pos:end="274:15"><name pos:start="274:5" pos:end="274:6">mp</name><operator pos:start="274:7" pos:end="274:8">-&gt;</operator><name pos:start="274:9" pos:end="274:15">in_sync</name></name> <operator pos:start="274:17" pos:end="274:17">=</operator> <literal type="number" pos:start="274:19" pos:end="274:19">0</literal></expr>;</expr_stmt>

    <return pos:start="276:5" pos:end="276:13">return <expr pos:start="276:12" pos:end="276:12"><literal type="number" pos:start="276:12" pos:end="276:12">1</literal></expr>;</return>

}</unit>
