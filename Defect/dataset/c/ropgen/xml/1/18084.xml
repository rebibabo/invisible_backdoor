<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18084.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">sp5x_decode_frame</name><parameter_list pos:start="1:29" pos:end="5:46">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:40"><decl pos:start="3:31" pos:end="3:40"><type pos:start="3:31" pos:end="3:40"><name pos:start="3:31" pos:end="3:34">void</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">data</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:56">data_size</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:38">AVPacket</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:45">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="131:1">{<block_content pos:start="9:5" pos:end="129:13">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:26">avpkt_recoded</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">qscale</name> <init pos:start="15:22" pos:end="15:24">= <expr pos:start="15:24" pos:end="15:24"><literal type="number" pos:start="15:24" pos:end="15:24">5</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:26">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:20">recoded</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:13"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name> <init pos:start="21:11" pos:end="21:13">= <expr pos:start="21:13" pos:end="21:13"><literal type="number" pos:start="21:13" pos:end="21:13">0</literal></expr></init></decl>, <decl pos:start="21:16" pos:end="21:20"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:16">j</name> <init pos:start="21:18" pos:end="21:20">= <expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:40">(<expr pos:start="25:9" pos:end="25:39"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:21"><name pos:start="25:10" pos:end="25:14">avctx</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:21">width</name></name> <operator pos:start="25:23" pos:end="25:24">||</operator> <operator pos:start="25:26" pos:end="25:26">!</operator><name pos:start="25:27" pos:end="25:39"><name pos:start="25:27" pos:end="25:31">avctx</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:39">height</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:11">buf_ptr</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:17">buf</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:11">recoded</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:41"><name pos:start="35:15" pos:end="35:24">av_mallocz</name><argument_list pos:start="35:25" pos:end="35:41">(<argument pos:start="35:26" pos:end="35:40"><expr pos:start="35:26" pos:end="35:40"><name pos:start="35:26" pos:end="35:33">buf_size</name> <operator pos:start="35:35" pos:end="35:35">+</operator> <literal type="number" pos:start="35:37" pos:end="35:40">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:18"><if pos:start="37:5" pos:end="39:18">if <condition pos:start="37:8" pos:end="37:17">(<expr pos:start="37:9" pos:end="37:16"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:16">recoded</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:18"><block_content pos:start="39:9" pos:end="39:18">

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:13">/* SOI */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:16"><name pos:start="45:5" pos:end="45:11">recoded</name><index pos:start="45:12" pos:end="45:16">[<expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">j</name><operator pos:start="45:14" pos:end="45:15">++</operator></expr>]</index></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:23">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:11">recoded</name><index pos:start="47:12" pos:end="47:16">[<expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">j</name><operator pos:start="47:14" pos:end="47:15">++</operator></expr>]</index></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <literal type="number" pos:start="47:20" pos:end="47:23">0xD8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:64"><expr pos:start="51:5" pos:end="51:63"><call pos:start="51:5" pos:end="51:63"><name pos:start="51:5" pos:end="51:10">memcpy</name><argument_list pos:start="51:11" pos:end="51:63">(<argument pos:start="51:12" pos:end="51:20"><expr pos:start="51:12" pos:end="51:20"><name pos:start="51:12" pos:end="51:18">recoded</name><operator pos:start="51:19" pos:end="51:19">+</operator><name pos:start="51:20" pos:end="51:20">j</name></expr></argument>, <argument pos:start="51:23" pos:end="51:39"><expr pos:start="51:23" pos:end="51:39"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:39"><name pos:start="51:24" pos:end="51:36">sp5x_data_dqt</name><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:42" pos:end="51:62"><expr pos:start="51:42" pos:end="51:62"><sizeof pos:start="51:42" pos:end="51:62">sizeof<argument_list pos:start="51:48" pos:end="51:62">(<argument pos:start="51:49" pos:end="51:61"><expr pos:start="51:49" pos:end="51:61"><name pos:start="51:49" pos:end="51:61">sp5x_data_dqt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:59"><expr pos:start="53:5" pos:end="53:58"><call pos:start="53:5" pos:end="53:58"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:58">(<argument pos:start="53:12" pos:end="53:22"><expr pos:start="53:12" pos:end="53:22"><name pos:start="53:12" pos:end="53:18">recoded</name><operator pos:start="53:19" pos:end="53:19">+</operator><name pos:start="53:20" pos:end="53:20">j</name><operator pos:start="53:21" pos:end="53:21">+</operator><literal type="number" pos:start="53:22" pos:end="53:22">5</literal></expr></argument>, <argument pos:start="53:25" pos:end="53:53"><expr pos:start="53:25" pos:end="53:53"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:53"><name pos:start="53:26" pos:end="53:41">sp5x_quant_table</name><index pos:start="53:42" pos:end="53:53">[<expr pos:start="53:43" pos:end="53:52"><name pos:start="53:43" pos:end="53:48">qscale</name> <operator pos:start="53:50" pos:end="53:50">*</operator> <literal type="number" pos:start="53:52" pos:end="53:52">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:56" pos:end="53:57"><expr pos:start="53:56" pos:end="53:57"><literal type="number" pos:start="53:56" pos:end="53:57">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:66"><expr pos:start="55:5" pos:end="55:65"><call pos:start="55:5" pos:end="55:65"><name pos:start="55:5" pos:end="55:10">memcpy</name><argument_list pos:start="55:11" pos:end="55:65">(<argument pos:start="55:12" pos:end="55:23"><expr pos:start="55:12" pos:end="55:23"><name pos:start="55:12" pos:end="55:18">recoded</name><operator pos:start="55:19" pos:end="55:19">+</operator><name pos:start="55:20" pos:end="55:20">j</name><operator pos:start="55:21" pos:end="55:21">+</operator><literal type="number" pos:start="55:22" pos:end="55:23">70</literal></expr></argument>, <argument pos:start="55:26" pos:end="55:60"><expr pos:start="55:26" pos:end="55:60"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:60"><name pos:start="55:27" pos:end="55:42">sp5x_quant_table</name><index pos:start="55:43" pos:end="55:60">[<expr pos:start="55:44" pos:end="55:59"><operator pos:start="55:44" pos:end="55:44">(</operator><name pos:start="55:45" pos:end="55:50">qscale</name> <operator pos:start="55:52" pos:end="55:52">*</operator> <literal type="number" pos:start="55:54" pos:end="55:54">2</literal><operator pos:start="55:55" pos:end="55:55">)</operator> <operator pos:start="55:57" pos:end="55:57">+</operator> <literal type="number" pos:start="55:59" pos:end="55:59">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:63" pos:end="55:64"><expr pos:start="55:63" pos:end="55:64"><literal type="number" pos:start="55:63" pos:end="55:64">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:5">j</name> <operator pos:start="57:7" pos:end="57:8">+=</operator> <sizeof pos:start="57:10" pos:end="57:30">sizeof<argument_list pos:start="57:16" pos:end="57:30">(<argument pos:start="57:17" pos:end="57:29"><expr pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:29">sp5x_data_dqt</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:64"><expr pos:start="61:5" pos:end="61:63"><call pos:start="61:5" pos:end="61:63"><name pos:start="61:5" pos:end="61:10">memcpy</name><argument_list pos:start="61:11" pos:end="61:63">(<argument pos:start="61:12" pos:end="61:20"><expr pos:start="61:12" pos:end="61:20"><name pos:start="61:12" pos:end="61:18">recoded</name><operator pos:start="61:19" pos:end="61:19">+</operator><name pos:start="61:20" pos:end="61:20">j</name></expr></argument>, <argument pos:start="61:23" pos:end="61:39"><expr pos:start="61:23" pos:end="61:39"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:39"><name pos:start="61:24" pos:end="61:36">sp5x_data_dht</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><literal type="number" pos:start="61:38" pos:end="61:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="61:42" pos:end="61:62"><expr pos:start="61:42" pos:end="61:62"><sizeof pos:start="61:42" pos:end="61:62">sizeof<argument_list pos:start="61:48" pos:end="61:62">(<argument pos:start="61:49" pos:end="61:61"><expr pos:start="61:49" pos:end="61:61"><name pos:start="61:49" pos:end="61:61">sp5x_data_dht</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:31"><expr pos:start="63:5" pos:end="63:30"><name pos:start="63:5" pos:end="63:5">j</name> <operator pos:start="63:7" pos:end="63:8">+=</operator> <sizeof pos:start="63:10" pos:end="63:30">sizeof<argument_list pos:start="63:16" pos:end="63:30">(<argument pos:start="63:17" pos:end="63:29"><expr pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:29">sp5x_data_dht</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:64"><expr pos:start="67:5" pos:end="67:63"><call pos:start="67:5" pos:end="67:63"><name pos:start="67:5" pos:end="67:10">memcpy</name><argument_list pos:start="67:11" pos:end="67:63">(<argument pos:start="67:12" pos:end="67:20"><expr pos:start="67:12" pos:end="67:20"><name pos:start="67:12" pos:end="67:18">recoded</name><operator pos:start="67:19" pos:end="67:19">+</operator><name pos:start="67:20" pos:end="67:20">j</name></expr></argument>, <argument pos:start="67:23" pos:end="67:39"><expr pos:start="67:23" pos:end="67:39"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:39"><name pos:start="67:24" pos:end="67:36">sp5x_data_sof</name><index pos:start="67:37" pos:end="67:39">[<expr pos:start="67:38" pos:end="67:38"><literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:42" pos:end="67:62"><expr pos:start="67:42" pos:end="67:62"><sizeof pos:start="67:42" pos:end="67:62">sizeof<argument_list pos:start="67:48" pos:end="67:62">(<argument pos:start="67:49" pos:end="67:61"><expr pos:start="67:49" pos:end="67:61"><name pos:start="67:49" pos:end="67:61">sp5x_data_sof</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:46"><expr pos:start="69:5" pos:end="69:45"><call pos:start="69:5" pos:end="69:45"><name pos:start="69:5" pos:end="69:11">AV_WB16</name><argument_list pos:start="69:12" pos:end="69:45">(<argument pos:start="69:13" pos:end="69:23"><expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:19">recoded</name><operator pos:start="69:20" pos:end="69:20">+</operator><name pos:start="69:21" pos:end="69:21">j</name><operator pos:start="69:22" pos:end="69:22">+</operator><literal type="number" pos:start="69:23" pos:end="69:23">5</literal></expr></argument>, <argument pos:start="69:26" pos:end="69:44"><expr pos:start="69:26" pos:end="69:44"><name pos:start="69:26" pos:end="69:44"><name pos:start="69:26" pos:end="69:30">avctx</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:44">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:45"><expr pos:start="71:5" pos:end="71:44"><call pos:start="71:5" pos:end="71:44"><name pos:start="71:5" pos:end="71:11">AV_WB16</name><argument_list pos:start="71:12" pos:end="71:44">(<argument pos:start="71:13" pos:end="71:23"><expr pos:start="71:13" pos:end="71:23"><name pos:start="71:13" pos:end="71:19">recoded</name><operator pos:start="71:20" pos:end="71:20">+</operator><name pos:start="71:21" pos:end="71:21">j</name><operator pos:start="71:22" pos:end="71:22">+</operator><literal type="number" pos:start="71:23" pos:end="71:23">7</literal></expr></argument>, <argument pos:start="71:26" pos:end="71:43"><expr pos:start="71:26" pos:end="71:43"><name pos:start="71:26" pos:end="71:43"><name pos:start="71:26" pos:end="71:30">avctx</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:43">coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:31"><expr pos:start="73:5" pos:end="73:30"><name pos:start="73:5" pos:end="73:5">j</name> <operator pos:start="73:7" pos:end="73:8">+=</operator> <sizeof pos:start="73:10" pos:end="73:30">sizeof<argument_list pos:start="73:16" pos:end="73:30">(<argument pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:29">sp5x_data_sof</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:64"><expr pos:start="77:5" pos:end="77:63"><call pos:start="77:5" pos:end="77:63"><name pos:start="77:5" pos:end="77:10">memcpy</name><argument_list pos:start="77:11" pos:end="77:63">(<argument pos:start="77:12" pos:end="77:20"><expr pos:start="77:12" pos:end="77:20"><name pos:start="77:12" pos:end="77:18">recoded</name><operator pos:start="77:19" pos:end="77:19">+</operator><name pos:start="77:20" pos:end="77:20">j</name></expr></argument>, <argument pos:start="77:23" pos:end="77:39"><expr pos:start="77:23" pos:end="77:39"><operator pos:start="77:23" pos:end="77:23">&amp;</operator><name pos:start="77:24" pos:end="77:39"><name pos:start="77:24" pos:end="77:36">sp5x_data_sos</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:42" pos:end="77:62"><expr pos:start="77:42" pos:end="77:62"><sizeof pos:start="77:42" pos:end="77:62">sizeof<argument_list pos:start="77:48" pos:end="77:62">(<argument pos:start="77:49" pos:end="77:61"><expr pos:start="77:49" pos:end="77:61"><name pos:start="77:49" pos:end="77:61">sp5x_data_sos</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:5">j</name> <operator pos:start="79:7" pos:end="79:8">+=</operator> <sizeof pos:start="79:10" pos:end="79:30">sizeof<argument_list pos:start="79:16" pos:end="79:30">(<argument pos:start="79:17" pos:end="79:29"><expr pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:29">sp5x_data_sos</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="101:5"><if pos:start="83:5" pos:end="87:34">if<condition pos:start="83:7" pos:end="83:37">(<expr pos:start="83:8" pos:end="83:36"><name pos:start="83:8" pos:end="83:22"><name pos:start="83:8" pos:end="83:12">avctx</name><operator pos:start="83:13" pos:end="83:14">-&gt;</operator><name pos:start="83:15" pos:end="83:22">codec_id</name></name><operator pos:start="83:23" pos:end="83:24">==</operator><name pos:start="83:25" pos:end="83:36">CODEC_ID_AMV</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="87:34"><block_content pos:start="85:9" pos:end="87:34">

        <for pos:start="85:9" pos:end="87:34">for <control pos:start="85:13" pos:end="85:63">(<init pos:start="85:14" pos:end="85:19"><expr pos:start="85:14" pos:end="85:18"><name pos:start="85:14" pos:end="85:14">i</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">2</literal></expr>;</init> <condition pos:start="85:21" pos:end="85:58"><expr pos:start="85:21" pos:end="85:57"><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">&lt;</operator> <name pos:start="85:25" pos:end="85:32">buf_size</name><operator pos:start="85:33" pos:end="85:33">-</operator><literal type="number" pos:start="85:34" pos:end="85:34">2</literal> <operator pos:start="85:36" pos:end="85:37">&amp;&amp;</operator> <name pos:start="85:39" pos:end="85:39">j</name> <operator pos:start="85:41" pos:end="85:41">&lt;</operator> <name pos:start="85:43" pos:end="85:50">buf_size</name><operator pos:start="85:51" pos:end="85:51">+</operator><literal type="number" pos:start="85:52" pos:end="85:56">1024</literal><operator pos:start="85:56" pos:end="85:56">-</operator><literal type="number" pos:start="85:57" pos:end="85:57">2</literal></expr>;</condition> <incr pos:start="85:60" pos:end="85:62"><expr pos:start="85:60" pos:end="85:62"><name pos:start="85:60" pos:end="85:60">i</name><operator pos:start="85:61" pos:end="85:62">++</operator></expr></incr>)</control><block type="pseudo" pos:start="87:13" pos:end="87:34"><block_content pos:start="87:13" pos:end="87:34">

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:19">recoded</name><index pos:start="87:20" pos:end="87:24">[<expr pos:start="87:21" pos:end="87:23"><name pos:start="87:21" pos:end="87:21">j</name><operator pos:start="87:22" pos:end="87:23">++</operator></expr>]</index></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:33"><name pos:start="87:28" pos:end="87:30">buf</name><index pos:start="87:31" pos:end="87:33">[<expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if>

    <else pos:start="89:5" pos:end="101:5">else<block type="pseudo" pos:start="91:5" pos:end="101:5"><block_content pos:start="91:5" pos:end="101:5">

    <for pos:start="91:5" pos:end="101:5">for <control pos:start="91:9" pos:end="91:58">(<init pos:start="91:10" pos:end="91:16"><expr pos:start="91:10" pos:end="91:15"><name pos:start="91:10" pos:end="91:10">i</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <literal type="number" pos:start="91:14" pos:end="91:15">14</literal></expr>;</init> <condition pos:start="91:18" pos:end="91:53"><expr pos:start="91:18" pos:end="91:52"><name pos:start="91:18" pos:end="91:18">i</name> <operator pos:start="91:20" pos:end="91:20">&lt;</operator> <name pos:start="91:22" pos:end="91:29">buf_size</name> <operator pos:start="91:31" pos:end="91:32">&amp;&amp;</operator> <name pos:start="91:34" pos:end="91:34">j</name> <operator pos:start="91:36" pos:end="91:36">&lt;</operator> <name pos:start="91:38" pos:end="91:45">buf_size</name><operator pos:start="91:46" pos:end="91:46">+</operator><literal type="number" pos:start="91:47" pos:end="91:51">1024</literal><operator pos:start="91:51" pos:end="91:51">-</operator><literal type="number" pos:start="91:52" pos:end="91:52">2</literal></expr>;</condition> <incr pos:start="91:55" pos:end="91:57"><expr pos:start="91:55" pos:end="91:57"><name pos:start="91:55" pos:end="91:55">i</name><operator pos:start="91:56" pos:end="91:57">++</operator></expr></incr>)</control>

    <block pos:start="93:5" pos:end="101:5">{<block_content pos:start="95:9" pos:end="99:29">

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:20"><name pos:start="95:9" pos:end="95:15">recoded</name><index pos:start="95:16" pos:end="95:20">[<expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:17">j</name><operator pos:start="95:18" pos:end="95:19">++</operator></expr>]</index></name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:29"><name pos:start="95:24" pos:end="95:26">buf</name><index pos:start="95:27" pos:end="95:29">[<expr pos:start="95:28" pos:end="95:28"><name pos:start="95:28" pos:end="95:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:29"><if pos:start="97:9" pos:end="99:29">if <condition pos:start="97:12" pos:end="97:27">(<expr pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:18"><name pos:start="97:13" pos:end="97:15">buf</name><index pos:start="97:16" pos:end="97:18">[<expr pos:start="97:17" pos:end="97:17"><name pos:start="97:17" pos:end="97:17">i</name></expr>]</index></name> <operator pos:start="97:20" pos:end="97:21">==</operator> <literal type="number" pos:start="97:23" pos:end="97:26">0xff</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:29"><block_content pos:start="99:13" pos:end="99:29">

            <expr_stmt pos:start="99:13" pos:end="99:29"><expr pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:19">recoded</name><index pos:start="99:20" pos:end="99:24">[<expr pos:start="99:21" pos:end="99:23"><name pos:start="99:21" pos:end="99:21">j</name><operator pos:start="99:22" pos:end="99:23">++</operator></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <literal type="number" pos:start="99:28" pos:end="99:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for></block_content></block></else></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:13">/* EOI */</comment>

    <expr_stmt pos:start="107:5" pos:end="107:24"><expr pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:11">recoded</name><index pos:start="107:12" pos:end="107:16">[<expr pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:13">j</name><operator pos:start="107:14" pos:end="107:15">++</operator></expr>]</index></name> <operator pos:start="107:18" pos:end="107:18">=</operator> <literal type="number" pos:start="107:20" pos:end="107:23">0xFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:16"><name pos:start="109:5" pos:end="109:11">recoded</name><index pos:start="109:12" pos:end="109:16">[<expr pos:start="109:13" pos:end="109:15"><name pos:start="109:13" pos:end="109:13">j</name><operator pos:start="109:14" pos:end="109:15">++</operator></expr>]</index></name> <operator pos:start="109:18" pos:end="109:18">=</operator> <literal type="number" pos:start="109:20" pos:end="109:23">0xD9</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:41"><expr pos:start="113:5" pos:end="113:40"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:9">avctx</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:16">flags</name></name> <operator pos:start="113:18" pos:end="113:19">&amp;=</operator> <operator pos:start="113:21" pos:end="113:21">~</operator><name pos:start="113:22" pos:end="113:40">CODEC_FLAG_EMU_EDGE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:35"><expr pos:start="115:5" pos:end="115:34"><call pos:start="115:5" pos:end="115:34"><name pos:start="115:5" pos:end="115:18">av_init_packet</name><argument_list pos:start="115:19" pos:end="115:34">(<argument pos:start="115:20" pos:end="115:33"><expr pos:start="115:20" pos:end="115:33"><operator pos:start="115:20" pos:end="115:20">&amp;</operator><name pos:start="115:21" pos:end="115:33">avpkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:33"><expr pos:start="117:5" pos:end="117:32"><name pos:start="117:5" pos:end="117:22"><name pos:start="117:5" pos:end="117:17">avpkt_recoded</name><operator pos:start="117:18" pos:end="117:18">.</operator><name pos:start="117:19" pos:end="117:22">data</name></name> <operator pos:start="117:24" pos:end="117:24">=</operator> <name pos:start="117:26" pos:end="117:32">recoded</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:27"><expr pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:17">avpkt_recoded</name><operator pos:start="119:18" pos:end="119:18">.</operator><name pos:start="119:19" pos:end="119:22">size</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:26">j</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:70"><expr pos:start="121:5" pos:end="121:69"><name pos:start="121:5" pos:end="121:5">i</name> <operator pos:start="121:7" pos:end="121:7">=</operator> <call pos:start="121:9" pos:end="121:69"><name pos:start="121:9" pos:end="121:29">ff_mjpeg_decode_frame</name><argument_list pos:start="121:30" pos:end="121:69">(<argument pos:start="121:31" pos:end="121:35"><expr pos:start="121:31" pos:end="121:35"><name pos:start="121:31" pos:end="121:35">avctx</name></expr></argument>, <argument pos:start="121:38" pos:end="121:41"><expr pos:start="121:38" pos:end="121:41"><name pos:start="121:38" pos:end="121:41">data</name></expr></argument>, <argument pos:start="121:44" pos:end="121:52"><expr pos:start="121:44" pos:end="121:52"><name pos:start="121:44" pos:end="121:52">data_size</name></expr></argument>, <argument pos:start="121:55" pos:end="121:68"><expr pos:start="121:55" pos:end="121:68"><operator pos:start="121:55" pos:end="121:55">&amp;</operator><name pos:start="121:56" pos:end="121:68">avpkt_recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:21"><expr pos:start="125:5" pos:end="125:20"><call pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:11">av_free</name><argument_list pos:start="125:12" pos:end="125:20">(<argument pos:start="125:13" pos:end="125:19"><expr pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:19">recoded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="129:5" pos:end="129:13">return <expr pos:start="129:12" pos:end="129:12"><name pos:start="129:12" pos:end="129:12">i</name></expr>;</return>

</block_content>}</block></function>
</unit>
