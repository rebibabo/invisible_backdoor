<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21800.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:40">vfio_vga_probe_ati_3c3_quirk</name><parameter_list pos:start="1:41" pos:end="1:61">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:54">VFIOPCIDevice</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:56">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOQuirk</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">quirk</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="15:7">/*

     * As long as the BAR is &gt;= 256 bytes it will be aligned such that the

     * lower byte is always zero.  Filter out anything else, if it exists.

     */</comment>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="19:65">(<expr pos:start="17:9" pos:end="19:64"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:57"><name pos:start="17:10" pos:end="17:20">vfio_pci_is</name><argument_list pos:start="17:21" pos:end="17:57">(<argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">vdev</name></expr></argument>, <argument pos:start="17:28" pos:end="17:44"><expr pos:start="17:28" pos:end="17:44"><name pos:start="17:28" pos:end="17:44">PCI_VENDOR_ID_ATI</name></expr></argument>, <argument pos:start="17:47" pos:end="17:56"><expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">PCI_ANY_ID</name></expr></argument>)</argument_list></call> <operator pos:start="17:59" pos:end="17:60">||</operator>

        <operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:13">vdev</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:19">bars</name><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><literal type="number" pos:start="19:21" pos:end="19:21">4</literal></expr>]</index></name><operator pos:start="19:23" pos:end="19:23">.</operator><name pos:start="19:24" pos:end="19:29">ioport</name> <operator pos:start="19:31" pos:end="19:32">||</operator> <name pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:37">vdev</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:43">bars</name><index pos:start="19:44" pos:end="19:46">[<expr pos:start="19:45" pos:end="19:45"><literal type="number" pos:start="19:45" pos:end="19:45">4</literal></expr>]</index></name><operator pos:start="19:47" pos:end="19:47">.</operator><name pos:start="19:48" pos:end="19:58"><name pos:start="19:48" pos:end="19:53">region</name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:58">size</name></name> <operator pos:start="19:60" pos:end="19:60">&lt;</operator> <literal type="number" pos:start="19:62" pos:end="19:64">256</literal></expr>)</condition> <block pos:start="19:67" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:9">quirk</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:21">g_malloc0</name><argument_list pos:start="27:22" pos:end="27:37">(<argument pos:start="27:23" pos:end="27:36"><expr pos:start="27:23" pos:end="27:36"><sizeof pos:start="27:23" pos:end="27:36">sizeof<argument_list pos:start="27:29" pos:end="27:36">(<argument pos:start="27:30" pos:end="27:35"><expr pos:start="27:30" pos:end="27:35"><operator pos:start="27:30" pos:end="27:30">*</operator><name pos:start="27:31" pos:end="27:35">quirk</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:9">quirk</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:14">mem</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:48"><name pos:start="29:18" pos:end="29:26">g_malloc0</name><argument_list pos:start="29:27" pos:end="29:48">(<argument pos:start="29:28" pos:end="29:47"><expr pos:start="29:28" pos:end="29:47"><sizeof pos:start="29:28" pos:end="29:47">sizeof<argument_list pos:start="29:34" pos:end="29:47">(<argument pos:start="29:35" pos:end="29:46"><expr pos:start="29:35" pos:end="29:46"><name pos:start="29:35" pos:end="29:46">MemoryRegion</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:9">quirk</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">nr_mem</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:51"><expr pos:start="35:5" pos:end="37:50"><call pos:start="35:5" pos:end="37:50"><name pos:start="35:5" pos:end="35:25">memory_region_init_io</name><argument_list pos:start="35:26" pos:end="37:50">(<argument pos:start="35:27" pos:end="35:36"><expr pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:36"><name pos:start="35:27" pos:end="35:31">quirk</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:36">mem</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><call pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:44">OBJECT</name><argument_list pos:start="35:45" pos:end="35:50">(<argument pos:start="35:46" pos:end="35:49"><expr pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:49">vdev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:53" pos:end="35:71"><expr pos:start="35:53" pos:end="35:71"><operator pos:start="35:53" pos:end="35:53">&amp;</operator><name pos:start="35:54" pos:end="35:71">vfio_ati_3c3_quirk</name></expr></argument>, <argument pos:start="35:74" pos:end="35:77"><expr pos:start="35:74" pos:end="35:77"><name pos:start="35:74" pos:end="35:77">vdev</name></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:46"><expr pos:start="37:27" pos:end="37:46"><literal type="string" pos:start="37:27" pos:end="37:46">"vfio-ati-3c3-quirk"</literal></expr></argument>, <argument pos:start="37:49" pos:end="37:49"><expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:79"><expr pos:start="39:5" pos:end="41:78"><call pos:start="39:5" pos:end="41:78"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="41:78">(<argument pos:start="39:33" pos:end="39:73"><expr pos:start="39:33" pos:end="39:73"><operator pos:start="39:33" pos:end="39:33">&amp;</operator><name pos:start="39:34" pos:end="39:69"><name pos:start="39:34" pos:end="39:37">vdev</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:42">vga</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:49">region</name><index pos:start="39:50" pos:end="39:69">[<expr pos:start="39:51" pos:end="39:68"><name pos:start="39:51" pos:end="39:68">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="39:70" pos:end="39:70">.</operator><name pos:start="39:71" pos:end="39:73">mem</name></expr></argument>,

                                <argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">3</literal></expr></argument> <comment type="block" pos:start="41:35" pos:end="41:65">/* offset 3 bytes from 0x3c0 */</comment>, <argument pos:start="41:68" pos:end="41:77"><expr pos:start="41:68" pos:end="41:77"><name pos:start="41:68" pos:end="41:77"><name pos:start="41:68" pos:end="41:72">quirk</name><operator pos:start="41:73" pos:end="41:74">-&gt;</operator><name pos:start="41:75" pos:end="41:77">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="47:35"><expr pos:start="45:5" pos:end="47:34"><call pos:start="45:5" pos:end="47:34"><name pos:start="45:5" pos:end="45:21">QLIST_INSERT_HEAD</name><argument_list pos:start="45:22" pos:end="47:34">(<argument pos:start="45:23" pos:end="45:66"><expr pos:start="45:23" pos:end="45:66"><operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:59"><name pos:start="45:24" pos:end="45:27">vdev</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">vga</name><operator pos:start="45:33" pos:end="45:33">.</operator><name pos:start="45:34" pos:end="45:39">region</name><index pos:start="45:40" pos:end="45:59">[<expr pos:start="45:41" pos:end="45:58"><name pos:start="45:41" pos:end="45:58">QEMU_PCI_VGA_IO_HI</name></expr>]</index></name><operator pos:start="45:60" pos:end="45:60">.</operator><name pos:start="45:61" pos:end="45:66">quirks</name></expr></argument>,

                      <argument pos:start="47:23" pos:end="47:27"><expr pos:start="47:23" pos:end="47:27"><name pos:start="47:23" pos:end="47:27">quirk</name></expr></argument>, <argument pos:start="47:30" pos:end="47:33"><expr pos:start="47:30" pos:end="47:33"><name pos:start="47:30" pos:end="47:33">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><call pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:34">trace_vfio_quirk_ati_3c3_probe</name><argument_list pos:start="51:35" pos:end="51:55">(<argument pos:start="51:36" pos:end="51:54"><expr pos:start="51:36" pos:end="51:54"><name pos:start="51:36" pos:end="51:54"><name pos:start="51:36" pos:end="51:39">vdev</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:49">vbasedev</name><operator pos:start="51:50" pos:end="51:50">.</operator><name pos:start="51:51" pos:end="51:54">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
