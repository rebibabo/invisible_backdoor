<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/89.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:35">qcow2_alloc_cluster_offset</name><parameter_list pos:start="1:36" pos:end="7:60">(<parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><name pos:start="1:37" pos:end="1:52">BlockDriverState</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">bs</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:44">uint64_t</name></type> <name pos:start="3:46" pos:end="3:51">offset</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:47"><decl pos:start="5:37" pos:end="5:47"><type pos:start="5:37" pos:end="5:47"><name pos:start="5:37" pos:end="5:39">int</name></type> <name pos:start="5:41" pos:end="5:47">n_start</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:58"><decl pos:start="5:50" pos:end="5:58"><type pos:start="5:50" pos:end="5:58"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:58">n_end</name></decl></parameter>,

                                    <parameter pos:start="7:37" pos:end="7:44"><decl pos:start="7:37" pos:end="7:44"><type pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:39">int</name> <modifier pos:start="7:41" pos:end="7:41">*</modifier></type><name pos:start="7:42" pos:end="7:44">num</name></decl></parameter>, <parameter pos:start="7:47" pos:end="7:59"><decl pos:start="7:47" pos:end="7:59"><type pos:start="7:47" pos:end="7:59"><name pos:start="7:47" pos:end="7:56">QCowL2Meta</name> <modifier pos:start="7:58" pos:end="7:58">*</modifier></type><name pos:start="7:59" pos:end="7:59">m</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="223:1">{<block_content pos:start="11:5" pos:end="221:26">

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVQcowState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:33">= <expr pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:33"><name pos:start="11:24" pos:end="11:25">bs</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">l2_index</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:22">l2_offset</name></decl>, <decl pos:start="15:25" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:12"><modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:33">l2_table</name></decl>, <decl pos:start="15:36" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:36" pos:end="15:49">cluster_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">nb_clusters</name></decl>, <decl pos:start="17:22" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:22" pos:end="17:22">i</name> <init pos:start="17:24" pos:end="17:26">= <expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">QCowL2Meta</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:25">old_alloc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:74"><expr pos:start="23:5" pos:end="23:73"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:73"><name pos:start="23:11" pos:end="23:27">get_cluster_table</name><argument_list pos:start="23:28" pos:end="23:73">(<argument pos:start="23:29" pos:end="23:30"><expr pos:start="23:29" pos:end="23:30"><name pos:start="23:29" pos:end="23:30">bs</name></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38">offset</name></expr></argument>, <argument pos:start="23:41" pos:end="23:49"><expr pos:start="23:41" pos:end="23:49"><operator pos:start="23:41" pos:end="23:41">&amp;</operator><name pos:start="23:42" pos:end="23:49">l2_table</name></expr></argument>, <argument pos:start="23:52" pos:end="23:61"><expr pos:start="23:52" pos:end="23:61"><operator pos:start="23:52" pos:end="23:52">&amp;</operator><name pos:start="23:53" pos:end="23:61">l2_offset</name></expr></argument>, <argument pos:start="23:64" pos:end="23:72"><expr pos:start="23:64" pos:end="23:72"><operator pos:start="23:64" pos:end="23:64">&amp;</operator><name pos:start="23:65" pos:end="23:72">l2_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:17"><if pos:start="25:5" pos:end="27:17">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">==</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:17"><block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:50"><expr pos:start="31:5" pos:end="31:49"><name pos:start="31:5" pos:end="31:15">nb_clusters</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:49"><name pos:start="31:19" pos:end="31:34">size_to_clusters</name><argument_list pos:start="31:35" pos:end="31:49">(<argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><name pos:start="31:36" pos:end="31:36">s</name></expr></argument>, <argument pos:start="31:39" pos:end="31:48"><expr pos:start="31:39" pos:end="31:48"><name pos:start="31:39" pos:end="31:43">n_end</name> <operator pos:start="31:45" pos:end="31:46">&lt;&lt;</operator> <literal type="number" pos:start="31:48" pos:end="31:48">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:15">nb_clusters</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:57"><name pos:start="35:19" pos:end="35:21">MIN</name><argument_list pos:start="35:22" pos:end="35:57">(<argument pos:start="35:23" pos:end="35:33"><expr pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:33">nb_clusters</name></expr></argument>, <argument pos:start="35:36" pos:end="35:56"><expr pos:start="35:36" pos:end="35:56"><name pos:start="35:36" pos:end="35:45"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:45">l2_size</name></name> <operator pos:start="35:47" pos:end="35:47">-</operator> <name pos:start="35:49" pos:end="35:56">l2_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:18">cluster_offset</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:52"><name pos:start="39:22" pos:end="39:32">be64_to_cpu</name><argument_list pos:start="39:33" pos:end="39:52">(<argument pos:start="39:34" pos:end="39:51"><expr pos:start="39:34" pos:end="39:51"><name pos:start="39:34" pos:end="39:51"><name pos:start="39:34" pos:end="39:41">l2_table</name><index pos:start="39:42" pos:end="39:51">[<expr pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:48">/* We keep all QCOW_OFLAG_COPIED clusters */</comment>



    <if_stmt pos:start="47:5" pos:end="63:5"><if pos:start="47:5" pos:end="63:5">if <condition pos:start="47:8" pos:end="47:43">(<expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:22">cluster_offset</name> <operator pos:start="47:24" pos:end="47:24">&amp;</operator> <name pos:start="47:26" pos:end="47:42">QCOW_OFLAG_COPIED</name></expr>)</condition> <block pos:start="47:45" pos:end="63:5">{<block_content pos:start="49:9" pos:end="61:17">

        <expr_stmt pos:start="49:9" pos:end="51:43"><expr pos:start="49:9" pos:end="51:42"><name pos:start="49:9" pos:end="49:19">nb_clusters</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="51:42"><name pos:start="49:23" pos:end="49:47">count_contiguous_clusters</name><argument_list pos:start="49:48" pos:end="51:42">(<argument pos:start="49:49" pos:end="49:59"><expr pos:start="49:49" pos:end="49:59"><name pos:start="49:49" pos:end="49:59">nb_clusters</name></expr></argument>, <argument pos:start="49:62" pos:end="49:76"><expr pos:start="49:62" pos:end="49:76"><name pos:start="49:62" pos:end="49:76"><name pos:start="49:62" pos:end="49:62">s</name><operator pos:start="49:63" pos:end="49:64">-&gt;</operator><name pos:start="49:65" pos:end="49:76">cluster_size</name></name></expr></argument>,

                <argument pos:start="51:17" pos:end="51:35"><expr pos:start="51:17" pos:end="51:35"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:35"><name pos:start="51:18" pos:end="51:25">l2_table</name><index pos:start="51:26" pos:end="51:35">[<expr pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">0</literal></expr></argument>, <argument pos:start="51:41" pos:end="51:41"><expr pos:start="51:41" pos:end="51:41"><literal type="number" pos:start="51:41" pos:end="51:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:22">cluster_offset</name> <operator pos:start="55:24" pos:end="55:25">&amp;=</operator> <operator pos:start="55:27" pos:end="55:27">~</operator><name pos:start="55:28" pos:end="55:44">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">m</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:22">nb_clusters</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>;</expr_stmt>



        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:70">/* for the moment, multiple compressed clusters are not managed */</comment>



    <if_stmt pos:start="71:5" pos:end="73:24"><if pos:start="71:5" pos:end="73:24">if <condition pos:start="71:8" pos:end="71:47">(<expr pos:start="71:9" pos:end="71:46"><name pos:start="71:9" pos:end="71:22">cluster_offset</name> <operator pos:start="71:24" pos:end="71:24">&amp;</operator> <name pos:start="71:26" pos:end="71:46">QCOW_OFLAG_COMPRESSED</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:24"><block_content pos:start="73:9" pos:end="73:24">

        <expr_stmt pos:start="73:9" pos:end="73:24"><expr pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:19">nb_clusters</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <literal type="number" pos:start="73:23" pos:end="73:23">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:39">/* how many available clusters ? */</comment>



    <while pos:start="81:5" pos:end="111:5">while <condition pos:start="81:11" pos:end="81:27">(<expr pos:start="81:12" pos:end="81:26"><name pos:start="81:12" pos:end="81:12">i</name> <operator pos:start="81:14" pos:end="81:14">&lt;</operator> <name pos:start="81:16" pos:end="81:26">nb_clusters</name></expr>)</condition> <block pos:start="81:29" pos:end="111:5">{<block_content pos:start="83:9" pos:end="109:18">

        <expr_stmt pos:start="83:9" pos:end="85:43"><expr pos:start="83:9" pos:end="85:42"><name pos:start="83:9" pos:end="83:9">i</name> <operator pos:start="83:11" pos:end="83:12">+=</operator> <call pos:start="83:14" pos:end="85:42"><name pos:start="83:14" pos:end="83:38">count_contiguous_clusters</name><argument_list pos:start="83:39" pos:end="85:42">(<argument pos:start="83:40" pos:end="83:54"><expr pos:start="83:40" pos:end="83:54"><name pos:start="83:40" pos:end="83:50">nb_clusters</name> <operator pos:start="83:52" pos:end="83:52">-</operator> <name pos:start="83:54" pos:end="83:54">i</name></expr></argument>, <argument pos:start="83:57" pos:end="83:71"><expr pos:start="83:57" pos:end="83:71"><name pos:start="83:57" pos:end="83:71"><name pos:start="83:57" pos:end="83:57">s</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:71">cluster_size</name></name></expr></argument>,

                <argument pos:start="85:17" pos:end="85:35"><expr pos:start="85:17" pos:end="85:35"><operator pos:start="85:17" pos:end="85:17">&amp;</operator><name pos:start="85:18" pos:end="85:35"><name pos:start="85:18" pos:end="85:25">l2_table</name><index pos:start="85:26" pos:end="85:35">[<expr pos:start="85:27" pos:end="85:34"><name pos:start="85:27" pos:end="85:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="85:38" pos:end="85:38"><expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">i</name></expr></argument>, <argument pos:start="85:41" pos:end="85:41"><expr pos:start="85:41" pos:end="85:41"><literal type="number" pos:start="85:41" pos:end="85:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="91:18"><if pos:start="89:9" pos:end="91:18">if<condition pos:start="89:11" pos:end="89:47">(<expr pos:start="89:12" pos:end="89:46"><call pos:start="89:12" pos:end="89:46"><name pos:start="89:12" pos:end="89:22">be64_to_cpu</name><argument_list pos:start="89:23" pos:end="89:46">(<argument pos:start="89:24" pos:end="89:45"><expr pos:start="89:24" pos:end="89:45"><name pos:start="89:24" pos:end="89:45"><name pos:start="89:24" pos:end="89:31">l2_table</name><index pos:start="89:32" pos:end="89:45">[<expr pos:start="89:33" pos:end="89:44"><name pos:start="89:33" pos:end="89:40">l2_index</name> <operator pos:start="89:42" pos:end="89:42">+</operator> <name pos:start="89:44" pos:end="89:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:18"><block_content pos:start="91:13" pos:end="91:18">

            <break pos:start="91:13" pos:end="91:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="97:41"><expr pos:start="95:9" pos:end="97:40"><name pos:start="95:9" pos:end="95:9">i</name> <operator pos:start="95:11" pos:end="95:12">+=</operator> <call pos:start="95:14" pos:end="97:40"><name pos:start="95:14" pos:end="95:43">count_contiguous_free_clusters</name><argument_list pos:start="95:44" pos:end="97:40">(<argument pos:start="95:45" pos:end="95:59"><expr pos:start="95:45" pos:end="95:59"><name pos:start="95:45" pos:end="95:55">nb_clusters</name> <operator pos:start="95:57" pos:end="95:57">-</operator> <name pos:start="95:59" pos:end="95:59">i</name></expr></argument>,

                <argument pos:start="97:17" pos:end="97:39"><expr pos:start="97:17" pos:end="97:39"><operator pos:start="97:17" pos:end="97:17">&amp;</operator><name pos:start="97:18" pos:end="97:39"><name pos:start="97:18" pos:end="97:25">l2_table</name><index pos:start="97:26" pos:end="97:39">[<expr pos:start="97:27" pos:end="97:38"><name pos:start="97:27" pos:end="97:34">l2_index</name> <operator pos:start="97:36" pos:end="97:36">+</operator> <name pos:start="97:38" pos:end="97:38">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:22">cluster_offset</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <call pos:start="101:26" pos:end="101:60"><name pos:start="101:26" pos:end="101:36">be64_to_cpu</name><argument_list pos:start="101:37" pos:end="101:60">(<argument pos:start="101:38" pos:end="101:59"><expr pos:start="101:38" pos:end="101:59"><name pos:start="101:38" pos:end="101:59"><name pos:start="101:38" pos:end="101:45">l2_table</name><index pos:start="101:46" pos:end="101:59">[<expr pos:start="101:47" pos:end="101:58"><name pos:start="101:47" pos:end="101:54">l2_index</name> <operator pos:start="101:56" pos:end="101:56">+</operator> <name pos:start="101:58" pos:end="101:58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="105:9" pos:end="109:18"><if pos:start="105:9" pos:end="109:18">if <condition pos:start="105:12" pos:end="107:57">(<expr pos:start="105:13" pos:end="107:56"><operator pos:start="105:13" pos:end="105:13">(</operator><name pos:start="105:14" pos:end="105:27">cluster_offset</name> <operator pos:start="105:29" pos:end="105:29">&amp;</operator> <name pos:start="105:31" pos:end="105:47">QCOW_OFLAG_COPIED</name><operator pos:start="105:48" pos:end="105:48">)</operator> <operator pos:start="105:50" pos:end="105:51">||</operator>

                <operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:31">cluster_offset</name> <operator pos:start="107:33" pos:end="107:33">&amp;</operator> <name pos:start="107:35" pos:end="107:55">QCOW_OFLAG_COMPRESSED</name><operator pos:start="107:56" pos:end="107:56">)</operator></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="109:18"><block_content pos:start="109:13" pos:end="109:18">

            <break pos:start="109:13" pos:end="109:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="113:5" pos:end="113:20"><expr pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:15">nb_clusters</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:19">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="117:5" pos:end="125:7">/*

     * Check if there already is an AIO write request in flight which allocates

     * the same cluster. In this case we need to wait until the previous

     * request has completed and updated the L2 table accordingly.

     */</comment>

    <macro pos:start="127:5" pos:end="127:64"><name pos:start="127:5" pos:end="127:17">QLIST_FOREACH</name><argument_list pos:start="127:18" pos:end="127:64">(<argument pos:start="127:19" pos:end="127:27">old_alloc</argument>, <argument pos:start="127:30" pos:end="127:47">&amp;s-&gt;cluster_allocs</argument>, <argument pos:start="127:50" pos:end="127:63">next_in_flight</argument>)</argument_list></macro> <block pos:start="127:66" pos:end="177:5">{<block_content pos:start="131:9" pos:end="175:9">



        <decl_stmt pos:start="131:9" pos:end="131:69"><decl pos:start="131:9" pos:end="131:68"><type pos:start="131:9" pos:end="131:16"><name pos:start="131:9" pos:end="131:16">uint64_t</name></type> <name pos:start="131:18" pos:end="131:27">end_offset</name> <init pos:start="131:29" pos:end="131:68">= <expr pos:start="131:31" pos:end="131:68"><name pos:start="131:31" pos:end="131:36">offset</name> <operator pos:start="131:38" pos:end="131:38">+</operator> <name pos:start="131:40" pos:end="131:50">nb_clusters</name> <operator pos:start="131:52" pos:end="131:52">*</operator> <name pos:start="131:54" pos:end="131:68"><name pos:start="131:54" pos:end="131:54">s</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:68">cluster_size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="133:9" pos:end="133:48"><decl pos:start="133:9" pos:end="133:47"><type pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:16">uint64_t</name></type> <name pos:start="133:18" pos:end="133:27">old_offset</name> <init pos:start="133:29" pos:end="133:47">= <expr pos:start="133:31" pos:end="133:47"><name pos:start="133:31" pos:end="133:47"><name pos:start="133:31" pos:end="133:39">old_alloc</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:47">offset</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="135:9" pos:end="137:53"><decl pos:start="135:9" pos:end="137:52"><type pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:16">uint64_t</name></type> <name pos:start="135:18" pos:end="135:31">old_end_offset</name> <init pos:start="135:33" pos:end="137:52">= <expr pos:start="135:35" pos:end="137:52"><name pos:start="135:35" pos:end="135:51"><name pos:start="135:35" pos:end="135:43">old_alloc</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:51">offset</name></name> <operator pos:start="135:53" pos:end="135:53">+</operator>

            <name pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:21">old_alloc</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:34">nb_clusters</name></name> <operator pos:start="137:36" pos:end="137:36">*</operator> <name pos:start="137:38" pos:end="137:52"><name pos:start="137:38" pos:end="137:38">s</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:52">cluster_size</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="141:9" pos:end="175:9"><if pos:start="141:9" pos:end="145:9">if <condition pos:start="141:12" pos:end="141:63">(<expr pos:start="141:13" pos:end="141:62"><name pos:start="141:13" pos:end="141:47"><name pos:start="141:13" pos:end="141:22">end_offset</name> <argument_list type="generic" pos:start="141:24" pos:end="141:47">&lt; <argument pos:start="141:26" pos:end="141:45"><expr pos:start="141:26" pos:end="141:45"><name pos:start="141:26" pos:end="141:35">old_offset</name> <operator pos:start="141:37" pos:end="141:38">||</operator> <name pos:start="141:40" pos:end="141:45">offset</name></expr></argument> &gt;</argument_list></name> <name pos:start="141:49" pos:end="141:62">old_end_offset</name></expr>)</condition> <block pos:start="141:65" pos:end="145:9">{<block_content>

            <comment type="block" pos:start="143:13" pos:end="143:33">/* No intersection */</comment>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="175:9">else <block pos:start="145:16" pos:end="175:9">{<block_content pos:start="147:13" pos:end="173:13">

            <if_stmt pos:start="147:13" pos:end="157:13"><if pos:start="147:13" pos:end="153:13">if <condition pos:start="147:16" pos:end="147:36">(<expr pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:22">offset</name> <operator pos:start="147:24" pos:end="147:24">&lt;</operator> <name pos:start="147:26" pos:end="147:35">old_offset</name></expr>)</condition> <block pos:start="147:38" pos:end="153:13">{<block_content pos:start="151:17" pos:end="151:71">

                <comment type="block" pos:start="149:17" pos:end="149:63">/* Stop at the start of a running allocation */</comment>

                <expr_stmt pos:start="151:17" pos:end="151:71"><expr pos:start="151:17" pos:end="151:70"><name pos:start="151:17" pos:end="151:27">nb_clusters</name> <operator pos:start="151:29" pos:end="151:29">=</operator> <operator pos:start="151:31" pos:end="151:31">(</operator><name pos:start="151:32" pos:end="151:41">old_offset</name> <operator pos:start="151:43" pos:end="151:43">-</operator> <name pos:start="151:45" pos:end="151:50">offset</name><operator pos:start="151:51" pos:end="151:51">)</operator> <operator pos:start="151:53" pos:end="151:54">&gt;&gt;</operator> <name pos:start="151:56" pos:end="151:70"><name pos:start="151:56" pos:end="151:56">s</name><operator pos:start="151:57" pos:end="151:58">-&gt;</operator><name pos:start="151:59" pos:end="151:70">cluster_bits</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="153:15" pos:end="157:13">else <block pos:start="153:20" pos:end="157:13">{<block_content pos:start="155:17" pos:end="155:32">

                <expr_stmt pos:start="155:17" pos:end="155:32"><expr pos:start="155:17" pos:end="155:31"><name pos:start="155:17" pos:end="155:27">nb_clusters</name> <operator pos:start="155:29" pos:end="155:29">=</operator> <literal type="number" pos:start="155:31" pos:end="155:31">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="161:13" pos:end="173:13"><if pos:start="161:13" pos:end="173:13">if <condition pos:start="161:16" pos:end="161:33">(<expr pos:start="161:17" pos:end="161:32"><name pos:start="161:17" pos:end="161:27">nb_clusters</name> <operator pos:start="161:29" pos:end="161:30">==</operator> <literal type="number" pos:start="161:32" pos:end="161:32">0</literal></expr>)</condition> <block pos:start="161:35" pos:end="173:13">{<block_content pos:start="165:17" pos:end="171:25">

                <comment type="block" pos:start="163:17" pos:end="163:60">/* Set dependency and wait for a callback */</comment>

                <expr_stmt pos:start="165:17" pos:end="165:42"><expr pos:start="165:17" pos:end="165:41"><name pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:17">m</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:29">depends_on</name></name> <operator pos:start="165:31" pos:end="165:31">=</operator> <name pos:start="165:33" pos:end="165:41">old_alloc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:35"><expr pos:start="167:17" pos:end="167:34"><name pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:17">m</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:30">nb_clusters</name></name> <operator pos:start="167:32" pos:end="167:32">=</operator> <literal type="number" pos:start="167:34" pos:end="167:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:25"><expr pos:start="169:17" pos:end="169:24"><operator pos:start="169:17" pos:end="169:17">*</operator><name pos:start="169:18" pos:end="169:20">num</name> <operator pos:start="169:22" pos:end="169:22">=</operator> <literal type="number" pos:start="169:24" pos:end="169:24">0</literal></expr>;</expr_stmt>

                <return pos:start="171:17" pos:end="171:25">return <expr pos:start="171:24" pos:end="171:24"><literal type="number" pos:start="171:24" pos:end="171:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>



    <if_stmt pos:start="181:5" pos:end="185:5"><if pos:start="181:5" pos:end="185:5">if <condition pos:start="181:8" pos:end="181:21">(<expr pos:start="181:9" pos:end="181:20"><operator pos:start="181:9" pos:end="181:9">!</operator><name pos:start="181:10" pos:end="181:20">nb_clusters</name></expr>)</condition> <block pos:start="181:23" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:16">

        <expr_stmt pos:start="183:9" pos:end="183:16"><expr pos:start="183:9" pos:end="183:15"><call pos:start="183:9" pos:end="183:15"><name pos:start="183:9" pos:end="183:13">abort</name><argument_list pos:start="183:14" pos:end="183:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:61"><expr pos:start="189:5" pos:end="189:60"><call pos:start="189:5" pos:end="189:60"><name pos:start="189:5" pos:end="189:21">QLIST_INSERT_HEAD</name><argument_list pos:start="189:22" pos:end="189:60">(<argument pos:start="189:23" pos:end="189:40"><expr pos:start="189:23" pos:end="189:40"><operator pos:start="189:23" pos:end="189:23">&amp;</operator><name pos:start="189:24" pos:end="189:40"><name pos:start="189:24" pos:end="189:24">s</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:40">cluster_allocs</name></name></expr></argument>, <argument pos:start="189:43" pos:end="189:43"><expr pos:start="189:43" pos:end="189:43"><name pos:start="189:43" pos:end="189:43">m</name></expr></argument>, <argument pos:start="189:46" pos:end="189:59"><expr pos:start="189:46" pos:end="189:59"><name pos:start="189:46" pos:end="189:59">next_in_flight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="193:5" pos:end="193:32">/* allocate a new cluster */</comment>



    <expr_stmt pos:start="197:5" pos:end="197:77"><expr pos:start="197:5" pos:end="197:76"><name pos:start="197:5" pos:end="197:18">cluster_offset</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <call pos:start="197:22" pos:end="197:76"><name pos:start="197:22" pos:end="197:41">qcow2_alloc_clusters</name><argument_list pos:start="197:42" pos:end="197:76">(<argument pos:start="197:43" pos:end="197:44"><expr pos:start="197:43" pos:end="197:44"><name pos:start="197:43" pos:end="197:44">bs</name></expr></argument>, <argument pos:start="197:47" pos:end="197:75"><expr pos:start="197:47" pos:end="197:75"><name pos:start="197:47" pos:end="197:57">nb_clusters</name> <operator pos:start="197:59" pos:end="197:59">*</operator> <name pos:start="197:61" pos:end="197:75"><name pos:start="197:61" pos:end="197:61">s</name><operator pos:start="197:62" pos:end="197:63">-&gt;</operator><name pos:start="197:64" pos:end="197:75">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:47">/* save info needed for meta data update */</comment>

    <expr_stmt pos:start="203:5" pos:end="203:23"><expr pos:start="203:5" pos:end="203:22"><name pos:start="203:5" pos:end="203:13"><name pos:start="203:5" pos:end="203:5">m</name><operator pos:start="203:6" pos:end="203:7">-&gt;</operator><name pos:start="203:8" pos:end="203:13">offset</name></name> <operator pos:start="203:15" pos:end="203:15">=</operator> <name pos:start="203:17" pos:end="203:22">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:25"><expr pos:start="205:5" pos:end="205:24"><name pos:start="205:5" pos:end="205:14"><name pos:start="205:5" pos:end="205:5">m</name><operator pos:start="205:6" pos:end="205:7">-&gt;</operator><name pos:start="205:8" pos:end="205:14">n_start</name></name> <operator pos:start="205:16" pos:end="205:16">=</operator> <name pos:start="205:18" pos:end="205:24">n_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="207:5" pos:end="207:33"><expr pos:start="207:5" pos:end="207:32"><name pos:start="207:5" pos:end="207:18"><name pos:start="207:5" pos:end="207:5">m</name><operator pos:start="207:6" pos:end="207:7">-&gt;</operator><name pos:start="207:8" pos:end="207:18">nb_clusters</name></name> <operator pos:start="207:20" pos:end="207:20">=</operator> <name pos:start="207:22" pos:end="207:32">nb_clusters</name></expr>;</expr_stmt>



<label pos:start="211:1" pos:end="211:4"><name pos:start="211:1" pos:end="211:3">out</name>:</label>

    <expr_stmt pos:start="213:5" pos:end="213:71"><expr pos:start="213:5" pos:end="213:70"><name pos:start="213:5" pos:end="213:19"><name pos:start="213:5" pos:end="213:5">m</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:19">nb_available</name></name> <operator pos:start="213:21" pos:end="213:21">=</operator> <call pos:start="213:23" pos:end="213:70"><name pos:start="213:23" pos:end="213:25">MIN</name><argument_list pos:start="213:26" pos:end="213:70">(<argument pos:start="213:27" pos:end="213:62"><expr pos:start="213:27" pos:end="213:62"><name pos:start="213:27" pos:end="213:37">nb_clusters</name> <operator pos:start="213:39" pos:end="213:40">&lt;&lt;</operator> <operator pos:start="213:42" pos:end="213:42">(</operator><name pos:start="213:43" pos:end="213:57"><name pos:start="213:43" pos:end="213:43">s</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:57">cluster_bits</name></name> <operator pos:start="213:59" pos:end="213:59">-</operator> <literal type="number" pos:start="213:61" pos:end="213:61">9</literal><operator pos:start="213:62" pos:end="213:62">)</operator></expr></argument>, <argument pos:start="213:65" pos:end="213:69"><expr pos:start="213:65" pos:end="213:69"><name pos:start="213:65" pos:end="213:69">n_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:37"><expr pos:start="217:5" pos:end="217:36"><operator pos:start="217:5" pos:end="217:5">*</operator><name pos:start="217:6" pos:end="217:8">num</name> <operator pos:start="217:10" pos:end="217:10">=</operator> <name pos:start="217:12" pos:end="217:26"><name pos:start="217:12" pos:end="217:12">m</name><operator pos:start="217:13" pos:end="217:14">-&gt;</operator><name pos:start="217:15" pos:end="217:26">nb_available</name></name> <operator pos:start="217:28" pos:end="217:28">-</operator> <name pos:start="217:30" pos:end="217:36">n_start</name></expr>;</expr_stmt>



    <return pos:start="221:5" pos:end="221:26">return <expr pos:start="221:12" pos:end="221:25"><name pos:start="221:12" pos:end="221:25">cluster_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
