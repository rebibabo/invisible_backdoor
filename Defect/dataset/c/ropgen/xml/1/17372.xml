<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17372.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">img_read_header</name><parameter_list pos:start="1:27" pos:end="1:71">(<parameter pos:start="1:28" pos:end="1:46"><decl pos:start="1:28" pos:end="1:46"><type pos:start="1:28" pos:end="1:46"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">s1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:70"><decl pos:start="1:49" pos:end="1:70"><type pos:start="1:49" pos:end="1:70"><name pos:start="1:49" pos:end="1:66">AVFormatParameters</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:22">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VideoData</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:21">s1</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:24">first_index</name></decl>, <decl pos:start="7:27" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:27" pos:end="7:36">last_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:12">buf</name><index pos:start="9:13" pos:end="9:18">[<expr pos:start="9:14" pos:end="9:17"><literal type="number" pos:start="9:14" pos:end="9:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">ByteIOContext</name></type> <name pos:start="11:19" pos:end="11:21">pb1</name></decl>, <decl pos:start="11:24" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:17"><modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:25">f</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:32">pb1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:22">av_new_stream</name><argument_list pos:start="17:23" pos:end="17:29">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">s1</name></expr></argument>, <argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><literal type="number" pos:start="17:28" pos:end="17:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">st</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:23">

        <expr_stmt pos:start="21:9" pos:end="21:19"><expr pos:start="21:9" pos:end="21:18"><call pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:15">av_free</name><argument_list pos:start="21:16" pos:end="21:18">(<argument pos:start="21:17" pos:end="21:17"><expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:38"><if pos:start="29:5" pos:end="31:38">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:10">ap</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:24">image_format</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:38"><block_content pos:start="31:9" pos:end="31:38">

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:18">img_fmt</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:37"><name pos:start="31:22" pos:end="31:23">ap</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:37">image_format</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:52"><expr pos:start="35:5" pos:end="35:51"><call pos:start="35:5" pos:end="35:51"><name pos:start="35:5" pos:end="35:11">pstrcpy</name><argument_list pos:start="35:12" pos:end="35:51">(<argument pos:start="35:13" pos:end="35:19"><expr pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">path</name></name></expr></argument>, <argument pos:start="35:22" pos:end="35:36"><expr pos:start="35:22" pos:end="35:36"><sizeof pos:start="35:22" pos:end="35:36">sizeof<argument_list pos:start="35:28" pos:end="35:36">(<argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:35">path</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:39" pos:end="35:50"><expr pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:50"><name pos:start="35:39" pos:end="35:40">s1</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:50">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:17">img_number</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <literal type="number" pos:start="37:21" pos:end="37:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">img_count</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:21">/* find format */</comment>

    <if_stmt pos:start="45:5" pos:end="51:23"><if pos:start="45:5" pos:end="47:23">if <condition pos:start="45:8" pos:end="45:42">(<expr pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:10">s1</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:19">iformat</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">flags</name></name> <operator pos:start="45:28" pos:end="45:28">&amp;</operator> <name pos:start="45:30" pos:end="45:41">AVFMT_NOFILE</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:23"><block_content pos:start="47:9" pos:end="47:23">

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:18">is_pipe</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="49:5" pos:end="51:23">else<block type="pseudo" pos:start="51:9" pos:end="51:23"><block_content pos:start="51:9" pos:end="51:23">

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:18">is_pipe</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:27">(<expr pos:start="55:9" pos:end="55:26"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:26"><name pos:start="55:10" pos:end="55:11">ap</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:22">time_base</name><operator pos:start="55:23" pos:end="55:23">.</operator><name pos:start="55:24" pos:end="55:26">num</name></name></expr>)</condition> <block pos:start="55:29" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:49">

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:28">time_base</name></name><operator pos:start="57:29" pos:end="57:29">=</operator> <operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:41">AVRational</name><operator pos:start="57:42" pos:end="57:42">)</operator><block pos:start="57:43" pos:end="57:48">{<expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">1</literal></expr>,<expr pos:start="57:46" pos:end="57:47"><literal type="number" pos:start="57:46" pos:end="57:47">25</literal></expr>}</block></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="63:5">else <block pos:start="59:12" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:44">

        <expr_stmt pos:start="61:9" pos:end="61:44"><expr pos:start="61:9" pos:end="61:43"><name pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:28">time_base</name></name><operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:43"><name pos:start="61:31" pos:end="61:32">ap</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:43">time_base</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="67:5" pos:end="97:5"><if pos:start="67:5" pos:end="93:5">if <condition pos:start="67:8" pos:end="67:20">(<expr pos:start="67:9" pos:end="67:19"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:19"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:19">is_pipe</name></name></expr>)</condition> <block pos:start="67:22" pos:end="93:5">{<block_content pos:start="69:9" pos:end="91:22">

        <if_stmt pos:start="69:9" pos:end="71:22"><if pos:start="69:9" pos:end="71:22">if <condition pos:start="69:12" pos:end="69:69">(<expr pos:start="69:13" pos:end="69:68"><call pos:start="69:13" pos:end="69:64"><name pos:start="69:13" pos:end="69:28">find_image_range</name><argument_list pos:start="69:29" pos:end="69:64">(<argument pos:start="69:30" pos:end="69:41"><expr pos:start="69:30" pos:end="69:41"><operator pos:start="69:30" pos:end="69:30">&amp;</operator><name pos:start="69:31" pos:end="69:41">first_index</name></expr></argument>, <argument pos:start="69:44" pos:end="69:54"><expr pos:start="69:44" pos:end="69:54"><operator pos:start="69:44" pos:end="69:44">&amp;</operator><name pos:start="69:45" pos:end="69:54">last_index</name></expr></argument>, <argument pos:start="69:57" pos:end="69:63"><expr pos:start="69:57" pos:end="69:63"><name pos:start="69:57" pos:end="69:63"><name pos:start="69:57" pos:end="69:57">s</name><operator pos:start="69:58" pos:end="69:59">-&gt;</operator><name pos:start="69:60" pos:end="69:63">path</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:66" pos:end="69:66">&lt;</operator> <literal type="number" pos:start="69:68" pos:end="69:68">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:22"><block_content pos:start="71:13" pos:end="71:22">

            <goto pos:start="71:13" pos:end="71:22">goto <name pos:start="71:18" pos:end="71:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:20"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:20">img_first</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:34">first_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:19">img_last</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:32">last_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">img_number</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:35">first_index</name></expr>;</expr_stmt>

        <comment type="block" pos:start="79:9" pos:end="79:30">/* compute duration */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:10">st</name><operator pos:start="81:11" pos:end="81:12">-&gt;</operator><name pos:start="81:13" pos:end="81:22">start_time</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:52"><expr pos:start="83:9" pos:end="83:51"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:10">st</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:20">duration</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:33">last_index</name> <operator pos:start="83:35" pos:end="83:35">-</operator> <name pos:start="83:37" pos:end="83:47">first_index</name> <operator pos:start="83:49" pos:end="83:49">+</operator> <literal type="number" pos:start="83:51" pos:end="83:51">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if <condition pos:start="85:12" pos:end="85:77">(<expr pos:start="85:13" pos:end="85:76"><call pos:start="85:13" pos:end="85:72"><name pos:start="85:13" pos:end="85:30">get_frame_filename</name><argument_list pos:start="85:31" pos:end="85:72">(<argument pos:start="85:32" pos:end="85:34"><expr pos:start="85:32" pos:end="85:34"><name pos:start="85:32" pos:end="85:34">buf</name></expr></argument>, <argument pos:start="85:37" pos:end="85:47"><expr pos:start="85:37" pos:end="85:47"><sizeof pos:start="85:37" pos:end="85:47">sizeof<argument_list pos:start="85:43" pos:end="85:47">(<argument pos:start="85:44" pos:end="85:46"><expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:46">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="85:50" pos:end="85:56"><expr pos:start="85:50" pos:end="85:56"><name pos:start="85:50" pos:end="85:56"><name pos:start="85:50" pos:end="85:50">s</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:56">path</name></name></expr></argument>, <argument pos:start="85:59" pos:end="85:71"><expr pos:start="85:59" pos:end="85:71"><name pos:start="85:59" pos:end="85:71"><name pos:start="85:59" pos:end="85:59">s</name><operator pos:start="85:60" pos:end="85:61">-&gt;</operator><name pos:start="85:62" pos:end="85:71">img_number</name></name></expr></argument>)</argument_list></call> <operator pos:start="85:74" pos:end="85:74">&lt;</operator> <literal type="number" pos:start="85:76" pos:end="85:76">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:22"><if pos:start="89:9" pos:end="91:22">if <condition pos:start="89:12" pos:end="89:46">(<expr pos:start="89:13" pos:end="89:45"><call pos:start="89:13" pos:end="89:41"><name pos:start="89:13" pos:end="89:21">url_fopen</name><argument_list pos:start="89:22" pos:end="89:41">(<argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">f</name></expr></argument>, <argument pos:start="89:26" pos:end="89:28"><expr pos:start="89:26" pos:end="89:28"><name pos:start="89:26" pos:end="89:28">buf</name></expr></argument>, <argument pos:start="89:31" pos:end="89:40"><expr pos:start="89:31" pos:end="89:40"><name pos:start="89:31" pos:end="89:40">URL_RDONLY</name></expr></argument>)</argument_list></call> <operator pos:start="89:43" pos:end="89:43">&lt;</operator> <literal type="number" pos:start="89:45" pos:end="89:45">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <goto pos:start="91:13" pos:end="91:22">goto <name pos:start="91:18" pos:end="91:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:20">

        <expr_stmt pos:start="95:9" pos:end="95:20"><expr pos:start="95:9" pos:end="95:19"><name pos:start="95:9" pos:end="95:9">f</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <operator pos:start="95:13" pos:end="95:13">&amp;</operator><name pos:start="95:14" pos:end="95:19"><name pos:start="95:14" pos:end="95:15">s1</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:19">pb</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:78"><expr pos:start="101:5" pos:end="101:77"><name pos:start="101:5" pos:end="101:7">ret</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <call pos:start="101:11" pos:end="101:77"><name pos:start="101:11" pos:end="101:23">av_read_image</name><argument_list pos:start="101:24" pos:end="101:77">(<argument pos:start="101:25" pos:end="101:25"><expr pos:start="101:25" pos:end="101:25"><name pos:start="101:25" pos:end="101:25">f</name></expr></argument>, <argument pos:start="101:28" pos:end="101:39"><expr pos:start="101:28" pos:end="101:39"><name pos:start="101:28" pos:end="101:39"><name pos:start="101:28" pos:end="101:29">s1</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:39">filename</name></name></expr></argument>, <argument pos:start="101:42" pos:end="101:51"><expr pos:start="101:42" pos:end="101:51"><name pos:start="101:42" pos:end="101:51"><name pos:start="101:42" pos:end="101:42">s</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:51">img_fmt</name></name></expr></argument>, <argument pos:start="101:54" pos:end="101:73"><expr pos:start="101:54" pos:end="101:73"><name pos:start="101:54" pos:end="101:73">read_header_alloc_cb</name></expr></argument>, <argument pos:start="101:76" pos:end="101:76"><expr pos:start="101:76" pos:end="101:76"><name pos:start="101:76" pos:end="101:76">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:19"><if pos:start="103:5" pos:end="105:19">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&lt;</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:19"><block_content pos:start="105:9" pos:end="105:19">

        <goto pos:start="105:9" pos:end="105:19">goto <name pos:start="105:14" pos:end="105:18">fail1</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="117:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:19"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:19">is_pipe</name></name></expr>)</condition> <block pos:start="109:22" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:22">

        <expr_stmt pos:start="111:9" pos:end="111:22"><expr pos:start="111:9" pos:end="111:21"><call pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:18">url_fclose</name><argument_list pos:start="111:19" pos:end="111:21">(<argument pos:start="111:20" pos:end="111:20"><expr pos:start="111:20" pos:end="111:20"><name pos:start="111:20" pos:end="111:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="117:5">else <block pos:start="113:12" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:34">

        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><call pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:17">url_fseek</name><argument_list pos:start="115:18" pos:end="115:33">(<argument pos:start="115:19" pos:end="115:19"><expr pos:start="115:19" pos:end="115:19"><name pos:start="115:19" pos:end="115:19">f</name></expr></argument>, <argument pos:start="115:22" pos:end="115:22"><expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr></argument>, <argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:32">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:45"><expr pos:start="121:5" pos:end="121:44"><name pos:start="121:5" pos:end="121:25"><name pos:start="121:5" pos:end="121:6">st</name><operator pos:start="121:7" pos:end="121:8">-&gt;</operator><name pos:start="121:9" pos:end="121:13">codec</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:25">codec_type</name></name> <operator pos:start="121:27" pos:end="121:27">=</operator> <name pos:start="121:29" pos:end="121:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:44"><expr pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:23"><name pos:start="123:5" pos:end="123:6">st</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:13">codec</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:23">codec_id</name></name> <operator pos:start="123:25" pos:end="123:25">=</operator> <name pos:start="123:27" pos:end="123:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:32"><expr pos:start="125:5" pos:end="125:31"><name pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:13">codec</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:20">width</name></name> <operator pos:start="125:22" pos:end="125:22">=</operator> <name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:34"><expr pos:start="127:5" pos:end="127:33"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:6">st</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:13">codec</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:21">height</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <name pos:start="127:25" pos:end="127:33"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:33">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:36"><expr pos:start="129:5" pos:end="129:35"><name pos:start="129:5" pos:end="129:22"><name pos:start="129:5" pos:end="129:6">st</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:13">codec</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:22">pix_fmt</name></name> <operator pos:start="129:24" pos:end="129:24">=</operator> <name pos:start="129:26" pos:end="129:35"><name pos:start="129:26" pos:end="129:26">s</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:35">pix_fmt</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:92"><expr pos:start="131:5" pos:end="131:91"><name pos:start="131:5" pos:end="131:15"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:15">img_size</name></name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:91"><name pos:start="131:19" pos:end="131:36">avpicture_get_size</name><argument_list pos:start="131:37" pos:end="131:91">(<argument pos:start="131:38" pos:end="131:47"><expr pos:start="131:38" pos:end="131:47"><name pos:start="131:38" pos:end="131:47"><name pos:start="131:38" pos:end="131:38">s</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:47">pix_fmt</name></name></expr></argument>, <argument pos:start="131:50" pos:end="131:68"><expr pos:start="131:50" pos:end="131:68"><operator pos:start="131:50" pos:end="131:50">(</operator><name pos:start="131:51" pos:end="131:58"><name pos:start="131:51" pos:end="131:51">s</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:58">width</name></name><operator pos:start="131:59" pos:end="131:59">+</operator><literal type="number" pos:start="131:60" pos:end="131:61">15</literal><operator pos:start="131:62" pos:end="131:62">)</operator><operator pos:start="131:63" pos:end="131:63">&amp;</operator><operator pos:start="131:64" pos:end="131:64">(</operator><operator pos:start="131:65" pos:end="131:65">~</operator><literal type="number" pos:start="131:66" pos:end="131:67">15</literal><operator pos:start="131:68" pos:end="131:68">)</operator></expr></argument>, <argument pos:start="131:71" pos:end="131:90"><expr pos:start="131:71" pos:end="131:90"><operator pos:start="131:71" pos:end="131:71">(</operator><name pos:start="131:72" pos:end="131:80"><name pos:start="131:72" pos:end="131:72">s</name><operator pos:start="131:73" pos:end="131:74">-&gt;</operator><name pos:start="131:75" pos:end="131:80">height</name></name><operator pos:start="131:81" pos:end="131:81">+</operator><literal type="number" pos:start="131:82" pos:end="131:83">15</literal><operator pos:start="131:84" pos:end="131:84">)</operator><operator pos:start="131:85" pos:end="131:85">&amp;</operator><operator pos:start="131:86" pos:end="131:86">(</operator><operator pos:start="131:87" pos:end="131:87">~</operator><literal type="number" pos:start="131:88" pos:end="131:89">15</literal><operator pos:start="131:90" pos:end="131:90">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

 <label pos:start="137:2" pos:end="137:7"><name pos:start="137:2" pos:end="137:6">fail1</name>:</label>

    <if_stmt pos:start="139:5" pos:end="141:22"><if pos:start="139:5" pos:end="141:22">if <condition pos:start="139:8" pos:end="139:20">(<expr pos:start="139:9" pos:end="139:19"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:19"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:19">is_pipe</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:22"><block_content pos:start="141:9" pos:end="141:22">

        <expr_stmt pos:start="141:9" pos:end="141:22"><expr pos:start="141:9" pos:end="141:21"><call pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:18">url_fclose</name><argument_list pos:start="141:19" pos:end="141:21">(<argument pos:start="141:20" pos:end="141:20"><expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

 <label pos:start="143:2" pos:end="143:6"><name pos:start="143:2" pos:end="143:5">fail</name>:</label>

    <expr_stmt pos:start="145:5" pos:end="145:15"><expr pos:start="145:5" pos:end="145:14"><call pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:11">av_free</name><argument_list pos:start="145:12" pos:end="145:14">(<argument pos:start="145:13" pos:end="145:13"><expr pos:start="145:13" pos:end="145:13"><name pos:start="145:13" pos:end="145:13">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:22">return <expr pos:start="147:12" pos:end="147:21"><name pos:start="147:12" pos:end="147:21">AVERROR_IO</name></expr>;</return>

</block_content>}</block></function>
</unit>
