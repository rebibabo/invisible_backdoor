<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/970.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">compand_nodelay</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">AVFilterContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:56">AVFrame</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:55">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">CompandContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">inlink</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">inputs</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:22">channels</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:31">inlink</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:41">channels</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:24">nb_samples</name> <init pos:start="11:26" pos:end="11:44">= <expr pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:44"><name pos:start="11:28" pos:end="11:32">frame</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:44">nb_samples</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:22">out_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">chan</name></decl>, <decl pos:start="15:15" pos:end="15:15"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:15">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:36">(<expr pos:start="19:9" pos:end="19:35"><call pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:28">av_frame_is_writable</name><argument_list pos:start="19:29" pos:end="19:35">(<argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:38" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:26">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:17">out_frame</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:25">frame</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="33:5">else <block pos:start="23:12" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:46">

        <expr_stmt pos:start="25:9" pos:end="25:60"><expr pos:start="25:9" pos:end="25:59"><name pos:start="25:9" pos:end="25:17">out_frame</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="25:59"><name pos:start="25:21" pos:end="25:39">ff_get_audio_buffer</name><argument_list pos:start="25:40" pos:end="25:59">(<argument pos:start="25:41" pos:end="25:46"><expr pos:start="25:41" pos:end="25:46"><name pos:start="25:41" pos:end="25:46">inlink</name></expr></argument>, <argument pos:start="25:49" pos:end="25:58"><expr pos:start="25:49" pos:end="25:58"><name pos:start="25:49" pos:end="25:58">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:35"><if pos:start="27:9" pos:end="29:35">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:22">out_frame</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:35"><block_content pos:start="29:13" pos:end="29:35">

            <return pos:start="29:13" pos:end="29:35">return <expr pos:start="29:20" pos:end="29:34"><call pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:26">AVERROR</name><argument_list pos:start="29:27" pos:end="29:34">(<argument pos:start="29:28" pos:end="29:33"><expr pos:start="29:28" pos:end="29:33"><name pos:start="29:28" pos:end="29:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><call pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:27">av_frame_copy_props</name><argument_list pos:start="31:28" pos:end="31:45">(<argument pos:start="31:29" pos:end="31:37"><expr pos:start="31:29" pos:end="31:37"><name pos:start="31:29" pos:end="31:37">out_frame</name></expr></argument>, <argument pos:start="31:40" pos:end="31:44"><expr pos:start="31:40" pos:end="31:44"><name pos:start="31:40" pos:end="31:44">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="37:5" pos:end="57:5">for <control pos:start="37:9" pos:end="37:43">(<init pos:start="37:10" pos:end="37:18"><expr pos:start="37:10" pos:end="37:17"><name pos:start="37:10" pos:end="37:13">chan</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</init> <condition pos:start="37:20" pos:end="37:35"><expr pos:start="37:20" pos:end="37:34"><name pos:start="37:20" pos:end="37:23">chan</name> <operator pos:start="37:25" pos:end="37:25">&lt;</operator> <name pos:start="37:27" pos:end="37:34">channels</name></expr>;</condition> <incr pos:start="37:37" pos:end="37:42"><expr pos:start="37:37" pos:end="37:42"><name pos:start="37:37" pos:end="37:40">chan</name><operator pos:start="37:41" pos:end="37:42">++</operator></expr></incr>)</control> <block pos:start="37:45" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:9">

        <decl_stmt pos:start="39:9" pos:end="39:65"><decl pos:start="39:9" pos:end="39:64"><type pos:start="39:9" pos:end="39:22"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:20">double</name> <modifier pos:start="39:22" pos:end="39:22">*</modifier></type><name pos:start="39:23" pos:end="39:25">src</name> <init pos:start="39:27" pos:end="39:64">= <expr pos:start="39:29" pos:end="39:64"><operator pos:start="39:29" pos:end="39:29">(</operator><name pos:start="39:30" pos:end="39:35">double</name> <operator pos:start="39:37" pos:end="39:37">*</operator><operator pos:start="39:38" pos:end="39:38">)</operator><name pos:start="39:39" pos:end="39:64"><name pos:start="39:39" pos:end="39:43">frame</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:58">extended_data</name><index pos:start="39:59" pos:end="39:64">[<expr pos:start="39:60" pos:end="39:63"><name pos:start="39:60" pos:end="39:63">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:63"><decl pos:start="41:9" pos:end="41:62"><type pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:14">double</name> <modifier pos:start="41:16" pos:end="41:16">*</modifier></type><name pos:start="41:17" pos:end="41:19">dst</name> <init pos:start="41:21" pos:end="41:62">= <expr pos:start="41:23" pos:end="41:62"><operator pos:start="41:23" pos:end="41:23">(</operator><name pos:start="41:24" pos:end="41:29">double</name> <operator pos:start="41:31" pos:end="41:31">*</operator><operator pos:start="41:32" pos:end="41:32">)</operator><name pos:start="41:33" pos:end="41:62"><name pos:start="41:33" pos:end="41:41">out_frame</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:56">extended_data</name><index pos:start="41:57" pos:end="41:62">[<expr pos:start="41:58" pos:end="41:61"><name pos:start="41:58" pos:end="41:61">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:43"><decl pos:start="43:9" pos:end="43:42"><type pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:17">ChanParam</name> <modifier pos:start="43:19" pos:end="43:19">*</modifier></type><name pos:start="43:20" pos:end="43:21">cp</name> <init pos:start="43:23" pos:end="43:42">= <expr pos:start="43:25" pos:end="43:42"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:42"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">channels</name><index pos:start="43:37" pos:end="43:42">[<expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">chan</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="47:9" pos:end="55:9">for <control pos:start="47:13" pos:end="47:40">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:35"><expr pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <name pos:start="47:25" pos:end="47:34">nb_samples</name></expr>;</condition> <incr pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:37">i</name><operator pos:start="47:38" pos:end="47:39">++</operator></expr></incr>)</control> <block pos:start="47:42" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:73">

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:25">update_volume</name><argument_list pos:start="49:26" pos:end="49:43">(<argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><name pos:start="49:27" pos:end="49:28">cp</name></expr></argument>, <argument pos:start="49:31" pos:end="49:42"><expr pos:start="49:31" pos:end="49:42"><call pos:start="49:31" pos:end="49:42"><name pos:start="49:31" pos:end="49:34">fabs</name><argument_list pos:start="49:35" pos:end="49:42">(<argument pos:start="49:36" pos:end="49:41"><expr pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:38">src</name><index pos:start="49:39" pos:end="49:41">[<expr pos:start="49:40" pos:end="49:40"><name pos:start="49:40" pos:end="49:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:73"><expr pos:start="53:13" pos:end="53:72"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:15">dst</name><index pos:start="53:16" pos:end="53:18">[<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">i</name></expr>]</index></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:72"><name pos:start="53:22" pos:end="53:29">av_clipd</name><argument_list pos:start="53:30" pos:end="53:72">(<argument pos:start="53:31" pos:end="53:64"><expr pos:start="53:31" pos:end="53:64"><name pos:start="53:31" pos:end="53:36"><name pos:start="53:31" pos:end="53:33">src</name><index pos:start="53:34" pos:end="53:36">[<expr pos:start="53:35" pos:end="53:35"><name pos:start="53:35" pos:end="53:35">i</name></expr>]</index></name> <operator pos:start="53:38" pos:end="53:38">*</operator> <call pos:start="53:40" pos:end="53:64"><name pos:start="53:40" pos:end="53:49">get_volume</name><argument_list pos:start="53:50" pos:end="53:64">(<argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><name pos:start="53:51" pos:end="53:51">s</name></expr></argument>, <argument pos:start="53:54" pos:end="53:63"><expr pos:start="53:54" pos:end="53:63"><name pos:start="53:54" pos:end="53:63"><name pos:start="53:54" pos:end="53:55">cp</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:63">volume</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:67" pos:end="53:68"><expr pos:start="53:67" pos:end="53:68"><operator pos:start="53:67" pos:end="53:67">-</operator><literal type="number" pos:start="53:68" pos:end="53:68">1</literal></expr></argument>, <argument pos:start="53:71" pos:end="53:71"><expr pos:start="53:71" pos:end="53:71"><literal type="number" pos:start="53:71" pos:end="53:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="61:5" pos:end="63:30"><if pos:start="61:5" pos:end="63:30">if <condition pos:start="61:8" pos:end="61:27">(<expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:13">frame</name> <operator pos:start="61:15" pos:end="61:16">!=</operator> <name pos:start="61:18" pos:end="61:26">out_frame</name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:30"><block_content pos:start="63:9" pos:end="63:30">

        <expr_stmt pos:start="63:9" pos:end="63:30"><expr pos:start="63:9" pos:end="63:29"><call pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:21">av_frame_free</name><argument_list pos:start="63:22" pos:end="63:29">(<argument pos:start="63:23" pos:end="63:28"><expr pos:start="63:23" pos:end="63:28"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:28">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:55">return <expr pos:start="67:12" pos:end="67:54"><call pos:start="67:12" pos:end="67:54"><name pos:start="67:12" pos:end="67:26">ff_filter_frame</name><argument_list pos:start="67:27" pos:end="67:54">(<argument pos:start="67:28" pos:end="67:42"><expr pos:start="67:28" pos:end="67:42"><name pos:start="67:28" pos:end="67:42"><name pos:start="67:28" pos:end="67:30">ctx</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:39">outputs</name><index pos:start="67:40" pos:end="67:42">[<expr pos:start="67:41" pos:end="67:41"><literal type="number" pos:start="67:41" pos:end="67:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:45" pos:end="67:53"><expr pos:start="67:45" pos:end="67:53"><name pos:start="67:45" pos:end="67:53">out_frame</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
