<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25407.c" pos:tabs="8"><function pos:start="1:1" pos:end="42:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">usb_uas_command</name><parameter_list pos:start="1:28" pos:end="1:55">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:37">UASDevice</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">uas</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:54"><decl pos:start="1:45" pos:end="1:54"><type pos:start="1:45" pos:end="1:54"><name pos:start="1:45" pos:end="1:50">uas_ui</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">ui</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="42:1">{<block_content pos:start="3:5" pos:end="41:16">
    <decl_stmt pos:start="3:5" pos:end="3:20"><decl pos:start="3:5" pos:end="3:19"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">UASRequest</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">req</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:12">uint32_t</name></type> <name pos:start="4:14" pos:end="4:16">len</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:16">tag</name> <init pos:start="5:18" pos:end="5:43">= <expr pos:start="5:20" pos:end="5:43"><call pos:start="5:20" pos:end="5:43"><name pos:start="5:20" pos:end="5:30">be16_to_cpu</name><argument_list pos:start="5:31" pos:end="5:43">(<argument pos:start="5:32" pos:end="5:42"><expr pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:33">ui</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">hdr</name><operator pos:start="5:39" pos:end="5:39">.</operator><name pos:start="5:40" pos:end="5:42">tag</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="8:5"><if pos:start="6:5" pos:end="8:5">if <condition pos:start="6:8" pos:end="6:56">(<expr pos:start="6:9" pos:end="6:55"><call pos:start="6:9" pos:end="6:30"><name pos:start="6:9" pos:end="6:25">uas_using_streams</name><argument_list pos:start="6:26" pos:end="6:30">(<argument pos:start="6:27" pos:end="6:29"><expr pos:start="6:27" pos:end="6:29"><name pos:start="6:27" pos:end="6:29">uas</name></expr></argument>)</argument_list></call> <operator pos:start="6:32" pos:end="6:33">&amp;&amp;</operator> <name pos:start="6:35" pos:end="6:37">tag</name> <operator pos:start="6:39" pos:end="6:39">&gt;</operator> <name pos:start="6:41" pos:end="6:55">UAS_MAX_STREAMS</name></expr>)</condition> <block pos:start="6:58" pos:end="8:5">{<block_content pos:start="7:9" pos:end="7:25">
        <goto pos:start="7:9" pos:end="7:25">goto <name pos:start="7:14" pos:end="7:24">invalid_tag</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:7">req</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:40"><name pos:start="9:11" pos:end="9:30">usb_uas_find_request</name><argument_list pos:start="9:31" pos:end="9:40">(<argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">uas</name></expr></argument>, <argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="12:5"><if pos:start="10:5" pos:end="12:5">if <condition pos:start="10:8" pos:end="10:12">(<expr pos:start="10:9" pos:end="10:11"><name pos:start="10:9" pos:end="10:11">req</name></expr>)</condition> <block pos:start="10:14" pos:end="12:5">{<block_content pos:start="11:9" pos:end="11:28">
        <goto pos:start="11:9" pos:end="11:28">goto <name pos:start="11:14" pos:end="11:27">overlapped_tag</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:7">req</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:40"><name pos:start="13:11" pos:end="13:31">usb_uas_alloc_request</name><argument_list pos:start="13:32" pos:end="13:40">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">uas</name></expr></argument>, <argument pos:start="13:38" pos:end="13:39"><expr pos:start="13:38" pos:end="13:39"><name pos:start="13:38" pos:end="13:39">ui</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="16:5"><if pos:start="14:5" pos:end="16:5">if <condition pos:start="14:8" pos:end="14:25">(<expr pos:start="14:9" pos:end="14:24"><name pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:11">req</name><operator pos:start="14:12" pos:end="14:13">-&gt;</operator><name pos:start="14:14" pos:end="14:16">dev</name></name> <operator pos:start="14:18" pos:end="14:19">==</operator> <name pos:start="14:21" pos:end="14:24">NULL</name></expr>)</condition> <block pos:start="14:27" pos:end="16:5">{<block_content pos:start="15:9" pos:end="15:24">
        <goto pos:start="15:9" pos:end="15:24">goto <name pos:start="15:14" pos:end="15:23">bad_target</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="17:5" pos:end="19:65"><expr pos:start="17:5" pos:end="19:64"><call pos:start="17:5" pos:end="19:64"><name pos:start="17:5" pos:end="17:25">trace_usb_uas_command</name><argument_list pos:start="17:26" pos:end="19:64">(<argument pos:start="17:27" pos:end="17:39"><expr pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:29">uas</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:34">dev</name><operator pos:start="17:35" pos:end="17:35">.</operator><name pos:start="17:36" pos:end="17:39">addr</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:49"><expr pos:start="17:42" pos:end="17:49"><name pos:start="17:42" pos:end="17:49"><name pos:start="17:42" pos:end="17:44">req</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:49">tag</name></name></expr></argument>,
                          <argument pos:start="18:27" pos:end="18:51"><expr pos:start="18:27" pos:end="18:51"><call pos:start="18:27" pos:end="18:51"><name pos:start="18:27" pos:end="18:41">usb_uas_get_lun</name><argument_list pos:start="18:42" pos:end="18:51">(<argument pos:start="18:43" pos:end="18:50"><expr pos:start="18:43" pos:end="18:50"><name pos:start="18:43" pos:end="18:50"><name pos:start="18:43" pos:end="18:45">req</name><operator pos:start="18:46" pos:end="18:47">-&gt;</operator><name pos:start="18:48" pos:end="18:50">lun</name></name></expr></argument>)</argument_list></call></expr></argument>,
                          <argument pos:start="19:27" pos:end="19:40"><expr pos:start="19:27" pos:end="19:40"><name pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:29">req</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:34">lun</name></name> <operator pos:start="19:36" pos:end="19:37">&gt;&gt;</operator> <literal type="number" pos:start="19:39" pos:end="19:40">32</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:63"><expr pos:start="19:43" pos:end="19:63"><name pos:start="19:43" pos:end="19:50"><name pos:start="19:43" pos:end="19:45">req</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:50">lun</name></name> <operator pos:start="19:52" pos:end="19:52">&amp;</operator> <literal type="number" pos:start="19:54" pos:end="19:63">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:50"><expr pos:start="20:5" pos:end="20:49"><call pos:start="20:5" pos:end="20:49"><name pos:start="20:5" pos:end="20:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="20:23" pos:end="20:49">(<argument pos:start="20:24" pos:end="20:37"><expr pos:start="20:24" pos:end="20:37"><operator pos:start="20:24" pos:end="20:24">&amp;</operator><name pos:start="20:25" pos:end="20:37"><name pos:start="20:25" pos:end="20:27">uas</name><operator pos:start="20:28" pos:end="20:29">-&gt;</operator><name pos:start="20:30" pos:end="20:37">requests</name></name></expr></argument>, <argument pos:start="20:40" pos:end="20:42"><expr pos:start="20:40" pos:end="20:42"><name pos:start="20:40" pos:end="20:42">req</name></expr></argument>, <argument pos:start="20:45" pos:end="20:48"><expr pos:start="20:45" pos:end="20:48"><name pos:start="20:45" pos:end="20:48">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:63">(<expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:25">uas_using_streams</name><argument_list pos:start="21:26" pos:end="21:30">(<argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">uas</name></expr></argument>)</argument_list></call> <operator pos:start="21:32" pos:end="21:33">&amp;&amp;</operator> <name pos:start="21:35" pos:end="21:54"><name pos:start="21:35" pos:end="21:37">uas</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:44">data3</name><index pos:start="21:45" pos:end="21:54">[<expr pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:48">req</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:53">tag</name></name></expr>]</index></name> <operator pos:start="21:56" pos:end="21:57">!=</operator> <name pos:start="21:59" pos:end="21:62">NULL</name></expr>)</condition> <block pos:start="21:65" pos:end="25:5">{<block_content pos:start="22:9" pos:end="24:36">
        <expr_stmt pos:start="22:9" pos:end="22:41"><expr pos:start="22:9" pos:end="22:40"><name pos:start="22:9" pos:end="22:17"><name pos:start="22:9" pos:end="22:11">req</name><operator pos:start="22:12" pos:end="22:13">-&gt;</operator><name pos:start="22:14" pos:end="22:17">data</name></name> <operator pos:start="22:19" pos:end="22:19">=</operator> <name pos:start="22:21" pos:end="22:40"><name pos:start="22:21" pos:end="22:23">uas</name><operator pos:start="22:24" pos:end="22:25">-&gt;</operator><name pos:start="22:26" pos:end="22:30">data3</name><index pos:start="22:31" pos:end="22:40">[<expr pos:start="22:32" pos:end="22:39"><name pos:start="22:32" pos:end="22:39"><name pos:start="22:32" pos:end="22:34">req</name><operator pos:start="22:35" pos:end="22:36">-&gt;</operator><name pos:start="22:37" pos:end="22:39">tag</name></name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">req</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">data_async</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:30">true</name></expr>;</expr_stmt>
        <expr_stmt pos:start="24:9" pos:end="24:36"><expr pos:start="24:9" pos:end="24:35"><name pos:start="24:9" pos:end="24:28"><name pos:start="24:9" pos:end="24:11">uas</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:18">data3</name><index pos:start="24:19" pos:end="24:28">[<expr pos:start="24:20" pos:end="24:27"><name pos:start="24:20" pos:end="24:27"><name pos:start="24:20" pos:end="24:22">req</name><operator pos:start="24:23" pos:end="24:24">-&gt;</operator><name pos:start="24:25" pos:end="24:27">tag</name></name></expr>]</index></name> <operator pos:start="24:30" pos:end="24:30">=</operator> <name pos:start="24:32" pos:end="24:35">NULL</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="26:5" pos:end="28:50"><expr pos:start="26:5" pos:end="28:49"><name pos:start="26:5" pos:end="26:12"><name pos:start="26:5" pos:end="26:7">req</name><operator pos:start="26:8" pos:end="26:9">-&gt;</operator><name pos:start="26:10" pos:end="26:12">req</name></name> <operator pos:start="26:14" pos:end="26:14">=</operator> <call pos:start="26:16" pos:end="28:49"><name pos:start="26:16" pos:end="26:27">scsi_req_new</name><argument_list pos:start="26:28" pos:end="28:49">(<argument pos:start="26:29" pos:end="26:36"><expr pos:start="26:29" pos:end="26:36"><name pos:start="26:29" pos:end="26:36"><name pos:start="26:29" pos:end="26:31">req</name><operator pos:start="26:32" pos:end="26:33">-&gt;</operator><name pos:start="26:34" pos:end="26:36">dev</name></name></expr></argument>, <argument pos:start="26:39" pos:end="26:46"><expr pos:start="26:39" pos:end="26:46"><name pos:start="26:39" pos:end="26:46"><name pos:start="26:39" pos:end="26:41">req</name><operator pos:start="26:42" pos:end="26:43">-&gt;</operator><name pos:start="26:44" pos:end="26:46">tag</name></name></expr></argument>,
                            <argument pos:start="27:29" pos:end="27:53"><expr pos:start="27:29" pos:end="27:53"><call pos:start="27:29" pos:end="27:53"><name pos:start="27:29" pos:end="27:43">usb_uas_get_lun</name><argument_list pos:start="27:44" pos:end="27:53">(<argument pos:start="27:45" pos:end="27:52"><expr pos:start="27:45" pos:end="27:52"><name pos:start="27:45" pos:end="27:52"><name pos:start="27:45" pos:end="27:47">req</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:52">lun</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument pos:start="28:29" pos:end="28:43"><expr pos:start="28:29" pos:end="28:43"><name pos:start="28:29" pos:end="28:43"><name pos:start="28:29" pos:end="28:30">ui</name><operator pos:start="28:31" pos:end="28:32">-&gt;</operator><name pos:start="28:33" pos:end="28:39">command</name><operator pos:start="28:40" pos:end="28:40">.</operator><name pos:start="28:41" pos:end="28:43">cdb</name></name></expr></argument>, <argument pos:start="28:46" pos:end="28:48"><expr pos:start="28:46" pos:end="28:48"><name pos:start="28:46" pos:end="28:48">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="29:5" pos:end="31:5"><if pos:start="29:5" pos:end="31:5">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:11">uas</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:23">requestlog</name></name></expr>)</condition> <block pos:start="29:26" pos:end="31:5">{<block_content pos:start="30:9" pos:end="30:33">
        <expr_stmt pos:start="30:9" pos:end="30:33"><expr pos:start="30:9" pos:end="30:32"><call pos:start="30:9" pos:end="30:32"><name pos:start="30:9" pos:end="30:22">scsi_req_print</name><argument_list pos:start="30:23" pos:end="30:32">(<argument pos:start="30:24" pos:end="30:31"><expr pos:start="30:24" pos:end="30:31"><name pos:start="30:24" pos:end="30:31"><name pos:start="30:24" pos:end="30:26">req</name><operator pos:start="30:27" pos:end="30:28">-&gt;</operator><name pos:start="30:29" pos:end="30:31">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:37"><expr pos:start="32:5" pos:end="32:36"><name pos:start="32:5" pos:end="32:7">len</name> <operator pos:start="32:9" pos:end="32:9">=</operator> <call pos:start="32:11" pos:end="32:36"><name pos:start="32:11" pos:end="32:26">scsi_req_enqueue</name><argument_list pos:start="32:27" pos:end="32:36">(<argument pos:start="32:28" pos:end="32:35"><expr pos:start="32:28" pos:end="32:35"><name pos:start="32:28" pos:end="32:35"><name pos:start="32:28" pos:end="32:30">req</name><operator pos:start="32:31" pos:end="32:32">-&gt;</operator><name pos:start="32:33" pos:end="32:35">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="33:5" pos:end="36:5"><if pos:start="33:5" pos:end="36:5">if <condition pos:start="33:8" pos:end="33:12">(<expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">len</name></expr>)</condition> <block pos:start="33:14" pos:end="36:5">{<block_content pos:start="34:9" pos:end="35:36">
        <expr_stmt pos:start="34:9" pos:end="34:29"><expr pos:start="34:9" pos:end="34:28"><name pos:start="34:9" pos:end="34:22"><name pos:start="34:9" pos:end="34:11">req</name><operator pos:start="34:12" pos:end="34:13">-&gt;</operator><name pos:start="34:14" pos:end="34:22">data_size</name></name> <operator pos:start="34:24" pos:end="34:24">=</operator> <name pos:start="34:26" pos:end="34:28">len</name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:36"><expr pos:start="35:9" pos:end="35:35"><call pos:start="35:9" pos:end="35:35"><name pos:start="35:9" pos:end="35:25">scsi_req_continue</name><argument_list pos:start="35:26" pos:end="35:35">(<argument pos:start="35:27" pos:end="35:34"><expr pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:29">req</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:34">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<label pos:start="37:1" pos:end="37:15"><name pos:start="37:1" pos:end="37:14">overlapped_tag</name>:</label>
    <expr_stmt pos:start="38:5" pos:end="38:71"><expr pos:start="38:5" pos:end="38:70"><call pos:start="38:5" pos:end="38:70"><name pos:start="38:5" pos:end="38:28">usb_uas_queue_fake_sense</name><argument_list pos:start="38:29" pos:end="38:70">(<argument pos:start="38:30" pos:end="38:32"><expr pos:start="38:30" pos:end="38:32"><name pos:start="38:30" pos:end="38:32">uas</name></expr></argument>, <argument pos:start="38:35" pos:end="38:37"><expr pos:start="38:35" pos:end="38:37"><name pos:start="38:35" pos:end="38:37">tag</name></expr></argument>, <argument pos:start="38:40" pos:end="38:69"><expr pos:start="38:40" pos:end="38:69"><name pos:start="38:40" pos:end="38:69">sense_code_OVERLAPPED_COMMANDS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<label pos:start="39:1" pos:end="39:11"><name pos:start="39:1" pos:end="39:10">bad_target</name>:</label>
    <expr_stmt pos:start="40:5" pos:end="40:69"><expr pos:start="40:5" pos:end="40:68"><call pos:start="40:5" pos:end="40:68"><name pos:start="40:5" pos:end="40:28">usb_uas_queue_fake_sense</name><argument_list pos:start="40:29" pos:end="40:68">(<argument pos:start="40:30" pos:end="40:32"><expr pos:start="40:30" pos:end="40:32"><name pos:start="40:30" pos:end="40:32">uas</name></expr></argument>, <argument pos:start="40:35" pos:end="40:37"><expr pos:start="40:35" pos:end="40:37"><name pos:start="40:35" pos:end="40:37">tag</name></expr></argument>, <argument pos:start="40:40" pos:end="40:67"><expr pos:start="40:40" pos:end="40:67"><name pos:start="40:40" pos:end="40:67">sense_code_LUN_NOT_SUPPORTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:16"><expr pos:start="41:5" pos:end="41:15"><call pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:10">g_free</name><argument_list pos:start="41:11" pos:end="41:15">(<argument pos:start="41:12" pos:end="41:14"><expr pos:start="41:12" pos:end="41:14"><name pos:start="41:12" pos:end="41:14">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
