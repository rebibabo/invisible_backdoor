<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13331.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">ide_flush_cache</name><parameter_list pos:start="1:28" pos:end="1:40">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:36">IDEState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:58">

    <if_stmt pos:start="5:5" pos:end="11:5"><if pos:start="5:5" pos:end="11:5">if <condition pos:start="5:8" pos:end="5:23">(<expr pos:start="5:9" pos:end="5:22"><name pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:14">blk</name></name> <operator pos:start="5:16" pos:end="5:17">==</operator> <name pos:start="5:19" pos:end="5:22">NULL</name></expr>)</condition> <block pos:start="5:25" pos:end="11:5">{<block_content pos:start="7:9" pos:end="9:15">

        <expr_stmt pos:start="7:9" pos:end="7:27"><expr pos:start="7:9" pos:end="7:26"><call pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:20">ide_flush_cb</name><argument_list pos:start="7:21" pos:end="7:26">(<argument pos:start="7:22" pos:end="7:22"><expr pos:start="7:22" pos:end="7:22"><name pos:start="7:22" pos:end="7:22">s</name></expr></argument>, <argument pos:start="7:25" pos:end="7:25"><expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:13">status</name></name> <operator pos:start="15:15" pos:end="15:16">|=</operator> <name pos:start="15:18" pos:end="15:26">BUSY_STAT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:17">ide_set_retry</name><argument_list pos:start="17:18" pos:end="17:20">(<argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><name pos:start="17:19" pos:end="17:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:75"><expr pos:start="19:5" pos:end="19:74"><call pos:start="19:5" pos:end="19:74"><name pos:start="19:5" pos:end="19:20">block_acct_start</name><argument_list pos:start="19:21" pos:end="19:74">(<argument pos:start="19:22" pos:end="19:42"><expr pos:start="19:22" pos:end="19:42"><call pos:start="19:22" pos:end="19:42"><name pos:start="19:22" pos:end="19:34">blk_get_stats</name><argument_list pos:start="19:35" pos:end="19:42">(<argument pos:start="19:36" pos:end="19:41"><expr pos:start="19:36" pos:end="19:41"><name pos:start="19:36" pos:end="19:41"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:41">blk</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="19:45" pos:end="19:52"><expr pos:start="19:45" pos:end="19:52"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:52"><name pos:start="19:46" pos:end="19:46">s</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:52">acct</name></name></expr></argument>, <argument pos:start="19:55" pos:end="19:55"><expr pos:start="19:55" pos:end="19:55"><literal type="number" pos:start="19:55" pos:end="19:55">0</literal></expr></argument>, <argument pos:start="19:58" pos:end="19:73"><expr pos:start="19:58" pos:end="19:73"><name pos:start="19:58" pos:end="19:73">BLOCK_ACCT_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:58"><expr pos:start="21:5" pos:end="21:57"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:16">pio_aiocb</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:57"><name pos:start="21:20" pos:end="21:32">blk_aio_flush</name><argument_list pos:start="21:33" pos:end="21:57">(<argument pos:start="21:34" pos:end="21:39"><expr pos:start="21:34" pos:end="21:39"><name pos:start="21:34" pos:end="21:39"><name pos:start="21:34" pos:end="21:34">s</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:39">blk</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:53"><expr pos:start="21:42" pos:end="21:53"><name pos:start="21:42" pos:end="21:53">ide_flush_cb</name></expr></argument>, <argument pos:start="21:56" pos:end="21:56"><expr pos:start="21:56" pos:end="21:56"><name pos:start="21:56" pos:end="21:56">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
