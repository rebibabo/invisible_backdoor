<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7708.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">decode_vui</name><parameter_list pos:start="1:23" pos:end="1:52">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:37"><name pos:start="1:24" pos:end="1:34">HEVCContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:46">HEVCSPS</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">sps</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="213:1">{<block_content pos:start="5:5" pos:end="211:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:7">VUI</name> <modifier pos:start="5:9" pos:end="5:9">*</modifier></type><name pos:start="5:10" pos:end="5:12">vui</name>          <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:33"><name pos:start="5:26" pos:end="5:28">sps</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">vui</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">GetBitContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">gb</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:34">HEVClc</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">sar_present</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:53"><expr pos:start="13:5" pos:end="13:52"><call pos:start="13:5" pos:end="13:52"><name pos:start="13:5" pos:end="13:10">av_log</name><argument_list pos:start="13:11" pos:end="13:52">(<argument pos:start="13:12" pos:end="13:19"><expr pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:19"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:19">avctx</name></name></expr></argument>, <argument pos:start="13:22" pos:end="13:33"><expr pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:33">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="13:36" pos:end="13:51"><expr pos:start="13:36" pos:end="13:51"><literal type="string" pos:start="13:36" pos:end="13:51">"Decoding VUI\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:15">sar_present</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:31"><name pos:start="17:19" pos:end="17:27">get_bits1</name><argument_list pos:start="17:28" pos:end="17:31">(<argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="39:5"><if pos:start="19:5" pos:end="39:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19">sar_present</name></expr>)</condition> <block pos:start="19:22" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:56">

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">uint8_t</name></type> <name pos:start="21:17" pos:end="21:23">sar_idx</name> <init pos:start="21:25" pos:end="21:41">= <expr pos:start="21:27" pos:end="21:41"><call pos:start="21:27" pos:end="21:41"><name pos:start="21:27" pos:end="21:34">get_bits</name><argument_list pos:start="21:35" pos:end="21:41">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">gb</name></expr></argument>, <argument pos:start="21:40" pos:end="21:40"><expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="23:9" pos:end="37:56"><if pos:start="23:9" pos:end="25:40">if <condition pos:start="23:12" pos:end="23:46">(<expr pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:19">sar_idx</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <call pos:start="23:23" pos:end="23:45"><name pos:start="23:23" pos:end="23:36">FF_ARRAY_ELEMS</name><argument_list pos:start="23:37" pos:end="23:45">(<argument pos:start="23:38" pos:end="23:44"><expr pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:44">vui_sar</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:40"><block_content pos:start="25:13" pos:end="25:40">

            <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:15">vui</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">sar</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:39"><name pos:start="25:24" pos:end="25:30">vui_sar</name><index pos:start="25:31" pos:end="25:39">[<expr pos:start="25:32" pos:end="25:38"><name pos:start="25:32" pos:end="25:38">sar_idx</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="27:9" pos:end="33:9">else if <condition pos:start="27:17" pos:end="27:32">(<expr pos:start="27:18" pos:end="27:31"><name pos:start="27:18" pos:end="27:24">sar_idx</name> <operator pos:start="27:26" pos:end="27:27">==</operator> <literal type="number" pos:start="27:29" pos:end="27:31">255</literal></expr>)</condition> <block pos:start="27:34" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:15">vui</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:20">sar</name><operator pos:start="29:21" pos:end="29:21">.</operator><name pos:start="29:22" pos:end="29:24">num</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <call pos:start="29:28" pos:end="29:43"><name pos:start="29:28" pos:end="29:35">get_bits</name><argument_list pos:start="29:36" pos:end="29:43">(<argument pos:start="29:37" pos:end="29:38"><expr pos:start="29:37" pos:end="29:38"><name pos:start="29:37" pos:end="29:38">gb</name></expr></argument>, <argument pos:start="29:41" pos:end="29:42"><expr pos:start="29:41" pos:end="29:42"><literal type="number" pos:start="29:41" pos:end="29:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:24"><name pos:start="31:13" pos:end="31:15">vui</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">sar</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:24">den</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <call pos:start="31:28" pos:end="31:43"><name pos:start="31:28" pos:end="31:35">get_bits</name><argument_list pos:start="31:36" pos:end="31:43">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><name pos:start="31:37" pos:end="31:38">gb</name></expr></argument>, <argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><literal type="number" pos:start="31:41" pos:end="31:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="37:56">else<block type="pseudo" pos:start="35:13" pos:end="37:56"><block_content pos:start="35:13" pos:end="37:56">

            <expr_stmt pos:start="35:13" pos:end="37:56"><expr pos:start="35:13" pos:end="37:55"><call pos:start="35:13" pos:end="37:55"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="37:55">(<argument pos:start="35:20" pos:end="35:27"><expr pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:27"><name pos:start="35:20" pos:end="35:20">s</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:27">avctx</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:43"><expr pos:start="35:30" pos:end="35:43"><name pos:start="35:30" pos:end="35:43">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:45"><expr pos:start="37:20" pos:end="37:45"><literal type="string" pos:start="37:20" pos:end="37:45">"Unknown SAR index: %u.\n"</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:54"><expr pos:start="37:48" pos:end="37:54"><name pos:start="37:48" pos:end="37:54">sar_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:52"><expr pos:start="43:5" pos:end="43:51"><name pos:start="43:5" pos:end="43:35"><name pos:start="43:5" pos:end="43:7">vui</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:35">overscan_info_present_flag</name></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <call pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:47">get_bits1</name><argument_list pos:start="43:48" pos:end="43:51">(<argument pos:start="43:49" pos:end="43:50"><expr pos:start="43:49" pos:end="43:50"><name pos:start="43:49" pos:end="43:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:55"><if pos:start="45:5" pos:end="47:55">if <condition pos:start="45:8" pos:end="45:40">(<expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:11">vui</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:39">overscan_info_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:55"><block_content pos:start="47:9" pos:end="47:55">

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:11">vui</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:38">overscan_appropriate_flag</name></name> <operator pos:start="47:40" pos:end="47:40">=</operator> <call pos:start="47:42" pos:end="47:54"><name pos:start="47:42" pos:end="47:50">get_bits1</name><argument_list pos:start="47:51" pos:end="47:54">(<argument pos:start="47:52" pos:end="47:53"><expr pos:start="47:52" pos:end="47:53"><name pos:start="47:52" pos:end="47:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:56"><expr pos:start="51:5" pos:end="51:55"><name pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:7">vui</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:39">video_signal_type_present_flag</name></name> <operator pos:start="51:41" pos:end="51:41">=</operator> <call pos:start="51:43" pos:end="51:55"><name pos:start="51:43" pos:end="51:51">get_bits1</name><argument_list pos:start="51:52" pos:end="51:55">(<argument pos:start="51:53" pos:end="51:54"><expr pos:start="51:53" pos:end="51:54"><name pos:start="51:53" pos:end="51:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="91:5"><if pos:start="53:5" pos:end="91:5">if <condition pos:start="53:8" pos:end="53:44">(<expr pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:11">vui</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:43">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="53:46" pos:end="91:5">{<block_content pos:start="55:9" pos:end="89:9">

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:11">vui</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:25">video_format</name></name>                    <operator pos:start="55:46" pos:end="55:46">=</operator> <call pos:start="55:48" pos:end="55:62"><name pos:start="55:48" pos:end="55:55">get_bits</name><argument_list pos:start="55:56" pos:end="55:62">(<argument pos:start="55:57" pos:end="55:58"><expr pos:start="55:57" pos:end="55:58"><name pos:start="55:57" pos:end="55:58">gb</name></expr></argument>, <argument pos:start="55:61" pos:end="55:61"><expr pos:start="55:61" pos:end="55:61"><literal type="number" pos:start="55:61" pos:end="55:61">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:11">vui</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:34">video_full_range_flag</name></name>           <operator pos:start="57:46" pos:end="57:46">=</operator> <call pos:start="57:48" pos:end="57:60"><name pos:start="57:48" pos:end="57:56">get_bits1</name><argument_list pos:start="57:57" pos:end="57:60">(<argument pos:start="57:58" pos:end="57:59"><expr pos:start="57:58" pos:end="57:59"><name pos:start="57:58" pos:end="57:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:61"><expr pos:start="59:9" pos:end="59:60"><name pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:11">vui</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:44">colour_description_present_flag</name></name> <operator pos:start="59:46" pos:end="59:46">=</operator> <call pos:start="59:48" pos:end="59:60"><name pos:start="59:48" pos:end="59:56">get_bits1</name><argument_list pos:start="59:57" pos:end="59:60">(<argument pos:start="59:58" pos:end="59:59"><expr pos:start="59:58" pos:end="59:59"><name pos:start="59:58" pos:end="59:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:47"><if pos:start="61:9" pos:end="63:47">if <condition pos:start="61:12" pos:end="61:77">(<expr pos:start="61:13" pos:end="61:76"><name pos:start="61:13" pos:end="61:38"><name pos:start="61:13" pos:end="61:15">vui</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:38">video_full_range_flag</name></name> <operator pos:start="61:40" pos:end="61:41">&amp;&amp;</operator> <name pos:start="61:43" pos:end="61:54"><name pos:start="61:43" pos:end="61:45">sps</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:54">pix_fmt</name></name> <operator pos:start="61:56" pos:end="61:57">==</operator> <name pos:start="61:59" pos:end="61:76">AV_PIX_FMT_YUV420P</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:47"><block_content pos:start="63:13" pos:end="63:47">

            <expr_stmt pos:start="63:13" pos:end="63:47"><expr pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:15">sps</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:24">pix_fmt</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:46">AV_PIX_FMT_YUVJ420P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="89:9"><if pos:start="65:9" pos:end="89:9">if <condition pos:start="65:12" pos:end="65:49">(<expr pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:15">vui</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:48">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="65:51" pos:end="89:9">{<block_content pos:start="67:13" pos:end="87:59">

            <expr_stmt pos:start="67:13" pos:end="67:59"><expr pos:start="67:13" pos:end="67:58"><name pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:15">vui</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:33">colour_primaries</name></name>        <operator pos:start="67:42" pos:end="67:42">=</operator> <call pos:start="67:44" pos:end="67:58"><name pos:start="67:44" pos:end="67:51">get_bits</name><argument_list pos:start="67:52" pos:end="67:58">(<argument pos:start="67:53" pos:end="67:54"><expr pos:start="67:53" pos:end="67:54"><name pos:start="67:53" pos:end="67:54">gb</name></expr></argument>, <argument pos:start="67:57" pos:end="67:57"><expr pos:start="67:57" pos:end="67:57"><literal type="number" pos:start="67:57" pos:end="67:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:59"><expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:40"><name pos:start="69:13" pos:end="69:15">vui</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:40">transfer_characteristic</name></name> <operator pos:start="69:42" pos:end="69:42">=</operator> <call pos:start="69:44" pos:end="69:58"><name pos:start="69:44" pos:end="69:51">get_bits</name><argument_list pos:start="69:52" pos:end="69:58">(<argument pos:start="69:53" pos:end="69:54"><expr pos:start="69:53" pos:end="69:54"><name pos:start="69:53" pos:end="69:54">gb</name></expr></argument>, <argument pos:start="69:57" pos:end="69:57"><expr pos:start="69:57" pos:end="69:57"><literal type="number" pos:start="69:57" pos:end="69:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:59"><expr pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:15">vui</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:30">matrix_coeffs</name></name>           <operator pos:start="71:42" pos:end="71:42">=</operator> <call pos:start="71:44" pos:end="71:58"><name pos:start="71:44" pos:end="71:51">get_bits</name><argument_list pos:start="71:52" pos:end="71:58">(<argument pos:start="71:53" pos:end="71:54"><expr pos:start="71:53" pos:end="71:54"><name pos:start="71:53" pos:end="71:54">gb</name></expr></argument>, <argument pos:start="71:57" pos:end="71:57"><expr pos:start="71:57" pos:end="71:57"><literal type="number" pos:start="71:57" pos:end="71:57">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="line" pos:start="75:13" pos:end="75:50">// Set invalid values to "unspecified"</comment>

            <if_stmt pos:start="77:13" pos:end="79:62"><if pos:start="77:13" pos:end="79:62">if <condition pos:start="77:16" pos:end="77:54">(<expr pos:start="77:17" pos:end="77:53"><name pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:19">vui</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:37">colour_primaries</name></name> <operator pos:start="77:39" pos:end="77:40">&gt;=</operator> <name pos:start="77:42" pos:end="77:53">AVCOL_PRI_NB</name></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:62"><block_content pos:start="79:17" pos:end="79:62">

                <expr_stmt pos:start="79:17" pos:end="79:62"><expr pos:start="79:17" pos:end="79:61"><name pos:start="79:17" pos:end="79:37"><name pos:start="79:17" pos:end="79:19">vui</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:37">colour_primaries</name></name> <operator pos:start="79:39" pos:end="79:39">=</operator> <name pos:start="79:41" pos:end="79:61">AVCOL_PRI_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="83:69"><if pos:start="81:13" pos:end="83:69">if <condition pos:start="81:16" pos:end="81:61">(<expr pos:start="81:17" pos:end="81:60"><name pos:start="81:17" pos:end="81:44"><name pos:start="81:17" pos:end="81:19">vui</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:44">transfer_characteristic</name></name> <operator pos:start="81:46" pos:end="81:47">&gt;=</operator> <name pos:start="81:49" pos:end="81:60">AVCOL_TRC_NB</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:69"><block_content pos:start="83:17" pos:end="83:69">

                <expr_stmt pos:start="83:17" pos:end="83:69"><expr pos:start="83:17" pos:end="83:68"><name pos:start="83:17" pos:end="83:44"><name pos:start="83:17" pos:end="83:19">vui</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:44">transfer_characteristic</name></name> <operator pos:start="83:46" pos:end="83:46">=</operator> <name pos:start="83:48" pos:end="83:68">AVCOL_TRC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="85:13" pos:end="87:59"><if pos:start="85:13" pos:end="87:59">if <condition pos:start="85:16" pos:end="85:51">(<expr pos:start="85:17" pos:end="85:50"><name pos:start="85:17" pos:end="85:34"><name pos:start="85:17" pos:end="85:19">vui</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:34">matrix_coeffs</name></name> <operator pos:start="85:36" pos:end="85:37">&gt;=</operator> <name pos:start="85:39" pos:end="85:50">AVCOL_SPC_NB</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:59"><block_content pos:start="87:17" pos:end="87:59">

                <expr_stmt pos:start="87:17" pos:end="87:59"><expr pos:start="87:17" pos:end="87:58"><name pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:19">vui</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:34">matrix_coeffs</name></name> <operator pos:start="87:36" pos:end="87:36">=</operator> <name pos:start="87:38" pos:end="87:58">AVCOL_SPC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:54"><expr pos:start="95:5" pos:end="95:53"><name pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:7">vui</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:37">chroma_loc_info_present_flag</name></name> <operator pos:start="95:39" pos:end="95:39">=</operator> <call pos:start="95:41" pos:end="95:53"><name pos:start="95:41" pos:end="95:49">get_bits1</name><argument_list pos:start="95:50" pos:end="95:53">(<argument pos:start="95:51" pos:end="95:52"><expr pos:start="95:51" pos:end="95:52"><name pos:start="95:51" pos:end="95:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:42">(<expr pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:41"><name pos:start="97:9" pos:end="97:11">vui</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:41">chroma_loc_info_present_flag</name></name></expr>)</condition> <block pos:start="97:44" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:74">

        <expr_stmt pos:start="99:9" pos:end="99:74"><expr pos:start="99:9" pos:end="99:73"><name pos:start="99:9" pos:end="99:45"><name pos:start="99:9" pos:end="99:11">vui</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:45">chroma_sample_loc_type_top_field</name></name>    <operator pos:start="99:50" pos:end="99:50">=</operator> <call pos:start="99:52" pos:end="99:73"><name pos:start="99:52" pos:end="99:69">get_ue_golomb_long</name><argument_list pos:start="99:70" pos:end="99:73">(<argument pos:start="99:71" pos:end="99:72"><expr pos:start="99:71" pos:end="99:72"><name pos:start="99:71" pos:end="99:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:74"><expr pos:start="101:9" pos:end="101:73"><name pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:11">vui</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:48">chroma_sample_loc_type_bottom_field</name></name> <operator pos:start="101:50" pos:end="101:50">=</operator> <call pos:start="101:52" pos:end="101:73"><name pos:start="101:52" pos:end="101:69">get_ue_golomb_long</name><argument_list pos:start="101:70" pos:end="101:73">(<argument pos:start="101:71" pos:end="101:72"><expr pos:start="101:71" pos:end="101:72"><name pos:start="101:71" pos:end="101:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:55"><expr pos:start="107:5" pos:end="107:54"><name pos:start="107:5" pos:end="107:38"><name pos:start="107:5" pos:end="107:7">vui</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:38">neutra_chroma_indication_flag</name></name> <operator pos:start="107:40" pos:end="107:40">=</operator> <call pos:start="107:42" pos:end="107:54"><name pos:start="107:42" pos:end="107:50">get_bits1</name><argument_list pos:start="107:51" pos:end="107:54">(<argument pos:start="107:52" pos:end="107:53"><expr pos:start="107:52" pos:end="107:53"><name pos:start="107:52" pos:end="107:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:55"><expr pos:start="109:5" pos:end="109:54"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:7">vui</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:23">field_seq_flag</name></name>                <operator pos:start="109:40" pos:end="109:40">=</operator> <call pos:start="109:42" pos:end="109:54"><name pos:start="109:42" pos:end="109:50">get_bits1</name><argument_list pos:start="109:51" pos:end="109:54">(<argument pos:start="109:52" pos:end="109:53"><expr pos:start="109:52" pos:end="109:53"><name pos:start="109:52" pos:end="109:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:55"><expr pos:start="111:5" pos:end="111:54"><name pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:7">vui</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:38">frame_field_info_present_flag</name></name> <operator pos:start="111:40" pos:end="111:40">=</operator> <call pos:start="111:42" pos:end="111:54"><name pos:start="111:42" pos:end="111:50">get_bits1</name><argument_list pos:start="111:51" pos:end="111:54">(<argument pos:start="111:52" pos:end="111:53"><expr pos:start="111:52" pos:end="111:53"><name pos:start="111:52" pos:end="111:53">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:53"><expr pos:start="115:5" pos:end="115:52"><name pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:7">vui</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:36">default_display_window_flag</name></name> <operator pos:start="115:38" pos:end="115:38">=</operator> <call pos:start="115:40" pos:end="115:52"><name pos:start="115:40" pos:end="115:48">get_bits1</name><argument_list pos:start="115:49" pos:end="115:52">(<argument pos:start="115:50" pos:end="115:51"><expr pos:start="115:50" pos:end="115:51"><name pos:start="115:50" pos:end="115:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="161:5"><if pos:start="117:5" pos:end="161:5">if <condition pos:start="117:8" pos:end="117:41">(<expr pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:40"><name pos:start="117:9" pos:end="117:11">vui</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:40">default_display_window_flag</name></name></expr>)</condition> <block pos:start="117:43" pos:end="161:5">{<block_content pos:start="121:9" pos:end="159:9">

        <comment type="line" pos:start="119:9" pos:end="119:41">//TODO: * 2 is only valid for 420</comment>

        <expr_stmt pos:start="121:9" pos:end="121:69"><expr pos:start="121:9" pos:end="121:68"><name pos:start="121:9" pos:end="121:37"><name pos:start="121:9" pos:end="121:11">vui</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:25">def_disp_win</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:37">left_offset</name></name>   <operator pos:start="121:41" pos:end="121:41">=</operator> <call pos:start="121:43" pos:end="121:64"><name pos:start="121:43" pos:end="121:60">get_ue_golomb_long</name><argument_list pos:start="121:61" pos:end="121:64">(<argument pos:start="121:62" pos:end="121:63"><expr pos:start="121:62" pos:end="121:63"><name pos:start="121:62" pos:end="121:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="121:66" pos:end="121:66">*</operator> <literal type="number" pos:start="121:68" pos:end="121:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:69"><expr pos:start="123:9" pos:end="123:68"><name pos:start="123:9" pos:end="123:38"><name pos:start="123:9" pos:end="123:11">vui</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:25">def_disp_win</name><operator pos:start="123:26" pos:end="123:26">.</operator><name pos:start="123:27" pos:end="123:38">right_offset</name></name>  <operator pos:start="123:41" pos:end="123:41">=</operator> <call pos:start="123:43" pos:end="123:64"><name pos:start="123:43" pos:end="123:60">get_ue_golomb_long</name><argument_list pos:start="123:61" pos:end="123:64">(<argument pos:start="123:62" pos:end="123:63"><expr pos:start="123:62" pos:end="123:63"><name pos:start="123:62" pos:end="123:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="123:66" pos:end="123:66">*</operator> <literal type="number" pos:start="123:68" pos:end="123:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:69"><expr pos:start="125:9" pos:end="125:68"><name pos:start="125:9" pos:end="125:36"><name pos:start="125:9" pos:end="125:11">vui</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:25">def_disp_win</name><operator pos:start="125:26" pos:end="125:26">.</operator><name pos:start="125:27" pos:end="125:36">top_offset</name></name>    <operator pos:start="125:41" pos:end="125:41">=</operator> <call pos:start="125:43" pos:end="125:64"><name pos:start="125:43" pos:end="125:60">get_ue_golomb_long</name><argument_list pos:start="125:61" pos:end="125:64">(<argument pos:start="125:62" pos:end="125:63"><expr pos:start="125:62" pos:end="125:63"><name pos:start="125:62" pos:end="125:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="125:66" pos:end="125:66">*</operator> <literal type="number" pos:start="125:68" pos:end="125:68">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:69"><expr pos:start="127:9" pos:end="127:68"><name pos:start="127:9" pos:end="127:39"><name pos:start="127:9" pos:end="127:11">vui</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:25">def_disp_win</name><operator pos:start="127:26" pos:end="127:26">.</operator><name pos:start="127:27" pos:end="127:39">bottom_offset</name></name> <operator pos:start="127:41" pos:end="127:41">=</operator> <call pos:start="127:43" pos:end="127:64"><name pos:start="127:43" pos:end="127:60">get_ue_golomb_long</name><argument_list pos:start="127:61" pos:end="127:64">(<argument pos:start="127:62" pos:end="127:63"><expr pos:start="127:62" pos:end="127:63"><name pos:start="127:62" pos:end="127:63">gb</name></expr></argument>)</argument_list></call> <operator pos:start="127:66" pos:end="127:66">*</operator> <literal type="number" pos:start="127:68" pos:end="127:68">2</literal></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="159:9"><if pos:start="131:9" pos:end="159:9">if <condition pos:start="131:12" pos:end="133:55">(<expr pos:start="131:13" pos:end="133:54"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:31">apply_defdispwin</name></name> <operator pos:start="131:33" pos:end="131:34">&amp;&amp;</operator>

            <name pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:20">avctx</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:28">flags2</name></name> <operator pos:start="133:30" pos:end="133:30">&amp;</operator> <name pos:start="133:32" pos:end="133:54">CODEC_FLAG2_IGNORE_CROP</name></expr>)</condition> <block pos:start="133:57" pos:end="159:9">{<block_content pos:start="135:13" pos:end="157:48">

            <expr_stmt pos:start="135:13" pos:end="147:52"><expr pos:start="135:13" pos:end="147:51"><call pos:start="135:13" pos:end="147:51"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="147:51">(<argument pos:start="135:20" pos:end="135:27"><expr pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:27"><name pos:start="135:20" pos:end="135:20">s</name><operator pos:start="135:21" pos:end="135:22">-&gt;</operator><name pos:start="135:23" pos:end="135:27">avctx</name></name></expr></argument>, <argument pos:start="135:30" pos:end="135:41"><expr pos:start="135:30" pos:end="135:41"><name pos:start="135:30" pos:end="135:41">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="137:20" pos:end="139:62"><expr pos:start="137:20" pos:end="139:62"><literal type="string" pos:start="137:20" pos:end="137:60">"discarding vui default display window, "</literal>

                   <literal type="string" pos:start="139:20" pos:end="139:62">"original values are l:%u r:%u t:%u b:%u\n"</literal></expr></argument>,

                   <argument pos:start="141:20" pos:end="141:48"><expr pos:start="141:20" pos:end="141:48"><name pos:start="141:20" pos:end="141:48"><name pos:start="141:20" pos:end="141:22">vui</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:36">def_disp_win</name><operator pos:start="141:37" pos:end="141:37">.</operator><name pos:start="141:38" pos:end="141:48">left_offset</name></name></expr></argument>,

                   <argument pos:start="143:20" pos:end="143:49"><expr pos:start="143:20" pos:end="143:49"><name pos:start="143:20" pos:end="143:49"><name pos:start="143:20" pos:end="143:22">vui</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:36">def_disp_win</name><operator pos:start="143:37" pos:end="143:37">.</operator><name pos:start="143:38" pos:end="143:49">right_offset</name></name></expr></argument>,

                   <argument pos:start="145:20" pos:end="145:47"><expr pos:start="145:20" pos:end="145:47"><name pos:start="145:20" pos:end="145:47"><name pos:start="145:20" pos:end="145:22">vui</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:36">def_disp_win</name><operator pos:start="145:37" pos:end="145:37">.</operator><name pos:start="145:38" pos:end="145:47">top_offset</name></name></expr></argument>,

                   <argument pos:start="147:20" pos:end="147:50"><expr pos:start="147:20" pos:end="147:50"><name pos:start="147:20" pos:end="147:50"><name pos:start="147:20" pos:end="147:22">vui</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:36">def_disp_win</name><operator pos:start="147:37" pos:end="147:37">.</operator><name pos:start="147:38" pos:end="147:50">bottom_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="151:13" pos:end="157:48"><expr pos:start="151:13" pos:end="157:47"><name pos:start="151:13" pos:end="151:41"><name pos:start="151:13" pos:end="151:15">vui</name><operator pos:start="151:16" pos:end="151:17">-&gt;</operator><name pos:start="151:18" pos:end="151:29">def_disp_win</name><operator pos:start="151:30" pos:end="151:30">.</operator><name pos:start="151:31" pos:end="151:41">left_offset</name></name>   <operator pos:start="151:45" pos:end="151:45">=</operator>

            <name pos:start="153:13" pos:end="153:42"><name pos:start="153:13" pos:end="153:15">vui</name><operator pos:start="153:16" pos:end="153:17">-&gt;</operator><name pos:start="153:18" pos:end="153:29">def_disp_win</name><operator pos:start="153:30" pos:end="153:30">.</operator><name pos:start="153:31" pos:end="153:42">right_offset</name></name>  <operator pos:start="153:45" pos:end="153:45">=</operator>

            <name pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:15">vui</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:29">def_disp_win</name><operator pos:start="155:30" pos:end="155:30">.</operator><name pos:start="155:31" pos:end="155:40">top_offset</name></name>    <operator pos:start="155:45" pos:end="155:45">=</operator>

            <name pos:start="157:13" pos:end="157:43"><name pos:start="157:13" pos:end="157:15">vui</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:29">def_disp_win</name><operator pos:start="157:30" pos:end="157:30">.</operator><name pos:start="157:31" pos:end="157:43">bottom_offset</name></name> <operator pos:start="157:45" pos:end="157:45">=</operator> <literal type="number" pos:start="157:47" pos:end="157:47">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:54"><expr pos:start="165:5" pos:end="165:53"><name pos:start="165:5" pos:end="165:37"><name pos:start="165:5" pos:end="165:7">vui</name><operator pos:start="165:8" pos:end="165:9">-&gt;</operator><name pos:start="165:10" pos:end="165:37">vui_timing_info_present_flag</name></name> <operator pos:start="165:39" pos:end="165:39">=</operator> <call pos:start="165:41" pos:end="165:53"><name pos:start="165:41" pos:end="165:49">get_bits1</name><argument_list pos:start="165:50" pos:end="165:53">(<argument pos:start="165:51" pos:end="165:52"><expr pos:start="165:51" pos:end="165:52"><name pos:start="165:51" pos:end="165:52">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="169:5" pos:end="187:5"><if pos:start="169:5" pos:end="187:5">if <condition pos:start="169:8" pos:end="169:42">(<expr pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:41"><name pos:start="169:9" pos:end="169:11">vui</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:41">vui_timing_info_present_flag</name></name></expr>)</condition> <block pos:start="169:44" pos:end="187:5">{<block_content pos:start="171:9" pos:end="185:50">

        <expr_stmt pos:start="171:9" pos:end="171:68"><expr pos:start="171:9" pos:end="171:67"><name pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:11">vui</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:34">vui_num_units_in_tick</name></name>               <operator pos:start="171:50" pos:end="171:50">=</operator> <call pos:start="171:52" pos:end="171:67"><name pos:start="171:52" pos:end="171:59">get_bits</name><argument_list pos:start="171:60" pos:end="171:67">(<argument pos:start="171:61" pos:end="171:62"><expr pos:start="171:61" pos:end="171:62"><name pos:start="171:61" pos:end="171:62">gb</name></expr></argument>, <argument pos:start="171:65" pos:end="171:66"><expr pos:start="171:65" pos:end="171:66"><literal type="number" pos:start="171:65" pos:end="171:66">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:68"><expr pos:start="173:9" pos:end="173:67"><name pos:start="173:9" pos:end="173:27"><name pos:start="173:9" pos:end="173:11">vui</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:27">vui_time_scale</name></name>                      <operator pos:start="173:50" pos:end="173:50">=</operator> <call pos:start="173:52" pos:end="173:67"><name pos:start="173:52" pos:end="173:59">get_bits</name><argument_list pos:start="173:60" pos:end="173:67">(<argument pos:start="173:61" pos:end="173:62"><expr pos:start="173:61" pos:end="173:62"><name pos:start="173:61" pos:end="173:62">gb</name></expr></argument>, <argument pos:start="173:65" pos:end="173:66"><expr pos:start="173:65" pos:end="173:66"><literal type="number" pos:start="173:65" pos:end="173:66">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:65"><expr pos:start="175:9" pos:end="175:64"><name pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:11">vui</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:48">vui_poc_proportional_to_timing_flag</name></name> <operator pos:start="175:50" pos:end="175:50">=</operator> <call pos:start="175:52" pos:end="175:64"><name pos:start="175:52" pos:end="175:60">get_bits1</name><argument_list pos:start="175:61" pos:end="175:64">(<argument pos:start="175:62" pos:end="175:63"><expr pos:start="175:62" pos:end="175:63"><name pos:start="175:62" pos:end="175:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="177:9" pos:end="179:76"><if pos:start="177:9" pos:end="179:76">if <condition pos:start="177:12" pos:end="177:53">(<expr pos:start="177:13" pos:end="177:52"><name pos:start="177:13" pos:end="177:52"><name pos:start="177:13" pos:end="177:15">vui</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:52">vui_poc_proportional_to_timing_flag</name></name></expr>)</condition><block type="pseudo" pos:start="179:13" pos:end="179:76"><block_content pos:start="179:13" pos:end="179:76">

            <expr_stmt pos:start="179:13" pos:end="179:76"><expr pos:start="179:13" pos:end="179:75"><name pos:start="179:13" pos:end="179:50"><name pos:start="179:13" pos:end="179:15">vui</name><operator pos:start="179:16" pos:end="179:17">-&gt;</operator><name pos:start="179:18" pos:end="179:50">vui_num_ticks_poc_diff_one_minus1</name></name> <operator pos:start="179:52" pos:end="179:52">=</operator> <call pos:start="179:54" pos:end="179:75"><name pos:start="179:54" pos:end="179:71">get_ue_golomb_long</name><argument_list pos:start="179:72" pos:end="179:75">(<argument pos:start="179:73" pos:end="179:74"><expr pos:start="179:73" pos:end="179:74"><name pos:start="179:73" pos:end="179:74">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:61"><expr pos:start="181:9" pos:end="181:60"><name pos:start="181:9" pos:end="181:44"><name pos:start="181:9" pos:end="181:11">vui</name><operator pos:start="181:12" pos:end="181:13">-&gt;</operator><name pos:start="181:14" pos:end="181:44">vui_hrd_parameters_present_flag</name></name> <operator pos:start="181:46" pos:end="181:46">=</operator> <call pos:start="181:48" pos:end="181:60"><name pos:start="181:48" pos:end="181:56">get_bits1</name><argument_list pos:start="181:57" pos:end="181:60">(<argument pos:start="181:58" pos:end="181:59"><expr pos:start="181:58" pos:end="181:59"><name pos:start="181:58" pos:end="181:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="185:50"><if pos:start="183:9" pos:end="185:50">if <condition pos:start="183:12" pos:end="183:49">(<expr pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:15">vui</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:48">vui_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:50"><block_content pos:start="185:13" pos:end="185:50">

            <expr_stmt pos:start="185:13" pos:end="185:50"><expr pos:start="185:13" pos:end="185:49"><call pos:start="185:13" pos:end="185:49"><name pos:start="185:13" pos:end="185:22">decode_hrd</name><argument_list pos:start="185:23" pos:end="185:49">(<argument pos:start="185:24" pos:end="185:24"><expr pos:start="185:24" pos:end="185:24"><name pos:start="185:24" pos:end="185:24">s</name></expr></argument>, <argument pos:start="185:27" pos:end="185:27"><expr pos:start="185:27" pos:end="185:27"><literal type="number" pos:start="185:27" pos:end="185:27">1</literal></expr></argument>, <argument pos:start="185:30" pos:end="185:48"><expr pos:start="185:30" pos:end="185:48"><name pos:start="185:30" pos:end="185:48"><name pos:start="185:30" pos:end="185:32">sps</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:48">max_sub_layers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:52"><expr pos:start="191:5" pos:end="191:51"><name pos:start="191:5" pos:end="191:35"><name pos:start="191:5" pos:end="191:7">vui</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:35">bitstream_restriction_flag</name></name> <operator pos:start="191:37" pos:end="191:37">=</operator> <call pos:start="191:39" pos:end="191:51"><name pos:start="191:39" pos:end="191:47">get_bits1</name><argument_list pos:start="191:48" pos:end="191:51">(<argument pos:start="191:49" pos:end="191:50"><expr pos:start="191:49" pos:end="191:50"><name pos:start="191:49" pos:end="191:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="211:5"><if pos:start="193:5" pos:end="211:5">if <condition pos:start="193:8" pos:end="193:40">(<expr pos:start="193:9" pos:end="193:39"><name pos:start="193:9" pos:end="193:39"><name pos:start="193:9" pos:end="193:11">vui</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:39">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="193:42" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:78">

        <expr_stmt pos:start="195:9" pos:end="195:69"><expr pos:start="195:9" pos:end="195:68"><name pos:start="195:9" pos:end="195:39"><name pos:start="195:9" pos:end="195:11">vui</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:39">tiles_fixed_structure_flag</name></name>              <operator pos:start="195:54" pos:end="195:54">=</operator> <call pos:start="195:56" pos:end="195:68"><name pos:start="195:56" pos:end="195:64">get_bits1</name><argument_list pos:start="195:65" pos:end="195:68">(<argument pos:start="195:66" pos:end="195:67"><expr pos:start="195:66" pos:end="195:67"><name pos:start="195:66" pos:end="195:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:69"><expr pos:start="197:9" pos:end="197:68"><name pos:start="197:9" pos:end="197:52"><name pos:start="197:9" pos:end="197:11">vui</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:52">motion_vectors_over_pic_boundaries_flag</name></name> <operator pos:start="197:54" pos:end="197:54">=</operator> <call pos:start="197:56" pos:end="197:68"><name pos:start="197:56" pos:end="197:64">get_bits1</name><argument_list pos:start="197:65" pos:end="197:68">(<argument pos:start="197:66" pos:end="197:67"><expr pos:start="197:66" pos:end="197:67"><name pos:start="197:66" pos:end="197:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:69"><expr pos:start="199:9" pos:end="199:68"><name pos:start="199:9" pos:end="199:42"><name pos:start="199:9" pos:end="199:11">vui</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:42">restricted_ref_pic_lists_flag</name></name>           <operator pos:start="199:54" pos:end="199:54">=</operator> <call pos:start="199:56" pos:end="199:68"><name pos:start="199:56" pos:end="199:64">get_bits1</name><argument_list pos:start="199:65" pos:end="199:68">(<argument pos:start="199:66" pos:end="199:67"><expr pos:start="199:66" pos:end="199:67"><name pos:start="199:66" pos:end="199:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:78"><expr pos:start="201:9" pos:end="201:77"><name pos:start="201:9" pos:end="201:41"><name pos:start="201:9" pos:end="201:11">vui</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:41">min_spatial_segmentation_idc</name></name>            <operator pos:start="201:54" pos:end="201:54">=</operator> <call pos:start="201:56" pos:end="201:77"><name pos:start="201:56" pos:end="201:73">get_ue_golomb_long</name><argument_list pos:start="201:74" pos:end="201:77">(<argument pos:start="201:75" pos:end="201:76"><expr pos:start="201:75" pos:end="201:76"><name pos:start="201:75" pos:end="201:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:78"><expr pos:start="203:9" pos:end="203:77"><name pos:start="203:9" pos:end="203:36"><name pos:start="203:9" pos:end="203:11">vui</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:36">max_bytes_per_pic_denom</name></name>                 <operator pos:start="203:54" pos:end="203:54">=</operator> <call pos:start="203:56" pos:end="203:77"><name pos:start="203:56" pos:end="203:73">get_ue_golomb_long</name><argument_list pos:start="203:74" pos:end="203:77">(<argument pos:start="203:75" pos:end="203:76"><expr pos:start="203:75" pos:end="203:76"><name pos:start="203:75" pos:end="203:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:78"><expr pos:start="205:9" pos:end="205:77"><name pos:start="205:9" pos:end="205:38"><name pos:start="205:9" pos:end="205:11">vui</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:38">max_bits_per_min_cu_denom</name></name>               <operator pos:start="205:54" pos:end="205:54">=</operator> <call pos:start="205:56" pos:end="205:77"><name pos:start="205:56" pos:end="205:73">get_ue_golomb_long</name><argument_list pos:start="205:74" pos:end="205:77">(<argument pos:start="205:75" pos:end="205:76"><expr pos:start="205:75" pos:end="205:76"><name pos:start="205:75" pos:end="205:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:78"><expr pos:start="207:9" pos:end="207:77"><name pos:start="207:9" pos:end="207:42"><name pos:start="207:9" pos:end="207:11">vui</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:42">log2_max_mv_length_horizontal</name></name>           <operator pos:start="207:54" pos:end="207:54">=</operator> <call pos:start="207:56" pos:end="207:77"><name pos:start="207:56" pos:end="207:73">get_ue_golomb_long</name><argument_list pos:start="207:74" pos:end="207:77">(<argument pos:start="207:75" pos:end="207:76"><expr pos:start="207:75" pos:end="207:76"><name pos:start="207:75" pos:end="207:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:78"><expr pos:start="209:9" pos:end="209:77"><name pos:start="209:9" pos:end="209:40"><name pos:start="209:9" pos:end="209:11">vui</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:40">log2_max_mv_length_vertical</name></name>             <operator pos:start="209:54" pos:end="209:54">=</operator> <call pos:start="209:56" pos:end="209:77"><name pos:start="209:56" pos:end="209:73">get_ue_golomb_long</name><argument_list pos:start="209:74" pos:end="209:77">(<argument pos:start="209:75" pos:end="209:76"><expr pos:start="209:75" pos:end="209:76"><name pos:start="209:75" pos:end="209:76">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
