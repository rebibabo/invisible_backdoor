<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6965.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:15">sync</name><parameter_list pos:start="1:16" pos:end="1:100">(<parameter pos:start="1:17" pos:end="1:34"><decl pos:start="1:17" pos:end="1:34"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:31">AVFormatContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">s</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:43">int64_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:54">timestamp</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:59">int</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:66">flags</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:85"><decl pos:start="1:69" pos:end="1:85"><type pos:start="1:69" pos:end="1:85"><name pos:start="1:69" pos:end="1:71">int</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:85">stream_index</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:99"><decl pos:start="1:88" pos:end="1:99"><type pos:start="1:88" pos:end="1:99"><name pos:start="1:88" pos:end="1:94">int64_t</name> <modifier pos:start="1:96" pos:end="1:96">*</modifier></type><name pos:start="1:97" pos:end="1:99">pos</name></decl></parameter>)</parameter_list><block pos:start="1:101" pos:end="109:1">{<block_content pos:start="3:5" pos:end="107:14">

    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:20"><name pos:start="3:5" pos:end="3:18">RMDemuxContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:22">rm</name> <init pos:start="3:24" pos:end="3:37">= <expr pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:26">s</name><operator pos:start="3:27" pos:end="3:28">-&gt;</operator><name pos:start="3:29" pos:end="3:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><name pos:start="5:25" pos:end="5:29"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">num</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">res</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:24">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">state</name><init pos:start="11:19" pos:end="11:29">=<expr pos:start="11:20" pos:end="11:29"><literal type="number" pos:start="11:20" pos:end="11:29">0xFFFFFFFF</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="105:5">while<condition pos:start="15:10" pos:end="15:24">(<expr pos:start="15:11" pos:end="15:23"><operator pos:start="15:11" pos:end="15:11">!</operator><call pos:start="15:12" pos:end="15:23"><name pos:start="15:12" pos:end="15:19">url_feof</name><argument_list pos:start="15:20" pos:end="15:23">(<argument pos:start="15:21" pos:end="15:22"><expr pos:start="15:21" pos:end="15:22"><name pos:start="15:21" pos:end="15:22">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="15:25" pos:end="105:5">{<block_content pos:start="17:9" pos:end="103:19">

        <expr_stmt pos:start="17:9" pos:end="17:32"><expr pos:start="17:9" pos:end="17:31"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:12">pos</name><operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:27"><name pos:start="17:15" pos:end="17:23">url_ftell</name><argument_list pos:start="17:24" pos:end="17:27">(<argument pos:start="17:25" pos:end="17:26"><expr pos:start="17:25" pos:end="17:26"><name pos:start="17:25" pos:end="17:26">pb</name></expr></argument>)</argument_list></call> <operator pos:start="17:29" pos:end="17:29">-</operator> <literal type="number" pos:start="17:31" pos:end="17:31">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="73:9"><if pos:start="19:9" pos:end="29:9">if<condition pos:start="19:11" pos:end="19:33">(<expr pos:start="19:12" pos:end="19:32"><name pos:start="19:12" pos:end="19:28"><name pos:start="19:12" pos:end="19:13">rm</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:28">remaining_len</name></name> <operator pos:start="19:30" pos:end="19:30">&gt;</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>)</condition><block pos:start="19:34" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:22">

            <expr_stmt pos:start="21:13" pos:end="21:36"><expr pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:15">num</name><operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:35"><name pos:start="21:18" pos:end="21:19">rm</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:35">current_stream</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:35"><expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:15">len</name><operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:34"><name pos:start="23:18" pos:end="23:19">rm</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:34">remaining_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:40"><expr pos:start="25:13" pos:end="25:39"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:22">timestamp</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:39">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:22"><expr pos:start="27:13" pos:end="27:21"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:18">flags</name><operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="29:10" pos:end="73:9">else<block pos:start="29:14" pos:end="73:9">{<block_content pos:start="31:13" pos:end="71:22">

            <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:17">state</name><operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:25">state</name><operator pos:start="31:26" pos:end="31:27">&lt;&lt;</operator><literal type="number" pos:start="31:28" pos:end="31:28">8</literal><operator pos:start="31:29" pos:end="31:29">)</operator> <operator pos:start="31:31" pos:end="31:31">+</operator> <call pos:start="31:33" pos:end="31:44"><name pos:start="31:33" pos:end="31:40">get_byte</name><argument_list pos:start="31:41" pos:end="31:44">(<argument pos:start="31:42" pos:end="31:43"><expr pos:start="31:42" pos:end="31:43"><name pos:start="31:42" pos:end="31:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="35:13" pos:end="45:13"><if pos:start="35:13" pos:end="45:13">if<condition pos:start="35:15" pos:end="35:52">(<expr pos:start="35:16" pos:end="35:51"><name pos:start="35:16" pos:end="35:20">state</name> <operator pos:start="35:22" pos:end="35:23">==</operator> <call pos:start="35:25" pos:end="35:51"><name pos:start="35:25" pos:end="35:31">MKBETAG</name><argument_list pos:start="35:32" pos:end="35:51">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><literal type="char" pos:start="35:33" pos:end="35:35">'I'</literal></expr></argument>, <argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><literal type="char" pos:start="35:38" pos:end="35:40">'N'</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><literal type="char" pos:start="35:43" pos:end="35:45">'D'</literal></expr></argument>, <argument pos:start="35:48" pos:end="35:50"><expr pos:start="35:48" pos:end="35:50"><literal type="char" pos:start="35:48" pos:end="35:50">'X'</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="35:53" pos:end="45:13">{<block_content pos:start="37:17" pos:end="43:26">

                <expr_stmt pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:19">len</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:30">get_be16</name><argument_list pos:start="37:31" pos:end="37:34">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="37:36" pos:end="37:36">-</operator> <literal type="number" pos:start="37:38" pos:end="37:38">6</literal></expr>;</expr_stmt>

                <if_stmt pos:start="39:17" pos:end="41:29"><if pos:start="39:17" pos:end="41:29">if<condition pos:start="39:19" pos:end="39:25">(<expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:22">len</name><operator pos:start="39:23" pos:end="39:23">&lt;</operator><literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>)</condition><block type="pseudo" pos:start="41:21" pos:end="41:29"><block_content pos:start="41:21" pos:end="41:29">

                    <continue pos:start="41:21" pos:end="41:29">continue;</continue></block_content></block></if></if_stmt>

                <goto pos:start="43:17" pos:end="43:26">goto <name pos:start="43:22" pos:end="43:25">skip</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="49:13" pos:end="51:25"><if pos:start="49:13" pos:end="51:25">if<condition pos:start="49:15" pos:end="49:54">(<expr pos:start="49:16" pos:end="49:53"><name pos:start="49:16" pos:end="49:20">state</name> <operator pos:start="49:22" pos:end="49:22">&gt;</operator> <operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:32">unsigned</name><operator pos:start="49:33" pos:end="49:33">)</operator><literal type="number" pos:start="49:34" pos:end="49:39">0xFFFF</literal> <operator pos:start="49:41" pos:end="49:42">||</operator> <name pos:start="49:44" pos:end="49:48">state</name> <operator pos:start="49:50" pos:end="49:50">&lt;</operator> <literal type="number" pos:start="49:52" pos:end="49:53">12</literal></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:25"><block_content pos:start="51:17" pos:end="51:25">

                <continue pos:start="51:17" pos:end="51:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:22"><expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:15">len</name><operator pos:start="53:16" pos:end="53:16">=</operator><name pos:start="53:17" pos:end="53:21">state</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:30"><expr pos:start="55:13" pos:end="55:29"><name pos:start="55:13" pos:end="55:17">state</name><operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:29">0xFFFFFFFF</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="59:13" pos:end="59:31"><expr pos:start="59:13" pos:end="59:30"><name pos:start="59:13" pos:end="59:15">num</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:30"><name pos:start="59:19" pos:end="59:26">get_be16</name><argument_list pos:start="59:27" pos:end="59:30">(<argument pos:start="59:28" pos:end="59:29"><expr pos:start="59:28" pos:end="59:29"><name pos:start="59:28" pos:end="59:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><operator pos:start="61:13" pos:end="61:13">*</operator><name pos:start="61:14" pos:end="61:22">timestamp</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:37"><name pos:start="61:26" pos:end="61:33">get_be32</name><argument_list pos:start="61:34" pos:end="61:37">(<argument pos:start="61:35" pos:end="61:36"><expr pos:start="61:35" pos:end="61:36"><name pos:start="61:35" pos:end="61:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:30"><expr pos:start="63:13" pos:end="63:29"><name pos:start="63:13" pos:end="63:15">res</name><operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:25">get_byte</name><argument_list pos:start="63:26" pos:end="63:29">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><name pos:start="63:27" pos:end="63:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:32" pos:end="63:45">/* reserved */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><operator pos:start="65:13" pos:end="65:13">*</operator><name pos:start="65:14" pos:end="65:18">flags</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <call pos:start="65:22" pos:end="65:33"><name pos:start="65:22" pos:end="65:29">get_byte</name><argument_list pos:start="65:30" pos:end="65:33">(<argument pos:start="65:31" pos:end="65:32"><expr pos:start="65:31" pos:end="65:32"><name pos:start="65:31" pos:end="65:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:36" pos:end="65:46">/* flags */</comment>





            <expr_stmt pos:start="71:13" pos:end="71:22"><expr pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:15">len</name> <operator pos:start="71:17" pos:end="71:18">-=</operator> <literal type="number" pos:start="71:20" pos:end="71:21">12</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="75:9" pos:end="83:9">for<control pos:start="75:12" pos:end="75:36">(<init pos:start="75:13" pos:end="75:16"><expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:13">i</name><operator pos:start="75:14" pos:end="75:14">=</operator><literal type="number" pos:start="75:15" pos:end="75:15">0</literal></expr>;</init><condition pos:start="75:17" pos:end="75:32"><expr pos:start="75:17" pos:end="75:31"><name pos:start="75:17" pos:end="75:17">i</name><operator pos:start="75:18" pos:end="75:18">&lt;</operator><name pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:31">nb_streams</name></name></expr>;</condition><incr pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:33">i</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr></incr>)</control> <block pos:start="75:38" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:22">

            <expr_stmt pos:start="77:13" pos:end="77:31"><expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:14">st</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <name pos:start="77:18" pos:end="77:30"><name pos:start="77:18" pos:end="77:18">s</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:27">streams</name><index pos:start="77:28" pos:end="77:30">[<expr pos:start="77:29" pos:end="77:29"><name pos:start="77:29" pos:end="77:29">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:22"><if pos:start="79:13" pos:end="81:22">if <condition pos:start="79:16" pos:end="79:30">(<expr pos:start="79:17" pos:end="79:29"><name pos:start="79:17" pos:end="79:19">num</name> <operator pos:start="79:21" pos:end="79:22">==</operator> <name pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:25">st</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:29">id</name></name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:22"><block_content pos:start="81:17" pos:end="81:22">

                <break pos:start="81:17" pos:end="81:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="85:9" pos:end="97:9"><if pos:start="85:9" pos:end="97:9">if <condition pos:start="85:12" pos:end="85:31">(<expr pos:start="85:13" pos:end="85:30"><name pos:start="85:13" pos:end="85:13">i</name> <operator pos:start="85:15" pos:end="85:16">==</operator> <name pos:start="85:18" pos:end="85:30"><name pos:start="85:18" pos:end="85:18">s</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:30">nb_streams</name></name></expr>)</condition> <block pos:start="85:33" pos:end="97:9">{<block_content pos:start="87:1" pos:end="95:21">

<label pos:start="87:1" pos:end="87:5"><name pos:start="87:1" pos:end="87:4">skip</name>:</label>

            <comment type="block" pos:start="89:13" pos:end="89:47">/* skip packet if unknown number */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:31"><expr pos:start="91:13" pos:end="91:30"><call pos:start="91:13" pos:end="91:30"><name pos:start="91:13" pos:end="91:21">url_fskip</name><argument_list pos:start="91:22" pos:end="91:30">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">pb</name></expr></argument>, <argument pos:start="91:27" pos:end="91:29"><expr pos:start="91:27" pos:end="91:29"><name pos:start="91:27" pos:end="91:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:14">rm</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:29">remaining_len</name></name> <operator pos:start="93:31" pos:end="93:32">-=</operator> <name pos:start="93:34" pos:end="93:36">len</name></expr>;</expr_stmt>

            <continue pos:start="95:13" pos:end="95:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><operator pos:start="99:9" pos:end="99:9">*</operator><name pos:start="99:10" pos:end="99:21">stream_index</name><operator pos:start="99:22" pos:end="99:22">=</operator> <name pos:start="99:24" pos:end="99:24">i</name></expr>;</expr_stmt>



        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">len</name></expr>;</return>

    </block_content>}</block></while>

    <return pos:start="107:5" pos:end="107:14">return <expr pos:start="107:12" pos:end="107:13"><operator pos:start="107:12" pos:end="107:12">-</operator><literal type="number" pos:start="107:13" pos:end="107:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
