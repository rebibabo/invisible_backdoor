<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5954.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:34">ape_decode_init</name><parameter_list pos:start="1:35" pos:end="1:58">(<parameter pos:start="1:36" pos:end="1:57"><decl pos:start="1:36" pos:end="1:57"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:49">AVCodecContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">APEContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:35">(<expr pos:start="11:9" pos:end="11:34"><name pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:29">extradata_size</name></name> <operator pos:start="11:31" pos:end="11:32">!=</operator> <literal type="number" pos:start="11:34" pos:end="11:34">6</literal></expr>)</condition> <block pos:start="11:37" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:18">

        <expr_stmt pos:start="13:9" pos:end="13:61"><expr pos:start="13:9" pos:end="13:60"><call pos:start="13:9" pos:end="13:60"><name pos:start="13:9" pos:end="13:14">av_log</name><argument_list pos:start="13:15" pos:end="13:60">(<argument pos:start="13:16" pos:end="13:20"><expr pos:start="13:16" pos:end="13:20"><name pos:start="13:16" pos:end="13:20">avctx</name></expr></argument>, <argument pos:start="13:23" pos:end="13:34"><expr pos:start="13:23" pos:end="13:34"><name pos:start="13:23" pos:end="13:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="13:37" pos:end="13:59"><expr pos:start="13:37" pos:end="13:59"><literal type="string" pos:start="13:37" pos:end="13:59">"Incorrect extradata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:13">avctx</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:36">bits_per_coded_sample</name></name> <operator pos:start="19:38" pos:end="19:39">!=</operator> <literal type="number" pos:start="19:41" pos:end="19:42">16</literal></expr>)</condition> <block pos:start="19:45" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:75"><expr pos:start="21:9" pos:end="21:74"><call pos:start="21:9" pos:end="21:74"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:74">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:73"><expr pos:start="21:37" pos:end="21:73"><literal type="string" pos:start="21:37" pos:end="21:73">"Only 16-bit samples are supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">channels</name></name> <operator pos:start="27:25" pos:end="27:25">&gt;</operator> <literal type="number" pos:start="27:27" pos:end="27:27">2</literal></expr>)</condition> <block pos:start="27:30" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:75"><expr pos:start="29:9" pos:end="29:74"><call pos:start="29:9" pos:end="29:74"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:74">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:73"><expr pos:start="29:37" pos:end="29:73"><literal type="string" pos:start="29:37" pos:end="29:73">"Only mono and stereo is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">avctx</name></name>             <operator pos:start="35:26" pos:end="35:26">=</operator> <name pos:start="35:28" pos:end="35:32">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">channels</name></name>          <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:42"><name pos:start="37:28" pos:end="37:32">avctx</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:42">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:18">fileversion</name></name>       <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:52"><name pos:start="39:28" pos:end="39:34">AV_RL16</name><argument_list pos:start="39:35" pos:end="39:52">(<argument pos:start="39:36" pos:end="39:51"><expr pos:start="39:36" pos:end="39:51"><name pos:start="39:36" pos:end="39:51"><name pos:start="39:36" pos:end="39:40">avctx</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:57"><expr pos:start="41:5" pos:end="41:56"><name pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:24">compression_level</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <call pos:start="41:28" pos:end="41:56"><name pos:start="41:28" pos:end="41:34">AV_RL16</name><argument_list pos:start="41:35" pos:end="41:56">(<argument pos:start="41:36" pos:end="41:55"><expr pos:start="41:36" pos:end="41:55"><name pos:start="41:36" pos:end="41:51"><name pos:start="41:36" pos:end="41:40">avctx</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:51">extradata</name></name> <operator pos:start="41:53" pos:end="41:53">+</operator> <literal type="number" pos:start="41:55" pos:end="41:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">flags</name></name>             <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:56"><name pos:start="43:28" pos:end="43:34">AV_RL16</name><argument_list pos:start="43:35" pos:end="43:56">(<argument pos:start="43:36" pos:end="43:55"><expr pos:start="43:36" pos:end="43:55"><name pos:start="43:36" pos:end="43:51"><name pos:start="43:36" pos:end="43:40">avctx</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:51">extradata</name></name> <operator pos:start="43:53" pos:end="43:53">+</operator> <literal type="number" pos:start="43:55" pos:end="43:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:103"><expr pos:start="47:5" pos:end="47:102"><call pos:start="47:5" pos:end="47:102"><name pos:start="47:5" pos:end="47:10">av_log</name><argument_list pos:start="47:11" pos:end="47:102">(<argument pos:start="47:12" pos:end="47:16"><expr pos:start="47:12" pos:end="47:16"><name pos:start="47:12" pos:end="47:16">avctx</name></expr></argument>, <argument pos:start="47:19" pos:end="47:30"><expr pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="47:33" pos:end="47:69"><expr pos:start="47:33" pos:end="47:69"><literal type="string" pos:start="47:33" pos:end="47:69">"Compression Level: %d - Flags: %d\n"</literal></expr></argument>, <argument pos:start="47:72" pos:end="47:91"><expr pos:start="47:72" pos:end="47:91"><name pos:start="47:72" pos:end="47:91"><name pos:start="47:72" pos:end="47:72">s</name><operator pos:start="47:73" pos:end="47:74">-&gt;</operator><name pos:start="47:75" pos:end="47:91">compression_level</name></name></expr></argument>, <argument pos:start="47:94" pos:end="47:101"><expr pos:start="47:94" pos:end="47:101"><name pos:start="47:94" pos:end="47:101"><name pos:start="47:94" pos:end="47:94">s</name><operator pos:start="47:95" pos:end="47:96">-&gt;</operator><name pos:start="47:97" pos:end="47:101">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:87">(<expr pos:start="49:9" pos:end="49:86"><name pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:28">compression_level</name></name> <operator pos:start="49:30" pos:end="49:30">%</operator> <literal type="number" pos:start="49:32" pos:end="49:35">1000</literal> <operator pos:start="49:37" pos:end="49:38">||</operator> <name pos:start="49:40" pos:end="49:59"><name pos:start="49:40" pos:end="49:40">s</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:59">compression_level</name></name> <operator pos:start="49:61" pos:end="49:61">&gt;</operator> <name pos:start="49:63" pos:end="49:86">COMPRESSION_LEVEL_INSANE</name></expr>)</condition> <block pos:start="49:89" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:18">

        <expr_stmt pos:start="51:9" pos:end="51:94"><expr pos:start="51:9" pos:end="51:93"><call pos:start="51:9" pos:end="51:93"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:93">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:70"><expr pos:start="51:37" pos:end="51:70"><literal type="string" pos:start="51:37" pos:end="51:70">"Incorrect compression level %d\n"</literal></expr></argument>, <argument pos:start="51:73" pos:end="51:92"><expr pos:start="51:73" pos:end="51:92"><name pos:start="51:73" pos:end="51:92"><name pos:start="51:73" pos:end="51:73">s</name><operator pos:start="51:74" pos:end="51:75">-&gt;</operator><name pos:start="51:76" pos:end="51:92">compression_level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">fset</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:34"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:34">compression_level</name></name> <operator pos:start="57:36" pos:end="57:36">/</operator> <literal type="number" pos:start="57:38" pos:end="57:43">1000</literal> <operator pos:start="57:43" pos:end="57:43">-</operator> <literal type="number" pos:start="57:45" pos:end="57:45">1</literal></expr>;</expr_stmt>

    <for pos:start="59:5" pos:end="67:5">for <control pos:start="59:9" pos:end="59:43">(<init pos:start="59:10" pos:end="59:15"><expr pos:start="59:10" pos:end="59:14"><name pos:start="59:10" pos:end="59:10">i</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">0</literal></expr>;</init> <condition pos:start="59:17" pos:end="59:38"><expr pos:start="59:17" pos:end="59:37"><name pos:start="59:17" pos:end="59:17">i</name> <operator pos:start="59:19" pos:end="59:19">&lt;</operator> <name pos:start="59:21" pos:end="59:37">APE_FILTER_LEVELS</name></expr>;</condition> <incr pos:start="59:40" pos:end="59:42"><expr pos:start="59:40" pos:end="59:42"><name pos:start="59:40" pos:end="59:40">i</name><operator pos:start="59:41" pos:end="59:42">++</operator></expr></incr>)</control> <block pos:start="59:45" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:92">

        <if_stmt pos:start="61:9" pos:end="63:18"><if pos:start="61:9" pos:end="63:18">if <condition pos:start="61:12" pos:end="61:43">(<expr pos:start="61:13" pos:end="61:42"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:42"><name pos:start="61:14" pos:end="61:30">ape_filter_orders</name><index pos:start="61:31" pos:end="61:39">[<expr pos:start="61:32" pos:end="61:38"><name pos:start="61:32" pos:end="61:38"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:38">fset</name></name></expr>]</index><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:18"><block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:92"><expr pos:start="65:9" pos:end="65:91"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">filterbuf</name><index pos:start="65:21" pos:end="65:23">[<expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">i</name></expr>]</index></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:91"><name pos:start="65:27" pos:end="65:35">av_malloc</name><argument_list pos:start="65:36" pos:end="65:91">(<argument pos:start="65:37" pos:end="65:90"><expr pos:start="65:37" pos:end="65:90"><operator pos:start="65:37" pos:end="65:37">(</operator><name pos:start="65:38" pos:end="65:66"><name pos:start="65:38" pos:end="65:54">ape_filter_orders</name><index pos:start="65:55" pos:end="65:63">[<expr pos:start="65:56" pos:end="65:62"><name pos:start="65:56" pos:end="65:62"><name pos:start="65:56" pos:end="65:56">s</name><operator pos:start="65:57" pos:end="65:58">-&gt;</operator><name pos:start="65:59" pos:end="65:62">fset</name></name></expr>]</index><index pos:start="65:64" pos:end="65:66">[<expr pos:start="65:65" pos:end="65:65"><name pos:start="65:65" pos:end="65:65">i</name></expr>]</index></name> <operator pos:start="65:68" pos:end="65:68">*</operator> <literal type="number" pos:start="65:70" pos:end="65:72">3</literal> <operator pos:start="65:72" pos:end="65:72">+</operator> <name pos:start="65:74" pos:end="65:85">HISTORY_SIZE</name><operator pos:start="65:86" pos:end="65:86">)</operator> <operator pos:start="65:88" pos:end="65:88">*</operator> <literal type="number" pos:start="65:90" pos:end="65:90">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><call pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:16">dsputil_init</name><argument_list pos:start="71:17" pos:end="71:32">(<argument pos:start="71:18" pos:end="71:24"><expr pos:start="71:18" pos:end="71:24"><operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:24"><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:24">dsp</name></name></expr></argument>, <argument pos:start="71:27" pos:end="71:31"><expr pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:31">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:9">avctx</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">sample_fmt</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:91"><expr pos:start="75:5" pos:end="75:90"><name pos:start="75:5" pos:end="75:25"><name pos:start="75:5" pos:end="75:9">avctx</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:25">channel_layout</name></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <ternary pos:start="75:29" pos:end="75:90"><condition pos:start="75:29" pos:end="75:50"><expr pos:start="75:29" pos:end="75:48"><operator pos:start="75:29" pos:end="75:29">(</operator><name pos:start="75:30" pos:end="75:44"><name pos:start="75:30" pos:end="75:34">avctx</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:44">channels</name></name><operator pos:start="75:45" pos:end="75:46">==</operator><literal type="number" pos:start="75:47" pos:end="75:47">2</literal><operator pos:start="75:48" pos:end="75:48">)</operator></expr> ?</condition><then pos:start="75:52" pos:end="75:70"> <expr pos:start="75:52" pos:end="75:70"><name pos:start="75:52" pos:end="75:70">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="75:72" pos:end="75:90">: <expr pos:start="75:74" pos:end="75:90"><name pos:start="75:74" pos:end="75:90">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
