<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25486.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:44"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">attach</name><parameter_list pos:start="1:19" pos:end="2:69">(<parameter pos:start="1:20" pos:end="1:40"><decl pos:start="1:20" pos:end="1:40"><type pos:start="1:20" pos:end="1:40"><name pos:start="1:20" pos:end="1:35">sPAPRDRConnector</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">drc</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">DeviceState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">d</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:62">void</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">fdt</name></decl></parameter>,
                   <parameter pos:start="2:20" pos:end="2:39"><decl pos:start="2:20" pos:end="2:39"><type pos:start="2:20" pos:end="2:39"><name pos:start="2:20" pos:end="2:22">int</name></type> <name pos:start="2:24" pos:end="2:39">fdt_start_offset</name></decl></parameter>, <parameter pos:start="2:42" pos:end="2:54"><decl pos:start="2:42" pos:end="2:54"><type pos:start="2:42" pos:end="2:54"><name pos:start="2:42" pos:end="2:45">bool</name></type> <name pos:start="2:47" pos:end="2:54">coldplug</name></decl></parameter>, <parameter pos:start="2:57" pos:end="2:68"><decl pos:start="2:57" pos:end="2:68"><type pos:start="2:57" pos:end="2:68"><name pos:start="2:57" pos:end="2:61">Error</name> <modifier pos:start="2:63" pos:end="2:63">*</modifier><modifier pos:start="2:64" pos:end="2:64">*</modifier></type><name pos:start="2:65" pos:end="2:68">errp</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="39:44">{<block_content pos:start="4:5" pos:end="39:44">
    <expr_stmt pos:start="4:5" pos:end="4:48"><expr pos:start="4:5" pos:end="4:47"><call pos:start="4:5" pos:end="4:47"><name pos:start="4:5" pos:end="4:12">DPRINTFN</name><argument_list pos:start="4:13" pos:end="4:47">(<argument pos:start="4:14" pos:end="4:30"><expr pos:start="4:14" pos:end="4:30"><literal type="string" pos:start="4:14" pos:end="4:30">"drc: %x, attach"</literal></expr></argument>, <argument pos:start="4:33" pos:end="4:46"><expr pos:start="4:33" pos:end="4:46"><call pos:start="4:33" pos:end="4:46"><name pos:start="4:33" pos:end="4:41">get_index</name><argument_list pos:start="4:42" pos:end="4:46">(<argument pos:start="4:43" pos:end="4:45"><expr pos:start="4:43" pos:end="4:45"><name pos:start="4:43" pos:end="4:45">drc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="5:5" pos:end="39:44"><if pos:start="5:5" pos:end="39:44">if <condition pos:start="5:8" pos:end="5:66">(<expr pos:start="5:9" pos:end="5:65"><name pos:start="5:9" pos:end="5:28"><name pos:start="5:9" pos:end="5:11">drc</name><operator pos:start="5:12" pos:end="5:13">-&gt;</operator><name pos:start="5:14" pos:end="5:28">isolation_state</name></name> <operator pos:start="5:30" pos:end="5:31">!=</operator> <name pos:start="5:33" pos:end="5:65">SPAPR_DR_ISOLATION_STATE_ISOLATED</name></expr>)</condition> <block pos:start="5:68" pos:end="39:44">{<block_content pos:start="6:9" pos:end="39:44">
        <expr_stmt pos:start="6:9" pos:end="6:73"><expr pos:start="6:9" pos:end="6:72"><call pos:start="6:9" pos:end="6:72"><name pos:start="6:9" pos:end="6:18">error_setg</name><argument_list pos:start="6:19" pos:end="6:72">(<argument pos:start="6:20" pos:end="6:23"><expr pos:start="6:20" pos:end="6:23"><name pos:start="6:20" pos:end="6:23">errp</name></expr></argument>, <argument pos:start="6:26" pos:end="6:71"><expr pos:start="6:26" pos:end="6:71"><literal type="string" pos:start="6:26" pos:end="6:71">"an attached device is still awaiting release"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="7:9" pos:end="7:15">return;</return>
    <if_stmt pos:start="8:5" pos:end="39:44"><if pos:start="8:5" pos:end="39:44">if <condition pos:start="8:8" pos:end="8:49">(<expr pos:start="8:9" pos:end="8:48"><name pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:11">drc</name><operator pos:start="8:12" pos:end="8:13">-&gt;</operator><name pos:start="8:14" pos:end="8:17">type</name></name> <operator pos:start="8:19" pos:end="8:20">==</operator> <name pos:start="8:22" pos:end="8:48">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="8:51" pos:end="39:44">{<block_content pos:start="9:9" pos:end="39:44">
        <expr_stmt pos:start="9:9" pos:end="9:76"><expr pos:start="9:9" pos:end="9:75"><call pos:start="9:9" pos:end="9:75"><name pos:start="9:9" pos:end="9:16">g_assert</name><argument_list pos:start="9:17" pos:end="9:75">(<argument pos:start="9:18" pos:end="9:74"><expr pos:start="9:18" pos:end="9:74"><name pos:start="9:18" pos:end="9:38"><name pos:start="9:18" pos:end="9:20">drc</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:38">allocation_state</name></name> <operator pos:start="9:40" pos:end="9:41">==</operator> <name pos:start="9:43" pos:end="9:74">SPAPR_DR_ALLOCATION_STATE_USABLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:30"><expr pos:start="10:5" pos:end="10:29"><call pos:start="10:5" pos:end="10:29"><name pos:start="10:5" pos:end="10:12">g_assert</name><argument_list pos:start="10:13" pos:end="10:29">(<argument pos:start="10:14" pos:end="10:28"><expr pos:start="10:14" pos:end="10:28"><name pos:start="10:14" pos:end="10:16">fdt</name> <operator pos:start="10:18" pos:end="10:19">||</operator> <name pos:start="10:21" pos:end="10:28">coldplug</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="11:5" pos:end="17:7">/* NOTE: setting initial isolation state to UNISOLATED means we can't
     * detach unless guest has a userspace/kernel that moves this state
     * back to ISOLATED in response to an unplug event, or this is done
     * manually by the admin prior. if we force things while the guest
     * may be accessing the device, we can easily crash the guest, so we
     * we defer completion of removal in such cases to the reset() hook.
     */</comment>
    <if_stmt pos:start="18:5" pos:end="39:44"><if pos:start="18:5" pos:end="39:44">if <condition pos:start="18:8" pos:end="18:49">(<expr pos:start="18:9" pos:end="18:48"><name pos:start="18:9" pos:end="18:17"><name pos:start="18:9" pos:end="18:11">drc</name><operator pos:start="18:12" pos:end="18:13">-&gt;</operator><name pos:start="18:14" pos:end="18:17">type</name></name> <operator pos:start="18:19" pos:end="18:20">==</operator> <name pos:start="18:22" pos:end="18:48">SPAPR_DR_CONNECTOR_TYPE_PCI</name></expr>)</condition> <block pos:start="18:51" pos:end="39:44">{<block_content pos:start="19:9" pos:end="39:44">
        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:11">drc</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:28">isolation_state</name></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <name pos:start="19:32" pos:end="19:66">SPAPR_DR_ISOLATION_STATE_UNISOLATED</name></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:59"><expr pos:start="20:5" pos:end="20:58"><name pos:start="20:5" pos:end="20:24"><name pos:start="20:5" pos:end="20:7">drc</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:24">indicator_state</name></name> <operator pos:start="20:26" pos:end="20:26">=</operator> <name pos:start="20:28" pos:end="20:58">SPAPR_DR_INDICATOR_STATE_ACTIVE</name></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:7">drc</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:12">dev</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:16">d</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:19"><expr pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">drc</name><operator pos:start="22:8" pos:end="22:9">-&gt;</operator><name pos:start="22:10" pos:end="22:12">fdt</name></name> <operator pos:start="22:14" pos:end="22:14">=</operator> <name pos:start="22:16" pos:end="22:18">fdt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:7">drc</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:25">fdt_start_offset</name></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <name pos:start="23:29" pos:end="23:44">fdt_start_offset</name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:31"><expr pos:start="24:5" pos:end="24:30"><name pos:start="24:5" pos:end="24:19"><name pos:start="24:5" pos:end="24:7">drc</name><operator pos:start="24:8" pos:end="24:9">-&gt;</operator><name pos:start="24:10" pos:end="24:19">configured</name></name> <operator pos:start="24:21" pos:end="24:21">=</operator> <name pos:start="24:23" pos:end="24:30">coldplug</name></expr>;</expr_stmt>
    <comment type="block" pos:start="25:5" pos:end="33:7">/* 'logical' DR resources such as memory/cpus are in some cases treated
     * as a pool of resources from which the guest is free to choose from
     * based on only a count. for resources that can be assigned in this
     * fashion, we must assume the resource is signalled immediately
     * since a single hotplug request might make an arbitrary number of
     * such attached resources available to the guest, as opposed to
     * 'physical' DR resources such as PCI where each device/resource is
     * signalled individually.
     */</comment>
    <expr_stmt pos:start="34:5" pos:end="35:39"><expr pos:start="34:5" pos:end="35:38"><name pos:start="34:5" pos:end="34:18"><name pos:start="34:5" pos:end="34:7">drc</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:18">signalled</name></name> <operator pos:start="34:20" pos:end="34:20">=</operator> <ternary pos:start="34:22" pos:end="35:38"><condition pos:start="34:22" pos:end="35:22"><expr pos:start="34:22" pos:end="34:63"><operator pos:start="34:22" pos:end="34:22">(</operator><name pos:start="34:23" pos:end="34:31"><name pos:start="34:23" pos:end="34:25">drc</name><operator pos:start="34:26" pos:end="34:27">-&gt;</operator><name pos:start="34:28" pos:end="34:31">type</name></name> <operator pos:start="34:33" pos:end="34:34">!=</operator> <name pos:start="34:36" pos:end="34:62">SPAPR_DR_CONNECTOR_TYPE_PCI</name><operator pos:start="34:63" pos:end="34:63">)</operator></expr>
                     ?</condition><then pos:start="35:24" pos:end="35:27"> <expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">true</name></expr> </then><else pos:start="35:29" pos:end="35:38">: <expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:38">coldplug</name></expr></else></ternary></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="39:44"><expr pos:start="36:5" pos:end="39:43"><call pos:start="36:5" pos:end="39:43"><name pos:start="36:5" pos:end="36:28">object_property_add_link</name><argument_list pos:start="36:29" pos:end="39:43">(<argument pos:start="36:30" pos:end="36:40"><expr pos:start="36:30" pos:end="36:40"><call pos:start="36:30" pos:end="36:40"><name pos:start="36:30" pos:end="36:35">OBJECT</name><argument_list pos:start="36:36" pos:end="36:40">(<argument pos:start="36:37" pos:end="36:39"><expr pos:start="36:37" pos:end="36:39"><name pos:start="36:37" pos:end="36:39">drc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="36:43" pos:end="36:50"><expr pos:start="36:43" pos:end="36:50"><literal type="string" pos:start="36:43" pos:end="36:50">"device"</literal></expr></argument>,
                             <argument pos:start="37:30" pos:end="37:66"><expr pos:start="37:30" pos:end="37:66"><call pos:start="37:30" pos:end="37:66"><name pos:start="37:30" pos:end="37:48">object_get_typename</name><argument_list pos:start="37:49" pos:end="37:66">(<argument pos:start="37:50" pos:end="37:65"><expr pos:start="37:50" pos:end="37:65"><call pos:start="37:50" pos:end="37:65"><name pos:start="37:50" pos:end="37:55">OBJECT</name><argument_list pos:start="37:56" pos:end="37:65">(<argument pos:start="37:57" pos:end="37:64"><expr pos:start="37:57" pos:end="37:64"><name pos:start="37:57" pos:end="37:64"><name pos:start="37:57" pos:end="37:59">drc</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:64">dev</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
                             <argument pos:start="38:30" pos:end="38:51"><expr pos:start="38:30" pos:end="38:51"><operator pos:start="38:30" pos:end="38:30">(</operator><name pos:start="38:31" pos:end="38:36">Object</name> <operator pos:start="38:38" pos:end="38:38">*</operator><operator pos:start="38:39" pos:end="38:39">*</operator><operator pos:start="38:40" pos:end="38:40">)</operator><operator pos:start="38:41" pos:end="38:41">(</operator><operator pos:start="38:42" pos:end="38:42">&amp;</operator><name pos:start="38:43" pos:end="38:50"><name pos:start="38:43" pos:end="38:45">drc</name><operator pos:start="38:46" pos:end="38:47">-&gt;</operator><name pos:start="38:48" pos:end="38:50">dev</name></name><operator pos:start="38:51" pos:end="38:51">)</operator></expr></argument>,
                             <argument pos:start="39:30" pos:end="39:33"><expr pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:33">NULL</name></expr></argument>, <argument pos:start="39:36" pos:end="39:36"><expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">0</literal></expr></argument>, <argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><name pos:start="39:39" pos:end="39:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
