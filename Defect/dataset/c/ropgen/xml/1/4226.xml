<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4226.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">avi_read_nikon</name><parameter_list pos:start="1:27" pos:end="1:60">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:55">uint64_t</name></type> <name pos:start="1:57" pos:end="1:59">end</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <while pos:start="5:5" pos:end="83:5">while <condition pos:start="5:11" pos:end="5:34">(<expr pos:start="5:12" pos:end="5:33"><call pos:start="5:12" pos:end="5:27"><name pos:start="5:12" pos:end="5:20">avio_tell</name><argument_list pos:start="5:21" pos:end="5:27">(<argument pos:start="5:22" pos:end="5:26"><expr pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:26"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:26">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="5:29" pos:end="5:29">&lt;</operator> <name pos:start="5:31" pos:end="5:33">end</name></expr>)</condition> <block pos:start="5:36" pos:end="83:5">{<block_content pos:start="7:9" pos:end="81:9">

        <decl_stmt pos:start="7:9" pos:end="7:41"><decl pos:start="7:9" pos:end="7:40"><type pos:start="7:9" pos:end="7:16"><name pos:start="7:9" pos:end="7:16">uint32_t</name></type> <name pos:start="7:18" pos:end="7:20">tag</name>  <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><call pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:33">avio_rl32</name><argument_list pos:start="7:34" pos:end="7:40">(<argument pos:start="7:35" pos:end="7:39"><expr pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:35">s</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:39">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:41"><decl pos:start="9:9" pos:end="9:40"><type pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:16">uint32_t</name></type> <name pos:start="9:18" pos:end="9:21">size</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><call pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:33">avio_rl32</name><argument_list pos:start="9:34" pos:end="9:40">(<argument pos:start="9:35" pos:end="9:39"><expr pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:39"><name pos:start="9:35" pos:end="9:35">s</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <switch pos:start="11:9" pos:end="81:9">switch <condition pos:start="11:16" pos:end="11:20">(<expr pos:start="11:17" pos:end="11:19"><name pos:start="11:17" pos:end="11:19">tag</name></expr>)</condition> <block pos:start="11:22" pos:end="81:9">{<block_content pos:start="13:9" pos:end="79:18">

        <case pos:start="13:9" pos:end="13:39">case <expr pos:start="13:14" pos:end="13:38"><call pos:start="13:14" pos:end="13:38"><name pos:start="13:14" pos:end="13:18">MKTAG</name><argument_list pos:start="13:19" pos:end="13:38">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><literal type="char" pos:start="13:20" pos:end="13:22">'n'</literal></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><literal type="char" pos:start="13:25" pos:end="13:27">'c'</literal></expr></argument>, <argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><literal type="char" pos:start="13:30" pos:end="13:32">'t'</literal></expr></argument>, <argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><literal type="char" pos:start="13:35" pos:end="13:37">'g'</literal></expr></argument>)</argument_list></call></expr>:</case>  <comment type="block" pos:start="13:42" pos:end="13:57">/* Nikon Tags */</comment>

        <block pos:start="15:9" pos:end="73:9">{<block_content pos:start="17:13" pos:end="71:18">

            <decl_stmt pos:start="17:13" pos:end="17:55"><decl pos:start="17:13" pos:end="17:54"><type pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20">uint64_t</name></type> <name pos:start="17:22" pos:end="17:28">tag_end</name> <init pos:start="17:30" pos:end="17:54">= <expr pos:start="17:32" pos:end="17:54"><call pos:start="17:32" pos:end="17:47"><name pos:start="17:32" pos:end="17:40">avio_tell</name><argument_list pos:start="17:41" pos:end="17:47">(<argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:46"><name pos:start="17:42" pos:end="17:42">s</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:46">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="17:49" pos:end="17:49">+</operator> <name pos:start="17:51" pos:end="17:54">size</name></expr></init></decl>;</decl_stmt>

            <while pos:start="19:13" pos:end="69:13">while <condition pos:start="19:19" pos:end="19:46">(<expr pos:start="19:20" pos:end="19:45"><call pos:start="19:20" pos:end="19:35"><name pos:start="19:20" pos:end="19:28">avio_tell</name><argument_list pos:start="19:29" pos:end="19:35">(<argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <name pos:start="19:39" pos:end="19:45">tag_end</name></expr>)</condition> <block pos:start="19:48" pos:end="69:13">{<block_content pos:start="21:17" pos:end="67:39">

                <decl_stmt pos:start="21:17" pos:end="21:52"><decl pos:start="21:17" pos:end="21:51"><type pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24">uint16_t</name></type> <name pos:start="21:26" pos:end="21:28">tag</name>     <init pos:start="21:34" pos:end="21:51">= <expr pos:start="21:36" pos:end="21:51"><call pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:44">avio_rl16</name><argument_list pos:start="21:45" pos:end="21:51">(<argument pos:start="21:46" pos:end="21:50"><expr pos:start="21:46" pos:end="21:50"><name pos:start="21:46" pos:end="21:50"><name pos:start="21:46" pos:end="21:46">s</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:50">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="23:17" pos:end="23:52"><decl pos:start="23:17" pos:end="23:51"><type pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:24">uint16_t</name></type> <name pos:start="23:26" pos:end="23:29">size</name>    <init pos:start="23:34" pos:end="23:51">= <expr pos:start="23:36" pos:end="23:51"><call pos:start="23:36" pos:end="23:51"><name pos:start="23:36" pos:end="23:44">avio_rl16</name><argument_list pos:start="23:45" pos:end="23:51">(<argument pos:start="23:46" pos:end="23:50"><expr pos:start="23:46" pos:end="23:50"><name pos:start="23:46" pos:end="23:50"><name pos:start="23:46" pos:end="23:46">s</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:50">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="25:17" pos:end="25:40"><decl pos:start="25:17" pos:end="25:39"><type pos:start="25:17" pos:end="25:28"><specifier pos:start="25:17" pos:end="25:21">const</specifier> <name pos:start="25:23" pos:end="25:26">char</name> <modifier pos:start="25:28" pos:end="25:28">*</modifier></type><name pos:start="25:29" pos:end="25:32">name</name> <init pos:start="25:34" pos:end="25:39">= <expr pos:start="25:36" pos:end="25:39"><name pos:start="25:36" pos:end="25:39">NULL</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="27:17" pos:end="27:41"><decl pos:start="27:17" pos:end="27:40"><type pos:start="27:17" pos:end="27:20"><name pos:start="27:17" pos:end="27:20">char</name></type> <name pos:start="27:22" pos:end="27:31"><name pos:start="27:22" pos:end="27:27">buffer</name><index pos:start="27:28" pos:end="27:31">[<expr pos:start="27:29" pos:end="27:30"><literal type="number" pos:start="27:29" pos:end="27:30">64</literal></expr>]</index></name>  <init pos:start="27:34" pos:end="27:40">= <expr pos:start="27:36" pos:end="27:40"><block pos:start="27:36" pos:end="27:40">{ <expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="29:17" pos:end="31:54"><if pos:start="29:17" pos:end="31:54">if <condition pos:start="29:20" pos:end="29:54">(<expr pos:start="29:21" pos:end="29:53"><call pos:start="29:21" pos:end="29:36"><name pos:start="29:21" pos:end="29:29">avio_tell</name><argument_list pos:start="29:30" pos:end="29:36">(<argument pos:start="29:31" pos:end="29:35"><expr pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:35"><name pos:start="29:31" pos:end="29:31">s</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:35">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:38" pos:end="29:38">+</operator> <name pos:start="29:40" pos:end="29:43">size</name> <operator pos:start="29:45" pos:end="29:45">&gt;</operator> <name pos:start="29:47" pos:end="29:53">tag_end</name></expr>)</condition><block type="pseudo" pos:start="31:21" pos:end="31:54"><block_content pos:start="31:21" pos:end="31:54">

                    <expr_stmt pos:start="31:21" pos:end="31:54"><expr pos:start="31:21" pos:end="31:53"><name pos:start="31:21" pos:end="31:24">size</name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:34">tag_end</name> <operator pos:start="31:36" pos:end="31:36">-</operator> <call pos:start="31:38" pos:end="31:53"><name pos:start="31:38" pos:end="31:46">avio_tell</name><argument_list pos:start="31:47" pos:end="31:53">(<argument pos:start="31:48" pos:end="31:52"><expr pos:start="31:48" pos:end="31:52"><name pos:start="31:48" pos:end="31:52"><name pos:start="31:48" pos:end="31:48">s</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:52">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="33:17" pos:end="35:67"><expr pos:start="33:17" pos:end="35:66"><name pos:start="33:17" pos:end="33:20">size</name> <operator pos:start="33:22" pos:end="33:23">-=</operator> <call pos:start="33:25" pos:end="35:66"><name pos:start="33:25" pos:end="33:33">avio_read</name><argument_list pos:start="33:34" pos:end="35:66">(<argument pos:start="33:35" pos:end="33:39"><expr pos:start="33:35" pos:end="33:39"><name pos:start="33:35" pos:end="33:39"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:39">pb</name></name></expr></argument>, <argument pos:start="33:42" pos:end="33:47"><expr pos:start="33:42" pos:end="33:47"><name pos:start="33:42" pos:end="33:47">buffer</name></expr></argument>,

                                  <argument pos:start="35:35" pos:end="35:65"><expr pos:start="35:35" pos:end="35:65"><call pos:start="35:35" pos:end="35:65"><name pos:start="35:35" pos:end="35:39">FFMIN</name><argument_list pos:start="35:40" pos:end="35:65">(<argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">size</name></expr></argument>, <argument pos:start="35:47" pos:end="35:64"><expr pos:start="35:47" pos:end="35:64"><sizeof pos:start="35:47" pos:end="35:60">sizeof<argument_list pos:start="35:53" pos:end="35:60">(<argument pos:start="35:54" pos:end="35:59"><expr pos:start="35:54" pos:end="35:59"><name pos:start="35:54" pos:end="35:59">buffer</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:62" pos:end="35:62">-</operator> <literal type="number" pos:start="35:64" pos:end="35:64">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="37:17" pos:end="61:17">switch <condition pos:start="37:24" pos:end="37:28">(<expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">tag</name></expr>)</condition> <block pos:start="37:30" pos:end="61:17">{<block_content pos:start="39:17" pos:end="59:26">

                <case pos:start="39:17" pos:end="39:26">case <expr pos:start="39:22" pos:end="39:25"><literal type="number" pos:start="39:22" pos:end="39:25">0x03</literal></expr>:</case>

                    <expr_stmt pos:start="41:21" pos:end="41:35"><expr pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:24">name</name> <operator pos:start="41:26" pos:end="41:26">=</operator> <literal type="string" pos:start="41:28" pos:end="41:34">"maker"</literal></expr>;</expr_stmt>

                    <break pos:start="43:21" pos:end="43:26">break;</break>

                <case pos:start="45:17" pos:end="45:26">case <expr pos:start="45:22" pos:end="45:25"><literal type="number" pos:start="45:22" pos:end="45:25">0x04</literal></expr>:</case>

                    <expr_stmt pos:start="47:21" pos:end="47:35"><expr pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:24">name</name> <operator pos:start="47:26" pos:end="47:26">=</operator> <literal type="string" pos:start="47:28" pos:end="47:34">"model"</literal></expr>;</expr_stmt>

                    <break pos:start="49:21" pos:end="49:26">break;</break>

                <case pos:start="51:17" pos:end="51:26">case <expr pos:start="51:22" pos:end="51:25"><literal type="number" pos:start="51:22" pos:end="51:25">0x13</literal></expr>:</case>

                    <expr_stmt pos:start="53:21" pos:end="53:43"><expr pos:start="53:21" pos:end="53:42"><name pos:start="53:21" pos:end="53:24">name</name> <operator pos:start="53:26" pos:end="53:26">=</operator> <literal type="string" pos:start="53:28" pos:end="53:42">"creation_time"</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="55:21" pos:end="57:52"><if pos:start="55:21" pos:end="57:52">if <condition pos:start="55:24" pos:end="55:61">(<expr pos:start="55:25" pos:end="55:60"><name pos:start="55:25" pos:end="55:33"><name pos:start="55:25" pos:end="55:30">buffer</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">4</literal></expr>]</index></name> <operator pos:start="55:35" pos:end="55:36">==</operator> <literal type="char" pos:start="55:38" pos:end="55:40">':'</literal> <operator pos:start="55:42" pos:end="55:43">&amp;&amp;</operator> <name pos:start="55:45" pos:end="55:53"><name pos:start="55:45" pos:end="55:50">buffer</name><index pos:start="55:51" pos:end="55:53">[<expr pos:start="55:52" pos:end="55:52"><literal type="number" pos:start="55:52" pos:end="55:52">7</literal></expr>]</index></name> <operator pos:start="55:55" pos:end="55:56">==</operator> <literal type="char" pos:start="55:58" pos:end="55:60">':'</literal></expr>)</condition><block type="pseudo" pos:start="57:25" pos:end="57:52"><block_content pos:start="57:25" pos:end="57:52">

                        <expr_stmt pos:start="57:25" pos:end="57:52"><expr pos:start="57:25" pos:end="57:51"><name pos:start="57:25" pos:end="57:33"><name pos:start="57:25" pos:end="57:30">buffer</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><literal type="number" pos:start="57:32" pos:end="57:32">4</literal></expr>]</index></name> <operator pos:start="57:35" pos:end="57:35">=</operator> <name pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:42">buffer</name><index pos:start="57:43" pos:end="57:45">[<expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">7</literal></expr>]</index></name> <operator pos:start="57:47" pos:end="57:47">=</operator> <literal type="char" pos:start="57:49" pos:end="57:51">'-'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <break pos:start="59:21" pos:end="59:26">break;</break>

                </block_content>}</block></switch>

                <if_stmt pos:start="63:17" pos:end="65:63"><if pos:start="63:17" pos:end="65:63">if <condition pos:start="63:20" pos:end="63:25">(<expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:24">name</name></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:63"><block_content pos:start="65:21" pos:end="65:63">

                    <expr_stmt pos:start="65:21" pos:end="65:63"><expr pos:start="65:21" pos:end="65:62"><call pos:start="65:21" pos:end="65:62"><name pos:start="65:21" pos:end="65:31">av_dict_set</name><argument_list pos:start="65:32" pos:end="65:62">(<argument pos:start="65:33" pos:end="65:44"><expr pos:start="65:33" pos:end="65:44"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:44"><name pos:start="65:34" pos:end="65:34">s</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:44">metadata</name></name></expr></argument>, <argument pos:start="65:47" pos:end="65:50"><expr pos:start="65:47" pos:end="65:50"><name pos:start="65:47" pos:end="65:50">name</name></expr></argument>, <argument pos:start="65:53" pos:end="65:58"><expr pos:start="65:53" pos:end="65:58"><name pos:start="65:53" pos:end="65:58">buffer</name></expr></argument>, <argument pos:start="65:61" pos:end="65:61"><expr pos:start="65:61" pos:end="65:61"><literal type="number" pos:start="65:61" pos:end="65:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:39"><expr pos:start="67:17" pos:end="67:38"><call pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:25">avio_skip</name><argument_list pos:start="67:26" pos:end="67:38">(<argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:31">pb</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:37"><expr pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:37">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block>

        <default pos:start="75:9" pos:end="75:16">default:</default>

            <expr_stmt pos:start="77:13" pos:end="77:35"><expr pos:start="77:13" pos:end="77:34"><call pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:21">avio_skip</name><argument_list pos:start="77:22" pos:end="77:34">(<argument pos:start="77:23" pos:end="77:27"><expr pos:start="77:23" pos:end="77:27"><name pos:start="77:23" pos:end="77:27"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:27">pb</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:33"><expr pos:start="77:30" pos:end="77:33"><name pos:start="77:30" pos:end="77:33">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
