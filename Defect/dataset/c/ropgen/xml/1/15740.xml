<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15740.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:31">wnv1_get_code</name><parameter_list pos:start="1:32" pos:end="1:63">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:43">WNV1Context</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">w</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:62">base_value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:50">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">v</name> <init pos:start="5:11" pos:end="5:62">= <expr pos:start="5:13" pos:end="5:62"><call pos:start="5:13" pos:end="5:62"><name pos:start="5:13" pos:end="5:20">get_vlc2</name><argument_list pos:start="5:21" pos:end="5:62">(<argument pos:start="5:22" pos:end="5:27"><expr pos:start="5:22" pos:end="5:27"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">w</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">gb</name></name></expr></argument>, <argument pos:start="5:30" pos:end="5:43"><expr pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:43"><name pos:start="5:30" pos:end="5:37">code_vlc</name><operator pos:start="5:38" pos:end="5:38">.</operator><name pos:start="5:39" pos:end="5:43">table</name></name></expr></argument>, <argument pos:start="5:46" pos:end="5:58"><expr pos:start="5:46" pos:end="5:58"><name pos:start="5:46" pos:end="5:58">CODE_VLC_BITS</name></expr></argument>, <argument pos:start="5:61" pos:end="5:61"><expr pos:start="5:61" pos:end="5:61"><literal type="number" pos:start="5:61" pos:end="5:61">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:50"><if pos:start="9:5" pos:end="11:58">if <condition pos:start="9:8" pos:end="9:16">(<expr pos:start="9:9" pos:end="9:15"><name pos:start="9:9" pos:end="9:9">v</name> <operator pos:start="9:11" pos:end="9:12">==</operator> <literal type="number" pos:start="9:14" pos:end="9:15">15</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:58"><block_content pos:start="11:9" pos:end="11:58">

        <return pos:start="11:9" pos:end="11:58">return <expr pos:start="11:16" pos:end="11:57"><name pos:start="11:16" pos:end="11:57"><name pos:start="11:16" pos:end="11:25">ff_reverse</name><index pos:start="11:26" pos:end="11:57">[<expr pos:start="11:27" pos:end="11:56"><call pos:start="11:27" pos:end="11:56"><name pos:start="11:27" pos:end="11:34">get_bits</name><argument_list pos:start="11:35" pos:end="11:56">(<argument pos:start="11:36" pos:end="11:41"><expr pos:start="11:36" pos:end="11:41"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:41"><name pos:start="11:37" pos:end="11:37">w</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:41">gb</name></name></expr></argument>, <argument pos:start="11:44" pos:end="11:55"><expr pos:start="11:44" pos:end="11:55"><literal type="number" pos:start="11:44" pos:end="11:46">8</literal> <operator pos:start="11:46" pos:end="11:46">-</operator> <name pos:start="11:48" pos:end="11:55"><name pos:start="11:48" pos:end="11:48">w</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:55">shift</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</return></block_content></block></if>

    <else pos:start="13:5" pos:end="15:50">else<block type="pseudo" pos:start="15:9" pos:end="15:50"><block_content pos:start="15:9" pos:end="15:50">

        <return pos:start="15:9" pos:end="15:50">return <expr pos:start="15:16" pos:end="15:49"><name pos:start="15:16" pos:end="15:25">base_value</name> <operator pos:start="15:27" pos:end="15:27">+</operator> <operator pos:start="15:29" pos:end="15:29">(</operator><operator pos:start="15:30" pos:end="15:30">(</operator><name pos:start="15:31" pos:end="15:31">v</name> <operator pos:start="15:33" pos:end="15:33">-</operator> <literal type="number" pos:start="15:35" pos:end="15:35">7</literal><operator pos:start="15:36" pos:end="15:36">)</operator> <operator pos:start="15:38" pos:end="15:39">&lt;&lt;</operator> <name pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:41">w</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:48">shift</name></name><operator pos:start="15:49" pos:end="15:49">)</operator></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
