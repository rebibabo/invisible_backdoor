<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19638.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">process_output_surface</name><parameter_list pos:start="1:34" pos:end="1:97">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">AVPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">pkt</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:96"><decl pos:start="1:73" pos:end="1:96"><type pos:start="1:73" pos:end="1:96"><name pos:start="1:73" pos:end="1:84">NvencSurface</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:96">tmpoutsurf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:15">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">NvencContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">NvencDynLoadFunctions</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">dl_fn</name> <init pos:start="7:34" pos:end="7:58">= <expr pos:start="7:36" pos:end="7:58"><operator pos:start="7:36" pos:end="7:36">&amp;</operator><name pos:start="7:37" pos:end="7:58"><name pos:start="7:37" pos:end="7:39">ctx</name><operator pos:start="7:40" pos:end="7:41">-&gt;</operator><name pos:start="7:42" pos:end="7:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:62"><type pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:40">p_nvenc</name> <init pos:start="9:42" pos:end="9:62">= <expr pos:start="9:44" pos:end="9:62"><operator pos:start="9:44" pos:end="9:44">&amp;</operator><name pos:start="9:45" pos:end="9:62"><name pos:start="9:45" pos:end="9:49">dl_fn</name><operator pos:start="9:50" pos:end="9:51">-&gt;</operator><name pos:start="9:52" pos:end="9:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:28">slice_mode_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">uint32_t</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:27">slice_offsets</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:45"><type pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:25">NV_ENC_LOCK_BITSTREAM</name></type> <name pos:start="17:27" pos:end="17:37">lock_params</name> <init pos:start="17:39" pos:end="17:45">= <expr pos:start="17:41" pos:end="17:45"><block pos:start="17:41" pos:end="17:45">{ <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15">NVENCSTATUS</name></type> <name pos:start="19:17" pos:end="19:25">nv_status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">res</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="25:33"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:22">AVPictureType</name></name></type> <name pos:start="25:24" pos:end="25:32">pict_type</name></decl>;</decl_stmt>



    <switch pos:start="29:5" pos:end="51:5">switch <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:17">avctx</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:24">codec</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:28">id</name></name></expr>)</condition> <block pos:start="29:31" pos:end="51:5">{<block_content pos:start="31:5" pos:end="49:17">

    <case pos:start="31:5" pos:end="31:26">case <expr pos:start="31:10" pos:end="31:25"><name pos:start="31:10" pos:end="31:25">AV_CODEC_ID_H264</name></expr>:</case>

      <expr_stmt pos:start="33:7" pos:end="33:86"><expr pos:start="33:7" pos:end="33:85"><name pos:start="33:7" pos:end="33:21">slice_mode_data</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:85"><name pos:start="33:25" pos:end="33:27">ctx</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:42">encode_config</name><operator pos:start="33:43" pos:end="33:43">.</operator><name pos:start="33:44" pos:end="33:60">encodeCodecConfig</name><operator pos:start="33:61" pos:end="33:61">.</operator><name pos:start="33:62" pos:end="33:71">h264Config</name><operator pos:start="33:72" pos:end="33:72">.</operator><name pos:start="33:73" pos:end="33:85">sliceModeData</name></name></expr>;</expr_stmt>

      <break pos:start="35:7" pos:end="35:12">break;</break>

    <case pos:start="37:5" pos:end="37:26">case <expr pos:start="37:10" pos:end="37:25"><name pos:start="37:10" pos:end="37:25">AV_CODEC_ID_H265</name></expr>:</case>

      <expr_stmt pos:start="39:7" pos:end="39:86"><expr pos:start="39:7" pos:end="39:85"><name pos:start="39:7" pos:end="39:21">slice_mode_data</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <name pos:start="39:25" pos:end="39:85"><name pos:start="39:25" pos:end="39:27">ctx</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:42">encode_config</name><operator pos:start="39:43" pos:end="39:43">.</operator><name pos:start="39:44" pos:end="39:60">encodeCodecConfig</name><operator pos:start="39:61" pos:end="39:61">.</operator><name pos:start="39:62" pos:end="39:71">hevcConfig</name><operator pos:start="39:72" pos:end="39:72">.</operator><name pos:start="39:73" pos:end="39:85">sliceModeData</name></name></expr>;</expr_stmt>

      <break pos:start="41:7" pos:end="41:12">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default>

      <expr_stmt pos:start="45:7" pos:end="45:58"><expr pos:start="45:7" pos:end="45:57"><call pos:start="45:7" pos:end="45:57"><name pos:start="45:7" pos:end="45:12">av_log</name><argument_list pos:start="45:13" pos:end="45:57">(<argument pos:start="45:14" pos:end="45:18"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:18">avctx</name></expr></argument>, <argument pos:start="45:21" pos:end="45:32"><expr pos:start="45:21" pos:end="45:32"><name pos:start="45:21" pos:end="45:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:35" pos:end="45:56"><expr pos:start="45:35" pos:end="45:56"><literal type="string" pos:start="45:35" pos:end="45:56">"Unknown codec name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <expr_stmt pos:start="47:7" pos:end="47:28"><expr pos:start="47:7" pos:end="47:27"><name pos:start="47:7" pos:end="47:9">res</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:19">AVERROR</name><argument_list pos:start="47:20" pos:end="47:27">(<argument pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:26">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <goto pos:start="49:7" pos:end="49:17">goto <name pos:start="49:12" pos:end="49:16">error</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="53:5" pos:end="53:73"><expr pos:start="53:5" pos:end="53:72"><name pos:start="53:5" pos:end="53:17">slice_offsets</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <call pos:start="53:21" pos:end="53:72"><name pos:start="53:21" pos:end="53:30">av_mallocz</name><argument_list pos:start="53:31" pos:end="53:72">(<argument pos:start="53:32" pos:end="53:71"><expr pos:start="53:32" pos:end="53:71"><name pos:start="53:32" pos:end="53:46">slice_mode_data</name> <operator pos:start="53:48" pos:end="53:48">*</operator> <sizeof pos:start="53:50" pos:end="53:71">sizeof<argument_list pos:start="53:56" pos:end="53:71">(<argument pos:start="53:57" pos:end="53:70"><expr pos:start="53:57" pos:end="53:70"><operator pos:start="53:57" pos:end="53:57">*</operator><name pos:start="53:58" pos:end="53:70">slice_offsets</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="59:19"><if pos:start="57:5" pos:end="59:19">if <condition pos:start="57:8" pos:end="57:23">(<expr pos:start="57:9" pos:end="57:22"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:22">slice_offsets</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:19"><block_content pos:start="59:9" pos:end="59:19">

        <goto pos:start="59:9" pos:end="59:19">goto <name pos:start="59:14" pos:end="59:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:15">lock_params</name><operator pos:start="63:16" pos:end="63:16">.</operator><name pos:start="63:17" pos:end="63:23">version</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:51">NV_ENC_LOCK_BITSTREAM_VER</name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:15">lock_params</name><operator pos:start="67:16" pos:end="67:16">.</operator><name pos:start="67:17" pos:end="67:25">doNotWait</name></name> <operator pos:start="67:27" pos:end="67:27">=</operator> <literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:61"><expr pos:start="69:5" pos:end="69:60"><name pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:15">lock_params</name><operator pos:start="69:16" pos:end="69:16">.</operator><name pos:start="69:17" pos:end="69:31">outputBitstream</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator> <name pos:start="69:35" pos:end="69:60"><name pos:start="69:35" pos:end="69:44">tmpoutsurf</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:60">output_surface</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:45"><expr pos:start="71:5" pos:end="71:44"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:15">lock_params</name><operator pos:start="71:16" pos:end="71:16">.</operator><name pos:start="71:17" pos:end="71:28">sliceOffsets</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:44">slice_offsets</name></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:74"><expr pos:start="75:5" pos:end="75:73"><name pos:start="75:5" pos:end="75:13">nv_status</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:73"><name pos:start="75:17" pos:end="75:43"><name pos:start="75:17" pos:end="75:23">p_nvenc</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:43">nvEncLockBitstream</name></name><argument_list pos:start="75:44" pos:end="75:73">(<argument pos:start="75:45" pos:end="75:58"><expr pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:47">ctx</name><operator pos:start="75:48" pos:end="75:49">-&gt;</operator><name pos:start="75:50" pos:end="75:58">nvencoder</name></name></expr></argument>, <argument pos:start="75:61" pos:end="75:72"><expr pos:start="75:61" pos:end="75:72"><operator pos:start="75:61" pos:end="75:61">&amp;</operator><name pos:start="75:62" pos:end="75:72">lock_params</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:36">(<expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:17">nv_status</name> <operator pos:start="77:19" pos:end="77:20">!=</operator> <name pos:start="77:22" pos:end="77:35">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="77:38" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:19">

        <expr_stmt pos:start="79:9" pos:end="79:85"><expr pos:start="79:9" pos:end="79:84"><name pos:start="79:9" pos:end="79:11">res</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:84"><name pos:start="79:15" pos:end="79:31">nvenc_print_error</name><argument_list pos:start="79:32" pos:end="79:84">(<argument pos:start="79:33" pos:end="79:37"><expr pos:start="79:33" pos:end="79:37"><name pos:start="79:33" pos:end="79:37">avctx</name></expr></argument>, <argument pos:start="79:40" pos:end="79:48"><expr pos:start="79:40" pos:end="79:48"><name pos:start="79:40" pos:end="79:48">nv_status</name></expr></argument>, <argument pos:start="79:51" pos:end="79:83"><expr pos:start="79:51" pos:end="79:83"><literal type="string" pos:start="79:51" pos:end="79:83">"Failed locking bitstream buffer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="81:9" pos:end="81:19">goto <name pos:start="81:14" pos:end="81:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="93:5"><if pos:start="87:5" pos:end="93:5">if <condition pos:start="87:8" pos:end="87:79">(<expr pos:start="87:9" pos:end="87:78"><name pos:start="87:9" pos:end="87:11">res</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <call pos:start="87:15" pos:end="87:78"><name pos:start="87:15" pos:end="87:30">ff_alloc_packet2</name><argument_list pos:start="87:31" pos:end="87:78">(<argument pos:start="87:32" pos:end="87:36"><expr pos:start="87:32" pos:end="87:36"><name pos:start="87:32" pos:end="87:36">avctx</name></expr></argument>, <argument pos:start="87:39" pos:end="87:41"><expr pos:start="87:39" pos:end="87:41"><name pos:start="87:39" pos:end="87:41">pkt</name></expr></argument>, <argument pos:start="87:44" pos:end="87:75"><expr pos:start="87:44" pos:end="87:75"><name pos:start="87:44" pos:end="87:75"><name pos:start="87:44" pos:end="87:54">lock_params</name><operator pos:start="87:55" pos:end="87:55">.</operator><name pos:start="87:56" pos:end="87:75">bitstreamSizeInBytes</name></name></expr></argument>,<argument pos:start="87:77" pos:end="87:77"><expr pos:start="87:77" pos:end="87:77"><literal type="number" pos:start="87:77" pos:end="87:77">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:81" pos:end="93:5">{<block_content pos:start="89:9" pos:end="91:19">

        <expr_stmt pos:start="89:9" pos:end="89:82"><expr pos:start="89:9" pos:end="89:81"><call pos:start="89:9" pos:end="89:81"><name pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:15">p_nvenc</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:37">nvEncUnlockBitstream</name></name><argument_list pos:start="89:38" pos:end="89:81">(<argument pos:start="89:39" pos:end="89:52"><expr pos:start="89:39" pos:end="89:52"><name pos:start="89:39" pos:end="89:52"><name pos:start="89:39" pos:end="89:41">ctx</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:52">nvencoder</name></name></expr></argument>, <argument pos:start="89:55" pos:end="89:80"><expr pos:start="89:55" pos:end="89:80"><name pos:start="89:55" pos:end="89:80"><name pos:start="89:55" pos:end="89:64">tmpoutsurf</name><operator pos:start="89:65" pos:end="89:66">-&gt;</operator><name pos:start="89:67" pos:end="89:80">output_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:19">goto <name pos:start="91:14" pos:end="91:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:88"><expr pos:start="97:5" pos:end="97:87"><call pos:start="97:5" pos:end="97:87"><name pos:start="97:5" pos:end="97:10">memcpy</name><argument_list pos:start="97:11" pos:end="97:87">(<argument pos:start="97:12" pos:end="97:20"><expr pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:20"><name pos:start="97:12" pos:end="97:14">pkt</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:20">data</name></name></expr></argument>, <argument pos:start="97:23" pos:end="97:52"><expr pos:start="97:23" pos:end="97:52"><name pos:start="97:23" pos:end="97:52"><name pos:start="97:23" pos:end="97:33">lock_params</name><operator pos:start="97:34" pos:end="97:34">.</operator><name pos:start="97:35" pos:end="97:52">bitstreamBufferPtr</name></name></expr></argument>, <argument pos:start="97:55" pos:end="97:86"><expr pos:start="97:55" pos:end="97:86"><name pos:start="97:55" pos:end="97:86"><name pos:start="97:55" pos:end="97:65">lock_params</name><operator pos:start="97:66" pos:end="97:66">.</operator><name pos:start="97:67" pos:end="97:86">bitstreamSizeInBytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:90"><expr pos:start="101:5" pos:end="101:89"><name pos:start="101:5" pos:end="101:13">nv_status</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="101:89"><name pos:start="101:17" pos:end="101:45"><name pos:start="101:17" pos:end="101:23">p_nvenc</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:45">nvEncUnlockBitstream</name></name><argument_list pos:start="101:46" pos:end="101:89">(<argument pos:start="101:47" pos:end="101:60"><expr pos:start="101:47" pos:end="101:60"><name pos:start="101:47" pos:end="101:60"><name pos:start="101:47" pos:end="101:49">ctx</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:60">nvencoder</name></name></expr></argument>, <argument pos:start="101:63" pos:end="101:88"><expr pos:start="101:63" pos:end="101:88"><name pos:start="101:63" pos:end="101:88"><name pos:start="101:63" pos:end="101:72">tmpoutsurf</name><operator pos:start="101:73" pos:end="101:74">-&gt;</operator><name pos:start="101:75" pos:end="101:88">output_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:117"><if pos:start="103:5" pos:end="105:117">if <condition pos:start="103:8" pos:end="103:36">(<expr pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:17">nv_status</name> <operator pos:start="103:19" pos:end="103:20">!=</operator> <name pos:start="103:22" pos:end="103:35">NV_ENC_SUCCESS</name></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:117"><block_content pos:start="105:9" pos:end="105:117">

        <expr_stmt pos:start="105:9" pos:end="105:117"><expr pos:start="105:9" pos:end="105:116"><call pos:start="105:9" pos:end="105:116"><name pos:start="105:9" pos:end="105:25">nvenc_print_error</name><argument_list pos:start="105:26" pos:end="105:116">(<argument pos:start="105:27" pos:end="105:31"><expr pos:start="105:27" pos:end="105:31"><name pos:start="105:27" pos:end="105:31">avctx</name></expr></argument>, <argument pos:start="105:34" pos:end="105:42"><expr pos:start="105:34" pos:end="105:42"><name pos:start="105:34" pos:end="105:42">nv_status</name></expr></argument>, <argument pos:start="105:45" pos:end="105:115"><expr pos:start="105:45" pos:end="105:115"><literal type="string" pos:start="105:45" pos:end="105:115">"Failed unlocking bitstream buffer, expect the gates of mordor to open"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>





    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="123:5">if <condition pos:start="111:8" pos:end="111:42">(<expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:13">avctx</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:22">pix_fmt</name></name> <operator pos:start="111:24" pos:end="111:25">==</operator> <name pos:start="111:27" pos:end="111:41">AV_PIX_FMT_CUDA</name></expr>)</condition> <block pos:start="111:44" pos:end="123:5">{<block_content pos:start="113:9" pos:end="121:41">

        <expr_stmt pos:start="113:9" pos:end="113:92"><expr pos:start="113:9" pos:end="113:91"><call pos:start="113:9" pos:end="113:91"><name pos:start="113:9" pos:end="113:40"><name pos:start="113:9" pos:end="113:15">p_nvenc</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:40">nvEncUnmapInputResource</name></name><argument_list pos:start="113:41" pos:end="113:91">(<argument pos:start="113:42" pos:end="113:55"><expr pos:start="113:42" pos:end="113:55"><name pos:start="113:42" pos:end="113:55"><name pos:start="113:42" pos:end="113:44">ctx</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:55">nvencoder</name></name></expr></argument>, <argument pos:start="113:58" pos:end="113:90"><expr pos:start="113:58" pos:end="113:90"><name pos:start="113:58" pos:end="113:90"><name pos:start="113:58" pos:end="113:67">tmpoutsurf</name><operator pos:start="113:68" pos:end="113:69">-&gt;</operator><name pos:start="113:70" pos:end="113:75">in_map</name><operator pos:start="113:76" pos:end="113:76">.</operator><name pos:start="113:77" pos:end="113:90">mappedResource</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:43"><expr pos:start="115:9" pos:end="115:42"><call pos:start="115:9" pos:end="115:42"><name pos:start="115:9" pos:end="115:22">av_frame_unref</name><argument_list pos:start="115:23" pos:end="115:42">(<argument pos:start="115:24" pos:end="115:41"><expr pos:start="115:24" pos:end="115:41"><name pos:start="115:24" pos:end="115:41"><name pos:start="115:24" pos:end="115:33">tmpoutsurf</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:41">in_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:63"><expr pos:start="117:9" pos:end="117:62"><name pos:start="117:9" pos:end="117:51"><name pos:start="117:9" pos:end="117:11">ctx</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:30">registered_frames</name><index pos:start="117:31" pos:end="117:51">[<expr pos:start="117:32" pos:end="117:50"><name pos:start="117:32" pos:end="117:50"><name pos:start="117:32" pos:end="117:41">tmpoutsurf</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:50">reg_idx</name></name></expr>]</index></name><operator pos:start="117:52" pos:end="117:52">.</operator><name pos:start="117:53" pos:end="117:58">mapped</name> <operator pos:start="117:60" pos:end="117:60">=</operator> <literal type="number" pos:start="117:62" pos:end="117:62">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:41"><expr pos:start="121:9" pos:end="121:40"><name pos:start="121:9" pos:end="121:33"><name pos:start="121:9" pos:end="121:18">tmpoutsurf</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:33">input_surface</name></name> <operator pos:start="121:35" pos:end="121:35">=</operator> <name pos:start="121:37" pos:end="121:40">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="127:5" pos:end="172:0">switch <condition pos:start="127:12" pos:end="127:36">(<expr pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:23">lock_params</name><operator pos:start="127:24" pos:end="127:24">.</operator><name pos:start="127:25" pos:end="127:35">pictureType</name></name></expr>)</condition> <block pos:start="127:38" pos:end="172:0">{<block_content pos:start="129:5" pos:end="165:19">

    <case pos:start="129:5" pos:end="129:29">case <expr pos:start="129:10" pos:end="129:28"><name pos:start="129:10" pos:end="129:28">NV_ENC_PIC_TYPE_IDR</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:38"><expr pos:start="131:9" pos:end="131:37"><name pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:11">pkt</name><operator pos:start="131:12" pos:end="131:13">-&gt;</operator><name pos:start="131:14" pos:end="131:18">flags</name></name> <operator pos:start="131:20" pos:end="131:21">|=</operator> <name pos:start="131:23" pos:end="131:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

    <case pos:start="133:5" pos:end="133:27">case <expr pos:start="133:10" pos:end="133:26"><name pos:start="133:10" pos:end="133:26">NV_ENC_PIC_TYPE_I</name></expr>:</case>

        <expr_stmt pos:start="135:9" pos:end="135:38"><expr pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:17">pict_type</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <name pos:start="135:21" pos:end="135:37">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:27">case <expr pos:start="139:10" pos:end="139:26"><name pos:start="139:10" pos:end="139:26">NV_ENC_PIC_TYPE_P</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:38"><expr pos:start="141:9" pos:end="141:37"><name pos:start="141:9" pos:end="141:17">pict_type</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <name pos:start="141:21" pos:end="141:37">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <case pos:start="145:5" pos:end="145:27">case <expr pos:start="145:10" pos:end="145:26"><name pos:start="145:10" pos:end="145:26">NV_ENC_PIC_TYPE_B</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:38"><expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:17">pict_type</name> <operator pos:start="147:19" pos:end="147:19">=</operator> <name pos:start="147:21" pos:end="147:37">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:28">case <expr pos:start="151:10" pos:end="151:27"><name pos:start="151:10" pos:end="151:27">NV_ENC_PIC_TYPE_BI</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:39"><expr pos:start="153:9" pos:end="153:38"><name pos:start="153:9" pos:end="153:17">pict_type</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <name pos:start="153:21" pos:end="153:38">AV_PICTURE_TYPE_BI</name></expr>;</expr_stmt>

        <break pos:start="155:9" pos:end="155:14">break;</break>

    <default pos:start="157:5" pos:end="157:12">default:</default>

        <expr_stmt pos:start="159:9" pos:end="159:107"><expr pos:start="159:9" pos:end="159:106"><call pos:start="159:9" pos:end="159:106"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="159:106">(<argument pos:start="159:16" pos:end="159:20"><expr pos:start="159:16" pos:end="159:20"><name pos:start="159:16" pos:end="159:20">avctx</name></expr></argument>, <argument pos:start="159:23" pos:end="159:34"><expr pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:37" pos:end="159:105"><expr pos:start="159:37" pos:end="159:105"><literal type="string" pos:start="159:37" pos:end="159:105">"Unknown picture type encountered, expect the output to be broken.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:134"><expr pos:start="161:9" pos:end="161:133"><call pos:start="161:9" pos:end="161:133"><name pos:start="161:9" pos:end="161:14">av_log</name><argument_list pos:start="161:15" pos:end="161:133">(<argument pos:start="161:16" pos:end="161:20"><expr pos:start="161:16" pos:end="161:20"><name pos:start="161:16" pos:end="161:20">avctx</name></expr></argument>, <argument pos:start="161:23" pos:end="161:34"><expr pos:start="161:23" pos:end="161:34"><name pos:start="161:23" pos:end="161:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="161:37" pos:end="161:132"><expr pos:start="161:37" pos:end="161:132"><literal type="string" pos:start="161:37" pos:end="161:132">"Please report this error and include as much information on how to reproduce it as possible.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:11">res</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <name pos:start="163:15" pos:end="163:30">AVERROR_EXTERNAL</name></expr>;</expr_stmt>

        <goto pos:start="165:9" pos:end="165:19">goto <name pos:start="165:14" pos:end="165:18">error</name>;</goto>

    </block_content>}</block></switch>



<cpp:if pos:start="171:1" pos:end="171:22">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:22">FF_API_CODED_FRAME</name></expr></cpp:if>

<decl_stmt pos:start="173:1" pos:end="175:46"><decl pos:start="173:1" pos:end="175:45"><type pos:start="173:1" pos:end="173:31"><name pos:start="173:1" pos:end="173:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="175:5" pos:end="175:33"><name pos:start="175:5" pos:end="175:9">avctx</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:22">coded_frame</name><operator pos:start="175:23" pos:end="175:24">-&gt;</operator><name pos:start="175:25" pos:end="175:33">pict_type</name></name> <init pos:start="175:35" pos:end="175:45">= <expr pos:start="175:37" pos:end="175:45"><name pos:start="175:37" pos:end="175:45">pict_type</name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="177:1" pos:end="185:73"><decl pos:start="177:1" pos:end="185:72"><type pos:start="177:1" pos:end="180:0"><name pos:start="177:1" pos:end="180:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>



    <name pos:start="183:5" pos:end="183:34">ff_side_data_set_encoder_stats</name><argument_list pos:start="183:35" pos:end="185:72">(<argument pos:start="183:36" pos:end="183:38"><expr pos:start="183:36" pos:end="183:38"><name pos:start="183:36" pos:end="183:38">pkt</name></expr></argument>,

        <argument pos:start="185:9" pos:end="185:51"><expr pos:start="185:9" pos:end="185:51"><operator pos:start="185:9" pos:end="185:9">(</operator><name pos:start="185:10" pos:end="185:31"><name pos:start="185:10" pos:end="185:20">lock_params</name><operator pos:start="185:21" pos:end="185:21">.</operator><name pos:start="185:22" pos:end="185:31">frameAvgQP</name></name> <operator pos:start="185:33" pos:end="185:33">-</operator> <literal type="number" pos:start="185:35" pos:end="185:35">1</literal><operator pos:start="185:36" pos:end="185:36">)</operator> <operator pos:start="185:38" pos:end="185:38">*</operator> <name pos:start="185:40" pos:end="185:51">FF_QP2LAMBDA</name></expr></argument>, <argument pos:start="185:54" pos:end="185:57"><expr pos:start="185:54" pos:end="185:57"><name pos:start="185:54" pos:end="185:57">NULL</name></expr></argument>, <argument pos:start="185:60" pos:end="185:60"><expr pos:start="185:60" pos:end="185:60"><literal type="number" pos:start="185:60" pos:end="185:60">0</literal></expr></argument>, <argument pos:start="185:63" pos:end="185:71"><expr pos:start="185:63" pos:end="185:71"><name pos:start="185:63" pos:end="185:71">pict_type</name></expr></argument>)</argument_list></decl>;</decl_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:56"><expr pos:start="189:5" pos:end="189:55"><name pos:start="189:5" pos:end="189:7">res</name> <operator pos:start="189:9" pos:end="189:9">=</operator> <call pos:start="189:11" pos:end="189:55"><name pos:start="189:11" pos:end="189:29">nvenc_set_timestamp</name><argument_list pos:start="189:30" pos:end="189:55">(<argument pos:start="189:31" pos:end="189:35"><expr pos:start="189:31" pos:end="189:35"><name pos:start="189:31" pos:end="189:35">avctx</name></expr></argument>, <argument pos:start="189:38" pos:end="189:49"><expr pos:start="189:38" pos:end="189:49"><operator pos:start="189:38" pos:end="189:38">&amp;</operator><name pos:start="189:39" pos:end="189:49">lock_params</name></expr></argument>, <argument pos:start="189:52" pos:end="189:54"><expr pos:start="189:52" pos:end="189:54"><name pos:start="189:52" pos:end="189:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="193:20"><if pos:start="191:5" pos:end="193:20">if <condition pos:start="191:8" pos:end="191:16">(<expr pos:start="191:9" pos:end="191:15"><name pos:start="191:9" pos:end="191:11">res</name> <operator pos:start="191:13" pos:end="191:13">&lt;</operator> <literal type="number" pos:start="191:15" pos:end="191:15">0</literal></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:20"><block_content pos:start="193:9" pos:end="193:20">

        <goto pos:start="193:9" pos:end="193:20">goto <name pos:start="193:14" pos:end="193:19">error2</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:27"><expr pos:start="197:5" pos:end="197:26"><call pos:start="197:5" pos:end="197:26"><name pos:start="197:5" pos:end="197:11">av_free</name><argument_list pos:start="197:12" pos:end="197:26">(<argument pos:start="197:13" pos:end="197:25"><expr pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:25">slice_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>



<label pos:start="205:1" pos:end="205:6"><name pos:start="205:1" pos:end="205:5">error</name>:</label>

    <expr_stmt pos:start="207:5" pos:end="207:49"><expr pos:start="207:5" pos:end="207:48"><call pos:start="207:5" pos:end="207:48"><name pos:start="207:5" pos:end="207:27">timestamp_queue_dequeue</name><argument_list pos:start="207:28" pos:end="207:48">(<argument pos:start="207:29" pos:end="207:47"><expr pos:start="207:29" pos:end="207:47"><name pos:start="207:29" pos:end="207:47"><name pos:start="207:29" pos:end="207:31">ctx</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:47">timestamp_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="211:1" pos:end="211:7"><name pos:start="211:1" pos:end="211:6">error2</name>:</label>

    <expr_stmt pos:start="213:5" pos:end="213:27"><expr pos:start="213:5" pos:end="213:26"><call pos:start="213:5" pos:end="213:26"><name pos:start="213:5" pos:end="213:11">av_free</name><argument_list pos:start="213:12" pos:end="213:26">(<argument pos:start="213:13" pos:end="213:25"><expr pos:start="213:13" pos:end="213:25"><name pos:start="213:13" pos:end="213:25">slice_offsets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:15">return <expr pos:start="217:12" pos:end="217:14"><name pos:start="217:12" pos:end="217:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
