<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16186.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">vhost_region_del</name><parameter_list pos:start="1:29" pos:end="3:58">(<parameter pos:start="1:30" pos:end="1:53"><decl pos:start="1:30" pos:end="1:53"><type pos:start="1:30" pos:end="1:53"><name pos:start="1:30" pos:end="1:43">MemoryListener</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:53">listener</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:57"><decl pos:start="3:30" pos:end="3:57"><type pos:start="3:30" pos:end="3:57"><name pos:start="3:30" pos:end="3:48">MemoryRegionSection</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:57">section</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:5">

    <decl_stmt pos:start="7:5" pos:end="9:58"><decl pos:start="7:5" pos:end="9:57"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">vhost_dev</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">dev</name> <init pos:start="7:27" pos:end="9:57">= <expr pos:start="7:29" pos:end="9:57"><call pos:start="7:29" pos:end="9:57"><name pos:start="7:29" pos:end="7:40">container_of</name><argument_list pos:start="7:41" pos:end="9:57">(<argument pos:start="7:42" pos:end="7:49"><expr pos:start="7:42" pos:end="7:49"><name pos:start="7:42" pos:end="7:49">listener</name></expr></argument>, <argument pos:start="7:52" pos:end="7:67"><expr pos:start="7:52" pos:end="7:67">struct <name pos:start="7:59" pos:end="7:67">vhost_dev</name></expr></argument>,

                                         <argument pos:start="9:42" pos:end="9:56"><expr pos:start="9:42" pos:end="9:56"><name pos:start="9:42" pos:end="9:56">memory_listener</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><call pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:20">vhost_set_memory</name><argument_list pos:start="15:21" pos:end="15:46">(<argument pos:start="15:22" pos:end="15:29"><expr pos:start="15:22" pos:end="15:29"><name pos:start="15:22" pos:end="15:29">listener</name></expr></argument>, <argument pos:start="15:32" pos:end="15:38"><expr pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:38">section</name></expr></argument>, <argument pos:start="15:41" pos:end="15:45"><expr pos:start="15:41" pos:end="15:45"><name pos:start="15:41" pos:end="15:45">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="33:5">for <control pos:start="17:9" pos:end="17:45">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:40"><expr pos:start="17:17" pos:end="17:39"><name pos:start="17:17" pos:end="17:17">i</name> <operator pos:start="17:19" pos:end="17:19">&lt;</operator> <name pos:start="17:21" pos:end="17:39"><name pos:start="17:21" pos:end="17:23">dev</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:39">n_mem_sections</name></name></expr>;</condition> <incr pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><operator pos:start="17:42" pos:end="17:43">++</operator><name pos:start="17:44" pos:end="17:44">i</name></expr></incr>)</control> <block pos:start="17:47" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:9">

        <if_stmt pos:start="19:9" pos:end="31:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="21:52">(<expr pos:start="19:13" pos:end="21:51"><name pos:start="19:13" pos:end="19:32"><name pos:start="19:13" pos:end="19:15">dev</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:29">mem_sections</name><index pos:start="19:30" pos:end="19:32">[<expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">i</name></expr>]</index></name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:60">offset_within_address_space</name>

            <operator pos:start="21:13" pos:end="21:14">==</operator> <name pos:start="21:16" pos:end="21:51"><name pos:start="21:16" pos:end="21:22">section</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:51">offset_within_address_space</name></name></expr>)</condition> <block pos:start="21:54" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:18">

            <expr_stmt pos:start="23:13" pos:end="23:34"><expr pos:start="23:13" pos:end="23:33"><operator pos:start="23:13" pos:end="23:14">--</operator><name pos:start="23:15" pos:end="23:33"><name pos:start="23:15" pos:end="23:17">dev</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:33">n_mem_sections</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="27:45"><expr pos:start="25:13" pos:end="27:44"><call pos:start="25:13" pos:end="27:44"><name pos:start="25:13" pos:end="25:19">memmove</name><argument_list pos:start="25:20" pos:end="27:44">(<argument pos:start="25:21" pos:end="25:41"><expr pos:start="25:21" pos:end="25:41"><operator pos:start="25:21" pos:end="25:21">&amp;</operator><name pos:start="25:22" pos:end="25:41"><name pos:start="25:22" pos:end="25:24">dev</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:38">mem_sections</name><index pos:start="25:39" pos:end="25:41">[<expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:44" pos:end="25:66"><expr pos:start="25:44" pos:end="25:66"><operator pos:start="25:44" pos:end="25:44">&amp;</operator><name pos:start="25:45" pos:end="25:66"><name pos:start="25:45" pos:end="25:47">dev</name><operator pos:start="25:48" pos:end="25:49">-&gt;</operator><name pos:start="25:50" pos:end="25:61">mem_sections</name><index pos:start="25:62" pos:end="25:66">[<expr pos:start="25:63" pos:end="25:65"><name pos:start="25:63" pos:end="25:63">i</name><operator pos:start="25:64" pos:end="25:64">+</operator><literal type="number" pos:start="25:65" pos:end="25:65">1</literal></expr>]</index></name></expr></argument>,

                    <argument pos:start="27:21" pos:end="27:43"><expr pos:start="27:21" pos:end="27:43"><name pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:23">dev</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:39">n_mem_sections</name></name> <operator pos:start="27:41" pos:end="27:41">-</operator> <name pos:start="27:43" pos:end="27:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
