<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11216.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">find_partition</name><parameter_list pos:start="1:26" pos:end="3:53">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:61">partition</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:31">off_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:39">offset</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:46">off_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:14">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">partition_record</name></name></type> <name pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:31">mbr</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:16">data</name><index pos:start="9:17" pos:end="9:21">[<expr pos:start="9:18" pos:end="9:20"><literal type="number" pos:start="9:18" pos:end="9:20">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">ext_partnum</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">4</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:44"><if pos:start="17:5" pos:end="19:44">if <condition pos:start="17:8" pos:end="17:34">(<expr pos:start="17:9" pos:end="17:33"><call pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:17">bdrv_read</name><argument_list pos:start="17:18" pos:end="17:33">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">bs</name></expr></argument>, <argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></argument>, <argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">data</name></expr></argument>, <argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:44"><block_content pos:start="19:9" pos:end="19:44">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:12">errx</name><argument_list pos:start="19:13" pos:end="19:43">(<argument pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:19"><name pos:start="19:14" pos:end="19:19">EINVAL</name></expr></argument>, <argument pos:start="19:22" pos:end="19:42"><expr pos:start="19:22" pos:end="19:42"><literal type="string" pos:start="19:22" pos:end="19:42">"error while reading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:47">(<expr pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:12">data</name><index pos:start="23:13" pos:end="23:17">[<expr pos:start="23:14" pos:end="23:16"><literal type="number" pos:start="23:14" pos:end="23:16">510</literal></expr>]</index></name> <operator pos:start="23:19" pos:end="23:20">!=</operator> <literal type="number" pos:start="23:22" pos:end="23:25">0x55</literal> <operator pos:start="23:27" pos:end="23:28">||</operator> <name pos:start="23:30" pos:end="23:38"><name pos:start="23:30" pos:end="23:33">data</name><index pos:start="23:34" pos:end="23:38">[<expr pos:start="23:35" pos:end="23:37"><literal type="number" pos:start="23:35" pos:end="23:37">511</literal></expr>]</index></name> <operator pos:start="23:40" pos:end="23:41">!=</operator> <literal type="number" pos:start="23:43" pos:end="23:46">0xaa</literal></expr>)</condition> <block pos:start="23:49" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:18">

        <expr_stmt pos:start="25:9" pos:end="25:24"><expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:13">errno</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <operator pos:start="25:17" pos:end="25:17">-</operator><name pos:start="25:18" pos:end="25:23">EINVAL</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="33:5" pos:end="95:5">for <control pos:start="33:9" pos:end="33:27">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:21">4</literal></expr>;</condition> <incr pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:24">i</name><operator pos:start="33:25" pos:end="33:26">++</operator></expr></incr>)</control> <block pos:start="33:29" pos:end="95:5">{<block_content pos:start="35:9" pos:end="93:9">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><call pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:22">read_partition</name><argument_list pos:start="35:23" pos:end="35:52">(<argument pos:start="35:24" pos:end="35:42"><expr pos:start="35:24" pos:end="35:42"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:42"><name pos:start="35:25" pos:end="35:28">data</name><index pos:start="35:29" pos:end="35:42">[<expr pos:start="35:30" pos:end="35:41"><literal type="number" pos:start="35:30" pos:end="35:34">446</literal> <operator pos:start="35:34" pos:end="35:34">+</operator> <literal type="number" pos:start="35:36" pos:end="35:37">16</literal> <operator pos:start="35:39" pos:end="35:39">*</operator> <name pos:start="35:41" pos:end="35:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:45" pos:end="35:51"><expr pos:start="35:45" pos:end="35:51"><operator pos:start="35:45" pos:end="35:45">&amp;</operator><name pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:48">mbr</name><index pos:start="35:49" pos:end="35:51">[<expr pos:start="35:50" pos:end="35:50"><name pos:start="35:50" pos:end="35:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="39:9" pos:end="41:21"><if pos:start="39:9" pos:end="41:21">if <condition pos:start="39:12" pos:end="39:35">(<expr pos:start="39:13" pos:end="39:34"><operator pos:start="39:13" pos:end="39:13">!</operator><name pos:start="39:14" pos:end="39:19"><name pos:start="39:14" pos:end="39:16">mbr</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><name pos:start="39:18" pos:end="39:18">i</name></expr>]</index></name><operator pos:start="39:20" pos:end="39:20">.</operator><name pos:start="39:21" pos:end="39:34">nb_sectors_abs</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:21"><block_content pos:start="41:13" pos:end="41:21">

            <continue pos:start="41:13" pos:end="41:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="45:9" pos:end="93:9"><if pos:start="45:9" pos:end="85:9">if <condition pos:start="45:12" pos:end="45:57">(<expr pos:start="45:13" pos:end="45:56"><name pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:15">mbr</name><index pos:start="45:16" pos:end="45:18">[<expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">i</name></expr>]</index></name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:25">system</name> <operator pos:start="45:27" pos:end="45:28">==</operator> <literal type="number" pos:start="45:30" pos:end="45:32">0xF</literal> <operator pos:start="45:34" pos:end="45:35">||</operator> <name pos:start="45:37" pos:end="45:42"><name pos:start="45:37" pos:end="45:39">mbr</name><index pos:start="45:40" pos:end="45:42">[<expr pos:start="45:41" pos:end="45:41"><name pos:start="45:41" pos:end="45:41">i</name></expr>]</index></name><operator pos:start="45:43" pos:end="45:43">.</operator><name pos:start="45:44" pos:end="45:49">system</name> <operator pos:start="45:51" pos:end="45:52">==</operator> <literal type="number" pos:start="45:54" pos:end="45:56">0x5</literal></expr>)</condition> <block pos:start="45:59" pos:end="85:9">{<block_content pos:start="47:13" pos:end="83:29">

            <decl_stmt pos:start="47:13" pos:end="47:43"><decl pos:start="47:13" pos:end="47:42"><type pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:18">struct</name> <name pos:start="47:20" pos:end="47:35">partition_record</name></name></type> <name pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:39">ext</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="49:13" pos:end="49:31"><decl pos:start="49:13" pos:end="49:30"><type pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:19">uint8_t</name></type> <name pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:25">data1</name><index pos:start="49:26" pos:end="49:30">[<expr pos:start="49:27" pos:end="49:29"><literal type="number" pos:start="49:27" pos:end="49:29">512</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="51:13" pos:end="51:18"><decl pos:start="51:13" pos:end="51:17"><type pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">int</name></type> <name pos:start="51:17" pos:end="51:17">j</name></decl>;</decl_stmt>



            <if_stmt pos:start="55:13" pos:end="57:52"><if pos:start="55:13" pos:end="57:52">if <condition pos:start="55:16" pos:end="55:65">(<expr pos:start="55:17" pos:end="55:64"><call pos:start="55:17" pos:end="55:64"><name pos:start="55:17" pos:end="55:25">bdrv_read</name><argument_list pos:start="55:26" pos:end="55:64">(<argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">bs</name></expr></argument>, <argument pos:start="55:31" pos:end="55:53"><expr pos:start="55:31" pos:end="55:53"><name pos:start="55:31" pos:end="55:36"><name pos:start="55:31" pos:end="55:33">mbr</name><index pos:start="55:34" pos:end="55:36">[<expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">i</name></expr>]</index></name><operator pos:start="55:37" pos:end="55:37">.</operator><name pos:start="55:38" pos:end="55:53">start_sector_abs</name></expr></argument>, <argument pos:start="55:56" pos:end="55:60"><expr pos:start="55:56" pos:end="55:60"><name pos:start="55:56" pos:end="55:60">data1</name></expr></argument>, <argument pos:start="55:63" pos:end="55:63"><expr pos:start="55:63" pos:end="55:63"><literal type="number" pos:start="55:63" pos:end="55:63">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:52"><block_content pos:start="57:17" pos:end="57:52">

                <expr_stmt pos:start="57:17" pos:end="57:52"><expr pos:start="57:17" pos:end="57:51"><call pos:start="57:17" pos:end="57:51"><name pos:start="57:17" pos:end="57:20">errx</name><argument_list pos:start="57:21" pos:end="57:51">(<argument pos:start="57:22" pos:end="57:27"><expr pos:start="57:22" pos:end="57:27"><name pos:start="57:22" pos:end="57:27">EINVAL</name></expr></argument>, <argument pos:start="57:30" pos:end="57:50"><expr pos:start="57:30" pos:end="57:50"><literal type="string" pos:start="57:30" pos:end="57:50">"error while reading"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <for pos:start="61:13" pos:end="81:13">for <control pos:start="61:17" pos:end="61:35">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">j</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:29"><name pos:start="61:25" pos:end="61:25">j</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <literal type="number" pos:start="61:29" pos:end="61:29">4</literal></expr>;</condition> <incr pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:32">j</name><operator pos:start="61:33" pos:end="61:34">++</operator></expr></incr>)</control> <block pos:start="61:37" pos:end="81:13">{<block_content pos:start="63:17" pos:end="79:17">

                <expr_stmt pos:start="63:17" pos:end="63:62"><expr pos:start="63:17" pos:end="63:61"><call pos:start="63:17" pos:end="63:61"><name pos:start="63:17" pos:end="63:30">read_partition</name><argument_list pos:start="63:31" pos:end="63:61">(<argument pos:start="63:32" pos:end="63:51"><expr pos:start="63:32" pos:end="63:51"><operator pos:start="63:32" pos:end="63:32">&amp;</operator><name pos:start="63:33" pos:end="63:51"><name pos:start="63:33" pos:end="63:37">data1</name><index pos:start="63:38" pos:end="63:51">[<expr pos:start="63:39" pos:end="63:50"><literal type="number" pos:start="63:39" pos:end="63:43">446</literal> <operator pos:start="63:43" pos:end="63:43">+</operator> <literal type="number" pos:start="63:45" pos:end="63:46">16</literal> <operator pos:start="63:48" pos:end="63:48">*</operator> <name pos:start="63:50" pos:end="63:50">j</name></expr>]</index></name></expr></argument>, <argument pos:start="63:54" pos:end="63:60"><expr pos:start="63:54" pos:end="63:60"><operator pos:start="63:54" pos:end="63:54">&amp;</operator><name pos:start="63:55" pos:end="63:60"><name pos:start="63:55" pos:end="63:57">ext</name><index pos:start="63:58" pos:end="63:60">[<expr pos:start="63:59" pos:end="63:59"><name pos:start="63:59" pos:end="63:59">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="67:29"><if pos:start="65:17" pos:end="67:29">if <condition pos:start="65:20" pos:end="65:43">(<expr pos:start="65:21" pos:end="65:42"><operator pos:start="65:21" pos:end="65:21">!</operator><name pos:start="65:22" pos:end="65:27"><name pos:start="65:22" pos:end="65:24">ext</name><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><name pos:start="65:26" pos:end="65:26">j</name></expr>]</index></name><operator pos:start="65:28" pos:end="65:28">.</operator><name pos:start="65:29" pos:end="65:42">nb_sectors_abs</name></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:29"><block_content pos:start="67:21" pos:end="67:29">

                    <continue pos:start="67:21" pos:end="67:29">continue;</continue></block_content></block></if></if_stmt>



                <if_stmt pos:start="71:17" pos:end="79:17"><if pos:start="71:17" pos:end="79:17">if <condition pos:start="71:20" pos:end="71:55">(<expr pos:start="71:21" pos:end="71:54"><operator pos:start="71:21" pos:end="71:21">(</operator><name pos:start="71:22" pos:end="71:32">ext_partnum</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <name pos:start="71:36" pos:end="71:36">j</name> <operator pos:start="71:38" pos:end="71:38">+</operator> <literal type="number" pos:start="71:40" pos:end="71:40">1</literal><operator pos:start="71:41" pos:end="71:41">)</operator> <operator pos:start="71:43" pos:end="71:44">==</operator> <name pos:start="71:46" pos:end="71:54">partition</name></expr>)</condition> <block pos:start="71:57" pos:end="79:17">{<block_content pos:start="73:21" pos:end="77:29">

                    <expr_stmt pos:start="73:21" pos:end="73:69"><expr pos:start="73:21" pos:end="73:68"><operator pos:start="73:21" pos:end="73:21">*</operator><name pos:start="73:22" pos:end="73:27">offset</name> <operator pos:start="73:29" pos:end="73:29">=</operator> <operator pos:start="73:31" pos:end="73:31">(</operator><name pos:start="73:32" pos:end="73:39">uint64_t</name><operator pos:start="73:40" pos:end="73:40">)</operator><name pos:start="73:41" pos:end="73:46"><name pos:start="73:41" pos:end="73:43">ext</name><index pos:start="73:44" pos:end="73:46">[<expr pos:start="73:45" pos:end="73:45"><name pos:start="73:45" pos:end="73:45">j</name></expr>]</index></name><operator pos:start="73:47" pos:end="73:47">.</operator><name pos:start="73:48" pos:end="73:63">start_sector_abs</name> <operator pos:start="73:65" pos:end="73:66">&lt;&lt;</operator> <literal type="number" pos:start="73:68" pos:end="73:68">9</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:65"><expr pos:start="75:21" pos:end="75:64"><operator pos:start="75:21" pos:end="75:21">*</operator><name pos:start="75:22" pos:end="75:25">size</name> <operator pos:start="75:27" pos:end="75:27">=</operator> <operator pos:start="75:29" pos:end="75:29">(</operator><name pos:start="75:30" pos:end="75:37">uint64_t</name><operator pos:start="75:38" pos:end="75:38">)</operator><name pos:start="75:39" pos:end="75:44"><name pos:start="75:39" pos:end="75:41">ext</name><index pos:start="75:42" pos:end="75:44">[<expr pos:start="75:43" pos:end="75:43"><name pos:start="75:43" pos:end="75:43">j</name></expr>]</index></name><operator pos:start="75:45" pos:end="75:45">.</operator><name pos:start="75:46" pos:end="75:59">nb_sectors_abs</name> <operator pos:start="75:61" pos:end="75:62">&lt;&lt;</operator> <literal type="number" pos:start="75:64" pos:end="75:64">9</literal></expr>;</expr_stmt>

                    <return pos:start="77:21" pos:end="77:29">return <expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:23">ext_partnum</name> <operator pos:start="83:25" pos:end="83:26">+=</operator> <literal type="number" pos:start="83:28" pos:end="83:28">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="85:11" pos:end="93:9">else if <condition pos:start="85:19" pos:end="85:40">(<expr pos:start="85:20" pos:end="85:39"><operator pos:start="85:20" pos:end="85:20">(</operator><name pos:start="85:21" pos:end="85:21">i</name> <operator pos:start="85:23" pos:end="85:23">+</operator> <literal type="number" pos:start="85:25" pos:end="85:25">1</literal><operator pos:start="85:26" pos:end="85:26">)</operator> <operator pos:start="85:28" pos:end="85:29">==</operator> <name pos:start="85:31" pos:end="85:39">partition</name></expr>)</condition> <block pos:start="85:42" pos:end="93:9">{<block_content pos:start="87:13" pos:end="91:21">

            <expr_stmt pos:start="87:13" pos:end="87:61"><expr pos:start="87:13" pos:end="87:60"><operator pos:start="87:13" pos:end="87:13">*</operator><name pos:start="87:14" pos:end="87:19">offset</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <operator pos:start="87:23" pos:end="87:23">(</operator><name pos:start="87:24" pos:end="87:31">uint64_t</name><operator pos:start="87:32" pos:end="87:32">)</operator><name pos:start="87:33" pos:end="87:38"><name pos:start="87:33" pos:end="87:35">mbr</name><index pos:start="87:36" pos:end="87:38">[<expr pos:start="87:37" pos:end="87:37"><name pos:start="87:37" pos:end="87:37">i</name></expr>]</index></name><operator pos:start="87:39" pos:end="87:39">.</operator><name pos:start="87:40" pos:end="87:55">start_sector_abs</name> <operator pos:start="87:57" pos:end="87:58">&lt;&lt;</operator> <literal type="number" pos:start="87:60" pos:end="87:60">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:57"><expr pos:start="89:13" pos:end="89:56"><operator pos:start="89:13" pos:end="89:13">*</operator><name pos:start="89:14" pos:end="89:17">size</name> <operator pos:start="89:19" pos:end="89:19">=</operator> <operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:29">uint64_t</name><operator pos:start="89:30" pos:end="89:30">)</operator><name pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:33">mbr</name><index pos:start="89:34" pos:end="89:36">[<expr pos:start="89:35" pos:end="89:35"><name pos:start="89:35" pos:end="89:35">i</name></expr>]</index></name><operator pos:start="89:37" pos:end="89:37">.</operator><name pos:start="89:38" pos:end="89:51">nb_sectors_abs</name> <operator pos:start="89:53" pos:end="89:54">&lt;&lt;</operator> <literal type="number" pos:start="89:56" pos:end="89:56">9</literal></expr>;</expr_stmt>

            <return pos:start="91:13" pos:end="91:21">return <expr pos:start="91:20" pos:end="91:20"><literal type="number" pos:start="91:20" pos:end="91:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="99:20"><expr pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:9">errno</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <operator pos:start="99:13" pos:end="99:13">-</operator><name pos:start="99:14" pos:end="99:19">ENOENT</name></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:14">return <expr pos:start="101:12" pos:end="101:13"><operator pos:start="101:12" pos:end="101:12">-</operator><literal type="number" pos:start="101:13" pos:end="101:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
