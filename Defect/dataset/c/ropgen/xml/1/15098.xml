<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15098.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:34"><name pos:start="1:1" pos:end="1:20">yuv2rgb_1_c_template</name><argument_list pos:start="1:21" pos:end="9:34">(<argument pos:start="1:22" pos:end="1:34">SwsContext *c</argument>, <argument pos:start="1:37" pos:end="1:55">const int16_t *buf0</argument>,

                     <argument pos:start="3:22" pos:end="3:43">const int16_t *ubuf[<literal type="number" pos:start="3:42" pos:end="3:42">2</literal>]</argument>, <argument pos:start="3:46" pos:end="3:67">const int16_t *vbuf[<literal type="number" pos:start="3:66" pos:end="3:66">2</literal>]</argument>,

                     <argument pos:start="5:22" pos:end="5:41">const int16_t *abuf0</argument>, <argument pos:start="5:44" pos:end="5:56">uint8_t *dest</argument>, <argument pos:start="5:59" pos:end="5:66">int dstW</argument>,

                     <argument pos:start="7:22" pos:end="7:32">int uvalpha</argument>, <argument pos:start="7:35" pos:end="7:39">int y</argument>, <argument pos:start="7:42" pos:end="7:64">enum PixelFormat target</argument>,

                     <argument pos:start="9:22" pos:end="9:33">int hasAlpha</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="99:1">{<block_content pos:start="13:5" pos:end="97:5">

    <decl_stmt pos:start="13:5" pos:end="13:53"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:24">ubuf0</name> <init pos:start="13:26" pos:end="13:34">= <expr pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:31">ubuf</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="13:37" pos:end="13:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:42">vbuf0</name> <init pos:start="13:44" pos:end="13:52">= <expr pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:49">vbuf</name><index pos:start="13:50" pos:end="13:52">[<expr pos:start="13:51" pos:end="13:51"><literal type="number" pos:start="13:51" pos:end="13:51">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="97:5"><if pos:start="19:5" pos:end="57:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:15">uvalpha</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:22">2048</literal></expr>)</condition> <block pos:start="19:25" pos:end="57:5">{<block_content pos:start="21:9" pos:end="55:9">

        <for pos:start="21:9" pos:end="55:9">for <control pos:start="21:13" pos:end="21:41">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:35"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <operator pos:start="21:25" pos:end="21:25">(</operator><name pos:start="21:26" pos:end="21:29">dstW</name> <operator pos:start="21:31" pos:end="21:32">&gt;&gt;</operator> <literal type="number" pos:start="21:34" pos:end="21:34">1</literal><operator pos:start="21:35" pos:end="21:35">)</operator></expr>;</condition> <incr pos:start="21:38" pos:end="21:40"><expr pos:start="21:38" pos:end="21:40"><name pos:start="21:38" pos:end="21:38">i</name><operator pos:start="21:39" pos:end="21:40">++</operator></expr></incr>)</control> <block pos:start="21:43" pos:end="55:9">{<block_content pos:start="23:13" pos:end="53:56">

            <decl_stmt pos:start="23:13" pos:end="23:49"><decl pos:start="23:13" pos:end="23:48"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:18">Y1</name> <init pos:start="23:20" pos:end="23:48">= <expr pos:start="23:22" pos:end="23:48"><operator pos:start="23:22" pos:end="23:22">(</operator><name pos:start="23:23" pos:end="23:37"><name pos:start="23:23" pos:end="23:26">buf0</name><index pos:start="23:27" pos:end="23:37">[<expr pos:start="23:28" pos:end="23:32"><name pos:start="23:28" pos:end="23:28">i</name> <operator pos:start="23:30" pos:end="23:30">*</operator> <literal type="number" pos:start="23:32" pos:end="23:32">2</literal></expr>    ]</index></name> <operator pos:start="23:39" pos:end="23:39">+</operator> <literal type="number" pos:start="23:41" pos:end="23:42">64</literal><operator pos:start="23:43" pos:end="23:43">)</operator> <operator pos:start="23:45" pos:end="23:46">&gt;&gt;</operator> <literal type="number" pos:start="23:48" pos:end="23:48">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:49"><decl pos:start="25:13" pos:end="25:48"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:18">Y2</name> <init pos:start="25:20" pos:end="25:48">= <expr pos:start="25:22" pos:end="25:48"><operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:37"><name pos:start="25:23" pos:end="25:26">buf0</name><index pos:start="25:27" pos:end="25:37">[<expr pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:28">i</name> <operator pos:start="25:30" pos:end="25:30">*</operator> <literal type="number" pos:start="25:32" pos:end="25:34">2</literal> <operator pos:start="25:34" pos:end="25:34">+</operator> <literal type="number" pos:start="25:36" pos:end="25:36">1</literal></expr>]</index></name> <operator pos:start="25:39" pos:end="25:39">+</operator> <literal type="number" pos:start="25:41" pos:end="25:42">64</literal><operator pos:start="25:43" pos:end="25:43">)</operator> <operator pos:start="25:45" pos:end="25:46">&gt;&gt;</operator> <literal type="number" pos:start="25:48" pos:end="25:48">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:49"><decl pos:start="27:13" pos:end="27:48"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:17">U</name>  <init pos:start="27:20" pos:end="27:48">= <expr pos:start="27:22" pos:end="27:48"><operator pos:start="27:22" pos:end="27:22">(</operator><name pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:27">ubuf0</name><index pos:start="27:28" pos:end="27:30">[<expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">i</name></expr>]</index></name>        <operator pos:start="27:39" pos:end="27:39">+</operator> <literal type="number" pos:start="27:41" pos:end="27:42">64</literal><operator pos:start="27:43" pos:end="27:43">)</operator> <operator pos:start="27:45" pos:end="27:46">&gt;&gt;</operator> <literal type="number" pos:start="27:48" pos:end="27:48">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:49"><decl pos:start="29:13" pos:end="29:48"><type pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">int</name></type> <name pos:start="29:17" pos:end="29:17">V</name>  <init pos:start="29:20" pos:end="29:48">= <expr pos:start="29:22" pos:end="29:48"><operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:30"><name pos:start="29:23" pos:end="29:27">vbuf0</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><name pos:start="29:29" pos:end="29:29">i</name></expr>]</index></name>        <operator pos:start="29:39" pos:end="29:39">+</operator> <literal type="number" pos:start="29:41" pos:end="29:42">64</literal><operator pos:start="29:43" pos:end="29:43">)</operator> <operator pos:start="29:45" pos:end="29:46">&gt;&gt;</operator> <literal type="number" pos:start="29:48" pos:end="29:48">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="31:13" pos:end="31:23"><decl pos:start="31:13" pos:end="31:18"><type pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">int</name></type> <name pos:start="31:17" pos:end="31:18">A1</name></decl>, <decl pos:start="31:21" pos:end="31:22"><type ref="prev" pos:start="31:13" pos:end="31:15"/><name pos:start="31:21" pos:end="31:22">A2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="37:68"><decl pos:start="33:13" pos:end="33:67"><type pos:start="33:13" pos:end="33:24"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:22">void</name> <modifier pos:start="33:24" pos:end="33:24">*</modifier></type><name pos:start="33:25" pos:end="33:25">r</name> <init pos:start="33:27" pos:end="33:67">=  <expr pos:start="33:30" pos:end="33:67"><name pos:start="33:30" pos:end="33:67"><name pos:start="33:30" pos:end="33:30">c</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:40">table_rV</name><index pos:start="33:41" pos:end="33:67">[<expr pos:start="33:42" pos:end="33:66"><name pos:start="33:42" pos:end="33:42">V</name> <operator pos:start="33:44" pos:end="33:44">+</operator> <name pos:start="33:46" pos:end="33:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name></expr></init></decl>,

                       <decl pos:start="35:24" pos:end="35:109"><type ref="prev" pos:start="33:13" pos:end="33:24"><modifier pos:start="35:24" pos:end="35:24">*</modifier></type><name pos:start="35:25" pos:end="35:25">g</name> <init pos:start="35:27" pos:end="35:109">= <expr pos:start="35:29" pos:end="35:109"><operator pos:start="35:29" pos:end="35:29">(</operator><name pos:start="35:30" pos:end="35:67"><name pos:start="35:30" pos:end="35:30">c</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:40">table_gU</name><index pos:start="35:41" pos:end="35:67">[<expr pos:start="35:42" pos:end="35:66"><name pos:start="35:42" pos:end="35:42">U</name> <operator pos:start="35:44" pos:end="35:44">+</operator> <name pos:start="35:46" pos:end="35:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name> <operator pos:start="35:69" pos:end="35:69">+</operator> <name pos:start="35:71" pos:end="35:108"><name pos:start="35:71" pos:end="35:71">c</name><operator pos:start="35:72" pos:end="35:73">-&gt;</operator><name pos:start="35:74" pos:end="35:81">table_gV</name><index pos:start="35:82" pos:end="35:108">[<expr pos:start="35:83" pos:end="35:107"><name pos:start="35:83" pos:end="35:83">V</name> <operator pos:start="35:85" pos:end="35:85">+</operator> <name pos:start="35:87" pos:end="35:107">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name><operator pos:start="35:109" pos:end="35:109">)</operator></expr></init></decl>,

                       <decl pos:start="37:24" pos:end="37:67"><type ref="prev" pos:start="33:13" pos:end="33:24"><modifier pos:start="37:24" pos:end="37:24">*</modifier></type><name pos:start="37:25" pos:end="37:25">b</name> <init pos:start="37:27" pos:end="37:67">=  <expr pos:start="37:30" pos:end="37:67"><name pos:start="37:30" pos:end="37:67"><name pos:start="37:30" pos:end="37:30">c</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:40">table_bU</name><index pos:start="37:41" pos:end="37:67">[<expr pos:start="37:42" pos:end="37:66"><name pos:start="37:42" pos:end="37:42">U</name> <operator pos:start="37:44" pos:end="37:44">+</operator> <name pos:start="37:46" pos:end="37:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:25">(<expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:24">hasAlpha</name></expr>)</condition> <block pos:start="41:27" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:50">

                <expr_stmt pos:start="43:17" pos:end="43:50"><expr pos:start="43:17" pos:end="43:49"><name pos:start="43:17" pos:end="43:18">A1</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><name pos:start="43:23" pos:end="43:38"><name pos:start="43:23" pos:end="43:27">abuf0</name><index pos:start="43:28" pos:end="43:38">[<expr pos:start="43:29" pos:end="43:33"><name pos:start="43:29" pos:end="43:29">i</name> <operator pos:start="43:31" pos:end="43:31">*</operator> <literal type="number" pos:start="43:33" pos:end="43:33">2</literal></expr>    ]</index></name> <operator pos:start="43:40" pos:end="43:40">+</operator> <literal type="number" pos:start="43:42" pos:end="43:43">64</literal><operator pos:start="43:44" pos:end="43:44">)</operator> <operator pos:start="43:46" pos:end="43:47">&gt;&gt;</operator> <literal type="number" pos:start="43:49" pos:end="43:49">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:50"><expr pos:start="45:17" pos:end="45:49"><name pos:start="45:17" pos:end="45:18">A2</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <operator pos:start="45:22" pos:end="45:22">(</operator><name pos:start="45:23" pos:end="45:38"><name pos:start="45:23" pos:end="45:27">abuf0</name><index pos:start="45:28" pos:end="45:38">[<expr pos:start="45:29" pos:end="45:37"><name pos:start="45:29" pos:end="45:29">i</name> <operator pos:start="45:31" pos:end="45:31">*</operator> <literal type="number" pos:start="45:33" pos:end="45:35">2</literal> <operator pos:start="45:35" pos:end="45:35">+</operator> <literal type="number" pos:start="45:37" pos:end="45:37">1</literal></expr>]</index></name> <operator pos:start="45:40" pos:end="45:40">+</operator> <literal type="number" pos:start="45:42" pos:end="45:43">64</literal><operator pos:start="45:44" pos:end="45:44">)</operator> <operator pos:start="45:46" pos:end="45:47">&gt;&gt;</operator> <literal type="number" pos:start="45:49" pos:end="45:49">7</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="51:13" pos:end="53:56"><expr pos:start="51:13" pos:end="53:55"><call pos:start="51:13" pos:end="53:55"><name pos:start="51:13" pos:end="51:25">yuv2rgb_write</name><argument_list pos:start="51:26" pos:end="53:55">(<argument pos:start="51:27" pos:end="51:30"><expr pos:start="51:27" pos:end="51:30"><name pos:start="51:27" pos:end="51:30">dest</name></expr></argument>, <argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><name pos:start="51:33" pos:end="51:33">i</name></expr></argument>, <argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><name pos:start="51:36" pos:end="51:37">Y1</name></expr></argument>, <argument pos:start="51:40" pos:end="51:41"><expr pos:start="51:40" pos:end="51:41"><name pos:start="51:40" pos:end="51:41">Y2</name></expr></argument>, <argument pos:start="51:44" pos:end="51:60"><expr pos:start="51:44" pos:end="51:60"><ternary pos:start="51:44" pos:end="51:60"><condition pos:start="51:44" pos:end="51:53"><expr pos:start="51:44" pos:end="51:51"><name pos:start="51:44" pos:end="51:51">hasAlpha</name></expr> ?</condition><then pos:start="51:55" pos:end="51:56"> <expr pos:start="51:55" pos:end="51:56"><name pos:start="51:55" pos:end="51:56">A1</name></expr> </then><else pos:start="51:58" pos:end="51:60">: <expr pos:start="51:60" pos:end="51:60"><literal type="number" pos:start="51:60" pos:end="51:60">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="51:63" pos:end="51:79"><expr pos:start="51:63" pos:end="51:79"><ternary pos:start="51:63" pos:end="51:79"><condition pos:start="51:63" pos:end="51:72"><expr pos:start="51:63" pos:end="51:70"><name pos:start="51:63" pos:end="51:70">hasAlpha</name></expr> ?</condition><then pos:start="51:74" pos:end="51:75"> <expr pos:start="51:74" pos:end="51:75"><name pos:start="51:74" pos:end="51:75">A2</name></expr> </then><else pos:start="51:77" pos:end="51:79">: <expr pos:start="51:79" pos:end="51:79"><literal type="number" pos:start="51:79" pos:end="51:79">0</literal></expr></else></ternary></expr></argument>,

                          <argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">r</name></expr></argument>, <argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">g</name></expr></argument>, <argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">b</name></expr></argument>, <argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">y</name></expr></argument>, <argument pos:start="53:39" pos:end="53:44"><expr pos:start="53:39" pos:end="53:44"><name pos:start="53:39" pos:end="53:44">target</name></expr></argument>, <argument pos:start="53:47" pos:end="53:54"><expr pos:start="53:47" pos:end="53:54"><name pos:start="53:47" pos:end="53:54">hasAlpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="97:5">else <block pos:start="57:12" pos:end="97:5">{<block_content pos:start="59:9" pos:end="95:9">

        <decl_stmt pos:start="59:9" pos:end="59:57"><decl pos:start="59:9" pos:end="59:38"><type pos:start="59:9" pos:end="59:23"><specifier pos:start="59:9" pos:end="59:13">const</specifier> <name pos:start="59:15" pos:end="59:21">int16_t</name> <modifier pos:start="59:23" pos:end="59:23">*</modifier></type><name pos:start="59:24" pos:end="59:28">ubuf1</name> <init pos:start="59:30" pos:end="59:38">= <expr pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:35">ubuf</name><index pos:start="59:36" pos:end="59:38">[<expr pos:start="59:37" pos:end="59:37"><literal type="number" pos:start="59:37" pos:end="59:37">1</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="59:41" pos:end="59:56"><type ref="prev" pos:start="59:9" pos:end="59:23"><modifier pos:start="59:41" pos:end="59:41">*</modifier></type><name pos:start="59:42" pos:end="59:46">vbuf1</name> <init pos:start="59:48" pos:end="59:56">= <expr pos:start="59:50" pos:end="59:56"><name pos:start="59:50" pos:end="59:56"><name pos:start="59:50" pos:end="59:53">vbuf</name><index pos:start="59:54" pos:end="59:56">[<expr pos:start="59:55" pos:end="59:55"><literal type="number" pos:start="59:55" pos:end="59:55">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <for pos:start="61:9" pos:end="95:9">for <control pos:start="61:13" pos:end="61:41">(<init pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:18"><name pos:start="61:14" pos:end="61:14">i</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <literal type="number" pos:start="61:18" pos:end="61:18">0</literal></expr>;</init> <condition pos:start="61:21" pos:end="61:36"><expr pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:21">i</name> <operator pos:start="61:23" pos:end="61:23">&lt;</operator> <operator pos:start="61:25" pos:end="61:25">(</operator><name pos:start="61:26" pos:end="61:29">dstW</name> <operator pos:start="61:31" pos:end="61:32">&gt;&gt;</operator> <literal type="number" pos:start="61:34" pos:end="61:34">1</literal><operator pos:start="61:35" pos:end="61:35">)</operator></expr>;</condition> <incr pos:start="61:38" pos:end="61:40"><expr pos:start="61:38" pos:end="61:40"><name pos:start="61:38" pos:end="61:38">i</name><operator pos:start="61:39" pos:end="61:40">++</operator></expr></incr>)</control> <block pos:start="61:43" pos:end="95:9">{<block_content pos:start="63:13" pos:end="93:56">

            <decl_stmt pos:start="63:13" pos:end="63:54"><decl pos:start="63:13" pos:end="63:53"><type pos:start="63:13" pos:end="63:15"><name pos:start="63:13" pos:end="63:15">int</name></type> <name pos:start="63:17" pos:end="63:18">Y1</name> <init pos:start="63:20" pos:end="63:53">= <expr pos:start="63:22" pos:end="63:53"><operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:37"><name pos:start="63:23" pos:end="63:26">buf0</name><index pos:start="63:27" pos:end="63:37">[<expr pos:start="63:28" pos:end="63:32"><name pos:start="63:28" pos:end="63:28">i</name> <operator pos:start="63:30" pos:end="63:30">*</operator> <literal type="number" pos:start="63:32" pos:end="63:32">2</literal></expr>    ]</index></name>     <operator pos:start="63:43" pos:end="63:43">+</operator>  <literal type="number" pos:start="63:46" pos:end="63:47">64</literal><operator pos:start="63:48" pos:end="63:48">)</operator> <operator pos:start="63:50" pos:end="63:51">&gt;&gt;</operator> <literal type="number" pos:start="63:53" pos:end="63:53">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="65:13" pos:end="65:54"><decl pos:start="65:13" pos:end="65:53"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:18">Y2</name> <init pos:start="65:20" pos:end="65:53">= <expr pos:start="65:22" pos:end="65:53"><operator pos:start="65:22" pos:end="65:22">(</operator><name pos:start="65:23" pos:end="65:37"><name pos:start="65:23" pos:end="65:26">buf0</name><index pos:start="65:27" pos:end="65:37">[<expr pos:start="65:28" pos:end="65:36"><name pos:start="65:28" pos:end="65:28">i</name> <operator pos:start="65:30" pos:end="65:30">*</operator> <literal type="number" pos:start="65:32" pos:end="65:34">2</literal> <operator pos:start="65:34" pos:end="65:34">+</operator> <literal type="number" pos:start="65:36" pos:end="65:36">1</literal></expr>]</index></name>     <operator pos:start="65:43" pos:end="65:43">+</operator>  <literal type="number" pos:start="65:46" pos:end="65:47">64</literal><operator pos:start="65:48" pos:end="65:48">)</operator> <operator pos:start="65:50" pos:end="65:51">&gt;&gt;</operator> <literal type="number" pos:start="65:53" pos:end="65:53">7</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="67:13" pos:end="67:54"><decl pos:start="67:13" pos:end="67:53"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:17">U</name>  <init pos:start="67:20" pos:end="67:53">= <expr pos:start="67:22" pos:end="67:53"><operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:30"><name pos:start="67:23" pos:end="67:27">ubuf0</name><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">i</name></expr>]</index></name> <operator pos:start="67:32" pos:end="67:32">+</operator> <name pos:start="67:34" pos:end="67:41"><name pos:start="67:34" pos:end="67:38">ubuf1</name><index pos:start="67:39" pos:end="67:41">[<expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">i</name></expr>]</index></name> <operator pos:start="67:43" pos:end="67:43">+</operator> <literal type="number" pos:start="67:45" pos:end="67:47">128</literal><operator pos:start="67:48" pos:end="67:48">)</operator> <operator pos:start="67:50" pos:end="67:51">&gt;&gt;</operator> <literal type="number" pos:start="67:53" pos:end="67:53">8</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:54"><decl pos:start="69:13" pos:end="69:53"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:17">V</name>  <init pos:start="69:20" pos:end="69:53">= <expr pos:start="69:22" pos:end="69:53"><operator pos:start="69:22" pos:end="69:22">(</operator><name pos:start="69:23" pos:end="69:30"><name pos:start="69:23" pos:end="69:27">vbuf0</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><name pos:start="69:29" pos:end="69:29">i</name></expr>]</index></name> <operator pos:start="69:32" pos:end="69:32">+</operator> <name pos:start="69:34" pos:end="69:41"><name pos:start="69:34" pos:end="69:38">vbuf1</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><name pos:start="69:40" pos:end="69:40">i</name></expr>]</index></name> <operator pos:start="69:43" pos:end="69:43">+</operator> <literal type="number" pos:start="69:45" pos:end="69:47">128</literal><operator pos:start="69:48" pos:end="69:48">)</operator> <operator pos:start="69:50" pos:end="69:51">&gt;&gt;</operator> <literal type="number" pos:start="69:53" pos:end="69:53">8</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:23"><decl pos:start="71:13" pos:end="71:18"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:18">A1</name></decl>, <decl pos:start="71:21" pos:end="71:22"><type ref="prev" pos:start="71:13" pos:end="71:15"/><name pos:start="71:21" pos:end="71:22">A2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="77:68"><decl pos:start="73:13" pos:end="73:67"><type pos:start="73:13" pos:end="73:24"><specifier pos:start="73:13" pos:end="73:17">const</specifier> <name pos:start="73:19" pos:end="73:22">void</name> <modifier pos:start="73:24" pos:end="73:24">*</modifier></type><name pos:start="73:25" pos:end="73:25">r</name> <init pos:start="73:27" pos:end="73:67">=  <expr pos:start="73:30" pos:end="73:67"><name pos:start="73:30" pos:end="73:67"><name pos:start="73:30" pos:end="73:30">c</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:40">table_rV</name><index pos:start="73:41" pos:end="73:67">[<expr pos:start="73:42" pos:end="73:66"><name pos:start="73:42" pos:end="73:42">V</name> <operator pos:start="73:44" pos:end="73:44">+</operator> <name pos:start="73:46" pos:end="73:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name></expr></init></decl>,

                       <decl pos:start="75:24" pos:end="75:109"><type ref="prev" pos:start="73:13" pos:end="73:24"><modifier pos:start="75:24" pos:end="75:24">*</modifier></type><name pos:start="75:25" pos:end="75:25">g</name> <init pos:start="75:27" pos:end="75:109">= <expr pos:start="75:29" pos:end="75:109"><operator pos:start="75:29" pos:end="75:29">(</operator><name pos:start="75:30" pos:end="75:67"><name pos:start="75:30" pos:end="75:30">c</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:40">table_gU</name><index pos:start="75:41" pos:end="75:67">[<expr pos:start="75:42" pos:end="75:66"><name pos:start="75:42" pos:end="75:42">U</name> <operator pos:start="75:44" pos:end="75:44">+</operator> <name pos:start="75:46" pos:end="75:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name> <operator pos:start="75:69" pos:end="75:69">+</operator> <name pos:start="75:71" pos:end="75:108"><name pos:start="75:71" pos:end="75:71">c</name><operator pos:start="75:72" pos:end="75:73">-&gt;</operator><name pos:start="75:74" pos:end="75:81">table_gV</name><index pos:start="75:82" pos:end="75:108">[<expr pos:start="75:83" pos:end="75:107"><name pos:start="75:83" pos:end="75:83">V</name> <operator pos:start="75:85" pos:end="75:85">+</operator> <name pos:start="75:87" pos:end="75:107">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name><operator pos:start="75:109" pos:end="75:109">)</operator></expr></init></decl>,

                       <decl pos:start="77:24" pos:end="77:67"><type ref="prev" pos:start="73:13" pos:end="73:24"><modifier pos:start="77:24" pos:end="77:24">*</modifier></type><name pos:start="77:25" pos:end="77:25">b</name> <init pos:start="77:27" pos:end="77:67">=  <expr pos:start="77:30" pos:end="77:67"><name pos:start="77:30" pos:end="77:67"><name pos:start="77:30" pos:end="77:30">c</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:40">table_bU</name><index pos:start="77:41" pos:end="77:67">[<expr pos:start="77:42" pos:end="77:66"><name pos:start="77:42" pos:end="77:42">U</name> <operator pos:start="77:44" pos:end="77:44">+</operator> <name pos:start="77:46" pos:end="77:66">YUVRGB_TABLE_HEADROOM</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:25">(<expr pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:24">hasAlpha</name></expr>)</condition> <block pos:start="81:27" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:50">

                <expr_stmt pos:start="83:17" pos:end="83:50"><expr pos:start="83:17" pos:end="83:49"><name pos:start="83:17" pos:end="83:18">A1</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <operator pos:start="83:22" pos:end="83:22">(</operator><name pos:start="83:23" pos:end="83:38"><name pos:start="83:23" pos:end="83:27">abuf0</name><index pos:start="83:28" pos:end="83:38">[<expr pos:start="83:29" pos:end="83:33"><name pos:start="83:29" pos:end="83:29">i</name> <operator pos:start="83:31" pos:end="83:31">*</operator> <literal type="number" pos:start="83:33" pos:end="83:33">2</literal></expr>    ]</index></name> <operator pos:start="83:40" pos:end="83:40">+</operator> <literal type="number" pos:start="83:42" pos:end="83:43">64</literal><operator pos:start="83:44" pos:end="83:44">)</operator> <operator pos:start="83:46" pos:end="83:47">&gt;&gt;</operator> <literal type="number" pos:start="83:49" pos:end="83:49">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:50"><expr pos:start="85:17" pos:end="85:49"><name pos:start="85:17" pos:end="85:18">A2</name> <operator pos:start="85:20" pos:end="85:20">=</operator> <operator pos:start="85:22" pos:end="85:22">(</operator><name pos:start="85:23" pos:end="85:38"><name pos:start="85:23" pos:end="85:27">abuf0</name><index pos:start="85:28" pos:end="85:38">[<expr pos:start="85:29" pos:end="85:37"><name pos:start="85:29" pos:end="85:29">i</name> <operator pos:start="85:31" pos:end="85:31">*</operator> <literal type="number" pos:start="85:33" pos:end="85:35">2</literal> <operator pos:start="85:35" pos:end="85:35">+</operator> <literal type="number" pos:start="85:37" pos:end="85:37">1</literal></expr>]</index></name> <operator pos:start="85:40" pos:end="85:40">+</operator> <literal type="number" pos:start="85:42" pos:end="85:43">64</literal><operator pos:start="85:44" pos:end="85:44">)</operator> <operator pos:start="85:46" pos:end="85:47">&gt;&gt;</operator> <literal type="number" pos:start="85:49" pos:end="85:49">7</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="91:13" pos:end="93:56"><expr pos:start="91:13" pos:end="93:55"><call pos:start="91:13" pos:end="93:55"><name pos:start="91:13" pos:end="91:25">yuv2rgb_write</name><argument_list pos:start="91:26" pos:end="93:55">(<argument pos:start="91:27" pos:end="91:30"><expr pos:start="91:27" pos:end="91:30"><name pos:start="91:27" pos:end="91:30">dest</name></expr></argument>, <argument pos:start="91:33" pos:end="91:33"><expr pos:start="91:33" pos:end="91:33"><name pos:start="91:33" pos:end="91:33">i</name></expr></argument>, <argument pos:start="91:36" pos:end="91:37"><expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">Y1</name></expr></argument>, <argument pos:start="91:40" pos:end="91:41"><expr pos:start="91:40" pos:end="91:41"><name pos:start="91:40" pos:end="91:41">Y2</name></expr></argument>, <argument pos:start="91:44" pos:end="91:60"><expr pos:start="91:44" pos:end="91:60"><ternary pos:start="91:44" pos:end="91:60"><condition pos:start="91:44" pos:end="91:53"><expr pos:start="91:44" pos:end="91:51"><name pos:start="91:44" pos:end="91:51">hasAlpha</name></expr> ?</condition><then pos:start="91:55" pos:end="91:56"> <expr pos:start="91:55" pos:end="91:56"><name pos:start="91:55" pos:end="91:56">A1</name></expr> </then><else pos:start="91:58" pos:end="91:60">: <expr pos:start="91:60" pos:end="91:60"><literal type="number" pos:start="91:60" pos:end="91:60">0</literal></expr></else></ternary></expr></argument>, <argument pos:start="91:63" pos:end="91:79"><expr pos:start="91:63" pos:end="91:79"><ternary pos:start="91:63" pos:end="91:79"><condition pos:start="91:63" pos:end="91:72"><expr pos:start="91:63" pos:end="91:70"><name pos:start="91:63" pos:end="91:70">hasAlpha</name></expr> ?</condition><then pos:start="91:74" pos:end="91:75"> <expr pos:start="91:74" pos:end="91:75"><name pos:start="91:74" pos:end="91:75">A2</name></expr> </then><else pos:start="91:77" pos:end="91:79">: <expr pos:start="91:79" pos:end="91:79"><literal type="number" pos:start="91:79" pos:end="91:79">0</literal></expr></else></ternary></expr></argument>,

                          <argument pos:start="93:27" pos:end="93:27"><expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">r</name></expr></argument>, <argument pos:start="93:30" pos:end="93:30"><expr pos:start="93:30" pos:end="93:30"><name pos:start="93:30" pos:end="93:30">g</name></expr></argument>, <argument pos:start="93:33" pos:end="93:33"><expr pos:start="93:33" pos:end="93:33"><name pos:start="93:33" pos:end="93:33">b</name></expr></argument>, <argument pos:start="93:36" pos:end="93:36"><expr pos:start="93:36" pos:end="93:36"><name pos:start="93:36" pos:end="93:36">y</name></expr></argument>, <argument pos:start="93:39" pos:end="93:44"><expr pos:start="93:39" pos:end="93:44"><name pos:start="93:39" pos:end="93:44">target</name></expr></argument>, <argument pos:start="93:47" pos:end="93:54"><expr pos:start="93:47" pos:end="93:54"><name pos:start="93:47" pos:end="93:54">hasAlpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
