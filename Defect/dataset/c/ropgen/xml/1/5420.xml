<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5420.c" pos:tabs="8"><function pos:start="1:1" pos:end="1087:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">cfhd_decode</name><parameter_list pos:start="1:23" pos:end="3:39">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:50">void</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">data</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:61">int</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:72">got_frame</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:38"><decl pos:start="3:24" pos:end="3:38"><type pos:start="3:24" pos:end="3:38"><name pos:start="3:24" pos:end="3:31">AVPacket</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="1087:1">{<block_content pos:start="7:5" pos:end="1085:23">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CFHDContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:18">GetByteContext</name></type> <name pos:start="9:20" pos:end="9:21">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">ThreadFrame</name></type> <name pos:start="11:17" pos:end="11:21">frame</name> <init pos:start="11:23" pos:end="11:37">= <expr pos:start="11:25" pos:end="11:37"><block pos:start="11:25" pos:end="11:37">{ <expr pos:start="11:27" pos:end="11:35"><operator pos:start="11:27" pos:end="11:27">.</operator><name pos:start="11:28" pos:end="11:28">f</name> <operator pos:start="11:30" pos:end="11:30">=</operator> <name pos:start="11:32" pos:end="11:35">data</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pic</name> <init pos:start="13:18" pos:end="13:23">= <expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:53"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>, <decl pos:start="15:18" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:18">i</name></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">j</name></decl>, <decl pos:start="15:24" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:24" pos:end="15:29">planes</name></decl>, <decl pos:start="15:32" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:36">plane</name></decl>, <decl pos:start="15:39" pos:end="15:52"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:39" pos:end="15:48">got_buffer</name> <init pos:start="15:50" pos:end="15:52">= <expr pos:start="15:52" pos:end="15:52"><literal type="number" pos:start="15:52" pos:end="15:52">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">int16_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:23">coeff_data</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">coded_format</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:42">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><call pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:23">init_frame_defaults</name><argument_list pos:start="23:24" pos:end="23:26">(<argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:10">planes</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:53"><name pos:start="25:14" pos:end="25:36">av_pix_fmt_count_planes</name><argument_list pos:start="25:37" pos:end="25:53">(<argument pos:start="25:38" pos:end="25:52"><expr pos:start="25:38" pos:end="25:52"><name pos:start="25:38" pos:end="25:52"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:52">coded_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:20">bytestream2_init</name><argument_list pos:start="29:21" pos:end="29:51">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:24">gb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:37"><expr pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:37"><name pos:start="29:27" pos:end="29:31">avpkt</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:37">data</name></name></expr></argument>, <argument pos:start="29:40" pos:end="29:50"><expr pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:50"><name pos:start="29:40" pos:end="29:44">avpkt</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="731:5">while <condition pos:start="33:11" pos:end="33:47">(<expr pos:start="33:12" pos:end="33:46"><call pos:start="33:12" pos:end="33:42"><name pos:start="33:12" pos:end="33:37">bytestream2_get_bytes_left</name><argument_list pos:start="33:38" pos:end="33:42">(<argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><operator pos:start="33:39" pos:end="33:39">&amp;</operator><name pos:start="33:40" pos:end="33:41">gb</name></expr></argument>)</argument_list></call> <operator pos:start="33:44" pos:end="33:44">&gt;</operator> <literal type="number" pos:start="33:46" pos:end="33:46">4</literal></expr>)</condition> <block pos:start="33:49" pos:end="731:5">{<block_content pos:start="37:9" pos:end="729:9">

        <comment type="block" pos:start="35:9" pos:end="35:70">/* Bit weird but implement the tag parsing as the spec says */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:52"><decl pos:start="37:9" pos:end="37:51"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">uint16_t</name></type> <name pos:start="37:18" pos:end="37:21">tagu</name>   <init pos:start="37:25" pos:end="37:51">= <expr pos:start="37:27" pos:end="37:51"><call pos:start="37:27" pos:end="37:51"><name pos:start="37:27" pos:end="37:46">bytestream2_get_be16</name><argument_list pos:start="37:47" pos:end="37:51">(<argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:40"><decl pos:start="39:9" pos:end="39:39"><type pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">int16_t</name></type> <name pos:start="39:17" pos:end="39:19">tag</name>     <init pos:start="39:25" pos:end="39:39">= <expr pos:start="39:27" pos:end="39:39"><operator pos:start="39:27" pos:end="39:27">(</operator><name pos:start="39:28" pos:end="39:34">int16_t</name><operator pos:start="39:35" pos:end="39:35">)</operator><name pos:start="39:36" pos:end="39:39">tagu</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:46"><decl pos:start="41:9" pos:end="41:45"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">int8_t</name></type> <name pos:start="41:16" pos:end="41:19">tag8</name>     <init pos:start="41:25" pos:end="41:45">= <expr pos:start="41:27" pos:end="41:45"><operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:33">int8_t</name><operator pos:start="41:34" pos:end="41:34">)</operator><operator pos:start="41:35" pos:end="41:35">(</operator><name pos:start="41:36" pos:end="41:39">tagu</name> <operator pos:start="41:41" pos:end="41:42">&gt;&gt;</operator> <literal type="number" pos:start="41:44" pos:end="41:44">8</literal><operator pos:start="41:45" pos:end="41:45">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:35"><decl pos:start="43:9" pos:end="43:34"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint16_t</name></type> <name pos:start="43:18" pos:end="43:23">abstag</name> <init pos:start="43:25" pos:end="43:34">= <expr pos:start="43:27" pos:end="43:34"><call pos:start="43:27" pos:end="43:34"><name pos:start="43:27" pos:end="43:29">abs</name><argument_list pos:start="43:30" pos:end="43:34">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">tag</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:36"><decl pos:start="45:9" pos:end="45:35"><type pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:14">int8_t</name></type> <name pos:start="45:16" pos:end="45:23">abs_tag8</name> <init pos:start="45:25" pos:end="45:35">= <expr pos:start="45:27" pos:end="45:35"><call pos:start="45:27" pos:end="45:35"><name pos:start="45:27" pos:end="45:29">abs</name><argument_list pos:start="45:30" pos:end="45:35">(<argument pos:start="45:31" pos:end="45:34"><expr pos:start="45:31" pos:end="45:34"><name pos:start="45:31" pos:end="45:34">tag8</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:52"><decl pos:start="47:9" pos:end="47:51"><type pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">uint16_t</name></type> <name pos:start="47:18" pos:end="47:21">data</name>   <init pos:start="47:25" pos:end="47:51">= <expr pos:start="47:27" pos:end="47:51"><call pos:start="47:27" pos:end="47:51"><name pos:start="47:27" pos:end="47:46">bytestream2_get_be16</name><argument_list pos:start="47:47" pos:end="47:51">(<argument pos:start="47:48" pos:end="47:50"><expr pos:start="47:48" pos:end="47:50"><operator pos:start="47:48" pos:end="47:48">&amp;</operator><name pos:start="47:49" pos:end="47:50">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="49:9" pos:end="403:80"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><name pos:start="49:13" pos:end="49:20">abs_tag8</name> <operator pos:start="49:22" pos:end="49:23">&gt;=</operator> <literal type="number" pos:start="49:25" pos:end="49:28">0x60</literal> <operator pos:start="49:30" pos:end="49:31">&amp;&amp;</operator> <name pos:start="49:33" pos:end="49:40">abs_tag8</name> <operator pos:start="49:42" pos:end="49:43">&lt;=</operator> <literal type="number" pos:start="49:45" pos:end="49:48">0x6f</literal></expr>)</condition> <block pos:start="49:51" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:88">

            <expr_stmt pos:start="51:13" pos:end="51:88"><expr pos:start="51:13" pos:end="51:87"><call pos:start="51:13" pos:end="51:87"><name pos:start="51:13" pos:end="51:18">av_log</name><argument_list pos:start="51:19" pos:end="51:87">(<argument pos:start="51:20" pos:end="51:24"><expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">avctx</name></expr></argument>, <argument pos:start="51:27" pos:end="51:38"><expr pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="51:41" pos:end="51:56"><expr pos:start="51:41" pos:end="51:56"><literal type="string" pos:start="51:41" pos:end="51:56">"large len %x\n"</literal></expr></argument>, <argument pos:start="51:59" pos:end="51:86"><expr pos:start="51:59" pos:end="51:86"><operator pos:start="51:59" pos:end="51:59">(</operator><operator pos:start="51:60" pos:end="51:60">(</operator><name pos:start="51:61" pos:end="51:64">tagu</name> <operator pos:start="51:66" pos:end="51:66">&amp;</operator> <literal type="number" pos:start="51:68" pos:end="51:71">0xff</literal><operator pos:start="51:72" pos:end="51:72">)</operator> <operator pos:start="51:74" pos:end="51:75">&lt;&lt;</operator> <literal type="number" pos:start="51:77" pos:end="51:78">16</literal><operator pos:start="51:79" pos:end="51:79">)</operator> <operator pos:start="51:81" pos:end="51:81">|</operator> <name pos:start="51:83" pos:end="51:86">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="53:11" pos:end="59:9">else if <condition pos:start="53:19" pos:end="53:29">(<expr pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:22">tag</name> <operator pos:start="53:24" pos:end="53:25">==</operator> <literal type="number" pos:start="53:27" pos:end="53:28">20</literal></expr>)</condition> <block pos:start="53:31" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:34">

            <expr_stmt pos:start="55:13" pos:end="55:67"><expr pos:start="55:13" pos:end="55:66"><call pos:start="55:13" pos:end="55:66"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:66">(<argument pos:start="55:20" pos:end="55:24"><expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">avctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="55:41" pos:end="55:59"><expr pos:start="55:41" pos:end="55:59"><literal type="string" pos:start="55:41" pos:end="55:49">"Width %"</literal><name pos:start="55:50" pos:end="55:55">PRIu16</name><literal type="string" pos:start="55:56" pos:end="55:59">"\n"</literal></expr></argument>, <argument pos:start="55:62" pos:end="55:65"><expr pos:start="55:62" pos:end="55:65"><name pos:start="55:62" pos:end="55:65">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:34"><expr pos:start="57:13" pos:end="57:33"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:26">coded_width</name></name> <operator pos:start="57:28" pos:end="57:28">=</operator> <name pos:start="57:30" pos:end="57:33">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="59:11" pos:end="65:9">else if <condition pos:start="59:19" pos:end="59:29">(<expr pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:22">tag</name> <operator pos:start="59:24" pos:end="59:25">==</operator> <literal type="number" pos:start="59:27" pos:end="59:28">21</literal></expr>)</condition> <block pos:start="59:31" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:35">

            <expr_stmt pos:start="61:13" pos:end="61:68"><expr pos:start="61:13" pos:end="61:67"><call pos:start="61:13" pos:end="61:67"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:67">(<argument pos:start="61:20" pos:end="61:24"><expr pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:24">avctx</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:41" pos:end="61:60"><expr pos:start="61:41" pos:end="61:60"><literal type="string" pos:start="61:41" pos:end="61:50">"Height %"</literal><name pos:start="61:51" pos:end="61:56">PRIu16</name><literal type="string" pos:start="61:57" pos:end="61:60">"\n"</literal></expr></argument>, <argument pos:start="61:63" pos:end="61:66"><expr pos:start="61:63" pos:end="61:66"><name pos:start="61:63" pos:end="61:66">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:35"><expr pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:27">coded_height</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:34">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="65:11" pos:end="71:9">else if <condition pos:start="65:19" pos:end="65:30">(<expr pos:start="65:20" pos:end="65:29"><name pos:start="65:20" pos:end="65:22">tag</name> <operator pos:start="65:24" pos:end="65:25">==</operator> <literal type="number" pos:start="65:27" pos:end="65:29">101</literal></expr>)</condition> <block pos:start="65:32" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:26">

            <expr_stmt pos:start="67:13" pos:end="67:81"><expr pos:start="67:13" pos:end="67:80"><call pos:start="67:13" pos:end="67:80"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:80">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:41" pos:end="67:73"><expr pos:start="67:41" pos:end="67:73"><literal type="string" pos:start="67:41" pos:end="67:63">"Bits per component: %"</literal><name pos:start="67:64" pos:end="67:69">PRIu16</name><literal type="string" pos:start="67:70" pos:end="67:73">"\n"</literal></expr></argument>, <argument pos:start="67:76" pos:end="67:79"><expr pos:start="67:76" pos:end="67:79"><name pos:start="67:76" pos:end="67:79">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:18">bpc</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:25">data</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="71:11" pos:end="87:9">else if <condition pos:start="71:19" pos:end="71:29">(<expr pos:start="71:20" pos:end="71:28"><name pos:start="71:20" pos:end="71:22">tag</name> <operator pos:start="71:24" pos:end="71:25">==</operator> <literal type="number" pos:start="71:27" pos:end="71:28">12</literal></expr>)</condition> <block pos:start="71:31" pos:end="87:9">{<block_content pos:start="73:13" pos:end="85:13">

            <expr_stmt pos:start="73:13" pos:end="73:76"><expr pos:start="73:13" pos:end="73:75"><call pos:start="73:13" pos:end="73:75"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:75">(<argument pos:start="73:20" pos:end="73:24"><expr pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:24">avctx</name></expr></argument>, <argument pos:start="73:27" pos:end="73:38"><expr pos:start="73:27" pos:end="73:38"><name pos:start="73:27" pos:end="73:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:41" pos:end="73:68"><expr pos:start="73:41" pos:end="73:68"><literal type="string" pos:start="73:41" pos:end="73:58">"Channel Count: %"</literal><name pos:start="73:59" pos:end="73:64">PRIu16</name><literal type="string" pos:start="73:65" pos:end="73:68">"\n"</literal></expr></argument>, <argument pos:start="73:71" pos:end="73:74"><expr pos:start="73:71" pos:end="73:74"><name pos:start="73:71" pos:end="73:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:13">s</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:26">channel_cnt</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:33">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="85:13"><if pos:start="77:13" pos:end="85:13">if <condition pos:start="77:16" pos:end="77:25">(<expr pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:20">data</name> <operator pos:start="77:22" pos:end="77:22">&gt;</operator> <literal type="number" pos:start="77:24" pos:end="77:24">4</literal></expr>)</condition> <block pos:start="77:27" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:22">

                <expr_stmt pos:start="79:17" pos:end="79:97"><expr pos:start="79:17" pos:end="79:96"><call pos:start="79:17" pos:end="79:96"><name pos:start="79:17" pos:end="79:22">av_log</name><argument_list pos:start="79:23" pos:end="79:96">(<argument pos:start="79:24" pos:end="79:28"><expr pos:start="79:24" pos:end="79:28"><name pos:start="79:24" pos:end="79:28">avctx</name></expr></argument>, <argument pos:start="79:31" pos:end="79:42"><expr pos:start="79:31" pos:end="79:42"><name pos:start="79:31" pos:end="79:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:45" pos:end="79:89"><expr pos:start="79:45" pos:end="79:89"><literal type="string" pos:start="79:45" pos:end="79:64">"Channel Count of %"</literal><name pos:start="79:65" pos:end="79:70">PRIu16</name><literal type="string" pos:start="79:71" pos:end="79:89">" is unsupported\n"</literal></expr></argument>, <argument pos:start="79:92" pos:end="79:95"><expr pos:start="79:92" pos:end="79:95"><name pos:start="79:92" pos:end="79:95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="81:43"><expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:19">ret</name> <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="87:11" pos:end="101:9">else if <condition pos:start="87:19" pos:end="87:29">(<expr pos:start="87:20" pos:end="87:28"><name pos:start="87:20" pos:end="87:22">tag</name> <operator pos:start="87:24" pos:end="87:25">==</operator> <literal type="number" pos:start="87:27" pos:end="87:28">14</literal></expr>)</condition> <block pos:start="87:31" pos:end="101:9">{<block_content pos:start="89:13" pos:end="99:13">

            <expr_stmt pos:start="89:13" pos:end="89:76"><expr pos:start="89:13" pos:end="89:75"><call pos:start="89:13" pos:end="89:75"><name pos:start="89:13" pos:end="89:18">av_log</name><argument_list pos:start="89:19" pos:end="89:75">(<argument pos:start="89:20" pos:end="89:24"><expr pos:start="89:20" pos:end="89:24"><name pos:start="89:20" pos:end="89:24">avctx</name></expr></argument>, <argument pos:start="89:27" pos:end="89:38"><expr pos:start="89:27" pos:end="89:38"><name pos:start="89:27" pos:end="89:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:41" pos:end="89:68"><expr pos:start="89:41" pos:end="89:68"><literal type="string" pos:start="89:41" pos:end="89:58">"Subband Count: %"</literal><name pos:start="89:59" pos:end="89:64">PRIu16</name><literal type="string" pos:start="89:65" pos:end="89:68">"\n"</literal></expr></argument>, <argument pos:start="89:71" pos:end="89:74"><expr pos:start="89:71" pos:end="89:74"><name pos:start="89:71" pos:end="89:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="99:13"><if pos:start="91:13" pos:end="99:13">if <condition pos:start="91:16" pos:end="91:38">(<expr pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:20">data</name> <operator pos:start="91:22" pos:end="91:23">!=</operator> <name pos:start="91:25" pos:end="91:37">SUBBAND_COUNT</name></expr>)</condition> <block pos:start="91:40" pos:end="99:13">{<block_content pos:start="93:17" pos:end="97:22">

                <expr_stmt pos:start="93:17" pos:end="93:97"><expr pos:start="93:17" pos:end="93:96"><call pos:start="93:17" pos:end="93:96"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="93:96">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28">avctx</name></expr></argument>, <argument pos:start="93:31" pos:end="93:42"><expr pos:start="93:31" pos:end="93:42"><name pos:start="93:31" pos:end="93:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:45" pos:end="93:89"><expr pos:start="93:45" pos:end="93:89"><literal type="string" pos:start="93:45" pos:end="93:64">"Subband Count of %"</literal><name pos:start="93:65" pos:end="93:70">PRIu16</name><literal type="string" pos:start="93:71" pos:end="93:89">" is unsupported\n"</literal></expr></argument>, <argument pos:start="93:92" pos:end="93:95"><expr pos:start="93:92" pos:end="93:95"><name pos:start="93:92" pos:end="93:95">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:43"><expr pos:start="95:17" pos:end="95:42"><name pos:start="95:17" pos:end="95:19">ret</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="97:17" pos:end="97:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="101:11" pos:end="119:9">else if <condition pos:start="101:19" pos:end="101:29">(<expr pos:start="101:20" pos:end="101:28"><name pos:start="101:20" pos:end="101:22">tag</name> <operator pos:start="101:24" pos:end="101:25">==</operator> <literal type="number" pos:start="101:27" pos:end="101:28">62</literal></expr>)</condition> <block pos:start="101:31" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:35">

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:26"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:26">channel_num</name></name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:33">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:76"><expr pos:start="105:13" pos:end="105:75"><call pos:start="105:13" pos:end="105:75"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:75">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:41" pos:end="105:68"><expr pos:start="105:41" pos:end="105:68"><literal type="string" pos:start="105:41" pos:end="105:58">"Channel number %"</literal><name pos:start="105:59" pos:end="105:64">PRIu16</name><literal type="string" pos:start="105:65" pos:end="105:68">"\n"</literal></expr></argument>, <argument pos:start="105:71" pos:end="105:74"><expr pos:start="105:71" pos:end="105:74"><name pos:start="105:71" pos:end="105:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="115:13"><if pos:start="107:13" pos:end="115:13">if <condition pos:start="107:16" pos:end="107:41">(<expr pos:start="107:17" pos:end="107:40"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:30">channel_num</name></name> <operator pos:start="107:32" pos:end="107:33">&gt;=</operator> <name pos:start="107:35" pos:end="107:40">planes</name></expr>)</condition> <block pos:start="107:43" pos:end="115:13">{<block_content pos:start="109:17" pos:end="113:22">

                <expr_stmt pos:start="109:17" pos:end="109:72"><expr pos:start="109:17" pos:end="109:71"><call pos:start="109:17" pos:end="109:71"><name pos:start="109:17" pos:end="109:22">av_log</name><argument_list pos:start="109:23" pos:end="109:71">(<argument pos:start="109:24" pos:end="109:28"><expr pos:start="109:24" pos:end="109:28"><name pos:start="109:24" pos:end="109:28">avctx</name></expr></argument>, <argument pos:start="109:31" pos:end="109:42"><expr pos:start="109:31" pos:end="109:42"><name pos:start="109:31" pos:end="109:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:45" pos:end="109:70"><expr pos:start="109:45" pos:end="109:70"><literal type="string" pos:start="109:45" pos:end="109:70">"Invalid channel number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:38"><expr pos:start="111:17" pos:end="111:37"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:37"><name pos:start="111:23" pos:end="111:29">AVERROR</name><argument_list pos:start="111:30" pos:end="111:37">(<argument pos:start="111:31" pos:end="111:36"><expr pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><call pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:31">init_plane_defaults</name><argument_list pos:start="117:32" pos:end="117:34">(<argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><name pos:start="117:33" pos:end="117:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="119:11" pos:end="149:9">else if <condition pos:start="119:19" pos:end="119:29">(<expr pos:start="119:20" pos:end="119:28"><name pos:start="119:20" pos:end="119:22">tag</name> <operator pos:start="119:24" pos:end="119:25">==</operator> <literal type="number" pos:start="119:27" pos:end="119:28">48</literal></expr>)</condition> <block pos:start="119:31" pos:end="149:9">{<block_content pos:start="121:13" pos:end="147:13">

            <if_stmt pos:start="121:13" pos:end="123:27"><if pos:start="121:13" pos:end="123:27">if <condition pos:start="121:16" pos:end="121:49">(<expr pos:start="121:17" pos:end="121:48"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:30">subband_num</name></name> <operator pos:start="121:32" pos:end="121:33">!=</operator> <literal type="number" pos:start="121:35" pos:end="121:35">0</literal> <operator pos:start="121:37" pos:end="121:38">&amp;&amp;</operator> <name pos:start="121:40" pos:end="121:43">data</name> <operator pos:start="121:45" pos:end="121:46">==</operator> <literal type="number" pos:start="121:48" pos:end="121:48">1</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:27"><block_content pos:start="123:17" pos:end="123:27">  <comment type="line" pos:start="121:52" pos:end="121:58">// hack</comment>

                <expr_stmt pos:start="123:17" pos:end="123:27"><expr pos:start="123:17" pos:end="123:26"><name pos:start="123:17" pos:end="123:24"><name pos:start="123:17" pos:end="123:17">s</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:24">level</name></name><operator pos:start="123:25" pos:end="123:26">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:76"><expr pos:start="125:13" pos:end="125:75"><call pos:start="125:13" pos:end="125:75"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:75">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">avctx</name></expr></argument>, <argument pos:start="125:27" pos:end="125:38"><expr pos:start="125:27" pos:end="125:38"><name pos:start="125:27" pos:end="125:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:41" pos:end="125:68"><expr pos:start="125:41" pos:end="125:68"><literal type="string" pos:start="125:41" pos:end="125:58">"Subband number %"</literal><name pos:start="125:59" pos:end="125:64">PRIu16</name><literal type="string" pos:start="125:65" pos:end="125:68">"\n"</literal></expr></argument>, <argument pos:start="125:71" pos:end="125:74"><expr pos:start="125:71" pos:end="125:74"><name pos:start="125:71" pos:end="125:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:26">subband_num</name></name> <operator pos:start="127:28" pos:end="127:28">=</operator> <name pos:start="127:30" pos:end="127:33">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="137:13"><if pos:start="129:13" pos:end="137:13">if <condition pos:start="129:16" pos:end="129:39">(<expr pos:start="129:17" pos:end="129:38"><name pos:start="129:17" pos:end="129:24"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:24">level</name></name> <operator pos:start="129:26" pos:end="129:27">&gt;=</operator> <name pos:start="129:29" pos:end="129:38">DWT_LEVELS</name></expr>)</condition> <block pos:start="129:41" pos:end="137:13">{<block_content pos:start="131:17" pos:end="135:22">

                <expr_stmt pos:start="131:17" pos:end="131:63"><expr pos:start="131:17" pos:end="131:62"><call pos:start="131:17" pos:end="131:62"><name pos:start="131:17" pos:end="131:22">av_log</name><argument_list pos:start="131:23" pos:end="131:62">(<argument pos:start="131:24" pos:end="131:28"><expr pos:start="131:24" pos:end="131:28"><name pos:start="131:24" pos:end="131:28">avctx</name></expr></argument>, <argument pos:start="131:31" pos:end="131:42"><expr pos:start="131:31" pos:end="131:42"><name pos:start="131:31" pos:end="131:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:45" pos:end="131:61"><expr pos:start="131:45" pos:end="131:61"><literal type="string" pos:start="131:45" pos:end="131:61">"Invalid level\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:38"><expr pos:start="133:17" pos:end="133:37"><name pos:start="133:17" pos:end="133:19">ret</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <call pos:start="133:23" pos:end="133:37"><name pos:start="133:23" pos:end="133:29">AVERROR</name><argument_list pos:start="133:30" pos:end="133:37">(<argument pos:start="133:31" pos:end="133:36"><expr pos:start="133:31" pos:end="133:36"><name pos:start="133:31" pos:end="133:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="135:17" pos:end="135:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="147:13"><if pos:start="139:13" pos:end="147:13">if <condition pos:start="139:16" pos:end="139:35">(<expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:30">subband_num</name></name> <operator pos:start="139:32" pos:end="139:32">&gt;</operator> <literal type="number" pos:start="139:34" pos:end="139:34">3</literal></expr>)</condition> <block pos:start="139:37" pos:end="147:13">{<block_content pos:start="141:17" pos:end="145:22">

                <expr_stmt pos:start="141:17" pos:end="141:72"><expr pos:start="141:17" pos:end="141:71"><call pos:start="141:17" pos:end="141:71"><name pos:start="141:17" pos:end="141:22">av_log</name><argument_list pos:start="141:23" pos:end="141:71">(<argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><name pos:start="141:24" pos:end="141:28">avctx</name></expr></argument>, <argument pos:start="141:31" pos:end="141:42"><expr pos:start="141:31" pos:end="141:42"><name pos:start="141:31" pos:end="141:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:45" pos:end="141:70"><expr pos:start="141:45" pos:end="141:70"><literal type="string" pos:start="141:45" pos:end="141:70">"Invalid subband number\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:38"><expr pos:start="143:17" pos:end="143:37"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <call pos:start="143:23" pos:end="143:37"><name pos:start="143:23" pos:end="143:29">AVERROR</name><argument_list pos:start="143:30" pos:end="143:37">(<argument pos:start="143:31" pos:end="143:36"><expr pos:start="143:31" pos:end="143:36"><name pos:start="143:31" pos:end="143:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="149:11" pos:end="165:9">else if <condition pos:start="149:19" pos:end="149:29">(<expr pos:start="149:20" pos:end="149:28"><name pos:start="149:20" pos:end="149:22">tag</name> <operator pos:start="149:24" pos:end="149:25">==</operator> <literal type="number" pos:start="149:27" pos:end="149:28">51</literal></expr>)</condition> <block pos:start="149:31" pos:end="165:9">{<block_content pos:start="151:13" pos:end="163:13">

            <expr_stmt pos:start="151:13" pos:end="151:83"><expr pos:start="151:13" pos:end="151:82"><call pos:start="151:13" pos:end="151:82"><name pos:start="151:13" pos:end="151:18">av_log</name><argument_list pos:start="151:19" pos:end="151:82">(<argument pos:start="151:20" pos:end="151:24"><expr pos:start="151:20" pos:end="151:24"><name pos:start="151:20" pos:end="151:24">avctx</name></expr></argument>, <argument pos:start="151:27" pos:end="151:38"><expr pos:start="151:27" pos:end="151:38"><name pos:start="151:27" pos:end="151:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="151:41" pos:end="151:75"><expr pos:start="151:41" pos:end="151:75"><literal type="string" pos:start="151:41" pos:end="151:65">"Subband number actual %"</literal><name pos:start="151:66" pos:end="151:71">PRIu16</name><literal type="string" pos:start="151:72" pos:end="151:75">"\n"</literal></expr></argument>, <argument pos:start="151:78" pos:end="151:81"><expr pos:start="151:78" pos:end="151:81"><name pos:start="151:78" pos:end="151:81">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:33"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:33">subband_num_actual</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <name pos:start="153:37" pos:end="153:40">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="163:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:44">(<expr pos:start="155:17" pos:end="155:43"><name pos:start="155:17" pos:end="155:37"><name pos:start="155:17" pos:end="155:17">s</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:37">subband_num_actual</name></name> <operator pos:start="155:39" pos:end="155:40">&gt;=</operator> <literal type="number" pos:start="155:42" pos:end="155:43">10</literal></expr>)</condition> <block pos:start="155:46" pos:end="163:13">{<block_content pos:start="157:17" pos:end="161:22">

                <expr_stmt pos:start="157:17" pos:end="157:79"><expr pos:start="157:17" pos:end="157:78"><call pos:start="157:17" pos:end="157:78"><name pos:start="157:17" pos:end="157:22">av_log</name><argument_list pos:start="157:23" pos:end="157:78">(<argument pos:start="157:24" pos:end="157:28"><expr pos:start="157:24" pos:end="157:28"><name pos:start="157:24" pos:end="157:28">avctx</name></expr></argument>, <argument pos:start="157:31" pos:end="157:42"><expr pos:start="157:31" pos:end="157:42"><name pos:start="157:31" pos:end="157:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:45" pos:end="157:77"><expr pos:start="157:45" pos:end="157:77"><literal type="string" pos:start="157:45" pos:end="157:77">"Invalid subband number actual\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:38"><expr pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:19">ret</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <call pos:start="159:23" pos:end="159:37"><name pos:start="159:23" pos:end="159:29">AVERROR</name><argument_list pos:start="159:30" pos:end="159:37">(<argument pos:start="159:31" pos:end="159:36"><expr pos:start="159:31" pos:end="159:36"><name pos:start="159:31" pos:end="159:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="161:17" pos:end="161:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="165:11" pos:end="167:85">else if <condition pos:start="165:19" pos:end="165:29">(<expr pos:start="165:20" pos:end="165:28"><name pos:start="165:20" pos:end="165:22">tag</name> <operator pos:start="165:24" pos:end="165:25">==</operator> <literal type="number" pos:start="165:27" pos:end="165:28">35</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:85"><block_content pos:start="167:13" pos:end="167:85">

            <expr_stmt pos:start="167:13" pos:end="167:85"><expr pos:start="167:13" pos:end="167:84"><call pos:start="167:13" pos:end="167:84"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="167:84">(<argument pos:start="167:20" pos:end="167:24"><expr pos:start="167:20" pos:end="167:24"><name pos:start="167:20" pos:end="167:24">avctx</name></expr></argument>, <argument pos:start="167:27" pos:end="167:38"><expr pos:start="167:27" pos:end="167:38"><name pos:start="167:27" pos:end="167:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="167:41" pos:end="167:77"><expr pos:start="167:41" pos:end="167:77"><literal type="string" pos:start="167:41" pos:end="167:67">"Lowpass precision bits: %"</literal><name pos:start="167:68" pos:end="167:73">PRIu16</name><literal type="string" pos:start="167:74" pos:end="167:77">"\n"</literal></expr></argument>, <argument pos:start="167:80" pos:end="167:83"><expr pos:start="167:80" pos:end="167:83"><name pos:start="167:80" pos:end="167:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="169:9" pos:end="175:9">else if <condition pos:start="169:17" pos:end="169:27">(<expr pos:start="169:18" pos:end="169:26"><name pos:start="169:18" pos:end="169:20">tag</name> <operator pos:start="169:22" pos:end="169:23">==</operator> <literal type="number" pos:start="169:25" pos:end="169:26">53</literal></expr>)</condition> <block pos:start="169:29" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:75">

            <expr_stmt pos:start="171:13" pos:end="171:35"><expr pos:start="171:13" pos:end="171:34"><name pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:27">quantisation</name></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <name pos:start="171:31" pos:end="171:34">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:75"><expr pos:start="173:13" pos:end="173:74"><call pos:start="173:13" pos:end="173:74"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:74">(<argument pos:start="173:20" pos:end="173:24"><expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">avctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="173:41" pos:end="173:67"><expr pos:start="173:41" pos:end="173:67"><literal type="string" pos:start="173:41" pos:end="173:57">"Quantisation: %"</literal><name pos:start="173:58" pos:end="173:63">PRIu16</name><literal type="string" pos:start="173:64" pos:end="173:67">"\n"</literal></expr></argument>, <argument pos:start="173:70" pos:end="173:73"><expr pos:start="173:70" pos:end="173:73"><name pos:start="173:70" pos:end="173:73">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="175:11" pos:end="185:9">else if <condition pos:start="175:19" pos:end="175:30">(<expr pos:start="175:20" pos:end="175:29"><name pos:start="175:20" pos:end="175:22">tag</name> <operator pos:start="175:24" pos:end="175:25">==</operator> <literal type="number" pos:start="175:27" pos:end="175:29">109</literal></expr>)</condition> <block pos:start="175:32" pos:end="185:9">{<block_content pos:start="177:13" pos:end="183:77">

            <expr_stmt pos:start="177:13" pos:end="177:53"><expr pos:start="177:13" pos:end="177:52"><name pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:29">prescale_shift</name><index pos:start="177:30" pos:end="177:32">[<expr pos:start="177:31" pos:end="177:31"><literal type="number" pos:start="177:31" pos:end="177:31">0</literal></expr>]</index></name> <operator pos:start="177:34" pos:end="177:34">=</operator> <operator pos:start="177:36" pos:end="177:36">(</operator><name pos:start="177:37" pos:end="177:40">data</name> <operator pos:start="177:42" pos:end="177:43">&gt;&gt;</operator> <literal type="number" pos:start="177:45" pos:end="177:45">0</literal><operator pos:start="177:46" pos:end="177:46">)</operator> <operator pos:start="177:48" pos:end="177:48">&amp;</operator> <literal type="number" pos:start="177:50" pos:end="177:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:53"><expr pos:start="179:13" pos:end="179:52"><name pos:start="179:13" pos:end="179:32"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:29">prescale_shift</name><index pos:start="179:30" pos:end="179:32">[<expr pos:start="179:31" pos:end="179:31"><literal type="number" pos:start="179:31" pos:end="179:31">1</literal></expr>]</index></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <operator pos:start="179:36" pos:end="179:36">(</operator><name pos:start="179:37" pos:end="179:40">data</name> <operator pos:start="179:42" pos:end="179:43">&gt;&gt;</operator> <literal type="number" pos:start="179:45" pos:end="179:45">3</literal><operator pos:start="179:46" pos:end="179:46">)</operator> <operator pos:start="179:48" pos:end="179:48">&amp;</operator> <literal type="number" pos:start="179:50" pos:end="179:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:53"><expr pos:start="181:13" pos:end="181:52"><name pos:start="181:13" pos:end="181:32"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:29">prescale_shift</name><index pos:start="181:30" pos:end="181:32">[<expr pos:start="181:31" pos:end="181:31"><literal type="number" pos:start="181:31" pos:end="181:31">2</literal></expr>]</index></name> <operator pos:start="181:34" pos:end="181:34">=</operator> <operator pos:start="181:36" pos:end="181:36">(</operator><name pos:start="181:37" pos:end="181:40">data</name> <operator pos:start="181:42" pos:end="181:43">&gt;&gt;</operator> <literal type="number" pos:start="181:45" pos:end="181:45">6</literal><operator pos:start="181:46" pos:end="181:46">)</operator> <operator pos:start="181:48" pos:end="181:48">&amp;</operator> <literal type="number" pos:start="181:50" pos:end="181:52">0x7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:77"><expr pos:start="183:13" pos:end="183:76"><call pos:start="183:13" pos:end="183:76"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:76">(<argument pos:start="183:20" pos:end="183:24"><expr pos:start="183:20" pos:end="183:24"><name pos:start="183:20" pos:end="183:24">avctx</name></expr></argument>, <argument pos:start="183:27" pos:end="183:38"><expr pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="183:41" pos:end="183:69"><expr pos:start="183:41" pos:end="183:69"><literal type="string" pos:start="183:41" pos:end="183:69">"Prescale shift (VC-5): %x\n"</literal></expr></argument>, <argument pos:start="183:72" pos:end="183:75"><expr pos:start="183:72" pos:end="183:75"><name pos:start="183:72" pos:end="183:75">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="185:11" pos:end="203:9">else if <condition pos:start="185:19" pos:end="185:29">(<expr pos:start="185:20" pos:end="185:28"><name pos:start="185:20" pos:end="185:22">tag</name> <operator pos:start="185:24" pos:end="185:25">==</operator> <literal type="number" pos:start="185:27" pos:end="185:28">27</literal></expr>)</condition> <block pos:start="185:31" pos:end="203:9">{<block_content pos:start="187:13" pos:end="201:13">

            <expr_stmt pos:start="187:13" pos:end="187:62"><expr pos:start="187:13" pos:end="187:61"><name pos:start="187:13" pos:end="187:36"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:20">plane</name><index pos:start="187:21" pos:end="187:36">[<expr pos:start="187:22" pos:end="187:35"><name pos:start="187:22" pos:end="187:35"><name pos:start="187:22" pos:end="187:22">s</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:35">channel_num</name></name></expr>]</index></name><operator pos:start="187:37" pos:end="187:37">.</operator><name pos:start="187:38" pos:end="187:47"><name pos:start="187:38" pos:end="187:41">band</name><index pos:start="187:42" pos:end="187:44">[<expr pos:start="187:43" pos:end="187:43"><literal type="number" pos:start="187:43" pos:end="187:43">0</literal></expr>]</index><index pos:start="187:45" pos:end="187:47">[<expr pos:start="187:46" pos:end="187:46"><literal type="number" pos:start="187:46" pos:end="187:46">0</literal></expr>]</index></name><operator pos:start="187:48" pos:end="187:48">.</operator><name pos:start="187:49" pos:end="187:53">width</name>  <operator pos:start="187:56" pos:end="187:56">=</operator> <name pos:start="187:58" pos:end="187:61">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:62"><expr pos:start="189:13" pos:end="189:61"><name pos:start="189:13" pos:end="189:36"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:20">plane</name><index pos:start="189:21" pos:end="189:36">[<expr pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:35"><name pos:start="189:22" pos:end="189:22">s</name><operator pos:start="189:23" pos:end="189:24">-&gt;</operator><name pos:start="189:25" pos:end="189:35">channel_num</name></name></expr>]</index></name><operator pos:start="189:37" pos:end="189:37">.</operator><name pos:start="189:38" pos:end="189:47"><name pos:start="189:38" pos:end="189:41">band</name><index pos:start="189:42" pos:end="189:44">[<expr pos:start="189:43" pos:end="189:43"><literal type="number" pos:start="189:43" pos:end="189:43">0</literal></expr>]</index><index pos:start="189:45" pos:end="189:47">[<expr pos:start="189:46" pos:end="189:46"><literal type="number" pos:start="189:46" pos:end="189:46">0</literal></expr>]</index></name><operator pos:start="189:48" pos:end="189:48">.</operator><name pos:start="189:49" pos:end="189:54">stride</name> <operator pos:start="189:56" pos:end="189:56">=</operator> <name pos:start="189:58" pos:end="189:61">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:75"><expr pos:start="191:13" pos:end="191:74"><call pos:start="191:13" pos:end="191:74"><name pos:start="191:13" pos:end="191:18">av_log</name><argument_list pos:start="191:19" pos:end="191:74">(<argument pos:start="191:20" pos:end="191:24"><expr pos:start="191:20" pos:end="191:24"><name pos:start="191:20" pos:end="191:24">avctx</name></expr></argument>, <argument pos:start="191:27" pos:end="191:38"><expr pos:start="191:27" pos:end="191:38"><name pos:start="191:27" pos:end="191:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="191:41" pos:end="191:67"><expr pos:start="191:41" pos:end="191:67"><literal type="string" pos:start="191:41" pos:end="191:57">"Lowpass width %"</literal><name pos:start="191:58" pos:end="191:63">PRIu16</name><literal type="string" pos:start="191:64" pos:end="191:67">"\n"</literal></expr></argument>, <argument pos:start="191:70" pos:end="191:73"><expr pos:start="191:70" pos:end="191:73"><name pos:start="191:70" pos:end="191:73">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="201:13"><if pos:start="193:13" pos:end="201:13">if <condition pos:start="193:16" pos:end="193:79">(<expr pos:start="193:17" pos:end="193:78"><name pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:20">data</name> <argument_list type="generic" pos:start="193:22" pos:end="193:34">&lt; <argument pos:start="193:24" pos:end="193:32"><expr pos:start="193:24" pos:end="193:32"><literal type="number" pos:start="193:24" pos:end="193:24">3</literal> <operator pos:start="193:26" pos:end="193:27">||</operator> <name pos:start="193:29" pos:end="193:32">data</name></expr></argument> &gt;</argument_list></name> <name pos:start="193:36" pos:end="193:59"><name pos:start="193:36" pos:end="193:36">s</name><operator pos:start="193:37" pos:end="193:38">-&gt;</operator><name pos:start="193:39" pos:end="193:43">plane</name><index pos:start="193:44" pos:end="193:59">[<expr pos:start="193:45" pos:end="193:58"><name pos:start="193:45" pos:end="193:58"><name pos:start="193:45" pos:end="193:45">s</name><operator pos:start="193:46" pos:end="193:47">-&gt;</operator><name pos:start="193:48" pos:end="193:58">channel_num</name></name></expr>]</index></name><operator pos:start="193:60" pos:end="193:60">.</operator><name pos:start="193:61" pos:end="193:70"><name pos:start="193:61" pos:end="193:64">band</name><index pos:start="193:65" pos:end="193:67">[<expr pos:start="193:66" pos:end="193:66"><literal type="number" pos:start="193:66" pos:end="193:66">0</literal></expr>]</index><index pos:start="193:68" pos:end="193:70">[<expr pos:start="193:69" pos:end="193:69"><literal type="number" pos:start="193:69" pos:end="193:69">0</literal></expr>]</index></name><operator pos:start="193:71" pos:end="193:71">.</operator><name pos:start="193:72" pos:end="193:78">a_width</name></expr>)</condition> <block pos:start="193:81" pos:end="201:13">{<block_content pos:start="195:17" pos:end="199:22">

                <expr_stmt pos:start="195:17" pos:end="195:71"><expr pos:start="195:17" pos:end="195:70"><call pos:start="195:17" pos:end="195:70"><name pos:start="195:17" pos:end="195:22">av_log</name><argument_list pos:start="195:23" pos:end="195:70">(<argument pos:start="195:24" pos:end="195:28"><expr pos:start="195:24" pos:end="195:28"><name pos:start="195:24" pos:end="195:28">avctx</name></expr></argument>, <argument pos:start="195:31" pos:end="195:42"><expr pos:start="195:31" pos:end="195:42"><name pos:start="195:31" pos:end="195:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="195:45" pos:end="195:69"><expr pos:start="195:45" pos:end="195:69"><literal type="string" pos:start="195:45" pos:end="195:69">"Invalid lowpass width\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:38"><expr pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:19">ret</name> <operator pos:start="197:21" pos:end="197:21">=</operator> <call pos:start="197:23" pos:end="197:37"><name pos:start="197:23" pos:end="197:29">AVERROR</name><argument_list pos:start="197:30" pos:end="197:37">(<argument pos:start="197:31" pos:end="197:36"><expr pos:start="197:31" pos:end="197:36"><name pos:start="197:31" pos:end="197:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="199:17" pos:end="199:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="203:11" pos:end="219:9">else if <condition pos:start="203:19" pos:end="203:29">(<expr pos:start="203:20" pos:end="203:28"><name pos:start="203:20" pos:end="203:22">tag</name> <operator pos:start="203:24" pos:end="203:25">==</operator> <literal type="number" pos:start="203:27" pos:end="203:28">28</literal></expr>)</condition> <block pos:start="203:31" pos:end="219:9">{<block_content pos:start="205:13" pos:end="217:13">

            <expr_stmt pos:start="205:13" pos:end="205:62"><expr pos:start="205:13" pos:end="205:61"><name pos:start="205:13" pos:end="205:36"><name pos:start="205:13" pos:end="205:13">s</name><operator pos:start="205:14" pos:end="205:15">-&gt;</operator><name pos:start="205:16" pos:end="205:20">plane</name><index pos:start="205:21" pos:end="205:36">[<expr pos:start="205:22" pos:end="205:35"><name pos:start="205:22" pos:end="205:35"><name pos:start="205:22" pos:end="205:22">s</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:35">channel_num</name></name></expr>]</index></name><operator pos:start="205:37" pos:end="205:37">.</operator><name pos:start="205:38" pos:end="205:47"><name pos:start="205:38" pos:end="205:41">band</name><index pos:start="205:42" pos:end="205:44">[<expr pos:start="205:43" pos:end="205:43"><literal type="number" pos:start="205:43" pos:end="205:43">0</literal></expr>]</index><index pos:start="205:45" pos:end="205:47">[<expr pos:start="205:46" pos:end="205:46"><literal type="number" pos:start="205:46" pos:end="205:46">0</literal></expr>]</index></name><operator pos:start="205:48" pos:end="205:48">.</operator><name pos:start="205:49" pos:end="205:54">height</name> <operator pos:start="205:56" pos:end="205:56">=</operator> <name pos:start="205:58" pos:end="205:61">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:76"><expr pos:start="207:13" pos:end="207:75"><call pos:start="207:13" pos:end="207:75"><name pos:start="207:13" pos:end="207:18">av_log</name><argument_list pos:start="207:19" pos:end="207:75">(<argument pos:start="207:20" pos:end="207:24"><expr pos:start="207:20" pos:end="207:24"><name pos:start="207:20" pos:end="207:24">avctx</name></expr></argument>, <argument pos:start="207:27" pos:end="207:38"><expr pos:start="207:27" pos:end="207:38"><name pos:start="207:27" pos:end="207:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="207:41" pos:end="207:68"><expr pos:start="207:41" pos:end="207:68"><literal type="string" pos:start="207:41" pos:end="207:58">"Lowpass height %"</literal><name pos:start="207:59" pos:end="207:64">PRIu16</name><literal type="string" pos:start="207:65" pos:end="207:68">"\n"</literal></expr></argument>, <argument pos:start="207:71" pos:end="207:74"><expr pos:start="207:71" pos:end="207:74"><name pos:start="207:71" pos:end="207:74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="217:13"><if pos:start="209:13" pos:end="217:13">if <condition pos:start="209:16" pos:end="209:78">(<expr pos:start="209:17" pos:end="209:77"><name pos:start="209:17" pos:end="209:34"><name pos:start="209:17" pos:end="209:20">data</name> <argument_list type="generic" pos:start="209:22" pos:end="209:34">&lt; <argument pos:start="209:24" pos:end="209:32"><expr pos:start="209:24" pos:end="209:32"><literal type="number" pos:start="209:24" pos:end="209:24">3</literal> <operator pos:start="209:26" pos:end="209:27">||</operator> <name pos:start="209:29" pos:end="209:32">data</name></expr></argument> &gt;</argument_list></name> <name pos:start="209:36" pos:end="209:59"><name pos:start="209:36" pos:end="209:36">s</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:43">plane</name><index pos:start="209:44" pos:end="209:59">[<expr pos:start="209:45" pos:end="209:58"><name pos:start="209:45" pos:end="209:58"><name pos:start="209:45" pos:end="209:45">s</name><operator pos:start="209:46" pos:end="209:47">-&gt;</operator><name pos:start="209:48" pos:end="209:58">channel_num</name></name></expr>]</index></name><operator pos:start="209:60" pos:end="209:60">.</operator><name pos:start="209:61" pos:end="209:70"><name pos:start="209:61" pos:end="209:64">band</name><index pos:start="209:65" pos:end="209:67">[<expr pos:start="209:66" pos:end="209:66"><literal type="number" pos:start="209:66" pos:end="209:66">0</literal></expr>]</index><index pos:start="209:68" pos:end="209:70">[<expr pos:start="209:69" pos:end="209:69"><literal type="number" pos:start="209:69" pos:end="209:69">0</literal></expr>]</index></name><operator pos:start="209:71" pos:end="209:71">.</operator><name pos:start="209:72" pos:end="209:77">height</name></expr>)</condition> <block pos:start="209:80" pos:end="217:13">{<block_content pos:start="211:17" pos:end="215:22">

                <expr_stmt pos:start="211:17" pos:end="211:72"><expr pos:start="211:17" pos:end="211:71"><call pos:start="211:17" pos:end="211:71"><name pos:start="211:17" pos:end="211:22">av_log</name><argument_list pos:start="211:23" pos:end="211:71">(<argument pos:start="211:24" pos:end="211:28"><expr pos:start="211:24" pos:end="211:28"><name pos:start="211:24" pos:end="211:28">avctx</name></expr></argument>, <argument pos:start="211:31" pos:end="211:42"><expr pos:start="211:31" pos:end="211:42"><name pos:start="211:31" pos:end="211:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:45" pos:end="211:70"><expr pos:start="211:45" pos:end="211:70"><literal type="string" pos:start="211:45" pos:end="211:70">"Invalid lowpass height\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:38"><expr pos:start="213:17" pos:end="213:37"><name pos:start="213:17" pos:end="213:19">ret</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <call pos:start="213:23" pos:end="213:37"><name pos:start="213:23" pos:end="213:29">AVERROR</name><argument_list pos:start="213:30" pos:end="213:37">(<argument pos:start="213:31" pos:end="213:36"><expr pos:start="213:31" pos:end="213:36"><name pos:start="213:31" pos:end="213:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="219:11" pos:end="221:74">else if <condition pos:start="219:19" pos:end="219:28">(<expr pos:start="219:20" pos:end="219:27"><name pos:start="219:20" pos:end="219:22">tag</name> <operator pos:start="219:24" pos:end="219:25">==</operator> <literal type="number" pos:start="219:27" pos:end="219:27">1</literal></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:74"><block_content pos:start="221:13" pos:end="221:74">

            <expr_stmt pos:start="221:13" pos:end="221:74"><expr pos:start="221:13" pos:end="221:73"><call pos:start="221:13" pos:end="221:73"><name pos:start="221:13" pos:end="221:18">av_log</name><argument_list pos:start="221:19" pos:end="221:73">(<argument pos:start="221:20" pos:end="221:24"><expr pos:start="221:20" pos:end="221:24"><name pos:start="221:20" pos:end="221:24">avctx</name></expr></argument>, <argument pos:start="221:27" pos:end="221:38"><expr pos:start="221:27" pos:end="221:38"><name pos:start="221:27" pos:end="221:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="221:41" pos:end="221:66"><expr pos:start="221:41" pos:end="221:66"><literal type="string" pos:start="221:41" pos:end="221:56">"Sample type? %"</literal><name pos:start="221:57" pos:end="221:62">PRIu16</name><literal type="string" pos:start="221:63" pos:end="221:66">"\n"</literal></expr></argument>, <argument pos:start="221:69" pos:end="221:72"><expr pos:start="221:69" pos:end="221:72"><name pos:start="221:69" pos:end="221:72">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="223:9" pos:end="237:9">else if <condition pos:start="223:17" pos:end="223:27">(<expr pos:start="223:18" pos:end="223:26"><name pos:start="223:18" pos:end="223:20">tag</name> <operator pos:start="223:22" pos:end="223:23">==</operator> <literal type="number" pos:start="223:25" pos:end="223:26">10</literal></expr>)</condition> <block pos:start="223:29" pos:end="237:9">{<block_content pos:start="225:13" pos:end="235:77">

            <if_stmt pos:start="225:13" pos:end="233:13"><if pos:start="225:13" pos:end="233:13">if <condition pos:start="225:16" pos:end="225:26">(<expr pos:start="225:17" pos:end="225:25"><name pos:start="225:17" pos:end="225:20">data</name> <operator pos:start="225:22" pos:end="225:23">!=</operator> <literal type="number" pos:start="225:25" pos:end="225:25">0</literal></expr>)</condition> <block pos:start="225:28" pos:end="233:13">{<block_content pos:start="227:17" pos:end="231:22">

                <expr_stmt pos:start="227:17" pos:end="227:88"><expr pos:start="227:17" pos:end="227:87"><call pos:start="227:17" pos:end="227:87"><name pos:start="227:17" pos:end="227:45">avpriv_report_missing_feature</name><argument_list pos:start="227:46" pos:end="227:87">(<argument pos:start="227:47" pos:end="227:51"><expr pos:start="227:47" pos:end="227:51"><name pos:start="227:47" pos:end="227:51">avctx</name></expr></argument>, <argument pos:start="227:54" pos:end="227:80"><expr pos:start="227:54" pos:end="227:80"><literal type="string" pos:start="227:54" pos:end="227:74">"Transform type of %"</literal><name pos:start="227:75" pos:end="227:80">PRIu16</name></expr></argument>, <argument pos:start="227:83" pos:end="227:86"><expr pos:start="227:83" pos:end="227:86"><name pos:start="227:83" pos:end="227:86">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="229:17" pos:end="229:43"><expr pos:start="229:17" pos:end="229:42"><name pos:start="229:17" pos:end="229:19">ret</name> <operator pos:start="229:21" pos:end="229:21">=</operator> <name pos:start="229:23" pos:end="229:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="231:17" pos:end="231:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:77"><expr pos:start="235:13" pos:end="235:76"><call pos:start="235:13" pos:end="235:76"><name pos:start="235:13" pos:end="235:18">av_log</name><argument_list pos:start="235:19" pos:end="235:76">(<argument pos:start="235:20" pos:end="235:24"><expr pos:start="235:20" pos:end="235:24"><name pos:start="235:20" pos:end="235:24">avctx</name></expr></argument>, <argument pos:start="235:27" pos:end="235:38"><expr pos:start="235:27" pos:end="235:38"><name pos:start="235:27" pos:end="235:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="235:41" pos:end="235:69"><expr pos:start="235:41" pos:end="235:69"><literal type="string" pos:start="235:41" pos:end="235:59">"Transform-type? %"</literal><name pos:start="235:60" pos:end="235:65">PRIu16</name><literal type="string" pos:start="235:66" pos:end="235:69">"\n"</literal></expr></argument>, <argument pos:start="235:72" pos:end="235:75"><expr pos:start="235:72" pos:end="235:75"><name pos:start="235:72" pos:end="235:75">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="237:11" pos:end="243:9">else if <condition pos:start="237:19" pos:end="237:56">(<expr pos:start="237:20" pos:end="237:55"><name pos:start="237:20" pos:end="237:25">abstag</name> <operator pos:start="237:27" pos:end="237:28">&gt;=</operator> <literal type="number" pos:start="237:30" pos:end="237:35">0x4000</literal> <operator pos:start="237:37" pos:end="237:38">&amp;&amp;</operator> <name pos:start="237:40" pos:end="237:45">abstag</name> <operator pos:start="237:47" pos:end="237:48">&lt;=</operator> <literal type="number" pos:start="237:50" pos:end="237:55">0x40ff</literal></expr>)</condition> <block pos:start="237:58" pos:end="243:9">{<block_content pos:start="239:13" pos:end="241:45">

            <expr_stmt pos:start="239:13" pos:end="239:115"><expr pos:start="239:13" pos:end="239:114"><call pos:start="239:13" pos:end="239:114"><name pos:start="239:13" pos:end="239:18">av_log</name><argument_list pos:start="239:19" pos:end="239:114">(<argument pos:start="239:20" pos:end="239:24"><expr pos:start="239:20" pos:end="239:24"><name pos:start="239:20" pos:end="239:24">avctx</name></expr></argument>, <argument pos:start="239:27" pos:end="239:38"><expr pos:start="239:27" pos:end="239:38"><name pos:start="239:27" pos:end="239:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="239:41" pos:end="239:68"><expr pos:start="239:41" pos:end="239:68"><literal type="string" pos:start="239:41" pos:end="239:68">"Small chunk length %d %s\n"</literal></expr></argument>, <argument pos:start="239:71" pos:end="239:78"><expr pos:start="239:71" pos:end="239:78"><name pos:start="239:71" pos:end="239:74">data</name> <operator pos:start="239:76" pos:end="239:76">*</operator> <literal type="number" pos:start="239:78" pos:end="239:78">4</literal></expr></argument>, <argument pos:start="239:81" pos:end="239:113"><expr pos:start="239:81" pos:end="239:113"><ternary pos:start="239:81" pos:end="239:113"><condition pos:start="239:81" pos:end="239:89"><expr pos:start="239:81" pos:end="239:87"><name pos:start="239:81" pos:end="239:83">tag</name> <operator pos:start="239:85" pos:end="239:85">&lt;</operator> <literal type="number" pos:start="239:87" pos:end="239:87">0</literal></expr> ?</condition><then pos:start="239:91" pos:end="239:100"> <expr pos:start="239:91" pos:end="239:100"><literal type="string" pos:start="239:91" pos:end="239:100">"optional"</literal></expr> </then><else pos:start="239:102" pos:end="239:113">: <expr pos:start="239:104" pos:end="239:113"><literal type="string" pos:start="239:104" pos:end="239:113">"required"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:45"><expr pos:start="241:13" pos:end="241:44"><call pos:start="241:13" pos:end="241:44"><name pos:start="241:13" pos:end="241:29">bytestream2_skipu</name><argument_list pos:start="241:30" pos:end="241:44">(<argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><operator pos:start="241:31" pos:end="241:31">&amp;</operator><name pos:start="241:32" pos:end="241:33">gb</name></expr></argument>, <argument pos:start="241:36" pos:end="241:43"><expr pos:start="241:36" pos:end="241:43"><name pos:start="241:36" pos:end="241:39">data</name> <operator pos:start="241:41" pos:end="241:41">*</operator> <literal type="number" pos:start="241:43" pos:end="241:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="243:11" pos:end="253:9">else if <condition pos:start="243:19" pos:end="243:29">(<expr pos:start="243:20" pos:end="243:28"><name pos:start="243:20" pos:end="243:22">tag</name> <operator pos:start="243:24" pos:end="243:25">==</operator> <literal type="number" pos:start="243:27" pos:end="243:28">23</literal></expr>)</condition> <block pos:start="243:31" pos:end="253:9">{<block_content pos:start="245:13" pos:end="251:18">

            <expr_stmt pos:start="245:13" pos:end="245:56"><expr pos:start="245:13" pos:end="245:55"><call pos:start="245:13" pos:end="245:55"><name pos:start="245:13" pos:end="245:18">av_log</name><argument_list pos:start="245:19" pos:end="245:55">(<argument pos:start="245:20" pos:end="245:24"><expr pos:start="245:20" pos:end="245:24"><name pos:start="245:20" pos:end="245:24">avctx</name></expr></argument>, <argument pos:start="245:27" pos:end="245:38"><expr pos:start="245:27" pos:end="245:38"><name pos:start="245:27" pos:end="245:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="245:41" pos:end="245:54"><expr pos:start="245:41" pos:end="245:54"><literal type="string" pos:start="245:41" pos:end="245:54">"Skip frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:63"><expr pos:start="247:13" pos:end="247:62"><call pos:start="247:13" pos:end="247:62"><name pos:start="247:13" pos:end="247:41">avpriv_report_missing_feature</name><argument_list pos:start="247:42" pos:end="247:62">(<argument pos:start="247:43" pos:end="247:47"><expr pos:start="247:43" pos:end="247:47"><name pos:start="247:43" pos:end="247:47">avctx</name></expr></argument>, <argument pos:start="247:50" pos:end="247:61"><expr pos:start="247:50" pos:end="247:61"><literal type="string" pos:start="247:50" pos:end="247:61">"Skip frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:15">ret</name> <operator pos:start="249:17" pos:end="249:17">=</operator> <name pos:start="249:19" pos:end="249:38">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

            <break pos:start="251:13" pos:end="251:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="253:11" pos:end="277:9">else if <condition pos:start="253:19" pos:end="253:28">(<expr pos:start="253:20" pos:end="253:27"><name pos:start="253:20" pos:end="253:22">tag</name> <operator pos:start="253:24" pos:end="253:25">==</operator> <literal type="number" pos:start="253:27" pos:end="253:27">2</literal></expr>)</condition> <block pos:start="253:30" pos:end="277:9">{<block_content pos:start="255:13" pos:end="275:13">

            <expr_stmt pos:start="255:13" pos:end="255:94"><expr pos:start="255:13" pos:end="255:93"><call pos:start="255:13" pos:end="255:93"><name pos:start="255:13" pos:end="255:18">av_log</name><argument_list pos:start="255:19" pos:end="255:93">(<argument pos:start="255:20" pos:end="255:24"><expr pos:start="255:20" pos:end="255:24"><name pos:start="255:20" pos:end="255:24">avctx</name></expr></argument>, <argument pos:start="255:27" pos:end="255:38"><expr pos:start="255:27" pos:end="255:38"><name pos:start="255:27" pos:end="255:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="255:41" pos:end="255:86"><expr pos:start="255:41" pos:end="255:86"><literal type="string" pos:start="255:41" pos:end="255:86">"tag=2 header - skipping %i tag/value pairs\n"</literal></expr></argument>, <argument pos:start="255:89" pos:end="255:92"><expr pos:start="255:89" pos:end="255:92"><name pos:start="255:89" pos:end="255:92">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="257:13" pos:end="265:13"><if pos:start="257:13" pos:end="265:13">if <condition pos:start="257:16" pos:end="257:59">(<expr pos:start="257:17" pos:end="257:58"><name pos:start="257:17" pos:end="257:20">data</name> <operator pos:start="257:22" pos:end="257:22">&gt;</operator> <call pos:start="257:24" pos:end="257:54"><name pos:start="257:24" pos:end="257:49">bytestream2_get_bytes_left</name><argument_list pos:start="257:50" pos:end="257:54">(<argument pos:start="257:51" pos:end="257:53"><expr pos:start="257:51" pos:end="257:53"><operator pos:start="257:51" pos:end="257:51">&amp;</operator><name pos:start="257:52" pos:end="257:53">gb</name></expr></argument>)</argument_list></call> <operator pos:start="257:56" pos:end="257:56">/</operator> <literal type="number" pos:start="257:58" pos:end="257:58">4</literal></expr>)</condition> <block pos:start="257:61" pos:end="265:13">{<block_content pos:start="259:17" pos:end="263:22">

                <expr_stmt pos:start="259:17" pos:end="259:85"><expr pos:start="259:17" pos:end="259:84"><call pos:start="259:17" pos:end="259:84"><name pos:start="259:17" pos:end="259:22">av_log</name><argument_list pos:start="259:23" pos:end="259:84">(<argument pos:start="259:24" pos:end="259:28"><expr pos:start="259:24" pos:end="259:28"><name pos:start="259:24" pos:end="259:28">avctx</name></expr></argument>, <argument pos:start="259:31" pos:end="259:42"><expr pos:start="259:31" pos:end="259:42"><name pos:start="259:31" pos:end="259:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="259:45" pos:end="259:77"><expr pos:start="259:45" pos:end="259:77"><literal type="string" pos:start="259:45" pos:end="259:77">"too many tag/value pairs (%d)\n"</literal></expr></argument>, <argument pos:start="259:80" pos:end="259:83"><expr pos:start="259:80" pos:end="259:83"><name pos:start="259:80" pos:end="259:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:42"><expr pos:start="261:17" pos:end="261:41"><name pos:start="261:17" pos:end="261:19">ret</name> <operator pos:start="261:21" pos:end="261:21">=</operator> <name pos:start="261:23" pos:end="261:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <break pos:start="263:17" pos:end="263:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <for pos:start="267:13" pos:end="275:13">for <control pos:start="267:17" pos:end="267:38">(<init pos:start="267:18" pos:end="267:23"><expr pos:start="267:18" pos:end="267:22"><name pos:start="267:18" pos:end="267:18">i</name> <operator pos:start="267:20" pos:end="267:20">=</operator> <literal type="number" pos:start="267:22" pos:end="267:22">0</literal></expr>;</init> <condition pos:start="267:25" pos:end="267:33"><expr pos:start="267:25" pos:end="267:32"><name pos:start="267:25" pos:end="267:25">i</name> <operator pos:start="267:27" pos:end="267:27">&lt;</operator> <name pos:start="267:29" pos:end="267:32">data</name></expr>;</condition> <incr pos:start="267:35" pos:end="267:37"><expr pos:start="267:35" pos:end="267:37"><name pos:start="267:35" pos:end="267:35">i</name><operator pos:start="267:36" pos:end="267:37">++</operator></expr></incr>)</control> <block pos:start="267:40" pos:end="275:13">{<block_content pos:start="269:17" pos:end="273:79">

                <decl_stmt pos:start="269:17" pos:end="269:58"><decl pos:start="269:17" pos:end="269:57"><type pos:start="269:17" pos:end="269:24"><name pos:start="269:17" pos:end="269:24">uint16_t</name></type> <name pos:start="269:26" pos:end="269:29">tag2</name> <init pos:start="269:31" pos:end="269:57">= <expr pos:start="269:33" pos:end="269:57"><call pos:start="269:33" pos:end="269:57"><name pos:start="269:33" pos:end="269:52">bytestream2_get_be16</name><argument_list pos:start="269:53" pos:end="269:57">(<argument pos:start="269:54" pos:end="269:56"><expr pos:start="269:54" pos:end="269:56"><operator pos:start="269:54" pos:end="269:54">&amp;</operator><name pos:start="269:55" pos:end="269:56">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="271:17" pos:end="271:58"><decl pos:start="271:17" pos:end="271:57"><type pos:start="271:17" pos:end="271:24"><name pos:start="271:17" pos:end="271:24">uint16_t</name></type> <name pos:start="271:26" pos:end="271:29">val2</name> <init pos:start="271:31" pos:end="271:57">= <expr pos:start="271:33" pos:end="271:57"><call pos:start="271:33" pos:end="271:57"><name pos:start="271:33" pos:end="271:52">bytestream2_get_be16</name><argument_list pos:start="271:53" pos:end="271:57">(<argument pos:start="271:54" pos:end="271:56"><expr pos:start="271:54" pos:end="271:56"><operator pos:start="271:54" pos:end="271:54">&amp;</operator><name pos:start="271:55" pos:end="271:56">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:79"><expr pos:start="273:17" pos:end="273:78"><call pos:start="273:17" pos:end="273:78"><name pos:start="273:17" pos:end="273:22">av_log</name><argument_list pos:start="273:23" pos:end="273:78">(<argument pos:start="273:24" pos:end="273:28"><expr pos:start="273:24" pos:end="273:28"><name pos:start="273:24" pos:end="273:28">avctx</name></expr></argument>, <argument pos:start="273:31" pos:end="273:42"><expr pos:start="273:31" pos:end="273:42"><name pos:start="273:31" pos:end="273:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="273:45" pos:end="273:65"><expr pos:start="273:45" pos:end="273:65"><literal type="string" pos:start="273:45" pos:end="273:65">"Tag/Value = %x %x\n"</literal></expr></argument>, <argument pos:start="273:68" pos:end="273:71"><expr pos:start="273:68" pos:end="273:71"><name pos:start="273:68" pos:end="273:71">tag2</name></expr></argument>, <argument pos:start="273:74" pos:end="273:77"><expr pos:start="273:74" pos:end="273:77"><name pos:start="273:74" pos:end="273:77">val2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="277:11" pos:end="295:9">else if <condition pos:start="277:19" pos:end="277:29">(<expr pos:start="277:20" pos:end="277:28"><name pos:start="277:20" pos:end="277:22">tag</name> <operator pos:start="277:24" pos:end="277:25">==</operator> <literal type="number" pos:start="277:27" pos:end="277:28">41</literal></expr>)</condition> <block pos:start="277:31" pos:end="295:9">{<block_content pos:start="279:13" pos:end="293:13">

            <expr_stmt pos:start="279:13" pos:end="279:82"><expr pos:start="279:13" pos:end="279:81"><name pos:start="279:13" pos:end="279:36"><name pos:start="279:13" pos:end="279:13">s</name><operator pos:start="279:14" pos:end="279:15">-&gt;</operator><name pos:start="279:16" pos:end="279:20">plane</name><index pos:start="279:21" pos:end="279:36">[<expr pos:start="279:22" pos:end="279:35"><name pos:start="279:22" pos:end="279:35"><name pos:start="279:22" pos:end="279:22">s</name><operator pos:start="279:23" pos:end="279:24">-&gt;</operator><name pos:start="279:25" pos:end="279:35">channel_num</name></name></expr>]</index></name><operator pos:start="279:37" pos:end="279:37">.</operator><name pos:start="279:38" pos:end="279:67"><name pos:start="279:38" pos:end="279:41">band</name><index pos:start="279:42" pos:end="279:51">[<expr pos:start="279:43" pos:end="279:50"><name pos:start="279:43" pos:end="279:50"><name pos:start="279:43" pos:end="279:43">s</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:50">level</name></name></expr>]</index><index pos:start="279:52" pos:end="279:67">[<expr pos:start="279:53" pos:end="279:66"><name pos:start="279:53" pos:end="279:66"><name pos:start="279:53" pos:end="279:53">s</name><operator pos:start="279:54" pos:end="279:55">-&gt;</operator><name pos:start="279:56" pos:end="279:66">subband_num</name></name></expr>]</index></name><operator pos:start="279:68" pos:end="279:68">.</operator><name pos:start="279:69" pos:end="279:73">width</name>  <operator pos:start="279:76" pos:end="279:76">=</operator> <name pos:start="279:78" pos:end="279:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:94"><expr pos:start="281:13" pos:end="281:93"><name pos:start="281:13" pos:end="281:36"><name pos:start="281:13" pos:end="281:13">s</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:20">plane</name><index pos:start="281:21" pos:end="281:36">[<expr pos:start="281:22" pos:end="281:35"><name pos:start="281:22" pos:end="281:35"><name pos:start="281:22" pos:end="281:22">s</name><operator pos:start="281:23" pos:end="281:24">-&gt;</operator><name pos:start="281:25" pos:end="281:35">channel_num</name></name></expr>]</index></name><operator pos:start="281:37" pos:end="281:37">.</operator><name pos:start="281:38" pos:end="281:67"><name pos:start="281:38" pos:end="281:41">band</name><index pos:start="281:42" pos:end="281:51">[<expr pos:start="281:43" pos:end="281:50"><name pos:start="281:43" pos:end="281:50"><name pos:start="281:43" pos:end="281:43">s</name><operator pos:start="281:44" pos:end="281:45">-&gt;</operator><name pos:start="281:46" pos:end="281:50">level</name></name></expr>]</index><index pos:start="281:52" pos:end="281:67">[<expr pos:start="281:53" pos:end="281:66"><name pos:start="281:53" pos:end="281:66"><name pos:start="281:53" pos:end="281:53">s</name><operator pos:start="281:54" pos:end="281:55">-&gt;</operator><name pos:start="281:56" pos:end="281:66">subband_num</name></name></expr>]</index></name><operator pos:start="281:68" pos:end="281:68">.</operator><name pos:start="281:69" pos:end="281:74">stride</name> <operator pos:start="281:76" pos:end="281:76">=</operator> <call pos:start="281:78" pos:end="281:93"><name pos:start="281:78" pos:end="281:84">FFALIGN</name><argument_list pos:start="281:85" pos:end="281:93">(<argument pos:start="281:86" pos:end="281:89"><expr pos:start="281:86" pos:end="281:89"><name pos:start="281:86" pos:end="281:89">data</name></expr></argument>, <argument pos:start="281:92" pos:end="281:92"><expr pos:start="281:92" pos:end="281:92"><literal type="number" pos:start="281:92" pos:end="281:92">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="283:13" pos:end="283:142"><expr pos:start="283:13" pos:end="283:141"><call pos:start="283:13" pos:end="283:141"><name pos:start="283:13" pos:end="283:18">av_log</name><argument_list pos:start="283:19" pos:end="283:141">(<argument pos:start="283:20" pos:end="283:24"><expr pos:start="283:20" pos:end="283:24"><name pos:start="283:20" pos:end="283:24">avctx</name></expr></argument>, <argument pos:start="283:27" pos:end="283:38"><expr pos:start="283:27" pos:end="283:38"><name pos:start="283:27" pos:end="283:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="283:41" pos:end="283:92"><expr pos:start="283:41" pos:end="283:92"><literal type="string" pos:start="283:41" pos:end="283:92">"Highpass width %i channel %i level %i subband %i\n"</literal></expr></argument>, <argument pos:start="283:95" pos:end="283:98"><expr pos:start="283:95" pos:end="283:98"><name pos:start="283:95" pos:end="283:98">data</name></expr></argument>, <argument pos:start="283:101" pos:end="283:114"><expr pos:start="283:101" pos:end="283:114"><name pos:start="283:101" pos:end="283:114"><name pos:start="283:101" pos:end="283:101">s</name><operator pos:start="283:102" pos:end="283:103">-&gt;</operator><name pos:start="283:104" pos:end="283:114">channel_num</name></name></expr></argument>, <argument pos:start="283:117" pos:end="283:124"><expr pos:start="283:117" pos:end="283:124"><name pos:start="283:117" pos:end="283:124"><name pos:start="283:117" pos:end="283:117">s</name><operator pos:start="283:118" pos:end="283:119">-&gt;</operator><name pos:start="283:120" pos:end="283:124">level</name></name></expr></argument>, <argument pos:start="283:127" pos:end="283:140"><expr pos:start="283:127" pos:end="283:140"><name pos:start="283:127" pos:end="283:140"><name pos:start="283:127" pos:end="283:127">s</name><operator pos:start="283:128" pos:end="283:129">-&gt;</operator><name pos:start="283:130" pos:end="283:140">subband_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="285:13" pos:end="293:13"><if pos:start="285:13" pos:end="293:13">if <condition pos:start="285:16" pos:end="285:25">(<expr pos:start="285:17" pos:end="285:24"><name pos:start="285:17" pos:end="285:20">data</name> <operator pos:start="285:22" pos:end="285:22">&lt;</operator> <literal type="number" pos:start="285:24" pos:end="285:24">3</literal></expr>)</condition> <block pos:start="285:27" pos:end="293:13">{<block_content pos:start="287:17" pos:end="291:22">

                <expr_stmt pos:start="287:17" pos:end="287:72"><expr pos:start="287:17" pos:end="287:71"><call pos:start="287:17" pos:end="287:71"><name pos:start="287:17" pos:end="287:22">av_log</name><argument_list pos:start="287:23" pos:end="287:71">(<argument pos:start="287:24" pos:end="287:28"><expr pos:start="287:24" pos:end="287:28"><name pos:start="287:24" pos:end="287:28">avctx</name></expr></argument>, <argument pos:start="287:31" pos:end="287:42"><expr pos:start="287:31" pos:end="287:42"><name pos:start="287:31" pos:end="287:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:45" pos:end="287:70"><expr pos:start="287:45" pos:end="287:70"><literal type="string" pos:start="287:45" pos:end="287:70">"Invalid highpass width\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:38"><expr pos:start="289:17" pos:end="289:37"><name pos:start="289:17" pos:end="289:19">ret</name> <operator pos:start="289:21" pos:end="289:21">=</operator> <call pos:start="289:23" pos:end="289:37"><name pos:start="289:23" pos:end="289:29">AVERROR</name><argument_list pos:start="289:30" pos:end="289:37">(<argument pos:start="289:31" pos:end="289:36"><expr pos:start="289:31" pos:end="289:36"><name pos:start="289:31" pos:end="289:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="291:17" pos:end="291:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="295:11" pos:end="311:9">else if <condition pos:start="295:19" pos:end="295:29">(<expr pos:start="295:20" pos:end="295:28"><name pos:start="295:20" pos:end="295:22">tag</name> <operator pos:start="295:24" pos:end="295:25">==</operator> <literal type="number" pos:start="295:27" pos:end="295:28">42</literal></expr>)</condition> <block pos:start="295:31" pos:end="311:9">{<block_content pos:start="297:13" pos:end="309:13">

            <expr_stmt pos:start="297:13" pos:end="297:82"><expr pos:start="297:13" pos:end="297:81"><name pos:start="297:13" pos:end="297:36"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:20">plane</name><index pos:start="297:21" pos:end="297:36">[<expr pos:start="297:22" pos:end="297:35"><name pos:start="297:22" pos:end="297:35"><name pos:start="297:22" pos:end="297:22">s</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:35">channel_num</name></name></expr>]</index></name><operator pos:start="297:37" pos:end="297:37">.</operator><name pos:start="297:38" pos:end="297:67"><name pos:start="297:38" pos:end="297:41">band</name><index pos:start="297:42" pos:end="297:51">[<expr pos:start="297:43" pos:end="297:50"><name pos:start="297:43" pos:end="297:50"><name pos:start="297:43" pos:end="297:43">s</name><operator pos:start="297:44" pos:end="297:45">-&gt;</operator><name pos:start="297:46" pos:end="297:50">level</name></name></expr>]</index><index pos:start="297:52" pos:end="297:67">[<expr pos:start="297:53" pos:end="297:66"><name pos:start="297:53" pos:end="297:66"><name pos:start="297:53" pos:end="297:53">s</name><operator pos:start="297:54" pos:end="297:55">-&gt;</operator><name pos:start="297:56" pos:end="297:66">subband_num</name></name></expr>]</index></name><operator pos:start="297:68" pos:end="297:68">.</operator><name pos:start="297:69" pos:end="297:74">height</name> <operator pos:start="297:76" pos:end="297:76">=</operator> <name pos:start="297:78" pos:end="297:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:70"><expr pos:start="299:13" pos:end="299:69"><call pos:start="299:13" pos:end="299:69"><name pos:start="299:13" pos:end="299:18">av_log</name><argument_list pos:start="299:19" pos:end="299:69">(<argument pos:start="299:20" pos:end="299:24"><expr pos:start="299:20" pos:end="299:24"><name pos:start="299:20" pos:end="299:24">avctx</name></expr></argument>, <argument pos:start="299:27" pos:end="299:38"><expr pos:start="299:27" pos:end="299:38"><name pos:start="299:27" pos:end="299:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="299:41" pos:end="299:62"><expr pos:start="299:41" pos:end="299:62"><literal type="string" pos:start="299:41" pos:end="299:62">"Highpass height %i\n"</literal></expr></argument>, <argument pos:start="299:65" pos:end="299:68"><expr pos:start="299:65" pos:end="299:68"><name pos:start="299:65" pos:end="299:68">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="301:13" pos:end="309:13"><if pos:start="301:13" pos:end="309:13">if <condition pos:start="301:16" pos:end="301:25">(<expr pos:start="301:17" pos:end="301:24"><name pos:start="301:17" pos:end="301:20">data</name> <operator pos:start="301:22" pos:end="301:22">&lt;</operator> <literal type="number" pos:start="301:24" pos:end="301:24">3</literal></expr>)</condition> <block pos:start="301:27" pos:end="309:13">{<block_content pos:start="303:17" pos:end="307:22">

                <expr_stmt pos:start="303:17" pos:end="303:73"><expr pos:start="303:17" pos:end="303:72"><call pos:start="303:17" pos:end="303:72"><name pos:start="303:17" pos:end="303:22">av_log</name><argument_list pos:start="303:23" pos:end="303:72">(<argument pos:start="303:24" pos:end="303:28"><expr pos:start="303:24" pos:end="303:28"><name pos:start="303:24" pos:end="303:28">avctx</name></expr></argument>, <argument pos:start="303:31" pos:end="303:42"><expr pos:start="303:31" pos:end="303:42"><name pos:start="303:31" pos:end="303:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="303:45" pos:end="303:71"><expr pos:start="303:45" pos:end="303:71"><literal type="string" pos:start="303:45" pos:end="303:71">"Invalid highpass height\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="305:17" pos:end="305:38"><expr pos:start="305:17" pos:end="305:37"><name pos:start="305:17" pos:end="305:19">ret</name> <operator pos:start="305:21" pos:end="305:21">=</operator> <call pos:start="305:23" pos:end="305:37"><name pos:start="305:23" pos:end="305:29">AVERROR</name><argument_list pos:start="305:30" pos:end="305:37">(<argument pos:start="305:31" pos:end="305:36"><expr pos:start="305:31" pos:end="305:36"><name pos:start="305:31" pos:end="305:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="307:17" pos:end="307:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="311:11" pos:end="329:9">else if <condition pos:start="311:19" pos:end="311:29">(<expr pos:start="311:20" pos:end="311:28"><name pos:start="311:20" pos:end="311:22">tag</name> <operator pos:start="311:24" pos:end="311:25">==</operator> <literal type="number" pos:start="311:27" pos:end="311:28">49</literal></expr>)</condition> <block pos:start="311:31" pos:end="329:9">{<block_content pos:start="313:13" pos:end="327:13">

            <expr_stmt pos:start="313:13" pos:end="313:82"><expr pos:start="313:13" pos:end="313:81"><name pos:start="313:13" pos:end="313:36"><name pos:start="313:13" pos:end="313:13">s</name><operator pos:start="313:14" pos:end="313:15">-&gt;</operator><name pos:start="313:16" pos:end="313:20">plane</name><index pos:start="313:21" pos:end="313:36">[<expr pos:start="313:22" pos:end="313:35"><name pos:start="313:22" pos:end="313:35"><name pos:start="313:22" pos:end="313:22">s</name><operator pos:start="313:23" pos:end="313:24">-&gt;</operator><name pos:start="313:25" pos:end="313:35">channel_num</name></name></expr>]</index></name><operator pos:start="313:37" pos:end="313:37">.</operator><name pos:start="313:38" pos:end="313:67"><name pos:start="313:38" pos:end="313:41">band</name><index pos:start="313:42" pos:end="313:51">[<expr pos:start="313:43" pos:end="313:50"><name pos:start="313:43" pos:end="313:50"><name pos:start="313:43" pos:end="313:43">s</name><operator pos:start="313:44" pos:end="313:45">-&gt;</operator><name pos:start="313:46" pos:end="313:50">level</name></name></expr>]</index><index pos:start="313:52" pos:end="313:67">[<expr pos:start="313:53" pos:end="313:66"><name pos:start="313:53" pos:end="313:66"><name pos:start="313:53" pos:end="313:53">s</name><operator pos:start="313:54" pos:end="313:55">-&gt;</operator><name pos:start="313:56" pos:end="313:66">subband_num</name></name></expr>]</index></name><operator pos:start="313:68" pos:end="313:68">.</operator><name pos:start="313:69" pos:end="313:73">width</name>  <operator pos:start="313:76" pos:end="313:76">=</operator> <name pos:start="313:78" pos:end="313:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="315:13" pos:end="315:94"><expr pos:start="315:13" pos:end="315:93"><name pos:start="315:13" pos:end="315:36"><name pos:start="315:13" pos:end="315:13">s</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:20">plane</name><index pos:start="315:21" pos:end="315:36">[<expr pos:start="315:22" pos:end="315:35"><name pos:start="315:22" pos:end="315:35"><name pos:start="315:22" pos:end="315:22">s</name><operator pos:start="315:23" pos:end="315:24">-&gt;</operator><name pos:start="315:25" pos:end="315:35">channel_num</name></name></expr>]</index></name><operator pos:start="315:37" pos:end="315:37">.</operator><name pos:start="315:38" pos:end="315:67"><name pos:start="315:38" pos:end="315:41">band</name><index pos:start="315:42" pos:end="315:51">[<expr pos:start="315:43" pos:end="315:50"><name pos:start="315:43" pos:end="315:50"><name pos:start="315:43" pos:end="315:43">s</name><operator pos:start="315:44" pos:end="315:45">-&gt;</operator><name pos:start="315:46" pos:end="315:50">level</name></name></expr>]</index><index pos:start="315:52" pos:end="315:67">[<expr pos:start="315:53" pos:end="315:66"><name pos:start="315:53" pos:end="315:66"><name pos:start="315:53" pos:end="315:53">s</name><operator pos:start="315:54" pos:end="315:55">-&gt;</operator><name pos:start="315:56" pos:end="315:66">subband_num</name></name></expr>]</index></name><operator pos:start="315:68" pos:end="315:68">.</operator><name pos:start="315:69" pos:end="315:74">stride</name> <operator pos:start="315:76" pos:end="315:76">=</operator> <call pos:start="315:78" pos:end="315:93"><name pos:start="315:78" pos:end="315:84">FFALIGN</name><argument_list pos:start="315:85" pos:end="315:93">(<argument pos:start="315:86" pos:end="315:89"><expr pos:start="315:86" pos:end="315:89"><name pos:start="315:86" pos:end="315:89">data</name></expr></argument>, <argument pos:start="315:92" pos:end="315:92"><expr pos:start="315:92" pos:end="315:92"><literal type="number" pos:start="315:92" pos:end="315:92">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:70"><expr pos:start="317:13" pos:end="317:69"><call pos:start="317:13" pos:end="317:69"><name pos:start="317:13" pos:end="317:18">av_log</name><argument_list pos:start="317:19" pos:end="317:69">(<argument pos:start="317:20" pos:end="317:24"><expr pos:start="317:20" pos:end="317:24"><name pos:start="317:20" pos:end="317:24">avctx</name></expr></argument>, <argument pos:start="317:27" pos:end="317:38"><expr pos:start="317:27" pos:end="317:38"><name pos:start="317:27" pos:end="317:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="317:41" pos:end="317:62"><expr pos:start="317:41" pos:end="317:62"><literal type="string" pos:start="317:41" pos:end="317:62">"Highpass width2 %i\n"</literal></expr></argument>, <argument pos:start="317:65" pos:end="317:68"><expr pos:start="317:65" pos:end="317:68"><name pos:start="317:65" pos:end="317:68">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="319:13" pos:end="327:13"><if pos:start="319:13" pos:end="327:13">if <condition pos:start="319:16" pos:end="319:25">(<expr pos:start="319:17" pos:end="319:24"><name pos:start="319:17" pos:end="319:20">data</name> <operator pos:start="319:22" pos:end="319:22">&lt;</operator> <literal type="number" pos:start="319:24" pos:end="319:24">3</literal></expr>)</condition> <block pos:start="319:27" pos:end="327:13">{<block_content pos:start="321:17" pos:end="325:22">

                <expr_stmt pos:start="321:17" pos:end="321:73"><expr pos:start="321:17" pos:end="321:72"><call pos:start="321:17" pos:end="321:72"><name pos:start="321:17" pos:end="321:22">av_log</name><argument_list pos:start="321:23" pos:end="321:72">(<argument pos:start="321:24" pos:end="321:28"><expr pos:start="321:24" pos:end="321:28"><name pos:start="321:24" pos:end="321:28">avctx</name></expr></argument>, <argument pos:start="321:31" pos:end="321:42"><expr pos:start="321:31" pos:end="321:42"><name pos:start="321:31" pos:end="321:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="321:45" pos:end="321:71"><expr pos:start="321:45" pos:end="321:71"><literal type="string" pos:start="321:45" pos:end="321:71">"Invalid highpass width2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:38"><expr pos:start="323:17" pos:end="323:37"><name pos:start="323:17" pos:end="323:19">ret</name> <operator pos:start="323:21" pos:end="323:21">=</operator> <call pos:start="323:23" pos:end="323:37"><name pos:start="323:23" pos:end="323:29">AVERROR</name><argument_list pos:start="323:30" pos:end="323:37">(<argument pos:start="323:31" pos:end="323:36"><expr pos:start="323:31" pos:end="323:36"><name pos:start="323:31" pos:end="323:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="325:17" pos:end="325:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="329:11" pos:end="345:9">else if <condition pos:start="329:19" pos:end="329:29">(<expr pos:start="329:20" pos:end="329:28"><name pos:start="329:20" pos:end="329:22">tag</name> <operator pos:start="329:24" pos:end="329:25">==</operator> <literal type="number" pos:start="329:27" pos:end="329:28">50</literal></expr>)</condition> <block pos:start="329:31" pos:end="345:9">{<block_content pos:start="331:13" pos:end="343:13">

            <expr_stmt pos:start="331:13" pos:end="331:82"><expr pos:start="331:13" pos:end="331:81"><name pos:start="331:13" pos:end="331:36"><name pos:start="331:13" pos:end="331:13">s</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:20">plane</name><index pos:start="331:21" pos:end="331:36">[<expr pos:start="331:22" pos:end="331:35"><name pos:start="331:22" pos:end="331:35"><name pos:start="331:22" pos:end="331:22">s</name><operator pos:start="331:23" pos:end="331:24">-&gt;</operator><name pos:start="331:25" pos:end="331:35">channel_num</name></name></expr>]</index></name><operator pos:start="331:37" pos:end="331:37">.</operator><name pos:start="331:38" pos:end="331:67"><name pos:start="331:38" pos:end="331:41">band</name><index pos:start="331:42" pos:end="331:51">[<expr pos:start="331:43" pos:end="331:50"><name pos:start="331:43" pos:end="331:50"><name pos:start="331:43" pos:end="331:43">s</name><operator pos:start="331:44" pos:end="331:45">-&gt;</operator><name pos:start="331:46" pos:end="331:50">level</name></name></expr>]</index><index pos:start="331:52" pos:end="331:67">[<expr pos:start="331:53" pos:end="331:66"><name pos:start="331:53" pos:end="331:66"><name pos:start="331:53" pos:end="331:53">s</name><operator pos:start="331:54" pos:end="331:55">-&gt;</operator><name pos:start="331:56" pos:end="331:66">subband_num</name></name></expr>]</index></name><operator pos:start="331:68" pos:end="331:68">.</operator><name pos:start="331:69" pos:end="331:74">height</name> <operator pos:start="331:76" pos:end="331:76">=</operator> <name pos:start="331:78" pos:end="331:81">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:71"><expr pos:start="333:13" pos:end="333:70"><call pos:start="333:13" pos:end="333:70"><name pos:start="333:13" pos:end="333:18">av_log</name><argument_list pos:start="333:19" pos:end="333:70">(<argument pos:start="333:20" pos:end="333:24"><expr pos:start="333:20" pos:end="333:24"><name pos:start="333:20" pos:end="333:24">avctx</name></expr></argument>, <argument pos:start="333:27" pos:end="333:38"><expr pos:start="333:27" pos:end="333:38"><name pos:start="333:27" pos:end="333:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="333:41" pos:end="333:63"><expr pos:start="333:41" pos:end="333:63"><literal type="string" pos:start="333:41" pos:end="333:63">"Highpass height2 %i\n"</literal></expr></argument>, <argument pos:start="333:66" pos:end="333:69"><expr pos:start="333:66" pos:end="333:69"><name pos:start="333:66" pos:end="333:69">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="335:13" pos:end="343:13"><if pos:start="335:13" pos:end="343:13">if <condition pos:start="335:16" pos:end="335:25">(<expr pos:start="335:17" pos:end="335:24"><name pos:start="335:17" pos:end="335:20">data</name> <operator pos:start="335:22" pos:end="335:22">&lt;</operator> <literal type="number" pos:start="335:24" pos:end="335:24">3</literal></expr>)</condition> <block pos:start="335:27" pos:end="343:13">{<block_content pos:start="337:17" pos:end="341:22">

                <expr_stmt pos:start="337:17" pos:end="337:74"><expr pos:start="337:17" pos:end="337:73"><call pos:start="337:17" pos:end="337:73"><name pos:start="337:17" pos:end="337:22">av_log</name><argument_list pos:start="337:23" pos:end="337:73">(<argument pos:start="337:24" pos:end="337:28"><expr pos:start="337:24" pos:end="337:28"><name pos:start="337:24" pos:end="337:28">avctx</name></expr></argument>, <argument pos:start="337:31" pos:end="337:42"><expr pos:start="337:31" pos:end="337:42"><name pos:start="337:31" pos:end="337:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="337:45" pos:end="337:72"><expr pos:start="337:45" pos:end="337:72"><literal type="string" pos:start="337:45" pos:end="337:72">"Invalid highpass height2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:38"><expr pos:start="339:17" pos:end="339:37"><name pos:start="339:17" pos:end="339:19">ret</name> <operator pos:start="339:21" pos:end="339:21">=</operator> <call pos:start="339:23" pos:end="339:37"><name pos:start="339:23" pos:end="339:29">AVERROR</name><argument_list pos:start="339:30" pos:end="339:37">(<argument pos:start="339:31" pos:end="339:36"><expr pos:start="339:31" pos:end="339:36"><name pos:start="339:31" pos:end="339:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="341:17" pos:end="341:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="345:11" pos:end="351:9">else if <condition pos:start="345:19" pos:end="345:29">(<expr pos:start="345:20" pos:end="345:28"><name pos:start="345:20" pos:end="345:22">tag</name> <operator pos:start="345:24" pos:end="345:25">==</operator> <literal type="number" pos:start="345:27" pos:end="345:28">71</literal></expr>)</condition> <block pos:start="345:31" pos:end="351:9">{<block_content pos:start="347:13" pos:end="349:70">

            <expr_stmt pos:start="347:13" pos:end="347:31"><expr pos:start="347:13" pos:end="347:30"><name pos:start="347:13" pos:end="347:23"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:23">codebook</name></name> <operator pos:start="347:25" pos:end="347:25">=</operator> <name pos:start="347:27" pos:end="347:30">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:70"><expr pos:start="349:13" pos:end="349:69"><call pos:start="349:13" pos:end="349:69"><name pos:start="349:13" pos:end="349:18">av_log</name><argument_list pos:start="349:19" pos:end="349:69">(<argument pos:start="349:20" pos:end="349:24"><expr pos:start="349:20" pos:end="349:24"><name pos:start="349:20" pos:end="349:24">avctx</name></expr></argument>, <argument pos:start="349:27" pos:end="349:38"><expr pos:start="349:27" pos:end="349:38"><name pos:start="349:27" pos:end="349:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="349:41" pos:end="349:55"><expr pos:start="349:41" pos:end="349:55"><literal type="string" pos:start="349:41" pos:end="349:55">"Codebook %i\n"</literal></expr></argument>, <argument pos:start="349:58" pos:end="349:68"><expr pos:start="349:58" pos:end="349:68"><name pos:start="349:58" pos:end="349:68"><name pos:start="349:58" pos:end="349:58">s</name><operator pos:start="349:59" pos:end="349:60">-&gt;</operator><name pos:start="349:61" pos:end="349:68">codebook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="351:11" pos:end="357:9">else if <condition pos:start="351:19" pos:end="351:29">(<expr pos:start="351:20" pos:end="351:28"><name pos:start="351:20" pos:end="351:22">tag</name> <operator pos:start="351:24" pos:end="351:25">==</operator> <literal type="number" pos:start="351:27" pos:end="351:28">72</literal></expr>)</condition> <block pos:start="351:31" pos:end="357:9">{<block_content pos:start="353:13" pos:end="355:77">

            <expr_stmt pos:start="353:13" pos:end="353:31"><expr pos:start="353:13" pos:end="353:30"><name pos:start="353:13" pos:end="353:23"><name pos:start="353:13" pos:end="353:13">s</name><operator pos:start="353:14" pos:end="353:15">-&gt;</operator><name pos:start="353:16" pos:end="353:23">codebook</name></name> <operator pos:start="353:25" pos:end="353:25">=</operator> <name pos:start="353:27" pos:end="353:30">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="355:13" pos:end="355:77"><expr pos:start="355:13" pos:end="355:76"><call pos:start="355:13" pos:end="355:76"><name pos:start="355:13" pos:end="355:18">av_log</name><argument_list pos:start="355:19" pos:end="355:76">(<argument pos:start="355:20" pos:end="355:24"><expr pos:start="355:20" pos:end="355:24"><name pos:start="355:20" pos:end="355:24">avctx</name></expr></argument>, <argument pos:start="355:27" pos:end="355:38"><expr pos:start="355:27" pos:end="355:38"><name pos:start="355:27" pos:end="355:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="355:41" pos:end="355:62"><expr pos:start="355:41" pos:end="355:62"><literal type="string" pos:start="355:41" pos:end="355:62">"Other codebook? %i\n"</literal></expr></argument>, <argument pos:start="355:65" pos:end="355:75"><expr pos:start="355:65" pos:end="355:75"><name pos:start="355:65" pos:end="355:75"><name pos:start="355:65" pos:end="355:65">s</name><operator pos:start="355:66" pos:end="355:67">-&gt;</operator><name pos:start="355:68" pos:end="355:75">codebook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="357:11" pos:end="373:9">else if <condition pos:start="357:19" pos:end="357:29">(<expr pos:start="357:20" pos:end="357:28"><name pos:start="357:20" pos:end="357:22">tag</name> <operator pos:start="357:24" pos:end="357:25">==</operator> <literal type="number" pos:start="357:27" pos:end="357:28">70</literal></expr>)</condition> <block pos:start="357:31" pos:end="373:9">{<block_content pos:start="359:13" pos:end="371:13">

            <expr_stmt pos:start="359:13" pos:end="359:85"><expr pos:start="359:13" pos:end="359:84"><call pos:start="359:13" pos:end="359:84"><name pos:start="359:13" pos:end="359:18">av_log</name><argument_list pos:start="359:19" pos:end="359:84">(<argument pos:start="359:20" pos:end="359:24"><expr pos:start="359:20" pos:end="359:24"><name pos:start="359:20" pos:end="359:24">avctx</name></expr></argument>, <argument pos:start="359:27" pos:end="359:38"><expr pos:start="359:27" pos:end="359:38"><name pos:start="359:27" pos:end="359:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="359:41" pos:end="359:77"><expr pos:start="359:41" pos:end="359:77"><literal type="string" pos:start="359:41" pos:end="359:77">"Subsampling or bit-depth flag? %i\n"</literal></expr></argument>, <argument pos:start="359:80" pos:end="359:83"><expr pos:start="359:80" pos:end="359:83"><name pos:start="359:80" pos:end="359:83">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:26"><expr pos:start="361:13" pos:end="361:25"><name pos:start="361:13" pos:end="361:18"><name pos:start="361:13" pos:end="361:13">s</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:18">bpc</name></name> <operator pos:start="361:20" pos:end="361:20">=</operator> <name pos:start="361:22" pos:end="361:25">data</name></expr>;</expr_stmt>

            <if_stmt pos:start="363:13" pos:end="371:13"><if pos:start="363:13" pos:end="371:13">if <condition pos:start="363:16" pos:end="363:48">(<expr pos:start="363:17" pos:end="363:47"><operator pos:start="363:17" pos:end="363:17">!</operator><operator pos:start="363:18" pos:end="363:18">(</operator><name pos:start="363:19" pos:end="363:24"><name pos:start="363:19" pos:end="363:19">s</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:24">bpc</name></name> <operator pos:start="363:26" pos:end="363:27">==</operator> <literal type="number" pos:start="363:29" pos:end="363:30">10</literal> <operator pos:start="363:32" pos:end="363:33">||</operator> <name pos:start="363:35" pos:end="363:40"><name pos:start="363:35" pos:end="363:35">s</name><operator pos:start="363:36" pos:end="363:37">-&gt;</operator><name pos:start="363:38" pos:end="363:40">bpc</name></name> <operator pos:start="363:42" pos:end="363:43">==</operator> <literal type="number" pos:start="363:45" pos:end="363:46">12</literal><operator pos:start="363:47" pos:end="363:47">)</operator></expr>)</condition> <block pos:start="363:50" pos:end="371:13">{<block_content pos:start="365:17" pos:end="369:22">

                <expr_stmt pos:start="365:17" pos:end="365:74"><expr pos:start="365:17" pos:end="365:73"><call pos:start="365:17" pos:end="365:73"><name pos:start="365:17" pos:end="365:22">av_log</name><argument_list pos:start="365:23" pos:end="365:73">(<argument pos:start="365:24" pos:end="365:28"><expr pos:start="365:24" pos:end="365:28"><name pos:start="365:24" pos:end="365:28">avctx</name></expr></argument>, <argument pos:start="365:31" pos:end="365:42"><expr pos:start="365:31" pos:end="365:42"><name pos:start="365:31" pos:end="365:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="365:45" pos:end="365:72"><expr pos:start="365:45" pos:end="365:72"><literal type="string" pos:start="365:45" pos:end="365:72">"Invalid bits per channel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:38"><expr pos:start="367:17" pos:end="367:37"><name pos:start="367:17" pos:end="367:19">ret</name> <operator pos:start="367:21" pos:end="367:21">=</operator> <call pos:start="367:23" pos:end="367:37"><name pos:start="367:23" pos:end="367:29">AVERROR</name><argument_list pos:start="367:30" pos:end="367:37">(<argument pos:start="367:31" pos:end="367:36"><expr pos:start="367:31" pos:end="367:36"><name pos:start="367:31" pos:end="367:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="369:17" pos:end="369:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="373:11" pos:end="401:9">else if <condition pos:start="373:19" pos:end="373:29">(<expr pos:start="373:20" pos:end="373:28"><name pos:start="373:20" pos:end="373:22">tag</name> <operator pos:start="373:24" pos:end="373:25">==</operator> <literal type="number" pos:start="373:27" pos:end="373:28">84</literal></expr>)</condition> <block pos:start="373:31" pos:end="401:9">{<block_content pos:start="375:13" pos:end="399:62">

            <expr_stmt pos:start="375:13" pos:end="375:69"><expr pos:start="375:13" pos:end="375:68"><call pos:start="375:13" pos:end="375:68"><name pos:start="375:13" pos:end="375:18">av_log</name><argument_list pos:start="375:19" pos:end="375:68">(<argument pos:start="375:20" pos:end="375:24"><expr pos:start="375:20" pos:end="375:24"><name pos:start="375:20" pos:end="375:24">avctx</name></expr></argument>, <argument pos:start="375:27" pos:end="375:38"><expr pos:start="375:27" pos:end="375:38"><name pos:start="375:27" pos:end="375:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="375:41" pos:end="375:61"><expr pos:start="375:41" pos:end="375:61"><literal type="string" pos:start="375:41" pos:end="375:61">"Sample format? %i\n"</literal></expr></argument>, <argument pos:start="375:64" pos:end="375:67"><expr pos:start="375:64" pos:end="375:67"><name pos:start="375:64" pos:end="375:67">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="377:13" pos:end="397:13"><if pos:start="377:13" pos:end="379:55">if <condition pos:start="377:16" pos:end="377:26">(<expr pos:start="377:17" pos:end="377:25"><name pos:start="377:17" pos:end="377:20">data</name> <operator pos:start="377:22" pos:end="377:23">==</operator> <literal type="number" pos:start="377:25" pos:end="377:25">1</literal></expr>)</condition><block type="pseudo" pos:start="379:17" pos:end="379:55"><block_content pos:start="379:17" pos:end="379:55">

                <expr_stmt pos:start="379:17" pos:end="379:55"><expr pos:start="379:17" pos:end="379:54"><name pos:start="379:17" pos:end="379:31"><name pos:start="379:17" pos:end="379:17">s</name><operator pos:start="379:18" pos:end="379:19">-&gt;</operator><name pos:start="379:20" pos:end="379:31">coded_format</name></name> <operator pos:start="379:33" pos:end="379:33">=</operator> <name pos:start="379:35" pos:end="379:54">AV_PIX_FMT_YUV422P10</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="381:13" pos:end="383:52">else if <condition pos:start="381:21" pos:end="381:31">(<expr pos:start="381:22" pos:end="381:30"><name pos:start="381:22" pos:end="381:25">data</name> <operator pos:start="381:27" pos:end="381:28">==</operator> <literal type="number" pos:start="381:30" pos:end="381:30">3</literal></expr>)</condition><block type="pseudo" pos:start="383:17" pos:end="383:52"><block_content pos:start="383:17" pos:end="383:52">

                <expr_stmt pos:start="383:17" pos:end="383:52"><expr pos:start="383:17" pos:end="383:51"><name pos:start="383:17" pos:end="383:31"><name pos:start="383:17" pos:end="383:17">s</name><operator pos:start="383:18" pos:end="383:19">-&gt;</operator><name pos:start="383:20" pos:end="383:31">coded_format</name></name> <operator pos:start="383:33" pos:end="383:33">=</operator> <name pos:start="383:35" pos:end="383:51">AV_PIX_FMT_GBRP12</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="385:13" pos:end="387:53">else if <condition pos:start="385:21" pos:end="385:31">(<expr pos:start="385:22" pos:end="385:30"><name pos:start="385:22" pos:end="385:25">data</name> <operator pos:start="385:27" pos:end="385:28">==</operator> <literal type="number" pos:start="385:30" pos:end="385:30">4</literal></expr>)</condition><block type="pseudo" pos:start="387:17" pos:end="387:53"><block_content pos:start="387:17" pos:end="387:53">

                <expr_stmt pos:start="387:17" pos:end="387:53"><expr pos:start="387:17" pos:end="387:52"><name pos:start="387:17" pos:end="387:31"><name pos:start="387:17" pos:end="387:17">s</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:31">coded_format</name></name> <operator pos:start="387:33" pos:end="387:33">=</operator> <name pos:start="387:35" pos:end="387:52">AV_PIX_FMT_GBRAP12</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="389:13" pos:end="397:13">else <block pos:start="389:18" pos:end="397:13">{<block_content pos:start="391:17" pos:end="395:22">

                <expr_stmt pos:start="391:17" pos:end="391:87"><expr pos:start="391:17" pos:end="391:86"><call pos:start="391:17" pos:end="391:86"><name pos:start="391:17" pos:end="391:45">avpriv_report_missing_feature</name><argument_list pos:start="391:46" pos:end="391:86">(<argument pos:start="391:47" pos:end="391:51"><expr pos:start="391:47" pos:end="391:51"><name pos:start="391:47" pos:end="391:51">avctx</name></expr></argument>, <argument pos:start="391:54" pos:end="391:79"><expr pos:start="391:54" pos:end="391:79"><literal type="string" pos:start="391:54" pos:end="391:73">"Sample format of %"</literal><name pos:start="391:74" pos:end="391:79">PRIu16</name></expr></argument>, <argument pos:start="391:82" pos:end="391:85"><expr pos:start="391:82" pos:end="391:85"><name pos:start="391:82" pos:end="391:85">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:43"><expr pos:start="393:17" pos:end="393:42"><name pos:start="393:17" pos:end="393:19">ret</name> <operator pos:start="393:21" pos:end="393:21">=</operator> <name pos:start="393:23" pos:end="393:42">AVERROR_PATCHWELCOME</name></expr>;</expr_stmt>

                <break pos:start="395:17" pos:end="395:22">break;</break>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:62"><expr pos:start="399:13" pos:end="399:61"><name pos:start="399:13" pos:end="399:18">planes</name> <operator pos:start="399:20" pos:end="399:20">=</operator> <call pos:start="399:22" pos:end="399:61"><name pos:start="399:22" pos:end="399:44">av_pix_fmt_count_planes</name><argument_list pos:start="399:45" pos:end="399:61">(<argument pos:start="399:46" pos:end="399:60"><expr pos:start="399:46" pos:end="399:60"><name pos:start="399:46" pos:end="399:60"><name pos:start="399:46" pos:end="399:46">s</name><operator pos:start="399:47" pos:end="399:48">-&gt;</operator><name pos:start="399:49" pos:end="399:60">coded_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="401:11" pos:end="403:80">else<block type="pseudo" pos:start="403:13" pos:end="403:80"><block_content pos:start="403:13" pos:end="403:80">

            <expr_stmt pos:start="403:13" pos:end="403:80"><expr pos:start="403:13" pos:end="403:79"><call pos:start="403:13" pos:end="403:79"><name pos:start="403:13" pos:end="403:18">av_log</name><argument_list pos:start="403:19" pos:end="403:79">(<argument pos:start="403:20" pos:end="403:24"><expr pos:start="403:20" pos:end="403:24"><name pos:start="403:20" pos:end="403:24">avctx</name></expr></argument>, <argument pos:start="403:27" pos:end="403:38"><expr pos:start="403:27" pos:end="403:38"><name pos:start="403:27" pos:end="403:38">AV_LOG_DEBUG</name></expr></argument>,  <argument pos:start="403:42" pos:end="403:67"><expr pos:start="403:42" pos:end="403:67"><literal type="string" pos:start="403:42" pos:end="403:67">"Unknown tag %i data %x\n"</literal></expr></argument>, <argument pos:start="403:70" pos:end="403:72"><expr pos:start="403:70" pos:end="403:72"><name pos:start="403:70" pos:end="403:72">tag</name></expr></argument>, <argument pos:start="403:75" pos:end="403:78"><expr pos:start="403:75" pos:end="403:78"><name pos:start="403:75" pos:end="403:78">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="407:9" pos:end="407:44">/* Some kind of end of header tag */</comment>

        <if_stmt pos:start="409:9" pos:end="455:9"><if pos:start="409:9" pos:end="455:9">if <condition pos:start="409:12" pos:end="411:47">(<expr pos:start="409:13" pos:end="411:46"><name pos:start="409:13" pos:end="409:15">tag</name> <operator pos:start="409:17" pos:end="409:18">==</operator> <literal type="number" pos:start="409:20" pos:end="409:20">4</literal> <operator pos:start="409:22" pos:end="409:23">&amp;&amp;</operator> <name pos:start="409:25" pos:end="409:28">data</name> <operator pos:start="409:30" pos:end="409:31">==</operator> <literal type="number" pos:start="409:33" pos:end="409:38">0x1a4a</literal> <operator pos:start="409:40" pos:end="409:41">&amp;&amp;</operator> <name pos:start="409:43" pos:end="409:56"><name pos:start="409:43" pos:end="409:43">s</name><operator pos:start="409:44" pos:end="409:45">-&gt;</operator><name pos:start="409:46" pos:end="409:56">coded_width</name></name> <operator pos:start="409:58" pos:end="409:59">&amp;&amp;</operator> <name pos:start="409:61" pos:end="409:75"><name pos:start="409:61" pos:end="409:61">s</name><operator pos:start="409:62" pos:end="409:63">-&gt;</operator><name pos:start="409:64" pos:end="409:75">coded_height</name></name> <operator pos:start="409:77" pos:end="409:78">&amp;&amp;</operator>

            <name pos:start="411:13" pos:end="411:27"><name pos:start="411:13" pos:end="411:13">s</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:27">coded_format</name></name> <operator pos:start="411:29" pos:end="411:30">!=</operator> <name pos:start="411:32" pos:end="411:46">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="411:49" pos:end="455:9">{<block_content pos:start="413:13" pos:end="453:27">

            <if_stmt pos:start="413:13" pos:end="427:13"><if pos:start="413:13" pos:end="427:13">if <condition pos:start="413:16" pos:end="415:47">(<expr pos:start="413:17" pos:end="415:46"><name pos:start="413:17" pos:end="413:26"><name pos:start="413:17" pos:end="413:17">s</name><operator pos:start="413:18" pos:end="413:19">-&gt;</operator><name pos:start="413:20" pos:end="413:26">a_width</name></name> <operator pos:start="413:28" pos:end="413:29">!=</operator> <name pos:start="413:31" pos:end="413:44"><name pos:start="413:31" pos:end="413:31">s</name><operator pos:start="413:32" pos:end="413:33">-&gt;</operator><name pos:start="413:34" pos:end="413:44">coded_width</name></name> <operator pos:start="413:46" pos:end="413:47">||</operator> <name pos:start="413:49" pos:end="413:59"><name pos:start="413:49" pos:end="413:49">s</name><operator pos:start="413:50" pos:end="413:51">-&gt;</operator><name pos:start="413:52" pos:end="413:59">a_height</name></name> <operator pos:start="413:61" pos:end="413:62">!=</operator> <name pos:start="413:64" pos:end="413:78"><name pos:start="413:64" pos:end="413:64">s</name><operator pos:start="413:65" pos:end="413:66">-&gt;</operator><name pos:start="413:67" pos:end="413:78">coded_height</name></name> <operator pos:start="413:80" pos:end="413:81">||</operator>

                <name pos:start="415:17" pos:end="415:27"><name pos:start="415:17" pos:end="415:17">s</name><operator pos:start="415:18" pos:end="415:19">-&gt;</operator><name pos:start="415:20" pos:end="415:27">a_format</name></name> <operator pos:start="415:29" pos:end="415:30">!=</operator> <name pos:start="415:32" pos:end="415:46"><name pos:start="415:32" pos:end="415:32">s</name><operator pos:start="415:33" pos:end="415:34">-&gt;</operator><name pos:start="415:35" pos:end="415:46">coded_format</name></name></expr>)</condition> <block pos:start="415:49" pos:end="427:13">{<block_content pos:start="417:17" pos:end="425:17">

                <expr_stmt pos:start="417:17" pos:end="417:36"><expr pos:start="417:17" pos:end="417:35"><call pos:start="417:17" pos:end="417:35"><name pos:start="417:17" pos:end="417:28">free_buffers</name><argument_list pos:start="417:29" pos:end="417:35">(<argument pos:start="417:30" pos:end="417:34"><expr pos:start="417:30" pos:end="417:34"><name pos:start="417:30" pos:end="417:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="419:17" pos:end="425:17"><if pos:start="419:17" pos:end="425:17">if <condition pos:start="419:20" pos:end="419:53">(<expr pos:start="419:21" pos:end="419:52"><operator pos:start="419:21" pos:end="419:21">(</operator><name pos:start="419:22" pos:end="419:24">ret</name> <operator pos:start="419:26" pos:end="419:26">=</operator> <call pos:start="419:28" pos:end="419:47"><name pos:start="419:28" pos:end="419:40">alloc_buffers</name><argument_list pos:start="419:41" pos:end="419:47">(<argument pos:start="419:42" pos:end="419:46"><expr pos:start="419:42" pos:end="419:46"><name pos:start="419:42" pos:end="419:46">avctx</name></expr></argument>)</argument_list></call><operator pos:start="419:48" pos:end="419:48">)</operator> <operator pos:start="419:50" pos:end="419:50">&lt;</operator> <literal type="number" pos:start="419:52" pos:end="419:52">0</literal></expr>)</condition> <block pos:start="419:55" pos:end="425:17">{<block_content pos:start="421:21" pos:end="423:31">

                    <expr_stmt pos:start="421:21" pos:end="421:40"><expr pos:start="421:21" pos:end="421:39"><call pos:start="421:21" pos:end="421:39"><name pos:start="421:21" pos:end="421:32">free_buffers</name><argument_list pos:start="421:33" pos:end="421:39">(<argument pos:start="421:34" pos:end="421:38"><expr pos:start="421:34" pos:end="421:38"><name pos:start="421:34" pos:end="421:38">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="423:21" pos:end="423:31">return <expr pos:start="423:28" pos:end="423:30"><name pos:start="423:28" pos:end="423:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:76"><expr pos:start="429:13" pos:end="429:75"><name pos:start="429:13" pos:end="429:15">ret</name> <operator pos:start="429:17" pos:end="429:17">=</operator> <call pos:start="429:19" pos:end="429:75"><name pos:start="429:19" pos:end="429:35">ff_set_dimensions</name><argument_list pos:start="429:36" pos:end="429:75">(<argument pos:start="429:37" pos:end="429:41"><expr pos:start="429:37" pos:end="429:41"><name pos:start="429:37" pos:end="429:41">avctx</name></expr></argument>, <argument pos:start="429:44" pos:end="429:57"><expr pos:start="429:44" pos:end="429:57"><name pos:start="429:44" pos:end="429:57"><name pos:start="429:44" pos:end="429:44">s</name><operator pos:start="429:45" pos:end="429:46">-&gt;</operator><name pos:start="429:47" pos:end="429:57">coded_width</name></name></expr></argument>, <argument pos:start="429:60" pos:end="429:74"><expr pos:start="429:60" pos:end="429:74"><name pos:start="429:60" pos:end="429:74"><name pos:start="429:60" pos:end="429:60">s</name><operator pos:start="429:61" pos:end="429:62">-&gt;</operator><name pos:start="429:63" pos:end="429:74">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="431:13" pos:end="433:27"><if pos:start="431:13" pos:end="433:27">if <condition pos:start="431:16" pos:end="431:24">(<expr pos:start="431:17" pos:end="431:23"><name pos:start="431:17" pos:end="431:19">ret</name> <operator pos:start="431:21" pos:end="431:21">&lt;</operator> <literal type="number" pos:start="431:23" pos:end="431:23">0</literal></expr>)</condition><block type="pseudo" pos:start="433:17" pos:end="433:27"><block_content pos:start="433:17" pos:end="433:27">

                <return pos:start="433:17" pos:end="433:27">return <expr pos:start="433:24" pos:end="433:26"><name pos:start="433:24" pos:end="433:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="435:13" pos:end="437:32"><expr pos:start="435:13" pos:end="437:31"><name pos:start="435:13" pos:end="435:26"><name pos:start="435:13" pos:end="435:17">frame</name><operator pos:start="435:18" pos:end="435:18">.</operator><name pos:start="435:19" pos:end="435:19">f</name><operator pos:start="435:20" pos:end="435:21">-&gt;</operator><name pos:start="435:22" pos:end="435:26">width</name></name> <operator pos:start="435:28" pos:end="435:28">=</operator>

            <name pos:start="437:13" pos:end="437:27"><name pos:start="437:13" pos:end="437:17">frame</name><operator pos:start="437:18" pos:end="437:18">.</operator><name pos:start="437:19" pos:end="437:19">f</name><operator pos:start="437:20" pos:end="437:21">-&gt;</operator><name pos:start="437:22" pos:end="437:27">height</name></name> <operator pos:start="437:29" pos:end="437:29">=</operator> <literal type="number" pos:start="437:31" pos:end="437:31">0</literal></expr>;</expr_stmt>



            <if_stmt pos:start="441:13" pos:end="443:27"><if pos:start="441:13" pos:end="443:27">if <condition pos:start="441:16" pos:end="441:67">(<expr pos:start="441:17" pos:end="441:66"><operator pos:start="441:17" pos:end="441:17">(</operator><name pos:start="441:18" pos:end="441:20">ret</name> <operator pos:start="441:22" pos:end="441:22">=</operator> <call pos:start="441:24" pos:end="441:61"><name pos:start="441:24" pos:end="441:43">ff_thread_get_buffer</name><argument_list pos:start="441:44" pos:end="441:61">(<argument pos:start="441:45" pos:end="441:49"><expr pos:start="441:45" pos:end="441:49"><name pos:start="441:45" pos:end="441:49">avctx</name></expr></argument>, <argument pos:start="441:52" pos:end="441:57"><expr pos:start="441:52" pos:end="441:57"><operator pos:start="441:52" pos:end="441:52">&amp;</operator><name pos:start="441:53" pos:end="441:57">frame</name></expr></argument>, <argument pos:start="441:60" pos:end="441:60"><expr pos:start="441:60" pos:end="441:60"><literal type="number" pos:start="441:60" pos:end="441:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="441:62" pos:end="441:62">)</operator> <operator pos:start="441:64" pos:end="441:64">&lt;</operator> <literal type="number" pos:start="441:66" pos:end="441:66">0</literal></expr>)</condition><block type="pseudo" pos:start="443:17" pos:end="443:27"><block_content pos:start="443:17" pos:end="443:27">

                <return pos:start="443:17" pos:end="443:27">return <expr pos:start="443:24" pos:end="443:26"><name pos:start="443:24" pos:end="443:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="447:13" pos:end="447:31"><expr pos:start="447:13" pos:end="447:30"><name pos:start="447:13" pos:end="447:26"><name pos:start="447:13" pos:end="447:13">s</name><operator pos:start="447:14" pos:end="447:15">-&gt;</operator><name pos:start="447:16" pos:end="447:26">coded_width</name></name> <operator pos:start="447:28" pos:end="447:28">=</operator> <literal type="number" pos:start="447:30" pos:end="447:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:32"><expr pos:start="449:13" pos:end="449:31"><name pos:start="449:13" pos:end="449:27"><name pos:start="449:13" pos:end="449:13">s</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:27">coded_height</name></name> <operator pos:start="449:29" pos:end="449:29">=</operator> <literal type="number" pos:start="449:31" pos:end="449:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:46"><expr pos:start="451:13" pos:end="451:45"><name pos:start="451:13" pos:end="451:27"><name pos:start="451:13" pos:end="451:13">s</name><operator pos:start="451:14" pos:end="451:15">-&gt;</operator><name pos:start="451:16" pos:end="451:27">coded_format</name></name> <operator pos:start="451:29" pos:end="451:29">=</operator> <name pos:start="451:31" pos:end="451:45">AV_PIX_FMT_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:27"><expr pos:start="453:13" pos:end="453:26"><name pos:start="453:13" pos:end="453:22">got_buffer</name> <operator pos:start="453:24" pos:end="453:24">=</operator> <literal type="number" pos:start="453:26" pos:end="453:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="457:9" pos:end="457:77"><expr pos:start="457:9" pos:end="457:76"><name pos:start="457:9" pos:end="457:18">coeff_data</name> <operator pos:start="457:20" pos:end="457:20">=</operator> <name pos:start="457:22" pos:end="457:45"><name pos:start="457:22" pos:end="457:22">s</name><operator pos:start="457:23" pos:end="457:24">-&gt;</operator><name pos:start="457:25" pos:end="457:29">plane</name><index pos:start="457:30" pos:end="457:45">[<expr pos:start="457:31" pos:end="457:44"><name pos:start="457:31" pos:end="457:44"><name pos:start="457:31" pos:end="457:31">s</name><operator pos:start="457:32" pos:end="457:33">-&gt;</operator><name pos:start="457:34" pos:end="457:44">channel_num</name></name></expr>]</index></name><operator pos:start="457:46" pos:end="457:46">.</operator><name pos:start="457:47" pos:end="457:76"><name pos:start="457:47" pos:end="457:53">subband</name><index pos:start="457:54" pos:end="457:76">[<expr pos:start="457:55" pos:end="457:75"><name pos:start="457:55" pos:end="457:75"><name pos:start="457:55" pos:end="457:55">s</name><operator pos:start="457:56" pos:end="457:57">-&gt;</operator><name pos:start="457:58" pos:end="457:75">subband_num_actual</name></name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="461:9" pos:end="461:34">/* Lowpass coefficients */</comment>

        <if_stmt pos:start="463:9" pos:end="539:9"><if pos:start="463:9" pos:end="539:9">if <condition pos:start="463:12" pos:end="463:67">(<expr pos:start="463:13" pos:end="463:66"><name pos:start="463:13" pos:end="463:15">tag</name> <operator pos:start="463:17" pos:end="463:18">==</operator> <literal type="number" pos:start="463:20" pos:end="463:20">4</literal> <operator pos:start="463:22" pos:end="463:23">&amp;&amp;</operator> <name pos:start="463:25" pos:end="463:28">data</name> <operator pos:start="463:30" pos:end="463:31">==</operator> <literal type="number" pos:start="463:33" pos:end="463:37">0xf0f</literal> <operator pos:start="463:39" pos:end="463:40">&amp;&amp;</operator> <name pos:start="463:42" pos:end="463:51"><name pos:start="463:42" pos:end="463:42">s</name><operator pos:start="463:43" pos:end="463:44">-&gt;</operator><name pos:start="463:45" pos:end="463:51">a_width</name></name> <operator pos:start="463:53" pos:end="463:54">&amp;&amp;</operator> <name pos:start="463:56" pos:end="463:66"><name pos:start="463:56" pos:end="463:56">s</name><operator pos:start="463:57" pos:end="463:58">-&gt;</operator><name pos:start="463:59" pos:end="463:66">a_height</name></name></expr>)</condition> <block pos:start="463:69" pos:end="539:9">{<block_content pos:start="465:13" pos:end="537:101">

            <decl_stmt pos:start="465:13" pos:end="465:76"><decl pos:start="465:13" pos:end="465:75"><type pos:start="465:13" pos:end="465:15"><name pos:start="465:13" pos:end="465:15">int</name></type> <name pos:start="465:17" pos:end="465:30">lowpass_height</name> <init pos:start="465:32" pos:end="465:75">= <expr pos:start="465:34" pos:end="465:75"><name pos:start="465:34" pos:end="465:57"><name pos:start="465:34" pos:end="465:34">s</name><operator pos:start="465:35" pos:end="465:36">-&gt;</operator><name pos:start="465:37" pos:end="465:41">plane</name><index pos:start="465:42" pos:end="465:57">[<expr pos:start="465:43" pos:end="465:56"><name pos:start="465:43" pos:end="465:56"><name pos:start="465:43" pos:end="465:43">s</name><operator pos:start="465:44" pos:end="465:45">-&gt;</operator><name pos:start="465:46" pos:end="465:56">channel_num</name></name></expr>]</index></name><operator pos:start="465:58" pos:end="465:58">.</operator><name pos:start="465:59" pos:end="465:68"><name pos:start="465:59" pos:end="465:62">band</name><index pos:start="465:63" pos:end="465:65">[<expr pos:start="465:64" pos:end="465:64"><literal type="number" pos:start="465:64" pos:end="465:64">0</literal></expr>]</index><index pos:start="465:66" pos:end="465:68">[<expr pos:start="465:67" pos:end="465:67"><literal type="number" pos:start="465:67" pos:end="465:67">0</literal></expr>]</index></name><operator pos:start="465:69" pos:end="465:69">.</operator><name pos:start="465:70" pos:end="465:75">height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="467:13" pos:end="467:75"><decl pos:start="467:13" pos:end="467:74"><type pos:start="467:13" pos:end="467:15"><name pos:start="467:13" pos:end="467:15">int</name></type> <name pos:start="467:17" pos:end="467:29">lowpass_width</name>  <init pos:start="467:32" pos:end="467:74">= <expr pos:start="467:34" pos:end="467:74"><name pos:start="467:34" pos:end="467:57"><name pos:start="467:34" pos:end="467:34">s</name><operator pos:start="467:35" pos:end="467:36">-&gt;</operator><name pos:start="467:37" pos:end="467:41">plane</name><index pos:start="467:42" pos:end="467:57">[<expr pos:start="467:43" pos:end="467:56"><name pos:start="467:43" pos:end="467:56"><name pos:start="467:43" pos:end="467:43">s</name><operator pos:start="467:44" pos:end="467:45">-&gt;</operator><name pos:start="467:46" pos:end="467:56">channel_num</name></name></expr>]</index></name><operator pos:start="467:58" pos:end="467:58">.</operator><name pos:start="467:59" pos:end="467:68"><name pos:start="467:59" pos:end="467:62">band</name><index pos:start="467:63" pos:end="467:65">[<expr pos:start="467:64" pos:end="467:64"><literal type="number" pos:start="467:64" pos:end="467:64">0</literal></expr>]</index><index pos:start="467:66" pos:end="467:68">[<expr pos:start="467:67" pos:end="467:67"><literal type="number" pos:start="467:67" pos:end="467:67">0</literal></expr>]</index></name><operator pos:start="467:69" pos:end="467:69">.</operator><name pos:start="467:70" pos:end="467:74">width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="469:13" pos:end="469:80"><decl pos:start="469:13" pos:end="469:79"><type pos:start="469:13" pos:end="469:15"><name pos:start="469:13" pos:end="469:15">int</name></type> <name pos:start="469:17" pos:end="469:32">lowpass_a_height</name> <init pos:start="469:34" pos:end="469:79">= <expr pos:start="469:36" pos:end="469:79"><name pos:start="469:36" pos:end="469:59"><name pos:start="469:36" pos:end="469:36">s</name><operator pos:start="469:37" pos:end="469:38">-&gt;</operator><name pos:start="469:39" pos:end="469:43">plane</name><index pos:start="469:44" pos:end="469:59">[<expr pos:start="469:45" pos:end="469:58"><name pos:start="469:45" pos:end="469:58"><name pos:start="469:45" pos:end="469:45">s</name><operator pos:start="469:46" pos:end="469:47">-&gt;</operator><name pos:start="469:48" pos:end="469:58">channel_num</name></name></expr>]</index></name><operator pos:start="469:60" pos:end="469:60">.</operator><name pos:start="469:61" pos:end="469:70"><name pos:start="469:61" pos:end="469:64">band</name><index pos:start="469:65" pos:end="469:67">[<expr pos:start="469:66" pos:end="469:66"><literal type="number" pos:start="469:66" pos:end="469:66">0</literal></expr>]</index><index pos:start="469:68" pos:end="469:70">[<expr pos:start="469:69" pos:end="469:69"><literal type="number" pos:start="469:69" pos:end="469:69">0</literal></expr>]</index></name><operator pos:start="469:71" pos:end="469:71">.</operator><name pos:start="469:72" pos:end="469:79">a_height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="471:13" pos:end="471:79"><decl pos:start="471:13" pos:end="471:78"><type pos:start="471:13" pos:end="471:15"><name pos:start="471:13" pos:end="471:15">int</name></type> <name pos:start="471:17" pos:end="471:31">lowpass_a_width</name>  <init pos:start="471:34" pos:end="471:78">= <expr pos:start="471:36" pos:end="471:78"><name pos:start="471:36" pos:end="471:59"><name pos:start="471:36" pos:end="471:36">s</name><operator pos:start="471:37" pos:end="471:38">-&gt;</operator><name pos:start="471:39" pos:end="471:43">plane</name><index pos:start="471:44" pos:end="471:59">[<expr pos:start="471:45" pos:end="471:58"><name pos:start="471:45" pos:end="471:58"><name pos:start="471:45" pos:end="471:45">s</name><operator pos:start="471:46" pos:end="471:47">-&gt;</operator><name pos:start="471:48" pos:end="471:58">channel_num</name></name></expr>]</index></name><operator pos:start="471:60" pos:end="471:60">.</operator><name pos:start="471:61" pos:end="471:70"><name pos:start="471:61" pos:end="471:64">band</name><index pos:start="471:65" pos:end="471:67">[<expr pos:start="471:66" pos:end="471:66"><literal type="number" pos:start="471:66" pos:end="471:66">0</literal></expr>]</index><index pos:start="471:68" pos:end="471:70">[<expr pos:start="471:69" pos:end="471:69"><literal type="number" pos:start="471:69" pos:end="471:69">0</literal></expr>]</index></name><operator pos:start="471:71" pos:end="471:71">.</operator><name pos:start="471:72" pos:end="471:78">a_width</name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="475:13" pos:end="483:13"><if pos:start="475:13" pos:end="483:13">if <condition pos:start="475:16" pos:end="475:28">(<expr pos:start="475:17" pos:end="475:27"><operator pos:start="475:17" pos:end="475:17">!</operator><name pos:start="475:18" pos:end="475:27">got_buffer</name></expr>)</condition> <block pos:start="475:30" pos:end="483:13">{<block_content pos:start="477:17" pos:end="481:25">

                <expr_stmt pos:start="477:17" pos:end="477:76"><expr pos:start="477:17" pos:end="477:75"><call pos:start="477:17" pos:end="477:75"><name pos:start="477:17" pos:end="477:22">av_log</name><argument_list pos:start="477:23" pos:end="477:75">(<argument pos:start="477:24" pos:end="477:28"><expr pos:start="477:24" pos:end="477:28"><name pos:start="477:24" pos:end="477:28">avctx</name></expr></argument>, <argument pos:start="477:31" pos:end="477:42"><expr pos:start="477:31" pos:end="477:42"><name pos:start="477:31" pos:end="477:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="477:45" pos:end="477:74"><expr pos:start="477:45" pos:end="477:74"><literal type="string" pos:start="477:45" pos:end="477:74">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="479:17" pos:end="479:38"><expr pos:start="479:17" pos:end="479:37"><name pos:start="479:17" pos:end="479:19">ret</name> <operator pos:start="479:21" pos:end="479:21">=</operator> <call pos:start="479:23" pos:end="479:37"><name pos:start="479:23" pos:end="479:29">AVERROR</name><argument_list pos:start="479:30" pos:end="479:37">(<argument pos:start="479:31" pos:end="479:36"><expr pos:start="479:31" pos:end="479:36"><name pos:start="479:31" pos:end="479:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="481:17" pos:end="481:25">goto <name pos:start="481:22" pos:end="481:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="487:13" pos:end="497:13"><if pos:start="487:13" pos:end="497:13">if <condition pos:start="487:16" pos:end="489:103">(<expr pos:start="487:17" pos:end="489:102"><name pos:start="487:17" pos:end="487:30">lowpass_height</name> <operator pos:start="487:32" pos:end="487:32">&gt;</operator> <name pos:start="487:34" pos:end="487:49">lowpass_a_height</name> <operator pos:start="487:51" pos:end="487:52">||</operator> <name pos:start="487:54" pos:end="487:66">lowpass_width</name> <operator pos:start="487:68" pos:end="487:68">&gt;</operator> <name pos:start="487:70" pos:end="487:84">lowpass_a_width</name> <operator pos:start="487:86" pos:end="487:87">||</operator>

                <name pos:start="489:17" pos:end="489:31">lowpass_a_width</name> <operator pos:start="489:33" pos:end="489:33">*</operator> <name pos:start="489:35" pos:end="489:50">lowpass_a_height</name> <operator pos:start="489:52" pos:end="489:52">*</operator> <sizeof pos:start="489:54" pos:end="489:68">sizeof<argument_list pos:start="489:60" pos:end="489:68">(<argument pos:start="489:61" pos:end="489:67"><expr pos:start="489:61" pos:end="489:67"><name pos:start="489:61" pos:end="489:67">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="489:70" pos:end="489:70">&gt;</operator> <call pos:start="489:72" pos:end="489:102"><name pos:start="489:72" pos:end="489:97">bytestream2_get_bytes_left</name><argument_list pos:start="489:98" pos:end="489:102">(<argument pos:start="489:99" pos:end="489:101"><expr pos:start="489:99" pos:end="489:101"><operator pos:start="489:99" pos:end="489:99">&amp;</operator><name pos:start="489:100" pos:end="489:101">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="489:105" pos:end="497:13">{<block_content pos:start="491:17" pos:end="495:25">

                <expr_stmt pos:start="491:17" pos:end="491:79"><expr pos:start="491:17" pos:end="491:78"><call pos:start="491:17" pos:end="491:78"><name pos:start="491:17" pos:end="491:22">av_log</name><argument_list pos:start="491:23" pos:end="491:78">(<argument pos:start="491:24" pos:end="491:28"><expr pos:start="491:24" pos:end="491:28"><name pos:start="491:24" pos:end="491:28">avctx</name></expr></argument>, <argument pos:start="491:31" pos:end="491:42"><expr pos:start="491:31" pos:end="491:42"><name pos:start="491:31" pos:end="491:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="491:45" pos:end="491:77"><expr pos:start="491:45" pos:end="491:77"><literal type="string" pos:start="491:45" pos:end="491:77">"Too many lowpass coefficients\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="493:38"><expr pos:start="493:17" pos:end="493:37"><name pos:start="493:17" pos:end="493:19">ret</name> <operator pos:start="493:21" pos:end="493:21">=</operator> <call pos:start="493:23" pos:end="493:37"><name pos:start="493:23" pos:end="493:29">AVERROR</name><argument_list pos:start="493:30" pos:end="493:37">(<argument pos:start="493:31" pos:end="493:36"><expr pos:start="493:31" pos:end="493:36"><name pos:start="493:31" pos:end="493:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="495:17" pos:end="495:25">goto <name pos:start="495:22" pos:end="495:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="501:13" pos:end="501:149"><expr pos:start="501:13" pos:end="501:148"><call pos:start="501:13" pos:end="501:148"><name pos:start="501:13" pos:end="501:18">av_log</name><argument_list pos:start="501:19" pos:end="501:148">(<argument pos:start="501:20" pos:end="501:24"><expr pos:start="501:20" pos:end="501:24"><name pos:start="501:20" pos:end="501:24">avctx</name></expr></argument>, <argument pos:start="501:27" pos:end="501:38"><expr pos:start="501:27" pos:end="501:38"><name pos:start="501:27" pos:end="501:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="501:41" pos:end="501:100"><expr pos:start="501:41" pos:end="501:100"><literal type="string" pos:start="501:41" pos:end="501:100">"Start of lowpass coeffs component %d height:%d, width:%d\n"</literal></expr></argument>, <argument pos:start="501:103" pos:end="501:116"><expr pos:start="501:103" pos:end="501:116"><name pos:start="501:103" pos:end="501:116"><name pos:start="501:103" pos:end="501:103">s</name><operator pos:start="501:104" pos:end="501:105">-&gt;</operator><name pos:start="501:106" pos:end="501:116">channel_num</name></name></expr></argument>, <argument pos:start="501:119" pos:end="501:132"><expr pos:start="501:119" pos:end="501:132"><name pos:start="501:119" pos:end="501:132">lowpass_height</name></expr></argument>, <argument pos:start="501:135" pos:end="501:147"><expr pos:start="501:135" pos:end="501:147"><name pos:start="501:135" pos:end="501:147">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="503:13" pos:end="513:13">for <control pos:start="503:17" pos:end="503:48">(<init pos:start="503:18" pos:end="503:23"><expr pos:start="503:18" pos:end="503:22"><name pos:start="503:18" pos:end="503:18">i</name> <operator pos:start="503:20" pos:end="503:20">=</operator> <literal type="number" pos:start="503:22" pos:end="503:22">0</literal></expr>;</init> <condition pos:start="503:25" pos:end="503:43"><expr pos:start="503:25" pos:end="503:42"><name pos:start="503:25" pos:end="503:25">i</name> <operator pos:start="503:27" pos:end="503:27">&lt;</operator> <name pos:start="503:29" pos:end="503:42">lowpass_height</name></expr>;</condition> <incr pos:start="503:45" pos:end="503:47"><expr pos:start="503:45" pos:end="503:47"><name pos:start="503:45" pos:end="503:45">i</name><operator pos:start="503:46" pos:end="503:47">++</operator></expr></incr>)</control> <block pos:start="503:50" pos:end="513:13">{<block_content pos:start="505:17" pos:end="511:44">

                <for pos:start="505:17" pos:end="507:63">for <control pos:start="505:21" pos:end="505:51">(<init pos:start="505:22" pos:end="505:27"><expr pos:start="505:22" pos:end="505:26"><name pos:start="505:22" pos:end="505:22">j</name> <operator pos:start="505:24" pos:end="505:24">=</operator> <literal type="number" pos:start="505:26" pos:end="505:26">0</literal></expr>;</init> <condition pos:start="505:29" pos:end="505:46"><expr pos:start="505:29" pos:end="505:45"><name pos:start="505:29" pos:end="505:29">j</name> <operator pos:start="505:31" pos:end="505:31">&lt;</operator> <name pos:start="505:33" pos:end="505:45">lowpass_width</name></expr>;</condition> <incr pos:start="505:48" pos:end="505:50"><expr pos:start="505:48" pos:end="505:50"><name pos:start="505:48" pos:end="505:48">j</name><operator pos:start="505:49" pos:end="505:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="507:21" pos:end="507:63"><block_content pos:start="507:21" pos:end="507:63">

                    <expr_stmt pos:start="507:21" pos:end="507:63"><expr pos:start="507:21" pos:end="507:62"><name pos:start="507:21" pos:end="507:33"><name pos:start="507:21" pos:end="507:30">coeff_data</name><index pos:start="507:31" pos:end="507:33">[<expr pos:start="507:32" pos:end="507:32"><name pos:start="507:32" pos:end="507:32">j</name></expr>]</index></name> <operator pos:start="507:35" pos:end="507:35">=</operator> <call pos:start="507:37" pos:end="507:62"><name pos:start="507:37" pos:end="507:57">bytestream2_get_be16u</name><argument_list pos:start="507:58" pos:end="507:62">(<argument pos:start="507:59" pos:end="507:61"><expr pos:start="507:59" pos:end="507:61"><operator pos:start="507:59" pos:end="507:59">&amp;</operator><name pos:start="507:60" pos:end="507:61">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="511:17" pos:end="511:44"><expr pos:start="511:17" pos:end="511:43"><name pos:start="511:17" pos:end="511:26">coeff_data</name> <operator pos:start="511:28" pos:end="511:29">+=</operator> <name pos:start="511:31" pos:end="511:43">lowpass_width</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <comment type="block" pos:start="517:13" pos:end="517:66">/* Align to mod-4 position to continue reading tags */</comment>

            <expr_stmt pos:start="519:13" pos:end="519:71"><expr pos:start="519:13" pos:end="519:70"><call pos:start="519:13" pos:end="519:70"><name pos:start="519:13" pos:end="519:28">bytestream2_seek</name><argument_list pos:start="519:29" pos:end="519:70">(<argument pos:start="519:30" pos:end="519:32"><expr pos:start="519:30" pos:end="519:32"><operator pos:start="519:30" pos:end="519:30">&amp;</operator><name pos:start="519:31" pos:end="519:32">gb</name></expr></argument>, <argument pos:start="519:35" pos:end="519:59"><expr pos:start="519:35" pos:end="519:59"><call pos:start="519:35" pos:end="519:55"><name pos:start="519:35" pos:end="519:50">bytestream2_tell</name><argument_list pos:start="519:51" pos:end="519:55">(<argument pos:start="519:52" pos:end="519:54"><expr pos:start="519:52" pos:end="519:54"><operator pos:start="519:52" pos:end="519:52">&amp;</operator><name pos:start="519:53" pos:end="519:54">gb</name></expr></argument>)</argument_list></call> <operator pos:start="519:57" pos:end="519:57">&amp;</operator> <literal type="number" pos:start="519:59" pos:end="519:59">3</literal></expr></argument>, <argument pos:start="519:62" pos:end="519:69"><expr pos:start="519:62" pos:end="519:69"><name pos:start="519:62" pos:end="519:69">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="523:13" pos:end="523:62">/* Copy last line of coefficients if odd height */</comment>

            <if_stmt pos:start="525:13" pos:end="533:13"><if pos:start="525:13" pos:end="533:13">if <condition pos:start="525:16" pos:end="525:35">(<expr pos:start="525:17" pos:end="525:34"><name pos:start="525:17" pos:end="525:30">lowpass_height</name> <operator pos:start="525:32" pos:end="525:32">&amp;</operator> <literal type="number" pos:start="525:34" pos:end="525:34">1</literal></expr>)</condition> <block pos:start="525:37" pos:end="533:13">{<block_content pos:start="527:17" pos:end="531:60">

                <expr_stmt pos:start="527:17" pos:end="531:60"><expr pos:start="527:17" pos:end="531:59"><call pos:start="527:17" pos:end="531:59"><name pos:start="527:17" pos:end="527:22">memcpy</name><argument_list pos:start="527:23" pos:end="531:59">(<argument pos:start="527:24" pos:end="527:66"><expr pos:start="527:24" pos:end="527:66"><operator pos:start="527:24" pos:end="527:24">&amp;</operator><name pos:start="527:25" pos:end="527:66"><name pos:start="527:25" pos:end="527:34">coeff_data</name><index pos:start="527:35" pos:end="527:66">[<expr pos:start="527:36" pos:end="527:65"><name pos:start="527:36" pos:end="527:49">lowpass_height</name> <operator pos:start="527:51" pos:end="527:51">*</operator> <name pos:start="527:53" pos:end="527:65">lowpass_width</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="529:24" pos:end="529:72"><expr pos:start="529:24" pos:end="529:72"><operator pos:start="529:24" pos:end="529:24">&amp;</operator><name pos:start="529:25" pos:end="529:72"><name pos:start="529:25" pos:end="529:34">coeff_data</name><index pos:start="529:35" pos:end="529:72">[<expr pos:start="529:36" pos:end="529:71"><operator pos:start="529:36" pos:end="529:36">(</operator><name pos:start="529:37" pos:end="529:50">lowpass_height</name> <operator pos:start="529:52" pos:end="529:52">-</operator> <literal type="number" pos:start="529:54" pos:end="529:54">1</literal><operator pos:start="529:55" pos:end="529:55">)</operator> <operator pos:start="529:57" pos:end="529:57">*</operator> <name pos:start="529:59" pos:end="529:71">lowpass_width</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="531:24" pos:end="531:58"><expr pos:start="531:24" pos:end="531:58"><name pos:start="531:24" pos:end="531:36">lowpass_width</name> <operator pos:start="531:38" pos:end="531:38">*</operator> <sizeof pos:start="531:40" pos:end="531:58">sizeof<argument_list pos:start="531:46" pos:end="531:58">(<argument pos:start="531:47" pos:end="531:57"><expr pos:start="531:47" pos:end="531:57"><operator pos:start="531:47" pos:end="531:47">*</operator><name pos:start="531:48" pos:end="531:57">coeff_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="537:13" pos:end="537:101"><expr pos:start="537:13" pos:end="537:100"><call pos:start="537:13" pos:end="537:100"><name pos:start="537:13" pos:end="537:18">av_log</name><argument_list pos:start="537:19" pos:end="537:100">(<argument pos:start="537:20" pos:end="537:24"><expr pos:start="537:20" pos:end="537:24"><name pos:start="537:20" pos:end="537:24">avctx</name></expr></argument>, <argument pos:start="537:27" pos:end="537:38"><expr pos:start="537:27" pos:end="537:38"><name pos:start="537:27" pos:end="537:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="537:41" pos:end="537:67"><expr pos:start="537:41" pos:end="537:67"><literal type="string" pos:start="537:41" pos:end="537:67">"Lowpass coefficients %d\n"</literal></expr></argument>, <argument pos:start="537:70" pos:end="537:99"><expr pos:start="537:70" pos:end="537:99"><name pos:start="537:70" pos:end="537:82">lowpass_width</name> <operator pos:start="537:84" pos:end="537:84">*</operator> <name pos:start="537:86" pos:end="537:99">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="543:9" pos:end="729:9"><if pos:start="543:9" pos:end="729:9">if <condition pos:start="543:12" pos:end="543:83">(<expr pos:start="543:13" pos:end="543:82"><name pos:start="543:13" pos:end="543:15">tag</name> <operator pos:start="543:17" pos:end="543:18">==</operator> <literal type="number" pos:start="543:20" pos:end="543:21">55</literal> <operator pos:start="543:23" pos:end="543:24">&amp;&amp;</operator> <name pos:start="543:26" pos:end="543:46"><name pos:start="543:26" pos:end="543:26">s</name><operator pos:start="543:27" pos:end="543:28">-&gt;</operator><name pos:start="543:29" pos:end="543:46">subband_num_actual</name></name> <operator pos:start="543:48" pos:end="543:49">!=</operator> <literal type="number" pos:start="543:51" pos:end="543:53">255</literal> <operator pos:start="543:55" pos:end="543:56">&amp;&amp;</operator> <name pos:start="543:58" pos:end="543:67"><name pos:start="543:58" pos:end="543:58">s</name><operator pos:start="543:59" pos:end="543:60">-&gt;</operator><name pos:start="543:61" pos:end="543:67">a_width</name></name> <operator pos:start="543:69" pos:end="543:70">&amp;&amp;</operator> <name pos:start="543:72" pos:end="543:82"><name pos:start="543:72" pos:end="543:72">s</name><operator pos:start="543:73" pos:end="543:74">-&gt;</operator><name pos:start="543:75" pos:end="543:82">a_height</name></name></expr>)</condition> <block pos:start="543:85" pos:end="729:9">{<block_content pos:start="545:13" pos:end="727:13">

            <decl_stmt pos:start="545:13" pos:end="545:97"><decl pos:start="545:13" pos:end="545:96"><type pos:start="545:13" pos:end="545:15"><name pos:start="545:13" pos:end="545:15">int</name></type> <name pos:start="545:17" pos:end="545:31">highpass_height</name> <init pos:start="545:33" pos:end="545:96">= <expr pos:start="545:35" pos:end="545:96"><name pos:start="545:35" pos:end="545:58"><name pos:start="545:35" pos:end="545:35">s</name><operator pos:start="545:36" pos:end="545:37">-&gt;</operator><name pos:start="545:38" pos:end="545:42">plane</name><index pos:start="545:43" pos:end="545:58">[<expr pos:start="545:44" pos:end="545:57"><name pos:start="545:44" pos:end="545:57"><name pos:start="545:44" pos:end="545:44">s</name><operator pos:start="545:45" pos:end="545:46">-&gt;</operator><name pos:start="545:47" pos:end="545:57">channel_num</name></name></expr>]</index></name><operator pos:start="545:59" pos:end="545:59">.</operator><name pos:start="545:60" pos:end="545:89"><name pos:start="545:60" pos:end="545:63">band</name><index pos:start="545:64" pos:end="545:73">[<expr pos:start="545:65" pos:end="545:72"><name pos:start="545:65" pos:end="545:72"><name pos:start="545:65" pos:end="545:65">s</name><operator pos:start="545:66" pos:end="545:67">-&gt;</operator><name pos:start="545:68" pos:end="545:72">level</name></name></expr>]</index><index pos:start="545:74" pos:end="545:89">[<expr pos:start="545:75" pos:end="545:88"><name pos:start="545:75" pos:end="545:88"><name pos:start="545:75" pos:end="545:75">s</name><operator pos:start="545:76" pos:end="545:77">-&gt;</operator><name pos:start="545:78" pos:end="545:88">subband_num</name></name></expr>]</index></name><operator pos:start="545:90" pos:end="545:90">.</operator><name pos:start="545:91" pos:end="545:96">height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="547:13" pos:end="547:96"><decl pos:start="547:13" pos:end="547:95"><type pos:start="547:13" pos:end="547:15"><name pos:start="547:13" pos:end="547:15">int</name></type> <name pos:start="547:17" pos:end="547:30">highpass_width</name>  <init pos:start="547:33" pos:end="547:95">= <expr pos:start="547:35" pos:end="547:95"><name pos:start="547:35" pos:end="547:58"><name pos:start="547:35" pos:end="547:35">s</name><operator pos:start="547:36" pos:end="547:37">-&gt;</operator><name pos:start="547:38" pos:end="547:42">plane</name><index pos:start="547:43" pos:end="547:58">[<expr pos:start="547:44" pos:end="547:57"><name pos:start="547:44" pos:end="547:57"><name pos:start="547:44" pos:end="547:44">s</name><operator pos:start="547:45" pos:end="547:46">-&gt;</operator><name pos:start="547:47" pos:end="547:57">channel_num</name></name></expr>]</index></name><operator pos:start="547:59" pos:end="547:59">.</operator><name pos:start="547:60" pos:end="547:89"><name pos:start="547:60" pos:end="547:63">band</name><index pos:start="547:64" pos:end="547:73">[<expr pos:start="547:65" pos:end="547:72"><name pos:start="547:65" pos:end="547:72"><name pos:start="547:65" pos:end="547:65">s</name><operator pos:start="547:66" pos:end="547:67">-&gt;</operator><name pos:start="547:68" pos:end="547:72">level</name></name></expr>]</index><index pos:start="547:74" pos:end="547:89">[<expr pos:start="547:75" pos:end="547:88"><name pos:start="547:75" pos:end="547:88"><name pos:start="547:75" pos:end="547:75">s</name><operator pos:start="547:76" pos:end="547:77">-&gt;</operator><name pos:start="547:78" pos:end="547:88">subband_num</name></name></expr>]</index></name><operator pos:start="547:90" pos:end="547:90">.</operator><name pos:start="547:91" pos:end="547:95">width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="549:13" pos:end="549:99"><decl pos:start="549:13" pos:end="549:98"><type pos:start="549:13" pos:end="549:15"><name pos:start="549:13" pos:end="549:15">int</name></type> <name pos:start="549:17" pos:end="549:32">highpass_a_width</name> <init pos:start="549:34" pos:end="549:98">= <expr pos:start="549:36" pos:end="549:98"><name pos:start="549:36" pos:end="549:59"><name pos:start="549:36" pos:end="549:36">s</name><operator pos:start="549:37" pos:end="549:38">-&gt;</operator><name pos:start="549:39" pos:end="549:43">plane</name><index pos:start="549:44" pos:end="549:59">[<expr pos:start="549:45" pos:end="549:58"><name pos:start="549:45" pos:end="549:58"><name pos:start="549:45" pos:end="549:45">s</name><operator pos:start="549:46" pos:end="549:47">-&gt;</operator><name pos:start="549:48" pos:end="549:58">channel_num</name></name></expr>]</index></name><operator pos:start="549:60" pos:end="549:60">.</operator><name pos:start="549:61" pos:end="549:90"><name pos:start="549:61" pos:end="549:64">band</name><index pos:start="549:65" pos:end="549:74">[<expr pos:start="549:66" pos:end="549:73"><name pos:start="549:66" pos:end="549:73"><name pos:start="549:66" pos:end="549:66">s</name><operator pos:start="549:67" pos:end="549:68">-&gt;</operator><name pos:start="549:69" pos:end="549:73">level</name></name></expr>]</index><index pos:start="549:75" pos:end="549:90">[<expr pos:start="549:76" pos:end="549:89"><name pos:start="549:76" pos:end="549:89"><name pos:start="549:76" pos:end="549:76">s</name><operator pos:start="549:77" pos:end="549:78">-&gt;</operator><name pos:start="549:79" pos:end="549:89">subband_num</name></name></expr>]</index></name><operator pos:start="549:91" pos:end="549:91">.</operator><name pos:start="549:92" pos:end="549:98">a_width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="551:13" pos:end="551:101"><decl pos:start="551:13" pos:end="551:100"><type pos:start="551:13" pos:end="551:15"><name pos:start="551:13" pos:end="551:15">int</name></type> <name pos:start="551:17" pos:end="551:33">highpass_a_height</name> <init pos:start="551:35" pos:end="551:100">= <expr pos:start="551:37" pos:end="551:100"><name pos:start="551:37" pos:end="551:60"><name pos:start="551:37" pos:end="551:37">s</name><operator pos:start="551:38" pos:end="551:39">-&gt;</operator><name pos:start="551:40" pos:end="551:44">plane</name><index pos:start="551:45" pos:end="551:60">[<expr pos:start="551:46" pos:end="551:59"><name pos:start="551:46" pos:end="551:59"><name pos:start="551:46" pos:end="551:46">s</name><operator pos:start="551:47" pos:end="551:48">-&gt;</operator><name pos:start="551:49" pos:end="551:59">channel_num</name></name></expr>]</index></name><operator pos:start="551:61" pos:end="551:61">.</operator><name pos:start="551:62" pos:end="551:91"><name pos:start="551:62" pos:end="551:65">band</name><index pos:start="551:66" pos:end="551:75">[<expr pos:start="551:67" pos:end="551:74"><name pos:start="551:67" pos:end="551:74"><name pos:start="551:67" pos:end="551:67">s</name><operator pos:start="551:68" pos:end="551:69">-&gt;</operator><name pos:start="551:70" pos:end="551:74">level</name></name></expr>]</index><index pos:start="551:76" pos:end="551:91">[<expr pos:start="551:77" pos:end="551:90"><name pos:start="551:77" pos:end="551:90"><name pos:start="551:77" pos:end="551:77">s</name><operator pos:start="551:78" pos:end="551:79">-&gt;</operator><name pos:start="551:80" pos:end="551:90">subband_num</name></name></expr>]</index></name><operator pos:start="551:92" pos:end="551:92">.</operator><name pos:start="551:93" pos:end="551:100">a_height</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="553:13" pos:end="553:97"><decl pos:start="553:13" pos:end="553:96"><type pos:start="553:13" pos:end="553:15"><name pos:start="553:13" pos:end="553:15">int</name></type> <name pos:start="553:17" pos:end="553:31">highpass_stride</name> <init pos:start="553:33" pos:end="553:96">= <expr pos:start="553:35" pos:end="553:96"><name pos:start="553:35" pos:end="553:58"><name pos:start="553:35" pos:end="553:35">s</name><operator pos:start="553:36" pos:end="553:37">-&gt;</operator><name pos:start="553:38" pos:end="553:42">plane</name><index pos:start="553:43" pos:end="553:58">[<expr pos:start="553:44" pos:end="553:57"><name pos:start="553:44" pos:end="553:57"><name pos:start="553:44" pos:end="553:44">s</name><operator pos:start="553:45" pos:end="553:46">-&gt;</operator><name pos:start="553:47" pos:end="553:57">channel_num</name></name></expr>]</index></name><operator pos:start="553:59" pos:end="553:59">.</operator><name pos:start="553:60" pos:end="553:89"><name pos:start="553:60" pos:end="553:63">band</name><index pos:start="553:64" pos:end="553:73">[<expr pos:start="553:65" pos:end="553:72"><name pos:start="553:65" pos:end="553:72"><name pos:start="553:65" pos:end="553:65">s</name><operator pos:start="553:66" pos:end="553:67">-&gt;</operator><name pos:start="553:68" pos:end="553:72">level</name></name></expr>]</index><index pos:start="553:74" pos:end="553:89">[<expr pos:start="553:75" pos:end="553:88"><name pos:start="553:75" pos:end="553:88"><name pos:start="553:75" pos:end="553:75">s</name><operator pos:start="553:76" pos:end="553:77">-&gt;</operator><name pos:start="553:78" pos:end="553:88">subband_num</name></name></expr>]</index></name><operator pos:start="553:90" pos:end="553:90">.</operator><name pos:start="553:91" pos:end="553:96">stride</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="555:13" pos:end="555:61"><decl pos:start="555:13" pos:end="555:60"><type pos:start="555:13" pos:end="555:15"><name pos:start="555:13" pos:end="555:15">int</name></type> <name pos:start="555:17" pos:end="555:24">expected</name> <init pos:start="555:26" pos:end="555:60">= <expr pos:start="555:28" pos:end="555:60"><name pos:start="555:28" pos:end="555:42">highpass_height</name> <operator pos:start="555:44" pos:end="555:44">*</operator> <name pos:start="555:46" pos:end="555:60">highpass_stride</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="557:13" pos:end="557:66"><decl pos:start="557:13" pos:end="557:65"><type pos:start="557:13" pos:end="557:15"><name pos:start="557:13" pos:end="557:15">int</name></type> <name pos:start="557:17" pos:end="557:26">a_expected</name> <init pos:start="557:28" pos:end="557:65">= <expr pos:start="557:30" pos:end="557:65"><name pos:start="557:30" pos:end="557:46">highpass_a_height</name> <operator pos:start="557:48" pos:end="557:48">*</operator> <name pos:start="557:50" pos:end="557:65">highpass_a_width</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="559:13" pos:end="559:34"><decl pos:start="559:13" pos:end="559:21"><type pos:start="559:13" pos:end="559:15"><name pos:start="559:13" pos:end="559:15">int</name></type> <name pos:start="559:17" pos:end="559:21">level</name></decl>, <decl pos:start="559:24" pos:end="559:26"><type ref="prev" pos:start="559:13" pos:end="559:15"/><name pos:start="559:24" pos:end="559:26">run</name></decl>, <decl pos:start="559:29" pos:end="559:33"><type ref="prev" pos:start="559:13" pos:end="559:15"/><name pos:start="559:29" pos:end="559:33">coeff</name></decl>;</decl_stmt>

            <decl_stmt pos:start="561:13" pos:end="561:33"><decl pos:start="561:13" pos:end="561:25"><type pos:start="561:13" pos:end="561:15"><name pos:start="561:13" pos:end="561:15">int</name></type> <name pos:start="561:17" pos:end="561:21">count</name> <init pos:start="561:23" pos:end="561:25">= <expr pos:start="561:25" pos:end="561:25"><literal type="number" pos:start="561:25" pos:end="561:25">0</literal></expr></init></decl>, <decl pos:start="561:28" pos:end="561:32"><type ref="prev" pos:start="561:13" pos:end="561:15"/><name pos:start="561:28" pos:end="561:32">bytes</name></decl>;</decl_stmt>



            <if_stmt pos:start="565:13" pos:end="573:13"><if pos:start="565:13" pos:end="573:13">if <condition pos:start="565:16" pos:end="565:28">(<expr pos:start="565:17" pos:end="565:27"><operator pos:start="565:17" pos:end="565:17">!</operator><name pos:start="565:18" pos:end="565:27">got_buffer</name></expr>)</condition> <block pos:start="565:30" pos:end="573:13">{<block_content pos:start="567:17" pos:end="571:25">

                <expr_stmt pos:start="567:17" pos:end="567:76"><expr pos:start="567:17" pos:end="567:75"><call pos:start="567:17" pos:end="567:75"><name pos:start="567:17" pos:end="567:22">av_log</name><argument_list pos:start="567:23" pos:end="567:75">(<argument pos:start="567:24" pos:end="567:28"><expr pos:start="567:24" pos:end="567:28"><name pos:start="567:24" pos:end="567:28">avctx</name></expr></argument>, <argument pos:start="567:31" pos:end="567:42"><expr pos:start="567:31" pos:end="567:42"><name pos:start="567:31" pos:end="567:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="567:45" pos:end="567:74"><expr pos:start="567:45" pos:end="567:74"><literal type="string" pos:start="567:45" pos:end="567:74">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:38"><expr pos:start="569:17" pos:end="569:37"><name pos:start="569:17" pos:end="569:19">ret</name> <operator pos:start="569:21" pos:end="569:21">=</operator> <call pos:start="569:23" pos:end="569:37"><name pos:start="569:23" pos:end="569:29">AVERROR</name><argument_list pos:start="569:30" pos:end="569:37">(<argument pos:start="569:31" pos:end="569:36"><expr pos:start="569:31" pos:end="569:36"><name pos:start="569:31" pos:end="569:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="571:17" pos:end="571:25">goto <name pos:start="571:22" pos:end="571:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="577:13" pos:end="585:13"><if pos:start="577:13" pos:end="585:13">if <condition pos:start="577:16" pos:end="577:114">(<expr pos:start="577:17" pos:end="577:113"><name pos:start="577:17" pos:end="577:31">highpass_height</name> <operator pos:start="577:33" pos:end="577:33">&gt;</operator> <name pos:start="577:35" pos:end="577:51">highpass_a_height</name> <operator pos:start="577:53" pos:end="577:54">||</operator> <name pos:start="577:56" pos:end="577:69">highpass_width</name> <operator pos:start="577:71" pos:end="577:71">&gt;</operator> <name pos:start="577:73" pos:end="577:88">highpass_a_width</name> <operator pos:start="577:90" pos:end="577:91">||</operator> <name pos:start="577:93" pos:end="577:102">a_expected</name> <operator pos:start="577:104" pos:end="577:104">&lt;</operator> <name pos:start="577:106" pos:end="577:113">expected</name></expr>)</condition> <block pos:start="577:116" pos:end="585:13">{<block_content pos:start="579:17" pos:end="583:25">

                <expr_stmt pos:start="579:17" pos:end="579:80"><expr pos:start="579:17" pos:end="579:79"><call pos:start="579:17" pos:end="579:79"><name pos:start="579:17" pos:end="579:22">av_log</name><argument_list pos:start="579:23" pos:end="579:79">(<argument pos:start="579:24" pos:end="579:28"><expr pos:start="579:24" pos:end="579:28"><name pos:start="579:24" pos:end="579:28">avctx</name></expr></argument>, <argument pos:start="579:31" pos:end="579:42"><expr pos:start="579:31" pos:end="579:42"><name pos:start="579:31" pos:end="579:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="579:45" pos:end="579:78"><expr pos:start="579:45" pos:end="579:78"><literal type="string" pos:start="579:45" pos:end="579:78">"Too many highpass coefficients\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="581:17" pos:end="581:38"><expr pos:start="581:17" pos:end="581:37"><name pos:start="581:17" pos:end="581:19">ret</name> <operator pos:start="581:21" pos:end="581:21">=</operator> <call pos:start="581:23" pos:end="581:37"><name pos:start="581:23" pos:end="581:29">AVERROR</name><argument_list pos:start="581:30" pos:end="581:37">(<argument pos:start="581:31" pos:end="581:36"><expr pos:start="581:31" pos:end="581:36"><name pos:start="581:31" pos:end="581:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="583:17" pos:end="583:25">goto <name pos:start="583:22" pos:end="583:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="589:13" pos:end="589:157"><expr pos:start="589:13" pos:end="589:156"><call pos:start="589:13" pos:end="589:156"><name pos:start="589:13" pos:end="589:18">av_log</name><argument_list pos:start="589:19" pos:end="589:156">(<argument pos:start="589:20" pos:end="589:24"><expr pos:start="589:20" pos:end="589:24"><name pos:start="589:20" pos:end="589:24">avctx</name></expr></argument>, <argument pos:start="589:27" pos:end="589:38"><expr pos:start="589:27" pos:end="589:38"><name pos:start="589:27" pos:end="589:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="589:41" pos:end="589:106"><expr pos:start="589:41" pos:end="589:106"><literal type="string" pos:start="589:41" pos:end="589:106">"Start subband coeffs plane %i level %i codebook %i expected %i\n"</literal></expr></argument>, <argument pos:start="589:109" pos:end="589:122"><expr pos:start="589:109" pos:end="589:122"><name pos:start="589:109" pos:end="589:122"><name pos:start="589:109" pos:end="589:109">s</name><operator pos:start="589:110" pos:end="589:111">-&gt;</operator><name pos:start="589:112" pos:end="589:122">channel_num</name></name></expr></argument>, <argument pos:start="589:125" pos:end="589:132"><expr pos:start="589:125" pos:end="589:132"><name pos:start="589:125" pos:end="589:132"><name pos:start="589:125" pos:end="589:125">s</name><operator pos:start="589:126" pos:end="589:127">-&gt;</operator><name pos:start="589:128" pos:end="589:132">level</name></name></expr></argument>, <argument pos:start="589:135" pos:end="589:145"><expr pos:start="589:135" pos:end="589:145"><name pos:start="589:135" pos:end="589:145"><name pos:start="589:135" pos:end="589:135">s</name><operator pos:start="589:136" pos:end="589:137">-&gt;</operator><name pos:start="589:138" pos:end="589:145">codebook</name></name></expr></argument>, <argument pos:start="589:148" pos:end="589:155"><expr pos:start="589:148" pos:end="589:155"><name pos:start="589:148" pos:end="589:155">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="593:13" pos:end="593:82"><expr pos:start="593:13" pos:end="593:81"><call pos:start="593:13" pos:end="593:81"><name pos:start="593:13" pos:end="593:25">init_get_bits</name><argument_list pos:start="593:26" pos:end="593:81">(<argument pos:start="593:27" pos:end="593:32"><expr pos:start="593:27" pos:end="593:32"><operator pos:start="593:27" pos:end="593:27">&amp;</operator><name pos:start="593:28" pos:end="593:32"><name pos:start="593:28" pos:end="593:28">s</name><operator pos:start="593:29" pos:end="593:30">-&gt;</operator><name pos:start="593:31" pos:end="593:32">gb</name></name></expr></argument>, <argument pos:start="593:35" pos:end="593:43"><expr pos:start="593:35" pos:end="593:43"><name pos:start="593:35" pos:end="593:43"><name pos:start="593:35" pos:end="593:36">gb</name><operator pos:start="593:37" pos:end="593:37">.</operator><name pos:start="593:38" pos:end="593:43">buffer</name></name></expr></argument>, <argument pos:start="593:46" pos:end="593:80"><expr pos:start="593:46" pos:end="593:80"><call pos:start="593:46" pos:end="593:76"><name pos:start="593:46" pos:end="593:71">bytestream2_get_bytes_left</name><argument_list pos:start="593:72" pos:end="593:76">(<argument pos:start="593:73" pos:end="593:75"><expr pos:start="593:73" pos:end="593:75"><operator pos:start="593:73" pos:end="593:73">&amp;</operator><name pos:start="593:74" pos:end="593:75">gb</name></expr></argument>)</argument_list></call> <operator pos:start="593:78" pos:end="593:78">*</operator> <literal type="number" pos:start="593:80" pos:end="593:80">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="595:13" pos:end="679:13">{<block_content pos:start="597:17" pos:end="677:41">

                <expr_stmt pos:start="597:17" pos:end="597:40"><expr pos:start="597:17" pos:end="597:39"><call pos:start="597:17" pos:end="597:39"><name pos:start="597:17" pos:end="597:27">OPEN_READER</name><argument_list pos:start="597:28" pos:end="597:39">(<argument pos:start="597:29" pos:end="597:30"><expr pos:start="597:29" pos:end="597:30"><name pos:start="597:29" pos:end="597:30">re</name></expr></argument>, <argument pos:start="597:33" pos:end="597:38"><expr pos:start="597:33" pos:end="597:38"><operator pos:start="597:33" pos:end="597:33">&amp;</operator><name pos:start="597:34" pos:end="597:38"><name pos:start="597:34" pos:end="597:34">s</name><operator pos:start="597:35" pos:end="597:36">-&gt;</operator><name pos:start="597:37" pos:end="597:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="599:17" pos:end="675:17"><if pos:start="599:17" pos:end="637:17">if <condition pos:start="599:20" pos:end="599:33">(<expr pos:start="599:21" pos:end="599:32"><operator pos:start="599:21" pos:end="599:21">!</operator><name pos:start="599:22" pos:end="599:32"><name pos:start="599:22" pos:end="599:22">s</name><operator pos:start="599:23" pos:end="599:24">-&gt;</operator><name pos:start="599:25" pos:end="599:32">codebook</name></name></expr>)</condition> <block pos:start="599:35" pos:end="637:17">{<block_content pos:start="601:21" pos:end="635:21">

                    <while pos:start="601:21" pos:end="635:21">while <condition pos:start="601:27" pos:end="601:29">(<expr pos:start="601:28" pos:end="601:28"><literal type="number" pos:start="601:28" pos:end="601:28">1</literal></expr>)</condition> <block pos:start="601:31" pos:end="635:21">{<block_content pos:start="603:25" pos:end="633:50">

                        <expr_stmt pos:start="603:25" pos:end="603:49"><expr pos:start="603:25" pos:end="603:48"><call pos:start="603:25" pos:end="603:48"><name pos:start="603:25" pos:end="603:36">UPDATE_CACHE</name><argument_list pos:start="603:37" pos:end="603:48">(<argument pos:start="603:38" pos:end="603:39"><expr pos:start="603:38" pos:end="603:39"><name pos:start="603:38" pos:end="603:39">re</name></expr></argument>, <argument pos:start="603:42" pos:end="603:47"><expr pos:start="603:42" pos:end="603:47"><operator pos:start="603:42" pos:end="603:42">&amp;</operator><name pos:start="603:43" pos:end="603:47"><name pos:start="603:43" pos:end="603:43">s</name><operator pos:start="603:44" pos:end="603:45">-&gt;</operator><name pos:start="603:46" pos:end="603:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="605:25" pos:end="607:51"><expr pos:start="605:25" pos:end="607:50"><call pos:start="605:25" pos:end="607:50"><name pos:start="605:25" pos:end="605:34">GET_RL_VLC</name><argument_list pos:start="605:35" pos:end="607:50">(<argument pos:start="605:36" pos:end="605:40"><expr pos:start="605:36" pos:end="605:40"><name pos:start="605:36" pos:end="605:40">level</name></expr></argument>, <argument pos:start="605:43" pos:end="605:45"><expr pos:start="605:43" pos:end="605:45"><name pos:start="605:43" pos:end="605:45">run</name></expr></argument>, <argument pos:start="605:48" pos:end="605:49"><expr pos:start="605:48" pos:end="605:49"><name pos:start="605:48" pos:end="605:49">re</name></expr></argument>, <argument pos:start="605:52" pos:end="605:57"><expr pos:start="605:52" pos:end="605:57"><operator pos:start="605:52" pos:end="605:52">&amp;</operator><name pos:start="605:53" pos:end="605:57"><name pos:start="605:53" pos:end="605:53">s</name><operator pos:start="605:54" pos:end="605:55">-&gt;</operator><name pos:start="605:56" pos:end="605:57">gb</name></name></expr></argument>, <argument pos:start="605:60" pos:end="605:76"><expr pos:start="605:60" pos:end="605:76"><name pos:start="605:60" pos:end="605:76"><name pos:start="605:60" pos:end="605:60">s</name><operator pos:start="605:61" pos:end="605:62">-&gt;</operator><name pos:start="605:63" pos:end="605:76">table_9_rl_vlc</name></name></expr></argument>,

                                   <argument pos:start="607:36" pos:end="607:43"><expr pos:start="607:36" pos:end="607:43"><name pos:start="607:36" pos:end="607:43">VLC_BITS</name></expr></argument>, <argument pos:start="607:46" pos:end="607:46"><expr pos:start="607:46" pos:end="607:46"><literal type="number" pos:start="607:46" pos:end="607:46">3</literal></expr></argument>, <argument pos:start="607:49" pos:end="607:49"><expr pos:start="607:49" pos:end="607:49"><literal type="number" pos:start="607:49" pos:end="607:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="611:25" pos:end="611:36">/* escape */</comment>

                        <if_stmt pos:start="613:25" pos:end="615:34"><if pos:start="613:25" pos:end="615:34">if <condition pos:start="613:28" pos:end="613:40">(<expr pos:start="613:29" pos:end="613:39"><name pos:start="613:29" pos:end="613:33">level</name> <operator pos:start="613:35" pos:end="613:36">==</operator> <literal type="number" pos:start="613:38" pos:end="613:39">64</literal></expr>)</condition><block type="pseudo" pos:start="615:29" pos:end="615:34"><block_content pos:start="615:29" pos:end="615:34">

                            <break pos:start="615:29" pos:end="615:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="619:25" pos:end="619:37"><expr pos:start="619:25" pos:end="619:36"><name pos:start="619:25" pos:end="619:29">count</name> <operator pos:start="619:31" pos:end="619:32">+=</operator> <name pos:start="619:34" pos:end="619:36">run</name></expr>;</expr_stmt>



                        <if_stmt pos:start="623:25" pos:end="625:34"><if pos:start="623:25" pos:end="625:34">if <condition pos:start="623:28" pos:end="623:45">(<expr pos:start="623:29" pos:end="623:44"><name pos:start="623:29" pos:end="623:33">count</name> <operator pos:start="623:35" pos:end="623:35">&gt;</operator> <name pos:start="623:37" pos:end="623:44">expected</name></expr>)</condition><block type="pseudo" pos:start="625:29" pos:end="625:34"><block_content pos:start="625:29" pos:end="625:34">

                            <break pos:start="625:29" pos:end="625:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="629:25" pos:end="629:78"><expr pos:start="629:25" pos:end="629:77"><name pos:start="629:25" pos:end="629:29">coeff</name> <operator pos:start="629:31" pos:end="629:31">=</operator> <call pos:start="629:33" pos:end="629:77"><name pos:start="629:33" pos:end="629:53">dequant_and_decompand</name><argument_list pos:start="629:54" pos:end="629:77">(<argument pos:start="629:55" pos:end="629:59"><expr pos:start="629:55" pos:end="629:59"><name pos:start="629:55" pos:end="629:59">level</name></expr></argument>, <argument pos:start="629:62" pos:end="629:76"><expr pos:start="629:62" pos:end="629:76"><name pos:start="629:62" pos:end="629:76"><name pos:start="629:62" pos:end="629:62">s</name><operator pos:start="629:63" pos:end="629:64">-&gt;</operator><name pos:start="629:65" pos:end="629:76">quantisation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <for pos:start="631:25" pos:end="633:50">for <control pos:start="631:29" pos:end="631:49">(<init pos:start="631:30" pos:end="631:35"><expr pos:start="631:30" pos:end="631:34"><name pos:start="631:30" pos:end="631:30">i</name> <operator pos:start="631:32" pos:end="631:32">=</operator> <literal type="number" pos:start="631:34" pos:end="631:34">0</literal></expr>;</init> <condition pos:start="631:37" pos:end="631:44"><expr pos:start="631:37" pos:end="631:43"><name pos:start="631:37" pos:end="631:37">i</name> <operator pos:start="631:39" pos:end="631:39">&lt;</operator> <name pos:start="631:41" pos:end="631:43">run</name></expr>;</condition> <incr pos:start="631:46" pos:end="631:48"><expr pos:start="631:46" pos:end="631:48"><name pos:start="631:46" pos:end="631:46">i</name><operator pos:start="631:47" pos:end="631:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="633:29" pos:end="633:50"><block_content pos:start="633:29" pos:end="633:50">

                            <expr_stmt pos:start="633:29" pos:end="633:50"><expr pos:start="633:29" pos:end="633:49"><operator pos:start="633:29" pos:end="633:29">*</operator><name pos:start="633:30" pos:end="633:39">coeff_data</name><operator pos:start="633:40" pos:end="633:41">++</operator> <operator pos:start="633:43" pos:end="633:43">=</operator> <name pos:start="633:45" pos:end="633:49">coeff</name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></while>

                </block_content>}</block></if> <else pos:start="637:19" pos:end="675:17">else <block pos:start="637:24" pos:end="675:17">{<block_content pos:start="639:21" pos:end="673:21">

                    <while pos:start="639:21" pos:end="673:21">while <condition pos:start="639:27" pos:end="639:29">(<expr pos:start="639:28" pos:end="639:28"><literal type="number" pos:start="639:28" pos:end="639:28">1</literal></expr>)</condition> <block pos:start="639:31" pos:end="673:21">{<block_content pos:start="641:25" pos:end="671:50">

                        <expr_stmt pos:start="641:25" pos:end="641:49"><expr pos:start="641:25" pos:end="641:48"><call pos:start="641:25" pos:end="641:48"><name pos:start="641:25" pos:end="641:36">UPDATE_CACHE</name><argument_list pos:start="641:37" pos:end="641:48">(<argument pos:start="641:38" pos:end="641:39"><expr pos:start="641:38" pos:end="641:39"><name pos:start="641:38" pos:end="641:39">re</name></expr></argument>, <argument pos:start="641:42" pos:end="641:47"><expr pos:start="641:42" pos:end="641:47"><operator pos:start="641:42" pos:end="641:42">&amp;</operator><name pos:start="641:43" pos:end="641:47"><name pos:start="641:43" pos:end="641:43">s</name><operator pos:start="641:44" pos:end="641:45">-&gt;</operator><name pos:start="641:46" pos:end="641:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="643:25" pos:end="645:51"><expr pos:start="643:25" pos:end="645:50"><call pos:start="643:25" pos:end="645:50"><name pos:start="643:25" pos:end="643:34">GET_RL_VLC</name><argument_list pos:start="643:35" pos:end="645:50">(<argument pos:start="643:36" pos:end="643:40"><expr pos:start="643:36" pos:end="643:40"><name pos:start="643:36" pos:end="643:40">level</name></expr></argument>, <argument pos:start="643:43" pos:end="643:45"><expr pos:start="643:43" pos:end="643:45"><name pos:start="643:43" pos:end="643:45">run</name></expr></argument>, <argument pos:start="643:48" pos:end="643:49"><expr pos:start="643:48" pos:end="643:49"><name pos:start="643:48" pos:end="643:49">re</name></expr></argument>, <argument pos:start="643:52" pos:end="643:57"><expr pos:start="643:52" pos:end="643:57"><operator pos:start="643:52" pos:end="643:52">&amp;</operator><name pos:start="643:53" pos:end="643:57"><name pos:start="643:53" pos:end="643:53">s</name><operator pos:start="643:54" pos:end="643:55">-&gt;</operator><name pos:start="643:56" pos:end="643:57">gb</name></name></expr></argument>, <argument pos:start="643:60" pos:end="643:77"><expr pos:start="643:60" pos:end="643:77"><name pos:start="643:60" pos:end="643:77"><name pos:start="643:60" pos:end="643:60">s</name><operator pos:start="643:61" pos:end="643:62">-&gt;</operator><name pos:start="643:63" pos:end="643:77">table_18_rl_vlc</name></name></expr></argument>,

                                   <argument pos:start="645:36" pos:end="645:43"><expr pos:start="645:36" pos:end="645:43"><name pos:start="645:36" pos:end="645:43">VLC_BITS</name></expr></argument>, <argument pos:start="645:46" pos:end="645:46"><expr pos:start="645:46" pos:end="645:46"><literal type="number" pos:start="645:46" pos:end="645:46">3</literal></expr></argument>, <argument pos:start="645:49" pos:end="645:49"><expr pos:start="645:49" pos:end="645:49"><literal type="number" pos:start="645:49" pos:end="645:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="649:25" pos:end="649:36">/* escape */</comment>

                        <if_stmt pos:start="651:25" pos:end="653:34"><if pos:start="651:25" pos:end="653:34">if <condition pos:start="651:28" pos:end="651:53">(<expr pos:start="651:29" pos:end="651:52"><name pos:start="651:29" pos:end="651:33">level</name> <operator pos:start="651:35" pos:end="651:36">==</operator> <literal type="number" pos:start="651:38" pos:end="651:40">255</literal> <operator pos:start="651:42" pos:end="651:43">&amp;&amp;</operator> <name pos:start="651:45" pos:end="651:47">run</name> <operator pos:start="651:49" pos:end="651:50">==</operator> <literal type="number" pos:start="651:52" pos:end="651:52">2</literal></expr>)</condition><block type="pseudo" pos:start="653:29" pos:end="653:34"><block_content pos:start="653:29" pos:end="653:34">

                            <break pos:start="653:29" pos:end="653:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="657:25" pos:end="657:37"><expr pos:start="657:25" pos:end="657:36"><name pos:start="657:25" pos:end="657:29">count</name> <operator pos:start="657:31" pos:end="657:32">+=</operator> <name pos:start="657:34" pos:end="657:36">run</name></expr>;</expr_stmt>



                        <if_stmt pos:start="661:25" pos:end="663:34"><if pos:start="661:25" pos:end="663:34">if <condition pos:start="661:28" pos:end="661:45">(<expr pos:start="661:29" pos:end="661:44"><name pos:start="661:29" pos:end="661:33">count</name> <operator pos:start="661:35" pos:end="661:35">&gt;</operator> <name pos:start="661:37" pos:end="661:44">expected</name></expr>)</condition><block type="pseudo" pos:start="663:29" pos:end="663:34"><block_content pos:start="663:29" pos:end="663:34">

                            <break pos:start="663:29" pos:end="663:34">break;</break></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="667:25" pos:end="667:78"><expr pos:start="667:25" pos:end="667:77"><name pos:start="667:25" pos:end="667:29">coeff</name> <operator pos:start="667:31" pos:end="667:31">=</operator> <call pos:start="667:33" pos:end="667:77"><name pos:start="667:33" pos:end="667:53">dequant_and_decompand</name><argument_list pos:start="667:54" pos:end="667:77">(<argument pos:start="667:55" pos:end="667:59"><expr pos:start="667:55" pos:end="667:59"><name pos:start="667:55" pos:end="667:59">level</name></expr></argument>, <argument pos:start="667:62" pos:end="667:76"><expr pos:start="667:62" pos:end="667:76"><name pos:start="667:62" pos:end="667:76"><name pos:start="667:62" pos:end="667:62">s</name><operator pos:start="667:63" pos:end="667:64">-&gt;</operator><name pos:start="667:65" pos:end="667:76">quantisation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <for pos:start="669:25" pos:end="671:50">for <control pos:start="669:29" pos:end="669:49">(<init pos:start="669:30" pos:end="669:35"><expr pos:start="669:30" pos:end="669:34"><name pos:start="669:30" pos:end="669:30">i</name> <operator pos:start="669:32" pos:end="669:32">=</operator> <literal type="number" pos:start="669:34" pos:end="669:34">0</literal></expr>;</init> <condition pos:start="669:37" pos:end="669:44"><expr pos:start="669:37" pos:end="669:43"><name pos:start="669:37" pos:end="669:37">i</name> <operator pos:start="669:39" pos:end="669:39">&lt;</operator> <name pos:start="669:41" pos:end="669:43">run</name></expr>;</condition> <incr pos:start="669:46" pos:end="669:48"><expr pos:start="669:46" pos:end="669:48"><name pos:start="669:46" pos:end="669:46">i</name><operator pos:start="669:47" pos:end="669:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="671:29" pos:end="671:50"><block_content pos:start="671:29" pos:end="671:50">

                            <expr_stmt pos:start="671:29" pos:end="671:50"><expr pos:start="671:29" pos:end="671:49"><operator pos:start="671:29" pos:end="671:29">*</operator><name pos:start="671:30" pos:end="671:39">coeff_data</name><operator pos:start="671:40" pos:end="671:41">++</operator> <operator pos:start="671:43" pos:end="671:43">=</operator> <name pos:start="671:45" pos:end="671:49">coeff</name></expr>;</expr_stmt></block_content></block></for>

                    </block_content>}</block></while>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:41"><expr pos:start="677:17" pos:end="677:40"><call pos:start="677:17" pos:end="677:40"><name pos:start="677:17" pos:end="677:28">CLOSE_READER</name><argument_list pos:start="677:29" pos:end="677:40">(<argument pos:start="677:30" pos:end="677:31"><expr pos:start="677:30" pos:end="677:31"><name pos:start="677:30" pos:end="677:31">re</name></expr></argument>, <argument pos:start="677:34" pos:end="677:39"><expr pos:start="677:34" pos:end="677:39"><operator pos:start="677:34" pos:end="677:34">&amp;</operator><name pos:start="677:35" pos:end="677:39"><name pos:start="677:35" pos:end="677:35">s</name><operator pos:start="677:36" pos:end="677:37">-&gt;</operator><name pos:start="677:38" pos:end="677:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>



            <if_stmt pos:start="683:13" pos:end="691:13"><if pos:start="683:13" pos:end="691:13">if <condition pos:start="683:16" pos:end="683:33">(<expr pos:start="683:17" pos:end="683:32"><name pos:start="683:17" pos:end="683:21">count</name> <operator pos:start="683:23" pos:end="683:23">&gt;</operator> <name pos:start="683:25" pos:end="683:32">expected</name></expr>)</condition> <block pos:start="683:35" pos:end="691:13">{<block_content pos:start="685:17" pos:end="689:25">

                <expr_stmt pos:start="685:17" pos:end="685:98"><expr pos:start="685:17" pos:end="685:97"><call pos:start="685:17" pos:end="685:97"><name pos:start="685:17" pos:end="685:22">av_log</name><argument_list pos:start="685:23" pos:end="685:97">(<argument pos:start="685:24" pos:end="685:28"><expr pos:start="685:24" pos:end="685:28"><name pos:start="685:24" pos:end="685:28">avctx</name></expr></argument>, <argument pos:start="685:31" pos:end="685:42"><expr pos:start="685:31" pos:end="685:42"><name pos:start="685:31" pos:end="685:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="685:45" pos:end="685:96"><expr pos:start="685:45" pos:end="685:96"><literal type="string" pos:start="685:45" pos:end="685:96">"Escape codeword not found, probably corrupt data\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:38"><expr pos:start="687:17" pos:end="687:37"><name pos:start="687:17" pos:end="687:19">ret</name> <operator pos:start="687:21" pos:end="687:21">=</operator> <call pos:start="687:23" pos:end="687:37"><name pos:start="687:23" pos:end="687:29">AVERROR</name><argument_list pos:start="687:30" pos:end="687:37">(<argument pos:start="687:31" pos:end="687:36"><expr pos:start="687:31" pos:end="687:36"><name pos:start="687:31" pos:end="687:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="689:17" pos:end="689:25">goto <name pos:start="689:22" pos:end="689:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="695:13" pos:end="695:74"><expr pos:start="695:13" pos:end="695:73"><name pos:start="695:13" pos:end="695:17">bytes</name> <operator pos:start="695:19" pos:end="695:19">=</operator> <call pos:start="695:21" pos:end="695:73"><name pos:start="695:21" pos:end="695:27">FFALIGN</name><argument_list pos:start="695:28" pos:end="695:73">(<argument pos:start="695:29" pos:end="695:69"><expr pos:start="695:29" pos:end="695:69"><call pos:start="695:29" pos:end="695:69"><name pos:start="695:29" pos:end="695:42">FF_CEIL_RSHIFT</name><argument_list pos:start="695:43" pos:end="695:69">(<argument pos:start="695:44" pos:end="695:65"><expr pos:start="695:44" pos:end="695:65"><call pos:start="695:44" pos:end="695:65"><name pos:start="695:44" pos:end="695:57">get_bits_count</name><argument_list pos:start="695:58" pos:end="695:65">(<argument pos:start="695:59" pos:end="695:64"><expr pos:start="695:59" pos:end="695:64"><operator pos:start="695:59" pos:end="695:59">&amp;</operator><name pos:start="695:60" pos:end="695:64"><name pos:start="695:60" pos:end="695:60">s</name><operator pos:start="695:61" pos:end="695:62">-&gt;</operator><name pos:start="695:63" pos:end="695:64">gb</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="695:68" pos:end="695:68"><expr pos:start="695:68" pos:end="695:68"><literal type="number" pos:start="695:68" pos:end="695:68">3</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="695:72" pos:end="695:72"><expr pos:start="695:72" pos:end="695:72"><literal type="number" pos:start="695:72" pos:end="695:72">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="697:13" pos:end="707:55"><if pos:start="697:13" pos:end="705:13">if <condition pos:start="697:16" pos:end="697:56">(<expr pos:start="697:17" pos:end="697:55"><name pos:start="697:17" pos:end="697:21">bytes</name> <operator pos:start="697:23" pos:end="697:23">&gt;</operator> <call pos:start="697:25" pos:end="697:55"><name pos:start="697:25" pos:end="697:50">bytestream2_get_bytes_left</name><argument_list pos:start="697:51" pos:end="697:55">(<argument pos:start="697:52" pos:end="697:54"><expr pos:start="697:52" pos:end="697:54"><operator pos:start="697:52" pos:end="697:52">&amp;</operator><name pos:start="697:53" pos:end="697:54">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="697:58" pos:end="705:13">{<block_content pos:start="699:17" pos:end="703:25">

                <expr_stmt pos:start="699:17" pos:end="699:74"><expr pos:start="699:17" pos:end="699:73"><call pos:start="699:17" pos:end="699:73"><name pos:start="699:17" pos:end="699:22">av_log</name><argument_list pos:start="699:23" pos:end="699:73">(<argument pos:start="699:24" pos:end="699:28"><expr pos:start="699:24" pos:end="699:28"><name pos:start="699:24" pos:end="699:28">avctx</name></expr></argument>, <argument pos:start="699:31" pos:end="699:42"><expr pos:start="699:31" pos:end="699:42"><name pos:start="699:31" pos:end="699:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="699:45" pos:end="699:72"><expr pos:start="699:45" pos:end="699:72"><literal type="string" pos:start="699:45" pos:end="699:72">"Bitstream overread error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:38"><expr pos:start="701:17" pos:end="701:37"><name pos:start="701:17" pos:end="701:19">ret</name> <operator pos:start="701:21" pos:end="701:21">=</operator> <call pos:start="701:23" pos:end="701:37"><name pos:start="701:23" pos:end="701:29">AVERROR</name><argument_list pos:start="701:30" pos:end="701:37">(<argument pos:start="701:31" pos:end="701:36"><expr pos:start="701:31" pos:end="701:36"><name pos:start="701:31" pos:end="701:36">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="703:17" pos:end="703:25">goto <name pos:start="703:22" pos:end="703:24">end</name>;</goto>

            </block_content>}</block></if> <else pos:start="705:15" pos:end="707:55">else<block type="pseudo" pos:start="707:17" pos:end="707:55"><block_content pos:start="707:17" pos:end="707:55">

                <expr_stmt pos:start="707:17" pos:end="707:55"><expr pos:start="707:17" pos:end="707:54"><call pos:start="707:17" pos:end="707:54"><name pos:start="707:17" pos:end="707:32">bytestream2_seek</name><argument_list pos:start="707:33" pos:end="707:54">(<argument pos:start="707:34" pos:end="707:36"><expr pos:start="707:34" pos:end="707:36"><operator pos:start="707:34" pos:end="707:34">&amp;</operator><name pos:start="707:35" pos:end="707:36">gb</name></expr></argument>, <argument pos:start="707:39" pos:end="707:43"><expr pos:start="707:39" pos:end="707:43"><name pos:start="707:39" pos:end="707:43">bytes</name></expr></argument>, <argument pos:start="707:46" pos:end="707:53"><expr pos:start="707:46" pos:end="707:53"><name pos:start="707:46" pos:end="707:53">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="711:13" pos:end="711:101"><expr pos:start="711:13" pos:end="711:100"><call pos:start="711:13" pos:end="711:100"><name pos:start="711:13" pos:end="711:18">av_log</name><argument_list pos:start="711:19" pos:end="711:100">(<argument pos:start="711:20" pos:end="711:24"><expr pos:start="711:20" pos:end="711:24"><name pos:start="711:20" pos:end="711:24">avctx</name></expr></argument>, <argument pos:start="711:27" pos:end="711:38"><expr pos:start="711:27" pos:end="711:38"><name pos:start="711:27" pos:end="711:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="711:41" pos:end="711:74"><expr pos:start="711:41" pos:end="711:74"><literal type="string" pos:start="711:41" pos:end="711:74">"End subband coeffs %i extra %i\n"</literal></expr></argument>, <argument pos:start="711:77" pos:end="711:81"><expr pos:start="711:77" pos:end="711:81"><name pos:start="711:77" pos:end="711:81">count</name></expr></argument>, <argument pos:start="711:84" pos:end="711:99"><expr pos:start="711:84" pos:end="711:99"><name pos:start="711:84" pos:end="711:88">count</name> <operator pos:start="711:90" pos:end="711:90">-</operator> <name pos:start="711:92" pos:end="711:99">expected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="713:13" pos:end="713:28"><expr pos:start="713:13" pos:end="713:27"><name pos:start="713:13" pos:end="713:23"><name pos:start="713:13" pos:end="713:13">s</name><operator pos:start="713:14" pos:end="713:15">-&gt;</operator><name pos:start="713:16" pos:end="713:23">codebook</name></name> <operator pos:start="713:25" pos:end="713:25">=</operator> <literal type="number" pos:start="713:27" pos:end="713:27">0</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="717:13" pos:end="717:62">/* Copy last line of coefficients if odd height */</comment>

            <if_stmt pos:start="719:13" pos:end="727:13"><if pos:start="719:13" pos:end="727:13">if <condition pos:start="719:16" pos:end="719:36">(<expr pos:start="719:17" pos:end="719:35"><name pos:start="719:17" pos:end="719:31">highpass_height</name> <operator pos:start="719:33" pos:end="719:33">&amp;</operator> <literal type="number" pos:start="719:35" pos:end="719:35">1</literal></expr>)</condition> <block pos:start="719:38" pos:end="727:13">{<block_content pos:start="721:17" pos:end="725:62">

                <expr_stmt pos:start="721:17" pos:end="725:62"><expr pos:start="721:17" pos:end="725:61"><call pos:start="721:17" pos:end="725:61"><name pos:start="721:17" pos:end="721:22">memcpy</name><argument_list pos:start="721:23" pos:end="725:61">(<argument pos:start="721:24" pos:end="721:69"><expr pos:start="721:24" pos:end="721:69"><operator pos:start="721:24" pos:end="721:24">&amp;</operator><name pos:start="721:25" pos:end="721:69"><name pos:start="721:25" pos:end="721:34">coeff_data</name><index pos:start="721:35" pos:end="721:69">[<expr pos:start="721:36" pos:end="721:68"><name pos:start="721:36" pos:end="721:50">highpass_height</name> <operator pos:start="721:52" pos:end="721:52">*</operator> <name pos:start="721:54" pos:end="721:68">highpass_stride</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="723:24" pos:end="723:75"><expr pos:start="723:24" pos:end="723:75"><operator pos:start="723:24" pos:end="723:24">&amp;</operator><name pos:start="723:25" pos:end="723:75"><name pos:start="723:25" pos:end="723:34">coeff_data</name><index pos:start="723:35" pos:end="723:75">[<expr pos:start="723:36" pos:end="723:74"><operator pos:start="723:36" pos:end="723:36">(</operator><name pos:start="723:37" pos:end="723:51">highpass_height</name> <operator pos:start="723:53" pos:end="723:53">-</operator> <literal type="number" pos:start="723:55" pos:end="723:55">1</literal><operator pos:start="723:56" pos:end="723:56">)</operator> <operator pos:start="723:58" pos:end="723:58">*</operator> <name pos:start="723:60" pos:end="723:74">highpass_stride</name></expr>]</index></name></expr></argument>,

                       <argument pos:start="725:24" pos:end="725:60"><expr pos:start="725:24" pos:end="725:60"><name pos:start="725:24" pos:end="725:38">highpass_stride</name> <operator pos:start="725:40" pos:end="725:40">*</operator> <sizeof pos:start="725:42" pos:end="725:60">sizeof<argument_list pos:start="725:48" pos:end="725:60">(<argument pos:start="725:49" pos:end="725:59"><expr pos:start="725:49" pos:end="725:59"><operator pos:start="725:49" pos:end="725:49">*</operator><name pos:start="725:50" pos:end="725:59">coeff_data</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="735:5" pos:end="745:5"><if pos:start="735:5" pos:end="745:5">if <condition pos:start="735:8" pos:end="737:80">(<expr pos:start="735:9" pos:end="737:79"><operator pos:start="735:9" pos:end="735:9">!</operator><name pos:start="735:10" pos:end="735:19"><name pos:start="735:10" pos:end="735:10">s</name><operator pos:start="735:11" pos:end="735:12">-&gt;</operator><name pos:start="735:13" pos:end="735:19">a_width</name></name> <operator pos:start="735:21" pos:end="735:22">||</operator> <operator pos:start="735:24" pos:end="735:24">!</operator><name pos:start="735:25" pos:end="735:35"><name pos:start="735:25" pos:end="735:25">s</name><operator pos:start="735:26" pos:end="735:27">-&gt;</operator><name pos:start="735:28" pos:end="735:35">a_height</name></name> <operator pos:start="735:37" pos:end="735:38">||</operator> <name pos:start="735:40" pos:end="735:50"><name pos:start="735:40" pos:end="735:40">s</name><operator pos:start="735:41" pos:end="735:42">-&gt;</operator><name pos:start="735:43" pos:end="735:50">a_format</name></name> <operator pos:start="735:52" pos:end="735:53">==</operator> <name pos:start="735:55" pos:end="735:69">AV_PIX_FMT_NONE</name> <operator pos:start="735:71" pos:end="735:72">||</operator>

        <name pos:start="737:9" pos:end="737:22"><name pos:start="737:9" pos:end="737:9">s</name><operator pos:start="737:10" pos:end="737:11">-&gt;</operator><name pos:start="737:12" pos:end="737:22">coded_width</name></name> <operator pos:start="737:24" pos:end="737:25">||</operator> <name pos:start="737:27" pos:end="737:41"><name pos:start="737:27" pos:end="737:27">s</name><operator pos:start="737:28" pos:end="737:29">-&gt;</operator><name pos:start="737:30" pos:end="737:41">coded_height</name></name> <operator pos:start="737:43" pos:end="737:44">||</operator> <name pos:start="737:46" pos:end="737:60"><name pos:start="737:46" pos:end="737:46">s</name><operator pos:start="737:47" pos:end="737:48">-&gt;</operator><name pos:start="737:49" pos:end="737:60">coded_format</name></name> <operator pos:start="737:62" pos:end="737:63">!=</operator> <name pos:start="737:65" pos:end="737:79">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="737:82" pos:end="745:5">{<block_content pos:start="739:9" pos:end="743:17">

        <expr_stmt pos:start="739:9" pos:end="739:60"><expr pos:start="739:9" pos:end="739:59"><call pos:start="739:9" pos:end="739:59"><name pos:start="739:9" pos:end="739:14">av_log</name><argument_list pos:start="739:15" pos:end="739:59">(<argument pos:start="739:16" pos:end="739:20"><expr pos:start="739:16" pos:end="739:20"><name pos:start="739:16" pos:end="739:20">avctx</name></expr></argument>, <argument pos:start="739:23" pos:end="739:34"><expr pos:start="739:23" pos:end="739:34"><name pos:start="739:23" pos:end="739:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="739:37" pos:end="739:58"><expr pos:start="739:37" pos:end="739:58"><literal type="string" pos:start="739:37" pos:end="739:58">"Invalid dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="741:9" pos:end="741:30"><expr pos:start="741:9" pos:end="741:29"><name pos:start="741:9" pos:end="741:11">ret</name> <operator pos:start="741:13" pos:end="741:13">=</operator> <call pos:start="741:15" pos:end="741:29"><name pos:start="741:15" pos:end="741:21">AVERROR</name><argument_list pos:start="741:22" pos:end="741:29">(<argument pos:start="741:23" pos:end="741:28"><expr pos:start="741:23" pos:end="741:28"><name pos:start="741:23" pos:end="741:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="743:9" pos:end="743:17">goto <name pos:start="743:14" pos:end="743:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="749:5" pos:end="757:5"><if pos:start="749:5" pos:end="757:5">if <condition pos:start="749:8" pos:end="749:20">(<expr pos:start="749:9" pos:end="749:19"><operator pos:start="749:9" pos:end="749:9">!</operator><name pos:start="749:10" pos:end="749:19">got_buffer</name></expr>)</condition> <block pos:start="749:22" pos:end="757:5">{<block_content pos:start="751:9" pos:end="755:17">

        <expr_stmt pos:start="751:9" pos:end="751:68"><expr pos:start="751:9" pos:end="751:67"><call pos:start="751:9" pos:end="751:67"><name pos:start="751:9" pos:end="751:14">av_log</name><argument_list pos:start="751:15" pos:end="751:67">(<argument pos:start="751:16" pos:end="751:20"><expr pos:start="751:16" pos:end="751:20"><name pos:start="751:16" pos:end="751:20">avctx</name></expr></argument>, <argument pos:start="751:23" pos:end="751:34"><expr pos:start="751:23" pos:end="751:34"><name pos:start="751:23" pos:end="751:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="751:37" pos:end="751:66"><expr pos:start="751:37" pos:end="751:66"><literal type="string" pos:start="751:37" pos:end="751:66">"No end of header tag found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="753:9" pos:end="753:30"><expr pos:start="753:9" pos:end="753:29"><name pos:start="753:9" pos:end="753:11">ret</name> <operator pos:start="753:13" pos:end="753:13">=</operator> <call pos:start="753:15" pos:end="753:29"><name pos:start="753:15" pos:end="753:21">AVERROR</name><argument_list pos:start="753:22" pos:end="753:29">(<argument pos:start="753:23" pos:end="753:28"><expr pos:start="753:23" pos:end="753:28"><name pos:start="753:23" pos:end="753:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="755:9" pos:end="755:17">goto <name pos:start="755:14" pos:end="755:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="761:5" pos:end="761:53"><expr pos:start="761:5" pos:end="761:52"><name pos:start="761:5" pos:end="761:10">planes</name> <operator pos:start="761:12" pos:end="761:12">=</operator> <call pos:start="761:14" pos:end="761:52"><name pos:start="761:14" pos:end="761:36">av_pix_fmt_count_planes</name><argument_list pos:start="761:37" pos:end="761:52">(<argument pos:start="761:38" pos:end="761:51"><expr pos:start="761:38" pos:end="761:51"><name pos:start="761:38" pos:end="761:51"><name pos:start="761:38" pos:end="761:42">avctx</name><operator pos:start="761:43" pos:end="761:44">-&gt;</operator><name pos:start="761:45" pos:end="761:51">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="763:5" pos:end="1069:5">for <control pos:start="763:9" pos:end="763:52">(<init pos:start="763:10" pos:end="763:19"><expr pos:start="763:10" pos:end="763:18"><name pos:start="763:10" pos:end="763:14">plane</name> <operator pos:start="763:16" pos:end="763:16">=</operator> <literal type="number" pos:start="763:18" pos:end="763:18">0</literal></expr>;</init> <condition pos:start="763:21" pos:end="763:43"><expr pos:start="763:21" pos:end="763:42"><name pos:start="763:21" pos:end="763:25">plane</name> <operator pos:start="763:27" pos:end="763:27">&lt;</operator> <name pos:start="763:29" pos:end="763:34">planes</name> <operator pos:start="763:36" pos:end="763:37">&amp;&amp;</operator> <operator pos:start="763:39" pos:end="763:39">!</operator><name pos:start="763:40" pos:end="763:42">ret</name></expr>;</condition> <incr pos:start="763:45" pos:end="763:51"><expr pos:start="763:45" pos:end="763:51"><name pos:start="763:45" pos:end="763:49">plane</name><operator pos:start="763:50" pos:end="763:51">++</operator></expr></incr>)</control> <block pos:start="763:54" pos:end="1069:5">{<block_content pos:start="767:9" pos:end="1067:9">

        <comment type="block" pos:start="765:9" pos:end="765:21">/* level 1 */</comment>

        <decl_stmt pos:start="767:9" pos:end="767:64"><decl pos:start="767:9" pos:end="767:63"><type pos:start="767:9" pos:end="767:11"><name pos:start="767:9" pos:end="767:11">int</name></type> <name pos:start="767:13" pos:end="767:26">lowpass_height</name>  <init pos:start="767:29" pos:end="767:63">= <expr pos:start="767:31" pos:end="767:63"><name pos:start="767:31" pos:end="767:45"><name pos:start="767:31" pos:end="767:31">s</name><operator pos:start="767:32" pos:end="767:33">-&gt;</operator><name pos:start="767:34" pos:end="767:38">plane</name><index pos:start="767:39" pos:end="767:45">[<expr pos:start="767:40" pos:end="767:44"><name pos:start="767:40" pos:end="767:44">plane</name></expr>]</index></name><operator pos:start="767:46" pos:end="767:46">.</operator><name pos:start="767:47" pos:end="767:56"><name pos:start="767:47" pos:end="767:50">band</name><index pos:start="767:51" pos:end="767:53">[<expr pos:start="767:52" pos:end="767:52"><literal type="number" pos:start="767:52" pos:end="767:52">0</literal></expr>]</index><index pos:start="767:54" pos:end="767:56">[<expr pos:start="767:55" pos:end="767:55"><literal type="number" pos:start="767:55" pos:end="767:55">0</literal></expr>]</index></name><operator pos:start="767:57" pos:end="767:57">.</operator><name pos:start="767:58" pos:end="767:63">height</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="769:9" pos:end="769:63"><decl pos:start="769:9" pos:end="769:62"><type pos:start="769:9" pos:end="769:11"><name pos:start="769:9" pos:end="769:11">int</name></type> <name pos:start="769:13" pos:end="769:25">lowpass_width</name>   <init pos:start="769:29" pos:end="769:62">= <expr pos:start="769:31" pos:end="769:62"><name pos:start="769:31" pos:end="769:45"><name pos:start="769:31" pos:end="769:31">s</name><operator pos:start="769:32" pos:end="769:33">-&gt;</operator><name pos:start="769:34" pos:end="769:38">plane</name><index pos:start="769:39" pos:end="769:45">[<expr pos:start="769:40" pos:end="769:44"><name pos:start="769:40" pos:end="769:44">plane</name></expr>]</index></name><operator pos:start="769:46" pos:end="769:46">.</operator><name pos:start="769:47" pos:end="769:56"><name pos:start="769:47" pos:end="769:50">band</name><index pos:start="769:51" pos:end="769:53">[<expr pos:start="769:52" pos:end="769:52"><literal type="number" pos:start="769:52" pos:end="769:52">0</literal></expr>]</index><index pos:start="769:54" pos:end="769:56">[<expr pos:start="769:55" pos:end="769:55"><literal type="number" pos:start="769:55" pos:end="769:55">0</literal></expr>]</index></name><operator pos:start="769:57" pos:end="769:57">.</operator><name pos:start="769:58" pos:end="769:62">width</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="771:9" pos:end="771:64"><decl pos:start="771:9" pos:end="771:63"><type pos:start="771:9" pos:end="771:11"><name pos:start="771:9" pos:end="771:11">int</name></type> <name pos:start="771:13" pos:end="771:27">highpass_stride</name> <init pos:start="771:29" pos:end="771:63">= <expr pos:start="771:31" pos:end="771:63"><name pos:start="771:31" pos:end="771:45"><name pos:start="771:31" pos:end="771:31">s</name><operator pos:start="771:32" pos:end="771:33">-&gt;</operator><name pos:start="771:34" pos:end="771:38">plane</name><index pos:start="771:39" pos:end="771:45">[<expr pos:start="771:40" pos:end="771:44"><name pos:start="771:40" pos:end="771:44">plane</name></expr>]</index></name><operator pos:start="771:46" pos:end="771:46">.</operator><name pos:start="771:47" pos:end="771:56"><name pos:start="771:47" pos:end="771:50">band</name><index pos:start="771:51" pos:end="771:53">[<expr pos:start="771:52" pos:end="771:52"><literal type="number" pos:start="771:52" pos:end="771:52">0</literal></expr>]</index><index pos:start="771:54" pos:end="771:56">[<expr pos:start="771:55" pos:end="771:55"><literal type="number" pos:start="771:55" pos:end="771:55">1</literal></expr>]</index></name><operator pos:start="771:57" pos:end="771:57">.</operator><name pos:start="771:58" pos:end="771:63">stride</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="773:9" pos:end="773:64"><decl pos:start="773:9" pos:end="773:63"><type pos:start="773:9" pos:end="773:11"><name pos:start="773:9" pos:end="773:11">int</name></type> <name pos:start="773:13" pos:end="773:21">act_plane</name> <init pos:start="773:23" pos:end="773:63">= <expr pos:start="773:25" pos:end="773:63"><ternary pos:start="773:25" pos:end="773:63"><condition pos:start="773:25" pos:end="773:36"><expr pos:start="773:25" pos:end="773:34"><name pos:start="773:25" pos:end="773:29">plane</name> <operator pos:start="773:31" pos:end="773:32">==</operator> <literal type="number" pos:start="773:34" pos:end="773:34">1</literal></expr> ?</condition><then pos:start="773:38" pos:end="773:38"> <expr pos:start="773:38" pos:end="773:38"><literal type="number" pos:start="773:38" pos:end="773:38">2</literal></expr> </then><else pos:start="773:40" pos:end="773:63">: <expr pos:start="773:42" pos:end="773:63"><ternary pos:start="773:42" pos:end="773:63"><condition pos:start="773:42" pos:end="773:53"><expr pos:start="773:42" pos:end="773:51"><name pos:start="773:42" pos:end="773:46">plane</name> <operator pos:start="773:48" pos:end="773:49">==</operator> <literal type="number" pos:start="773:51" pos:end="773:51">2</literal></expr> ?</condition><then pos:start="773:55" pos:end="773:55"> <expr pos:start="773:55" pos:end="773:55"><literal type="number" pos:start="773:55" pos:end="773:55">1</literal></expr> </then><else pos:start="773:57" pos:end="773:63">: <expr pos:start="773:59" pos:end="773:63"><name pos:start="773:59" pos:end="773:63">plane</name></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="775:9" pos:end="775:43"><decl pos:start="775:9" pos:end="775:20"><type pos:start="775:9" pos:end="775:17"><name pos:start="775:9" pos:end="775:15">int16_t</name> <modifier pos:start="775:17" pos:end="775:17">*</modifier></type><name pos:start="775:18" pos:end="775:20">low</name></decl>, <decl pos:start="775:23" pos:end="775:27"><type ref="prev" pos:start="775:9" pos:end="775:17"><modifier pos:start="775:23" pos:end="775:23">*</modifier></type><name pos:start="775:24" pos:end="775:27">high</name></decl>, <decl pos:start="775:30" pos:end="775:36"><type ref="prev" pos:start="775:9" pos:end="775:17"><modifier pos:start="775:30" pos:end="775:30">*</modifier></type><name pos:start="775:31" pos:end="775:36">output</name></decl>, <decl pos:start="775:39" pos:end="775:42"><type ref="prev" pos:start="775:9" pos:end="775:17"><modifier pos:start="775:39" pos:end="775:39">*</modifier></type><name pos:start="775:40" pos:end="775:42">dst</name></decl>;</decl_stmt>



        <if_stmt pos:start="779:9" pos:end="789:9"><if pos:start="779:9" pos:end="789:9">if <condition pos:start="779:12" pos:end="781:102">(<expr pos:start="779:13" pos:end="781:101"><name pos:start="779:13" pos:end="779:26">lowpass_height</name> <operator pos:start="779:28" pos:end="779:28">&gt;</operator> <name pos:start="779:30" pos:end="779:44"><name pos:start="779:30" pos:end="779:30">s</name><operator pos:start="779:31" pos:end="779:32">-&gt;</operator><name pos:start="779:33" pos:end="779:37">plane</name><index pos:start="779:38" pos:end="779:44">[<expr pos:start="779:39" pos:end="779:43"><name pos:start="779:39" pos:end="779:43">plane</name></expr>]</index></name><operator pos:start="779:45" pos:end="779:45">.</operator><name pos:start="779:46" pos:end="779:55"><name pos:start="779:46" pos:end="779:49">band</name><index pos:start="779:50" pos:end="779:52">[<expr pos:start="779:51" pos:end="779:51"><literal type="number" pos:start="779:51" pos:end="779:51">0</literal></expr>]</index><index pos:start="779:53" pos:end="779:55">[<expr pos:start="779:54" pos:end="779:54"><literal type="number" pos:start="779:54" pos:end="779:54">0</literal></expr>]</index></name><operator pos:start="779:56" pos:end="779:56">.</operator><name pos:start="779:57" pos:end="779:64">a_height</name> <operator pos:start="779:66" pos:end="779:67">||</operator> <name pos:start="779:69" pos:end="779:81">lowpass_width</name> <operator pos:start="779:83" pos:end="779:83">&gt;</operator> <name pos:start="779:85" pos:end="779:99"><name pos:start="779:85" pos:end="779:85">s</name><operator pos:start="779:86" pos:end="779:87">-&gt;</operator><name pos:start="779:88" pos:end="779:92">plane</name><index pos:start="779:93" pos:end="779:99">[<expr pos:start="779:94" pos:end="779:98"><name pos:start="779:94" pos:end="779:98">plane</name></expr>]</index></name><operator pos:start="779:100" pos:end="779:100">.</operator><name pos:start="779:101" pos:end="779:110"><name pos:start="779:101" pos:end="779:104">band</name><index pos:start="779:105" pos:end="779:107">[<expr pos:start="779:106" pos:end="779:106"><literal type="number" pos:start="779:106" pos:end="779:106">0</literal></expr>]</index><index pos:start="779:108" pos:end="779:110">[<expr pos:start="779:109" pos:end="779:109"><literal type="number" pos:start="779:109" pos:end="779:109">0</literal></expr>]</index></name><operator pos:start="779:111" pos:end="779:111">.</operator><name pos:start="779:112" pos:end="779:118">a_width</name> <operator pos:start="779:120" pos:end="779:121">||</operator>

            <operator pos:start="781:13" pos:end="781:13">!</operator><name pos:start="781:14" pos:end="781:28">highpass_stride</name> <operator pos:start="781:30" pos:end="781:31">||</operator> <name pos:start="781:33" pos:end="781:47"><name pos:start="781:33" pos:end="781:33">s</name><operator pos:start="781:34" pos:end="781:35">-&gt;</operator><name pos:start="781:36" pos:end="781:40">plane</name><index pos:start="781:41" pos:end="781:47">[<expr pos:start="781:42" pos:end="781:46"><name pos:start="781:42" pos:end="781:46">plane</name></expr>]</index></name><operator pos:start="781:48" pos:end="781:48">.</operator><name pos:start="781:49" pos:end="781:58"><name pos:start="781:49" pos:end="781:52">band</name><index pos:start="781:53" pos:end="781:55">[<expr pos:start="781:54" pos:end="781:54"><literal type="number" pos:start="781:54" pos:end="781:54">0</literal></expr>]</index><index pos:start="781:56" pos:end="781:58">[<expr pos:start="781:57" pos:end="781:57"><literal type="number" pos:start="781:57" pos:end="781:57">1</literal></expr>]</index></name><operator pos:start="781:59" pos:end="781:59">.</operator><name pos:start="781:60" pos:end="781:64">width</name> <operator pos:start="781:66" pos:end="781:66">&gt;</operator> <name pos:start="781:68" pos:end="781:82"><name pos:start="781:68" pos:end="781:68">s</name><operator pos:start="781:69" pos:end="781:70">-&gt;</operator><name pos:start="781:71" pos:end="781:75">plane</name><index pos:start="781:76" pos:end="781:82">[<expr pos:start="781:77" pos:end="781:81"><name pos:start="781:77" pos:end="781:81">plane</name></expr>]</index></name><operator pos:start="781:83" pos:end="781:83">.</operator><name pos:start="781:84" pos:end="781:93"><name pos:start="781:84" pos:end="781:87">band</name><index pos:start="781:88" pos:end="781:90">[<expr pos:start="781:89" pos:end="781:89"><literal type="number" pos:start="781:89" pos:end="781:89">0</literal></expr>]</index><index pos:start="781:91" pos:end="781:93">[<expr pos:start="781:92" pos:end="781:92"><literal type="number" pos:start="781:92" pos:end="781:92">1</literal></expr>]</index></name><operator pos:start="781:94" pos:end="781:94">.</operator><name pos:start="781:95" pos:end="781:101">a_width</name></expr>)</condition> <block pos:start="781:104" pos:end="789:9">{<block_content pos:start="783:13" pos:end="787:21">

            <expr_stmt pos:start="783:13" pos:end="783:70"><expr pos:start="783:13" pos:end="783:69"><call pos:start="783:13" pos:end="783:69"><name pos:start="783:13" pos:end="783:18">av_log</name><argument_list pos:start="783:19" pos:end="783:69">(<argument pos:start="783:20" pos:end="783:24"><expr pos:start="783:20" pos:end="783:24"><name pos:start="783:20" pos:end="783:24">avctx</name></expr></argument>, <argument pos:start="783:27" pos:end="783:38"><expr pos:start="783:27" pos:end="783:38"><name pos:start="783:27" pos:end="783:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="783:41" pos:end="783:68"><expr pos:start="783:41" pos:end="783:68"><literal type="string" pos:start="783:41" pos:end="783:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="785:13" pos:end="785:34"><expr pos:start="785:13" pos:end="785:33"><name pos:start="785:13" pos:end="785:15">ret</name> <operator pos:start="785:17" pos:end="785:17">=</operator> <call pos:start="785:19" pos:end="785:33"><name pos:start="785:19" pos:end="785:25">AVERROR</name><argument_list pos:start="785:26" pos:end="785:33">(<argument pos:start="785:27" pos:end="785:32"><expr pos:start="785:27" pos:end="785:32"><name pos:start="785:27" pos:end="785:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="787:13" pos:end="787:21">goto <name pos:start="787:18" pos:end="787:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="793:9" pos:end="793:131"><expr pos:start="793:9" pos:end="793:130"><call pos:start="793:9" pos:end="793:130"><name pos:start="793:9" pos:end="793:14">av_log</name><argument_list pos:start="793:15" pos:end="793:130">(<argument pos:start="793:16" pos:end="793:20"><expr pos:start="793:16" pos:end="793:20"><name pos:start="793:16" pos:end="793:20">avctx</name></expr></argument>, <argument pos:start="793:23" pos:end="793:34"><expr pos:start="793:23" pos:end="793:34"><name pos:start="793:23" pos:end="793:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="793:37" pos:end="793:74"><expr pos:start="793:37" pos:end="793:74"><literal type="string" pos:start="793:37" pos:end="793:74">"Decoding level 1 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="793:77" pos:end="793:81"><expr pos:start="793:77" pos:end="793:81"><name pos:start="793:77" pos:end="793:81">plane</name></expr></argument>, <argument pos:start="793:84" pos:end="793:97"><expr pos:start="793:84" pos:end="793:97"><name pos:start="793:84" pos:end="793:97">lowpass_height</name></expr></argument>, <argument pos:start="793:100" pos:end="793:112"><expr pos:start="793:100" pos:end="793:112"><name pos:start="793:100" pos:end="793:112">lowpass_width</name></expr></argument>, <argument pos:start="793:115" pos:end="793:129"><expr pos:start="793:115" pos:end="793:129"><name pos:start="793:115" pos:end="793:129">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="797:9" pos:end="797:44"><expr pos:start="797:9" pos:end="797:43"><name pos:start="797:9" pos:end="797:11">low</name>    <operator pos:start="797:16" pos:end="797:16">=</operator> <name pos:start="797:18" pos:end="797:32"><name pos:start="797:18" pos:end="797:18">s</name><operator pos:start="797:19" pos:end="797:20">-&gt;</operator><name pos:start="797:21" pos:end="797:25">plane</name><index pos:start="797:26" pos:end="797:32">[<expr pos:start="797:27" pos:end="797:31"><name pos:start="797:27" pos:end="797:31">plane</name></expr>]</index></name><operator pos:start="797:33" pos:end="797:33">.</operator><name pos:start="797:34" pos:end="797:43"><name pos:start="797:34" pos:end="797:40">subband</name><index pos:start="797:41" pos:end="797:43">[<expr pos:start="797:42" pos:end="797:42"><literal type="number" pos:start="797:42" pos:end="797:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="799:9" pos:end="799:44"><expr pos:start="799:9" pos:end="799:43"><name pos:start="799:9" pos:end="799:12">high</name>   <operator pos:start="799:16" pos:end="799:16">=</operator> <name pos:start="799:18" pos:end="799:32"><name pos:start="799:18" pos:end="799:18">s</name><operator pos:start="799:19" pos:end="799:20">-&gt;</operator><name pos:start="799:21" pos:end="799:25">plane</name><index pos:start="799:26" pos:end="799:32">[<expr pos:start="799:27" pos:end="799:31"><name pos:start="799:27" pos:end="799:31">plane</name></expr>]</index></name><operator pos:start="799:33" pos:end="799:33">.</operator><name pos:start="799:34" pos:end="799:43"><name pos:start="799:34" pos:end="799:40">subband</name><index pos:start="799:41" pos:end="799:43">[<expr pos:start="799:42" pos:end="799:42"><literal type="number" pos:start="799:42" pos:end="799:42">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:40"><expr pos:start="801:9" pos:end="801:39"><name pos:start="801:9" pos:end="801:14">output</name> <operator pos:start="801:16" pos:end="801:16">=</operator> <name pos:start="801:18" pos:end="801:32"><name pos:start="801:18" pos:end="801:18">s</name><operator pos:start="801:19" pos:end="801:20">-&gt;</operator><name pos:start="801:21" pos:end="801:25">plane</name><index pos:start="801:26" pos:end="801:32">[<expr pos:start="801:27" pos:end="801:31"><name pos:start="801:27" pos:end="801:31">plane</name></expr>]</index></name><operator pos:start="801:33" pos:end="801:33">.</operator><name pos:start="801:34" pos:end="801:39"><name pos:start="801:34" pos:end="801:36">l_h</name><index pos:start="801:37" pos:end="801:39">[<expr pos:start="801:38" pos:end="801:38"><literal type="number" pos:start="801:38" pos:end="801:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="803:9" pos:end="813:9">for <control pos:start="803:13" pos:end="803:43">(<init pos:start="803:14" pos:end="803:19"><expr pos:start="803:14" pos:end="803:18"><name pos:start="803:14" pos:end="803:14">i</name> <operator pos:start="803:16" pos:end="803:16">=</operator> <literal type="number" pos:start="803:18" pos:end="803:18">0</literal></expr>;</init> <condition pos:start="803:21" pos:end="803:38"><expr pos:start="803:21" pos:end="803:37"><name pos:start="803:21" pos:end="803:21">i</name> <operator pos:start="803:23" pos:end="803:23">&lt;</operator> <name pos:start="803:25" pos:end="803:37">lowpass_width</name></expr>;</condition> <incr pos:start="803:40" pos:end="803:42"><expr pos:start="803:40" pos:end="803:42"><name pos:start="803:40" pos:end="803:40">i</name><operator pos:start="803:41" pos:end="803:42">++</operator></expr></incr>)</control> <block pos:start="803:45" pos:end="813:9">{<block_content pos:start="805:13" pos:end="811:21">

            <expr_stmt pos:start="805:13" pos:end="805:106"><expr pos:start="805:13" pos:end="805:105"><call pos:start="805:13" pos:end="805:105"><name pos:start="805:13" pos:end="805:23">vert_filter</name><argument_list pos:start="805:24" pos:end="805:105">(<argument pos:start="805:25" pos:end="805:30"><expr pos:start="805:25" pos:end="805:30"><name pos:start="805:25" pos:end="805:30">output</name></expr></argument>, <argument pos:start="805:33" pos:end="805:45"><expr pos:start="805:33" pos:end="805:45"><name pos:start="805:33" pos:end="805:45">lowpass_width</name></expr></argument>, <argument pos:start="805:48" pos:end="805:50"><expr pos:start="805:48" pos:end="805:50"><name pos:start="805:48" pos:end="805:50">low</name></expr></argument>, <argument pos:start="805:53" pos:end="805:65"><expr pos:start="805:53" pos:end="805:65"><name pos:start="805:53" pos:end="805:65">lowpass_width</name></expr></argument>, <argument pos:start="805:68" pos:end="805:71"><expr pos:start="805:68" pos:end="805:71"><name pos:start="805:68" pos:end="805:71">high</name></expr></argument>, <argument pos:start="805:74" pos:end="805:88"><expr pos:start="805:74" pos:end="805:88"><name pos:start="805:74" pos:end="805:88">highpass_stride</name></expr></argument>, <argument pos:start="805:91" pos:end="805:104"><expr pos:start="805:91" pos:end="805:104"><name pos:start="805:91" pos:end="805:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="807:13" pos:end="807:18"><expr pos:start="807:13" pos:end="807:17"><name pos:start="807:13" pos:end="807:15">low</name><operator pos:start="807:16" pos:end="807:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="809:13" pos:end="809:19"><expr pos:start="809:13" pos:end="809:18"><name pos:start="809:13" pos:end="809:16">high</name><operator pos:start="809:17" pos:end="809:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="811:13" pos:end="811:21"><expr pos:start="811:13" pos:end="811:20"><name pos:start="811:13" pos:end="811:18">output</name><operator pos:start="811:19" pos:end="811:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="817:9" pos:end="817:44"><expr pos:start="817:9" pos:end="817:43"><name pos:start="817:9" pos:end="817:11">low</name>    <operator pos:start="817:16" pos:end="817:16">=</operator> <name pos:start="817:18" pos:end="817:32"><name pos:start="817:18" pos:end="817:18">s</name><operator pos:start="817:19" pos:end="817:20">-&gt;</operator><name pos:start="817:21" pos:end="817:25">plane</name><index pos:start="817:26" pos:end="817:32">[<expr pos:start="817:27" pos:end="817:31"><name pos:start="817:27" pos:end="817:31">plane</name></expr>]</index></name><operator pos:start="817:33" pos:end="817:33">.</operator><name pos:start="817:34" pos:end="817:43"><name pos:start="817:34" pos:end="817:40">subband</name><index pos:start="817:41" pos:end="817:43">[<expr pos:start="817:42" pos:end="817:42"><literal type="number" pos:start="817:42" pos:end="817:42">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="819:9" pos:end="819:44"><expr pos:start="819:9" pos:end="819:43"><name pos:start="819:9" pos:end="819:12">high</name>   <operator pos:start="819:16" pos:end="819:16">=</operator> <name pos:start="819:18" pos:end="819:32"><name pos:start="819:18" pos:end="819:18">s</name><operator pos:start="819:19" pos:end="819:20">-&gt;</operator><name pos:start="819:21" pos:end="819:25">plane</name><index pos:start="819:26" pos:end="819:32">[<expr pos:start="819:27" pos:end="819:31"><name pos:start="819:27" pos:end="819:31">plane</name></expr>]</index></name><operator pos:start="819:33" pos:end="819:33">.</operator><name pos:start="819:34" pos:end="819:43"><name pos:start="819:34" pos:end="819:40">subband</name><index pos:start="819:41" pos:end="819:43">[<expr pos:start="819:42" pos:end="819:42"><literal type="number" pos:start="819:42" pos:end="819:42">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="821:9" pos:end="821:40"><expr pos:start="821:9" pos:end="821:39"><name pos:start="821:9" pos:end="821:14">output</name> <operator pos:start="821:16" pos:end="821:16">=</operator> <name pos:start="821:18" pos:end="821:32"><name pos:start="821:18" pos:end="821:18">s</name><operator pos:start="821:19" pos:end="821:20">-&gt;</operator><name pos:start="821:21" pos:end="821:25">plane</name><index pos:start="821:26" pos:end="821:32">[<expr pos:start="821:27" pos:end="821:31"><name pos:start="821:27" pos:end="821:31">plane</name></expr>]</index></name><operator pos:start="821:33" pos:end="821:33">.</operator><name pos:start="821:34" pos:end="821:39"><name pos:start="821:34" pos:end="821:36">l_h</name><index pos:start="821:37" pos:end="821:39">[<expr pos:start="821:38" pos:end="821:38"><literal type="number" pos:start="821:38" pos:end="821:38">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="825:9" pos:end="837:9">for <control pos:start="825:13" pos:end="825:43">(<init pos:start="825:14" pos:end="825:19"><expr pos:start="825:14" pos:end="825:18"><name pos:start="825:14" pos:end="825:14">i</name> <operator pos:start="825:16" pos:end="825:16">=</operator> <literal type="number" pos:start="825:18" pos:end="825:18">0</literal></expr>;</init> <condition pos:start="825:21" pos:end="825:38"><expr pos:start="825:21" pos:end="825:37"><name pos:start="825:21" pos:end="825:21">i</name> <operator pos:start="825:23" pos:end="825:23">&lt;</operator> <name pos:start="825:25" pos:end="825:37">lowpass_width</name></expr>;</condition> <incr pos:start="825:40" pos:end="825:42"><expr pos:start="825:40" pos:end="825:42"><name pos:start="825:40" pos:end="825:40">i</name><operator pos:start="825:41" pos:end="825:42">++</operator></expr></incr>)</control> <block pos:start="825:45" pos:end="837:9">{<block_content pos:start="829:13" pos:end="835:21">

            <comment type="line" pos:start="827:13" pos:end="827:58">// note the stride of "low" is highpass_stride</comment>

            <expr_stmt pos:start="829:13" pos:end="829:108"><expr pos:start="829:13" pos:end="829:107"><call pos:start="829:13" pos:end="829:107"><name pos:start="829:13" pos:end="829:23">vert_filter</name><argument_list pos:start="829:24" pos:end="829:107">(<argument pos:start="829:25" pos:end="829:30"><expr pos:start="829:25" pos:end="829:30"><name pos:start="829:25" pos:end="829:30">output</name></expr></argument>, <argument pos:start="829:33" pos:end="829:45"><expr pos:start="829:33" pos:end="829:45"><name pos:start="829:33" pos:end="829:45">lowpass_width</name></expr></argument>, <argument pos:start="829:48" pos:end="829:50"><expr pos:start="829:48" pos:end="829:50"><name pos:start="829:48" pos:end="829:50">low</name></expr></argument>, <argument pos:start="829:53" pos:end="829:67"><expr pos:start="829:53" pos:end="829:67"><name pos:start="829:53" pos:end="829:67">highpass_stride</name></expr></argument>, <argument pos:start="829:70" pos:end="829:73"><expr pos:start="829:70" pos:end="829:73"><name pos:start="829:70" pos:end="829:73">high</name></expr></argument>, <argument pos:start="829:76" pos:end="829:90"><expr pos:start="829:76" pos:end="829:90"><name pos:start="829:76" pos:end="829:90">highpass_stride</name></expr></argument>, <argument pos:start="829:93" pos:end="829:106"><expr pos:start="829:93" pos:end="829:106"><name pos:start="829:93" pos:end="829:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="831:13" pos:end="831:18"><expr pos:start="831:13" pos:end="831:17"><name pos:start="831:13" pos:end="831:15">low</name><operator pos:start="831:16" pos:end="831:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="833:13" pos:end="833:19"><expr pos:start="833:13" pos:end="833:18"><name pos:start="833:13" pos:end="833:16">high</name><operator pos:start="833:17" pos:end="833:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="835:13" pos:end="835:21"><expr pos:start="835:13" pos:end="835:20"><name pos:start="835:13" pos:end="835:18">output</name><operator pos:start="835:19" pos:end="835:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="841:9" pos:end="841:40"><expr pos:start="841:9" pos:end="841:39"><name pos:start="841:9" pos:end="841:11">low</name>    <operator pos:start="841:16" pos:end="841:16">=</operator> <name pos:start="841:18" pos:end="841:32"><name pos:start="841:18" pos:end="841:18">s</name><operator pos:start="841:19" pos:end="841:20">-&gt;</operator><name pos:start="841:21" pos:end="841:25">plane</name><index pos:start="841:26" pos:end="841:32">[<expr pos:start="841:27" pos:end="841:31"><name pos:start="841:27" pos:end="841:31">plane</name></expr>]</index></name><operator pos:start="841:33" pos:end="841:33">.</operator><name pos:start="841:34" pos:end="841:39"><name pos:start="841:34" pos:end="841:36">l_h</name><index pos:start="841:37" pos:end="841:39">[<expr pos:start="841:38" pos:end="841:38"><literal type="number" pos:start="841:38" pos:end="841:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="843:9" pos:end="843:40"><expr pos:start="843:9" pos:end="843:39"><name pos:start="843:9" pos:end="843:12">high</name>   <operator pos:start="843:16" pos:end="843:16">=</operator> <name pos:start="843:18" pos:end="843:32"><name pos:start="843:18" pos:end="843:18">s</name><operator pos:start="843:19" pos:end="843:20">-&gt;</operator><name pos:start="843:21" pos:end="843:25">plane</name><index pos:start="843:26" pos:end="843:32">[<expr pos:start="843:27" pos:end="843:31"><name pos:start="843:27" pos:end="843:31">plane</name></expr>]</index></name><operator pos:start="843:33" pos:end="843:33">.</operator><name pos:start="843:34" pos:end="843:39"><name pos:start="843:34" pos:end="843:36">l_h</name><index pos:start="843:37" pos:end="843:39">[<expr pos:start="843:38" pos:end="843:38"><literal type="number" pos:start="843:38" pos:end="843:38">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="845:9" pos:end="845:44"><expr pos:start="845:9" pos:end="845:43"><name pos:start="845:9" pos:end="845:14">output</name> <operator pos:start="845:16" pos:end="845:16">=</operator> <name pos:start="845:18" pos:end="845:32"><name pos:start="845:18" pos:end="845:18">s</name><operator pos:start="845:19" pos:end="845:20">-&gt;</operator><name pos:start="845:21" pos:end="845:25">plane</name><index pos:start="845:26" pos:end="845:32">[<expr pos:start="845:27" pos:end="845:31"><name pos:start="845:27" pos:end="845:31">plane</name></expr>]</index></name><operator pos:start="845:33" pos:end="845:33">.</operator><name pos:start="845:34" pos:end="845:43"><name pos:start="845:34" pos:end="845:40">subband</name><index pos:start="845:41" pos:end="845:43">[<expr pos:start="845:42" pos:end="845:42"><literal type="number" pos:start="845:42" pos:end="845:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="847:9" pos:end="857:9">for <control pos:start="847:13" pos:end="847:48">(<init pos:start="847:14" pos:end="847:19"><expr pos:start="847:14" pos:end="847:18"><name pos:start="847:14" pos:end="847:14">i</name> <operator pos:start="847:16" pos:end="847:16">=</operator> <literal type="number" pos:start="847:18" pos:end="847:18">0</literal></expr>;</init> <condition pos:start="847:21" pos:end="847:43"><expr pos:start="847:21" pos:end="847:42"><name pos:start="847:21" pos:end="847:21">i</name> <operator pos:start="847:23" pos:end="847:23">&lt;</operator> <name pos:start="847:25" pos:end="847:38">lowpass_height</name> <operator pos:start="847:40" pos:end="847:40">*</operator> <literal type="number" pos:start="847:42" pos:end="847:42">2</literal></expr>;</condition> <incr pos:start="847:45" pos:end="847:47"><expr pos:start="847:45" pos:end="847:47"><name pos:start="847:45" pos:end="847:45">i</name><operator pos:start="847:46" pos:end="847:47">++</operator></expr></incr>)</control> <block pos:start="847:50" pos:end="857:9">{<block_content pos:start="849:13" pos:end="855:40">

            <expr_stmt pos:start="849:13" pos:end="849:59"><expr pos:start="849:13" pos:end="849:58"><call pos:start="849:13" pos:end="849:58"><name pos:start="849:13" pos:end="849:24">horiz_filter</name><argument_list pos:start="849:25" pos:end="849:58">(<argument pos:start="849:26" pos:end="849:31"><expr pos:start="849:26" pos:end="849:31"><name pos:start="849:26" pos:end="849:31">output</name></expr></argument>, <argument pos:start="849:34" pos:end="849:36"><expr pos:start="849:34" pos:end="849:36"><name pos:start="849:34" pos:end="849:36">low</name></expr></argument>, <argument pos:start="849:39" pos:end="849:42"><expr pos:start="849:39" pos:end="849:42"><name pos:start="849:39" pos:end="849:42">high</name></expr></argument>, <argument pos:start="849:45" pos:end="849:57"><expr pos:start="849:45" pos:end="849:57"><name pos:start="849:45" pos:end="849:57">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="851:13" pos:end="851:36"><expr pos:start="851:13" pos:end="851:35"><name pos:start="851:13" pos:end="851:15">low</name>    <operator pos:start="851:20" pos:end="851:21">+=</operator> <name pos:start="851:23" pos:end="851:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:36"><expr pos:start="853:13" pos:end="853:35"><name pos:start="853:13" pos:end="853:16">high</name>   <operator pos:start="853:20" pos:end="853:21">+=</operator> <name pos:start="853:23" pos:end="853:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:40"><expr pos:start="855:13" pos:end="855:39"><name pos:start="855:13" pos:end="855:18">output</name> <operator pos:start="855:20" pos:end="855:21">+=</operator> <name pos:start="855:23" pos:end="855:35">lowpass_width</name> <operator pos:start="855:37" pos:end="855:37">*</operator> <literal type="number" pos:start="855:39" pos:end="855:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="859:9" pos:end="875:9"><if pos:start="859:9" pos:end="875:9">if <condition pos:start="859:12" pos:end="859:25">(<expr pos:start="859:13" pos:end="859:24"><name pos:start="859:13" pos:end="859:18"><name pos:start="859:13" pos:end="859:13">s</name><operator pos:start="859:14" pos:end="859:15">-&gt;</operator><name pos:start="859:16" pos:end="859:18">bpc</name></name> <operator pos:start="859:20" pos:end="859:21">==</operator> <literal type="number" pos:start="859:23" pos:end="859:24">12</literal></expr>)</condition> <block pos:start="859:27" pos:end="875:9">{<block_content pos:start="861:13" pos:end="873:13">

            <expr_stmt pos:start="861:13" pos:end="861:48"><expr pos:start="861:13" pos:end="861:47"><name pos:start="861:13" pos:end="861:18">output</name> <operator pos:start="861:20" pos:end="861:20">=</operator> <name pos:start="861:22" pos:end="861:36"><name pos:start="861:22" pos:end="861:22">s</name><operator pos:start="861:23" pos:end="861:24">-&gt;</operator><name pos:start="861:25" pos:end="861:29">plane</name><index pos:start="861:30" pos:end="861:36">[<expr pos:start="861:31" pos:end="861:35"><name pos:start="861:31" pos:end="861:35">plane</name></expr>]</index></name><operator pos:start="861:37" pos:end="861:37">.</operator><name pos:start="861:38" pos:end="861:47"><name pos:start="861:38" pos:end="861:44">subband</name><index pos:start="861:45" pos:end="861:47">[<expr pos:start="861:46" pos:end="861:46"><literal type="number" pos:start="861:46" pos:end="861:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="863:13" pos:end="873:13">for <control pos:start="863:17" pos:end="863:52">(<init pos:start="863:18" pos:end="863:23"><expr pos:start="863:18" pos:end="863:22"><name pos:start="863:18" pos:end="863:18">i</name> <operator pos:start="863:20" pos:end="863:20">=</operator> <literal type="number" pos:start="863:22" pos:end="863:22">0</literal></expr>;</init> <condition pos:start="863:25" pos:end="863:47"><expr pos:start="863:25" pos:end="863:46"><name pos:start="863:25" pos:end="863:25">i</name> <operator pos:start="863:27" pos:end="863:27">&lt;</operator> <name pos:start="863:29" pos:end="863:42">lowpass_height</name> <operator pos:start="863:44" pos:end="863:44">*</operator> <literal type="number" pos:start="863:46" pos:end="863:46">2</literal></expr>;</condition> <incr pos:start="863:49" pos:end="863:51"><expr pos:start="863:49" pos:end="863:51"><name pos:start="863:49" pos:end="863:49">i</name><operator pos:start="863:50" pos:end="863:51">++</operator></expr></incr>)</control> <block pos:start="863:54" pos:end="873:13">{<block_content pos:start="865:17" pos:end="871:44">

                <for pos:start="865:17" pos:end="867:36">for <control pos:start="865:21" pos:end="865:55">(<init pos:start="865:22" pos:end="865:27"><expr pos:start="865:22" pos:end="865:26"><name pos:start="865:22" pos:end="865:22">j</name> <operator pos:start="865:24" pos:end="865:24">=</operator> <literal type="number" pos:start="865:26" pos:end="865:26">0</literal></expr>;</init> <condition pos:start="865:29" pos:end="865:50"><expr pos:start="865:29" pos:end="865:49"><name pos:start="865:29" pos:end="865:29">j</name> <operator pos:start="865:31" pos:end="865:31">&lt;</operator> <name pos:start="865:33" pos:end="865:45">lowpass_width</name> <operator pos:start="865:47" pos:end="865:47">*</operator> <literal type="number" pos:start="865:49" pos:end="865:49">2</literal></expr>;</condition> <incr pos:start="865:52" pos:end="865:54"><expr pos:start="865:52" pos:end="865:54"><name pos:start="865:52" pos:end="865:52">j</name><operator pos:start="865:53" pos:end="865:54">++</operator></expr></incr>)</control><block type="pseudo" pos:start="867:21" pos:end="867:36"><block_content pos:start="867:21" pos:end="867:36">

                    <expr_stmt pos:start="867:21" pos:end="867:36"><expr pos:start="867:21" pos:end="867:35"><name pos:start="867:21" pos:end="867:29"><name pos:start="867:21" pos:end="867:26">output</name><index pos:start="867:27" pos:end="867:29">[<expr pos:start="867:28" pos:end="867:28"><name pos:start="867:28" pos:end="867:28">j</name></expr>]</index></name> <operator pos:start="867:31" pos:end="867:33">&lt;&lt;=</operator> <literal type="number" pos:start="867:35" pos:end="867:35">2</literal></expr>;</expr_stmt></block_content></block></for>



                <expr_stmt pos:start="871:17" pos:end="871:44"><expr pos:start="871:17" pos:end="871:43"><name pos:start="871:17" pos:end="871:22">output</name> <operator pos:start="871:24" pos:end="871:25">+=</operator> <name pos:start="871:27" pos:end="871:39">lowpass_width</name> <operator pos:start="871:41" pos:end="871:41">*</operator> <literal type="number" pos:start="871:43" pos:end="871:43">2</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="879:9" pos:end="879:21">/* level 2 */</comment>

        <expr_stmt pos:start="881:9" pos:end="881:60"><expr pos:start="881:9" pos:end="881:59"><name pos:start="881:9" pos:end="881:22">lowpass_height</name>  <operator pos:start="881:25" pos:end="881:25">=</operator> <name pos:start="881:27" pos:end="881:41"><name pos:start="881:27" pos:end="881:27">s</name><operator pos:start="881:28" pos:end="881:29">-&gt;</operator><name pos:start="881:30" pos:end="881:34">plane</name><index pos:start="881:35" pos:end="881:41">[<expr pos:start="881:36" pos:end="881:40"><name pos:start="881:36" pos:end="881:40">plane</name></expr>]</index></name><operator pos:start="881:42" pos:end="881:42">.</operator><name pos:start="881:43" pos:end="881:52"><name pos:start="881:43" pos:end="881:46">band</name><index pos:start="881:47" pos:end="881:49">[<expr pos:start="881:48" pos:end="881:48"><literal type="number" pos:start="881:48" pos:end="881:48">1</literal></expr>]</index><index pos:start="881:50" pos:end="881:52">[<expr pos:start="881:51" pos:end="881:51"><literal type="number" pos:start="881:51" pos:end="881:51">1</literal></expr>]</index></name><operator pos:start="881:53" pos:end="881:53">.</operator><name pos:start="881:54" pos:end="881:59">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="883:9" pos:end="883:59"><expr pos:start="883:9" pos:end="883:58"><name pos:start="883:9" pos:end="883:21">lowpass_width</name>   <operator pos:start="883:25" pos:end="883:25">=</operator> <name pos:start="883:27" pos:end="883:41"><name pos:start="883:27" pos:end="883:27">s</name><operator pos:start="883:28" pos:end="883:29">-&gt;</operator><name pos:start="883:30" pos:end="883:34">plane</name><index pos:start="883:35" pos:end="883:41">[<expr pos:start="883:36" pos:end="883:40"><name pos:start="883:36" pos:end="883:40">plane</name></expr>]</index></name><operator pos:start="883:42" pos:end="883:42">.</operator><name pos:start="883:43" pos:end="883:52"><name pos:start="883:43" pos:end="883:46">band</name><index pos:start="883:47" pos:end="883:49">[<expr pos:start="883:48" pos:end="883:48"><literal type="number" pos:start="883:48" pos:end="883:48">1</literal></expr>]</index><index pos:start="883:50" pos:end="883:52">[<expr pos:start="883:51" pos:end="883:51"><literal type="number" pos:start="883:51" pos:end="883:51">1</literal></expr>]</index></name><operator pos:start="883:53" pos:end="883:53">.</operator><name pos:start="883:54" pos:end="883:58">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:60"><expr pos:start="885:9" pos:end="885:59"><name pos:start="885:9" pos:end="885:23">highpass_stride</name> <operator pos:start="885:25" pos:end="885:25">=</operator> <name pos:start="885:27" pos:end="885:41"><name pos:start="885:27" pos:end="885:27">s</name><operator pos:start="885:28" pos:end="885:29">-&gt;</operator><name pos:start="885:30" pos:end="885:34">plane</name><index pos:start="885:35" pos:end="885:41">[<expr pos:start="885:36" pos:end="885:40"><name pos:start="885:36" pos:end="885:40">plane</name></expr>]</index></name><operator pos:start="885:42" pos:end="885:42">.</operator><name pos:start="885:43" pos:end="885:52"><name pos:start="885:43" pos:end="885:46">band</name><index pos:start="885:47" pos:end="885:49">[<expr pos:start="885:48" pos:end="885:48"><literal type="number" pos:start="885:48" pos:end="885:48">1</literal></expr>]</index><index pos:start="885:50" pos:end="885:52">[<expr pos:start="885:51" pos:end="885:51"><literal type="number" pos:start="885:51" pos:end="885:51">1</literal></expr>]</index></name><operator pos:start="885:53" pos:end="885:53">.</operator><name pos:start="885:54" pos:end="885:59">stride</name></expr>;</expr_stmt>



        <if_stmt pos:start="889:9" pos:end="899:9"><if pos:start="889:9" pos:end="899:9">if <condition pos:start="889:12" pos:end="891:102">(<expr pos:start="889:13" pos:end="891:101"><name pos:start="889:13" pos:end="889:26">lowpass_height</name> <operator pos:start="889:28" pos:end="889:28">&gt;</operator> <name pos:start="889:30" pos:end="889:44"><name pos:start="889:30" pos:end="889:30">s</name><operator pos:start="889:31" pos:end="889:32">-&gt;</operator><name pos:start="889:33" pos:end="889:37">plane</name><index pos:start="889:38" pos:end="889:44">[<expr pos:start="889:39" pos:end="889:43"><name pos:start="889:39" pos:end="889:43">plane</name></expr>]</index></name><operator pos:start="889:45" pos:end="889:45">.</operator><name pos:start="889:46" pos:end="889:55"><name pos:start="889:46" pos:end="889:49">band</name><index pos:start="889:50" pos:end="889:52">[<expr pos:start="889:51" pos:end="889:51"><literal type="number" pos:start="889:51" pos:end="889:51">1</literal></expr>]</index><index pos:start="889:53" pos:end="889:55">[<expr pos:start="889:54" pos:end="889:54"><literal type="number" pos:start="889:54" pos:end="889:54">1</literal></expr>]</index></name><operator pos:start="889:56" pos:end="889:56">.</operator><name pos:start="889:57" pos:end="889:64">a_height</name> <operator pos:start="889:66" pos:end="889:67">||</operator> <name pos:start="889:69" pos:end="889:81">lowpass_width</name> <operator pos:start="889:83" pos:end="889:83">&gt;</operator> <name pos:start="889:85" pos:end="889:99"><name pos:start="889:85" pos:end="889:85">s</name><operator pos:start="889:86" pos:end="889:87">-&gt;</operator><name pos:start="889:88" pos:end="889:92">plane</name><index pos:start="889:93" pos:end="889:99">[<expr pos:start="889:94" pos:end="889:98"><name pos:start="889:94" pos:end="889:98">plane</name></expr>]</index></name><operator pos:start="889:100" pos:end="889:100">.</operator><name pos:start="889:101" pos:end="889:110"><name pos:start="889:101" pos:end="889:104">band</name><index pos:start="889:105" pos:end="889:107">[<expr pos:start="889:106" pos:end="889:106"><literal type="number" pos:start="889:106" pos:end="889:106">1</literal></expr>]</index><index pos:start="889:108" pos:end="889:110">[<expr pos:start="889:109" pos:end="889:109"><literal type="number" pos:start="889:109" pos:end="889:109">1</literal></expr>]</index></name><operator pos:start="889:111" pos:end="889:111">.</operator><name pos:start="889:112" pos:end="889:118">a_width</name> <operator pos:start="889:120" pos:end="889:121">||</operator>

            <operator pos:start="891:13" pos:end="891:13">!</operator><name pos:start="891:14" pos:end="891:28">highpass_stride</name> <operator pos:start="891:30" pos:end="891:31">||</operator> <name pos:start="891:33" pos:end="891:47"><name pos:start="891:33" pos:end="891:33">s</name><operator pos:start="891:34" pos:end="891:35">-&gt;</operator><name pos:start="891:36" pos:end="891:40">plane</name><index pos:start="891:41" pos:end="891:47">[<expr pos:start="891:42" pos:end="891:46"><name pos:start="891:42" pos:end="891:46">plane</name></expr>]</index></name><operator pos:start="891:48" pos:end="891:48">.</operator><name pos:start="891:49" pos:end="891:58"><name pos:start="891:49" pos:end="891:52">band</name><index pos:start="891:53" pos:end="891:55">[<expr pos:start="891:54" pos:end="891:54"><literal type="number" pos:start="891:54" pos:end="891:54">1</literal></expr>]</index><index pos:start="891:56" pos:end="891:58">[<expr pos:start="891:57" pos:end="891:57"><literal type="number" pos:start="891:57" pos:end="891:57">1</literal></expr>]</index></name><operator pos:start="891:59" pos:end="891:59">.</operator><name pos:start="891:60" pos:end="891:64">width</name> <operator pos:start="891:66" pos:end="891:66">&gt;</operator> <name pos:start="891:68" pos:end="891:82"><name pos:start="891:68" pos:end="891:68">s</name><operator pos:start="891:69" pos:end="891:70">-&gt;</operator><name pos:start="891:71" pos:end="891:75">plane</name><index pos:start="891:76" pos:end="891:82">[<expr pos:start="891:77" pos:end="891:81"><name pos:start="891:77" pos:end="891:81">plane</name></expr>]</index></name><operator pos:start="891:83" pos:end="891:83">.</operator><name pos:start="891:84" pos:end="891:93"><name pos:start="891:84" pos:end="891:87">band</name><index pos:start="891:88" pos:end="891:90">[<expr pos:start="891:89" pos:end="891:89"><literal type="number" pos:start="891:89" pos:end="891:89">1</literal></expr>]</index><index pos:start="891:91" pos:end="891:93">[<expr pos:start="891:92" pos:end="891:92"><literal type="number" pos:start="891:92" pos:end="891:92">1</literal></expr>]</index></name><operator pos:start="891:94" pos:end="891:94">.</operator><name pos:start="891:95" pos:end="891:101">a_width</name></expr>)</condition> <block pos:start="891:104" pos:end="899:9">{<block_content pos:start="893:13" pos:end="897:21">

            <expr_stmt pos:start="893:13" pos:end="893:70"><expr pos:start="893:13" pos:end="893:69"><call pos:start="893:13" pos:end="893:69"><name pos:start="893:13" pos:end="893:18">av_log</name><argument_list pos:start="893:19" pos:end="893:69">(<argument pos:start="893:20" pos:end="893:24"><expr pos:start="893:20" pos:end="893:24"><name pos:start="893:20" pos:end="893:24">avctx</name></expr></argument>, <argument pos:start="893:27" pos:end="893:38"><expr pos:start="893:27" pos:end="893:38"><name pos:start="893:27" pos:end="893:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="893:41" pos:end="893:68"><expr pos:start="893:41" pos:end="893:68"><literal type="string" pos:start="893:41" pos:end="893:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="895:13" pos:end="895:34"><expr pos:start="895:13" pos:end="895:33"><name pos:start="895:13" pos:end="895:15">ret</name> <operator pos:start="895:17" pos:end="895:17">=</operator> <call pos:start="895:19" pos:end="895:33"><name pos:start="895:19" pos:end="895:25">AVERROR</name><argument_list pos:start="895:26" pos:end="895:33">(<argument pos:start="895:27" pos:end="895:32"><expr pos:start="895:27" pos:end="895:32"><name pos:start="895:27" pos:end="895:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="897:13" pos:end="897:21">goto <name pos:start="897:18" pos:end="897:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="903:9" pos:end="903:122"><expr pos:start="903:9" pos:end="903:121"><call pos:start="903:9" pos:end="903:121"><name pos:start="903:9" pos:end="903:14">av_log</name><argument_list pos:start="903:15" pos:end="903:121">(<argument pos:start="903:16" pos:end="903:20"><expr pos:start="903:16" pos:end="903:20"><name pos:start="903:16" pos:end="903:20">avctx</name></expr></argument>, <argument pos:start="903:23" pos:end="903:34"><expr pos:start="903:23" pos:end="903:34"><name pos:start="903:23" pos:end="903:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="903:37" pos:end="903:65"><expr pos:start="903:37" pos:end="903:65"><literal type="string" pos:start="903:37" pos:end="903:65">"Level 2 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="903:68" pos:end="903:72"><expr pos:start="903:68" pos:end="903:72"><name pos:start="903:68" pos:end="903:72">plane</name></expr></argument>, <argument pos:start="903:75" pos:end="903:88"><expr pos:start="903:75" pos:end="903:88"><name pos:start="903:75" pos:end="903:88">lowpass_height</name></expr></argument>, <argument pos:start="903:91" pos:end="903:103"><expr pos:start="903:91" pos:end="903:103"><name pos:start="903:91" pos:end="903:103">lowpass_width</name></expr></argument>, <argument pos:start="903:106" pos:end="903:120"><expr pos:start="903:106" pos:end="903:120"><name pos:start="903:106" pos:end="903:120">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="907:9" pos:end="907:44"><expr pos:start="907:9" pos:end="907:43"><name pos:start="907:9" pos:end="907:11">low</name>    <operator pos:start="907:16" pos:end="907:16">=</operator> <name pos:start="907:18" pos:end="907:32"><name pos:start="907:18" pos:end="907:18">s</name><operator pos:start="907:19" pos:end="907:20">-&gt;</operator><name pos:start="907:21" pos:end="907:25">plane</name><index pos:start="907:26" pos:end="907:32">[<expr pos:start="907:27" pos:end="907:31"><name pos:start="907:27" pos:end="907:31">plane</name></expr>]</index></name><operator pos:start="907:33" pos:end="907:33">.</operator><name pos:start="907:34" pos:end="907:43"><name pos:start="907:34" pos:end="907:40">subband</name><index pos:start="907:41" pos:end="907:43">[<expr pos:start="907:42" pos:end="907:42"><literal type="number" pos:start="907:42" pos:end="907:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="909:9" pos:end="909:44"><expr pos:start="909:9" pos:end="909:43"><name pos:start="909:9" pos:end="909:12">high</name>   <operator pos:start="909:16" pos:end="909:16">=</operator> <name pos:start="909:18" pos:end="909:32"><name pos:start="909:18" pos:end="909:18">s</name><operator pos:start="909:19" pos:end="909:20">-&gt;</operator><name pos:start="909:21" pos:end="909:25">plane</name><index pos:start="909:26" pos:end="909:32">[<expr pos:start="909:27" pos:end="909:31"><name pos:start="909:27" pos:end="909:31">plane</name></expr>]</index></name><operator pos:start="909:33" pos:end="909:33">.</operator><name pos:start="909:34" pos:end="909:43"><name pos:start="909:34" pos:end="909:40">subband</name><index pos:start="909:41" pos:end="909:43">[<expr pos:start="909:42" pos:end="909:42"><literal type="number" pos:start="909:42" pos:end="909:42">5</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="911:9" pos:end="911:40"><expr pos:start="911:9" pos:end="911:39"><name pos:start="911:9" pos:end="911:14">output</name> <operator pos:start="911:16" pos:end="911:16">=</operator> <name pos:start="911:18" pos:end="911:32"><name pos:start="911:18" pos:end="911:18">s</name><operator pos:start="911:19" pos:end="911:20">-&gt;</operator><name pos:start="911:21" pos:end="911:25">plane</name><index pos:start="911:26" pos:end="911:32">[<expr pos:start="911:27" pos:end="911:31"><name pos:start="911:27" pos:end="911:31">plane</name></expr>]</index></name><operator pos:start="911:33" pos:end="911:33">.</operator><name pos:start="911:34" pos:end="911:39"><name pos:start="911:34" pos:end="911:36">l_h</name><index pos:start="911:37" pos:end="911:39">[<expr pos:start="911:38" pos:end="911:38"><literal type="number" pos:start="911:38" pos:end="911:38">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="913:9" pos:end="923:9">for <control pos:start="913:13" pos:end="913:43">(<init pos:start="913:14" pos:end="913:19"><expr pos:start="913:14" pos:end="913:18"><name pos:start="913:14" pos:end="913:14">i</name> <operator pos:start="913:16" pos:end="913:16">=</operator> <literal type="number" pos:start="913:18" pos:end="913:18">0</literal></expr>;</init> <condition pos:start="913:21" pos:end="913:38"><expr pos:start="913:21" pos:end="913:37"><name pos:start="913:21" pos:end="913:21">i</name> <operator pos:start="913:23" pos:end="913:23">&lt;</operator> <name pos:start="913:25" pos:end="913:37">lowpass_width</name></expr>;</condition> <incr pos:start="913:40" pos:end="913:42"><expr pos:start="913:40" pos:end="913:42"><name pos:start="913:40" pos:end="913:40">i</name><operator pos:start="913:41" pos:end="913:42">++</operator></expr></incr>)</control> <block pos:start="913:45" pos:end="923:9">{<block_content pos:start="915:13" pos:end="921:21">

            <expr_stmt pos:start="915:13" pos:end="915:106"><expr pos:start="915:13" pos:end="915:105"><call pos:start="915:13" pos:end="915:105"><name pos:start="915:13" pos:end="915:23">vert_filter</name><argument_list pos:start="915:24" pos:end="915:105">(<argument pos:start="915:25" pos:end="915:30"><expr pos:start="915:25" pos:end="915:30"><name pos:start="915:25" pos:end="915:30">output</name></expr></argument>, <argument pos:start="915:33" pos:end="915:45"><expr pos:start="915:33" pos:end="915:45"><name pos:start="915:33" pos:end="915:45">lowpass_width</name></expr></argument>, <argument pos:start="915:48" pos:end="915:50"><expr pos:start="915:48" pos:end="915:50"><name pos:start="915:48" pos:end="915:50">low</name></expr></argument>, <argument pos:start="915:53" pos:end="915:65"><expr pos:start="915:53" pos:end="915:65"><name pos:start="915:53" pos:end="915:65">lowpass_width</name></expr></argument>, <argument pos:start="915:68" pos:end="915:71"><expr pos:start="915:68" pos:end="915:71"><name pos:start="915:68" pos:end="915:71">high</name></expr></argument>, <argument pos:start="915:74" pos:end="915:88"><expr pos:start="915:74" pos:end="915:88"><name pos:start="915:74" pos:end="915:88">highpass_stride</name></expr></argument>, <argument pos:start="915:91" pos:end="915:104"><expr pos:start="915:91" pos:end="915:104"><name pos:start="915:91" pos:end="915:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="917:13" pos:end="917:18"><expr pos:start="917:13" pos:end="917:17"><name pos:start="917:13" pos:end="917:15">low</name><operator pos:start="917:16" pos:end="917:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="919:13" pos:end="919:19"><expr pos:start="919:13" pos:end="919:18"><name pos:start="919:13" pos:end="919:16">high</name><operator pos:start="919:17" pos:end="919:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="921:13" pos:end="921:21"><expr pos:start="921:13" pos:end="921:20"><name pos:start="921:13" pos:end="921:18">output</name><operator pos:start="921:19" pos:end="921:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="927:9" pos:end="927:44"><expr pos:start="927:9" pos:end="927:43"><name pos:start="927:9" pos:end="927:11">low</name>    <operator pos:start="927:16" pos:end="927:16">=</operator> <name pos:start="927:18" pos:end="927:32"><name pos:start="927:18" pos:end="927:18">s</name><operator pos:start="927:19" pos:end="927:20">-&gt;</operator><name pos:start="927:21" pos:end="927:25">plane</name><index pos:start="927:26" pos:end="927:32">[<expr pos:start="927:27" pos:end="927:31"><name pos:start="927:27" pos:end="927:31">plane</name></expr>]</index></name><operator pos:start="927:33" pos:end="927:33">.</operator><name pos:start="927:34" pos:end="927:43"><name pos:start="927:34" pos:end="927:40">subband</name><index pos:start="927:41" pos:end="927:43">[<expr pos:start="927:42" pos:end="927:42"><literal type="number" pos:start="927:42" pos:end="927:42">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:44"><expr pos:start="929:9" pos:end="929:43"><name pos:start="929:9" pos:end="929:12">high</name>   <operator pos:start="929:16" pos:end="929:16">=</operator> <name pos:start="929:18" pos:end="929:32"><name pos:start="929:18" pos:end="929:18">s</name><operator pos:start="929:19" pos:end="929:20">-&gt;</operator><name pos:start="929:21" pos:end="929:25">plane</name><index pos:start="929:26" pos:end="929:32">[<expr pos:start="929:27" pos:end="929:31"><name pos:start="929:27" pos:end="929:31">plane</name></expr>]</index></name><operator pos:start="929:33" pos:end="929:33">.</operator><name pos:start="929:34" pos:end="929:43"><name pos:start="929:34" pos:end="929:40">subband</name><index pos:start="929:41" pos:end="929:43">[<expr pos:start="929:42" pos:end="929:42"><literal type="number" pos:start="929:42" pos:end="929:42">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="931:9" pos:end="931:40"><expr pos:start="931:9" pos:end="931:39"><name pos:start="931:9" pos:end="931:14">output</name> <operator pos:start="931:16" pos:end="931:16">=</operator> <name pos:start="931:18" pos:end="931:32"><name pos:start="931:18" pos:end="931:18">s</name><operator pos:start="931:19" pos:end="931:20">-&gt;</operator><name pos:start="931:21" pos:end="931:25">plane</name><index pos:start="931:26" pos:end="931:32">[<expr pos:start="931:27" pos:end="931:31"><name pos:start="931:27" pos:end="931:31">plane</name></expr>]</index></name><operator pos:start="931:33" pos:end="931:33">.</operator><name pos:start="931:34" pos:end="931:39"><name pos:start="931:34" pos:end="931:36">l_h</name><index pos:start="931:37" pos:end="931:39">[<expr pos:start="931:38" pos:end="931:38"><literal type="number" pos:start="931:38" pos:end="931:38">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="933:9" pos:end="943:9">for <control pos:start="933:13" pos:end="933:43">(<init pos:start="933:14" pos:end="933:19"><expr pos:start="933:14" pos:end="933:18"><name pos:start="933:14" pos:end="933:14">i</name> <operator pos:start="933:16" pos:end="933:16">=</operator> <literal type="number" pos:start="933:18" pos:end="933:18">0</literal></expr>;</init> <condition pos:start="933:21" pos:end="933:38"><expr pos:start="933:21" pos:end="933:37"><name pos:start="933:21" pos:end="933:21">i</name> <operator pos:start="933:23" pos:end="933:23">&lt;</operator> <name pos:start="933:25" pos:end="933:37">lowpass_width</name></expr>;</condition> <incr pos:start="933:40" pos:end="933:42"><expr pos:start="933:40" pos:end="933:42"><name pos:start="933:40" pos:end="933:40">i</name><operator pos:start="933:41" pos:end="933:42">++</operator></expr></incr>)</control> <block pos:start="933:45" pos:end="943:9">{<block_content pos:start="935:13" pos:end="941:21">

            <expr_stmt pos:start="935:13" pos:end="935:108"><expr pos:start="935:13" pos:end="935:107"><call pos:start="935:13" pos:end="935:107"><name pos:start="935:13" pos:end="935:23">vert_filter</name><argument_list pos:start="935:24" pos:end="935:107">(<argument pos:start="935:25" pos:end="935:30"><expr pos:start="935:25" pos:end="935:30"><name pos:start="935:25" pos:end="935:30">output</name></expr></argument>, <argument pos:start="935:33" pos:end="935:45"><expr pos:start="935:33" pos:end="935:45"><name pos:start="935:33" pos:end="935:45">lowpass_width</name></expr></argument>, <argument pos:start="935:48" pos:end="935:50"><expr pos:start="935:48" pos:end="935:50"><name pos:start="935:48" pos:end="935:50">low</name></expr></argument>, <argument pos:start="935:53" pos:end="935:67"><expr pos:start="935:53" pos:end="935:67"><name pos:start="935:53" pos:end="935:67">highpass_stride</name></expr></argument>, <argument pos:start="935:70" pos:end="935:73"><expr pos:start="935:70" pos:end="935:73"><name pos:start="935:70" pos:end="935:73">high</name></expr></argument>, <argument pos:start="935:76" pos:end="935:90"><expr pos:start="935:76" pos:end="935:90"><name pos:start="935:76" pos:end="935:90">highpass_stride</name></expr></argument>, <argument pos:start="935:93" pos:end="935:106"><expr pos:start="935:93" pos:end="935:106"><name pos:start="935:93" pos:end="935:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="937:13" pos:end="937:18"><expr pos:start="937:13" pos:end="937:17"><name pos:start="937:13" pos:end="937:15">low</name><operator pos:start="937:16" pos:end="937:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="939:13" pos:end="939:19"><expr pos:start="939:13" pos:end="939:18"><name pos:start="939:13" pos:end="939:16">high</name><operator pos:start="939:17" pos:end="939:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="941:13" pos:end="941:21"><expr pos:start="941:13" pos:end="941:20"><name pos:start="941:13" pos:end="941:18">output</name><operator pos:start="941:19" pos:end="941:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="947:9" pos:end="947:40"><expr pos:start="947:9" pos:end="947:39"><name pos:start="947:9" pos:end="947:11">low</name>    <operator pos:start="947:16" pos:end="947:16">=</operator> <name pos:start="947:18" pos:end="947:32"><name pos:start="947:18" pos:end="947:18">s</name><operator pos:start="947:19" pos:end="947:20">-&gt;</operator><name pos:start="947:21" pos:end="947:25">plane</name><index pos:start="947:26" pos:end="947:32">[<expr pos:start="947:27" pos:end="947:31"><name pos:start="947:27" pos:end="947:31">plane</name></expr>]</index></name><operator pos:start="947:33" pos:end="947:33">.</operator><name pos:start="947:34" pos:end="947:39"><name pos:start="947:34" pos:end="947:36">l_h</name><index pos:start="947:37" pos:end="947:39">[<expr pos:start="947:38" pos:end="947:38"><literal type="number" pos:start="947:38" pos:end="947:38">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:40"><expr pos:start="949:9" pos:end="949:39"><name pos:start="949:9" pos:end="949:12">high</name>   <operator pos:start="949:16" pos:end="949:16">=</operator> <name pos:start="949:18" pos:end="949:32"><name pos:start="949:18" pos:end="949:18">s</name><operator pos:start="949:19" pos:end="949:20">-&gt;</operator><name pos:start="949:21" pos:end="949:25">plane</name><index pos:start="949:26" pos:end="949:32">[<expr pos:start="949:27" pos:end="949:31"><name pos:start="949:27" pos:end="949:31">plane</name></expr>]</index></name><operator pos:start="949:33" pos:end="949:33">.</operator><name pos:start="949:34" pos:end="949:39"><name pos:start="949:34" pos:end="949:36">l_h</name><index pos:start="949:37" pos:end="949:39">[<expr pos:start="949:38" pos:end="949:38"><literal type="number" pos:start="949:38" pos:end="949:38">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="951:9" pos:end="951:44"><expr pos:start="951:9" pos:end="951:43"><name pos:start="951:9" pos:end="951:14">output</name> <operator pos:start="951:16" pos:end="951:16">=</operator> <name pos:start="951:18" pos:end="951:32"><name pos:start="951:18" pos:end="951:18">s</name><operator pos:start="951:19" pos:end="951:20">-&gt;</operator><name pos:start="951:21" pos:end="951:25">plane</name><index pos:start="951:26" pos:end="951:32">[<expr pos:start="951:27" pos:end="951:31"><name pos:start="951:27" pos:end="951:31">plane</name></expr>]</index></name><operator pos:start="951:33" pos:end="951:33">.</operator><name pos:start="951:34" pos:end="951:43"><name pos:start="951:34" pos:end="951:40">subband</name><index pos:start="951:41" pos:end="951:43">[<expr pos:start="951:42" pos:end="951:42"><literal type="number" pos:start="951:42" pos:end="951:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="953:9" pos:end="963:9">for <control pos:start="953:13" pos:end="953:48">(<init pos:start="953:14" pos:end="953:19"><expr pos:start="953:14" pos:end="953:18"><name pos:start="953:14" pos:end="953:14">i</name> <operator pos:start="953:16" pos:end="953:16">=</operator> <literal type="number" pos:start="953:18" pos:end="953:18">0</literal></expr>;</init> <condition pos:start="953:21" pos:end="953:43"><expr pos:start="953:21" pos:end="953:42"><name pos:start="953:21" pos:end="953:21">i</name> <operator pos:start="953:23" pos:end="953:23">&lt;</operator> <name pos:start="953:25" pos:end="953:38">lowpass_height</name> <operator pos:start="953:40" pos:end="953:40">*</operator> <literal type="number" pos:start="953:42" pos:end="953:42">2</literal></expr>;</condition> <incr pos:start="953:45" pos:end="953:47"><expr pos:start="953:45" pos:end="953:47"><name pos:start="953:45" pos:end="953:45">i</name><operator pos:start="953:46" pos:end="953:47">++</operator></expr></incr>)</control> <block pos:start="953:50" pos:end="963:9">{<block_content pos:start="955:13" pos:end="961:40">

            <expr_stmt pos:start="955:13" pos:end="955:59"><expr pos:start="955:13" pos:end="955:58"><call pos:start="955:13" pos:end="955:58"><name pos:start="955:13" pos:end="955:24">horiz_filter</name><argument_list pos:start="955:25" pos:end="955:58">(<argument pos:start="955:26" pos:end="955:31"><expr pos:start="955:26" pos:end="955:31"><name pos:start="955:26" pos:end="955:31">output</name></expr></argument>, <argument pos:start="955:34" pos:end="955:36"><expr pos:start="955:34" pos:end="955:36"><name pos:start="955:34" pos:end="955:36">low</name></expr></argument>, <argument pos:start="955:39" pos:end="955:42"><expr pos:start="955:39" pos:end="955:42"><name pos:start="955:39" pos:end="955:42">high</name></expr></argument>, <argument pos:start="955:45" pos:end="955:57"><expr pos:start="955:45" pos:end="955:57"><name pos:start="955:45" pos:end="955:57">lowpass_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="957:13" pos:end="957:36"><expr pos:start="957:13" pos:end="957:35"><name pos:start="957:13" pos:end="957:15">low</name>    <operator pos:start="957:20" pos:end="957:21">+=</operator> <name pos:start="957:23" pos:end="957:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="959:13" pos:end="959:36"><expr pos:start="959:13" pos:end="959:35"><name pos:start="959:13" pos:end="959:16">high</name>   <operator pos:start="959:20" pos:end="959:21">+=</operator> <name pos:start="959:23" pos:end="959:35">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="961:13" pos:end="961:40"><expr pos:start="961:13" pos:end="961:39"><name pos:start="961:13" pos:end="961:18">output</name> <operator pos:start="961:20" pos:end="961:21">+=</operator> <name pos:start="961:23" pos:end="961:35">lowpass_width</name> <operator pos:start="961:37" pos:end="961:37">*</operator> <literal type="number" pos:start="961:39" pos:end="961:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="967:9" pos:end="967:44"><expr pos:start="967:9" pos:end="967:43"><name pos:start="967:9" pos:end="967:14">output</name> <operator pos:start="967:16" pos:end="967:16">=</operator> <name pos:start="967:18" pos:end="967:32"><name pos:start="967:18" pos:end="967:18">s</name><operator pos:start="967:19" pos:end="967:20">-&gt;</operator><name pos:start="967:21" pos:end="967:25">plane</name><index pos:start="967:26" pos:end="967:32">[<expr pos:start="967:27" pos:end="967:31"><name pos:start="967:27" pos:end="967:31">plane</name></expr>]</index></name><operator pos:start="967:33" pos:end="967:33">.</operator><name pos:start="967:34" pos:end="967:43"><name pos:start="967:34" pos:end="967:40">subband</name><index pos:start="967:41" pos:end="967:43">[<expr pos:start="967:42" pos:end="967:42"><literal type="number" pos:start="967:42" pos:end="967:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="969:9" pos:end="979:9">for <control pos:start="969:13" pos:end="969:48">(<init pos:start="969:14" pos:end="969:19"><expr pos:start="969:14" pos:end="969:18"><name pos:start="969:14" pos:end="969:14">i</name> <operator pos:start="969:16" pos:end="969:16">=</operator> <literal type="number" pos:start="969:18" pos:end="969:18">0</literal></expr>;</init> <condition pos:start="969:21" pos:end="969:43"><expr pos:start="969:21" pos:end="969:42"><name pos:start="969:21" pos:end="969:21">i</name> <operator pos:start="969:23" pos:end="969:23">&lt;</operator> <name pos:start="969:25" pos:end="969:38">lowpass_height</name> <operator pos:start="969:40" pos:end="969:40">*</operator> <literal type="number" pos:start="969:42" pos:end="969:42">2</literal></expr>;</condition> <incr pos:start="969:45" pos:end="969:47"><expr pos:start="969:45" pos:end="969:47"><name pos:start="969:45" pos:end="969:45">i</name><operator pos:start="969:46" pos:end="969:47">++</operator></expr></incr>)</control> <block pos:start="969:50" pos:end="979:9">{<block_content pos:start="971:13" pos:end="977:40">

            <for pos:start="971:13" pos:end="973:32">for <control pos:start="971:17" pos:end="971:51">(<init pos:start="971:18" pos:end="971:23"><expr pos:start="971:18" pos:end="971:22"><name pos:start="971:18" pos:end="971:18">j</name> <operator pos:start="971:20" pos:end="971:20">=</operator> <literal type="number" pos:start="971:22" pos:end="971:22">0</literal></expr>;</init> <condition pos:start="971:25" pos:end="971:46"><expr pos:start="971:25" pos:end="971:45"><name pos:start="971:25" pos:end="971:25">j</name> <operator pos:start="971:27" pos:end="971:27">&lt;</operator> <name pos:start="971:29" pos:end="971:41">lowpass_width</name> <operator pos:start="971:43" pos:end="971:43">*</operator> <literal type="number" pos:start="971:45" pos:end="971:45">2</literal></expr>;</condition> <incr pos:start="971:48" pos:end="971:50"><expr pos:start="971:48" pos:end="971:50"><name pos:start="971:48" pos:end="971:48">j</name><operator pos:start="971:49" pos:end="971:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="973:17" pos:end="973:32"><block_content pos:start="973:17" pos:end="973:32">

                <expr_stmt pos:start="973:17" pos:end="973:32"><expr pos:start="973:17" pos:end="973:31"><name pos:start="973:17" pos:end="973:25"><name pos:start="973:17" pos:end="973:22">output</name><index pos:start="973:23" pos:end="973:25">[<expr pos:start="973:24" pos:end="973:24"><name pos:start="973:24" pos:end="973:24">j</name></expr>]</index></name> <operator pos:start="973:27" pos:end="973:29">&lt;&lt;=</operator> <literal type="number" pos:start="973:31" pos:end="973:31">2</literal></expr>;</expr_stmt></block_content></block></for>



            <expr_stmt pos:start="977:13" pos:end="977:40"><expr pos:start="977:13" pos:end="977:39"><name pos:start="977:13" pos:end="977:18">output</name> <operator pos:start="977:20" pos:end="977:21">+=</operator> <name pos:start="977:23" pos:end="977:35">lowpass_width</name> <operator pos:start="977:37" pos:end="977:37">*</operator> <literal type="number" pos:start="977:39" pos:end="977:39">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="983:9" pos:end="983:21">/* level 3 */</comment>

        <expr_stmt pos:start="985:9" pos:end="985:60"><expr pos:start="985:9" pos:end="985:59"><name pos:start="985:9" pos:end="985:22">lowpass_height</name>  <operator pos:start="985:25" pos:end="985:25">=</operator> <name pos:start="985:27" pos:end="985:41"><name pos:start="985:27" pos:end="985:27">s</name><operator pos:start="985:28" pos:end="985:29">-&gt;</operator><name pos:start="985:30" pos:end="985:34">plane</name><index pos:start="985:35" pos:end="985:41">[<expr pos:start="985:36" pos:end="985:40"><name pos:start="985:36" pos:end="985:40">plane</name></expr>]</index></name><operator pos:start="985:42" pos:end="985:42">.</operator><name pos:start="985:43" pos:end="985:52"><name pos:start="985:43" pos:end="985:46">band</name><index pos:start="985:47" pos:end="985:49">[<expr pos:start="985:48" pos:end="985:48"><literal type="number" pos:start="985:48" pos:end="985:48">2</literal></expr>]</index><index pos:start="985:50" pos:end="985:52">[<expr pos:start="985:51" pos:end="985:51"><literal type="number" pos:start="985:51" pos:end="985:51">1</literal></expr>]</index></name><operator pos:start="985:53" pos:end="985:53">.</operator><name pos:start="985:54" pos:end="985:59">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="987:9" pos:end="987:59"><expr pos:start="987:9" pos:end="987:58"><name pos:start="987:9" pos:end="987:21">lowpass_width</name>   <operator pos:start="987:25" pos:end="987:25">=</operator> <name pos:start="987:27" pos:end="987:41"><name pos:start="987:27" pos:end="987:27">s</name><operator pos:start="987:28" pos:end="987:29">-&gt;</operator><name pos:start="987:30" pos:end="987:34">plane</name><index pos:start="987:35" pos:end="987:41">[<expr pos:start="987:36" pos:end="987:40"><name pos:start="987:36" pos:end="987:40">plane</name></expr>]</index></name><operator pos:start="987:42" pos:end="987:42">.</operator><name pos:start="987:43" pos:end="987:52"><name pos:start="987:43" pos:end="987:46">band</name><index pos:start="987:47" pos:end="987:49">[<expr pos:start="987:48" pos:end="987:48"><literal type="number" pos:start="987:48" pos:end="987:48">2</literal></expr>]</index><index pos:start="987:50" pos:end="987:52">[<expr pos:start="987:51" pos:end="987:51"><literal type="number" pos:start="987:51" pos:end="987:51">1</literal></expr>]</index></name><operator pos:start="987:53" pos:end="987:53">.</operator><name pos:start="987:54" pos:end="987:58">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="989:9" pos:end="989:60"><expr pos:start="989:9" pos:end="989:59"><name pos:start="989:9" pos:end="989:23">highpass_stride</name> <operator pos:start="989:25" pos:end="989:25">=</operator> <name pos:start="989:27" pos:end="989:41"><name pos:start="989:27" pos:end="989:27">s</name><operator pos:start="989:28" pos:end="989:29">-&gt;</operator><name pos:start="989:30" pos:end="989:34">plane</name><index pos:start="989:35" pos:end="989:41">[<expr pos:start="989:36" pos:end="989:40"><name pos:start="989:36" pos:end="989:40">plane</name></expr>]</index></name><operator pos:start="989:42" pos:end="989:42">.</operator><name pos:start="989:43" pos:end="989:52"><name pos:start="989:43" pos:end="989:46">band</name><index pos:start="989:47" pos:end="989:49">[<expr pos:start="989:48" pos:end="989:48"><literal type="number" pos:start="989:48" pos:end="989:48">2</literal></expr>]</index><index pos:start="989:50" pos:end="989:52">[<expr pos:start="989:51" pos:end="989:51"><literal type="number" pos:start="989:51" pos:end="989:51">1</literal></expr>]</index></name><operator pos:start="989:53" pos:end="989:53">.</operator><name pos:start="989:54" pos:end="989:59">stride</name></expr>;</expr_stmt>



        <if_stmt pos:start="993:9" pos:end="1003:9"><if pos:start="993:9" pos:end="1003:9">if <condition pos:start="993:12" pos:end="995:102">(<expr pos:start="993:13" pos:end="995:101"><name pos:start="993:13" pos:end="993:26">lowpass_height</name> <operator pos:start="993:28" pos:end="993:28">&gt;</operator> <name pos:start="993:30" pos:end="993:44"><name pos:start="993:30" pos:end="993:30">s</name><operator pos:start="993:31" pos:end="993:32">-&gt;</operator><name pos:start="993:33" pos:end="993:37">plane</name><index pos:start="993:38" pos:end="993:44">[<expr pos:start="993:39" pos:end="993:43"><name pos:start="993:39" pos:end="993:43">plane</name></expr>]</index></name><operator pos:start="993:45" pos:end="993:45">.</operator><name pos:start="993:46" pos:end="993:55"><name pos:start="993:46" pos:end="993:49">band</name><index pos:start="993:50" pos:end="993:52">[<expr pos:start="993:51" pos:end="993:51"><literal type="number" pos:start="993:51" pos:end="993:51">2</literal></expr>]</index><index pos:start="993:53" pos:end="993:55">[<expr pos:start="993:54" pos:end="993:54"><literal type="number" pos:start="993:54" pos:end="993:54">1</literal></expr>]</index></name><operator pos:start="993:56" pos:end="993:56">.</operator><name pos:start="993:57" pos:end="993:64">a_height</name> <operator pos:start="993:66" pos:end="993:67">||</operator> <name pos:start="993:69" pos:end="993:81">lowpass_width</name> <operator pos:start="993:83" pos:end="993:83">&gt;</operator> <name pos:start="993:85" pos:end="993:99"><name pos:start="993:85" pos:end="993:85">s</name><operator pos:start="993:86" pos:end="993:87">-&gt;</operator><name pos:start="993:88" pos:end="993:92">plane</name><index pos:start="993:93" pos:end="993:99">[<expr pos:start="993:94" pos:end="993:98"><name pos:start="993:94" pos:end="993:98">plane</name></expr>]</index></name><operator pos:start="993:100" pos:end="993:100">.</operator><name pos:start="993:101" pos:end="993:110"><name pos:start="993:101" pos:end="993:104">band</name><index pos:start="993:105" pos:end="993:107">[<expr pos:start="993:106" pos:end="993:106"><literal type="number" pos:start="993:106" pos:end="993:106">2</literal></expr>]</index><index pos:start="993:108" pos:end="993:110">[<expr pos:start="993:109" pos:end="993:109"><literal type="number" pos:start="993:109" pos:end="993:109">1</literal></expr>]</index></name><operator pos:start="993:111" pos:end="993:111">.</operator><name pos:start="993:112" pos:end="993:118">a_width</name> <operator pos:start="993:120" pos:end="993:121">||</operator>

            <operator pos:start="995:13" pos:end="995:13">!</operator><name pos:start="995:14" pos:end="995:28">highpass_stride</name> <operator pos:start="995:30" pos:end="995:31">||</operator> <name pos:start="995:33" pos:end="995:47"><name pos:start="995:33" pos:end="995:33">s</name><operator pos:start="995:34" pos:end="995:35">-&gt;</operator><name pos:start="995:36" pos:end="995:40">plane</name><index pos:start="995:41" pos:end="995:47">[<expr pos:start="995:42" pos:end="995:46"><name pos:start="995:42" pos:end="995:46">plane</name></expr>]</index></name><operator pos:start="995:48" pos:end="995:48">.</operator><name pos:start="995:49" pos:end="995:58"><name pos:start="995:49" pos:end="995:52">band</name><index pos:start="995:53" pos:end="995:55">[<expr pos:start="995:54" pos:end="995:54"><literal type="number" pos:start="995:54" pos:end="995:54">2</literal></expr>]</index><index pos:start="995:56" pos:end="995:58">[<expr pos:start="995:57" pos:end="995:57"><literal type="number" pos:start="995:57" pos:end="995:57">1</literal></expr>]</index></name><operator pos:start="995:59" pos:end="995:59">.</operator><name pos:start="995:60" pos:end="995:64">width</name> <operator pos:start="995:66" pos:end="995:66">&gt;</operator> <name pos:start="995:68" pos:end="995:82"><name pos:start="995:68" pos:end="995:68">s</name><operator pos:start="995:69" pos:end="995:70">-&gt;</operator><name pos:start="995:71" pos:end="995:75">plane</name><index pos:start="995:76" pos:end="995:82">[<expr pos:start="995:77" pos:end="995:81"><name pos:start="995:77" pos:end="995:81">plane</name></expr>]</index></name><operator pos:start="995:83" pos:end="995:83">.</operator><name pos:start="995:84" pos:end="995:93"><name pos:start="995:84" pos:end="995:87">band</name><index pos:start="995:88" pos:end="995:90">[<expr pos:start="995:89" pos:end="995:89"><literal type="number" pos:start="995:89" pos:end="995:89">2</literal></expr>]</index><index pos:start="995:91" pos:end="995:93">[<expr pos:start="995:92" pos:end="995:92"><literal type="number" pos:start="995:92" pos:end="995:92">1</literal></expr>]</index></name><operator pos:start="995:94" pos:end="995:94">.</operator><name pos:start="995:95" pos:end="995:101">a_width</name></expr>)</condition> <block pos:start="995:104" pos:end="1003:9">{<block_content pos:start="997:13" pos:end="1001:21">

            <expr_stmt pos:start="997:13" pos:end="997:70"><expr pos:start="997:13" pos:end="997:69"><call pos:start="997:13" pos:end="997:69"><name pos:start="997:13" pos:end="997:18">av_log</name><argument_list pos:start="997:19" pos:end="997:69">(<argument pos:start="997:20" pos:end="997:24"><expr pos:start="997:20" pos:end="997:24"><name pos:start="997:20" pos:end="997:24">avctx</name></expr></argument>, <argument pos:start="997:27" pos:end="997:38"><expr pos:start="997:27" pos:end="997:38"><name pos:start="997:27" pos:end="997:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="997:41" pos:end="997:68"><expr pos:start="997:41" pos:end="997:68"><literal type="string" pos:start="997:41" pos:end="997:68">"Invalid plane dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="999:13" pos:end="999:34"><expr pos:start="999:13" pos:end="999:33"><name pos:start="999:13" pos:end="999:15">ret</name> <operator pos:start="999:17" pos:end="999:17">=</operator> <call pos:start="999:19" pos:end="999:33"><name pos:start="999:19" pos:end="999:25">AVERROR</name><argument_list pos:start="999:26" pos:end="999:33">(<argument pos:start="999:27" pos:end="999:32"><expr pos:start="999:27" pos:end="999:32"><name pos:start="999:27" pos:end="999:32">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="1001:13" pos:end="1001:21">goto <name pos:start="1001:18" pos:end="1001:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="1007:9" pos:end="1007:122"><expr pos:start="1007:9" pos:end="1007:121"><call pos:start="1007:9" pos:end="1007:121"><name pos:start="1007:9" pos:end="1007:14">av_log</name><argument_list pos:start="1007:15" pos:end="1007:121">(<argument pos:start="1007:16" pos:end="1007:20"><expr pos:start="1007:16" pos:end="1007:20"><name pos:start="1007:16" pos:end="1007:20">avctx</name></expr></argument>, <argument pos:start="1007:23" pos:end="1007:34"><expr pos:start="1007:23" pos:end="1007:34"><name pos:start="1007:23" pos:end="1007:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="1007:37" pos:end="1007:65"><expr pos:start="1007:37" pos:end="1007:65"><literal type="string" pos:start="1007:37" pos:end="1007:65">"Level 3 plane %i %i %i %i\n"</literal></expr></argument>, <argument pos:start="1007:68" pos:end="1007:72"><expr pos:start="1007:68" pos:end="1007:72"><name pos:start="1007:68" pos:end="1007:72">plane</name></expr></argument>, <argument pos:start="1007:75" pos:end="1007:88"><expr pos:start="1007:75" pos:end="1007:88"><name pos:start="1007:75" pos:end="1007:88">lowpass_height</name></expr></argument>, <argument pos:start="1007:91" pos:end="1007:103"><expr pos:start="1007:91" pos:end="1007:103"><name pos:start="1007:91" pos:end="1007:103">lowpass_width</name></expr></argument>, <argument pos:start="1007:106" pos:end="1007:120"><expr pos:start="1007:106" pos:end="1007:120"><name pos:start="1007:106" pos:end="1007:120">highpass_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="1011:9" pos:end="1011:44"><expr pos:start="1011:9" pos:end="1011:43"><name pos:start="1011:9" pos:end="1011:11">low</name>    <operator pos:start="1011:16" pos:end="1011:16">=</operator> <name pos:start="1011:18" pos:end="1011:32"><name pos:start="1011:18" pos:end="1011:18">s</name><operator pos:start="1011:19" pos:end="1011:20">-&gt;</operator><name pos:start="1011:21" pos:end="1011:25">plane</name><index pos:start="1011:26" pos:end="1011:32">[<expr pos:start="1011:27" pos:end="1011:31"><name pos:start="1011:27" pos:end="1011:31">plane</name></expr>]</index></name><operator pos:start="1011:33" pos:end="1011:33">.</operator><name pos:start="1011:34" pos:end="1011:43"><name pos:start="1011:34" pos:end="1011:40">subband</name><index pos:start="1011:41" pos:end="1011:43">[<expr pos:start="1011:42" pos:end="1011:42"><literal type="number" pos:start="1011:42" pos:end="1011:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1013:9" pos:end="1013:44"><expr pos:start="1013:9" pos:end="1013:43"><name pos:start="1013:9" pos:end="1013:12">high</name>   <operator pos:start="1013:16" pos:end="1013:16">=</operator> <name pos:start="1013:18" pos:end="1013:32"><name pos:start="1013:18" pos:end="1013:18">s</name><operator pos:start="1013:19" pos:end="1013:20">-&gt;</operator><name pos:start="1013:21" pos:end="1013:25">plane</name><index pos:start="1013:26" pos:end="1013:32">[<expr pos:start="1013:27" pos:end="1013:31"><name pos:start="1013:27" pos:end="1013:31">plane</name></expr>]</index></name><operator pos:start="1013:33" pos:end="1013:33">.</operator><name pos:start="1013:34" pos:end="1013:43"><name pos:start="1013:34" pos:end="1013:40">subband</name><index pos:start="1013:41" pos:end="1013:43">[<expr pos:start="1013:42" pos:end="1013:42"><literal type="number" pos:start="1013:42" pos:end="1013:42">8</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1015:9" pos:end="1015:40"><expr pos:start="1015:9" pos:end="1015:39"><name pos:start="1015:9" pos:end="1015:14">output</name> <operator pos:start="1015:16" pos:end="1015:16">=</operator> <name pos:start="1015:18" pos:end="1015:32"><name pos:start="1015:18" pos:end="1015:18">s</name><operator pos:start="1015:19" pos:end="1015:20">-&gt;</operator><name pos:start="1015:21" pos:end="1015:25">plane</name><index pos:start="1015:26" pos:end="1015:32">[<expr pos:start="1015:27" pos:end="1015:31"><name pos:start="1015:27" pos:end="1015:31">plane</name></expr>]</index></name><operator pos:start="1015:33" pos:end="1015:33">.</operator><name pos:start="1015:34" pos:end="1015:39"><name pos:start="1015:34" pos:end="1015:36">l_h</name><index pos:start="1015:37" pos:end="1015:39">[<expr pos:start="1015:38" pos:end="1015:38"><literal type="number" pos:start="1015:38" pos:end="1015:38">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1017:9" pos:end="1027:9">for <control pos:start="1017:13" pos:end="1017:43">(<init pos:start="1017:14" pos:end="1017:19"><expr pos:start="1017:14" pos:end="1017:18"><name pos:start="1017:14" pos:end="1017:14">i</name> <operator pos:start="1017:16" pos:end="1017:16">=</operator> <literal type="number" pos:start="1017:18" pos:end="1017:18">0</literal></expr>;</init> <condition pos:start="1017:21" pos:end="1017:38"><expr pos:start="1017:21" pos:end="1017:37"><name pos:start="1017:21" pos:end="1017:21">i</name> <operator pos:start="1017:23" pos:end="1017:23">&lt;</operator> <name pos:start="1017:25" pos:end="1017:37">lowpass_width</name></expr>;</condition> <incr pos:start="1017:40" pos:end="1017:42"><expr pos:start="1017:40" pos:end="1017:42"><name pos:start="1017:40" pos:end="1017:40">i</name><operator pos:start="1017:41" pos:end="1017:42">++</operator></expr></incr>)</control> <block pos:start="1017:45" pos:end="1027:9">{<block_content pos:start="1019:13" pos:end="1025:21">

            <expr_stmt pos:start="1019:13" pos:end="1019:106"><expr pos:start="1019:13" pos:end="1019:105"><call pos:start="1019:13" pos:end="1019:105"><name pos:start="1019:13" pos:end="1019:23">vert_filter</name><argument_list pos:start="1019:24" pos:end="1019:105">(<argument pos:start="1019:25" pos:end="1019:30"><expr pos:start="1019:25" pos:end="1019:30"><name pos:start="1019:25" pos:end="1019:30">output</name></expr></argument>, <argument pos:start="1019:33" pos:end="1019:45"><expr pos:start="1019:33" pos:end="1019:45"><name pos:start="1019:33" pos:end="1019:45">lowpass_width</name></expr></argument>, <argument pos:start="1019:48" pos:end="1019:50"><expr pos:start="1019:48" pos:end="1019:50"><name pos:start="1019:48" pos:end="1019:50">low</name></expr></argument>, <argument pos:start="1019:53" pos:end="1019:65"><expr pos:start="1019:53" pos:end="1019:65"><name pos:start="1019:53" pos:end="1019:65">lowpass_width</name></expr></argument>, <argument pos:start="1019:68" pos:end="1019:71"><expr pos:start="1019:68" pos:end="1019:71"><name pos:start="1019:68" pos:end="1019:71">high</name></expr></argument>, <argument pos:start="1019:74" pos:end="1019:88"><expr pos:start="1019:74" pos:end="1019:88"><name pos:start="1019:74" pos:end="1019:88">highpass_stride</name></expr></argument>, <argument pos:start="1019:91" pos:end="1019:104"><expr pos:start="1019:91" pos:end="1019:104"><name pos:start="1019:91" pos:end="1019:104">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1021:13" pos:end="1021:18"><expr pos:start="1021:13" pos:end="1021:17"><name pos:start="1021:13" pos:end="1021:15">low</name><operator pos:start="1021:16" pos:end="1021:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1023:13" pos:end="1023:19"><expr pos:start="1023:13" pos:end="1023:18"><name pos:start="1023:13" pos:end="1023:16">high</name><operator pos:start="1023:17" pos:end="1023:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1025:13" pos:end="1025:21"><expr pos:start="1025:13" pos:end="1025:20"><name pos:start="1025:13" pos:end="1025:18">output</name><operator pos:start="1025:19" pos:end="1025:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1031:9" pos:end="1031:44"><expr pos:start="1031:9" pos:end="1031:43"><name pos:start="1031:9" pos:end="1031:11">low</name>    <operator pos:start="1031:16" pos:end="1031:16">=</operator> <name pos:start="1031:18" pos:end="1031:32"><name pos:start="1031:18" pos:end="1031:18">s</name><operator pos:start="1031:19" pos:end="1031:20">-&gt;</operator><name pos:start="1031:21" pos:end="1031:25">plane</name><index pos:start="1031:26" pos:end="1031:32">[<expr pos:start="1031:27" pos:end="1031:31"><name pos:start="1031:27" pos:end="1031:31">plane</name></expr>]</index></name><operator pos:start="1031:33" pos:end="1031:33">.</operator><name pos:start="1031:34" pos:end="1031:43"><name pos:start="1031:34" pos:end="1031:40">subband</name><index pos:start="1031:41" pos:end="1031:43">[<expr pos:start="1031:42" pos:end="1031:42"><literal type="number" pos:start="1031:42" pos:end="1031:42">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1033:9" pos:end="1033:44"><expr pos:start="1033:9" pos:end="1033:43"><name pos:start="1033:9" pos:end="1033:12">high</name>   <operator pos:start="1033:16" pos:end="1033:16">=</operator> <name pos:start="1033:18" pos:end="1033:32"><name pos:start="1033:18" pos:end="1033:18">s</name><operator pos:start="1033:19" pos:end="1033:20">-&gt;</operator><name pos:start="1033:21" pos:end="1033:25">plane</name><index pos:start="1033:26" pos:end="1033:32">[<expr pos:start="1033:27" pos:end="1033:31"><name pos:start="1033:27" pos:end="1033:31">plane</name></expr>]</index></name><operator pos:start="1033:33" pos:end="1033:33">.</operator><name pos:start="1033:34" pos:end="1033:43"><name pos:start="1033:34" pos:end="1033:40">subband</name><index pos:start="1033:41" pos:end="1033:43">[<expr pos:start="1033:42" pos:end="1033:42"><literal type="number" pos:start="1033:42" pos:end="1033:42">9</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1035:9" pos:end="1035:40"><expr pos:start="1035:9" pos:end="1035:39"><name pos:start="1035:9" pos:end="1035:14">output</name> <operator pos:start="1035:16" pos:end="1035:16">=</operator> <name pos:start="1035:18" pos:end="1035:32"><name pos:start="1035:18" pos:end="1035:18">s</name><operator pos:start="1035:19" pos:end="1035:20">-&gt;</operator><name pos:start="1035:21" pos:end="1035:25">plane</name><index pos:start="1035:26" pos:end="1035:32">[<expr pos:start="1035:27" pos:end="1035:31"><name pos:start="1035:27" pos:end="1035:31">plane</name></expr>]</index></name><operator pos:start="1035:33" pos:end="1035:33">.</operator><name pos:start="1035:34" pos:end="1035:39"><name pos:start="1035:34" pos:end="1035:36">l_h</name><index pos:start="1035:37" pos:end="1035:39">[<expr pos:start="1035:38" pos:end="1035:38"><literal type="number" pos:start="1035:38" pos:end="1035:38">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1037:9" pos:end="1047:9">for <control pos:start="1037:13" pos:end="1037:43">(<init pos:start="1037:14" pos:end="1037:19"><expr pos:start="1037:14" pos:end="1037:18"><name pos:start="1037:14" pos:end="1037:14">i</name> <operator pos:start="1037:16" pos:end="1037:16">=</operator> <literal type="number" pos:start="1037:18" pos:end="1037:18">0</literal></expr>;</init> <condition pos:start="1037:21" pos:end="1037:38"><expr pos:start="1037:21" pos:end="1037:37"><name pos:start="1037:21" pos:end="1037:21">i</name> <operator pos:start="1037:23" pos:end="1037:23">&lt;</operator> <name pos:start="1037:25" pos:end="1037:37">lowpass_width</name></expr>;</condition> <incr pos:start="1037:40" pos:end="1037:42"><expr pos:start="1037:40" pos:end="1037:42"><name pos:start="1037:40" pos:end="1037:40">i</name><operator pos:start="1037:41" pos:end="1037:42">++</operator></expr></incr>)</control> <block pos:start="1037:45" pos:end="1047:9">{<block_content pos:start="1039:13" pos:end="1045:21">

            <expr_stmt pos:start="1039:13" pos:end="1039:108"><expr pos:start="1039:13" pos:end="1039:107"><call pos:start="1039:13" pos:end="1039:107"><name pos:start="1039:13" pos:end="1039:23">vert_filter</name><argument_list pos:start="1039:24" pos:end="1039:107">(<argument pos:start="1039:25" pos:end="1039:30"><expr pos:start="1039:25" pos:end="1039:30"><name pos:start="1039:25" pos:end="1039:30">output</name></expr></argument>, <argument pos:start="1039:33" pos:end="1039:45"><expr pos:start="1039:33" pos:end="1039:45"><name pos:start="1039:33" pos:end="1039:45">lowpass_width</name></expr></argument>, <argument pos:start="1039:48" pos:end="1039:50"><expr pos:start="1039:48" pos:end="1039:50"><name pos:start="1039:48" pos:end="1039:50">low</name></expr></argument>, <argument pos:start="1039:53" pos:end="1039:67"><expr pos:start="1039:53" pos:end="1039:67"><name pos:start="1039:53" pos:end="1039:67">highpass_stride</name></expr></argument>, <argument pos:start="1039:70" pos:end="1039:73"><expr pos:start="1039:70" pos:end="1039:73"><name pos:start="1039:70" pos:end="1039:73">high</name></expr></argument>, <argument pos:start="1039:76" pos:end="1039:90"><expr pos:start="1039:76" pos:end="1039:90"><name pos:start="1039:76" pos:end="1039:90">highpass_stride</name></expr></argument>, <argument pos:start="1039:93" pos:end="1039:106"><expr pos:start="1039:93" pos:end="1039:106"><name pos:start="1039:93" pos:end="1039:106">lowpass_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1041:13" pos:end="1041:18"><expr pos:start="1041:13" pos:end="1041:17"><name pos:start="1041:13" pos:end="1041:15">low</name><operator pos:start="1041:16" pos:end="1041:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1043:13" pos:end="1043:19"><expr pos:start="1043:13" pos:end="1043:18"><name pos:start="1043:13" pos:end="1043:16">high</name><operator pos:start="1043:17" pos:end="1043:18">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1045:13" pos:end="1045:21"><expr pos:start="1045:13" pos:end="1045:20"><name pos:start="1045:13" pos:end="1045:18">output</name><operator pos:start="1045:19" pos:end="1045:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="1051:9" pos:end="1051:46"><expr pos:start="1051:9" pos:end="1051:45"><name pos:start="1051:9" pos:end="1051:11">dst</name> <operator pos:start="1051:13" pos:end="1051:13">=</operator> <operator pos:start="1051:15" pos:end="1051:15">(</operator><name pos:start="1051:16" pos:end="1051:22">int16_t</name> <operator pos:start="1051:24" pos:end="1051:24">*</operator><operator pos:start="1051:25" pos:end="1051:25">)</operator><name pos:start="1051:26" pos:end="1051:45"><name pos:start="1051:26" pos:end="1051:28">pic</name><operator pos:start="1051:29" pos:end="1051:30">-&gt;</operator><name pos:start="1051:31" pos:end="1051:34">data</name><index pos:start="1051:35" pos:end="1051:45">[<expr pos:start="1051:36" pos:end="1051:44"><name pos:start="1051:36" pos:end="1051:44">act_plane</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1053:9" pos:end="1053:38"><expr pos:start="1053:9" pos:end="1053:37"><name pos:start="1053:9" pos:end="1053:11">low</name>  <operator pos:start="1053:14" pos:end="1053:14">=</operator> <name pos:start="1053:16" pos:end="1053:30"><name pos:start="1053:16" pos:end="1053:16">s</name><operator pos:start="1053:17" pos:end="1053:18">-&gt;</operator><name pos:start="1053:19" pos:end="1053:23">plane</name><index pos:start="1053:24" pos:end="1053:30">[<expr pos:start="1053:25" pos:end="1053:29"><name pos:start="1053:25" pos:end="1053:29">plane</name></expr>]</index></name><operator pos:start="1053:31" pos:end="1053:31">.</operator><name pos:start="1053:32" pos:end="1053:37"><name pos:start="1053:32" pos:end="1053:34">l_h</name><index pos:start="1053:35" pos:end="1053:37">[<expr pos:start="1053:36" pos:end="1053:36"><literal type="number" pos:start="1053:36" pos:end="1053:36">6</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1055:9" pos:end="1055:38"><expr pos:start="1055:9" pos:end="1055:37"><name pos:start="1055:9" pos:end="1055:12">high</name> <operator pos:start="1055:14" pos:end="1055:14">=</operator> <name pos:start="1055:16" pos:end="1055:30"><name pos:start="1055:16" pos:end="1055:16">s</name><operator pos:start="1055:17" pos:end="1055:18">-&gt;</operator><name pos:start="1055:19" pos:end="1055:23">plane</name><index pos:start="1055:24" pos:end="1055:30">[<expr pos:start="1055:25" pos:end="1055:29"><name pos:start="1055:25" pos:end="1055:29">plane</name></expr>]</index></name><operator pos:start="1055:31" pos:end="1055:31">.</operator><name pos:start="1055:32" pos:end="1055:37"><name pos:start="1055:32" pos:end="1055:34">l_h</name><index pos:start="1055:35" pos:end="1055:37">[<expr pos:start="1055:36" pos:end="1055:36"><literal type="number" pos:start="1055:36" pos:end="1055:36">7</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="1057:9" pos:end="1067:9">for <control pos:start="1057:13" pos:end="1057:48">(<init pos:start="1057:14" pos:end="1057:19"><expr pos:start="1057:14" pos:end="1057:18"><name pos:start="1057:14" pos:end="1057:14">i</name> <operator pos:start="1057:16" pos:end="1057:16">=</operator> <literal type="number" pos:start="1057:18" pos:end="1057:18">0</literal></expr>;</init> <condition pos:start="1057:21" pos:end="1057:43"><expr pos:start="1057:21" pos:end="1057:42"><name pos:start="1057:21" pos:end="1057:21">i</name> <operator pos:start="1057:23" pos:end="1057:23">&lt;</operator> <name pos:start="1057:25" pos:end="1057:38">lowpass_height</name> <operator pos:start="1057:40" pos:end="1057:40">*</operator> <literal type="number" pos:start="1057:42" pos:end="1057:42">2</literal></expr>;</condition> <incr pos:start="1057:45" pos:end="1057:47"><expr pos:start="1057:45" pos:end="1057:47"><name pos:start="1057:45" pos:end="1057:45">i</name><operator pos:start="1057:46" pos:end="1057:47">++</operator></expr></incr>)</control> <block pos:start="1057:50" pos:end="1067:9">{<block_content pos:start="1059:13" pos:end="1065:49">

            <expr_stmt pos:start="1059:13" pos:end="1059:69"><expr pos:start="1059:13" pos:end="1059:68"><call pos:start="1059:13" pos:end="1059:68"><name pos:start="1059:13" pos:end="1059:29">horiz_filter_clip</name><argument_list pos:start="1059:30" pos:end="1059:68">(<argument pos:start="1059:31" pos:end="1059:33"><expr pos:start="1059:31" pos:end="1059:33"><name pos:start="1059:31" pos:end="1059:33">dst</name></expr></argument>, <argument pos:start="1059:36" pos:end="1059:38"><expr pos:start="1059:36" pos:end="1059:38"><name pos:start="1059:36" pos:end="1059:38">low</name></expr></argument>, <argument pos:start="1059:41" pos:end="1059:44"><expr pos:start="1059:41" pos:end="1059:44"><name pos:start="1059:41" pos:end="1059:44">high</name></expr></argument>, <argument pos:start="1059:47" pos:end="1059:59"><expr pos:start="1059:47" pos:end="1059:59"><name pos:start="1059:47" pos:end="1059:59">lowpass_width</name></expr></argument>, <argument pos:start="1059:62" pos:end="1059:67"><expr pos:start="1059:62" pos:end="1059:67"><name pos:start="1059:62" pos:end="1059:67"><name pos:start="1059:62" pos:end="1059:62">s</name><operator pos:start="1059:63" pos:end="1059:64">-&gt;</operator><name pos:start="1059:65" pos:end="1059:67">bpc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1061:13" pos:end="1061:34"><expr pos:start="1061:13" pos:end="1061:33"><name pos:start="1061:13" pos:end="1061:15">low</name>  <operator pos:start="1061:18" pos:end="1061:19">+=</operator> <name pos:start="1061:21" pos:end="1061:33">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1063:13" pos:end="1063:34"><expr pos:start="1063:13" pos:end="1063:33"><name pos:start="1063:13" pos:end="1063:16">high</name> <operator pos:start="1063:18" pos:end="1063:19">+=</operator> <name pos:start="1063:21" pos:end="1063:33">lowpass_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1065:13" pos:end="1065:49"><expr pos:start="1065:13" pos:end="1065:48"><name pos:start="1065:13" pos:end="1065:15">dst</name>  <operator pos:start="1065:18" pos:end="1065:19">+=</operator> <name pos:start="1065:21" pos:end="1065:44"><name pos:start="1065:21" pos:end="1065:23">pic</name><operator pos:start="1065:24" pos:end="1065:25">-&gt;</operator><name pos:start="1065:26" pos:end="1065:33">linesize</name><index pos:start="1065:34" pos:end="1065:44">[<expr pos:start="1065:35" pos:end="1065:43"><name pos:start="1065:35" pos:end="1065:43">act_plane</name></expr>]</index></name> <operator pos:start="1065:46" pos:end="1065:46">/</operator> <literal type="number" pos:start="1065:48" pos:end="1065:48">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>





<label pos:start="1075:1" pos:end="1075:4"><name pos:start="1075:1" pos:end="1075:3">end</name>:</label>

    <if_stmt pos:start="1077:5" pos:end="1079:19"><if pos:start="1077:5" pos:end="1079:19">if <condition pos:start="1077:8" pos:end="1077:16">(<expr pos:start="1077:9" pos:end="1077:15"><name pos:start="1077:9" pos:end="1077:11">ret</name> <operator pos:start="1077:13" pos:end="1077:13">&lt;</operator> <literal type="number" pos:start="1077:15" pos:end="1077:15">0</literal></expr>)</condition><block type="pseudo" pos:start="1079:9" pos:end="1079:19"><block_content pos:start="1079:9" pos:end="1079:19">

        <return pos:start="1079:9" pos:end="1079:19">return <expr pos:start="1079:16" pos:end="1079:18"><name pos:start="1079:16" pos:end="1079:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="1083:5" pos:end="1083:19"><expr pos:start="1083:5" pos:end="1083:18"><operator pos:start="1083:5" pos:end="1083:5">*</operator><name pos:start="1083:6" pos:end="1083:14">got_frame</name> <operator pos:start="1083:16" pos:end="1083:16">=</operator> <literal type="number" pos:start="1083:18" pos:end="1083:18">1</literal></expr>;</expr_stmt>

    <return pos:start="1085:5" pos:end="1085:23">return <expr pos:start="1085:12" pos:end="1085:22"><name pos:start="1085:12" pos:end="1085:22"><name pos:start="1085:12" pos:end="1085:16">avpkt</name><operator pos:start="1085:17" pos:end="1085:18">-&gt;</operator><name pos:start="1085:19" pos:end="1085:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
