<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1319.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">sse8_altivec</name><parameter_list pos:start="1:24" pos:end="1:84">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:31">v</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:40">uint8_t</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">pix1</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">pix2</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:76">line_size</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:83"><decl pos:start="1:79" pos:end="1:83"><type pos:start="1:79" pos:end="1:83"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:83">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:81"><decl pos:start="9:5" pos:end="9:80"><type pos:start="9:5" pos:end="9:29"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:16">vector</name> <name pos:start="9:18" pos:end="9:25">unsigned</name> <name pos:start="9:27" pos:end="9:29">int</name></type> <name pos:start="9:31" pos:end="9:34">zero</name> <init pos:start="9:36" pos:end="9:80">= <expr pos:start="9:38" pos:end="9:80"><operator pos:start="9:38" pos:end="9:38">(</operator><specifier pos:start="9:39" pos:end="9:43">const</specifier> <name pos:start="9:45" pos:end="9:50">vector</name> <name pos:start="9:52" pos:end="9:59">unsigned</name> <name pos:start="9:61" pos:end="9:63">int</name><operator pos:start="9:64" pos:end="9:64">)</operator><call pos:start="9:65" pos:end="9:80"><name pos:start="9:65" pos:end="9:77">vec_splat_u32</name><argument_list pos:start="9:78" pos:end="9:80">(<argument pos:start="9:79" pos:end="9:79"><expr pos:start="9:79" pos:end="9:79"><literal type="number" pos:start="9:79" pos:end="9:79">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:115"><decl pos:start="11:5" pos:end="11:114"><type pos:start="11:5" pos:end="11:30"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:16">vector</name> <name pos:start="11:18" pos:end="11:25">unsigned</name> <name pos:start="11:27" pos:end="11:30">char</name></type> <name pos:start="11:32" pos:end="11:40">permclear</name> <init pos:start="11:42" pos:end="11:114">= <expr pos:start="11:44" pos:end="11:114"><operator pos:start="11:44" pos:end="11:44">(</operator><name pos:start="11:45" pos:end="11:50">vector</name> <name pos:start="11:52" pos:end="11:59">unsigned</name> <name pos:start="11:61" pos:end="11:64">char</name><operator pos:start="11:65" pos:end="11:65">)</operator><block pos:start="11:66" pos:end="11:114">{<expr pos:start="11:67" pos:end="11:69"><literal type="number" pos:start="11:67" pos:end="11:69">255</literal></expr>,<expr pos:start="11:71" pos:end="11:73"><literal type="number" pos:start="11:71" pos:end="11:73">255</literal></expr>,<expr pos:start="11:75" pos:end="11:77"><literal type="number" pos:start="11:75" pos:end="11:77">255</literal></expr>,<expr pos:start="11:79" pos:end="11:81"><literal type="number" pos:start="11:79" pos:end="11:81">255</literal></expr>,<expr pos:start="11:83" pos:end="11:85"><literal type="number" pos:start="11:83" pos:end="11:85">255</literal></expr>,<expr pos:start="11:87" pos:end="11:89"><literal type="number" pos:start="11:87" pos:end="11:89">255</literal></expr>,<expr pos:start="11:91" pos:end="11:93"><literal type="number" pos:start="11:91" pos:end="11:93">255</literal></expr>,<expr pos:start="11:95" pos:end="11:97"><literal type="number" pos:start="11:95" pos:end="11:97">255</literal></expr>,<expr pos:start="11:99" pos:end="11:99"><literal type="number" pos:start="11:99" pos:end="11:99">0</literal></expr>,<expr pos:start="11:101" pos:end="11:101"><literal type="number" pos:start="11:101" pos:end="11:101">0</literal></expr>,<expr pos:start="11:103" pos:end="11:103"><literal type="number" pos:start="11:103" pos:end="11:103">0</literal></expr>,<expr pos:start="11:105" pos:end="11:105"><literal type="number" pos:start="11:105" pos:end="11:105">0</literal></expr>,<expr pos:start="11:107" pos:end="11:107"><literal type="number" pos:start="11:107" pos:end="11:107">0</literal></expr>,<expr pos:start="11:109" pos:end="11:109"><literal type="number" pos:start="11:109" pos:end="11:109">0</literal></expr>,<expr pos:start="11:111" pos:end="11:111"><literal type="number" pos:start="11:111" pos:end="11:111">0</literal></expr>,<expr pos:start="11:113" pos:end="11:113"><literal type="number" pos:start="11:113" pos:end="11:113">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:50"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:10">vector</name> <name pos:start="13:12" pos:end="13:19">unsigned</name> <name pos:start="13:21" pos:end="13:24">char</name></type> <name pos:start="13:26" pos:end="13:30">perm1</name> <init pos:start="13:32" pos:end="13:50">= <expr pos:start="13:34" pos:end="13:50"><call pos:start="13:34" pos:end="13:50"><name pos:start="13:34" pos:end="13:41">vec_lvsl</name><argument_list pos:start="13:42" pos:end="13:50">(<argument pos:start="13:43" pos:end="13:43"><expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">0</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:49"><expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">pix1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:10">vector</name> <name pos:start="15:12" pos:end="15:19">unsigned</name> <name pos:start="15:21" pos:end="15:24">char</name></type> <name pos:start="15:26" pos:end="15:30">perm2</name> <init pos:start="15:32" pos:end="15:50">= <expr pos:start="15:34" pos:end="15:50"><call pos:start="15:34" pos:end="15:50"><name pos:start="15:34" pos:end="15:41">vec_lvsl</name><argument_list pos:start="15:42" pos:end="15:50">(<argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">0</literal></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">pix2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:10">vector</name> <name pos:start="17:12" pos:end="17:19">unsigned</name> <name pos:start="17:21" pos:end="17:24">char</name></type> <name pos:start="17:26" pos:end="17:27">t1</name></decl>, <decl pos:start="17:30" pos:end="17:31"><type ref="prev" pos:start="17:5" pos:end="17:24"/><name pos:start="17:30" pos:end="17:31">t2</name></decl>, <decl pos:start="17:34" pos:end="17:35"><type ref="prev" pos:start="17:5" pos:end="17:24"/><name pos:start="17:34" pos:end="17:35">t3</name></decl>,<decl pos:start="17:37" pos:end="17:38"><type ref="prev" pos:start="17:5" pos:end="17:24"/><name pos:start="17:37" pos:end="17:38">t4</name></decl>, <decl pos:start="17:41" pos:end="17:42"><type ref="prev" pos:start="17:5" pos:end="17:24"/><name pos:start="17:41" pos:end="17:42">t5</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:10">vector</name> <name pos:start="19:12" pos:end="19:19">unsigned</name> <name pos:start="19:21" pos:end="19:23">int</name></type> <name pos:start="19:25" pos:end="19:27">sum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:29"><decl pos:start="21:5" pos:end="21:28"><type pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:10">vector</name> <name pos:start="21:12" pos:end="21:17">signed</name> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:28">sumsqr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:7">sum</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <operator pos:start="25:11" pos:end="25:11">(</operator><name pos:start="25:12" pos:end="25:17">vector</name> <name pos:start="25:19" pos:end="25:26">unsigned</name> <name pos:start="25:28" pos:end="25:30">int</name><operator pos:start="25:31" pos:end="25:31">)</operator><call pos:start="25:32" pos:end="25:47"><name pos:start="25:32" pos:end="25:44">vec_splat_u32</name><argument_list pos:start="25:45" pos:end="25:47">(<argument pos:start="25:46" pos:end="25:46"><expr pos:start="25:46" pos:end="25:46"><literal type="number" pos:start="25:46" pos:end="25:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="77:5">for <control pos:start="29:9" pos:end="29:27">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:21"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:21">h</name></expr>;</condition> <incr pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:24">i</name><operator pos:start="29:25" pos:end="29:26">++</operator></expr></incr>)</control> <block pos:start="29:29" pos:end="77:5">{<block_content pos:start="37:9" pos:end="75:26">

        <comment type="block" pos:start="31:9" pos:end="35:70">/* Read potentially unaligned pixels into t1 and t2

           Since we're reading 16 pixels, and actually only want 8,

           mask out the last 8 pixels. The 0s don't change the sum. */</comment>

        <decl_stmt pos:start="37:9" pos:end="37:54"><decl pos:start="37:9" pos:end="37:53"><type pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:14">vector</name> <name pos:start="37:16" pos:end="37:23">unsigned</name> <name pos:start="37:25" pos:end="37:28">char</name></type> <name pos:start="37:30" pos:end="37:34">pix1l</name> <init pos:start="37:36" pos:end="37:53">= <expr pos:start="37:38" pos:end="37:53"><call pos:start="37:38" pos:end="37:53"><name pos:start="37:38" pos:end="37:43">vec_ld</name><argument_list pos:start="37:44" pos:end="37:53">( <argument pos:start="37:46" pos:end="37:46"><expr pos:start="37:46" pos:end="37:46"><literal type="number" pos:start="37:46" pos:end="37:46">0</literal></expr></argument>, <argument pos:start="37:49" pos:end="37:52"><expr pos:start="37:49" pos:end="37:52"><name pos:start="37:49" pos:end="37:52">pix1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:54"><decl pos:start="39:9" pos:end="39:53"><type pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:14">vector</name> <name pos:start="39:16" pos:end="39:23">unsigned</name> <name pos:start="39:25" pos:end="39:28">char</name></type> <name pos:start="39:30" pos:end="39:34">pix1r</name> <init pos:start="39:36" pos:end="39:53">= <expr pos:start="39:38" pos:end="39:53"><call pos:start="39:38" pos:end="39:53"><name pos:start="39:38" pos:end="39:43">vec_ld</name><argument_list pos:start="39:44" pos:end="39:53">(<argument pos:start="39:45" pos:end="39:46"><expr pos:start="39:45" pos:end="39:46"><literal type="number" pos:start="39:45" pos:end="39:46">15</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:52"><expr pos:start="39:49" pos:end="39:52"><name pos:start="39:49" pos:end="39:52">pix1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:54"><decl pos:start="41:9" pos:end="41:53"><type pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:14">vector</name> <name pos:start="41:16" pos:end="41:23">unsigned</name> <name pos:start="41:25" pos:end="41:28">char</name></type> <name pos:start="41:30" pos:end="41:34">pix2l</name> <init pos:start="41:36" pos:end="41:53">= <expr pos:start="41:38" pos:end="41:53"><call pos:start="41:38" pos:end="41:53"><name pos:start="41:38" pos:end="41:43">vec_ld</name><argument_list pos:start="41:44" pos:end="41:53">( <argument pos:start="41:46" pos:end="41:46"><expr pos:start="41:46" pos:end="41:46"><literal type="number" pos:start="41:46" pos:end="41:46">0</literal></expr></argument>, <argument pos:start="41:49" pos:end="41:52"><expr pos:start="41:49" pos:end="41:52"><name pos:start="41:49" pos:end="41:52">pix2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:54"><decl pos:start="43:9" pos:end="43:53"><type pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:14">vector</name> <name pos:start="43:16" pos:end="43:23">unsigned</name> <name pos:start="43:25" pos:end="43:28">char</name></type> <name pos:start="43:30" pos:end="43:34">pix2r</name> <init pos:start="43:36" pos:end="43:53">= <expr pos:start="43:38" pos:end="43:53"><call pos:start="43:38" pos:end="43:53"><name pos:start="43:38" pos:end="43:43">vec_ld</name><argument_list pos:start="43:44" pos:end="43:53">(<argument pos:start="43:45" pos:end="43:46"><expr pos:start="43:45" pos:end="43:46"><literal type="number" pos:start="43:45" pos:end="43:46">15</literal></expr></argument>, <argument pos:start="43:49" pos:end="43:52"><expr pos:start="43:49" pos:end="43:52"><name pos:start="43:49" pos:end="43:52">pix2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:63"><expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:10">t1</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:62"><name pos:start="45:14" pos:end="45:20">vec_and</name><argument_list pos:start="45:21" pos:end="45:62">(<argument pos:start="45:22" pos:end="45:50"><expr pos:start="45:22" pos:end="45:50"><call pos:start="45:22" pos:end="45:50"><name pos:start="45:22" pos:end="45:29">vec_perm</name><argument_list pos:start="45:30" pos:end="45:50">(<argument pos:start="45:31" pos:end="45:35"><expr pos:start="45:31" pos:end="45:35"><name pos:start="45:31" pos:end="45:35">pix1l</name></expr></argument>, <argument pos:start="45:38" pos:end="45:42"><expr pos:start="45:38" pos:end="45:42"><name pos:start="45:38" pos:end="45:42">pix1r</name></expr></argument>, <argument pos:start="45:45" pos:end="45:49"><expr pos:start="45:45" pos:end="45:49"><name pos:start="45:45" pos:end="45:49">perm1</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:53" pos:end="45:61"><expr pos:start="45:53" pos:end="45:61"><name pos:start="45:53" pos:end="45:61">permclear</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:63"><expr pos:start="47:9" pos:end="47:62"><name pos:start="47:9" pos:end="47:10">t2</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:62"><name pos:start="47:14" pos:end="47:20">vec_and</name><argument_list pos:start="47:21" pos:end="47:62">(<argument pos:start="47:22" pos:end="47:50"><expr pos:start="47:22" pos:end="47:50"><call pos:start="47:22" pos:end="47:50"><name pos:start="47:22" pos:end="47:29">vec_perm</name><argument_list pos:start="47:30" pos:end="47:50">(<argument pos:start="47:31" pos:end="47:35"><expr pos:start="47:31" pos:end="47:35"><name pos:start="47:31" pos:end="47:35">pix2l</name></expr></argument>, <argument pos:start="47:38" pos:end="47:42"><expr pos:start="47:38" pos:end="47:42"><name pos:start="47:38" pos:end="47:42">pix2r</name></expr></argument>, <argument pos:start="47:45" pos:end="47:49"><expr pos:start="47:45" pos:end="47:49"><name pos:start="47:45" pos:end="47:49">perm2</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:53" pos:end="47:61"><expr pos:start="47:53" pos:end="47:61"><name pos:start="47:53" pos:end="47:61">permclear</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="51:9" pos:end="53:52">/* Since we want to use unsigned chars, we can take advantage

           of the fact that abs(a-b)^2 = (a-b)^2. */</comment>



        <comment type="block" pos:start="57:9" pos:end="57:46">/* Calculate abs differences vector */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:10">t3</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <call pos:start="59:14" pos:end="59:28"><name pos:start="59:14" pos:end="59:20">vec_max</name><argument_list pos:start="59:21" pos:end="59:28">(<argument pos:start="59:22" pos:end="59:23"><expr pos:start="59:22" pos:end="59:23"><name pos:start="59:22" pos:end="59:23">t1</name></expr></argument>, <argument pos:start="59:26" pos:end="59:27"><expr pos:start="59:26" pos:end="59:27"><name pos:start="59:26" pos:end="59:27">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:29"><expr pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:10">t4</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:28"><name pos:start="61:14" pos:end="61:20">vec_min</name><argument_list pos:start="61:21" pos:end="61:28">(<argument pos:start="61:22" pos:end="61:23"><expr pos:start="61:22" pos:end="61:23"><name pos:start="61:22" pos:end="61:23">t1</name></expr></argument>, <argument pos:start="61:26" pos:end="61:27"><expr pos:start="61:26" pos:end="61:27"><name pos:start="61:26" pos:end="61:27">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:10">t5</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:28"><name pos:start="63:14" pos:end="63:20">vec_sub</name><argument_list pos:start="63:21" pos:end="63:28">(<argument pos:start="63:22" pos:end="63:23"><expr pos:start="63:22" pos:end="63:23"><name pos:start="63:22" pos:end="63:23">t3</name></expr></argument>, <argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><name pos:start="63:26" pos:end="63:27">t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:55">/* Square the values and add them to our sum */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:11">sum</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:35"><name pos:start="69:15" pos:end="69:22">vec_msum</name><argument_list pos:start="69:23" pos:end="69:35">(<argument pos:start="69:24" pos:end="69:25"><expr pos:start="69:24" pos:end="69:25"><name pos:start="69:24" pos:end="69:25">t5</name></expr></argument>, <argument pos:start="69:28" pos:end="69:29"><expr pos:start="69:28" pos:end="69:29"><name pos:start="69:28" pos:end="69:29">t5</name></expr></argument>, <argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">sum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:26"><expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:12">pix1</name> <operator pos:start="73:14" pos:end="73:15">+=</operator> <name pos:start="73:17" pos:end="73:25">line_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:12">pix2</name> <operator pos:start="75:14" pos:end="75:15">+=</operator> <name pos:start="75:17" pos:end="75:25">line_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="81:5" pos:end="81:65">/* Sum up the four partial sums, and put the result into s */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:73"><expr pos:start="83:5" pos:end="83:72"><name pos:start="83:5" pos:end="83:10">sumsqr</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:72"><name pos:start="83:14" pos:end="83:21">vec_sums</name><argument_list pos:start="83:22" pos:end="83:72">(<argument pos:start="83:23" pos:end="83:45"><expr pos:start="83:23" pos:end="83:45"><operator pos:start="83:23" pos:end="83:23">(</operator><name pos:start="83:24" pos:end="83:29">vector</name> <name pos:start="83:31" pos:end="83:36">signed</name> <name pos:start="83:38" pos:end="83:40">int</name><operator pos:start="83:41" pos:end="83:41">)</operator> <name pos:start="83:43" pos:end="83:45">sum</name></expr></argument>, <argument pos:start="83:48" pos:end="83:71"><expr pos:start="83:48" pos:end="83:71"><operator pos:start="83:48" pos:end="83:48">(</operator><name pos:start="83:49" pos:end="83:54">vector</name> <name pos:start="83:56" pos:end="83:61">signed</name> <name pos:start="83:63" pos:end="83:65">int</name><operator pos:start="83:66" pos:end="83:66">)</operator> <name pos:start="83:68" pos:end="83:71">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:10">sumsqr</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <call pos:start="85:14" pos:end="85:33"><name pos:start="85:14" pos:end="85:22">vec_splat</name><argument_list pos:start="85:23" pos:end="85:33">(<argument pos:start="85:24" pos:end="85:29"><expr pos:start="85:24" pos:end="85:29"><name pos:start="85:24" pos:end="85:29">sumsqr</name></expr></argument>, <argument pos:start="85:32" pos:end="85:32"><expr pos:start="85:32" pos:end="85:32"><literal type="number" pos:start="85:32" pos:end="85:32">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><call pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:11">vec_ste</name><argument_list pos:start="87:12" pos:end="87:26">(<argument pos:start="87:13" pos:end="87:18"><expr pos:start="87:13" pos:end="87:18"><name pos:start="87:13" pos:end="87:18">sumsqr</name></expr></argument>, <argument pos:start="87:21" pos:end="87:21"><expr pos:start="87:21" pos:end="87:21"><literal type="number" pos:start="87:21" pos:end="87:21">0</literal></expr></argument>, <argument pos:start="87:24" pos:end="87:25"><expr pos:start="87:24" pos:end="87:25"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><name pos:start="91:12" pos:end="91:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
