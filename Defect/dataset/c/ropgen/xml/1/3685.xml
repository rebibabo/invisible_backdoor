<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3685.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:30">ff_jpeg2000_init_component</name><parameter_list pos:start="1:31" pos:end="5:53">(<parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:48">Jpeg2000Component</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">comp</name></decl></parameter>,
                               <parameter pos:start="2:32" pos:end="2:58"><decl pos:start="2:32" pos:end="2:58"><type pos:start="2:32" pos:end="2:58"><name pos:start="2:32" pos:end="2:50">Jpeg2000CodingStyle</name> <modifier pos:start="2:52" pos:end="2:52">*</modifier></type><name pos:start="2:53" pos:end="2:58">codsty</name></decl></parameter>,
                               <parameter pos:start="3:32" pos:end="3:57"><decl pos:start="3:32" pos:end="3:57"><type pos:start="3:32" pos:end="3:57"><name pos:start="3:32" pos:end="3:49">Jpeg2000QuantStyle</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:57">qntsty</name></decl></parameter>,
                               <parameter pos:start="4:32" pos:end="4:39"><decl pos:start="4:32" pos:end="4:39"><type pos:start="4:32" pos:end="4:39"><name pos:start="4:32" pos:end="4:34">int</name></type> <name pos:start="4:36" pos:end="4:39">cbps</name></decl></parameter>, <parameter pos:start="4:42" pos:end="4:47"><decl pos:start="4:42" pos:end="4:47"><type pos:start="4:42" pos:end="4:47"><name pos:start="4:42" pos:end="4:44">int</name></type> <name pos:start="4:46" pos:end="4:47">dx</name></decl></parameter>, <parameter pos:start="4:50" pos:end="4:55"><decl pos:start="4:50" pos:end="4:55"><type pos:start="4:50" pos:end="4:55"><name pos:start="4:50" pos:end="4:52">int</name></type> <name pos:start="4:54" pos:end="4:55">dy</name></decl></parameter>,
                               <parameter pos:start="5:32" pos:end="5:52"><decl pos:start="5:32" pos:end="5:52"><type pos:start="5:32" pos:end="5:52"><name pos:start="5:32" pos:end="5:45">AVCodecContext</name> <modifier pos:start="5:47" pos:end="5:47">*</modifier></type><name pos:start="5:48" pos:end="5:52">avctx</name></decl></parameter>)</parameter_list>
<block pos:start="6:1" pos:end="95:1">{<block_content pos:start="7:5" pos:end="94:13">
    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">reslevelno</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">bandno</name></decl>, <decl pos:start="7:29" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:35">gbandno</name> <init pos:start="7:37" pos:end="7:39">= <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">0</literal></expr></init></decl>, <decl pos:start="7:42" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:42" pos:end="7:44">ret</name></decl>, <decl pos:start="7:47" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:47" pos:end="7:47">i</name></decl>, <decl pos:start="7:50" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:50" pos:end="7:50">j</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:19"><decl pos:start="8:5" pos:end="8:18"><type pos:start="8:5" pos:end="8:12"><name pos:start="8:5" pos:end="8:12">uint32_t</name></type> <name pos:start="8:14" pos:end="8:18">csize</name></decl>;</decl_stmt>
    <if_stmt pos:start="9:5" pos:end="12:5"><if pos:start="9:5" pos:end="12:5">if <condition pos:start="9:8" pos:end="9:39">(<expr pos:start="9:9" pos:end="9:38"><name pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:14">codsty</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:33">nreslevels2decode</name></name> <operator pos:start="9:35" pos:end="9:36">&lt;=</operator> <literal type="number" pos:start="9:38" pos:end="9:38">0</literal></expr>)</condition> <block pos:start="9:41" pos:end="12:5">{<block_content pos:start="10:9" pos:end="11:35">
        <expr_stmt pos:start="10:9" pos:end="10:114"><expr pos:start="10:9" pos:end="10:113"><call pos:start="10:9" pos:end="10:113"><name pos:start="10:9" pos:end="10:14">av_log</name><argument_list pos:start="10:15" pos:end="10:113">(<argument pos:start="10:16" pos:end="10:20"><expr pos:start="10:16" pos:end="10:20"><name pos:start="10:16" pos:end="10:20">avctx</name></expr></argument>, <argument pos:start="10:23" pos:end="10:34"><expr pos:start="10:23" pos:end="10:34"><name pos:start="10:23" pos:end="10:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="10:37" pos:end="10:85"><expr pos:start="10:37" pos:end="10:85"><literal type="string" pos:start="10:37" pos:end="10:85">"nreslevels2decode %d invalid or uninitialized\n"</literal></expr></argument>, <argument pos:start="10:88" pos:end="10:112"><expr pos:start="10:88" pos:end="10:112"><name pos:start="10:88" pos:end="10:112"><name pos:start="10:88" pos:end="10:93">codsty</name><operator pos:start="10:94" pos:end="10:95">-&gt;</operator><name pos:start="10:96" pos:end="10:112">nreslevels2decode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="11:9" pos:end="11:35">return <expr pos:start="11:16" pos:end="11:34"><name pos:start="11:16" pos:end="11:34">AVERROR_INVALIDDATA</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="13:5" pos:end="16:19"><if pos:start="13:5" pos:end="16:19">if <condition pos:start="13:8" pos:end="15:54">(<expr pos:start="13:9" pos:end="15:53"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <call pos:start="13:15" pos:end="15:53"><name pos:start="13:15" pos:end="13:34">ff_jpeg2000_dwt_init</name><argument_list pos:start="13:35" pos:end="15:53">(<argument pos:start="13:36" pos:end="13:45"><expr pos:start="13:36" pos:end="13:45"><operator pos:start="13:36" pos:end="13:36">&amp;</operator><name pos:start="13:37" pos:end="13:45"><name pos:start="13:37" pos:end="13:40">comp</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:45">dwt</name></name></expr></argument>, <argument pos:start="13:48" pos:end="13:58"><expr pos:start="13:48" pos:end="13:58"><name pos:start="13:48" pos:end="13:58"><name pos:start="13:48" pos:end="13:51">comp</name><operator pos:start="13:52" pos:end="13:53">-&gt;</operator><name pos:start="13:54" pos:end="13:58">coord</name></name></expr></argument>,
                                   <argument pos:start="14:36" pos:end="14:64"><expr pos:start="14:36" pos:end="14:64"><name pos:start="14:36" pos:end="14:60"><name pos:start="14:36" pos:end="14:41">codsty</name><operator pos:start="14:42" pos:end="14:43">-&gt;</operator><name pos:start="14:44" pos:end="14:60">nreslevels2decode</name></name> <operator pos:start="14:62" pos:end="14:62">-</operator> <literal type="number" pos:start="14:64" pos:end="14:64">1</literal></expr></argument>,
                                   <argument pos:start="15:36" pos:end="15:52"><expr pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:52"><name pos:start="15:36" pos:end="15:41">codsty</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:52">transform</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="16:9" pos:end="16:19"><block_content pos:start="16:9" pos:end="16:19">
        <return pos:start="16:9" pos:end="16:19">return <expr pos:start="16:16" pos:end="16:18"><name pos:start="16:16" pos:end="16:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="18:77">(<expr pos:start="17:9" pos:end="18:76"><call pos:start="17:9" pos:end="18:76"><name pos:start="17:9" pos:end="17:27">av_image_check_size</name><argument_list pos:start="17:28" pos:end="18:76">(<argument pos:start="17:29" pos:end="17:65"><expr pos:start="17:29" pos:end="17:65"><name pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:32">comp</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:39">coord</name><index pos:start="17:40" pos:end="17:42">[<expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr>]</index><index pos:start="17:43" pos:end="17:45">[<expr pos:start="17:44" pos:end="17:44"><literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr>]</index></name> <operator pos:start="17:47" pos:end="17:47">-</operator> <name pos:start="17:49" pos:end="17:65"><name pos:start="17:49" pos:end="17:52">comp</name><operator pos:start="17:53" pos:end="17:54">-&gt;</operator><name pos:start="17:55" pos:end="17:59">coord</name><index pos:start="17:60" pos:end="17:62">[<expr pos:start="17:61" pos:end="17:61"><literal type="number" pos:start="17:61" pos:end="17:61">0</literal></expr>]</index><index pos:start="17:63" pos:end="17:65">[<expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr>]</index></name></expr></argument>,
                            <argument pos:start="18:29" pos:end="18:65"><expr pos:start="18:29" pos:end="18:65"><name pos:start="18:29" pos:end="18:45"><name pos:start="18:29" pos:end="18:32">comp</name><operator pos:start="18:33" pos:end="18:34">-&gt;</operator><name pos:start="18:35" pos:end="18:39">coord</name><index pos:start="18:40" pos:end="18:42">[<expr pos:start="18:41" pos:end="18:41"><literal type="number" pos:start="18:41" pos:end="18:41">1</literal></expr>]</index><index pos:start="18:43" pos:end="18:45">[<expr pos:start="18:44" pos:end="18:44"><literal type="number" pos:start="18:44" pos:end="18:44">1</literal></expr>]</index></name> <operator pos:start="18:47" pos:end="18:47">-</operator> <name pos:start="18:49" pos:end="18:65"><name pos:start="18:49" pos:end="18:52">comp</name><operator pos:start="18:53" pos:end="18:54">-&gt;</operator><name pos:start="18:55" pos:end="18:59">coord</name><index pos:start="18:60" pos:end="18:62">[<expr pos:start="18:61" pos:end="18:61"><literal type="number" pos:start="18:61" pos:end="18:61">1</literal></expr>]</index><index pos:start="18:63" pos:end="18:65">[<expr pos:start="18:64" pos:end="18:64"><literal type="number" pos:start="18:64" pos:end="18:64">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="18:68" pos:end="18:68"><expr pos:start="18:68" pos:end="18:68"><literal type="number" pos:start="18:68" pos:end="18:68">0</literal></expr></argument>, <argument pos:start="18:71" pos:end="18:75"><expr pos:start="18:71" pos:end="18:75"><name pos:start="18:71" pos:end="18:75">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">
        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="20:5" pos:end="21:52"><expr pos:start="20:5" pos:end="21:51"><name pos:start="20:5" pos:end="20:9">csize</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <operator pos:start="20:13" pos:end="20:13">(</operator><name pos:start="20:14" pos:end="20:30"><name pos:start="20:14" pos:end="20:17">comp</name><operator pos:start="20:18" pos:end="20:19">-&gt;</operator><name pos:start="20:20" pos:end="20:24">coord</name><index pos:start="20:25" pos:end="20:27">[<expr pos:start="20:26" pos:end="20:26"><literal type="number" pos:start="20:26" pos:end="20:26">0</literal></expr>]</index><index pos:start="20:28" pos:end="20:30">[<expr pos:start="20:29" pos:end="20:29"><literal type="number" pos:start="20:29" pos:end="20:29">1</literal></expr>]</index></name> <operator pos:start="20:32" pos:end="20:32">-</operator> <name pos:start="20:34" pos:end="20:50"><name pos:start="20:34" pos:end="20:37">comp</name><operator pos:start="20:38" pos:end="20:39">-&gt;</operator><name pos:start="20:40" pos:end="20:44">coord</name><index pos:start="20:45" pos:end="20:47">[<expr pos:start="20:46" pos:end="20:46"><literal type="number" pos:start="20:46" pos:end="20:46">0</literal></expr>]</index><index pos:start="20:48" pos:end="20:50">[<expr pos:start="20:49" pos:end="20:49"><literal type="number" pos:start="20:49" pos:end="20:49">0</literal></expr>]</index></name><operator pos:start="20:51" pos:end="20:51">)</operator> <operator pos:start="20:53" pos:end="20:53">*</operator>
            <operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:30"><name pos:start="21:14" pos:end="21:17">comp</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">coord</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>]</index><index pos:start="21:28" pos:end="21:30">[<expr pos:start="21:29" pos:end="21:29"><literal type="number" pos:start="21:29" pos:end="21:29">1</literal></expr>]</index></name> <operator pos:start="21:32" pos:end="21:32">-</operator> <name pos:start="21:34" pos:end="21:50"><name pos:start="21:34" pos:end="21:37">comp</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:44">coord</name><index pos:start="21:45" pos:end="21:47">[<expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">1</literal></expr>]</index><index pos:start="21:48" pos:end="21:50">[<expr pos:start="21:49" pos:end="21:49"><literal type="number" pos:start="21:49" pos:end="21:49">0</literal></expr>]</index></name><operator pos:start="21:51" pos:end="21:51">)</operator></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="26:5"><if pos:start="22:5" pos:end="26:5">if <condition pos:start="22:8" pos:end="23:54">(<expr pos:start="22:9" pos:end="23:53"><name pos:start="22:9" pos:end="22:25"><name pos:start="22:9" pos:end="22:12">comp</name><operator pos:start="22:13" pos:end="22:14">-&gt;</operator><name pos:start="22:15" pos:end="22:19">coord</name><index pos:start="22:20" pos:end="22:22">[<expr pos:start="22:21" pos:end="22:21"><literal type="number" pos:start="22:21" pos:end="22:21">0</literal></expr>]</index><index pos:start="22:23" pos:end="22:25">[<expr pos:start="22:24" pos:end="22:24"><literal type="number" pos:start="22:24" pos:end="22:24">1</literal></expr>]</index></name> <operator pos:start="22:27" pos:end="22:27">-</operator> <name pos:start="22:29" pos:end="22:45"><name pos:start="22:29" pos:end="22:32">comp</name><operator pos:start="22:33" pos:end="22:34">-&gt;</operator><name pos:start="22:35" pos:end="22:39">coord</name><index pos:start="22:40" pos:end="22:42">[<expr pos:start="22:41" pos:end="22:41"><literal type="number" pos:start="22:41" pos:end="22:41">0</literal></expr>]</index><index pos:start="22:43" pos:end="22:45">[<expr pos:start="22:44" pos:end="22:44"><literal type="number" pos:start="22:44" pos:end="22:44">0</literal></expr>]</index></name> <operator pos:start="22:47" pos:end="22:47">&gt;</operator> <literal type="number" pos:start="22:49" pos:end="22:53">32768</literal> <operator pos:start="22:55" pos:end="22:56">||</operator>
        <name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:12">comp</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">coord</name><index pos:start="23:20" pos:end="23:22">[<expr pos:start="23:21" pos:end="23:21"><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>]</index><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>]</index></name> <operator pos:start="23:27" pos:end="23:27">-</operator> <name pos:start="23:29" pos:end="23:45"><name pos:start="23:29" pos:end="23:32">comp</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">coord</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">1</literal></expr>]</index><index pos:start="23:43" pos:end="23:45">[<expr pos:start="23:44" pos:end="23:44"><literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr>]</index></name> <operator pos:start="23:47" pos:end="23:47">&gt;</operator> <literal type="number" pos:start="23:49" pos:end="23:53">32768</literal></expr>)</condition> <block pos:start="23:56" pos:end="26:5">{<block_content pos:start="24:9" pos:end="25:36">
        <expr_stmt pos:start="24:9" pos:end="24:66"><expr pos:start="24:9" pos:end="24:65"><call pos:start="24:9" pos:end="24:65"><name pos:start="24:9" pos:end="24:14">av_log</name><argument_list pos:start="24:15" pos:end="24:65">(<argument pos:start="24:16" pos:end="24:20"><expr pos:start="24:16" pos:end="24:20"><name pos:start="24:16" pos:end="24:20">avctx</name></expr></argument>, <argument pos:start="24:23" pos:end="24:34"><expr pos:start="24:23" pos:end="24:34"><name pos:start="24:23" pos:end="24:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="24:37" pos:end="24:64"><expr pos:start="24:37" pos:end="24:64"><literal type="string" pos:start="24:37" pos:end="24:64">"component size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="25:9" pos:end="25:36">return <expr pos:start="25:16" pos:end="25:35"><name pos:start="25:16" pos:end="25:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="32:5">if <condition pos:start="27:8" pos:end="27:38">(<expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:14">codsty</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">transform</name></name> <operator pos:start="27:27" pos:end="27:28">==</operator> <name pos:start="27:30" pos:end="27:37">FF_DWT97</name></expr>)</condition> <block pos:start="27:40" pos:end="32:5">{<block_content pos:start="28:9" pos:end="31:26">
        <expr_stmt pos:start="28:9" pos:end="28:70"><expr pos:start="28:9" pos:end="28:69"><name pos:start="28:9" pos:end="28:13">csize</name> <operator pos:start="28:15" pos:end="28:16">+=</operator> <name pos:start="28:18" pos:end="28:45">AV_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="28:47" pos:end="28:47">/</operator> <sizeof pos:start="28:49" pos:end="28:69">sizeof<argument_list pos:start="28:55" pos:end="28:69">(<argument pos:start="28:56" pos:end="28:68"><expr pos:start="28:56" pos:end="28:68"><operator pos:start="28:56" pos:end="28:56">*</operator><name pos:start="28:57" pos:end="28:68"><name pos:start="28:57" pos:end="28:60">comp</name><operator pos:start="28:61" pos:end="28:62">-&gt;</operator><name pos:start="28:63" pos:end="28:68">f_data</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
        <expr_stmt pos:start="29:9" pos:end="29:28"><expr pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">comp</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:20">i_data</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:27">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="30:9" pos:end="30:70"><expr pos:start="30:9" pos:end="30:69"><name pos:start="30:9" pos:end="30:20"><name pos:start="30:9" pos:end="30:12">comp</name><operator pos:start="30:13" pos:end="30:14">-&gt;</operator><name pos:start="30:15" pos:end="30:20">f_data</name></name> <operator pos:start="30:22" pos:end="30:22">=</operator> <call pos:start="30:24" pos:end="30:69"><name pos:start="30:24" pos:end="30:39">av_mallocz_array</name><argument_list pos:start="30:40" pos:end="30:69">(<argument pos:start="30:41" pos:end="30:45"><expr pos:start="30:41" pos:end="30:45"><name pos:start="30:41" pos:end="30:45">csize</name></expr></argument>, <argument pos:start="30:48" pos:end="30:68"><expr pos:start="30:48" pos:end="30:68"><sizeof pos:start="30:48" pos:end="30:68">sizeof<argument_list pos:start="30:54" pos:end="30:68">(<argument pos:start="30:55" pos:end="30:67"><expr pos:start="30:55" pos:end="30:67"><operator pos:start="30:55" pos:end="30:55">*</operator><name pos:start="30:56" pos:end="30:67"><name pos:start="30:56" pos:end="30:59">comp</name><operator pos:start="30:60" pos:end="30:61">-&gt;</operator><name pos:start="30:62" pos:end="30:67">f_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="31:9" pos:end="31:26"><if pos:start="31:9" pos:end="31:26">if <condition pos:start="31:12" pos:end="31:26">(<expr pos:start="31:13" pos:end="31:25"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:17">comp</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:25">f_data</name></name></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="32:7" pos:end="37:5">else <block pos:start="32:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="36:26">
        <expr_stmt pos:start="33:9" pos:end="33:70"><expr pos:start="33:9" pos:end="33:69"><name pos:start="33:9" pos:end="33:13">csize</name> <operator pos:start="33:15" pos:end="33:16">+=</operator> <name pos:start="33:18" pos:end="33:45">AV_INPUT_BUFFER_PADDING_SIZE</name> <operator pos:start="33:47" pos:end="33:47">/</operator> <sizeof pos:start="33:49" pos:end="33:69">sizeof<argument_list pos:start="33:55" pos:end="33:69">(<argument pos:start="33:56" pos:end="33:68"><expr pos:start="33:56" pos:end="33:68"><operator pos:start="33:56" pos:end="33:56">*</operator><name pos:start="33:57" pos:end="33:68"><name pos:start="33:57" pos:end="33:60">comp</name><operator pos:start="33:61" pos:end="33:62">-&gt;</operator><name pos:start="33:63" pos:end="33:68">i_data</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:28"><expr pos:start="34:9" pos:end="34:27"><name pos:start="34:9" pos:end="34:20"><name pos:start="34:9" pos:end="34:12">comp</name><operator pos:start="34:13" pos:end="34:14">-&gt;</operator><name pos:start="34:15" pos:end="34:20">f_data</name></name> <operator pos:start="34:22" pos:end="34:22">=</operator> <name pos:start="34:24" pos:end="34:27">NULL</name></expr>;</expr_stmt>
        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:12">comp</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:20">i_data</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:69"><name pos:start="35:24" pos:end="35:39">av_mallocz_array</name><argument_list pos:start="35:40" pos:end="35:69">(<argument pos:start="35:41" pos:end="35:45"><expr pos:start="35:41" pos:end="35:45"><name pos:start="35:41" pos:end="35:45">csize</name></expr></argument>, <argument pos:start="35:48" pos:end="35:68"><expr pos:start="35:48" pos:end="35:68"><sizeof pos:start="35:48" pos:end="35:68">sizeof<argument_list pos:start="35:54" pos:end="35:68">(<argument pos:start="35:55" pos:end="35:67"><expr pos:start="35:55" pos:end="35:67"><operator pos:start="35:55" pos:end="35:55">*</operator><name pos:start="35:56" pos:end="35:67"><name pos:start="35:56" pos:end="35:59">comp</name><operator pos:start="35:60" pos:end="35:61">-&gt;</operator><name pos:start="35:62" pos:end="35:67">i_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="36:9" pos:end="36:26"><if pos:start="36:9" pos:end="36:26">if <condition pos:start="36:12" pos:end="36:26">(<expr pos:start="36:13" pos:end="36:25"><operator pos:start="36:13" pos:end="36:13">!</operator><name pos:start="36:14" pos:end="36:25"><name pos:start="36:14" pos:end="36:17">comp</name><operator pos:start="36:18" pos:end="36:19">-&gt;</operator><name pos:start="36:20" pos:end="36:25">i_data</name></name></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="38:5" pos:end="38:83"><expr pos:start="38:5" pos:end="38:82"><name pos:start="38:5" pos:end="38:18"><name pos:start="38:5" pos:end="38:8">comp</name><operator pos:start="38:9" pos:end="38:10">-&gt;</operator><name pos:start="38:11" pos:end="38:18">reslevel</name></name> <operator pos:start="38:20" pos:end="38:20">=</operator> <call pos:start="38:22" pos:end="38:82"><name pos:start="38:22" pos:end="38:37">av_mallocz_array</name><argument_list pos:start="38:38" pos:end="38:82">(<argument pos:start="38:39" pos:end="38:56"><expr pos:start="38:39" pos:end="38:56"><name pos:start="38:39" pos:end="38:56"><name pos:start="38:39" pos:end="38:44">codsty</name><operator pos:start="38:45" pos:end="38:46">-&gt;</operator><name pos:start="38:47" pos:end="38:56">nreslevels</name></name></expr></argument>, <argument pos:start="38:59" pos:end="38:81"><expr pos:start="38:59" pos:end="38:81"><sizeof pos:start="38:59" pos:end="38:81">sizeof<argument_list pos:start="38:65" pos:end="38:81">(<argument pos:start="38:66" pos:end="38:80"><expr pos:start="38:66" pos:end="38:80"><operator pos:start="38:66" pos:end="38:66">*</operator><name pos:start="38:67" pos:end="38:80"><name pos:start="38:67" pos:end="38:70">comp</name><operator pos:start="38:71" pos:end="38:72">-&gt;</operator><name pos:start="38:73" pos:end="38:80">reslevel</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="39:5" pos:end="93:5"><if pos:start="39:5" pos:end="93:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:23"><name pos:start="39:10" pos:end="39:13">comp</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:23">reslevel</name></name></expr>)</condition><block type="pseudo" pos:start="41:5" pos:end="93:5"><block_content pos:start="41:5" pos:end="93:5">
    <comment type="block" pos:start="40:5" pos:end="40:35">/* LOOP on resolution levels */</comment>
    <for pos:start="41:5" pos:end="93:5">for <control pos:start="41:9" pos:end="41:71">(<init pos:start="41:10" pos:end="41:24"><expr pos:start="41:10" pos:end="41:23"><name pos:start="41:10" pos:end="41:19">reslevelno</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>;</init> <condition pos:start="41:26" pos:end="41:57"><expr pos:start="41:26" pos:end="41:56"><name pos:start="41:26" pos:end="41:35">reslevelno</name> <operator pos:start="41:37" pos:end="41:37">&lt;</operator> <name pos:start="41:39" pos:end="41:56"><name pos:start="41:39" pos:end="41:44">codsty</name><operator pos:start="41:45" pos:end="41:46">-&gt;</operator><name pos:start="41:47" pos:end="41:56">nreslevels</name></name></expr>;</condition> <incr pos:start="41:59" pos:end="41:70"><expr pos:start="41:59" pos:end="41:70"><name pos:start="41:59" pos:end="41:68">reslevelno</name><operator pos:start="41:69" pos:end="41:70">++</operator></expr></incr>)</control> <block pos:start="41:73" pos:end="93:5">{<block_content pos:start="42:9" pos:end="92:9">
        <decl_stmt pos:start="42:9" pos:end="42:53"><decl pos:start="42:9" pos:end="42:52"><type pos:start="42:9" pos:end="42:11"><name pos:start="42:9" pos:end="42:11">int</name></type> <name pos:start="42:13" pos:end="42:18">declvl</name> <init pos:start="42:20" pos:end="42:52">= <expr pos:start="42:22" pos:end="42:52"><name pos:start="42:22" pos:end="42:39"><name pos:start="42:22" pos:end="42:27">codsty</name><operator pos:start="42:28" pos:end="42:29">-&gt;</operator><name pos:start="42:30" pos:end="42:39">nreslevels</name></name> <operator pos:start="42:41" pos:end="42:41">-</operator> <name pos:start="42:43" pos:end="42:52">reslevelno</name></expr></init></decl>;</decl_stmt>    <comment type="line" pos:start="42:58" pos:end="42:96">// N_L -r see  ISO/IEC 15444-1:2002 B.5</comment>
        <decl_stmt pos:start="43:9" pos:end="43:65"><decl pos:start="43:9" pos:end="43:64"><type pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:24">Jpeg2000ResLevel</name> <modifier pos:start="43:26" pos:end="43:26">*</modifier></type><name pos:start="43:27" pos:end="43:34">reslevel</name> <init pos:start="43:36" pos:end="43:64">= <expr pos:start="43:38" pos:end="43:64"><name pos:start="43:38" pos:end="43:51"><name pos:start="43:38" pos:end="43:41">comp</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:51">reslevel</name></name> <operator pos:start="43:53" pos:end="43:53">+</operator> <name pos:start="43:55" pos:end="43:64">reslevelno</name></expr></init></decl>;</decl_stmt>
        <comment type="block" pos:start="44:9" pos:end="46:55">/* Compute borders for each resolution level.
         * Computation of trx_0, trx_1, try_0 and try_1.
         * see ISO/IEC 15444-1:2002 eq. B.5 and B-14 */</comment>
        <for pos:start="47:9" pos:end="50:77">for <control pos:start="47:13" pos:end="47:31">(<init pos:start="47:14" pos:end="47:19"><expr pos:start="47:14" pos:end="47:18"><name pos:start="47:14" pos:end="47:14">i</name> <operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</init> <condition pos:start="47:21" pos:end="47:26"><expr pos:start="47:21" pos:end="47:25"><name pos:start="47:21" pos:end="47:21">i</name> <operator pos:start="47:23" pos:end="47:23">&lt;</operator> <literal type="number" pos:start="47:25" pos:end="47:25">2</literal></expr>;</condition> <incr pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:28">i</name><operator pos:start="47:29" pos:end="47:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="48:13" pos:end="50:77"><block_content pos:start="48:13" pos:end="50:77">
            <for pos:start="48:13" pos:end="50:77">for <control pos:start="48:17" pos:end="48:35">(<init pos:start="48:18" pos:end="48:23"><expr pos:start="48:18" pos:end="48:22"><name pos:start="48:18" pos:end="48:18">j</name> <operator pos:start="48:20" pos:end="48:20">=</operator> <literal type="number" pos:start="48:22" pos:end="48:22">0</literal></expr>;</init> <condition pos:start="48:25" pos:end="48:30"><expr pos:start="48:25" pos:end="48:29"><name pos:start="48:25" pos:end="48:25">j</name> <operator pos:start="48:27" pos:end="48:27">&lt;</operator> <literal type="number" pos:start="48:29" pos:end="48:29">2</literal></expr>;</condition> <incr pos:start="48:32" pos:end="48:34"><expr pos:start="48:32" pos:end="48:34"><name pos:start="48:32" pos:end="48:32">j</name><operator pos:start="48:33" pos:end="48:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:17" pos:end="50:77"><block_content pos:start="49:17" pos:end="50:77">
                <expr_stmt pos:start="49:17" pos:end="50:77"><expr pos:start="49:17" pos:end="50:76"><name pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:24">reslevel</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:31">coord</name><index pos:start="49:32" pos:end="49:34">[<expr pos:start="49:33" pos:end="49:33"><name pos:start="49:33" pos:end="49:33">i</name></expr>]</index><index pos:start="49:35" pos:end="49:37">[<expr pos:start="49:36" pos:end="49:36"><name pos:start="49:36" pos:end="49:36">j</name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator>
                    <call pos:start="50:21" pos:end="50:76"><name pos:start="50:21" pos:end="50:43">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="50:44" pos:end="50:76">(<argument pos:start="50:45" pos:end="50:63"><expr pos:start="50:45" pos:end="50:63"><name pos:start="50:45" pos:end="50:63"><name pos:start="50:45" pos:end="50:48">comp</name><operator pos:start="50:49" pos:end="50:50">-&gt;</operator><name pos:start="50:51" pos:end="50:57">coord_o</name><index pos:start="50:58" pos:end="50:60">[<expr pos:start="50:59" pos:end="50:59"><name pos:start="50:59" pos:end="50:59">i</name></expr>]</index><index pos:start="50:61" pos:end="50:63">[<expr pos:start="50:62" pos:end="50:62"><name pos:start="50:62" pos:end="50:62">j</name></expr>]</index></name></expr></argument>, <argument pos:start="50:66" pos:end="50:75"><expr pos:start="50:66" pos:end="50:75"><name pos:start="50:66" pos:end="50:71">declvl</name> <operator pos:start="50:73" pos:end="50:73">-</operator> <literal type="number" pos:start="50:75" pos:end="50:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>
        <comment type="line" pos:start="51:9" pos:end="51:43">// update precincts size: 2^n value</comment>
        <expr_stmt pos:start="52:9" pos:end="52:74"><expr pos:start="52:9" pos:end="52:73"><name pos:start="52:9" pos:end="52:33"><name pos:start="52:9" pos:end="52:16">reslevel</name><operator pos:start="52:17" pos:end="52:18">-&gt;</operator><name pos:start="52:19" pos:end="52:33">log2_prec_width</name></name>  <operator pos:start="52:36" pos:end="52:36">=</operator> <name pos:start="52:38" pos:end="52:73"><name pos:start="52:38" pos:end="52:43">codsty</name><operator pos:start="52:44" pos:end="52:45">-&gt;</operator><name pos:start="52:46" pos:end="52:61">log2_prec_widths</name><index pos:start="52:62" pos:end="52:73">[<expr pos:start="52:63" pos:end="52:72"><name pos:start="52:63" pos:end="52:72">reslevelno</name></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:75"><expr pos:start="53:9" pos:end="53:74"><name pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:16">reslevel</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:34">log2_prec_height</name></name> <operator pos:start="53:36" pos:end="53:36">=</operator> <name pos:start="53:38" pos:end="53:74"><name pos:start="53:38" pos:end="53:43">codsty</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:62">log2_prec_heights</name><index pos:start="53:63" pos:end="53:74">[<expr pos:start="53:64" pos:end="53:73"><name pos:start="53:64" pos:end="53:73">reslevelno</name></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="54:9" pos:end="56:9"><if pos:start="54:9" pos:end="56:9">if <condition pos:start="54:12" pos:end="54:70">(<expr pos:start="54:13" pos:end="54:69"><operator pos:start="54:13" pos:end="54:13">!</operator><name pos:start="54:14" pos:end="54:38"><name pos:start="54:14" pos:end="54:21">reslevel</name><operator pos:start="54:22" pos:end="54:23">-&gt;</operator><name pos:start="54:24" pos:end="54:38">log2_prec_width</name></name> <operator pos:start="54:40" pos:end="54:41">||</operator> <operator pos:start="54:43" pos:end="54:43">!</operator><name pos:start="54:44" pos:end="54:69"><name pos:start="54:44" pos:end="54:51">reslevel</name><operator pos:start="54:52" pos:end="54:53">-&gt;</operator><name pos:start="54:54" pos:end="54:69">log2_prec_height</name></name></expr>)</condition> <block pos:start="54:72" pos:end="56:9">{<block_content pos:start="55:13" pos:end="55:39">
            <return pos:start="55:13" pos:end="55:39">return <expr pos:start="55:20" pos:end="55:38"><name pos:start="55:20" pos:end="55:38">AVERROR_INVALIDDATA</name></expr>;</return>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="57:9" pos:end="57:55">/* Number of bands for each resolution level */</comment>
        <if_stmt pos:start="58:9" pos:end="61:33"><if pos:start="58:9" pos:end="59:33">if <condition pos:start="58:12" pos:end="58:28">(<expr pos:start="58:13" pos:end="58:27"><name pos:start="58:13" pos:end="58:22">reslevelno</name> <operator pos:start="58:24" pos:end="58:25">==</operator> <literal type="number" pos:start="58:27" pos:end="58:27">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:33"><block_content pos:start="59:13" pos:end="59:33">
            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:20">reslevel</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:28">nbands</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <literal type="number" pos:start="59:32" pos:end="59:32">1</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="60:9" pos:end="61:33">else<block type="pseudo" pos:start="61:13" pos:end="61:33"><block_content pos:start="61:13" pos:end="61:33">
            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:20">reslevel</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:28">nbands</name></name> <operator pos:start="61:30" pos:end="61:30">=</operator> <literal type="number" pos:start="61:32" pos:end="61:32">3</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <comment type="block" pos:start="62:9" pos:end="68:66">/* Number of precincts which span the tile for resolution level reslevelno
         * see B.6 in ISO/IEC 15444-1:2002 eq. B-16
         * num_precincts_x = |- trx_1 / 2 ^ log2_prec_width) -| - (trx_0 / 2 ^ log2_prec_width)
         * num_precincts_y = |- try_1 / 2 ^ log2_prec_width) -| - (try_0 / 2 ^ log2_prec_width)
         * for Dcinema profiles in JPEG 2000
         * num_precincts_x = |- trx_1 / 2 ^ log2_prec_width) -|
         * num_precincts_y = |- try_1 / 2 ^ log2_prec_width) -| */</comment>
        <if_stmt pos:start="69:9" pos:end="75:69"><if pos:start="69:9" pos:end="70:42">if <condition pos:start="69:12" pos:end="69:59">(<expr pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:20">reslevel</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:27">coord</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">0</literal></expr>]</index><index pos:start="69:31" pos:end="69:33">[<expr pos:start="69:32" pos:end="69:32"><literal type="number" pos:start="69:32" pos:end="69:32">1</literal></expr>]</index></name> <operator pos:start="69:35" pos:end="69:36">==</operator> <name pos:start="69:38" pos:end="69:58"><name pos:start="69:38" pos:end="69:45">reslevel</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:52">coord</name><index pos:start="69:53" pos:end="69:55">[<expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">0</literal></expr>]</index><index pos:start="69:56" pos:end="69:58">[<expr pos:start="69:57" pos:end="69:57"><literal type="number" pos:start="69:57" pos:end="69:57">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="70:13" pos:end="70:42"><block_content pos:start="70:13" pos:end="70:42">
            <expr_stmt pos:start="70:13" pos:end="70:42"><expr pos:start="70:13" pos:end="70:41"><name pos:start="70:13" pos:end="70:37"><name pos:start="70:13" pos:end="70:20">reslevel</name><operator pos:start="70:21" pos:end="70:22">-&gt;</operator><name pos:start="70:23" pos:end="70:37">num_precincts_x</name></name> <operator pos:start="70:39" pos:end="70:39">=</operator> <literal type="number" pos:start="70:41" pos:end="70:41">0</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="71:9" pos:end="75:69">else<block type="pseudo" pos:start="72:13" pos:end="75:69"><block_content pos:start="72:13" pos:end="75:69">
            <expr_stmt pos:start="72:13" pos:end="75:69"><expr pos:start="72:13" pos:end="75:68"><name pos:start="72:13" pos:end="72:37"><name pos:start="72:13" pos:end="72:20">reslevel</name><operator pos:start="72:21" pos:end="72:22">-&gt;</operator><name pos:start="72:23" pos:end="72:37">num_precincts_x</name></name> <operator pos:start="72:39" pos:end="72:39">=</operator>
                <call pos:start="73:17" pos:end="74:66"><name pos:start="73:17" pos:end="73:39">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="73:40" pos:end="74:66">(<argument pos:start="73:41" pos:end="73:61"><expr pos:start="73:41" pos:end="73:61"><name pos:start="73:41" pos:end="73:61"><name pos:start="73:41" pos:end="73:48">reslevel</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:55">coord</name><index pos:start="73:56" pos:end="73:58">[<expr pos:start="73:57" pos:end="73:57"><literal type="number" pos:start="73:57" pos:end="73:57">0</literal></expr>]</index><index pos:start="73:59" pos:end="73:61">[<expr pos:start="73:60" pos:end="73:60"><literal type="number" pos:start="73:60" pos:end="73:60">1</literal></expr>]</index></name></expr></argument>,
                                        <argument pos:start="74:41" pos:end="74:65"><expr pos:start="74:41" pos:end="74:65"><name pos:start="74:41" pos:end="74:65"><name pos:start="74:41" pos:end="74:48">reslevel</name><operator pos:start="74:49" pos:end="74:50">-&gt;</operator><name pos:start="74:51" pos:end="74:65">log2_prec_width</name></name></expr></argument>)</argument_list></call> <operator pos:start="74:68" pos:end="74:68">-</operator>
                <operator pos:start="75:17" pos:end="75:17">(</operator><name pos:start="75:18" pos:end="75:38"><name pos:start="75:18" pos:end="75:25">reslevel</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:32">coord</name><index pos:start="75:33" pos:end="75:35">[<expr pos:start="75:34" pos:end="75:34"><literal type="number" pos:start="75:34" pos:end="75:34">0</literal></expr>]</index><index pos:start="75:36" pos:end="75:38">[<expr pos:start="75:37" pos:end="75:37"><literal type="number" pos:start="75:37" pos:end="75:37">0</literal></expr>]</index></name> <operator pos:start="75:40" pos:end="75:41">&gt;&gt;</operator> <name pos:start="75:43" pos:end="75:67"><name pos:start="75:43" pos:end="75:50">reslevel</name><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:67">log2_prec_width</name></name><operator pos:start="75:68" pos:end="75:68">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <if_stmt pos:start="76:9" pos:end="82:70"><if pos:start="76:9" pos:end="77:42">if <condition pos:start="76:12" pos:end="76:59">(<expr pos:start="76:13" pos:end="76:58"><name pos:start="76:13" pos:end="76:33"><name pos:start="76:13" pos:end="76:20">reslevel</name><operator pos:start="76:21" pos:end="76:22">-&gt;</operator><name pos:start="76:23" pos:end="76:27">coord</name><index pos:start="76:28" pos:end="76:30">[<expr pos:start="76:29" pos:end="76:29"><literal type="number" pos:start="76:29" pos:end="76:29">1</literal></expr>]</index><index pos:start="76:31" pos:end="76:33">[<expr pos:start="76:32" pos:end="76:32"><literal type="number" pos:start="76:32" pos:end="76:32">1</literal></expr>]</index></name> <operator pos:start="76:35" pos:end="76:36">==</operator> <name pos:start="76:38" pos:end="76:58"><name pos:start="76:38" pos:end="76:45">reslevel</name><operator pos:start="76:46" pos:end="76:47">-&gt;</operator><name pos:start="76:48" pos:end="76:52">coord</name><index pos:start="76:53" pos:end="76:55">[<expr pos:start="76:54" pos:end="76:54"><literal type="number" pos:start="76:54" pos:end="76:54">1</literal></expr>]</index><index pos:start="76:56" pos:end="76:58">[<expr pos:start="76:57" pos:end="76:57"><literal type="number" pos:start="76:57" pos:end="76:57">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:42"><block_content pos:start="77:13" pos:end="77:42">
            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:37"><name pos:start="77:13" pos:end="77:20">reslevel</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:37">num_precincts_y</name></name> <operator pos:start="77:39" pos:end="77:39">=</operator> <literal type="number" pos:start="77:41" pos:end="77:41">0</literal></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="78:9" pos:end="82:70">else<block type="pseudo" pos:start="79:13" pos:end="82:70"><block_content pos:start="79:13" pos:end="82:70">
            <expr_stmt pos:start="79:13" pos:end="82:70"><expr pos:start="79:13" pos:end="82:69"><name pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:20">reslevel</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:37">num_precincts_y</name></name> <operator pos:start="79:39" pos:end="79:39">=</operator>
                <call pos:start="80:17" pos:end="81:67"><name pos:start="80:17" pos:end="80:39">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="80:40" pos:end="81:67">(<argument pos:start="80:41" pos:end="80:61"><expr pos:start="80:41" pos:end="80:61"><name pos:start="80:41" pos:end="80:61"><name pos:start="80:41" pos:end="80:48">reslevel</name><operator pos:start="80:49" pos:end="80:50">-&gt;</operator><name pos:start="80:51" pos:end="80:55">coord</name><index pos:start="80:56" pos:end="80:58">[<expr pos:start="80:57" pos:end="80:57"><literal type="number" pos:start="80:57" pos:end="80:57">1</literal></expr>]</index><index pos:start="80:59" pos:end="80:61">[<expr pos:start="80:60" pos:end="80:60"><literal type="number" pos:start="80:60" pos:end="80:60">1</literal></expr>]</index></name></expr></argument>,
                                        <argument pos:start="81:41" pos:end="81:66"><expr pos:start="81:41" pos:end="81:66"><name pos:start="81:41" pos:end="81:66"><name pos:start="81:41" pos:end="81:48">reslevel</name><operator pos:start="81:49" pos:end="81:50">-&gt;</operator><name pos:start="81:51" pos:end="81:66">log2_prec_height</name></name></expr></argument>)</argument_list></call> <operator pos:start="81:69" pos:end="81:69">-</operator>
                <operator pos:start="82:17" pos:end="82:17">(</operator><name pos:start="82:18" pos:end="82:38"><name pos:start="82:18" pos:end="82:25">reslevel</name><operator pos:start="82:26" pos:end="82:27">-&gt;</operator><name pos:start="82:28" pos:end="82:32">coord</name><index pos:start="82:33" pos:end="82:35">[<expr pos:start="82:34" pos:end="82:34"><literal type="number" pos:start="82:34" pos:end="82:34">1</literal></expr>]</index><index pos:start="82:36" pos:end="82:38">[<expr pos:start="82:37" pos:end="82:37"><literal type="number" pos:start="82:37" pos:end="82:37">0</literal></expr>]</index></name> <operator pos:start="82:40" pos:end="82:41">&gt;&gt;</operator> <name pos:start="82:43" pos:end="82:68"><name pos:start="82:43" pos:end="82:50">reslevel</name><operator pos:start="82:51" pos:end="82:52">-&gt;</operator><name pos:start="82:53" pos:end="82:68">log2_prec_height</name></name><operator pos:start="82:69" pos:end="82:69">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="83:9" pos:end="83:85"><expr pos:start="83:9" pos:end="83:84"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:16">reslevel</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:22">band</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <call pos:start="83:26" pos:end="83:84"><name pos:start="83:26" pos:end="83:41">av_mallocz_array</name><argument_list pos:start="83:42" pos:end="83:84">(<argument pos:start="83:43" pos:end="83:58"><expr pos:start="83:43" pos:end="83:58"><name pos:start="83:43" pos:end="83:58"><name pos:start="83:43" pos:end="83:50">reslevel</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:58">nbands</name></name></expr></argument>, <argument pos:start="83:61" pos:end="83:83"><expr pos:start="83:61" pos:end="83:83"><sizeof pos:start="83:61" pos:end="83:83">sizeof<argument_list pos:start="83:67" pos:end="83:83">(<argument pos:start="83:68" pos:end="83:82"><expr pos:start="83:68" pos:end="83:82"><operator pos:start="83:68" pos:end="83:68">*</operator><name pos:start="83:69" pos:end="83:82"><name pos:start="83:69" pos:end="83:76">reslevel</name><operator pos:start="83:77" pos:end="83:78">-&gt;</operator><name pos:start="83:79" pos:end="83:82">band</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="84:9" pos:end="92:9"><if pos:start="84:9" pos:end="92:9">if <condition pos:start="84:12" pos:end="84:28">(<expr pos:start="84:13" pos:end="84:27"><operator pos:start="84:13" pos:end="84:13">!</operator><name pos:start="84:14" pos:end="84:27"><name pos:start="84:14" pos:end="84:21">reslevel</name><operator pos:start="84:22" pos:end="84:23">-&gt;</operator><name pos:start="84:24" pos:end="84:27">band</name></name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="92:9"><block_content pos:start="85:9" pos:end="92:9">
        <for pos:start="85:9" pos:end="92:9">for <control pos:start="85:13" pos:end="85:72">(<init pos:start="85:14" pos:end="85:24"><expr pos:start="85:14" pos:end="85:23"><name pos:start="85:14" pos:end="85:19">bandno</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <literal type="number" pos:start="85:23" pos:end="85:23">0</literal></expr>;</init> <condition pos:start="85:26" pos:end="85:51"><expr pos:start="85:26" pos:end="85:50"><name pos:start="85:26" pos:end="85:31">bandno</name> <operator pos:start="85:33" pos:end="85:33">&lt;</operator> <name pos:start="85:35" pos:end="85:50"><name pos:start="85:35" pos:end="85:42">reslevel</name><operator pos:start="85:43" pos:end="85:44">-&gt;</operator><name pos:start="85:45" pos:end="85:50">nbands</name></name></expr>;</condition> <incr pos:start="85:53" pos:end="85:71"><expr pos:start="85:53" pos:end="85:60"><name pos:start="85:53" pos:end="85:58">bandno</name><operator pos:start="85:59" pos:end="85:60">++</operator></expr><operator pos:start="85:61" pos:end="85:61">,</operator> <expr pos:start="85:63" pos:end="85:71"><name pos:start="85:63" pos:end="85:69">gbandno</name><operator pos:start="85:70" pos:end="85:71">++</operator></expr></incr>)</control> <block pos:start="85:74" pos:end="92:9">{<block_content pos:start="86:13" pos:end="91:27">
            <expr_stmt pos:start="86:13" pos:end="89:42"><expr pos:start="86:13" pos:end="89:41"><name pos:start="86:13" pos:end="86:15">ret</name> <operator pos:start="86:17" pos:end="86:17">=</operator> <call pos:start="86:19" pos:end="89:41"><name pos:start="86:19" pos:end="86:27">init_band</name><argument_list pos:start="86:28" pos:end="89:41">(<argument pos:start="86:29" pos:end="86:33"><expr pos:start="86:29" pos:end="86:33"><name pos:start="86:29" pos:end="86:33">avctx</name></expr></argument>, <argument pos:start="86:36" pos:end="86:43"><expr pos:start="86:36" pos:end="86:43"><name pos:start="86:36" pos:end="86:43">reslevel</name></expr></argument>,
                            <argument pos:start="87:29" pos:end="87:32"><expr pos:start="87:29" pos:end="87:32"><name pos:start="87:29" pos:end="87:32">comp</name></expr></argument>, <argument pos:start="87:35" pos:end="87:40"><expr pos:start="87:35" pos:end="87:40"><name pos:start="87:35" pos:end="87:40">codsty</name></expr></argument>, <argument pos:start="87:43" pos:end="87:48"><expr pos:start="87:43" pos:end="87:48"><name pos:start="87:43" pos:end="87:48">qntsty</name></expr></argument>,
                            <argument pos:start="88:29" pos:end="88:34"><expr pos:start="88:29" pos:end="88:34"><name pos:start="88:29" pos:end="88:34">bandno</name></expr></argument>, <argument pos:start="88:37" pos:end="88:43"><expr pos:start="88:37" pos:end="88:43"><name pos:start="88:37" pos:end="88:43">gbandno</name></expr></argument>, <argument pos:start="88:46" pos:end="88:55"><expr pos:start="88:46" pos:end="88:55"><name pos:start="88:46" pos:end="88:55">reslevelno</name></expr></argument>,
                            <argument pos:start="89:29" pos:end="89:32"><expr pos:start="89:29" pos:end="89:32"><name pos:start="89:29" pos:end="89:32">cbps</name></expr></argument>, <argument pos:start="89:35" pos:end="89:36"><expr pos:start="89:35" pos:end="89:36"><name pos:start="89:35" pos:end="89:36">dx</name></expr></argument>, <argument pos:start="89:39" pos:end="89:40"><expr pos:start="89:39" pos:end="89:40"><name pos:start="89:39" pos:end="89:40">dy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="90:13" pos:end="91:27"><if pos:start="90:13" pos:end="91:27">if <condition pos:start="90:16" pos:end="90:24">(<expr pos:start="90:17" pos:end="90:23"><name pos:start="90:17" pos:end="90:19">ret</name> <operator pos:start="90:21" pos:end="90:21">&lt;</operator> <literal type="number" pos:start="90:23" pos:end="90:23">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:27"><block_content pos:start="91:17" pos:end="91:27">
                <return pos:start="91:17" pos:end="91:27">return <expr pos:start="91:24" pos:end="91:26"><name pos:start="91:24" pos:end="91:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></for></block_content></block></if></if_stmt>
    </block_content>}</block></for></block_content></block></if></if_stmt>
    <return pos:start="94:5" pos:end="94:13">return <expr pos:start="94:12" pos:end="94:12"><literal type="number" pos:start="94:12" pos:end="94:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
