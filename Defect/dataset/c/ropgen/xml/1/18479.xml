<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18479.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">integratorcm_init</name><parameter_list pos:start="1:30" pos:end="1:63">(<parameter pos:start="1:31" pos:end="1:39"><decl pos:start="1:31" pos:end="1:39"><type pos:start="1:31" pos:end="1:39"><name pos:start="1:31" pos:end="1:33">int</name></type> <name pos:start="1:35" pos:end="1:39">memsz</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:62"><decl pos:start="1:42" pos:end="1:62"><type pos:start="1:42" pos:end="1:62"><name pos:start="1:42" pos:end="1:49">uint32_t</name></type> <name pos:start="1:51" pos:end="1:62">flash_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="65:32">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">integratorcm_state</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:71"><expr pos:start="11:5" pos:end="11:70"><name pos:start="11:5" pos:end="11:5">s</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:27">integratorcm_state</name> <operator pos:start="11:29" pos:end="11:29">*</operator><operator pos:start="11:30" pos:end="11:30">)</operator><call pos:start="11:31" pos:end="11:70"><name pos:start="11:31" pos:end="11:42">qemu_mallocz</name><argument_list pos:start="11:43" pos:end="11:70">(<argument pos:start="11:44" pos:end="11:69"><expr pos:start="11:44" pos:end="11:69"><sizeof pos:start="11:44" pos:end="11:69">sizeof<argument_list pos:start="11:50" pos:end="11:69">(<argument pos:start="11:51" pos:end="11:68"><expr pos:start="11:51" pos:end="11:68"><name pos:start="11:51" pos:end="11:68">integratorcm_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:13">cm_osc</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <literal type="number" pos:start="13:17" pos:end="13:26">0x01000048</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="15:5" pos:end="15:58">/* ??? What should the high bits of this value be?  */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">cm_auxosc</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <literal type="number" pos:start="17:20" pos:end="17:29">0x0007feff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">cm_sdram</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <literal type="number" pos:start="19:19" pos:end="19:28">0x00011122</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="49:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:13">memsz</name> <operator pos:start="21:15" pos:end="21:16">&gt;=</operator> <literal type="number" pos:start="21:18" pos:end="21:20">256</literal></expr>)</condition> <block pos:start="21:23" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:28">

        <expr_stmt pos:start="23:9" pos:end="23:32"><expr pos:start="23:9" pos:end="23:31"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:22">integrator_spd</name><index pos:start="23:23" pos:end="23:26">[<expr pos:start="23:24" pos:end="23:25"><literal type="number" pos:start="23:24" pos:end="23:25">31</literal></expr>]</index></name> <operator pos:start="23:28" pos:end="23:28">=</operator> <literal type="number" pos:start="23:30" pos:end="23:31">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:19">cm_sdram</name></name> <operator pos:start="25:21" pos:end="25:22">|=</operator> <literal type="number" pos:start="25:24" pos:end="25:27">0x10</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="33:5">else if <condition pos:start="27:15" pos:end="27:28">(<expr pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:20">memsz</name> <operator pos:start="27:22" pos:end="27:23">&gt;=</operator> <literal type="number" pos:start="27:25" pos:end="27:27">128</literal></expr>)</condition> <block pos:start="27:30" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:28">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:22">integrator_spd</name><index pos:start="29:23" pos:end="29:26">[<expr pos:start="29:24" pos:end="29:25"><literal type="number" pos:start="29:24" pos:end="29:25">31</literal></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <literal type="number" pos:start="29:30" pos:end="29:31">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:19">cm_sdram</name></name> <operator pos:start="31:21" pos:end="31:22">|=</operator> <literal type="number" pos:start="31:24" pos:end="31:27">0x0c</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="39:5">else if <condition pos:start="33:15" pos:end="33:27">(<expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:20">memsz</name> <operator pos:start="33:22" pos:end="33:23">&gt;=</operator> <literal type="number" pos:start="33:25" pos:end="33:26">64</literal></expr>)</condition> <block pos:start="33:29" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:28">

        <expr_stmt pos:start="35:9" pos:end="35:32"><expr pos:start="35:9" pos:end="35:31"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:22">integrator_spd</name><index pos:start="35:23" pos:end="35:26">[<expr pos:start="35:24" pos:end="35:25"><literal type="number" pos:start="35:24" pos:end="35:25">31</literal></expr>]</index></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:31">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:28"><expr pos:start="37:9" pos:end="37:27"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">cm_sdram</name></name> <operator pos:start="37:21" pos:end="37:22">|=</operator> <literal type="number" pos:start="37:24" pos:end="37:27">0x08</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="45:5">else if <condition pos:start="39:15" pos:end="39:27">(<expr pos:start="39:16" pos:end="39:26"><name pos:start="39:16" pos:end="39:20">memsz</name> <operator pos:start="39:22" pos:end="39:23">&gt;=</operator> <literal type="number" pos:start="39:25" pos:end="39:26">32</literal></expr>)</condition> <block pos:start="39:29" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:28">

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:22">integrator_spd</name><index pos:start="41:23" pos:end="41:26">[<expr pos:start="41:24" pos:end="41:25"><literal type="number" pos:start="41:24" pos:end="41:25">31</literal></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <literal type="number" pos:start="41:30" pos:end="41:30">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:19">cm_sdram</name></name> <operator pos:start="43:21" pos:end="43:22">|=</operator> <literal type="number" pos:start="43:24" pos:end="43:27">0x04</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="49:5">else <block pos:start="45:12" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:31">

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:22">integrator_spd</name><index pos:start="47:23" pos:end="47:26">[<expr pos:start="47:24" pos:end="47:25"><literal type="number" pos:start="47:24" pos:end="47:25">31</literal></expr>]</index></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">2</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><call pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:10">memcpy</name><argument_list pos:start="51:11" pos:end="51:50">(<argument pos:start="51:12" pos:end="51:30"><expr pos:start="51:12" pos:end="51:30"><name pos:start="51:12" pos:end="51:25">integrator_spd</name> <operator pos:start="51:27" pos:end="51:27">+</operator> <literal type="number" pos:start="51:29" pos:end="51:30">73</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:45"><expr pos:start="51:33" pos:end="51:45"><literal type="string" pos:start="51:33" pos:end="51:45">"QEMU-MEMORY"</literal></expr></argument>, <argument pos:start="51:48" pos:end="51:49"><expr pos:start="51:48" pos:end="51:49"><literal type="number" pos:start="51:48" pos:end="51:49">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:14"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:14">cm_init</name></name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:27">0x00000112</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:19">flash_offset</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:34">flash_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:64"><expr pos:start="59:5" pos:end="61:63"><name pos:start="59:5" pos:end="59:13">iomemtype</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="61:63"><name pos:start="59:17" pos:end="59:38">cpu_register_io_memory</name><argument_list pos:start="59:39" pos:end="61:63">(<argument pos:start="59:40" pos:end="59:40"><expr pos:start="59:40" pos:end="59:40"><literal type="number" pos:start="59:40" pos:end="59:40">0</literal></expr></argument>, <argument pos:start="59:43" pos:end="59:61"><expr pos:start="59:43" pos:end="59:61"><name pos:start="59:43" pos:end="59:61">integratorcm_readfn</name></expr></argument>,

                                       <argument pos:start="61:40" pos:end="61:59"><expr pos:start="61:40" pos:end="61:59"><name pos:start="61:40" pos:end="61:59">integratorcm_writefn</name></expr></argument>, <argument pos:start="61:62" pos:end="61:62"><expr pos:start="61:62" pos:end="61:62"><name pos:start="61:62" pos:end="61:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:68"><expr pos:start="63:5" pos:end="63:67"><call pos:start="63:5" pos:end="63:67"><name pos:start="63:5" pos:end="63:32">cpu_register_physical_memory</name><argument_list pos:start="63:33" pos:end="63:67">(<argument pos:start="63:34" pos:end="63:43"><expr pos:start="63:34" pos:end="63:43"><literal type="number" pos:start="63:34" pos:end="63:43">0x10000000</literal></expr></argument>, <argument pos:start="63:46" pos:end="63:55"><expr pos:start="63:46" pos:end="63:55"><literal type="number" pos:start="63:46" pos:end="63:55">0x007fffff</literal></expr></argument>, <argument pos:start="63:58" pos:end="63:66"><expr pos:start="63:58" pos:end="63:66"><name pos:start="63:58" pos:end="63:66">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><call pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:25">integratorcm_do_remap</name><argument_list pos:start="65:26" pos:end="65:31">(<argument pos:start="65:27" pos:end="65:27"><expr pos:start="65:27" pos:end="65:27"><name pos:start="65:27" pos:end="65:27">s</name></expr></argument>, <argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><literal type="number" pos:start="65:30" pos:end="65:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="67:5" pos:end="67:28">/* ??? Save/restore.  */</comment>

</block_content>}</block></function>
</unit>
