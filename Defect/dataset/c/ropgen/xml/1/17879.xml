<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17879.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">rv10_decode_picture_header</name><parameter_list pos:start="1:38" pos:end="1:56">(<parameter pos:start="1:39" pos:end="1:55"><decl pos:start="1:39" pos:end="1:55"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">MpegEncContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:20">

    <decl_stmt pos:start="5:5" pos:end="5:50"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">mb_count</name></decl>, <decl pos:start="5:19" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:26">pb_frame</name></decl>, <decl pos:start="5:29" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:34">marker</name></decl>, <decl pos:start="5:37" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:37">h</name></decl>, <decl pos:start="5:40" pos:end="5:49"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:40" pos:end="5:49">full_frame</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="9:5" pos:end="9:28">/* skip packet header */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:28"><expr pos:start="11:5" pos:end="11:27"><name pos:start="11:5" pos:end="11:5">h</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:16">get_bits</name><argument_list pos:start="11:17" pos:end="11:27">(<argument pos:start="11:18" pos:end="11:23"><expr pos:start="11:18" pos:end="11:23"><operator pos:start="11:18" pos:end="11:18">&amp;</operator><name pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:23">gb</name></name></expr></argument>, <argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="35:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:27">(<expr pos:start="13:9" pos:end="13:26"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:10">h</name> <operator pos:start="13:12" pos:end="13:12">&amp;</operator> <literal type="number" pos:start="13:14" pos:end="13:17">0xc0</literal><operator pos:start="13:18" pos:end="13:18">)</operator> <operator pos:start="13:20" pos:end="13:21">==</operator> <literal type="number" pos:start="13:23" pos:end="13:26">0xc0</literal></expr>)</condition> <block pos:start="13:29" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:30">

        <decl_stmt pos:start="15:9" pos:end="15:21"><decl pos:start="15:9" pos:end="15:15"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">len</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:9" pos:end="15:11"/><name pos:start="15:18" pos:end="15:20">pos</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:18">full_frame</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:29"><name pos:start="19:15" pos:end="19:21">get_num</name><argument_list pos:start="19:22" pos:end="19:29">(<argument pos:start="19:23" pos:end="19:28"><expr pos:start="19:23" pos:end="19:28"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:28"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">pos</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:21">get_num</name><argument_list pos:start="21:22" pos:end="21:29">(<argument pos:start="21:23" pos:end="21:28"><expr pos:start="21:23" pos:end="21:28"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="35:5">else <block pos:start="23:12" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:30">

        <decl_stmt pos:start="25:9" pos:end="25:33"><decl pos:start="25:9" pos:end="25:15"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:15">seq</name></decl>, <decl pos:start="25:18" pos:end="25:27"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:18" pos:end="25:27">frame_size</name></decl>, <decl pos:start="25:30" pos:end="25:32"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:30" pos:end="25:32">pos</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18">full_frame</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:11">seq</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:33"><name pos:start="29:15" pos:end="29:22">get_bits</name><argument_list pos:start="29:23" pos:end="29:33">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><operator pos:start="29:24" pos:end="29:24">&amp;</operator><name pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:25">s</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:29">gb</name></name></expr></argument>, <argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:18">frame_size</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <call pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:28">get_num</name><argument_list pos:start="31:29" pos:end="31:36">(<argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:35"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:11">pos</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:29"><name pos:start="33:15" pos:end="33:21">get_num</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:28"><expr pos:start="33:23" pos:end="33:28"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:24">/* picture number */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><call pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:12">get_bits</name><argument_list pos:start="39:13" pos:end="39:23">(<argument pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:19"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">gb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:10">marker</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:32"><name pos:start="43:14" pos:end="43:21">get_bits</name><argument_list pos:start="43:22" pos:end="43:32">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:28"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:28">gb</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:30"><if pos:start="47:5" pos:end="49:30">if <condition pos:start="47:8" pos:end="47:28">(<expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:16">get_bits</name><argument_list pos:start="47:17" pos:end="47:27">(<argument pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:23"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">gb</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:30"><block_content pos:start="49:9" pos:end="49:30">

        <expr_stmt pos:start="49:9" pos:end="49:30"><expr pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:20">pict_type</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <name pos:start="49:24" pos:end="49:29">P_TYPE</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="51:5" pos:end="53:30">else<block type="pseudo" pos:start="53:9" pos:end="53:30"><block_content pos:start="53:9" pos:end="53:30">

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:20">pict_type</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:29">I_TYPE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="62:0"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:12">pb_frame</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:23">get_bits</name><argument_list pos:start="57:24" pos:end="57:34">(<argument pos:start="57:25" pos:end="57:30"><expr pos:start="57:25" pos:end="57:30"><operator pos:start="57:25" pos:end="57:25">&amp;</operator><name pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">s</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:30">gb</name></name></expr></argument>, <argument pos:start="57:33" pos:end="57:33"><expr pos:start="57:33" pos:end="57:33"><literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="61:1" pos:end="61:12">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="63:5" pos:end="66:0"><expr pos:start="63:5" pos:end="63:64"><call pos:start="63:5" pos:end="63:64"><name pos:start="63:5" pos:end="63:10">printf</name><argument_list pos:start="63:11" pos:end="63:64">(<argument pos:start="63:12" pos:end="63:39"><expr pos:start="63:12" pos:end="63:39"><literal type="string" pos:start="63:12" pos:end="63:39">"pict_type=%d pb_frame=%d\n"</literal></expr></argument>, <argument pos:start="63:42" pos:end="63:53"><expr pos:start="63:42" pos:end="63:53"><name pos:start="63:42" pos:end="63:53"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:53">pict_type</name></name></expr></argument>, <argument pos:start="63:56" pos:end="63:63"><expr pos:start="63:56" pos:end="63:63"><name pos:start="63:56" pos:end="63:63">pb_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

    

    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if <condition pos:start="69:8" pos:end="69:17">(<expr pos:start="69:9" pos:end="69:16"><name pos:start="69:9" pos:end="69:16">pb_frame</name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:13">qscale</name></name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:24">get_bits</name><argument_list pos:start="75:25" pos:end="75:35">(<argument pos:start="75:26" pos:end="75:31"><expr pos:start="75:26" pos:end="75:31"><operator pos:start="75:26" pos:end="75:26">&amp;</operator><name pos:start="75:27" pos:end="75:31"><name pos:start="75:27" pos:end="75:27">s</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:31">gb</name></name></expr></argument>, <argument pos:start="75:34" pos:end="75:34"><expr pos:start="75:34" pos:end="75:34"><literal type="number" pos:start="75:34" pos:end="75:34">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="105:5"><if pos:start="79:5" pos:end="105:5">if <condition pos:start="79:8" pos:end="79:31">(<expr pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">pict_type</name></name> <operator pos:start="79:22" pos:end="79:23">==</operator> <name pos:start="79:25" pos:end="79:30">I_TYPE</name></expr>)</condition> <block pos:start="79:33" pos:end="105:5">{<block_content pos:start="81:9" pos:end="103:9">

        <if_stmt pos:start="81:9" pos:end="103:9"><if pos:start="81:9" pos:end="103:9">if <condition pos:start="81:12" pos:end="81:33">(<expr pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:13">s</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:27">rv10_version</name></name> <operator pos:start="81:29" pos:end="81:30">==</operator> <literal type="number" pos:start="81:32" pos:end="81:32">3</literal></expr>)</condition> <block pos:start="81:35" pos:end="103:9">{<block_content pos:start="85:13" pos:end="102:0">

            <comment type="block" pos:start="83:13" pos:end="83:55">/* specific MPEG like DC coding not used */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:48"><expr pos:start="85:13" pos:end="85:47"><name pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:22">last_dc</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><literal type="number" pos:start="85:24" pos:end="85:24">0</literal></expr>]</index></name> <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="85:47"><name pos:start="85:29" pos:end="85:36">get_bits</name><argument_list pos:start="85:37" pos:end="85:47">(<argument pos:start="85:38" pos:end="85:43"><expr pos:start="85:38" pos:end="85:43"><operator pos:start="85:38" pos:end="85:38">&amp;</operator><name pos:start="85:39" pos:end="85:43"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:43">gb</name></name></expr></argument>, <argument pos:start="85:46" pos:end="85:46"><expr pos:start="85:46" pos:end="85:46"><literal type="number" pos:start="85:46" pos:end="85:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:48"><expr pos:start="87:13" pos:end="87:47"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:22">last_dc</name><index pos:start="87:23" pos:end="87:25">[<expr pos:start="87:24" pos:end="87:24"><literal type="number" pos:start="87:24" pos:end="87:24">1</literal></expr>]</index></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <call pos:start="87:29" pos:end="87:47"><name pos:start="87:29" pos:end="87:36">get_bits</name><argument_list pos:start="87:37" pos:end="87:47">(<argument pos:start="87:38" pos:end="87:43"><expr pos:start="87:38" pos:end="87:43"><operator pos:start="87:38" pos:end="87:38">&amp;</operator><name pos:start="87:39" pos:end="87:43"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:43">gb</name></name></expr></argument>, <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="92:0"><expr pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">last_dc</name><index pos:start="89:23" pos:end="89:25">[<expr pos:start="89:24" pos:end="89:24"><literal type="number" pos:start="89:24" pos:end="89:24">2</literal></expr>]</index></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <call pos:start="89:29" pos:end="89:47"><name pos:start="89:29" pos:end="89:36">get_bits</name><argument_list pos:start="89:37" pos:end="89:47">(<argument pos:start="89:38" pos:end="89:43"><expr pos:start="89:38" pos:end="89:43"><operator pos:start="89:38" pos:end="89:38">&amp;</operator><name pos:start="89:39" pos:end="89:43"><name pos:start="89:39" pos:end="89:39">s</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:43">gb</name></name></expr></argument>, <argument pos:start="89:46" pos:end="89:46"><expr pos:start="89:46" pos:end="89:46"><literal type="number" pos:start="89:46" pos:end="89:46">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="91:1" pos:end="91:12">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:12">DEBUG</name></cpp:ifdef>

            <expr_stmt pos:start="93:13" pos:end="102:0"><expr pos:start="93:13" pos:end="99:33"><call pos:start="93:13" pos:end="99:33"><name pos:start="93:13" pos:end="93:18">printf</name><argument_list pos:start="93:19" pos:end="99:33">(<argument pos:start="93:20" pos:end="93:34"><expr pos:start="93:20" pos:end="93:34"><literal type="string" pos:start="93:20" pos:end="93:34">"DC:%d %d %d\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:32"><expr pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:32"><name pos:start="95:20" pos:end="95:20">s</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:29">last_dc</name><index pos:start="95:30" pos:end="95:32">[<expr pos:start="95:31" pos:end="95:31"><literal type="number" pos:start="95:31" pos:end="95:31">0</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:32"><expr pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:32"><name pos:start="97:20" pos:end="97:20">s</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:29">last_dc</name><index pos:start="97:30" pos:end="97:32">[<expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">1</literal></expr>]</index></name></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:32"><expr pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:32"><name pos:start="99:20" pos:end="99:20">s</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">last_dc</name><index pos:start="99:30" pos:end="99:32">[<expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="107:5" pos:end="109:51">/* if multiple packets per frame are sent, the position at which

       to display the macro blocks is coded here */</comment>

    <if_stmt pos:start="111:5" pos:end="127:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:20">(<expr pos:start="111:9" pos:end="111:19"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:19">full_frame</name></expr>)</condition> <block pos:start="111:22" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:40">

        <expr_stmt pos:start="113:9" pos:end="113:38"><expr pos:start="113:9" pos:end="113:37"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">mb_x</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:37"><name pos:start="113:19" pos:end="113:26">get_bits</name><argument_list pos:start="113:27" pos:end="113:37">(<argument pos:start="113:28" pos:end="113:33"><expr pos:start="113:28" pos:end="113:33"><operator pos:start="113:28" pos:end="113:28">&amp;</operator><name pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:29">s</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:33">gb</name></name></expr></argument>, <argument pos:start="113:36" pos:end="113:36"><expr pos:start="113:36" pos:end="113:36"><literal type="number" pos:start="113:36" pos:end="113:36">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="113:41" pos:end="113:50">/* mb_x */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:38"><expr pos:start="115:9" pos:end="115:37"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:15">mb_y</name></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:37"><name pos:start="115:19" pos:end="115:26">get_bits</name><argument_list pos:start="115:27" pos:end="115:37">(<argument pos:start="115:28" pos:end="115:33"><expr pos:start="115:28" pos:end="115:33"><operator pos:start="115:28" pos:end="115:28">&amp;</operator><name pos:start="115:29" pos:end="115:33"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:33">gb</name></name></expr></argument>, <argument pos:start="115:36" pos:end="115:36"><expr pos:start="115:36" pos:end="115:36"><literal type="number" pos:start="115:36" pos:end="115:36">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="115:41" pos:end="115:50">/* mb_y */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:40"><expr pos:start="117:9" pos:end="117:39"><name pos:start="117:9" pos:end="117:16">mb_count</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <call pos:start="117:20" pos:end="117:39"><name pos:start="117:20" pos:end="117:27">get_bits</name><argument_list pos:start="117:28" pos:end="117:39">(<argument pos:start="117:29" pos:end="117:34"><expr pos:start="117:29" pos:end="117:34"><operator pos:start="117:29" pos:end="117:29">&amp;</operator><name pos:start="117:30" pos:end="117:34"><name pos:start="117:30" pos:end="117:30">s</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:34">gb</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:38"><expr pos:start="117:37" pos:end="117:38"><literal type="number" pos:start="117:37" pos:end="117:38">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="127:5">else <block pos:start="119:12" pos:end="127:5">{<block_content pos:start="121:9" pos:end="125:46">

        <expr_stmt pos:start="121:9" pos:end="121:20"><expr pos:start="121:9" pos:end="121:19"><name pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:15">mb_x</name></name> <operator pos:start="121:17" pos:end="121:17">=</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:20"><expr pos:start="123:9" pos:end="123:19"><name pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:15">mb_y</name></name> <operator pos:start="123:17" pos:end="123:17">=</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:16">mb_count</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:30"><name pos:start="125:20" pos:end="125:20">s</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:30">mb_width</name></name> <operator pos:start="125:32" pos:end="125:32">*</operator> <name pos:start="125:34" pos:end="125:45"><name pos:start="125:34" pos:end="125:34">s</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:45">mb_height</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:24"><expr pos:start="131:5" pos:end="131:23"><call pos:start="131:5" pos:end="131:23"><name pos:start="131:5" pos:end="131:12">get_bits</name><argument_list pos:start="131:13" pos:end="131:23">(<argument pos:start="131:14" pos:end="131:19"><expr pos:start="131:14" pos:end="131:19"><operator pos:start="131:14" pos:end="131:14">&amp;</operator><name pos:start="131:15" pos:end="131:19"><name pos:start="131:15" pos:end="131:15">s</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:19">gb</name></name></expr></argument>, <argument pos:start="131:22" pos:end="131:22"><expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="131:33" pos:end="131:45">/* ignored */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:18"><expr pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:13"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:13">f_code</name></name> <operator pos:start="133:15" pos:end="133:15">=</operator> <literal type="number" pos:start="133:17" pos:end="133:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="142:0"><expr pos:start="135:5" pos:end="135:26"><name pos:start="135:5" pos:end="135:22"><name pos:start="135:5" pos:end="135:5">s</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:22">unrestricted_mv</name></name> <operator pos:start="135:24" pos:end="135:24">=</operator> <literal type="number" pos:start="135:26" pos:end="135:26">1</literal></expr>;</expr_stmt>

<cpp:if pos:start="137:1" pos:end="137:5">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:5"><literal type="number" pos:start="137:5" pos:end="137:5">0</literal></expr></cpp:if>

    s-&gt;h263_long_vectors = 1;

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

    <return pos:start="143:5" pos:end="143:20">return <expr pos:start="143:12" pos:end="143:19"><name pos:start="143:12" pos:end="143:19">mb_count</name></expr>;</return>

</block_content>}</block></function>
</unit>
