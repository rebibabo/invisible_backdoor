<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13861.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:15">g_realloc</name><parameter_list pos:start="1:16" pos:end="1:43">(<parameter pos:start="1:17" pos:end="1:26"><decl pos:start="1:17" pos:end="1:26"><type pos:start="1:17" pos:end="1:26"><name pos:start="1:17" pos:end="1:20">void</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type> <name pos:start="1:24" pos:end="1:26">mem</name></decl></parameter>, <parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:34">size_t</name></type> <name pos:start="1:36" pos:end="1:42">n_bytes</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:15">

    <expr_stmt pos:start="5:5" pos:end="5:40"><expr pos:start="5:5" pos:end="5:39"><call pos:start="5:5" pos:end="5:39"><name pos:start="5:5" pos:end="5:30">__coverity_negative_sink__</name><argument_list pos:start="5:31" pos:end="5:39">(<argument pos:start="5:32" pos:end="5:38"><expr pos:start="5:32" pos:end="5:38"><name pos:start="5:32" pos:end="5:38">n_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:51"><expr pos:start="7:5" pos:end="7:50"><name pos:start="7:5" pos:end="7:7">mem</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <call pos:start="7:11" pos:end="7:50"><name pos:start="7:11" pos:end="7:17">realloc</name><argument_list pos:start="7:18" pos:end="7:50">(<argument pos:start="7:19" pos:end="7:21"><expr pos:start="7:19" pos:end="7:21"><name pos:start="7:19" pos:end="7:21">mem</name></expr></argument>, <argument pos:start="7:24" pos:end="7:49"><expr pos:start="7:24" pos:end="7:49"><ternary pos:start="7:24" pos:end="7:49"><condition pos:start="7:24" pos:end="7:37"><expr pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:30">n_bytes</name> <operator pos:start="7:32" pos:end="7:33">==</operator> <literal type="number" pos:start="7:35" pos:end="7:35">0</literal></expr> ?</condition><then pos:start="7:39" pos:end="7:39"> <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">1</literal></expr> </then><else pos:start="7:41" pos:end="7:49">: <expr pos:start="7:43" pos:end="7:49"><name pos:start="7:43" pos:end="7:49">n_bytes</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="9:35"><if pos:start="9:5" pos:end="9:35">if <condition pos:start="9:8" pos:end="9:13">(<expr pos:start="9:9" pos:end="9:12"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:12">mem</name></expr>)</condition><block type="pseudo" pos:start="9:15" pos:end="9:35"><block_content pos:start="9:15" pos:end="9:35"> <expr_stmt pos:start="9:15" pos:end="9:35"><expr pos:start="9:15" pos:end="9:34"><call pos:start="9:15" pos:end="9:34"><name pos:start="9:15" pos:end="9:32">__coverity_panic__</name><argument_list pos:start="9:33" pos:end="9:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="11:5" pos:end="11:15">return <expr pos:start="11:12" pos:end="11:14"><name pos:start="11:12" pos:end="11:14">mem</name></expr>;</return>

</block_content>}</block></function>
</unit>
