<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7396.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="255:1"><decl pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">decorrelation</name><argument_list pos:start="1:26" pos:end="1:102">(<argument pos:start="1:27" pos:end="1:39"><expr pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:35">PSContext</name> <operator pos:start="1:37" pos:end="1:37">*</operator><name pos:start="1:38" pos:end="1:39">ps</name></expr></argument>, <argument pos:start="1:42" pos:end="1:63"><expr pos:start="1:42" pos:end="1:63"><call pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:49">INTFLOAT</name> <argument_list pos:start="1:51" pos:end="1:56">(<argument pos:start="1:52" pos:end="1:55"><expr pos:start="1:52" pos:end="1:55"><operator pos:start="1:52" pos:end="1:52">*</operator><name pos:start="1:53" pos:end="1:55">out</name></expr></argument>)</argument_list></call><index pos:start="1:57" pos:end="1:60">[<expr pos:start="1:58" pos:end="1:59"><literal type="number" pos:start="1:58" pos:end="1:59">32</literal></expr>]</index><index pos:start="1:61" pos:end="1:63">[<expr pos:start="1:62" pos:end="1:62"><literal type="number" pos:start="1:62" pos:end="1:62">2</literal></expr>]</index></expr></argument>, <argument pos:start="1:66" pos:end="1:91"><expr pos:start="1:66" pos:end="1:91"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <call pos:start="1:72" pos:end="1:84"><name pos:start="1:72" pos:end="1:79">INTFLOAT</name> <argument_list pos:start="1:81" pos:end="1:84">(<argument pos:start="1:82" pos:end="1:83"><expr pos:start="1:82" pos:end="1:83"><operator pos:start="1:82" pos:end="1:82">*</operator><name pos:start="1:83" pos:end="1:83">s</name></expr></argument>)</argument_list></call><index pos:start="1:85" pos:end="1:88">[<expr pos:start="1:86" pos:end="1:87"><literal type="number" pos:start="1:86" pos:end="1:87">32</literal></expr>]</index><index pos:start="1:89" pos:end="1:91">[<expr pos:start="1:90" pos:end="1:90"><literal type="number" pos:start="1:90" pos:end="1:90">2</literal></expr>]</index></expr></argument>, <argument pos:start="1:94" pos:end="1:101"><expr pos:start="1:94" pos:end="1:101"><name pos:start="1:94" pos:end="1:96">int</name> <name pos:start="1:98" pos:end="1:101">is34</name></expr></argument>)</argument_list>

<block pos:start="3:1" pos:end="255:1">{<block_content pos:start="5:5" pos:end="253:5">

    <expr_stmt pos:start="5:5" pos:end="5:65"><expr pos:start="5:5" pos:end="5:64"><call pos:start="5:5" pos:end="5:64"><name pos:start="5:5" pos:end="5:20">LOCAL_ALIGNED_16</name><argument_list pos:start="5:21" pos:end="5:64">(<argument pos:start="5:22" pos:end="5:29"><expr pos:start="5:22" pos:end="5:29"><name pos:start="5:22" pos:end="5:29">INTFLOAT</name></expr></argument>, <argument pos:start="5:32" pos:end="5:36"><expr pos:start="5:32" pos:end="5:36"><name pos:start="5:32" pos:end="5:36">power</name></expr></argument>, <argument pos:start="5:39" pos:end="5:42"><expr pos:start="5:39" pos:end="5:42"><index pos:start="5:39" pos:end="5:42">[<expr pos:start="5:40" pos:end="5:41"><literal type="number" pos:start="5:40" pos:end="5:41">34</literal></expr>]</index></expr></argument>, <argument pos:start="5:45" pos:end="5:63"><expr pos:start="5:45" pos:end="5:63"><index pos:start="5:45" pos:end="5:63">[<expr pos:start="5:46" pos:end="5:62"><name pos:start="5:46" pos:end="5:62">PS_QMF_TIME_SLOTS</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:74"><expr pos:start="7:5" pos:end="7:73"><call pos:start="7:5" pos:end="7:73"><name pos:start="7:5" pos:end="7:20">LOCAL_ALIGNED_16</name><argument_list pos:start="7:21" pos:end="7:73">(<argument pos:start="7:22" pos:end="7:29"><expr pos:start="7:22" pos:end="7:29"><name pos:start="7:22" pos:end="7:29">INTFLOAT</name></expr></argument>, <argument pos:start="7:32" pos:end="7:45"><expr pos:start="7:32" pos:end="7:45"><name pos:start="7:32" pos:end="7:45">transient_gain</name></expr></argument>, <argument pos:start="7:48" pos:end="7:51"><expr pos:start="7:48" pos:end="7:51"><index pos:start="7:48" pos:end="7:51">[<expr pos:start="7:49" pos:end="7:50"><literal type="number" pos:start="7:49" pos:end="7:50">34</literal></expr>]</index></expr></argument>, <argument pos:start="7:54" pos:end="7:72"><expr pos:start="7:54" pos:end="7:72"><index pos:start="7:54" pos:end="7:72">[<expr pos:start="7:55" pos:end="7:71"><name pos:start="7:55" pos:end="7:71">PS_QMF_TIME_SLOTS</name></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">INTFLOAT</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:28">peak_decay_nrg</name> <init pos:start="9:30" pos:end="9:49">= <expr pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:49"><name pos:start="9:32" pos:end="9:33">ps</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:49">peak_decay_nrg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">INTFLOAT</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:26">power_smooth</name> <init pos:start="11:28" pos:end="11:45">= <expr pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:31">ps</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:45">power_smooth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">INTFLOAT</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:36">peak_decay_diff_smooth</name> <init pos:start="13:38" pos:end="13:65">= <expr pos:start="13:40" pos:end="13:65"><name pos:start="13:40" pos:end="13:65"><name pos:start="13:40" pos:end="13:41">ps</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:65">peak_decay_diff_smooth</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:71"><expr pos:start="15:5" pos:end="15:70"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:12">INTFLOAT</name> <argument_list pos:start="15:14" pos:end="15:21">(<argument pos:start="15:15" pos:end="15:20"><expr pos:start="15:15" pos:end="15:20"><operator pos:start="15:15" pos:end="15:15">*</operator><name pos:start="15:16" pos:end="15:20">delay</name></expr></argument>)</argument_list></call><index pos:start="15:22" pos:end="15:55">[<expr pos:start="15:23" pos:end="15:54"><name pos:start="15:23" pos:end="15:39">PS_QMF_TIME_SLOTS</name> <operator pos:start="15:41" pos:end="15:41">+</operator> <name pos:start="15:43" pos:end="15:54">PS_MAX_DELAY</name></expr>]</index><index pos:start="15:56" pos:end="15:58">[<expr pos:start="15:57" pos:end="15:57"><literal type="number" pos:start="15:57" pos:end="15:57">2</literal></expr>]</index> <operator pos:start="15:60" pos:end="15:60">=</operator> <name pos:start="15:62" pos:end="15:70"><name pos:start="15:62" pos:end="15:63">ps</name><operator pos:start="15:64" pos:end="15:65">-&gt;</operator><name pos:start="15:66" pos:end="15:70">delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:92"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:12">INTFLOAT</name> <argument_list pos:start="17:14" pos:end="17:24">(<argument pos:start="17:15" pos:end="17:23"><expr pos:start="17:15" pos:end="17:23"><operator pos:start="17:15" pos:end="17:15">*</operator><name pos:start="17:16" pos:end="17:23">ap_delay</name></expr></argument>)</argument_list></call><index pos:start="17:25" pos:end="17:37">[<expr pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:36">PS_AP_LINKS</name></expr>]</index><index pos:start="17:38" pos:end="17:74">[<expr pos:start="17:39" pos:end="17:73"><name pos:start="17:39" pos:end="17:55">PS_QMF_TIME_SLOTS</name> <operator pos:start="17:57" pos:end="17:57">+</operator> <name pos:start="17:59" pos:end="17:73">PS_MAX_AP_DELAY</name></expr>]</index><index pos:start="17:75" pos:end="17:77">[<expr pos:start="17:76" pos:end="17:76"><literal type="number" pos:start="17:76" pos:end="17:76">2</literal></expr>]</index> <operator pos:start="17:79" pos:end="17:79">=</operator> <name pos:start="17:81" pos:end="17:92"><name pos:start="17:81" pos:end="17:82">ps</name><operator pos:start="17:83" pos:end="17:84">-&gt;</operator><name pos:start="17:85" pos:end="17:92">ap_delay</name></name></expr>;</expr_stmt>

<cpp:if pos:start="19:1" pos:end="19:14">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:14"><operator pos:start="19:5" pos:end="19:5">!</operator><name pos:start="19:6" pos:end="19:14">USE_FIXED</name></expr></cpp:if>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:15"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:15">float</name></type> <name pos:start="21:17" pos:end="21:32">transient_impact</name>  <init pos:start="21:35" pos:end="21:40">= <expr pos:start="21:37" pos:end="21:40"><literal type="number" pos:start="21:37" pos:end="21:40">1.5f</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:41"><type pos:start="23:5" pos:end="23:15"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:15">float</name></type> <name pos:start="23:17" pos:end="23:24">a_smooth</name>          <init pos:start="23:35" pos:end="23:41">= <expr pos:start="23:37" pos:end="23:41"><literal type="number" pos:start="23:37" pos:end="23:41">0.25f</literal></expr></init></decl>;</decl_stmt> <comment type="line" format="doxygen" pos:start="23:44" pos:end="23:69">///&lt; Smoothing coefficient</comment>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="25:8" pos:end="25:22">/* USE_FIXED */</comment>

    <decl_stmt pos:start="27:5" pos:end="27:56"><decl pos:start="27:5" pos:end="27:55"><type pos:start="27:5" pos:end="27:18"><specifier pos:start="27:5" pos:end="27:9">const</specifier> <name pos:start="27:11" pos:end="27:16">int8_t</name> <modifier pos:start="27:18" pos:end="27:18">*</modifier></type><name pos:start="27:19" pos:end="27:24">k_to_i</name> <init pos:start="27:26" pos:end="27:55">= <expr pos:start="27:28" pos:end="27:55"><ternary pos:start="27:28" pos:end="27:55"><condition pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:31"><name pos:start="27:28" pos:end="27:31">is34</name></expr> ?</condition><then pos:start="27:35" pos:end="27:43"> <expr pos:start="27:35" pos:end="27:43"><name pos:start="27:35" pos:end="27:43">k_to_i_34</name></expr> </then><else pos:start="27:45" pos:end="27:55">: <expr pos:start="27:47" pos:end="27:55"><name pos:start="27:47" pos:end="27:55">k_to_i_20</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:19"><decl pos:start="29:5" pos:end="29:9"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">i</name></decl>, <decl pos:start="29:12" pos:end="29:12"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:12" pos:end="29:12">k</name></decl>, <decl pos:start="29:15" pos:end="29:15"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:15" pos:end="29:15">m</name></decl>, <decl pos:start="29:18" pos:end="29:18"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:18" pos:end="29:18">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:24"><decl pos:start="31:5" pos:end="31:14"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:10">n0</name> <init pos:start="31:12" pos:end="31:14">= <expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr></init></decl>, <decl pos:start="31:17" pos:end="31:23"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:17" pos:end="31:18">nL</name> <init pos:start="31:20" pos:end="31:23">= <expr pos:start="31:22" pos:end="31:23"><literal type="number" pos:start="31:22" pos:end="31:23">32</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:62"><decl pos:start="33:5" pos:end="33:61"><type pos:start="33:5" pos:end="33:18"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:18">INTFLOAT</name></type> <name pos:start="33:20" pos:end="33:36">peak_decay_factor</name> <init pos:start="33:38" pos:end="33:61">= <expr pos:start="33:40" pos:end="33:61"><call pos:start="33:40" pos:end="33:61"><name pos:start="33:40" pos:end="33:42">Q31</name><argument_list pos:start="33:43" pos:end="33:61">(<argument pos:start="33:44" pos:end="33:60"><expr pos:start="33:44" pos:end="33:60"><literal type="number" pos:start="33:44" pos:end="33:60">0.76592833836465f</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><call pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:41">(<argument pos:start="37:12" pos:end="37:16"><expr pos:start="37:12" pos:end="37:16"><name pos:start="37:12" pos:end="37:16">power</name></expr></argument>, <argument pos:start="37:19" pos:end="37:19"><expr pos:start="37:19" pos:end="37:19"><literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr></argument>, <argument pos:start="37:22" pos:end="37:40"><expr pos:start="37:22" pos:end="37:40"><literal type="number" pos:start="37:22" pos:end="37:23">34</literal> <operator pos:start="37:25" pos:end="37:25">*</operator> <sizeof pos:start="37:27" pos:end="37:40">sizeof<argument_list pos:start="37:33" pos:end="37:40">(<argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><operator pos:start="37:34" pos:end="37:34">*</operator><name pos:start="37:35" pos:end="37:39">power</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:12">is34</name> <operator pos:start="41:14" pos:end="41:15">!=</operator> <name pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:18">ps</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:33">is34bands_old</name></name></expr>)</condition> <block pos:start="41:36" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:68">

        <expr_stmt pos:start="43:9" pos:end="43:74"><expr pos:start="43:9" pos:end="43:73"><call pos:start="43:9" pos:end="43:73"><name pos:start="43:9" pos:end="43:14">memset</name><argument_list pos:start="43:15" pos:end="43:73">(<argument pos:start="43:16" pos:end="43:33"><expr pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:33"><name pos:start="43:16" pos:end="43:17">ps</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">peak_decay_nrg</name></name></expr></argument>,         <argument pos:start="43:44" pos:end="43:44"><expr pos:start="43:44" pos:end="43:44"><literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr></argument>, <argument pos:start="43:47" pos:end="43:72"><expr pos:start="43:47" pos:end="43:72"><sizeof pos:start="43:47" pos:end="43:72">sizeof<argument_list pos:start="43:53" pos:end="43:72">(<argument pos:start="43:54" pos:end="43:71"><expr pos:start="43:54" pos:end="43:71"><name pos:start="43:54" pos:end="43:71"><name pos:start="43:54" pos:end="43:55">ps</name><operator pos:start="43:56" pos:end="43:57">-&gt;</operator><name pos:start="43:58" pos:end="43:71">peak_decay_nrg</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:72"><expr pos:start="45:9" pos:end="45:71"><call pos:start="45:9" pos:end="45:71"><name pos:start="45:9" pos:end="45:14">memset</name><argument_list pos:start="45:15" pos:end="45:71">(<argument pos:start="45:16" pos:end="45:31"><expr pos:start="45:16" pos:end="45:31"><name pos:start="45:16" pos:end="45:31"><name pos:start="45:16" pos:end="45:17">ps</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:31">power_smooth</name></name></expr></argument>,           <argument pos:start="45:44" pos:end="45:44"><expr pos:start="45:44" pos:end="45:44"><literal type="number" pos:start="45:44" pos:end="45:44">0</literal></expr></argument>, <argument pos:start="45:47" pos:end="45:70"><expr pos:start="45:47" pos:end="45:70"><sizeof pos:start="45:47" pos:end="45:70">sizeof<argument_list pos:start="45:53" pos:end="45:70">(<argument pos:start="45:54" pos:end="45:69"><expr pos:start="45:54" pos:end="45:69"><name pos:start="45:54" pos:end="45:69"><name pos:start="45:54" pos:end="45:55">ps</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:69">power_smooth</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:82"><expr pos:start="47:9" pos:end="47:81"><call pos:start="47:9" pos:end="47:81"><name pos:start="47:9" pos:end="47:14">memset</name><argument_list pos:start="47:15" pos:end="47:81">(<argument pos:start="47:16" pos:end="47:41"><expr pos:start="47:16" pos:end="47:41"><name pos:start="47:16" pos:end="47:41"><name pos:start="47:16" pos:end="47:17">ps</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:41">peak_decay_diff_smooth</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr></argument>, <argument pos:start="47:47" pos:end="47:80"><expr pos:start="47:47" pos:end="47:80"><sizeof pos:start="47:47" pos:end="47:80">sizeof<argument_list pos:start="47:53" pos:end="47:80">(<argument pos:start="47:54" pos:end="47:79"><expr pos:start="47:54" pos:end="47:79"><name pos:start="47:54" pos:end="47:79"><name pos:start="47:54" pos:end="47:55">ps</name><operator pos:start="47:56" pos:end="47:57">-&gt;</operator><name pos:start="47:58" pos:end="47:79">peak_decay_diff_smooth</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:65"><expr pos:start="49:9" pos:end="49:64"><call pos:start="49:9" pos:end="49:64"><name pos:start="49:9" pos:end="49:14">memset</name><argument_list pos:start="49:15" pos:end="49:64">(<argument pos:start="49:16" pos:end="49:24"><expr pos:start="49:16" pos:end="49:24"><name pos:start="49:16" pos:end="49:24"><name pos:start="49:16" pos:end="49:17">ps</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:24">delay</name></name></expr></argument>,                  <argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">0</literal></expr></argument>, <argument pos:start="49:47" pos:end="49:63"><expr pos:start="49:47" pos:end="49:63"><sizeof pos:start="49:47" pos:end="49:63">sizeof<argument_list pos:start="49:53" pos:end="49:63">(<argument pos:start="49:54" pos:end="49:62"><expr pos:start="49:54" pos:end="49:62"><name pos:start="49:54" pos:end="49:62"><name pos:start="49:54" pos:end="49:55">ps</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:62">delay</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:68"><expr pos:start="51:9" pos:end="51:67"><call pos:start="51:9" pos:end="51:67"><name pos:start="51:9" pos:end="51:14">memset</name><argument_list pos:start="51:15" pos:end="51:67">(<argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:17">ps</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:27">ap_delay</name></name></expr></argument>,               <argument pos:start="51:44" pos:end="51:44"><expr pos:start="51:44" pos:end="51:44"><literal type="number" pos:start="51:44" pos:end="51:44">0</literal></expr></argument>, <argument pos:start="51:47" pos:end="51:66"><expr pos:start="51:47" pos:end="51:66"><sizeof pos:start="51:47" pos:end="51:66">sizeof<argument_list pos:start="51:53" pos:end="51:66">(<argument pos:start="51:54" pos:end="51:65"><expr pos:start="51:54" pos:end="51:65"><name pos:start="51:54" pos:end="51:65"><name pos:start="51:54" pos:end="51:55">ps</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:65">ap_delay</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="57:5" pos:end="70:0">for <control pos:start="57:9" pos:end="57:40">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">k</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:35"><expr pos:start="57:17" pos:end="57:34"><name pos:start="57:17" pos:end="57:17">k</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:28">NR_BANDS</name><index pos:start="57:29" pos:end="57:34">[<expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:37">k</name><operator pos:start="57:38" pos:end="57:39">++</operator></expr></incr>)</control> <block pos:start="57:42" pos:end="70:0">{<block_content pos:start="59:9" pos:end="61:53">

        <decl_stmt pos:start="59:9" pos:end="59:26"><decl pos:start="59:9" pos:end="59:25"><type pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">int</name></type> <name pos:start="59:13" pos:end="59:13">i</name> <init pos:start="59:15" pos:end="59:25">= <expr pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:25"><name pos:start="59:17" pos:end="59:22">k_to_i</name><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><call pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:10">ps</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:15">dsp</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:27">add_squares</name></name><argument_list pos:start="61:28" pos:end="61:52">(<argument pos:start="61:29" pos:end="61:36"><expr pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:36"><name pos:start="61:29" pos:end="61:33">power</name><index pos:start="61:34" pos:end="61:36">[<expr pos:start="61:35" pos:end="61:35"><name pos:start="61:35" pos:end="61:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:39" pos:end="61:42"><expr pos:start="61:39" pos:end="61:42"><name pos:start="61:39" pos:end="61:42"><name pos:start="61:39" pos:end="61:39">s</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">k</name></expr>]</index></name></expr></argument>, <argument pos:start="61:45" pos:end="61:51"><expr pos:start="61:45" pos:end="61:51"><name pos:start="61:45" pos:end="61:46">nL</name> <operator pos:start="61:48" pos:end="61:48">-</operator> <name pos:start="61:50" pos:end="61:51">n0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="67:5" pos:end="67:25">//Transient detection</comment>

<cpp:if pos:start="69:1" pos:end="69:13">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:13"><name pos:start="69:5" pos:end="69:13">USE_FIXED</name></expr></cpp:if>

    <for pos:start="71:5" pos:end="122:0">for <control pos:start="71:9" pos:end="71:44">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:39"><expr pos:start="71:17" pos:end="71:38"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:38"><name pos:start="71:21" pos:end="71:32">NR_PAR_BANDS</name><index pos:start="71:33" pos:end="71:38">[<expr pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:37">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="71:41" pos:end="71:43"><expr pos:start="71:41" pos:end="71:43"><name pos:start="71:41" pos:end="71:41">i</name><operator pos:start="71:42" pos:end="71:43">++</operator></expr></incr>)</control> <block pos:start="71:46" pos:end="122:0">{<block_content pos:start="73:9" pos:end="117:9">

        <for pos:start="73:9" pos:end="117:9">for <control pos:start="73:13" pos:end="73:33">(<init pos:start="73:14" pos:end="73:20"><expr pos:start="73:14" pos:end="73:19"><name pos:start="73:14" pos:end="73:14">n</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:19">n0</name></expr>;</init> <condition pos:start="73:22" pos:end="73:28"><expr pos:start="73:22" pos:end="73:27"><name pos:start="73:22" pos:end="73:22">n</name> <operator pos:start="73:24" pos:end="73:24">&lt;</operator> <name pos:start="73:26" pos:end="73:27">nL</name></expr>;</condition> <incr pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:30">n</name><operator pos:start="73:31" pos:end="73:32">++</operator></expr></incr>)</control> <block pos:start="73:35" pos:end="117:9">{<block_content pos:start="75:13" pos:end="115:13">

            <decl_stmt pos:start="75:13" pos:end="75:29"><decl pos:start="75:13" pos:end="75:28"><type pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">int</name></type> <name pos:start="75:17" pos:end="75:28">decayed_peak</name></decl>;</decl_stmt>

            <decl_stmt pos:start="77:13" pos:end="77:22"><decl pos:start="77:13" pos:end="77:21"><type pos:start="77:13" pos:end="77:15"><name pos:start="77:13" pos:end="77:15">int</name></type> <name pos:start="77:17" pos:end="77:21">denom</name></decl>;</decl_stmt>



            <expr_stmt pos:start="81:13" pos:end="83:82"><expr pos:start="81:13" pos:end="83:81"><name pos:start="81:13" pos:end="81:24">decayed_peak</name> <operator pos:start="81:26" pos:end="81:26">=</operator> <operator pos:start="81:28" pos:end="81:28">(</operator><name pos:start="81:29" pos:end="81:31">int</name><operator pos:start="81:32" pos:end="81:32">)</operator><operator pos:start="81:33" pos:end="81:33">(</operator><operator pos:start="81:34" pos:end="81:34">(</operator><operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:42">int64_t</name><operator pos:start="81:43" pos:end="81:43">)</operator><name pos:start="81:44" pos:end="81:60">peak_decay_factor</name> <operator pos:start="81:62" pos:end="81:62">*</operator> \

                                           <name pos:start="83:44" pos:end="83:60"><name pos:start="83:44" pos:end="83:57">peak_decay_nrg</name><index pos:start="83:58" pos:end="83:60">[<expr pos:start="83:59" pos:end="83:59"><name pos:start="83:59" pos:end="83:59">i</name></expr>]</index></name> <operator pos:start="83:62" pos:end="83:62">+</operator> <literal type="number" pos:start="83:64" pos:end="83:73">0x40000000</literal><operator pos:start="83:74" pos:end="83:74">)</operator> <operator pos:start="83:76" pos:end="83:77">&gt;&gt;</operator> <literal type="number" pos:start="83:79" pos:end="83:80">31</literal><operator pos:start="83:81" pos:end="83:81">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:65"><expr pos:start="85:13" pos:end="85:64"><name pos:start="85:13" pos:end="85:29"><name pos:start="85:13" pos:end="85:26">peak_decay_nrg</name><index pos:start="85:27" pos:end="85:29">[<expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">i</name></expr>]</index></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <call pos:start="85:33" pos:end="85:64"><name pos:start="85:33" pos:end="85:37">FFMAX</name><argument_list pos:start="85:38" pos:end="85:64">(<argument pos:start="85:39" pos:end="85:50"><expr pos:start="85:39" pos:end="85:50"><name pos:start="85:39" pos:end="85:50">decayed_peak</name></expr></argument>, <argument pos:start="85:53" pos:end="85:63"><expr pos:start="85:53" pos:end="85:63"><name pos:start="85:53" pos:end="85:63"><name pos:start="85:53" pos:end="85:57">power</name><index pos:start="85:58" pos:end="85:60">[<expr pos:start="85:59" pos:end="85:59"><name pos:start="85:59" pos:end="85:59">i</name></expr>]</index><index pos:start="85:61" pos:end="85:63">[<expr pos:start="85:62" pos:end="85:62"><name pos:start="85:62" pos:end="85:62">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:72"><expr pos:start="87:13" pos:end="87:71"><name pos:start="87:13" pos:end="87:27"><name pos:start="87:13" pos:end="87:24">power_smooth</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><name pos:start="87:26" pos:end="87:26">i</name></expr>]</index></name> <operator pos:start="87:29" pos:end="87:30">+=</operator> <operator pos:start="87:32" pos:end="87:32">(</operator><name pos:start="87:33" pos:end="87:43"><name pos:start="87:33" pos:end="87:37">power</name><index pos:start="87:38" pos:end="87:40">[<expr pos:start="87:39" pos:end="87:39"><name pos:start="87:39" pos:end="87:39">i</name></expr>]</index><index pos:start="87:41" pos:end="87:43">[<expr pos:start="87:42" pos:end="87:42"><name pos:start="87:42" pos:end="87:42">n</name></expr>]</index></name> <operator pos:start="87:45" pos:end="87:45">-</operator> <name pos:start="87:47" pos:end="87:61"><name pos:start="87:47" pos:end="87:58">power_smooth</name><index pos:start="87:59" pos:end="87:61">[<expr pos:start="87:60" pos:end="87:60"><name pos:start="87:60" pos:end="87:60">i</name></expr>]</index></name> <operator pos:start="87:63" pos:end="87:63">+</operator> <literal type="number" pos:start="87:65" pos:end="87:65">2</literal><operator pos:start="87:66" pos:end="87:66">)</operator> <operator pos:start="87:68" pos:end="87:69">&gt;&gt;</operator> <literal type="number" pos:start="87:71" pos:end="87:71">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="91:78"><expr pos:start="89:13" pos:end="91:77"><name pos:start="89:13" pos:end="89:37"><name pos:start="89:13" pos:end="89:34">peak_decay_diff_smooth</name><index pos:start="89:35" pos:end="89:37">[<expr pos:start="89:36" pos:end="89:36"><name pos:start="89:36" pos:end="89:36">i</name></expr>]</index></name> <operator pos:start="89:39" pos:end="89:40">+=</operator> <operator pos:start="89:42" pos:end="89:42">(</operator><name pos:start="89:43" pos:end="89:59"><name pos:start="89:43" pos:end="89:56">peak_decay_nrg</name><index pos:start="89:57" pos:end="89:59">[<expr pos:start="89:58" pos:end="89:58"><name pos:start="89:58" pos:end="89:58">i</name></expr>]</index></name> <operator pos:start="89:61" pos:end="89:61">-</operator> <name pos:start="89:63" pos:end="89:73"><name pos:start="89:63" pos:end="89:67">power</name><index pos:start="89:68" pos:end="89:70">[<expr pos:start="89:69" pos:end="89:69"><name pos:start="89:69" pos:end="89:69">i</name></expr>]</index><index pos:start="89:71" pos:end="89:73">[<expr pos:start="89:72" pos:end="89:72"><name pos:start="89:72" pos:end="89:72">n</name></expr>]</index></name> <operator pos:start="89:75" pos:end="89:75">-</operator> \

                                          <name pos:start="91:43" pos:end="91:67"><name pos:start="91:43" pos:end="91:64">peak_decay_diff_smooth</name><index pos:start="91:65" pos:end="91:67">[<expr pos:start="91:66" pos:end="91:66"><name pos:start="91:66" pos:end="91:66">i</name></expr>]</index></name> <operator pos:start="91:69" pos:end="91:69">+</operator> <literal type="number" pos:start="91:71" pos:end="91:71">2</literal><operator pos:start="91:72" pos:end="91:72">)</operator> <operator pos:start="91:74" pos:end="91:75">&gt;&gt;</operator> <literal type="number" pos:start="91:77" pos:end="91:77">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:81"><expr pos:start="93:13" pos:end="93:80"><name pos:start="93:13" pos:end="93:17">denom</name> <operator pos:start="93:19" pos:end="93:19">=</operator> <name pos:start="93:21" pos:end="93:45"><name pos:start="93:21" pos:end="93:42">peak_decay_diff_smooth</name><index pos:start="93:43" pos:end="93:45">[<expr pos:start="93:44" pos:end="93:44"><name pos:start="93:44" pos:end="93:44">i</name></expr>]</index></name> <operator pos:start="93:47" pos:end="93:47">+</operator> <operator pos:start="93:49" pos:end="93:49">(</operator><name pos:start="93:50" pos:end="93:74"><name pos:start="93:50" pos:end="93:71">peak_decay_diff_smooth</name><index pos:start="93:72" pos:end="93:74">[<expr pos:start="93:73" pos:end="93:73"><name pos:start="93:73" pos:end="93:73">i</name></expr>]</index></name> <operator pos:start="93:76" pos:end="93:77">&gt;&gt;</operator> <literal type="number" pos:start="93:79" pos:end="93:79">1</literal><operator pos:start="93:80" pos:end="93:80">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="115:13"><if pos:start="95:13" pos:end="109:13">if <condition pos:start="95:16" pos:end="95:40">(<expr pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:21">denom</name> <operator pos:start="95:23" pos:end="95:23">&gt;</operator> <name pos:start="95:25" pos:end="95:39"><name pos:start="95:25" pos:end="95:36">power_smooth</name><index pos:start="95:37" pos:end="95:39">[<expr pos:start="95:38" pos:end="95:38"><name pos:start="95:38" pos:end="95:38">i</name></expr>]</index></name></expr>)</condition> <block pos:start="95:42" pos:end="109:13">{<block_content pos:start="97:15" pos:end="107:55">

              <decl_stmt pos:start="97:15" pos:end="97:38"><decl pos:start="97:15" pos:end="97:37"><type pos:start="97:15" pos:end="97:17"><name pos:start="97:15" pos:end="97:17">int</name></type> <name pos:start="97:19" pos:end="97:19">p</name> <init pos:start="97:21" pos:end="97:37">= <expr pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:34">power_smooth</name><index pos:start="97:35" pos:end="97:37">[<expr pos:start="97:36" pos:end="97:36"><name pos:start="97:36" pos:end="97:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

              <while pos:start="99:15" pos:end="105:15">while <condition pos:start="99:21" pos:end="99:40">(<expr pos:start="99:22" pos:end="99:39"><name pos:start="99:22" pos:end="99:26">denom</name> <operator pos:start="99:28" pos:end="99:28">&lt;</operator> <literal type="number" pos:start="99:30" pos:end="99:39">0x40000000</literal></expr>)</condition> <block pos:start="99:42" pos:end="105:15">{<block_content pos:start="101:17" pos:end="103:24">

                <expr_stmt pos:start="101:17" pos:end="101:28"><expr pos:start="101:17" pos:end="101:27"><name pos:start="101:17" pos:end="101:21">denom</name> <operator pos:start="101:23" pos:end="101:25">&lt;&lt;=</operator> <literal type="number" pos:start="101:27" pos:end="101:27">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:24"><expr pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:17">p</name> <operator pos:start="103:19" pos:end="103:21">&lt;&lt;=</operator> <literal type="number" pos:start="103:23" pos:end="103:23">1</literal></expr>;</expr_stmt>

              </block_content>}</block></while>

              <expr_stmt pos:start="107:15" pos:end="107:55"><expr pos:start="107:15" pos:end="107:54"><name pos:start="107:15" pos:end="107:34"><name pos:start="107:15" pos:end="107:28">transient_gain</name><index pos:start="107:29" pos:end="107:31">[<expr pos:start="107:30" pos:end="107:30"><name pos:start="107:30" pos:end="107:30">i</name></expr>]</index><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><name pos:start="107:33" pos:end="107:33">n</name></expr>]</index></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <name pos:start="107:38" pos:end="107:38">p</name> <operator pos:start="107:40" pos:end="107:40">/</operator> <operator pos:start="107:42" pos:end="107:42">(</operator><name pos:start="107:43" pos:end="107:47">denom</name> <operator pos:start="107:49" pos:end="107:50">&gt;&gt;</operator> <literal type="number" pos:start="107:52" pos:end="107:53">16</literal><operator pos:start="107:54" pos:end="107:54">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="111:13" pos:end="115:13">else <block pos:start="111:18" pos:end="115:13">{<block_content pos:start="113:15" pos:end="113:45">

              <expr_stmt pos:start="113:15" pos:end="113:45"><expr pos:start="113:15" pos:end="113:44"><name pos:start="113:15" pos:end="113:34"><name pos:start="113:15" pos:end="113:28">transient_gain</name><index pos:start="113:29" pos:end="113:31">[<expr pos:start="113:30" pos:end="113:30"><name pos:start="113:30" pos:end="113:30">i</name></expr>]</index><index pos:start="113:32" pos:end="113:34">[<expr pos:start="113:33" pos:end="113:33"><name pos:start="113:33" pos:end="113:33">n</name></expr>]</index></name> <operator pos:start="113:36" pos:end="113:36">=</operator> <literal type="number" pos:start="113:38" pos:end="113:38">1</literal> <operator pos:start="113:40" pos:end="113:41">&lt;&lt;</operator> <literal type="number" pos:start="113:43" pos:end="113:44">16</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

<cpp:else pos:start="121:1" pos:end="121:5">#<cpp:directive pos:start="121:2" pos:end="121:5">else</cpp:directive></cpp:else>

    <for pos:start="123:5" pos:end="150:0">for <control pos:start="123:9" pos:end="123:44">(<init pos:start="123:10" pos:end="123:15"><expr pos:start="123:10" pos:end="123:14"><name pos:start="123:10" pos:end="123:10">i</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <literal type="number" pos:start="123:14" pos:end="123:14">0</literal></expr>;</init> <condition pos:start="123:17" pos:end="123:39"><expr pos:start="123:17" pos:end="123:38"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&lt;</operator> <name pos:start="123:21" pos:end="123:38"><name pos:start="123:21" pos:end="123:32">NR_PAR_BANDS</name><index pos:start="123:33" pos:end="123:38">[<expr pos:start="123:34" pos:end="123:37"><name pos:start="123:34" pos:end="123:37">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="123:41" pos:end="123:43"><expr pos:start="123:41" pos:end="123:43"><name pos:start="123:41" pos:end="123:41">i</name><operator pos:start="123:42" pos:end="123:43">++</operator></expr></incr>)</control> <block pos:start="123:46" pos:end="150:0">{<block_content pos:start="125:9" pos:end="143:9">

        <for pos:start="125:9" pos:end="143:9">for <control pos:start="125:13" pos:end="125:33">(<init pos:start="125:14" pos:end="125:20"><expr pos:start="125:14" pos:end="125:19"><name pos:start="125:14" pos:end="125:14">n</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <name pos:start="125:18" pos:end="125:19">n0</name></expr>;</init> <condition pos:start="125:22" pos:end="125:28"><expr pos:start="125:22" pos:end="125:27"><name pos:start="125:22" pos:end="125:22">n</name> <operator pos:start="125:24" pos:end="125:24">&lt;</operator> <name pos:start="125:26" pos:end="125:27">nL</name></expr>;</condition> <incr pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:30">n</name><operator pos:start="125:31" pos:end="125:32">++</operator></expr></incr>)</control> <block pos:start="125:35" pos:end="143:9">{<block_content pos:start="127:13" pos:end="141:72">

            <decl_stmt pos:start="127:13" pos:end="127:71"><decl pos:start="127:13" pos:end="127:70"><type pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:17">float</name></type> <name pos:start="127:19" pos:end="127:30">decayed_peak</name> <init pos:start="127:32" pos:end="127:70">= <expr pos:start="127:34" pos:end="127:70"><name pos:start="127:34" pos:end="127:50">peak_decay_factor</name> <operator pos:start="127:52" pos:end="127:52">*</operator> <name pos:start="127:54" pos:end="127:70"><name pos:start="127:54" pos:end="127:67">peak_decay_nrg</name><index pos:start="127:68" pos:end="127:70">[<expr pos:start="127:69" pos:end="127:69"><name pos:start="127:69" pos:end="127:69">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="129:13" pos:end="129:24"><decl pos:start="129:13" pos:end="129:23"><type pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:17">float</name></type> <name pos:start="129:19" pos:end="129:23">denom</name></decl>;</decl_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:65"><expr pos:start="131:13" pos:end="131:64"><name pos:start="131:13" pos:end="131:29"><name pos:start="131:13" pos:end="131:26">peak_decay_nrg</name><index pos:start="131:27" pos:end="131:29">[<expr pos:start="131:28" pos:end="131:28"><name pos:start="131:28" pos:end="131:28">i</name></expr>]</index></name> <operator pos:start="131:31" pos:end="131:31">=</operator> <call pos:start="131:33" pos:end="131:64"><name pos:start="131:33" pos:end="131:37">FFMAX</name><argument_list pos:start="131:38" pos:end="131:64">(<argument pos:start="131:39" pos:end="131:50"><expr pos:start="131:39" pos:end="131:50"><name pos:start="131:39" pos:end="131:50">decayed_peak</name></expr></argument>, <argument pos:start="131:53" pos:end="131:63"><expr pos:start="131:53" pos:end="131:63"><name pos:start="131:53" pos:end="131:63"><name pos:start="131:53" pos:end="131:57">power</name><index pos:start="131:58" pos:end="131:60">[<expr pos:start="131:59" pos:end="131:59"><name pos:start="131:59" pos:end="131:59">i</name></expr>]</index><index pos:start="131:61" pos:end="131:63">[<expr pos:start="131:62" pos:end="131:62"><name pos:start="131:62" pos:end="131:62">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:74"><expr pos:start="133:13" pos:end="133:73"><name pos:start="133:13" pos:end="133:27"><name pos:start="133:13" pos:end="133:24">power_smooth</name><index pos:start="133:25" pos:end="133:27">[<expr pos:start="133:26" pos:end="133:26"><name pos:start="133:26" pos:end="133:26">i</name></expr>]</index></name> <operator pos:start="133:29" pos:end="133:30">+=</operator> <name pos:start="133:32" pos:end="133:39">a_smooth</name> <operator pos:start="133:41" pos:end="133:41">*</operator> <operator pos:start="133:43" pos:end="133:43">(</operator><name pos:start="133:44" pos:end="133:54"><name pos:start="133:44" pos:end="133:48">power</name><index pos:start="133:49" pos:end="133:51">[<expr pos:start="133:50" pos:end="133:50"><name pos:start="133:50" pos:end="133:50">i</name></expr>]</index><index pos:start="133:52" pos:end="133:54">[<expr pos:start="133:53" pos:end="133:53"><name pos:start="133:53" pos:end="133:53">n</name></expr>]</index></name> <operator pos:start="133:56" pos:end="133:56">-</operator> <name pos:start="133:58" pos:end="133:72"><name pos:start="133:58" pos:end="133:69">power_smooth</name><index pos:start="133:70" pos:end="133:72">[<expr pos:start="133:71" pos:end="133:71"><name pos:start="133:71" pos:end="133:71">i</name></expr>]</index></name><operator pos:start="133:73" pos:end="133:73">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:114"><expr pos:start="135:13" pos:end="135:113"><name pos:start="135:13" pos:end="135:37"><name pos:start="135:13" pos:end="135:34">peak_decay_diff_smooth</name><index pos:start="135:35" pos:end="135:37">[<expr pos:start="135:36" pos:end="135:36"><name pos:start="135:36" pos:end="135:36">i</name></expr>]</index></name> <operator pos:start="135:39" pos:end="135:40">+=</operator> <name pos:start="135:42" pos:end="135:49">a_smooth</name> <operator pos:start="135:51" pos:end="135:51">*</operator> <operator pos:start="135:53" pos:end="135:53">(</operator><name pos:start="135:54" pos:end="135:70"><name pos:start="135:54" pos:end="135:67">peak_decay_nrg</name><index pos:start="135:68" pos:end="135:70">[<expr pos:start="135:69" pos:end="135:69"><name pos:start="135:69" pos:end="135:69">i</name></expr>]</index></name> <operator pos:start="135:72" pos:end="135:72">-</operator> <name pos:start="135:74" pos:end="135:84"><name pos:start="135:74" pos:end="135:78">power</name><index pos:start="135:79" pos:end="135:81">[<expr pos:start="135:80" pos:end="135:80"><name pos:start="135:80" pos:end="135:80">i</name></expr>]</index><index pos:start="135:82" pos:end="135:84">[<expr pos:start="135:83" pos:end="135:83"><name pos:start="135:83" pos:end="135:83">n</name></expr>]</index></name> <operator pos:start="135:86" pos:end="135:86">-</operator> <name pos:start="135:88" pos:end="135:112"><name pos:start="135:88" pos:end="135:109">peak_decay_diff_smooth</name><index pos:start="135:110" pos:end="135:112">[<expr pos:start="135:111" pos:end="135:111"><name pos:start="135:111" pos:end="135:111">i</name></expr>]</index></name><operator pos:start="135:113" pos:end="135:113">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:65"><expr pos:start="137:13" pos:end="137:64"><name pos:start="137:13" pos:end="137:17">denom</name> <operator pos:start="137:19" pos:end="137:19">=</operator> <name pos:start="137:21" pos:end="137:36">transient_impact</name> <operator pos:start="137:38" pos:end="137:38">*</operator> <name pos:start="137:40" pos:end="137:64"><name pos:start="137:40" pos:end="137:61">peak_decay_diff_smooth</name><index pos:start="137:62" pos:end="137:64">[<expr pos:start="137:63" pos:end="137:63"><name pos:start="137:63" pos:end="137:63">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="141:72"><expr pos:start="139:13" pos:end="141:71"><name pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:26">transient_gain</name><index pos:start="139:27" pos:end="139:29">[<expr pos:start="139:28" pos:end="139:28"><name pos:start="139:28" pos:end="139:28">i</name></expr>]</index><index pos:start="139:30" pos:end="139:32">[<expr pos:start="139:31" pos:end="139:31"><name pos:start="139:31" pos:end="139:31">n</name></expr>]</index></name>   <operator pos:start="139:36" pos:end="139:36">=</operator> <ternary pos:start="139:38" pos:end="141:71"><condition pos:start="139:38" pos:end="139:64"><expr pos:start="139:38" pos:end="139:62"><operator pos:start="139:38" pos:end="139:38">(</operator><name pos:start="139:39" pos:end="139:43">denom</name> <operator pos:start="139:45" pos:end="139:45">&gt;</operator> <name pos:start="139:47" pos:end="139:61"><name pos:start="139:47" pos:end="139:58">power_smooth</name><index pos:start="139:59" pos:end="139:61">[<expr pos:start="139:60" pos:end="139:60"><name pos:start="139:60" pos:end="139:60">i</name></expr>]</index></name><operator pos:start="139:62" pos:end="139:62">)</operator></expr> ?</condition><then pos:start="141:42" pos:end="141:64">

                                         <expr pos:start="141:42" pos:end="141:64"><name pos:start="141:42" pos:end="141:56"><name pos:start="141:42" pos:end="141:53">power_smooth</name><index pos:start="141:54" pos:end="141:56">[<expr pos:start="141:55" pos:end="141:55"><name pos:start="141:55" pos:end="141:55">i</name></expr>]</index></name> <operator pos:start="141:58" pos:end="141:58">/</operator> <name pos:start="141:60" pos:end="141:64">denom</name></expr> </then><else pos:start="141:66" pos:end="141:71">: <expr pos:start="141:68" pos:end="141:71"><literal type="number" pos:start="141:68" pos:end="141:71">1.0f</literal></expr></else></ternary></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



<cpp:endif pos:start="149:1" pos:end="149:6">#<cpp:directive pos:start="149:2" pos:end="149:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="149:8" pos:end="149:22">/* USE_FIXED */</comment>

    <comment type="line" pos:start="151:5" pos:end="151:43">//Decorrelation and transient reduction</comment>

    <comment type="line" pos:start="153:5" pos:end="153:46">//                         PS_AP_LINKS - 1</comment>

    <comment type="line" pos:start="155:5" pos:end="155:42">//                               -----</comment>

    <comment type="line" pos:start="157:5" pos:end="157:105">//                                | |  Q_fract_allpass[k][m]*z^-link_delay[m] - a[m]*g_decay_slope[k]</comment>

    <comment type="line" pos:start="159:5" pos:end="159:106">//H[k][z] = z^-2 * phi_fract[k] * | | ----------------------------------------------------------------</comment>

    <comment type="line" pos:start="161:5" pos:end="161:106">//                                | | 1 - a[m]*g_decay_slope[k]*Q_fract_allpass[k][m]*z^-link_delay[m]</comment>

    <comment type="line" pos:start="163:5" pos:end="163:42">//                               m = 0</comment>

    <comment type="line" pos:start="165:5" pos:end="165:69">//d[k][z] (out) = transient_gain_mapped[k][z] * H[k][z] * s[k][z]</comment>

    <for pos:start="167:5" pos:end="221:5">for <control pos:start="167:9" pos:end="167:48">(<init pos:start="167:10" pos:end="167:15"><expr pos:start="167:10" pos:end="167:14"><name pos:start="167:10" pos:end="167:10">k</name> <operator pos:start="167:12" pos:end="167:12">=</operator> <literal type="number" pos:start="167:14" pos:end="167:14">0</literal></expr>;</init> <condition pos:start="167:17" pos:end="167:43"><expr pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:17">k</name> <operator pos:start="167:19" pos:end="167:19">&lt;</operator> <name pos:start="167:21" pos:end="167:42"><name pos:start="167:21" pos:end="167:36">NR_ALLPASS_BANDS</name><index pos:start="167:37" pos:end="167:42">[<expr pos:start="167:38" pos:end="167:41"><name pos:start="167:38" pos:end="167:41">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="167:45" pos:end="167:47"><expr pos:start="167:45" pos:end="167:47"><name pos:start="167:45" pos:end="167:45">k</name><operator pos:start="167:46" pos:end="167:47">++</operator></expr></incr>)</control> <block pos:start="167:50" pos:end="221:5">{<block_content pos:start="169:9" pos:end="219:71">

        <decl_stmt pos:start="169:9" pos:end="172:0"><decl pos:start="169:9" pos:end="169:25"><type pos:start="169:9" pos:end="169:11"><name pos:start="169:9" pos:end="169:11">int</name></type> <name pos:start="169:13" pos:end="169:13">b</name> <init pos:start="169:15" pos:end="169:25">= <expr pos:start="169:17" pos:end="169:25"><name pos:start="169:17" pos:end="169:25"><name pos:start="169:17" pos:end="169:22">k_to_i</name><index pos:start="169:23" pos:end="169:25">[<expr pos:start="169:24" pos:end="169:24"><name pos:start="169:24" pos:end="169:24">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="171:1" pos:end="171:13">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:13"><name pos:start="171:5" pos:end="171:13">USE_FIXED</name></expr></cpp:if>

        <decl_stmt pos:start="173:9" pos:end="173:26"><decl pos:start="173:9" pos:end="173:25"><type pos:start="173:9" pos:end="173:11"><name pos:start="173:9" pos:end="173:11">int</name></type> <name pos:start="173:13" pos:end="173:25">g_decay_slope</name></decl>;</decl_stmt>



        <if_stmt pos:start="177:9" pos:end="196:0"><if pos:start="177:9" pos:end="181:9">if <condition pos:start="177:12" pos:end="177:40">(<expr pos:start="177:13" pos:end="177:39"><name pos:start="177:13" pos:end="177:13">k</name> <operator pos:start="177:15" pos:end="177:15">-</operator> <name pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:28">DECAY_CUTOFF</name><index pos:start="177:29" pos:end="177:34">[<expr pos:start="177:30" pos:end="177:33"><name pos:start="177:30" pos:end="177:33">is34</name></expr>]</index></name> <operator pos:start="177:36" pos:end="177:37">&lt;=</operator> <literal type="number" pos:start="177:39" pos:end="177:39">0</literal></expr>)</condition> <block pos:start="177:42" pos:end="181:9">{<block_content pos:start="179:11" pos:end="179:34">

          <expr_stmt pos:start="179:11" pos:end="179:34"><expr pos:start="179:11" pos:end="179:33"><name pos:start="179:11" pos:end="179:23">g_decay_slope</name> <operator pos:start="179:25" pos:end="179:25">=</operator> <literal type="number" pos:start="179:27" pos:end="179:27">1</literal> <operator pos:start="179:29" pos:end="179:30">&lt;&lt;</operator> <literal type="number" pos:start="179:32" pos:end="179:33">30</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="183:9" pos:end="187:9">else if <condition pos:start="183:17" pos:end="183:46">(<expr pos:start="183:18" pos:end="183:45"><name pos:start="183:18" pos:end="183:18">k</name> <operator pos:start="183:20" pos:end="183:20">-</operator> <name pos:start="183:22" pos:end="183:39"><name pos:start="183:22" pos:end="183:33">DECAY_CUTOFF</name><index pos:start="183:34" pos:end="183:39">[<expr pos:start="183:35" pos:end="183:38"><name pos:start="183:35" pos:end="183:38">is34</name></expr>]</index></name> <operator pos:start="183:41" pos:end="183:42">&gt;=</operator> <literal type="number" pos:start="183:44" pos:end="183:45">20</literal></expr>)</condition> <block pos:start="183:48" pos:end="187:9">{<block_content pos:start="185:11" pos:end="185:28">

          <expr_stmt pos:start="185:11" pos:end="185:28"><expr pos:start="185:11" pos:end="185:27"><name pos:start="185:11" pos:end="185:23">g_decay_slope</name> <operator pos:start="185:25" pos:end="185:25">=</operator> <literal type="number" pos:start="185:27" pos:end="185:27">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <else pos:start="189:9" pos:end="196:0">else <block pos:start="189:14" pos:end="196:0">{<block_content pos:start="191:11" pos:end="191:77">

          <expr_stmt pos:start="191:11" pos:end="191:77"><expr pos:start="191:11" pos:end="191:76"><name pos:start="191:11" pos:end="191:23">g_decay_slope</name> <operator pos:start="191:25" pos:end="191:25">=</operator> <operator pos:start="191:27" pos:end="191:27">(</operator><literal type="number" pos:start="191:28" pos:end="191:28">1</literal> <operator pos:start="191:30" pos:end="191:31">&lt;&lt;</operator> <literal type="number" pos:start="191:33" pos:end="191:34">30</literal><operator pos:start="191:35" pos:end="191:35">)</operator> <operator pos:start="191:37" pos:end="191:37">-</operator> <name pos:start="191:39" pos:end="191:49">DECAY_SLOPE</name> <operator pos:start="191:51" pos:end="191:51">*</operator> <operator pos:start="191:53" pos:end="191:53">(</operator><name pos:start="191:54" pos:end="191:54">k</name> <operator pos:start="191:56" pos:end="191:56">-</operator> <name pos:start="191:58" pos:end="191:75"><name pos:start="191:58" pos:end="191:69">DECAY_CUTOFF</name><index pos:start="191:70" pos:end="191:75">[<expr pos:start="191:71" pos:end="191:74"><name pos:start="191:71" pos:end="191:74">is34</name></expr>]</index></name><operator pos:start="191:76" pos:end="191:76">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:else pos:start="195:1" pos:end="195:5">#<cpp:directive pos:start="195:2" pos:end="195:5">else</cpp:directive></cpp:else>

        <decl_stmt pos:start="197:9" pos:end="197:75"><decl pos:start="197:9" pos:end="197:74"><type pos:start="197:9" pos:end="197:13"><name pos:start="197:9" pos:end="197:13">float</name></type> <name pos:start="197:15" pos:end="197:27">g_decay_slope</name> <init pos:start="197:29" pos:end="197:74">= <expr pos:start="197:31" pos:end="197:74"><literal type="number" pos:start="197:31" pos:end="197:35">1.f</literal> <operator pos:start="197:35" pos:end="197:35">-</operator> <name pos:start="197:37" pos:end="197:47">DECAY_SLOPE</name> <operator pos:start="197:49" pos:end="197:49">*</operator> <operator pos:start="197:51" pos:end="197:51">(</operator><name pos:start="197:52" pos:end="197:52">k</name> <operator pos:start="197:54" pos:end="197:54">-</operator> <name pos:start="197:56" pos:end="197:73"><name pos:start="197:56" pos:end="197:67">DECAY_CUTOFF</name><index pos:start="197:68" pos:end="197:73">[<expr pos:start="197:69" pos:end="197:72"><name pos:start="197:69" pos:end="197:72">is34</name></expr>]</index></name><operator pos:start="197:74" pos:end="197:74">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="199:9" pos:end="202:0"><expr pos:start="199:9" pos:end="199:57"><name pos:start="199:9" pos:end="199:21">g_decay_slope</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <call pos:start="199:25" pos:end="199:57"><name pos:start="199:25" pos:end="199:32">av_clipf</name><argument_list pos:start="199:33" pos:end="199:57">(<argument pos:start="199:34" pos:end="199:46"><expr pos:start="199:34" pos:end="199:46"><name pos:start="199:34" pos:end="199:46">g_decay_slope</name></expr></argument>, <argument pos:start="199:49" pos:end="199:51"><expr pos:start="199:49" pos:end="199:51"><literal type="number" pos:start="199:49" pos:end="199:51">0.f</literal></expr></argument>, <argument pos:start="199:54" pos:end="199:56"><expr pos:start="199:54" pos:end="199:56"><literal type="number" pos:start="199:54" pos:end="199:56">1.f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="201:1" pos:end="201:6">#<cpp:directive pos:start="201:2" pos:end="201:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="201:8" pos:end="201:22">/* USE_FIXED */</comment>

        <expr_stmt pos:start="203:9" pos:end="203:72"><expr pos:start="203:9" pos:end="203:71"><call pos:start="203:9" pos:end="203:71"><name pos:start="203:9" pos:end="203:14">memcpy</name><argument_list pos:start="203:15" pos:end="203:71">(<argument pos:start="203:16" pos:end="203:23"><expr pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:23"><name pos:start="203:16" pos:end="203:20">delay</name><index pos:start="203:21" pos:end="203:23">[<expr pos:start="203:22" pos:end="203:22"><name pos:start="203:22" pos:end="203:22">k</name></expr>]</index></name></expr></argument>, <argument pos:start="203:26" pos:end="203:36"><expr pos:start="203:26" pos:end="203:36"><name pos:start="203:26" pos:end="203:33"><name pos:start="203:26" pos:end="203:30">delay</name><index pos:start="203:31" pos:end="203:33">[<expr pos:start="203:32" pos:end="203:32"><name pos:start="203:32" pos:end="203:32">k</name></expr>]</index></name><operator pos:start="203:34" pos:end="203:34">+</operator><name pos:start="203:35" pos:end="203:36">nL</name></expr></argument>, <argument pos:start="203:39" pos:end="203:70"><expr pos:start="203:39" pos:end="203:70"><name pos:start="203:39" pos:end="203:50">PS_MAX_DELAY</name><operator pos:start="203:51" pos:end="203:51">*</operator><sizeof pos:start="203:52" pos:end="203:70">sizeof<argument_list pos:start="203:58" pos:end="203:70">(<argument pos:start="203:59" pos:end="203:69"><expr pos:start="203:59" pos:end="203:69"><name pos:start="203:59" pos:end="203:69"><name pos:start="203:59" pos:end="203:63">delay</name><index pos:start="203:64" pos:end="203:66">[<expr pos:start="203:65" pos:end="203:65"><name pos:start="203:65" pos:end="203:65">k</name></expr>]</index><index pos:start="203:67" pos:end="203:69">[<expr pos:start="203:68" pos:end="203:68"><literal type="number" pos:start="203:68" pos:end="203:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:77"><expr pos:start="205:9" pos:end="205:76"><call pos:start="205:9" pos:end="205:76"><name pos:start="205:9" pos:end="205:14">memcpy</name><argument_list pos:start="205:15" pos:end="205:76">(<argument pos:start="205:16" pos:end="205:36"><expr pos:start="205:16" pos:end="205:36"><name pos:start="205:16" pos:end="205:23"><name pos:start="205:16" pos:end="205:20">delay</name><index pos:start="205:21" pos:end="205:23">[<expr pos:start="205:22" pos:end="205:22"><name pos:start="205:22" pos:end="205:22">k</name></expr>]</index></name><operator pos:start="205:24" pos:end="205:24">+</operator><name pos:start="205:25" pos:end="205:36">PS_MAX_DELAY</name></expr></argument>, <argument pos:start="205:39" pos:end="205:42"><expr pos:start="205:39" pos:end="205:42"><name pos:start="205:39" pos:end="205:42"><name pos:start="205:39" pos:end="205:39">s</name><index pos:start="205:40" pos:end="205:42">[<expr pos:start="205:41" pos:end="205:41"><name pos:start="205:41" pos:end="205:41">k</name></expr>]</index></name></expr></argument>, <argument pos:start="205:45" pos:end="205:75"><expr pos:start="205:45" pos:end="205:75"><name pos:start="205:45" pos:end="205:55">numQMFSlots</name><operator pos:start="205:56" pos:end="205:56">*</operator><sizeof pos:start="205:57" pos:end="205:75">sizeof<argument_list pos:start="205:63" pos:end="205:75">(<argument pos:start="205:64" pos:end="205:74"><expr pos:start="205:64" pos:end="205:74"><name pos:start="205:64" pos:end="205:74"><name pos:start="205:64" pos:end="205:68">delay</name><index pos:start="205:69" pos:end="205:71">[<expr pos:start="205:70" pos:end="205:70"><name pos:start="205:70" pos:end="205:70">k</name></expr>]</index><index pos:start="205:72" pos:end="205:74">[<expr pos:start="205:73" pos:end="205:73"><literal type="number" pos:start="205:73" pos:end="205:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="207:9" pos:end="211:9">for <control pos:start="207:13" pos:end="207:41">(<init pos:start="207:14" pos:end="207:19"><expr pos:start="207:14" pos:end="207:18"><name pos:start="207:14" pos:end="207:14">m</name> <operator pos:start="207:16" pos:end="207:16">=</operator> <literal type="number" pos:start="207:18" pos:end="207:18">0</literal></expr>;</init> <condition pos:start="207:21" pos:end="207:36"><expr pos:start="207:21" pos:end="207:35"><name pos:start="207:21" pos:end="207:21">m</name> <operator pos:start="207:23" pos:end="207:23">&lt;</operator> <name pos:start="207:25" pos:end="207:35">PS_AP_LINKS</name></expr>;</condition> <incr pos:start="207:38" pos:end="207:40"><expr pos:start="207:38" pos:end="207:40"><name pos:start="207:38" pos:end="207:38">m</name><operator pos:start="207:39" pos:end="207:40">++</operator></expr></incr>)</control> <block pos:start="207:43" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:104">

            <expr_stmt pos:start="209:13" pos:end="209:104"><expr pos:start="209:13" pos:end="209:103"><call pos:start="209:13" pos:end="209:103"><name pos:start="209:13" pos:end="209:18">memcpy</name><argument_list pos:start="209:19" pos:end="209:103">(<argument pos:start="209:20" pos:end="209:33"><expr pos:start="209:20" pos:end="209:33"><name pos:start="209:20" pos:end="209:33"><name pos:start="209:20" pos:end="209:27">ap_delay</name><index pos:start="209:28" pos:end="209:30">[<expr pos:start="209:29" pos:end="209:29"><name pos:start="209:29" pos:end="209:29">k</name></expr>]</index><index pos:start="209:31" pos:end="209:33">[<expr pos:start="209:32" pos:end="209:32"><name pos:start="209:32" pos:end="209:32">m</name></expr>]</index></name></expr></argument>,   <argument pos:start="209:38" pos:end="209:63"><expr pos:start="209:38" pos:end="209:63"><name pos:start="209:38" pos:end="209:51"><name pos:start="209:38" pos:end="209:45">ap_delay</name><index pos:start="209:46" pos:end="209:48">[<expr pos:start="209:47" pos:end="209:47"><name pos:start="209:47" pos:end="209:47">k</name></expr>]</index><index pos:start="209:49" pos:end="209:51">[<expr pos:start="209:50" pos:end="209:50"><name pos:start="209:50" pos:end="209:50">m</name></expr>]</index></name><operator pos:start="209:52" pos:end="209:52">+</operator><name pos:start="209:53" pos:end="209:63">numQMFSlots</name></expr></argument>,           <argument pos:start="209:76" pos:end="209:102"><expr pos:start="209:76" pos:end="209:102"><literal type="number" pos:start="209:76" pos:end="209:76">5</literal><operator pos:start="209:77" pos:end="209:77">*</operator><sizeof pos:start="209:78" pos:end="209:102">sizeof<argument_list pos:start="209:84" pos:end="209:102">(<argument pos:start="209:85" pos:end="209:101"><expr pos:start="209:85" pos:end="209:101"><name pos:start="209:85" pos:end="209:101"><name pos:start="209:85" pos:end="209:92">ap_delay</name><index pos:start="209:93" pos:end="209:95">[<expr pos:start="209:94" pos:end="209:94"><name pos:start="209:94" pos:end="209:94">k</name></expr>]</index><index pos:start="209:96" pos:end="209:98">[<expr pos:start="209:97" pos:end="209:97"><name pos:start="209:97" pos:end="209:97">m</name></expr>]</index><index pos:start="209:99" pos:end="209:101">[<expr pos:start="209:100" pos:end="209:100"><literal type="number" pos:start="209:100" pos:end="209:100">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="213:9" pos:end="219:71"><expr pos:start="213:9" pos:end="219:70"><call pos:start="213:9" pos:end="219:70"><name pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:10">ps</name><operator pos:start="213:11" pos:end="213:12">-&gt;</operator><name pos:start="213:13" pos:end="213:15">dsp</name><operator pos:start="213:16" pos:end="213:16">.</operator><name pos:start="213:17" pos:end="213:27">decorrelate</name></name><argument_list pos:start="213:28" pos:end="219:70">(<argument pos:start="213:29" pos:end="213:34"><expr pos:start="213:29" pos:end="213:34"><name pos:start="213:29" pos:end="213:34"><name pos:start="213:29" pos:end="213:31">out</name><index pos:start="213:32" pos:end="213:34">[<expr pos:start="213:33" pos:end="213:33"><name pos:start="213:33" pos:end="213:33">k</name></expr>]</index></name></expr></argument>, <argument pos:start="213:37" pos:end="213:63"><expr pos:start="213:37" pos:end="213:63"><name pos:start="213:37" pos:end="213:44"><name pos:start="213:37" pos:end="213:41">delay</name><index pos:start="213:42" pos:end="213:44">[<expr pos:start="213:43" pos:end="213:43"><name pos:start="213:43" pos:end="213:43">k</name></expr>]</index></name> <operator pos:start="213:46" pos:end="213:46">+</operator> <name pos:start="213:48" pos:end="213:59">PS_MAX_DELAY</name> <operator pos:start="213:61" pos:end="213:61">-</operator> <literal type="number" pos:start="213:63" pos:end="213:63">2</literal></expr></argument>, <argument pos:start="213:66" pos:end="213:76"><expr pos:start="213:66" pos:end="213:76"><name pos:start="213:66" pos:end="213:76"><name pos:start="213:66" pos:end="213:73">ap_delay</name><index pos:start="213:74" pos:end="213:76">[<expr pos:start="213:75" pos:end="213:75"><name pos:start="213:75" pos:end="213:75">k</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="215:29" pos:end="215:46"><expr pos:start="215:29" pos:end="215:46"><name pos:start="215:29" pos:end="215:46"><name pos:start="215:29" pos:end="215:37">phi_fract</name><index pos:start="215:38" pos:end="215:43">[<expr pos:start="215:39" pos:end="215:42"><name pos:start="215:39" pos:end="215:42">is34</name></expr>]</index><index pos:start="215:44" pos:end="215:46">[<expr pos:start="215:45" pos:end="215:45"><name pos:start="215:45" pos:end="215:45">k</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="217:29" pos:end="217:76"><expr pos:start="217:29" pos:end="217:76"><operator pos:start="217:29" pos:end="217:29">(</operator><specifier pos:start="217:30" pos:end="217:34">const</specifier> <call pos:start="217:36" pos:end="217:47"><name pos:start="217:36" pos:end="217:43">INTFLOAT</name> <argument_list pos:start="217:45" pos:end="217:47">(<argument pos:start="217:46" pos:end="217:46"><expr pos:start="217:46" pos:end="217:46"><operator pos:start="217:46" pos:end="217:46">*</operator></expr></argument>)</argument_list></call><index pos:start="217:48" pos:end="217:50">[<expr pos:start="217:49" pos:end="217:49"><literal type="number" pos:start="217:49" pos:end="217:49">2</literal></expr>]</index><operator pos:start="217:51" pos:end="217:51">)</operator> <name pos:start="217:53" pos:end="217:76"><name pos:start="217:53" pos:end="217:67">Q_fract_allpass</name><index pos:start="217:68" pos:end="217:73">[<expr pos:start="217:69" pos:end="217:72"><name pos:start="217:69" pos:end="217:72">is34</name></expr>]</index><index pos:start="217:74" pos:end="217:76">[<expr pos:start="217:75" pos:end="217:75"><name pos:start="217:75" pos:end="217:75">k</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="219:29" pos:end="219:45"><expr pos:start="219:29" pos:end="219:45"><name pos:start="219:29" pos:end="219:45"><name pos:start="219:29" pos:end="219:42">transient_gain</name><index pos:start="219:43" pos:end="219:45">[<expr pos:start="219:44" pos:end="219:44"><name pos:start="219:44" pos:end="219:44">b</name></expr>]</index></name></expr></argument>, <argument pos:start="219:48" pos:end="219:60"><expr pos:start="219:48" pos:end="219:60"><name pos:start="219:48" pos:end="219:60">g_decay_slope</name></expr></argument>, <argument pos:start="219:63" pos:end="219:69"><expr pos:start="219:63" pos:end="219:69"><name pos:start="219:63" pos:end="219:64">nL</name> <operator pos:start="219:66" pos:end="219:66">-</operator> <name pos:start="219:68" pos:end="219:69">n0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="223:5" pos:end="237:5">for <control pos:start="223:9" pos:end="223:43">(<init pos:start="223:10" pos:end="223:10">;</init> <condition pos:start="223:12" pos:end="223:38"><expr pos:start="223:12" pos:end="223:37"><name pos:start="223:12" pos:end="223:12">k</name> <operator pos:start="223:14" pos:end="223:14">&lt;</operator> <name pos:start="223:16" pos:end="223:37"><name pos:start="223:16" pos:end="223:31">SHORT_DELAY_BAND</name><index pos:start="223:32" pos:end="223:37">[<expr pos:start="223:33" pos:end="223:36"><name pos:start="223:33" pos:end="223:36">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="223:40" pos:end="223:42"><expr pos:start="223:40" pos:end="223:42"><name pos:start="223:40" pos:end="223:40">k</name><operator pos:start="223:41" pos:end="223:42">++</operator></expr></incr>)</control> <block pos:start="223:45" pos:end="237:5">{<block_content pos:start="225:9" pos:end="235:60">

        <decl_stmt pos:start="225:9" pos:end="225:26"><decl pos:start="225:9" pos:end="225:25"><type pos:start="225:9" pos:end="225:11"><name pos:start="225:9" pos:end="225:11">int</name></type> <name pos:start="225:13" pos:end="225:13">i</name> <init pos:start="225:15" pos:end="225:25">= <expr pos:start="225:17" pos:end="225:25"><name pos:start="225:17" pos:end="225:25"><name pos:start="225:17" pos:end="225:22">k_to_i</name><index pos:start="225:23" pos:end="225:25">[<expr pos:start="225:24" pos:end="225:24"><name pos:start="225:24" pos:end="225:24">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:72"><expr pos:start="227:9" pos:end="227:71"><call pos:start="227:9" pos:end="227:71"><name pos:start="227:9" pos:end="227:14">memcpy</name><argument_list pos:start="227:15" pos:end="227:71">(<argument pos:start="227:16" pos:end="227:23"><expr pos:start="227:16" pos:end="227:23"><name pos:start="227:16" pos:end="227:23"><name pos:start="227:16" pos:end="227:20">delay</name><index pos:start="227:21" pos:end="227:23">[<expr pos:start="227:22" pos:end="227:22"><name pos:start="227:22" pos:end="227:22">k</name></expr>]</index></name></expr></argument>, <argument pos:start="227:26" pos:end="227:36"><expr pos:start="227:26" pos:end="227:36"><name pos:start="227:26" pos:end="227:33"><name pos:start="227:26" pos:end="227:30">delay</name><index pos:start="227:31" pos:end="227:33">[<expr pos:start="227:32" pos:end="227:32"><name pos:start="227:32" pos:end="227:32">k</name></expr>]</index></name><operator pos:start="227:34" pos:end="227:34">+</operator><name pos:start="227:35" pos:end="227:36">nL</name></expr></argument>, <argument pos:start="227:39" pos:end="227:70"><expr pos:start="227:39" pos:end="227:70"><name pos:start="227:39" pos:end="227:50">PS_MAX_DELAY</name><operator pos:start="227:51" pos:end="227:51">*</operator><sizeof pos:start="227:52" pos:end="227:70">sizeof<argument_list pos:start="227:58" pos:end="227:70">(<argument pos:start="227:59" pos:end="227:69"><expr pos:start="227:59" pos:end="227:69"><name pos:start="227:59" pos:end="227:69"><name pos:start="227:59" pos:end="227:63">delay</name><index pos:start="227:64" pos:end="227:66">[<expr pos:start="227:65" pos:end="227:65"><name pos:start="227:65" pos:end="227:65">k</name></expr>]</index><index pos:start="227:67" pos:end="227:69">[<expr pos:start="227:68" pos:end="227:68"><literal type="number" pos:start="227:68" pos:end="227:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:77"><expr pos:start="229:9" pos:end="229:76"><call pos:start="229:9" pos:end="229:76"><name pos:start="229:9" pos:end="229:14">memcpy</name><argument_list pos:start="229:15" pos:end="229:76">(<argument pos:start="229:16" pos:end="229:36"><expr pos:start="229:16" pos:end="229:36"><name pos:start="229:16" pos:end="229:23"><name pos:start="229:16" pos:end="229:20">delay</name><index pos:start="229:21" pos:end="229:23">[<expr pos:start="229:22" pos:end="229:22"><name pos:start="229:22" pos:end="229:22">k</name></expr>]</index></name><operator pos:start="229:24" pos:end="229:24">+</operator><name pos:start="229:25" pos:end="229:36">PS_MAX_DELAY</name></expr></argument>, <argument pos:start="229:39" pos:end="229:42"><expr pos:start="229:39" pos:end="229:42"><name pos:start="229:39" pos:end="229:42"><name pos:start="229:39" pos:end="229:39">s</name><index pos:start="229:40" pos:end="229:42">[<expr pos:start="229:41" pos:end="229:41"><name pos:start="229:41" pos:end="229:41">k</name></expr>]</index></name></expr></argument>, <argument pos:start="229:45" pos:end="229:75"><expr pos:start="229:45" pos:end="229:75"><name pos:start="229:45" pos:end="229:55">numQMFSlots</name><operator pos:start="229:56" pos:end="229:56">*</operator><sizeof pos:start="229:57" pos:end="229:75">sizeof<argument_list pos:start="229:63" pos:end="229:75">(<argument pos:start="229:64" pos:end="229:74"><expr pos:start="229:64" pos:end="229:74"><name pos:start="229:64" pos:end="229:74"><name pos:start="229:64" pos:end="229:68">delay</name><index pos:start="229:69" pos:end="229:71">[<expr pos:start="229:70" pos:end="229:70"><name pos:start="229:70" pos:end="229:70">k</name></expr>]</index><index pos:start="229:72" pos:end="229:74">[<expr pos:start="229:73" pos:end="229:73"><literal type="number" pos:start="229:73" pos:end="229:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="231:9" pos:end="231:22">//H = delay 14</comment>

        <expr_stmt pos:start="233:9" pos:end="235:60"><expr pos:start="233:9" pos:end="235:59"><call pos:start="233:9" pos:end="235:59"><name pos:start="233:9" pos:end="233:31"><name pos:start="233:9" pos:end="233:10">ps</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:15">dsp</name><operator pos:start="233:16" pos:end="233:16">.</operator><name pos:start="233:17" pos:end="233:31">mul_pair_single</name></name><argument_list pos:start="233:32" pos:end="235:59">(<argument pos:start="233:33" pos:end="233:38"><expr pos:start="233:33" pos:end="233:38"><name pos:start="233:33" pos:end="233:38"><name pos:start="233:33" pos:end="233:35">out</name><index pos:start="233:36" pos:end="233:38">[<expr pos:start="233:37" pos:end="233:37"><name pos:start="233:37" pos:end="233:37">k</name></expr>]</index></name></expr></argument>, <argument pos:start="233:41" pos:end="233:68"><expr pos:start="233:41" pos:end="233:68"><name pos:start="233:41" pos:end="233:48"><name pos:start="233:41" pos:end="233:45">delay</name><index pos:start="233:46" pos:end="233:48">[<expr pos:start="233:47" pos:end="233:47"><name pos:start="233:47" pos:end="233:47">k</name></expr>]</index></name> <operator pos:start="233:50" pos:end="233:50">+</operator> <name pos:start="233:52" pos:end="233:63">PS_MAX_DELAY</name> <operator pos:start="233:65" pos:end="233:65">-</operator> <literal type="number" pos:start="233:67" pos:end="233:68">14</literal></expr></argument>,

                                <argument pos:start="235:33" pos:end="235:49"><expr pos:start="235:33" pos:end="235:49"><name pos:start="235:33" pos:end="235:49"><name pos:start="235:33" pos:end="235:46">transient_gain</name><index pos:start="235:47" pos:end="235:49">[<expr pos:start="235:48" pos:end="235:48"><name pos:start="235:48" pos:end="235:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="235:52" pos:end="235:58"><expr pos:start="235:52" pos:end="235:58"><name pos:start="235:52" pos:end="235:53">nL</name> <operator pos:start="235:55" pos:end="235:55">-</operator> <name pos:start="235:57" pos:end="235:58">n0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="239:5" pos:end="253:5">for <control pos:start="239:9" pos:end="239:35">(<init pos:start="239:10" pos:end="239:10">;</init> <condition pos:start="239:12" pos:end="239:30"><expr pos:start="239:12" pos:end="239:29"><name pos:start="239:12" pos:end="239:12">k</name> <operator pos:start="239:14" pos:end="239:14">&lt;</operator> <name pos:start="239:16" pos:end="239:29"><name pos:start="239:16" pos:end="239:23">NR_BANDS</name><index pos:start="239:24" pos:end="239:29">[<expr pos:start="239:25" pos:end="239:28"><name pos:start="239:25" pos:end="239:28">is34</name></expr>]</index></name></expr>;</condition> <incr pos:start="239:32" pos:end="239:34"><expr pos:start="239:32" pos:end="239:34"><name pos:start="239:32" pos:end="239:32">k</name><operator pos:start="239:33" pos:end="239:34">++</operator></expr></incr>)</control> <block pos:start="239:37" pos:end="253:5">{<block_content pos:start="241:9" pos:end="251:60">

        <decl_stmt pos:start="241:9" pos:end="241:26"><decl pos:start="241:9" pos:end="241:25"><type pos:start="241:9" pos:end="241:11"><name pos:start="241:9" pos:end="241:11">int</name></type> <name pos:start="241:13" pos:end="241:13">i</name> <init pos:start="241:15" pos:end="241:25">= <expr pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:22">k_to_i</name><index pos:start="241:23" pos:end="241:25">[<expr pos:start="241:24" pos:end="241:24"><name pos:start="241:24" pos:end="241:24">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:72"><expr pos:start="243:9" pos:end="243:71"><call pos:start="243:9" pos:end="243:71"><name pos:start="243:9" pos:end="243:14">memcpy</name><argument_list pos:start="243:15" pos:end="243:71">(<argument pos:start="243:16" pos:end="243:23"><expr pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:20">delay</name><index pos:start="243:21" pos:end="243:23">[<expr pos:start="243:22" pos:end="243:22"><name pos:start="243:22" pos:end="243:22">k</name></expr>]</index></name></expr></argument>, <argument pos:start="243:26" pos:end="243:36"><expr pos:start="243:26" pos:end="243:36"><name pos:start="243:26" pos:end="243:33"><name pos:start="243:26" pos:end="243:30">delay</name><index pos:start="243:31" pos:end="243:33">[<expr pos:start="243:32" pos:end="243:32"><name pos:start="243:32" pos:end="243:32">k</name></expr>]</index></name><operator pos:start="243:34" pos:end="243:34">+</operator><name pos:start="243:35" pos:end="243:36">nL</name></expr></argument>, <argument pos:start="243:39" pos:end="243:70"><expr pos:start="243:39" pos:end="243:70"><name pos:start="243:39" pos:end="243:50">PS_MAX_DELAY</name><operator pos:start="243:51" pos:end="243:51">*</operator><sizeof pos:start="243:52" pos:end="243:70">sizeof<argument_list pos:start="243:58" pos:end="243:70">(<argument pos:start="243:59" pos:end="243:69"><expr pos:start="243:59" pos:end="243:69"><name pos:start="243:59" pos:end="243:69"><name pos:start="243:59" pos:end="243:63">delay</name><index pos:start="243:64" pos:end="243:66">[<expr pos:start="243:65" pos:end="243:65"><name pos:start="243:65" pos:end="243:65">k</name></expr>]</index><index pos:start="243:67" pos:end="243:69">[<expr pos:start="243:68" pos:end="243:68"><literal type="number" pos:start="243:68" pos:end="243:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:77"><expr pos:start="245:9" pos:end="245:76"><call pos:start="245:9" pos:end="245:76"><name pos:start="245:9" pos:end="245:14">memcpy</name><argument_list pos:start="245:15" pos:end="245:76">(<argument pos:start="245:16" pos:end="245:36"><expr pos:start="245:16" pos:end="245:36"><name pos:start="245:16" pos:end="245:23"><name pos:start="245:16" pos:end="245:20">delay</name><index pos:start="245:21" pos:end="245:23">[<expr pos:start="245:22" pos:end="245:22"><name pos:start="245:22" pos:end="245:22">k</name></expr>]</index></name><operator pos:start="245:24" pos:end="245:24">+</operator><name pos:start="245:25" pos:end="245:36">PS_MAX_DELAY</name></expr></argument>, <argument pos:start="245:39" pos:end="245:42"><expr pos:start="245:39" pos:end="245:42"><name pos:start="245:39" pos:end="245:42"><name pos:start="245:39" pos:end="245:39">s</name><index pos:start="245:40" pos:end="245:42">[<expr pos:start="245:41" pos:end="245:41"><name pos:start="245:41" pos:end="245:41">k</name></expr>]</index></name></expr></argument>, <argument pos:start="245:45" pos:end="245:75"><expr pos:start="245:45" pos:end="245:75"><name pos:start="245:45" pos:end="245:55">numQMFSlots</name><operator pos:start="245:56" pos:end="245:56">*</operator><sizeof pos:start="245:57" pos:end="245:75">sizeof<argument_list pos:start="245:63" pos:end="245:75">(<argument pos:start="245:64" pos:end="245:74"><expr pos:start="245:64" pos:end="245:74"><name pos:start="245:64" pos:end="245:74"><name pos:start="245:64" pos:end="245:68">delay</name><index pos:start="245:69" pos:end="245:71">[<expr pos:start="245:70" pos:end="245:70"><name pos:start="245:70" pos:end="245:70">k</name></expr>]</index><index pos:start="245:72" pos:end="245:74">[<expr pos:start="245:73" pos:end="245:73"><literal type="number" pos:start="245:73" pos:end="245:73">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="247:9" pos:end="247:21">//H = delay 1</comment>

        <expr_stmt pos:start="249:9" pos:end="251:60"><expr pos:start="249:9" pos:end="251:59"><call pos:start="249:9" pos:end="251:59"><name pos:start="249:9" pos:end="249:31"><name pos:start="249:9" pos:end="249:10">ps</name><operator pos:start="249:11" pos:end="249:12">-&gt;</operator><name pos:start="249:13" pos:end="249:15">dsp</name><operator pos:start="249:16" pos:end="249:16">.</operator><name pos:start="249:17" pos:end="249:31">mul_pair_single</name></name><argument_list pos:start="249:32" pos:end="251:59">(<argument pos:start="249:33" pos:end="249:38"><expr pos:start="249:33" pos:end="249:38"><name pos:start="249:33" pos:end="249:38"><name pos:start="249:33" pos:end="249:35">out</name><index pos:start="249:36" pos:end="249:38">[<expr pos:start="249:37" pos:end="249:37"><name pos:start="249:37" pos:end="249:37">k</name></expr>]</index></name></expr></argument>, <argument pos:start="249:41" pos:end="249:67"><expr pos:start="249:41" pos:end="249:67"><name pos:start="249:41" pos:end="249:48"><name pos:start="249:41" pos:end="249:45">delay</name><index pos:start="249:46" pos:end="249:48">[<expr pos:start="249:47" pos:end="249:47"><name pos:start="249:47" pos:end="249:47">k</name></expr>]</index></name> <operator pos:start="249:50" pos:end="249:50">+</operator> <name pos:start="249:52" pos:end="249:63">PS_MAX_DELAY</name> <operator pos:start="249:65" pos:end="249:65">-</operator> <literal type="number" pos:start="249:67" pos:end="249:67">1</literal></expr></argument>,

                                <argument pos:start="251:33" pos:end="251:49"><expr pos:start="251:33" pos:end="251:49"><name pos:start="251:33" pos:end="251:49"><name pos:start="251:33" pos:end="251:46">transient_gain</name><index pos:start="251:47" pos:end="251:49">[<expr pos:start="251:48" pos:end="251:48"><name pos:start="251:48" pos:end="251:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="251:52" pos:end="251:58"><expr pos:start="251:52" pos:end="251:58"><name pos:start="251:52" pos:end="251:53">nL</name> <operator pos:start="251:55" pos:end="251:55">-</operator> <name pos:start="251:57" pos:end="251:58">n0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></decl></decl_stmt>
</unit>
