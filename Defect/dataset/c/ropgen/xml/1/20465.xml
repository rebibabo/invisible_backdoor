<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20465.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">m25p80_transfer8</name><parameter_list pos:start="1:33" pos:end="1:59">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:41">SSISlave</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">ss</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:58">tx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Flash</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:12">s</name> <init pos:start="5:14" pos:end="5:25">= <expr pos:start="5:16" pos:end="5:25"><call pos:start="5:16" pos:end="5:25"><name pos:start="5:16" pos:end="5:21">M25P80</name><argument_list pos:start="5:22" pos:end="5:25">(<argument pos:start="5:23" pos:end="5:24"><expr pos:start="5:23" pos:end="5:24"><name pos:start="5:23" pos:end="5:24">ss</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:14">r</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="89:5">switch <condition pos:start="11:12" pos:end="11:21">(<expr pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:20"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:20">state</name></name></expr>)</condition> <block pos:start="11:23" pos:end="89:5">{<block_content pos:start="15:5" pos:end="87:14">



    <case pos:start="15:5" pos:end="15:28">case <expr pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:27">STATE_PAGE_PROGRAM</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="19:45"><expr pos:start="17:9" pos:end="19:44"><call pos:start="17:9" pos:end="19:44"><name pos:start="17:9" pos:end="17:18">DB_PRINT_L</name><argument_list pos:start="17:19" pos:end="19:44">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">1</literal></expr></argument>, <argument pos:start="17:23" pos:end="17:76"><expr pos:start="17:23" pos:end="17:76"><literal type="string" pos:start="17:23" pos:end="17:48">"page program cur_addr=%#"</literal> <name pos:start="17:50" pos:end="17:55">PRIx64</name> <literal type="string" pos:start="17:57" pos:end="17:65">" data=%"</literal> <name pos:start="17:67" pos:end="17:71">PRIx8</name> <literal type="string" pos:start="17:73" pos:end="17:76">"\n"</literal></expr></argument>,

                   <argument pos:start="19:20" pos:end="19:30"><expr pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:30"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:30">cur_addr</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:43"><expr pos:start="19:33" pos:end="19:43"><operator pos:start="19:33" pos:end="19:33">(</operator><name pos:start="19:34" pos:end="19:40">uint8_t</name><operator pos:start="19:41" pos:end="19:41">)</operator><name pos:start="19:42" pos:end="19:43">tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:50"><expr pos:start="21:9" pos:end="21:49"><call pos:start="21:9" pos:end="21:49"><name pos:start="21:9" pos:end="21:20">flash_write8</name><argument_list pos:start="21:21" pos:end="21:49">(<argument pos:start="21:22" pos:end="21:22"><expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">s</name></expr></argument>, <argument pos:start="21:25" pos:end="21:35"><expr pos:start="21:25" pos:end="21:35"><name pos:start="21:25" pos:end="21:35"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:35">cur_addr</name></name></expr></argument>, <argument pos:start="21:38" pos:end="21:48"><expr pos:start="21:38" pos:end="21:48"><operator pos:start="21:38" pos:end="21:38">(</operator><name pos:start="21:39" pos:end="21:45">uint8_t</name><operator pos:start="21:46" pos:end="21:46">)</operator><name pos:start="21:47" pos:end="21:48">tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:22"><expr pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">cur_addr</name></name><operator pos:start="23:20" pos:end="23:21">++</operator></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>



    <case pos:start="29:5" pos:end="29:20">case <expr pos:start="29:10" pos:end="29:19"><name pos:start="29:10" pos:end="29:19">STATE_READ</name></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:9">r</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">storage</name><index pos:start="31:23" pos:end="31:35">[<expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">cur_addr</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:31"><expr pos:start="33:9" pos:end="35:30"><call pos:start="33:9" pos:end="35:30"><name pos:start="33:9" pos:end="33:18">DB_PRINT_L</name><argument_list pos:start="33:19" pos:end="35:30">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr></argument>, <argument pos:start="33:23" pos:end="33:55"><expr pos:start="33:23" pos:end="33:55"><literal type="string" pos:start="33:23" pos:end="33:32">"READ 0x%"</literal> <name pos:start="33:34" pos:end="33:39">PRIx64</name> <literal type="string" pos:start="33:41" pos:end="33:44">"=%"</literal> <name pos:start="33:46" pos:end="33:50">PRIx8</name> <literal type="string" pos:start="33:52" pos:end="33:55">"\n"</literal></expr></argument>, <argument pos:start="33:58" pos:end="33:68"><expr pos:start="33:58" pos:end="33:68"><name pos:start="33:58" pos:end="33:68"><name pos:start="33:58" pos:end="33:58">s</name><operator pos:start="33:59" pos:end="33:60">-&gt;</operator><name pos:start="33:61" pos:end="33:68">cur_addr</name></name></expr></argument>,

                   <argument pos:start="35:20" pos:end="35:29"><expr pos:start="35:20" pos:end="35:29"><operator pos:start="35:20" pos:end="35:20">(</operator><name pos:start="35:21" pos:end="35:27">uint8_t</name><operator pos:start="35:28" pos:end="35:28">)</operator><name pos:start="35:29" pos:end="35:29">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">cur_addr</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <operator pos:start="37:23" pos:end="37:23">(</operator><name pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:34">cur_addr</name></name> <operator pos:start="37:36" pos:end="37:36">+</operator> <literal type="number" pos:start="37:38" pos:end="37:38">1</literal><operator pos:start="37:39" pos:end="37:39">)</operator> <operator pos:start="37:41" pos:end="37:41">%</operator> <name pos:start="37:43" pos:end="37:49"><name pos:start="37:43" pos:end="37:43">s</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:49">size</name></name></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:31">case <expr pos:start="43:10" pos:end="43:30"><name pos:start="43:10" pos:end="43:30">STATE_COLLECTING_DATA</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:39">case <expr pos:start="45:10" pos:end="45:38"><name pos:start="45:10" pos:end="45:38">STATE_COLLECTING_VAR_LEN_DATA</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:15">data</name><index pos:start="47:16" pos:end="47:23">[<expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">len</name></name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <operator pos:start="47:27" pos:end="47:27">(</operator><name pos:start="47:28" pos:end="47:34">uint8_t</name><operator pos:start="47:35" pos:end="47:35">)</operator><name pos:start="47:36" pos:end="47:37">tx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:17"><expr pos:start="49:9" pos:end="49:16"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:14">len</name></name><operator pos:start="49:15" pos:end="49:16">++</operator></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:38">(<expr pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:18">len</name></name> <operator pos:start="53:20" pos:end="53:21">==</operator> <name pos:start="53:23" pos:end="53:37"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:37">needed_bytes</name></name></expr>)</condition> <block pos:start="53:40" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:40">

            <expr_stmt pos:start="55:13" pos:end="55:40"><expr pos:start="55:13" pos:end="55:39"><call pos:start="55:13" pos:end="55:39"><name pos:start="55:13" pos:end="55:36">complete_collecting_data</name><argument_list pos:start="55:37" pos:end="55:39">(<argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:28">case <expr pos:start="63:10" pos:end="63:27"><name pos:start="63:10" pos:end="63:27">STATE_READING_DATA</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:9">r</name> <operator pos:start="65:11" pos:end="65:11">=</operator> <name pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:19">data</name><index pos:start="65:20" pos:end="65:27">[<expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:21">s</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:26">pos</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:17"><expr pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:14"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:14">pos</name></name><operator pos:start="67:15" pos:end="67:16">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:29">(<expr pos:start="69:13" pos:end="69:28"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:18">pos</name></name> <operator pos:start="69:20" pos:end="69:21">==</operator> <name pos:start="69:23" pos:end="69:28"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:28">len</name></name></expr>)</condition> <block pos:start="69:31" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:34">

            <expr_stmt pos:start="71:13" pos:end="71:23"><expr pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:18"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:18">pos</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:34"><expr pos:start="73:13" pos:end="73:33"><name pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:13">s</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:20">state</name></name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:33">STATE_IDLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>



    <default pos:start="81:5" pos:end="81:12">default:</default>

    <case pos:start="83:5" pos:end="83:20">case <expr pos:start="83:10" pos:end="83:19"><name pos:start="83:10" pos:end="83:19">STATE_IDLE</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><call pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:22">decode_new_cmd</name><argument_list pos:start="85:23" pos:end="85:38">(<argument pos:start="85:24" pos:end="85:24"><expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">s</name></expr></argument>, <argument pos:start="85:27" pos:end="85:37"><expr pos:start="85:27" pos:end="85:37"><operator pos:start="85:27" pos:end="85:27">(</operator><name pos:start="85:28" pos:end="85:34">uint8_t</name><operator pos:start="85:35" pos:end="85:35">)</operator><name pos:start="85:36" pos:end="85:37">tx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><name pos:start="93:12" pos:end="93:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
