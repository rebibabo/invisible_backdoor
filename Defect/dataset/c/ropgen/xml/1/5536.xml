<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5536.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:37">sh_serial_ioport_read</name><parameter_list pos:start="1:38" pos:end="1:66">(<parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:65">offs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:15">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">sh_serial_state</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:31">= <expr pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:31">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="42:0"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">ret</name> <init pos:start="7:18" pos:end="7:21">= <expr pos:start="7:20" pos:end="7:21"><operator pos:start="7:20" pos:end="7:20">~</operator><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="11:1" pos:end="11:5">#<cpp:directive pos:start="11:2" pos:end="11:3">if</cpp:directive> <expr pos:start="11:5" pos:end="11:5"><literal type="number" pos:start="11:5" pos:end="11:5">0</literal></expr></cpp:if>

    switch(offs) {

    case 0x00:

        ret = s-&gt;smr;

        break;

    case 0x04:

        ret = s-&gt;brr;

	break;

    case 0x08:

        ret = s-&gt;scr;

        break;

    case 0x14:

        ret = 0;

        break;

    }

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="43:5" pos:end="182:0"><if pos:start="43:5" pos:end="143:5">if <condition pos:start="43:8" pos:end="43:38">(<expr pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:15">feat</name></name> <operator pos:start="43:17" pos:end="43:17">&amp;</operator> <name pos:start="43:19" pos:end="43:37">SH_SERIAL_FEAT_SCIF</name></expr>)</condition> <block pos:start="43:40" pos:end="143:5">{<block_content pos:start="45:9" pos:end="141:9">

        <switch pos:start="45:9" pos:end="141:9">switch<condition pos:start="45:15" pos:end="45:20">(<expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">offs</name></expr>)</condition> <block pos:start="45:22" pos:end="141:9">{<block_content pos:start="47:9" pos:end="139:18">

        <case pos:start="47:9" pos:end="47:18">case <expr pos:start="47:14" pos:end="47:17"><literal type="number" pos:start="47:14" pos:end="47:17">0x00</literal></expr>:</case> <comment type="block" pos:start="47:20" pos:end="47:28">/* SMR */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:24"><name pos:start="49:19" pos:end="49:19">s</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:24">smr</name></name></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:18">case <expr pos:start="53:14" pos:end="53:17"><literal type="number" pos:start="53:14" pos:end="53:17">0x08</literal></expr>:</case> <comment type="block" pos:start="53:20" pos:end="53:28">/* SCR */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:24"><name pos:start="55:19" pos:end="55:19">s</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:24">scr</name></name></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:18">case <expr pos:start="59:14" pos:end="59:17"><literal type="number" pos:start="59:14" pos:end="59:17">0x10</literal></expr>:</case> <comment type="block" pos:start="59:20" pos:end="59:28">/* FSR */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:20"><expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:32"><if pos:start="63:13" pos:end="65:32">if <condition pos:start="63:16" pos:end="63:47">(<expr pos:start="63:17" pos:end="63:46"><name pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">s</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:24">flags</name></name> <operator pos:start="63:26" pos:end="63:26">&amp;</operator> <name pos:start="63:28" pos:end="63:46">SH_SERIAL_FLAG_TEND</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:32"><block_content pos:start="65:17" pos:end="65:32">

                <expr_stmt pos:start="65:17" pos:end="65:32"><expr pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:19">ret</name> <operator pos:start="65:21" pos:end="65:22">|=</operator> <operator pos:start="65:24" pos:end="65:24">(</operator><literal type="number" pos:start="65:25" pos:end="65:25">1</literal> <operator pos:start="65:27" pos:end="65:28">&lt;&lt;</operator> <literal type="number" pos:start="65:30" pos:end="65:30">6</literal><operator pos:start="65:31" pos:end="65:31">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="67:13" pos:end="69:32"><if pos:start="67:13" pos:end="69:32">if <condition pos:start="67:16" pos:end="67:46">(<expr pos:start="67:17" pos:end="67:45"><name pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">flags</name></name> <operator pos:start="67:26" pos:end="67:26">&amp;</operator> <name pos:start="67:28" pos:end="67:45">SH_SERIAL_FLAG_TDE</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:32"><block_content pos:start="69:17" pos:end="69:32">

                <expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:19">ret</name> <operator pos:start="69:21" pos:end="69:22">|=</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><literal type="number" pos:start="69:25" pos:end="69:25">1</literal> <operator pos:start="69:27" pos:end="69:28">&lt;&lt;</operator> <literal type="number" pos:start="69:30" pos:end="69:30">5</literal><operator pos:start="69:31" pos:end="69:31">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="71:13" pos:end="73:32"><if pos:start="71:13" pos:end="73:32">if <condition pos:start="71:16" pos:end="71:46">(<expr pos:start="71:17" pos:end="71:45"><name pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:24">flags</name></name> <operator pos:start="71:26" pos:end="71:26">&amp;</operator> <name pos:start="71:28" pos:end="71:45">SH_SERIAL_FLAG_BRK</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:32"><block_content pos:start="73:17" pos:end="73:32">

                <expr_stmt pos:start="73:17" pos:end="73:32"><expr pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:22">|=</operator> <operator pos:start="73:24" pos:end="73:24">(</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal> <operator pos:start="73:27" pos:end="73:28">&lt;&lt;</operator> <literal type="number" pos:start="73:30" pos:end="73:30">4</literal><operator pos:start="73:31" pos:end="73:31">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="75:13" pos:end="77:32"><if pos:start="75:13" pos:end="77:32">if <condition pos:start="75:16" pos:end="75:46">(<expr pos:start="75:17" pos:end="75:45"><name pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:24">flags</name></name> <operator pos:start="75:26" pos:end="75:26">&amp;</operator> <name pos:start="75:28" pos:end="75:45">SH_SERIAL_FLAG_RDF</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:32"><block_content pos:start="77:17" pos:end="77:32">

                <expr_stmt pos:start="77:17" pos:end="77:32"><expr pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:19">ret</name> <operator pos:start="77:21" pos:end="77:22">|=</operator> <operator pos:start="77:24" pos:end="77:24">(</operator><literal type="number" pos:start="77:25" pos:end="77:25">1</literal> <operator pos:start="77:27" pos:end="77:28">&lt;&lt;</operator> <literal type="number" pos:start="77:30" pos:end="77:30">1</literal><operator pos:start="77:31" pos:end="77:31">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="81:32"><if pos:start="79:13" pos:end="81:32">if <condition pos:start="79:16" pos:end="79:45">(<expr pos:start="79:17" pos:end="79:44"><name pos:start="79:17" pos:end="79:24"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">flags</name></name> <operator pos:start="79:26" pos:end="79:26">&amp;</operator> <name pos:start="79:28" pos:end="79:44">SH_SERIAL_FLAG_DR</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:32"><block_content pos:start="81:17" pos:end="81:32">

                <expr_stmt pos:start="81:17" pos:end="81:32"><expr pos:start="81:17" pos:end="81:31"><name pos:start="81:17" pos:end="81:19">ret</name> <operator pos:start="81:21" pos:end="81:22">|=</operator> <operator pos:start="81:24" pos:end="81:24">(</operator><literal type="number" pos:start="81:25" pos:end="81:25">1</literal> <operator pos:start="81:27" pos:end="81:28">&lt;&lt;</operator> <literal type="number" pos:start="81:30" pos:end="81:30">0</literal><operator pos:start="81:31" pos:end="81:31">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="85:13" pos:end="87:69"><if pos:start="85:13" pos:end="87:69">if <condition pos:start="85:16" pos:end="85:34">(<expr pos:start="85:17" pos:end="85:33"><name pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:22">scr</name></name> <operator pos:start="85:24" pos:end="85:24">&amp;</operator> <operator pos:start="85:26" pos:end="85:26">(</operator><literal type="number" pos:start="85:27" pos:end="85:27">1</literal> <operator pos:start="85:29" pos:end="85:30">&lt;&lt;</operator> <literal type="number" pos:start="85:32" pos:end="85:32">5</literal><operator pos:start="85:33" pos:end="85:33">)</operator></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:69"><block_content pos:start="87:17" pos:end="87:69">

                <expr_stmt pos:start="87:17" pos:end="87:69"><expr pos:start="87:17" pos:end="87:68"><name pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:24">flags</name></name> <operator pos:start="87:26" pos:end="87:27">|=</operator> <name pos:start="87:29" pos:end="87:46">SH_SERIAL_FLAG_TDE</name> <operator pos:start="87:48" pos:end="87:48">|</operator> <name pos:start="87:50" pos:end="87:68">SH_SERIAL_FLAG_TEND</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:18">case <expr pos:start="93:14" pos:end="93:17"><literal type="number" pos:start="93:14" pos:end="93:17">0x14</literal></expr>:</case>

            <if_stmt pos:start="95:13" pos:end="109:13"><if pos:start="95:13" pos:end="109:13">if <condition pos:start="95:16" pos:end="95:30">(<expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:25"><name pos:start="95:17" pos:end="95:17">s</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:25">rx_cnt</name></name> <operator pos:start="95:27" pos:end="95:27">&gt;</operator> <literal type="number" pos:start="95:29" pos:end="95:29">0</literal></expr>)</condition> <block pos:start="95:32" pos:end="109:13">{<block_content pos:start="97:17" pos:end="107:52">

                <expr_stmt pos:start="97:17" pos:end="97:47"><expr pos:start="97:17" pos:end="97:46"><name pos:start="97:17" pos:end="97:19">ret</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <name pos:start="97:23" pos:end="97:46"><name pos:start="97:23" pos:end="97:23">s</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:32">rx_fifo</name><index pos:start="97:33" pos:end="97:46">[<expr pos:start="97:34" pos:end="97:45"><name pos:start="97:34" pos:end="97:43"><name pos:start="97:34" pos:end="97:34">s</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:43">rx_tail</name></name><operator pos:start="97:44" pos:end="97:45">++</operator></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:28"><expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:25"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:25">rx_cnt</name></name><operator pos:start="99:26" pos:end="99:27">--</operator></expr>;</expr_stmt>

                <if_stmt pos:start="101:17" pos:end="103:35"><if pos:start="101:17" pos:end="103:35">if <condition pos:start="101:20" pos:end="101:52">(<expr pos:start="101:21" pos:end="101:51"><name pos:start="101:21" pos:end="101:30"><name pos:start="101:21" pos:end="101:21">s</name><operator pos:start="101:22" pos:end="101:23">-&gt;</operator><name pos:start="101:24" pos:end="101:30">rx_tail</name></name> <operator pos:start="101:32" pos:end="101:33">==</operator> <name pos:start="101:35" pos:end="101:51">SH_RX_FIFO_LENGTH</name></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="103:35"><block_content pos:start="103:21" pos:end="103:35">

                    <expr_stmt pos:start="103:21" pos:end="103:35"><expr pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:30"><name pos:start="103:21" pos:end="103:21">s</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:30">rx_tail</name></name> <operator pos:start="103:32" pos:end="103:32">=</operator> <literal type="number" pos:start="103:34" pos:end="103:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="105:17" pos:end="107:52"><if pos:start="105:17" pos:end="107:52">if <condition pos:start="105:20" pos:end="105:40">(<expr pos:start="105:21" pos:end="105:39"><name pos:start="105:21" pos:end="105:29"><name pos:start="105:21" pos:end="105:21">s</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:29">rx_cnt</name></name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <name pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:33">s</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:39">rtrg</name></name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:52"><block_content pos:start="107:21" pos:end="107:52">

                    <expr_stmt pos:start="107:21" pos:end="107:52"><expr pos:start="107:21" pos:end="107:51"><name pos:start="107:21" pos:end="107:28"><name pos:start="107:21" pos:end="107:21">s</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:28">flags</name></name> <operator pos:start="107:30" pos:end="107:31">&amp;=</operator> <operator pos:start="107:33" pos:end="107:33">~</operator><name pos:start="107:34" pos:end="107:51">SH_SERIAL_FLAG_RDF</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="111:13" pos:end="122:0">break;</break>

<cpp:if pos:start="113:1" pos:end="113:5">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:5"><literal type="number" pos:start="113:5" pos:end="113:5">0</literal></expr></cpp:if>

        case 0x18:

            ret = s-&gt;fcr;

            break;

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

        <case pos:start="123:9" pos:end="123:18">case <expr pos:start="123:14" pos:end="123:17"><literal type="number" pos:start="123:14" pos:end="123:17">0x1c</literal></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:28"><expr pos:start="125:13" pos:end="125:27"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:27"><name pos:start="125:19" pos:end="125:19">s</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:27">rx_cnt</name></name></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        <case pos:start="129:9" pos:end="129:18">case <expr pos:start="129:14" pos:end="129:17"><literal type="number" pos:start="129:14" pos:end="129:17">0x20</literal></expr>:</case>

            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:25"><name pos:start="131:19" pos:end="131:19">s</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:25">sptr</name></name></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:18">case <expr pos:start="135:14" pos:end="135:17"><literal type="number" pos:start="135:14" pos:end="135:17">0x24</literal></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:20"><expr pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <literal type="number" pos:start="137:19" pos:end="137:19">0</literal></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if>

    <else pos:start="145:5" pos:end="182:0">else <block pos:start="145:10" pos:end="182:0">{<block_content>

<cpp:if pos:start="147:1" pos:end="147:5">#<cpp:directive pos:start="147:2" pos:end="147:3">if</cpp:directive> <expr pos:start="147:5" pos:end="147:5"><literal type="number" pos:start="147:5" pos:end="147:5">0</literal></expr></cpp:if>

        switch(offs) {

        case 0x0c:

            ret = s-&gt;dr;

            break;

        case 0x10:

            ret = 0;

            break;

        case 0x14:

            ret = s-&gt;rx_fifo[0];

            break;

        case 0x1c:

            ret = s-&gt;sptr;

            break;

        }

<cpp:endif pos:start="177:1" pos:end="177:6">#<cpp:directive pos:start="177:2" pos:end="177:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>

<cpp:ifdef pos:start="181:1" pos:end="181:19">#<cpp:directive pos:start="181:2" pos:end="181:6">ifdef</cpp:directive> <name pos:start="181:8" pos:end="181:19">DEBUG_SERIAL</name></cpp:ifdef>

    <expr_stmt pos:start="183:5" pos:end="188:0"><expr pos:start="183:5" pos:end="185:21"><call pos:start="183:5" pos:end="185:21"><name pos:start="183:5" pos:end="183:10">printf</name><argument_list pos:start="183:11" pos:end="185:21">(<argument pos:start="183:12" pos:end="183:51"><expr pos:start="183:12" pos:end="183:51"><literal type="string" pos:start="183:12" pos:end="183:51">"sh_serial: read offs=0x%02x val=0x%x\n"</literal></expr></argument>,

	   <argument pos:start="185:12" pos:end="185:15"><expr pos:start="185:12" pos:end="185:15"><name pos:start="185:12" pos:end="185:15">offs</name></expr></argument>, <argument pos:start="185:18" pos:end="185:20"><expr pos:start="185:18" pos:end="185:20"><name pos:start="185:18" pos:end="185:20">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="187:1" pos:end="187:6">#<cpp:directive pos:start="187:2" pos:end="187:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="191:5" pos:end="197:5"><if pos:start="191:5" pos:end="197:5">if <condition pos:start="191:8" pos:end="191:31">(<expr pos:start="191:9" pos:end="191:30"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">&amp;</operator> <operator pos:start="191:15" pos:end="191:15">~</operator><operator pos:start="191:16" pos:end="191:16">(</operator><operator pos:start="191:17" pos:end="191:17">(</operator><literal type="number" pos:start="191:18" pos:end="191:18">1</literal> <operator pos:start="191:20" pos:end="191:21">&lt;&lt;</operator> <literal type="number" pos:start="191:23" pos:end="191:24">16</literal><operator pos:start="191:25" pos:end="191:25">)</operator> <operator pos:start="191:27" pos:end="191:27">-</operator> <literal type="number" pos:start="191:29" pos:end="191:29">1</literal><operator pos:start="191:30" pos:end="191:30">)</operator></expr>)</condition> <block pos:start="191:33" pos:end="197:5">{<block_content pos:start="193:9" pos:end="195:18">

        <expr_stmt pos:start="193:9" pos:end="193:75"><expr pos:start="193:9" pos:end="193:74"><call pos:start="193:9" pos:end="193:74"><name pos:start="193:9" pos:end="193:15">fprintf</name><argument_list pos:start="193:16" pos:end="193:74">(<argument pos:start="193:17" pos:end="193:22"><expr pos:start="193:17" pos:end="193:22"><name pos:start="193:17" pos:end="193:22">stderr</name></expr></argument>, <argument pos:start="193:25" pos:end="193:67"><expr pos:start="193:25" pos:end="193:67"><literal type="string" pos:start="193:25" pos:end="193:67">"sh_serial: unsupported read from 0x%02x\n"</literal></expr></argument>, <argument pos:start="193:70" pos:end="193:73"><expr pos:start="193:70" pos:end="193:73"><name pos:start="193:70" pos:end="193:73">offs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="195:9" pos:end="195:18"><expr pos:start="195:9" pos:end="195:17"><call pos:start="195:9" pos:end="195:17"><name pos:start="195:9" pos:end="195:14">assert</name><argument_list pos:start="195:15" pos:end="195:17">(<argument pos:start="195:16" pos:end="195:16"><expr pos:start="195:16" pos:end="195:16"><literal type="number" pos:start="195:16" pos:end="195:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="201:5" pos:end="201:15">return <expr pos:start="201:12" pos:end="201:14"><name pos:start="201:12" pos:end="201:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
