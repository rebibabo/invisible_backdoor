<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3245.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">pick_geometry</name><parameter_list pos:start="1:25" pos:end="1:37">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:33"><name pos:start="1:26" pos:end="1:31">FDrive</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">drv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="177:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BlockBackend</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">blk</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">drv</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">blk</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">FDFormat</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">parse</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">nb_sectors</name></decl>, <decl pos:start="9:26" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:26" pos:end="9:29">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">match</name></decl>, <decl pos:start="13:16" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:25">size_match</name></decl>, <decl pos:start="13:28" pos:end="13:37"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:37">type_match</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:54"><decl pos:start="15:5" pos:end="15:53"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:14">magic</name> <init pos:start="15:16" pos:end="15:53">= <expr pos:start="15:18" pos:end="15:53"><name pos:start="15:18" pos:end="15:27"><name pos:start="15:18" pos:end="15:20">drv</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:27">drive</name></name> <operator pos:start="15:29" pos:end="15:30">==</operator> <name pos:start="15:32" pos:end="15:53">FLOPPY_DRIVE_TYPE_AUTO</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:60">/* We can only pick a geometry if we have a diskette. */</comment>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="23:45">(<expr pos:start="21:9" pos:end="23:44"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:12">drv</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">blk</name></name> <operator pos:start="21:19" pos:end="21:20">||</operator> <operator pos:start="21:22" pos:end="21:22">!</operator><call pos:start="21:23" pos:end="21:47"><name pos:start="21:23" pos:end="21:37">blk_is_inserted</name><argument_list pos:start="21:38" pos:end="21:47">(<argument pos:start="21:39" pos:end="21:46"><expr pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:46"><name pos:start="21:39" pos:end="21:41">drv</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:46">blk</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:49" pos:end="21:50">||</operator>

        <name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">drv</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">drive</name></name> <operator pos:start="23:20" pos:end="23:21">==</operator> <name pos:start="23:23" pos:end="23:44">FLOPPY_DRIVE_TYPE_NONE</name></expr>)</condition>

    <block pos:start="25:5" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="49:7">/* We need to determine the likely geometry of the inserted medium.

     * In order of preference, we look for:

     * (1) The same drive type and number of sectors,

     * (2) The same diskette size and number of sectors,

     * (3) The same drive type.

     *

     * In all cases, matches that occur higher in the drive table will take

     * precedence over matches that occur later in the table.

     */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><call pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:20">blk_get_geometry</name><argument_list pos:start="51:21" pos:end="51:38">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">blk</name></expr></argument>, <argument pos:start="51:27" pos:end="51:37"><expr pos:start="51:27" pos:end="51:37"><operator pos:start="51:27" pos:end="51:27">&amp;</operator><name pos:start="51:28" pos:end="51:37">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:9">match</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:22">size_match</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:35">type_match</name> <operator pos:start="53:37" pos:end="53:37">=</operator> <operator pos:start="53:39" pos:end="53:39">-</operator><literal type="number" pos:start="53:40" pos:end="53:40">1</literal></expr>;</expr_stmt>

    <for pos:start="55:5" pos:end="107:5">for <control pos:start="55:9" pos:end="55:22">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:17">;</condition> <incr pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><name pos:start="55:19" pos:end="55:19">i</name><operator pos:start="55:20" pos:end="55:21">++</operator></expr></incr>)</control> <block pos:start="55:24" pos:end="107:5">{<block_content pos:start="57:9" pos:end="105:9">

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">parse</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">&amp;</operator><name pos:start="57:18" pos:end="57:30"><name pos:start="57:18" pos:end="57:27">fd_formats</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><name pos:start="57:29" pos:end="57:29">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:51">(<expr pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:17">parse</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:24">drive</name></name> <operator pos:start="59:26" pos:end="59:27">==</operator> <name pos:start="59:29" pos:end="59:50">FLOPPY_DRIVE_TYPE_NONE</name></expr>)</condition> <block pos:start="59:53" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:75"><expr pos:start="65:9" pos:end="65:74"><name pos:start="65:9" pos:end="65:12">size</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <operator pos:start="65:16" pos:end="65:16">(</operator><name pos:start="65:17" pos:end="65:31"><name pos:start="65:17" pos:end="65:21">parse</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:31">max_head</name></name> <operator pos:start="65:33" pos:end="65:33">+</operator> <literal type="number" pos:start="65:35" pos:end="65:35">1</literal><operator pos:start="65:36" pos:end="65:36">)</operator> <operator pos:start="65:38" pos:end="65:38">*</operator> <name pos:start="65:40" pos:end="65:55"><name pos:start="65:40" pos:end="65:44">parse</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:55">max_track</name></name> <operator pos:start="65:57" pos:end="65:57">*</operator> <name pos:start="65:59" pos:end="65:74"><name pos:start="65:59" pos:end="65:63">parse</name><operator pos:start="65:64" pos:end="65:65">-&gt;</operator><name pos:start="65:66" pos:end="65:74">last_sect</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="105:9"><if pos:start="67:9" pos:end="89:9">if <condition pos:start="67:12" pos:end="67:31">(<expr pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:22">nb_sectors</name> <operator pos:start="67:24" pos:end="67:25">==</operator> <name pos:start="67:27" pos:end="67:30">size</name></expr>)</condition> <block pos:start="67:33" pos:end="89:9">{<block_content pos:start="69:13" pos:end="87:13">

            <if_stmt pos:start="69:13" pos:end="87:13"><if pos:start="69:13" pos:end="75:13">if <condition pos:start="69:16" pos:end="69:52">(<expr pos:start="69:17" pos:end="69:51"><name pos:start="69:17" pos:end="69:21">magic</name> <operator pos:start="69:23" pos:end="69:24">||</operator> <name pos:start="69:26" pos:end="69:37"><name pos:start="69:26" pos:end="69:30">parse</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:37">drive</name></name> <operator pos:start="69:39" pos:end="69:40">==</operator> <name pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:44">drv</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:51">drive</name></name></expr>)</condition> <block pos:start="69:54" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:25">

                <comment type="block" pos:start="71:17" pos:end="71:68">/* (1) perfect match -- nb_sectors and drive type */</comment>

                <goto pos:start="73:17" pos:end="73:25">goto <name pos:start="73:22" pos:end="73:24">out</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="75:15" pos:end="81:13">else if <condition pos:start="75:23" pos:end="75:74">(<expr pos:start="75:24" pos:end="75:73"><call pos:start="75:24" pos:end="75:47"><name pos:start="75:24" pos:end="75:33">drive_size</name><argument_list pos:start="75:34" pos:end="75:47">(<argument pos:start="75:35" pos:end="75:46"><expr pos:start="75:35" pos:end="75:46"><name pos:start="75:35" pos:end="75:46"><name pos:start="75:35" pos:end="75:39">parse</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:46">drive</name></name></expr></argument>)</argument_list></call> <operator pos:start="75:49" pos:end="75:50">==</operator> <call pos:start="75:52" pos:end="75:73"><name pos:start="75:52" pos:end="75:61">drive_size</name><argument_list pos:start="75:62" pos:end="75:73">(<argument pos:start="75:63" pos:end="75:72"><expr pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:72"><name pos:start="75:63" pos:end="75:65">drv</name><operator pos:start="75:66" pos:end="75:67">-&gt;</operator><name pos:start="75:68" pos:end="75:72">drive</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:76" pos:end="81:13">{<block_content pos:start="79:17" pos:end="79:50">

                <comment type="block" pos:start="77:17" pos:end="77:75">/* (2) size match -- nb_sectors and physical medium size */</comment>

                <expr_stmt pos:start="79:17" pos:end="79:50"><expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:21">match</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <ternary pos:start="79:25" pos:end="79:49"><condition pos:start="79:25" pos:end="79:39"><expr pos:start="79:25" pos:end="79:37"><operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:30">match</name> <operator pos:start="79:32" pos:end="79:33">==</operator> <operator pos:start="79:35" pos:end="79:35">-</operator><literal type="number" pos:start="79:36" pos:end="79:36">1</literal><operator pos:start="79:37" pos:end="79:37">)</operator></expr> ?</condition><then pos:start="79:41" pos:end="79:41"> <expr pos:start="79:41" pos:end="79:41"><name pos:start="79:41" pos:end="79:41">i</name></expr> </then><else pos:start="79:43" pos:end="79:49">: <expr pos:start="79:45" pos:end="79:49"><name pos:start="79:45" pos:end="79:49">match</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="81:15" pos:end="87:13">else <block pos:start="81:20" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:65">

                <comment type="block" pos:start="83:17" pos:end="83:70">/* This is suspicious -- Did the user misconfigure? */</comment>

                <expr_stmt pos:start="85:17" pos:end="85:65"><expr pos:start="85:17" pos:end="85:64"><name pos:start="85:17" pos:end="85:26">size_match</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <ternary pos:start="85:30" pos:end="85:64"><condition pos:start="85:30" pos:end="85:49"><expr pos:start="85:30" pos:end="85:47"><operator pos:start="85:30" pos:end="85:30">(</operator><name pos:start="85:31" pos:end="85:40">size_match</name> <operator pos:start="85:42" pos:end="85:43">==</operator> <operator pos:start="85:45" pos:end="85:45">-</operator><literal type="number" pos:start="85:46" pos:end="85:46">1</literal><operator pos:start="85:47" pos:end="85:47">)</operator></expr> ?</condition><then pos:start="85:51" pos:end="85:51"> <expr pos:start="85:51" pos:end="85:51"><name pos:start="85:51" pos:end="85:51">i</name></expr> </then><else pos:start="85:53" pos:end="85:64">: <expr pos:start="85:55" pos:end="85:64"><name pos:start="85:55" pos:end="85:64">size_match</name></expr></else></ternary></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="105:9">else if <condition pos:start="89:19" pos:end="89:36">(<expr pos:start="89:20" pos:end="89:35"><name pos:start="89:20" pos:end="89:29">type_match</name> <operator pos:start="89:31" pos:end="89:32">==</operator> <operator pos:start="89:34" pos:end="89:34">-</operator><literal type="number" pos:start="89:35" pos:end="89:35">1</literal></expr>)</condition> <block pos:start="89:38" pos:end="105:9">{<block_content pos:start="91:13" pos:end="103:13">

            <if_stmt pos:start="91:13" pos:end="103:13"><if pos:start="91:13" pos:end="103:13">if <condition pos:start="91:16" pos:end="93:74">(<expr pos:start="91:17" pos:end="93:73"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:29"><name pos:start="91:18" pos:end="91:22">parse</name><operator pos:start="91:23" pos:end="91:24">-&gt;</operator><name pos:start="91:25" pos:end="91:29">drive</name></name> <operator pos:start="91:31" pos:end="91:32">==</operator> <name pos:start="91:34" pos:end="91:43"><name pos:start="91:34" pos:end="91:36">drv</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:43">drive</name></name><operator pos:start="91:44" pos:end="91:44">)</operator> <operator pos:start="91:46" pos:end="91:47">||</operator>

                <operator pos:start="93:17" pos:end="93:17">(</operator><name pos:start="93:18" pos:end="93:22">magic</name> <operator pos:start="93:24" pos:end="93:25">&amp;&amp;</operator> <operator pos:start="93:27" pos:end="93:27">(</operator><name pos:start="93:28" pos:end="93:39"><name pos:start="93:28" pos:end="93:32">parse</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:39">drive</name></name> <operator pos:start="93:41" pos:end="93:42">==</operator> <call pos:start="93:44" pos:end="93:71"><name pos:start="93:44" pos:end="93:66">get_fallback_drive_type</name><argument_list pos:start="93:67" pos:end="93:71">(<argument pos:start="93:68" pos:end="93:70"><expr pos:start="93:68" pos:end="93:70"><name pos:start="93:68" pos:end="93:70">drv</name></expr></argument>)</argument_list></call><operator pos:start="93:72" pos:end="93:72">)</operator><operator pos:start="93:73" pos:end="93:73">)</operator></expr>)</condition> <block pos:start="93:76" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:31">

                <comment type="block" pos:start="95:17" pos:end="99:80">/* (3) type match -- nb_sectors mismatch, but matches the type

                 *     specified explicitly by the user, or matches the fallback

                 *     default type when using the drive autodetect mechanism */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:31"><expr pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:26">type_match</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:30">i</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="111:5" pos:end="111:30">/* No exact match found */</comment>

    <if_stmt pos:start="113:5" pos:end="135:5"><if pos:start="113:5" pos:end="135:5">if <condition pos:start="113:8" pos:end="113:20">(<expr pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:13">match</name> <operator pos:start="113:15" pos:end="113:16">==</operator> <operator pos:start="113:18" pos:end="113:18">-</operator><literal type="number" pos:start="113:19" pos:end="113:19">1</literal></expr>)</condition> <block pos:start="113:22" pos:end="135:5">{<block_content pos:start="115:9" pos:end="133:27">

        <if_stmt pos:start="115:9" pos:end="131:9"><if pos:start="115:9" pos:end="131:9">if <condition pos:start="115:12" pos:end="115:29">(<expr pos:start="115:13" pos:end="115:28"><name pos:start="115:13" pos:end="115:22">size_match</name> <operator pos:start="115:24" pos:end="115:25">!=</operator> <operator pos:start="115:27" pos:end="115:27">-</operator><literal type="number" pos:start="115:28" pos:end="115:28">1</literal></expr>)</condition> <block pos:start="115:31" pos:end="131:9">{<block_content pos:start="117:13" pos:end="129:65">

            <expr_stmt pos:start="117:13" pos:end="117:44"><expr pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:17">parse</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <operator pos:start="117:21" pos:end="117:21">&amp;</operator><name pos:start="117:22" pos:end="117:43"><name pos:start="117:22" pos:end="117:31">fd_formats</name><index pos:start="117:32" pos:end="117:43">[<expr pos:start="117:33" pos:end="117:42"><name pos:start="117:33" pos:end="117:42">size_match</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="129:65"><expr pos:start="119:13" pos:end="129:64"><call pos:start="119:13" pos:end="129:64"><name pos:start="119:13" pos:end="119:26">FLOPPY_DPRINTF</name><argument_list pos:start="119:27" pos:end="129:64">(<argument pos:start="119:28" pos:end="123:50"><expr pos:start="119:28" pos:end="123:50"><literal type="string" pos:start="119:28" pos:end="119:68">"User requested floppy drive type '%s', "</literal>

                           <literal type="string" pos:start="121:28" pos:end="121:65">"but inserted medium appears to be a "</literal>

                           <literal type="string" pos:start="123:28" pos:end="123:50">"%d sector '%s' type\n"</literal></expr></argument>,

                           <argument pos:start="125:28" pos:end="125:61"><expr pos:start="125:28" pos:end="125:61"><name pos:start="125:28" pos:end="125:61"><name pos:start="125:28" pos:end="125:49">FloppyDriveType_lookup</name><index pos:start="125:50" pos:end="125:61">[<expr pos:start="125:51" pos:end="125:60"><name pos:start="125:51" pos:end="125:60"><name pos:start="125:51" pos:end="125:53">drv</name><operator pos:start="125:54" pos:end="125:55">-&gt;</operator><name pos:start="125:56" pos:end="125:60">drive</name></name></expr>]</index></name></expr></argument>,

                           <argument pos:start="127:28" pos:end="127:37"><expr pos:start="127:28" pos:end="127:37"><name pos:start="127:28" pos:end="127:37">nb_sectors</name></expr></argument>,

                           <argument pos:start="129:28" pos:end="129:63"><expr pos:start="129:28" pos:end="129:63"><name pos:start="129:28" pos:end="129:63"><name pos:start="129:28" pos:end="129:49">FloppyDriveType_lookup</name><index pos:start="129:50" pos:end="129:63">[<expr pos:start="129:51" pos:end="129:62"><name pos:start="129:51" pos:end="129:62"><name pos:start="129:51" pos:end="129:55">parse</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:62">drive</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:27"><expr pos:start="133:9" pos:end="133:26"><name pos:start="133:9" pos:end="133:13">match</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <name pos:start="133:17" pos:end="133:26">type_match</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:74">/* No match of any kind found -- fd_format is misconfigured, abort. */</comment>

    <if_stmt pos:start="141:5" pos:end="149:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:20">(<expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:13">match</name> <operator pos:start="141:15" pos:end="141:16">==</operator> <operator pos:start="141:18" pos:end="141:18">-</operator><literal type="number" pos:start="141:19" pos:end="141:19">1</literal></expr>)</condition> <block pos:start="141:22" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:55">

        <expr_stmt pos:start="143:9" pos:end="147:55"><expr pos:start="143:9" pos:end="147:54"><call pos:start="143:9" pos:end="147:54"><name pos:start="143:9" pos:end="143:18">error_setg</name><argument_list pos:start="143:19" pos:end="147:54">(<argument pos:start="143:20" pos:end="143:31"><expr pos:start="143:20" pos:end="143:31"><operator pos:start="143:20" pos:end="143:20">&amp;</operator><name pos:start="143:21" pos:end="143:31">error_abort</name></expr></argument>, <argument pos:start="143:34" pos:end="145:48"><expr pos:start="143:34" pos:end="145:48"><literal type="string" pos:start="143:34" pos:end="143:76">"No candidate geometries present in table "</literal>

                   <literal type="string" pos:start="145:20" pos:end="145:48">" for floppy drive type '%s'"</literal></expr></argument>,

                   <argument pos:start="147:20" pos:end="147:53"><expr pos:start="147:20" pos:end="147:53"><name pos:start="147:20" pos:end="147:53"><name pos:start="147:20" pos:end="147:41">FloppyDriveType_lookup</name><index pos:start="147:42" pos:end="147:53">[<expr pos:start="147:43" pos:end="147:52"><name pos:start="147:43" pos:end="147:52"><name pos:start="147:43" pos:end="147:45">drv</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:52">drive</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:33"><expr pos:start="153:5" pos:end="153:32"><name pos:start="153:5" pos:end="153:9">parse</name> <operator pos:start="153:11" pos:end="153:11">=</operator> <operator pos:start="153:13" pos:end="153:13">&amp;</operator><operator pos:start="153:14" pos:end="153:14">(</operator><name pos:start="153:15" pos:end="153:31"><name pos:start="153:15" pos:end="153:24">fd_formats</name><index pos:start="153:25" pos:end="153:31">[<expr pos:start="153:26" pos:end="153:30"><name pos:start="153:26" pos:end="153:30">match</name></expr>]</index></name><operator pos:start="153:32" pos:end="153:32">)</operator></expr>;</expr_stmt>



 <label pos:start="157:2" pos:end="157:5"><name pos:start="157:2" pos:end="157:4">out</name>:</label>

    <if_stmt pos:start="159:5" pos:end="167:5"><if pos:start="159:5" pos:end="163:5">if <condition pos:start="159:8" pos:end="159:29">(<expr pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:13">parse</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:23">max_head</name></name> <operator pos:start="159:25" pos:end="159:26">==</operator> <literal type="number" pos:start="159:28" pos:end="159:28">0</literal></expr>)</condition> <block pos:start="159:31" pos:end="163:5">{<block_content pos:start="161:9" pos:end="161:39">

        <expr_stmt pos:start="161:9" pos:end="161:39"><expr pos:start="161:9" pos:end="161:38"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:11">drv</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:18">flags</name></name> <operator pos:start="161:20" pos:end="161:21">&amp;=</operator> <operator pos:start="161:23" pos:end="161:23">~</operator><name pos:start="161:24" pos:end="161:38">FDISK_DBL_SIDES</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="167:5">else <block pos:start="163:12" pos:end="167:5">{<block_content pos:start="165:9" pos:end="165:38">

        <expr_stmt pos:start="165:9" pos:end="165:38"><expr pos:start="165:9" pos:end="165:37"><name pos:start="165:9" pos:end="165:18"><name pos:start="165:9" pos:end="165:11">drv</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:18">flags</name></name> <operator pos:start="165:20" pos:end="165:21">|=</operator> <name pos:start="165:23" pos:end="165:37">FDISK_DBL_SIDES</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:38"><expr pos:start="169:5" pos:end="169:37"><name pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:7">drv</name><operator pos:start="169:8" pos:end="169:9">-&gt;</operator><name pos:start="169:10" pos:end="169:18">max_track</name></name> <operator pos:start="169:20" pos:end="169:20">=</operator> <name pos:start="169:22" pos:end="169:37"><name pos:start="169:22" pos:end="169:26">parse</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:37">max_track</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:38"><expr pos:start="171:5" pos:end="171:37"><name pos:start="171:5" pos:end="171:18"><name pos:start="171:5" pos:end="171:7">drv</name><operator pos:start="171:8" pos:end="171:9">-&gt;</operator><name pos:start="171:10" pos:end="171:18">last_sect</name></name> <operator pos:start="171:20" pos:end="171:20">=</operator> <name pos:start="171:22" pos:end="171:37"><name pos:start="171:22" pos:end="171:26">parse</name><operator pos:start="171:27" pos:end="171:28">-&gt;</operator><name pos:start="171:29" pos:end="171:37">last_sect</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:29"><expr pos:start="173:5" pos:end="173:28"><name pos:start="173:5" pos:end="173:13"><name pos:start="173:5" pos:end="173:7">drv</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:13">disk</name></name> <operator pos:start="173:15" pos:end="173:15">=</operator> <name pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:21">parse</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:28">drive</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:34"><expr pos:start="175:5" pos:end="175:33"><name pos:start="175:5" pos:end="175:19"><name pos:start="175:5" pos:end="175:7">drv</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:19">media_rate</name></name> <operator pos:start="175:21" pos:end="175:21">=</operator> <name pos:start="175:23" pos:end="175:33"><name pos:start="175:23" pos:end="175:27">parse</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:33">rate</name></name></expr>;</expr_stmt>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
