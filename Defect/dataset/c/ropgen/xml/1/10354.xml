<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10354.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:43">gen_op_arith_subf</name><parameter_list pos:start="1:44" pos:end="3:87">(<parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:56">DisasContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">ctx</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:67">TCGv</name></type> <name pos:start="1:69" pos:end="1:71">ret</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:82"><decl pos:start="1:74" pos:end="1:82"><type pos:start="1:74" pos:end="1:82"><name pos:start="1:74" pos:end="1:77">TCGv</name></type> <name pos:start="1:79" pos:end="1:82">arg1</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:93"><decl pos:start="1:85" pos:end="1:93"><type pos:start="1:85" pos:end="1:93"><name pos:start="1:85" pos:end="1:88">TCGv</name></type> <name pos:start="1:90" pos:end="1:93">arg2</name></decl></parameter>,

                                            <parameter pos:start="3:45" pos:end="3:54"><decl pos:start="3:45" pos:end="3:54"><type pos:start="3:45" pos:end="3:54"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:54">add_ca</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:70"><decl pos:start="3:57" pos:end="3:70"><type pos:start="3:57" pos:end="3:70"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:70">compute_ca</name></decl></parameter>, <parameter pos:start="3:73" pos:end="3:86"><decl pos:start="3:73" pos:end="3:86"><type pos:start="3:73" pos:end="3:86"><name pos:start="3:73" pos:end="3:75">int</name></type> <name pos:start="3:77" pos:end="3:86">compute_ov</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:5">

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:11">t0</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:14" pos:end="7:15">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="20:5"><if pos:start="11:5" pos:end="20:5">if <condition pos:start="11:8" pos:end="13:59">(<expr pos:start="11:9" pos:end="13:58"><operator pos:start="11:9" pos:end="11:9">(</operator><operator pos:start="11:10" pos:end="11:10">!</operator><name pos:start="11:11" pos:end="11:20">compute_ca</name> <operator pos:start="11:22" pos:end="11:23">&amp;&amp;</operator> <operator pos:start="11:25" pos:end="11:25">!</operator><name pos:start="11:26" pos:end="11:35">compute_ov</name><operator pos:start="11:36" pos:end="11:36">)</operator> <operator pos:start="11:38" pos:end="11:39">||</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">!</operator><call pos:start="13:11" pos:end="13:31"><name pos:start="13:11" pos:end="13:20">TCGV_EQUAL</name><argument_list pos:start="13:21" pos:end="13:31">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">ret</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">arg1</name></expr></argument>)</argument_list></call> <operator pos:start="13:33" pos:end="13:34">&amp;&amp;</operator> <operator pos:start="13:36" pos:end="13:36">!</operator><call pos:start="13:37" pos:end="13:57"><name pos:start="13:37" pos:end="13:46">TCGV_EQUAL</name><argument_list pos:start="13:47" pos:end="13:57">(<argument pos:start="13:48" pos:end="13:50"><expr pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:50">ret</name></expr></argument>, <argument pos:start="13:53" pos:end="13:56"><expr pos:start="13:53" pos:end="13:56"><name pos:start="13:53" pos:end="13:56">arg2</name></expr></argument>)</argument_list></call><operator pos:start="13:58" pos:end="13:58">)</operator></expr>)</condition>  <block pos:start="13:62" pos:end="20:5">{<block_content pos:start="15:9" pos:end="18:34">

        <expr_stmt pos:start="15:9" pos:end="15:17"><expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">t0</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:16">ret</name></expr>;</expr_stmt>


        <expr_stmt pos:start="18:9" pos:end="18:34"><expr pos:start="18:9" pos:end="18:33"><name pos:start="18:9" pos:end="18:10">t0</name> <operator pos:start="18:12" pos:end="18:12">=</operator> <call pos:start="18:14" pos:end="18:33"><name pos:start="18:14" pos:end="18:31">tcg_temp_local_new</name><argument_list pos:start="18:32" pos:end="18:33">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="24:5" pos:end="34:5"><if pos:start="24:5" pos:end="34:5">if <condition pos:start="24:8" pos:end="24:15">(<expr pos:start="24:9" pos:end="24:14"><name pos:start="24:9" pos:end="24:14">add_ca</name></expr>)</condition> <block pos:start="24:17" pos:end="34:5">{<block_content pos:start="26:9" pos:end="30:40">

        <expr_stmt pos:start="26:9" pos:end="26:34"><expr pos:start="26:9" pos:end="26:33"><name pos:start="26:9" pos:end="26:10">t1</name> <operator pos:start="26:12" pos:end="26:12">=</operator> <call pos:start="26:14" pos:end="26:33"><name pos:start="26:14" pos:end="26:31">tcg_temp_local_new</name><argument_list pos:start="26:32" pos:end="26:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="28:9" pos:end="28:52"><expr pos:start="28:9" pos:end="28:51"><call pos:start="28:9" pos:end="28:51"><name pos:start="28:9" pos:end="28:23">tcg_gen_andi_tl</name><argument_list pos:start="28:24" pos:end="28:51">(<argument pos:start="28:25" pos:end="28:26"><expr pos:start="28:25" pos:end="28:26"><name pos:start="28:25" pos:end="28:26">t1</name></expr></argument>, <argument pos:start="28:29" pos:end="28:35"><expr pos:start="28:29" pos:end="28:35"><name pos:start="28:29" pos:end="28:35">cpu_xer</name></expr></argument>, <argument pos:start="28:38" pos:end="28:50"><expr pos:start="28:38" pos:end="28:50"><operator pos:start="28:38" pos:end="28:38">(</operator><literal type="number" pos:start="28:39" pos:end="28:39">1</literal> <operator pos:start="28:41" pos:end="28:42">&lt;&lt;</operator> <name pos:start="28:44" pos:end="28:49">XER_CA</name><operator pos:start="28:50" pos:end="28:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="30:9" pos:end="30:40"><expr pos:start="30:9" pos:end="30:39"><call pos:start="30:9" pos:end="30:39"><name pos:start="30:9" pos:end="30:23">tcg_gen_shri_tl</name><argument_list pos:start="30:24" pos:end="30:39">(<argument pos:start="30:25" pos:end="30:26"><expr pos:start="30:25" pos:end="30:26"><name pos:start="30:25" pos:end="30:26">t1</name></expr></argument>, <argument pos:start="30:29" pos:end="30:30"><expr pos:start="30:29" pos:end="30:30"><name pos:start="30:29" pos:end="30:30">t1</name></expr></argument>, <argument pos:start="30:33" pos:end="30:38"><expr pos:start="30:33" pos:end="30:38"><name pos:start="30:33" pos:end="30:38">XER_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="38:5" pos:end="56:5"><if pos:start="38:5" pos:end="44:5">if <condition pos:start="38:8" pos:end="38:33">(<expr pos:start="38:9" pos:end="38:32"><name pos:start="38:9" pos:end="38:18">compute_ca</name> <operator pos:start="38:20" pos:end="38:21">&amp;&amp;</operator> <name pos:start="38:23" pos:end="38:32">compute_ov</name></expr>)</condition> <block pos:start="38:35" pos:end="44:5">{<block_content pos:start="42:9" pos:end="42:76">

        <comment type="block" pos:start="40:9" pos:end="40:69">/* Start with XER CA and OV disabled, the most likely case */</comment>

        <expr_stmt pos:start="42:9" pos:end="42:76"><expr pos:start="42:9" pos:end="42:75"><call pos:start="42:9" pos:end="42:75"><name pos:start="42:9" pos:end="42:23">tcg_gen_andi_tl</name><argument_list pos:start="42:24" pos:end="42:75">(<argument pos:start="42:25" pos:end="42:31"><expr pos:start="42:25" pos:end="42:31"><name pos:start="42:25" pos:end="42:31">cpu_xer</name></expr></argument>, <argument pos:start="42:34" pos:end="42:40"><expr pos:start="42:34" pos:end="42:40"><name pos:start="42:34" pos:end="42:40">cpu_xer</name></expr></argument>, <argument pos:start="42:43" pos:end="42:74"><expr pos:start="42:43" pos:end="42:74"><operator pos:start="42:43" pos:end="42:43">~</operator><operator pos:start="42:44" pos:end="42:44">(</operator><operator pos:start="42:45" pos:end="42:45">(</operator><literal type="number" pos:start="42:46" pos:end="42:46">1</literal> <operator pos:start="42:48" pos:end="42:49">&lt;&lt;</operator> <name pos:start="42:51" pos:end="42:56">XER_CA</name><operator pos:start="42:57" pos:end="42:57">)</operator> <operator pos:start="42:59" pos:end="42:59">|</operator> <operator pos:start="42:61" pos:end="42:61">(</operator><literal type="number" pos:start="42:62" pos:end="42:62">1</literal> <operator pos:start="42:64" pos:end="42:65">&lt;&lt;</operator> <name pos:start="42:67" pos:end="42:72">XER_OV</name><operator pos:start="42:73" pos:end="42:73">)</operator><operator pos:start="42:74" pos:end="42:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="44:7" pos:end="50:5">else if <condition pos:start="44:15" pos:end="44:26">(<expr pos:start="44:16" pos:end="44:25"><name pos:start="44:16" pos:end="44:25">compute_ca</name></expr>)</condition> <block pos:start="44:28" pos:end="50:5">{<block_content pos:start="48:9" pos:end="48:58">

        <comment type="block" pos:start="46:9" pos:end="46:62">/* Start with XER CA disabled, the most likely case */</comment>

        <expr_stmt pos:start="48:9" pos:end="48:58"><expr pos:start="48:9" pos:end="48:57"><call pos:start="48:9" pos:end="48:57"><name pos:start="48:9" pos:end="48:23">tcg_gen_andi_tl</name><argument_list pos:start="48:24" pos:end="48:57">(<argument pos:start="48:25" pos:end="48:31"><expr pos:start="48:25" pos:end="48:31"><name pos:start="48:25" pos:end="48:31">cpu_xer</name></expr></argument>, <argument pos:start="48:34" pos:end="48:40"><expr pos:start="48:34" pos:end="48:40"><name pos:start="48:34" pos:end="48:40">cpu_xer</name></expr></argument>, <argument pos:start="48:43" pos:end="48:56"><expr pos:start="48:43" pos:end="48:56"><operator pos:start="48:43" pos:end="48:43">~</operator><operator pos:start="48:44" pos:end="48:44">(</operator><literal type="number" pos:start="48:45" pos:end="48:45">1</literal> <operator pos:start="48:47" pos:end="48:48">&lt;&lt;</operator> <name pos:start="48:50" pos:end="48:55">XER_CA</name><operator pos:start="48:56" pos:end="48:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="50:7" pos:end="56:5">else if <condition pos:start="50:15" pos:end="50:26">(<expr pos:start="50:16" pos:end="50:25"><name pos:start="50:16" pos:end="50:25">compute_ov</name></expr>)</condition> <block pos:start="50:28" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:58">

        <comment type="block" pos:start="52:9" pos:end="52:62">/* Start with XER OV disabled, the most likely case */</comment>

        <expr_stmt pos:start="54:9" pos:end="54:58"><expr pos:start="54:9" pos:end="54:57"><call pos:start="54:9" pos:end="54:57"><name pos:start="54:9" pos:end="54:23">tcg_gen_andi_tl</name><argument_list pos:start="54:24" pos:end="54:57">(<argument pos:start="54:25" pos:end="54:31"><expr pos:start="54:25" pos:end="54:31"><name pos:start="54:25" pos:end="54:31">cpu_xer</name></expr></argument>, <argument pos:start="54:34" pos:end="54:40"><expr pos:start="54:34" pos:end="54:40"><name pos:start="54:34" pos:end="54:40">cpu_xer</name></expr></argument>, <argument pos:start="54:43" pos:end="54:56"><expr pos:start="54:43" pos:end="54:56"><operator pos:start="54:43" pos:end="54:43">~</operator><operator pos:start="54:44" pos:end="54:44">(</operator><literal type="number" pos:start="54:45" pos:end="54:45">1</literal> <operator pos:start="54:47" pos:end="54:48">&lt;&lt;</operator> <name pos:start="54:50" pos:end="54:55">XER_OV</name><operator pos:start="54:56" pos:end="54:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="60:5" pos:end="83:5"><if pos:start="60:5" pos:end="83:5">if <condition pos:start="60:8" pos:end="60:15">(<expr pos:start="60:9" pos:end="60:14"><name pos:start="60:9" pos:end="60:14">add_ca</name></expr>)</condition> <block pos:start="60:17" pos:end="83:5">{<block_content pos:start="62:9" pos:end="81:9">

        <expr_stmt pos:start="62:9" pos:end="62:33"><expr pos:start="62:9" pos:end="62:32"><call pos:start="62:9" pos:end="62:32"><name pos:start="62:9" pos:end="62:22">tcg_gen_not_tl</name><argument_list pos:start="62:23" pos:end="62:32">(<argument pos:start="62:24" pos:end="62:25"><expr pos:start="62:24" pos:end="62:25"><name pos:start="62:24" pos:end="62:25">t0</name></expr></argument>, <argument pos:start="62:28" pos:end="62:31"><expr pos:start="62:28" pos:end="62:31"><name pos:start="62:28" pos:end="62:31">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="64:9" pos:end="64:37"><expr pos:start="64:9" pos:end="64:36"><call pos:start="64:9" pos:end="64:36"><name pos:start="64:9" pos:end="64:22">tcg_gen_add_tl</name><argument_list pos:start="64:23" pos:end="64:36">(<argument pos:start="64:24" pos:end="64:25"><expr pos:start="64:24" pos:end="64:25"><name pos:start="64:24" pos:end="64:25">t0</name></expr></argument>, <argument pos:start="64:28" pos:end="64:29"><expr pos:start="64:28" pos:end="64:29"><name pos:start="64:28" pos:end="64:29">t0</name></expr></argument>, <argument pos:start="64:32" pos:end="64:35"><expr pos:start="64:32" pos:end="64:35"><name pos:start="64:32" pos:end="64:35">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="66:9" pos:end="66:50"><expr pos:start="66:9" pos:end="66:49"><call pos:start="66:9" pos:end="66:49"><name pos:start="66:9" pos:end="66:31">gen_op_arith_compute_ca</name><argument_list pos:start="66:32" pos:end="66:49">(<argument pos:start="66:33" pos:end="66:35"><expr pos:start="66:33" pos:end="66:35"><name pos:start="66:33" pos:end="66:35">ctx</name></expr></argument>, <argument pos:start="66:38" pos:end="66:39"><expr pos:start="66:38" pos:end="66:39"><name pos:start="66:38" pos:end="66:39">t0</name></expr></argument>, <argument pos:start="66:42" pos:end="66:45"><expr pos:start="66:42" pos:end="66:45"><name pos:start="66:42" pos:end="66:45">arg2</name></expr></argument>, <argument pos:start="66:48" pos:end="66:48"><expr pos:start="66:48" pos:end="66:48"><literal type="number" pos:start="66:48" pos:end="66:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="68:9" pos:end="68:35"><expr pos:start="68:9" pos:end="68:34"><call pos:start="68:9" pos:end="68:34"><name pos:start="68:9" pos:end="68:22">tcg_gen_add_tl</name><argument_list pos:start="68:23" pos:end="68:34">(<argument pos:start="68:24" pos:end="68:25"><expr pos:start="68:24" pos:end="68:25"><name pos:start="68:24" pos:end="68:25">t0</name></expr></argument>, <argument pos:start="68:28" pos:end="68:29"><expr pos:start="68:28" pos:end="68:29"><name pos:start="68:28" pos:end="68:29">t0</name></expr></argument>, <argument pos:start="68:32" pos:end="68:33"><expr pos:start="68:32" pos:end="68:33"><name pos:start="68:32" pos:end="68:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="70:9" pos:end="70:48"><expr pos:start="70:9" pos:end="70:47"><call pos:start="70:9" pos:end="70:47"><name pos:start="70:9" pos:end="70:31">gen_op_arith_compute_ca</name><argument_list pos:start="70:32" pos:end="70:47">(<argument pos:start="70:33" pos:end="70:35"><expr pos:start="70:33" pos:end="70:35"><name pos:start="70:33" pos:end="70:35">ctx</name></expr></argument>, <argument pos:start="70:38" pos:end="70:39"><expr pos:start="70:38" pos:end="70:39"><name pos:start="70:38" pos:end="70:39">t0</name></expr></argument>, <argument pos:start="70:42" pos:end="70:43"><expr pos:start="70:42" pos:end="70:43"><name pos:start="70:42" pos:end="70:43">t1</name></expr></argument>, <argument pos:start="70:46" pos:end="70:46"><expr pos:start="70:46" pos:end="70:46"><literal type="number" pos:start="70:46" pos:end="70:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:26"><expr pos:start="72:9" pos:end="72:25"><call pos:start="72:9" pos:end="72:25"><name pos:start="72:9" pos:end="72:21">tcg_temp_free</name><argument_list pos:start="72:22" pos:end="72:25">(<argument pos:start="72:23" pos:end="72:24"><expr pos:start="72:23" pos:end="72:24"><name pos:start="72:23" pos:end="72:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><call pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:22">tcg_gen_sub_tl</name><argument_list pos:start="75:23" pos:end="75:38">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">t0</name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">arg2</name></expr></argument>, <argument pos:start="75:34" pos:end="75:37"><expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:23">(<expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:22">compute_ca</name></expr>)</condition> <block pos:start="77:25" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:54">

            <expr_stmt pos:start="79:13" pos:end="79:54"><expr pos:start="79:13" pos:end="79:53"><call pos:start="79:13" pos:end="79:53"><name pos:start="79:13" pos:end="79:35">gen_op_arith_compute_ca</name><argument_list pos:start="79:36" pos:end="79:53">(<argument pos:start="79:37" pos:end="79:39"><expr pos:start="79:37" pos:end="79:39"><name pos:start="79:37" pos:end="79:39">ctx</name></expr></argument>, <argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">t0</name></expr></argument>, <argument pos:start="79:46" pos:end="79:49"><expr pos:start="79:46" pos:end="79:49"><name pos:start="79:46" pos:end="79:49">arg2</name></expr></argument>, <argument pos:start="79:52" pos:end="79:52"><expr pos:start="79:52" pos:end="79:52"><literal type="number" pos:start="79:52" pos:end="79:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:18">compute_ov</name></expr>)</condition> <block pos:start="85:21" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:56">

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><call pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:31">gen_op_arith_compute_ov</name><argument_list pos:start="87:32" pos:end="87:55">(<argument pos:start="87:33" pos:end="87:35"><expr pos:start="87:33" pos:end="87:35"><name pos:start="87:33" pos:end="87:35">ctx</name></expr></argument>, <argument pos:start="87:38" pos:end="87:39"><expr pos:start="87:38" pos:end="87:39"><name pos:start="87:38" pos:end="87:39">t0</name></expr></argument>, <argument pos:start="87:42" pos:end="87:45"><expr pos:start="87:42" pos:end="87:45"><name pos:start="87:42" pos:end="87:45">arg1</name></expr></argument>, <argument pos:start="87:48" pos:end="87:51"><expr pos:start="87:48" pos:end="87:51"><name pos:start="87:48" pos:end="87:51">arg2</name></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="95:29"><if pos:start="93:5" pos:end="95:29">if <condition pos:start="93:8" pos:end="93:39">(<expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:16">unlikely</name><argument_list pos:start="93:17" pos:end="93:38">(<argument pos:start="93:18" pos:end="93:37"><expr pos:start="93:18" pos:end="93:37"><call pos:start="93:18" pos:end="93:32"><name pos:start="93:18" pos:end="93:19">Rc</name><argument_list pos:start="93:20" pos:end="93:32">(<argument pos:start="93:21" pos:end="93:31"><expr pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:34" pos:end="93:35">!=</operator> <literal type="number" pos:start="93:37" pos:end="93:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:29"><block_content pos:start="95:9" pos:end="95:29">

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:19">gen_set_Rc0</name><argument_list pos:start="95:20" pos:end="95:28">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">ctx</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:29">(<expr pos:start="99:9" pos:end="99:28"><operator pos:start="99:9" pos:end="99:9">!</operator><call pos:start="99:10" pos:end="99:28"><name pos:start="99:10" pos:end="99:19">TCGV_EQUAL</name><argument_list pos:start="99:20" pos:end="99:28">(<argument pos:start="99:21" pos:end="99:22"><expr pos:start="99:21" pos:end="99:22"><name pos:start="99:21" pos:end="99:22">t0</name></expr></argument>, <argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:31" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:26">

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:22">tcg_gen_mov_tl</name><argument_list pos:start="101:23" pos:end="101:31">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">ret</name></expr></argument>, <argument pos:start="101:29" pos:end="101:30"><expr pos:start="101:29" pos:end="101:30"><name pos:start="101:29" pos:end="101:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><call pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:21">tcg_temp_free</name><argument_list pos:start="103:22" pos:end="103:25">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
