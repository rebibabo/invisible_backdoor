<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23439.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:27">v9fs_iov_vunmarshal</name><parameter_list pos:start="1:28" pos:end="3:67">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:34">struct</name> <name pos:start="1:36" pos:end="1:40">iovec</name></name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">out_sg</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:61"><decl pos:start="1:51" pos:end="1:61"><type pos:start="1:51" pos:end="1:61"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:61">out_num</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:69">size_t</name></type> <name pos:start="1:71" pos:end="1:76">offset</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:37">bswap</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><specifier pos:start="3:40" pos:end="3:44">const</specifier> <name pos:start="3:46" pos:end="3:49">char</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">fmt</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:66"><decl pos:start="3:57" pos:end="3:66"><type pos:start="3:57" pos:end="3:66"><name pos:start="3:57" pos:end="3:63">va_list</name></type> <name pos:start="3:65" pos:end="3:66">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="217:1">{<block_content pos:start="7:5" pos:end="215:31">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:18">copied</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">old_offset</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:30">offset</name></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="211:5">for <control pos:start="15:9" pos:end="15:28">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:23"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:19">fmt</name><index pos:start="15:20" pos:end="15:22">[<expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="15:25" pos:end="15:27"><expr pos:start="15:25" pos:end="15:27"><name pos:start="15:25" pos:end="15:25">i</name><operator pos:start="15:26" pos:end="15:27">++</operator></expr></incr>)</control> <block pos:start="15:30" pos:end="211:5">{<block_content pos:start="17:9" pos:end="209:25">

        <switch pos:start="17:9" pos:end="201:9">switch <condition pos:start="17:16" pos:end="17:23">(<expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">fmt</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="17:25" pos:end="201:9">{<block_content pos:start="19:9" pos:end="199:18">

        <case pos:start="19:9" pos:end="19:17">case <expr pos:start="19:14" pos:end="19:16"><literal type="char" pos:start="19:14" pos:end="19:16">'b'</literal></expr>:</case> <block pos:start="19:19" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:18">

            <decl_stmt pos:start="21:13" pos:end="21:50"><decl pos:start="21:13" pos:end="21:49"><type pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:19">uint8_t</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:25">valp</name> <init pos:start="21:27" pos:end="21:49">= <expr pos:start="21:29" pos:end="21:49"><call pos:start="21:29" pos:end="21:49"><name pos:start="21:29" pos:end="21:34">va_arg</name><argument_list pos:start="21:35" pos:end="21:49">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">ap</name></expr></argument>, <argument pos:start="21:40" pos:end="21:48"><expr pos:start="21:40" pos:end="21:48"><name pos:start="21:40" pos:end="21:46">uint8_t</name> <operator pos:start="21:48" pos:end="21:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:79"><expr pos:start="23:13" pos:end="23:78"><name pos:start="23:13" pos:end="23:18">copied</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:78"><name pos:start="23:22" pos:end="23:32">v9fs_unpack</name><argument_list pos:start="23:33" pos:end="23:78">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">valp</name></expr></argument>, <argument pos:start="23:40" pos:end="23:45"><expr pos:start="23:40" pos:end="23:45"><name pos:start="23:40" pos:end="23:45">out_sg</name></expr></argument>, <argument pos:start="23:48" pos:end="23:54"><expr pos:start="23:48" pos:end="23:54"><name pos:start="23:48" pos:end="23:54">out_num</name></expr></argument>, <argument pos:start="23:57" pos:end="23:62"><expr pos:start="23:57" pos:end="23:62"><name pos:start="23:57" pos:end="23:62">offset</name></expr></argument>, <argument pos:start="23:65" pos:end="23:77"><expr pos:start="23:65" pos:end="23:77"><sizeof pos:start="23:65" pos:end="23:77">sizeof<argument_list pos:start="23:71" pos:end="23:77">(<argument pos:start="23:72" pos:end="23:76"><expr pos:start="23:72" pos:end="23:76"><operator pos:start="23:72" pos:end="23:72">*</operator><name pos:start="23:73" pos:end="23:76">valp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block>

        <case pos:start="29:9" pos:end="29:17">case <expr pos:start="29:14" pos:end="29:16"><literal type="char" pos:start="29:14" pos:end="29:16">'w'</literal></expr>:</case> <block pos:start="29:19" pos:end="49:9">{<block_content pos:start="31:13" pos:end="47:18">

            <decl_stmt pos:start="31:13" pos:end="31:32"><decl pos:start="31:13" pos:end="31:24"><type pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">uint16_t</name></type> <name pos:start="31:22" pos:end="31:24">val</name></decl>, <decl pos:start="31:27" pos:end="31:31"><type ref="prev" pos:start="31:13" pos:end="31:20"><modifier pos:start="31:27" pos:end="31:27">*</modifier></type><name pos:start="31:28" pos:end="31:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:42"><expr pos:start="33:13" pos:end="33:41"><name pos:start="33:13" pos:end="33:16">valp</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:41"><name pos:start="33:20" pos:end="33:25">va_arg</name><argument_list pos:start="33:26" pos:end="33:41">(<argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><name pos:start="33:27" pos:end="33:28">ap</name></expr></argument>, <argument pos:start="33:31" pos:end="33:40"><expr pos:start="33:31" pos:end="33:40"><name pos:start="33:31" pos:end="33:38">uint16_t</name> <operator pos:start="33:40" pos:end="33:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:77"><expr pos:start="35:13" pos:end="35:76"><name pos:start="35:13" pos:end="35:18">copied</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <call pos:start="35:22" pos:end="35:76"><name pos:start="35:22" pos:end="35:32">v9fs_unpack</name><argument_list pos:start="35:33" pos:end="35:76">(<argument pos:start="35:34" pos:end="35:37"><expr pos:start="35:34" pos:end="35:37"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:37">val</name></expr></argument>, <argument pos:start="35:40" pos:end="35:45"><expr pos:start="35:40" pos:end="35:45"><name pos:start="35:40" pos:end="35:45">out_sg</name></expr></argument>, <argument pos:start="35:48" pos:end="35:54"><expr pos:start="35:48" pos:end="35:54"><name pos:start="35:48" pos:end="35:54">out_num</name></expr></argument>, <argument pos:start="35:57" pos:end="35:62"><expr pos:start="35:57" pos:end="35:62"><name pos:start="35:57" pos:end="35:62">offset</name></expr></argument>, <argument pos:start="35:65" pos:end="35:75"><expr pos:start="35:65" pos:end="35:75"><sizeof pos:start="35:65" pos:end="35:75">sizeof<argument_list pos:start="35:71" pos:end="35:75">(<argument pos:start="35:72" pos:end="35:74"><expr pos:start="35:72" pos:end="35:74"><name pos:start="35:72" pos:end="35:74">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="45:13"><if pos:start="37:13" pos:end="41:13">if <condition pos:start="37:16" pos:end="37:22">(<expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:21">bswap</name></expr>)</condition> <block pos:start="37:24" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:41">

                <expr_stmt pos:start="39:17" pos:end="39:41"><expr pos:start="39:17" pos:end="39:40"><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:21">valp</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:40"><name pos:start="39:25" pos:end="39:35">le16_to_cpu</name><argument_list pos:start="39:36" pos:end="39:40">(<argument pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="41:15" pos:end="45:13">else <block pos:start="41:20" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:28">

                <expr_stmt pos:start="43:17" pos:end="43:28"><expr pos:start="43:17" pos:end="43:27"><operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:21">valp</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="47:13" pos:end="47:18">break;</break>

        </block_content>}</block>

        <case pos:start="51:9" pos:end="51:17">case <expr pos:start="51:14" pos:end="51:16"><literal type="char" pos:start="51:14" pos:end="51:16">'d'</literal></expr>:</case> <block pos:start="51:19" pos:end="71:9">{<block_content pos:start="53:13" pos:end="69:18">

            <decl_stmt pos:start="53:13" pos:end="53:32"><decl pos:start="53:13" pos:end="53:24"><type pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">uint32_t</name></type> <name pos:start="53:22" pos:end="53:24">val</name></decl>, <decl pos:start="53:27" pos:end="53:31"><type ref="prev" pos:start="53:13" pos:end="53:20"><modifier pos:start="53:27" pos:end="53:27">*</modifier></type><name pos:start="53:28" pos:end="53:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:16">valp</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:41"><name pos:start="55:20" pos:end="55:25">va_arg</name><argument_list pos:start="55:26" pos:end="55:41">(<argument pos:start="55:27" pos:end="55:28"><expr pos:start="55:27" pos:end="55:28"><name pos:start="55:27" pos:end="55:28">ap</name></expr></argument>, <argument pos:start="55:31" pos:end="55:40"><expr pos:start="55:31" pos:end="55:40"><name pos:start="55:31" pos:end="55:38">uint32_t</name> <operator pos:start="55:40" pos:end="55:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:77"><expr pos:start="57:13" pos:end="57:76"><name pos:start="57:13" pos:end="57:18">copied</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <call pos:start="57:22" pos:end="57:76"><name pos:start="57:22" pos:end="57:32">v9fs_unpack</name><argument_list pos:start="57:33" pos:end="57:76">(<argument pos:start="57:34" pos:end="57:37"><expr pos:start="57:34" pos:end="57:37"><operator pos:start="57:34" pos:end="57:34">&amp;</operator><name pos:start="57:35" pos:end="57:37">val</name></expr></argument>, <argument pos:start="57:40" pos:end="57:45"><expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:45">out_sg</name></expr></argument>, <argument pos:start="57:48" pos:end="57:54"><expr pos:start="57:48" pos:end="57:54"><name pos:start="57:48" pos:end="57:54">out_num</name></expr></argument>, <argument pos:start="57:57" pos:end="57:62"><expr pos:start="57:57" pos:end="57:62"><name pos:start="57:57" pos:end="57:62">offset</name></expr></argument>, <argument pos:start="57:65" pos:end="57:75"><expr pos:start="57:65" pos:end="57:75"><sizeof pos:start="57:65" pos:end="57:75">sizeof<argument_list pos:start="57:71" pos:end="57:75">(<argument pos:start="57:72" pos:end="57:74"><expr pos:start="57:72" pos:end="57:74"><name pos:start="57:72" pos:end="57:74">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="67:13"><if pos:start="59:13" pos:end="63:13">if <condition pos:start="59:16" pos:end="59:22">(<expr pos:start="59:17" pos:end="59:21"><name pos:start="59:17" pos:end="59:21">bswap</name></expr>)</condition> <block pos:start="59:24" pos:end="63:13">{<block_content pos:start="61:17" pos:end="61:41">

                <expr_stmt pos:start="61:17" pos:end="61:41"><expr pos:start="61:17" pos:end="61:40"><operator pos:start="61:17" pos:end="61:17">*</operator><name pos:start="61:18" pos:end="61:21">valp</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:40"><name pos:start="61:25" pos:end="61:35">le32_to_cpu</name><argument_list pos:start="61:36" pos:end="61:40">(<argument pos:start="61:37" pos:end="61:39"><expr pos:start="61:37" pos:end="61:39"><name pos:start="61:37" pos:end="61:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="67:13">else <block pos:start="63:20" pos:end="67:13">{<block_content pos:start="65:17" pos:end="65:28">

                <expr_stmt pos:start="65:17" pos:end="65:28"><expr pos:start="65:17" pos:end="65:27"><operator pos:start="65:17" pos:end="65:17">*</operator><name pos:start="65:18" pos:end="65:21">valp</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block>

        <case pos:start="73:9" pos:end="73:17">case <expr pos:start="73:14" pos:end="73:16"><literal type="char" pos:start="73:14" pos:end="73:16">'q'</literal></expr>:</case> <block pos:start="73:19" pos:end="93:9">{<block_content pos:start="75:13" pos:end="91:18">

            <decl_stmt pos:start="75:13" pos:end="75:32"><decl pos:start="75:13" pos:end="75:24"><type pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:20">uint64_t</name></type> <name pos:start="75:22" pos:end="75:24">val</name></decl>, <decl pos:start="75:27" pos:end="75:31"><type ref="prev" pos:start="75:13" pos:end="75:20"><modifier pos:start="75:27" pos:end="75:27">*</modifier></type><name pos:start="75:28" pos:end="75:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:42"><expr pos:start="77:13" pos:end="77:41"><name pos:start="77:13" pos:end="77:16">valp</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:41"><name pos:start="77:20" pos:end="77:25">va_arg</name><argument_list pos:start="77:26" pos:end="77:41">(<argument pos:start="77:27" pos:end="77:28"><expr pos:start="77:27" pos:end="77:28"><name pos:start="77:27" pos:end="77:28">ap</name></expr></argument>, <argument pos:start="77:31" pos:end="77:40"><expr pos:start="77:31" pos:end="77:40"><name pos:start="77:31" pos:end="77:38">uint64_t</name> <operator pos:start="77:40" pos:end="77:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:77"><expr pos:start="79:13" pos:end="79:76"><name pos:start="79:13" pos:end="79:18">copied</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:76"><name pos:start="79:22" pos:end="79:32">v9fs_unpack</name><argument_list pos:start="79:33" pos:end="79:76">(<argument pos:start="79:34" pos:end="79:37"><expr pos:start="79:34" pos:end="79:37"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:37">val</name></expr></argument>, <argument pos:start="79:40" pos:end="79:45"><expr pos:start="79:40" pos:end="79:45"><name pos:start="79:40" pos:end="79:45">out_sg</name></expr></argument>, <argument pos:start="79:48" pos:end="79:54"><expr pos:start="79:48" pos:end="79:54"><name pos:start="79:48" pos:end="79:54">out_num</name></expr></argument>, <argument pos:start="79:57" pos:end="79:62"><expr pos:start="79:57" pos:end="79:62"><name pos:start="79:57" pos:end="79:62">offset</name></expr></argument>, <argument pos:start="79:65" pos:end="79:75"><expr pos:start="79:65" pos:end="79:75"><sizeof pos:start="79:65" pos:end="79:75">sizeof<argument_list pos:start="79:71" pos:end="79:75">(<argument pos:start="79:72" pos:end="79:74"><expr pos:start="79:72" pos:end="79:74"><name pos:start="79:72" pos:end="79:74">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="89:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:22">(<expr pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:21">bswap</name></expr>)</condition> <block pos:start="81:24" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:41">

                <expr_stmt pos:start="83:17" pos:end="83:41"><expr pos:start="83:17" pos:end="83:40"><operator pos:start="83:17" pos:end="83:17">*</operator><name pos:start="83:18" pos:end="83:21">valp</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <call pos:start="83:25" pos:end="83:40"><name pos:start="83:25" pos:end="83:35">le64_to_cpu</name><argument_list pos:start="83:36" pos:end="83:40">(<argument pos:start="83:37" pos:end="83:39"><expr pos:start="83:37" pos:end="83:39"><name pos:start="83:37" pos:end="83:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="85:15" pos:end="89:13">else <block pos:start="85:20" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:28">

                <expr_stmt pos:start="87:17" pos:end="87:28"><expr pos:start="87:17" pos:end="87:27"><operator pos:start="87:17" pos:end="87:17">*</operator><name pos:start="87:18" pos:end="87:21">valp</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        </block_content>}</block>

        <case pos:start="95:9" pos:end="95:17">case <expr pos:start="95:14" pos:end="95:16"><literal type="char" pos:start="95:14" pos:end="95:16">'s'</literal></expr>:</case> <block pos:start="95:19" pos:end="127:9">{<block_content pos:start="97:13" pos:end="125:18">

            <decl_stmt pos:start="97:13" pos:end="97:55"><decl pos:start="97:13" pos:end="97:54"><type pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:22">V9fsString</name> <modifier pos:start="97:24" pos:end="97:24">*</modifier></type><name pos:start="97:25" pos:end="97:27">str</name> <init pos:start="97:29" pos:end="97:54">= <expr pos:start="97:31" pos:end="97:54"><call pos:start="97:31" pos:end="97:54"><name pos:start="97:31" pos:end="97:36">va_arg</name><argument_list pos:start="97:37" pos:end="97:54">(<argument pos:start="97:38" pos:end="97:39"><expr pos:start="97:38" pos:end="97:39"><name pos:start="97:38" pos:end="97:39">ap</name></expr></argument>, <argument pos:start="97:42" pos:end="97:53"><expr pos:start="97:42" pos:end="97:53"><name pos:start="97:42" pos:end="97:51">V9fsString</name> <operator pos:start="97:53" pos:end="97:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="99:13" pos:end="101:57"><expr pos:start="99:13" pos:end="101:56"><name pos:start="99:13" pos:end="99:18">copied</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <call pos:start="99:22" pos:end="101:56"><name pos:start="99:22" pos:end="99:39">v9fs_iov_unmarshal</name><argument_list pos:start="99:40" pos:end="101:56">(<argument pos:start="99:41" pos:end="99:46"><expr pos:start="99:41" pos:end="99:46"><name pos:start="99:41" pos:end="99:46">out_sg</name></expr></argument>, <argument pos:start="99:49" pos:end="99:55"><expr pos:start="99:49" pos:end="99:55"><name pos:start="99:49" pos:end="99:55">out_num</name></expr></argument>, <argument pos:start="99:58" pos:end="99:63"><expr pos:start="99:58" pos:end="99:63"><name pos:start="99:58" pos:end="99:63">offset</name></expr></argument>, <argument pos:start="99:66" pos:end="99:70"><expr pos:start="99:66" pos:end="99:70"><name pos:start="99:66" pos:end="99:70">bswap</name></expr></argument>,

                                        <argument pos:start="101:41" pos:end="101:43"><expr pos:start="101:41" pos:end="101:43"><literal type="string" pos:start="101:41" pos:end="101:43">"w"</literal></expr></argument>, <argument pos:start="101:46" pos:end="101:55"><expr pos:start="101:46" pos:end="101:55"><operator pos:start="101:46" pos:end="101:46">&amp;</operator><name pos:start="101:47" pos:end="101:55"><name pos:start="101:47" pos:end="101:49">str</name><operator pos:start="101:50" pos:end="101:51">-&gt;</operator><name pos:start="101:52" pos:end="101:55">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="123:13"><if pos:start="103:13" pos:end="123:13">if <condition pos:start="103:16" pos:end="103:27">(<expr pos:start="103:17" pos:end="103:26"><name pos:start="103:17" pos:end="103:22">copied</name> <operator pos:start="103:24" pos:end="103:24">&gt;</operator> <literal type="number" pos:start="103:26" pos:end="103:26">0</literal></expr>)</condition> <block pos:start="103:29" pos:end="123:13">{<block_content pos:start="105:17" pos:end="121:17">

                <expr_stmt pos:start="105:17" pos:end="105:33"><expr pos:start="105:17" pos:end="105:32"><name pos:start="105:17" pos:end="105:22">offset</name> <operator pos:start="105:24" pos:end="105:25">+=</operator> <name pos:start="105:27" pos:end="105:32">copied</name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:52"><expr pos:start="107:17" pos:end="107:51"><name pos:start="107:17" pos:end="107:25"><name pos:start="107:17" pos:end="107:19">str</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:25">data</name></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <call pos:start="107:29" pos:end="107:51"><name pos:start="107:29" pos:end="107:36">g_malloc</name><argument_list pos:start="107:37" pos:end="107:51">(<argument pos:start="107:38" pos:end="107:50"><expr pos:start="107:38" pos:end="107:50"><name pos:start="107:38" pos:end="107:46"><name pos:start="107:38" pos:end="107:40">str</name><operator pos:start="107:41" pos:end="107:42">-&gt;</operator><name pos:start="107:43" pos:end="107:46">size</name></name> <operator pos:start="107:48" pos:end="107:48">+</operator> <literal type="number" pos:start="107:50" pos:end="107:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="111:48"><expr pos:start="109:17" pos:end="111:47"><name pos:start="109:17" pos:end="109:22">copied</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <call pos:start="109:26" pos:end="111:47"><name pos:start="109:26" pos:end="109:36">v9fs_unpack</name><argument_list pos:start="109:37" pos:end="111:47">(<argument pos:start="109:38" pos:end="109:46"><expr pos:start="109:38" pos:end="109:46"><name pos:start="109:38" pos:end="109:46"><name pos:start="109:38" pos:end="109:40">str</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:46">data</name></name></expr></argument>, <argument pos:start="109:49" pos:end="109:54"><expr pos:start="109:49" pos:end="109:54"><name pos:start="109:49" pos:end="109:54">out_sg</name></expr></argument>, <argument pos:start="109:57" pos:end="109:63"><expr pos:start="109:57" pos:end="109:63"><name pos:start="109:57" pos:end="109:63">out_num</name></expr></argument>, <argument pos:start="109:66" pos:end="109:71"><expr pos:start="109:66" pos:end="109:71"><name pos:start="109:66" pos:end="109:71">offset</name></expr></argument>,

                                     <argument pos:start="111:38" pos:end="111:46"><expr pos:start="111:38" pos:end="111:46"><name pos:start="111:38" pos:end="111:46"><name pos:start="111:38" pos:end="111:40">str</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:46">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="113:17" pos:end="121:17"><if pos:start="113:17" pos:end="117:17">if <condition pos:start="113:20" pos:end="113:31">(<expr pos:start="113:21" pos:end="113:30"><name pos:start="113:21" pos:end="113:26">copied</name> <operator pos:start="113:28" pos:end="113:28">&gt;</operator> <literal type="number" pos:start="113:30" pos:end="113:30">0</literal></expr>)</condition> <block pos:start="113:33" pos:end="117:17">{<block_content pos:start="115:21" pos:end="115:45">

                    <expr_stmt pos:start="115:21" pos:end="115:45"><expr pos:start="115:21" pos:end="115:44"><name pos:start="115:21" pos:end="115:40"><name pos:start="115:21" pos:end="115:23">str</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:29">data</name><index pos:start="115:30" pos:end="115:40">[<expr pos:start="115:31" pos:end="115:39"><name pos:start="115:31" pos:end="115:39"><name pos:start="115:31" pos:end="115:33">str</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:39">size</name></name></expr>]</index></name> <operator pos:start="115:42" pos:end="115:42">=</operator> <literal type="number" pos:start="115:44" pos:end="115:44">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="121:17">else <block pos:start="117:24" pos:end="121:17">{<block_content pos:start="119:21" pos:end="119:42">

                    <expr_stmt pos:start="119:21" pos:end="119:42"><expr pos:start="119:21" pos:end="119:41"><call pos:start="119:21" pos:end="119:41"><name pos:start="119:21" pos:end="119:36">v9fs_string_free</name><argument_list pos:start="119:37" pos:end="119:41">(<argument pos:start="119:38" pos:end="119:40"><expr pos:start="119:38" pos:end="119:40"><name pos:start="119:38" pos:end="119:40">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        </block_content>}</block>

        <case pos:start="129:9" pos:end="129:17">case <expr pos:start="129:14" pos:end="129:16"><literal type="char" pos:start="129:14" pos:end="129:16">'Q'</literal></expr>:</case> <block pos:start="129:19" pos:end="141:9">{<block_content pos:start="131:13" pos:end="139:18">

            <decl_stmt pos:start="131:13" pos:end="131:50"><decl pos:start="131:13" pos:end="131:49"><type pos:start="131:13" pos:end="131:21"><name pos:start="131:13" pos:end="131:19">V9fsQID</name> <modifier pos:start="131:21" pos:end="131:21">*</modifier></type><name pos:start="131:22" pos:end="131:25">qidp</name> <init pos:start="131:27" pos:end="131:49">= <expr pos:start="131:29" pos:end="131:49"><call pos:start="131:29" pos:end="131:49"><name pos:start="131:29" pos:end="131:34">va_arg</name><argument_list pos:start="131:35" pos:end="131:49">(<argument pos:start="131:36" pos:end="131:37"><expr pos:start="131:36" pos:end="131:37"><name pos:start="131:36" pos:end="131:37">ap</name></expr></argument>, <argument pos:start="131:40" pos:end="131:48"><expr pos:start="131:40" pos:end="131:48"><name pos:start="131:40" pos:end="131:46">V9fsQID</name> <operator pos:start="131:48" pos:end="131:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="137:53"><expr pos:start="133:13" pos:end="137:52"><name pos:start="133:13" pos:end="133:18">copied</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="137:52"><name pos:start="133:22" pos:end="133:39">v9fs_iov_unmarshal</name><argument_list pos:start="133:40" pos:end="137:52">(<argument pos:start="133:41" pos:end="133:46"><expr pos:start="133:41" pos:end="133:46"><name pos:start="133:41" pos:end="133:46">out_sg</name></expr></argument>, <argument pos:start="133:49" pos:end="133:55"><expr pos:start="133:49" pos:end="133:55"><name pos:start="133:49" pos:end="133:55">out_num</name></expr></argument>, <argument pos:start="133:58" pos:end="133:63"><expr pos:start="133:58" pos:end="133:63"><name pos:start="133:58" pos:end="133:63">offset</name></expr></argument>, <argument pos:start="133:66" pos:end="133:70"><expr pos:start="133:66" pos:end="133:70"><name pos:start="133:66" pos:end="133:70">bswap</name></expr></argument>,

                                        <argument pos:start="135:41" pos:end="135:45"><expr pos:start="135:41" pos:end="135:45"><literal type="string" pos:start="135:41" pos:end="135:45">"bdq"</literal></expr></argument>, <argument pos:start="135:48" pos:end="135:58"><expr pos:start="135:48" pos:end="135:58"><operator pos:start="135:48" pos:end="135:48">&amp;</operator><name pos:start="135:49" pos:end="135:58"><name pos:start="135:49" pos:end="135:52">qidp</name><operator pos:start="135:53" pos:end="135:54">-&gt;</operator><name pos:start="135:55" pos:end="135:58">type</name></name></expr></argument>, <argument pos:start="135:61" pos:end="135:74"><expr pos:start="135:61" pos:end="135:74"><operator pos:start="135:61" pos:end="135:61">&amp;</operator><name pos:start="135:62" pos:end="135:74"><name pos:start="135:62" pos:end="135:65">qidp</name><operator pos:start="135:66" pos:end="135:67">-&gt;</operator><name pos:start="135:68" pos:end="135:74">version</name></name></expr></argument>,

                                        <argument pos:start="137:41" pos:end="137:51"><expr pos:start="137:41" pos:end="137:51"><operator pos:start="137:41" pos:end="137:41">&amp;</operator><name pos:start="137:42" pos:end="137:51"><name pos:start="137:42" pos:end="137:45">qidp</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:51">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        </block_content>}</block>

        <case pos:start="143:9" pos:end="143:17">case <expr pos:start="143:14" pos:end="143:16"><literal type="char" pos:start="143:14" pos:end="143:16">'S'</literal></expr>:</case> <block pos:start="143:19" pos:end="171:9">{<block_content pos:start="145:13" pos:end="169:18">

            <decl_stmt pos:start="145:13" pos:end="145:53"><decl pos:start="145:13" pos:end="145:52"><type pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:20">V9fsStat</name> <modifier pos:start="145:22" pos:end="145:22">*</modifier></type><name pos:start="145:23" pos:end="145:27">statp</name> <init pos:start="145:29" pos:end="145:52">= <expr pos:start="145:31" pos:end="145:52"><call pos:start="145:31" pos:end="145:52"><name pos:start="145:31" pos:end="145:36">va_arg</name><argument_list pos:start="145:37" pos:end="145:52">(<argument pos:start="145:38" pos:end="145:39"><expr pos:start="145:38" pos:end="145:39"><name pos:start="145:38" pos:end="145:39">ap</name></expr></argument>, <argument pos:start="145:42" pos:end="145:51"><expr pos:start="145:42" pos:end="145:51"><name pos:start="145:42" pos:end="145:49">V9fsStat</name> <operator pos:start="145:51" pos:end="145:51">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="147:13" pos:end="167:56"><expr pos:start="147:13" pos:end="167:55"><name pos:start="147:13" pos:end="147:18">copied</name> <operator pos:start="147:20" pos:end="147:20">=</operator> <call pos:start="147:22" pos:end="167:55"><name pos:start="147:22" pos:end="147:39">v9fs_iov_unmarshal</name><argument_list pos:start="147:40" pos:end="167:55">(<argument pos:start="147:41" pos:end="147:46"><expr pos:start="147:41" pos:end="147:46"><name pos:start="147:41" pos:end="147:46">out_sg</name></expr></argument>, <argument pos:start="147:49" pos:end="147:55"><expr pos:start="147:49" pos:end="147:55"><name pos:start="147:49" pos:end="147:55">out_num</name></expr></argument>, <argument pos:start="147:58" pos:end="147:63"><expr pos:start="147:58" pos:end="147:63"><name pos:start="147:58" pos:end="147:63">offset</name></expr></argument>, <argument pos:start="147:66" pos:end="147:70"><expr pos:start="147:66" pos:end="147:70"><name pos:start="147:66" pos:end="147:70">bswap</name></expr></argument>,

                                        <argument pos:start="149:41" pos:end="149:58"><expr pos:start="149:41" pos:end="149:58"><literal type="string" pos:start="149:41" pos:end="149:58">"wwdQdddqsssssddd"</literal></expr></argument>,

                                        <argument pos:start="151:41" pos:end="151:52"><expr pos:start="151:41" pos:end="151:52"><operator pos:start="151:41" pos:end="151:41">&amp;</operator><name pos:start="151:42" pos:end="151:52"><name pos:start="151:42" pos:end="151:46">statp</name><operator pos:start="151:47" pos:end="151:48">-&gt;</operator><name pos:start="151:49" pos:end="151:52">size</name></name></expr></argument>, <argument pos:start="151:55" pos:end="151:66"><expr pos:start="151:55" pos:end="151:66"><operator pos:start="151:55" pos:end="151:55">&amp;</operator><name pos:start="151:56" pos:end="151:66"><name pos:start="151:56" pos:end="151:60">statp</name><operator pos:start="151:61" pos:end="151:62">-&gt;</operator><name pos:start="151:63" pos:end="151:66">type</name></name></expr></argument>,

                                        <argument pos:start="153:41" pos:end="153:51"><expr pos:start="153:41" pos:end="153:51"><operator pos:start="153:41" pos:end="153:41">&amp;</operator><name pos:start="153:42" pos:end="153:51"><name pos:start="153:42" pos:end="153:46">statp</name><operator pos:start="153:47" pos:end="153:48">-&gt;</operator><name pos:start="153:49" pos:end="153:51">dev</name></name></expr></argument>, <argument pos:start="153:54" pos:end="153:64"><expr pos:start="153:54" pos:end="153:64"><operator pos:start="153:54" pos:end="153:54">&amp;</operator><name pos:start="153:55" pos:end="153:64"><name pos:start="153:55" pos:end="153:59">statp</name><operator pos:start="153:60" pos:end="153:61">-&gt;</operator><name pos:start="153:62" pos:end="153:64">qid</name></name></expr></argument>,

                                        <argument pos:start="155:41" pos:end="155:52"><expr pos:start="155:41" pos:end="155:52"><operator pos:start="155:41" pos:end="155:41">&amp;</operator><name pos:start="155:42" pos:end="155:52"><name pos:start="155:42" pos:end="155:46">statp</name><operator pos:start="155:47" pos:end="155:48">-&gt;</operator><name pos:start="155:49" pos:end="155:52">mode</name></name></expr></argument>, <argument pos:start="155:55" pos:end="155:67"><expr pos:start="155:55" pos:end="155:67"><operator pos:start="155:55" pos:end="155:55">&amp;</operator><name pos:start="155:56" pos:end="155:67"><name pos:start="155:56" pos:end="155:60">statp</name><operator pos:start="155:61" pos:end="155:62">-&gt;</operator><name pos:start="155:63" pos:end="155:67">atime</name></name></expr></argument>,

                                        <argument pos:start="157:41" pos:end="157:53"><expr pos:start="157:41" pos:end="157:53"><operator pos:start="157:41" pos:end="157:41">&amp;</operator><name pos:start="157:42" pos:end="157:53"><name pos:start="157:42" pos:end="157:46">statp</name><operator pos:start="157:47" pos:end="157:48">-&gt;</operator><name pos:start="157:49" pos:end="157:53">mtime</name></name></expr></argument>, <argument pos:start="157:56" pos:end="157:69"><expr pos:start="157:56" pos:end="157:69"><operator pos:start="157:56" pos:end="157:56">&amp;</operator><name pos:start="157:57" pos:end="157:69"><name pos:start="157:57" pos:end="157:61">statp</name><operator pos:start="157:62" pos:end="157:63">-&gt;</operator><name pos:start="157:64" pos:end="157:69">length</name></name></expr></argument>,

                                        <argument pos:start="159:41" pos:end="159:52"><expr pos:start="159:41" pos:end="159:52"><operator pos:start="159:41" pos:end="159:41">&amp;</operator><name pos:start="159:42" pos:end="159:52"><name pos:start="159:42" pos:end="159:46">statp</name><operator pos:start="159:47" pos:end="159:48">-&gt;</operator><name pos:start="159:49" pos:end="159:52">name</name></name></expr></argument>, <argument pos:start="159:55" pos:end="159:65"><expr pos:start="159:55" pos:end="159:65"><operator pos:start="159:55" pos:end="159:55">&amp;</operator><name pos:start="159:56" pos:end="159:65"><name pos:start="159:56" pos:end="159:60">statp</name><operator pos:start="159:61" pos:end="159:62">-&gt;</operator><name pos:start="159:63" pos:end="159:65">uid</name></name></expr></argument>,

                                        <argument pos:start="161:41" pos:end="161:51"><expr pos:start="161:41" pos:end="161:51"><operator pos:start="161:41" pos:end="161:41">&amp;</operator><name pos:start="161:42" pos:end="161:51"><name pos:start="161:42" pos:end="161:46">statp</name><operator pos:start="161:47" pos:end="161:48">-&gt;</operator><name pos:start="161:49" pos:end="161:51">gid</name></name></expr></argument>, <argument pos:start="161:54" pos:end="161:65"><expr pos:start="161:54" pos:end="161:65"><operator pos:start="161:54" pos:end="161:54">&amp;</operator><name pos:start="161:55" pos:end="161:65"><name pos:start="161:55" pos:end="161:59">statp</name><operator pos:start="161:60" pos:end="161:61">-&gt;</operator><name pos:start="161:62" pos:end="161:65">muid</name></name></expr></argument>,

                                        <argument pos:start="163:41" pos:end="163:57"><expr pos:start="163:41" pos:end="163:57"><operator pos:start="163:41" pos:end="163:41">&amp;</operator><name pos:start="163:42" pos:end="163:57"><name pos:start="163:42" pos:end="163:46">statp</name><operator pos:start="163:47" pos:end="163:48">-&gt;</operator><name pos:start="163:49" pos:end="163:57">extension</name></name></expr></argument>,

                                        <argument pos:start="165:41" pos:end="165:53"><expr pos:start="165:41" pos:end="165:53"><operator pos:start="165:41" pos:end="165:41">&amp;</operator><name pos:start="165:42" pos:end="165:53"><name pos:start="165:42" pos:end="165:46">statp</name><operator pos:start="165:47" pos:end="165:48">-&gt;</operator><name pos:start="165:49" pos:end="165:53">n_uid</name></name></expr></argument>, <argument pos:start="165:56" pos:end="165:68"><expr pos:start="165:56" pos:end="165:68"><operator pos:start="165:56" pos:end="165:56">&amp;</operator><name pos:start="165:57" pos:end="165:68"><name pos:start="165:57" pos:end="165:61">statp</name><operator pos:start="165:62" pos:end="165:63">-&gt;</operator><name pos:start="165:64" pos:end="165:68">n_gid</name></name></expr></argument>,

                                        <argument pos:start="167:41" pos:end="167:54"><expr pos:start="167:41" pos:end="167:54"><operator pos:start="167:41" pos:end="167:41">&amp;</operator><name pos:start="167:42" pos:end="167:54"><name pos:start="167:42" pos:end="167:46">statp</name><operator pos:start="167:47" pos:end="167:48">-&gt;</operator><name pos:start="167:49" pos:end="167:54">n_muid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        </block_content>}</block>

        <case pos:start="173:9" pos:end="173:17">case <expr pos:start="173:14" pos:end="173:16"><literal type="char" pos:start="173:14" pos:end="173:16">'I'</literal></expr>:</case> <block pos:start="173:19" pos:end="195:9">{<block_content pos:start="175:13" pos:end="193:18">

            <decl_stmt pos:start="175:13" pos:end="175:55"><decl pos:start="175:13" pos:end="175:54"><type pos:start="175:13" pos:end="175:23"><name pos:start="175:13" pos:end="175:21">V9fsIattr</name> <modifier pos:start="175:23" pos:end="175:23">*</modifier></type><name pos:start="175:24" pos:end="175:28">iattr</name> <init pos:start="175:30" pos:end="175:54">= <expr pos:start="175:32" pos:end="175:54"><call pos:start="175:32" pos:end="175:54"><name pos:start="175:32" pos:end="175:37">va_arg</name><argument_list pos:start="175:38" pos:end="175:54">(<argument pos:start="175:39" pos:end="175:40"><expr pos:start="175:39" pos:end="175:40"><name pos:start="175:39" pos:end="175:40">ap</name></expr></argument>, <argument pos:start="175:43" pos:end="175:53"><expr pos:start="175:43" pos:end="175:53"><name pos:start="175:43" pos:end="175:51">V9fsIattr</name> <operator pos:start="175:53" pos:end="175:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="177:13" pos:end="191:60"><expr pos:start="177:13" pos:end="191:59"><name pos:start="177:13" pos:end="177:18">copied</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <call pos:start="177:22" pos:end="191:59"><name pos:start="177:22" pos:end="177:39">v9fs_iov_unmarshal</name><argument_list pos:start="177:40" pos:end="191:59">(<argument pos:start="177:41" pos:end="177:46"><expr pos:start="177:41" pos:end="177:46"><name pos:start="177:41" pos:end="177:46">out_sg</name></expr></argument>, <argument pos:start="177:49" pos:end="177:55"><expr pos:start="177:49" pos:end="177:55"><name pos:start="177:49" pos:end="177:55">out_num</name></expr></argument>, <argument pos:start="177:58" pos:end="177:63"><expr pos:start="177:58" pos:end="177:63"><name pos:start="177:58" pos:end="177:63">offset</name></expr></argument>, <argument pos:start="177:66" pos:end="177:70"><expr pos:start="177:66" pos:end="177:70"><name pos:start="177:66" pos:end="177:70">bswap</name></expr></argument>,

                                        <argument pos:start="179:41" pos:end="179:51"><expr pos:start="179:41" pos:end="179:51"><literal type="string" pos:start="179:41" pos:end="179:51">"ddddqqqqq"</literal></expr></argument>,

                                        <argument pos:start="181:41" pos:end="181:53"><expr pos:start="181:41" pos:end="181:53"><operator pos:start="181:41" pos:end="181:41">&amp;</operator><name pos:start="181:42" pos:end="181:53"><name pos:start="181:42" pos:end="181:46">iattr</name><operator pos:start="181:47" pos:end="181:48">-&gt;</operator><name pos:start="181:49" pos:end="181:53">valid</name></name></expr></argument>, <argument pos:start="181:56" pos:end="181:67"><expr pos:start="181:56" pos:end="181:67"><operator pos:start="181:56" pos:end="181:56">&amp;</operator><name pos:start="181:57" pos:end="181:67"><name pos:start="181:57" pos:end="181:61">iattr</name><operator pos:start="181:62" pos:end="181:63">-&gt;</operator><name pos:start="181:64" pos:end="181:67">mode</name></name></expr></argument>,

                                        <argument pos:start="183:41" pos:end="183:51"><expr pos:start="183:41" pos:end="183:51"><operator pos:start="183:41" pos:end="183:41">&amp;</operator><name pos:start="183:42" pos:end="183:51"><name pos:start="183:42" pos:end="183:46">iattr</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:51">uid</name></name></expr></argument>, <argument pos:start="183:54" pos:end="183:64"><expr pos:start="183:54" pos:end="183:64"><operator pos:start="183:54" pos:end="183:54">&amp;</operator><name pos:start="183:55" pos:end="183:64"><name pos:start="183:55" pos:end="183:59">iattr</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:64">gid</name></name></expr></argument>,

                                        <argument pos:start="185:41" pos:end="185:52"><expr pos:start="185:41" pos:end="185:52"><operator pos:start="185:41" pos:end="185:41">&amp;</operator><name pos:start="185:42" pos:end="185:52"><name pos:start="185:42" pos:end="185:46">iattr</name><operator pos:start="185:47" pos:end="185:48">-&gt;</operator><name pos:start="185:49" pos:end="185:52">size</name></name></expr></argument>, <argument pos:start="185:55" pos:end="185:71"><expr pos:start="185:55" pos:end="185:71"><operator pos:start="185:55" pos:end="185:55">&amp;</operator><name pos:start="185:56" pos:end="185:71"><name pos:start="185:56" pos:end="185:60">iattr</name><operator pos:start="185:61" pos:end="185:62">-&gt;</operator><name pos:start="185:63" pos:end="185:71">atime_sec</name></name></expr></argument>,

                                        <argument pos:start="187:41" pos:end="187:58"><expr pos:start="187:41" pos:end="187:58"><operator pos:start="187:41" pos:end="187:41">&amp;</operator><name pos:start="187:42" pos:end="187:58"><name pos:start="187:42" pos:end="187:46">iattr</name><operator pos:start="187:47" pos:end="187:48">-&gt;</operator><name pos:start="187:49" pos:end="187:58">atime_nsec</name></name></expr></argument>,

                                        <argument pos:start="189:41" pos:end="189:57"><expr pos:start="189:41" pos:end="189:57"><operator pos:start="189:41" pos:end="189:41">&amp;</operator><name pos:start="189:42" pos:end="189:57"><name pos:start="189:42" pos:end="189:46">iattr</name><operator pos:start="189:47" pos:end="189:48">-&gt;</operator><name pos:start="189:49" pos:end="189:57">mtime_sec</name></name></expr></argument>,

                                        <argument pos:start="191:41" pos:end="191:58"><expr pos:start="191:41" pos:end="191:58"><operator pos:start="191:41" pos:end="191:41">&amp;</operator><name pos:start="191:42" pos:end="191:58"><name pos:start="191:42" pos:end="191:46">iattr</name><operator pos:start="191:47" pos:end="191:48">-&gt;</operator><name pos:start="191:49" pos:end="191:58">mtime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        </block_content>}</block>

        <default pos:start="197:9" pos:end="197:16">default:</default>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if <condition pos:start="203:12" pos:end="203:23">(<expr pos:start="203:13" pos:end="203:22"><name pos:start="203:13" pos:end="203:18">copied</name> <operator pos:start="203:20" pos:end="203:20">&lt;</operator> <literal type="number" pos:start="203:22" pos:end="203:22">0</literal></expr>)</condition> <block pos:start="203:25" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:26">

            <return pos:start="205:13" pos:end="205:26">return <expr pos:start="205:20" pos:end="205:25"><name pos:start="205:20" pos:end="205:25">copied</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:25"><expr pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:14">offset</name> <operator pos:start="209:16" pos:end="209:17">+=</operator> <name pos:start="209:19" pos:end="209:24">copied</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="215:5" pos:end="215:31">return <expr pos:start="215:12" pos:end="215:30"><name pos:start="215:12" pos:end="215:17">offset</name> <operator pos:start="215:19" pos:end="215:19">-</operator> <name pos:start="215:21" pos:end="215:30">old_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
