<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8229.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_tkhd</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">width</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:28"><name pos:start="11:9" pos:end="11:22">display_matrix</name><index pos:start="11:23" pos:end="11:25">[<expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">3</literal></expr>]</index><index pos:start="11:26" pos:end="11:28">[<expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">MOVStreamContext</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:30">(<expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:13">fc</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:25">nb_streams</name></name> <operator pos:start="23:27" pos:end="23:27">&lt;</operator> <literal type="number" pos:start="23:29" pos:end="23:29">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:6">st</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:44"><name pos:start="27:10" pos:end="27:10">c</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:14">fc</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:23">streams</name><index pos:start="27:24" pos:end="27:44">[<expr pos:start="27:25" pos:end="27:43"><name pos:start="27:25" pos:end="27:41"><name pos:start="27:25" pos:end="27:25">c</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:29">fc</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:41">nb_streams</name></name><operator pos:start="27:42" pos:end="27:42">-</operator><literal type="number" pos:start="27:43" pos:end="27:43">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:6">sc</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:22"><name pos:start="29:10" pos:end="29:11">st</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:22">priv_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:11">version</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:25"><name pos:start="33:15" pos:end="33:21">avio_r8</name><argument_list pos:start="33:22" pos:end="33:25">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:9">flags</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:21">avio_rb24</name><argument_list pos:start="35:22" pos:end="35:25">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:84"><expr pos:start="37:5" pos:end="37:83"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:6">st</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:19">disposition</name></name> <operator pos:start="37:21" pos:end="37:22">|=</operator> <ternary pos:start="37:24" pos:end="37:83"><condition pos:start="37:24" pos:end="37:56"><expr pos:start="37:24" pos:end="37:54"><operator pos:start="37:24" pos:end="37:24">(</operator><name pos:start="37:25" pos:end="37:29">flags</name> <operator pos:start="37:31" pos:end="37:31">&amp;</operator> <name pos:start="37:33" pos:end="37:53">MOV_TKHD_FLAG_ENABLED</name><operator pos:start="37:54" pos:end="37:54">)</operator></expr> ?</condition><then pos:start="37:58" pos:end="37:79"> <expr pos:start="37:58" pos:end="37:79"><name pos:start="37:58" pos:end="37:79">AV_DISPOSITION_DEFAULT</name></expr> </then><else pos:start="37:81" pos:end="37:83">: <expr pos:start="37:83" pos:end="37:83"><literal type="number" pos:start="37:83" pos:end="37:83">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:15">version</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <literal type="number" pos:start="41:20" pos:end="41:20">1</literal></expr>)</condition> <block pos:start="41:23" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:22">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><call pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17">avio_rb64</name><argument_list pos:start="43:18" pos:end="43:21">(<argument pos:start="43:19" pos:end="43:20"><expr pos:start="43:19" pos:end="43:20"><name pos:start="43:19" pos:end="43:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><call pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:17">avio_rb64</name><argument_list pos:start="45:18" pos:end="45:21">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="53:5">else <block pos:start="47:12" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:22">

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><call pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:17">avio_rb32</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:24" pos:end="49:42">/* creation time */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">avio_rb32</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:24" pos:end="51:46">/* modification time */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:10"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:10">id</name></name> <operator pos:start="55:12" pos:end="55:12">=</operator> <operator pos:start="55:14" pos:end="55:14">(</operator><name pos:start="55:15" pos:end="55:17">int</name><operator pos:start="55:18" pos:end="55:18">)</operator><call pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:27">avio_rb32</name><argument_list pos:start="55:28" pos:end="55:31">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:34" pos:end="55:56">/* track id (NOT 0 !)*/</comment>

    <expr_stmt pos:start="57:5" pos:end="57:18"><expr pos:start="57:5" pos:end="57:17"><call pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:13">avio_rb32</name><argument_list pos:start="57:14" pos:end="57:17">(<argument pos:start="57:15" pos:end="57:16"><expr pos:start="57:15" pos:end="57:16"><name pos:start="57:15" pos:end="57:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:20" pos:end="57:33">/* reserved */</comment>



    <comment type="block" pos:start="61:5" pos:end="61:66">/* highlevel (considering edits) duration in movie timebase */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:51"><expr pos:start="63:5" pos:end="63:50"><ternary pos:start="63:5" pos:end="63:50"><condition pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:18"><operator pos:start="63:5" pos:end="63:5">(</operator><name pos:start="63:6" pos:end="63:12">version</name> <operator pos:start="63:14" pos:end="63:15">==</operator> <literal type="number" pos:start="63:17" pos:end="63:17">1</literal><operator pos:start="63:18" pos:end="63:18">)</operator></expr> ?</condition><then pos:start="63:22" pos:end="63:34"> <expr pos:start="63:22" pos:end="63:34"><call pos:start="63:22" pos:end="63:34"><name pos:start="63:22" pos:end="63:30">avio_rb64</name><argument_list pos:start="63:31" pos:end="63:34">(<argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="63:36" pos:end="63:50">: <expr pos:start="63:38" pos:end="63:50"><call pos:start="63:38" pos:end="63:50"><name pos:start="63:38" pos:end="63:46">avio_rb32</name><argument_list pos:start="63:47" pos:end="63:50">(<argument pos:start="63:48" pos:end="63:49"><expr pos:start="63:48" pos:end="63:49"><name pos:start="63:48" pos:end="63:49">pb</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:18"><expr pos:start="65:5" pos:end="65:17"><call pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:13">avio_rb32</name><argument_list pos:start="65:14" pos:end="65:17">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:20" pos:end="65:33">/* reserved */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><call pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:13">avio_rb32</name><argument_list pos:start="67:14" pos:end="67:17">(<argument pos:start="67:15" pos:end="67:16"><expr pos:start="67:15" pos:end="67:16"><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:20" pos:end="67:33">/* reserved */</comment>



    <expr_stmt pos:start="71:5" pos:end="71:18"><expr pos:start="71:5" pos:end="71:17"><call pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:13">avio_rb16</name><argument_list pos:start="71:14" pos:end="71:17">(<argument pos:start="71:15" pos:end="71:16"><expr pos:start="71:15" pos:end="71:16"><name pos:start="71:15" pos:end="71:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:20" pos:end="71:30">/* layer */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:18"><expr pos:start="73:5" pos:end="73:17"><call pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:13">avio_rb16</name><argument_list pos:start="73:14" pos:end="73:17">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:20" pos:end="73:40">/* alternate group */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:18"><expr pos:start="75:5" pos:end="75:17"><call pos:start="75:5" pos:end="75:17"><name pos:start="75:5" pos:end="75:13">avio_rb16</name><argument_list pos:start="75:14" pos:end="75:17">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="75:20" pos:end="75:31">/* volume */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:18"><expr pos:start="77:5" pos:end="77:17"><call pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:13">avio_rb16</name><argument_list pos:start="77:14" pos:end="77:17">(<argument pos:start="77:15" pos:end="77:16"><expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:20" pos:end="77:33">/* reserved */</comment>



    <comment type="line" pos:start="81:5" pos:end="81:74">//read in the display matrix (outlined in ISO 14496-12, Section 6.2.2)</comment>

    <comment type="line" pos:start="83:5" pos:end="83:66">// they're kept in fixed point format through all calculations</comment>

    <comment type="line" pos:start="85:5" pos:end="85:76">// save u,v,z to store the whole matrix in the AV_PKT_DATA_DISPLAYMATRIX</comment>

    <comment type="line" pos:start="87:5" pos:end="87:78">// side data, but the scale factor is not needed to calculate aspect ratio</comment>

    <for pos:start="89:5" pos:end="97:5">for <control pos:start="89:9" pos:end="89:27">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:21"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <literal type="number" pos:start="89:21" pos:end="89:21">3</literal></expr>;</condition> <incr pos:start="89:24" pos:end="89:26"><expr pos:start="89:24" pos:end="89:26"><name pos:start="89:24" pos:end="89:24">i</name><operator pos:start="89:25" pos:end="89:26">++</operator></expr></incr>)</control> <block pos:start="89:29" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:45">

        <expr_stmt pos:start="91:9" pos:end="91:45"><expr pos:start="91:9" pos:end="91:44"><name pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:22">display_matrix</name><index pos:start="91:23" pos:end="91:25">[<expr pos:start="91:24" pos:end="91:24"><name pos:start="91:24" pos:end="91:24">i</name></expr>]</index><index pos:start="91:26" pos:end="91:28">[<expr pos:start="91:27" pos:end="91:27"><literal type="number" pos:start="91:27" pos:end="91:27">0</literal></expr>]</index></name> <operator pos:start="91:30" pos:end="91:30">=</operator> <call pos:start="91:32" pos:end="91:44"><name pos:start="91:32" pos:end="91:40">avio_rb32</name><argument_list pos:start="91:41" pos:end="91:44">(<argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><name pos:start="91:42" pos:end="91:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="91:49" pos:end="91:68">// 16.16 fixed point</comment>

        <expr_stmt pos:start="93:9" pos:end="93:45"><expr pos:start="93:9" pos:end="93:44"><name pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:22">display_matrix</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index><index pos:start="93:26" pos:end="93:28">[<expr pos:start="93:27" pos:end="93:27"><literal type="number" pos:start="93:27" pos:end="93:27">1</literal></expr>]</index></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <call pos:start="93:32" pos:end="93:44"><name pos:start="93:32" pos:end="93:40">avio_rb32</name><argument_list pos:start="93:41" pos:end="93:44">(<argument pos:start="93:42" pos:end="93:43"><expr pos:start="93:42" pos:end="93:43"><name pos:start="93:42" pos:end="93:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="93:49" pos:end="93:68">// 16.16 fixed point</comment>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:22">display_matrix</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">i</name></expr>]</index><index pos:start="95:26" pos:end="95:28">[<expr pos:start="95:27" pos:end="95:27"><literal type="number" pos:start="95:27" pos:end="95:27">2</literal></expr>]</index></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <call pos:start="95:32" pos:end="95:44"><name pos:start="95:32" pos:end="95:40">avio_rb32</name><argument_list pos:start="95:41" pos:end="95:44">(<argument pos:start="95:42" pos:end="95:43"><expr pos:start="95:42" pos:end="95:43"><name pos:start="95:42" pos:end="95:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="95:49" pos:end="95:68">//  2.30 fixed point</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="101:5" pos:end="101:26"><expr pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:9">width</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <call pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:21">avio_rb32</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="101:34" pos:end="101:65">// 16.16 fixed point track width</comment>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:10">height</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <call pos:start="103:14" pos:end="103:26"><name pos:start="103:14" pos:end="103:22">avio_rb32</name><argument_list pos:start="103:23" pos:end="103:26">(<argument pos:start="103:24" pos:end="103:25"><expr pos:start="103:24" pos:end="103:25"><name pos:start="103:24" pos:end="103:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="line" pos:start="103:34" pos:end="103:66">// 16.16 fixed point track height</comment>

    <expr_stmt pos:start="105:5" pos:end="105:28"><expr pos:start="105:5" pos:end="105:27"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:6">sc</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:13">width</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <name pos:start="105:17" pos:end="105:21">width</name> <operator pos:start="105:23" pos:end="105:24">&gt;&gt;</operator> <literal type="number" pos:start="105:26" pos:end="105:27">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:30"><expr pos:start="107:5" pos:end="107:29"><name pos:start="107:5" pos:end="107:14"><name pos:start="107:5" pos:end="107:6">sc</name><operator pos:start="107:7" pos:end="107:8">-&gt;</operator><name pos:start="107:9" pos:end="107:14">height</name></name> <operator pos:start="107:16" pos:end="107:16">=</operator> <name pos:start="107:18" pos:end="107:23">height</name> <operator pos:start="107:25" pos:end="107:26">&gt;&gt;</operator> <literal type="number" pos:start="107:28" pos:end="107:29">16</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="111:5" pos:end="111:73">// save the matrix and add rotate metadata when it is not the default</comment>

    <comment type="line" pos:start="113:5" pos:end="113:15">// identity</comment>

    <if_stmt pos:start="115:5" pos:end="169:5"><if pos:start="115:5" pos:end="169:5">if <condition pos:start="115:8" pos:end="125:53">(<expr pos:start="115:9" pos:end="125:52"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:22">display_matrix</name><index pos:start="115:23" pos:end="115:25">[<expr pos:start="115:24" pos:end="115:24"><literal type="number" pos:start="115:24" pos:end="115:24">0</literal></expr>]</index><index pos:start="115:26" pos:end="115:28">[<expr pos:start="115:27" pos:end="115:27"><literal type="number" pos:start="115:27" pos:end="115:27">0</literal></expr>]</index></name> <operator pos:start="115:30" pos:end="115:31">!=</operator> <operator pos:start="115:33" pos:end="115:33">(</operator><literal type="number" pos:start="115:34" pos:end="115:34">1</literal> <operator pos:start="115:36" pos:end="115:37">&lt;&lt;</operator> <literal type="number" pos:start="115:39" pos:end="115:40">16</literal><operator pos:start="115:41" pos:end="115:41">)</operator> <operator pos:start="115:43" pos:end="115:44">||</operator>

        <name pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:22">display_matrix</name><index pos:start="117:23" pos:end="117:25">[<expr pos:start="117:24" pos:end="117:24"><literal type="number" pos:start="117:24" pos:end="117:24">1</literal></expr>]</index><index pos:start="117:26" pos:end="117:28">[<expr pos:start="117:27" pos:end="117:27"><literal type="number" pos:start="117:27" pos:end="117:27">1</literal></expr>]</index></name> <operator pos:start="117:30" pos:end="117:31">!=</operator> <operator pos:start="117:33" pos:end="117:33">(</operator><literal type="number" pos:start="117:34" pos:end="117:34">1</literal> <operator pos:start="117:36" pos:end="117:37">&lt;&lt;</operator> <literal type="number" pos:start="117:39" pos:end="117:40">16</literal><operator pos:start="117:41" pos:end="117:41">)</operator> <operator pos:start="117:43" pos:end="117:44">||</operator>

        <name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:22">display_matrix</name><index pos:start="119:23" pos:end="119:25">[<expr pos:start="119:24" pos:end="119:24"><literal type="number" pos:start="119:24" pos:end="119:24">2</literal></expr>]</index><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">2</literal></expr>]</index></name> <operator pos:start="119:30" pos:end="119:31">!=</operator> <operator pos:start="119:33" pos:end="119:33">(</operator><literal type="number" pos:start="119:34" pos:end="119:34">1</literal> <operator pos:start="119:36" pos:end="119:37">&lt;&lt;</operator> <literal type="number" pos:start="119:39" pos:end="119:40">30</literal><operator pos:start="119:41" pos:end="119:41">)</operator> <operator pos:start="119:43" pos:end="119:44">||</operator>

        <name pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:22">display_matrix</name><index pos:start="121:23" pos:end="121:25">[<expr pos:start="121:24" pos:end="121:24"><literal type="number" pos:start="121:24" pos:end="121:24">0</literal></expr>]</index><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">1</literal></expr>]</index></name> <operator pos:start="121:30" pos:end="121:31">||</operator> <name pos:start="121:33" pos:end="121:52"><name pos:start="121:33" pos:end="121:46">display_matrix</name><index pos:start="121:47" pos:end="121:49">[<expr pos:start="121:48" pos:end="121:48"><literal type="number" pos:start="121:48" pos:end="121:48">0</literal></expr>]</index><index pos:start="121:50" pos:end="121:52">[<expr pos:start="121:51" pos:end="121:51"><literal type="number" pos:start="121:51" pos:end="121:51">2</literal></expr>]</index></name> <operator pos:start="121:54" pos:end="121:55">||</operator>

        <name pos:start="123:9" pos:end="123:28"><name pos:start="123:9" pos:end="123:22">display_matrix</name><index pos:start="123:23" pos:end="123:25">[<expr pos:start="123:24" pos:end="123:24"><literal type="number" pos:start="123:24" pos:end="123:24">1</literal></expr>]</index><index pos:start="123:26" pos:end="123:28">[<expr pos:start="123:27" pos:end="123:27"><literal type="number" pos:start="123:27" pos:end="123:27">0</literal></expr>]</index></name> <operator pos:start="123:30" pos:end="123:31">||</operator> <name pos:start="123:33" pos:end="123:52"><name pos:start="123:33" pos:end="123:46">display_matrix</name><index pos:start="123:47" pos:end="123:49">[<expr pos:start="123:48" pos:end="123:48"><literal type="number" pos:start="123:48" pos:end="123:48">1</literal></expr>]</index><index pos:start="123:50" pos:end="123:52">[<expr pos:start="123:51" pos:end="123:51"><literal type="number" pos:start="123:51" pos:end="123:51">2</literal></expr>]</index></name> <operator pos:start="123:54" pos:end="123:55">||</operator>

        <name pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:22">display_matrix</name><index pos:start="125:23" pos:end="125:25">[<expr pos:start="125:24" pos:end="125:24"><literal type="number" pos:start="125:24" pos:end="125:24">2</literal></expr>]</index><index pos:start="125:26" pos:end="125:28">[<expr pos:start="125:27" pos:end="125:27"><literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr>]</index></name> <operator pos:start="125:30" pos:end="125:31">||</operator> <name pos:start="125:33" pos:end="125:52"><name pos:start="125:33" pos:end="125:46">display_matrix</name><index pos:start="125:47" pos:end="125:49">[<expr pos:start="125:48" pos:end="125:48"><literal type="number" pos:start="125:48" pos:end="125:48">2</literal></expr>]</index><index pos:start="125:50" pos:end="125:52">[<expr pos:start="125:51" pos:end="125:51"><literal type="number" pos:start="125:51" pos:end="125:51">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="125:55" pos:end="169:5">{<block_content pos:start="127:9" pos:end="167:9">

        <decl_stmt pos:start="127:9" pos:end="127:17"><decl pos:start="127:9" pos:end="127:13"><type pos:start="127:9" pos:end="127:11"><name pos:start="127:9" pos:end="127:11">int</name></type> <name pos:start="127:13" pos:end="127:13">i</name></decl>, <decl pos:start="127:16" pos:end="127:16"><type ref="prev" pos:start="127:9" pos:end="127:11"/><name pos:start="127:16" pos:end="127:16">j</name></decl>;</decl_stmt>

        <decl_stmt pos:start="129:9" pos:end="129:22"><decl pos:start="129:9" pos:end="129:21"><type pos:start="129:9" pos:end="129:14"><name pos:start="129:9" pos:end="129:14">double</name></type> <name pos:start="129:16" pos:end="129:21">rotate</name></decl>;</decl_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:38"><expr pos:start="133:9" pos:end="133:37"><call pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:16">av_freep</name><argument_list pos:start="133:17" pos:end="133:37">(<argument pos:start="133:18" pos:end="133:36"><expr pos:start="133:18" pos:end="133:36"><operator pos:start="133:18" pos:end="133:18">&amp;</operator><name pos:start="133:19" pos:end="133:36"><name pos:start="133:19" pos:end="133:20">sc</name><operator pos:start="133:21" pos:end="133:22">-&gt;</operator><name pos:start="133:23" pos:end="133:36">display_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:60"><expr pos:start="135:9" pos:end="135:59"><name pos:start="135:9" pos:end="135:26"><name pos:start="135:9" pos:end="135:10">sc</name><operator pos:start="135:11" pos:end="135:12">-&gt;</operator><name pos:start="135:13" pos:end="135:26">display_matrix</name></name> <operator pos:start="135:28" pos:end="135:28">=</operator> <call pos:start="135:30" pos:end="135:59"><name pos:start="135:30" pos:end="135:38">av_malloc</name><argument_list pos:start="135:39" pos:end="135:59">(<argument pos:start="135:40" pos:end="135:58"><expr pos:start="135:40" pos:end="135:58"><sizeof pos:start="135:40" pos:end="135:54">sizeof<argument_list pos:start="135:46" pos:end="135:54">(<argument pos:start="135:47" pos:end="135:53"><expr pos:start="135:47" pos:end="135:53"><name pos:start="135:47" pos:end="135:53">int32_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="135:56" pos:end="135:56">*</operator> <literal type="number" pos:start="135:58" pos:end="135:58">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="139:35"><if pos:start="137:9" pos:end="139:35">if <condition pos:start="137:12" pos:end="137:32">(<expr pos:start="137:13" pos:end="137:31"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:31"><name pos:start="137:14" pos:end="137:15">sc</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:31">display_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:35"><block_content pos:start="139:13" pos:end="139:35">

            <return pos:start="139:13" pos:end="139:35">return <expr pos:start="139:20" pos:end="139:34"><call pos:start="139:20" pos:end="139:34"><name pos:start="139:20" pos:end="139:26">AVERROR</name><argument_list pos:start="139:27" pos:end="139:34">(<argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><name pos:start="139:28" pos:end="139:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="143:9" pos:end="147:69">for <control pos:start="143:13" pos:end="143:31">(<init pos:start="143:14" pos:end="143:19"><expr pos:start="143:14" pos:end="143:18"><name pos:start="143:14" pos:end="143:14">i</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal></expr>;</init> <condition pos:start="143:21" pos:end="143:26"><expr pos:start="143:21" pos:end="143:25"><name pos:start="143:21" pos:end="143:21">i</name> <operator pos:start="143:23" pos:end="143:23">&lt;</operator> <literal type="number" pos:start="143:25" pos:end="143:25">3</literal></expr>;</condition> <incr pos:start="143:28" pos:end="143:30"><expr pos:start="143:28" pos:end="143:30"><name pos:start="143:28" pos:end="143:28">i</name><operator pos:start="143:29" pos:end="143:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="145:13" pos:end="147:69"><block_content pos:start="145:13" pos:end="147:69">

            <for pos:start="145:13" pos:end="147:69">for <control pos:start="145:17" pos:end="145:35">(<init pos:start="145:18" pos:end="145:23"><expr pos:start="145:18" pos:end="145:22"><name pos:start="145:18" pos:end="145:18">j</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <literal type="number" pos:start="145:22" pos:end="145:22">0</literal></expr>;</init> <condition pos:start="145:25" pos:end="145:30"><expr pos:start="145:25" pos:end="145:29"><name pos:start="145:25" pos:end="145:25">j</name> <operator pos:start="145:27" pos:end="145:27">&lt;</operator> <literal type="number" pos:start="145:29" pos:end="145:29">3</literal></expr>;</condition> <incr pos:start="145:32" pos:end="145:34"><expr pos:start="145:32" pos:end="145:34"><name pos:start="145:32" pos:end="145:32">j</name><operator pos:start="145:33" pos:end="145:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:17" pos:end="147:69"><block_content pos:start="147:17" pos:end="147:69">

                <expr_stmt pos:start="147:17" pos:end="147:69"><expr pos:start="147:17" pos:end="147:68"><name pos:start="147:17" pos:end="147:45"><name pos:start="147:17" pos:end="147:18">sc</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:34">display_matrix</name><index pos:start="147:35" pos:end="147:45">[<expr pos:start="147:36" pos:end="147:44"><name pos:start="147:36" pos:end="147:36">i</name> <operator pos:start="147:38" pos:end="147:38">*</operator> <literal type="number" pos:start="147:40" pos:end="147:40">3</literal> <operator pos:start="147:42" pos:end="147:42">+</operator> <name pos:start="147:44" pos:end="147:44">j</name></expr>]</index></name> <operator pos:start="147:47" pos:end="147:47">=</operator> <name pos:start="147:49" pos:end="147:68"><name pos:start="147:49" pos:end="147:62">display_matrix</name><index pos:start="147:63" pos:end="147:65">[<expr pos:start="147:64" pos:end="147:64"><name pos:start="147:64" pos:end="147:64">j</name></expr>]</index><index pos:start="147:66" pos:end="147:68">[<expr pos:start="147:67" pos:end="147:67"><name pos:start="147:67" pos:end="147:67">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>



        <expr_stmt pos:start="151:9" pos:end="151:61"><expr pos:start="151:9" pos:end="151:60"><name pos:start="151:9" pos:end="151:14">rotate</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <call pos:start="151:18" pos:end="151:60"><name pos:start="151:18" pos:end="151:40">av_display_rotation_get</name><argument_list pos:start="151:41" pos:end="151:60">(<argument pos:start="151:42" pos:end="151:59"><expr pos:start="151:42" pos:end="151:59"><name pos:start="151:42" pos:end="151:59"><name pos:start="151:42" pos:end="151:43">sc</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:59">display_matrix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="167:9"><if pos:start="153:9" pos:end="167:9">if <condition pos:start="153:12" pos:end="153:27">(<expr pos:start="153:13" pos:end="153:26"><operator pos:start="153:13" pos:end="153:13">!</operator><call pos:start="153:14" pos:end="153:26"><name pos:start="153:14" pos:end="153:18">isnan</name><argument_list pos:start="153:19" pos:end="153:26">(<argument pos:start="153:20" pos:end="153:25"><expr pos:start="153:20" pos:end="153:25"><name pos:start="153:20" pos:end="153:25">rotate</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:29" pos:end="167:9">{<block_content pos:start="155:13" pos:end="165:64">

            <decl_stmt pos:start="155:13" pos:end="155:32"><decl pos:start="155:13" pos:end="155:31"><type pos:start="155:13" pos:end="155:16"><name pos:start="155:13" pos:end="155:16">char</name></type> <name pos:start="155:18" pos:end="155:31"><name pos:start="155:18" pos:end="155:27">rotate_buf</name><index pos:start="155:28" pos:end="155:31">[<expr pos:start="155:29" pos:end="155:30"><literal type="number" pos:start="155:29" pos:end="155:30">64</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:29"><expr pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:18">rotate</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <operator pos:start="157:22" pos:end="157:22">-</operator><name pos:start="157:23" pos:end="157:28">rotate</name></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="161:30"><if pos:start="159:13" pos:end="161:30">if <condition pos:start="159:16" pos:end="159:27">(<expr pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:22">rotate</name> <operator pos:start="159:24" pos:end="159:24">&lt;</operator> <literal type="number" pos:start="159:26" pos:end="159:26">0</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:30"><block_content pos:start="161:17" pos:end="161:30"> <comment type="line" pos:start="159:29" pos:end="159:57">// for backward compatibility</comment>

                <expr_stmt pos:start="161:17" pos:end="161:30"><expr pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:22">rotate</name> <operator pos:start="161:24" pos:end="161:25">+=</operator> <literal type="number" pos:start="161:27" pos:end="161:29">360</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:67"><expr pos:start="163:13" pos:end="163:66"><call pos:start="163:13" pos:end="163:66"><name pos:start="163:13" pos:end="163:20">snprintf</name><argument_list pos:start="163:21" pos:end="163:66">(<argument pos:start="163:22" pos:end="163:31"><expr pos:start="163:22" pos:end="163:31"><name pos:start="163:22" pos:end="163:31">rotate_buf</name></expr></argument>, <argument pos:start="163:34" pos:end="163:51"><expr pos:start="163:34" pos:end="163:51"><sizeof pos:start="163:34" pos:end="163:51">sizeof<argument_list pos:start="163:40" pos:end="163:51">(<argument pos:start="163:41" pos:end="163:50"><expr pos:start="163:41" pos:end="163:50"><name pos:start="163:41" pos:end="163:50">rotate_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="163:54" pos:end="163:57"><expr pos:start="163:54" pos:end="163:57"><literal type="string" pos:start="163:54" pos:end="163:57">"%g"</literal></expr></argument>, <argument pos:start="163:60" pos:end="163:65"><expr pos:start="163:60" pos:end="163:65"><name pos:start="163:60" pos:end="163:65">rotate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:64"><expr pos:start="165:13" pos:end="165:63"><call pos:start="165:13" pos:end="165:63"><name pos:start="165:13" pos:end="165:23">av_dict_set</name><argument_list pos:start="165:24" pos:end="165:63">(<argument pos:start="165:25" pos:end="165:37"><expr pos:start="165:25" pos:end="165:37"><operator pos:start="165:25" pos:end="165:25">&amp;</operator><name pos:start="165:26" pos:end="165:37"><name pos:start="165:26" pos:end="165:27">st</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:37">metadata</name></name></expr></argument>, <argument pos:start="165:40" pos:end="165:47"><expr pos:start="165:40" pos:end="165:47"><literal type="string" pos:start="165:40" pos:end="165:47">"rotate"</literal></expr></argument>, <argument pos:start="165:50" pos:end="165:59"><expr pos:start="165:50" pos:end="165:59"><name pos:start="165:50" pos:end="165:59">rotate_buf</name></expr></argument>, <argument pos:start="165:62" pos:end="165:62"><expr pos:start="165:62" pos:end="165:62"><literal type="number" pos:start="165:62" pos:end="165:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="173:5" pos:end="173:65">// transform the display width/height according to the matrix</comment>

    <comment type="line" pos:start="175:5" pos:end="175:55">// to keep the same scale, use [width height 1&lt;&lt;16]</comment>

    <if_stmt pos:start="177:5" pos:end="201:5"><if pos:start="177:5" pos:end="201:5">if <condition pos:start="177:8" pos:end="177:46">(<expr pos:start="177:9" pos:end="177:45"><name pos:start="177:9" pos:end="177:13">width</name> <operator pos:start="177:15" pos:end="177:16">&amp;&amp;</operator> <name pos:start="177:18" pos:end="177:23">height</name> <operator pos:start="177:25" pos:end="177:26">&amp;&amp;</operator> <name pos:start="177:28" pos:end="177:45"><name pos:start="177:28" pos:end="177:29">sc</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:45">display_matrix</name></name></expr>)</condition> <block pos:start="177:48" pos:end="201:5">{<block_content pos:start="179:9" pos:end="199:25">

        <decl_stmt pos:start="179:9" pos:end="184:0"><decl pos:start="179:9" pos:end="179:32"><type pos:start="179:9" pos:end="179:14"><name pos:start="179:9" pos:end="179:14">double</name></type> <name pos:start="179:16" pos:end="179:32"><name pos:start="179:16" pos:end="179:29">disp_transform</name><index pos:start="179:30" pos:end="179:32">[<expr pos:start="179:31" pos:end="179:31"><literal type="number" pos:start="179:31" pos:end="179:31">2</literal></expr>]</index></name></decl>;</decl_stmt>



<cpp:define pos:start="183:1" pos:end="183:32">#<cpp:directive pos:start="183:2" pos:end="183:7">define</cpp:directive> <cpp:macro pos:start="183:9" pos:end="183:14"><name pos:start="183:9" pos:end="183:11">SQR</name><parameter_list pos:start="183:12" pos:end="183:14">(<parameter pos:start="183:13" pos:end="183:13"><type pos:start="183:13" pos:end="183:13"><name pos:start="183:13" pos:end="183:13">a</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="183:16" pos:end="183:32">((a)*(double)(a))</cpp:value></cpp:define>

        <for pos:start="185:9" pos:end="187:92">for <control pos:start="185:13" pos:end="185:31">(<init pos:start="185:14" pos:end="185:19"><expr pos:start="185:14" pos:end="185:18"><name pos:start="185:14" pos:end="185:14">i</name> <operator pos:start="185:16" pos:end="185:16">=</operator> <literal type="number" pos:start="185:18" pos:end="185:18">0</literal></expr>;</init> <condition pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:25"><name pos:start="185:21" pos:end="185:21">i</name> <operator pos:start="185:23" pos:end="185:23">&lt;</operator> <literal type="number" pos:start="185:25" pos:end="185:25">2</literal></expr>;</condition> <incr pos:start="185:28" pos:end="185:30"><expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:28">i</name><operator pos:start="185:29" pos:end="185:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="187:13" pos:end="187:92"><block_content pos:start="187:13" pos:end="187:92">

            <expr_stmt pos:start="187:13" pos:end="187:92"><expr pos:start="187:13" pos:end="187:91"><name pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:26">disp_transform</name><index pos:start="187:27" pos:end="187:29">[<expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">i</name></expr>]</index></name> <operator pos:start="187:31" pos:end="187:31">=</operator> <call pos:start="187:33" pos:end="187:91"><name pos:start="187:33" pos:end="187:36">sqrt</name><argument_list pos:start="187:37" pos:end="187:91">(<argument pos:start="187:38" pos:end="187:90"><expr pos:start="187:38" pos:end="187:90"><call pos:start="187:38" pos:end="187:62"><name pos:start="187:38" pos:end="187:40">SQR</name><argument_list pos:start="187:41" pos:end="187:62">(<argument pos:start="187:42" pos:end="187:61"><expr pos:start="187:42" pos:end="187:61"><name pos:start="187:42" pos:end="187:61"><name pos:start="187:42" pos:end="187:55">display_matrix</name><index pos:start="187:56" pos:end="187:58">[<expr pos:start="187:57" pos:end="187:57"><name pos:start="187:57" pos:end="187:57">i</name></expr>]</index><index pos:start="187:59" pos:end="187:61">[<expr pos:start="187:60" pos:end="187:60"><literal type="number" pos:start="187:60" pos:end="187:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="187:64" pos:end="187:64">+</operator> <call pos:start="187:66" pos:end="187:90"><name pos:start="187:66" pos:end="187:68">SQR</name><argument_list pos:start="187:69" pos:end="187:90">(<argument pos:start="187:70" pos:end="187:89"><expr pos:start="187:70" pos:end="187:89"><name pos:start="187:70" pos:end="187:89"><name pos:start="187:70" pos:end="187:83">display_matrix</name><index pos:start="187:84" pos:end="187:86">[<expr pos:start="187:85" pos:end="187:85"><name pos:start="187:85" pos:end="187:85">i</name></expr>]</index><index pos:start="187:87" pos:end="187:89">[<expr pos:start="187:88" pos:end="187:88"><literal type="number" pos:start="187:88" pos:end="187:88">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="191:9" pos:end="199:25"><if pos:start="191:9" pos:end="199:25">if <condition pos:start="191:12" pos:end="193:71">(<expr pos:start="191:13" pos:end="193:70"><name pos:start="191:13" pos:end="191:29"><name pos:start="191:13" pos:end="191:26">disp_transform</name><index pos:start="191:27" pos:end="191:29">[<expr pos:start="191:28" pos:end="191:28"><literal type="number" pos:start="191:28" pos:end="191:28">0</literal></expr>]</index></name> <operator pos:start="191:31" pos:end="191:31">&gt;</operator> <literal type="number" pos:start="191:33" pos:end="191:33">0</literal> <operator pos:start="191:35" pos:end="191:36">&amp;&amp;</operator> <name pos:start="191:38" pos:end="191:54"><name pos:start="191:38" pos:end="191:51">disp_transform</name><index pos:start="191:52" pos:end="191:54">[<expr pos:start="191:53" pos:end="191:53"><literal type="number" pos:start="191:53" pos:end="191:53">1</literal></expr>]</index></name> <operator pos:start="191:56" pos:end="191:56">&gt;</operator> <literal type="number" pos:start="191:58" pos:end="191:58">0</literal> <operator pos:start="191:60" pos:end="191:61">&amp;&amp;</operator>

            <call pos:start="193:13" pos:end="193:63"><name pos:start="193:13" pos:end="193:16">fabs</name><argument_list pos:start="193:17" pos:end="193:63">(<argument pos:start="193:18" pos:end="193:62"><expr pos:start="193:18" pos:end="193:62"><operator pos:start="193:18" pos:end="193:18">(</operator><name pos:start="193:19" pos:end="193:35"><name pos:start="193:19" pos:end="193:32">disp_transform</name><index pos:start="193:33" pos:end="193:35">[<expr pos:start="193:34" pos:end="193:34"><literal type="number" pos:start="193:34" pos:end="193:34">0</literal></expr>]</index></name> <operator pos:start="193:37" pos:end="193:37">/</operator> <name pos:start="193:39" pos:end="193:55"><name pos:start="193:39" pos:end="193:52">disp_transform</name><index pos:start="193:53" pos:end="193:55">[<expr pos:start="193:54" pos:end="193:54"><literal type="number" pos:start="193:54" pos:end="193:54">1</literal></expr>]</index></name><operator pos:start="193:56" pos:end="193:56">)</operator> <operator pos:start="193:58" pos:end="193:58">-</operator> <literal type="number" pos:start="193:60" pos:end="193:62">1.0</literal></expr></argument>)</argument_list></call> <operator pos:start="193:65" pos:end="193:65">&gt;</operator> <literal type="number" pos:start="193:67" pos:end="193:70">0.01</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="199:25"><block_content pos:start="195:13" pos:end="199:25">

            <expr_stmt pos:start="195:13" pos:end="199:25"><expr pos:start="195:13" pos:end="199:24"><name pos:start="195:13" pos:end="195:35"><name pos:start="195:13" pos:end="195:14">st</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:35">sample_aspect_ratio</name></name> <operator pos:start="195:37" pos:end="195:37">=</operator> <call pos:start="195:39" pos:end="199:24"><name pos:start="195:39" pos:end="195:44">av_d2q</name><argument_list pos:start="195:45" pos:end="199:24">(

                <argument pos:start="197:17" pos:end="197:53"><expr pos:start="197:17" pos:end="197:53"><name pos:start="197:17" pos:end="197:33"><name pos:start="197:17" pos:end="197:30">disp_transform</name><index pos:start="197:31" pos:end="197:33">[<expr pos:start="197:32" pos:end="197:32"><literal type="number" pos:start="197:32" pos:end="197:32">0</literal></expr>]</index></name> <operator pos:start="197:35" pos:end="197:35">/</operator> <name pos:start="197:37" pos:end="197:53"><name pos:start="197:37" pos:end="197:50">disp_transform</name><index pos:start="197:51" pos:end="197:53">[<expr pos:start="197:52" pos:end="197:52"><literal type="number" pos:start="197:52" pos:end="197:52">1</literal></expr>]</index></name></expr></argument>,

                <argument pos:start="199:17" pos:end="199:23"><expr pos:start="199:17" pos:end="199:23"><name pos:start="199:17" pos:end="199:23">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="203:5" pos:end="203:13">return <expr pos:start="203:12" pos:end="203:12"><literal type="number" pos:start="203:12" pos:end="203:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
