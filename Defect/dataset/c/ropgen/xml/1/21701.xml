<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21701.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">dxtory_decode_v1_rgb</name><parameter_list pos:start="1:32" pos:end="5:48">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">AVFrame</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">pic</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:50">src</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:64">src_size</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:38"><decl pos:start="5:33" pos:end="5:38"><type pos:start="5:33" pos:end="5:38"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:38">id</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:47"><decl pos:start="5:41" pos:end="5:47"><type pos:start="5:41" pos:end="5:47"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:47">bpp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:54">(<expr pos:start="17:9" pos:end="17:53"><name pos:start="17:9" pos:end="17:16">src_size</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <name pos:start="17:20" pos:end="17:31"><name pos:start="17:20" pos:end="17:24">avctx</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:31">width</name></name> <operator pos:start="17:33" pos:end="17:33">*</operator> <name pos:start="17:35" pos:end="17:47"><name pos:start="17:35" pos:end="17:39">avctx</name><operator pos:start="17:40" pos:end="17:41">-&gt;</operator><name pos:start="17:42" pos:end="17:47">height</name></name> <operator pos:start="17:49" pos:end="17:49">*</operator> <name pos:start="17:51" pos:end="17:53">bpp</name></expr>)</condition> <block pos:start="17:56" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:35">

        <expr_stmt pos:start="19:9" pos:end="19:58"><expr pos:start="19:9" pos:end="19:57"><call pos:start="19:9" pos:end="19:57"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:57">(<argument pos:start="19:16" pos:end="19:20"><expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">avctx</name></expr></argument>, <argument pos:start="19:23" pos:end="19:34"><expr pos:start="19:23" pos:end="19:34"><name pos:start="19:23" pos:end="19:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:37" pos:end="19:56"><expr pos:start="19:37" pos:end="19:56"><literal type="string" pos:start="19:37" pos:end="19:56">"packet too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:35">return <expr pos:start="21:16" pos:end="21:34"><name pos:start="21:16" pos:end="21:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">pix_fmt</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:23">id</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:49">(<expr pos:start="29:9" pos:end="29:48"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:43"><name pos:start="29:16" pos:end="29:28">ff_get_buffer</name><argument_list pos:start="29:29" pos:end="29:43">(<argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><name pos:start="29:30" pos:end="29:34">avctx</name></expr></argument>, <argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">pic</name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>)</argument_list></call><operator pos:start="29:44" pos:end="29:44">)</operator> <operator pos:start="29:46" pos:end="29:46">&lt;</operator> <literal type="number" pos:start="29:48" pos:end="29:48">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:23"><expr pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:7">dst</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <name pos:start="35:11" pos:end="35:22"><name pos:start="35:11" pos:end="35:13">pic</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">data</name><index pos:start="35:20" pos:end="35:22">[<expr pos:start="35:21" pos:end="35:21"><literal type="number" pos:start="35:21" pos:end="35:21">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="45:5">for <control pos:start="37:9" pos:end="37:39">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">h</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:34"><expr pos:start="37:17" pos:end="37:33"><name pos:start="37:17" pos:end="37:17">h</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <name pos:start="37:21" pos:end="37:33"><name pos:start="37:21" pos:end="37:25">avctx</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:33">height</name></name></expr>;</condition> <incr pos:start="37:36" pos:end="37:38"><expr pos:start="37:36" pos:end="37:38"><name pos:start="37:36" pos:end="37:36">h</name><operator pos:start="37:37" pos:end="37:38">++</operator></expr></incr>)</control> <block pos:start="37:41" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:32">

        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><call pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:44">(<argument pos:start="39:16" pos:end="39:18"><expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">dst</name></expr></argument>, <argument pos:start="39:21" pos:end="39:23"><expr pos:start="39:21" pos:end="39:23"><name pos:start="39:21" pos:end="39:23">src</name></expr></argument>, <argument pos:start="39:26" pos:end="39:43"><expr pos:start="39:26" pos:end="39:43"><name pos:start="39:26" pos:end="39:37"><name pos:start="39:26" pos:end="39:30">avctx</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:37">width</name></name> <operator pos:start="39:39" pos:end="39:39">*</operator> <name pos:start="39:41" pos:end="39:43">bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">src</name> <operator pos:start="41:13" pos:end="41:14">+=</operator> <name pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:20">avctx</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">width</name></name> <operator pos:start="41:29" pos:end="41:29">*</operator> <name pos:start="41:31" pos:end="41:33">bpp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:32"><expr pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:11">dst</name> <operator pos:start="43:13" pos:end="43:14">+=</operator> <name pos:start="43:16" pos:end="43:31"><name pos:start="43:16" pos:end="43:18">pic</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:28">linesize</name><index pos:start="43:29" pos:end="43:31">[<expr pos:start="43:30" pos:end="43:30"><literal type="number" pos:start="43:30" pos:end="43:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
