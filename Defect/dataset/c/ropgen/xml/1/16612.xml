<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16612.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:32">all_cpu_threads_idle</name><parameter_list pos:start="1:33" pos:end="1:38">(<parameter pos:start="1:34" pos:end="1:37"><decl pos:start="1:34" pos:end="1:37"><type pos:start="1:34" pos:end="1:37"><name pos:start="1:34" pos:end="1:37">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:16">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">env</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="17:5">for <control pos:start="9:9" pos:end="9:59">(<init pos:start="9:10" pos:end="9:25"><expr pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:12">env</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <name pos:start="9:16" pos:end="9:24">first_cpu</name></expr>;</init> <condition pos:start="9:27" pos:end="9:38"><expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:29">env</name> <operator pos:start="9:31" pos:end="9:32">!=</operator> <name pos:start="9:34" pos:end="9:37">NULL</name></expr>;</condition> <incr pos:start="9:40" pos:end="9:58"><expr pos:start="9:40" pos:end="9:58"><name pos:start="9:40" pos:end="9:42">env</name> <operator pos:start="9:44" pos:end="9:44">=</operator> <name pos:start="9:46" pos:end="9:58"><name pos:start="9:46" pos:end="9:48">env</name><operator pos:start="9:49" pos:end="9:50">-&gt;</operator><name pos:start="9:51" pos:end="9:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="9:61" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:9">

        <if_stmt pos:start="11:9" pos:end="15:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:37">(<expr pos:start="11:13" pos:end="11:36"><operator pos:start="11:13" pos:end="11:13">!</operator><call pos:start="11:14" pos:end="11:36"><name pos:start="11:14" pos:end="11:31">cpu_thread_is_idle</name><argument_list pos:start="11:32" pos:end="11:36">(<argument pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:35">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:39" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:25">

            <return pos:start="13:13" pos:end="13:25">return <expr pos:start="13:20" pos:end="13:24"><name pos:start="13:20" pos:end="13:24">false</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="19:5" pos:end="19:16">return <expr pos:start="19:12" pos:end="19:15"><name pos:start="19:12" pos:end="19:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
