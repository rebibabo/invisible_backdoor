<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3483.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">helper_retry</name><parameter_list pos:start="1:18" pos:end="1:37">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:33"><name pos:start="1:19" pos:end="1:31">CPUSPARCState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="52:0">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">trap_state</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">tsptr</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><call pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:33">cpu_tsptr</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:25"><expr pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:11">pc</name></name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:24"><name pos:start="9:15" pos:end="9:19">tsptr</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:24">tpc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:12">npc</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:20">tsptr</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:26">tnpc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:42"><expr pos:start="13:5" pos:end="13:41"><call pos:start="13:5" pos:end="13:41"><name pos:start="13:5" pos:end="13:15">cpu_put_ccr</name><argument_list pos:start="13:16" pos:end="13:41">(<argument pos:start="13:17" pos:end="13:19"><expr pos:start="13:17" pos:end="13:19"><name pos:start="13:17" pos:end="13:19">env</name></expr></argument>, <argument pos:start="13:22" pos:end="13:40"><expr pos:start="13:22" pos:end="13:40"><name pos:start="13:22" pos:end="13:34"><name pos:start="13:22" pos:end="13:26">tsptr</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">tstate</name></name> <operator pos:start="13:36" pos:end="13:37">&gt;&gt;</operator> <literal type="number" pos:start="13:39" pos:end="13:40">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">asi</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:29"><name pos:start="15:17" pos:end="15:21">tsptr</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:29">tstate</name></name> <operator pos:start="15:31" pos:end="15:32">&gt;&gt;</operator> <literal type="number" pos:start="15:34" pos:end="15:35">24</literal><operator pos:start="15:36" pos:end="15:36">)</operator> <operator pos:start="15:38" pos:end="15:38">&amp;</operator> <literal type="number" pos:start="15:40" pos:end="15:43">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:57"><expr pos:start="17:5" pos:end="17:56"><call pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:21">cpu_change_pstate</name><argument_list pos:start="17:22" pos:end="17:56">(<argument pos:start="17:23" pos:end="17:25"><expr pos:start="17:23" pos:end="17:25"><name pos:start="17:23" pos:end="17:25">env</name></expr></argument>, <argument pos:start="17:28" pos:end="17:55"><expr pos:start="17:28" pos:end="17:55"><operator pos:start="17:28" pos:end="17:28">(</operator><name pos:start="17:29" pos:end="17:41"><name pos:start="17:29" pos:end="17:33">tsptr</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:41">tstate</name></name> <operator pos:start="17:43" pos:end="17:44">&gt;&gt;</operator> <literal type="number" pos:start="17:46" pos:end="17:46">8</literal><operator pos:start="17:47" pos:end="17:47">)</operator> <operator pos:start="17:49" pos:end="17:49">&amp;</operator> <literal type="number" pos:start="17:51" pos:end="17:55">0xf3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:17">cpu_put_cwp64</name><argument_list pos:start="19:18" pos:end="19:44">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">env</name></expr></argument>, <argument pos:start="19:24" pos:end="19:43"><expr pos:start="19:24" pos:end="19:43"><name pos:start="19:24" pos:end="19:36"><name pos:start="19:24" pos:end="19:28">tsptr</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:36">tstate</name></name> <operator pos:start="19:38" pos:end="19:38">&amp;</operator> <literal type="number" pos:start="19:40" pos:end="19:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:26">cpu_has_hypervisor</name><argument_list pos:start="21:27" pos:end="21:31">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:34" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:25">

        <decl_stmt pos:start="23:9" pos:end="23:52"><decl pos:start="23:9" pos:end="23:51"><type pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:16">uint32_t</name></type> <name pos:start="23:18" pos:end="23:23">new_gl</name> <init pos:start="23:25" pos:end="23:51">= <expr pos:start="23:27" pos:end="23:51"><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:32">tsptr</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:40">tstate</name></name> <operator pos:start="23:42" pos:end="23:43">&gt;&gt;</operator> <literal type="number" pos:start="23:45" pos:end="23:46">40</literal><operator pos:start="23:47" pos:end="23:47">)</operator> <operator pos:start="23:49" pos:end="23:49">&amp;</operator> <literal type="number" pos:start="23:51" pos:end="23:51">7</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:45"><expr pos:start="25:9" pos:end="25:44"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">env</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:20">hpstate</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:44"><name pos:start="25:24" pos:end="25:26">env</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:35">htstate</name><index pos:start="25:36" pos:end="25:44">[<expr pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:39">env</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:43">tl</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:41"><expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:27">cpu_gl_switch_gregs</name><argument_list pos:start="27:28" pos:end="27:40">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">env</name></expr></argument>, <argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39">new_gl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:25"><expr pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">env</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:15">gl</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:24">new_gl</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:14"><expr pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">tl</name></name><operator pos:start="33:12" pos:end="33:13">--</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="42:0"><expr pos:start="37:5" pos:end="37:35"><call pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:26">trace_win_helper_retry</name><argument_list pos:start="37:27" pos:end="37:35">(<argument pos:start="37:28" pos:end="37:34"><expr pos:start="37:28" pos:end="37:34"><name pos:start="37:28" pos:end="37:34"><name pos:start="37:28" pos:end="37:30">env</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:34">tl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="41:1" pos:end="41:30">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:30"><operator pos:start="41:5" pos:end="41:5">!</operator><call pos:start="41:6" pos:end="41:30"><name pos:start="41:6" pos:end="41:12">defined</name><argument_list pos:start="41:13" pos:end="41:30">(<argument pos:start="41:14" pos:end="41:29"><expr pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="43:5" pos:end="52:0"><if pos:start="43:5" pos:end="52:0">if <condition pos:start="43:8" pos:end="43:36">(<expr pos:start="43:9" pos:end="43:35"><call pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:30">cpu_interrupts_enabled</name><argument_list pos:start="43:31" pos:end="43:35">(<argument pos:start="43:32" pos:end="43:34"><expr pos:start="43:32" pos:end="43:34"><name pos:start="43:32" pos:end="43:34">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:38" pos:end="52:0">{<block_content pos:start="46:9" pos:end="46:28">


        <expr_stmt pos:start="46:9" pos:end="46:28"><expr pos:start="46:9" pos:end="46:27"><call pos:start="46:9" pos:end="46:27"><name pos:start="46:9" pos:end="46:22">cpu_check_irqs</name><argument_list pos:start="46:23" pos:end="46:27">(<argument pos:start="46:24" pos:end="46:26"><expr pos:start="46:24" pos:end="46:26"><name pos:start="46:24" pos:end="46:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
