<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19225.c" pos:tabs="8"><function pos:start="1:1" pos:end="96:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">v9fs_getattr</name><parameter_list pos:start="1:25" pos:end="1:38">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:31"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="96:1">{<block_content pos:start="5:5" pos:end="94:33">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:17">offset</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">ssize_t</name></type> <name pos:start="9:13" pos:end="9:18">retval</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:15">stat</name></name></type> <name pos:start="11:17" pos:end="11:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">V9fsFidState</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:25">request_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">V9fsStatDotl</name></type> <name pos:start="17:18" pos:end="17:28">v9stat_dotl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">V9fsPDU</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">pdu</name> <init pos:start="19:18" pos:end="19:25">= <expr pos:start="19:20" pos:end="19:25"><name pos:start="19:20" pos:end="19:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">V9fsState</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:16">s</name> <init pos:start="21:18" pos:end="21:25">= <expr pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:25"><name pos:start="21:20" pos:end="21:22">pdu</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:25">s</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><call pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:17">pdu_unmarshal</name><argument_list pos:start="25:18" pos:end="25:57">(<argument pos:start="25:19" pos:end="25:21"><expr pos:start="25:19" pos:end="25:21"><name pos:start="25:19" pos:end="25:21">pdu</name></expr></argument>, <argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">offset</name></expr></argument>, <argument pos:start="25:32" pos:end="25:35"><expr pos:start="25:32" pos:end="25:35"><literal type="string" pos:start="25:32" pos:end="25:35">"dq"</literal></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><operator pos:start="25:38" pos:end="25:38">&amp;</operator><name pos:start="25:39" pos:end="25:41">fid</name></expr></argument>, <argument pos:start="25:44" pos:end="25:56"><expr pos:start="25:44" pos:end="25:56"><operator pos:start="25:44" pos:end="25:44">&amp;</operator><name pos:start="25:45" pos:end="25:56">request_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="30:5" pos:end="30:29"><expr pos:start="30:5" pos:end="30:28"><name pos:start="30:5" pos:end="30:8">fidp</name> <operator pos:start="30:10" pos:end="30:10">=</operator> <call pos:start="30:12" pos:end="30:28"><name pos:start="30:12" pos:end="30:18">get_fid</name><argument_list pos:start="30:19" pos:end="30:28">(<argument pos:start="30:20" pos:end="30:22"><expr pos:start="30:20" pos:end="30:22"><name pos:start="30:20" pos:end="30:22">pdu</name></expr></argument>, <argument pos:start="30:25" pos:end="30:27"><expr pos:start="30:25" pos:end="30:27"><name pos:start="30:25" pos:end="30:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="32:5" pos:end="38:5"><if pos:start="32:5" pos:end="38:5">if <condition pos:start="32:8" pos:end="32:21">(<expr pos:start="32:9" pos:end="32:20"><name pos:start="32:9" pos:end="32:12">fidp</name> <operator pos:start="32:14" pos:end="32:15">==</operator> <name pos:start="32:17" pos:end="32:20">NULL</name></expr>)</condition> <block pos:start="32:23" pos:end="38:5">{<block_content pos:start="34:9" pos:end="36:23">

        <expr_stmt pos:start="34:9" pos:end="34:25"><expr pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:14">retval</name> <operator pos:start="34:16" pos:end="34:16">=</operator> <operator pos:start="34:18" pos:end="34:18">-</operator><name pos:start="34:19" pos:end="34:24">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="36:9" pos:end="36:23">goto <name pos:start="36:14" pos:end="36:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="40:5" pos:end="46:7">/*

     * Currently we only support BASIC fields in stat, so there is no

     * need to look at request_mask.

     */</comment>

    <expr_stmt pos:start="48:5" pos:end="48:53"><expr pos:start="48:5" pos:end="48:52"><name pos:start="48:5" pos:end="48:10">retval</name> <operator pos:start="48:12" pos:end="48:12">=</operator> <call pos:start="48:14" pos:end="48:52"><name pos:start="48:14" pos:end="48:26">v9fs_co_lstat</name><argument_list pos:start="48:27" pos:end="48:52">(<argument pos:start="48:28" pos:end="48:30"><expr pos:start="48:28" pos:end="48:30"><name pos:start="48:28" pos:end="48:30">pdu</name></expr></argument>, <argument pos:start="48:33" pos:end="48:43"><expr pos:start="48:33" pos:end="48:43"><operator pos:start="48:33" pos:end="48:33">&amp;</operator><name pos:start="48:34" pos:end="48:43"><name pos:start="48:34" pos:end="48:37">fidp</name><operator pos:start="48:38" pos:end="48:39">-&gt;</operator><name pos:start="48:40" pos:end="48:43">path</name></name></expr></argument>, <argument pos:start="48:46" pos:end="48:51"><expr pos:start="48:46" pos:end="48:51"><operator pos:start="48:46" pos:end="48:46">&amp;</operator><name pos:start="48:47" pos:end="48:51">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="50:5" pos:end="54:5"><if pos:start="50:5" pos:end="54:5">if <condition pos:start="50:8" pos:end="50:19">(<expr pos:start="50:9" pos:end="50:18"><name pos:start="50:9" pos:end="50:14">retval</name> <operator pos:start="50:16" pos:end="50:16">&lt;</operator> <literal type="number" pos:start="50:18" pos:end="50:18">0</literal></expr>)</condition> <block pos:start="50:21" pos:end="54:5">{<block_content pos:start="52:9" pos:end="52:17">

        <goto pos:start="52:9" pos:end="52:17">goto <name pos:start="52:14" pos:end="52:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:49"><expr pos:start="56:5" pos:end="56:48"><call pos:start="56:5" pos:end="56:48"><name pos:start="56:5" pos:end="56:23">stat_to_v9stat_dotl</name><argument_list pos:start="56:24" pos:end="56:48">(<argument pos:start="56:25" pos:end="56:25"><expr pos:start="56:25" pos:end="56:25"><name pos:start="56:25" pos:end="56:25">s</name></expr></argument>, <argument pos:start="56:28" pos:end="56:33"><expr pos:start="56:28" pos:end="56:33"><operator pos:start="56:28" pos:end="56:28">&amp;</operator><name pos:start="56:29" pos:end="56:33">stbuf</name></expr></argument>, <argument pos:start="56:36" pos:end="56:47"><expr pos:start="56:36" pos:end="56:47"><operator pos:start="56:36" pos:end="56:36">&amp;</operator><name pos:start="56:37" pos:end="56:47">v9stat_dotl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="60:5" pos:end="60:66">/*  fill st_gen if requested and supported by underlying fs */</comment>

    <if_stmt pos:start="62:5" pos:end="74:5"><if pos:start="62:5" pos:end="74:5">if <condition pos:start="62:8" pos:end="62:36">(<expr pos:start="62:9" pos:end="62:35"><name pos:start="62:9" pos:end="62:20">request_mask</name> <operator pos:start="62:22" pos:end="62:22">&amp;</operator> <name pos:start="62:24" pos:end="62:35">P9_STATS_GEN</name></expr>)</condition> <block pos:start="62:38" pos:end="74:5">{<block_content pos:start="64:9" pos:end="72:51">

        <expr_stmt pos:start="64:9" pos:end="64:79"><expr pos:start="64:9" pos:end="64:78"><name pos:start="64:9" pos:end="64:14">retval</name> <operator pos:start="64:16" pos:end="64:16">=</operator> <call pos:start="64:18" pos:end="64:78"><name pos:start="64:18" pos:end="64:31">v9fs_co_st_gen</name><argument_list pos:start="64:32" pos:end="64:78">(<argument pos:start="64:33" pos:end="64:35"><expr pos:start="64:33" pos:end="64:35"><name pos:start="64:33" pos:end="64:35">pdu</name></expr></argument>, <argument pos:start="64:38" pos:end="64:48"><expr pos:start="64:38" pos:end="64:48"><operator pos:start="64:38" pos:end="64:38">&amp;</operator><name pos:start="64:39" pos:end="64:48"><name pos:start="64:39" pos:end="64:42">fidp</name><operator pos:start="64:43" pos:end="64:44">-&gt;</operator><name pos:start="64:45" pos:end="64:48">path</name></name></expr></argument>, <argument pos:start="64:51" pos:end="64:63"><expr pos:start="64:51" pos:end="64:63"><name pos:start="64:51" pos:end="64:63"><name pos:start="64:51" pos:end="64:55">stbuf</name><operator pos:start="64:56" pos:end="64:56">.</operator><name pos:start="64:57" pos:end="64:63">st_mode</name></name></expr></argument>, <argument pos:start="64:66" pos:end="64:77"><expr pos:start="64:66" pos:end="64:77"><operator pos:start="64:66" pos:end="64:66">&amp;</operator><name pos:start="64:67" pos:end="64:77">v9stat_dotl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="66:9" pos:end="70:9"><if pos:start="66:9" pos:end="70:9">if <condition pos:start="66:12" pos:end="66:23">(<expr pos:start="66:13" pos:end="66:22"><name pos:start="66:13" pos:end="66:18">retval</name> <operator pos:start="66:20" pos:end="66:20">&lt;</operator> <literal type="number" pos:start="66:22" pos:end="66:22">0</literal></expr>)</condition> <block pos:start="66:25" pos:end="70:9">{<block_content pos:start="68:13" pos:end="68:21">

            <goto pos:start="68:13" pos:end="68:21">goto <name pos:start="68:18" pos:end="68:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:51"><expr pos:start="72:9" pos:end="72:50"><name pos:start="72:9" pos:end="72:34"><name pos:start="72:9" pos:end="72:19">v9stat_dotl</name><operator pos:start="72:20" pos:end="72:20">.</operator><name pos:start="72:21" pos:end="72:34">st_result_mask</name></name> <operator pos:start="72:36" pos:end="72:37">|=</operator> <name pos:start="72:39" pos:end="72:50">P9_STATS_GEN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="76:5" pos:end="76:20"><expr pos:start="76:5" pos:end="76:19"><name pos:start="76:5" pos:end="76:10">retval</name> <operator pos:start="76:12" pos:end="76:12">=</operator> <name pos:start="76:14" pos:end="76:19">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="78:5" pos:end="78:58"><expr pos:start="78:5" pos:end="78:57"><name pos:start="78:5" pos:end="78:10">retval</name> <operator pos:start="78:12" pos:end="78:13">+=</operator> <call pos:start="78:15" pos:end="78:57"><name pos:start="78:15" pos:end="78:25">pdu_marshal</name><argument_list pos:start="78:26" pos:end="78:57">(<argument pos:start="78:27" pos:end="78:29"><expr pos:start="78:27" pos:end="78:29"><name pos:start="78:27" pos:end="78:29">pdu</name></expr></argument>, <argument pos:start="78:32" pos:end="78:37"><expr pos:start="78:32" pos:end="78:37"><name pos:start="78:32" pos:end="78:37">offset</name></expr></argument>, <argument pos:start="78:40" pos:end="78:42"><expr pos:start="78:40" pos:end="78:42"><literal type="string" pos:start="78:40" pos:end="78:42">"A"</literal></expr></argument>, <argument pos:start="78:45" pos:end="78:56"><expr pos:start="78:45" pos:end="78:56"><operator pos:start="78:45" pos:end="78:45">&amp;</operator><name pos:start="78:46" pos:end="78:56">v9stat_dotl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="80:1" pos:end="80:4"><name pos:start="80:1" pos:end="80:3">out</name>:</label>

    <expr_stmt pos:start="82:5" pos:end="82:23"><expr pos:start="82:5" pos:end="82:22"><call pos:start="82:5" pos:end="82:22"><name pos:start="82:5" pos:end="82:11">put_fid</name><argument_list pos:start="82:12" pos:end="82:22">(<argument pos:start="82:13" pos:end="82:15"><expr pos:start="82:13" pos:end="82:15"><name pos:start="82:13" pos:end="82:15">pdu</name></expr></argument>, <argument pos:start="82:18" pos:end="82:21"><expr pos:start="82:18" pos:end="82:21"><name pos:start="82:18" pos:end="82:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="84:1" pos:end="84:10"><name pos:start="84:1" pos:end="84:9">out_nofid</name>:</label>

    <expr_stmt pos:start="86:5" pos:end="90:50"><expr pos:start="86:5" pos:end="90:49"><call pos:start="86:5" pos:end="90:49"><name pos:start="86:5" pos:end="86:29">trace_v9fs_getattr_return</name><argument_list pos:start="86:30" pos:end="90:49">(<argument pos:start="86:31" pos:end="86:38"><expr pos:start="86:31" pos:end="86:38"><name pos:start="86:31" pos:end="86:38"><name pos:start="86:31" pos:end="86:33">pdu</name><operator pos:start="86:34" pos:end="86:35">-&gt;</operator><name pos:start="86:36" pos:end="86:38">tag</name></name></expr></argument>, <argument pos:start="86:41" pos:end="86:47"><expr pos:start="86:41" pos:end="86:47"><name pos:start="86:41" pos:end="86:47"><name pos:start="86:41" pos:end="86:43">pdu</name><operator pos:start="86:44" pos:end="86:45">-&gt;</operator><name pos:start="86:46" pos:end="86:47">id</name></name></expr></argument>, <argument pos:start="86:50" pos:end="86:75"><expr pos:start="86:50" pos:end="86:75"><name pos:start="86:50" pos:end="86:75"><name pos:start="86:50" pos:end="86:60">v9stat_dotl</name><operator pos:start="86:61" pos:end="86:61">.</operator><name pos:start="86:62" pos:end="86:75">st_result_mask</name></name></expr></argument>,

                              <argument pos:start="88:31" pos:end="88:49"><expr pos:start="88:31" pos:end="88:49"><name pos:start="88:31" pos:end="88:49"><name pos:start="88:31" pos:end="88:41">v9stat_dotl</name><operator pos:start="88:42" pos:end="88:42">.</operator><name pos:start="88:43" pos:end="88:49">st_mode</name></name></expr></argument>, <argument pos:start="88:52" pos:end="88:69"><expr pos:start="88:52" pos:end="88:69"><name pos:start="88:52" pos:end="88:69"><name pos:start="88:52" pos:end="88:62">v9stat_dotl</name><operator pos:start="88:63" pos:end="88:63">.</operator><name pos:start="88:64" pos:end="88:69">st_uid</name></name></expr></argument>,

                              <argument pos:start="90:31" pos:end="90:48"><expr pos:start="90:31" pos:end="90:48"><name pos:start="90:31" pos:end="90:48"><name pos:start="90:31" pos:end="90:41">v9stat_dotl</name><operator pos:start="90:42" pos:end="90:42">.</operator><name pos:start="90:43" pos:end="90:48">st_gid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="94:5" pos:end="94:33"><expr pos:start="94:5" pos:end="94:32"><call pos:start="94:5" pos:end="94:32"><name pos:start="94:5" pos:end="94:16">complete_pdu</name><argument_list pos:start="94:17" pos:end="94:32">(<argument pos:start="94:18" pos:end="94:18"><expr pos:start="94:18" pos:end="94:18"><name pos:start="94:18" pos:end="94:18">s</name></expr></argument>, <argument pos:start="94:21" pos:end="94:23"><expr pos:start="94:21" pos:end="94:23"><name pos:start="94:21" pos:end="94:23">pdu</name></expr></argument>, <argument pos:start="94:26" pos:end="94:31"><expr pos:start="94:26" pos:end="94:31"><name pos:start="94:26" pos:end="94:31">retval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
