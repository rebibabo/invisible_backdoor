<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25876.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">virtio_blk_handle_rw_error</name><parameter_list pos:start="1:38" pos:end="3:16">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:52">VirtIOBlockReq</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">req</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">error</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:15"><decl pos:start="3:5" pos:end="3:15"><type pos:start="3:5" pos:end="3:15"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:15">is_read</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

    <decl_stmt pos:start="7:5" pos:end="9:50"><decl pos:start="7:5" pos:end="9:49"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:29">BlockInterfaceErrorAction</name></type> <name pos:start="7:31" pos:end="7:36">action</name> <init pos:start="7:38" pos:end="9:49">=

        <expr pos:start="9:9" pos:end="9:49"><call pos:start="9:9" pos:end="9:49"><name pos:start="9:9" pos:end="9:26">drive_get_on_error</name><argument_list pos:start="9:27" pos:end="9:49">(<argument pos:start="9:28" pos:end="9:39"><expr pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:39"><name pos:start="9:28" pos:end="9:30">req</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:35">dev</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">bs</name></name></expr></argument>, <argument pos:start="9:42" pos:end="9:48"><expr pos:start="9:42" pos:end="9:48"><name pos:start="9:42" pos:end="9:48">is_read</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">VirtIOBlock</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:18">s</name> <init pos:start="11:20" pos:end="11:29">= <expr pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:29"><name pos:start="11:22" pos:end="11:24">req</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:29">dev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:14">action</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:34">BLOCK_ERR_IGNORE</name></expr>)</condition> <block pos:start="15:37" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:66"><expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:65"><name pos:start="17:9" pos:end="17:22">bdrv_mon_event</name><argument_list pos:start="17:23" pos:end="17:65">(<argument pos:start="17:24" pos:end="17:35"><expr pos:start="17:24" pos:end="17:35"><name pos:start="17:24" pos:end="17:35"><name pos:start="17:24" pos:end="17:26">req</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:31">dev</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:35">bs</name></name></expr></argument>, <argument pos:start="17:38" pos:end="17:55"><expr pos:start="17:38" pos:end="17:55"><name pos:start="17:38" pos:end="17:55">BDRV_ACTION_IGNORE</name></expr></argument>, <argument pos:start="17:58" pos:end="17:64"><expr pos:start="17:58" pos:end="17:64"><name pos:start="17:58" pos:end="17:64">is_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="43:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="27:44">(<expr pos:start="25:9" pos:end="27:43"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:14">error</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <name pos:start="25:19" pos:end="25:24">ENOSPC</name> <operator pos:start="25:26" pos:end="25:27">&amp;&amp;</operator> <name pos:start="25:29" pos:end="25:34">action</name> <operator pos:start="25:36" pos:end="25:37">==</operator> <name pos:start="25:39" pos:end="25:59">BLOCK_ERR_STOP_ENOSPC</name><operator pos:start="25:60" pos:end="25:60">)</operator>

            <operator pos:start="27:13" pos:end="27:14">||</operator> <name pos:start="27:16" pos:end="27:21">action</name> <operator pos:start="27:23" pos:end="27:24">==</operator> <name pos:start="27:26" pos:end="27:43">BLOCK_ERR_STOP_ANY</name></expr>)</condition> <block pos:start="27:46" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:19">

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:11">req</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:17">next</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:25"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:25">rq</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:20"><expr pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:13">rq</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:19">req</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:64"><expr pos:start="33:9" pos:end="33:63"><call pos:start="33:9" pos:end="33:63"><name pos:start="33:9" pos:end="33:22">bdrv_mon_event</name><argument_list pos:start="33:23" pos:end="33:63">(<argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:26">req</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:31">dev</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:35">bs</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:53"><expr pos:start="33:38" pos:end="33:53"><name pos:start="33:38" pos:end="33:53">BDRV_ACTION_STOP</name></expr></argument>, <argument pos:start="33:56" pos:end="33:62"><expr pos:start="33:56" pos:end="33:62"><name pos:start="33:56" pos:end="33:62">is_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><call pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:15">vm_stop</name><argument_list pos:start="35:16" pos:end="35:18">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:66">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><call pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:31">virtio_blk_req_complete</name><argument_list pos:start="39:32" pos:end="39:56">(<argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">req</name></expr></argument>, <argument pos:start="39:38" pos:end="39:55"><expr pos:start="39:38" pos:end="39:55"><name pos:start="39:38" pos:end="39:55">VIRTIO_BLK_S_IOERR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><call pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:22">bdrv_mon_event</name><argument_list pos:start="41:23" pos:end="41:65">(<argument pos:start="41:24" pos:end="41:35"><expr pos:start="41:24" pos:end="41:35"><name pos:start="41:24" pos:end="41:35"><name pos:start="41:24" pos:end="41:26">req</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">dev</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:35">bs</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:55"><expr pos:start="41:38" pos:end="41:55"><name pos:start="41:38" pos:end="41:55">BDRV_ACTION_REPORT</name></expr></argument>, <argument pos:start="41:58" pos:end="41:64"><expr pos:start="41:58" pos:end="41:64"><name pos:start="41:58" pos:end="41:64">is_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
