<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16208.c" pos:tabs="8"><function pos:start="1:1" pos:end="995:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int32_t</name></type> <name pos:start="1:16" pos:end="1:32">scsi_send_command</name><parameter_list pos:start="1:33" pos:end="3:55">(<parameter pos:start="1:34" pos:end="1:46"><decl pos:start="1:34" pos:end="1:46"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:43">SCSIDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">d</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:60">tag</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:40">uint8_t</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">buf</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:54"><decl pos:start="3:48" pos:end="3:54"><type pos:start="3:48" pos:end="3:54"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:54">lun</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="995:1">{<block_content pos:start="7:5" pos:end="993:5">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">SCSIDeviceState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:33">= <expr pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:26">d</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:33">state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:23">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">lba</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">cmdlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">is_write</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:19">command</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:19">outbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:15">SCSIRequest</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:18">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:11">command</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:20"><name pos:start="27:15" pos:end="27:17">buf</name><index pos:start="27:18" pos:end="27:20">[<expr pos:start="27:19" pos:end="27:19"><literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:5">r</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:25">scsi_find_request</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><name pos:start="29:27" pos:end="29:27">s</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:10">(<expr pos:start="31:9" pos:end="31:9"><name pos:start="31:9" pos:end="31:9">r</name></expr>)</condition> <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:12">BADF</name><argument_list pos:start="33:13" pos:end="33:46">(<argument pos:start="33:14" pos:end="33:40"><expr pos:start="33:14" pos:end="33:40"><literal type="string" pos:start="33:14" pos:end="33:40">"Tag 0x%x already in use\n"</literal></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><call pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:22">scsi_cancel_io</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">d</name></expr></argument>, <argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="39:5" pos:end="41:49">/* ??? Tags are not unique for different luns.  We only implement a

       single lun, so this should not matter.  */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:5">r</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:24">scsi_new_request</name><argument_list pos:start="43:25" pos:end="43:32">(<argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">s</name></expr></argument>, <argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:10">outbuf</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:23"><name pos:start="45:14" pos:end="45:14">r</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">dma_buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:12">is_write</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:70"><expr pos:start="49:5" pos:end="49:69"><call pos:start="49:5" pos:end="49:69"><name pos:start="49:5" pos:end="49:11">DPRINTF</name><argument_list pos:start="49:12" pos:end="49:69">(<argument pos:start="49:13" pos:end="49:50"><expr pos:start="49:13" pos:end="49:50"><literal type="string" pos:start="49:13" pos:end="49:50">"Command: lun=%d tag=0x%x data=0x%02x"</literal></expr></argument>, <argument pos:start="49:53" pos:end="49:55"><expr pos:start="49:53" pos:end="49:55"><name pos:start="49:53" pos:end="49:55">lun</name></expr></argument>, <argument pos:start="49:58" pos:end="49:60"><expr pos:start="49:58" pos:end="49:60"><name pos:start="49:58" pos:end="49:60">tag</name></expr></argument>, <argument pos:start="49:63" pos:end="49:68"><expr pos:start="49:63" pos:end="49:68"><name pos:start="49:63" pos:end="49:68"><name pos:start="49:63" pos:end="49:65">buf</name><index pos:start="49:66" pos:end="49:68">[<expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="51:5" pos:end="104:0">switch <condition pos:start="51:12" pos:end="51:25">(<expr pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:19">command</name> <operator pos:start="51:21" pos:end="51:22">&gt;&gt;</operator> <literal type="number" pos:start="51:24" pos:end="51:24">5</literal></expr>)</condition> <block pos:start="51:27" pos:end="104:0">{<block_content pos:start="53:5" pos:end="99:18">

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">0</literal></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:63"><expr pos:start="55:9" pos:end="55:62"><name pos:start="55:9" pos:end="55:11">lba</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:20"><name pos:start="55:15" pos:end="55:17">buf</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">3</literal></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">|</operator> <operator pos:start="55:24" pos:end="55:24">(</operator><name pos:start="55:25" pos:end="55:30"><name pos:start="55:25" pos:end="55:27">buf</name><index pos:start="55:28" pos:end="55:30">[<expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">2</literal></expr>]</index></name> <operator pos:start="55:32" pos:end="55:33">&lt;&lt;</operator> <literal type="number" pos:start="55:35" pos:end="55:35">8</literal><operator pos:start="55:36" pos:end="55:36">)</operator> <operator pos:start="55:38" pos:end="55:38">|</operator> <operator pos:start="55:40" pos:end="55:40">(</operator><operator pos:start="55:41" pos:end="55:41">(</operator><name pos:start="55:42" pos:end="55:47"><name pos:start="55:42" pos:end="55:44">buf</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">1</literal></expr>]</index></name> <operator pos:start="55:49" pos:end="55:49">&amp;</operator> <literal type="number" pos:start="55:51" pos:end="55:54">0x1f</literal><operator pos:start="55:55" pos:end="55:55">)</operator> <operator pos:start="55:57" pos:end="55:58">&lt;&lt;</operator> <literal type="number" pos:start="55:60" pos:end="55:61">16</literal><operator pos:start="55:62" pos:end="55:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">len</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:20"><name pos:start="57:15" pos:end="57:17">buf</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><literal type="number" pos:start="57:19" pos:end="57:19">4</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:19"><expr pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:14">cmdlen</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">6</literal></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">1</literal></expr>:</case>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">2</literal></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:71"><expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:11">lba</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:20"><name pos:start="67:15" pos:end="67:17">buf</name><index pos:start="67:18" pos:end="67:20">[<expr pos:start="67:19" pos:end="67:19"><literal type="number" pos:start="67:19" pos:end="67:19">5</literal></expr>]</index></name> <operator pos:start="67:22" pos:end="67:22">|</operator> <operator pos:start="67:24" pos:end="67:24">(</operator><name pos:start="67:25" pos:end="67:30"><name pos:start="67:25" pos:end="67:27">buf</name><index pos:start="67:28" pos:end="67:30">[<expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">4</literal></expr>]</index></name> <operator pos:start="67:32" pos:end="67:33">&lt;&lt;</operator> <literal type="number" pos:start="67:35" pos:end="67:35">8</literal><operator pos:start="67:36" pos:end="67:36">)</operator> <operator pos:start="67:38" pos:end="67:38">|</operator> <operator pos:start="67:40" pos:end="67:40">(</operator><name pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:43">buf</name><index pos:start="67:44" pos:end="67:46">[<expr pos:start="67:45" pos:end="67:45"><literal type="number" pos:start="67:45" pos:end="67:45">3</literal></expr>]</index></name> <operator pos:start="67:48" pos:end="67:49">&lt;&lt;</operator> <literal type="number" pos:start="67:51" pos:end="67:52">16</literal><operator pos:start="67:53" pos:end="67:53">)</operator> <operator pos:start="67:55" pos:end="67:55">|</operator> <operator pos:start="67:57" pos:end="67:57">(</operator><name pos:start="67:58" pos:end="67:63"><name pos:start="67:58" pos:end="67:60">buf</name><index pos:start="67:61" pos:end="67:63">[<expr pos:start="67:62" pos:end="67:62"><literal type="number" pos:start="67:62" pos:end="67:62">2</literal></expr>]</index></name> <operator pos:start="67:65" pos:end="67:66">&lt;&lt;</operator> <literal type="number" pos:start="67:68" pos:end="67:69">24</literal><operator pos:start="67:70" pos:end="67:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:11">len</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <name pos:start="69:15" pos:end="69:20"><name pos:start="69:15" pos:end="69:17">buf</name><index pos:start="69:18" pos:end="69:20">[<expr pos:start="69:19" pos:end="69:19"><literal type="number" pos:start="69:19" pos:end="69:19">8</literal></expr>]</index></name> <operator pos:start="69:22" pos:end="69:22">|</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:27">buf</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">7</literal></expr>]</index></name> <operator pos:start="69:32" pos:end="69:33">&lt;&lt;</operator> <literal type="number" pos:start="69:35" pos:end="69:35">8</literal><operator pos:start="69:36" pos:end="69:36">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:20"><expr pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:14">cmdlen</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:19">10</literal></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">4</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:71"><expr pos:start="77:9" pos:end="77:70"><name pos:start="77:9" pos:end="77:11">lba</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:20"><name pos:start="77:15" pos:end="77:17">buf</name><index pos:start="77:18" pos:end="77:20">[<expr pos:start="77:19" pos:end="77:19"><literal type="number" pos:start="77:19" pos:end="77:19">5</literal></expr>]</index></name> <operator pos:start="77:22" pos:end="77:22">|</operator> <operator pos:start="77:24" pos:end="77:24">(</operator><name pos:start="77:25" pos:end="77:30"><name pos:start="77:25" pos:end="77:27">buf</name><index pos:start="77:28" pos:end="77:30">[<expr pos:start="77:29" pos:end="77:29"><literal type="number" pos:start="77:29" pos:end="77:29">4</literal></expr>]</index></name> <operator pos:start="77:32" pos:end="77:33">&lt;&lt;</operator> <literal type="number" pos:start="77:35" pos:end="77:35">8</literal><operator pos:start="77:36" pos:end="77:36">)</operator> <operator pos:start="77:38" pos:end="77:38">|</operator> <operator pos:start="77:40" pos:end="77:40">(</operator><name pos:start="77:41" pos:end="77:46"><name pos:start="77:41" pos:end="77:43">buf</name><index pos:start="77:44" pos:end="77:46">[<expr pos:start="77:45" pos:end="77:45"><literal type="number" pos:start="77:45" pos:end="77:45">3</literal></expr>]</index></name> <operator pos:start="77:48" pos:end="77:49">&lt;&lt;</operator> <literal type="number" pos:start="77:51" pos:end="77:52">16</literal><operator pos:start="77:53" pos:end="77:53">)</operator> <operator pos:start="77:55" pos:end="77:55">|</operator> <operator pos:start="77:57" pos:end="77:57">(</operator><name pos:start="77:58" pos:end="77:63"><name pos:start="77:58" pos:end="77:60">buf</name><index pos:start="77:61" pos:end="77:63">[<expr pos:start="77:62" pos:end="77:62"><literal type="number" pos:start="77:62" pos:end="77:62">2</literal></expr>]</index></name> <operator pos:start="77:65" pos:end="77:66">&lt;&lt;</operator> <literal type="number" pos:start="77:68" pos:end="77:69">24</literal><operator pos:start="77:70" pos:end="77:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:75"><expr pos:start="79:9" pos:end="79:74"><name pos:start="79:9" pos:end="79:11">len</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:21"><name pos:start="79:15" pos:end="79:17">buf</name><index pos:start="79:18" pos:end="79:21">[<expr pos:start="79:19" pos:end="79:20"><literal type="number" pos:start="79:19" pos:end="79:20">13</literal></expr>]</index></name> <operator pos:start="79:23" pos:end="79:23">|</operator> <operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:32"><name pos:start="79:26" pos:end="79:28">buf</name><index pos:start="79:29" pos:end="79:32">[<expr pos:start="79:30" pos:end="79:31"><literal type="number" pos:start="79:30" pos:end="79:31">12</literal></expr>]</index></name> <operator pos:start="79:34" pos:end="79:35">&lt;&lt;</operator> <literal type="number" pos:start="79:37" pos:end="79:37">8</literal><operator pos:start="79:38" pos:end="79:38">)</operator> <operator pos:start="79:40" pos:end="79:40">|</operator> <operator pos:start="79:42" pos:end="79:42">(</operator><name pos:start="79:43" pos:end="79:49"><name pos:start="79:43" pos:end="79:45">buf</name><index pos:start="79:46" pos:end="79:49">[<expr pos:start="79:47" pos:end="79:48"><literal type="number" pos:start="79:47" pos:end="79:48">11</literal></expr>]</index></name> <operator pos:start="79:51" pos:end="79:52">&lt;&lt;</operator> <literal type="number" pos:start="79:54" pos:end="79:55">16</literal><operator pos:start="79:56" pos:end="79:56">)</operator> <operator pos:start="79:58" pos:end="79:58">|</operator> <operator pos:start="79:60" pos:end="79:60">(</operator><name pos:start="79:61" pos:end="79:67"><name pos:start="79:61" pos:end="79:63">buf</name><index pos:start="79:64" pos:end="79:67">[<expr pos:start="79:65" pos:end="79:66"><literal type="number" pos:start="79:65" pos:end="79:66">10</literal></expr>]</index></name> <operator pos:start="79:69" pos:end="79:70">&lt;&lt;</operator> <literal type="number" pos:start="79:72" pos:end="79:73">24</literal><operator pos:start="79:74" pos:end="79:74">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:20"><expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:14">cmdlen</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:19">16</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">5</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:71"><expr pos:start="87:9" pos:end="87:70"><name pos:start="87:9" pos:end="87:11">lba</name> <operator pos:start="87:13" pos:end="87:13">=</operator> <name pos:start="87:15" pos:end="87:20"><name pos:start="87:15" pos:end="87:17">buf</name><index pos:start="87:18" pos:end="87:20">[<expr pos:start="87:19" pos:end="87:19"><literal type="number" pos:start="87:19" pos:end="87:19">5</literal></expr>]</index></name> <operator pos:start="87:22" pos:end="87:22">|</operator> <operator pos:start="87:24" pos:end="87:24">(</operator><name pos:start="87:25" pos:end="87:30"><name pos:start="87:25" pos:end="87:27">buf</name><index pos:start="87:28" pos:end="87:30">[<expr pos:start="87:29" pos:end="87:29"><literal type="number" pos:start="87:29" pos:end="87:29">4</literal></expr>]</index></name> <operator pos:start="87:32" pos:end="87:33">&lt;&lt;</operator> <literal type="number" pos:start="87:35" pos:end="87:35">8</literal><operator pos:start="87:36" pos:end="87:36">)</operator> <operator pos:start="87:38" pos:end="87:38">|</operator> <operator pos:start="87:40" pos:end="87:40">(</operator><name pos:start="87:41" pos:end="87:46"><name pos:start="87:41" pos:end="87:43">buf</name><index pos:start="87:44" pos:end="87:46">[<expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">3</literal></expr>]</index></name> <operator pos:start="87:48" pos:end="87:49">&lt;&lt;</operator> <literal type="number" pos:start="87:51" pos:end="87:52">16</literal><operator pos:start="87:53" pos:end="87:53">)</operator> <operator pos:start="87:55" pos:end="87:55">|</operator> <operator pos:start="87:57" pos:end="87:57">(</operator><name pos:start="87:58" pos:end="87:63"><name pos:start="87:58" pos:end="87:60">buf</name><index pos:start="87:61" pos:end="87:63">[<expr pos:start="87:62" pos:end="87:62"><literal type="number" pos:start="87:62" pos:end="87:62">2</literal></expr>]</index></name> <operator pos:start="87:65" pos:end="87:66">&lt;&lt;</operator> <literal type="number" pos:start="87:68" pos:end="87:69">24</literal><operator pos:start="87:70" pos:end="87:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:71"><expr pos:start="89:9" pos:end="89:70"><name pos:start="89:9" pos:end="89:11">len</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:20"><name pos:start="89:15" pos:end="89:17">buf</name><index pos:start="89:18" pos:end="89:20">[<expr pos:start="89:19" pos:end="89:19"><literal type="number" pos:start="89:19" pos:end="89:19">9</literal></expr>]</index></name> <operator pos:start="89:22" pos:end="89:22">|</operator> <operator pos:start="89:24" pos:end="89:24">(</operator><name pos:start="89:25" pos:end="89:30"><name pos:start="89:25" pos:end="89:27">buf</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><literal type="number" pos:start="89:29" pos:end="89:29">8</literal></expr>]</index></name> <operator pos:start="89:32" pos:end="89:33">&lt;&lt;</operator> <literal type="number" pos:start="89:35" pos:end="89:35">8</literal><operator pos:start="89:36" pos:end="89:36">)</operator> <operator pos:start="89:38" pos:end="89:38">|</operator> <operator pos:start="89:40" pos:end="89:40">(</operator><name pos:start="89:41" pos:end="89:46"><name pos:start="89:41" pos:end="89:43">buf</name><index pos:start="89:44" pos:end="89:46">[<expr pos:start="89:45" pos:end="89:45"><literal type="number" pos:start="89:45" pos:end="89:45">7</literal></expr>]</index></name> <operator pos:start="89:48" pos:end="89:49">&lt;&lt;</operator> <literal type="number" pos:start="89:51" pos:end="89:52">16</literal><operator pos:start="89:53" pos:end="89:53">)</operator> <operator pos:start="89:55" pos:end="89:55">|</operator> <operator pos:start="89:57" pos:end="89:57">(</operator><name pos:start="89:58" pos:end="89:63"><name pos:start="89:58" pos:end="89:60">buf</name><index pos:start="89:61" pos:end="89:63">[<expr pos:start="89:62" pos:end="89:62"><literal type="number" pos:start="89:62" pos:end="89:62">6</literal></expr>]</index></name> <operator pos:start="89:65" pos:end="89:66">&lt;&lt;</operator> <literal type="number" pos:start="89:68" pos:end="89:69">24</literal><operator pos:start="89:70" pos:end="89:70">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:20"><expr pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:14">cmdlen</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:19">12</literal></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <default pos:start="95:5" pos:end="95:12">default:</default>

        <expr_stmt pos:start="97:9" pos:end="97:66"><expr pos:start="97:9" pos:end="97:65"><call pos:start="97:9" pos:end="97:65"><name pos:start="97:9" pos:end="97:12">BADF</name><argument_list pos:start="97:13" pos:end="97:65">(<argument pos:start="97:14" pos:end="97:55"><expr pos:start="97:14" pos:end="97:55"><literal type="string" pos:start="97:14" pos:end="97:55">"Unsupported command length, command %x\n"</literal></expr></argument>, <argument pos:start="97:58" pos:end="97:64"><expr pos:start="97:58" pos:end="97:64"><name pos:start="97:58" pos:end="97:64">command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">fail</name>;</goto>

    </block_content>}</block></switch>

<cpp:ifdef pos:start="103:1" pos:end="103:17">#<cpp:directive pos:start="103:2" pos:end="103:6">ifdef</cpp:directive> <name pos:start="103:8" pos:end="103:17">DEBUG_SCSI</name></cpp:ifdef>

    <block pos:start="105:5" pos:end="120:0">{<block_content pos:start="107:9" pos:end="115:21">

        <decl_stmt pos:start="107:9" pos:end="107:14"><decl pos:start="107:9" pos:end="107:13"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:13">i</name></decl>;</decl_stmt>

        <for pos:start="109:9" pos:end="113:9">for <control pos:start="109:13" pos:end="109:36">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">i</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">1</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:31"><expr pos:start="109:21" pos:end="109:30"><name pos:start="109:21" pos:end="109:21">i</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:30">cmdlen</name></expr>;</condition> <incr pos:start="109:33" pos:end="109:35"><expr pos:start="109:33" pos:end="109:35"><name pos:start="109:33" pos:end="109:33">i</name><operator pos:start="109:34" pos:end="109:35">++</operator></expr></incr>)</control> <block pos:start="109:38" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:38">

            <expr_stmt pos:start="111:13" pos:end="111:38"><expr pos:start="111:13" pos:end="111:37"><call pos:start="111:13" pos:end="111:37"><name pos:start="111:13" pos:end="111:18">printf</name><argument_list pos:start="111:19" pos:end="111:37">(<argument pos:start="111:20" pos:end="111:28"><expr pos:start="111:20" pos:end="111:28"><literal type="string" pos:start="111:20" pos:end="111:28">" 0x%02x"</literal></expr></argument>, <argument pos:start="111:31" pos:end="111:36"><expr pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:36"><name pos:start="111:31" pos:end="111:33">buf</name><index pos:start="111:34" pos:end="111:36">[<expr pos:start="111:35" pos:end="111:35"><name pos:start="111:35" pos:end="111:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="115:9" pos:end="115:21"><expr pos:start="115:9" pos:end="115:20"><call pos:start="115:9" pos:end="115:20"><name pos:start="115:9" pos:end="115:14">printf</name><argument_list pos:start="115:15" pos:end="115:20">(<argument pos:start="115:16" pos:end="115:19"><expr pos:start="115:16" pos:end="115:19"><literal type="string" pos:start="115:16" pos:end="115:19">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="121:5" pos:end="131:5"><if pos:start="121:5" pos:end="131:5">if <condition pos:start="121:8" pos:end="121:27">(<expr pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:11">lun</name> <operator pos:start="121:13" pos:end="121:14">||</operator> <name pos:start="121:16" pos:end="121:21"><name pos:start="121:16" pos:end="121:18">buf</name><index pos:start="121:19" pos:end="121:21">[<expr pos:start="121:20" pos:end="121:20"><literal type="number" pos:start="121:20" pos:end="121:20">1</literal></expr>]</index></name> <operator pos:start="121:23" pos:end="121:24">&gt;&gt;</operator> <literal type="number" pos:start="121:26" pos:end="121:26">5</literal></expr>)</condition> <block pos:start="121:29" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:22">

        <comment type="block" pos:start="123:9" pos:end="123:36">/* Only LUN 0 supported.  */</comment>

        <expr_stmt pos:start="125:9" pos:end="125:67"><expr pos:start="125:9" pos:end="125:66"><call pos:start="125:9" pos:end="125:66"><name pos:start="125:9" pos:end="125:15">DPRINTF</name><argument_list pos:start="125:16" pos:end="125:66">(<argument pos:start="125:17" pos:end="125:40"><expr pos:start="125:17" pos:end="125:40"><literal type="string" pos:start="125:17" pos:end="125:40">"Unimplemented LUN %d\n"</literal></expr></argument>, <argument pos:start="125:43" pos:end="125:65"><expr pos:start="125:43" pos:end="125:65"><ternary pos:start="125:43" pos:end="125:65"><condition pos:start="125:43" pos:end="125:47"><expr pos:start="125:43" pos:end="125:45"><name pos:start="125:43" pos:end="125:45">lun</name></expr> ?</condition><then pos:start="125:49" pos:end="125:51"> <expr pos:start="125:49" pos:end="125:51"><name pos:start="125:49" pos:end="125:51">lun</name></expr> </then><else pos:start="125:53" pos:end="125:65">: <expr pos:start="125:55" pos:end="125:65"><name pos:start="125:55" pos:end="125:60"><name pos:start="125:55" pos:end="125:57">buf</name><index pos:start="125:58" pos:end="125:60">[<expr pos:start="125:59" pos:end="125:59"><literal type="number" pos:start="125:59" pos:end="125:59">1</literal></expr>]</index></name> <operator pos:start="125:62" pos:end="125:63">&gt;&gt;</operator> <literal type="number" pos:start="125:65" pos:end="125:65">5</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:22"><if pos:start="127:9" pos:end="129:22">if <condition pos:start="127:12" pos:end="127:47">(<expr pos:start="127:13" pos:end="127:46"><name pos:start="127:13" pos:end="127:19">command</name> <operator pos:start="127:21" pos:end="127:22">!=</operator> <literal type="number" pos:start="127:24" pos:end="127:27">0x03</literal> <operator pos:start="127:29" pos:end="127:30">&amp;&amp;</operator> <name pos:start="127:32" pos:end="127:38">command</name> <operator pos:start="127:40" pos:end="127:41">!=</operator> <literal type="number" pos:start="127:43" pos:end="127:46">0x12</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:22"><block_content pos:start="129:13" pos:end="129:22"> <comment type="block" pos:start="127:49" pos:end="127:79">/* REQUEST SENSE and INQUIRY */</comment>

            <goto pos:start="129:13" pos:end="129:22">goto <name pos:start="129:18" pos:end="129:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="133:5" pos:end="971:5">switch <condition pos:start="133:12" pos:end="133:20">(<expr pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:19">command</name></expr>)</condition> <block pos:start="133:22" pos:end="971:5">{<block_content pos:start="135:5" pos:end="969:17">

    <case pos:start="135:5" pos:end="135:13">case <expr pos:start="135:10" pos:end="135:12"><literal type="number" pos:start="135:10" pos:end="135:12">0x0</literal></expr>:</case>

	<expr_stmt pos:start="137:9" pos:end="137:37"><expr pos:start="137:9" pos:end="137:36"><call pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:15">DPRINTF</name><argument_list pos:start="137:16" pos:end="137:36">(<argument pos:start="137:17" pos:end="137:35"><expr pos:start="137:17" pos:end="137:35"><literal type="string" pos:start="137:17" pos:end="137:35">"Test Unit Ready\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="139:9" pos:end="139:14">break;</break>

    <case pos:start="141:5" pos:end="141:14">case <expr pos:start="141:10" pos:end="141:13"><literal type="number" pos:start="141:10" pos:end="141:13">0x03</literal></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:49"><expr pos:start="143:9" pos:end="143:48"><call pos:start="143:9" pos:end="143:48"><name pos:start="143:9" pos:end="143:15">DPRINTF</name><argument_list pos:start="143:16" pos:end="143:48">(<argument pos:start="143:17" pos:end="143:42"><expr pos:start="143:17" pos:end="143:42"><literal type="string" pos:start="143:17" pos:end="143:42">"Request Sense (len %d)\n"</literal></expr></argument>, <argument pos:start="143:45" pos:end="143:47"><expr pos:start="143:45" pos:end="143:47"><name pos:start="143:45" pos:end="143:47">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="147:22"><if pos:start="145:9" pos:end="147:22">if <condition pos:start="145:12" pos:end="145:20">(<expr pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:15">len</name> <operator pos:start="145:17" pos:end="145:17">&lt;</operator> <literal type="number" pos:start="145:19" pos:end="145:19">4</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:22"><block_content pos:start="147:13" pos:end="147:22">

            <goto pos:start="147:13" pos:end="147:22">goto <name pos:start="147:18" pos:end="147:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:29"><expr pos:start="149:9" pos:end="149:28"><call pos:start="149:9" pos:end="149:28"><name pos:start="149:9" pos:end="149:14">memset</name><argument_list pos:start="149:15" pos:end="149:28">(<argument pos:start="149:16" pos:end="149:21"><expr pos:start="149:16" pos:end="149:21"><name pos:start="149:16" pos:end="149:21">outbuf</name></expr></argument>, <argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">0</literal></expr></argument>, <argument pos:start="149:27" pos:end="149:27"><expr pos:start="149:27" pos:end="149:27"><literal type="number" pos:start="149:27" pos:end="149:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:25"><expr pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:14">outbuf</name><index pos:start="151:15" pos:end="151:17">[<expr pos:start="151:16" pos:end="151:16"><literal type="number" pos:start="151:16" pos:end="151:16">0</literal></expr>]</index></name> <operator pos:start="151:19" pos:end="151:19">=</operator> <literal type="number" pos:start="151:21" pos:end="151:24">0xf0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:22"><expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:14">outbuf</name><index pos:start="153:15" pos:end="153:17">[<expr pos:start="153:16" pos:end="153:16"><literal type="number" pos:start="153:16" pos:end="153:16">1</literal></expr>]</index></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <literal type="number" pos:start="153:21" pos:end="153:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:29"><expr pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:14">outbuf</name><index pos:start="155:15" pos:end="155:17">[<expr pos:start="155:16" pos:end="155:16"><literal type="number" pos:start="155:16" pos:end="155:16">2</literal></expr>]</index></name> <operator pos:start="155:19" pos:end="155:19">=</operator> <name pos:start="155:21" pos:end="155:28"><name pos:start="155:21" pos:end="155:21">s</name><operator pos:start="155:22" pos:end="155:23">-&gt;</operator><name pos:start="155:24" pos:end="155:28">sense</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:23"><expr pos:start="157:9" pos:end="157:22"><name pos:start="157:9" pos:end="157:18"><name pos:start="157:9" pos:end="157:9">r</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:18">buf_len</name></name> <operator pos:start="157:20" pos:end="157:20">=</operator> <literal type="number" pos:start="157:22" pos:end="157:22">4</literal></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:14">case <expr pos:start="161:10" pos:end="161:13"><literal type="number" pos:start="161:10" pos:end="161:13">0x12</literal></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:43"><expr pos:start="163:9" pos:end="163:42"><call pos:start="163:9" pos:end="163:42"><name pos:start="163:9" pos:end="163:15">DPRINTF</name><argument_list pos:start="163:16" pos:end="163:42">(<argument pos:start="163:17" pos:end="163:36"><expr pos:start="163:17" pos:end="163:36"><literal type="string" pos:start="163:17" pos:end="163:36">"Inquiry (len %d)\n"</literal></expr></argument>, <argument pos:start="163:39" pos:end="163:41"><expr pos:start="163:39" pos:end="163:41"><name pos:start="163:39" pos:end="163:41">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="411:9"><if pos:start="165:9" pos:end="173:9">if <condition pos:start="165:12" pos:end="165:25">(<expr pos:start="165:13" pos:end="165:24"><name pos:start="165:13" pos:end="165:18"><name pos:start="165:13" pos:end="165:15">buf</name><index pos:start="165:16" pos:end="165:18">[<expr pos:start="165:17" pos:end="165:17"><literal type="number" pos:start="165:17" pos:end="165:17">1</literal></expr>]</index></name> <operator pos:start="165:20" pos:end="165:20">&amp;</operator> <literal type="number" pos:start="165:22" pos:end="165:24">0x2</literal></expr>)</condition> <block pos:start="165:27" pos:end="173:9">{<block_content pos:start="169:13" pos:end="171:22">

            <comment type="block" pos:start="167:13" pos:end="167:66">/* Command support data - optional, not implemented */</comment>

            <expr_stmt pos:start="169:13" pos:end="169:79"><expr pos:start="169:13" pos:end="169:78"><call pos:start="169:13" pos:end="169:78"><name pos:start="169:13" pos:end="169:16">BADF</name><argument_list pos:start="169:17" pos:end="169:78">(<argument pos:start="169:18" pos:end="169:77"><expr pos:start="169:18" pos:end="169:77"><literal type="string" pos:start="169:18" pos:end="169:77">"optional INQUIRY command support request not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="171:13" pos:end="171:22">goto <name pos:start="171:18" pos:end="171:21">fail</name>;</goto>

        </block_content>}</block></if>

        <if type="elseif" pos:start="175:9" pos:end="371:9">else if <condition pos:start="175:17" pos:end="175:30">(<expr pos:start="175:18" pos:end="175:29"><name pos:start="175:18" pos:end="175:23"><name pos:start="175:18" pos:end="175:20">buf</name><index pos:start="175:21" pos:end="175:23">[<expr pos:start="175:22" pos:end="175:22"><literal type="number" pos:start="175:22" pos:end="175:22">1</literal></expr>]</index></name> <operator pos:start="175:25" pos:end="175:25">&amp;</operator> <literal type="number" pos:start="175:27" pos:end="175:29">0x1</literal></expr>)</condition> <block pos:start="175:32" pos:end="371:9">{<block_content pos:start="179:13" pos:end="369:18">

            <comment type="block" pos:start="177:13" pos:end="177:36">/* Vital product data */</comment>

            <decl_stmt pos:start="179:13" pos:end="179:39"><decl pos:start="179:13" pos:end="179:38"><type pos:start="179:13" pos:end="179:19"><name pos:start="179:13" pos:end="179:19">uint8_t</name></type> <name pos:start="179:21" pos:end="179:29">page_code</name> <init pos:start="179:31" pos:end="179:38">= <expr pos:start="179:33" pos:end="179:38"><name pos:start="179:33" pos:end="179:38"><name pos:start="179:33" pos:end="179:35">buf</name><index pos:start="179:36" pos:end="179:38">[<expr pos:start="179:37" pos:end="179:37"><literal type="number" pos:start="179:37" pos:end="179:37">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="181:13" pos:end="189:13"><if pos:start="181:13" pos:end="189:13">if <condition pos:start="181:16" pos:end="181:24">(<expr pos:start="181:17" pos:end="181:23"><name pos:start="181:17" pos:end="181:19">len</name> <operator pos:start="181:21" pos:end="181:21">&lt;</operator> <literal type="number" pos:start="181:23" pos:end="181:23">4</literal></expr>)</condition> <block pos:start="181:26" pos:end="189:13">{<block_content pos:start="183:17" pos:end="187:26">

                <expr_stmt pos:start="183:17" pos:end="185:54"><expr pos:start="183:17" pos:end="185:53"><call pos:start="183:17" pos:end="185:53"><name pos:start="183:17" pos:end="183:20">BADF</name><argument_list pos:start="183:21" pos:end="185:53">(<argument pos:start="183:22" pos:end="185:36"><expr pos:start="183:22" pos:end="185:36"><literal type="string" pos:start="183:22" pos:end="183:69">"Error: Inquiry (EVPD[%02X]) buffer size %d is "</literal>

                     <literal type="string" pos:start="185:22" pos:end="185:36">"less than 4\n"</literal></expr></argument>, <argument pos:start="185:39" pos:end="185:47"><expr pos:start="185:39" pos:end="185:47"><name pos:start="185:39" pos:end="185:47">page_code</name></expr></argument>, <argument pos:start="185:50" pos:end="185:52"><expr pos:start="185:50" pos:end="185:52"><name pos:start="185:50" pos:end="185:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <switch pos:start="193:13" pos:end="365:13">switch <condition pos:start="193:20" pos:end="193:30">(<expr pos:start="193:21" pos:end="193:29"><name pos:start="193:21" pos:end="193:29">page_code</name></expr>)</condition> <block pos:start="193:32" pos:end="365:13">{<block_content pos:start="195:17" pos:end="363:30">

                <case pos:start="195:17" pos:end="195:26">case <expr pos:start="195:22" pos:end="195:25"><literal type="number" pos:start="195:22" pos:end="195:25">0x00</literal></expr>:</case>

                    <block pos:start="197:21" pos:end="235:21">{<block_content pos:start="201:25" pos:end="233:52">

                        <comment type="block" pos:start="199:25" pos:end="199:61">/* Supported page codes, mandatory */</comment>

                        <expr_stmt pos:start="201:25" pos:end="203:57"><expr pos:start="201:25" pos:end="203:56"><call pos:start="201:25" pos:end="203:56"><name pos:start="201:25" pos:end="201:31">DPRINTF</name><argument_list pos:start="201:32" pos:end="203:56">(<argument pos:start="201:33" pos:end="203:50"><expr pos:start="201:33" pos:end="203:50"><literal type="string" pos:start="201:33" pos:end="201:64">"Inquiry EVPD[Supported pages] "</literal>

                                <literal type="string" pos:start="203:33" pos:end="203:50">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="203:53" pos:end="203:55"><expr pos:start="203:53" pos:end="203:55"><name pos:start="203:53" pos:end="203:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="207:25" pos:end="207:39"><expr pos:start="207:25" pos:end="207:38"><name pos:start="207:25" pos:end="207:34"><name pos:start="207:25" pos:end="207:25">r</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:34">buf_len</name></name> <operator pos:start="207:36" pos:end="207:36">=</operator> <literal type="number" pos:start="207:38" pos:end="207:38">0</literal></expr>;</expr_stmt>



                        <if_stmt pos:start="211:25" pos:end="219:25"><if pos:start="211:25" pos:end="215:25">if <condition pos:start="211:28" pos:end="211:75">(<expr pos:start="211:29" pos:end="211:74"><call pos:start="211:29" pos:end="211:55"><name pos:start="211:29" pos:end="211:46">bdrv_get_type_hint</name><argument_list pos:start="211:47" pos:end="211:55">(<argument pos:start="211:48" pos:end="211:54"><expr pos:start="211:48" pos:end="211:54"><name pos:start="211:48" pos:end="211:54"><name pos:start="211:48" pos:end="211:48">s</name><operator pos:start="211:49" pos:end="211:50">-&gt;</operator><name pos:start="211:51" pos:end="211:54">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="211:57" pos:end="211:58">==</operator> <name pos:start="211:60" pos:end="211:74">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="211:77" pos:end="215:25">{<block_content pos:start="213:29" pos:end="213:53">

                            <expr_stmt pos:start="213:29" pos:end="213:53"><expr pos:start="213:29" pos:end="213:52"><name pos:start="213:29" pos:end="213:48"><name pos:start="213:29" pos:end="213:34">outbuf</name><index pos:start="213:35" pos:end="213:48">[<expr pos:start="213:36" pos:end="213:47"><name pos:start="213:36" pos:end="213:45"><name pos:start="213:36" pos:end="213:36">r</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:45">buf_len</name></name><operator pos:start="213:46" pos:end="213:47">++</operator></expr>]</index></name> <operator pos:start="213:50" pos:end="213:50">=</operator> <literal type="number" pos:start="213:52" pos:end="213:52">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="215:27" pos:end="219:25">else <block pos:start="215:32" pos:end="219:25">{<block_content pos:start="217:29" pos:end="217:53">

                            <expr_stmt pos:start="217:29" pos:end="217:53"><expr pos:start="217:29" pos:end="217:52"><name pos:start="217:29" pos:end="217:48"><name pos:start="217:29" pos:end="217:34">outbuf</name><index pos:start="217:35" pos:end="217:48">[<expr pos:start="217:36" pos:end="217:47"><name pos:start="217:36" pos:end="217:45"><name pos:start="217:36" pos:end="217:36">r</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:45">buf_len</name></name><operator pos:start="217:46" pos:end="217:47">++</operator></expr>]</index></name> <operator pos:start="217:50" pos:end="217:50">=</operator> <literal type="number" pos:start="217:52" pos:end="217:52">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="223:25" pos:end="223:52"><expr pos:start="223:25" pos:end="223:51"><name pos:start="223:25" pos:end="223:44"><name pos:start="223:25" pos:end="223:30">outbuf</name><index pos:start="223:31" pos:end="223:44">[<expr pos:start="223:32" pos:end="223:43"><name pos:start="223:32" pos:end="223:41"><name pos:start="223:32" pos:end="223:32">r</name><operator pos:start="223:33" pos:end="223:34">-&gt;</operator><name pos:start="223:35" pos:end="223:41">buf_len</name></name><operator pos:start="223:42" pos:end="223:43">++</operator></expr>]</index></name> <operator pos:start="223:46" pos:end="223:46">=</operator> <literal type="number" pos:start="223:48" pos:end="223:51">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="223:54" pos:end="223:65">// this page</comment>

                        <expr_stmt pos:start="225:25" pos:end="225:52"><expr pos:start="225:25" pos:end="225:51"><name pos:start="225:25" pos:end="225:44"><name pos:start="225:25" pos:end="225:30">outbuf</name><index pos:start="225:31" pos:end="225:44">[<expr pos:start="225:32" pos:end="225:43"><name pos:start="225:32" pos:end="225:41"><name pos:start="225:32" pos:end="225:32">r</name><operator pos:start="225:33" pos:end="225:34">-&gt;</operator><name pos:start="225:35" pos:end="225:41">buf_len</name></name><operator pos:start="225:42" pos:end="225:43">++</operator></expr>]</index></name> <operator pos:start="225:46" pos:end="225:46">=</operator> <literal type="number" pos:start="225:48" pos:end="225:51">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="227:25" pos:end="227:49"><expr pos:start="227:25" pos:end="227:48"><name pos:start="227:25" pos:end="227:44"><name pos:start="227:25" pos:end="227:30">outbuf</name><index pos:start="227:31" pos:end="227:44">[<expr pos:start="227:32" pos:end="227:43"><name pos:start="227:32" pos:end="227:41"><name pos:start="227:32" pos:end="227:32">r</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:41">buf_len</name></name><operator pos:start="227:42" pos:end="227:43">++</operator></expr>]</index></name> <operator pos:start="227:46" pos:end="227:46">=</operator> <literal type="number" pos:start="227:48" pos:end="227:48">3</literal></expr>;</expr_stmt>    <comment type="line" pos:start="227:54" pos:end="227:71">// number of pages</comment>

                        <expr_stmt pos:start="229:25" pos:end="229:52"><expr pos:start="229:25" pos:end="229:51"><name pos:start="229:25" pos:end="229:44"><name pos:start="229:25" pos:end="229:30">outbuf</name><index pos:start="229:31" pos:end="229:44">[<expr pos:start="229:32" pos:end="229:43"><name pos:start="229:32" pos:end="229:41"><name pos:start="229:32" pos:end="229:32">r</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:41">buf_len</name></name><operator pos:start="229:42" pos:end="229:43">++</operator></expr>]</index></name> <operator pos:start="229:46" pos:end="229:46">=</operator> <literal type="number" pos:start="229:48" pos:end="229:51">0x00</literal></expr>;</expr_stmt> <comment type="line" pos:start="229:54" pos:end="229:91">// list of supported pages (this page)</comment>

                        <expr_stmt pos:start="231:25" pos:end="231:52"><expr pos:start="231:25" pos:end="231:51"><name pos:start="231:25" pos:end="231:44"><name pos:start="231:25" pos:end="231:30">outbuf</name><index pos:start="231:31" pos:end="231:44">[<expr pos:start="231:32" pos:end="231:43"><name pos:start="231:32" pos:end="231:41"><name pos:start="231:32" pos:end="231:32">r</name><operator pos:start="231:33" pos:end="231:34">-&gt;</operator><name pos:start="231:35" pos:end="231:41">buf_len</name></name><operator pos:start="231:42" pos:end="231:43">++</operator></expr>]</index></name> <operator pos:start="231:46" pos:end="231:46">=</operator> <literal type="number" pos:start="231:48" pos:end="231:51">0x80</literal></expr>;</expr_stmt> <comment type="line" pos:start="231:54" pos:end="231:74">// unit serial number</comment>

                        <expr_stmt pos:start="233:25" pos:end="233:52"><expr pos:start="233:25" pos:end="233:51"><name pos:start="233:25" pos:end="233:44"><name pos:start="233:25" pos:end="233:30">outbuf</name><index pos:start="233:31" pos:end="233:44">[<expr pos:start="233:32" pos:end="233:43"><name pos:start="233:32" pos:end="233:41"><name pos:start="233:32" pos:end="233:32">r</name><operator pos:start="233:33" pos:end="233:34">-&gt;</operator><name pos:start="233:35" pos:end="233:41">buf_len</name></name><operator pos:start="233:42" pos:end="233:43">++</operator></expr>]</index></name> <operator pos:start="233:46" pos:end="233:46">=</operator> <literal type="number" pos:start="233:48" pos:end="233:51">0x83</literal></expr>;</expr_stmt> <comment type="line" pos:start="233:54" pos:end="233:77">// device identification</comment>

                    </block_content>}</block>

                    <break pos:start="237:21" pos:end="237:26">break;</break>

                <case pos:start="239:17" pos:end="239:26">case <expr pos:start="239:22" pos:end="239:25"><literal type="number" pos:start="239:22" pos:end="239:25">0x80</literal></expr>:</case>

                    <block pos:start="241:21" pos:end="289:21">{<block_content pos:start="245:25" pos:end="287:51">

                        <comment type="block" pos:start="243:25" pos:end="243:60">/* Device serial number, optional */</comment>

                        <if_stmt pos:start="245:25" pos:end="253:25"><if pos:start="245:25" pos:end="253:25">if <condition pos:start="245:28" pos:end="245:36">(<expr pos:start="245:29" pos:end="245:35"><name pos:start="245:29" pos:end="245:31">len</name> <operator pos:start="245:33" pos:end="245:33">&lt;</operator> <literal type="number" pos:start="245:35" pos:end="245:35">4</literal></expr>)</condition> <block pos:start="245:38" pos:end="253:25">{<block_content pos:start="247:29" pos:end="251:38">

                            <expr_stmt pos:start="247:29" pos:end="249:75"><expr pos:start="247:29" pos:end="249:74"><call pos:start="247:29" pos:end="249:74"><name pos:start="247:29" pos:end="247:32">BADF</name><argument_list pos:start="247:33" pos:end="249:74">(<argument pos:start="247:34" pos:end="249:65"><expr pos:start="247:34" pos:end="249:65"><literal type="string" pos:start="247:34" pos:end="247:77">"Error: EVPD[Serial number] Inquiry buffer "</literal>

                                 <literal type="string" pos:start="249:34" pos:end="249:65">"size %d too small, %d needed\n"</literal></expr></argument>, <argument pos:start="249:68" pos:end="249:70"><expr pos:start="249:68" pos:end="249:70"><name pos:start="249:68" pos:end="249:70">len</name></expr></argument>, <argument pos:start="249:73" pos:end="249:73"><expr pos:start="249:73" pos:end="249:73"><literal type="number" pos:start="249:73" pos:end="249:73">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <goto pos:start="251:29" pos:end="251:38">goto <name pos:start="251:34" pos:end="251:37">fail</name>;</goto>

                        </block_content>}</block></if></if_stmt>



                        <expr_stmt pos:start="257:25" pos:end="257:85"><expr pos:start="257:25" pos:end="257:84"><call pos:start="257:25" pos:end="257:84"><name pos:start="257:25" pos:end="257:31">DPRINTF</name><argument_list pos:start="257:32" pos:end="257:84">(<argument pos:start="257:33" pos:end="257:78"><expr pos:start="257:33" pos:end="257:78"><literal type="string" pos:start="257:33" pos:end="257:78">"Inquiry EVPD[Serial number] buffer size %d\n"</literal></expr></argument>, <argument pos:start="257:81" pos:end="257:83"><expr pos:start="257:81" pos:end="257:83"><name pos:start="257:81" pos:end="257:83">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="261:25" pos:end="261:39"><expr pos:start="261:25" pos:end="261:38"><name pos:start="261:25" pos:end="261:34"><name pos:start="261:25" pos:end="261:25">r</name><operator pos:start="261:26" pos:end="261:27">-&gt;</operator><name pos:start="261:28" pos:end="261:34">buf_len</name></name> <operator pos:start="261:36" pos:end="261:36">=</operator> <literal type="number" pos:start="261:38" pos:end="261:38">0</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="265:25" pos:end="265:50">/* Supported page codes */</comment>

                        <if_stmt pos:start="267:25" pos:end="275:25"><if pos:start="267:25" pos:end="271:25">if <condition pos:start="267:28" pos:end="267:75">(<expr pos:start="267:29" pos:end="267:74"><call pos:start="267:29" pos:end="267:55"><name pos:start="267:29" pos:end="267:46">bdrv_get_type_hint</name><argument_list pos:start="267:47" pos:end="267:55">(<argument pos:start="267:48" pos:end="267:54"><expr pos:start="267:48" pos:end="267:54"><name pos:start="267:48" pos:end="267:54"><name pos:start="267:48" pos:end="267:48">s</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:54">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="267:57" pos:end="267:58">==</operator> <name pos:start="267:60" pos:end="267:74">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="267:77" pos:end="271:25">{<block_content pos:start="269:29" pos:end="269:53">

                            <expr_stmt pos:start="269:29" pos:end="269:53"><expr pos:start="269:29" pos:end="269:52"><name pos:start="269:29" pos:end="269:48"><name pos:start="269:29" pos:end="269:34">outbuf</name><index pos:start="269:35" pos:end="269:48">[<expr pos:start="269:36" pos:end="269:47"><name pos:start="269:36" pos:end="269:45"><name pos:start="269:36" pos:end="269:36">r</name><operator pos:start="269:37" pos:end="269:38">-&gt;</operator><name pos:start="269:39" pos:end="269:45">buf_len</name></name><operator pos:start="269:46" pos:end="269:47">++</operator></expr>]</index></name> <operator pos:start="269:50" pos:end="269:50">=</operator> <literal type="number" pos:start="269:52" pos:end="269:52">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="271:27" pos:end="275:25">else <block pos:start="271:32" pos:end="275:25">{<block_content pos:start="273:29" pos:end="273:53">

                            <expr_stmt pos:start="273:29" pos:end="273:53"><expr pos:start="273:29" pos:end="273:52"><name pos:start="273:29" pos:end="273:48"><name pos:start="273:29" pos:end="273:34">outbuf</name><index pos:start="273:35" pos:end="273:48">[<expr pos:start="273:36" pos:end="273:47"><name pos:start="273:36" pos:end="273:45"><name pos:start="273:36" pos:end="273:36">r</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:45">buf_len</name></name><operator pos:start="273:46" pos:end="273:47">++</operator></expr>]</index></name> <operator pos:start="273:50" pos:end="273:50">=</operator> <literal type="number" pos:start="273:52" pos:end="273:52">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="279:25" pos:end="279:52"><expr pos:start="279:25" pos:end="279:51"><name pos:start="279:25" pos:end="279:44"><name pos:start="279:25" pos:end="279:30">outbuf</name><index pos:start="279:31" pos:end="279:44">[<expr pos:start="279:32" pos:end="279:43"><name pos:start="279:32" pos:end="279:41"><name pos:start="279:32" pos:end="279:32">r</name><operator pos:start="279:33" pos:end="279:34">-&gt;</operator><name pos:start="279:35" pos:end="279:41">buf_len</name></name><operator pos:start="279:42" pos:end="279:43">++</operator></expr>]</index></name> <operator pos:start="279:46" pos:end="279:46">=</operator> <literal type="number" pos:start="279:48" pos:end="279:51">0x80</literal></expr>;</expr_stmt> <comment type="line" pos:start="279:54" pos:end="279:65">// this page</comment>

                        <expr_stmt pos:start="281:25" pos:end="281:52"><expr pos:start="281:25" pos:end="281:51"><name pos:start="281:25" pos:end="281:44"><name pos:start="281:25" pos:end="281:30">outbuf</name><index pos:start="281:31" pos:end="281:44">[<expr pos:start="281:32" pos:end="281:43"><name pos:start="281:32" pos:end="281:41"><name pos:start="281:32" pos:end="281:32">r</name><operator pos:start="281:33" pos:end="281:34">-&gt;</operator><name pos:start="281:35" pos:end="281:41">buf_len</name></name><operator pos:start="281:42" pos:end="281:43">++</operator></expr>]</index></name> <operator pos:start="281:46" pos:end="281:46">=</operator> <literal type="number" pos:start="281:48" pos:end="281:51">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="283:25" pos:end="283:52"><expr pos:start="283:25" pos:end="283:51"><name pos:start="283:25" pos:end="283:44"><name pos:start="283:25" pos:end="283:30">outbuf</name><index pos:start="283:31" pos:end="283:44">[<expr pos:start="283:32" pos:end="283:43"><name pos:start="283:32" pos:end="283:41"><name pos:start="283:32" pos:end="283:32">r</name><operator pos:start="283:33" pos:end="283:34">-&gt;</operator><name pos:start="283:35" pos:end="283:41">buf_len</name></name><operator pos:start="283:42" pos:end="283:43">++</operator></expr>]</index></name> <operator pos:start="283:46" pos:end="283:46">=</operator> <literal type="number" pos:start="283:48" pos:end="283:51">0x01</literal></expr>;</expr_stmt> <comment type="line" pos:start="283:54" pos:end="283:74">// 1 byte data follow</comment>



                        <expr_stmt pos:start="287:25" pos:end="287:51"><expr pos:start="287:25" pos:end="287:50"><name pos:start="287:25" pos:end="287:44"><name pos:start="287:25" pos:end="287:30">outbuf</name><index pos:start="287:31" pos:end="287:44">[<expr pos:start="287:32" pos:end="287:43"><name pos:start="287:32" pos:end="287:41"><name pos:start="287:32" pos:end="287:32">r</name><operator pos:start="287:33" pos:end="287:34">-&gt;</operator><name pos:start="287:35" pos:end="287:41">buf_len</name></name><operator pos:start="287:42" pos:end="287:43">++</operator></expr>]</index></name> <operator pos:start="287:46" pos:end="287:46">=</operator> <literal type="char" pos:start="287:48" pos:end="287:50">'0'</literal></expr>;</expr_stmt>  <comment type="line" pos:start="287:54" pos:end="287:75">// 1 byte data follow </comment>

                    </block_content>}</block>



                    <break pos:start="293:21" pos:end="293:26">break;</break>

                <case pos:start="295:17" pos:end="295:26">case <expr pos:start="295:22" pos:end="295:25"><literal type="number" pos:start="295:22" pos:end="295:25">0x83</literal></expr>:</case>

                    <block pos:start="297:21" pos:end="353:21">{<block_content pos:start="301:25" pos:end="351:45">

                        <comment type="block" pos:start="299:25" pos:end="299:67">/* Device identification page, mandatory */</comment>

                        <decl_stmt pos:start="301:25" pos:end="301:46"><decl pos:start="301:25" pos:end="301:45"><type pos:start="301:25" pos:end="301:27"><name pos:start="301:25" pos:end="301:27">int</name></type> <name pos:start="301:29" pos:end="301:35">max_len</name> <init pos:start="301:37" pos:end="301:45">= <expr pos:start="301:39" pos:end="301:45"><literal type="number" pos:start="301:39" pos:end="301:43">255</literal> <operator pos:start="301:43" pos:end="301:43">-</operator> <literal type="number" pos:start="301:45" pos:end="301:45">8</literal></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="303:25" pos:end="303:75"><decl pos:start="303:25" pos:end="303:74"><type pos:start="303:25" pos:end="303:27"><name pos:start="303:25" pos:end="303:27">int</name></type> <name pos:start="303:29" pos:end="303:34">id_len</name> <init pos:start="303:36" pos:end="303:74">= <expr pos:start="303:38" pos:end="303:74"><call pos:start="303:38" pos:end="303:74"><name pos:start="303:38" pos:end="303:43">strlen</name><argument_list pos:start="303:44" pos:end="303:74">(<argument pos:start="303:45" pos:end="303:73"><expr pos:start="303:45" pos:end="303:73"><call pos:start="303:45" pos:end="303:73"><name pos:start="303:45" pos:end="303:64">bdrv_get_device_name</name><argument_list pos:start="303:65" pos:end="303:73">(<argument pos:start="303:66" pos:end="303:72"><expr pos:start="303:66" pos:end="303:72"><name pos:start="303:66" pos:end="303:72"><name pos:start="303:66" pos:end="303:66">s</name><operator pos:start="303:67" pos:end="303:68">-&gt;</operator><name pos:start="303:69" pos:end="303:72">bdrv</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="305:25" pos:end="307:45"><if pos:start="305:25" pos:end="307:45">if <condition pos:start="305:28" pos:end="305:45">(<expr pos:start="305:29" pos:end="305:44"><name pos:start="305:29" pos:end="305:34">id_len</name> <operator pos:start="305:36" pos:end="305:36">&gt;</operator> <name pos:start="305:38" pos:end="305:44">max_len</name></expr>)</condition><block type="pseudo" pos:start="307:29" pos:end="307:45"><block_content pos:start="307:29" pos:end="307:45">

                            <expr_stmt pos:start="307:29" pos:end="307:45"><expr pos:start="307:29" pos:end="307:44"><name pos:start="307:29" pos:end="307:34">id_len</name> <operator pos:start="307:36" pos:end="307:36">=</operator> <name pos:start="307:38" pos:end="307:44">max_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="311:25" pos:end="313:57"><expr pos:start="311:25" pos:end="313:56"><call pos:start="311:25" pos:end="313:56"><name pos:start="311:25" pos:end="311:31">DPRINTF</name><argument_list pos:start="311:32" pos:end="313:56">(<argument pos:start="311:33" pos:end="313:50"><expr pos:start="311:33" pos:end="313:50"><literal type="string" pos:start="311:33" pos:end="311:70">"Inquiry EVPD[Device identification] "</literal>

                                <literal type="string" pos:start="313:33" pos:end="313:50">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="313:53" pos:end="313:55"><expr pos:start="313:53" pos:end="313:55"><name pos:start="313:53" pos:end="313:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="315:25" pos:end="315:39"><expr pos:start="315:25" pos:end="315:38"><name pos:start="315:25" pos:end="315:34"><name pos:start="315:25" pos:end="315:25">r</name><operator pos:start="315:26" pos:end="315:27">-&gt;</operator><name pos:start="315:28" pos:end="315:34">buf_len</name></name> <operator pos:start="315:36" pos:end="315:36">=</operator> <literal type="number" pos:start="315:38" pos:end="315:38">0</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="317:25" pos:end="325:25"><if pos:start="317:25" pos:end="321:25">if <condition pos:start="317:28" pos:end="317:75">(<expr pos:start="317:29" pos:end="317:74"><call pos:start="317:29" pos:end="317:55"><name pos:start="317:29" pos:end="317:46">bdrv_get_type_hint</name><argument_list pos:start="317:47" pos:end="317:55">(<argument pos:start="317:48" pos:end="317:54"><expr pos:start="317:48" pos:end="317:54"><name pos:start="317:48" pos:end="317:54"><name pos:start="317:48" pos:end="317:48">s</name><operator pos:start="317:49" pos:end="317:50">-&gt;</operator><name pos:start="317:51" pos:end="317:54">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="317:57" pos:end="317:58">==</operator> <name pos:start="317:60" pos:end="317:74">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="317:77" pos:end="321:25">{<block_content pos:start="319:29" pos:end="319:53">

                            <expr_stmt pos:start="319:29" pos:end="319:53"><expr pos:start="319:29" pos:end="319:52"><name pos:start="319:29" pos:end="319:48"><name pos:start="319:29" pos:end="319:34">outbuf</name><index pos:start="319:35" pos:end="319:48">[<expr pos:start="319:36" pos:end="319:47"><name pos:start="319:36" pos:end="319:45"><name pos:start="319:36" pos:end="319:36">r</name><operator pos:start="319:37" pos:end="319:38">-&gt;</operator><name pos:start="319:39" pos:end="319:45">buf_len</name></name><operator pos:start="319:46" pos:end="319:47">++</operator></expr>]</index></name> <operator pos:start="319:50" pos:end="319:50">=</operator> <literal type="number" pos:start="319:52" pos:end="319:52">5</literal></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="321:27" pos:end="325:25">else <block pos:start="321:32" pos:end="325:25">{<block_content pos:start="323:29" pos:end="323:53">

                            <expr_stmt pos:start="323:29" pos:end="323:53"><expr pos:start="323:29" pos:end="323:52"><name pos:start="323:29" pos:end="323:48"><name pos:start="323:29" pos:end="323:34">outbuf</name><index pos:start="323:35" pos:end="323:48">[<expr pos:start="323:36" pos:end="323:47"><name pos:start="323:36" pos:end="323:45"><name pos:start="323:36" pos:end="323:36">r</name><operator pos:start="323:37" pos:end="323:38">-&gt;</operator><name pos:start="323:39" pos:end="323:45">buf_len</name></name><operator pos:start="323:46" pos:end="323:47">++</operator></expr>]</index></name> <operator pos:start="323:50" pos:end="323:50">=</operator> <literal type="number" pos:start="323:52" pos:end="323:52">0</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>



                        <expr_stmt pos:start="329:25" pos:end="329:52"><expr pos:start="329:25" pos:end="329:51"><name pos:start="329:25" pos:end="329:44"><name pos:start="329:25" pos:end="329:30">outbuf</name><index pos:start="329:31" pos:end="329:44">[<expr pos:start="329:32" pos:end="329:43"><name pos:start="329:32" pos:end="329:41"><name pos:start="329:32" pos:end="329:32">r</name><operator pos:start="329:33" pos:end="329:34">-&gt;</operator><name pos:start="329:35" pos:end="329:41">buf_len</name></name><operator pos:start="329:42" pos:end="329:43">++</operator></expr>]</index></name> <operator pos:start="329:46" pos:end="329:46">=</operator> <literal type="number" pos:start="329:48" pos:end="329:51">0x83</literal></expr>;</expr_stmt> <comment type="line" pos:start="329:54" pos:end="329:65">// this page</comment>

                        <expr_stmt pos:start="331:25" pos:end="331:52"><expr pos:start="331:25" pos:end="331:51"><name pos:start="331:25" pos:end="331:44"><name pos:start="331:25" pos:end="331:30">outbuf</name><index pos:start="331:31" pos:end="331:44">[<expr pos:start="331:32" pos:end="331:43"><name pos:start="331:32" pos:end="331:41"><name pos:start="331:32" pos:end="331:32">r</name><operator pos:start="331:33" pos:end="331:34">-&gt;</operator><name pos:start="331:35" pos:end="331:41">buf_len</name></name><operator pos:start="331:42" pos:end="331:43">++</operator></expr>]</index></name> <operator pos:start="331:46" pos:end="331:46">=</operator> <literal type="number" pos:start="331:48" pos:end="331:51">0x00</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="333:25" pos:end="333:58"><expr pos:start="333:25" pos:end="333:57"><name pos:start="333:25" pos:end="333:44"><name pos:start="333:25" pos:end="333:30">outbuf</name><index pos:start="333:31" pos:end="333:44">[<expr pos:start="333:32" pos:end="333:43"><name pos:start="333:32" pos:end="333:41"><name pos:start="333:32" pos:end="333:32">r</name><operator pos:start="333:33" pos:end="333:34">-&gt;</operator><name pos:start="333:35" pos:end="333:41">buf_len</name></name><operator pos:start="333:42" pos:end="333:43">++</operator></expr>]</index></name> <operator pos:start="333:46" pos:end="333:46">=</operator> <literal type="number" pos:start="333:48" pos:end="333:50">3</literal> <operator pos:start="333:50" pos:end="333:50">+</operator> <name pos:start="333:52" pos:end="333:57">id_len</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="337:25" pos:end="337:51"><expr pos:start="337:25" pos:end="337:50"><name pos:start="337:25" pos:end="337:44"><name pos:start="337:25" pos:end="337:30">outbuf</name><index pos:start="337:31" pos:end="337:44">[<expr pos:start="337:32" pos:end="337:43"><name pos:start="337:32" pos:end="337:41"><name pos:start="337:32" pos:end="337:32">r</name><operator pos:start="337:33" pos:end="337:34">-&gt;</operator><name pos:start="337:35" pos:end="337:41">buf_len</name></name><operator pos:start="337:42" pos:end="337:43">++</operator></expr>]</index></name> <operator pos:start="337:46" pos:end="337:46">=</operator> <literal type="number" pos:start="337:48" pos:end="337:50">0x2</literal></expr>;</expr_stmt> <comment type="line" pos:start="337:53" pos:end="337:60">// ASCII</comment>

                        <expr_stmt pos:start="339:25" pos:end="339:49"><expr pos:start="339:25" pos:end="339:48"><name pos:start="339:25" pos:end="339:44"><name pos:start="339:25" pos:end="339:30">outbuf</name><index pos:start="339:31" pos:end="339:44">[<expr pos:start="339:32" pos:end="339:43"><name pos:start="339:32" pos:end="339:41"><name pos:start="339:32" pos:end="339:32">r</name><operator pos:start="339:33" pos:end="339:34">-&gt;</operator><name pos:start="339:35" pos:end="339:41">buf_len</name></name><operator pos:start="339:42" pos:end="339:43">++</operator></expr>]</index></name> <operator pos:start="339:46" pos:end="339:46">=</operator> <literal type="number" pos:start="339:48" pos:end="339:48">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="339:53" pos:end="339:78">// not officially assigned</comment>

                        <expr_stmt pos:start="341:25" pos:end="341:49"><expr pos:start="341:25" pos:end="341:48"><name pos:start="341:25" pos:end="341:44"><name pos:start="341:25" pos:end="341:30">outbuf</name><index pos:start="341:31" pos:end="341:44">[<expr pos:start="341:32" pos:end="341:43"><name pos:start="341:32" pos:end="341:41"><name pos:start="341:32" pos:end="341:32">r</name><operator pos:start="341:33" pos:end="341:34">-&gt;</operator><name pos:start="341:35" pos:end="341:41">buf_len</name></name><operator pos:start="341:42" pos:end="341:43">++</operator></expr>]</index></name> <operator pos:start="341:46" pos:end="341:46">=</operator> <literal type="number" pos:start="341:48" pos:end="341:48">0</literal></expr>;</expr_stmt>   <comment type="line" pos:start="341:53" pos:end="341:63">// reserved</comment>

                        <expr_stmt pos:start="343:25" pos:end="343:54"><expr pos:start="343:25" pos:end="343:53"><name pos:start="343:25" pos:end="343:44"><name pos:start="343:25" pos:end="343:30">outbuf</name><index pos:start="343:31" pos:end="343:44">[<expr pos:start="343:32" pos:end="343:43"><name pos:start="343:32" pos:end="343:41"><name pos:start="343:32" pos:end="343:32">r</name><operator pos:start="343:33" pos:end="343:34">-&gt;</operator><name pos:start="343:35" pos:end="343:41">buf_len</name></name><operator pos:start="343:42" pos:end="343:43">++</operator></expr>]</index></name> <operator pos:start="343:46" pos:end="343:46">=</operator> <name pos:start="343:48" pos:end="343:53">id_len</name></expr>;</expr_stmt> <comment type="line" pos:start="343:56" pos:end="343:82">// length of data following</comment>



                        <expr_stmt pos:start="347:25" pos:end="349:70"><expr pos:start="347:25" pos:end="349:69"><call pos:start="347:25" pos:end="349:69"><name pos:start="347:25" pos:end="347:30">memcpy</name><argument_list pos:start="347:31" pos:end="349:69">(<argument pos:start="347:32" pos:end="347:50"><expr pos:start="347:32" pos:end="347:50"><operator pos:start="347:32" pos:end="347:32">&amp;</operator><name pos:start="347:33" pos:end="347:50"><name pos:start="347:33" pos:end="347:38">outbuf</name><index pos:start="347:39" pos:end="347:50">[<expr pos:start="347:40" pos:end="347:49"><name pos:start="347:40" pos:end="347:49"><name pos:start="347:40" pos:end="347:40">r</name><operator pos:start="347:41" pos:end="347:42">-&gt;</operator><name pos:start="347:43" pos:end="347:49">buf_len</name></name></expr>]</index></name></expr></argument>,

                               <argument pos:start="349:32" pos:end="349:60"><expr pos:start="349:32" pos:end="349:60"><call pos:start="349:32" pos:end="349:60"><name pos:start="349:32" pos:end="349:51">bdrv_get_device_name</name><argument_list pos:start="349:52" pos:end="349:60">(<argument pos:start="349:53" pos:end="349:59"><expr pos:start="349:53" pos:end="349:59"><name pos:start="349:53" pos:end="349:59"><name pos:start="349:53" pos:end="349:53">s</name><operator pos:start="349:54" pos:end="349:55">-&gt;</operator><name pos:start="349:56" pos:end="349:59">bdrv</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="349:63" pos:end="349:68"><expr pos:start="349:63" pos:end="349:68"><name pos:start="349:63" pos:end="349:68">id_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="351:25" pos:end="351:45"><expr pos:start="351:25" pos:end="351:44"><name pos:start="351:25" pos:end="351:34"><name pos:start="351:25" pos:end="351:25">r</name><operator pos:start="351:26" pos:end="351:27">-&gt;</operator><name pos:start="351:28" pos:end="351:34">buf_len</name></name> <operator pos:start="351:36" pos:end="351:37">+=</operator> <name pos:start="351:39" pos:end="351:44">id_len</name></expr>;</expr_stmt>

                    </block_content>}</block>

                    <break pos:start="355:21" pos:end="355:26">break;</break>

                <default pos:start="357:17" pos:end="357:24">default:</default>

                    <expr_stmt pos:start="359:21" pos:end="361:61"><expr pos:start="359:21" pos:end="361:60"><call pos:start="359:21" pos:end="361:60"><name pos:start="359:21" pos:end="359:24">BADF</name><argument_list pos:start="359:25" pos:end="361:60">(<argument pos:start="359:26" pos:end="361:43"><expr pos:start="359:26" pos:end="361:43"><literal type="string" pos:start="359:26" pos:end="359:67">"Error: unsupported Inquiry (EVPD[%02X]) "</literal>

                         <literal type="string" pos:start="361:26" pos:end="361:43">"buffer size %d\n"</literal></expr></argument>, <argument pos:start="361:46" pos:end="361:54"><expr pos:start="361:46" pos:end="361:54"><name pos:start="361:46" pos:end="361:54">page_code</name></expr></argument>, <argument pos:start="361:57" pos:end="361:59"><expr pos:start="361:57" pos:end="361:59"><name pos:start="361:57" pos:end="361:59">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="363:21" pos:end="363:30">goto <name pos:start="363:26" pos:end="363:29">fail</name>;</goto>

            </block_content>}</block></switch>

            <comment type="block" pos:start="367:13" pos:end="367:32">/* done with EVPD */</comment>

            <break pos:start="369:13" pos:end="369:18">break;</break>

        </block_content>}</block></if>

        <else pos:start="373:9" pos:end="411:9">else <block pos:start="373:14" pos:end="411:9">{<block_content pos:start="377:13" pos:end="409:13">

            <comment type="block" pos:start="375:13" pos:end="375:39">/* Standard INQUIRY data */</comment>

            <if_stmt pos:start="377:13" pos:end="385:13"><if pos:start="377:13" pos:end="385:13">if <condition pos:start="377:16" pos:end="377:28">(<expr pos:start="377:17" pos:end="377:27"><name pos:start="377:17" pos:end="377:22"><name pos:start="377:17" pos:end="377:19">buf</name><index pos:start="377:20" pos:end="377:22">[<expr pos:start="377:21" pos:end="377:21"><literal type="number" pos:start="377:21" pos:end="377:21">2</literal></expr>]</index></name> <operator pos:start="377:24" pos:end="377:25">!=</operator> <literal type="number" pos:start="377:27" pos:end="377:27">0</literal></expr>)</condition> <block pos:start="377:30" pos:end="385:13">{<block_content pos:start="379:17" pos:end="383:26">

                <expr_stmt pos:start="379:17" pos:end="381:53"><expr pos:start="379:17" pos:end="381:52"><call pos:start="379:17" pos:end="381:52"><name pos:start="379:17" pos:end="379:20">BADF</name><argument_list pos:start="379:21" pos:end="381:52">(<argument pos:start="379:22" pos:end="381:43"><expr pos:start="379:22" pos:end="381:43"><literal type="string" pos:start="379:22" pos:end="379:62">"Error: Inquiry (STANDARD) page or code "</literal>

                     <literal type="string" pos:start="381:22" pos:end="381:43">"is non-zero [%02X]\n"</literal></expr></argument>, <argument pos:start="381:46" pos:end="381:51"><expr pos:start="381:46" pos:end="381:51"><name pos:start="381:46" pos:end="381:51"><name pos:start="381:46" pos:end="381:48">buf</name><index pos:start="381:49" pos:end="381:51">[<expr pos:start="381:50" pos:end="381:50"><literal type="number" pos:start="381:50" pos:end="381:50">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="383:17" pos:end="383:26">goto <name pos:start="383:22" pos:end="383:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="389:13" pos:end="389:32">/* PAGE CODE == 0 */</comment>

            <if_stmt pos:start="391:13" pos:end="399:13"><if pos:start="391:13" pos:end="399:13">if <condition pos:start="391:16" pos:end="391:24">(<expr pos:start="391:17" pos:end="391:23"><name pos:start="391:17" pos:end="391:19">len</name> <operator pos:start="391:21" pos:end="391:21">&lt;</operator> <literal type="number" pos:start="391:23" pos:end="391:23">5</literal></expr>)</condition> <block pos:start="391:26" pos:end="399:13">{<block_content pos:start="393:17" pos:end="397:26">

                <expr_stmt pos:start="393:17" pos:end="395:46"><expr pos:start="393:17" pos:end="395:45"><call pos:start="393:17" pos:end="395:45"><name pos:start="393:17" pos:end="393:20">BADF</name><argument_list pos:start="393:21" pos:end="395:45">(<argument pos:start="393:22" pos:end="395:39"><expr pos:start="393:22" pos:end="395:39"><literal type="string" pos:start="393:22" pos:end="393:64">"Error: Inquiry (STANDARD) buffer size %d "</literal>

                     <literal type="string" pos:start="395:22" pos:end="395:39">"is less than 5\n"</literal></expr></argument>, <argument pos:start="395:42" pos:end="395:44"><expr pos:start="395:42" pos:end="395:44"><name pos:start="395:42" pos:end="395:44">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="397:17" pos:end="397:26">goto <name pos:start="397:22" pos:end="397:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="403:13" pos:end="409:13"><if pos:start="403:13" pos:end="409:13">if <condition pos:start="403:16" pos:end="403:25">(<expr pos:start="403:17" pos:end="403:24"><name pos:start="403:17" pos:end="403:19">len</name> <operator pos:start="403:21" pos:end="403:21">&lt;</operator> <literal type="number" pos:start="403:23" pos:end="403:24">36</literal></expr>)</condition> <block pos:start="403:27" pos:end="409:13">{<block_content pos:start="405:17" pos:end="407:71">

                <expr_stmt pos:start="405:17" pos:end="407:71"><expr pos:start="405:17" pos:end="407:70"><call pos:start="405:17" pos:end="407:70"><name pos:start="405:17" pos:end="405:20">BADF</name><argument_list pos:start="405:21" pos:end="407:70">(<argument pos:start="405:22" pos:end="407:64"><expr pos:start="405:22" pos:end="407:64"><literal type="string" pos:start="405:22" pos:end="405:64">"Error: Inquiry (STANDARD) buffer size %d "</literal>

                     <literal type="string" pos:start="407:22" pos:end="407:64">"is less than 36 (TODO: only 5 required)\n"</literal></expr></argument>, <argument pos:start="407:67" pos:end="407:69"><expr pos:start="407:67" pos:end="407:69"><name pos:start="407:67" pos:end="407:69">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

	<expr_stmt pos:start="413:9" pos:end="413:30"><expr pos:start="413:9" pos:end="413:29"><call pos:start="413:9" pos:end="413:29"><name pos:start="413:9" pos:end="413:14">memset</name><argument_list pos:start="413:15" pos:end="413:29">(<argument pos:start="413:16" pos:end="413:21"><expr pos:start="413:16" pos:end="413:21"><name pos:start="413:16" pos:end="413:21">outbuf</name></expr></argument>, <argument pos:start="413:24" pos:end="413:24"><expr pos:start="413:24" pos:end="413:24"><literal type="number" pos:start="413:24" pos:end="413:24">0</literal></expr></argument>, <argument pos:start="413:27" pos:end="413:28"><expr pos:start="413:27" pos:end="413:28"><literal type="number" pos:start="413:27" pos:end="413:28">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="417:9" pos:end="435:9"><if pos:start="417:9" pos:end="421:9">if <condition pos:start="417:12" pos:end="417:31">(<expr pos:start="417:13" pos:end="417:30"><name pos:start="417:13" pos:end="417:15">lun</name> <operator pos:start="417:17" pos:end="417:18">||</operator> <name pos:start="417:20" pos:end="417:25"><name pos:start="417:20" pos:end="417:22">buf</name><index pos:start="417:23" pos:end="417:25">[<expr pos:start="417:24" pos:end="417:24"><literal type="number" pos:start="417:24" pos:end="417:24">1</literal></expr>]</index></name> <operator pos:start="417:27" pos:end="417:28">&gt;&gt;</operator> <literal type="number" pos:start="417:30" pos:end="417:30">5</literal></expr>)</condition> <block pos:start="417:33" pos:end="421:9">{<block_content pos:start="419:13" pos:end="419:29">

            <expr_stmt pos:start="419:13" pos:end="419:29"><expr pos:start="419:13" pos:end="419:28"><name pos:start="419:13" pos:end="419:21"><name pos:start="419:13" pos:end="419:18">outbuf</name><index pos:start="419:19" pos:end="419:21">[<expr pos:start="419:20" pos:end="419:20"><literal type="number" pos:start="419:20" pos:end="419:20">0</literal></expr>]</index></name> <operator pos:start="419:23" pos:end="419:23">=</operator> <literal type="number" pos:start="419:25" pos:end="419:28">0x7f</literal></expr>;</expr_stmt>	<comment type="block" pos:start="419:33" pos:end="419:55">/* LUN not supported */</comment>

	</block_content>}</block></if> <if type="elseif" pos:start="421:11" pos:end="429:9">else if <condition pos:start="421:19" pos:end="421:66">(<expr pos:start="421:20" pos:end="421:65"><call pos:start="421:20" pos:end="421:46"><name pos:start="421:20" pos:end="421:37">bdrv_get_type_hint</name><argument_list pos:start="421:38" pos:end="421:46">(<argument pos:start="421:39" pos:end="421:45"><expr pos:start="421:39" pos:end="421:45"><name pos:start="421:39" pos:end="421:45"><name pos:start="421:39" pos:end="421:39">s</name><operator pos:start="421:40" pos:end="421:41">-&gt;</operator><name pos:start="421:42" pos:end="421:45">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="421:48" pos:end="421:49">==</operator> <name pos:start="421:51" pos:end="421:65">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="421:68" pos:end="429:9">{<block_content pos:start="423:13" pos:end="427:55">

	    <expr_stmt pos:start="423:13" pos:end="423:26"><expr pos:start="423:13" pos:end="423:25"><name pos:start="423:13" pos:end="423:21"><name pos:start="423:13" pos:end="423:18">outbuf</name><index pos:start="423:19" pos:end="423:21">[<expr pos:start="423:20" pos:end="423:20"><literal type="number" pos:start="423:20" pos:end="423:20">0</literal></expr>]</index></name> <operator pos:start="423:23" pos:end="423:23">=</operator> <literal type="number" pos:start="423:25" pos:end="423:25">5</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:29"><expr pos:start="425:13" pos:end="425:28"><name pos:start="425:13" pos:end="425:21"><name pos:start="425:13" pos:end="425:18">outbuf</name><index pos:start="425:19" pos:end="425:21">[<expr pos:start="425:20" pos:end="425:20"><literal type="number" pos:start="425:20" pos:end="425:20">1</literal></expr>]</index></name> <operator pos:start="425:23" pos:end="425:23">=</operator> <literal type="number" pos:start="425:25" pos:end="425:28">0x80</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="427:13" pos:end="427:55"><expr pos:start="427:13" pos:end="427:54"><call pos:start="427:13" pos:end="427:54"><name pos:start="427:13" pos:end="427:18">memcpy</name><argument_list pos:start="427:19" pos:end="427:54">(<argument pos:start="427:20" pos:end="427:30"><expr pos:start="427:20" pos:end="427:30"><operator pos:start="427:20" pos:end="427:20">&amp;</operator><name pos:start="427:21" pos:end="427:30"><name pos:start="427:21" pos:end="427:26">outbuf</name><index pos:start="427:27" pos:end="427:30">[<expr pos:start="427:28" pos:end="427:29"><literal type="number" pos:start="427:28" pos:end="427:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="427:33" pos:end="427:49"><expr pos:start="427:33" pos:end="427:49"><literal type="string" pos:start="427:33" pos:end="427:49">"QEMU CD-ROM    "</literal></expr></argument>, <argument pos:start="427:52" pos:end="427:53"><expr pos:start="427:52" pos:end="427:53"><literal type="number" pos:start="427:52" pos:end="427:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="429:11" pos:end="435:9">else <block pos:start="429:16" pos:end="435:9">{<block_content pos:start="431:13" pos:end="433:55">

	    <expr_stmt pos:start="431:13" pos:end="431:26"><expr pos:start="431:13" pos:end="431:25"><name pos:start="431:13" pos:end="431:21"><name pos:start="431:13" pos:end="431:18">outbuf</name><index pos:start="431:19" pos:end="431:21">[<expr pos:start="431:20" pos:end="431:20"><literal type="number" pos:start="431:20" pos:end="431:20">0</literal></expr>]</index></name> <operator pos:start="431:23" pos:end="431:23">=</operator> <literal type="number" pos:start="431:25" pos:end="431:25">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="433:13" pos:end="433:55"><expr pos:start="433:13" pos:end="433:54"><call pos:start="433:13" pos:end="433:54"><name pos:start="433:13" pos:end="433:18">memcpy</name><argument_list pos:start="433:19" pos:end="433:54">(<argument pos:start="433:20" pos:end="433:30"><expr pos:start="433:20" pos:end="433:30"><operator pos:start="433:20" pos:end="433:20">&amp;</operator><name pos:start="433:21" pos:end="433:30"><name pos:start="433:21" pos:end="433:26">outbuf</name><index pos:start="433:27" pos:end="433:30">[<expr pos:start="433:28" pos:end="433:29"><literal type="number" pos:start="433:28" pos:end="433:29">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="433:33" pos:end="433:49"><expr pos:start="433:33" pos:end="433:49"><literal type="string" pos:start="433:33" pos:end="433:49">"QEMU HARDDISK  "</literal></expr></argument>, <argument pos:start="433:52" pos:end="433:53"><expr pos:start="433:52" pos:end="433:53"><literal type="number" pos:start="433:52" pos:end="433:53">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<expr_stmt pos:start="437:9" pos:end="437:41"><expr pos:start="437:9" pos:end="437:40"><call pos:start="437:9" pos:end="437:40"><name pos:start="437:9" pos:end="437:14">memcpy</name><argument_list pos:start="437:15" pos:end="437:40">(<argument pos:start="437:16" pos:end="437:25"><expr pos:start="437:16" pos:end="437:25"><operator pos:start="437:16" pos:end="437:16">&amp;</operator><name pos:start="437:17" pos:end="437:25"><name pos:start="437:17" pos:end="437:22">outbuf</name><index pos:start="437:23" pos:end="437:25">[<expr pos:start="437:24" pos:end="437:24"><literal type="number" pos:start="437:24" pos:end="437:24">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="437:28" pos:end="437:36"><expr pos:start="437:28" pos:end="437:36"><literal type="string" pos:start="437:28" pos:end="437:36">"QEMU   "</literal></expr></argument>, <argument pos:start="437:39" pos:end="437:39"><expr pos:start="437:39" pos:end="437:39"><literal type="number" pos:start="437:39" pos:end="437:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:45"><expr pos:start="439:9" pos:end="439:44"><call pos:start="439:9" pos:end="439:44"><name pos:start="439:9" pos:end="439:14">memcpy</name><argument_list pos:start="439:15" pos:end="439:44">(<argument pos:start="439:16" pos:end="439:26"><expr pos:start="439:16" pos:end="439:26"><operator pos:start="439:16" pos:end="439:16">&amp;</operator><name pos:start="439:17" pos:end="439:26"><name pos:start="439:17" pos:end="439:22">outbuf</name><index pos:start="439:23" pos:end="439:26">[<expr pos:start="439:24" pos:end="439:25"><literal type="number" pos:start="439:24" pos:end="439:25">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="439:29" pos:end="439:40"><expr pos:start="439:29" pos:end="439:40"><name pos:start="439:29" pos:end="439:40">QEMU_VERSION</name></expr></argument>, <argument pos:start="439:43" pos:end="439:43"><expr pos:start="439:43" pos:end="439:43"><literal type="number" pos:start="439:43" pos:end="439:43">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="441:9" pos:end="443:55">/* Identify device as SCSI-3 rev 1.

           Some later commands are also implemented. */</comment>

	<expr_stmt pos:start="445:9" pos:end="445:22"><expr pos:start="445:9" pos:end="445:21"><name pos:start="445:9" pos:end="445:17"><name pos:start="445:9" pos:end="445:14">outbuf</name><index pos:start="445:15" pos:end="445:17">[<expr pos:start="445:16" pos:end="445:16"><literal type="number" pos:start="445:16" pos:end="445:16">2</literal></expr>]</index></name> <operator pos:start="445:19" pos:end="445:19">=</operator> <literal type="number" pos:start="445:21" pos:end="445:21">3</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="447:9" pos:end="447:22"><expr pos:start="447:9" pos:end="447:21"><name pos:start="447:9" pos:end="447:17"><name pos:start="447:9" pos:end="447:14">outbuf</name><index pos:start="447:15" pos:end="447:17">[<expr pos:start="447:16" pos:end="447:16"><literal type="number" pos:start="447:16" pos:end="447:16">3</literal></expr>]</index></name> <operator pos:start="447:19" pos:end="447:19">=</operator> <literal type="number" pos:start="447:21" pos:end="447:21">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="447:24" pos:end="447:37">/* Format 2 */</comment>

	<expr_stmt pos:start="449:9" pos:end="449:23"><expr pos:start="449:9" pos:end="449:22"><name pos:start="449:9" pos:end="449:17"><name pos:start="449:9" pos:end="449:14">outbuf</name><index pos:start="449:15" pos:end="449:17">[<expr pos:start="449:16" pos:end="449:16"><literal type="number" pos:start="449:16" pos:end="449:16">4</literal></expr>]</index></name> <operator pos:start="449:19" pos:end="449:19">=</operator> <literal type="number" pos:start="449:21" pos:end="449:22">31</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="451:9" pos:end="451:42">/* Sync data transfer and TCQ.  */</comment>

        <expr_stmt pos:start="453:9" pos:end="453:47"><expr pos:start="453:9" pos:end="453:46"><name pos:start="453:9" pos:end="453:17"><name pos:start="453:9" pos:end="453:14">outbuf</name><index pos:start="453:15" pos:end="453:17">[<expr pos:start="453:16" pos:end="453:16"><literal type="number" pos:start="453:16" pos:end="453:16">7</literal></expr>]</index></name> <operator pos:start="453:19" pos:end="453:19">=</operator> <literal type="number" pos:start="453:21" pos:end="453:24">0x10</literal> <operator pos:start="453:26" pos:end="453:26">|</operator> <operator pos:start="453:28" pos:end="453:28">(</operator><ternary pos:start="453:29" pos:end="453:45"><condition pos:start="453:29" pos:end="453:36"><expr pos:start="453:29" pos:end="453:34"><name pos:start="453:29" pos:end="453:34"><name pos:start="453:29" pos:end="453:29">s</name><operator pos:start="453:30" pos:end="453:31">-&gt;</operator><name pos:start="453:32" pos:end="453:34">tcq</name></name></expr> ?</condition><then pos:start="453:38" pos:end="453:41"> <expr pos:start="453:38" pos:end="453:41"><literal type="number" pos:start="453:38" pos:end="453:41">0x02</literal></expr> </then><else pos:start="453:43" pos:end="453:45">: <expr pos:start="453:45" pos:end="453:45"><literal type="number" pos:start="453:45" pos:end="453:45">0</literal></expr></else></ternary><operator pos:start="453:46" pos:end="453:46">)</operator></expr>;</expr_stmt>

	<expr_stmt pos:start="455:9" pos:end="455:24"><expr pos:start="455:9" pos:end="455:23"><name pos:start="455:9" pos:end="455:18"><name pos:start="455:9" pos:end="455:9">r</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:18">buf_len</name></name> <operator pos:start="455:20" pos:end="455:20">=</operator> <literal type="number" pos:start="455:22" pos:end="455:23">36</literal></expr>;</expr_stmt>

	<break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:14">case <expr pos:start="459:10" pos:end="459:13"><literal type="number" pos:start="459:10" pos:end="459:13">0x16</literal></expr>:</case>

        <expr_stmt pos:start="461:9" pos:end="461:32"><expr pos:start="461:9" pos:end="461:31"><call pos:start="461:9" pos:end="461:31"><name pos:start="461:9" pos:end="461:15">DPRINTF</name><argument_list pos:start="461:16" pos:end="461:31">(<argument pos:start="461:17" pos:end="461:30"><expr pos:start="461:17" pos:end="461:30"><literal type="string" pos:start="461:17" pos:end="461:30">"Reserve(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="463:9" pos:end="465:22"><if pos:start="463:9" pos:end="465:22">if <condition pos:start="463:12" pos:end="463:23">(<expr pos:start="463:13" pos:end="463:22"><name pos:start="463:13" pos:end="463:18"><name pos:start="463:13" pos:end="463:15">buf</name><index pos:start="463:16" pos:end="463:18">[<expr pos:start="463:17" pos:end="463:17"><literal type="number" pos:start="463:17" pos:end="463:17">1</literal></expr>]</index></name> <operator pos:start="463:20" pos:end="463:20">&amp;</operator> <literal type="number" pos:start="463:22" pos:end="463:22">1</literal></expr>)</condition><block type="pseudo" pos:start="465:13" pos:end="465:22"><block_content pos:start="465:13" pos:end="465:22">

            <goto pos:start="465:13" pos:end="465:22">goto <name pos:start="465:18" pos:end="465:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="467:9" pos:end="467:14">break;</break>

    <case pos:start="469:5" pos:end="469:14">case <expr pos:start="469:10" pos:end="469:13"><literal type="number" pos:start="469:10" pos:end="469:13">0x17</literal></expr>:</case>

        <expr_stmt pos:start="471:9" pos:end="471:32"><expr pos:start="471:9" pos:end="471:31"><call pos:start="471:9" pos:end="471:31"><name pos:start="471:9" pos:end="471:15">DPRINTF</name><argument_list pos:start="471:16" pos:end="471:31">(<argument pos:start="471:17" pos:end="471:30"><expr pos:start="471:17" pos:end="471:30"><literal type="string" pos:start="471:17" pos:end="471:30">"Release(6)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="473:9" pos:end="475:22"><if pos:start="473:9" pos:end="475:22">if <condition pos:start="473:12" pos:end="473:23">(<expr pos:start="473:13" pos:end="473:22"><name pos:start="473:13" pos:end="473:18"><name pos:start="473:13" pos:end="473:15">buf</name><index pos:start="473:16" pos:end="473:18">[<expr pos:start="473:17" pos:end="473:17"><literal type="number" pos:start="473:17" pos:end="473:17">1</literal></expr>]</index></name> <operator pos:start="473:20" pos:end="473:20">&amp;</operator> <literal type="number" pos:start="473:22" pos:end="473:22">1</literal></expr>)</condition><block type="pseudo" pos:start="475:13" pos:end="475:22"><block_content pos:start="475:13" pos:end="475:22">

            <goto pos:start="475:13" pos:end="475:22">goto <name pos:start="475:18" pos:end="475:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="477:9" pos:end="477:14">break;</break>

    <case pos:start="479:5" pos:end="479:14">case <expr pos:start="479:10" pos:end="479:13"><literal type="number" pos:start="479:10" pos:end="479:13">0x1a</literal></expr>:</case>

    <case pos:start="481:5" pos:end="481:14">case <expr pos:start="481:10" pos:end="481:13"><literal type="number" pos:start="481:10" pos:end="481:13">0x5a</literal></expr>:</case>

        <block pos:start="483:9" pos:end="733:9">{<block_content pos:start="485:13" pos:end="731:33">

            <decl_stmt pos:start="485:13" pos:end="485:23"><decl pos:start="485:13" pos:end="485:22"><type pos:start="485:13" pos:end="485:21"><name pos:start="485:13" pos:end="485:19">uint8_t</name> <modifier pos:start="485:21" pos:end="485:21">*</modifier></type><name pos:start="485:22" pos:end="485:22">p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="487:13" pos:end="487:21"><decl pos:start="487:13" pos:end="487:20"><type pos:start="487:13" pos:end="487:15"><name pos:start="487:13" pos:end="487:15">int</name></type> <name pos:start="487:17" pos:end="487:20">page</name></decl>;</decl_stmt>



            <expr_stmt pos:start="491:13" pos:end="491:33"><expr pos:start="491:13" pos:end="491:32"><name pos:start="491:13" pos:end="491:16">page</name> <operator pos:start="491:18" pos:end="491:18">=</operator> <name pos:start="491:20" pos:end="491:25"><name pos:start="491:20" pos:end="491:22">buf</name><index pos:start="491:23" pos:end="491:25">[<expr pos:start="491:24" pos:end="491:24"><literal type="number" pos:start="491:24" pos:end="491:24">2</literal></expr>]</index></name> <operator pos:start="491:27" pos:end="491:27">&amp;</operator> <literal type="number" pos:start="491:29" pos:end="491:32">0x3f</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:65"><expr pos:start="493:13" pos:end="493:64"><call pos:start="493:13" pos:end="493:64"><name pos:start="493:13" pos:end="493:19">DPRINTF</name><argument_list pos:start="493:20" pos:end="493:64">(<argument pos:start="493:21" pos:end="493:52"><expr pos:start="493:21" pos:end="493:52"><literal type="string" pos:start="493:21" pos:end="493:52">"Mode Sense (page %d, len %d)\n"</literal></expr></argument>, <argument pos:start="493:55" pos:end="493:58"><expr pos:start="493:55" pos:end="493:58"><name pos:start="493:55" pos:end="493:58">page</name></expr></argument>, <argument pos:start="493:61" pos:end="493:63"><expr pos:start="493:61" pos:end="493:63"><name pos:start="493:61" pos:end="493:63">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:23"><expr pos:start="495:13" pos:end="495:22"><name pos:start="495:13" pos:end="495:13">p</name> <operator pos:start="495:15" pos:end="495:15">=</operator> <name pos:start="495:17" pos:end="495:22">outbuf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:28"><expr pos:start="497:13" pos:end="497:27"><call pos:start="497:13" pos:end="497:27"><name pos:start="497:13" pos:end="497:18">memset</name><argument_list pos:start="497:19" pos:end="497:27">(<argument pos:start="497:20" pos:end="497:20"><expr pos:start="497:20" pos:end="497:20"><name pos:start="497:20" pos:end="497:20">p</name></expr></argument>, <argument pos:start="497:23" pos:end="497:23"><expr pos:start="497:23" pos:end="497:23"><literal type="number" pos:start="497:23" pos:end="497:23">0</literal></expr></argument>, <argument pos:start="497:26" pos:end="497:26"><expr pos:start="497:26" pos:end="497:26"><literal type="number" pos:start="497:26" pos:end="497:26">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:26"><expr pos:start="499:13" pos:end="499:25"><name pos:start="499:13" pos:end="499:21"><name pos:start="499:13" pos:end="499:18">outbuf</name><index pos:start="499:19" pos:end="499:21">[<expr pos:start="499:20" pos:end="499:20"><literal type="number" pos:start="499:20" pos:end="499:20">1</literal></expr>]</index></name> <operator pos:start="499:23" pos:end="499:23">=</operator> <literal type="number" pos:start="499:25" pos:end="499:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="499:28" pos:end="499:53">/* Default media type.  */</comment>

            <expr_stmt pos:start="501:13" pos:end="501:26"><expr pos:start="501:13" pos:end="501:25"><name pos:start="501:13" pos:end="501:21"><name pos:start="501:13" pos:end="501:18">outbuf</name><index pos:start="501:19" pos:end="501:21">[<expr pos:start="501:20" pos:end="501:20"><literal type="number" pos:start="501:20" pos:end="501:20">3</literal></expr>]</index></name> <operator pos:start="501:23" pos:end="501:23">=</operator> <literal type="number" pos:start="501:25" pos:end="501:25">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="501:28" pos:end="501:58">/* Block descriptor length.  */</comment>

            <if_stmt pos:start="503:13" pos:end="507:13"><if pos:start="503:13" pos:end="507:13">if <condition pos:start="503:16" pos:end="503:63">(<expr pos:start="503:17" pos:end="503:62"><call pos:start="503:17" pos:end="503:43"><name pos:start="503:17" pos:end="503:34">bdrv_get_type_hint</name><argument_list pos:start="503:35" pos:end="503:43">(<argument pos:start="503:36" pos:end="503:42"><expr pos:start="503:36" pos:end="503:42"><name pos:start="503:36" pos:end="503:42"><name pos:start="503:36" pos:end="503:36">s</name><operator pos:start="503:37" pos:end="503:38">-&gt;</operator><name pos:start="503:39" pos:end="503:42">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="503:45" pos:end="503:46">==</operator> <name pos:start="503:48" pos:end="503:62">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="503:65" pos:end="507:13">{<block_content pos:start="505:17" pos:end="505:33">

                <expr_stmt pos:start="505:17" pos:end="505:33"><expr pos:start="505:17" pos:end="505:32"><name pos:start="505:17" pos:end="505:25"><name pos:start="505:17" pos:end="505:22">outbuf</name><index pos:start="505:23" pos:end="505:25">[<expr pos:start="505:24" pos:end="505:24"><literal type="number" pos:start="505:24" pos:end="505:24">2</literal></expr>]</index></name> <operator pos:start="505:27" pos:end="505:27">=</operator> <literal type="number" pos:start="505:29" pos:end="505:32">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="505:35" pos:end="505:50">/* Readonly.  */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:19"><expr pos:start="509:13" pos:end="509:18"><name pos:start="509:13" pos:end="509:13">p</name> <operator pos:start="509:15" pos:end="509:16">+=</operator> <literal type="number" pos:start="509:18" pos:end="509:18">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="511:13" pos:end="663:13"><if pos:start="511:13" pos:end="573:13">if <condition pos:start="511:16" pos:end="511:26">(<expr pos:start="511:17" pos:end="511:25"><name pos:start="511:17" pos:end="511:20">page</name> <operator pos:start="511:22" pos:end="511:23">==</operator> <literal type="number" pos:start="511:25" pos:end="511:25">4</literal></expr>)</condition> <block pos:start="511:28" pos:end="573:13">{<block_content pos:start="513:17" pos:end="571:26">

                <decl_stmt pos:start="513:17" pos:end="513:43"><decl pos:start="513:17" pos:end="513:29"><type pos:start="513:17" pos:end="513:19"><name pos:start="513:17" pos:end="513:19">int</name></type> <name pos:start="513:21" pos:end="513:29">cylinders</name></decl>, <decl pos:start="513:32" pos:end="513:36"><type ref="prev" pos:start="513:17" pos:end="513:19"/><name pos:start="513:32" pos:end="513:36">heads</name></decl>, <decl pos:start="513:39" pos:end="513:42"><type ref="prev" pos:start="513:17" pos:end="513:19"/><name pos:start="513:39" pos:end="513:42">secs</name></decl>;</decl_stmt>



                <comment type="block" pos:start="517:17" pos:end="517:54">/* Rigid disk device geometry page. */</comment>

                <expr_stmt pos:start="519:17" pos:end="519:25"><expr pos:start="519:17" pos:end="519:24"><name pos:start="519:17" pos:end="519:20"><name pos:start="519:17" pos:end="519:17">p</name><index pos:start="519:18" pos:end="519:20">[<expr pos:start="519:19" pos:end="519:19"><literal type="number" pos:start="519:19" pos:end="519:19">0</literal></expr>]</index></name> <operator pos:start="519:22" pos:end="519:22">=</operator> <literal type="number" pos:start="519:24" pos:end="519:24">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:28"><expr pos:start="521:17" pos:end="521:27"><name pos:start="521:17" pos:end="521:20"><name pos:start="521:17" pos:end="521:17">p</name><index pos:start="521:18" pos:end="521:20">[<expr pos:start="521:19" pos:end="521:19"><literal type="number" pos:start="521:19" pos:end="521:19">1</literal></expr>]</index></name> <operator pos:start="521:22" pos:end="521:22">=</operator> <literal type="number" pos:start="521:24" pos:end="521:27">0x16</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="523:17" pos:end="523:61">/* if a geometry hint is available, use it */</comment>

                <expr_stmt pos:start="525:17" pos:end="525:75"><expr pos:start="525:17" pos:end="525:74"><call pos:start="525:17" pos:end="525:74"><name pos:start="525:17" pos:end="525:38">bdrv_get_geometry_hint</name><argument_list pos:start="525:39" pos:end="525:74">(<argument pos:start="525:40" pos:end="525:46"><expr pos:start="525:40" pos:end="525:46"><name pos:start="525:40" pos:end="525:46"><name pos:start="525:40" pos:end="525:40">s</name><operator pos:start="525:41" pos:end="525:42">-&gt;</operator><name pos:start="525:43" pos:end="525:46">bdrv</name></name></expr></argument>, <argument pos:start="525:49" pos:end="525:58"><expr pos:start="525:49" pos:end="525:58"><operator pos:start="525:49" pos:end="525:49">&amp;</operator><name pos:start="525:50" pos:end="525:58">cylinders</name></expr></argument>, <argument pos:start="525:61" pos:end="525:66"><expr pos:start="525:61" pos:end="525:66"><operator pos:start="525:61" pos:end="525:61">&amp;</operator><name pos:start="525:62" pos:end="525:66">heads</name></expr></argument>, <argument pos:start="525:69" pos:end="525:73"><expr pos:start="525:69" pos:end="525:73"><operator pos:start="525:69" pos:end="525:69">&amp;</operator><name pos:start="525:70" pos:end="525:73">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="527:17" pos:end="527:48"><expr pos:start="527:17" pos:end="527:47"><name pos:start="527:17" pos:end="527:20"><name pos:start="527:17" pos:end="527:17">p</name><index pos:start="527:18" pos:end="527:20">[<expr pos:start="527:19" pos:end="527:19"><literal type="number" pos:start="527:19" pos:end="527:19">2</literal></expr>]</index></name> <operator pos:start="527:22" pos:end="527:22">=</operator> <operator pos:start="527:24" pos:end="527:24">(</operator><name pos:start="527:25" pos:end="527:33">cylinders</name> <operator pos:start="527:35" pos:end="527:36">&gt;&gt;</operator> <literal type="number" pos:start="527:38" pos:end="527:39">16</literal><operator pos:start="527:40" pos:end="527:40">)</operator> <operator pos:start="527:42" pos:end="527:42">&amp;</operator> <literal type="number" pos:start="527:44" pos:end="527:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="529:17" pos:end="529:47"><expr pos:start="529:17" pos:end="529:46"><name pos:start="529:17" pos:end="529:20"><name pos:start="529:17" pos:end="529:17">p</name><index pos:start="529:18" pos:end="529:20">[<expr pos:start="529:19" pos:end="529:19"><literal type="number" pos:start="529:19" pos:end="529:19">3</literal></expr>]</index></name> <operator pos:start="529:22" pos:end="529:22">=</operator> <operator pos:start="529:24" pos:end="529:24">(</operator><name pos:start="529:25" pos:end="529:33">cylinders</name> <operator pos:start="529:35" pos:end="529:36">&gt;&gt;</operator> <literal type="number" pos:start="529:38" pos:end="529:38">8</literal><operator pos:start="529:39" pos:end="529:39">)</operator> <operator pos:start="529:41" pos:end="529:41">&amp;</operator> <literal type="number" pos:start="529:43" pos:end="529:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="531:17" pos:end="531:40"><expr pos:start="531:17" pos:end="531:39"><name pos:start="531:17" pos:end="531:20"><name pos:start="531:17" pos:end="531:17">p</name><index pos:start="531:18" pos:end="531:20">[<expr pos:start="531:19" pos:end="531:19"><literal type="number" pos:start="531:19" pos:end="531:19">4</literal></expr>]</index></name> <operator pos:start="531:22" pos:end="531:22">=</operator> <name pos:start="531:24" pos:end="531:32">cylinders</name> <operator pos:start="531:34" pos:end="531:34">&amp;</operator> <literal type="number" pos:start="531:36" pos:end="531:39">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="533:17" pos:end="533:36"><expr pos:start="533:17" pos:end="533:35"><name pos:start="533:17" pos:end="533:20"><name pos:start="533:17" pos:end="533:17">p</name><index pos:start="533:18" pos:end="533:20">[<expr pos:start="533:19" pos:end="533:19"><literal type="number" pos:start="533:19" pos:end="533:19">5</literal></expr>]</index></name> <operator pos:start="533:22" pos:end="533:22">=</operator> <name pos:start="533:24" pos:end="533:28">heads</name> <operator pos:start="533:30" pos:end="533:30">&amp;</operator> <literal type="number" pos:start="533:32" pos:end="533:35">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="535:17" pos:end="535:60">/* Write precomp start cylinder, disabled */</comment>

                <expr_stmt pos:start="537:17" pos:end="537:48"><expr pos:start="537:17" pos:end="537:47"><name pos:start="537:17" pos:end="537:20"><name pos:start="537:17" pos:end="537:17">p</name><index pos:start="537:18" pos:end="537:20">[<expr pos:start="537:19" pos:end="537:19"><literal type="number" pos:start="537:19" pos:end="537:19">6</literal></expr>]</index></name> <operator pos:start="537:22" pos:end="537:22">=</operator> <operator pos:start="537:24" pos:end="537:24">(</operator><name pos:start="537:25" pos:end="537:33">cylinders</name> <operator pos:start="537:35" pos:end="537:36">&gt;&gt;</operator> <literal type="number" pos:start="537:38" pos:end="537:39">16</literal><operator pos:start="537:40" pos:end="537:40">)</operator> <operator pos:start="537:42" pos:end="537:42">&amp;</operator> <literal type="number" pos:start="537:44" pos:end="537:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="539:17" pos:end="539:47"><expr pos:start="539:17" pos:end="539:46"><name pos:start="539:17" pos:end="539:20"><name pos:start="539:17" pos:end="539:17">p</name><index pos:start="539:18" pos:end="539:20">[<expr pos:start="539:19" pos:end="539:19"><literal type="number" pos:start="539:19" pos:end="539:19">7</literal></expr>]</index></name> <operator pos:start="539:22" pos:end="539:22">=</operator> <operator pos:start="539:24" pos:end="539:24">(</operator><name pos:start="539:25" pos:end="539:33">cylinders</name> <operator pos:start="539:35" pos:end="539:36">&gt;&gt;</operator> <literal type="number" pos:start="539:38" pos:end="539:38">8</literal><operator pos:start="539:39" pos:end="539:39">)</operator> <operator pos:start="539:41" pos:end="539:41">&amp;</operator> <literal type="number" pos:start="539:43" pos:end="539:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="541:17" pos:end="541:40"><expr pos:start="541:17" pos:end="541:39"><name pos:start="541:17" pos:end="541:20"><name pos:start="541:17" pos:end="541:17">p</name><index pos:start="541:18" pos:end="541:20">[<expr pos:start="541:19" pos:end="541:19"><literal type="number" pos:start="541:19" pos:end="541:19">8</literal></expr>]</index></name> <operator pos:start="541:22" pos:end="541:22">=</operator> <name pos:start="541:24" pos:end="541:32">cylinders</name> <operator pos:start="541:34" pos:end="541:34">&amp;</operator> <literal type="number" pos:start="541:36" pos:end="541:39">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="543:17" pos:end="543:62">/* Reduced current start cylinder, disabled */</comment>

                <expr_stmt pos:start="545:17" pos:end="545:48"><expr pos:start="545:17" pos:end="545:47"><name pos:start="545:17" pos:end="545:20"><name pos:start="545:17" pos:end="545:17">p</name><index pos:start="545:18" pos:end="545:20">[<expr pos:start="545:19" pos:end="545:19"><literal type="number" pos:start="545:19" pos:end="545:19">9</literal></expr>]</index></name> <operator pos:start="545:22" pos:end="545:22">=</operator> <operator pos:start="545:24" pos:end="545:24">(</operator><name pos:start="545:25" pos:end="545:33">cylinders</name> <operator pos:start="545:35" pos:end="545:36">&gt;&gt;</operator> <literal type="number" pos:start="545:38" pos:end="545:39">16</literal><operator pos:start="545:40" pos:end="545:40">)</operator> <operator pos:start="545:42" pos:end="545:42">&amp;</operator> <literal type="number" pos:start="545:44" pos:end="545:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="547:17" pos:end="547:48"><expr pos:start="547:17" pos:end="547:47"><name pos:start="547:17" pos:end="547:21"><name pos:start="547:17" pos:end="547:17">p</name><index pos:start="547:18" pos:end="547:21">[<expr pos:start="547:19" pos:end="547:20"><literal type="number" pos:start="547:19" pos:end="547:20">10</literal></expr>]</index></name> <operator pos:start="547:23" pos:end="547:23">=</operator> <operator pos:start="547:25" pos:end="547:25">(</operator><name pos:start="547:26" pos:end="547:34">cylinders</name> <operator pos:start="547:36" pos:end="547:37">&gt;&gt;</operator> <literal type="number" pos:start="547:39" pos:end="547:39">8</literal><operator pos:start="547:40" pos:end="547:40">)</operator> <operator pos:start="547:42" pos:end="547:42">&amp;</operator> <literal type="number" pos:start="547:44" pos:end="547:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="549:17" pos:end="549:41"><expr pos:start="549:17" pos:end="549:40"><name pos:start="549:17" pos:end="549:21"><name pos:start="549:17" pos:end="549:17">p</name><index pos:start="549:18" pos:end="549:21">[<expr pos:start="549:19" pos:end="549:20"><literal type="number" pos:start="549:19" pos:end="549:20">11</literal></expr>]</index></name> <operator pos:start="549:23" pos:end="549:23">=</operator> <name pos:start="549:25" pos:end="549:33">cylinders</name> <operator pos:start="549:35" pos:end="549:35">&amp;</operator> <literal type="number" pos:start="549:37" pos:end="549:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="551:17" pos:end="551:50">/* Device step rate [ns], 200ns */</comment>

                <expr_stmt pos:start="553:17" pos:end="553:26"><expr pos:start="553:17" pos:end="553:25"><name pos:start="553:17" pos:end="553:21"><name pos:start="553:17" pos:end="553:17">p</name><index pos:start="553:18" pos:end="553:21">[<expr pos:start="553:19" pos:end="553:20"><literal type="number" pos:start="553:19" pos:end="553:20">12</literal></expr>]</index></name> <operator pos:start="553:23" pos:end="553:23">=</operator> <literal type="number" pos:start="553:25" pos:end="553:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="555:17" pos:end="555:28"><expr pos:start="555:17" pos:end="555:27"><name pos:start="555:17" pos:end="555:21"><name pos:start="555:17" pos:end="555:17">p</name><index pos:start="555:18" pos:end="555:21">[<expr pos:start="555:19" pos:end="555:20"><literal type="number" pos:start="555:19" pos:end="555:20">13</literal></expr>]</index></name> <operator pos:start="555:23" pos:end="555:23">=</operator> <literal type="number" pos:start="555:25" pos:end="555:27">200</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="557:17" pos:end="557:43">/* Landing zone cylinder */</comment>

                <expr_stmt pos:start="559:17" pos:end="559:29"><expr pos:start="559:17" pos:end="559:28"><name pos:start="559:17" pos:end="559:21"><name pos:start="559:17" pos:end="559:17">p</name><index pos:start="559:18" pos:end="559:21">[<expr pos:start="559:19" pos:end="559:20"><literal type="number" pos:start="559:19" pos:end="559:20">14</literal></expr>]</index></name> <operator pos:start="559:23" pos:end="559:23">=</operator> <literal type="number" pos:start="559:25" pos:end="559:28">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:30"><expr pos:start="561:17" pos:end="561:29"><name pos:start="561:17" pos:end="561:21"><name pos:start="561:17" pos:end="561:17">p</name><index pos:start="561:18" pos:end="561:21">[<expr pos:start="561:19" pos:end="561:20"><literal type="number" pos:start="561:19" pos:end="561:20">15</literal></expr>]</index></name> <operator pos:start="561:23" pos:end="561:23">=</operator>  <literal type="number" pos:start="561:26" pos:end="561:29">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:29"><expr pos:start="563:17" pos:end="563:28"><name pos:start="563:17" pos:end="563:21"><name pos:start="563:17" pos:end="563:17">p</name><index pos:start="563:18" pos:end="563:21">[<expr pos:start="563:19" pos:end="563:20"><literal type="number" pos:start="563:19" pos:end="563:20">16</literal></expr>]</index></name> <operator pos:start="563:23" pos:end="563:23">=</operator> <literal type="number" pos:start="563:25" pos:end="563:28">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="565:17" pos:end="565:58">/* Medium rotation rate [rpm], 5400 rpm */</comment>

                <expr_stmt pos:start="567:17" pos:end="567:43"><expr pos:start="567:17" pos:end="567:42"><name pos:start="567:17" pos:end="567:21"><name pos:start="567:17" pos:end="567:17">p</name><index pos:start="567:18" pos:end="567:21">[<expr pos:start="567:19" pos:end="567:20"><literal type="number" pos:start="567:19" pos:end="567:20">20</literal></expr>]</index></name> <operator pos:start="567:23" pos:end="567:23">=</operator> <operator pos:start="567:25" pos:end="567:25">(</operator><literal type="number" pos:start="567:26" pos:end="567:29">5400</literal> <operator pos:start="567:31" pos:end="567:32">&gt;&gt;</operator> <literal type="number" pos:start="567:34" pos:end="567:34">8</literal><operator pos:start="567:35" pos:end="567:35">)</operator> <operator pos:start="567:37" pos:end="567:37">&amp;</operator> <literal type="number" pos:start="567:39" pos:end="567:42">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:36"><expr pos:start="569:17" pos:end="569:35"><name pos:start="569:17" pos:end="569:21"><name pos:start="569:17" pos:end="569:17">p</name><index pos:start="569:18" pos:end="569:21">[<expr pos:start="569:19" pos:end="569:20"><literal type="number" pos:start="569:19" pos:end="569:20">21</literal></expr>]</index></name> <operator pos:start="569:23" pos:end="569:23">=</operator> <literal type="number" pos:start="569:25" pos:end="569:28">5400</literal> <operator pos:start="569:30" pos:end="569:30">&amp;</operator> <literal type="number" pos:start="569:32" pos:end="569:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:26"><expr pos:start="571:17" pos:end="571:25"><name pos:start="571:17" pos:end="571:17">p</name> <operator pos:start="571:19" pos:end="571:20">+=</operator> <literal type="number" pos:start="571:22" pos:end="571:25">0x16</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="573:15" pos:end="649:13">else if <condition pos:start="573:23" pos:end="573:33">(<expr pos:start="573:24" pos:end="573:32"><name pos:start="573:24" pos:end="573:27">page</name> <operator pos:start="573:29" pos:end="573:30">==</operator> <literal type="number" pos:start="573:32" pos:end="573:32">5</literal></expr>)</condition> <block pos:start="573:35" pos:end="649:13">{<block_content pos:start="575:17" pos:end="647:26">

                <decl_stmt pos:start="575:17" pos:end="575:43"><decl pos:start="575:17" pos:end="575:29"><type pos:start="575:17" pos:end="575:19"><name pos:start="575:17" pos:end="575:19">int</name></type> <name pos:start="575:21" pos:end="575:29">cylinders</name></decl>, <decl pos:start="575:32" pos:end="575:36"><type ref="prev" pos:start="575:17" pos:end="575:19"/><name pos:start="575:32" pos:end="575:36">heads</name></decl>, <decl pos:start="575:39" pos:end="575:42"><type ref="prev" pos:start="575:17" pos:end="575:19"/><name pos:start="575:39" pos:end="575:42">secs</name></decl>;</decl_stmt>



                <comment type="block" pos:start="579:17" pos:end="579:57">/* Flexible disk device geometry page. */</comment>

                <expr_stmt pos:start="581:17" pos:end="581:25"><expr pos:start="581:17" pos:end="581:24"><name pos:start="581:17" pos:end="581:20"><name pos:start="581:17" pos:end="581:17">p</name><index pos:start="581:18" pos:end="581:20">[<expr pos:start="581:19" pos:end="581:19"><literal type="number" pos:start="581:19" pos:end="581:19">0</literal></expr>]</index></name> <operator pos:start="581:22" pos:end="581:22">=</operator> <literal type="number" pos:start="581:24" pos:end="581:24">5</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="583:17" pos:end="583:28"><expr pos:start="583:17" pos:end="583:27"><name pos:start="583:17" pos:end="583:20"><name pos:start="583:17" pos:end="583:17">p</name><index pos:start="583:18" pos:end="583:20">[<expr pos:start="583:19" pos:end="583:19"><literal type="number" pos:start="583:19" pos:end="583:19">1</literal></expr>]</index></name> <operator pos:start="583:22" pos:end="583:22">=</operator> <literal type="number" pos:start="583:24" pos:end="583:27">0x1e</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="585:17" pos:end="585:53">/* Transfer rate [kbit/s], 5Mbit/s */</comment>

                <expr_stmt pos:start="587:17" pos:end="587:33"><expr pos:start="587:17" pos:end="587:32"><name pos:start="587:17" pos:end="587:20"><name pos:start="587:17" pos:end="587:17">p</name><index pos:start="587:18" pos:end="587:20">[<expr pos:start="587:19" pos:end="587:19"><literal type="number" pos:start="587:19" pos:end="587:19">2</literal></expr>]</index></name> <operator pos:start="587:22" pos:end="587:22">=</operator> <literal type="number" pos:start="587:24" pos:end="587:27">5000</literal> <operator pos:start="587:29" pos:end="587:30">&gt;&gt;</operator> <literal type="number" pos:start="587:32" pos:end="587:32">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="589:17" pos:end="589:35"><expr pos:start="589:17" pos:end="589:34"><name pos:start="589:17" pos:end="589:20"><name pos:start="589:17" pos:end="589:17">p</name><index pos:start="589:18" pos:end="589:20">[<expr pos:start="589:19" pos:end="589:19"><literal type="number" pos:start="589:19" pos:end="589:19">3</literal></expr>]</index></name> <operator pos:start="589:22" pos:end="589:22">=</operator> <literal type="number" pos:start="589:24" pos:end="589:27">5000</literal> <operator pos:start="589:29" pos:end="589:29">&amp;</operator> <literal type="number" pos:start="589:31" pos:end="589:34">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="591:17" pos:end="591:61">/* if a geometry hint is available, use it */</comment>

                <expr_stmt pos:start="593:17" pos:end="593:75"><expr pos:start="593:17" pos:end="593:74"><call pos:start="593:17" pos:end="593:74"><name pos:start="593:17" pos:end="593:38">bdrv_get_geometry_hint</name><argument_list pos:start="593:39" pos:end="593:74">(<argument pos:start="593:40" pos:end="593:46"><expr pos:start="593:40" pos:end="593:46"><name pos:start="593:40" pos:end="593:46"><name pos:start="593:40" pos:end="593:40">s</name><operator pos:start="593:41" pos:end="593:42">-&gt;</operator><name pos:start="593:43" pos:end="593:46">bdrv</name></name></expr></argument>, <argument pos:start="593:49" pos:end="593:58"><expr pos:start="593:49" pos:end="593:58"><operator pos:start="593:49" pos:end="593:49">&amp;</operator><name pos:start="593:50" pos:end="593:58">cylinders</name></expr></argument>, <argument pos:start="593:61" pos:end="593:66"><expr pos:start="593:61" pos:end="593:66"><operator pos:start="593:61" pos:end="593:61">&amp;</operator><name pos:start="593:62" pos:end="593:66">heads</name></expr></argument>, <argument pos:start="593:69" pos:end="593:73"><expr pos:start="593:69" pos:end="593:73"><operator pos:start="593:69" pos:end="593:69">&amp;</operator><name pos:start="593:70" pos:end="593:73">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:36"><expr pos:start="595:17" pos:end="595:35"><name pos:start="595:17" pos:end="595:20"><name pos:start="595:17" pos:end="595:17">p</name><index pos:start="595:18" pos:end="595:20">[<expr pos:start="595:19" pos:end="595:19"><literal type="number" pos:start="595:19" pos:end="595:19">4</literal></expr>]</index></name> <operator pos:start="595:22" pos:end="595:22">=</operator> <name pos:start="595:24" pos:end="595:28">heads</name> <operator pos:start="595:30" pos:end="595:30">&amp;</operator> <literal type="number" pos:start="595:32" pos:end="595:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:35"><expr pos:start="597:17" pos:end="597:34"><name pos:start="597:17" pos:end="597:20"><name pos:start="597:17" pos:end="597:17">p</name><index pos:start="597:18" pos:end="597:20">[<expr pos:start="597:19" pos:end="597:19"><literal type="number" pos:start="597:19" pos:end="597:19">5</literal></expr>]</index></name> <operator pos:start="597:22" pos:end="597:22">=</operator> <name pos:start="597:24" pos:end="597:27">secs</name> <operator pos:start="597:29" pos:end="597:29">&amp;</operator> <literal type="number" pos:start="597:31" pos:end="597:34">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:43"><expr pos:start="599:17" pos:end="599:42"><name pos:start="599:17" pos:end="599:20"><name pos:start="599:17" pos:end="599:17">p</name><index pos:start="599:18" pos:end="599:20">[<expr pos:start="599:19" pos:end="599:19"><literal type="number" pos:start="599:19" pos:end="599:19">6</literal></expr>]</index></name> <operator pos:start="599:22" pos:end="599:22">=</operator> <name pos:start="599:24" pos:end="599:38"><name pos:start="599:24" pos:end="599:24">s</name><operator pos:start="599:25" pos:end="599:26">-&gt;</operator><name pos:start="599:27" pos:end="599:38">cluster_size</name></name> <operator pos:start="599:40" pos:end="599:40">*</operator> <literal type="number" pos:start="599:42" pos:end="599:42">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="601:17" pos:end="601:47"><expr pos:start="601:17" pos:end="601:46"><name pos:start="601:17" pos:end="601:20"><name pos:start="601:17" pos:end="601:17">p</name><index pos:start="601:18" pos:end="601:20">[<expr pos:start="601:19" pos:end="601:19"><literal type="number" pos:start="601:19" pos:end="601:19">8</literal></expr>]</index></name> <operator pos:start="601:22" pos:end="601:22">=</operator> <operator pos:start="601:24" pos:end="601:24">(</operator><name pos:start="601:25" pos:end="601:33">cylinders</name> <operator pos:start="601:35" pos:end="601:36">&gt;&gt;</operator> <literal type="number" pos:start="601:38" pos:end="601:38">8</literal><operator pos:start="601:39" pos:end="601:39">)</operator> <operator pos:start="601:41" pos:end="601:41">&amp;</operator> <literal type="number" pos:start="601:43" pos:end="601:46">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:40"><expr pos:start="603:17" pos:end="603:39"><name pos:start="603:17" pos:end="603:20"><name pos:start="603:17" pos:end="603:17">p</name><index pos:start="603:18" pos:end="603:20">[<expr pos:start="603:19" pos:end="603:19"><literal type="number" pos:start="603:19" pos:end="603:19">9</literal></expr>]</index></name> <operator pos:start="603:22" pos:end="603:22">=</operator> <name pos:start="603:24" pos:end="603:32">cylinders</name> <operator pos:start="603:34" pos:end="603:34">&amp;</operator> <literal type="number" pos:start="603:36" pos:end="603:39">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="605:17" pos:end="605:60">/* Write precomp start cylinder, disabled */</comment>

                <expr_stmt pos:start="607:17" pos:end="607:48"><expr pos:start="607:17" pos:end="607:47"><name pos:start="607:17" pos:end="607:21"><name pos:start="607:17" pos:end="607:17">p</name><index pos:start="607:18" pos:end="607:21">[<expr pos:start="607:19" pos:end="607:20"><literal type="number" pos:start="607:19" pos:end="607:20">10</literal></expr>]</index></name> <operator pos:start="607:23" pos:end="607:23">=</operator> <operator pos:start="607:25" pos:end="607:25">(</operator><name pos:start="607:26" pos:end="607:34">cylinders</name> <operator pos:start="607:36" pos:end="607:37">&gt;&gt;</operator> <literal type="number" pos:start="607:39" pos:end="607:39">8</literal><operator pos:start="607:40" pos:end="607:40">)</operator> <operator pos:start="607:42" pos:end="607:42">&amp;</operator> <literal type="number" pos:start="607:44" pos:end="607:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="609:17" pos:end="609:41"><expr pos:start="609:17" pos:end="609:40"><name pos:start="609:17" pos:end="609:21"><name pos:start="609:17" pos:end="609:17">p</name><index pos:start="609:18" pos:end="609:21">[<expr pos:start="609:19" pos:end="609:20"><literal type="number" pos:start="609:19" pos:end="609:20">11</literal></expr>]</index></name> <operator pos:start="609:23" pos:end="609:23">=</operator> <name pos:start="609:25" pos:end="609:33">cylinders</name> <operator pos:start="609:35" pos:end="609:35">&amp;</operator> <literal type="number" pos:start="609:37" pos:end="609:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="611:17" pos:end="611:62">/* Reduced current start cylinder, disabled */</comment>

                <expr_stmt pos:start="613:17" pos:end="613:48"><expr pos:start="613:17" pos:end="613:47"><name pos:start="613:17" pos:end="613:21"><name pos:start="613:17" pos:end="613:17">p</name><index pos:start="613:18" pos:end="613:21">[<expr pos:start="613:19" pos:end="613:20"><literal type="number" pos:start="613:19" pos:end="613:20">12</literal></expr>]</index></name> <operator pos:start="613:23" pos:end="613:23">=</operator> <operator pos:start="613:25" pos:end="613:25">(</operator><name pos:start="613:26" pos:end="613:34">cylinders</name> <operator pos:start="613:36" pos:end="613:37">&gt;&gt;</operator> <literal type="number" pos:start="613:39" pos:end="613:39">8</literal><operator pos:start="613:40" pos:end="613:40">)</operator> <operator pos:start="613:42" pos:end="613:42">&amp;</operator> <literal type="number" pos:start="613:44" pos:end="613:47">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="615:17" pos:end="615:41"><expr pos:start="615:17" pos:end="615:40"><name pos:start="615:17" pos:end="615:21"><name pos:start="615:17" pos:end="615:17">p</name><index pos:start="615:18" pos:end="615:21">[<expr pos:start="615:19" pos:end="615:20"><literal type="number" pos:start="615:19" pos:end="615:20">13</literal></expr>]</index></name> <operator pos:start="615:23" pos:end="615:23">=</operator> <name pos:start="615:25" pos:end="615:33">cylinders</name> <operator pos:start="615:35" pos:end="615:35">&amp;</operator> <literal type="number" pos:start="615:37" pos:end="615:40">0xff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="617:17" pos:end="617:53">/* Device step rate [100us], 100us */</comment>

                <expr_stmt pos:start="619:17" pos:end="619:26"><expr pos:start="619:17" pos:end="619:25"><name pos:start="619:17" pos:end="619:21"><name pos:start="619:17" pos:end="619:17">p</name><index pos:start="619:18" pos:end="619:21">[<expr pos:start="619:19" pos:end="619:20"><literal type="number" pos:start="619:19" pos:end="619:20">14</literal></expr>]</index></name> <operator pos:start="619:23" pos:end="619:23">=</operator> <literal type="number" pos:start="619:25" pos:end="619:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="621:17" pos:end="621:26"><expr pos:start="621:17" pos:end="621:25"><name pos:start="621:17" pos:end="621:21"><name pos:start="621:17" pos:end="621:17">p</name><index pos:start="621:18" pos:end="621:21">[<expr pos:start="621:19" pos:end="621:20"><literal type="number" pos:start="621:19" pos:end="621:20">15</literal></expr>]</index></name> <operator pos:start="621:23" pos:end="621:23">=</operator> <literal type="number" pos:start="621:25" pos:end="621:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="623:17" pos:end="623:55">/* Device step pulse width [us], 1us */</comment>

                <expr_stmt pos:start="625:17" pos:end="625:26"><expr pos:start="625:17" pos:end="625:25"><name pos:start="625:17" pos:end="625:21"><name pos:start="625:17" pos:end="625:17">p</name><index pos:start="625:18" pos:end="625:21">[<expr pos:start="625:19" pos:end="625:20"><literal type="number" pos:start="625:19" pos:end="625:20">16</literal></expr>]</index></name> <operator pos:start="625:23" pos:end="625:23">=</operator> <literal type="number" pos:start="625:25" pos:end="625:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="627:17" pos:end="627:61">/* Device head settle delay [100us], 100us */</comment>

                <expr_stmt pos:start="629:17" pos:end="629:26"><expr pos:start="629:17" pos:end="629:25"><name pos:start="629:17" pos:end="629:21"><name pos:start="629:17" pos:end="629:17">p</name><index pos:start="629:18" pos:end="629:21">[<expr pos:start="629:19" pos:end="629:20"><literal type="number" pos:start="629:19" pos:end="629:20">17</literal></expr>]</index></name> <operator pos:start="629:23" pos:end="629:23">=</operator> <literal type="number" pos:start="629:25" pos:end="629:25">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="631:17" pos:end="631:26"><expr pos:start="631:17" pos:end="631:25"><name pos:start="631:17" pos:end="631:21"><name pos:start="631:17" pos:end="631:17">p</name><index pos:start="631:18" pos:end="631:21">[<expr pos:start="631:19" pos:end="631:20"><literal type="number" pos:start="631:19" pos:end="631:20">18</literal></expr>]</index></name> <operator pos:start="631:23" pos:end="631:23">=</operator> <literal type="number" pos:start="631:25" pos:end="631:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="633:17" pos:end="633:49">/* Motor on delay [0.1s], 0.1s */</comment>

                <expr_stmt pos:start="635:17" pos:end="635:26"><expr pos:start="635:17" pos:end="635:25"><name pos:start="635:17" pos:end="635:21"><name pos:start="635:17" pos:end="635:17">p</name><index pos:start="635:18" pos:end="635:21">[<expr pos:start="635:19" pos:end="635:20"><literal type="number" pos:start="635:19" pos:end="635:20">19</literal></expr>]</index></name> <operator pos:start="635:23" pos:end="635:23">=</operator> <literal type="number" pos:start="635:25" pos:end="635:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="637:17" pos:end="637:50">/* Motor off delay [0.1s], 0.1s */</comment>

                <expr_stmt pos:start="639:17" pos:end="639:26"><expr pos:start="639:17" pos:end="639:25"><name pos:start="639:17" pos:end="639:21"><name pos:start="639:17" pos:end="639:17">p</name><index pos:start="639:18" pos:end="639:21">[<expr pos:start="639:19" pos:end="639:20"><literal type="number" pos:start="639:19" pos:end="639:20">20</literal></expr>]</index></name> <operator pos:start="639:23" pos:end="639:23">=</operator> <literal type="number" pos:start="639:25" pos:end="639:25">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="641:17" pos:end="641:58">/* Medium rotation rate [rpm], 5400 rpm */</comment>

                <expr_stmt pos:start="643:17" pos:end="643:43"><expr pos:start="643:17" pos:end="643:42"><name pos:start="643:17" pos:end="643:21"><name pos:start="643:17" pos:end="643:17">p</name><index pos:start="643:18" pos:end="643:21">[<expr pos:start="643:19" pos:end="643:20"><literal type="number" pos:start="643:19" pos:end="643:20">28</literal></expr>]</index></name> <operator pos:start="643:23" pos:end="643:23">=</operator> <operator pos:start="643:25" pos:end="643:25">(</operator><literal type="number" pos:start="643:26" pos:end="643:29">5400</literal> <operator pos:start="643:31" pos:end="643:32">&gt;&gt;</operator> <literal type="number" pos:start="643:34" pos:end="643:34">8</literal><operator pos:start="643:35" pos:end="643:35">)</operator> <operator pos:start="643:37" pos:end="643:37">&amp;</operator> <literal type="number" pos:start="643:39" pos:end="643:42">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="645:17" pos:end="645:36"><expr pos:start="645:17" pos:end="645:35"><name pos:start="645:17" pos:end="645:21"><name pos:start="645:17" pos:end="645:17">p</name><index pos:start="645:18" pos:end="645:21">[<expr pos:start="645:19" pos:end="645:20"><literal type="number" pos:start="645:19" pos:end="645:20">29</literal></expr>]</index></name> <operator pos:start="645:23" pos:end="645:23">=</operator> <literal type="number" pos:start="645:25" pos:end="645:28">5400</literal> <operator pos:start="645:30" pos:end="645:30">&amp;</operator> <literal type="number" pos:start="645:32" pos:end="645:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="647:17" pos:end="647:26"><expr pos:start="647:17" pos:end="647:25"><name pos:start="647:17" pos:end="647:17">p</name> <operator pos:start="647:19" pos:end="647:20">+=</operator> <literal type="number" pos:start="647:22" pos:end="647:25">0x1e</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="649:15" pos:end="663:13">else if <condition pos:start="649:23" pos:end="649:51">(<expr pos:start="649:24" pos:end="649:50"><operator pos:start="649:24" pos:end="649:24">(</operator><name pos:start="649:25" pos:end="649:28">page</name> <operator pos:start="649:30" pos:end="649:31">==</operator> <literal type="number" pos:start="649:33" pos:end="649:33">8</literal> <operator pos:start="649:35" pos:end="649:36">||</operator> <name pos:start="649:38" pos:end="649:41">page</name> <operator pos:start="649:43" pos:end="649:44">==</operator> <literal type="number" pos:start="649:46" pos:end="649:49">0x3f</literal><operator pos:start="649:50" pos:end="649:50">)</operator></expr>)</condition> <block pos:start="649:53" pos:end="663:13">{<block_content pos:start="653:17" pos:end="661:24">

                <comment type="block" pos:start="651:17" pos:end="651:36">/* Caching page.  */</comment>

                <expr_stmt pos:start="653:17" pos:end="653:31"><expr pos:start="653:17" pos:end="653:30"><call pos:start="653:17" pos:end="653:30"><name pos:start="653:17" pos:end="653:22">memset</name><argument_list pos:start="653:23" pos:end="653:30">(<argument pos:start="653:24" pos:end="653:24"><expr pos:start="653:24" pos:end="653:24"><name pos:start="653:24" pos:end="653:24">p</name></expr></argument>,<argument pos:start="653:26" pos:end="653:26"><expr pos:start="653:26" pos:end="653:26"><literal type="number" pos:start="653:26" pos:end="653:26">0</literal></expr></argument>,<argument pos:start="653:28" pos:end="653:29"><expr pos:start="653:28" pos:end="653:29"><literal type="number" pos:start="653:28" pos:end="653:29">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="655:17" pos:end="655:25"><expr pos:start="655:17" pos:end="655:24"><name pos:start="655:17" pos:end="655:20"><name pos:start="655:17" pos:end="655:17">p</name><index pos:start="655:18" pos:end="655:20">[<expr pos:start="655:19" pos:end="655:19"><literal type="number" pos:start="655:19" pos:end="655:19">0</literal></expr>]</index></name> <operator pos:start="655:22" pos:end="655:22">=</operator> <literal type="number" pos:start="655:24" pos:end="655:24">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="657:17" pos:end="657:28"><expr pos:start="657:17" pos:end="657:27"><name pos:start="657:17" pos:end="657:20"><name pos:start="657:17" pos:end="657:17">p</name><index pos:start="657:18" pos:end="657:20">[<expr pos:start="657:19" pos:end="657:19"><literal type="number" pos:start="657:19" pos:end="657:19">1</literal></expr>]</index></name> <operator pos:start="657:22" pos:end="657:22">=</operator> <literal type="number" pos:start="657:24" pos:end="657:27">0x12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="659:17" pos:end="659:25"><expr pos:start="659:17" pos:end="659:24"><name pos:start="659:17" pos:end="659:20"><name pos:start="659:17" pos:end="659:17">p</name><index pos:start="659:18" pos:end="659:20">[<expr pos:start="659:19" pos:end="659:19"><literal type="number" pos:start="659:19" pos:end="659:19">2</literal></expr>]</index></name> <operator pos:start="659:22" pos:end="659:22">=</operator> <literal type="number" pos:start="659:24" pos:end="659:24">4</literal></expr>;</expr_stmt> <comment type="block" pos:start="659:27" pos:end="659:35">/* WCE */</comment>

                <expr_stmt pos:start="661:17" pos:end="661:24"><expr pos:start="661:17" pos:end="661:23"><name pos:start="661:17" pos:end="661:17">p</name> <operator pos:start="661:19" pos:end="661:20">+=</operator> <literal type="number" pos:start="661:22" pos:end="661:23">20</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="665:13" pos:end="723:13"><if pos:start="665:13" pos:end="723:13">if <condition pos:start="665:16" pos:end="667:72">(<expr pos:start="665:17" pos:end="667:71"><operator pos:start="665:17" pos:end="665:17">(</operator><name pos:start="665:18" pos:end="665:21">page</name> <operator pos:start="665:23" pos:end="665:24">==</operator> <literal type="number" pos:start="665:26" pos:end="665:29">0x3f</literal> <operator pos:start="665:31" pos:end="665:32">||</operator> <name pos:start="665:34" pos:end="665:37">page</name> <operator pos:start="665:39" pos:end="665:40">==</operator> <literal type="number" pos:start="665:42" pos:end="665:45">0x2a</literal><operator pos:start="665:46" pos:end="665:46">)</operator>

                    <operator pos:start="667:21" pos:end="667:22">&amp;&amp;</operator> <operator pos:start="667:24" pos:end="667:24">(</operator><call pos:start="667:25" pos:end="667:51"><name pos:start="667:25" pos:end="667:42">bdrv_get_type_hint</name><argument_list pos:start="667:43" pos:end="667:51">(<argument pos:start="667:44" pos:end="667:50"><expr pos:start="667:44" pos:end="667:50"><name pos:start="667:44" pos:end="667:50"><name pos:start="667:44" pos:end="667:44">s</name><operator pos:start="667:45" pos:end="667:46">-&gt;</operator><name pos:start="667:47" pos:end="667:50">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="667:53" pos:end="667:54">==</operator> <name pos:start="667:56" pos:end="667:70">BDRV_TYPE_CDROM</name><operator pos:start="667:71" pos:end="667:71">)</operator></expr>)</condition> <block pos:start="667:74" pos:end="723:13">{<block_content pos:start="671:17" pos:end="721:24">

                <comment type="block" pos:start="669:17" pos:end="669:65">/* CD Capabilities and Mechanical Status page. */</comment>

                <expr_stmt pos:start="671:17" pos:end="671:28"><expr pos:start="671:17" pos:end="671:27"><name pos:start="671:17" pos:end="671:20"><name pos:start="671:17" pos:end="671:17">p</name><index pos:start="671:18" pos:end="671:20">[<expr pos:start="671:19" pos:end="671:19"><literal type="number" pos:start="671:19" pos:end="671:19">0</literal></expr>]</index></name> <operator pos:start="671:22" pos:end="671:22">=</operator> <literal type="number" pos:start="671:24" pos:end="671:27">0x2a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="673:17" pos:end="673:28"><expr pos:start="673:17" pos:end="673:27"><name pos:start="673:17" pos:end="673:20"><name pos:start="673:17" pos:end="673:17">p</name><index pos:start="673:18" pos:end="673:20">[<expr pos:start="673:19" pos:end="673:19"><literal type="number" pos:start="673:19" pos:end="673:19">1</literal></expr>]</index></name> <operator pos:start="673:22" pos:end="673:22">=</operator> <literal type="number" pos:start="673:24" pos:end="673:27">0x14</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="675:17" pos:end="675:25"><expr pos:start="675:17" pos:end="675:24"><name pos:start="675:17" pos:end="675:20"><name pos:start="675:17" pos:end="675:17">p</name><index pos:start="675:18" pos:end="675:20">[<expr pos:start="675:19" pos:end="675:19"><literal type="number" pos:start="675:19" pos:end="675:19">2</literal></expr>]</index></name> <operator pos:start="675:22" pos:end="675:22">=</operator> <literal type="number" pos:start="675:24" pos:end="675:24">3</literal></expr>;</expr_stmt> <comment type="line" pos:start="675:27" pos:end="675:46">// CD-R &amp; CD-RW read</comment>

                <expr_stmt pos:start="677:17" pos:end="677:25"><expr pos:start="677:17" pos:end="677:24"><name pos:start="677:17" pos:end="677:20"><name pos:start="677:17" pos:end="677:17">p</name><index pos:start="677:18" pos:end="677:20">[<expr pos:start="677:19" pos:end="677:19"><literal type="number" pos:start="677:19" pos:end="677:19">3</literal></expr>]</index></name> <operator pos:start="677:22" pos:end="677:22">=</operator> <literal type="number" pos:start="677:24" pos:end="677:24">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="677:27" pos:end="677:50">// Writing not supported</comment>

                <expr_stmt pos:start="679:17" pos:end="679:28"><expr pos:start="679:17" pos:end="679:27"><name pos:start="679:17" pos:end="679:20"><name pos:start="679:17" pos:end="679:17">p</name><index pos:start="679:18" pos:end="679:20">[<expr pos:start="679:19" pos:end="679:19"><literal type="number" pos:start="679:19" pos:end="679:19">4</literal></expr>]</index></name> <operator pos:start="679:22" pos:end="679:22">=</operator> <literal type="number" pos:start="679:24" pos:end="679:27">0x7f</literal></expr>;</expr_stmt> <comment type="block" pos:start="679:30" pos:end="681:74">/* Audio, composite, digital out,

                                         mode 2 form 1&amp;2, multi session */</comment>

                <expr_stmt pos:start="683:17" pos:end="683:28"><expr pos:start="683:17" pos:end="683:27"><name pos:start="683:17" pos:end="683:20"><name pos:start="683:17" pos:end="683:17">p</name><index pos:start="683:18" pos:end="683:20">[<expr pos:start="683:19" pos:end="683:19"><literal type="number" pos:start="683:19" pos:end="683:19">5</literal></expr>]</index></name> <operator pos:start="683:22" pos:end="683:22">=</operator> <literal type="number" pos:start="683:24" pos:end="683:27">0xff</literal></expr>;</expr_stmt> <comment type="block" pos:start="683:30" pos:end="687:57">/* CD DA, DA accurate, RW supported,

                                         RW corrected, C2 errors, ISRC,

                                         UPC, Bar code */</comment>

                <expr_stmt pos:start="689:17" pos:end="689:63"><expr pos:start="689:17" pos:end="689:62"><name pos:start="689:17" pos:end="689:20"><name pos:start="689:17" pos:end="689:17">p</name><index pos:start="689:18" pos:end="689:20">[<expr pos:start="689:19" pos:end="689:19"><literal type="number" pos:start="689:19" pos:end="689:19">6</literal></expr>]</index></name> <operator pos:start="689:22" pos:end="689:22">=</operator> <literal type="number" pos:start="689:24" pos:end="689:27">0x2d</literal> <operator pos:start="689:29" pos:end="689:29">|</operator> <operator pos:start="689:31" pos:end="689:31">(</operator><ternary pos:start="689:32" pos:end="689:61"><condition pos:start="689:32" pos:end="689:55"><expr pos:start="689:32" pos:end="689:54"><call pos:start="689:32" pos:end="689:54"><name pos:start="689:32" pos:end="689:45">bdrv_is_locked</name><argument_list pos:start="689:46" pos:end="689:54">(<argument pos:start="689:47" pos:end="689:53"><expr pos:start="689:47" pos:end="689:53"><name pos:start="689:47" pos:end="689:53"><name pos:start="689:47" pos:end="689:47">s</name><operator pos:start="689:48" pos:end="689:49">-&gt;</operator><name pos:start="689:50" pos:end="689:53">bdrv</name></name></expr></argument>)</argument_list></call></expr>?</condition><then pos:start="689:57" pos:end="689:57"> <expr pos:start="689:57" pos:end="689:57"><literal type="number" pos:start="689:57" pos:end="689:57">2</literal></expr> </then><else pos:start="689:59" pos:end="689:61">: <expr pos:start="689:61" pos:end="689:61"><literal type="number" pos:start="689:61" pos:end="689:61">0</literal></expr></else></ternary><operator pos:start="689:62" pos:end="689:62">)</operator></expr>;</expr_stmt>

                <comment type="block" pos:start="691:17" pos:end="691:68">/* Locking supported, jumper present, eject, tray */</comment>

                <expr_stmt pos:start="693:17" pos:end="693:25"><expr pos:start="693:17" pos:end="693:24"><name pos:start="693:17" pos:end="693:20"><name pos:start="693:17" pos:end="693:17">p</name><index pos:start="693:18" pos:end="693:20">[<expr pos:start="693:19" pos:end="693:19"><literal type="number" pos:start="693:19" pos:end="693:19">7</literal></expr>]</index></name> <operator pos:start="693:22" pos:end="693:22">=</operator> <literal type="number" pos:start="693:24" pos:end="693:24">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="693:27" pos:end="695:48">/* no volume &amp; mute control, no

                                      changer */</comment>

                <expr_stmt pos:start="697:17" pos:end="697:39"><expr pos:start="697:17" pos:end="697:38"><name pos:start="697:17" pos:end="697:20"><name pos:start="697:17" pos:end="697:17">p</name><index pos:start="697:18" pos:end="697:20">[<expr pos:start="697:19" pos:end="697:19"><literal type="number" pos:start="697:19" pos:end="697:19">8</literal></expr>]</index></name> <operator pos:start="697:22" pos:end="697:22">=</operator> <operator pos:start="697:24" pos:end="697:24">(</operator><literal type="number" pos:start="697:25" pos:end="697:26">50</literal> <operator pos:start="697:28" pos:end="697:28">*</operator> <literal type="number" pos:start="697:30" pos:end="697:32">176</literal><operator pos:start="697:33" pos:end="697:33">)</operator> <operator pos:start="697:35" pos:end="697:36">&gt;&gt;</operator> <literal type="number" pos:start="697:38" pos:end="697:38">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="697:41" pos:end="697:57">// 50x read speed</comment>

                <expr_stmt pos:start="699:17" pos:end="699:41"><expr pos:start="699:17" pos:end="699:40"><name pos:start="699:17" pos:end="699:20"><name pos:start="699:17" pos:end="699:17">p</name><index pos:start="699:18" pos:end="699:20">[<expr pos:start="699:19" pos:end="699:19"><literal type="number" pos:start="699:19" pos:end="699:19">9</literal></expr>]</index></name> <operator pos:start="699:22" pos:end="699:22">=</operator> <operator pos:start="699:24" pos:end="699:24">(</operator><literal type="number" pos:start="699:25" pos:end="699:26">50</literal> <operator pos:start="699:28" pos:end="699:28">*</operator> <literal type="number" pos:start="699:30" pos:end="699:32">176</literal><operator pos:start="699:33" pos:end="699:33">)</operator> <operator pos:start="699:35" pos:end="699:35">&amp;</operator> <literal type="number" pos:start="699:37" pos:end="699:40">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:31"><expr pos:start="701:17" pos:end="701:30"><name pos:start="701:17" pos:end="701:21"><name pos:start="701:17" pos:end="701:17">p</name><index pos:start="701:18" pos:end="701:21">[<expr pos:start="701:19" pos:end="701:20"><literal type="number" pos:start="701:19" pos:end="701:20">10</literal></expr>]</index></name> <operator pos:start="701:23" pos:end="701:23">=</operator> <literal type="number" pos:start="701:25" pos:end="701:25">0</literal> <operator pos:start="701:27" pos:end="701:28">&gt;&gt;</operator> <literal type="number" pos:start="701:30" pos:end="701:30">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="701:33" pos:end="701:44">// No volume</comment>

                <expr_stmt pos:start="703:17" pos:end="703:33"><expr pos:start="703:17" pos:end="703:32"><name pos:start="703:17" pos:end="703:21"><name pos:start="703:17" pos:end="703:17">p</name><index pos:start="703:18" pos:end="703:21">[<expr pos:start="703:19" pos:end="703:20"><literal type="number" pos:start="703:19" pos:end="703:20">11</literal></expr>]</index></name> <operator pos:start="703:23" pos:end="703:23">=</operator> <literal type="number" pos:start="703:25" pos:end="703:25">0</literal> <operator pos:start="703:27" pos:end="703:27">&amp;</operator> <literal type="number" pos:start="703:29" pos:end="703:32">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="705:17" pos:end="705:34"><expr pos:start="705:17" pos:end="705:33"><name pos:start="705:17" pos:end="705:21"><name pos:start="705:17" pos:end="705:17">p</name><index pos:start="705:18" pos:end="705:21">[<expr pos:start="705:19" pos:end="705:20"><literal type="number" pos:start="705:19" pos:end="705:20">12</literal></expr>]</index></name> <operator pos:start="705:23" pos:end="705:23">=</operator> <literal type="number" pos:start="705:25" pos:end="705:28">2048</literal> <operator pos:start="705:30" pos:end="705:31">&gt;&gt;</operator> <literal type="number" pos:start="705:33" pos:end="705:33">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="705:36" pos:end="705:47">// 2M buffer</comment>

                <expr_stmt pos:start="707:17" pos:end="707:36"><expr pos:start="707:17" pos:end="707:35"><name pos:start="707:17" pos:end="707:21"><name pos:start="707:17" pos:end="707:17">p</name><index pos:start="707:18" pos:end="707:21">[<expr pos:start="707:19" pos:end="707:20"><literal type="number" pos:start="707:19" pos:end="707:20">13</literal></expr>]</index></name> <operator pos:start="707:23" pos:end="707:23">=</operator> <literal type="number" pos:start="707:25" pos:end="707:28">2048</literal> <operator pos:start="707:30" pos:end="707:30">&amp;</operator> <literal type="number" pos:start="707:32" pos:end="707:35">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="709:17" pos:end="709:40"><expr pos:start="709:17" pos:end="709:39"><name pos:start="709:17" pos:end="709:21"><name pos:start="709:17" pos:end="709:17">p</name><index pos:start="709:18" pos:end="709:21">[<expr pos:start="709:19" pos:end="709:20"><literal type="number" pos:start="709:19" pos:end="709:20">14</literal></expr>]</index></name> <operator pos:start="709:23" pos:end="709:23">=</operator> <operator pos:start="709:25" pos:end="709:25">(</operator><literal type="number" pos:start="709:26" pos:end="709:27">16</literal> <operator pos:start="709:29" pos:end="709:29">*</operator> <literal type="number" pos:start="709:31" pos:end="709:33">176</literal><operator pos:start="709:34" pos:end="709:34">)</operator> <operator pos:start="709:36" pos:end="709:37">&gt;&gt;</operator> <literal type="number" pos:start="709:39" pos:end="709:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="709:42" pos:end="709:66">// 16x read speed current</comment>

                <expr_stmt pos:start="711:17" pos:end="711:42"><expr pos:start="711:17" pos:end="711:41"><name pos:start="711:17" pos:end="711:21"><name pos:start="711:17" pos:end="711:17">p</name><index pos:start="711:18" pos:end="711:21">[<expr pos:start="711:19" pos:end="711:20"><literal type="number" pos:start="711:19" pos:end="711:20">15</literal></expr>]</index></name> <operator pos:start="711:23" pos:end="711:23">=</operator> <operator pos:start="711:25" pos:end="711:25">(</operator><literal type="number" pos:start="711:26" pos:end="711:27">16</literal> <operator pos:start="711:29" pos:end="711:29">*</operator> <literal type="number" pos:start="711:31" pos:end="711:33">176</literal><operator pos:start="711:34" pos:end="711:34">)</operator> <operator pos:start="711:36" pos:end="711:36">&amp;</operator> <literal type="number" pos:start="711:38" pos:end="711:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="713:40"><expr pos:start="713:17" pos:end="713:39"><name pos:start="713:17" pos:end="713:21"><name pos:start="713:17" pos:end="713:17">p</name><index pos:start="713:18" pos:end="713:21">[<expr pos:start="713:19" pos:end="713:20"><literal type="number" pos:start="713:19" pos:end="713:20">18</literal></expr>]</index></name> <operator pos:start="713:23" pos:end="713:23">=</operator> <operator pos:start="713:25" pos:end="713:25">(</operator><literal type="number" pos:start="713:26" pos:end="713:27">16</literal> <operator pos:start="713:29" pos:end="713:29">*</operator> <literal type="number" pos:start="713:31" pos:end="713:33">176</literal><operator pos:start="713:34" pos:end="713:34">)</operator> <operator pos:start="713:36" pos:end="713:37">&gt;&gt;</operator> <literal type="number" pos:start="713:39" pos:end="713:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="713:42" pos:end="713:59">// 16x write speed</comment>

                <expr_stmt pos:start="715:17" pos:end="715:42"><expr pos:start="715:17" pos:end="715:41"><name pos:start="715:17" pos:end="715:21"><name pos:start="715:17" pos:end="715:17">p</name><index pos:start="715:18" pos:end="715:21">[<expr pos:start="715:19" pos:end="715:20"><literal type="number" pos:start="715:19" pos:end="715:20">19</literal></expr>]</index></name> <operator pos:start="715:23" pos:end="715:23">=</operator> <operator pos:start="715:25" pos:end="715:25">(</operator><literal type="number" pos:start="715:26" pos:end="715:27">16</literal> <operator pos:start="715:29" pos:end="715:29">*</operator> <literal type="number" pos:start="715:31" pos:end="715:33">176</literal><operator pos:start="715:34" pos:end="715:34">)</operator> <operator pos:start="715:36" pos:end="715:36">&amp;</operator> <literal type="number" pos:start="715:38" pos:end="715:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="717:17" pos:end="717:40"><expr pos:start="717:17" pos:end="717:39"><name pos:start="717:17" pos:end="717:21"><name pos:start="717:17" pos:end="717:17">p</name><index pos:start="717:18" pos:end="717:21">[<expr pos:start="717:19" pos:end="717:20"><literal type="number" pos:start="717:19" pos:end="717:20">20</literal></expr>]</index></name> <operator pos:start="717:23" pos:end="717:23">=</operator> <operator pos:start="717:25" pos:end="717:25">(</operator><literal type="number" pos:start="717:26" pos:end="717:27">16</literal> <operator pos:start="717:29" pos:end="717:29">*</operator> <literal type="number" pos:start="717:31" pos:end="717:33">176</literal><operator pos:start="717:34" pos:end="717:34">)</operator> <operator pos:start="717:36" pos:end="717:37">&gt;&gt;</operator> <literal type="number" pos:start="717:39" pos:end="717:39">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="717:42" pos:end="717:67">// 16x write speed current</comment>

                <expr_stmt pos:start="719:17" pos:end="719:42"><expr pos:start="719:17" pos:end="719:41"><name pos:start="719:17" pos:end="719:21"><name pos:start="719:17" pos:end="719:17">p</name><index pos:start="719:18" pos:end="719:21">[<expr pos:start="719:19" pos:end="719:20"><literal type="number" pos:start="719:19" pos:end="719:20">21</literal></expr>]</index></name> <operator pos:start="719:23" pos:end="719:23">=</operator> <operator pos:start="719:25" pos:end="719:25">(</operator><literal type="number" pos:start="719:26" pos:end="719:27">16</literal> <operator pos:start="719:29" pos:end="719:29">*</operator> <literal type="number" pos:start="719:31" pos:end="719:33">176</literal><operator pos:start="719:34" pos:end="719:34">)</operator> <operator pos:start="719:36" pos:end="719:36">&amp;</operator> <literal type="number" pos:start="719:38" pos:end="719:41">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="721:17" pos:end="721:24"><expr pos:start="721:17" pos:end="721:23"><name pos:start="721:17" pos:end="721:17">p</name> <operator pos:start="721:19" pos:end="721:20">+=</operator> <literal type="number" pos:start="721:22" pos:end="721:23">22</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="725:13" pos:end="725:36"><expr pos:start="725:13" pos:end="725:35"><name pos:start="725:13" pos:end="725:22"><name pos:start="725:13" pos:end="725:13">r</name><operator pos:start="725:14" pos:end="725:15">-&gt;</operator><name pos:start="725:16" pos:end="725:22">buf_len</name></name> <operator pos:start="725:24" pos:end="725:24">=</operator> <name pos:start="725:26" pos:end="725:26">p</name> <operator pos:start="725:28" pos:end="725:28">-</operator> <name pos:start="725:30" pos:end="725:35">outbuf</name></expr>;</expr_stmt>

            <expr_stmt pos:start="727:13" pos:end="727:39"><expr pos:start="727:13" pos:end="727:38"><name pos:start="727:13" pos:end="727:21"><name pos:start="727:13" pos:end="727:18">outbuf</name><index pos:start="727:19" pos:end="727:21">[<expr pos:start="727:20" pos:end="727:20"><literal type="number" pos:start="727:20" pos:end="727:20">0</literal></expr>]</index></name> <operator pos:start="727:23" pos:end="727:23">=</operator> <name pos:start="727:25" pos:end="727:34"><name pos:start="727:25" pos:end="727:25">r</name><operator pos:start="727:26" pos:end="727:27">-&gt;</operator><name pos:start="727:28" pos:end="727:34">buf_len</name></name> <operator pos:start="727:36" pos:end="727:36">-</operator> <literal type="number" pos:start="727:38" pos:end="727:38">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="729:13" pos:end="731:33"><if pos:start="729:13" pos:end="731:33">if <condition pos:start="729:16" pos:end="729:33">(<expr pos:start="729:17" pos:end="729:32"><name pos:start="729:17" pos:end="729:26"><name pos:start="729:17" pos:end="729:17">r</name><operator pos:start="729:18" pos:end="729:19">-&gt;</operator><name pos:start="729:20" pos:end="729:26">buf_len</name></name> <operator pos:start="729:28" pos:end="729:28">&gt;</operator> <name pos:start="729:30" pos:end="729:32">len</name></expr>)</condition><block type="pseudo" pos:start="731:17" pos:end="731:33"><block_content pos:start="731:17" pos:end="731:33">

                <expr_stmt pos:start="731:17" pos:end="731:33"><expr pos:start="731:17" pos:end="731:32"><name pos:start="731:17" pos:end="731:26"><name pos:start="731:17" pos:end="731:17">r</name><operator pos:start="731:18" pos:end="731:19">-&gt;</operator><name pos:start="731:20" pos:end="731:26">buf_len</name></name> <operator pos:start="731:28" pos:end="731:28">=</operator> <name pos:start="731:30" pos:end="731:32">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="735:9" pos:end="735:14">break;</break>

    <case pos:start="737:5" pos:end="737:14">case <expr pos:start="737:10" pos:end="737:13"><literal type="number" pos:start="737:10" pos:end="737:13">0x1b</literal></expr>:</case>

        <expr_stmt pos:start="739:9" pos:end="739:37"><expr pos:start="739:9" pos:end="739:36"><call pos:start="739:9" pos:end="739:36"><name pos:start="739:9" pos:end="739:15">DPRINTF</name><argument_list pos:start="739:16" pos:end="739:36">(<argument pos:start="739:17" pos:end="739:35"><expr pos:start="739:17" pos:end="739:35"><literal type="string" pos:start="739:17" pos:end="739:35">"Start Stop Unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="741:9" pos:end="741:14">break;</break>

    <case pos:start="743:5" pos:end="743:14">case <expr pos:start="743:10" pos:end="743:13"><literal type="number" pos:start="743:10" pos:end="743:13">0x1e</literal></expr>:</case>

        <expr_stmt pos:start="745:9" pos:end="745:77"><expr pos:start="745:9" pos:end="745:76"><call pos:start="745:9" pos:end="745:76"><name pos:start="745:9" pos:end="745:15">DPRINTF</name><argument_list pos:start="745:16" pos:end="745:76">(<argument pos:start="745:17" pos:end="745:63"><expr pos:start="745:17" pos:end="745:63"><literal type="string" pos:start="745:17" pos:end="745:63">"Prevent Allow Medium Removal (prevent = %d)\n"</literal></expr></argument>, <argument pos:start="745:66" pos:end="745:75"><expr pos:start="745:66" pos:end="745:75"><name pos:start="745:66" pos:end="745:71"><name pos:start="745:66" pos:end="745:68">buf</name><index pos:start="745:69" pos:end="745:71">[<expr pos:start="745:70" pos:end="745:70"><literal type="number" pos:start="745:70" pos:end="745:70">4</literal></expr>]</index></name> <operator pos:start="745:73" pos:end="745:73">&amp;</operator> <literal type="number" pos:start="745:75" pos:end="745:75">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="747:9" pos:end="747:45"><expr pos:start="747:9" pos:end="747:44"><call pos:start="747:9" pos:end="747:44"><name pos:start="747:9" pos:end="747:23">bdrv_set_locked</name><argument_list pos:start="747:24" pos:end="747:44">(<argument pos:start="747:25" pos:end="747:31"><expr pos:start="747:25" pos:end="747:31"><name pos:start="747:25" pos:end="747:31"><name pos:start="747:25" pos:end="747:25">s</name><operator pos:start="747:26" pos:end="747:27">-&gt;</operator><name pos:start="747:28" pos:end="747:31">bdrv</name></name></expr></argument>, <argument pos:start="747:34" pos:end="747:43"><expr pos:start="747:34" pos:end="747:43"><name pos:start="747:34" pos:end="747:39"><name pos:start="747:34" pos:end="747:36">buf</name><index pos:start="747:37" pos:end="747:39">[<expr pos:start="747:38" pos:end="747:38"><literal type="number" pos:start="747:38" pos:end="747:38">4</literal></expr>]</index></name> <operator pos:start="747:41" pos:end="747:41">&amp;</operator> <literal type="number" pos:start="747:43" pos:end="747:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="749:9" pos:end="749:14">break;</break>

    <case pos:start="751:5" pos:end="751:14">case <expr pos:start="751:10" pos:end="751:13"><literal type="number" pos:start="751:10" pos:end="751:13">0x25</literal></expr>:</case>

	<expr_stmt pos:start="753:9" pos:end="753:35"><expr pos:start="753:9" pos:end="753:34"><call pos:start="753:9" pos:end="753:34"><name pos:start="753:9" pos:end="753:15">DPRINTF</name><argument_list pos:start="753:16" pos:end="753:34">(<argument pos:start="753:17" pos:end="753:33"><expr pos:start="753:17" pos:end="753:33"><literal type="string" pos:start="753:17" pos:end="753:33">"Read Capacity\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="755:9" pos:end="755:61">/* The normal LEN field for this command is zero.  */</comment>

	<expr_stmt pos:start="757:9" pos:end="757:29"><expr pos:start="757:9" pos:end="757:28"><call pos:start="757:9" pos:end="757:28"><name pos:start="757:9" pos:end="757:14">memset</name><argument_list pos:start="757:15" pos:end="757:28">(<argument pos:start="757:16" pos:end="757:21"><expr pos:start="757:16" pos:end="757:21"><name pos:start="757:16" pos:end="757:21">outbuf</name></expr></argument>, <argument pos:start="757:24" pos:end="757:24"><expr pos:start="757:24" pos:end="757:24"><literal type="number" pos:start="757:24" pos:end="757:24">0</literal></expr></argument>, <argument pos:start="757:27" pos:end="757:27"><expr pos:start="757:27" pos:end="757:27"><literal type="number" pos:start="757:27" pos:end="757:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="759:9" pos:end="759:48"><expr pos:start="759:9" pos:end="759:47"><call pos:start="759:9" pos:end="759:47"><name pos:start="759:9" pos:end="759:25">bdrv_get_geometry</name><argument_list pos:start="759:26" pos:end="759:47">(<argument pos:start="759:27" pos:end="759:33"><expr pos:start="759:27" pos:end="759:33"><name pos:start="759:27" pos:end="759:33"><name pos:start="759:27" pos:end="759:27">s</name><operator pos:start="759:28" pos:end="759:29">-&gt;</operator><name pos:start="759:30" pos:end="759:33">bdrv</name></name></expr></argument>, <argument pos:start="759:36" pos:end="759:46"><expr pos:start="759:36" pos:end="759:46"><operator pos:start="759:36" pos:end="759:36">&amp;</operator><name pos:start="759:37" pos:end="759:46">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="761:9" pos:end="761:64">/* Returned value is the address of the last sector.  */</comment>

        <if_stmt pos:start="763:9" pos:end="791:9"><if pos:start="763:9" pos:end="785:9">if <condition pos:start="763:12" pos:end="763:23">(<expr pos:start="763:13" pos:end="763:22"><name pos:start="763:13" pos:end="763:22">nb_sectors</name></expr>)</condition> <block pos:start="763:25" pos:end="785:9">{<block_content pos:start="765:13" pos:end="783:27">

            <expr_stmt pos:start="765:13" pos:end="765:25"><expr pos:start="765:13" pos:end="765:24"><name pos:start="765:13" pos:end="765:22">nb_sectors</name><operator pos:start="765:23" pos:end="765:24">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="767:13" pos:end="767:50"><expr pos:start="767:13" pos:end="767:49"><name pos:start="767:13" pos:end="767:21"><name pos:start="767:13" pos:end="767:18">outbuf</name><index pos:start="767:19" pos:end="767:21">[<expr pos:start="767:20" pos:end="767:20"><literal type="number" pos:start="767:20" pos:end="767:20">0</literal></expr>]</index></name> <operator pos:start="767:23" pos:end="767:23">=</operator> <operator pos:start="767:25" pos:end="767:25">(</operator><name pos:start="767:26" pos:end="767:35">nb_sectors</name> <operator pos:start="767:37" pos:end="767:38">&gt;&gt;</operator> <literal type="number" pos:start="767:40" pos:end="767:41">24</literal><operator pos:start="767:42" pos:end="767:42">)</operator> <operator pos:start="767:44" pos:end="767:44">&amp;</operator> <literal type="number" pos:start="767:46" pos:end="767:49">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="769:13" pos:end="769:50"><expr pos:start="769:13" pos:end="769:49"><name pos:start="769:13" pos:end="769:21"><name pos:start="769:13" pos:end="769:18">outbuf</name><index pos:start="769:19" pos:end="769:21">[<expr pos:start="769:20" pos:end="769:20"><literal type="number" pos:start="769:20" pos:end="769:20">1</literal></expr>]</index></name> <operator pos:start="769:23" pos:end="769:23">=</operator> <operator pos:start="769:25" pos:end="769:25">(</operator><name pos:start="769:26" pos:end="769:35">nb_sectors</name> <operator pos:start="769:37" pos:end="769:38">&gt;&gt;</operator> <literal type="number" pos:start="769:40" pos:end="769:41">16</literal><operator pos:start="769:42" pos:end="769:42">)</operator> <operator pos:start="769:44" pos:end="769:44">&amp;</operator> <literal type="number" pos:start="769:46" pos:end="769:49">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="771:13" pos:end="771:49"><expr pos:start="771:13" pos:end="771:48"><name pos:start="771:13" pos:end="771:21"><name pos:start="771:13" pos:end="771:18">outbuf</name><index pos:start="771:19" pos:end="771:21">[<expr pos:start="771:20" pos:end="771:20"><literal type="number" pos:start="771:20" pos:end="771:20">2</literal></expr>]</index></name> <operator pos:start="771:23" pos:end="771:23">=</operator> <operator pos:start="771:25" pos:end="771:25">(</operator><name pos:start="771:26" pos:end="771:35">nb_sectors</name> <operator pos:start="771:37" pos:end="771:38">&gt;&gt;</operator> <literal type="number" pos:start="771:40" pos:end="771:40">8</literal><operator pos:start="771:41" pos:end="771:41">)</operator> <operator pos:start="771:43" pos:end="771:43">&amp;</operator> <literal type="number" pos:start="771:45" pos:end="771:48">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="773:13" pos:end="773:42"><expr pos:start="773:13" pos:end="773:41"><name pos:start="773:13" pos:end="773:21"><name pos:start="773:13" pos:end="773:18">outbuf</name><index pos:start="773:19" pos:end="773:21">[<expr pos:start="773:20" pos:end="773:20"><literal type="number" pos:start="773:20" pos:end="773:20">3</literal></expr>]</index></name> <operator pos:start="773:23" pos:end="773:23">=</operator> <name pos:start="773:25" pos:end="773:34">nb_sectors</name> <operator pos:start="773:36" pos:end="773:36">&amp;</operator> <literal type="number" pos:start="773:38" pos:end="773:41">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="775:13" pos:end="775:26"><expr pos:start="775:13" pos:end="775:25"><name pos:start="775:13" pos:end="775:21"><name pos:start="775:13" pos:end="775:18">outbuf</name><index pos:start="775:19" pos:end="775:21">[<expr pos:start="775:20" pos:end="775:20"><literal type="number" pos:start="775:20" pos:end="775:20">4</literal></expr>]</index></name> <operator pos:start="775:23" pos:end="775:23">=</operator> <literal type="number" pos:start="775:25" pos:end="775:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="777:13" pos:end="777:26"><expr pos:start="777:13" pos:end="777:25"><name pos:start="777:13" pos:end="777:21"><name pos:start="777:13" pos:end="777:18">outbuf</name><index pos:start="777:19" pos:end="777:21">[<expr pos:start="777:20" pos:end="777:20"><literal type="number" pos:start="777:20" pos:end="777:20">5</literal></expr>]</index></name> <operator pos:start="777:23" pos:end="777:23">=</operator> <literal type="number" pos:start="777:25" pos:end="777:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="779:13" pos:end="779:44"><expr pos:start="779:13" pos:end="779:43"><name pos:start="779:13" pos:end="779:21"><name pos:start="779:13" pos:end="779:18">outbuf</name><index pos:start="779:19" pos:end="779:21">[<expr pos:start="779:20" pos:end="779:20"><literal type="number" pos:start="779:20" pos:end="779:20">6</literal></expr>]</index></name> <operator pos:start="779:23" pos:end="779:23">=</operator> <name pos:start="779:25" pos:end="779:39"><name pos:start="779:25" pos:end="779:25">s</name><operator pos:start="779:26" pos:end="779:27">-&gt;</operator><name pos:start="779:28" pos:end="779:39">cluster_size</name></name> <operator pos:start="779:41" pos:end="779:41">*</operator> <literal type="number" pos:start="779:43" pos:end="779:43">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="781:13" pos:end="781:26"><expr pos:start="781:13" pos:end="781:25"><name pos:start="781:13" pos:end="781:21"><name pos:start="781:13" pos:end="781:18">outbuf</name><index pos:start="781:19" pos:end="781:21">[<expr pos:start="781:20" pos:end="781:20"><literal type="number" pos:start="781:20" pos:end="781:20">7</literal></expr>]</index></name> <operator pos:start="781:23" pos:end="781:23">=</operator> <literal type="number" pos:start="781:25" pos:end="781:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="783:13" pos:end="783:27"><expr pos:start="783:13" pos:end="783:26"><name pos:start="783:13" pos:end="783:22"><name pos:start="783:13" pos:end="783:13">r</name><operator pos:start="783:14" pos:end="783:15">-&gt;</operator><name pos:start="783:16" pos:end="783:22">buf_len</name></name> <operator pos:start="783:24" pos:end="783:24">=</operator> <literal type="number" pos:start="783:26" pos:end="783:26">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="785:11" pos:end="791:9">else <block pos:start="785:16" pos:end="791:9">{<block_content pos:start="787:13" pos:end="789:21">

            <expr_stmt pos:start="787:13" pos:end="787:78"><expr pos:start="787:13" pos:end="787:77"><call pos:start="787:13" pos:end="787:77"><name pos:start="787:13" pos:end="787:33">scsi_command_complete</name><argument_list pos:start="787:34" pos:end="787:77">(<argument pos:start="787:35" pos:end="787:35"><expr pos:start="787:35" pos:end="787:35"><name pos:start="787:35" pos:end="787:35">r</name></expr></argument>, <argument pos:start="787:38" pos:end="787:59"><expr pos:start="787:38" pos:end="787:59"><name pos:start="787:38" pos:end="787:59">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="787:62" pos:end="787:76"><expr pos:start="787:62" pos:end="787:76"><name pos:start="787:62" pos:end="787:76">SENSE_NOT_READY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="789:13" pos:end="789:21">return <expr pos:start="789:20" pos:end="789:20"><literal type="number" pos:start="789:20" pos:end="789:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

	<break pos:start="793:9" pos:end="793:14">break;</break>

    <case pos:start="795:5" pos:end="795:14">case <expr pos:start="795:10" pos:end="795:13"><literal type="number" pos:start="795:10" pos:end="795:13">0x08</literal></expr>:</case>

    <case pos:start="797:5" pos:end="797:14">case <expr pos:start="797:10" pos:end="797:13"><literal type="number" pos:start="797:10" pos:end="797:13">0x28</literal></expr>:</case>

        <expr_stmt pos:start="799:9" pos:end="799:58"><expr pos:start="799:9" pos:end="799:57"><call pos:start="799:9" pos:end="799:57"><name pos:start="799:9" pos:end="799:15">DPRINTF</name><argument_list pos:start="799:16" pos:end="799:57">(<argument pos:start="799:17" pos:end="799:46"><expr pos:start="799:17" pos:end="799:46"><literal type="string" pos:start="799:17" pos:end="799:46">"Read (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="799:49" pos:end="799:51"><expr pos:start="799:49" pos:end="799:51"><name pos:start="799:49" pos:end="799:51">lba</name></expr></argument>, <argument pos:start="799:54" pos:end="799:56"><expr pos:start="799:54" pos:end="799:56"><name pos:start="799:54" pos:end="799:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="801:9" pos:end="801:42"><expr pos:start="801:9" pos:end="801:41"><name pos:start="801:9" pos:end="801:17"><name pos:start="801:9" pos:end="801:9">r</name><operator pos:start="801:10" pos:end="801:11">-&gt;</operator><name pos:start="801:12" pos:end="801:17">sector</name></name> <operator pos:start="801:19" pos:end="801:19">=</operator> <name pos:start="801:21" pos:end="801:23">lba</name> <operator pos:start="801:25" pos:end="801:25">*</operator> <name pos:start="801:27" pos:end="801:41"><name pos:start="801:27" pos:end="801:27">s</name><operator pos:start="801:28" pos:end="801:29">-&gt;</operator><name pos:start="801:30" pos:end="801:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="803:9" pos:end="803:48"><expr pos:start="803:9" pos:end="803:47"><name pos:start="803:9" pos:end="803:23"><name pos:start="803:9" pos:end="803:9">r</name><operator pos:start="803:10" pos:end="803:11">-&gt;</operator><name pos:start="803:12" pos:end="803:23">sector_count</name></name> <operator pos:start="803:25" pos:end="803:25">=</operator> <name pos:start="803:27" pos:end="803:29">len</name> <operator pos:start="803:31" pos:end="803:31">*</operator> <name pos:start="803:33" pos:end="803:47"><name pos:start="803:33" pos:end="803:33">s</name><operator pos:start="803:34" pos:end="803:35">-&gt;</operator><name pos:start="803:36" pos:end="803:47">cluster_size</name></name></expr>;</expr_stmt>

        <break pos:start="805:9" pos:end="805:14">break;</break>

    <case pos:start="807:5" pos:end="807:14">case <expr pos:start="807:10" pos:end="807:13"><literal type="number" pos:start="807:10" pos:end="807:13">0x0a</literal></expr>:</case>

    <case pos:start="809:5" pos:end="809:14">case <expr pos:start="809:10" pos:end="809:13"><literal type="number" pos:start="809:10" pos:end="809:13">0x2a</literal></expr>:</case>

        <expr_stmt pos:start="811:9" pos:end="811:59"><expr pos:start="811:9" pos:end="811:58"><call pos:start="811:9" pos:end="811:58"><name pos:start="811:9" pos:end="811:15">DPRINTF</name><argument_list pos:start="811:16" pos:end="811:58">(<argument pos:start="811:17" pos:end="811:47"><expr pos:start="811:17" pos:end="811:47"><literal type="string" pos:start="811:17" pos:end="811:47">"Write (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="811:50" pos:end="811:52"><expr pos:start="811:50" pos:end="811:52"><name pos:start="811:50" pos:end="811:52">lba</name></expr></argument>, <argument pos:start="811:55" pos:end="811:57"><expr pos:start="811:55" pos:end="811:57"><name pos:start="811:55" pos:end="811:57">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="813:9" pos:end="813:42"><expr pos:start="813:9" pos:end="813:41"><name pos:start="813:9" pos:end="813:17"><name pos:start="813:9" pos:end="813:9">r</name><operator pos:start="813:10" pos:end="813:11">-&gt;</operator><name pos:start="813:12" pos:end="813:17">sector</name></name> <operator pos:start="813:19" pos:end="813:19">=</operator> <name pos:start="813:21" pos:end="813:23">lba</name> <operator pos:start="813:25" pos:end="813:25">*</operator> <name pos:start="813:27" pos:end="813:41"><name pos:start="813:27" pos:end="813:27">s</name><operator pos:start="813:28" pos:end="813:29">-&gt;</operator><name pos:start="813:30" pos:end="813:41">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="815:9" pos:end="815:48"><expr pos:start="815:9" pos:end="815:47"><name pos:start="815:9" pos:end="815:23"><name pos:start="815:9" pos:end="815:9">r</name><operator pos:start="815:10" pos:end="815:11">-&gt;</operator><name pos:start="815:12" pos:end="815:23">sector_count</name></name> <operator pos:start="815:25" pos:end="815:25">=</operator> <name pos:start="815:27" pos:end="815:29">len</name> <operator pos:start="815:31" pos:end="815:31">*</operator> <name pos:start="815:33" pos:end="815:47"><name pos:start="815:33" pos:end="815:33">s</name><operator pos:start="815:34" pos:end="815:35">-&gt;</operator><name pos:start="815:36" pos:end="815:47">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="817:9" pos:end="817:21"><expr pos:start="817:9" pos:end="817:20"><name pos:start="817:9" pos:end="817:16">is_write</name> <operator pos:start="817:18" pos:end="817:18">=</operator> <literal type="number" pos:start="817:20" pos:end="817:20">1</literal></expr>;</expr_stmt>

        <break pos:start="819:9" pos:end="819:14">break;</break>

    <case pos:start="821:5" pos:end="821:14">case <expr pos:start="821:10" pos:end="821:13"><literal type="number" pos:start="821:10" pos:end="821:13">0x35</literal></expr>:</case>

        <expr_stmt pos:start="823:9" pos:end="823:71"><expr pos:start="823:9" pos:end="823:70"><call pos:start="823:9" pos:end="823:70"><name pos:start="823:9" pos:end="823:15">DPRINTF</name><argument_list pos:start="823:16" pos:end="823:70">(<argument pos:start="823:17" pos:end="823:59"><expr pos:start="823:17" pos:end="823:59"><literal type="string" pos:start="823:17" pos:end="823:59">"Synchronise cache (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="823:62" pos:end="823:64"><expr pos:start="823:62" pos:end="823:64"><name pos:start="823:62" pos:end="823:64">lba</name></expr></argument>, <argument pos:start="823:67" pos:end="823:69"><expr pos:start="823:67" pos:end="823:69"><name pos:start="823:67" pos:end="823:69">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="825:9" pos:end="825:28"><expr pos:start="825:9" pos:end="825:27"><call pos:start="825:9" pos:end="825:27"><name pos:start="825:9" pos:end="825:18">bdrv_flush</name><argument_list pos:start="825:19" pos:end="825:27">(<argument pos:start="825:20" pos:end="825:26"><expr pos:start="825:20" pos:end="825:26"><name pos:start="825:20" pos:end="825:26"><name pos:start="825:20" pos:end="825:20">s</name><operator pos:start="825:21" pos:end="825:22">-&gt;</operator><name pos:start="825:23" pos:end="825:26">bdrv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="827:9" pos:end="827:14">break;</break>

    <case pos:start="829:5" pos:end="829:14">case <expr pos:start="829:10" pos:end="829:13"><literal type="number" pos:start="829:10" pos:end="829:13">0x43</literal></expr>:</case>

        <block pos:start="831:9" pos:end="901:9">{<block_content pos:start="833:13" pos:end="899:22">

            <decl_stmt pos:start="833:13" pos:end="833:49"><decl pos:start="833:13" pos:end="833:27"><type pos:start="833:13" pos:end="833:15"><name pos:start="833:13" pos:end="833:15">int</name></type> <name pos:start="833:17" pos:end="833:27">start_track</name></decl>, <decl pos:start="833:30" pos:end="833:35"><type ref="prev" pos:start="833:13" pos:end="833:15"/><name pos:start="833:30" pos:end="833:35">format</name></decl>, <decl pos:start="833:38" pos:end="833:40"><type ref="prev" pos:start="833:13" pos:end="833:15"/><name pos:start="833:38" pos:end="833:40">msf</name></decl>, <decl pos:start="833:43" pos:end="833:48"><type ref="prev" pos:start="833:13" pos:end="833:15"/><name pos:start="833:43" pos:end="833:48">toclen</name></decl>;</decl_stmt>



            <expr_stmt pos:start="837:13" pos:end="837:29"><expr pos:start="837:13" pos:end="837:28"><name pos:start="837:13" pos:end="837:15">msf</name> <operator pos:start="837:17" pos:end="837:17">=</operator> <name pos:start="837:19" pos:end="837:24"><name pos:start="837:19" pos:end="837:21">buf</name><index pos:start="837:22" pos:end="837:24">[<expr pos:start="837:23" pos:end="837:23"><literal type="number" pos:start="837:23" pos:end="837:23">1</literal></expr>]</index></name> <operator pos:start="837:26" pos:end="837:26">&amp;</operator> <literal type="number" pos:start="837:28" pos:end="837:28">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="839:13" pos:end="839:34"><expr pos:start="839:13" pos:end="839:33"><name pos:start="839:13" pos:end="839:18">format</name> <operator pos:start="839:20" pos:end="839:20">=</operator> <name pos:start="839:22" pos:end="839:27"><name pos:start="839:22" pos:end="839:24">buf</name><index pos:start="839:25" pos:end="839:27">[<expr pos:start="839:26" pos:end="839:26"><literal type="number" pos:start="839:26" pos:end="839:26">2</literal></expr>]</index></name> <operator pos:start="839:29" pos:end="839:29">&amp;</operator> <literal type="number" pos:start="839:31" pos:end="839:33">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="841:13" pos:end="841:33"><expr pos:start="841:13" pos:end="841:32"><name pos:start="841:13" pos:end="841:23">start_track</name> <operator pos:start="841:25" pos:end="841:25">=</operator> <name pos:start="841:27" pos:end="841:32"><name pos:start="841:27" pos:end="841:29">buf</name><index pos:start="841:30" pos:end="841:32">[<expr pos:start="841:31" pos:end="841:31"><literal type="number" pos:start="841:31" pos:end="841:31">6</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="843:13" pos:end="843:52"><expr pos:start="843:13" pos:end="843:51"><call pos:start="843:13" pos:end="843:51"><name pos:start="843:13" pos:end="843:29">bdrv_get_geometry</name><argument_list pos:start="843:30" pos:end="843:51">(<argument pos:start="843:31" pos:end="843:37"><expr pos:start="843:31" pos:end="843:37"><name pos:start="843:31" pos:end="843:37"><name pos:start="843:31" pos:end="843:31">s</name><operator pos:start="843:32" pos:end="843:33">-&gt;</operator><name pos:start="843:34" pos:end="843:37">bdrv</name></name></expr></argument>, <argument pos:start="843:40" pos:end="843:50"><expr pos:start="843:40" pos:end="843:50"><operator pos:start="843:40" pos:end="843:40">&amp;</operator><name pos:start="843:41" pos:end="843:50">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:93"><expr pos:start="845:13" pos:end="845:92"><call pos:start="845:13" pos:end="845:92"><name pos:start="845:13" pos:end="845:19">DPRINTF</name><argument_list pos:start="845:20" pos:end="845:92">(<argument pos:start="845:21" pos:end="845:60"><expr pos:start="845:21" pos:end="845:60"><literal type="string" pos:start="845:21" pos:end="845:60">"Read TOC (track %d format %d msf %d)\n"</literal></expr></argument>, <argument pos:start="845:63" pos:end="845:73"><expr pos:start="845:63" pos:end="845:73"><name pos:start="845:63" pos:end="845:73">start_track</name></expr></argument>, <argument pos:start="845:76" pos:end="845:81"><expr pos:start="845:76" pos:end="845:81"><name pos:start="845:76" pos:end="845:81">format</name></expr></argument>, <argument pos:start="845:84" pos:end="845:91"><expr pos:start="845:84" pos:end="845:91"><name pos:start="845:84" pos:end="845:86">msf</name> <operator pos:start="845:88" pos:end="845:89">&gt;&gt;</operator> <literal type="number" pos:start="845:91" pos:end="845:91">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="847:13" pos:end="881:13">switch<condition pos:start="847:19" pos:end="847:26">(<expr pos:start="847:20" pos:end="847:25"><name pos:start="847:20" pos:end="847:25">format</name></expr>)</condition> <block pos:start="847:28" pos:end="881:13">{<block_content pos:start="849:13" pos:end="879:31">

            <case pos:start="849:13" pos:end="849:19">case <expr pos:start="849:18" pos:end="849:18"><literal type="number" pos:start="849:18" pos:end="849:18">0</literal></expr>:</case>

                <expr_stmt pos:start="851:17" pos:end="851:78"><expr pos:start="851:17" pos:end="851:77"><name pos:start="851:17" pos:end="851:22">toclen</name> <operator pos:start="851:24" pos:end="851:24">=</operator> <call pos:start="851:26" pos:end="851:77"><name pos:start="851:26" pos:end="851:39">cdrom_read_toc</name><argument_list pos:start="851:40" pos:end="851:77">(<argument pos:start="851:41" pos:end="851:50"><expr pos:start="851:41" pos:end="851:50"><name pos:start="851:41" pos:end="851:50">nb_sectors</name></expr></argument>, <argument pos:start="851:53" pos:end="851:58"><expr pos:start="851:53" pos:end="851:58"><name pos:start="851:53" pos:end="851:58">outbuf</name></expr></argument>, <argument pos:start="851:61" pos:end="851:63"><expr pos:start="851:61" pos:end="851:63"><name pos:start="851:61" pos:end="851:63">msf</name></expr></argument>, <argument pos:start="851:66" pos:end="851:76"><expr pos:start="851:66" pos:end="851:76"><name pos:start="851:66" pos:end="851:76">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="853:17" pos:end="853:22">break;</break>

            <case pos:start="855:13" pos:end="855:19">case <expr pos:start="855:18" pos:end="855:18"><literal type="number" pos:start="855:18" pos:end="855:18">1</literal></expr>:</case>

                <comment type="block" pos:start="857:17" pos:end="857:67">/* multi session : only a single session defined */</comment>

                <expr_stmt pos:start="859:17" pos:end="859:28"><expr pos:start="859:17" pos:end="859:27"><name pos:start="859:17" pos:end="859:22">toclen</name> <operator pos:start="859:24" pos:end="859:24">=</operator> <literal type="number" pos:start="859:26" pos:end="859:27">12</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="861:17" pos:end="861:38"><expr pos:start="861:17" pos:end="861:37"><call pos:start="861:17" pos:end="861:37"><name pos:start="861:17" pos:end="861:22">memset</name><argument_list pos:start="861:23" pos:end="861:37">(<argument pos:start="861:24" pos:end="861:29"><expr pos:start="861:24" pos:end="861:29"><name pos:start="861:24" pos:end="861:29">outbuf</name></expr></argument>, <argument pos:start="861:32" pos:end="861:32"><expr pos:start="861:32" pos:end="861:32"><literal type="number" pos:start="861:32" pos:end="861:32">0</literal></expr></argument>, <argument pos:start="861:35" pos:end="861:36"><expr pos:start="861:35" pos:end="861:36"><literal type="number" pos:start="861:35" pos:end="861:36">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="863:17" pos:end="863:33"><expr pos:start="863:17" pos:end="863:32"><name pos:start="863:17" pos:end="863:25"><name pos:start="863:17" pos:end="863:22">outbuf</name><index pos:start="863:23" pos:end="863:25">[<expr pos:start="863:24" pos:end="863:24"><literal type="number" pos:start="863:24" pos:end="863:24">1</literal></expr>]</index></name> <operator pos:start="863:27" pos:end="863:27">=</operator> <literal type="number" pos:start="863:29" pos:end="863:32">0x0a</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="865:17" pos:end="865:33"><expr pos:start="865:17" pos:end="865:32"><name pos:start="865:17" pos:end="865:25"><name pos:start="865:17" pos:end="865:22">outbuf</name><index pos:start="865:23" pos:end="865:25">[<expr pos:start="865:24" pos:end="865:24"><literal type="number" pos:start="865:24" pos:end="865:24">2</literal></expr>]</index></name> <operator pos:start="865:27" pos:end="865:27">=</operator> <literal type="number" pos:start="865:29" pos:end="865:32">0x01</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="867:17" pos:end="867:33"><expr pos:start="867:17" pos:end="867:32"><name pos:start="867:17" pos:end="867:25"><name pos:start="867:17" pos:end="867:22">outbuf</name><index pos:start="867:23" pos:end="867:25">[<expr pos:start="867:24" pos:end="867:24"><literal type="number" pos:start="867:24" pos:end="867:24">3</literal></expr>]</index></name> <operator pos:start="867:27" pos:end="867:27">=</operator> <literal type="number" pos:start="867:29" pos:end="867:32">0x01</literal></expr>;</expr_stmt>

                <break pos:start="869:17" pos:end="869:22">break;</break>

            <case pos:start="871:13" pos:end="871:19">case <expr pos:start="871:18" pos:end="871:18"><literal type="number" pos:start="871:18" pos:end="871:18">2</literal></expr>:</case>

                <expr_stmt pos:start="873:17" pos:end="873:82"><expr pos:start="873:17" pos:end="873:81"><name pos:start="873:17" pos:end="873:22">toclen</name> <operator pos:start="873:24" pos:end="873:24">=</operator> <call pos:start="873:26" pos:end="873:81"><name pos:start="873:26" pos:end="873:43">cdrom_read_toc_raw</name><argument_list pos:start="873:44" pos:end="873:81">(<argument pos:start="873:45" pos:end="873:54"><expr pos:start="873:45" pos:end="873:54"><name pos:start="873:45" pos:end="873:54">nb_sectors</name></expr></argument>, <argument pos:start="873:57" pos:end="873:62"><expr pos:start="873:57" pos:end="873:62"><name pos:start="873:57" pos:end="873:62">outbuf</name></expr></argument>, <argument pos:start="873:65" pos:end="873:67"><expr pos:start="873:65" pos:end="873:67"><name pos:start="873:65" pos:end="873:67">msf</name></expr></argument>, <argument pos:start="873:70" pos:end="873:80"><expr pos:start="873:70" pos:end="873:80"><name pos:start="873:70" pos:end="873:80">start_track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="875:17" pos:end="875:22">break;</break>

            <default pos:start="877:13" pos:end="877:20">default:</default>

                <goto pos:start="879:17" pos:end="879:31">goto <name pos:start="879:22" pos:end="879:30">error_cmd</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="883:13" pos:end="893:13"><if pos:start="883:13" pos:end="893:13">if <condition pos:start="883:16" pos:end="883:27">(<expr pos:start="883:17" pos:end="883:26"><name pos:start="883:17" pos:end="883:22">toclen</name> <operator pos:start="883:24" pos:end="883:24">&gt;</operator> <literal type="number" pos:start="883:26" pos:end="883:26">0</literal></expr>)</condition> <block pos:start="883:29" pos:end="893:13">{<block_content pos:start="885:17" pos:end="891:22">

                <if_stmt pos:start="885:17" pos:end="887:31"><if pos:start="885:17" pos:end="887:31">if <condition pos:start="885:20" pos:end="885:33">(<expr pos:start="885:21" pos:end="885:32"><name pos:start="885:21" pos:end="885:23">len</name> <operator pos:start="885:25" pos:end="885:25">&gt;</operator> <name pos:start="885:27" pos:end="885:32">toclen</name></expr>)</condition><block type="pseudo" pos:start="887:19" pos:end="887:31"><block_content pos:start="887:19" pos:end="887:31">

                  <expr_stmt pos:start="887:19" pos:end="887:31"><expr pos:start="887:19" pos:end="887:30"><name pos:start="887:19" pos:end="887:21">len</name> <operator pos:start="887:23" pos:end="887:23">=</operator> <name pos:start="887:25" pos:end="887:30">toclen</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="889:17" pos:end="889:33"><expr pos:start="889:17" pos:end="889:32"><name pos:start="889:17" pos:end="889:26"><name pos:start="889:17" pos:end="889:17">r</name><operator pos:start="889:18" pos:end="889:19">-&gt;</operator><name pos:start="889:20" pos:end="889:26">buf_len</name></name> <operator pos:start="889:28" pos:end="889:28">=</operator> <name pos:start="889:30" pos:end="889:32">len</name></expr>;</expr_stmt>

                <break pos:start="891:17" pos:end="891:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="895:9" pos:end="895:18"><name pos:start="895:9" pos:end="895:17">error_cmd</name>:</label>

            <expr_stmt pos:start="897:13" pos:end="897:40"><expr pos:start="897:13" pos:end="897:39"><call pos:start="897:13" pos:end="897:39"><name pos:start="897:13" pos:end="897:19">DPRINTF</name><argument_list pos:start="897:20" pos:end="897:39">(<argument pos:start="897:21" pos:end="897:38"><expr pos:start="897:21" pos:end="897:38"><literal type="string" pos:start="897:21" pos:end="897:38">"Read TOC error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="899:13" pos:end="899:22">goto <name pos:start="899:18" pos:end="899:21">fail</name>;</goto>

        </block_content>}</block>

    <case pos:start="903:5" pos:end="903:14">case <expr pos:start="903:10" pos:end="903:13"><literal type="number" pos:start="903:10" pos:end="903:13">0x46</literal></expr>:</case>

        <expr_stmt pos:start="905:9" pos:end="905:75"><expr pos:start="905:9" pos:end="905:74"><call pos:start="905:9" pos:end="905:74"><name pos:start="905:9" pos:end="905:15">DPRINTF</name><argument_list pos:start="905:16" pos:end="905:74">(<argument pos:start="905:17" pos:end="905:56"><expr pos:start="905:17" pos:end="905:56"><literal type="string" pos:start="905:17" pos:end="905:56">"Get Configuration (rt %d, maxlen %d)\n"</literal></expr></argument>, <argument pos:start="905:59" pos:end="905:68"><expr pos:start="905:59" pos:end="905:68"><name pos:start="905:59" pos:end="905:64"><name pos:start="905:59" pos:end="905:61">buf</name><index pos:start="905:62" pos:end="905:64">[<expr pos:start="905:63" pos:end="905:63"><literal type="number" pos:start="905:63" pos:end="905:63">1</literal></expr>]</index></name> <operator pos:start="905:66" pos:end="905:66">&amp;</operator> <literal type="number" pos:start="905:68" pos:end="905:68">3</literal></expr></argument>, <argument pos:start="905:71" pos:end="905:73"><expr pos:start="905:71" pos:end="905:73"><name pos:start="905:71" pos:end="905:73">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="907:9" pos:end="907:29"><expr pos:start="907:9" pos:end="907:28"><call pos:start="907:9" pos:end="907:28"><name pos:start="907:9" pos:end="907:14">memset</name><argument_list pos:start="907:15" pos:end="907:28">(<argument pos:start="907:16" pos:end="907:21"><expr pos:start="907:16" pos:end="907:21"><name pos:start="907:16" pos:end="907:21">outbuf</name></expr></argument>, <argument pos:start="907:24" pos:end="907:24"><expr pos:start="907:24" pos:end="907:24"><literal type="number" pos:start="907:24" pos:end="907:24">0</literal></expr></argument>, <argument pos:start="907:27" pos:end="907:27"><expr pos:start="907:27" pos:end="907:27"><literal type="number" pos:start="907:27" pos:end="907:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="909:9" pos:end="911:74">/* ??? This should probably return much more information.  For now

           just return the basic header indicating the CD-ROM profile.  */</comment>

        <expr_stmt pos:start="913:9" pos:end="913:22"><expr pos:start="913:9" pos:end="913:21"><name pos:start="913:9" pos:end="913:17"><name pos:start="913:9" pos:end="913:14">outbuf</name><index pos:start="913:15" pos:end="913:17">[<expr pos:start="913:16" pos:end="913:16"><literal type="number" pos:start="913:16" pos:end="913:16">7</literal></expr>]</index></name> <operator pos:start="913:19" pos:end="913:19">=</operator> <literal type="number" pos:start="913:21" pos:end="913:21">8</literal></expr>;</expr_stmt> <comment type="line" pos:start="913:24" pos:end="913:32">// CD-ROM</comment>

        <expr_stmt pos:start="915:9" pos:end="915:23"><expr pos:start="915:9" pos:end="915:22"><name pos:start="915:9" pos:end="915:18"><name pos:start="915:9" pos:end="915:9">r</name><operator pos:start="915:10" pos:end="915:11">-&gt;</operator><name pos:start="915:12" pos:end="915:18">buf_len</name></name> <operator pos:start="915:20" pos:end="915:20">=</operator> <literal type="number" pos:start="915:22" pos:end="915:22">8</literal></expr>;</expr_stmt>

        <break pos:start="917:9" pos:end="917:14">break;</break>

    <case pos:start="919:5" pos:end="919:14">case <expr pos:start="919:10" pos:end="919:13"><literal type="number" pos:start="919:10" pos:end="919:13">0x56</literal></expr>:</case>

        <expr_stmt pos:start="921:9" pos:end="921:33"><expr pos:start="921:9" pos:end="921:32"><call pos:start="921:9" pos:end="921:32"><name pos:start="921:9" pos:end="921:15">DPRINTF</name><argument_list pos:start="921:16" pos:end="921:32">(<argument pos:start="921:17" pos:end="921:31"><expr pos:start="921:17" pos:end="921:31"><literal type="string" pos:start="921:17" pos:end="921:31">"Reserve(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="923:9" pos:end="925:22"><if pos:start="923:9" pos:end="925:22">if <condition pos:start="923:12" pos:end="923:23">(<expr pos:start="923:13" pos:end="923:22"><name pos:start="923:13" pos:end="923:18"><name pos:start="923:13" pos:end="923:15">buf</name><index pos:start="923:16" pos:end="923:18">[<expr pos:start="923:17" pos:end="923:17"><literal type="number" pos:start="923:17" pos:end="923:17">1</literal></expr>]</index></name> <operator pos:start="923:20" pos:end="923:20">&amp;</operator> <literal type="number" pos:start="923:22" pos:end="923:22">3</literal></expr>)</condition><block type="pseudo" pos:start="925:13" pos:end="925:22"><block_content pos:start="925:13" pos:end="925:22">

            <goto pos:start="925:13" pos:end="925:22">goto <name pos:start="925:18" pos:end="925:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="927:9" pos:end="927:14">break;</break>

    <case pos:start="929:5" pos:end="929:14">case <expr pos:start="929:10" pos:end="929:13"><literal type="number" pos:start="929:10" pos:end="929:13">0x57</literal></expr>:</case>

        <expr_stmt pos:start="931:9" pos:end="931:33"><expr pos:start="931:9" pos:end="931:32"><call pos:start="931:9" pos:end="931:32"><name pos:start="931:9" pos:end="931:15">DPRINTF</name><argument_list pos:start="931:16" pos:end="931:32">(<argument pos:start="931:17" pos:end="931:31"><expr pos:start="931:17" pos:end="931:31"><literal type="string" pos:start="931:17" pos:end="931:31">"Release(10)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="933:9" pos:end="935:22"><if pos:start="933:9" pos:end="935:22">if <condition pos:start="933:12" pos:end="933:23">(<expr pos:start="933:13" pos:end="933:22"><name pos:start="933:13" pos:end="933:18"><name pos:start="933:13" pos:end="933:15">buf</name><index pos:start="933:16" pos:end="933:18">[<expr pos:start="933:17" pos:end="933:17"><literal type="number" pos:start="933:17" pos:end="933:17">1</literal></expr>]</index></name> <operator pos:start="933:20" pos:end="933:20">&amp;</operator> <literal type="number" pos:start="933:22" pos:end="933:22">3</literal></expr>)</condition><block type="pseudo" pos:start="935:13" pos:end="935:22"><block_content pos:start="935:13" pos:end="935:22">

            <goto pos:start="935:13" pos:end="935:22">goto <name pos:start="935:18" pos:end="935:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <break pos:start="937:9" pos:end="937:14">break;</break>

    <case pos:start="939:5" pos:end="939:14">case <expr pos:start="939:10" pos:end="939:13"><literal type="number" pos:start="939:10" pos:end="939:13">0xa0</literal></expr>:</case>

        <expr_stmt pos:start="941:9" pos:end="941:47"><expr pos:start="941:9" pos:end="941:46"><call pos:start="941:9" pos:end="941:46"><name pos:start="941:9" pos:end="941:15">DPRINTF</name><argument_list pos:start="941:16" pos:end="941:46">(<argument pos:start="941:17" pos:end="941:40"><expr pos:start="941:17" pos:end="941:40"><literal type="string" pos:start="941:17" pos:end="941:40">"Report LUNs (len %d)\n"</literal></expr></argument>, <argument pos:start="941:43" pos:end="941:45"><expr pos:start="941:43" pos:end="941:45"><name pos:start="941:43" pos:end="941:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="943:9" pos:end="945:22"><if pos:start="943:9" pos:end="945:22">if <condition pos:start="943:12" pos:end="943:21">(<expr pos:start="943:13" pos:end="943:20"><name pos:start="943:13" pos:end="943:15">len</name> <operator pos:start="943:17" pos:end="943:17">&lt;</operator> <literal type="number" pos:start="943:19" pos:end="943:20">16</literal></expr>)</condition><block type="pseudo" pos:start="945:13" pos:end="945:22"><block_content pos:start="945:13" pos:end="945:22">

            <goto pos:start="945:13" pos:end="945:22">goto <name pos:start="945:18" pos:end="945:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="947:9" pos:end="947:30"><expr pos:start="947:9" pos:end="947:29"><call pos:start="947:9" pos:end="947:29"><name pos:start="947:9" pos:end="947:14">memset</name><argument_list pos:start="947:15" pos:end="947:29">(<argument pos:start="947:16" pos:end="947:21"><expr pos:start="947:16" pos:end="947:21"><name pos:start="947:16" pos:end="947:21">outbuf</name></expr></argument>, <argument pos:start="947:24" pos:end="947:24"><expr pos:start="947:24" pos:end="947:24"><literal type="number" pos:start="947:24" pos:end="947:24">0</literal></expr></argument>, <argument pos:start="947:27" pos:end="947:28"><expr pos:start="947:27" pos:end="947:28"><literal type="number" pos:start="947:27" pos:end="947:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:22"><expr pos:start="949:9" pos:end="949:21"><name pos:start="949:9" pos:end="949:17"><name pos:start="949:9" pos:end="949:14">outbuf</name><index pos:start="949:15" pos:end="949:17">[<expr pos:start="949:16" pos:end="949:16"><literal type="number" pos:start="949:16" pos:end="949:16">3</literal></expr>]</index></name> <operator pos:start="949:19" pos:end="949:19">=</operator> <literal type="number" pos:start="949:21" pos:end="949:21">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="951:9" pos:end="951:24"><expr pos:start="951:9" pos:end="951:23"><name pos:start="951:9" pos:end="951:18"><name pos:start="951:9" pos:end="951:9">r</name><operator pos:start="951:10" pos:end="951:11">-&gt;</operator><name pos:start="951:12" pos:end="951:18">buf_len</name></name> <operator pos:start="951:20" pos:end="951:20">=</operator> <literal type="number" pos:start="951:22" pos:end="951:23">16</literal></expr>;</expr_stmt>

        <break pos:start="953:9" pos:end="953:14">break;</break>

    <case pos:start="955:5" pos:end="955:14">case <expr pos:start="955:10" pos:end="955:13"><literal type="number" pos:start="955:10" pos:end="955:13">0x2f</literal></expr>:</case>

        <expr_stmt pos:start="957:9" pos:end="957:60"><expr pos:start="957:9" pos:end="957:59"><call pos:start="957:9" pos:end="957:59"><name pos:start="957:9" pos:end="957:15">DPRINTF</name><argument_list pos:start="957:16" pos:end="957:59">(<argument pos:start="957:17" pos:end="957:48"><expr pos:start="957:17" pos:end="957:48"><literal type="string" pos:start="957:17" pos:end="957:48">"Verify (sector %d, count %d)\n"</literal></expr></argument>, <argument pos:start="957:51" pos:end="957:53"><expr pos:start="957:51" pos:end="957:53"><name pos:start="957:51" pos:end="957:53">lba</name></expr></argument>, <argument pos:start="957:56" pos:end="957:58"><expr pos:start="957:56" pos:end="957:58"><name pos:start="957:56" pos:end="957:58">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="959:9" pos:end="959:14">break;</break>

    <default pos:start="961:5" pos:end="961:12">default:</default>

	<expr_stmt pos:start="963:9" pos:end="963:58"><expr pos:start="963:9" pos:end="963:57"><call pos:start="963:9" pos:end="963:57"><name pos:start="963:9" pos:end="963:15">DPRINTF</name><argument_list pos:start="963:16" pos:end="963:57">(<argument pos:start="963:17" pos:end="963:48"><expr pos:start="963:17" pos:end="963:48"><literal type="string" pos:start="963:17" pos:end="963:48">"Unknown SCSI command (%2.2x)\n"</literal></expr></argument>, <argument pos:start="963:51" pos:end="963:56"><expr pos:start="963:51" pos:end="963:56"><name pos:start="963:51" pos:end="963:56"><name pos:start="963:51" pos:end="963:53">buf</name><index pos:start="963:54" pos:end="963:56">[<expr pos:start="963:55" pos:end="963:55"><literal type="number" pos:start="963:55" pos:end="963:55">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <label pos:start="965:5" pos:end="965:9"><name pos:start="965:5" pos:end="965:8">fail</name>:</label>

        <expr_stmt pos:start="967:9" pos:end="967:80"><expr pos:start="967:9" pos:end="967:79"><call pos:start="967:9" pos:end="967:79"><name pos:start="967:9" pos:end="967:29">scsi_command_complete</name><argument_list pos:start="967:30" pos:end="967:79">(<argument pos:start="967:31" pos:end="967:31"><expr pos:start="967:31" pos:end="967:31"><name pos:start="967:31" pos:end="967:31">r</name></expr></argument>, <argument pos:start="967:34" pos:end="967:55"><expr pos:start="967:34" pos:end="967:55"><name pos:start="967:34" pos:end="967:55">STATUS_CHECK_CONDITION</name></expr></argument>, <argument pos:start="967:58" pos:end="967:78"><expr pos:start="967:58" pos:end="967:78"><name pos:start="967:58" pos:end="967:78">SENSE_ILLEGAL_REQUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:start="969:9" pos:end="969:17">return <expr pos:start="969:16" pos:end="969:16"><literal type="number" pos:start="969:16" pos:end="969:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="973:5" pos:end="977:5"><if pos:start="973:5" pos:end="977:5">if <condition pos:start="973:8" pos:end="973:48">(<expr pos:start="973:9" pos:end="973:47"><name pos:start="973:9" pos:end="973:23"><name pos:start="973:9" pos:end="973:9">r</name><operator pos:start="973:10" pos:end="973:11">-&gt;</operator><name pos:start="973:12" pos:end="973:23">sector_count</name></name> <operator pos:start="973:25" pos:end="973:26">==</operator> <literal type="number" pos:start="973:28" pos:end="973:28">0</literal> <operator pos:start="973:30" pos:end="973:31">&amp;&amp;</operator> <name pos:start="973:33" pos:end="973:42"><name pos:start="973:33" pos:end="973:33">r</name><operator pos:start="973:34" pos:end="973:35">-&gt;</operator><name pos:start="973:36" pos:end="973:42">buf_len</name></name> <operator pos:start="973:44" pos:end="973:45">==</operator> <literal type="number" pos:start="973:47" pos:end="973:47">0</literal></expr>)</condition> <block pos:start="973:50" pos:end="977:5">{<block_content pos:start="975:9" pos:end="975:62">

        <expr_stmt pos:start="975:9" pos:end="975:62"><expr pos:start="975:9" pos:end="975:61"><call pos:start="975:9" pos:end="975:61"><name pos:start="975:9" pos:end="975:29">scsi_command_complete</name><argument_list pos:start="975:30" pos:end="975:61">(<argument pos:start="975:31" pos:end="975:31"><expr pos:start="975:31" pos:end="975:31"><name pos:start="975:31" pos:end="975:31">r</name></expr></argument>, <argument pos:start="975:34" pos:end="975:44"><expr pos:start="975:34" pos:end="975:44"><name pos:start="975:34" pos:end="975:44">STATUS_GOOD</name></expr></argument>, <argument pos:start="975:47" pos:end="975:60"><expr pos:start="975:47" pos:end="975:60"><name pos:start="975:47" pos:end="975:60">SENSE_NO_SENSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="979:5" pos:end="979:45"><expr pos:start="979:5" pos:end="979:44"><name pos:start="979:5" pos:end="979:7">len</name> <operator pos:start="979:9" pos:end="979:9">=</operator> <name pos:start="979:11" pos:end="979:25"><name pos:start="979:11" pos:end="979:11">r</name><operator pos:start="979:12" pos:end="979:13">-&gt;</operator><name pos:start="979:14" pos:end="979:25">sector_count</name></name> <operator pos:start="979:27" pos:end="979:27">*</operator> <literal type="number" pos:start="979:29" pos:end="979:33">512</literal> <operator pos:start="979:33" pos:end="979:33">+</operator> <name pos:start="979:35" pos:end="979:44"><name pos:start="979:35" pos:end="979:35">r</name><operator pos:start="979:36" pos:end="979:37">-&gt;</operator><name pos:start="979:38" pos:end="979:44">buf_len</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="981:5" pos:end="993:5"><if pos:start="981:5" pos:end="985:5">if <condition pos:start="981:8" pos:end="981:17">(<expr pos:start="981:9" pos:end="981:16"><name pos:start="981:9" pos:end="981:16">is_write</name></expr>)</condition> <block pos:start="981:19" pos:end="985:5">{<block_content pos:start="983:9" pos:end="983:20">

        <return pos:start="983:9" pos:end="983:20">return <expr pos:start="983:16" pos:end="983:19"><operator pos:start="983:16" pos:end="983:16">-</operator><name pos:start="983:17" pos:end="983:19">len</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="985:7" pos:end="993:5">else <block pos:start="985:12" pos:end="993:5">{<block_content pos:start="987:9" pos:end="991:19">

        <if_stmt pos:start="987:9" pos:end="989:33"><if pos:start="987:9" pos:end="989:33">if <condition pos:start="987:12" pos:end="987:29">(<expr pos:start="987:13" pos:end="987:28"><operator pos:start="987:13" pos:end="987:13">!</operator><name pos:start="987:14" pos:end="987:28"><name pos:start="987:14" pos:end="987:14">r</name><operator pos:start="987:15" pos:end="987:16">-&gt;</operator><name pos:start="987:17" pos:end="987:28">sector_count</name></name></expr>)</condition><block type="pseudo" pos:start="989:13" pos:end="989:33"><block_content pos:start="989:13" pos:end="989:33">

            <expr_stmt pos:start="989:13" pos:end="989:33"><expr pos:start="989:13" pos:end="989:32"><name pos:start="989:13" pos:end="989:27"><name pos:start="989:13" pos:end="989:13">r</name><operator pos:start="989:14" pos:end="989:15">-&gt;</operator><name pos:start="989:16" pos:end="989:27">sector_count</name></name> <operator pos:start="989:29" pos:end="989:29">=</operator> <operator pos:start="989:31" pos:end="989:31">-</operator><literal type="number" pos:start="989:32" pos:end="989:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="991:9" pos:end="991:19">return <expr pos:start="991:16" pos:end="991:18"><name pos:start="991:16" pos:end="991:18">len</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
