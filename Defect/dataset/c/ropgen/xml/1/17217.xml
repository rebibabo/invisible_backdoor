<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17217.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:34">uyvyToUV</name>)<parameter_list pos:start="1:36" pos:end="1:107">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:43">uint8_t</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">dstU</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">dstV</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:73">uint8_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">src1</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:94"><decl pos:start="1:82" pos:end="1:94"><type pos:start="1:82" pos:end="1:94"><name pos:start="1:82" pos:end="1:88">uint8_t</name> <modifier pos:start="1:90" pos:end="1:90">*</modifier></type><name pos:start="1:91" pos:end="1:94">src2</name></decl></parameter>, <parameter pos:start="1:97" pos:end="1:106"><decl pos:start="1:97" pos:end="1:106"><type pos:start="1:97" pos:end="1:106"><name pos:start="1:97" pos:end="1:100">long</name></type> <name pos:start="1:102" pos:end="1:106">width</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="7:9" pos:end="65:29">

<cpp:ifdef pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:15">HAVE_MMX</name></cpp:ifdef>

	<asm pos:start="7:9" pos:end="50:0">asm <specifier pos:start="7:13" pos:end="7:20">volatile</specifier>(

		"movq "MANGLE(bm01010101)", %%mm4\n\t"

		"mov %0, %%"REG_a"		\n\t"

		"1:				\n\t"

		"movq (%1, %%"REG_a",4), %%mm0	\n\t"

		"movq 8(%1, %%"REG_a",4), %%mm1	\n\t"

		"pand %%mm4, %%mm0		\n\t"

		"pand %%mm4, %%mm1		\n\t"

		"packuswb %%mm1, %%mm0		\n\t"

		"movq %%mm0, %%mm1		\n\t"

		"psrlw $8, %%mm0		\n\t"

		"pand %%mm4, %%mm1		\n\t"

		"packuswb %%mm0, %%mm0		\n\t"

		"packuswb %%mm1, %%mm1		\n\t"

		"movd %%mm0, (%3, %%"REG_a")	\n\t"

		"movd %%mm1, (%2, %%"REG_a")	\n\t"

		"add $4, %%"REG_a"		\n\t"

		" js 1b				\n\t"

		: : "g" (-width), "r" (src1+width*4), "r" (dstU+width), "r" (dstV+width)

		: "%"REG_a

	);</asm>

<cpp:else pos:start="49:1" pos:end="49:5">#<cpp:directive pos:start="49:2" pos:end="49:5">else</cpp:directive></cpp:else>

	<decl_stmt pos:start="51:9" pos:end="51:14"><decl pos:start="51:9" pos:end="51:13"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:13">i</name></decl>;</decl_stmt>

	<for pos:start="53:9" pos:end="64:0">for<control pos:start="53:12" pos:end="53:30">(<init pos:start="53:13" pos:end="53:16"><expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:13">i</name><operator pos:start="53:14" pos:end="53:14">=</operator><literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>;</init> <condition pos:start="53:18" pos:end="53:25"><expr pos:start="53:18" pos:end="53:24"><name pos:start="53:18" pos:end="53:18">i</name><operator pos:start="53:19" pos:end="53:19">&lt;</operator><name pos:start="53:20" pos:end="53:24">width</name></expr>;</condition> <incr pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:27">i</name><operator pos:start="53:28" pos:end="53:29">++</operator></expr></incr>)</control>

	<block pos:start="55:9" pos:end="64:0">{<block_content pos:start="57:17" pos:end="59:39">

		<expr_stmt pos:start="57:17" pos:end="57:39"><expr pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:23"><name pos:start="57:17" pos:end="57:20">dstU</name><index pos:start="57:21" pos:end="57:23">[<expr pos:start="57:22" pos:end="57:22"><name pos:start="57:22" pos:end="57:22">i</name></expr>]</index></name><operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:38"><name pos:start="57:26" pos:end="57:29">src1</name><index pos:start="57:30" pos:end="57:38">[<expr pos:start="57:31" pos:end="57:37"><literal type="number" pos:start="57:31" pos:end="57:31">4</literal><operator pos:start="57:32" pos:end="57:32">*</operator><name pos:start="57:33" pos:end="57:33">i</name> <operator pos:start="57:35" pos:end="57:35">+</operator> <literal type="number" pos:start="57:37" pos:end="57:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="59:17" pos:end="59:39"><expr pos:start="59:17" pos:end="59:38"><name pos:start="59:17" pos:end="59:23"><name pos:start="59:17" pos:end="59:20">dstV</name><index pos:start="59:21" pos:end="59:23">[<expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">i</name></expr>]</index></name><operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:29">src1</name><index pos:start="59:30" pos:end="59:38">[<expr pos:start="59:31" pos:end="59:37"><literal type="number" pos:start="59:31" pos:end="59:31">4</literal><operator pos:start="59:32" pos:end="59:32">*</operator><name pos:start="59:33" pos:end="59:33">i</name> <operator pos:start="59:35" pos:end="59:35">+</operator> <literal type="number" pos:start="59:37" pos:end="59:37">2</literal></expr>]</index></name></expr>;</expr_stmt>

	</block_content>}</block></for>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><call pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:28">(<argument pos:start="65:16" pos:end="65:27"><expr pos:start="65:16" pos:end="65:27"><name pos:start="65:16" pos:end="65:19">src1</name> <operator pos:start="65:21" pos:end="65:22">==</operator> <name pos:start="65:24" pos:end="65:27">src2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
