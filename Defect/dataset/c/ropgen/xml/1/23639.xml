<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23639.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">av_resample</name><parameter_list pos:start="1:16" pos:end="1:120">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:36"><name pos:start="1:17" pos:end="1:33">AVResampleContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">c</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:43">short</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">dst</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:55">short</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">src</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:75"><decl pos:start="1:63" pos:end="1:75"><type pos:start="1:63" pos:end="1:75"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:75">consumed</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:89"><decl pos:start="1:78" pos:end="1:89"><type pos:start="1:78" pos:end="1:89"><name pos:start="1:78" pos:end="1:80">int</name></type> <name pos:start="1:82" pos:end="1:89">src_size</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:103"><decl pos:start="1:92" pos:end="1:103"><type pos:start="1:92" pos:end="1:103"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:103">dst_size</name></decl></parameter>, <parameter pos:start="1:106" pos:end="1:119"><decl pos:start="1:106" pos:end="1:119"><type pos:start="1:106" pos:end="1:119"><name pos:start="1:106" pos:end="1:108">int</name></type> <name pos:start="1:110" pos:end="1:119">update_ctx</name></decl></parameter>)</parameter_list><block pos:start="1:121" pos:end="177:1">{<block_content pos:start="3:5" pos:end="175:21">

    <decl_stmt pos:start="3:5" pos:end="3:21"><decl pos:start="3:5" pos:end="3:17"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:17">dst_index</name></decl>, <decl pos:start="3:20" pos:end="3:20"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:20" pos:end="3:20">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">index</name><init pos:start="5:14" pos:end="5:23">= <expr pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:23"><name pos:start="5:16" pos:end="5:16">c</name><operator pos:start="5:17" pos:end="5:18">-&gt;</operator><name pos:start="5:19" pos:end="5:23">index</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">frac</name><init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:21"><name pos:start="7:15" pos:end="7:15">c</name><operator pos:start="7:16" pos:end="7:17">-&gt;</operator><name pos:start="7:18" pos:end="7:21">frac</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">dst_incr_frac</name><init pos:start="9:22" pos:end="9:48">= <expr pos:start="9:24" pos:end="9:48"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:24">c</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:34">dst_incr</name></name> <operator pos:start="9:36" pos:end="9:36">%</operator> <name pos:start="9:38" pos:end="9:48"><name pos:start="9:38" pos:end="9:38">c</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">dst_incr</name><init pos:start="11:17" pos:end="11:48">=      <expr pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:34"><name pos:start="11:24" pos:end="11:24">c</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:34">dst_incr</name></name> <operator pos:start="11:36" pos:end="11:36">/</operator> <name pos:start="11:38" pos:end="11:48"><name pos:start="11:38" pos:end="11:38">c</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:48">src_incr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">compensation_distance</name><init pos:start="13:30" pos:end="13:55">= <expr pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:55"><name pos:start="13:32" pos:end="13:32">c</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:55">compensation_distance</name></name></expr></init></decl>;</decl_stmt>



  <if_stmt pos:start="17:3" pos:end="131:3"><if pos:start="17:3" pos:end="43:3">if<condition pos:start="17:5" pos:end="17:78">(<expr pos:start="17:6" pos:end="17:77"><name pos:start="17:6" pos:end="17:26">compensation_distance</name> <operator pos:start="17:28" pos:end="17:29">==</operator> <literal type="number" pos:start="17:31" pos:end="17:31">0</literal> <operator pos:start="17:33" pos:end="17:34">&amp;&amp;</operator> <name pos:start="17:36" pos:end="17:51"><name pos:start="17:36" pos:end="17:36">c</name><operator pos:start="17:37" pos:end="17:38">-&gt;</operator><name pos:start="17:39" pos:end="17:51">filter_length</name></name> <operator pos:start="17:53" pos:end="17:54">==</operator> <literal type="number" pos:start="17:56" pos:end="17:56">1</literal> <operator pos:start="17:58" pos:end="17:59">&amp;&amp;</operator> <name pos:start="17:61" pos:end="17:74"><name pos:start="17:61" pos:end="17:61">c</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:74">phase_shift</name></name><operator pos:start="17:75" pos:end="17:76">==</operator><literal type="number" pos:start="17:77" pos:end="17:77">0</literal></expr>)</condition><block pos:start="17:79" pos:end="43:3">{<block_content pos:start="19:9" pos:end="41:28">

        <decl_stmt pos:start="19:9" pos:end="19:45"><decl pos:start="19:9" pos:end="19:44"><type pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:15">int64_t</name></type> <name pos:start="19:17" pos:end="19:22">index2</name><init pos:start="19:23" pos:end="19:44">= <expr pos:start="19:25" pos:end="19:44"><operator pos:start="19:25" pos:end="19:25">(</operator><operator pos:start="19:26" pos:end="19:26">(</operator><name pos:start="19:27" pos:end="19:33">int64_t</name><operator pos:start="19:34" pos:end="19:34">)</operator><name pos:start="19:35" pos:end="19:39">index</name><operator pos:start="19:40" pos:end="19:40">)</operator><operator pos:start="19:41" pos:end="19:42">&lt;&lt;</operator><literal type="number" pos:start="19:43" pos:end="19:44">32</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:60"><decl pos:start="21:9" pos:end="21:59"><type pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:15">int64_t</name></type> <name pos:start="21:17" pos:end="21:20">incr</name><init pos:start="21:21" pos:end="21:59">= <expr pos:start="21:23" pos:end="21:59"><operator pos:start="21:23" pos:end="21:23">(</operator><literal type="number" pos:start="21:24" pos:end="21:26">1LL</literal><operator pos:start="21:27" pos:end="21:28">&lt;&lt;</operator><literal type="number" pos:start="21:29" pos:end="21:30">32</literal><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">*</operator> <name pos:start="21:35" pos:end="21:45"><name pos:start="21:35" pos:end="21:35">c</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:45">dst_incr</name></name> <operator pos:start="21:47" pos:end="21:47">/</operator> <name pos:start="21:49" pos:end="21:59"><name pos:start="21:49" pos:end="21:49">c</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:59">src_incr</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:91"><expr pos:start="23:9" pos:end="23:90"><name pos:start="23:9" pos:end="23:16">dst_size</name><operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:90"><name pos:start="23:19" pos:end="23:23">FFMIN</name><argument_list pos:start="23:24" pos:end="23:90">(<argument pos:start="23:25" pos:end="23:32"><expr pos:start="23:25" pos:end="23:32"><name pos:start="23:25" pos:end="23:32">dst_size</name></expr></argument>, <argument pos:start="23:35" pos:end="23:89"><expr pos:start="23:35" pos:end="23:89"><operator pos:start="23:35" pos:end="23:35">(</operator><name pos:start="23:36" pos:end="23:43">src_size</name><operator pos:start="23:44" pos:end="23:44">-</operator><literal type="number" pos:start="23:45" pos:end="23:46">1</literal><operator pos:start="23:46" pos:end="23:46">-</operator><name pos:start="23:47" pos:end="23:51">index</name><operator pos:start="23:52" pos:end="23:52">)</operator> <operator pos:start="23:54" pos:end="23:54">*</operator> <operator pos:start="23:56" pos:end="23:56">(</operator><name pos:start="23:57" pos:end="23:63">int64_t</name><operator pos:start="23:64" pos:end="23:64">)</operator><name pos:start="23:65" pos:end="23:75"><name pos:start="23:65" pos:end="23:65">c</name><operator pos:start="23:66" pos:end="23:67">-&gt;</operator><name pos:start="23:68" pos:end="23:75">src_incr</name></name> <operator pos:start="23:77" pos:end="23:77">/</operator> <name pos:start="23:79" pos:end="23:89"><name pos:start="23:79" pos:end="23:79">c</name><operator pos:start="23:80" pos:end="23:81">-&gt;</operator><name pos:start="23:82" pos:end="23:89">dst_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="27:9" pos:end="33:9">for<control pos:start="27:12" pos:end="27:59">(<init pos:start="27:13" pos:end="27:24"><expr pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:21">dst_index</name><operator pos:start="27:22" pos:end="27:22">=</operator><literal type="number" pos:start="27:23" pos:end="27:23">0</literal></expr>;</init> <condition pos:start="27:26" pos:end="27:46"><expr pos:start="27:26" pos:end="27:45"><name pos:start="27:26" pos:end="27:34">dst_index</name> <operator pos:start="27:36" pos:end="27:36">&lt;</operator> <name pos:start="27:38" pos:end="27:45">dst_size</name></expr>;</condition> <incr pos:start="27:48" pos:end="27:58"><expr pos:start="27:48" pos:end="27:58"><name pos:start="27:48" pos:end="27:56">dst_index</name><operator pos:start="27:57" pos:end="27:58">++</operator></expr></incr>)</control><block pos:start="27:60" pos:end="33:9">{<block_content pos:start="29:13" pos:end="31:27">

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:15">dst</name><index pos:start="29:16" pos:end="29:26">[<expr pos:start="29:17" pos:end="29:25"><name pos:start="29:17" pos:end="29:25">dst_index</name></expr>]</index></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:44"><name pos:start="29:30" pos:end="29:32">src</name><index pos:start="29:33" pos:end="29:44">[<expr pos:start="29:34" pos:end="29:43"><name pos:start="29:34" pos:end="29:39">index2</name><operator pos:start="29:40" pos:end="29:41">&gt;&gt;</operator><literal type="number" pos:start="29:42" pos:end="29:43">32</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:18">index2</name> <operator pos:start="31:20" pos:end="31:21">+=</operator> <name pos:start="31:23" pos:end="31:26">incr</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:12">frac</name> <operator pos:start="35:14" pos:end="35:15">+=</operator> <name pos:start="35:17" pos:end="35:25">dst_index</name> <operator pos:start="35:27" pos:end="35:27">*</operator> <name pos:start="35:29" pos:end="35:41">dst_incr_frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:13">index</name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:26">dst_index</name> <operator pos:start="37:28" pos:end="37:28">*</operator> <name pos:start="37:30" pos:end="37:37">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:36"><expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:13">index</name> <operator pos:start="39:15" pos:end="39:16">+=</operator> <name pos:start="39:18" pos:end="39:21">frac</name> <operator pos:start="39:23" pos:end="39:23">/</operator> <name pos:start="39:25" pos:end="39:35"><name pos:start="39:25" pos:end="39:25">c</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:35">src_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:12">frac</name> <operator pos:start="41:14" pos:end="41:15">%=</operator> <name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">c</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:27">src_incr</name></name></expr>;</expr_stmt>

  </block_content>}</block></if><else pos:start="43:4" pos:end="131:3">else<block pos:start="43:8" pos:end="131:3">{<block_content pos:start="45:5" pos:end="129:5">

    <for pos:start="45:5" pos:end="129:5">for<control pos:start="45:8" pos:end="45:55">(<init pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:17">dst_index</name><operator pos:start="45:18" pos:end="45:18">=</operator><literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>;</init> <condition pos:start="45:22" pos:end="45:42"><expr pos:start="45:22" pos:end="45:41"><name pos:start="45:22" pos:end="45:30">dst_index</name> <operator pos:start="45:32" pos:end="45:32">&lt;</operator> <name pos:start="45:34" pos:end="45:41">dst_size</name></expr>;</condition> <incr pos:start="45:44" pos:end="45:54"><expr pos:start="45:44" pos:end="45:54"><name pos:start="45:44" pos:end="45:52">dst_index</name><operator pos:start="45:53" pos:end="45:54">++</operator></expr></incr>)</control><block pos:start="45:56" pos:end="129:5">{<block_content pos:start="47:9" pos:end="127:9">

        <decl_stmt pos:start="47:9" pos:end="47:81"><decl pos:start="47:9" pos:end="47:80"><type pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:13">FELEM</name> <modifier pos:start="47:15" pos:end="47:15">*</modifier></type><name pos:start="47:16" pos:end="47:21">filter</name><init pos:start="47:22" pos:end="47:80">= <expr pos:start="47:24" pos:end="47:80"><name pos:start="47:24" pos:end="47:37"><name pos:start="47:24" pos:end="47:24">c</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:37">filter_bank</name></name> <operator pos:start="47:39" pos:end="47:39">+</operator> <name pos:start="47:41" pos:end="47:56"><name pos:start="47:41" pos:end="47:41">c</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:56">filter_length</name></name><operator pos:start="47:57" pos:end="47:57">*</operator><operator pos:start="47:58" pos:end="47:58">(</operator><name pos:start="47:59" pos:end="47:63">index</name> <operator pos:start="47:65" pos:end="47:65">&amp;</operator> <name pos:start="47:67" pos:end="47:79"><name pos:start="47:67" pos:end="47:67">c</name><operator pos:start="47:68" pos:end="47:69">-&gt;</operator><name pos:start="47:70" pos:end="47:79">phase_mask</name></name><operator pos:start="47:80" pos:end="47:80">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:50"><decl pos:start="49:9" pos:end="49:49"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:24">sample_index</name><init pos:start="49:25" pos:end="49:49">= <expr pos:start="49:27" pos:end="49:49"><name pos:start="49:27" pos:end="49:31">index</name> <operator pos:start="49:33" pos:end="49:34">&gt;&gt;</operator> <name pos:start="49:36" pos:end="49:49"><name pos:start="49:36" pos:end="49:36">c</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:49">phase_shift</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:21"><decl pos:start="51:9" pos:end="51:20"><type pos:start="51:9" pos:end="51:14"><name pos:start="51:9" pos:end="51:14">FELEM2</name></type> <name pos:start="51:16" pos:end="51:18">val</name><init pos:start="51:19" pos:end="51:20">=<expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="55:9" pos:end="92:0"><if pos:start="55:9" pos:end="61:9">if<condition pos:start="55:11" pos:end="55:28">(<expr pos:start="55:12" pos:end="55:27"><name pos:start="55:12" pos:end="55:23">sample_index</name> <operator pos:start="55:25" pos:end="55:25">&lt;</operator> <literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>)</condition><block pos:start="55:29" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:75">

            <for pos:start="57:13" pos:end="59:75">for<control pos:start="57:16" pos:end="57:45">(<init pos:start="57:17" pos:end="57:20"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:17">i</name><operator pos:start="57:18" pos:end="57:18">=</operator><literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</init> <condition pos:start="57:22" pos:end="57:40"><expr pos:start="57:22" pos:end="57:39"><name pos:start="57:22" pos:end="57:22">i</name><operator pos:start="57:23" pos:end="57:23">&lt;</operator><name pos:start="57:24" pos:end="57:39"><name pos:start="57:24" pos:end="57:24">c</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:39">filter_length</name></name></expr>;</condition> <incr pos:start="57:42" pos:end="57:44"><expr pos:start="57:42" pos:end="57:44"><name pos:start="57:42" pos:end="57:42">i</name><operator pos:start="57:43" pos:end="57:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:17" pos:end="59:75"><block_content pos:start="59:17" pos:end="59:75">

                <expr_stmt pos:start="59:17" pos:end="59:75"><expr pos:start="59:17" pos:end="59:74"><name pos:start="59:17" pos:end="59:19">val</name> <operator pos:start="59:21" pos:end="59:22">+=</operator> <name pos:start="59:24" pos:end="59:62"><name pos:start="59:24" pos:end="59:26">src</name><index pos:start="59:27" pos:end="59:62">[<expr pos:start="59:28" pos:end="59:61"><call pos:start="59:28" pos:end="59:50"><name pos:start="59:28" pos:end="59:32">FFABS</name><argument_list pos:start="59:33" pos:end="59:50">(<argument pos:start="59:34" pos:end="59:49"><expr pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:45">sample_index</name> <operator pos:start="59:47" pos:end="59:47">+</operator> <name pos:start="59:49" pos:end="59:49">i</name></expr></argument>)</argument_list></call> <operator pos:start="59:52" pos:end="59:52">%</operator> <name pos:start="59:54" pos:end="59:61">src_size</name></expr>]</index></name> <operator pos:start="59:64" pos:end="59:64">*</operator> <name pos:start="59:66" pos:end="59:74"><name pos:start="59:66" pos:end="59:71">filter</name><index pos:start="59:72" pos:end="59:74">[<expr pos:start="59:73" pos:end="59:73"><name pos:start="59:73" pos:end="59:73">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if><if type="elseif" pos:start="61:10" pos:end="65:9">else if<condition pos:start="61:17" pos:end="61:60">(<expr pos:start="61:18" pos:end="61:59"><name pos:start="61:18" pos:end="61:29">sample_index</name> <operator pos:start="61:31" pos:end="61:31">+</operator> <name pos:start="61:33" pos:end="61:48"><name pos:start="61:33" pos:end="61:33">c</name><operator pos:start="61:34" pos:end="61:35">-&gt;</operator><name pos:start="61:36" pos:end="61:48">filter_length</name></name> <operator pos:start="61:50" pos:end="61:50">&gt;</operator> <name pos:start="61:52" pos:end="61:59">src_size</name></expr>)</condition><block pos:start="61:61" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:18">

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if><if type="elseif" pos:start="65:10" pos:end="79:9">else if<condition pos:start="65:17" pos:end="65:27">(<expr pos:start="65:18" pos:end="65:26"><name pos:start="65:18" pos:end="65:26"><name pos:start="65:18" pos:end="65:18">c</name><operator pos:start="65:19" pos:end="65:20">-&gt;</operator><name pos:start="65:21" pos:end="65:26">linear</name></name></expr>)</condition><block pos:start="65:28" pos:end="79:9">{<block_content pos:start="67:13" pos:end="77:53">

            <decl_stmt pos:start="67:13" pos:end="67:24"><decl pos:start="67:13" pos:end="67:23"><type pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:18">FELEM2</name></type> <name pos:start="67:20" pos:end="67:21">v2</name><init pos:start="67:22" pos:end="67:23">=<expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">0</literal></expr></init></decl>;</decl_stmt>

            <for pos:start="69:13" pos:end="75:13">for<control pos:start="69:16" pos:end="69:45">(<init pos:start="69:17" pos:end="69:20"><expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:17">i</name><operator pos:start="69:18" pos:end="69:18">=</operator><literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>;</init> <condition pos:start="69:22" pos:end="69:40"><expr pos:start="69:22" pos:end="69:39"><name pos:start="69:22" pos:end="69:22">i</name><operator pos:start="69:23" pos:end="69:23">&lt;</operator><name pos:start="69:24" pos:end="69:39"><name pos:start="69:24" pos:end="69:24">c</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:39">filter_length</name></name></expr>;</condition> <incr pos:start="69:42" pos:end="69:44"><expr pos:start="69:42" pos:end="69:44"><name pos:start="69:42" pos:end="69:42">i</name><operator pos:start="69:43" pos:end="69:44">++</operator></expr></incr>)</control><block pos:start="69:46" pos:end="75:13">{<block_content pos:start="71:17" pos:end="73:84">

                <expr_stmt pos:start="71:17" pos:end="71:65"><expr pos:start="71:17" pos:end="71:64"><name pos:start="71:17" pos:end="71:19">val</name> <operator pos:start="71:21" pos:end="71:22">+=</operator> <name pos:start="71:24" pos:end="71:44"><name pos:start="71:24" pos:end="71:26">src</name><index pos:start="71:27" pos:end="71:44">[<expr pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:39">sample_index</name> <operator pos:start="71:41" pos:end="71:41">+</operator> <name pos:start="71:43" pos:end="71:43">i</name></expr>]</index></name> <operator pos:start="71:46" pos:end="71:46">*</operator> <operator pos:start="71:48" pos:end="71:48">(</operator><name pos:start="71:49" pos:end="71:54">FELEM2</name><operator pos:start="71:55" pos:end="71:55">)</operator><name pos:start="71:56" pos:end="71:64"><name pos:start="71:56" pos:end="71:61">filter</name><index pos:start="71:62" pos:end="71:64">[<expr pos:start="71:63" pos:end="71:63"><name pos:start="71:63" pos:end="71:63">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:84"><expr pos:start="73:17" pos:end="73:83"><name pos:start="73:17" pos:end="73:18">v2</name>  <operator pos:start="73:21" pos:end="73:22">+=</operator> <name pos:start="73:24" pos:end="73:44"><name pos:start="73:24" pos:end="73:26">src</name><index pos:start="73:27" pos:end="73:44">[<expr pos:start="73:28" pos:end="73:43"><name pos:start="73:28" pos:end="73:39">sample_index</name> <operator pos:start="73:41" pos:end="73:41">+</operator> <name pos:start="73:43" pos:end="73:43">i</name></expr>]</index></name> <operator pos:start="73:46" pos:end="73:46">*</operator> <operator pos:start="73:48" pos:end="73:48">(</operator><name pos:start="73:49" pos:end="73:54">FELEM2</name><operator pos:start="73:55" pos:end="73:55">)</operator><name pos:start="73:56" pos:end="73:83"><name pos:start="73:56" pos:end="73:61">filter</name><index pos:start="73:62" pos:end="73:83">[<expr pos:start="73:63" pos:end="73:82"><name pos:start="73:63" pos:end="73:63">i</name> <operator pos:start="73:65" pos:end="73:65">+</operator> <name pos:start="73:67" pos:end="73:82"><name pos:start="73:67" pos:end="73:67">c</name><operator pos:start="73:68" pos:end="73:69">-&gt;</operator><name pos:start="73:70" pos:end="73:82">filter_length</name></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="77:13" pos:end="77:53"><expr pos:start="77:13" pos:end="77:52"><name pos:start="77:13" pos:end="77:15">val</name><operator pos:start="77:16" pos:end="77:17">+=</operator><operator pos:start="77:18" pos:end="77:18">(</operator><name pos:start="77:19" pos:end="77:20">v2</name><operator pos:start="77:21" pos:end="77:21">-</operator><name pos:start="77:22" pos:end="77:24">val</name><operator pos:start="77:25" pos:end="77:25">)</operator><operator pos:start="77:26" pos:end="77:26">*</operator><operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:33">FELEML</name><operator pos:start="77:34" pos:end="77:34">)</operator><name pos:start="77:35" pos:end="77:38">frac</name> <operator pos:start="77:40" pos:end="77:40">/</operator> <name pos:start="77:42" pos:end="77:52"><name pos:start="77:42" pos:end="77:42">c</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:52">src_incr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="79:10" pos:end="92:0">else<block pos:start="79:14" pos:end="92:0">{<block_content pos:start="81:13" pos:end="85:13">

            <for pos:start="81:13" pos:end="85:13">for<control pos:start="81:16" pos:end="81:45">(<init pos:start="81:17" pos:end="81:20"><expr pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:17">i</name><operator pos:start="81:18" pos:end="81:18">=</operator><literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>;</init> <condition pos:start="81:22" pos:end="81:40"><expr pos:start="81:22" pos:end="81:39"><name pos:start="81:22" pos:end="81:22">i</name><operator pos:start="81:23" pos:end="81:23">&lt;</operator><name pos:start="81:24" pos:end="81:39"><name pos:start="81:24" pos:end="81:24">c</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:39">filter_length</name></name></expr>;</condition> <incr pos:start="81:42" pos:end="81:44"><expr pos:start="81:42" pos:end="81:44"><name pos:start="81:42" pos:end="81:42">i</name><operator pos:start="81:43" pos:end="81:44">++</operator></expr></incr>)</control><block pos:start="81:46" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:65">

                <expr_stmt pos:start="83:17" pos:end="83:65"><expr pos:start="83:17" pos:end="83:64"><name pos:start="83:17" pos:end="83:19">val</name> <operator pos:start="83:21" pos:end="83:22">+=</operator> <name pos:start="83:24" pos:end="83:44"><name pos:start="83:24" pos:end="83:26">src</name><index pos:start="83:27" pos:end="83:44">[<expr pos:start="83:28" pos:end="83:43"><name pos:start="83:28" pos:end="83:39">sample_index</name> <operator pos:start="83:41" pos:end="83:41">+</operator> <name pos:start="83:43" pos:end="83:43">i</name></expr>]</index></name> <operator pos:start="83:46" pos:end="83:46">*</operator> <operator pos:start="83:48" pos:end="83:48">(</operator><name pos:start="83:49" pos:end="83:54">FELEM2</name><operator pos:start="83:55" pos:end="83:55">)</operator><name pos:start="83:56" pos:end="83:64"><name pos:start="83:56" pos:end="83:61">filter</name><index pos:start="83:62" pos:end="83:64">[<expr pos:start="83:63" pos:end="83:63"><name pos:start="83:63" pos:end="83:63">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>



<cpp:ifdef pos:start="91:1" pos:end="91:44">#<cpp:directive pos:start="91:2" pos:end="91:6">ifdef</cpp:directive> <name pos:start="91:8" pos:end="91:44">CONFIG_RESAMPLE_AUDIOPHILE_KIDDY_MODE</name></cpp:ifdef>

        <expr_stmt pos:start="93:9" pos:end="96:0"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:11">dst</name><index pos:start="93:12" pos:end="93:22">[<expr pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:21">dst_index</name></expr>]</index></name> <operator pos:start="93:24" pos:end="93:24">=</operator> <call pos:start="93:26" pos:end="93:51"><name pos:start="93:26" pos:end="93:38">av_clip_int16</name><argument_list pos:start="93:39" pos:end="93:51">(<argument pos:start="93:40" pos:end="93:50"><expr pos:start="93:40" pos:end="93:50"><call pos:start="93:40" pos:end="93:50"><name pos:start="93:40" pos:end="93:45">lrintf</name><argument_list pos:start="93:46" pos:end="93:50">(<argument pos:start="93:47" pos:end="93:49"><expr pos:start="93:47" pos:end="93:49"><name pos:start="93:47" pos:end="93:49">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="95:1" pos:end="95:5">#<cpp:directive pos:start="95:2" pos:end="95:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="97:9" pos:end="97:58"><expr pos:start="97:9" pos:end="97:57"><name pos:start="97:9" pos:end="97:11">val</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">(</operator><name pos:start="97:16" pos:end="97:18">val</name> <operator pos:start="97:20" pos:end="97:20">+</operator> <operator pos:start="97:22" pos:end="97:22">(</operator><literal type="number" pos:start="97:23" pos:end="97:23">1</literal><operator pos:start="97:24" pos:end="97:25">&lt;&lt;</operator><operator pos:start="97:26" pos:end="97:26">(</operator><name pos:start="97:27" pos:end="97:38">FILTER_SHIFT</name><operator pos:start="97:39" pos:end="97:39">-</operator><literal type="number" pos:start="97:40" pos:end="97:40">1</literal><operator pos:start="97:41" pos:end="97:41">)</operator><operator pos:start="97:42" pos:end="97:42">)</operator><operator pos:start="97:43" pos:end="97:43">)</operator><operator pos:start="97:44" pos:end="97:45">&gt;&gt;</operator><name pos:start="97:46" pos:end="97:57">FILTER_SHIFT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="102:0"><expr pos:start="99:9" pos:end="99:82"><name pos:start="99:9" pos:end="99:22"><name pos:start="99:9" pos:end="99:11">dst</name><index pos:start="99:12" pos:end="99:22">[<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:21">dst_index</name></expr>]</index></name> <operator pos:start="99:24" pos:end="99:24">=</operator> <ternary pos:start="99:26" pos:end="99:82"><condition pos:start="99:26" pos:end="99:58"><expr pos:start="99:26" pos:end="99:56"><operator pos:start="99:26" pos:end="99:26">(</operator><name pos:start="99:27" pos:end="99:34">unsigned</name><operator pos:start="99:35" pos:end="99:35">)</operator><operator pos:start="99:36" pos:end="99:36">(</operator><name pos:start="99:37" pos:end="99:39">val</name> <operator pos:start="99:41" pos:end="99:41">+</operator> <literal type="number" pos:start="99:43" pos:end="99:47">32768</literal><operator pos:start="99:48" pos:end="99:48">)</operator> <operator pos:start="99:50" pos:end="99:50">&gt;</operator> <literal type="number" pos:start="99:52" pos:end="99:56">65535</literal></expr> ?</condition><then pos:start="99:60" pos:end="99:76"> <expr pos:start="99:60" pos:end="99:76"><operator pos:start="99:60" pos:end="99:60">(</operator><name pos:start="99:61" pos:end="99:63">val</name><operator pos:start="99:64" pos:end="99:65">&gt;&gt;</operator><literal type="number" pos:start="99:66" pos:end="99:67">31</literal><operator pos:start="99:68" pos:end="99:68">)</operator> <operator pos:start="99:70" pos:end="99:70">^</operator> <literal type="number" pos:start="99:72" pos:end="99:76">32767</literal></expr> </then><else pos:start="99:78" pos:end="99:82">: <expr pos:start="99:80" pos:end="99:82"><name pos:start="99:80" pos:end="99:82">val</name></expr></else></ternary></expr>;</expr_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>



        <expr_stmt pos:start="105:9" pos:end="105:30"><expr pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:12">frac</name> <operator pos:start="105:14" pos:end="105:15">+=</operator> <name pos:start="105:17" pos:end="105:29">dst_incr_frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:26"><expr pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:13">index</name> <operator pos:start="107:15" pos:end="107:16">+=</operator> <name pos:start="107:18" pos:end="107:25">dst_incr</name></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if<condition pos:start="109:11" pos:end="109:31">(<expr pos:start="109:12" pos:end="109:30"><name pos:start="109:12" pos:end="109:15">frac</name> <operator pos:start="109:17" pos:end="109:18">&gt;=</operator> <name pos:start="109:20" pos:end="109:30"><name pos:start="109:20" pos:end="109:20">c</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:30">src_incr</name></name></expr>)</condition><block pos:start="109:32" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:20">

            <expr_stmt pos:start="111:13" pos:end="111:32"><expr pos:start="111:13" pos:end="111:31"><name pos:start="111:13" pos:end="111:16">frac</name> <operator pos:start="111:18" pos:end="111:19">-=</operator> <name pos:start="111:21" pos:end="111:31"><name pos:start="111:21" pos:end="111:21">c</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:31">src_incr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:20"><expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:17">index</name><operator pos:start="113:18" pos:end="113:19">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="127:9"><if pos:start="119:9" pos:end="127:9">if<condition pos:start="119:11" pos:end="119:50">(<expr pos:start="119:12" pos:end="119:49"><name pos:start="119:12" pos:end="119:20">dst_index</name> <operator pos:start="119:22" pos:end="119:22">+</operator> <literal type="number" pos:start="119:24" pos:end="119:24">1</literal> <operator pos:start="119:26" pos:end="119:27">==</operator> <name pos:start="119:29" pos:end="119:49">compensation_distance</name></expr>)</condition><block pos:start="119:51" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:59">

            <expr_stmt pos:start="121:13" pos:end="121:37"><expr pos:start="121:13" pos:end="121:36"><name pos:start="121:13" pos:end="121:33">compensation_distance</name><operator pos:start="121:34" pos:end="121:34">=</operator> <literal type="number" pos:start="121:36" pos:end="121:36">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:59"><expr pos:start="123:13" pos:end="123:58"><name pos:start="123:13" pos:end="123:25">dst_incr_frac</name><operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:44"><name pos:start="123:28" pos:end="123:28">c</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:44">ideal_dst_incr</name></name> <operator pos:start="123:46" pos:end="123:46">%</operator> <name pos:start="123:48" pos:end="123:58"><name pos:start="123:48" pos:end="123:48">c</name><operator pos:start="123:49" pos:end="123:50">-&gt;</operator><name pos:start="123:51" pos:end="123:58">src_incr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:59"><expr pos:start="125:13" pos:end="125:58"><name pos:start="125:13" pos:end="125:20">dst_incr</name><operator pos:start="125:21" pos:end="125:21">=</operator>      <name pos:start="125:28" pos:end="125:44"><name pos:start="125:28" pos:end="125:28">c</name><operator pos:start="125:29" pos:end="125:30">-&gt;</operator><name pos:start="125:31" pos:end="125:44">ideal_dst_incr</name></name> <operator pos:start="125:46" pos:end="125:46">/</operator> <name pos:start="125:48" pos:end="125:58"><name pos:start="125:48" pos:end="125:48">c</name><operator pos:start="125:49" pos:end="125:50">-&gt;</operator><name pos:start="125:51" pos:end="125:58">src_incr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

  </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:49"><expr pos:start="133:5" pos:end="133:48"><operator pos:start="133:5" pos:end="133:5">*</operator><name pos:start="133:6" pos:end="133:13">consumed</name><operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:30"><name pos:start="133:16" pos:end="133:20">FFMAX</name><argument_list pos:start="133:21" pos:end="133:30">(<argument pos:start="133:22" pos:end="133:26"><expr pos:start="133:22" pos:end="133:26"><name pos:start="133:22" pos:end="133:26">index</name></expr></argument>, <argument pos:start="133:29" pos:end="133:29"><expr pos:start="133:29" pos:end="133:29"><literal type="number" pos:start="133:29" pos:end="133:29">0</literal></expr></argument>)</argument_list></call> <operator pos:start="133:32" pos:end="133:33">&gt;&gt;</operator> <name pos:start="133:35" pos:end="133:48"><name pos:start="133:35" pos:end="133:35">c</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:48">phase_shift</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="135:40"><if pos:start="135:5" pos:end="135:40">if<condition pos:start="135:7" pos:end="135:16">(<expr pos:start="135:8" pos:end="135:15"><name pos:start="135:8" pos:end="135:12">index</name><operator pos:start="135:13" pos:end="135:14">&gt;=</operator><literal type="number" pos:start="135:15" pos:end="135:15">0</literal></expr>)</condition><block type="pseudo" pos:start="135:18" pos:end="135:40"><block_content pos:start="135:18" pos:end="135:40"> <expr_stmt pos:start="135:18" pos:end="135:40"><expr pos:start="135:18" pos:end="135:39"><name pos:start="135:18" pos:end="135:22">index</name> <operator pos:start="135:24" pos:end="135:25">&amp;=</operator> <name pos:start="135:27" pos:end="135:39"><name pos:start="135:27" pos:end="135:27">c</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:39">phase_mask</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if<condition pos:start="139:7" pos:end="139:29">(<expr pos:start="139:8" pos:end="139:28"><name pos:start="139:8" pos:end="139:28">compensation_distance</name></expr>)</condition><block pos:start="139:30" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:42">

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:29">compensation_distance</name> <operator pos:start="141:31" pos:end="141:32">-=</operator> <name pos:start="141:34" pos:end="141:42">dst_index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:42"><expr pos:start="143:9" pos:end="143:41"><call pos:start="143:9" pos:end="143:41"><name pos:start="143:9" pos:end="143:14">assert</name><argument_list pos:start="143:15" pos:end="143:41">(<argument pos:start="143:16" pos:end="143:40"><expr pos:start="143:16" pos:end="143:40"><name pos:start="143:16" pos:end="143:36">compensation_distance</name> <operator pos:start="143:38" pos:end="143:38">&gt;</operator> <literal type="number" pos:start="143:40" pos:end="143:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="147:5" pos:end="172:0"><if pos:start="147:5" pos:end="172:0">if<condition pos:start="147:7" pos:end="147:18">(<expr pos:start="147:8" pos:end="147:17"><name pos:start="147:8" pos:end="147:17">update_ctx</name></expr>)</condition><block pos:start="147:19" pos:end="172:0">{<block_content pos:start="149:9" pos:end="155:56">

        <expr_stmt pos:start="149:9" pos:end="149:22"><expr pos:start="149:9" pos:end="149:21"><name pos:start="149:9" pos:end="149:15"><name pos:start="149:9" pos:end="149:9">c</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">frac</name></name><operator pos:start="149:16" pos:end="149:16">=</operator> <name pos:start="149:18" pos:end="149:21">frac</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:24"><expr pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:9">c</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:16">index</name></name><operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:23">index</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:58"><expr pos:start="153:9" pos:end="153:57"><name pos:start="153:9" pos:end="153:19"><name pos:start="153:9" pos:end="153:9">c</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:19">dst_incr</name></name><operator pos:start="153:20" pos:end="153:20">=</operator> <name pos:start="153:22" pos:end="153:34">dst_incr_frac</name> <operator pos:start="153:36" pos:end="153:36">+</operator> <name pos:start="153:38" pos:end="153:48"><name pos:start="153:38" pos:end="153:38">c</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:48">src_incr</name></name><operator pos:start="153:49" pos:end="153:49">*</operator><name pos:start="153:50" pos:end="153:57">dst_incr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:56"><expr pos:start="155:9" pos:end="155:55"><name pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:9">c</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:32">compensation_distance</name></name><operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:55">compensation_distance</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="159:1" pos:end="159:5">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:5"><literal type="number" pos:start="159:5" pos:end="159:5">0</literal></expr></cpp:if>

    if(update_ctx &amp;&amp; !c-&gt;compensation_distance){

<cpp:undef pos:start="163:1" pos:end="163:11">#<cpp:directive pos:start="163:2" pos:end="163:6">undef</cpp:directive> <name pos:start="163:8" pos:end="163:11">rand</name></cpp:undef>

        av_resample_compensate(c, rand() % (8000*2) - 8000, 8000*2);

av_log(NULL, AV_LOG_DEBUG, "%d %d %d\n", c-&gt;dst_incr, c-&gt;ideal_dst_incr, c-&gt;compensation_distance);

    }

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>



    <return pos:start="175:5" pos:end="175:21">return <expr pos:start="175:12" pos:end="175:20"><name pos:start="175:12" pos:end="175:20">dst_index</name></expr>;</return>

</block_content>}</block></function>
</unit>
