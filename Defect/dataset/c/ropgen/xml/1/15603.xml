<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15603.c" pos:tabs="8"><function pos:start="1:1" pos:end="321:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">compute_pkt_fields</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">AVStream</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">st</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:55"><decl pos:start="3:32" pos:end="3:55"><type pos:start="3:32" pos:end="3:55"><name pos:start="3:32" pos:end="3:51">AVCodecParserContext</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:55">pc</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:70"><decl pos:start="3:58" pos:end="3:70"><type pos:start="3:58" pos:end="3:70"><name pos:start="3:58" pos:end="3:65">AVPacket</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:70">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="321:1">{<block_content pos:start="7:5" pos:end="319:61">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">num</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">den</name></decl>, <decl pos:start="7:19" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:38">presentation_delayed</name></decl>, <decl pos:start="7:41" pos:end="7:45"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:41" pos:end="7:45">delay</name></decl>, <decl pos:start="7:48" pos:end="7:48"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:48" pos:end="7:48">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:18">offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">flags</name></name> <operator pos:start="13:18" pos:end="13:18">&amp;</operator> <name pos:start="13:20" pos:end="13:38">AVFMT_FLAG_NOFILLIN</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="21:33"><if pos:start="19:5" pos:end="21:33">if<condition pos:start="19:7" pos:end="19:68">(<expr pos:start="19:8" pos:end="19:67"><operator pos:start="19:8" pos:end="19:8">(</operator><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">flags</name></name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:36">AVFMT_FLAG_IGNDTS</name><operator pos:start="19:37" pos:end="19:37">)</operator> <operator pos:start="19:39" pos:end="19:40">&amp;&amp;</operator> <name pos:start="19:42" pos:end="19:49"><name pos:start="19:42" pos:end="19:44">pkt</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:49">pts</name></name> <operator pos:start="19:51" pos:end="19:52">!=</operator> <name pos:start="19:54" pos:end="19:67">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:33"><block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">pkt</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:16">dts</name></name><operator pos:start="21:17" pos:end="21:17">=</operator> <name pos:start="21:19" pos:end="21:32">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="29:36"><if pos:start="25:5" pos:end="29:36">if <condition pos:start="25:8" pos:end="25:89">(<expr pos:start="25:9" pos:end="25:88"><name pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:10">st</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">codec</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">codec_id</name></name> <operator pos:start="25:29" pos:end="25:30">!=</operator> <name pos:start="25:32" pos:end="25:44">CODEC_ID_H264</name> <operator pos:start="25:46" pos:end="25:47">&amp;&amp;</operator> <name pos:start="25:49" pos:end="25:50">pc</name> <operator pos:start="25:52" pos:end="25:53">&amp;&amp;</operator> <name pos:start="25:55" pos:end="25:67"><name pos:start="25:55" pos:end="25:56">pc</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:67">pict_type</name></name> <operator pos:start="25:69" pos:end="25:70">==</operator> <name pos:start="25:72" pos:end="25:88">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:36"><block_content pos:start="29:9" pos:end="29:36">

        <comment type="line" pos:start="27:9" pos:end="27:55">//FIXME Set low_delay = 0 when has_b_frames = 1</comment>

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:10">st</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">codec</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:31">has_b_frames</name></name> <operator pos:start="29:33" pos:end="29:33">=</operator> <literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:38">/* do we have a video B-frame ? */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:35"><expr pos:start="35:5" pos:end="35:34"><name pos:start="35:5" pos:end="35:9">delay</name><operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:34"><name pos:start="35:12" pos:end="35:13">st</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:20">codec</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:34">has_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:24">presentation_delayed</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <literal type="number" pos:start="37:28" pos:end="37:28">0</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:75">// ignore delay caused by frame threading so that the mpeg2-without-dts</comment>

    <comment type="line" pos:start="43:5" pos:end="43:31">// warning will not trigger</comment>

    <if_stmt pos:start="45:5" pos:end="47:43"><if pos:start="45:5" pos:end="47:43">if <condition pos:start="45:8" pos:end="45:63">(<expr pos:start="45:9" pos:end="45:62"><name pos:start="45:9" pos:end="45:13">delay</name> <operator pos:start="45:15" pos:end="45:16">&amp;&amp;</operator> <name pos:start="45:18" pos:end="45:46"><name pos:start="45:18" pos:end="45:19">st</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:26">codec</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:46">active_thread_type</name></name><operator pos:start="45:47" pos:end="45:47">&amp;</operator><name pos:start="45:48" pos:end="45:62">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:43"><block_content pos:start="47:9" pos:end="47:43">

        <expr_stmt pos:start="47:9" pos:end="47:43"><expr pos:start="47:9" pos:end="47:42"><name pos:start="47:9" pos:end="47:13">delay</name> <operator pos:start="47:15" pos:end="47:16">-=</operator> <name pos:start="47:18" pos:end="47:40"><name pos:start="47:18" pos:end="47:19">st</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">codec</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:40">thread_count</name></name><operator pos:start="47:41" pos:end="47:41">-</operator><literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="53:26">/* XXX: need has_b_frame, but cannot get it if the codec is

        not initialized */</comment>

    <if_stmt pos:start="55:5" pos:end="59:33"><if pos:start="55:5" pos:end="59:33">if <condition pos:start="55:8" pos:end="57:49">(<expr pos:start="55:9" pos:end="57:48"><name pos:start="55:9" pos:end="55:13">delay</name> <operator pos:start="55:15" pos:end="55:16">&amp;&amp;</operator>

        <name pos:start="57:9" pos:end="57:10">pc</name> <operator pos:start="57:12" pos:end="57:13">&amp;&amp;</operator> <name pos:start="57:15" pos:end="57:27"><name pos:start="57:15" pos:end="57:16">pc</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:27">pict_type</name></name> <operator pos:start="57:29" pos:end="57:30">!=</operator> <name pos:start="57:32" pos:end="57:48">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:33"><block_content pos:start="59:9" pos:end="59:33">

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:28">presentation_delayed</name> <operator pos:start="59:30" pos:end="59:30">=</operator> <literal type="number" pos:start="59:32" pos:end="59:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if<condition pos:start="63:7" pos:end="63:142">(<expr pos:start="63:8" pos:end="63:141"><name pos:start="63:8" pos:end="63:15"><name pos:start="63:8" pos:end="63:10">pkt</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:15">pts</name></name> <operator pos:start="63:17" pos:end="63:18">!=</operator> <name pos:start="63:20" pos:end="63:33">AV_NOPTS_VALUE</name> <operator pos:start="63:35" pos:end="63:36">&amp;&amp;</operator> <name pos:start="63:38" pos:end="63:45"><name pos:start="63:38" pos:end="63:40">pkt</name><operator pos:start="63:41" pos:end="63:42">-&gt;</operator><name pos:start="63:43" pos:end="63:45">dts</name></name> <operator pos:start="63:47" pos:end="63:48">!=</operator> <name pos:start="63:50" pos:end="63:63">AV_NOPTS_VALUE</name> <operator pos:start="63:65" pos:end="63:66">&amp;&amp;</operator> <name pos:start="63:68" pos:end="63:75"><name pos:start="63:68" pos:end="63:70">pkt</name><operator pos:start="63:71" pos:end="63:72">-&gt;</operator><name pos:start="63:73" pos:end="63:75">dts</name></name> <operator pos:start="63:77" pos:end="63:77">-</operator> <operator pos:start="63:79" pos:end="63:79">(</operator><literal type="number" pos:start="63:80" pos:end="63:82">1LL</literal><operator pos:start="63:83" pos:end="63:84">&lt;&lt;</operator><operator pos:start="63:85" pos:end="63:85">(</operator><name pos:start="63:86" pos:end="63:102"><name pos:start="63:86" pos:end="63:87">st</name><operator pos:start="63:88" pos:end="63:89">-&gt;</operator><name pos:start="63:90" pos:end="63:102">pts_wrap_bits</name></name><operator pos:start="63:103" pos:end="63:103">-</operator><literal type="number" pos:start="63:104" pos:end="63:104">1</literal><operator pos:start="63:105" pos:end="63:105">)</operator><operator pos:start="63:106" pos:end="63:106">)</operator> <operator pos:start="63:108" pos:end="63:108">&gt;</operator> <name pos:start="63:110" pos:end="63:117"><name pos:start="63:110" pos:end="63:112">pkt</name><operator pos:start="63:113" pos:end="63:114">-&gt;</operator><name pos:start="63:115" pos:end="63:117">pts</name></name> <operator pos:start="63:119" pos:end="63:120">&amp;&amp;</operator> <name pos:start="63:122" pos:end="63:138"><name pos:start="63:122" pos:end="63:123">st</name><operator pos:start="63:124" pos:end="63:125">-&gt;</operator><name pos:start="63:126" pos:end="63:138">pts_wrap_bits</name></name><operator pos:start="63:139" pos:end="63:139">&lt;</operator><literal type="number" pos:start="63:140" pos:end="63:141">63</literal></expr>)</condition><block pos:start="63:143" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:43">

        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">pkt</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:16">dts</name></name> <operator pos:start="65:18" pos:end="65:19">-=</operator> <literal type="number" pos:start="65:21" pos:end="65:23">1LL</literal><operator pos:start="65:24" pos:end="65:25">&lt;&lt;</operator><name pos:start="65:26" pos:end="65:42"><name pos:start="65:26" pos:end="65:27">st</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:42">pts_wrap_bits</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="71:5" pos:end="71:65">// some mpeg2 in mpeg-ps lack dts (issue171 / input_file.mpg)</comment>

    <comment type="line" pos:start="73:5" pos:end="73:57">// we take the conservative approach and discard both</comment>

    <comment type="line" pos:start="75:5" pos:end="75:109">// Note, if this is misbehaving for a H.264 file then possibly presentation_delayed is not set correctly.</comment>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if<condition pos:start="77:7" pos:end="77:94">(<expr pos:start="77:8" pos:end="77:93"><name pos:start="77:8" pos:end="77:12">delay</name><operator pos:start="77:13" pos:end="77:14">==</operator><literal type="number" pos:start="77:15" pos:end="77:15">1</literal> <operator pos:start="77:17" pos:end="77:18">&amp;&amp;</operator> <name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:22">pkt</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:27">dts</name></name> <operator pos:start="77:29" pos:end="77:30">==</operator> <name pos:start="77:32" pos:end="77:39"><name pos:start="77:32" pos:end="77:34">pkt</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:39">pts</name></name> <operator pos:start="77:41" pos:end="77:42">&amp;&amp;</operator> <name pos:start="77:44" pos:end="77:51"><name pos:start="77:44" pos:end="77:46">pkt</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:51">dts</name></name> <operator pos:start="77:53" pos:end="77:54">!=</operator> <name pos:start="77:56" pos:end="77:69">AV_NOPTS_VALUE</name> <operator pos:start="77:71" pos:end="77:72">&amp;&amp;</operator> <name pos:start="77:74" pos:end="77:93">presentation_delayed</name></expr>)</condition><block pos:start="77:95" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:43">

        <expr_stmt pos:start="79:9" pos:end="79:85"><expr pos:start="79:9" pos:end="79:84"><call pos:start="79:9" pos:end="79:84"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:84">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">s</name></expr></argument>, <argument pos:start="79:19" pos:end="79:30"><expr pos:start="79:19" pos:end="79:30"><name pos:start="79:19" pos:end="79:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:33" pos:end="79:73"><expr pos:start="79:33" pos:end="79:73"><literal type="string" pos:start="79:33" pos:end="79:63">"invalid dts/pts combination %"</literal><name pos:start="79:64" pos:end="79:69">PRIi64</name><literal type="string" pos:start="79:70" pos:end="79:73">"\n"</literal></expr></argument>, <argument pos:start="79:76" pos:end="79:83"><expr pos:start="79:76" pos:end="79:83"><name pos:start="79:76" pos:end="79:83"><name pos:start="79:76" pos:end="79:78">pkt</name><operator pos:start="79:79" pos:end="79:80">-&gt;</operator><name pos:start="79:81" pos:end="79:83">dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:43"><expr pos:start="81:9" pos:end="81:42"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:11">pkt</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">dts</name></name><operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:26"><name pos:start="81:19" pos:end="81:21">pkt</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:26">pts</name></name><operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:42">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="103:5"><if pos:start="87:5" pos:end="103:5">if <condition pos:start="87:8" pos:end="87:27">(<expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">pkt</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:21">duration</name></name> <operator pos:start="87:23" pos:end="87:24">==</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>)</condition> <block pos:start="87:29" pos:end="103:5">{<block_content pos:start="89:9" pos:end="101:9">

        <expr_stmt pos:start="89:9" pos:end="89:56"><expr pos:start="89:9" pos:end="89:55"><call pos:start="89:9" pos:end="89:55"><name pos:start="89:9" pos:end="89:30">compute_frame_duration</name><argument_list pos:start="89:31" pos:end="89:55">(<argument pos:start="89:32" pos:end="89:35"><expr pos:start="89:32" pos:end="89:35"><operator pos:start="89:32" pos:end="89:32">&amp;</operator><name pos:start="89:33" pos:end="89:35">num</name></expr></argument>, <argument pos:start="89:38" pos:end="89:41"><expr pos:start="89:38" pos:end="89:41"><operator pos:start="89:38" pos:end="89:38">&amp;</operator><name pos:start="89:39" pos:end="89:41">den</name></expr></argument>, <argument pos:start="89:44" pos:end="89:45"><expr pos:start="89:44" pos:end="89:45"><name pos:start="89:44" pos:end="89:45">st</name></expr></argument>, <argument pos:start="89:48" pos:end="89:49"><expr pos:start="89:48" pos:end="89:49"><name pos:start="89:48" pos:end="89:49">pc</name></expr></argument>, <argument pos:start="89:52" pos:end="89:54"><expr pos:start="89:52" pos:end="89:54"><name pos:start="89:52" pos:end="89:54">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="101:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="91:23">(<expr pos:start="91:13" pos:end="91:22"><name pos:start="91:13" pos:end="91:15">den</name> <operator pos:start="91:17" pos:end="91:18">&amp;&amp;</operator> <name pos:start="91:20" pos:end="91:22">num</name></expr>)</condition> <block pos:start="91:25" pos:end="101:9">{<block_content pos:start="93:13" pos:end="99:53">

            <expr_stmt pos:start="93:13" pos:end="93:129"><expr pos:start="93:13" pos:end="93:128"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:15">pkt</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:25">duration</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="93:128"><name pos:start="93:29" pos:end="93:42">av_rescale_rnd</name><argument_list pos:start="93:43" pos:end="93:128">(<argument pos:start="93:44" pos:end="93:44"><expr pos:start="93:44" pos:end="93:44"><literal type="number" pos:start="93:44" pos:end="93:44">1</literal></expr></argument>, <argument pos:start="93:47" pos:end="93:78"><expr pos:start="93:47" pos:end="93:78"><name pos:start="93:47" pos:end="93:49">num</name> <operator pos:start="93:51" pos:end="93:51">*</operator> <operator pos:start="93:53" pos:end="93:53">(</operator><name pos:start="93:54" pos:end="93:60">int64_t</name><operator pos:start="93:61" pos:end="93:61">)</operator><name pos:start="93:62" pos:end="93:78"><name pos:start="93:62" pos:end="93:63">st</name><operator pos:start="93:64" pos:end="93:65">-&gt;</operator><name pos:start="93:66" pos:end="93:74">time_base</name><operator pos:start="93:75" pos:end="93:75">.</operator><name pos:start="93:76" pos:end="93:78">den</name></name></expr></argument>, <argument pos:start="93:81" pos:end="93:112"><expr pos:start="93:81" pos:end="93:112"><name pos:start="93:81" pos:end="93:83">den</name> <operator pos:start="93:85" pos:end="93:85">*</operator> <operator pos:start="93:87" pos:end="93:87">(</operator><name pos:start="93:88" pos:end="93:94">int64_t</name><operator pos:start="93:95" pos:end="93:95">)</operator><name pos:start="93:96" pos:end="93:112"><name pos:start="93:96" pos:end="93:97">st</name><operator pos:start="93:98" pos:end="93:99">-&gt;</operator><name pos:start="93:100" pos:end="93:108">time_base</name><operator pos:start="93:109" pos:end="93:109">.</operator><name pos:start="93:110" pos:end="93:112">num</name></name></expr></argument>, <argument pos:start="93:115" pos:end="93:127"><expr pos:start="93:115" pos:end="93:127"><name pos:start="93:115" pos:end="93:127">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="97:13" pos:end="99:53"><if pos:start="97:13" pos:end="99:53">if<condition pos:start="97:15" pos:end="97:54">(<expr pos:start="97:16" pos:end="97:53"><name pos:start="97:16" pos:end="97:28"><name pos:start="97:16" pos:end="97:18">pkt</name><operator pos:start="97:19" pos:end="97:20">-&gt;</operator><name pos:start="97:21" pos:end="97:28">duration</name></name> <operator pos:start="97:30" pos:end="97:31">!=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal> <operator pos:start="97:35" pos:end="97:36">&amp;&amp;</operator> <name pos:start="97:38" pos:end="97:53"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:53">packet_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:53"><block_content pos:start="99:17" pos:end="99:53">

                <expr_stmt pos:start="99:17" pos:end="99:53"><expr pos:start="99:17" pos:end="99:52"><call pos:start="99:17" pos:end="99:52"><name pos:start="99:17" pos:end="99:40">update_initial_durations</name><argument_list pos:start="99:41" pos:end="99:52">(<argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><name pos:start="99:42" pos:end="99:42">s</name></expr></argument>, <argument pos:start="99:45" pos:end="99:46"><expr pos:start="99:45" pos:end="99:46"><name pos:start="99:45" pos:end="99:46">st</name></expr></argument>, <argument pos:start="99:49" pos:end="99:51"><expr pos:start="99:49" pos:end="99:51"><name pos:start="99:49" pos:end="99:51">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="109:30">/* correct timestamps with byte offset if demuxers only have timestamps

       on packet boundaries */</comment>

    <if_stmt pos:start="111:5" pos:end="125:5"><if pos:start="111:5" pos:end="125:5">if<condition pos:start="111:7" pos:end="111:72">(<expr pos:start="111:8" pos:end="111:71"><name pos:start="111:8" pos:end="111:9">pc</name> <operator pos:start="111:11" pos:end="111:12">&amp;&amp;</operator> <name pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:15">st</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:29">need_parsing</name></name> <operator pos:start="111:31" pos:end="111:32">==</operator> <name pos:start="111:34" pos:end="111:58">AVSTREAM_PARSE_TIMESTAMPS</name> <operator pos:start="111:60" pos:end="111:61">&amp;&amp;</operator> <name pos:start="111:63" pos:end="111:71"><name pos:start="111:63" pos:end="111:65">pkt</name><operator pos:start="111:66" pos:end="111:67">-&gt;</operator><name pos:start="111:68" pos:end="111:71">size</name></name></expr>)</condition><block pos:start="111:73" pos:end="125:5">{<block_content pos:start="115:9" pos:end="123:31">

        <comment type="block" pos:start="113:9" pos:end="113:80">/* this will estimate bitrate based on this frame's duration and size */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:66"><expr pos:start="115:9" pos:end="115:65"><name pos:start="115:9" pos:end="115:14">offset</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <call pos:start="115:18" pos:end="115:65"><name pos:start="115:18" pos:end="115:27">av_rescale</name><argument_list pos:start="115:28" pos:end="115:65">(<argument pos:start="115:29" pos:end="115:38"><expr pos:start="115:29" pos:end="115:38"><name pos:start="115:29" pos:end="115:38"><name pos:start="115:29" pos:end="115:30">pc</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:38">offset</name></name></expr></argument>, <argument pos:start="115:41" pos:end="115:53"><expr pos:start="115:41" pos:end="115:53"><name pos:start="115:41" pos:end="115:53"><name pos:start="115:41" pos:end="115:43">pkt</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:53">duration</name></name></expr></argument>, <argument pos:start="115:56" pos:end="115:64"><expr pos:start="115:56" pos:end="115:64"><name pos:start="115:56" pos:end="115:64"><name pos:start="115:56" pos:end="115:58">pkt</name><operator pos:start="115:59" pos:end="115:60">-&gt;</operator><name pos:start="115:61" pos:end="115:64">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="117:9" pos:end="119:31"><if pos:start="117:9" pos:end="119:31">if<condition pos:start="117:11" pos:end="117:38">(<expr pos:start="117:12" pos:end="117:37"><name pos:start="117:12" pos:end="117:19"><name pos:start="117:12" pos:end="117:14">pkt</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:19">pts</name></name> <operator pos:start="117:21" pos:end="117:22">!=</operator> <name pos:start="117:24" pos:end="117:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="119:31"><block_content pos:start="119:13" pos:end="119:31">

            <expr_stmt pos:start="119:13" pos:end="119:31"><expr pos:start="119:13" pos:end="119:30"><name pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:15">pkt</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:20">pts</name></name> <operator pos:start="119:22" pos:end="119:23">+=</operator> <name pos:start="119:25" pos:end="119:30">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:31"><if pos:start="121:9" pos:end="123:31">if<condition pos:start="121:11" pos:end="121:38">(<expr pos:start="121:12" pos:end="121:37"><name pos:start="121:12" pos:end="121:19"><name pos:start="121:12" pos:end="121:14">pkt</name><operator pos:start="121:15" pos:end="121:16">-&gt;</operator><name pos:start="121:17" pos:end="121:19">dts</name></name> <operator pos:start="121:21" pos:end="121:22">!=</operator> <name pos:start="121:24" pos:end="121:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:31"><block_content pos:start="123:13" pos:end="123:31">

            <expr_stmt pos:start="123:13" pos:end="123:31"><expr pos:start="123:13" pos:end="123:30"><name pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:15">pkt</name><operator pos:start="123:16" pos:end="123:17">-&gt;</operator><name pos:start="123:18" pos:end="123:20">dts</name></name> <operator pos:start="123:22" pos:end="123:23">+=</operator> <name pos:start="123:25" pos:end="123:30">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="129:5" pos:end="163:5"><if pos:start="129:5" pos:end="163:5">if <condition pos:start="129:8" pos:end="129:38">(<expr pos:start="129:9" pos:end="129:37"><name pos:start="129:9" pos:end="129:10">pc</name> <operator pos:start="129:12" pos:end="129:13">&amp;&amp;</operator> <name pos:start="129:15" pos:end="129:32"><name pos:start="129:15" pos:end="129:16">pc</name><operator pos:start="129:17" pos:end="129:18">-&gt;</operator><name pos:start="129:19" pos:end="129:32">dts_sync_point</name></name> <operator pos:start="129:34" pos:end="129:35">&gt;=</operator> <literal type="number" pos:start="129:37" pos:end="129:37">0</literal></expr>)</condition> <block pos:start="129:40" pos:end="163:5">{<block_content pos:start="133:9" pos:end="161:9">

        <comment type="line" pos:start="131:9" pos:end="131:55">// we have synchronization info from the parser</comment>

        <decl_stmt pos:start="133:9" pos:end="133:77"><decl pos:start="133:9" pos:end="133:76"><type pos:start="133:9" pos:end="133:15"><name pos:start="133:9" pos:end="133:15">int64_t</name></type> <name pos:start="133:17" pos:end="133:19">den</name> <init pos:start="133:21" pos:end="133:76">= <expr pos:start="133:23" pos:end="133:76"><name pos:start="133:23" pos:end="133:46"><name pos:start="133:23" pos:end="133:24">st</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">codec</name><operator pos:start="133:32" pos:end="133:33">-&gt;</operator><name pos:start="133:34" pos:end="133:42">time_base</name><operator pos:start="133:43" pos:end="133:43">.</operator><name pos:start="133:44" pos:end="133:46">den</name></name> <operator pos:start="133:48" pos:end="133:48">*</operator> <operator pos:start="133:50" pos:end="133:50">(</operator><name pos:start="133:51" pos:end="133:57">int64_t</name><operator pos:start="133:58" pos:end="133:58">)</operator> <name pos:start="133:60" pos:end="133:76"><name pos:start="133:60" pos:end="133:61">st</name><operator pos:start="133:62" pos:end="133:63">-&gt;</operator><name pos:start="133:64" pos:end="133:72">time_base</name><operator pos:start="133:73" pos:end="133:73">.</operator><name pos:start="133:74" pos:end="133:76">num</name></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="135:9" pos:end="161:9"><if pos:start="135:9" pos:end="161:9">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">den</name> <operator pos:start="135:17" pos:end="135:17">&gt;</operator> <literal type="number" pos:start="135:19" pos:end="135:19">0</literal></expr>)</condition> <block pos:start="135:22" pos:end="161:9">{<block_content pos:start="137:13" pos:end="159:45">

            <decl_stmt pos:start="137:13" pos:end="137:81"><decl pos:start="137:13" pos:end="137:80"><type pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:19">int64_t</name></type> <name pos:start="137:21" pos:end="137:23">num</name> <init pos:start="137:25" pos:end="137:80">= <expr pos:start="137:27" pos:end="137:80"><name pos:start="137:27" pos:end="137:50"><name pos:start="137:27" pos:end="137:28">st</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:35">codec</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:46">time_base</name><operator pos:start="137:47" pos:end="137:47">.</operator><name pos:start="137:48" pos:end="137:50">num</name></name> <operator pos:start="137:52" pos:end="137:52">*</operator> <operator pos:start="137:54" pos:end="137:54">(</operator><name pos:start="137:55" pos:end="137:61">int64_t</name><operator pos:start="137:62" pos:end="137:62">)</operator> <name pos:start="137:64" pos:end="137:80"><name pos:start="137:64" pos:end="137:65">st</name><operator pos:start="137:66" pos:end="137:67">-&gt;</operator><name pos:start="137:68" pos:end="137:76">time_base</name><operator pos:start="137:77" pos:end="137:77">.</operator><name pos:start="137:78" pos:end="137:80">den</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="139:13" pos:end="155:13"><if pos:start="139:13" pos:end="147:13">if <condition pos:start="139:16" pos:end="139:43">(<expr pos:start="139:17" pos:end="139:42"><name pos:start="139:17" pos:end="139:24"><name pos:start="139:17" pos:end="139:19">pkt</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:24">dts</name></name> <operator pos:start="139:26" pos:end="139:27">!=</operator> <name pos:start="139:29" pos:end="139:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="139:45" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:68">

                <comment type="line" pos:start="141:17" pos:end="141:70">// got DTS from the stream, update reference timestamp</comment>

                <expr_stmt pos:start="143:17" pos:end="143:81"><expr pos:start="143:17" pos:end="143:80"><name pos:start="143:17" pos:end="143:33"><name pos:start="143:17" pos:end="143:18">st</name><operator pos:start="143:19" pos:end="143:20">-&gt;</operator><name pos:start="143:21" pos:end="143:33">reference_dts</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:44"><name pos:start="143:37" pos:end="143:39">pkt</name><operator pos:start="143:40" pos:end="143:41">-&gt;</operator><name pos:start="143:42" pos:end="143:44">dts</name></name> <operator pos:start="143:46" pos:end="143:46">-</operator> <name pos:start="143:48" pos:end="143:68"><name pos:start="143:48" pos:end="143:49">pc</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:68">dts_ref_dts_delta</name></name> <operator pos:start="143:70" pos:end="143:70">*</operator> <name pos:start="143:72" pos:end="143:74">num</name> <operator pos:start="143:76" pos:end="143:76">/</operator> <name pos:start="143:78" pos:end="143:80">den</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:68"><expr pos:start="145:17" pos:end="145:67"><name pos:start="145:17" pos:end="145:24"><name pos:start="145:17" pos:end="145:19">pkt</name><operator pos:start="145:20" pos:end="145:21">-&gt;</operator><name pos:start="145:22" pos:end="145:24">pts</name></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:35"><name pos:start="145:28" pos:end="145:30">pkt</name><operator pos:start="145:31" pos:end="145:32">-&gt;</operator><name pos:start="145:33" pos:end="145:35">dts</name></name> <operator pos:start="145:37" pos:end="145:37">+</operator> <name pos:start="145:39" pos:end="145:55"><name pos:start="145:39" pos:end="145:40">pc</name><operator pos:start="145:41" pos:end="145:42">-&gt;</operator><name pos:start="145:43" pos:end="145:55">pts_dts_delta</name></name> <operator pos:start="145:57" pos:end="145:57">*</operator> <name pos:start="145:59" pos:end="145:61">num</name> <operator pos:start="145:63" pos:end="145:63">/</operator> <name pos:start="145:65" pos:end="145:67">den</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="147:15" pos:end="155:13">else if <condition pos:start="147:23" pos:end="147:59">(<expr pos:start="147:24" pos:end="147:58"><name pos:start="147:24" pos:end="147:40"><name pos:start="147:24" pos:end="147:25">st</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:40">reference_dts</name></name> <operator pos:start="147:42" pos:end="147:43">!=</operator> <name pos:start="147:45" pos:end="147:58">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="147:61" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:68">

                <comment type="line" pos:start="149:17" pos:end="149:59">// compute DTS based on reference timestamp</comment>

                <expr_stmt pos:start="151:17" pos:end="151:81"><expr pos:start="151:17" pos:end="151:80"><name pos:start="151:17" pos:end="151:24"><name pos:start="151:17" pos:end="151:19">pkt</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:24">dts</name></name> <operator pos:start="151:26" pos:end="151:26">=</operator> <name pos:start="151:28" pos:end="151:44"><name pos:start="151:28" pos:end="151:29">st</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:44">reference_dts</name></name> <operator pos:start="151:46" pos:end="151:46">+</operator> <name pos:start="151:48" pos:end="151:68"><name pos:start="151:48" pos:end="151:49">pc</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:68">dts_ref_dts_delta</name></name> <operator pos:start="151:70" pos:end="151:70">*</operator> <name pos:start="151:72" pos:end="151:74">num</name> <operator pos:start="151:76" pos:end="151:76">/</operator> <name pos:start="151:78" pos:end="151:80">den</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:68"><expr pos:start="153:17" pos:end="153:67"><name pos:start="153:17" pos:end="153:24"><name pos:start="153:17" pos:end="153:19">pkt</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:24">pts</name></name> <operator pos:start="153:26" pos:end="153:26">=</operator> <name pos:start="153:28" pos:end="153:35"><name pos:start="153:28" pos:end="153:30">pkt</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:35">dts</name></name> <operator pos:start="153:37" pos:end="153:37">+</operator> <name pos:start="153:39" pos:end="153:55"><name pos:start="153:39" pos:end="153:40">pc</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:55">pts_dts_delta</name></name> <operator pos:start="153:57" pos:end="153:57">*</operator> <name pos:start="153:59" pos:end="153:61">num</name> <operator pos:start="153:63" pos:end="153:63">/</operator> <name pos:start="153:65" pos:end="153:67">den</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="157:13" pos:end="159:45"><if pos:start="157:13" pos:end="159:45">if <condition pos:start="157:16" pos:end="157:39">(<expr pos:start="157:17" pos:end="157:38"><name pos:start="157:17" pos:end="157:34"><name pos:start="157:17" pos:end="157:18">pc</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:34">dts_sync_point</name></name> <operator pos:start="157:36" pos:end="157:36">&gt;</operator> <literal type="number" pos:start="157:38" pos:end="157:38">0</literal></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:45"><block_content pos:start="159:17" pos:end="159:45">

                <expr_stmt pos:start="159:17" pos:end="159:45"><expr pos:start="159:17" pos:end="159:44"><name pos:start="159:17" pos:end="159:33"><name pos:start="159:17" pos:end="159:18">st</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:33">reference_dts</name></name> <operator pos:start="159:35" pos:end="159:35">=</operator> <name pos:start="159:37" pos:end="159:44"><name pos:start="159:37" pos:end="159:39">pkt</name><operator pos:start="159:40" pos:end="159:41">-&gt;</operator><name pos:start="159:42" pos:end="159:44">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="159:47" pos:end="159:62">// new reference</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:56">/* This may be redundant, but it should not hurt. */</comment>

    <if_stmt pos:start="169:5" pos:end="171:33"><if pos:start="169:5" pos:end="171:33">if<condition pos:start="169:7" pos:end="169:87">(<expr pos:start="169:8" pos:end="169:86"><name pos:start="169:8" pos:end="169:15"><name pos:start="169:8" pos:end="169:10">pkt</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:15">dts</name></name> <operator pos:start="169:17" pos:end="169:18">!=</operator> <name pos:start="169:20" pos:end="169:33">AV_NOPTS_VALUE</name> <operator pos:start="169:35" pos:end="169:36">&amp;&amp;</operator> <name pos:start="169:38" pos:end="169:45"><name pos:start="169:38" pos:end="169:40">pkt</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:45">pts</name></name> <operator pos:start="169:47" pos:end="169:48">!=</operator> <name pos:start="169:50" pos:end="169:63">AV_NOPTS_VALUE</name> <operator pos:start="169:65" pos:end="169:66">&amp;&amp;</operator> <name pos:start="169:68" pos:end="169:75"><name pos:start="169:68" pos:end="169:70">pkt</name><operator pos:start="169:71" pos:end="169:72">-&gt;</operator><name pos:start="169:73" pos:end="169:75">pts</name></name> <operator pos:start="169:77" pos:end="169:77">&gt;</operator> <name pos:start="169:79" pos:end="169:86"><name pos:start="169:79" pos:end="169:81">pkt</name><operator pos:start="169:82" pos:end="169:83">-&gt;</operator><name pos:start="169:84" pos:end="169:86">dts</name></name></expr>)</condition><block type="pseudo" pos:start="171:9" pos:end="171:33"><block_content pos:start="171:9" pos:end="171:33">

        <expr_stmt pos:start="171:9" pos:end="171:33"><expr pos:start="171:9" pos:end="171:32"><name pos:start="171:9" pos:end="171:28">presentation_delayed</name> <operator pos:start="171:30" pos:end="171:30">=</operator> <literal type="number" pos:start="171:32" pos:end="171:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<comment type="line" pos:start="175:1" pos:end="175:189">//    av_log(NULL, AV_LOG_DEBUG, "IN delayed:%d pts:%"PRId64", dts:%"PRId64" cur_dts:%"PRId64" st:%d pc:%p\n", presentation_delayed, pkt-&gt;pts, pkt-&gt;dts, st-&gt;cur_dts, pkt-&gt;stream_index, pc);</comment>

    <comment type="block" pos:start="177:5" pos:end="177:57">/* interpolate PTS and DTS if they are not present */</comment>

    <comment type="line" pos:start="179:5" pos:end="179:80">//We skip H264 currently because delay and has_b_frames are not reliably set</comment>

    <if_stmt pos:start="181:5" pos:end="261:5"><if pos:start="181:5" pos:end="261:5">if<condition pos:start="181:7" pos:end="181:78">(<expr pos:start="181:8" pos:end="181:77"><operator pos:start="181:8" pos:end="181:8">(</operator><name pos:start="181:9" pos:end="181:13">delay</name><operator pos:start="181:14" pos:end="181:15">==</operator><literal type="number" pos:start="181:16" pos:end="181:16">0</literal> <operator pos:start="181:18" pos:end="181:19">||</operator> <operator pos:start="181:21" pos:end="181:21">(</operator><name pos:start="181:22" pos:end="181:26">delay</name><operator pos:start="181:27" pos:end="181:28">==</operator><literal type="number" pos:start="181:29" pos:end="181:29">1</literal> <operator pos:start="181:31" pos:end="181:32">&amp;&amp;</operator> <name pos:start="181:34" pos:end="181:35">pc</name><operator pos:start="181:36" pos:end="181:36">)</operator><operator pos:start="181:37" pos:end="181:37">)</operator> <operator pos:start="181:39" pos:end="181:40">&amp;&amp;</operator> <name pos:start="181:42" pos:end="181:60"><name pos:start="181:42" pos:end="181:43">st</name><operator pos:start="181:44" pos:end="181:45">-&gt;</operator><name pos:start="181:46" pos:end="181:50">codec</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:60">codec_id</name></name> <operator pos:start="181:62" pos:end="181:63">!=</operator> <name pos:start="181:65" pos:end="181:77">CODEC_ID_H264</name></expr>)</condition><block pos:start="181:79" pos:end="261:5">{<block_content pos:start="183:9" pos:end="259:9">

        <if_stmt pos:start="183:9" pos:end="259:9"><if pos:start="183:9" pos:end="221:9">if <condition pos:start="183:12" pos:end="183:33">(<expr pos:start="183:13" pos:end="183:32"><name pos:start="183:13" pos:end="183:32">presentation_delayed</name></expr>)</condition> <block pos:start="183:35" pos:end="221:9">{<block_content pos:start="189:13" pos:end="215:38">

            <comment type="block" pos:start="185:13" pos:end="185:47">/* DTS = decompression timestamp */</comment>

            <comment type="block" pos:start="187:13" pos:end="187:46">/* PTS = presentation timestamp */</comment>

            <if_stmt pos:start="189:13" pos:end="191:43"><if pos:start="189:13" pos:end="191:43">if <condition pos:start="189:16" pos:end="189:43">(<expr pos:start="189:17" pos:end="189:42"><name pos:start="189:17" pos:end="189:24"><name pos:start="189:17" pos:end="189:19">pkt</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:24">dts</name></name> <operator pos:start="189:26" pos:end="189:27">==</operator> <name pos:start="189:29" pos:end="189:42">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:43"><block_content pos:start="191:17" pos:end="191:43">

                <expr_stmt pos:start="191:17" pos:end="191:43"><expr pos:start="191:17" pos:end="191:42"><name pos:start="191:17" pos:end="191:24"><name pos:start="191:17" pos:end="191:19">pkt</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:24">dts</name></name> <operator pos:start="191:26" pos:end="191:26">=</operator> <name pos:start="191:28" pos:end="191:42"><name pos:start="191:28" pos:end="191:29">st</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:42">last_IP_pts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:80"><expr pos:start="193:13" pos:end="193:79"><call pos:start="193:13" pos:end="193:79"><name pos:start="193:13" pos:end="193:37">update_initial_timestamps</name><argument_list pos:start="193:38" pos:end="193:79">(<argument pos:start="193:39" pos:end="193:39"><expr pos:start="193:39" pos:end="193:39"><name pos:start="193:39" pos:end="193:39">s</name></expr></argument>, <argument pos:start="193:42" pos:end="193:58"><expr pos:start="193:42" pos:end="193:58"><name pos:start="193:42" pos:end="193:58"><name pos:start="193:42" pos:end="193:44">pkt</name><operator pos:start="193:45" pos:end="193:46">-&gt;</operator><name pos:start="193:47" pos:end="193:58">stream_index</name></name></expr></argument>, <argument pos:start="193:61" pos:end="193:68"><expr pos:start="193:61" pos:end="193:68"><name pos:start="193:61" pos:end="193:68"><name pos:start="193:61" pos:end="193:63">pkt</name><operator pos:start="193:64" pos:end="193:65">-&gt;</operator><name pos:start="193:66" pos:end="193:68">dts</name></name></expr></argument>, <argument pos:start="193:71" pos:end="193:78"><expr pos:start="193:71" pos:end="193:78"><name pos:start="193:71" pos:end="193:78"><name pos:start="193:71" pos:end="193:73">pkt</name><operator pos:start="193:74" pos:end="193:75">-&gt;</operator><name pos:start="193:76" pos:end="193:78">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="197:39"><if pos:start="195:13" pos:end="197:39">if <condition pos:start="195:16" pos:end="195:43">(<expr pos:start="195:17" pos:end="195:42"><name pos:start="195:17" pos:end="195:24"><name pos:start="195:17" pos:end="195:19">pkt</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:24">dts</name></name> <operator pos:start="195:26" pos:end="195:27">==</operator> <name pos:start="195:29" pos:end="195:42">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:39"><block_content pos:start="197:17" pos:end="197:39">

                <expr_stmt pos:start="197:17" pos:end="197:39"><expr pos:start="197:17" pos:end="197:38"><name pos:start="197:17" pos:end="197:24"><name pos:start="197:17" pos:end="197:19">pkt</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:24">dts</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:38"><name pos:start="197:28" pos:end="197:29">st</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:38">cur_dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="201:13" pos:end="203:74">/* this is tricky: the dts must be incremented by the duration

            of the frame we are displaying, i.e. the last I- or P-frame */</comment>

            <if_stmt pos:start="205:13" pos:end="207:53"><if pos:start="205:13" pos:end="207:53">if <condition pos:start="205:16" pos:end="205:42">(<expr pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:36"><name pos:start="205:17" pos:end="205:18">st</name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:36">last_IP_duration</name></name> <operator pos:start="205:38" pos:end="205:39">==</operator> <literal type="number" pos:start="205:41" pos:end="205:41">0</literal></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:53"><block_content pos:start="207:17" pos:end="207:53">

                <expr_stmt pos:start="207:17" pos:end="207:53"><expr pos:start="207:17" pos:end="207:52"><name pos:start="207:17" pos:end="207:36"><name pos:start="207:17" pos:end="207:18">st</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:36">last_IP_duration</name></name> <operator pos:start="207:38" pos:end="207:38">=</operator> <name pos:start="207:40" pos:end="207:52"><name pos:start="207:40" pos:end="207:42">pkt</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:52">duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="209:13" pos:end="211:62"><if pos:start="209:13" pos:end="211:62">if<condition pos:start="209:15" pos:end="209:42">(<expr pos:start="209:16" pos:end="209:41"><name pos:start="209:16" pos:end="209:23"><name pos:start="209:16" pos:end="209:18">pkt</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:23">dts</name></name> <operator pos:start="209:25" pos:end="209:26">!=</operator> <name pos:start="209:28" pos:end="209:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:62"><block_content pos:start="211:17" pos:end="211:62">

                <expr_stmt pos:start="211:17" pos:end="211:62"><expr pos:start="211:17" pos:end="211:61"><name pos:start="211:17" pos:end="211:27"><name pos:start="211:17" pos:end="211:18">st</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:27">cur_dts</name></name> <operator pos:start="211:29" pos:end="211:29">=</operator> <name pos:start="211:31" pos:end="211:38"><name pos:start="211:31" pos:end="211:33">pkt</name><operator pos:start="211:34" pos:end="211:35">-&gt;</operator><name pos:start="211:36" pos:end="211:38">dts</name></name> <operator pos:start="211:40" pos:end="211:40">+</operator> <name pos:start="211:42" pos:end="211:61"><name pos:start="211:42" pos:end="211:43">st</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:61">last_IP_duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:50"><expr pos:start="213:13" pos:end="213:49"><name pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:14">st</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:32">last_IP_duration</name></name>  <operator pos:start="213:35" pos:end="213:35">=</operator> <name pos:start="213:37" pos:end="213:49"><name pos:start="213:37" pos:end="213:39">pkt</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:49">duration</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:38"><expr pos:start="215:13" pos:end="215:37"><name pos:start="215:13" pos:end="215:27"><name pos:start="215:13" pos:end="215:14">st</name><operator pos:start="215:15" pos:end="215:16">-&gt;</operator><name pos:start="215:17" pos:end="215:27">last_IP_pts</name></name><operator pos:start="215:28" pos:end="215:28">=</operator> <name pos:start="215:30" pos:end="215:37"><name pos:start="215:30" pos:end="215:32">pkt</name><operator pos:start="215:33" pos:end="215:34">-&gt;</operator><name pos:start="215:35" pos:end="215:37">pts</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="217:13" pos:end="219:36">/* cannot compute PTS if not present (we can compute it only

            by knowing the future */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="221:11" pos:end="259:9">else if<condition pos:start="221:18" pos:end="221:92">(<expr pos:start="221:19" pos:end="221:91"><name pos:start="221:19" pos:end="221:26"><name pos:start="221:19" pos:end="221:21">pkt</name><operator pos:start="221:22" pos:end="221:23">-&gt;</operator><name pos:start="221:24" pos:end="221:26">pts</name></name> <operator pos:start="221:28" pos:end="221:29">!=</operator> <name pos:start="221:31" pos:end="221:44">AV_NOPTS_VALUE</name> <operator pos:start="221:46" pos:end="221:47">||</operator> <name pos:start="221:49" pos:end="221:56"><name pos:start="221:49" pos:end="221:51">pkt</name><operator pos:start="221:52" pos:end="221:53">-&gt;</operator><name pos:start="221:54" pos:end="221:56">dts</name></name> <operator pos:start="221:58" pos:end="221:59">!=</operator> <name pos:start="221:61" pos:end="221:74">AV_NOPTS_VALUE</name> <operator pos:start="221:76" pos:end="221:77">||</operator> <name pos:start="221:79" pos:end="221:91"><name pos:start="221:79" pos:end="221:81">pkt</name><operator pos:start="221:82" pos:end="221:83">-&gt;</operator><name pos:start="221:84" pos:end="221:91">duration</name></name></expr>)</condition><block pos:start="221:93" pos:end="259:9">{<block_content pos:start="223:13" pos:end="257:55">

            <if_stmt pos:start="223:13" pos:end="237:13"><if pos:start="223:13" pos:end="237:13">if<condition pos:start="223:15" pos:end="223:59">(<expr pos:start="223:16" pos:end="223:58"><name pos:start="223:16" pos:end="223:23"><name pos:start="223:16" pos:end="223:18">pkt</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:23">pts</name></name> <operator pos:start="223:25" pos:end="223:26">!=</operator> <name pos:start="223:28" pos:end="223:41">AV_NOPTS_VALUE</name> <operator pos:start="223:43" pos:end="223:44">&amp;&amp;</operator> <name pos:start="223:46" pos:end="223:58"><name pos:start="223:46" pos:end="223:48">pkt</name><operator pos:start="223:49" pos:end="223:50">-&gt;</operator><name pos:start="223:51" pos:end="223:58">duration</name></name></expr>)</condition><block pos:start="223:60" pos:end="237:13">{<block_content pos:start="225:17" pos:end="235:17">

                <decl_stmt pos:start="225:17" pos:end="225:80"><decl pos:start="225:17" pos:end="225:79"><type pos:start="225:17" pos:end="225:23"><name pos:start="225:17" pos:end="225:23">int64_t</name></type> <name pos:start="225:25" pos:end="225:32">old_diff</name><init pos:start="225:33" pos:end="225:79">= <expr pos:start="225:35" pos:end="225:79"><call pos:start="225:35" pos:end="225:79"><name pos:start="225:35" pos:end="225:39">FFABS</name><argument_list pos:start="225:40" pos:end="225:79">(<argument pos:start="225:41" pos:end="225:78"><expr pos:start="225:41" pos:end="225:78"><name pos:start="225:41" pos:end="225:51"><name pos:start="225:41" pos:end="225:42">st</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:51">cur_dts</name></name> <operator pos:start="225:53" pos:end="225:53">-</operator> <name pos:start="225:55" pos:end="225:67"><name pos:start="225:55" pos:end="225:57">pkt</name><operator pos:start="225:58" pos:end="225:59">-&gt;</operator><name pos:start="225:60" pos:end="225:67">duration</name></name> <operator pos:start="225:69" pos:end="225:69">-</operator> <name pos:start="225:71" pos:end="225:78"><name pos:start="225:71" pos:end="225:73">pkt</name><operator pos:start="225:74" pos:end="225:75">-&gt;</operator><name pos:start="225:76" pos:end="225:78">pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="227:17" pos:end="227:64"><decl pos:start="227:17" pos:end="227:63"><type pos:start="227:17" pos:end="227:23"><name pos:start="227:17" pos:end="227:23">int64_t</name></type> <name pos:start="227:25" pos:end="227:32">new_diff</name><init pos:start="227:33" pos:end="227:63">= <expr pos:start="227:35" pos:end="227:63"><call pos:start="227:35" pos:end="227:63"><name pos:start="227:35" pos:end="227:39">FFABS</name><argument_list pos:start="227:40" pos:end="227:63">(<argument pos:start="227:41" pos:end="227:62"><expr pos:start="227:41" pos:end="227:62"><name pos:start="227:41" pos:end="227:51"><name pos:start="227:41" pos:end="227:42">st</name><operator pos:start="227:43" pos:end="227:44">-&gt;</operator><name pos:start="227:45" pos:end="227:51">cur_dts</name></name> <operator pos:start="227:53" pos:end="227:53">-</operator> <name pos:start="227:55" pos:end="227:62"><name pos:start="227:55" pos:end="227:57">pkt</name><operator pos:start="227:58" pos:end="227:59">-&gt;</operator><name pos:start="227:60" pos:end="227:62">pts</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="229:17" pos:end="235:17"><if pos:start="229:17" pos:end="235:17">if<condition pos:start="229:19" pos:end="229:72">(<expr pos:start="229:20" pos:end="229:71"><name pos:start="229:20" pos:end="229:27">old_diff</name> <operator pos:start="229:29" pos:end="229:29">&lt;</operator> <name pos:start="229:31" pos:end="229:38">new_diff</name> <operator pos:start="229:40" pos:end="229:41">&amp;&amp;</operator> <name pos:start="229:43" pos:end="229:50">old_diff</name> <operator pos:start="229:52" pos:end="229:52">&lt;</operator> <operator pos:start="229:54" pos:end="229:54">(</operator><name pos:start="229:55" pos:end="229:67"><name pos:start="229:55" pos:end="229:57">pkt</name><operator pos:start="229:58" pos:end="229:59">-&gt;</operator><name pos:start="229:60" pos:end="229:67">duration</name></name><operator pos:start="229:68" pos:end="229:69">&gt;&gt;</operator><literal type="number" pos:start="229:70" pos:end="229:70">3</literal><operator pos:start="229:71" pos:end="229:71">)</operator></expr>)</condition><block pos:start="229:73" pos:end="235:17">{<block_content pos:start="231:21" pos:end="231:46">

                    <expr_stmt pos:start="231:21" pos:end="231:46"><expr pos:start="231:21" pos:end="231:45"><name pos:start="231:21" pos:end="231:28"><name pos:start="231:21" pos:end="231:23">pkt</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:28">pts</name></name> <operator pos:start="231:30" pos:end="231:31">+=</operator> <name pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:35">pkt</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:45">duration</name></name></expr>;</expr_stmt>

    <comment type="line" pos:start="233:5" pos:end="233:195">//                av_log(NULL, AV_LOG_DEBUG, "id:%d old:%"PRId64" new:%"PRId64" dur:%d cur:%"PRId64" size:%d\n", pkt-&gt;stream_index, old_diff, new_diff, pkt-&gt;duration, st-&gt;cur_dts, pkt-&gt;size);</comment>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="241:13" pos:end="241:72">/* presentation is not delayed : PTS and DTS are the same */</comment>

            <if_stmt pos:start="243:13" pos:end="245:36"><if pos:start="243:13" pos:end="245:36">if<condition pos:start="243:15" pos:end="243:42">(<expr pos:start="243:16" pos:end="243:41"><name pos:start="243:16" pos:end="243:23"><name pos:start="243:16" pos:end="243:18">pkt</name><operator pos:start="243:19" pos:end="243:20">-&gt;</operator><name pos:start="243:21" pos:end="243:23">pts</name></name> <operator pos:start="243:25" pos:end="243:26">==</operator> <name pos:start="243:28" pos:end="243:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="245:17" pos:end="245:36"><block_content pos:start="245:17" pos:end="245:36">

                <expr_stmt pos:start="245:17" pos:end="245:36"><expr pos:start="245:17" pos:end="245:35"><name pos:start="245:17" pos:end="245:24"><name pos:start="245:17" pos:end="245:19">pkt</name><operator pos:start="245:20" pos:end="245:21">-&gt;</operator><name pos:start="245:22" pos:end="245:24">pts</name></name> <operator pos:start="245:26" pos:end="245:26">=</operator> <name pos:start="245:28" pos:end="245:35"><name pos:start="245:28" pos:end="245:30">pkt</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:35">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:80"><expr pos:start="247:13" pos:end="247:79"><call pos:start="247:13" pos:end="247:79"><name pos:start="247:13" pos:end="247:37">update_initial_timestamps</name><argument_list pos:start="247:38" pos:end="247:79">(<argument pos:start="247:39" pos:end="247:39"><expr pos:start="247:39" pos:end="247:39"><name pos:start="247:39" pos:end="247:39">s</name></expr></argument>, <argument pos:start="247:42" pos:end="247:58"><expr pos:start="247:42" pos:end="247:58"><name pos:start="247:42" pos:end="247:58"><name pos:start="247:42" pos:end="247:44">pkt</name><operator pos:start="247:45" pos:end="247:46">-&gt;</operator><name pos:start="247:47" pos:end="247:58">stream_index</name></name></expr></argument>, <argument pos:start="247:61" pos:end="247:68"><expr pos:start="247:61" pos:end="247:68"><name pos:start="247:61" pos:end="247:68"><name pos:start="247:61" pos:end="247:63">pkt</name><operator pos:start="247:64" pos:end="247:65">-&gt;</operator><name pos:start="247:66" pos:end="247:68">pts</name></name></expr></argument>, <argument pos:start="247:71" pos:end="247:78"><expr pos:start="247:71" pos:end="247:78"><name pos:start="247:71" pos:end="247:78"><name pos:start="247:71" pos:end="247:73">pkt</name><operator pos:start="247:74" pos:end="247:75">-&gt;</operator><name pos:start="247:76" pos:end="247:78">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="249:13" pos:end="251:39"><if pos:start="249:13" pos:end="251:39">if<condition pos:start="249:15" pos:end="249:42">(<expr pos:start="249:16" pos:end="249:41"><name pos:start="249:16" pos:end="249:23"><name pos:start="249:16" pos:end="249:18">pkt</name><operator pos:start="249:19" pos:end="249:20">-&gt;</operator><name pos:start="249:21" pos:end="249:23">pts</name></name> <operator pos:start="249:25" pos:end="249:26">==</operator> <name pos:start="249:28" pos:end="249:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="251:17" pos:end="251:39"><block_content pos:start="251:17" pos:end="251:39">

                <expr_stmt pos:start="251:17" pos:end="251:39"><expr pos:start="251:17" pos:end="251:38"><name pos:start="251:17" pos:end="251:24"><name pos:start="251:17" pos:end="251:19">pkt</name><operator pos:start="251:20" pos:end="251:21">-&gt;</operator><name pos:start="251:22" pos:end="251:24">pts</name></name> <operator pos:start="251:26" pos:end="251:26">=</operator> <name pos:start="251:28" pos:end="251:38"><name pos:start="251:28" pos:end="251:29">st</name><operator pos:start="251:30" pos:end="251:31">-&gt;</operator><name pos:start="251:32" pos:end="251:38">cur_dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:32"><expr pos:start="253:13" pos:end="253:31"><name pos:start="253:13" pos:end="253:20"><name pos:start="253:13" pos:end="253:15">pkt</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:20">dts</name></name> <operator pos:start="253:22" pos:end="253:22">=</operator> <name pos:start="253:24" pos:end="253:31"><name pos:start="253:24" pos:end="253:26">pkt</name><operator pos:start="253:27" pos:end="253:28">-&gt;</operator><name pos:start="253:29" pos:end="253:31">pts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="255:13" pos:end="257:55"><if pos:start="255:13" pos:end="257:55">if<condition pos:start="255:15" pos:end="255:42">(<expr pos:start="255:16" pos:end="255:41"><name pos:start="255:16" pos:end="255:23"><name pos:start="255:16" pos:end="255:18">pkt</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:23">pts</name></name> <operator pos:start="255:25" pos:end="255:26">!=</operator> <name pos:start="255:28" pos:end="255:41">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="257:17" pos:end="257:55"><block_content pos:start="257:17" pos:end="257:55">

                <expr_stmt pos:start="257:17" pos:end="257:55"><expr pos:start="257:17" pos:end="257:54"><name pos:start="257:17" pos:end="257:27"><name pos:start="257:17" pos:end="257:18">st</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:27">cur_dts</name></name> <operator pos:start="257:29" pos:end="257:29">=</operator> <name pos:start="257:31" pos:end="257:38"><name pos:start="257:31" pos:end="257:33">pkt</name><operator pos:start="257:34" pos:end="257:35">-&gt;</operator><name pos:start="257:36" pos:end="257:38">pts</name></name> <operator pos:start="257:40" pos:end="257:40">+</operator> <name pos:start="257:42" pos:end="257:54"><name pos:start="257:42" pos:end="257:44">pkt</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:54">duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="265:5" pos:end="287:5"><if pos:start="265:5" pos:end="287:5">if<condition pos:start="265:7" pos:end="265:64">(<expr pos:start="265:8" pos:end="265:63"><name pos:start="265:8" pos:end="265:15"><name pos:start="265:8" pos:end="265:10">pkt</name><operator pos:start="265:11" pos:end="265:12">-&gt;</operator><name pos:start="265:13" pos:end="265:15">pts</name></name> <operator pos:start="265:17" pos:end="265:18">!=</operator> <name pos:start="265:20" pos:end="265:33">AV_NOPTS_VALUE</name> <operator pos:start="265:35" pos:end="265:36">&amp;&amp;</operator> <name pos:start="265:38" pos:end="265:42">delay</name> <operator pos:start="265:44" pos:end="265:45">&lt;=</operator> <name pos:start="265:47" pos:end="265:63">MAX_REORDER_DELAY</name></expr>)</condition><block pos:start="265:65" pos:end="287:5">{<block_content pos:start="267:9" pos:end="285:35">

        <expr_stmt pos:start="267:9" pos:end="267:36"><expr pos:start="267:9" pos:end="267:35"><name pos:start="267:9" pos:end="267:25"><name pos:start="267:9" pos:end="267:10">st</name><operator pos:start="267:11" pos:end="267:12">-&gt;</operator><name pos:start="267:13" pos:end="267:22">pts_buffer</name><index pos:start="267:23" pos:end="267:25">[<expr pos:start="267:24" pos:end="267:24"><literal type="number" pos:start="267:24" pos:end="267:24">0</literal></expr>]</index></name><operator pos:start="267:26" pos:end="267:26">=</operator> <name pos:start="267:28" pos:end="267:35"><name pos:start="267:28" pos:end="267:30">pkt</name><operator pos:start="267:31" pos:end="267:32">-&gt;</operator><name pos:start="267:33" pos:end="267:35">pts</name></name></expr>;</expr_stmt>

        <for pos:start="269:9" pos:end="271:68">for<control pos:start="269:12" pos:end="269:73">(<init pos:start="269:13" pos:end="269:16"><expr pos:start="269:13" pos:end="269:15"><name pos:start="269:13" pos:end="269:13">i</name><operator pos:start="269:14" pos:end="269:14">=</operator><literal type="number" pos:start="269:15" pos:end="269:15">0</literal></expr>;</init> <condition pos:start="269:18" pos:end="269:68"><expr pos:start="269:18" pos:end="269:67"><name pos:start="269:18" pos:end="269:47"><name pos:start="269:18" pos:end="269:18">i</name><argument_list type="generic" pos:start="269:19" pos:end="269:47">&lt;<argument pos:start="269:20" pos:end="269:45"><expr pos:start="269:20" pos:end="269:45"><name pos:start="269:20" pos:end="269:24">delay</name> <operator pos:start="269:26" pos:end="269:27">&amp;&amp;</operator> <name pos:start="269:29" pos:end="269:45"><name pos:start="269:29" pos:end="269:30">st</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:42">pts_buffer</name><index pos:start="269:43" pos:end="269:45">[<expr pos:start="269:44" pos:end="269:44"><name pos:start="269:44" pos:end="269:44">i</name></expr>]</index></name></expr></argument> &gt;</argument_list></name> <name pos:start="269:49" pos:end="269:67"><name pos:start="269:49" pos:end="269:50">st</name><operator pos:start="269:51" pos:end="269:52">-&gt;</operator><name pos:start="269:53" pos:end="269:62">pts_buffer</name><index pos:start="269:63" pos:end="269:67">[<expr pos:start="269:64" pos:end="269:66"><name pos:start="269:64" pos:end="269:64">i</name><operator pos:start="269:65" pos:end="269:65">+</operator><literal type="number" pos:start="269:66" pos:end="269:66">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="269:70" pos:end="269:72"><expr pos:start="269:70" pos:end="269:72"><name pos:start="269:70" pos:end="269:70">i</name><operator pos:start="269:71" pos:end="269:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="271:13" pos:end="271:68"><block_content pos:start="271:13" pos:end="271:68">

            <expr_stmt pos:start="271:13" pos:end="271:68"><expr pos:start="271:13" pos:end="271:67"><call pos:start="271:13" pos:end="271:67"><name pos:start="271:13" pos:end="271:18">FFSWAP</name><argument_list pos:start="271:19" pos:end="271:67">(<argument pos:start="271:20" pos:end="271:26"><expr pos:start="271:20" pos:end="271:26"><name pos:start="271:20" pos:end="271:26">int64_t</name></expr></argument>, <argument pos:start="271:29" pos:end="271:45"><expr pos:start="271:29" pos:end="271:45"><name pos:start="271:29" pos:end="271:45"><name pos:start="271:29" pos:end="271:30">st</name><operator pos:start="271:31" pos:end="271:32">-&gt;</operator><name pos:start="271:33" pos:end="271:42">pts_buffer</name><index pos:start="271:43" pos:end="271:45">[<expr pos:start="271:44" pos:end="271:44"><name pos:start="271:44" pos:end="271:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="271:48" pos:end="271:66"><expr pos:start="271:48" pos:end="271:66"><name pos:start="271:48" pos:end="271:66"><name pos:start="271:48" pos:end="271:49">st</name><operator pos:start="271:50" pos:end="271:51">-&gt;</operator><name pos:start="271:52" pos:end="271:61">pts_buffer</name><index pos:start="271:62" pos:end="271:66">[<expr pos:start="271:63" pos:end="271:65"><name pos:start="271:63" pos:end="271:63">i</name><operator pos:start="271:64" pos:end="271:64">+</operator><literal type="number" pos:start="271:65" pos:end="271:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="273:9" pos:end="275:40"><if pos:start="273:9" pos:end="275:40">if<condition pos:start="273:11" pos:end="273:38">(<expr pos:start="273:12" pos:end="273:37"><name pos:start="273:12" pos:end="273:19"><name pos:start="273:12" pos:end="273:14">pkt</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:19">dts</name></name> <operator pos:start="273:21" pos:end="273:22">==</operator> <name pos:start="273:24" pos:end="273:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="275:13" pos:end="275:40"><block_content pos:start="275:13" pos:end="275:40">

            <expr_stmt pos:start="275:13" pos:end="275:40"><expr pos:start="275:13" pos:end="275:39"><name pos:start="275:13" pos:end="275:20"><name pos:start="275:13" pos:end="275:15">pkt</name><operator pos:start="275:16" pos:end="275:17">-&gt;</operator><name pos:start="275:18" pos:end="275:20">dts</name></name><operator pos:start="275:21" pos:end="275:21">=</operator> <name pos:start="275:23" pos:end="275:39"><name pos:start="275:23" pos:end="275:24">st</name><operator pos:start="275:25" pos:end="275:26">-&gt;</operator><name pos:start="275:27" pos:end="275:36">pts_buffer</name><index pos:start="275:37" pos:end="275:39">[<expr pos:start="275:38" pos:end="275:38"><literal type="number" pos:start="275:38" pos:end="275:38">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="277:9" pos:end="281:9"><if pos:start="277:9" pos:end="281:9">if<condition pos:start="277:11" pos:end="277:48">(<expr pos:start="277:12" pos:end="277:47"><name pos:start="277:12" pos:end="277:30"><name pos:start="277:12" pos:end="277:13">st</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:20">codec</name><operator pos:start="277:21" pos:end="277:22">-&gt;</operator><name pos:start="277:23" pos:end="277:30">codec_id</name></name> <operator pos:start="277:32" pos:end="277:33">==</operator> <name pos:start="277:35" pos:end="277:47">CODEC_ID_H264</name></expr>)</condition><block pos:start="277:49" pos:end="281:9">{<block_content pos:start="279:13" pos:end="279:80"> <comment type="line" pos:start="277:51" pos:end="277:85">//we skiped it above so we try here</comment>

            <expr_stmt pos:start="279:13" pos:end="279:80"><expr pos:start="279:13" pos:end="279:79"><call pos:start="279:13" pos:end="279:79"><name pos:start="279:13" pos:end="279:37">update_initial_timestamps</name><argument_list pos:start="279:38" pos:end="279:79">(<argument pos:start="279:39" pos:end="279:39"><expr pos:start="279:39" pos:end="279:39"><name pos:start="279:39" pos:end="279:39">s</name></expr></argument>, <argument pos:start="279:42" pos:end="279:58"><expr pos:start="279:42" pos:end="279:58"><name pos:start="279:42" pos:end="279:58"><name pos:start="279:42" pos:end="279:44">pkt</name><operator pos:start="279:45" pos:end="279:46">-&gt;</operator><name pos:start="279:47" pos:end="279:58">stream_index</name></name></expr></argument>, <argument pos:start="279:61" pos:end="279:68"><expr pos:start="279:61" pos:end="279:68"><name pos:start="279:61" pos:end="279:68"><name pos:start="279:61" pos:end="279:63">pkt</name><operator pos:start="279:64" pos:end="279:65">-&gt;</operator><name pos:start="279:66" pos:end="279:68">dts</name></name></expr></argument>, <argument pos:start="279:71" pos:end="279:78"><expr pos:start="279:71" pos:end="279:78"><name pos:start="279:71" pos:end="279:78"><name pos:start="279:71" pos:end="279:73">pkt</name><operator pos:start="279:74" pos:end="279:75">-&gt;</operator><name pos:start="279:76" pos:end="279:78">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="279:82" pos:end="279:122">// this should happen on the first packet</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="283:9" pos:end="285:35"><if pos:start="283:9" pos:end="285:35">if<condition pos:start="283:11" pos:end="283:34">(<expr pos:start="283:12" pos:end="283:33"><name pos:start="283:12" pos:end="283:19"><name pos:start="283:12" pos:end="283:14">pkt</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:19">dts</name></name> <operator pos:start="283:21" pos:end="283:21">&gt;</operator> <name pos:start="283:23" pos:end="283:33"><name pos:start="283:23" pos:end="283:24">st</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:33">cur_dts</name></name></expr>)</condition><block type="pseudo" pos:start="285:13" pos:end="285:35"><block_content pos:start="285:13" pos:end="285:35">

            <expr_stmt pos:start="285:13" pos:end="285:35"><expr pos:start="285:13" pos:end="285:34"><name pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:14">st</name><operator pos:start="285:15" pos:end="285:16">-&gt;</operator><name pos:start="285:17" pos:end="285:23">cur_dts</name></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <name pos:start="285:27" pos:end="285:34"><name pos:start="285:27" pos:end="285:29">pkt</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:34">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="291:1" pos:end="291:164">//    av_log(NULL, AV_LOG_ERROR, "OUTdelayed:%d/%d pts:%"PRId64", dts:%"PRId64" cur_dts:%"PRId64"\n", presentation_delayed, delay, pkt-&gt;pts, pkt-&gt;dts, st-&gt;cur_dts);</comment>



    <comment type="block" pos:start="295:5" pos:end="295:22">/* update flags */</comment>

    <if_stmt pos:start="297:5" pos:end="315:5"><if pos:start="297:5" pos:end="299:38">if<condition pos:start="297:7" pos:end="297:32">(<expr pos:start="297:8" pos:end="297:31"><call pos:start="297:8" pos:end="297:31"><name pos:start="297:8" pos:end="297:20">is_intra_only</name><argument_list pos:start="297:21" pos:end="297:31">(<argument pos:start="297:22" pos:end="297:30"><expr pos:start="297:22" pos:end="297:30"><name pos:start="297:22" pos:end="297:30"><name pos:start="297:22" pos:end="297:23">st</name><operator pos:start="297:24" pos:end="297:25">-&gt;</operator><name pos:start="297:26" pos:end="297:30">codec</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="299:9" pos:end="299:38"><block_content pos:start="299:9" pos:end="299:38">

        <expr_stmt pos:start="299:9" pos:end="299:38"><expr pos:start="299:9" pos:end="299:37"><name pos:start="299:9" pos:end="299:18"><name pos:start="299:9" pos:end="299:11">pkt</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:18">flags</name></name> <operator pos:start="299:20" pos:end="299:21">|=</operator> <name pos:start="299:23" pos:end="299:37">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="301:5" pos:end="315:5">else if <condition pos:start="301:13" pos:end="301:16">(<expr pos:start="301:14" pos:end="301:15"><name pos:start="301:14" pos:end="301:15">pc</name></expr>)</condition> <block pos:start="301:18" pos:end="315:5">{<block_content pos:start="303:9" pos:end="313:42">

        <expr_stmt pos:start="303:9" pos:end="303:23"><expr pos:start="303:9" pos:end="303:22"><name pos:start="303:9" pos:end="303:18"><name pos:start="303:9" pos:end="303:11">pkt</name><operator pos:start="303:12" pos:end="303:13">-&gt;</operator><name pos:start="303:14" pos:end="303:18">flags</name></name> <operator pos:start="303:20" pos:end="303:20">=</operator> <literal type="number" pos:start="303:22" pos:end="303:22">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="305:9" pos:end="305:34">/* keyframe computation */</comment>

        <if_stmt pos:start="307:9" pos:end="313:42"><if pos:start="307:9" pos:end="309:42">if <condition pos:start="307:12" pos:end="307:31">(<expr pos:start="307:13" pos:end="307:30"><name pos:start="307:13" pos:end="307:25"><name pos:start="307:13" pos:end="307:14">pc</name><operator pos:start="307:15" pos:end="307:16">-&gt;</operator><name pos:start="307:17" pos:end="307:25">key_frame</name></name> <operator pos:start="307:27" pos:end="307:28">==</operator> <literal type="number" pos:start="307:30" pos:end="307:30">1</literal></expr>)</condition><block type="pseudo" pos:start="309:13" pos:end="309:42"><block_content pos:start="309:13" pos:end="309:42">

            <expr_stmt pos:start="309:13" pos:end="309:42"><expr pos:start="309:13" pos:end="309:41"><name pos:start="309:13" pos:end="309:22"><name pos:start="309:13" pos:end="309:15">pkt</name><operator pos:start="309:16" pos:end="309:17">-&gt;</operator><name pos:start="309:18" pos:end="309:22">flags</name></name> <operator pos:start="309:24" pos:end="309:25">|=</operator> <name pos:start="309:27" pos:end="309:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="311:9" pos:end="313:42">else if <condition pos:start="311:17" pos:end="311:75">(<expr pos:start="311:18" pos:end="311:74"><name pos:start="311:18" pos:end="311:30"><name pos:start="311:18" pos:end="311:19">pc</name><operator pos:start="311:20" pos:end="311:21">-&gt;</operator><name pos:start="311:22" pos:end="311:30">key_frame</name></name> <operator pos:start="311:32" pos:end="311:33">==</operator> <operator pos:start="311:35" pos:end="311:35">-</operator><literal type="number" pos:start="311:36" pos:end="311:36">1</literal> <operator pos:start="311:38" pos:end="311:39">&amp;&amp;</operator> <name pos:start="311:41" pos:end="311:53"><name pos:start="311:41" pos:end="311:42">pc</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:53">pict_type</name></name> <operator pos:start="311:55" pos:end="311:56">==</operator> <name pos:start="311:58" pos:end="311:74">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="313:42"><block_content pos:start="313:13" pos:end="313:42">

            <expr_stmt pos:start="313:13" pos:end="313:42"><expr pos:start="313:13" pos:end="313:41"><name pos:start="313:13" pos:end="313:22"><name pos:start="313:13" pos:end="313:15">pkt</name><operator pos:start="313:16" pos:end="313:17">-&gt;</operator><name pos:start="313:18" pos:end="313:22">flags</name></name> <operator pos:start="313:24" pos:end="313:25">|=</operator> <name pos:start="313:27" pos:end="313:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="317:5" pos:end="319:61"><if pos:start="317:5" pos:end="319:61">if <condition pos:start="317:8" pos:end="317:11">(<expr pos:start="317:9" pos:end="317:10"><name pos:start="317:9" pos:end="317:10">pc</name></expr>)</condition><block type="pseudo" pos:start="319:9" pos:end="319:61"><block_content pos:start="319:9" pos:end="319:61">

        <expr_stmt pos:start="319:9" pos:end="319:61"><expr pos:start="319:9" pos:end="319:60"><name pos:start="319:9" pos:end="319:33"><name pos:start="319:9" pos:end="319:11">pkt</name><operator pos:start="319:12" pos:end="319:13">-&gt;</operator><name pos:start="319:14" pos:end="319:33">convergence_duration</name></name> <operator pos:start="319:35" pos:end="319:35">=</operator> <name pos:start="319:37" pos:end="319:60"><name pos:start="319:37" pos:end="319:38">pc</name><operator pos:start="319:39" pos:end="319:40">-&gt;</operator><name pos:start="319:41" pos:end="319:60">convergence_duration</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
