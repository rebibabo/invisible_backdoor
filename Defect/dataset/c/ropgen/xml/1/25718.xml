<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25718.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:44">decode_i_picture_secondary_header</name><parameter_list pos:start="1:45" pos:end="1:59">(<parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:55">VC9Context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="8:0"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">status</name></decl>;</decl_stmt>

<cpp:if pos:start="7:1" pos:end="7:24">#<cpp:directive pos:start="7:2" pos:end="7:3">if</cpp:directive> <expr pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24">HAS_ADVANCED_PROFILE</name></expr></cpp:if>

    <if_stmt pos:start="9:5" pos:end="56:0"><if pos:start="9:5" pos:end="56:0">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:18"><name pos:start="9:9" pos:end="9:9">v</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:18">profile</name></name> <operator pos:start="9:20" pos:end="9:20">&gt;</operator> <name pos:start="9:22" pos:end="9:33">PROFILE_MAIN</name></expr>)</condition>

    <block pos:start="11:5" pos:end="56:0">{<block_content pos:start="13:9" pos:end="51:9">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">v</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:20">ac_pred</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:44"><name pos:start="13:24" pos:end="13:31">get_bits</name><argument_list pos:start="13:32" pos:end="13:44">(<argument pos:start="13:33" pos:end="13:40"><expr pos:start="13:33" pos:end="13:40"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:40"><name pos:start="13:34" pos:end="13:34">v</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:37">s</name><operator pos:start="13:38" pos:end="13:38">.</operator><name pos:start="13:39" pos:end="13:40">gb</name></name></expr></argument>, <argument pos:start="13:43" pos:end="13:43"><expr pos:start="13:43" pos:end="13:43"><literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="15:9" pos:end="15:65"><if pos:start="15:9" pos:end="15:65">if <condition pos:start="15:12" pos:end="15:28">(<expr pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:13">v</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:27">postprocflag</name></name></expr>)</condition><block type="pseudo" pos:start="15:30" pos:end="15:65"><block_content pos:start="15:30" pos:end="15:65"> <expr_stmt pos:start="15:30" pos:end="15:65"><expr pos:start="15:30" pos:end="15:64"><name pos:start="15:30" pos:end="15:40"><name pos:start="15:30" pos:end="15:30">v</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:40">postproc</name></name> <operator pos:start="15:42" pos:end="15:42">=</operator> <call pos:start="15:44" pos:end="15:64"><name pos:start="15:44" pos:end="15:51">get_bits</name><argument_list pos:start="15:52" pos:end="15:64">(<argument pos:start="15:53" pos:end="15:60"><expr pos:start="15:53" pos:end="15:60"><operator pos:start="15:53" pos:end="15:53">&amp;</operator><name pos:start="15:54" pos:end="15:60"><name pos:start="15:54" pos:end="15:54">v</name><operator pos:start="15:55" pos:end="15:56">-&gt;</operator><name pos:start="15:57" pos:end="15:57">s</name><operator pos:start="15:58" pos:end="15:58">.</operator><name pos:start="15:59" pos:end="15:60">gb</name></name></expr></argument>, <argument pos:start="15:63" pos:end="15:63"><expr pos:start="15:63" pos:end="15:63"><literal type="number" pos:start="15:63" pos:end="15:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:30">/* 7.1.1.34 + 8.5.2 */</comment>

        <if_stmt pos:start="19:9" pos:end="51:9"><if pos:start="19:9" pos:end="51:9">if <condition pos:start="19:12" pos:end="19:34">(<expr pos:start="19:13" pos:end="19:33"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:13">v</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">overlap</name></name> <operator pos:start="19:24" pos:end="19:25">&amp;&amp;</operator> <name pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:27">v</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:31">pq</name></name><operator pos:start="19:32" pos:end="19:32">&lt;</operator><literal type="number" pos:start="19:33" pos:end="19:33">9</literal></expr>)</condition>

        <block pos:start="21:9" pos:end="51:9">{<block_content pos:start="23:13" pos:end="49:13">

            <expr_stmt pos:start="23:13" pos:end="23:48"><expr pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:13">v</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:23">condover</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:47"><name pos:start="23:27" pos:end="23:34">get_bits</name><argument_list pos:start="23:35" pos:end="23:47">(<argument pos:start="23:36" pos:end="23:43"><expr pos:start="23:36" pos:end="23:43"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:43"><name pos:start="23:37" pos:end="23:37">v</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:40">s</name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:43">gb</name></name></expr></argument>, <argument pos:start="23:46" pos:end="23:46"><expr pos:start="23:46" pos:end="23:46"><literal type="number" pos:start="23:46" pos:end="23:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="49:13"><if pos:start="25:13" pos:end="49:13">if <condition pos:start="25:16" pos:end="25:28">(<expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:17">v</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:27">condover</name></name></expr>)</condition>

            <block pos:start="27:13" pos:end="49:13">{<block_content pos:start="29:17" pos:end="47:17">

                <expr_stmt pos:start="29:17" pos:end="29:54"><expr pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:17">v</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">condover</name></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <literal type="number" pos:start="29:31" pos:end="29:32">2</literal><operator pos:start="29:32" pos:end="29:32">+</operator><call pos:start="29:33" pos:end="29:53"><name pos:start="29:33" pos:end="29:40">get_bits</name><argument_list pos:start="29:41" pos:end="29:53">(<argument pos:start="29:42" pos:end="29:49"><expr pos:start="29:42" pos:end="29:49"><operator pos:start="29:42" pos:end="29:42">&amp;</operator><name pos:start="29:43" pos:end="29:49"><name pos:start="29:43" pos:end="29:43">v</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:46">s</name><operator pos:start="29:47" pos:end="29:47">.</operator><name pos:start="29:48" pos:end="29:49">gb</name></name></expr></argument>, <argument pos:start="29:52" pos:end="29:52"><expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="31:17" pos:end="47:17"><if pos:start="31:17" pos:end="47:17">if <condition pos:start="31:20" pos:end="31:37">(<expr pos:start="31:21" pos:end="31:36"><name pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:21">v</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:31">condover</name></name> <operator pos:start="31:33" pos:end="31:34">==</operator> <literal type="number" pos:start="31:36" pos:end="31:36">3</literal></expr>)</condition>

                <block pos:start="33:17" pos:end="47:17">{<block_content pos:start="35:21" pos:end="46:0">

                    <expr_stmt pos:start="35:21" pos:end="35:72"><expr pos:start="35:21" pos:end="35:71"><name pos:start="35:21" pos:end="35:26">status</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:71"><name pos:start="35:30" pos:end="35:46">bitplane_decoding</name><argument_list pos:start="35:47" pos:end="35:71">(<argument pos:start="35:48" pos:end="35:67"><expr pos:start="35:48" pos:end="35:67"><operator pos:start="35:48" pos:end="35:48">&amp;</operator><name pos:start="35:49" pos:end="35:67"><name pos:start="35:49" pos:end="35:49">v</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:67">over_flags_plane</name></name></expr></argument>, <argument pos:start="35:70" pos:end="35:70"><expr pos:start="35:70" pos:end="35:70"><name pos:start="35:70" pos:end="35:70">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="37:21" pos:end="40:0"><if pos:start="37:21" pos:end="40:0">if <condition pos:start="37:24" pos:end="37:35">(<expr pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:30">status</name> <operator pos:start="37:32" pos:end="37:32">&lt;</operator> <literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr>)</condition><block type="pseudo" pos:start="37:37" pos:end="40:0"><block_content pos:start="37:37" pos:end="40:0"> <return pos:start="37:37" pos:end="40:0">return <expr pos:start="37:44" pos:end="37:45"><operator pos:start="37:44" pos:end="37:44">-</operator><literal type="number" pos:start="37:45" pos:end="37:45">1</literal></expr>;</return></block_content></block></if></if_stmt>

<cpp:if pos:start="39:1" pos:end="39:11">#  <cpp:directive pos:start="39:4" pos:end="39:5">if</cpp:directive> <expr pos:start="39:7" pos:end="39:11"><name pos:start="39:7" pos:end="39:11">TRACE</name></expr></cpp:if>

                    <expr_stmt pos:start="41:21" pos:end="46:0"><expr pos:start="41:21" pos:end="43:74"><call pos:start="41:21" pos:end="43:74"><name pos:start="41:21" pos:end="41:26">av_log</name><argument_list pos:start="41:27" pos:end="43:74">(<argument pos:start="41:28" pos:end="41:37"><expr pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:37"><name pos:start="41:28" pos:end="41:28">v</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:37">avctx</name></name></expr></argument>, <argument pos:start="41:40" pos:end="41:51"><expr pos:start="41:40" pos:end="41:51"><name pos:start="41:40" pos:end="41:51">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="41:54" pos:end="43:52"><expr pos:start="41:54" pos:end="43:52"><literal type="string" pos:start="41:54" pos:end="41:81">"Overflags plane encoding: "</literal>

                           <literal type="string" pos:start="43:28" pos:end="43:52">"Imode: %i, Invert: %i\n"</literal></expr></argument>, <argument pos:start="43:55" pos:end="43:63"><expr pos:start="43:55" pos:end="43:63"><name pos:start="43:55" pos:end="43:60">status</name><operator pos:start="43:61" pos:end="43:62">&gt;&gt;</operator><literal type="number" pos:start="43:63" pos:end="43:63">1</literal></expr></argument>, <argument pos:start="43:66" pos:end="43:73"><expr pos:start="43:66" pos:end="43:73"><name pos:start="43:66" pos:end="43:71">status</name><operator pos:start="43:72" pos:end="43:72">&amp;</operator><literal type="number" pos:start="43:73" pos:end="43:73">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="45:1" pos:end="45:8">#  <cpp:directive pos:start="45:4" pos:end="45:8">endif</cpp:directive></cpp:endif>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="59:5" pos:end="59:56">/* Epilog (AC/DC syntax) should be done in caller */</comment>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
