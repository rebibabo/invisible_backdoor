<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12177.c" pos:tabs="8"><function pos:start="1:1" pos:end="545:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:50">hl_decode_mb_internal</name><parameter_list pos:start="1:51" pos:end="1:78">(<parameter pos:start="1:52" pos:end="1:65"><decl pos:start="1:52" pos:end="1:65"><type pos:start="1:52" pos:end="1:65"><name pos:start="1:52" pos:end="1:62">H264Context</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:77"><decl pos:start="1:68" pos:end="1:77"><type pos:start="1:68" pos:end="1:77"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:77">simple</name></decl></parameter>)</parameter_list><block pos:start="1:79" pos:end="545:1">{<block_content pos:start="3:5" pos:end="543:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">mb_x</name><init pos:start="5:19" pos:end="5:27">= <expr pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:27"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:27">mb_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">mb_y</name><init pos:start="7:19" pos:end="7:27">= <expr pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:21">s</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:27">mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">mb_xy</name><init pos:start="9:20" pos:end="9:45">= <expr pos:start="9:22" pos:end="9:45"><name pos:start="9:22" pos:end="9:25">mb_x</name> <operator pos:start="9:27" pos:end="9:27">+</operator> <name pos:start="9:29" pos:end="9:32">mb_y</name><operator pos:start="9:33" pos:end="9:33">*</operator><name pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:34">s</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">mb_stride</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:57"><decl pos:start="11:5" pos:end="11:56"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:21">mb_type</name><init pos:start="11:22" pos:end="11:56">= <expr pos:start="11:24" pos:end="11:56"><name pos:start="11:24" pos:end="11:56"><name pos:start="11:24" pos:end="11:24">s</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:41">current_picture</name><operator pos:start="11:42" pos:end="11:42">.</operator><name pos:start="11:43" pos:end="11:49">mb_type</name><index pos:start="11:50" pos:end="11:56">[<expr pos:start="11:51" pos:end="11:55"><name pos:start="11:51" pos:end="11:55">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:11">uint8_t</name>  <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:20">dest_y</name></decl>, <decl pos:start="13:23" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:30">dest_cb</name></decl>, <decl pos:start="13:33" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:33" pos:end="13:33">*</modifier></type><name pos:start="13:34" pos:end="13:40">dest_cr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name></decl>, <decl pos:start="15:19" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:19" pos:end="15:28">uvlinesize</name></decl> <comment type="block" pos:start="15:30" pos:end="15:43">/*dct_offset*/</comment>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">int</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:21">block_offset</name> <init pos:start="19:23" pos:end="19:43">= <expr pos:start="19:25" pos:end="19:43"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:43"><name pos:start="19:26" pos:end="19:26">h</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:40">block_offset</name><index pos:start="19:41" pos:end="19:43">[<expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:22"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:18">unsigned</name> <name pos:start="21:20" pos:end="21:22">int</name></type> <name pos:start="21:24" pos:end="21:29">bottom</name> <init pos:start="21:31" pos:end="21:40">= <expr pos:start="21:33" pos:end="21:40"><name pos:start="21:33" pos:end="21:36">mb_y</name> <operator pos:start="21:38" pos:end="21:38">&amp;</operator> <literal type="number" pos:start="21:40" pos:end="21:40">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:129"><decl pos:start="23:5" pos:end="23:76"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:30">transform_bypass</name> <init pos:start="23:32" pos:end="23:76">= <expr pos:start="23:34" pos:end="23:76"><operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:43"><name pos:start="23:35" pos:end="23:35">s</name><operator pos:start="23:36" pos:end="23:37">-&gt;</operator><name pos:start="23:38" pos:end="23:43">qscale</name></name> <operator pos:start="23:45" pos:end="23:46">==</operator> <literal type="number" pos:start="23:48" pos:end="23:48">0</literal> <operator pos:start="23:50" pos:end="23:51">&amp;&amp;</operator> <name pos:start="23:53" pos:end="23:75"><name pos:start="23:53" pos:end="23:53">h</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:58">sps</name><operator pos:start="23:59" pos:end="23:59">.</operator><name pos:start="23:60" pos:end="23:75">transform_bypass</name></name><operator pos:start="23:76" pos:end="23:76">)</operator></expr></init></decl>, <decl pos:start="23:79" pos:end="23:128"><type ref="prev" pos:start="23:5" pos:end="23:13"/><name pos:start="23:79" pos:end="23:85">is_h264</name> <init pos:start="23:87" pos:end="23:128">= <expr pos:start="23:89" pos:end="23:128"><operator pos:start="23:89" pos:end="23:89">(</operator><name pos:start="23:90" pos:end="23:95">simple</name> <operator pos:start="23:97" pos:end="23:98">||</operator> <name pos:start="23:100" pos:end="23:110"><name pos:start="23:100" pos:end="23:100">s</name><operator pos:start="23:101" pos:end="23:102">-&gt;</operator><name pos:start="23:103" pos:end="23:110">codec_id</name></name> <operator pos:start="23:112" pos:end="23:113">==</operator> <name pos:start="23:115" pos:end="23:127">CODEC_ID_H264</name><operator pos:start="23:128" pos:end="23:128">)</operator></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="25:5" pos:end="25:63"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">void</name></type> (<modifier pos:start="25:11" pos:end="25:11">*</modifier><name pos:start="25:12" pos:end="25:19">idct_add</name>)<parameter_list pos:start="25:21" pos:end="25:62">(<parameter pos:start="25:22" pos:end="25:33"><decl pos:start="25:22" pos:end="25:33"><type pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:28">uint8_t</name> <modifier pos:start="25:30" pos:end="25:30">*</modifier></type><name pos:start="25:31" pos:end="25:33">dst</name></decl></parameter>, <parameter pos:start="25:36" pos:end="25:49"><decl pos:start="25:36" pos:end="25:49"><type pos:start="25:36" pos:end="25:49"><name pos:start="25:36" pos:end="25:42">DCTELEM</name> <modifier pos:start="25:44" pos:end="25:44">*</modifier></type><name pos:start="25:45" pos:end="25:49">block</name></decl></parameter>, <parameter pos:start="25:52" pos:end="25:61"><decl pos:start="25:52" pos:end="25:61"><type pos:start="25:52" pos:end="25:61"><name pos:start="25:52" pos:end="25:54">int</name></type> <name pos:start="25:56" pos:end="25:61">stride</name></decl></parameter>)</parameter_list>;</function_decl>

    <function_decl pos:start="27:5" pos:end="27:66"><type pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:8">void</name></type> (<modifier pos:start="27:11" pos:end="27:11">*</modifier><name pos:start="27:12" pos:end="27:22">idct_dc_add</name>)<parameter_list pos:start="27:24" pos:end="27:65">(<parameter pos:start="27:25" pos:end="27:36"><decl pos:start="27:25" pos:end="27:36"><type pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:31">uint8_t</name> <modifier pos:start="27:33" pos:end="27:33">*</modifier></type><name pos:start="27:34" pos:end="27:36">dst</name></decl></parameter>, <parameter pos:start="27:39" pos:end="27:52"><decl pos:start="27:39" pos:end="27:52"><type pos:start="27:39" pos:end="27:52"><name pos:start="27:39" pos:end="27:45">DCTELEM</name> <modifier pos:start="27:47" pos:end="27:47">*</modifier></type><name pos:start="27:48" pos:end="27:52">block</name></decl></parameter>, <parameter pos:start="27:55" pos:end="27:64"><decl pos:start="27:55" pos:end="27:64"><type pos:start="27:55" pos:end="27:64"><name pos:start="27:55" pos:end="27:57">int</name></type> <name pos:start="27:59" pos:end="27:64">stride</name></decl></parameter>)</parameter_list>;</function_decl>



    <expr_stmt pos:start="31:5" pos:end="31:82"><expr pos:start="31:5" pos:end="31:81"><name pos:start="31:5" pos:end="31:10">dest_y</name>  <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:40"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:32">current_picture</name><operator pos:start="31:33" pos:end="31:33">.</operator><name pos:start="31:34" pos:end="31:37">data</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr>]</index></name> <operator pos:start="31:42" pos:end="31:42">+</operator> <operator pos:start="31:44" pos:end="31:44">(</operator><name pos:start="31:45" pos:end="31:48">mb_y</name> <operator pos:start="31:50" pos:end="31:50">*</operator> <literal type="number" pos:start="31:52" pos:end="31:53">16</literal><operator pos:start="31:54" pos:end="31:54">*</operator> <name pos:start="31:56" pos:end="31:66"><name pos:start="31:56" pos:end="31:56">s</name><operator pos:start="31:57" pos:end="31:58">-&gt;</operator><name pos:start="31:59" pos:end="31:66">linesize</name></name>  <operator pos:start="31:69" pos:end="31:69">)</operator> <operator pos:start="31:71" pos:end="31:71">+</operator> <name pos:start="31:73" pos:end="31:76">mb_x</name> <operator pos:start="31:78" pos:end="31:78">*</operator> <literal type="number" pos:start="31:80" pos:end="31:81">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:81"><expr pos:start="33:5" pos:end="33:80"><name pos:start="33:5" pos:end="33:11">dest_cb</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:40"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:32">current_picture</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:37">data</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><literal type="number" pos:start="33:39" pos:end="33:39">1</literal></expr>]</index></name> <operator pos:start="33:42" pos:end="33:42">+</operator> <operator pos:start="33:44" pos:end="33:44">(</operator><name pos:start="33:45" pos:end="33:48">mb_y</name> <operator pos:start="33:50" pos:end="33:50">*</operator> <literal type="number" pos:start="33:52" pos:end="33:52">8</literal> <operator pos:start="33:54" pos:end="33:54">*</operator> <name pos:start="33:56" pos:end="33:68"><name pos:start="33:56" pos:end="33:56">s</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:68">uvlinesize</name></name><operator pos:start="33:69" pos:end="33:69">)</operator> <operator pos:start="33:71" pos:end="33:71">+</operator> <name pos:start="33:73" pos:end="33:76">mb_x</name> <operator pos:start="33:78" pos:end="33:78">*</operator> <literal type="number" pos:start="33:80" pos:end="33:80">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:81"><expr pos:start="35:5" pos:end="35:80"><name pos:start="35:5" pos:end="35:11">dest_cr</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:40"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:32">current_picture</name><operator pos:start="35:33" pos:end="35:33">.</operator><name pos:start="35:34" pos:end="35:37">data</name><index pos:start="35:38" pos:end="35:40">[<expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">2</literal></expr>]</index></name> <operator pos:start="35:42" pos:end="35:42">+</operator> <operator pos:start="35:44" pos:end="35:44">(</operator><name pos:start="35:45" pos:end="35:48">mb_y</name> <operator pos:start="35:50" pos:end="35:50">*</operator> <literal type="number" pos:start="35:52" pos:end="35:52">8</literal> <operator pos:start="35:54" pos:end="35:54">*</operator> <name pos:start="35:56" pos:end="35:68"><name pos:start="35:56" pos:end="35:56">s</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:68">uvlinesize</name></name><operator pos:start="35:69" pos:end="35:69">)</operator> <operator pos:start="35:71" pos:end="35:71">+</operator> <name pos:start="35:73" pos:end="35:76">mb_x</name> <operator pos:start="35:78" pos:end="35:78">*</operator> <literal type="number" pos:start="35:80" pos:end="35:80">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:77"><expr pos:start="39:5" pos:end="39:76"><call pos:start="39:5" pos:end="39:76"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:10">dsp</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:19">prefetch</name></name><argument_list pos:start="39:20" pos:end="39:76">(<argument pos:start="39:21" pos:end="39:59"><expr pos:start="39:21" pos:end="39:59"><name pos:start="39:21" pos:end="39:26">dest_y</name> <operator pos:start="39:28" pos:end="39:28">+</operator> <operator pos:start="39:30" pos:end="39:30">(</operator><name pos:start="39:31" pos:end="39:37"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:37">mb_x</name></name><operator pos:start="39:38" pos:end="39:38">&amp;</operator><literal type="number" pos:start="39:39" pos:end="39:39">3</literal><operator pos:start="39:40" pos:end="39:40">)</operator><operator pos:start="39:41" pos:end="39:41">*</operator><literal type="number" pos:start="39:42" pos:end="39:42">4</literal><operator pos:start="39:43" pos:end="39:43">*</operator><name pos:start="39:44" pos:end="39:54"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:54">linesize</name></name> <operator pos:start="39:56" pos:end="39:56">+</operator> <literal type="number" pos:start="39:58" pos:end="39:59">64</literal></expr></argument>, <argument pos:start="39:62" pos:end="39:72"><expr pos:start="39:62" pos:end="39:72"><name pos:start="39:62" pos:end="39:72"><name pos:start="39:62" pos:end="39:62">s</name><operator pos:start="39:63" pos:end="39:64">-&gt;</operator><name pos:start="39:65" pos:end="39:72">linesize</name></name></expr></argument>, <argument pos:start="39:75" pos:end="39:75"><expr pos:start="39:75" pos:end="39:75"><literal type="number" pos:start="39:75" pos:end="39:75">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:84"><expr pos:start="41:5" pos:end="41:83"><call pos:start="41:5" pos:end="41:83"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:10">dsp</name><operator pos:start="41:11" pos:end="41:11">.</operator><name pos:start="41:12" pos:end="41:19">prefetch</name></name><argument_list pos:start="41:20" pos:end="41:83">(<argument pos:start="41:21" pos:end="41:60"><expr pos:start="41:21" pos:end="41:60"><name pos:start="41:21" pos:end="41:27">dest_cb</name> <operator pos:start="41:29" pos:end="41:29">+</operator> <operator pos:start="41:31" pos:end="41:31">(</operator><name pos:start="41:32" pos:end="41:38"><name pos:start="41:32" pos:end="41:32">s</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:38">mb_x</name></name><operator pos:start="41:39" pos:end="41:39">&amp;</operator><literal type="number" pos:start="41:40" pos:end="41:40">7</literal><operator pos:start="41:41" pos:end="41:41">)</operator><operator pos:start="41:42" pos:end="41:42">*</operator><name pos:start="41:43" pos:end="41:55"><name pos:start="41:43" pos:end="41:43">s</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:55">uvlinesize</name></name> <operator pos:start="41:57" pos:end="41:57">+</operator> <literal type="number" pos:start="41:59" pos:end="41:60">64</literal></expr></argument>, <argument pos:start="41:63" pos:end="41:79"><expr pos:start="41:63" pos:end="41:79"><name pos:start="41:63" pos:end="41:69">dest_cr</name> <operator pos:start="41:71" pos:end="41:71">-</operator> <name pos:start="41:73" pos:end="41:79">dest_cb</name></expr></argument>, <argument pos:start="41:82" pos:end="41:82"><expr pos:start="41:82" pos:end="41:82"><literal type="number" pos:start="41:82" pos:end="41:82">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="107:5"><if pos:start="45:5" pos:end="99:5">if <condition pos:start="45:8" pos:end="45:28">(<expr pos:start="45:9" pos:end="45:27"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">simple</name> <operator pos:start="45:17" pos:end="45:18">&amp;&amp;</operator> <name pos:start="45:20" pos:end="45:27">MB_FIELD</name></expr>)</condition> <block pos:start="45:30" pos:end="99:5">{<block_content pos:start="47:9" pos:end="97:9">

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:16">linesize</name>   <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:35"><name pos:start="47:22" pos:end="47:22">h</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:35">mb_linesize</name></name>   <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:51"><name pos:start="47:41" pos:end="47:41">s</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:51">linesize</name></name> <operator pos:start="47:53" pos:end="47:53">*</operator> <literal type="number" pos:start="47:55" pos:end="47:55">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:18">uvlinesize</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:37"><name pos:start="49:22" pos:end="49:22">h</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:37">mb_uvlinesize</name></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:53"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:53">uvlinesize</name></name> <operator pos:start="49:55" pos:end="49:55">*</operator> <literal type="number" pos:start="49:57" pos:end="49:57">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:20">block_offset</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:43"><name pos:start="51:25" pos:end="51:25">h</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:39">block_offset</name><index pos:start="51:40" pos:end="51:43">[<expr pos:start="51:41" pos:end="51:42"><literal type="number" pos:start="51:41" pos:end="51:42">24</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if<condition pos:start="53:11" pos:end="53:18">(<expr pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:15">mb_y</name><operator pos:start="53:16" pos:end="53:16">&amp;</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>)</condition><block pos:start="53:19" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:38"> <comment type="line" pos:start="53:21" pos:end="53:50">//FIXME move out of this func?</comment>

            <expr_stmt pos:start="55:13" pos:end="55:37"><expr pos:start="55:13" pos:end="55:36"><name pos:start="55:13" pos:end="55:18">dest_y</name> <operator pos:start="55:20" pos:end="55:21">-=</operator> <name pos:start="55:23" pos:end="55:33"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:33">linesize</name></name><operator pos:start="55:34" pos:end="55:34">*</operator><literal type="number" pos:start="55:35" pos:end="55:36">15</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:19">dest_cb</name><operator pos:start="57:20" pos:end="57:21">-=</operator> <name pos:start="57:23" pos:end="57:35"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:35">uvlinesize</name></name><operator pos:start="57:36" pos:end="57:36">*</operator><literal type="number" pos:start="57:37" pos:end="57:37">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:38"><expr pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:19">dest_cr</name><operator pos:start="59:20" pos:end="59:21">-=</operator> <name pos:start="59:23" pos:end="59:35"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:35">uvlinesize</name></name><operator pos:start="59:36" pos:end="59:36">*</operator><literal type="number" pos:start="59:37" pos:end="59:37">7</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="97:9"><if pos:start="63:9" pos:end="97:9">if<condition pos:start="63:11" pos:end="63:23">(<expr pos:start="63:12" pos:end="63:22"><name pos:start="63:12" pos:end="63:22">FRAME_MBAFF</name></expr>)</condition> <block pos:start="63:25" pos:end="97:9">{<block_content pos:start="65:13" pos:end="95:13">

            <decl_stmt pos:start="65:13" pos:end="65:21"><decl pos:start="65:13" pos:end="65:20"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:20">list</name></decl>;</decl_stmt>

            <for pos:start="67:13" pos:end="95:13">for<control pos:start="67:16" pos:end="67:51">(<init pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:20">list</name><operator pos:start="67:21" pos:end="67:21">=</operator><literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</init> <condition pos:start="67:25" pos:end="67:43"><expr pos:start="67:25" pos:end="67:42"><name pos:start="67:25" pos:end="67:28">list</name><operator pos:start="67:29" pos:end="67:29">&lt;</operator><name pos:start="67:30" pos:end="67:42"><name pos:start="67:30" pos:end="67:30">h</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:42">list_count</name></name></expr>;</condition> <incr pos:start="67:45" pos:end="67:50"><expr pos:start="67:45" pos:end="67:50"><name pos:start="67:45" pos:end="67:48">list</name><operator pos:start="67:49" pos:end="67:50">++</operator></expr></incr>)</control><block pos:start="67:52" pos:end="95:13">{<block_content pos:start="69:17" pos:end="93:17">

                <if_stmt pos:start="69:17" pos:end="71:29"><if pos:start="69:17" pos:end="71:29">if<condition pos:start="69:19" pos:end="69:45">(<expr pos:start="69:20" pos:end="69:44"><operator pos:start="69:20" pos:end="69:20">!</operator><call pos:start="69:21" pos:end="69:44"><name pos:start="69:21" pos:end="69:29">USES_LIST</name><argument_list pos:start="69:30" pos:end="69:44">(<argument pos:start="69:31" pos:end="69:37"><expr pos:start="69:31" pos:end="69:37"><name pos:start="69:31" pos:end="69:37">mb_type</name></expr></argument>, <argument pos:start="69:40" pos:end="69:43"><expr pos:start="69:40" pos:end="69:43"><name pos:start="69:40" pos:end="69:43">list</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:29"><block_content pos:start="71:21" pos:end="71:29">

                    <continue pos:start="71:21" pos:end="71:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="73:17" pos:end="93:17"><if pos:start="73:17" pos:end="79:17">if<condition pos:start="73:19" pos:end="73:37">(<expr pos:start="73:20" pos:end="73:36"><call pos:start="73:20" pos:end="73:36"><name pos:start="73:20" pos:end="73:27">IS_16X16</name><argument_list pos:start="73:28" pos:end="73:36">(<argument pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:35">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="73:38" pos:end="79:17">{<block_content pos:start="75:21" pos:end="77:73">

                    <decl_stmt pos:start="75:21" pos:end="75:64"><decl pos:start="75:21" pos:end="75:63"><type pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:26">int8_t</name> <modifier pos:start="75:28" pos:end="75:28">*</modifier></type><name pos:start="75:29" pos:end="75:31">ref</name> <init pos:start="75:33" pos:end="75:63">= <expr pos:start="75:35" pos:end="75:63"><operator pos:start="75:35" pos:end="75:35">&amp;</operator><name pos:start="75:36" pos:end="75:63"><name pos:start="75:36" pos:end="75:36">h</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:47">ref_cache</name><index pos:start="75:48" pos:end="75:53">[<expr pos:start="75:49" pos:end="75:52"><name pos:start="75:49" pos:end="75:52">list</name></expr>]</index><index pos:start="75:54" pos:end="75:63">[<expr pos:start="75:55" pos:end="75:62"><name pos:start="75:55" pos:end="75:62"><name pos:start="75:55" pos:end="75:59">scan8</name><index pos:start="75:60" pos:end="75:62">[<expr pos:start="75:61" pos:end="75:61"><literal type="number" pos:start="75:61" pos:end="75:61">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:73"><expr pos:start="77:21" pos:end="77:72"><call pos:start="77:21" pos:end="77:72"><name pos:start="77:21" pos:end="77:34">fill_rectangle</name><argument_list pos:start="77:35" pos:end="77:72">(<argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">ref</name></expr></argument>, <argument pos:start="77:41" pos:end="77:41"><expr pos:start="77:41" pos:end="77:41"><literal type="number" pos:start="77:41" pos:end="77:41">4</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><literal type="number" pos:start="77:44" pos:end="77:44">4</literal></expr></argument>, <argument pos:start="77:47" pos:end="77:47"><expr pos:start="77:47" pos:end="77:47"><literal type="number" pos:start="77:47" pos:end="77:47">8</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:68"><expr pos:start="77:50" pos:end="77:68"><literal type="number" pos:start="77:50" pos:end="77:52">16</literal><operator pos:start="77:52" pos:end="77:52">+</operator><operator pos:start="77:53" pos:end="77:53">*</operator><name pos:start="77:54" pos:end="77:56">ref</name><operator pos:start="77:57" pos:end="77:57">^</operator><operator pos:start="77:58" pos:end="77:58">(</operator><name pos:start="77:59" pos:end="77:65"><name pos:start="77:59" pos:end="77:59">s</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:65">mb_y</name></name><operator pos:start="77:66" pos:end="77:66">&amp;</operator><literal type="number" pos:start="77:67" pos:end="77:67">1</literal><operator pos:start="77:68" pos:end="77:68">)</operator></expr></argument>, <argument pos:start="77:71" pos:end="77:71"><expr pos:start="77:71" pos:end="77:71"><literal type="number" pos:start="77:71" pos:end="77:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="79:18" pos:end="93:17">else<block pos:start="79:22" pos:end="93:17">{<block_content pos:start="81:21" pos:end="91:21">

                    <for pos:start="81:21" pos:end="91:21">for<control pos:start="81:24" pos:end="81:40">(<init pos:start="81:25" pos:end="81:28"><expr pos:start="81:25" pos:end="81:27"><name pos:start="81:25" pos:end="81:25">i</name><operator pos:start="81:26" pos:end="81:26">=</operator><literal type="number" pos:start="81:27" pos:end="81:27">0</literal></expr>;</init> <condition pos:start="81:30" pos:end="81:34"><expr pos:start="81:30" pos:end="81:33"><name pos:start="81:30" pos:end="81:30">i</name><operator pos:start="81:31" pos:end="81:31">&lt;</operator><literal type="number" pos:start="81:32" pos:end="81:33">16</literal></expr>;</condition> <incr pos:start="81:36" pos:end="81:39"><expr pos:start="81:36" pos:end="81:39"><name pos:start="81:36" pos:end="81:36">i</name><operator pos:start="81:37" pos:end="81:38">+=</operator><literal type="number" pos:start="81:39" pos:end="81:39">4</literal></expr></incr>)</control><block pos:start="81:41" pos:end="91:21">{<block_content pos:start="85:25" pos:end="89:106">

                        <comment type="line" pos:start="83:25" pos:end="83:89">//FIXME can refs be smaller than 8x8 when !direct_8x8_inference ?</comment>

                        <decl_stmt pos:start="85:25" pos:end="85:63"><decl pos:start="85:25" pos:end="85:62"><type pos:start="85:25" pos:end="85:27"><name pos:start="85:25" pos:end="85:27">int</name></type> <name pos:start="85:29" pos:end="85:31">ref</name> <init pos:start="85:33" pos:end="85:62">= <expr pos:start="85:35" pos:end="85:62"><name pos:start="85:35" pos:end="85:62"><name pos:start="85:35" pos:end="85:35">h</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:46">ref_cache</name><index pos:start="85:47" pos:end="85:52">[<expr pos:start="85:48" pos:end="85:51"><name pos:start="85:48" pos:end="85:51">list</name></expr>]</index><index pos:start="85:53" pos:end="85:62">[<expr pos:start="85:54" pos:end="85:61"><name pos:start="85:54" pos:end="85:61"><name pos:start="85:54" pos:end="85:58">scan8</name><index pos:start="85:59" pos:end="85:61">[<expr pos:start="85:60" pos:end="85:60"><name pos:start="85:60" pos:end="85:60">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="87:25" pos:end="89:106"><if pos:start="87:25" pos:end="89:106">if<condition pos:start="87:27" pos:end="87:36">(<expr pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:30">ref</name> <operator pos:start="87:32" pos:end="87:33">&gt;=</operator> <literal type="number" pos:start="87:35" pos:end="87:35">0</literal></expr>)</condition><block type="pseudo" pos:start="89:29" pos:end="89:106"><block_content pos:start="89:29" pos:end="89:106">

                            <expr_stmt pos:start="89:29" pos:end="89:106"><expr pos:start="89:29" pos:end="89:105"><call pos:start="89:29" pos:end="89:105"><name pos:start="89:29" pos:end="89:42">fill_rectangle</name><argument_list pos:start="89:43" pos:end="89:105">(<argument pos:start="89:44" pos:end="89:72"><expr pos:start="89:44" pos:end="89:72"><operator pos:start="89:44" pos:end="89:44">&amp;</operator><name pos:start="89:45" pos:end="89:72"><name pos:start="89:45" pos:end="89:45">h</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:56">ref_cache</name><index pos:start="89:57" pos:end="89:62">[<expr pos:start="89:58" pos:end="89:61"><name pos:start="89:58" pos:end="89:61">list</name></expr>]</index><index pos:start="89:63" pos:end="89:72">[<expr pos:start="89:64" pos:end="89:71"><name pos:start="89:64" pos:end="89:71"><name pos:start="89:64" pos:end="89:68">scan8</name><index pos:start="89:69" pos:end="89:71">[<expr pos:start="89:70" pos:end="89:70"><name pos:start="89:70" pos:end="89:70">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="89:75" pos:end="89:75"><expr pos:start="89:75" pos:end="89:75"><literal type="number" pos:start="89:75" pos:end="89:75">2</literal></expr></argument>, <argument pos:start="89:78" pos:end="89:78"><expr pos:start="89:78" pos:end="89:78"><literal type="number" pos:start="89:78" pos:end="89:78">2</literal></expr></argument>, <argument pos:start="89:81" pos:end="89:81"><expr pos:start="89:81" pos:end="89:81"><literal type="number" pos:start="89:81" pos:end="89:81">8</literal></expr></argument>, <argument pos:start="89:84" pos:end="89:101"><expr pos:start="89:84" pos:end="89:101"><literal type="number" pos:start="89:84" pos:end="89:86">16</literal><operator pos:start="89:86" pos:end="89:86">+</operator><name pos:start="89:87" pos:end="89:89">ref</name><operator pos:start="89:90" pos:end="89:90">^</operator><operator pos:start="89:91" pos:end="89:91">(</operator><name pos:start="89:92" pos:end="89:98"><name pos:start="89:92" pos:end="89:92">s</name><operator pos:start="89:93" pos:end="89:94">-&gt;</operator><name pos:start="89:95" pos:end="89:98">mb_y</name></name><operator pos:start="89:99" pos:end="89:99">&amp;</operator><literal type="number" pos:start="89:100" pos:end="89:100">1</literal><operator pos:start="89:101" pos:end="89:101">)</operator></expr></argument>, <argument pos:start="89:104" pos:end="89:104"><expr pos:start="89:104" pos:end="89:104"><literal type="number" pos:start="89:104" pos:end="89:104">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="107:5">else <block pos:start="99:12" pos:end="107:5">{<block_content pos:start="101:9" pos:end="103:54">

        <expr_stmt pos:start="101:9" pos:end="101:52"><expr pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:16">linesize</name>   <operator pos:start="101:20" pos:end="101:20">=</operator> <name pos:start="101:22" pos:end="101:35"><name pos:start="101:22" pos:end="101:22">h</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:35">mb_linesize</name></name>   <operator pos:start="101:39" pos:end="101:39">=</operator> <name pos:start="101:41" pos:end="101:51"><name pos:start="101:41" pos:end="101:41">s</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:51">linesize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:54"><expr pos:start="103:9" pos:end="103:53"><name pos:start="103:9" pos:end="103:18">uvlinesize</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:37"><name pos:start="103:22" pos:end="103:22">h</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:37">mb_uvlinesize</name></name> <operator pos:start="103:39" pos:end="103:39">=</operator> <name pos:start="103:41" pos:end="103:53"><name pos:start="103:41" pos:end="103:41">s</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:53">uvlinesize</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="105:1" pos:end="105:40">//        dct_offset = s-&gt;linesize * 16;</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="111:5" pos:end="129:5"><if pos:start="111:5" pos:end="117:5">if<condition pos:start="111:7" pos:end="111:24">(<expr pos:start="111:8" pos:end="111:23"><name pos:start="111:8" pos:end="111:23">transform_bypass</name></expr>)</condition><block pos:start="111:25" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:80">

        <expr_stmt pos:start="113:9" pos:end="115:80"><expr pos:start="113:9" pos:end="115:79"><name pos:start="113:9" pos:end="113:19">idct_dc_add</name> <operator pos:start="113:21" pos:end="113:21">=</operator>

        <name pos:start="115:9" pos:end="115:16">idct_add</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <ternary pos:start="115:20" pos:end="115:79"><condition pos:start="115:20" pos:end="115:39"><expr pos:start="115:20" pos:end="115:37"><call pos:start="115:20" pos:end="115:37"><name pos:start="115:20" pos:end="115:28">IS_8x8DCT</name><argument_list pos:start="115:29" pos:end="115:37">(<argument pos:start="115:30" pos:end="115:36"><expr pos:start="115:30" pos:end="115:36"><name pos:start="115:30" pos:end="115:36">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="115:41" pos:end="115:58"> <expr pos:start="115:41" pos:end="115:58"><name pos:start="115:41" pos:end="115:58"><name pos:start="115:41" pos:end="115:41">s</name><operator pos:start="115:42" pos:end="115:43">-&gt;</operator><name pos:start="115:44" pos:end="115:46">dsp</name><operator pos:start="115:47" pos:end="115:47">.</operator><name pos:start="115:48" pos:end="115:58">add_pixels8</name></name></expr> </then><else pos:start="115:60" pos:end="115:79">: <expr pos:start="115:62" pos:end="115:79"><name pos:start="115:62" pos:end="115:79"><name pos:start="115:62" pos:end="115:62">s</name><operator pos:start="115:63" pos:end="115:64">-&gt;</operator><name pos:start="115:65" pos:end="115:67">dsp</name><operator pos:start="115:68" pos:end="115:68">.</operator><name pos:start="115:69" pos:end="115:79">add_pixels4</name></name></expr></else></ternary></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="117:6" pos:end="123:5">else if<condition pos:start="117:13" pos:end="117:32">(<expr pos:start="117:14" pos:end="117:31"><call pos:start="117:14" pos:end="117:31"><name pos:start="117:14" pos:end="117:22">IS_8x8DCT</name><argument_list pos:start="117:23" pos:end="117:31">(<argument pos:start="117:24" pos:end="117:30"><expr pos:start="117:24" pos:end="117:30"><name pos:start="117:24" pos:end="117:30">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="117:33" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:41">

        <expr_stmt pos:start="119:9" pos:end="119:47"><expr pos:start="119:9" pos:end="119:46"><name pos:start="119:9" pos:end="119:19">idct_dc_add</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:46"><name pos:start="119:23" pos:end="119:23">s</name><operator pos:start="119:24" pos:end="119:25">-&gt;</operator><name pos:start="119:26" pos:end="119:28">dsp</name><operator pos:start="119:29" pos:end="119:29">.</operator><name pos:start="119:30" pos:end="119:46">h264_idct8_dc_add</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:41"><expr pos:start="121:9" pos:end="121:40"><name pos:start="121:9" pos:end="121:16">idct_add</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:40"><name pos:start="121:20" pos:end="121:20">s</name><operator pos:start="121:21" pos:end="121:22">-&gt;</operator><name pos:start="121:23" pos:end="121:25">dsp</name><operator pos:start="121:26" pos:end="121:26">.</operator><name pos:start="121:27" pos:end="121:40">h264_idct8_add</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="123:6" pos:end="129:5">else<block pos:start="123:10" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:40">

        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:19">idct_dc_add</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:45"><name pos:start="125:23" pos:end="125:23">s</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:28">dsp</name><operator pos:start="125:29" pos:end="125:29">.</operator><name pos:start="125:30" pos:end="125:45">h264_idct_dc_add</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:40"><expr pos:start="127:9" pos:end="127:39"><name pos:start="127:9" pos:end="127:16">idct_add</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:39"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:25">dsp</name><operator pos:start="127:26" pos:end="127:26">.</operator><name pos:start="127:27" pos:end="127:39">h264_idct_add</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="133:5" pos:end="147:5"><if pos:start="133:5" pos:end="147:5">if<condition pos:start="133:7" pos:end="135:81">(<expr pos:start="133:8" pos:end="135:80"><operator pos:start="133:8" pos:end="133:8">!</operator><name pos:start="133:9" pos:end="133:14">simple</name> <operator pos:start="133:16" pos:end="133:17">&amp;&amp;</operator> <name pos:start="133:19" pos:end="133:29">FRAME_MBAFF</name> <operator pos:start="133:31" pos:end="133:32">&amp;&amp;</operator> <name pos:start="133:34" pos:end="133:53"><name pos:start="133:34" pos:end="133:34">h</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:53">deblocking_filter</name></name> <operator pos:start="133:55" pos:end="133:56">&amp;&amp;</operator> <call pos:start="133:58" pos:end="133:74"><name pos:start="133:58" pos:end="133:65">IS_INTRA</name><argument_list pos:start="133:66" pos:end="133:74">(<argument pos:start="133:67" pos:end="133:73"><expr pos:start="133:67" pos:end="133:73"><name pos:start="133:67" pos:end="133:73">mb_type</name></expr></argument>)</argument_list></call>

       <operator pos:start="135:8" pos:end="135:9">&amp;&amp;</operator> <operator pos:start="135:11" pos:end="135:11">(</operator><operator pos:start="135:12" pos:end="135:12">!</operator><name pos:start="135:13" pos:end="135:18">bottom</name> <operator pos:start="135:20" pos:end="135:21">||</operator> <operator pos:start="135:23" pos:end="135:23">!</operator><call pos:start="135:24" pos:end="135:79"><name pos:start="135:24" pos:end="135:31">IS_INTRA</name><argument_list pos:start="135:32" pos:end="135:79">(<argument pos:start="135:33" pos:end="135:78"><expr pos:start="135:33" pos:end="135:78"><name pos:start="135:33" pos:end="135:78"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:50">current_picture</name><operator pos:start="135:51" pos:end="135:51">.</operator><name pos:start="135:52" pos:end="135:58">mb_type</name><index pos:start="135:59" pos:end="135:78">[<expr pos:start="135:60" pos:end="135:77"><name pos:start="135:60" pos:end="135:64">mb_xy</name><operator pos:start="135:65" pos:end="135:65">-</operator><name pos:start="135:66" pos:end="135:77"><name pos:start="135:66" pos:end="135:66">s</name><operator pos:start="135:67" pos:end="135:68">-&gt;</operator><name pos:start="135:69" pos:end="135:77">mb_stride</name></name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="135:80" pos:end="135:80">)</operator></expr>)</condition><block pos:start="135:82" pos:end="147:5">{<block_content pos:start="137:9" pos:end="145:82">

        <decl_stmt pos:start="137:9" pos:end="137:28"><decl pos:start="137:9" pos:end="137:27"><type pos:start="137:9" pos:end="137:11"><name pos:start="137:9" pos:end="137:11">int</name></type> <name pos:start="137:13" pos:end="137:17">mbt_y</name> <init pos:start="137:19" pos:end="137:27">= <expr pos:start="137:21" pos:end="137:27"><name pos:start="137:21" pos:end="137:24">mb_y</name><operator pos:start="137:25" pos:end="137:25">&amp;</operator><operator pos:start="137:26" pos:end="137:26">~</operator><literal type="number" pos:start="137:27" pos:end="137:27">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="139:9" pos:end="139:95"><decl pos:start="139:9" pos:end="139:94"><type pos:start="139:9" pos:end="139:17"><name pos:start="139:9" pos:end="139:15">uint8_t</name> <modifier pos:start="139:17" pos:end="139:17">*</modifier></type><name pos:start="139:18" pos:end="139:22">top_y</name>  <init pos:start="139:25" pos:end="139:94">= <expr pos:start="139:27" pos:end="139:94"><name pos:start="139:27" pos:end="139:52"><name pos:start="139:27" pos:end="139:27">s</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:44">current_picture</name><operator pos:start="139:45" pos:end="139:45">.</operator><name pos:start="139:46" pos:end="139:49">data</name><index pos:start="139:50" pos:end="139:52">[<expr pos:start="139:51" pos:end="139:51"><literal type="number" pos:start="139:51" pos:end="139:51">0</literal></expr>]</index></name> <operator pos:start="139:54" pos:end="139:54">+</operator> <operator pos:start="139:56" pos:end="139:56">(</operator><name pos:start="139:57" pos:end="139:61">mbt_y</name> <operator pos:start="139:63" pos:end="139:63">*</operator> <literal type="number" pos:start="139:65" pos:end="139:66">16</literal><operator pos:start="139:67" pos:end="139:67">*</operator> <name pos:start="139:69" pos:end="139:79"><name pos:start="139:69" pos:end="139:69">s</name><operator pos:start="139:70" pos:end="139:71">-&gt;</operator><name pos:start="139:72" pos:end="139:79">linesize</name></name>  <operator pos:start="139:82" pos:end="139:82">)</operator> <operator pos:start="139:84" pos:end="139:84">+</operator> <name pos:start="139:86" pos:end="139:89">mb_x</name> <operator pos:start="139:91" pos:end="139:91">*</operator> <literal type="number" pos:start="139:93" pos:end="139:94">16</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:94"><decl pos:start="141:9" pos:end="141:93"><type pos:start="141:9" pos:end="141:17"><name pos:start="141:9" pos:end="141:15">uint8_t</name> <modifier pos:start="141:17" pos:end="141:17">*</modifier></type><name pos:start="141:18" pos:end="141:23">top_cb</name> <init pos:start="141:25" pos:end="141:93">= <expr pos:start="141:27" pos:end="141:93"><name pos:start="141:27" pos:end="141:52"><name pos:start="141:27" pos:end="141:27">s</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:44">current_picture</name><operator pos:start="141:45" pos:end="141:45">.</operator><name pos:start="141:46" pos:end="141:49">data</name><index pos:start="141:50" pos:end="141:52">[<expr pos:start="141:51" pos:end="141:51"><literal type="number" pos:start="141:51" pos:end="141:51">1</literal></expr>]</index></name> <operator pos:start="141:54" pos:end="141:54">+</operator> <operator pos:start="141:56" pos:end="141:56">(</operator><name pos:start="141:57" pos:end="141:61">mbt_y</name> <operator pos:start="141:63" pos:end="141:63">*</operator> <literal type="number" pos:start="141:65" pos:end="141:65">8</literal> <operator pos:start="141:67" pos:end="141:67">*</operator> <name pos:start="141:69" pos:end="141:81"><name pos:start="141:69" pos:end="141:69">s</name><operator pos:start="141:70" pos:end="141:71">-&gt;</operator><name pos:start="141:72" pos:end="141:81">uvlinesize</name></name><operator pos:start="141:82" pos:end="141:82">)</operator> <operator pos:start="141:84" pos:end="141:84">+</operator> <name pos:start="141:86" pos:end="141:89">mb_x</name> <operator pos:start="141:91" pos:end="141:91">*</operator> <literal type="number" pos:start="141:93" pos:end="141:93">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="143:9" pos:end="143:94"><decl pos:start="143:9" pos:end="143:93"><type pos:start="143:9" pos:end="143:17"><name pos:start="143:9" pos:end="143:15">uint8_t</name> <modifier pos:start="143:17" pos:end="143:17">*</modifier></type><name pos:start="143:18" pos:end="143:23">top_cr</name> <init pos:start="143:25" pos:end="143:93">= <expr pos:start="143:27" pos:end="143:93"><name pos:start="143:27" pos:end="143:52"><name pos:start="143:27" pos:end="143:27">s</name><operator pos:start="143:28" pos:end="143:29">-&gt;</operator><name pos:start="143:30" pos:end="143:44">current_picture</name><operator pos:start="143:45" pos:end="143:45">.</operator><name pos:start="143:46" pos:end="143:49">data</name><index pos:start="143:50" pos:end="143:52">[<expr pos:start="143:51" pos:end="143:51"><literal type="number" pos:start="143:51" pos:end="143:51">2</literal></expr>]</index></name> <operator pos:start="143:54" pos:end="143:54">+</operator> <operator pos:start="143:56" pos:end="143:56">(</operator><name pos:start="143:57" pos:end="143:61">mbt_y</name> <operator pos:start="143:63" pos:end="143:63">*</operator> <literal type="number" pos:start="143:65" pos:end="143:65">8</literal> <operator pos:start="143:67" pos:end="143:67">*</operator> <name pos:start="143:69" pos:end="143:81"><name pos:start="143:69" pos:end="143:69">s</name><operator pos:start="143:70" pos:end="143:71">-&gt;</operator><name pos:start="143:72" pos:end="143:81">uvlinesize</name></name><operator pos:start="143:82" pos:end="143:82">)</operator> <operator pos:start="143:84" pos:end="143:84">+</operator> <name pos:start="143:86" pos:end="143:89">mb_x</name> <operator pos:start="143:91" pos:end="143:91">*</operator> <literal type="number" pos:start="143:93" pos:end="143:93">8</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:82"><expr pos:start="145:9" pos:end="145:81"><call pos:start="145:9" pos:end="145:81"><name pos:start="145:9" pos:end="145:24">xchg_pair_border</name><argument_list pos:start="145:25" pos:end="145:81">(<argument pos:start="145:26" pos:end="145:26"><expr pos:start="145:26" pos:end="145:26"><name pos:start="145:26" pos:end="145:26">h</name></expr></argument>, <argument pos:start="145:29" pos:end="145:33"><expr pos:start="145:29" pos:end="145:33"><name pos:start="145:29" pos:end="145:33">top_y</name></expr></argument>, <argument pos:start="145:36" pos:end="145:41"><expr pos:start="145:36" pos:end="145:41"><name pos:start="145:36" pos:end="145:41">top_cb</name></expr></argument>, <argument pos:start="145:44" pos:end="145:49"><expr pos:start="145:44" pos:end="145:49"><name pos:start="145:44" pos:end="145:49">top_cr</name></expr></argument>, <argument pos:start="145:52" pos:end="145:62"><expr pos:start="145:52" pos:end="145:62"><name pos:start="145:52" pos:end="145:62"><name pos:start="145:52" pos:end="145:52">s</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:62">linesize</name></name></expr></argument>, <argument pos:start="145:65" pos:end="145:77"><expr pos:start="145:65" pos:end="145:77"><name pos:start="145:65" pos:end="145:77"><name pos:start="145:65" pos:end="145:65">s</name><operator pos:start="145:66" pos:end="145:67">-&gt;</operator><name pos:start="145:68" pos:end="145:77">uvlinesize</name></name></expr></argument>, <argument pos:start="145:80" pos:end="145:80"><expr pos:start="145:80" pos:end="145:80"><literal type="number" pos:start="145:80" pos:end="145:80">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="467:5"><if pos:start="151:5" pos:end="203:5">if <condition pos:start="151:8" pos:end="151:41">(<expr pos:start="151:9" pos:end="151:40"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:15">simple</name> <operator pos:start="151:17" pos:end="151:18">&amp;&amp;</operator> <call pos:start="151:20" pos:end="151:40"><name pos:start="151:20" pos:end="151:31">IS_INTRA_PCM</name><argument_list pos:start="151:32" pos:end="151:40">(<argument pos:start="151:33" pos:end="151:39"><expr pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:39">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:43" pos:end="203:5">{<block_content pos:start="153:9" pos:end="201:9">

        <decl_stmt pos:start="153:9" pos:end="153:26"><decl pos:start="153:9" pos:end="153:22"><type pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:16">unsigned</name> <name pos:start="153:18" pos:end="153:20">int</name></type> <name pos:start="153:22" pos:end="153:22">x</name></decl>, <decl pos:start="153:25" pos:end="153:25"><type ref="prev" pos:start="153:9" pos:end="153:20"/><name pos:start="153:25" pos:end="153:25">y</name></decl>;</decl_stmt>



        <comment type="line" pos:start="157:9" pos:end="157:76">// The pixels are stored in h-&gt;mb array in the same order as levels,</comment>

        <comment type="line" pos:start="159:9" pos:end="159:52">// copy them in output in the correct order.</comment>

        <for pos:start="161:9" pos:end="173:9">for<control pos:start="161:12" pos:end="161:27">(<init pos:start="161:13" pos:end="161:16"><expr pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:13">i</name><operator pos:start="161:14" pos:end="161:14">=</operator><literal type="number" pos:start="161:15" pos:end="161:15">0</literal></expr>;</init> <condition pos:start="161:18" pos:end="161:22"><expr pos:start="161:18" pos:end="161:21"><name pos:start="161:18" pos:end="161:18">i</name><operator pos:start="161:19" pos:end="161:19">&lt;</operator><literal type="number" pos:start="161:20" pos:end="161:21">16</literal></expr>;</condition> <incr pos:start="161:24" pos:end="161:26"><expr pos:start="161:24" pos:end="161:26"><name pos:start="161:24" pos:end="161:24">i</name><operator pos:start="161:25" pos:end="161:26">++</operator></expr></incr>)</control> <block pos:start="161:29" pos:end="173:9">{<block_content pos:start="163:13" pos:end="171:13">

            <for pos:start="163:13" pos:end="171:13">for <control pos:start="163:17" pos:end="163:31">(<init pos:start="163:18" pos:end="163:21"><expr pos:start="163:18" pos:end="163:20"><name pos:start="163:18" pos:end="163:18">y</name><operator pos:start="163:19" pos:end="163:19">=</operator><literal type="number" pos:start="163:20" pos:end="163:20">0</literal></expr>;</init> <condition pos:start="163:23" pos:end="163:26"><expr pos:start="163:23" pos:end="163:25"><name pos:start="163:23" pos:end="163:23">y</name><operator pos:start="163:24" pos:end="163:24">&lt;</operator><literal type="number" pos:start="163:25" pos:end="163:25">4</literal></expr>;</condition> <incr pos:start="163:28" pos:end="163:30"><expr pos:start="163:28" pos:end="163:30"><name pos:start="163:28" pos:end="163:28">y</name><operator pos:start="163:29" pos:end="163:30">++</operator></expr></incr>)</control> <block pos:start="163:33" pos:end="171:13">{<block_content pos:start="165:17" pos:end="169:17">

                <for pos:start="165:17" pos:end="169:17">for <control pos:start="165:21" pos:end="165:35">(<init pos:start="165:22" pos:end="165:25"><expr pos:start="165:22" pos:end="165:24"><name pos:start="165:22" pos:end="165:22">x</name><operator pos:start="165:23" pos:end="165:23">=</operator><literal type="number" pos:start="165:24" pos:end="165:24">0</literal></expr>;</init> <condition pos:start="165:27" pos:end="165:30"><expr pos:start="165:27" pos:end="165:29"><name pos:start="165:27" pos:end="165:27">x</name><operator pos:start="165:28" pos:end="165:28">&lt;</operator><literal type="number" pos:start="165:29" pos:end="165:29">4</literal></expr>;</condition> <incr pos:start="165:32" pos:end="165:34"><expr pos:start="165:32" pos:end="165:34"><name pos:start="165:32" pos:end="165:32">x</name><operator pos:start="165:33" pos:end="165:34">++</operator></expr></incr>)</control> <block pos:start="165:37" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:85">

                    <expr_stmt pos:start="167:21" pos:end="167:85"><expr pos:start="167:21" pos:end="167:84"><operator pos:start="167:21" pos:end="167:21">*</operator><operator pos:start="167:22" pos:end="167:22">(</operator><name pos:start="167:23" pos:end="167:28">dest_y</name> <operator pos:start="167:30" pos:end="167:30">+</operator> <name pos:start="167:32" pos:end="167:46"><name pos:start="167:32" pos:end="167:43">block_offset</name><index pos:start="167:44" pos:end="167:46">[<expr pos:start="167:45" pos:end="167:45"><name pos:start="167:45" pos:end="167:45">i</name></expr>]</index></name> <operator pos:start="167:48" pos:end="167:48">+</operator> <name pos:start="167:50" pos:end="167:50">y</name><operator pos:start="167:51" pos:end="167:51">*</operator><name pos:start="167:52" pos:end="167:59">linesize</name> <operator pos:start="167:61" pos:end="167:61">+</operator> <name pos:start="167:63" pos:end="167:63">x</name><operator pos:start="167:64" pos:end="167:64">)</operator> <operator pos:start="167:66" pos:end="167:66">=</operator> <name pos:start="167:68" pos:end="167:84"><name pos:start="167:68" pos:end="167:68">h</name><operator pos:start="167:69" pos:end="167:70">-&gt;</operator><name pos:start="167:71" pos:end="167:72">mb</name><index pos:start="167:73" pos:end="167:84">[<expr pos:start="167:74" pos:end="167:83"><name pos:start="167:74" pos:end="167:74">i</name><operator pos:start="167:75" pos:end="167:75">*</operator><literal type="number" pos:start="167:76" pos:end="167:78">16</literal><operator pos:start="167:78" pos:end="167:78">+</operator><name pos:start="167:79" pos:end="167:79">y</name><operator pos:start="167:80" pos:end="167:80">*</operator><literal type="number" pos:start="167:81" pos:end="167:82">4</literal><operator pos:start="167:82" pos:end="167:82">+</operator><name pos:start="167:83" pos:end="167:83">x</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="175:9" pos:end="187:9">for<control pos:start="175:12" pos:end="175:30">(<init pos:start="175:13" pos:end="175:17"><expr pos:start="175:13" pos:end="175:16"><name pos:start="175:13" pos:end="175:13">i</name><operator pos:start="175:14" pos:end="175:14">=</operator><literal type="number" pos:start="175:15" pos:end="175:16">16</literal></expr>;</init> <condition pos:start="175:19" pos:end="175:25"><expr pos:start="175:19" pos:end="175:24"><name pos:start="175:19" pos:end="175:19">i</name><operator pos:start="175:20" pos:end="175:20">&lt;</operator><literal type="number" pos:start="175:21" pos:end="175:23">16</literal><operator pos:start="175:23" pos:end="175:23">+</operator><literal type="number" pos:start="175:24" pos:end="175:24">4</literal></expr>;</condition> <incr pos:start="175:27" pos:end="175:29"><expr pos:start="175:27" pos:end="175:29"><name pos:start="175:27" pos:end="175:27">i</name><operator pos:start="175:28" pos:end="175:29">++</operator></expr></incr>)</control> <block pos:start="175:32" pos:end="187:9">{<block_content pos:start="177:13" pos:end="185:13">

            <for pos:start="177:13" pos:end="185:13">for <control pos:start="177:17" pos:end="177:31">(<init pos:start="177:18" pos:end="177:21"><expr pos:start="177:18" pos:end="177:20"><name pos:start="177:18" pos:end="177:18">y</name><operator pos:start="177:19" pos:end="177:19">=</operator><literal type="number" pos:start="177:20" pos:end="177:20">0</literal></expr>;</init> <condition pos:start="177:23" pos:end="177:26"><expr pos:start="177:23" pos:end="177:25"><name pos:start="177:23" pos:end="177:23">y</name><operator pos:start="177:24" pos:end="177:24">&lt;</operator><literal type="number" pos:start="177:25" pos:end="177:25">4</literal></expr>;</condition> <incr pos:start="177:28" pos:end="177:30"><expr pos:start="177:28" pos:end="177:30"><name pos:start="177:28" pos:end="177:28">y</name><operator pos:start="177:29" pos:end="177:30">++</operator></expr></incr>)</control> <block pos:start="177:33" pos:end="185:13">{<block_content pos:start="179:17" pos:end="183:17">

                <for pos:start="179:17" pos:end="183:17">for <control pos:start="179:21" pos:end="179:35">(<init pos:start="179:22" pos:end="179:25"><expr pos:start="179:22" pos:end="179:24"><name pos:start="179:22" pos:end="179:22">x</name><operator pos:start="179:23" pos:end="179:23">=</operator><literal type="number" pos:start="179:24" pos:end="179:24">0</literal></expr>;</init> <condition pos:start="179:27" pos:end="179:30"><expr pos:start="179:27" pos:end="179:29"><name pos:start="179:27" pos:end="179:27">x</name><operator pos:start="179:28" pos:end="179:28">&lt;</operator><literal type="number" pos:start="179:29" pos:end="179:29">4</literal></expr>;</condition> <incr pos:start="179:32" pos:end="179:34"><expr pos:start="179:32" pos:end="179:34"><name pos:start="179:32" pos:end="179:32">x</name><operator pos:start="179:33" pos:end="179:34">++</operator></expr></incr>)</control> <block pos:start="179:37" pos:end="183:17">{<block_content pos:start="181:21" pos:end="181:88">

                    <expr_stmt pos:start="181:21" pos:end="181:88"><expr pos:start="181:21" pos:end="181:87"><operator pos:start="181:21" pos:end="181:21">*</operator><operator pos:start="181:22" pos:end="181:22">(</operator><name pos:start="181:23" pos:end="181:29">dest_cb</name> <operator pos:start="181:31" pos:end="181:31">+</operator> <name pos:start="181:33" pos:end="181:47"><name pos:start="181:33" pos:end="181:44">block_offset</name><index pos:start="181:45" pos:end="181:47">[<expr pos:start="181:46" pos:end="181:46"><name pos:start="181:46" pos:end="181:46">i</name></expr>]</index></name> <operator pos:start="181:49" pos:end="181:49">+</operator> <name pos:start="181:51" pos:end="181:51">y</name><operator pos:start="181:52" pos:end="181:52">*</operator><name pos:start="181:53" pos:end="181:62">uvlinesize</name> <operator pos:start="181:64" pos:end="181:64">+</operator> <name pos:start="181:66" pos:end="181:66">x</name><operator pos:start="181:67" pos:end="181:67">)</operator> <operator pos:start="181:69" pos:end="181:69">=</operator> <name pos:start="181:71" pos:end="181:87"><name pos:start="181:71" pos:end="181:71">h</name><operator pos:start="181:72" pos:end="181:73">-&gt;</operator><name pos:start="181:74" pos:end="181:75">mb</name><index pos:start="181:76" pos:end="181:87">[<expr pos:start="181:77" pos:end="181:86"><name pos:start="181:77" pos:end="181:77">i</name><operator pos:start="181:78" pos:end="181:78">*</operator><literal type="number" pos:start="181:79" pos:end="181:81">16</literal><operator pos:start="181:81" pos:end="181:81">+</operator><name pos:start="181:82" pos:end="181:82">y</name><operator pos:start="181:83" pos:end="181:83">*</operator><literal type="number" pos:start="181:84" pos:end="181:85">4</literal><operator pos:start="181:85" pos:end="181:85">+</operator><name pos:start="181:86" pos:end="181:86">x</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <for pos:start="189:9" pos:end="201:9">for<control pos:start="189:12" pos:end="189:30">(<init pos:start="189:13" pos:end="189:17"><expr pos:start="189:13" pos:end="189:16"><name pos:start="189:13" pos:end="189:13">i</name><operator pos:start="189:14" pos:end="189:14">=</operator><literal type="number" pos:start="189:15" pos:end="189:16">20</literal></expr>;</init> <condition pos:start="189:19" pos:end="189:25"><expr pos:start="189:19" pos:end="189:24"><name pos:start="189:19" pos:end="189:19">i</name><operator pos:start="189:20" pos:end="189:20">&lt;</operator><literal type="number" pos:start="189:21" pos:end="189:23">20</literal><operator pos:start="189:23" pos:end="189:23">+</operator><literal type="number" pos:start="189:24" pos:end="189:24">4</literal></expr>;</condition> <incr pos:start="189:27" pos:end="189:29"><expr pos:start="189:27" pos:end="189:29"><name pos:start="189:27" pos:end="189:27">i</name><operator pos:start="189:28" pos:end="189:29">++</operator></expr></incr>)</control> <block pos:start="189:32" pos:end="201:9">{<block_content pos:start="191:13" pos:end="199:13">

            <for pos:start="191:13" pos:end="199:13">for <control pos:start="191:17" pos:end="191:31">(<init pos:start="191:18" pos:end="191:21"><expr pos:start="191:18" pos:end="191:20"><name pos:start="191:18" pos:end="191:18">y</name><operator pos:start="191:19" pos:end="191:19">=</operator><literal type="number" pos:start="191:20" pos:end="191:20">0</literal></expr>;</init> <condition pos:start="191:23" pos:end="191:26"><expr pos:start="191:23" pos:end="191:25"><name pos:start="191:23" pos:end="191:23">y</name><operator pos:start="191:24" pos:end="191:24">&lt;</operator><literal type="number" pos:start="191:25" pos:end="191:25">4</literal></expr>;</condition> <incr pos:start="191:28" pos:end="191:30"><expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:28">y</name><operator pos:start="191:29" pos:end="191:30">++</operator></expr></incr>)</control> <block pos:start="191:33" pos:end="199:13">{<block_content pos:start="193:17" pos:end="197:17">

                <for pos:start="193:17" pos:end="197:17">for <control pos:start="193:21" pos:end="193:35">(<init pos:start="193:22" pos:end="193:25"><expr pos:start="193:22" pos:end="193:24"><name pos:start="193:22" pos:end="193:22">x</name><operator pos:start="193:23" pos:end="193:23">=</operator><literal type="number" pos:start="193:24" pos:end="193:24">0</literal></expr>;</init> <condition pos:start="193:27" pos:end="193:30"><expr pos:start="193:27" pos:end="193:29"><name pos:start="193:27" pos:end="193:27">x</name><operator pos:start="193:28" pos:end="193:28">&lt;</operator><literal type="number" pos:start="193:29" pos:end="193:29">4</literal></expr>;</condition> <incr pos:start="193:32" pos:end="193:34"><expr pos:start="193:32" pos:end="193:34"><name pos:start="193:32" pos:end="193:32">x</name><operator pos:start="193:33" pos:end="193:34">++</operator></expr></incr>)</control> <block pos:start="193:37" pos:end="197:17">{<block_content pos:start="195:21" pos:end="195:88">

                    <expr_stmt pos:start="195:21" pos:end="195:88"><expr pos:start="195:21" pos:end="195:87"><operator pos:start="195:21" pos:end="195:21">*</operator><operator pos:start="195:22" pos:end="195:22">(</operator><name pos:start="195:23" pos:end="195:29">dest_cr</name> <operator pos:start="195:31" pos:end="195:31">+</operator> <name pos:start="195:33" pos:end="195:47"><name pos:start="195:33" pos:end="195:44">block_offset</name><index pos:start="195:45" pos:end="195:47">[<expr pos:start="195:46" pos:end="195:46"><name pos:start="195:46" pos:end="195:46">i</name></expr>]</index></name> <operator pos:start="195:49" pos:end="195:49">+</operator> <name pos:start="195:51" pos:end="195:51">y</name><operator pos:start="195:52" pos:end="195:52">*</operator><name pos:start="195:53" pos:end="195:62">uvlinesize</name> <operator pos:start="195:64" pos:end="195:64">+</operator> <name pos:start="195:66" pos:end="195:66">x</name><operator pos:start="195:67" pos:end="195:67">)</operator> <operator pos:start="195:69" pos:end="195:69">=</operator> <name pos:start="195:71" pos:end="195:87"><name pos:start="195:71" pos:end="195:71">h</name><operator pos:start="195:72" pos:end="195:73">-&gt;</operator><name pos:start="195:74" pos:end="195:75">mb</name><index pos:start="195:76" pos:end="195:87">[<expr pos:start="195:77" pos:end="195:86"><name pos:start="195:77" pos:end="195:77">i</name><operator pos:start="195:78" pos:end="195:78">*</operator><literal type="number" pos:start="195:79" pos:end="195:81">16</literal><operator pos:start="195:81" pos:end="195:81">+</operator><name pos:start="195:82" pos:end="195:82">y</name><operator pos:start="195:83" pos:end="195:83">*</operator><literal type="number" pos:start="195:84" pos:end="195:85">4</literal><operator pos:start="195:85" pos:end="195:85">+</operator><name pos:start="195:86" pos:end="195:86">x</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="203:7" pos:end="467:5">else <block pos:start="203:12" pos:end="467:5">{<block_content pos:start="205:9" pos:end="465:9">

        <if_stmt pos:start="205:9" pos:end="347:9"><if pos:start="205:9" pos:end="337:9">if<condition pos:start="205:11" pos:end="205:29">(<expr pos:start="205:12" pos:end="205:28"><call pos:start="205:12" pos:end="205:28"><name pos:start="205:12" pos:end="205:19">IS_INTRA</name><argument_list pos:start="205:20" pos:end="205:28">(<argument pos:start="205:21" pos:end="205:27"><expr pos:start="205:21" pos:end="205:27"><name pos:start="205:21" pos:end="205:27">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="205:30" pos:end="337:9">{<block_content pos:start="207:13" pos:end="335:93">

            <if_stmt pos:start="207:13" pos:end="209:93"><if pos:start="207:13" pos:end="209:93">if<condition pos:start="207:15" pos:end="207:64">(<expr pos:start="207:16" pos:end="207:63"><name pos:start="207:16" pos:end="207:35"><name pos:start="207:16" pos:end="207:16">h</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:35">deblocking_filter</name></name> <operator pos:start="207:37" pos:end="207:38">&amp;&amp;</operator> <operator pos:start="207:40" pos:end="207:40">(</operator><name pos:start="207:41" pos:end="207:46">simple</name> <operator pos:start="207:48" pos:end="207:49">||</operator> <operator pos:start="207:51" pos:end="207:51">!</operator><name pos:start="207:52" pos:end="207:62">FRAME_MBAFF</name><operator pos:start="207:63" pos:end="207:63">)</operator></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:93"><block_content pos:start="209:17" pos:end="209:93">

                <expr_stmt pos:start="209:17" pos:end="209:93"><expr pos:start="209:17" pos:end="209:92"><call pos:start="209:17" pos:end="209:92"><name pos:start="209:17" pos:end="209:30">xchg_mb_border</name><argument_list pos:start="209:31" pos:end="209:92">(<argument pos:start="209:32" pos:end="209:32"><expr pos:start="209:32" pos:end="209:32"><name pos:start="209:32" pos:end="209:32">h</name></expr></argument>, <argument pos:start="209:35" pos:end="209:40"><expr pos:start="209:35" pos:end="209:40"><name pos:start="209:35" pos:end="209:40">dest_y</name></expr></argument>, <argument pos:start="209:43" pos:end="209:49"><expr pos:start="209:43" pos:end="209:49"><name pos:start="209:43" pos:end="209:49">dest_cb</name></expr></argument>, <argument pos:start="209:52" pos:end="209:58"><expr pos:start="209:52" pos:end="209:58"><name pos:start="209:52" pos:end="209:58">dest_cr</name></expr></argument>, <argument pos:start="209:61" pos:end="209:68"><expr pos:start="209:61" pos:end="209:68"><name pos:start="209:61" pos:end="209:68">linesize</name></expr></argument>, <argument pos:start="209:71" pos:end="209:80"><expr pos:start="209:71" pos:end="209:80"><name pos:start="209:71" pos:end="209:80">uvlinesize</name></expr></argument>, <argument pos:start="209:83" pos:end="209:83"><expr pos:start="209:83" pos:end="209:83"><literal type="number" pos:start="209:83" pos:end="209:83">1</literal></expr></argument>, <argument pos:start="209:86" pos:end="209:91"><expr pos:start="209:86" pos:end="209:91"><name pos:start="209:86" pos:end="209:91">simple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if<condition pos:start="213:15" pos:end="213:53">(<expr pos:start="213:16" pos:end="213:52"><name pos:start="213:16" pos:end="213:21">simple</name> <operator pos:start="213:23" pos:end="213:24">||</operator> <operator pos:start="213:26" pos:end="213:26">!</operator><operator pos:start="213:27" pos:end="213:27">(</operator><name pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:28">s</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:35">flags</name></name><operator pos:start="213:36" pos:end="213:36">&amp;</operator><name pos:start="213:37" pos:end="213:51">CODEC_FLAG_GRAY</name><operator pos:start="213:52" pos:end="213:52">)</operator></expr>)</condition><block pos:start="213:54" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:71">

                <expr_stmt pos:start="215:17" pos:end="215:71"><expr pos:start="215:17" pos:end="215:70"><name pos:start="215:17" pos:end="215:49"><name pos:start="215:17" pos:end="215:17">h</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:26">pred8x8</name><index pos:start="215:27" pos:end="215:49">[ <expr pos:start="215:29" pos:end="215:47"><name pos:start="215:29" pos:end="215:47"><name pos:start="215:29" pos:end="215:29">h</name><operator pos:start="215:30" pos:end="215:31">-&gt;</operator><name pos:start="215:32" pos:end="215:47">chroma_pred_mode</name></name></expr> ]</index></name><operator pos:start="215:50" pos:end="215:50">(</operator><name pos:start="215:51" pos:end="215:57">dest_cb</name><operator pos:start="215:58" pos:end="215:58">,</operator> <name pos:start="215:60" pos:end="215:69">uvlinesize</name><operator pos:start="215:70" pos:end="215:70">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:71"><expr pos:start="217:17" pos:end="217:70"><name pos:start="217:17" pos:end="217:49"><name pos:start="217:17" pos:end="217:17">h</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:26">pred8x8</name><index pos:start="217:27" pos:end="217:49">[ <expr pos:start="217:29" pos:end="217:47"><name pos:start="217:29" pos:end="217:47"><name pos:start="217:29" pos:end="217:29">h</name><operator pos:start="217:30" pos:end="217:31">-&gt;</operator><name pos:start="217:32" pos:end="217:47">chroma_pred_mode</name></name></expr> ]</index></name><operator pos:start="217:50" pos:end="217:50">(</operator><name pos:start="217:51" pos:end="217:57">dest_cr</name><operator pos:start="217:58" pos:end="217:58">,</operator> <name pos:start="217:60" pos:end="217:69">uvlinesize</name><operator pos:start="217:70" pos:end="217:70">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="223:13" pos:end="331:13"><if pos:start="223:13" pos:end="317:13">if<condition pos:start="223:15" pos:end="223:36">(<expr pos:start="223:16" pos:end="223:35"><call pos:start="223:16" pos:end="223:35"><name pos:start="223:16" pos:end="223:26">IS_INTRA4x4</name><argument_list pos:start="223:27" pos:end="223:35">(<argument pos:start="223:28" pos:end="223:34"><expr pos:start="223:28" pos:end="223:34"><name pos:start="223:28" pos:end="223:34">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="223:37" pos:end="317:13">{<block_content pos:start="225:17" pos:end="315:17">

                <if_stmt pos:start="225:17" pos:end="315:17"><if pos:start="225:17" pos:end="315:17">if<condition pos:start="225:19" pos:end="225:42">(<expr pos:start="225:20" pos:end="225:41"><name pos:start="225:20" pos:end="225:25">simple</name> <operator pos:start="225:27" pos:end="225:28">||</operator> <operator pos:start="225:30" pos:end="225:30">!</operator><name pos:start="225:31" pos:end="225:41"><name pos:start="225:31" pos:end="225:31">s</name><operator pos:start="225:32" pos:end="225:33">-&gt;</operator><name pos:start="225:34" pos:end="225:41">encoding</name></name></expr>)</condition><block pos:start="225:43" pos:end="315:17">{<block_content pos:start="227:21" pos:end="313:21">

                    <if_stmt pos:start="227:21" pos:end="313:21"><if pos:start="227:21" pos:end="255:21">if<condition pos:start="227:23" pos:end="227:42">(<expr pos:start="227:24" pos:end="227:41"><call pos:start="227:24" pos:end="227:41"><name pos:start="227:24" pos:end="227:32">IS_8x8DCT</name><argument_list pos:start="227:33" pos:end="227:41">(<argument pos:start="227:34" pos:end="227:40"><expr pos:start="227:34" pos:end="227:40"><name pos:start="227:34" pos:end="227:40">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="227:43" pos:end="255:21">{<block_content pos:start="229:25" pos:end="253:25">

                        <for pos:start="229:25" pos:end="253:25">for<control pos:start="229:28" pos:end="229:44">(<init pos:start="229:29" pos:end="229:32"><expr pos:start="229:29" pos:end="229:31"><name pos:start="229:29" pos:end="229:29">i</name><operator pos:start="229:30" pos:end="229:30">=</operator><literal type="number" pos:start="229:31" pos:end="229:31">0</literal></expr>;</init> <condition pos:start="229:34" pos:end="229:38"><expr pos:start="229:34" pos:end="229:37"><name pos:start="229:34" pos:end="229:34">i</name><operator pos:start="229:35" pos:end="229:35">&lt;</operator><literal type="number" pos:start="229:36" pos:end="229:37">16</literal></expr>;</condition> <incr pos:start="229:40" pos:end="229:43"><expr pos:start="229:40" pos:end="229:43"><name pos:start="229:40" pos:end="229:40">i</name><operator pos:start="229:41" pos:end="229:42">+=</operator><literal type="number" pos:start="229:43" pos:end="229:43">4</literal></expr></incr>)</control><block pos:start="229:45" pos:end="253:25">{<block_content pos:start="231:29" pos:end="251:29">

                            <decl_stmt pos:start="231:29" pos:end="231:74"><decl pos:start="231:29" pos:end="231:73"><type pos:start="231:29" pos:end="231:43"><name pos:start="231:29" pos:end="231:35">uint8_t</name> <modifier pos:start="231:37" pos:end="231:37">*</modifier> <specifier pos:start="231:39" pos:end="231:43">const</specifier></type> <name pos:start="231:45" pos:end="231:47">ptr</name><init pos:start="231:48" pos:end="231:73">= <expr pos:start="231:50" pos:end="231:73"><name pos:start="231:50" pos:end="231:55">dest_y</name> <operator pos:start="231:57" pos:end="231:57">+</operator> <name pos:start="231:59" pos:end="231:73"><name pos:start="231:59" pos:end="231:70">block_offset</name><index pos:start="231:71" pos:end="231:73">[<expr pos:start="231:72" pos:end="231:72"><name pos:start="231:72" pos:end="231:72">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="233:29" pos:end="233:83"><decl pos:start="233:29" pos:end="233:82"><type pos:start="233:29" pos:end="233:37"><specifier pos:start="233:29" pos:end="233:33">const</specifier> <name pos:start="233:35" pos:end="233:37">int</name></type> <name pos:start="233:39" pos:end="233:41">dir</name><init pos:start="233:42" pos:end="233:82">= <expr pos:start="233:44" pos:end="233:82"><name pos:start="233:44" pos:end="233:82"><name pos:start="233:44" pos:end="233:44">h</name><operator pos:start="233:45" pos:end="233:46">-&gt;</operator><name pos:start="233:47" pos:end="233:70">intra4x4_pred_mode_cache</name><index pos:start="233:71" pos:end="233:82">[ <expr pos:start="233:73" pos:end="233:80"><name pos:start="233:73" pos:end="233:80"><name pos:start="233:73" pos:end="233:77">scan8</name><index pos:start="233:78" pos:end="233:80">[<expr pos:start="233:79" pos:end="233:79"><name pos:start="233:79" pos:end="233:79">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="235:29" pos:end="235:80"><decl pos:start="235:29" pos:end="235:79"><type pos:start="235:29" pos:end="235:37"><specifier pos:start="235:29" pos:end="235:33">const</specifier> <name pos:start="235:35" pos:end="235:37">int</name></type> <name pos:start="235:39" pos:end="235:41">nnz</name> <init pos:start="235:43" pos:end="235:79">= <expr pos:start="235:45" pos:end="235:79"><name pos:start="235:45" pos:end="235:79"><name pos:start="235:45" pos:end="235:45">h</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:67">non_zero_count_cache</name><index pos:start="235:68" pos:end="235:79">[ <expr pos:start="235:70" pos:end="235:77"><name pos:start="235:70" pos:end="235:77"><name pos:start="235:70" pos:end="235:74">scan8</name><index pos:start="235:75" pos:end="235:77">[<expr pos:start="235:76" pos:end="235:76"><name pos:start="235:76" pos:end="235:76">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="237:29" pos:end="239:104"><expr pos:start="237:29" pos:end="239:103"><name pos:start="237:29" pos:end="237:46"><name pos:start="237:29" pos:end="237:29">h</name><operator pos:start="237:30" pos:end="237:31">-&gt;</operator><name pos:start="237:32" pos:end="237:39">pred8x8l</name><index pos:start="237:40" pos:end="237:46">[ <expr pos:start="237:42" pos:end="237:44"><name pos:start="237:42" pos:end="237:44">dir</name></expr> ]</index></name><operator pos:start="237:47" pos:end="237:47">(</operator><name pos:start="237:48" pos:end="237:50">ptr</name><operator pos:start="237:51" pos:end="237:51">,</operator> <operator pos:start="237:53" pos:end="237:53">(</operator><name pos:start="237:54" pos:end="237:81"><name pos:start="237:54" pos:end="237:54">h</name><operator pos:start="237:55" pos:end="237:56">-&gt;</operator><name pos:start="237:57" pos:end="237:81">topleft_samples_available</name></name><operator pos:start="237:82" pos:end="237:83">&lt;&lt;</operator><name pos:start="237:84" pos:end="237:84">i</name><operator pos:start="237:85" pos:end="237:85">)</operator><operator pos:start="237:86" pos:end="237:86">&amp;</operator><literal type="number" pos:start="237:87" pos:end="237:92">0x8000</literal><operator pos:start="237:93" pos:end="237:93">,</operator>

                                                   <operator pos:start="239:52" pos:end="239:52">(</operator><name pos:start="239:53" pos:end="239:81"><name pos:start="239:53" pos:end="239:53">h</name><operator pos:start="239:54" pos:end="239:55">-&gt;</operator><name pos:start="239:56" pos:end="239:81">topright_samples_available</name></name><operator pos:start="239:82" pos:end="239:83">&lt;&lt;</operator><name pos:start="239:84" pos:end="239:84">i</name><operator pos:start="239:85" pos:end="239:85">)</operator><operator pos:start="239:86" pos:end="239:86">&amp;</operator><literal type="number" pos:start="239:87" pos:end="239:92">0x4000</literal><operator pos:start="239:93" pos:end="239:93">,</operator> <name pos:start="239:95" pos:end="239:102">linesize</name><operator pos:start="239:103" pos:end="239:103">)</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="241:29" pos:end="251:29"><if pos:start="241:29" pos:end="251:29">if<condition pos:start="241:31" pos:end="241:35">(<expr pos:start="241:32" pos:end="241:34"><name pos:start="241:32" pos:end="241:34">nnz</name></expr>)</condition><block pos:start="241:36" pos:end="251:29">{<block_content pos:start="243:33" pos:end="249:74">

                                <if_stmt pos:start="243:33" pos:end="249:74"><if pos:start="243:33" pos:end="245:77">if<condition pos:start="243:35" pos:end="243:59">(<expr pos:start="243:36" pos:end="243:58"><name pos:start="243:36" pos:end="243:38">nnz</name> <operator pos:start="243:40" pos:end="243:41">==</operator> <literal type="number" pos:start="243:43" pos:end="243:43">1</literal> <operator pos:start="243:45" pos:end="243:46">&amp;&amp;</operator> <name pos:start="243:48" pos:end="243:58"><name pos:start="243:48" pos:end="243:48">h</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:52">mb</name><index pos:start="243:53" pos:end="243:58">[<expr pos:start="243:54" pos:end="243:57"><name pos:start="243:54" pos:end="243:54">i</name><operator pos:start="243:55" pos:end="243:55">*</operator><literal type="number" pos:start="243:56" pos:end="243:57">16</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="245:37" pos:end="245:77"><block_content pos:start="245:37" pos:end="245:77">

                                    <expr_stmt pos:start="245:37" pos:end="245:77"><expr pos:start="245:37" pos:end="245:76"><call pos:start="245:37" pos:end="245:76"><name pos:start="245:37" pos:end="245:47">idct_dc_add</name><argument_list pos:start="245:48" pos:end="245:76">(<argument pos:start="245:49" pos:end="245:51"><expr pos:start="245:49" pos:end="245:51"><name pos:start="245:49" pos:end="245:51">ptr</name></expr></argument>, <argument pos:start="245:54" pos:end="245:65"><expr pos:start="245:54" pos:end="245:65"><name pos:start="245:54" pos:end="245:58"><name pos:start="245:54" pos:end="245:54">h</name><operator pos:start="245:55" pos:end="245:56">-&gt;</operator><name pos:start="245:57" pos:end="245:58">mb</name></name> <operator pos:start="245:60" pos:end="245:60">+</operator> <name pos:start="245:62" pos:end="245:62">i</name><operator pos:start="245:63" pos:end="245:63">*</operator><literal type="number" pos:start="245:64" pos:end="245:65">16</literal></expr></argument>, <argument pos:start="245:68" pos:end="245:75"><expr pos:start="245:68" pos:end="245:75"><name pos:start="245:68" pos:end="245:75">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                                <else pos:start="247:33" pos:end="249:74">else<block type="pseudo" pos:start="249:37" pos:end="249:74"><block_content pos:start="249:37" pos:end="249:74">

                                    <expr_stmt pos:start="249:37" pos:end="249:74"><expr pos:start="249:37" pos:end="249:73"><call pos:start="249:37" pos:end="249:73"><name pos:start="249:37" pos:end="249:44">idct_add</name><argument_list pos:start="249:45" pos:end="249:73">(<argument pos:start="249:46" pos:end="249:48"><expr pos:start="249:46" pos:end="249:48"><name pos:start="249:46" pos:end="249:48">ptr</name></expr></argument>, <argument pos:start="249:51" pos:end="249:62"><expr pos:start="249:51" pos:end="249:62"><name pos:start="249:51" pos:end="249:55"><name pos:start="249:51" pos:end="249:51">h</name><operator pos:start="249:52" pos:end="249:53">-&gt;</operator><name pos:start="249:54" pos:end="249:55">mb</name></name> <operator pos:start="249:57" pos:end="249:57">+</operator> <name pos:start="249:59" pos:end="249:59">i</name><operator pos:start="249:60" pos:end="249:60">*</operator><literal type="number" pos:start="249:61" pos:end="249:62">16</literal></expr></argument>, <argument pos:start="249:65" pos:end="249:72"><expr pos:start="249:65" pos:end="249:72"><name pos:start="249:65" pos:end="249:72">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if><else pos:start="255:22" pos:end="313:21">else<block type="pseudo" pos:start="257:21" pos:end="313:21"><block_content pos:start="257:21" pos:end="313:21">

                    <for pos:start="257:21" pos:end="313:21">for<control pos:start="257:24" pos:end="257:39">(<init pos:start="257:25" pos:end="257:28"><expr pos:start="257:25" pos:end="257:27"><name pos:start="257:25" pos:end="257:25">i</name><operator pos:start="257:26" pos:end="257:26">=</operator><literal type="number" pos:start="257:27" pos:end="257:27">0</literal></expr>;</init> <condition pos:start="257:30" pos:end="257:34"><expr pos:start="257:30" pos:end="257:33"><name pos:start="257:30" pos:end="257:30">i</name><operator pos:start="257:31" pos:end="257:31">&lt;</operator><literal type="number" pos:start="257:32" pos:end="257:33">16</literal></expr>;</condition> <incr pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:36">i</name><operator pos:start="257:37" pos:end="257:38">++</operator></expr></incr>)</control><block pos:start="257:40" pos:end="313:21">{<block_content pos:start="259:25" pos:end="311:25">

                        <decl_stmt pos:start="259:25" pos:end="259:70"><decl pos:start="259:25" pos:end="259:69"><type pos:start="259:25" pos:end="259:39"><name pos:start="259:25" pos:end="259:31">uint8_t</name> <modifier pos:start="259:33" pos:end="259:33">*</modifier> <specifier pos:start="259:35" pos:end="259:39">const</specifier></type> <name pos:start="259:41" pos:end="259:43">ptr</name><init pos:start="259:44" pos:end="259:69">= <expr pos:start="259:46" pos:end="259:69"><name pos:start="259:46" pos:end="259:51">dest_y</name> <operator pos:start="259:53" pos:end="259:53">+</operator> <name pos:start="259:55" pos:end="259:69"><name pos:start="259:55" pos:end="259:66">block_offset</name><index pos:start="259:67" pos:end="259:69">[<expr pos:start="259:68" pos:end="259:68"><name pos:start="259:68" pos:end="259:68">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="261:25" pos:end="261:42"><decl pos:start="261:25" pos:end="261:41"><type pos:start="261:25" pos:end="261:33"><name pos:start="261:25" pos:end="261:31">uint8_t</name> <modifier pos:start="261:33" pos:end="261:33">*</modifier></type><name pos:start="261:34" pos:end="261:41">topright</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="263:25" pos:end="263:79"><decl pos:start="263:25" pos:end="263:78"><type pos:start="263:25" pos:end="263:33"><specifier pos:start="263:25" pos:end="263:29">const</specifier> <name pos:start="263:31" pos:end="263:33">int</name></type> <name pos:start="263:35" pos:end="263:37">dir</name><init pos:start="263:38" pos:end="263:78">= <expr pos:start="263:40" pos:end="263:78"><name pos:start="263:40" pos:end="263:78"><name pos:start="263:40" pos:end="263:40">h</name><operator pos:start="263:41" pos:end="263:42">-&gt;</operator><name pos:start="263:43" pos:end="263:66">intra4x4_pred_mode_cache</name><index pos:start="263:67" pos:end="263:78">[ <expr pos:start="263:69" pos:end="263:76"><name pos:start="263:69" pos:end="263:76"><name pos:start="263:69" pos:end="263:73">scan8</name><index pos:start="263:74" pos:end="263:76">[<expr pos:start="263:75" pos:end="263:75"><name pos:start="263:75" pos:end="263:75">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="265:25" pos:end="265:36"><decl pos:start="265:25" pos:end="265:31"><type pos:start="265:25" pos:end="265:27"><name pos:start="265:25" pos:end="265:27">int</name></type> <name pos:start="265:29" pos:end="265:31">nnz</name></decl>, <decl pos:start="265:34" pos:end="265:35"><type ref="prev" pos:start="265:25" pos:end="265:27"/><name pos:start="265:34" pos:end="265:35">tr</name></decl>;</decl_stmt>



                        <if_stmt pos:start="269:25" pos:end="287:43"><if pos:start="269:25" pos:end="285:25">if<condition pos:start="269:27" pos:end="269:79">(<expr pos:start="269:28" pos:end="269:78"><name pos:start="269:28" pos:end="269:30">dir</name> <operator pos:start="269:32" pos:end="269:33">==</operator> <name pos:start="269:35" pos:end="269:53">DIAG_DOWN_LEFT_PRED</name> <operator pos:start="269:55" pos:end="269:56">||</operator> <name pos:start="269:58" pos:end="269:60">dir</name> <operator pos:start="269:62" pos:end="269:63">==</operator> <name pos:start="269:65" pos:end="269:78">VERT_LEFT_PRED</name></expr>)</condition><block pos:start="269:80" pos:end="285:25">{<block_content pos:start="271:29" pos:end="283:61">

                            <decl_stmt pos:start="271:29" pos:end="271:96"><decl pos:start="271:29" pos:end="271:95"><type pos:start="271:29" pos:end="271:37"><specifier pos:start="271:29" pos:end="271:33">const</specifier> <name pos:start="271:35" pos:end="271:37">int</name></type> <name pos:start="271:39" pos:end="271:52">topright_avail</name><init pos:start="271:53" pos:end="271:95">= <expr pos:start="271:55" pos:end="271:95"><operator pos:start="271:55" pos:end="271:55">(</operator><name pos:start="271:56" pos:end="271:84"><name pos:start="271:56" pos:end="271:56">h</name><operator pos:start="271:57" pos:end="271:58">-&gt;</operator><name pos:start="271:59" pos:end="271:84">topright_samples_available</name></name><operator pos:start="271:85" pos:end="271:86">&lt;&lt;</operator><name pos:start="271:87" pos:end="271:87">i</name><operator pos:start="271:88" pos:end="271:88">)</operator><operator pos:start="271:89" pos:end="271:89">&amp;</operator><literal type="number" pos:start="271:90" pos:end="271:95">0x8000</literal></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="273:29" pos:end="273:72"><expr pos:start="273:29" pos:end="273:71"><call pos:start="273:29" pos:end="273:71"><name pos:start="273:29" pos:end="273:34">assert</name><argument_list pos:start="273:35" pos:end="273:71">(<argument pos:start="273:36" pos:end="273:70"><expr pos:start="273:36" pos:end="273:70"><name pos:start="273:36" pos:end="273:39">mb_y</name> <operator pos:start="273:41" pos:end="273:42">||</operator> <name pos:start="273:44" pos:end="273:51">linesize</name> <operator pos:start="273:53" pos:end="273:54">&lt;=</operator> <name pos:start="273:56" pos:end="273:70"><name pos:start="273:56" pos:end="273:67">block_offset</name><index pos:start="273:68" pos:end="273:70">[<expr pos:start="273:69" pos:end="273:69"><name pos:start="273:69" pos:end="273:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="275:29" pos:end="283:61"><if pos:start="275:29" pos:end="281:29">if<condition pos:start="275:31" pos:end="275:47">(<expr pos:start="275:32" pos:end="275:46"><operator pos:start="275:32" pos:end="275:32">!</operator><name pos:start="275:33" pos:end="275:46">topright_avail</name></expr>)</condition><block pos:start="275:48" pos:end="281:29">{<block_content pos:start="277:33" pos:end="279:57">

                                <expr_stmt pos:start="277:33" pos:end="277:65"><expr pos:start="277:33" pos:end="277:64"><name pos:start="277:33" pos:end="277:34">tr</name><operator pos:start="277:35" pos:end="277:35">=</operator> <name pos:start="277:37" pos:end="277:53"><name pos:start="277:37" pos:end="277:39">ptr</name><index pos:start="277:40" pos:end="277:53">[<expr pos:start="277:41" pos:end="277:52"><literal type="number" pos:start="277:41" pos:end="277:43">3</literal> <operator pos:start="277:43" pos:end="277:43">-</operator> <name pos:start="277:45" pos:end="277:52">linesize</name></expr>]</index></name><operator pos:start="277:54" pos:end="277:54">*</operator><literal type="number" pos:start="277:55" pos:end="277:64">0x01010101</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="279:33" pos:end="279:57"><expr pos:start="279:33" pos:end="279:56"><name pos:start="279:33" pos:end="279:40">topright</name><operator pos:start="279:41" pos:end="279:41">=</operator> <operator pos:start="279:43" pos:end="279:43">(</operator><name pos:start="279:44" pos:end="279:50">uint8_t</name><operator pos:start="279:51" pos:end="279:51">*</operator><operator pos:start="279:52" pos:end="279:52">)</operator> <operator pos:start="279:54" pos:end="279:54">&amp;</operator><name pos:start="279:55" pos:end="279:56">tr</name></expr>;</expr_stmt>

                            </block_content>}</block></if><else pos:start="281:30" pos:end="283:61">else<block type="pseudo" pos:start="283:33" pos:end="283:61"><block_content pos:start="283:33" pos:end="283:61">

                                <expr_stmt pos:start="283:33" pos:end="283:61"><expr pos:start="283:33" pos:end="283:60"><name pos:start="283:33" pos:end="283:40">topright</name><operator pos:start="283:41" pos:end="283:41">=</operator> <name pos:start="283:43" pos:end="283:45">ptr</name> <operator pos:start="283:47" pos:end="283:47">+</operator> <literal type="number" pos:start="283:49" pos:end="283:51">4</literal> <operator pos:start="283:51" pos:end="283:51">-</operator> <name pos:start="283:53" pos:end="283:60">linesize</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if><else pos:start="285:26" pos:end="287:43">else<block type="pseudo" pos:start="287:29" pos:end="287:43"><block_content pos:start="287:29" pos:end="287:43">

                            <expr_stmt pos:start="287:29" pos:end="287:43"><expr pos:start="287:29" pos:end="287:42"><name pos:start="287:29" pos:end="287:36">topright</name><operator pos:start="287:37" pos:end="287:37">=</operator> <name pos:start="287:39" pos:end="287:42">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                        <expr_stmt pos:start="291:25" pos:end="291:67"><expr pos:start="291:25" pos:end="291:66"><name pos:start="291:25" pos:end="291:41"><name pos:start="291:25" pos:end="291:25">h</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:34">pred4x4</name><index pos:start="291:35" pos:end="291:41">[ <expr pos:start="291:37" pos:end="291:39"><name pos:start="291:37" pos:end="291:39">dir</name></expr> ]</index></name><operator pos:start="291:42" pos:end="291:42">(</operator><name pos:start="291:43" pos:end="291:45">ptr</name><operator pos:start="291:46" pos:end="291:46">,</operator> <name pos:start="291:48" pos:end="291:55">topright</name><operator pos:start="291:56" pos:end="291:56">,</operator> <name pos:start="291:58" pos:end="291:65">linesize</name><operator pos:start="291:66" pos:end="291:66">)</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="293:25" pos:end="293:66"><expr pos:start="293:25" pos:end="293:65"><name pos:start="293:25" pos:end="293:27">nnz</name> <operator pos:start="293:29" pos:end="293:29">=</operator> <name pos:start="293:31" pos:end="293:65"><name pos:start="293:31" pos:end="293:31">h</name><operator pos:start="293:32" pos:end="293:33">-&gt;</operator><name pos:start="293:34" pos:end="293:53">non_zero_count_cache</name><index pos:start="293:54" pos:end="293:65">[ <expr pos:start="293:56" pos:end="293:63"><name pos:start="293:56" pos:end="293:63"><name pos:start="293:56" pos:end="293:60">scan8</name><index pos:start="293:61" pos:end="293:63">[<expr pos:start="293:62" pos:end="293:62"><name pos:start="293:62" pos:end="293:62">i</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

                        <if_stmt pos:start="295:25" pos:end="311:25"><if pos:start="295:25" pos:end="311:25">if<condition pos:start="295:27" pos:end="295:31">(<expr pos:start="295:28" pos:end="295:30"><name pos:start="295:28" pos:end="295:30">nnz</name></expr>)</condition><block pos:start="295:32" pos:end="311:25">{<block_content pos:start="297:29" pos:end="309:91">

                            <if_stmt pos:start="297:29" pos:end="309:91"><if pos:start="297:29" pos:end="307:29">if<condition pos:start="297:31" pos:end="297:39">(<expr pos:start="297:32" pos:end="297:38"><name pos:start="297:32" pos:end="297:38">is_h264</name></expr>)</condition><block pos:start="297:40" pos:end="307:29">{<block_content pos:start="299:33" pos:end="305:74">

                                <if_stmt pos:start="299:33" pos:end="305:74"><if pos:start="299:33" pos:end="301:77">if<condition pos:start="299:35" pos:end="299:59">(<expr pos:start="299:36" pos:end="299:58"><name pos:start="299:36" pos:end="299:38">nnz</name> <operator pos:start="299:40" pos:end="299:41">==</operator> <literal type="number" pos:start="299:43" pos:end="299:43">1</literal> <operator pos:start="299:45" pos:end="299:46">&amp;&amp;</operator> <name pos:start="299:48" pos:end="299:58"><name pos:start="299:48" pos:end="299:48">h</name><operator pos:start="299:49" pos:end="299:50">-&gt;</operator><name pos:start="299:51" pos:end="299:52">mb</name><index pos:start="299:53" pos:end="299:58">[<expr pos:start="299:54" pos:end="299:57"><name pos:start="299:54" pos:end="299:54">i</name><operator pos:start="299:55" pos:end="299:55">*</operator><literal type="number" pos:start="299:56" pos:end="299:57">16</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="301:37" pos:end="301:77"><block_content pos:start="301:37" pos:end="301:77">

                                    <expr_stmt pos:start="301:37" pos:end="301:77"><expr pos:start="301:37" pos:end="301:76"><call pos:start="301:37" pos:end="301:76"><name pos:start="301:37" pos:end="301:47">idct_dc_add</name><argument_list pos:start="301:48" pos:end="301:76">(<argument pos:start="301:49" pos:end="301:51"><expr pos:start="301:49" pos:end="301:51"><name pos:start="301:49" pos:end="301:51">ptr</name></expr></argument>, <argument pos:start="301:54" pos:end="301:65"><expr pos:start="301:54" pos:end="301:65"><name pos:start="301:54" pos:end="301:58"><name pos:start="301:54" pos:end="301:54">h</name><operator pos:start="301:55" pos:end="301:56">-&gt;</operator><name pos:start="301:57" pos:end="301:58">mb</name></name> <operator pos:start="301:60" pos:end="301:60">+</operator> <name pos:start="301:62" pos:end="301:62">i</name><operator pos:start="301:63" pos:end="301:63">*</operator><literal type="number" pos:start="301:64" pos:end="301:65">16</literal></expr></argument>, <argument pos:start="301:68" pos:end="301:75"><expr pos:start="301:68" pos:end="301:75"><name pos:start="301:68" pos:end="301:75">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                                <else pos:start="303:33" pos:end="305:74">else<block type="pseudo" pos:start="305:37" pos:end="305:74"><block_content pos:start="305:37" pos:end="305:74">

                                    <expr_stmt pos:start="305:37" pos:end="305:74"><expr pos:start="305:37" pos:end="305:73"><call pos:start="305:37" pos:end="305:73"><name pos:start="305:37" pos:end="305:44">idct_add</name><argument_list pos:start="305:45" pos:end="305:73">(<argument pos:start="305:46" pos:end="305:48"><expr pos:start="305:46" pos:end="305:48"><name pos:start="305:46" pos:end="305:48">ptr</name></expr></argument>, <argument pos:start="305:51" pos:end="305:62"><expr pos:start="305:51" pos:end="305:62"><name pos:start="305:51" pos:end="305:55"><name pos:start="305:51" pos:end="305:51">h</name><operator pos:start="305:52" pos:end="305:53">-&gt;</operator><name pos:start="305:54" pos:end="305:55">mb</name></name> <operator pos:start="305:57" pos:end="305:57">+</operator> <name pos:start="305:59" pos:end="305:59">i</name><operator pos:start="305:60" pos:end="305:60">*</operator><literal type="number" pos:start="305:61" pos:end="305:62">16</literal></expr></argument>, <argument pos:start="305:65" pos:end="305:72"><expr pos:start="305:65" pos:end="305:72"><name pos:start="305:65" pos:end="305:72">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            </block_content>}</block></if><else pos:start="307:30" pos:end="309:91">else<block type="pseudo" pos:start="309:33" pos:end="309:91"><block_content pos:start="309:33" pos:end="309:91">

                                <expr_stmt pos:start="309:33" pos:end="309:91"><expr pos:start="309:33" pos:end="309:90"><call pos:start="309:33" pos:end="309:90"><name pos:start="309:33" pos:end="309:47">svq3_add_idct_c</name><argument_list pos:start="309:48" pos:end="309:90">(<argument pos:start="309:49" pos:end="309:51"><expr pos:start="309:49" pos:end="309:51"><name pos:start="309:49" pos:end="309:51">ptr</name></expr></argument>, <argument pos:start="309:54" pos:end="309:65"><expr pos:start="309:54" pos:end="309:65"><name pos:start="309:54" pos:end="309:58"><name pos:start="309:54" pos:end="309:54">h</name><operator pos:start="309:55" pos:end="309:56">-&gt;</operator><name pos:start="309:57" pos:end="309:58">mb</name></name> <operator pos:start="309:60" pos:end="309:60">+</operator> <name pos:start="309:62" pos:end="309:62">i</name><operator pos:start="309:63" pos:end="309:63">*</operator><literal type="number" pos:start="309:64" pos:end="309:65">16</literal></expr></argument>, <argument pos:start="309:68" pos:end="309:75"><expr pos:start="309:68" pos:end="309:75"><name pos:start="309:68" pos:end="309:75">linesize</name></expr></argument>, <argument pos:start="309:78" pos:end="309:86"><expr pos:start="309:78" pos:end="309:86"><name pos:start="309:78" pos:end="309:86"><name pos:start="309:78" pos:end="309:78">s</name><operator pos:start="309:79" pos:end="309:80">-&gt;</operator><name pos:start="309:81" pos:end="309:86">qscale</name></name></expr></argument>, <argument pos:start="309:89" pos:end="309:89"><expr pos:start="309:89" pos:end="309:89"><literal type="number" pos:start="309:89" pos:end="309:89">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for></block_content></block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if><else pos:start="317:14" pos:end="331:13">else<block pos:start="317:18" pos:end="331:13">{<block_content pos:start="319:17" pos:end="329:66">

                <expr_stmt pos:start="319:17" pos:end="319:75"><expr pos:start="319:17" pos:end="319:74"><name pos:start="319:17" pos:end="319:55"><name pos:start="319:17" pos:end="319:17">h</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:28">pred16x16</name><index pos:start="319:29" pos:end="319:55">[ <expr pos:start="319:31" pos:end="319:53"><name pos:start="319:31" pos:end="319:53"><name pos:start="319:31" pos:end="319:31">h</name><operator pos:start="319:32" pos:end="319:33">-&gt;</operator><name pos:start="319:34" pos:end="319:53">intra16x16_pred_mode</name></name></expr> ]</index></name><operator pos:start="319:56" pos:end="319:56">(</operator><name pos:start="319:57" pos:end="319:62">dest_y</name> <operator pos:start="319:64" pos:end="319:64">,</operator> <name pos:start="319:66" pos:end="319:73">linesize</name><operator pos:start="319:74" pos:end="319:74">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="321:17" pos:end="329:66"><if pos:start="321:17" pos:end="327:17">if<condition pos:start="321:19" pos:end="321:27">(<expr pos:start="321:20" pos:end="321:26"><name pos:start="321:20" pos:end="321:26">is_h264</name></expr>)</condition><block pos:start="321:28" pos:end="327:17">{<block_content pos:start="323:21" pos:end="325:128">

                    <if_stmt pos:start="323:21" pos:end="325:128"><if pos:start="323:21" pos:end="325:128">if<condition pos:start="323:23" pos:end="323:41">(<expr pos:start="323:24" pos:end="323:40"><operator pos:start="323:24" pos:end="323:24">!</operator><name pos:start="323:25" pos:end="323:40">transform_bypass</name></expr>)</condition><block type="pseudo" pos:start="325:25" pos:end="325:128"><block_content pos:start="325:25" pos:end="325:128">

                        <expr_stmt pos:start="325:25" pos:end="325:128"><expr pos:start="325:25" pos:end="325:127"><call pos:start="325:25" pos:end="325:127"><name pos:start="325:25" pos:end="325:51">h264_luma_dc_dequant_idct_c</name><argument_list pos:start="325:52" pos:end="325:127">(<argument pos:start="325:53" pos:end="325:57"><expr pos:start="325:53" pos:end="325:57"><name pos:start="325:53" pos:end="325:57"><name pos:start="325:53" pos:end="325:53">h</name><operator pos:start="325:54" pos:end="325:55">-&gt;</operator><name pos:start="325:56" pos:end="325:57">mb</name></name></expr></argument>, <argument pos:start="325:60" pos:end="325:68"><expr pos:start="325:60" pos:end="325:68"><name pos:start="325:60" pos:end="325:68"><name pos:start="325:60" pos:end="325:60">s</name><operator pos:start="325:61" pos:end="325:62">-&gt;</operator><name pos:start="325:63" pos:end="325:68">qscale</name></name></expr></argument>, <argument pos:start="325:71" pos:end="325:126"><expr pos:start="325:71" pos:end="325:126"><name pos:start="325:71" pos:end="325:126"><name pos:start="325:71" pos:end="325:71">h</name><operator pos:start="325:72" pos:end="325:73">-&gt;</operator><name pos:start="325:74" pos:end="325:87">dequant4_coeff</name><index pos:start="325:88" pos:end="325:112">[<expr pos:start="325:89" pos:end="325:111"><ternary pos:start="325:89" pos:end="325:111"><condition pos:start="325:89" pos:end="325:107"><expr pos:start="325:89" pos:end="325:105"><call pos:start="325:89" pos:end="325:105"><name pos:start="325:89" pos:end="325:96">IS_INTRA</name><argument_list pos:start="325:97" pos:end="325:105">(<argument pos:start="325:98" pos:end="325:104"><expr pos:start="325:98" pos:end="325:104"><name pos:start="325:98" pos:end="325:104">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="325:109" pos:end="325:109"> <expr pos:start="325:109" pos:end="325:109"><literal type="number" pos:start="325:109" pos:end="325:109">0</literal></expr></then><else pos:start="325:110" pos:end="325:111">:<expr pos:start="325:111" pos:end="325:111"><literal type="number" pos:start="325:111" pos:end="325:111">3</literal></expr></else></ternary></expr>]</index><index pos:start="325:113" pos:end="325:123">[<expr pos:start="325:114" pos:end="325:122"><name pos:start="325:114" pos:end="325:122"><name pos:start="325:114" pos:end="325:114">s</name><operator pos:start="325:115" pos:end="325:116">-&gt;</operator><name pos:start="325:117" pos:end="325:122">qscale</name></name></expr>]</index><index pos:start="325:124" pos:end="325:126">[<expr pos:start="325:125" pos:end="325:125"><literal type="number" pos:start="325:125" pos:end="325:125">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if><else pos:start="327:18" pos:end="329:66">else<block type="pseudo" pos:start="329:21" pos:end="329:66"><block_content pos:start="329:21" pos:end="329:66">

                    <expr_stmt pos:start="329:21" pos:end="329:66"><expr pos:start="329:21" pos:end="329:65"><call pos:start="329:21" pos:end="329:65"><name pos:start="329:21" pos:end="329:47">svq3_luma_dc_dequant_idct_c</name><argument_list pos:start="329:48" pos:end="329:65">(<argument pos:start="329:49" pos:end="329:53"><expr pos:start="329:49" pos:end="329:53"><name pos:start="329:49" pos:end="329:53"><name pos:start="329:49" pos:end="329:49">h</name><operator pos:start="329:50" pos:end="329:51">-&gt;</operator><name pos:start="329:52" pos:end="329:53">mb</name></name></expr></argument>, <argument pos:start="329:56" pos:end="329:64"><expr pos:start="329:56" pos:end="329:64"><name pos:start="329:56" pos:end="329:64"><name pos:start="329:56" pos:end="329:56">s</name><operator pos:start="329:57" pos:end="329:58">-&gt;</operator><name pos:start="329:59" pos:end="329:64">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="333:13" pos:end="335:93"><if pos:start="333:13" pos:end="335:93">if<condition pos:start="333:15" pos:end="333:64">(<expr pos:start="333:16" pos:end="333:63"><name pos:start="333:16" pos:end="333:35"><name pos:start="333:16" pos:end="333:16">h</name><operator pos:start="333:17" pos:end="333:18">-&gt;</operator><name pos:start="333:19" pos:end="333:35">deblocking_filter</name></name> <operator pos:start="333:37" pos:end="333:38">&amp;&amp;</operator> <operator pos:start="333:40" pos:end="333:40">(</operator><name pos:start="333:41" pos:end="333:46">simple</name> <operator pos:start="333:48" pos:end="333:49">||</operator> <operator pos:start="333:51" pos:end="333:51">!</operator><name pos:start="333:52" pos:end="333:62">FRAME_MBAFF</name><operator pos:start="333:63" pos:end="333:63">)</operator></expr>)</condition><block type="pseudo" pos:start="335:17" pos:end="335:93"><block_content pos:start="335:17" pos:end="335:93">

                <expr_stmt pos:start="335:17" pos:end="335:93"><expr pos:start="335:17" pos:end="335:92"><call pos:start="335:17" pos:end="335:92"><name pos:start="335:17" pos:end="335:30">xchg_mb_border</name><argument_list pos:start="335:31" pos:end="335:92">(<argument pos:start="335:32" pos:end="335:32"><expr pos:start="335:32" pos:end="335:32"><name pos:start="335:32" pos:end="335:32">h</name></expr></argument>, <argument pos:start="335:35" pos:end="335:40"><expr pos:start="335:35" pos:end="335:40"><name pos:start="335:35" pos:end="335:40">dest_y</name></expr></argument>, <argument pos:start="335:43" pos:end="335:49"><expr pos:start="335:43" pos:end="335:49"><name pos:start="335:43" pos:end="335:49">dest_cb</name></expr></argument>, <argument pos:start="335:52" pos:end="335:58"><expr pos:start="335:52" pos:end="335:58"><name pos:start="335:52" pos:end="335:58">dest_cr</name></expr></argument>, <argument pos:start="335:61" pos:end="335:68"><expr pos:start="335:61" pos:end="335:68"><name pos:start="335:61" pos:end="335:68">linesize</name></expr></argument>, <argument pos:start="335:71" pos:end="335:80"><expr pos:start="335:71" pos:end="335:80"><name pos:start="335:71" pos:end="335:80">uvlinesize</name></expr></argument>, <argument pos:start="335:83" pos:end="335:83"><expr pos:start="335:83" pos:end="335:83"><literal type="number" pos:start="335:83" pos:end="335:83">0</literal></expr></argument>, <argument pos:start="335:86" pos:end="335:91"><expr pos:start="335:86" pos:end="335:91"><name pos:start="335:86" pos:end="335:91">simple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="337:10" pos:end="347:9">else if<condition pos:start="337:17" pos:end="337:25">(<expr pos:start="337:18" pos:end="337:24"><name pos:start="337:18" pos:end="337:24">is_h264</name></expr>)</condition><block pos:start="337:26" pos:end="347:9">{<block_content pos:start="339:13" pos:end="345:86">

            <expr_stmt pos:start="339:13" pos:end="345:86"><expr pos:start="339:13" pos:end="345:85"><call pos:start="339:13" pos:end="345:85"><name pos:start="339:13" pos:end="339:21">hl_motion</name><argument_list pos:start="339:22" pos:end="345:85">(<argument pos:start="339:23" pos:end="339:23"><expr pos:start="339:23" pos:end="339:23"><name pos:start="339:23" pos:end="339:23">h</name></expr></argument>, <argument pos:start="339:26" pos:end="339:31"><expr pos:start="339:26" pos:end="339:31"><name pos:start="339:26" pos:end="339:31">dest_y</name></expr></argument>, <argument pos:start="339:34" pos:end="339:40"><expr pos:start="339:34" pos:end="339:40"><name pos:start="339:34" pos:end="339:40">dest_cb</name></expr></argument>, <argument pos:start="339:43" pos:end="339:49"><expr pos:start="339:43" pos:end="339:49"><name pos:start="339:43" pos:end="339:49">dest_cr</name></expr></argument>,

                      <argument pos:start="341:23" pos:end="341:36"><expr pos:start="341:23" pos:end="341:36"><name pos:start="341:23" pos:end="341:36"><name pos:start="341:23" pos:end="341:23">s</name><operator pos:start="341:24" pos:end="341:25">-&gt;</operator><name pos:start="341:26" pos:end="341:27">me</name><operator pos:start="341:28" pos:end="341:28">.</operator><name pos:start="341:29" pos:end="341:36">qpel_put</name></name></expr></argument>, <argument pos:start="341:39" pos:end="341:71"><expr pos:start="341:39" pos:end="341:71"><name pos:start="341:39" pos:end="341:71"><name pos:start="341:39" pos:end="341:39">s</name><operator pos:start="341:40" pos:end="341:41">-&gt;</operator><name pos:start="341:42" pos:end="341:44">dsp</name><operator pos:start="341:45" pos:end="341:45">.</operator><name pos:start="341:46" pos:end="341:71">put_h264_chroma_pixels_tab</name></name></expr></argument>,

                      <argument pos:start="343:23" pos:end="343:36"><expr pos:start="343:23" pos:end="343:36"><name pos:start="343:23" pos:end="343:36"><name pos:start="343:23" pos:end="343:23">s</name><operator pos:start="343:24" pos:end="343:25">-&gt;</operator><name pos:start="343:26" pos:end="343:27">me</name><operator pos:start="343:28" pos:end="343:28">.</operator><name pos:start="343:29" pos:end="343:36">qpel_avg</name></name></expr></argument>, <argument pos:start="343:39" pos:end="343:71"><expr pos:start="343:39" pos:end="343:71"><name pos:start="343:39" pos:end="343:71"><name pos:start="343:39" pos:end="343:39">s</name><operator pos:start="343:40" pos:end="343:41">-&gt;</operator><name pos:start="343:42" pos:end="343:44">dsp</name><operator pos:start="343:45" pos:end="343:45">.</operator><name pos:start="343:46" pos:end="343:71">avg_h264_chroma_pixels_tab</name></name></expr></argument>,

                      <argument pos:start="345:23" pos:end="345:51"><expr pos:start="345:23" pos:end="345:51"><name pos:start="345:23" pos:end="345:51"><name pos:start="345:23" pos:end="345:23">s</name><operator pos:start="345:24" pos:end="345:25">-&gt;</operator><name pos:start="345:26" pos:end="345:28">dsp</name><operator pos:start="345:29" pos:end="345:29">.</operator><name pos:start="345:30" pos:end="345:51">weight_h264_pixels_tab</name></name></expr></argument>, <argument pos:start="345:54" pos:end="345:84"><expr pos:start="345:54" pos:end="345:84"><name pos:start="345:54" pos:end="345:84"><name pos:start="345:54" pos:end="345:54">s</name><operator pos:start="345:55" pos:end="345:56">-&gt;</operator><name pos:start="345:57" pos:end="345:59">dsp</name><operator pos:start="345:60" pos:end="345:60">.</operator><name pos:start="345:61" pos:end="345:84">biweight_h264_pixels_tab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>





        <if_stmt pos:start="353:9" pos:end="411:9"><if pos:start="353:9" pos:end="411:9">if<condition pos:start="353:11" pos:end="353:33">(<expr pos:start="353:12" pos:end="353:32"><operator pos:start="353:12" pos:end="353:12">!</operator><call pos:start="353:13" pos:end="353:32"><name pos:start="353:13" pos:end="353:23">IS_INTRA4x4</name><argument_list pos:start="353:24" pos:end="353:32">(<argument pos:start="353:25" pos:end="353:31"><expr pos:start="353:25" pos:end="353:31"><name pos:start="353:25" pos:end="353:31">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="353:34" pos:end="411:9">{<block_content pos:start="355:13" pos:end="409:13">

            <if_stmt pos:start="355:13" pos:end="409:13"><if pos:start="355:13" pos:end="395:13">if<condition pos:start="355:15" pos:end="355:23">(<expr pos:start="355:16" pos:end="355:22"><name pos:start="355:16" pos:end="355:22">is_h264</name></expr>)</condition><block pos:start="355:24" pos:end="395:13">{<block_content pos:start="357:17" pos:end="393:17">

                <if_stmt pos:start="357:17" pos:end="393:17"><if pos:start="357:17" pos:end="371:17">if<condition pos:start="357:19" pos:end="357:42">(<expr pos:start="357:20" pos:end="357:41"><call pos:start="357:20" pos:end="357:41"><name pos:start="357:20" pos:end="357:32">IS_INTRA16x16</name><argument_list pos:start="357:33" pos:end="357:41">(<argument pos:start="357:34" pos:end="357:40"><expr pos:start="357:34" pos:end="357:40"><name pos:start="357:34" pos:end="357:40">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="357:43" pos:end="371:17">{<block_content pos:start="359:21" pos:end="369:21">

                    <for pos:start="359:21" pos:end="369:21">for<control pos:start="359:24" pos:end="359:39">(<init pos:start="359:25" pos:end="359:28"><expr pos:start="359:25" pos:end="359:27"><name pos:start="359:25" pos:end="359:25">i</name><operator pos:start="359:26" pos:end="359:26">=</operator><literal type="number" pos:start="359:27" pos:end="359:27">0</literal></expr>;</init> <condition pos:start="359:30" pos:end="359:34"><expr pos:start="359:30" pos:end="359:33"><name pos:start="359:30" pos:end="359:30">i</name><operator pos:start="359:31" pos:end="359:31">&lt;</operator><literal type="number" pos:start="359:32" pos:end="359:33">16</literal></expr>;</condition> <incr pos:start="359:36" pos:end="359:38"><expr pos:start="359:36" pos:end="359:38"><name pos:start="359:36" pos:end="359:36">i</name><operator pos:start="359:37" pos:end="359:38">++</operator></expr></incr>)</control><block pos:start="359:40" pos:end="369:21">{<block_content pos:start="361:25" pos:end="367:90">

                        <if_stmt pos:start="361:25" pos:end="367:90"><if pos:start="361:25" pos:end="363:87">if<condition pos:start="361:27" pos:end="361:63">(<expr pos:start="361:28" pos:end="361:62"><name pos:start="361:28" pos:end="361:62"><name pos:start="361:28" pos:end="361:28">h</name><operator pos:start="361:29" pos:end="361:30">-&gt;</operator><name pos:start="361:31" pos:end="361:50">non_zero_count_cache</name><index pos:start="361:51" pos:end="361:62">[ <expr pos:start="361:53" pos:end="361:60"><name pos:start="361:53" pos:end="361:60"><name pos:start="361:53" pos:end="361:57">scan8</name><index pos:start="361:58" pos:end="361:60">[<expr pos:start="361:59" pos:end="361:59"><name pos:start="361:59" pos:end="361:59">i</name></expr>]</index></name></expr> ]</index></name></expr>)</condition><block type="pseudo" pos:start="363:29" pos:end="363:87"><block_content pos:start="363:29" pos:end="363:87">

                            <expr_stmt pos:start="363:29" pos:end="363:87"><expr pos:start="363:29" pos:end="363:86"><call pos:start="363:29" pos:end="363:86"><name pos:start="363:29" pos:end="363:36">idct_add</name><argument_list pos:start="363:37" pos:end="363:86">(<argument pos:start="363:38" pos:end="363:61"><expr pos:start="363:38" pos:end="363:61"><name pos:start="363:38" pos:end="363:43">dest_y</name> <operator pos:start="363:45" pos:end="363:45">+</operator> <name pos:start="363:47" pos:end="363:61"><name pos:start="363:47" pos:end="363:58">block_offset</name><index pos:start="363:59" pos:end="363:61">[<expr pos:start="363:60" pos:end="363:60"><name pos:start="363:60" pos:end="363:60">i</name></expr>]</index></name></expr></argument>, <argument pos:start="363:64" pos:end="363:75"><expr pos:start="363:64" pos:end="363:75"><name pos:start="363:64" pos:end="363:68"><name pos:start="363:64" pos:end="363:64">h</name><operator pos:start="363:65" pos:end="363:66">-&gt;</operator><name pos:start="363:67" pos:end="363:68">mb</name></name> <operator pos:start="363:70" pos:end="363:70">+</operator> <name pos:start="363:72" pos:end="363:72">i</name><operator pos:start="363:73" pos:end="363:73">*</operator><literal type="number" pos:start="363:74" pos:end="363:75">16</literal></expr></argument>, <argument pos:start="363:78" pos:end="363:85"><expr pos:start="363:78" pos:end="363:85"><name pos:start="363:78" pos:end="363:85">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="365:25" pos:end="367:90">else if<condition pos:start="365:32" pos:end="365:44">(<expr pos:start="365:33" pos:end="365:43"><name pos:start="365:33" pos:end="365:43"><name pos:start="365:33" pos:end="365:33">h</name><operator pos:start="365:34" pos:end="365:35">-&gt;</operator><name pos:start="365:36" pos:end="365:37">mb</name><index pos:start="365:38" pos:end="365:43">[<expr pos:start="365:39" pos:end="365:42"><name pos:start="365:39" pos:end="365:39">i</name><operator pos:start="365:40" pos:end="365:40">*</operator><literal type="number" pos:start="365:41" pos:end="365:42">16</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="367:29" pos:end="367:90"><block_content pos:start="367:29" pos:end="367:90">

                            <expr_stmt pos:start="367:29" pos:end="367:90"><expr pos:start="367:29" pos:end="367:89"><call pos:start="367:29" pos:end="367:89"><name pos:start="367:29" pos:end="367:39">idct_dc_add</name><argument_list pos:start="367:40" pos:end="367:89">(<argument pos:start="367:41" pos:end="367:64"><expr pos:start="367:41" pos:end="367:64"><name pos:start="367:41" pos:end="367:46">dest_y</name> <operator pos:start="367:48" pos:end="367:48">+</operator> <name pos:start="367:50" pos:end="367:64"><name pos:start="367:50" pos:end="367:61">block_offset</name><index pos:start="367:62" pos:end="367:64">[<expr pos:start="367:63" pos:end="367:63"><name pos:start="367:63" pos:end="367:63">i</name></expr>]</index></name></expr></argument>, <argument pos:start="367:67" pos:end="367:78"><expr pos:start="367:67" pos:end="367:78"><name pos:start="367:67" pos:end="367:71"><name pos:start="367:67" pos:end="367:67">h</name><operator pos:start="367:68" pos:end="367:69">-&gt;</operator><name pos:start="367:70" pos:end="367:71">mb</name></name> <operator pos:start="367:73" pos:end="367:73">+</operator> <name pos:start="367:75" pos:end="367:75">i</name><operator pos:start="367:76" pos:end="367:76">*</operator><literal type="number" pos:start="367:77" pos:end="367:78">16</literal></expr></argument>, <argument pos:start="367:81" pos:end="367:88"><expr pos:start="367:81" pos:end="367:88"><name pos:start="367:81" pos:end="367:88">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></if><else pos:start="371:18" pos:end="393:17">else<block pos:start="371:22" pos:end="393:17">{<block_content pos:start="373:21" pos:end="391:21">

                    <decl_stmt pos:start="373:21" pos:end="373:62"><decl pos:start="373:21" pos:end="373:61"><type pos:start="373:21" pos:end="373:29"><specifier pos:start="373:21" pos:end="373:25">const</specifier> <name pos:start="373:27" pos:end="373:29">int</name></type> <name pos:start="373:31" pos:end="373:32">di</name> <init pos:start="373:34" pos:end="373:61">= <expr pos:start="373:36" pos:end="373:61"><ternary pos:start="373:36" pos:end="373:61"><condition pos:start="373:36" pos:end="373:55"><expr pos:start="373:36" pos:end="373:53"><call pos:start="373:36" pos:end="373:53"><name pos:start="373:36" pos:end="373:44">IS_8x8DCT</name><argument_list pos:start="373:45" pos:end="373:53">(<argument pos:start="373:46" pos:end="373:52"><expr pos:start="373:46" pos:end="373:52"><name pos:start="373:46" pos:end="373:52">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="373:57" pos:end="373:57"> <expr pos:start="373:57" pos:end="373:57"><literal type="number" pos:start="373:57" pos:end="373:57">4</literal></expr> </then><else pos:start="373:59" pos:end="373:61">: <expr pos:start="373:61" pos:end="373:61"><literal type="number" pos:start="373:61" pos:end="373:61">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                    <for pos:start="375:21" pos:end="391:21">for<control pos:start="375:24" pos:end="375:41">(<init pos:start="375:25" pos:end="375:28"><expr pos:start="375:25" pos:end="375:27"><name pos:start="375:25" pos:end="375:25">i</name><operator pos:start="375:26" pos:end="375:26">=</operator><literal type="number" pos:start="375:27" pos:end="375:27">0</literal></expr>;</init> <condition pos:start="375:30" pos:end="375:34"><expr pos:start="375:30" pos:end="375:33"><name pos:start="375:30" pos:end="375:30">i</name><operator pos:start="375:31" pos:end="375:31">&lt;</operator><literal type="number" pos:start="375:32" pos:end="375:33">16</literal></expr>;</condition> <incr pos:start="375:36" pos:end="375:40"><expr pos:start="375:36" pos:end="375:40"><name pos:start="375:36" pos:end="375:36">i</name><operator pos:start="375:37" pos:end="375:38">+=</operator><name pos:start="375:39" pos:end="375:40">di</name></expr></incr>)</control><block pos:start="375:42" pos:end="391:21">{<block_content pos:start="377:25" pos:end="389:25">

                        <decl_stmt pos:start="377:25" pos:end="377:70"><decl pos:start="377:25" pos:end="377:69"><type pos:start="377:25" pos:end="377:27"><name pos:start="377:25" pos:end="377:27">int</name></type> <name pos:start="377:29" pos:end="377:31">nnz</name> <init pos:start="377:33" pos:end="377:69">= <expr pos:start="377:35" pos:end="377:69"><name pos:start="377:35" pos:end="377:69"><name pos:start="377:35" pos:end="377:35">h</name><operator pos:start="377:36" pos:end="377:37">-&gt;</operator><name pos:start="377:38" pos:end="377:57">non_zero_count_cache</name><index pos:start="377:58" pos:end="377:69">[ <expr pos:start="377:60" pos:end="377:67"><name pos:start="377:60" pos:end="377:67"><name pos:start="377:60" pos:end="377:64">scan8</name><index pos:start="377:65" pos:end="377:67">[<expr pos:start="377:66" pos:end="377:66"><name pos:start="377:66" pos:end="377:66">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="379:25" pos:end="389:25"><if pos:start="379:25" pos:end="389:25">if<condition pos:start="379:27" pos:end="379:31">(<expr pos:start="379:28" pos:end="379:30"><name pos:start="379:28" pos:end="379:30">nnz</name></expr>)</condition><block pos:start="379:32" pos:end="389:25">{<block_content pos:start="381:29" pos:end="387:91">

                            <if_stmt pos:start="381:29" pos:end="387:91"><if pos:start="381:29" pos:end="383:94">if<condition pos:start="381:31" pos:end="381:53">(<expr pos:start="381:32" pos:end="381:52"><name pos:start="381:32" pos:end="381:34">nnz</name><operator pos:start="381:35" pos:end="381:36">==</operator><literal type="number" pos:start="381:37" pos:end="381:37">1</literal> <operator pos:start="381:39" pos:end="381:40">&amp;&amp;</operator> <name pos:start="381:42" pos:end="381:52"><name pos:start="381:42" pos:end="381:42">h</name><operator pos:start="381:43" pos:end="381:44">-&gt;</operator><name pos:start="381:45" pos:end="381:46">mb</name><index pos:start="381:47" pos:end="381:52">[<expr pos:start="381:48" pos:end="381:51"><name pos:start="381:48" pos:end="381:48">i</name><operator pos:start="381:49" pos:end="381:49">*</operator><literal type="number" pos:start="381:50" pos:end="381:51">16</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="383:33" pos:end="383:94"><block_content pos:start="383:33" pos:end="383:94">

                                <expr_stmt pos:start="383:33" pos:end="383:94"><expr pos:start="383:33" pos:end="383:93"><call pos:start="383:33" pos:end="383:93"><name pos:start="383:33" pos:end="383:43">idct_dc_add</name><argument_list pos:start="383:44" pos:end="383:93">(<argument pos:start="383:45" pos:end="383:68"><expr pos:start="383:45" pos:end="383:68"><name pos:start="383:45" pos:end="383:50">dest_y</name> <operator pos:start="383:52" pos:end="383:52">+</operator> <name pos:start="383:54" pos:end="383:68"><name pos:start="383:54" pos:end="383:65">block_offset</name><index pos:start="383:66" pos:end="383:68">[<expr pos:start="383:67" pos:end="383:67"><name pos:start="383:67" pos:end="383:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="383:71" pos:end="383:82"><expr pos:start="383:71" pos:end="383:82"><name pos:start="383:71" pos:end="383:75"><name pos:start="383:71" pos:end="383:71">h</name><operator pos:start="383:72" pos:end="383:73">-&gt;</operator><name pos:start="383:74" pos:end="383:75">mb</name></name> <operator pos:start="383:77" pos:end="383:77">+</operator> <name pos:start="383:79" pos:end="383:79">i</name><operator pos:start="383:80" pos:end="383:80">*</operator><literal type="number" pos:start="383:81" pos:end="383:82">16</literal></expr></argument>, <argument pos:start="383:85" pos:end="383:92"><expr pos:start="383:85" pos:end="383:92"><name pos:start="383:85" pos:end="383:92">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="385:29" pos:end="387:91">else<block type="pseudo" pos:start="387:33" pos:end="387:91"><block_content pos:start="387:33" pos:end="387:91">

                                <expr_stmt pos:start="387:33" pos:end="387:91"><expr pos:start="387:33" pos:end="387:90"><call pos:start="387:33" pos:end="387:90"><name pos:start="387:33" pos:end="387:40">idct_add</name><argument_list pos:start="387:41" pos:end="387:90">(<argument pos:start="387:42" pos:end="387:65"><expr pos:start="387:42" pos:end="387:65"><name pos:start="387:42" pos:end="387:47">dest_y</name> <operator pos:start="387:49" pos:end="387:49">+</operator> <name pos:start="387:51" pos:end="387:65"><name pos:start="387:51" pos:end="387:62">block_offset</name><index pos:start="387:63" pos:end="387:65">[<expr pos:start="387:64" pos:end="387:64"><name pos:start="387:64" pos:end="387:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="387:68" pos:end="387:79"><expr pos:start="387:68" pos:end="387:79"><name pos:start="387:68" pos:end="387:72"><name pos:start="387:68" pos:end="387:68">h</name><operator pos:start="387:69" pos:end="387:70">-&gt;</operator><name pos:start="387:71" pos:end="387:72">mb</name></name> <operator pos:start="387:74" pos:end="387:74">+</operator> <name pos:start="387:76" pos:end="387:76">i</name><operator pos:start="387:77" pos:end="387:77">*</operator><literal type="number" pos:start="387:78" pos:end="387:79">16</literal></expr></argument>, <argument pos:start="387:82" pos:end="387:89"><expr pos:start="387:82" pos:end="387:89"><name pos:start="387:82" pos:end="387:89">linesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if><else pos:start="395:14" pos:end="409:13">else<block pos:start="395:18" pos:end="409:13">{<block_content pos:start="397:17" pos:end="407:17">

                <for pos:start="397:17" pos:end="407:17">for<control pos:start="397:20" pos:end="397:35">(<init pos:start="397:21" pos:end="397:24"><expr pos:start="397:21" pos:end="397:23"><name pos:start="397:21" pos:end="397:21">i</name><operator pos:start="397:22" pos:end="397:22">=</operator><literal type="number" pos:start="397:23" pos:end="397:23">0</literal></expr>;</init> <condition pos:start="397:26" pos:end="397:30"><expr pos:start="397:26" pos:end="397:29"><name pos:start="397:26" pos:end="397:26">i</name><operator pos:start="397:27" pos:end="397:27">&lt;</operator><literal type="number" pos:start="397:28" pos:end="397:29">16</literal></expr>;</condition> <incr pos:start="397:32" pos:end="397:34"><expr pos:start="397:32" pos:end="397:34"><name pos:start="397:32" pos:end="397:32">i</name><operator pos:start="397:33" pos:end="397:34">++</operator></expr></incr>)</control><block pos:start="397:36" pos:end="407:17">{<block_content pos:start="399:21" pos:end="405:21">

                    <if_stmt pos:start="399:21" pos:end="405:21"><if pos:start="399:21" pos:end="405:21">if<condition pos:start="399:23" pos:end="399:74">(<expr pos:start="399:24" pos:end="399:73"><name pos:start="399:24" pos:end="399:58"><name pos:start="399:24" pos:end="399:24">h</name><operator pos:start="399:25" pos:end="399:26">-&gt;</operator><name pos:start="399:27" pos:end="399:46">non_zero_count_cache</name><index pos:start="399:47" pos:end="399:58">[ <expr pos:start="399:49" pos:end="399:56"><name pos:start="399:49" pos:end="399:56"><name pos:start="399:49" pos:end="399:53">scan8</name><index pos:start="399:54" pos:end="399:56">[<expr pos:start="399:55" pos:end="399:55"><name pos:start="399:55" pos:end="399:55">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="399:60" pos:end="399:61">||</operator> <name pos:start="399:63" pos:end="399:73"><name pos:start="399:63" pos:end="399:63">h</name><operator pos:start="399:64" pos:end="399:65">-&gt;</operator><name pos:start="399:66" pos:end="399:67">mb</name><index pos:start="399:68" pos:end="399:73">[<expr pos:start="399:69" pos:end="399:72"><name pos:start="399:69" pos:end="399:69">i</name><operator pos:start="399:70" pos:end="399:70">*</operator><literal type="number" pos:start="399:71" pos:end="399:72">16</literal></expr>]</index></name></expr>)</condition><block pos:start="399:75" pos:end="405:21">{<block_content pos:start="401:25" pos:end="403:107"> <comment type="line" pos:start="399:77" pos:end="399:113">//FIXME benchmark weird rule, &amp; below</comment>

                        <decl_stmt pos:start="401:25" pos:end="401:70"><decl pos:start="401:25" pos:end="401:69"><type pos:start="401:25" pos:end="401:39"><name pos:start="401:25" pos:end="401:31">uint8_t</name> <modifier pos:start="401:33" pos:end="401:33">*</modifier> <specifier pos:start="401:35" pos:end="401:39">const</specifier></type> <name pos:start="401:41" pos:end="401:43">ptr</name><init pos:start="401:44" pos:end="401:69">= <expr pos:start="401:46" pos:end="401:69"><name pos:start="401:46" pos:end="401:51">dest_y</name> <operator pos:start="401:53" pos:end="401:53">+</operator> <name pos:start="401:55" pos:end="401:69"><name pos:start="401:55" pos:end="401:66">block_offset</name><index pos:start="401:67" pos:end="401:69">[<expr pos:start="401:68" pos:end="401:68"><name pos:start="401:68" pos:end="401:68">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="403:25" pos:end="403:107"><expr pos:start="403:25" pos:end="403:106"><call pos:start="403:25" pos:end="403:106"><name pos:start="403:25" pos:end="403:39">svq3_add_idct_c</name><argument_list pos:start="403:40" pos:end="403:106">(<argument pos:start="403:41" pos:end="403:43"><expr pos:start="403:41" pos:end="403:43"><name pos:start="403:41" pos:end="403:43">ptr</name></expr></argument>, <argument pos:start="403:46" pos:end="403:57"><expr pos:start="403:46" pos:end="403:57"><name pos:start="403:46" pos:end="403:50"><name pos:start="403:46" pos:end="403:46">h</name><operator pos:start="403:47" pos:end="403:48">-&gt;</operator><name pos:start="403:49" pos:end="403:50">mb</name></name> <operator pos:start="403:52" pos:end="403:52">+</operator> <name pos:start="403:54" pos:end="403:54">i</name><operator pos:start="403:55" pos:end="403:55">*</operator><literal type="number" pos:start="403:56" pos:end="403:57">16</literal></expr></argument>, <argument pos:start="403:60" pos:end="403:67"><expr pos:start="403:60" pos:end="403:67"><name pos:start="403:60" pos:end="403:67">linesize</name></expr></argument>, <argument pos:start="403:70" pos:end="403:78"><expr pos:start="403:70" pos:end="403:78"><name pos:start="403:70" pos:end="403:78"><name pos:start="403:70" pos:end="403:70">s</name><operator pos:start="403:71" pos:end="403:72">-&gt;</operator><name pos:start="403:73" pos:end="403:78">qscale</name></name></expr></argument>, <argument pos:start="403:81" pos:end="403:105"><expr pos:start="403:81" pos:end="403:105"><ternary pos:start="403:81" pos:end="403:105"><condition pos:start="403:81" pos:end="403:99"><expr pos:start="403:81" pos:end="403:97"><call pos:start="403:81" pos:end="403:97"><name pos:start="403:81" pos:end="403:88">IS_INTRA</name><argument_list pos:start="403:89" pos:end="403:97">(<argument pos:start="403:90" pos:end="403:96"><expr pos:start="403:90" pos:end="403:96"><name pos:start="403:90" pos:end="403:96">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="403:101" pos:end="403:101"> <expr pos:start="403:101" pos:end="403:101"><literal type="number" pos:start="403:101" pos:end="403:101">1</literal></expr> </then><else pos:start="403:103" pos:end="403:105">: <expr pos:start="403:105" pos:end="403:105"><literal type="number" pos:start="403:105" pos:end="403:105">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="415:9" pos:end="465:9"><if pos:start="415:9" pos:end="465:9">if<condition pos:start="415:11" pos:end="415:49">(<expr pos:start="415:12" pos:end="415:48"><name pos:start="415:12" pos:end="415:17">simple</name> <operator pos:start="415:19" pos:end="415:20">||</operator> <operator pos:start="415:22" pos:end="415:22">!</operator><operator pos:start="415:23" pos:end="415:23">(</operator><name pos:start="415:24" pos:end="415:31"><name pos:start="415:24" pos:end="415:24">s</name><operator pos:start="415:25" pos:end="415:26">-&gt;</operator><name pos:start="415:27" pos:end="415:31">flags</name></name><operator pos:start="415:32" pos:end="415:32">&amp;</operator><name pos:start="415:33" pos:end="415:47">CODEC_FLAG_GRAY</name><operator pos:start="415:48" pos:end="415:48">)</operator></expr>)</condition><block pos:start="415:50" pos:end="465:9">{<block_content pos:start="417:13" pos:end="463:13">

            <decl_stmt pos:start="417:13" pos:end="417:50"><decl pos:start="417:13" pos:end="417:49"><type pos:start="417:13" pos:end="417:21"><name pos:start="417:13" pos:end="417:19">uint8_t</name> <modifier pos:start="417:21" pos:end="417:21">*</modifier></type><name pos:start="417:22" pos:end="417:28"><name pos:start="417:22" pos:end="417:25">dest</name><index pos:start="417:26" pos:end="417:28">[<expr pos:start="417:27" pos:end="417:27"><literal type="number" pos:start="417:27" pos:end="417:27">2</literal></expr>]</index></name> <init pos:start="417:30" pos:end="417:49">= <expr pos:start="417:32" pos:end="417:49"><block pos:start="417:32" pos:end="417:49">{<expr pos:start="417:33" pos:end="417:39"><name pos:start="417:33" pos:end="417:39">dest_cb</name></expr>, <expr pos:start="417:42" pos:end="417:48"><name pos:start="417:42" pos:end="417:48">dest_cr</name></expr>}</block></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="419:13" pos:end="433:13"><if pos:start="419:13" pos:end="423:13">if<condition pos:start="419:15" pos:end="419:32">(<expr pos:start="419:16" pos:end="419:31"><name pos:start="419:16" pos:end="419:31">transform_bypass</name></expr>)</condition><block pos:start="419:33" pos:end="423:13">{<block_content pos:start="421:17" pos:end="421:60">

                <expr_stmt pos:start="421:17" pos:end="421:60"><expr pos:start="421:17" pos:end="421:59"><name pos:start="421:17" pos:end="421:24">idct_add</name> <operator pos:start="421:26" pos:end="421:26">=</operator> <name pos:start="421:28" pos:end="421:38">idct_dc_add</name> <operator pos:start="421:40" pos:end="421:40">=</operator> <name pos:start="421:42" pos:end="421:59"><name pos:start="421:42" pos:end="421:42">s</name><operator pos:start="421:43" pos:end="421:44">-&gt;</operator><name pos:start="421:45" pos:end="421:47">dsp</name><operator pos:start="421:48" pos:end="421:48">.</operator><name pos:start="421:49" pos:end="421:59">add_pixels4</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="423:14" pos:end="433:13">else<block pos:start="423:18" pos:end="433:13">{<block_content pos:start="425:17" pos:end="431:136">

                <expr_stmt pos:start="425:17" pos:end="425:48"><expr pos:start="425:17" pos:end="425:47"><name pos:start="425:17" pos:end="425:24">idct_add</name> <operator pos:start="425:26" pos:end="425:26">=</operator> <name pos:start="425:28" pos:end="425:47"><name pos:start="425:28" pos:end="425:28">s</name><operator pos:start="425:29" pos:end="425:30">-&gt;</operator><name pos:start="425:31" pos:end="425:33">dsp</name><operator pos:start="425:34" pos:end="425:34">.</operator><name pos:start="425:35" pos:end="425:47">h264_idct_add</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="427:17" pos:end="427:54"><expr pos:start="427:17" pos:end="427:53"><name pos:start="427:17" pos:end="427:27">idct_dc_add</name> <operator pos:start="427:29" pos:end="427:29">=</operator> <name pos:start="427:31" pos:end="427:53"><name pos:start="427:31" pos:end="427:31">s</name><operator pos:start="427:32" pos:end="427:33">-&gt;</operator><name pos:start="427:34" pos:end="427:36">dsp</name><operator pos:start="427:37" pos:end="427:37">.</operator><name pos:start="427:38" pos:end="427:53">h264_idct_dc_add</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="429:17" pos:end="429:131"><expr pos:start="429:17" pos:end="429:130"><call pos:start="429:17" pos:end="429:130"><name pos:start="429:17" pos:end="429:40">chroma_dc_dequant_idct_c</name><argument_list pos:start="429:41" pos:end="429:130">(<argument pos:start="429:42" pos:end="429:54"><expr pos:start="429:42" pos:end="429:54"><name pos:start="429:42" pos:end="429:46"><name pos:start="429:42" pos:end="429:42">h</name><operator pos:start="429:43" pos:end="429:44">-&gt;</operator><name pos:start="429:45" pos:end="429:46">mb</name></name> <operator pos:start="429:48" pos:end="429:48">+</operator> <literal type="number" pos:start="429:50" pos:end="429:51">16</literal><operator pos:start="429:52" pos:end="429:52">*</operator><literal type="number" pos:start="429:53" pos:end="429:54">16</literal></expr></argument>, <argument pos:start="429:57" pos:end="429:68"><expr pos:start="429:57" pos:end="429:68"><name pos:start="429:57" pos:end="429:68"><name pos:start="429:57" pos:end="429:57">h</name><operator pos:start="429:58" pos:end="429:59">-&gt;</operator><name pos:start="429:60" pos:end="429:68">chroma_qp</name></name></expr></argument>, <argument pos:start="429:71" pos:end="429:129"><expr pos:start="429:71" pos:end="429:129"><name pos:start="429:71" pos:end="429:129"><name pos:start="429:71" pos:end="429:71">h</name><operator pos:start="429:72" pos:end="429:73">-&gt;</operator><name pos:start="429:74" pos:end="429:87">dequant4_coeff</name><index pos:start="429:88" pos:end="429:112">[<expr pos:start="429:89" pos:end="429:111"><ternary pos:start="429:89" pos:end="429:111"><condition pos:start="429:89" pos:end="429:107"><expr pos:start="429:89" pos:end="429:105"><call pos:start="429:89" pos:end="429:105"><name pos:start="429:89" pos:end="429:96">IS_INTRA</name><argument_list pos:start="429:97" pos:end="429:105">(<argument pos:start="429:98" pos:end="429:104"><expr pos:start="429:98" pos:end="429:104"><name pos:start="429:98" pos:end="429:104">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="429:109" pos:end="429:109"> <expr pos:start="429:109" pos:end="429:109"><literal type="number" pos:start="429:109" pos:end="429:109">1</literal></expr></then><else pos:start="429:110" pos:end="429:111">:<expr pos:start="429:111" pos:end="429:111"><literal type="number" pos:start="429:111" pos:end="429:111">4</literal></expr></else></ternary></expr>]</index><index pos:start="429:113" pos:end="429:126">[<expr pos:start="429:114" pos:end="429:125"><name pos:start="429:114" pos:end="429:125"><name pos:start="429:114" pos:end="429:114">h</name><operator pos:start="429:115" pos:end="429:116">-&gt;</operator><name pos:start="429:117" pos:end="429:125">chroma_qp</name></name></expr>]</index><index pos:start="429:127" pos:end="429:129">[<expr pos:start="429:128" pos:end="429:128"><literal type="number" pos:start="429:128" pos:end="429:128">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="431:17" pos:end="431:136"><expr pos:start="431:17" pos:end="431:135"><call pos:start="431:17" pos:end="431:135"><name pos:start="431:17" pos:end="431:40">chroma_dc_dequant_idct_c</name><argument_list pos:start="431:41" pos:end="431:135">(<argument pos:start="431:42" pos:end="431:59"><expr pos:start="431:42" pos:end="431:59"><name pos:start="431:42" pos:end="431:46"><name pos:start="431:42" pos:end="431:42">h</name><operator pos:start="431:43" pos:end="431:44">-&gt;</operator><name pos:start="431:45" pos:end="431:46">mb</name></name> <operator pos:start="431:48" pos:end="431:48">+</operator> <literal type="number" pos:start="431:50" pos:end="431:51">16</literal><operator pos:start="431:52" pos:end="431:52">*</operator><literal type="number" pos:start="431:53" pos:end="431:55">16</literal><operator pos:start="431:55" pos:end="431:55">+</operator><literal type="number" pos:start="431:56" pos:end="431:56">4</literal><operator pos:start="431:57" pos:end="431:57">*</operator><literal type="number" pos:start="431:58" pos:end="431:59">16</literal></expr></argument>, <argument pos:start="431:62" pos:end="431:73"><expr pos:start="431:62" pos:end="431:73"><name pos:start="431:62" pos:end="431:73"><name pos:start="431:62" pos:end="431:62">h</name><operator pos:start="431:63" pos:end="431:64">-&gt;</operator><name pos:start="431:65" pos:end="431:73">chroma_qp</name></name></expr></argument>, <argument pos:start="431:76" pos:end="431:134"><expr pos:start="431:76" pos:end="431:134"><name pos:start="431:76" pos:end="431:134"><name pos:start="431:76" pos:end="431:76">h</name><operator pos:start="431:77" pos:end="431:78">-&gt;</operator><name pos:start="431:79" pos:end="431:92">dequant4_coeff</name><index pos:start="431:93" pos:end="431:117">[<expr pos:start="431:94" pos:end="431:116"><ternary pos:start="431:94" pos:end="431:116"><condition pos:start="431:94" pos:end="431:112"><expr pos:start="431:94" pos:end="431:110"><call pos:start="431:94" pos:end="431:110"><name pos:start="431:94" pos:end="431:101">IS_INTRA</name><argument_list pos:start="431:102" pos:end="431:110">(<argument pos:start="431:103" pos:end="431:109"><expr pos:start="431:103" pos:end="431:109"><name pos:start="431:103" pos:end="431:109">mb_type</name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="431:114" pos:end="431:114"> <expr pos:start="431:114" pos:end="431:114"><literal type="number" pos:start="431:114" pos:end="431:114">2</literal></expr></then><else pos:start="431:115" pos:end="431:116">:<expr pos:start="431:116" pos:end="431:116"><literal type="number" pos:start="431:116" pos:end="431:116">5</literal></expr></else></ternary></expr>]</index><index pos:start="431:118" pos:end="431:131">[<expr pos:start="431:119" pos:end="431:130"><name pos:start="431:119" pos:end="431:130"><name pos:start="431:119" pos:end="431:119">h</name><operator pos:start="431:120" pos:end="431:121">-&gt;</operator><name pos:start="431:122" pos:end="431:130">chroma_qp</name></name></expr>]</index><index pos:start="431:132" pos:end="431:134">[<expr pos:start="431:133" pos:end="431:133"><literal type="number" pos:start="431:133" pos:end="431:133">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="435:13" pos:end="463:13"><if pos:start="435:13" pos:end="449:13">if<condition pos:start="435:15" pos:end="435:23">(<expr pos:start="435:16" pos:end="435:22"><name pos:start="435:16" pos:end="435:22">is_h264</name></expr>)</condition><block pos:start="435:24" pos:end="449:13">{<block_content pos:start="437:17" pos:end="447:17">

                <for pos:start="437:17" pos:end="447:17">for<control pos:start="437:20" pos:end="437:38">(<init pos:start="437:21" pos:end="437:25"><expr pos:start="437:21" pos:end="437:24"><name pos:start="437:21" pos:end="437:21">i</name><operator pos:start="437:22" pos:end="437:22">=</operator><literal type="number" pos:start="437:23" pos:end="437:24">16</literal></expr>;</init> <condition pos:start="437:27" pos:end="437:33"><expr pos:start="437:27" pos:end="437:32"><name pos:start="437:27" pos:end="437:27">i</name><operator pos:start="437:28" pos:end="437:28">&lt;</operator><literal type="number" pos:start="437:29" pos:end="437:31">16</literal><operator pos:start="437:31" pos:end="437:31">+</operator><literal type="number" pos:start="437:32" pos:end="437:32">8</literal></expr>;</condition> <incr pos:start="437:35" pos:end="437:37"><expr pos:start="437:35" pos:end="437:37"><name pos:start="437:35" pos:end="437:35">i</name><operator pos:start="437:36" pos:end="437:37">++</operator></expr></incr>)</control><block pos:start="437:39" pos:end="447:17">{<block_content pos:start="439:21" pos:end="445:96">

                    <if_stmt pos:start="439:21" pos:end="445:96"><if pos:start="439:21" pos:end="441:93">if<condition pos:start="439:23" pos:end="439:59">(<expr pos:start="439:24" pos:end="439:58"><name pos:start="439:24" pos:end="439:58"><name pos:start="439:24" pos:end="439:24">h</name><operator pos:start="439:25" pos:end="439:26">-&gt;</operator><name pos:start="439:27" pos:end="439:46">non_zero_count_cache</name><index pos:start="439:47" pos:end="439:58">[ <expr pos:start="439:49" pos:end="439:56"><name pos:start="439:49" pos:end="439:56"><name pos:start="439:49" pos:end="439:53">scan8</name><index pos:start="439:54" pos:end="439:56">[<expr pos:start="439:55" pos:end="439:55"><name pos:start="439:55" pos:end="439:55">i</name></expr>]</index></name></expr> ]</index></name></expr>)</condition><block type="pseudo" pos:start="441:25" pos:end="441:93"><block_content pos:start="441:25" pos:end="441:93">

                        <expr_stmt pos:start="441:25" pos:end="441:93"><expr pos:start="441:25" pos:end="441:92"><call pos:start="441:25" pos:end="441:92"><name pos:start="441:25" pos:end="441:32">idct_add</name><argument_list pos:start="441:33" pos:end="441:92">(<argument pos:start="441:34" pos:end="441:65"><expr pos:start="441:34" pos:end="441:65"><name pos:start="441:34" pos:end="441:47"><name pos:start="441:34" pos:end="441:37">dest</name><index pos:start="441:38" pos:end="441:47">[<expr pos:start="441:39" pos:end="441:46"><operator pos:start="441:39" pos:end="441:39">(</operator><name pos:start="441:40" pos:end="441:40">i</name><operator pos:start="441:41" pos:end="441:41">&amp;</operator><literal type="number" pos:start="441:42" pos:end="441:42">4</literal><operator pos:start="441:43" pos:end="441:43">)</operator><operator pos:start="441:44" pos:end="441:45">&gt;&gt;</operator><literal type="number" pos:start="441:46" pos:end="441:46">2</literal></expr>]</index></name> <operator pos:start="441:49" pos:end="441:49">+</operator> <name pos:start="441:51" pos:end="441:65"><name pos:start="441:51" pos:end="441:62">block_offset</name><index pos:start="441:63" pos:end="441:65">[<expr pos:start="441:64" pos:end="441:64"><name pos:start="441:64" pos:end="441:64">i</name></expr>]</index></name></expr></argument>, <argument pos:start="441:68" pos:end="441:79"><expr pos:start="441:68" pos:end="441:79"><name pos:start="441:68" pos:end="441:72"><name pos:start="441:68" pos:end="441:68">h</name><operator pos:start="441:69" pos:end="441:70">-&gt;</operator><name pos:start="441:71" pos:end="441:72">mb</name></name> <operator pos:start="441:74" pos:end="441:74">+</operator> <name pos:start="441:76" pos:end="441:76">i</name><operator pos:start="441:77" pos:end="441:77">*</operator><literal type="number" pos:start="441:78" pos:end="441:79">16</literal></expr></argument>, <argument pos:start="441:82" pos:end="441:91"><expr pos:start="441:82" pos:end="441:91"><name pos:start="441:82" pos:end="441:91">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <if type="elseif" pos:start="443:21" pos:end="445:96">else if<condition pos:start="443:28" pos:end="443:40">(<expr pos:start="443:29" pos:end="443:39"><name pos:start="443:29" pos:end="443:39"><name pos:start="443:29" pos:end="443:29">h</name><operator pos:start="443:30" pos:end="443:31">-&gt;</operator><name pos:start="443:32" pos:end="443:33">mb</name><index pos:start="443:34" pos:end="443:39">[<expr pos:start="443:35" pos:end="443:38"><name pos:start="443:35" pos:end="443:35">i</name><operator pos:start="443:36" pos:end="443:36">*</operator><literal type="number" pos:start="443:37" pos:end="443:38">16</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="445:25" pos:end="445:96"><block_content pos:start="445:25" pos:end="445:96">

                        <expr_stmt pos:start="445:25" pos:end="445:96"><expr pos:start="445:25" pos:end="445:95"><call pos:start="445:25" pos:end="445:95"><name pos:start="445:25" pos:end="445:35">idct_dc_add</name><argument_list pos:start="445:36" pos:end="445:95">(<argument pos:start="445:37" pos:end="445:68"><expr pos:start="445:37" pos:end="445:68"><name pos:start="445:37" pos:end="445:50"><name pos:start="445:37" pos:end="445:40">dest</name><index pos:start="445:41" pos:end="445:50">[<expr pos:start="445:42" pos:end="445:49"><operator pos:start="445:42" pos:end="445:42">(</operator><name pos:start="445:43" pos:end="445:43">i</name><operator pos:start="445:44" pos:end="445:44">&amp;</operator><literal type="number" pos:start="445:45" pos:end="445:45">4</literal><operator pos:start="445:46" pos:end="445:46">)</operator><operator pos:start="445:47" pos:end="445:48">&gt;&gt;</operator><literal type="number" pos:start="445:49" pos:end="445:49">2</literal></expr>]</index></name> <operator pos:start="445:52" pos:end="445:52">+</operator> <name pos:start="445:54" pos:end="445:68"><name pos:start="445:54" pos:end="445:65">block_offset</name><index pos:start="445:66" pos:end="445:68">[<expr pos:start="445:67" pos:end="445:67"><name pos:start="445:67" pos:end="445:67">i</name></expr>]</index></name></expr></argument>, <argument pos:start="445:71" pos:end="445:82"><expr pos:start="445:71" pos:end="445:82"><name pos:start="445:71" pos:end="445:75"><name pos:start="445:71" pos:end="445:71">h</name><operator pos:start="445:72" pos:end="445:73">-&gt;</operator><name pos:start="445:74" pos:end="445:75">mb</name></name> <operator pos:start="445:77" pos:end="445:77">+</operator> <name pos:start="445:79" pos:end="445:79">i</name><operator pos:start="445:80" pos:end="445:80">*</operator><literal type="number" pos:start="445:81" pos:end="445:82">16</literal></expr></argument>, <argument pos:start="445:85" pos:end="445:94"><expr pos:start="445:85" pos:end="445:94"><name pos:start="445:85" pos:end="445:94">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if><else pos:start="449:14" pos:end="463:13">else<block pos:start="449:18" pos:end="463:13">{<block_content pos:start="451:17" pos:end="461:17">

                <for pos:start="451:17" pos:end="461:17">for<control pos:start="451:20" pos:end="451:38">(<init pos:start="451:21" pos:end="451:25"><expr pos:start="451:21" pos:end="451:24"><name pos:start="451:21" pos:end="451:21">i</name><operator pos:start="451:22" pos:end="451:22">=</operator><literal type="number" pos:start="451:23" pos:end="451:24">16</literal></expr>;</init> <condition pos:start="451:27" pos:end="451:33"><expr pos:start="451:27" pos:end="451:32"><name pos:start="451:27" pos:end="451:27">i</name><operator pos:start="451:28" pos:end="451:28">&lt;</operator><literal type="number" pos:start="451:29" pos:end="451:31">16</literal><operator pos:start="451:31" pos:end="451:31">+</operator><literal type="number" pos:start="451:32" pos:end="451:32">8</literal></expr>;</condition> <incr pos:start="451:35" pos:end="451:37"><expr pos:start="451:35" pos:end="451:37"><name pos:start="451:35" pos:end="451:35">i</name><operator pos:start="451:36" pos:end="451:37">++</operator></expr></incr>)</control><block pos:start="451:39" pos:end="461:17">{<block_content pos:start="453:21" pos:end="459:21">

                    <if_stmt pos:start="453:21" pos:end="459:21"><if pos:start="453:21" pos:end="459:21">if<condition pos:start="453:23" pos:end="453:74">(<expr pos:start="453:24" pos:end="453:73"><name pos:start="453:24" pos:end="453:58"><name pos:start="453:24" pos:end="453:24">h</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:46">non_zero_count_cache</name><index pos:start="453:47" pos:end="453:58">[ <expr pos:start="453:49" pos:end="453:56"><name pos:start="453:49" pos:end="453:56"><name pos:start="453:49" pos:end="453:53">scan8</name><index pos:start="453:54" pos:end="453:56">[<expr pos:start="453:55" pos:end="453:55"><name pos:start="453:55" pos:end="453:55">i</name></expr>]</index></name></expr> ]</index></name> <operator pos:start="453:60" pos:end="453:61">||</operator> <name pos:start="453:63" pos:end="453:73"><name pos:start="453:63" pos:end="453:63">h</name><operator pos:start="453:64" pos:end="453:65">-&gt;</operator><name pos:start="453:66" pos:end="453:67">mb</name><index pos:start="453:68" pos:end="453:73">[<expr pos:start="453:69" pos:end="453:72"><name pos:start="453:69" pos:end="453:69">i</name><operator pos:start="453:70" pos:end="453:70">*</operator><literal type="number" pos:start="453:71" pos:end="453:72">16</literal></expr>]</index></name></expr>)</condition><block pos:start="453:75" pos:end="459:21">{<block_content pos:start="455:25" pos:end="457:106">

                        <decl_stmt pos:start="455:25" pos:end="455:78"><decl pos:start="455:25" pos:end="455:77"><type pos:start="455:25" pos:end="455:39"><name pos:start="455:25" pos:end="455:31">uint8_t</name> <modifier pos:start="455:33" pos:end="455:33">*</modifier> <specifier pos:start="455:35" pos:end="455:39">const</specifier></type> <name pos:start="455:41" pos:end="455:43">ptr</name><init pos:start="455:44" pos:end="455:77">= <expr pos:start="455:46" pos:end="455:77"><name pos:start="455:46" pos:end="455:59"><name pos:start="455:46" pos:end="455:49">dest</name><index pos:start="455:50" pos:end="455:59">[<expr pos:start="455:51" pos:end="455:58"><operator pos:start="455:51" pos:end="455:51">(</operator><name pos:start="455:52" pos:end="455:52">i</name><operator pos:start="455:53" pos:end="455:53">&amp;</operator><literal type="number" pos:start="455:54" pos:end="455:54">4</literal><operator pos:start="455:55" pos:end="455:55">)</operator><operator pos:start="455:56" pos:end="455:57">&gt;&gt;</operator><literal type="number" pos:start="455:58" pos:end="455:58">2</literal></expr>]</index></name> <operator pos:start="455:61" pos:end="455:61">+</operator> <name pos:start="455:63" pos:end="455:77"><name pos:start="455:63" pos:end="455:74">block_offset</name><index pos:start="455:75" pos:end="455:77">[<expr pos:start="455:76" pos:end="455:76"><name pos:start="455:76" pos:end="455:76">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="457:25" pos:end="457:106"><expr pos:start="457:25" pos:end="457:105"><call pos:start="457:25" pos:end="457:105"><name pos:start="457:25" pos:end="457:39">svq3_add_idct_c</name><argument_list pos:start="457:40" pos:end="457:105">(<argument pos:start="457:41" pos:end="457:43"><expr pos:start="457:41" pos:end="457:43"><name pos:start="457:41" pos:end="457:43">ptr</name></expr></argument>, <argument pos:start="457:46" pos:end="457:57"><expr pos:start="457:46" pos:end="457:57"><name pos:start="457:46" pos:end="457:50"><name pos:start="457:46" pos:end="457:46">h</name><operator pos:start="457:47" pos:end="457:48">-&gt;</operator><name pos:start="457:49" pos:end="457:50">mb</name></name> <operator pos:start="457:52" pos:end="457:52">+</operator> <name pos:start="457:54" pos:end="457:54">i</name><operator pos:start="457:55" pos:end="457:55">*</operator><literal type="number" pos:start="457:56" pos:end="457:57">16</literal></expr></argument>, <argument pos:start="457:60" pos:end="457:69"><expr pos:start="457:60" pos:end="457:69"><name pos:start="457:60" pos:end="457:69">uvlinesize</name></expr></argument>, <argument pos:start="457:72" pos:end="457:101"><expr pos:start="457:72" pos:end="457:101"><name pos:start="457:72" pos:end="457:96"><name pos:start="457:72" pos:end="457:80">chroma_qp</name><index pos:start="457:81" pos:end="457:96">[<expr pos:start="457:82" pos:end="457:95"><name pos:start="457:82" pos:end="457:90"><name pos:start="457:82" pos:end="457:82">s</name><operator pos:start="457:83" pos:end="457:84">-&gt;</operator><name pos:start="457:85" pos:end="457:90">qscale</name></name> <operator pos:start="457:92" pos:end="457:92">+</operator> <literal type="number" pos:start="457:94" pos:end="457:95">12</literal></expr>]</index></name> <operator pos:start="457:98" pos:end="457:98">-</operator> <literal type="number" pos:start="457:100" pos:end="457:101">12</literal></expr></argument>, <argument pos:start="457:104" pos:end="457:104"><expr pos:start="457:104" pos:end="457:104"><literal type="number" pos:start="457:104" pos:end="457:104">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="469:5" pos:end="543:5"><if pos:start="469:5" pos:end="543:5">if<condition pos:start="469:7" pos:end="469:28">(<expr pos:start="469:8" pos:end="469:27"><name pos:start="469:8" pos:end="469:27"><name pos:start="469:8" pos:end="469:8">h</name><operator pos:start="469:9" pos:end="469:10">-&gt;</operator><name pos:start="469:11" pos:end="469:27">deblocking_filter</name></name></expr>)</condition> <block pos:start="469:30" pos:end="543:5">{<block_content pos:start="471:9" pos:end="541:9">

        <if_stmt pos:start="471:9" pos:end="541:9"><if pos:start="471:9" pos:end="531:9">if <condition pos:start="471:12" pos:end="471:35">(<expr pos:start="471:13" pos:end="471:34"><operator pos:start="471:13" pos:end="471:13">!</operator><name pos:start="471:14" pos:end="471:19">simple</name> <operator pos:start="471:21" pos:end="471:22">&amp;&amp;</operator> <name pos:start="471:24" pos:end="471:34">FRAME_MBAFF</name></expr>)</condition> <block pos:start="471:37" pos:end="531:9">{<block_content pos:start="477:13" pos:end="529:87">

            <comment type="line" pos:start="473:13" pos:end="473:52">//FIXME try deblocking one mb at a time?</comment>

            <comment type="line" pos:start="475:13" pos:end="475:101">// the reduction in load/storing mvs and such might outweigh the extra backup/xchg_border</comment>

            <decl_stmt pos:start="477:13" pos:end="477:41"><decl pos:start="477:13" pos:end="477:40"><type pos:start="477:13" pos:end="477:21"><specifier pos:start="477:13" pos:end="477:17">const</specifier> <name pos:start="477:19" pos:end="477:21">int</name></type> <name pos:start="477:23" pos:end="477:26">mb_y</name> <init pos:start="477:28" pos:end="477:40">= <expr pos:start="477:30" pos:end="477:40"><name pos:start="477:30" pos:end="477:36"><name pos:start="477:30" pos:end="477:30">s</name><operator pos:start="477:31" pos:end="477:32">-&gt;</operator><name pos:start="477:33" pos:end="477:36">mb_y</name></name> <operator pos:start="477:38" pos:end="477:38">-</operator> <literal type="number" pos:start="477:40" pos:end="477:40">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="479:13" pos:end="479:64"><decl pos:start="479:13" pos:end="479:33"><type pos:start="479:13" pos:end="479:22"><name pos:start="479:13" pos:end="479:19">uint8_t</name>  <modifier pos:start="479:22" pos:end="479:22">*</modifier></type><name pos:start="479:23" pos:end="479:33">pair_dest_y</name></decl>, <decl pos:start="479:36" pos:end="479:48"><type ref="prev" pos:start="479:13" pos:end="479:22"><modifier pos:start="479:36" pos:end="479:36">*</modifier></type><name pos:start="479:37" pos:end="479:48">pair_dest_cb</name></decl>, <decl pos:start="479:51" pos:end="479:63"><type ref="prev" pos:start="479:13" pos:end="479:22"><modifier pos:start="479:51" pos:end="479:51">*</modifier></type><name pos:start="479:52" pos:end="479:63">pair_dest_cr</name></decl>;</decl_stmt>

            <decl_stmt pos:start="481:13" pos:end="481:54"><decl pos:start="481:13" pos:end="481:53"><type pos:start="481:13" pos:end="481:21"><specifier pos:start="481:13" pos:end="481:17">const</specifier> <name pos:start="481:19" pos:end="481:21">int</name></type> <name pos:start="481:23" pos:end="481:27">mb_xy</name><init pos:start="481:28" pos:end="481:53">= <expr pos:start="481:30" pos:end="481:53"><name pos:start="481:30" pos:end="481:33">mb_x</name> <operator pos:start="481:35" pos:end="481:35">+</operator> <name pos:start="481:37" pos:end="481:40">mb_y</name><operator pos:start="481:41" pos:end="481:41">*</operator><name pos:start="481:42" pos:end="481:53"><name pos:start="481:42" pos:end="481:42">s</name><operator pos:start="481:43" pos:end="481:44">-&gt;</operator><name pos:start="481:45" pos:end="481:53">mb_stride</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="483:13" pos:end="483:72"><decl pos:start="483:13" pos:end="483:71"><type pos:start="483:13" pos:end="483:21"><specifier pos:start="483:13" pos:end="483:17">const</specifier> <name pos:start="483:19" pos:end="483:21">int</name></type> <name pos:start="483:23" pos:end="483:33">mb_type_top</name>   <init pos:start="483:37" pos:end="483:71">= <expr pos:start="483:39" pos:end="483:71"><name pos:start="483:39" pos:end="483:71"><name pos:start="483:39" pos:end="483:39">s</name><operator pos:start="483:40" pos:end="483:41">-&gt;</operator><name pos:start="483:42" pos:end="483:56">current_picture</name><operator pos:start="483:57" pos:end="483:57">.</operator><name pos:start="483:58" pos:end="483:64">mb_type</name><index pos:start="483:65" pos:end="483:71">[<expr pos:start="483:66" pos:end="483:70"><name pos:start="483:66" pos:end="483:70">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="485:13" pos:end="485:85"><decl pos:start="485:13" pos:end="485:84"><type pos:start="485:13" pos:end="485:21"><specifier pos:start="485:13" pos:end="485:17">const</specifier> <name pos:start="485:19" pos:end="485:21">int</name></type> <name pos:start="485:23" pos:end="485:36">mb_type_bottom</name><init pos:start="485:37" pos:end="485:84">= <expr pos:start="485:39" pos:end="485:84"><name pos:start="485:39" pos:end="485:84"><name pos:start="485:39" pos:end="485:39">s</name><operator pos:start="485:40" pos:end="485:41">-&gt;</operator><name pos:start="485:42" pos:end="485:56">current_picture</name><operator pos:start="485:57" pos:end="485:57">.</operator><name pos:start="485:58" pos:end="485:64">mb_type</name><index pos:start="485:65" pos:end="485:84">[<expr pos:start="485:66" pos:end="485:83"><name pos:start="485:66" pos:end="485:70">mb_xy</name><operator pos:start="485:71" pos:end="485:71">+</operator><name pos:start="485:72" pos:end="485:83"><name pos:start="485:72" pos:end="485:72">s</name><operator pos:start="485:73" pos:end="485:74">-&gt;</operator><name pos:start="485:75" pos:end="485:83">mb_stride</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="487:13" pos:end="487:32"><if pos:start="487:13" pos:end="487:32">if <condition pos:start="487:16" pos:end="487:24">(<expr pos:start="487:17" pos:end="487:23"><operator pos:start="487:17" pos:end="487:17">!</operator><name pos:start="487:18" pos:end="487:23">bottom</name></expr>)</condition><block type="pseudo" pos:start="487:26" pos:end="487:32"><block_content pos:start="487:26" pos:end="487:32"> <return pos:start="487:26" pos:end="487:32">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:95"><expr pos:start="489:13" pos:end="489:94"><name pos:start="489:13" pos:end="489:23">pair_dest_y</name>  <operator pos:start="489:26" pos:end="489:26">=</operator> <name pos:start="489:28" pos:end="489:53"><name pos:start="489:28" pos:end="489:28">s</name><operator pos:start="489:29" pos:end="489:30">-&gt;</operator><name pos:start="489:31" pos:end="489:45">current_picture</name><operator pos:start="489:46" pos:end="489:46">.</operator><name pos:start="489:47" pos:end="489:50">data</name><index pos:start="489:51" pos:end="489:53">[<expr pos:start="489:52" pos:end="489:52"><literal type="number" pos:start="489:52" pos:end="489:52">0</literal></expr>]</index></name> <operator pos:start="489:55" pos:end="489:55">+</operator> <operator pos:start="489:57" pos:end="489:57">(</operator><name pos:start="489:58" pos:end="489:61">mb_y</name> <operator pos:start="489:63" pos:end="489:63">*</operator> <literal type="number" pos:start="489:65" pos:end="489:66">16</literal><operator pos:start="489:67" pos:end="489:67">*</operator> <name pos:start="489:69" pos:end="489:79"><name pos:start="489:69" pos:end="489:69">s</name><operator pos:start="489:70" pos:end="489:71">-&gt;</operator><name pos:start="489:72" pos:end="489:79">linesize</name></name>  <operator pos:start="489:82" pos:end="489:82">)</operator> <operator pos:start="489:84" pos:end="489:84">+</operator> <name pos:start="489:86" pos:end="489:89">mb_x</name> <operator pos:start="489:91" pos:end="489:91">*</operator> <literal type="number" pos:start="489:93" pos:end="489:94">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:94"><expr pos:start="491:13" pos:end="491:93"><name pos:start="491:13" pos:end="491:24">pair_dest_cb</name> <operator pos:start="491:26" pos:end="491:26">=</operator> <name pos:start="491:28" pos:end="491:53"><name pos:start="491:28" pos:end="491:28">s</name><operator pos:start="491:29" pos:end="491:30">-&gt;</operator><name pos:start="491:31" pos:end="491:45">current_picture</name><operator pos:start="491:46" pos:end="491:46">.</operator><name pos:start="491:47" pos:end="491:50">data</name><index pos:start="491:51" pos:end="491:53">[<expr pos:start="491:52" pos:end="491:52"><literal type="number" pos:start="491:52" pos:end="491:52">1</literal></expr>]</index></name> <operator pos:start="491:55" pos:end="491:55">+</operator> <operator pos:start="491:57" pos:end="491:57">(</operator><name pos:start="491:58" pos:end="491:61">mb_y</name> <operator pos:start="491:63" pos:end="491:63">*</operator> <literal type="number" pos:start="491:65" pos:end="491:65">8</literal> <operator pos:start="491:67" pos:end="491:67">*</operator> <name pos:start="491:69" pos:end="491:81"><name pos:start="491:69" pos:end="491:69">s</name><operator pos:start="491:70" pos:end="491:71">-&gt;</operator><name pos:start="491:72" pos:end="491:81">uvlinesize</name></name><operator pos:start="491:82" pos:end="491:82">)</operator> <operator pos:start="491:84" pos:end="491:84">+</operator> <name pos:start="491:86" pos:end="491:89">mb_x</name> <operator pos:start="491:91" pos:end="491:91">*</operator> <literal type="number" pos:start="491:93" pos:end="491:93">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:94"><expr pos:start="493:13" pos:end="493:93"><name pos:start="493:13" pos:end="493:24">pair_dest_cr</name> <operator pos:start="493:26" pos:end="493:26">=</operator> <name pos:start="493:28" pos:end="493:53"><name pos:start="493:28" pos:end="493:28">s</name><operator pos:start="493:29" pos:end="493:30">-&gt;</operator><name pos:start="493:31" pos:end="493:45">current_picture</name><operator pos:start="493:46" pos:end="493:46">.</operator><name pos:start="493:47" pos:end="493:50">data</name><index pos:start="493:51" pos:end="493:53">[<expr pos:start="493:52" pos:end="493:52"><literal type="number" pos:start="493:52" pos:end="493:52">2</literal></expr>]</index></name> <operator pos:start="493:55" pos:end="493:55">+</operator> <operator pos:start="493:57" pos:end="493:57">(</operator><name pos:start="493:58" pos:end="493:61">mb_y</name> <operator pos:start="493:63" pos:end="493:63">*</operator> <literal type="number" pos:start="493:65" pos:end="493:65">8</literal> <operator pos:start="493:67" pos:end="493:67">*</operator> <name pos:start="493:69" pos:end="493:81"><name pos:start="493:69" pos:end="493:69">s</name><operator pos:start="493:70" pos:end="493:71">-&gt;</operator><name pos:start="493:72" pos:end="493:81">uvlinesize</name></name><operator pos:start="493:82" pos:end="493:82">)</operator> <operator pos:start="493:84" pos:end="493:84">+</operator> <name pos:start="493:86" pos:end="493:89">mb_x</name> <operator pos:start="493:91" pos:end="493:91">*</operator> <literal type="number" pos:start="493:93" pos:end="493:93">8</literal></expr>;</expr_stmt>



            <if_stmt pos:start="497:13" pos:end="499:108"><if pos:start="497:13" pos:end="499:108">if<condition pos:start="497:15" pos:end="497:54">(<expr pos:start="497:16" pos:end="497:53"><call pos:start="497:16" pos:end="497:53"><name pos:start="497:16" pos:end="497:23">IS_INTRA</name><argument_list pos:start="497:24" pos:end="497:53">(<argument pos:start="497:25" pos:end="497:52"><expr pos:start="497:25" pos:end="497:52"><name pos:start="497:25" pos:end="497:35">mb_type_top</name> <operator pos:start="497:37" pos:end="497:37">|</operator> <name pos:start="497:39" pos:end="497:52">mb_type_bottom</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="499:17" pos:end="499:108"><block_content pos:start="499:17" pos:end="499:108">

                <expr_stmt pos:start="499:17" pos:end="499:108"><expr pos:start="499:17" pos:end="499:107"><call pos:start="499:17" pos:end="499:107"><name pos:start="499:17" pos:end="499:32">xchg_pair_border</name><argument_list pos:start="499:33" pos:end="499:107">(<argument pos:start="499:34" pos:end="499:34"><expr pos:start="499:34" pos:end="499:34"><name pos:start="499:34" pos:end="499:34">h</name></expr></argument>, <argument pos:start="499:37" pos:end="499:47"><expr pos:start="499:37" pos:end="499:47"><name pos:start="499:37" pos:end="499:47">pair_dest_y</name></expr></argument>, <argument pos:start="499:50" pos:end="499:61"><expr pos:start="499:50" pos:end="499:61"><name pos:start="499:50" pos:end="499:61">pair_dest_cb</name></expr></argument>, <argument pos:start="499:64" pos:end="499:75"><expr pos:start="499:64" pos:end="499:75"><name pos:start="499:64" pos:end="499:75">pair_dest_cr</name></expr></argument>, <argument pos:start="499:78" pos:end="499:88"><expr pos:start="499:78" pos:end="499:88"><name pos:start="499:78" pos:end="499:88"><name pos:start="499:78" pos:end="499:78">s</name><operator pos:start="499:79" pos:end="499:80">-&gt;</operator><name pos:start="499:81" pos:end="499:88">linesize</name></name></expr></argument>, <argument pos:start="499:91" pos:end="499:103"><expr pos:start="499:91" pos:end="499:103"><name pos:start="499:91" pos:end="499:103"><name pos:start="499:91" pos:end="499:91">s</name><operator pos:start="499:92" pos:end="499:93">-&gt;</operator><name pos:start="499:94" pos:end="499:103">uvlinesize</name></name></expr></argument>, <argument pos:start="499:106" pos:end="499:106"><expr pos:start="499:106" pos:end="499:106"><literal type="number" pos:start="499:106" pos:end="499:106">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="503:13" pos:end="503:103"><expr pos:start="503:13" pos:end="503:102"><call pos:start="503:13" pos:end="503:102"><name pos:start="503:13" pos:end="503:30">backup_pair_border</name><argument_list pos:start="503:31" pos:end="503:102">(<argument pos:start="503:32" pos:end="503:32"><expr pos:start="503:32" pos:end="503:32"><name pos:start="503:32" pos:end="503:32">h</name></expr></argument>, <argument pos:start="503:35" pos:end="503:45"><expr pos:start="503:35" pos:end="503:45"><name pos:start="503:35" pos:end="503:45">pair_dest_y</name></expr></argument>, <argument pos:start="503:48" pos:end="503:59"><expr pos:start="503:48" pos:end="503:59"><name pos:start="503:48" pos:end="503:59">pair_dest_cb</name></expr></argument>, <argument pos:start="503:62" pos:end="503:73"><expr pos:start="503:62" pos:end="503:73"><name pos:start="503:62" pos:end="503:73">pair_dest_cr</name></expr></argument>, <argument pos:start="503:76" pos:end="503:86"><expr pos:start="503:76" pos:end="503:86"><name pos:start="503:76" pos:end="503:86"><name pos:start="503:76" pos:end="503:76">s</name><operator pos:start="503:77" pos:end="503:78">-&gt;</operator><name pos:start="503:79" pos:end="503:86">linesize</name></name></expr></argument>, <argument pos:start="503:89" pos:end="503:101"><expr pos:start="503:89" pos:end="503:101"><name pos:start="503:89" pos:end="503:101"><name pos:start="503:89" pos:end="503:89">s</name><operator pos:start="503:90" pos:end="503:91">-&gt;</operator><name pos:start="503:92" pos:end="503:101">uvlinesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="505:13" pos:end="505:29">// deblock a pair</comment>

            <comment type="line" pos:start="507:13" pos:end="507:18">// top</comment>

            <expr_stmt pos:start="509:13" pos:end="509:22"><expr pos:start="509:13" pos:end="509:21"><name pos:start="509:13" pos:end="509:19"><name pos:start="509:13" pos:end="509:13">s</name><operator pos:start="509:14" pos:end="509:15">-&gt;</operator><name pos:start="509:16" pos:end="509:19">mb_y</name></name><operator pos:start="509:20" pos:end="509:21">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="511:13" pos:end="511:137"><expr pos:start="511:13" pos:end="511:136"><call pos:start="511:13" pos:end="511:136"><name pos:start="511:13" pos:end="511:19">tprintf</name><argument_list pos:start="511:20" pos:end="511:136">(<argument pos:start="511:21" pos:end="511:30"><expr pos:start="511:21" pos:end="511:30"><name pos:start="511:21" pos:end="511:30"><name pos:start="511:21" pos:end="511:21">h</name><operator pos:start="511:22" pos:end="511:23">-&gt;</operator><name pos:start="511:24" pos:end="511:24">s</name><operator pos:start="511:25" pos:end="511:25">.</operator><name pos:start="511:26" pos:end="511:30">avctx</name></name></expr></argument>, <argument pos:start="511:33" pos:end="511:102"><expr pos:start="511:33" pos:end="511:102"><literal type="string" pos:start="511:33" pos:end="511:102">"call mbaff filter_mb mb_x:%d mb_y:%d pair_dest_y = %p, dest_y = %p\n"</literal></expr></argument>, <argument pos:start="511:105" pos:end="511:108"><expr pos:start="511:105" pos:end="511:108"><name pos:start="511:105" pos:end="511:108">mb_x</name></expr></argument>, <argument pos:start="511:111" pos:end="511:114"><expr pos:start="511:111" pos:end="511:114"><name pos:start="511:111" pos:end="511:114">mb_y</name></expr></argument>, <argument pos:start="511:117" pos:end="511:127"><expr pos:start="511:117" pos:end="511:127"><name pos:start="511:117" pos:end="511:127">pair_dest_y</name></expr></argument>, <argument pos:start="511:130" pos:end="511:135"><expr pos:start="511:130" pos:end="511:135"><name pos:start="511:130" pos:end="511:135">dest_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="513:13" pos:end="513:43"><expr pos:start="513:13" pos:end="513:42"><call pos:start="513:13" pos:end="513:42"><name pos:start="513:13" pos:end="513:23">fill_caches</name><argument_list pos:start="513:24" pos:end="513:42">(<argument pos:start="513:25" pos:end="513:25"><expr pos:start="513:25" pos:end="513:25"><name pos:start="513:25" pos:end="513:25">h</name></expr></argument>, <argument pos:start="513:28" pos:end="513:38"><expr pos:start="513:28" pos:end="513:38"><name pos:start="513:28" pos:end="513:38">mb_type_top</name></expr></argument>, <argument pos:start="513:41" pos:end="513:41"><expr pos:start="513:41" pos:end="513:41"><literal type="number" pos:start="513:41" pos:end="513:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="513:45" pos:end="513:98">//FIXME don't fill stuff which isn't used by filter_mb</comment>

            <expr_stmt pos:start="515:13" pos:end="515:84"><expr pos:start="515:13" pos:end="515:83"><name pos:start="515:13" pos:end="515:24"><name pos:start="515:13" pos:end="515:13">h</name><operator pos:start="515:14" pos:end="515:15">-&gt;</operator><name pos:start="515:16" pos:end="515:24">chroma_qp</name></name> <operator pos:start="515:26" pos:end="515:26">=</operator> <call pos:start="515:28" pos:end="515:83"><name pos:start="515:28" pos:end="515:40">get_chroma_qp</name><argument_list pos:start="515:41" pos:end="515:83">(<argument pos:start="515:42" pos:end="515:42"><expr pos:start="515:42" pos:end="515:42"><name pos:start="515:42" pos:end="515:42">h</name></expr></argument>, <argument pos:start="515:45" pos:end="515:82"><expr pos:start="515:45" pos:end="515:82"><name pos:start="515:45" pos:end="515:82"><name pos:start="515:45" pos:end="515:45">s</name><operator pos:start="515:46" pos:end="515:47">-&gt;</operator><name pos:start="515:48" pos:end="515:62">current_picture</name><operator pos:start="515:63" pos:end="515:63">.</operator><name pos:start="515:64" pos:end="515:75">qscale_table</name><index pos:start="515:76" pos:end="515:82">[<expr pos:start="515:77" pos:end="515:81"><name pos:start="515:77" pos:end="515:81">mb_xy</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="517:13" pos:end="517:100"><expr pos:start="517:13" pos:end="517:99"><call pos:start="517:13" pos:end="517:99"><name pos:start="517:13" pos:end="517:21">filter_mb</name><argument_list pos:start="517:22" pos:end="517:99">(<argument pos:start="517:23" pos:end="517:23"><expr pos:start="517:23" pos:end="517:23"><name pos:start="517:23" pos:end="517:23">h</name></expr></argument>, <argument pos:start="517:26" pos:end="517:29"><expr pos:start="517:26" pos:end="517:29"><name pos:start="517:26" pos:end="517:29">mb_x</name></expr></argument>, <argument pos:start="517:32" pos:end="517:35"><expr pos:start="517:32" pos:end="517:35"><name pos:start="517:32" pos:end="517:35">mb_y</name></expr></argument>, <argument pos:start="517:38" pos:end="517:48"><expr pos:start="517:38" pos:end="517:48"><name pos:start="517:38" pos:end="517:48">pair_dest_y</name></expr></argument>, <argument pos:start="517:51" pos:end="517:62"><expr pos:start="517:51" pos:end="517:62"><name pos:start="517:51" pos:end="517:62">pair_dest_cb</name></expr></argument>, <argument pos:start="517:65" pos:end="517:76"><expr pos:start="517:65" pos:end="517:76"><name pos:start="517:65" pos:end="517:76">pair_dest_cr</name></expr></argument>, <argument pos:start="517:79" pos:end="517:86"><expr pos:start="517:79" pos:end="517:86"><name pos:start="517:79" pos:end="517:86">linesize</name></expr></argument>, <argument pos:start="517:89" pos:end="517:98"><expr pos:start="517:89" pos:end="517:98"><name pos:start="517:89" pos:end="517:98">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="519:13" pos:end="519:21">// bottom</comment>

            <expr_stmt pos:start="521:13" pos:end="521:22"><expr pos:start="521:13" pos:end="521:21"><name pos:start="521:13" pos:end="521:19"><name pos:start="521:13" pos:end="521:13">s</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:19">mb_y</name></name><operator pos:start="521:20" pos:end="521:21">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:58"><expr pos:start="523:13" pos:end="523:57"><call pos:start="523:13" pos:end="523:57"><name pos:start="523:13" pos:end="523:19">tprintf</name><argument_list pos:start="523:20" pos:end="523:57">(<argument pos:start="523:21" pos:end="523:30"><expr pos:start="523:21" pos:end="523:30"><name pos:start="523:21" pos:end="523:30"><name pos:start="523:21" pos:end="523:21">h</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:24">s</name><operator pos:start="523:25" pos:end="523:25">.</operator><name pos:start="523:26" pos:end="523:30">avctx</name></name></expr></argument>, <argument pos:start="523:33" pos:end="523:56"><expr pos:start="523:33" pos:end="523:56"><literal type="string" pos:start="523:33" pos:end="523:56">"call mbaff filter_mb\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:46"><expr pos:start="525:13" pos:end="525:45"><call pos:start="525:13" pos:end="525:45"><name pos:start="525:13" pos:end="525:23">fill_caches</name><argument_list pos:start="525:24" pos:end="525:45">(<argument pos:start="525:25" pos:end="525:25"><expr pos:start="525:25" pos:end="525:25"><name pos:start="525:25" pos:end="525:25">h</name></expr></argument>, <argument pos:start="525:28" pos:end="525:41"><expr pos:start="525:28" pos:end="525:41"><name pos:start="525:28" pos:end="525:41">mb_type_bottom</name></expr></argument>, <argument pos:start="525:44" pos:end="525:44"><expr pos:start="525:44" pos:end="525:44"><literal type="number" pos:start="525:44" pos:end="525:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="525:48" pos:end="525:101">//FIXME don't fill stuff which isn't used by filter_mb</comment>

            <expr_stmt pos:start="527:13" pos:end="527:97"><expr pos:start="527:13" pos:end="527:96"><name pos:start="527:13" pos:end="527:24"><name pos:start="527:13" pos:end="527:13">h</name><operator pos:start="527:14" pos:end="527:15">-&gt;</operator><name pos:start="527:16" pos:end="527:24">chroma_qp</name></name> <operator pos:start="527:26" pos:end="527:26">=</operator> <call pos:start="527:28" pos:end="527:96"><name pos:start="527:28" pos:end="527:40">get_chroma_qp</name><argument_list pos:start="527:41" pos:end="527:96">(<argument pos:start="527:42" pos:end="527:42"><expr pos:start="527:42" pos:end="527:42"><name pos:start="527:42" pos:end="527:42">h</name></expr></argument>, <argument pos:start="527:45" pos:end="527:95"><expr pos:start="527:45" pos:end="527:95"><name pos:start="527:45" pos:end="527:95"><name pos:start="527:45" pos:end="527:45">s</name><operator pos:start="527:46" pos:end="527:47">-&gt;</operator><name pos:start="527:48" pos:end="527:62">current_picture</name><operator pos:start="527:63" pos:end="527:63">.</operator><name pos:start="527:64" pos:end="527:75">qscale_table</name><index pos:start="527:76" pos:end="527:95">[<expr pos:start="527:77" pos:end="527:94"><name pos:start="527:77" pos:end="527:81">mb_xy</name><operator pos:start="527:82" pos:end="527:82">+</operator><name pos:start="527:83" pos:end="527:94"><name pos:start="527:83" pos:end="527:83">s</name><operator pos:start="527:84" pos:end="527:85">-&gt;</operator><name pos:start="527:86" pos:end="527:94">mb_stride</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:87"><expr pos:start="529:13" pos:end="529:86"><call pos:start="529:13" pos:end="529:86"><name pos:start="529:13" pos:end="529:21">filter_mb</name><argument_list pos:start="529:22" pos:end="529:86">(<argument pos:start="529:23" pos:end="529:23"><expr pos:start="529:23" pos:end="529:23"><name pos:start="529:23" pos:end="529:23">h</name></expr></argument>, <argument pos:start="529:26" pos:end="529:29"><expr pos:start="529:26" pos:end="529:29"><name pos:start="529:26" pos:end="529:29">mb_x</name></expr></argument>, <argument pos:start="529:32" pos:end="529:37"><expr pos:start="529:32" pos:end="529:37"><name pos:start="529:32" pos:end="529:35">mb_y</name><operator pos:start="529:36" pos:end="529:36">+</operator><literal type="number" pos:start="529:37" pos:end="529:37">1</literal></expr></argument>, <argument pos:start="529:40" pos:end="529:45"><expr pos:start="529:40" pos:end="529:45"><name pos:start="529:40" pos:end="529:45">dest_y</name></expr></argument>, <argument pos:start="529:48" pos:end="529:54"><expr pos:start="529:48" pos:end="529:54"><name pos:start="529:48" pos:end="529:54">dest_cb</name></expr></argument>, <argument pos:start="529:57" pos:end="529:63"><expr pos:start="529:57" pos:end="529:63"><name pos:start="529:57" pos:end="529:63">dest_cr</name></expr></argument>, <argument pos:start="529:66" pos:end="529:73"><expr pos:start="529:66" pos:end="529:73"><name pos:start="529:66" pos:end="529:73">linesize</name></expr></argument>, <argument pos:start="529:76" pos:end="529:85"><expr pos:start="529:76" pos:end="529:85"><name pos:start="529:76" pos:end="529:85">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="531:11" pos:end="541:9">else <block pos:start="531:16" pos:end="541:9">{<block_content pos:start="533:13" pos:end="539:90">

            <expr_stmt pos:start="533:13" pos:end="533:52"><expr pos:start="533:13" pos:end="533:51"><call pos:start="533:13" pos:end="533:51"><name pos:start="533:13" pos:end="533:19">tprintf</name><argument_list pos:start="533:20" pos:end="533:51">(<argument pos:start="533:21" pos:end="533:30"><expr pos:start="533:21" pos:end="533:30"><name pos:start="533:21" pos:end="533:30"><name pos:start="533:21" pos:end="533:21">h</name><operator pos:start="533:22" pos:end="533:23">-&gt;</operator><name pos:start="533:24" pos:end="533:24">s</name><operator pos:start="533:25" pos:end="533:25">.</operator><name pos:start="533:26" pos:end="533:30">avctx</name></name></expr></argument>, <argument pos:start="533:33" pos:end="533:50"><expr pos:start="533:33" pos:end="533:50"><literal type="string" pos:start="533:33" pos:end="533:50">"call filter_mb\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="535:13" pos:end="535:88"><expr pos:start="535:13" pos:end="535:87"><call pos:start="535:13" pos:end="535:87"><name pos:start="535:13" pos:end="535:28">backup_mb_border</name><argument_list pos:start="535:29" pos:end="535:87">(<argument pos:start="535:30" pos:end="535:30"><expr pos:start="535:30" pos:end="535:30"><name pos:start="535:30" pos:end="535:30">h</name></expr></argument>, <argument pos:start="535:33" pos:end="535:38"><expr pos:start="535:33" pos:end="535:38"><name pos:start="535:33" pos:end="535:38">dest_y</name></expr></argument>, <argument pos:start="535:41" pos:end="535:47"><expr pos:start="535:41" pos:end="535:47"><name pos:start="535:41" pos:end="535:47">dest_cb</name></expr></argument>, <argument pos:start="535:50" pos:end="535:56"><expr pos:start="535:50" pos:end="535:56"><name pos:start="535:50" pos:end="535:56">dest_cr</name></expr></argument>, <argument pos:start="535:59" pos:end="535:66"><expr pos:start="535:59" pos:end="535:66"><name pos:start="535:59" pos:end="535:66">linesize</name></expr></argument>, <argument pos:start="535:69" pos:end="535:78"><expr pos:start="535:69" pos:end="535:78"><name pos:start="535:69" pos:end="535:78">uvlinesize</name></expr></argument>, <argument pos:start="535:81" pos:end="535:86"><expr pos:start="535:81" pos:end="535:86"><name pos:start="535:81" pos:end="535:86">simple</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="537:13" pos:end="537:39"><expr pos:start="537:13" pos:end="537:38"><call pos:start="537:13" pos:end="537:38"><name pos:start="537:13" pos:end="537:23">fill_caches</name><argument_list pos:start="537:24" pos:end="537:38">(<argument pos:start="537:25" pos:end="537:25"><expr pos:start="537:25" pos:end="537:25"><name pos:start="537:25" pos:end="537:25">h</name></expr></argument>, <argument pos:start="537:28" pos:end="537:34"><expr pos:start="537:28" pos:end="537:34"><name pos:start="537:28" pos:end="537:34">mb_type</name></expr></argument>, <argument pos:start="537:37" pos:end="537:37"><expr pos:start="537:37" pos:end="537:37"><literal type="number" pos:start="537:37" pos:end="537:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="537:41" pos:end="537:94">//FIXME don't fill stuff which isn't used by filter_mb</comment>

            <expr_stmt pos:start="539:13" pos:end="539:90"><expr pos:start="539:13" pos:end="539:89"><call pos:start="539:13" pos:end="539:89"><name pos:start="539:13" pos:end="539:26">filter_mb_fast</name><argument_list pos:start="539:27" pos:end="539:89">(<argument pos:start="539:28" pos:end="539:28"><expr pos:start="539:28" pos:end="539:28"><name pos:start="539:28" pos:end="539:28">h</name></expr></argument>, <argument pos:start="539:31" pos:end="539:34"><expr pos:start="539:31" pos:end="539:34"><name pos:start="539:31" pos:end="539:34">mb_x</name></expr></argument>, <argument pos:start="539:37" pos:end="539:40"><expr pos:start="539:37" pos:end="539:40"><name pos:start="539:37" pos:end="539:40">mb_y</name></expr></argument>, <argument pos:start="539:43" pos:end="539:48"><expr pos:start="539:43" pos:end="539:48"><name pos:start="539:43" pos:end="539:48">dest_y</name></expr></argument>, <argument pos:start="539:51" pos:end="539:57"><expr pos:start="539:51" pos:end="539:57"><name pos:start="539:51" pos:end="539:57">dest_cb</name></expr></argument>, <argument pos:start="539:60" pos:end="539:66"><expr pos:start="539:60" pos:end="539:66"><name pos:start="539:60" pos:end="539:66">dest_cr</name></expr></argument>, <argument pos:start="539:69" pos:end="539:76"><expr pos:start="539:69" pos:end="539:76"><name pos:start="539:69" pos:end="539:76">linesize</name></expr></argument>, <argument pos:start="539:79" pos:end="539:88"><expr pos:start="539:79" pos:end="539:88"><name pos:start="539:79" pos:end="539:88">uvlinesize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
