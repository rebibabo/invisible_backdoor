<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24389.c" pos:tabs="8"><function pos:start="1:1" pos:end="74:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">qcrypto_cipher_init_aes</name><parameter_list pos:start="1:35" pos:end="5:48">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><name pos:start="1:36" pos:end="1:48">QCryptoCipher</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">cipher</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:53"><decl pos:start="3:36" pos:end="3:53"><type pos:start="3:36" pos:end="3:53"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">uint8_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">key</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:66"><decl pos:start="3:56" pos:end="3:66"><type pos:start="3:56" pos:end="3:66"><name pos:start="3:56" pos:end="3:61">size_t</name></type> <name pos:start="3:63" pos:end="3:66">nkey</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:40">Error</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier><modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:47">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="74:1">{<block_content pos:start="9:5" pos:end="72:14">

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">QCryptoCipherBuiltin</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:30">ctxt</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="15:48">(<expr pos:start="13:9" pos:end="15:47"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:14">cipher</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:20">mode</name></name> <operator pos:start="13:22" pos:end="13:23">!=</operator> <name pos:start="13:25" pos:end="13:47">QCRYPTO_CIPHER_MODE_CBC</name> <operator pos:start="13:49" pos:end="13:50">&amp;&amp;</operator>

        <name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:14">cipher</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">mode</name></name> <operator pos:start="15:22" pos:end="15:23">!=</operator> <name pos:start="15:25" pos:end="15:47">QCRYPTO_CIPHER_MODE_ECB</name></expr>)</condition> <block pos:start="15:50" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:18">

        <expr_stmt pos:start="17:9" pos:end="17:69"><expr pos:start="17:9" pos:end="17:68"><call pos:start="17:9" pos:end="17:68"><name pos:start="17:9" pos:end="17:18">error_setg</name><argument_list pos:start="17:19" pos:end="17:68">(<argument pos:start="17:20" pos:end="17:23"><expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">errp</name></expr></argument>, <argument pos:start="17:26" pos:end="17:53"><expr pos:start="17:26" pos:end="17:53"><literal type="string" pos:start="17:26" pos:end="17:53">"Unsupported cipher mode %d"</literal></expr></argument>, <argument pos:start="17:56" pos:end="17:67"><expr pos:start="17:56" pos:end="17:67"><name pos:start="17:56" pos:end="17:67"><name pos:start="17:56" pos:end="17:61">cipher</name><operator pos:start="17:62" pos:end="17:63">-&gt;</operator><name pos:start="17:64" pos:end="17:67">mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:43"><expr pos:start="25:5" pos:end="25:42"><name pos:start="25:5" pos:end="25:8">ctxt</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:42"><name pos:start="25:12" pos:end="25:17">g_new0</name><argument_list pos:start="25:18" pos:end="25:42">(<argument pos:start="25:19" pos:end="25:38"><expr pos:start="25:19" pos:end="25:38"><name pos:start="25:19" pos:end="25:38">QCryptoCipherBuiltin</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:78">(<expr pos:start="29:9" pos:end="29:77"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:27">AES_set_encrypt_key</name><argument_list pos:start="29:28" pos:end="29:72">(<argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">key</name></expr></argument>, <argument pos:start="29:34" pos:end="29:41"><expr pos:start="29:34" pos:end="29:41"><name pos:start="29:34" pos:end="29:37">nkey</name> <operator pos:start="29:39" pos:end="29:39">*</operator> <literal type="number" pos:start="29:41" pos:end="29:41">8</literal></expr></argument>, <argument pos:start="29:44" pos:end="29:71"><expr pos:start="29:44" pos:end="29:71"><operator pos:start="29:44" pos:end="29:44">&amp;</operator><name pos:start="29:45" pos:end="29:71"><name pos:start="29:45" pos:end="29:48">ctxt</name><operator pos:start="29:49" pos:end="29:50">-&gt;</operator><name pos:start="29:51" pos:end="29:55">state</name><operator pos:start="29:56" pos:end="29:56">.</operator><name pos:start="29:57" pos:end="29:59">aes</name><operator pos:start="29:60" pos:end="29:60">.</operator><name pos:start="29:61" pos:end="29:71">encrypt_key</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:74" pos:end="29:75">!=</operator> <literal type="number" pos:start="29:77" pos:end="29:77">0</literal></expr>)</condition> <block pos:start="29:80" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><call pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="31:56">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:55"><expr pos:start="31:26" pos:end="31:55"><literal type="string" pos:start="31:26" pos:end="31:55">"Failed to set encryption key"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:19">goto <name pos:start="33:14" pos:end="33:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:78">(<expr pos:start="39:9" pos:end="39:77"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:27">AES_set_decrypt_key</name><argument_list pos:start="39:28" pos:end="39:72">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">key</name></expr></argument>, <argument pos:start="39:34" pos:end="39:41"><expr pos:start="39:34" pos:end="39:41"><name pos:start="39:34" pos:end="39:37">nkey</name> <operator pos:start="39:39" pos:end="39:39">*</operator> <literal type="number" pos:start="39:41" pos:end="39:41">8</literal></expr></argument>, <argument pos:start="39:44" pos:end="39:71"><expr pos:start="39:44" pos:end="39:71"><operator pos:start="39:44" pos:end="39:44">&amp;</operator><name pos:start="39:45" pos:end="39:71"><name pos:start="39:45" pos:end="39:48">ctxt</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:55">state</name><operator pos:start="39:56" pos:end="39:56">.</operator><name pos:start="39:57" pos:end="39:59">aes</name><operator pos:start="39:60" pos:end="39:60">.</operator><name pos:start="39:61" pos:end="39:71">decrypt_key</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:74" pos:end="39:75">!=</operator> <literal type="number" pos:start="39:77" pos:end="39:77">0</literal></expr>)</condition> <block pos:start="39:80" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:19">

        <expr_stmt pos:start="41:9" pos:end="41:57"><expr pos:start="41:9" pos:end="41:56"><call pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:18">error_setg</name><argument_list pos:start="41:19" pos:end="41:56">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">errp</name></expr></argument>, <argument pos:start="41:26" pos:end="41:55"><expr pos:start="41:26" pos:end="41:55"><literal type="string" pos:start="41:26" pos:end="41:55">"Failed to set decryption key"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:19">goto <name pos:start="43:14" pos:end="43:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>




    <expr_stmt pos:start="50:5" pos:end="50:41"><expr pos:start="50:5" pos:end="50:40"><name pos:start="50:5" pos:end="50:14"><name pos:start="50:5" pos:end="50:8">ctxt</name><operator pos:start="50:9" pos:end="50:10">-&gt;</operator><name pos:start="50:11" pos:end="50:14">free</name></name> <operator pos:start="50:16" pos:end="50:16">=</operator> <name pos:start="50:18" pos:end="50:40">qcrypto_cipher_free_aes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:43"><expr pos:start="52:5" pos:end="52:42"><name pos:start="52:5" pos:end="52:15"><name pos:start="52:5" pos:end="52:8">ctxt</name><operator pos:start="52:9" pos:end="52:10">-&gt;</operator><name pos:start="52:11" pos:end="52:15">setiv</name></name> <operator pos:start="52:17" pos:end="52:17">=</operator> <name pos:start="52:19" pos:end="52:42">qcrypto_cipher_setiv_aes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:47"><expr pos:start="54:5" pos:end="54:46"><name pos:start="54:5" pos:end="54:17"><name pos:start="54:5" pos:end="54:8">ctxt</name><operator pos:start="54:9" pos:end="54:10">-&gt;</operator><name pos:start="54:11" pos:end="54:17">encrypt</name></name> <operator pos:start="54:19" pos:end="54:19">=</operator> <name pos:start="54:21" pos:end="54:46">qcrypto_cipher_encrypt_aes</name></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:47"><expr pos:start="56:5" pos:end="56:46"><name pos:start="56:5" pos:end="56:17"><name pos:start="56:5" pos:end="56:8">ctxt</name><operator pos:start="56:9" pos:end="56:10">-&gt;</operator><name pos:start="56:11" pos:end="56:17">decrypt</name></name> <operator pos:start="56:19" pos:end="56:19">=</operator> <name pos:start="56:21" pos:end="56:46">qcrypto_cipher_decrypt_aes</name></expr>;</expr_stmt>



    <expr_stmt pos:start="60:5" pos:end="60:26"><expr pos:start="60:5" pos:end="60:25"><name pos:start="60:5" pos:end="60:18"><name pos:start="60:5" pos:end="60:10">cipher</name><operator pos:start="60:11" pos:end="60:12">-&gt;</operator><name pos:start="60:13" pos:end="60:18">opaque</name></name> <operator pos:start="60:20" pos:end="60:20">=</operator> <name pos:start="60:22" pos:end="60:25">ctxt</name></expr>;</expr_stmt>



    <return pos:start="64:5" pos:end="64:13">return <expr pos:start="64:12" pos:end="64:12"><literal type="number" pos:start="64:12" pos:end="64:12">0</literal></expr>;</return>



 <label pos:start="68:2" pos:end="68:7"><name pos:start="68:2" pos:end="68:6">error</name>:</label>

    <expr_stmt pos:start="70:5" pos:end="70:17"><expr pos:start="70:5" pos:end="70:16"><call pos:start="70:5" pos:end="70:16"><name pos:start="70:5" pos:end="70:10">g_free</name><argument_list pos:start="70:11" pos:end="70:16">(<argument pos:start="70:12" pos:end="70:15"><expr pos:start="70:12" pos:end="70:15"><name pos:start="70:12" pos:end="70:15">ctxt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="72:5" pos:end="72:14">return <expr pos:start="72:12" pos:end="72:13"><operator pos:start="72:12" pos:end="72:12">-</operator><literal type="number" pos:start="72:13" pos:end="72:13">1</literal></expr>;</return>

</block_content>}</block></function></unit>
