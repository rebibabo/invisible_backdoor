<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19452.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">ssize_t</name></type> <name pos:start="1:9" pos:end="1:27">vnc_client_io_error</name><parameter_list pos:start="1:28" pos:end="1:68">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">VncState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">vs</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:53"><decl pos:start="1:43" pos:end="1:53"><type pos:start="1:43" pos:end="1:53"><name pos:start="1:43" pos:end="1:49">ssize_t</name></type> <name pos:start="1:51" pos:end="1:53">ret</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:60">Error</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier><modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:15">

    <if_stmt pos:start="5:5" pos:end="33:5"><if pos:start="5:5" pos:end="33:5">if <condition pos:start="5:8" pos:end="5:17">(<expr pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:11">ret</name> <operator pos:start="5:13" pos:end="5:14">&lt;=</operator> <literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr>)</condition> <block pos:start="5:19" pos:end="33:5">{<block_content pos:start="7:9" pos:end="31:17">

        <if_stmt pos:start="7:9" pos:end="17:9"><if pos:start="7:9" pos:end="11:9">if <condition pos:start="7:12" pos:end="7:21">(<expr pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:15">ret</name> <operator pos:start="7:17" pos:end="7:18">==</operator> <literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr>)</condition> <block pos:start="7:23" pos:end="11:9">{<block_content pos:start="9:13" pos:end="9:57">

            <expr_stmt pos:start="9:13" pos:end="9:57"><expr pos:start="9:13" pos:end="9:56"><call pos:start="9:13" pos:end="9:56"><name pos:start="9:13" pos:end="9:21">VNC_DEBUG</name><argument_list pos:start="9:22" pos:end="9:56">(<argument pos:start="9:23" pos:end="9:55"><expr pos:start="9:23" pos:end="9:55"><literal type="string" pos:start="9:23" pos:end="9:55">"Closing down client sock: EOF\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="11:11" pos:end="17:9">else if <condition pos:start="11:19" pos:end="11:48">(<expr pos:start="11:20" pos:end="11:47"><name pos:start="11:20" pos:end="11:22">ret</name> <operator pos:start="11:24" pos:end="11:25">!=</operator> <name pos:start="11:27" pos:end="11:47">QIO_CHANNEL_ERR_BLOCK</name></expr>)</condition> <block pos:start="11:50" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:71">

            <expr_stmt pos:start="13:13" pos:end="15:71"><expr pos:start="13:13" pos:end="15:70"><call pos:start="13:13" pos:end="15:70"><name pos:start="13:13" pos:end="13:21">VNC_DEBUG</name><argument_list pos:start="13:22" pos:end="15:70">(<argument pos:start="13:23" pos:end="13:64"><expr pos:start="13:23" pos:end="13:64"><literal type="string" pos:start="13:23" pos:end="13:64">"Closing down client sock: ret %zd (%s)\n"</literal></expr></argument>,

                      <argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">ret</name></expr></argument>, <argument pos:start="15:28" pos:end="15:69"><expr pos:start="15:28" pos:end="15:69"><ternary pos:start="15:28" pos:end="15:69"><condition pos:start="15:28" pos:end="15:33"><expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">errp</name></expr> ?</condition><then pos:start="15:35" pos:end="15:57"> <expr pos:start="15:35" pos:end="15:57"><call pos:start="15:35" pos:end="15:57"><name pos:start="15:35" pos:end="15:50">error_get_pretty</name><argument_list pos:start="15:51" pos:end="15:57">(<argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><operator pos:start="15:52" pos:end="15:52">*</operator><name pos:start="15:53" pos:end="15:56">errp</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="15:59" pos:end="15:69">: <expr pos:start="15:61" pos:end="15:69"><literal type="string" pos:start="15:61" pos:end="15:69">"Unknown"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:28">vnc_disconnect_start</name><argument_list pos:start="21:29" pos:end="21:32">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:17">(<expr pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:16">errp</name></expr>)</condition> <block pos:start="23:19" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:25">

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><call pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:22">error_free</name><argument_list pos:start="25:23" pos:end="25:29">(<argument pos:start="25:24" pos:end="25:28"><expr pos:start="25:24" pos:end="25:28"><operator pos:start="25:24" pos:end="25:24">*</operator><name pos:start="25:25" pos:end="25:28">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:25"><expr pos:start="27:13" pos:end="27:24"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:17">errp</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:24">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="35:5" pos:end="35:15">return <expr pos:start="35:12" pos:end="35:14"><name pos:start="35:12" pos:end="35:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
