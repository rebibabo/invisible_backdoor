<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5779.c" pos:tabs="8"><function pos:start="1:1" pos:end="56:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">ppc_set_compat</name><parameter_list pos:start="1:20" pos:end="1:71">(<parameter pos:start="1:21" pos:end="1:35"><decl pos:start="1:21" pos:end="1:35"><type pos:start="1:21" pos:end="1:35"><name pos:start="1:21" pos:end="1:30">PowerPCCPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:56"><decl pos:start="1:38" pos:end="1:56"><type pos:start="1:38" pos:end="1:56"><name pos:start="1:38" pos:end="1:45">uint32_t</name></type> <name pos:start="1:47" pos:end="1:56">compat_pvr</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:63">Error</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="56:1">{<block_content pos:start="5:5" pos:end="54:5">

    <decl_stmt pos:start="5:5" pos:end="5:57"><decl pos:start="5:5" pos:end="5:56"><type pos:start="5:5" pos:end="5:22"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:20">CompatInfo</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">compat</name> <init pos:start="5:30" pos:end="5:56">= <expr pos:start="5:32" pos:end="5:56"><call pos:start="5:32" pos:end="5:56"><name pos:start="5:32" pos:end="5:44">compat_by_pvr</name><argument_list pos:start="5:45" pos:end="5:56">(<argument pos:start="5:46" pos:end="5:55"><expr pos:start="5:46" pos:end="5:55"><name pos:start="5:46" pos:end="5:55">compat_pvr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">PowerPCCPUClass</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">pcc</name> <init pos:start="9:26" pos:end="9:53">= <expr pos:start="9:28" pos:end="9:53"><call pos:start="9:28" pos:end="9:53"><name pos:start="9:28" pos:end="9:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="9:49" pos:end="9:53">(<argument pos:start="9:50" pos:end="9:52"><expr pos:start="9:50" pos:end="9:52"><name pos:start="9:50" pos:end="9:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:16">pcr</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="32:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19">compat_pvr</name></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:16">

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">pcr</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="28:5">else if <condition pos:start="19:15" pos:end="19:23">(<expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">!</operator><name pos:start="19:17" pos:end="19:22">compat</name></expr>)</condition> <block pos:start="19:25" pos:end="28:5">{<block_content pos:start="21:9" pos:end="21:78">

        <expr_stmt pos:start="21:9" pos:end="21:78"><expr pos:start="21:9" pos:end="21:77"><call pos:start="21:9" pos:end="21:77"><name pos:start="21:9" pos:end="21:18">error_setg</name><argument_list pos:start="21:19" pos:end="21:77">(<argument pos:start="21:20" pos:end="21:23"><expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">errp</name></expr></argument>, <argument pos:start="21:26" pos:end="21:64"><expr pos:start="21:26" pos:end="21:64"><literal type="string" pos:start="21:26" pos:end="21:58">"Unknown compatibility PVR 0x%08"</literal><name pos:start="21:59" pos:end="21:64">PRIx32</name></expr></argument>, <argument pos:start="21:67" pos:end="21:76"><expr pos:start="21:67" pos:end="21:76"><name pos:start="21:67" pos:end="21:76">compat_pvr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>






    </block_content>}</block></if> <else pos:start="28:7" pos:end="32:5">else <block pos:start="28:12" pos:end="32:5">{<block_content pos:start="30:9" pos:end="30:26">

        <expr_stmt pos:start="30:9" pos:end="30:26"><expr pos:start="30:9" pos:end="30:25"><name pos:start="30:9" pos:end="30:11">pcr</name> <operator pos:start="30:13" pos:end="30:13">=</operator> <name pos:start="30:15" pos:end="30:25"><name pos:start="30:15" pos:end="30:20">compat</name><operator pos:start="30:21" pos:end="30:22">-&gt;</operator><name pos:start="30:23" pos:end="30:25">pcr</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="36:5" pos:end="36:33"><expr pos:start="36:5" pos:end="36:32"><name pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:7">cpu</name><operator pos:start="36:8" pos:end="36:9">-&gt;</operator><name pos:start="36:10" pos:end="36:19">compat_pvr</name></name> <operator pos:start="36:21" pos:end="36:21">=</operator> <name pos:start="36:23" pos:end="36:32">compat_pvr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="38:5" pos:end="38:44"><expr pos:start="38:5" pos:end="38:43"><name pos:start="38:5" pos:end="38:21"><name pos:start="38:5" pos:end="38:7">env</name><operator pos:start="38:8" pos:end="38:9">-&gt;</operator><name pos:start="38:10" pos:end="38:12">spr</name><index pos:start="38:13" pos:end="38:21">[<expr pos:start="38:14" pos:end="38:20"><name pos:start="38:14" pos:end="38:20">SPR_PCR</name></expr>]</index></name> <operator pos:start="38:23" pos:end="38:23">=</operator> <name pos:start="38:25" pos:end="38:27">pcr</name> <operator pos:start="38:29" pos:end="38:29">&amp;</operator> <name pos:start="38:31" pos:end="38:43"><name pos:start="38:31" pos:end="38:33">pcc</name><operator pos:start="38:34" pos:end="38:35">-&gt;</operator><name pos:start="38:36" pos:end="38:43">pcr_mask</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="42:5" pos:end="54:5"><if pos:start="42:5" pos:end="54:5">if <condition pos:start="42:8" pos:end="42:22">(<expr pos:start="42:9" pos:end="42:21"><call pos:start="42:9" pos:end="42:21"><name pos:start="42:9" pos:end="42:19">kvm_enabled</name><argument_list pos:start="42:20" pos:end="42:21">()</argument_list></call></expr>)</condition> <block pos:start="42:24" pos:end="54:5">{<block_content pos:start="44:9" pos:end="52:9">

        <decl_stmt pos:start="44:9" pos:end="44:58"><decl pos:start="44:9" pos:end="44:57"><type pos:start="44:9" pos:end="44:11"><name pos:start="44:9" pos:end="44:11">int</name></type> <name pos:start="44:13" pos:end="44:15">ret</name> <init pos:start="44:17" pos:end="44:57">= <expr pos:start="44:19" pos:end="44:57"><call pos:start="44:19" pos:end="44:57"><name pos:start="44:19" pos:end="44:35">kvmppc_set_compat</name><argument_list pos:start="44:36" pos:end="44:57">(<argument pos:start="44:37" pos:end="44:39"><expr pos:start="44:37" pos:end="44:39"><name pos:start="44:37" pos:end="44:39">cpu</name></expr></argument>, <argument pos:start="44:42" pos:end="44:56"><expr pos:start="44:42" pos:end="44:56"><name pos:start="44:42" pos:end="44:56"><name pos:start="44:42" pos:end="44:44">cpu</name><operator pos:start="44:45" pos:end="44:46">-&gt;</operator><name pos:start="44:47" pos:end="44:56">compat_pvr</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="46:9" pos:end="52:9"><if pos:start="46:9" pos:end="52:9">if <condition pos:start="46:12" pos:end="46:20">(<expr pos:start="46:13" pos:end="46:19"><name pos:start="46:13" pos:end="46:15">ret</name> <operator pos:start="46:17" pos:end="46:17">&lt;</operator> <literal type="number" pos:start="46:19" pos:end="46:19">0</literal></expr>)</condition> <block pos:start="46:22" pos:end="52:9">{<block_content pos:start="48:13" pos:end="50:76">

            <expr_stmt pos:start="48:13" pos:end="50:76"><expr pos:start="48:13" pos:end="50:75"><call pos:start="48:13" pos:end="50:75"><name pos:start="48:13" pos:end="48:28">error_setg_errno</name><argument_list pos:start="48:29" pos:end="50:75">(<argument pos:start="48:30" pos:end="48:33"><expr pos:start="48:30" pos:end="48:33"><name pos:start="48:30" pos:end="48:33">errp</name></expr></argument>, <argument pos:start="48:36" pos:end="48:39"><expr pos:start="48:36" pos:end="48:39"><operator pos:start="48:36" pos:end="48:36">-</operator><name pos:start="48:37" pos:end="48:39">ret</name></expr></argument>,

                             <argument pos:start="50:30" pos:end="50:74"><expr pos:start="50:30" pos:end="50:74"><literal type="string" pos:start="50:30" pos:end="50:74">"Unable to set CPU compatibility mode in KVM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
