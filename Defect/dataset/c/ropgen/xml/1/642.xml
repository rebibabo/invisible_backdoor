<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/642.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:27"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">qemu_set_dfilter_ranges</name><parameter_list pos:start="1:29" pos:end="1:53">(<parameter pos:start="1:30" pos:end="1:52"><decl pos:start="1:30" pos:end="1:52"><type pos:start="1:30" pos:end="1:41"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:52">filter_spec</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="49:27">{<block_content pos:start="3:5" pos:end="49:27">
    <decl_stmt pos:start="3:5" pos:end="3:53"><decl pos:start="3:5" pos:end="3:52"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:9">gchar</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier><modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:18">ranges</name> <init pos:start="3:20" pos:end="3:52">= <expr pos:start="3:22" pos:end="3:52"><call pos:start="3:22" pos:end="3:52"><name pos:start="3:22" pos:end="3:31">g_strsplit</name><argument_list pos:start="3:32" pos:end="3:52">(<argument pos:start="3:33" pos:end="3:43"><expr pos:start="3:33" pos:end="3:43"><name pos:start="3:33" pos:end="3:43">filter_spec</name></expr></argument>, <argument pos:start="3:46" pos:end="3:48"><expr pos:start="3:46" pos:end="3:48"><literal type="string" pos:start="3:46" pos:end="3:48">","</literal></expr></argument>, <argument pos:start="3:51" pos:end="3:51"><expr pos:start="3:51" pos:end="3:51"><literal type="number" pos:start="3:51" pos:end="3:51">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="4:5" pos:end="49:27"><if pos:start="4:5" pos:end="49:27">if <condition pos:start="4:8" pos:end="4:15">(<expr pos:start="4:9" pos:end="4:14"><name pos:start="4:9" pos:end="4:14">ranges</name></expr>)</condition> <block pos:start="4:17" pos:end="49:27">{<block_content pos:start="5:9" pos:end="49:27">
        <decl_stmt pos:start="5:9" pos:end="5:30"><decl pos:start="5:9" pos:end="5:29"><type pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:13">gchar</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier><modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:20">next</name> <init pos:start="5:22" pos:end="5:29">= <expr pos:start="5:24" pos:end="5:29"><name pos:start="5:24" pos:end="5:29">ranges</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="6:9" pos:end="6:27"><decl pos:start="6:9" pos:end="6:26"><type pos:start="6:9" pos:end="6:15"><name pos:start="6:9" pos:end="6:13">gchar</name> <modifier pos:start="6:15" pos:end="6:15">*</modifier></type><name pos:start="6:16" pos:end="6:16">r</name> <init pos:start="6:18" pos:end="6:26">= <expr pos:start="6:20" pos:end="6:26"><operator pos:start="6:20" pos:end="6:20">*</operator><name pos:start="6:21" pos:end="6:24">next</name><operator pos:start="6:25" pos:end="6:26">++</operator></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="7:9" pos:end="8:80"><expr pos:start="7:9" pos:end="8:79"><name pos:start="7:9" pos:end="7:21">debug_regions</name> <operator pos:start="7:23" pos:end="7:23">=</operator> <call pos:start="7:25" pos:end="8:79"><name pos:start="7:25" pos:end="7:41">g_array_sized_new</name><argument_list pos:start="7:42" pos:end="8:79">(<argument pos:start="7:43" pos:end="7:47"><expr pos:start="7:43" pos:end="7:47"><name pos:start="7:43" pos:end="7:47">FALSE</name></expr></argument>, <argument pos:start="7:50" pos:end="7:54"><expr pos:start="7:50" pos:end="7:54"><name pos:start="7:50" pos:end="7:54">FALSE</name></expr></argument>,
                                          <argument pos:start="8:43" pos:end="8:55"><expr pos:start="8:43" pos:end="8:55"><sizeof pos:start="8:43" pos:end="8:55">sizeof<argument_list pos:start="8:49" pos:end="8:55">(<argument pos:start="8:50" pos:end="8:54"><expr pos:start="8:50" pos:end="8:54"><name pos:start="8:50" pos:end="8:54">Range</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="8:58" pos:end="8:78"><expr pos:start="8:58" pos:end="8:78"><call pos:start="8:58" pos:end="8:78"><name pos:start="8:58" pos:end="8:70">g_strv_length</name><argument_list pos:start="8:71" pos:end="8:78">(<argument pos:start="8:72" pos:end="8:77"><expr pos:start="8:72" pos:end="8:77"><name pos:start="8:72" pos:end="8:77">ranges</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <while pos:start="9:9" pos:end="49:27">while <condition pos:start="9:15" pos:end="9:17">(<expr pos:start="9:16" pos:end="9:16"><name pos:start="9:16" pos:end="9:16">r</name></expr>)</condition> <block pos:start="9:19" pos:end="49:27">{<block_content pos:start="10:13" pos:end="49:27">
            <decl_stmt pos:start="10:13" pos:end="10:44"><decl pos:start="10:13" pos:end="10:43"><type pos:start="10:13" pos:end="10:18"><name pos:start="10:13" pos:end="10:16">char</name> <modifier pos:start="10:18" pos:end="10:18">*</modifier></type><name pos:start="10:19" pos:end="10:26">range_op</name> <init pos:start="10:28" pos:end="10:43">= <expr pos:start="10:30" pos:end="10:43"><call pos:start="10:30" pos:end="10:43"><name pos:start="10:30" pos:end="10:35">strstr</name><argument_list pos:start="10:36" pos:end="10:43">(<argument pos:start="10:37" pos:end="10:37"><expr pos:start="10:37" pos:end="10:37"><name pos:start="10:37" pos:end="10:37">r</name></expr></argument>, <argument pos:start="10:40" pos:end="10:42"><expr pos:start="10:40" pos:end="10:42"><literal type="string" pos:start="10:40" pos:end="10:42">"-"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt pos:start="11:13" pos:end="11:54"><decl pos:start="11:13" pos:end="11:53"><type pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:16">char</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">r2</name> <init pos:start="11:22" pos:end="11:53">= <expr pos:start="11:24" pos:end="11:53"><ternary pos:start="11:24" pos:end="11:53"><condition pos:start="11:24" pos:end="11:33"><expr pos:start="11:24" pos:end="11:31"><name pos:start="11:24" pos:end="11:31">range_op</name></expr> ?</condition><then pos:start="11:35" pos:end="11:46"> <expr pos:start="11:35" pos:end="11:46"><name pos:start="11:35" pos:end="11:42">range_op</name> <operator pos:start="11:44" pos:end="11:44">+</operator> <literal type="number" pos:start="11:46" pos:end="11:46">1</literal></expr> </then><else pos:start="11:48" pos:end="11:53">: <expr pos:start="11:50" pos:end="11:53"><name pos:start="11:50" pos:end="11:53">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="12:13" pos:end="49:27"><if pos:start="12:13" pos:end="49:27">if <condition pos:start="12:16" pos:end="12:26">(<expr pos:start="12:17" pos:end="12:25"><operator pos:start="12:17" pos:end="12:17">!</operator><name pos:start="12:18" pos:end="12:25">range_op</name></expr>)</condition> <block pos:start="12:28" pos:end="49:27">{<block_content pos:start="13:17" pos:end="49:27">
                <expr_stmt pos:start="13:17" pos:end="13:42"><expr pos:start="13:17" pos:end="13:41"><name pos:start="13:17" pos:end="13:24">range_op</name> <operator pos:start="13:26" pos:end="13:26">=</operator> <call pos:start="13:28" pos:end="13:41"><name pos:start="13:28" pos:end="13:33">strstr</name><argument_list pos:start="13:34" pos:end="13:41">(<argument pos:start="13:35" pos:end="13:35"><expr pos:start="13:35" pos:end="13:35"><name pos:start="13:35" pos:end="13:35">r</name></expr></argument>, <argument pos:start="13:38" pos:end="13:40"><expr pos:start="13:38" pos:end="13:40"><literal type="string" pos:start="13:38" pos:end="13:40">"+"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="14:17" pos:end="14:52"><expr pos:start="14:17" pos:end="14:51"><name pos:start="14:17" pos:end="14:18">r2</name> <operator pos:start="14:20" pos:end="14:20">=</operator> <ternary pos:start="14:22" pos:end="14:51"><condition pos:start="14:22" pos:end="14:31"><expr pos:start="14:22" pos:end="14:29"><name pos:start="14:22" pos:end="14:29">range_op</name></expr> ?</condition><then pos:start="14:33" pos:end="14:44"> <expr pos:start="14:33" pos:end="14:44"><name pos:start="14:33" pos:end="14:40">range_op</name> <operator pos:start="14:42" pos:end="14:42">+</operator> <literal type="number" pos:start="14:44" pos:end="14:44">1</literal></expr> </then><else pos:start="14:46" pos:end="14:51">: <expr pos:start="14:48" pos:end="14:51"><name pos:start="14:48" pos:end="14:51">NULL</name></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt pos:start="15:13" pos:end="49:27"><if pos:start="15:13" pos:end="49:27">if <condition pos:start="15:16" pos:end="15:26">(<expr pos:start="15:17" pos:end="15:25"><operator pos:start="15:17" pos:end="15:17">!</operator><name pos:start="15:18" pos:end="15:25">range_op</name></expr>)</condition> <block pos:start="15:28" pos:end="49:27">{<block_content pos:start="16:17" pos:end="49:27">
                <expr_stmt pos:start="16:17" pos:end="16:43"><expr pos:start="16:17" pos:end="16:42"><name pos:start="16:17" pos:end="16:24">range_op</name> <operator pos:start="16:26" pos:end="16:26">=</operator> <call pos:start="16:28" pos:end="16:42"><name pos:start="16:28" pos:end="16:33">strstr</name><argument_list pos:start="16:34" pos:end="16:42">(<argument pos:start="16:35" pos:end="16:35"><expr pos:start="16:35" pos:end="16:35"><name pos:start="16:35" pos:end="16:35">r</name></expr></argument>, <argument pos:start="16:38" pos:end="16:41"><expr pos:start="16:38" pos:end="16:41"><literal type="string" pos:start="16:38" pos:end="16:41">".."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="17:17" pos:end="17:52"><expr pos:start="17:17" pos:end="17:51"><name pos:start="17:17" pos:end="17:18">r2</name> <operator pos:start="17:20" pos:end="17:20">=</operator> <ternary pos:start="17:22" pos:end="17:51"><condition pos:start="17:22" pos:end="17:31"><expr pos:start="17:22" pos:end="17:29"><name pos:start="17:22" pos:end="17:29">range_op</name></expr> ?</condition><then pos:start="17:33" pos:end="17:44"> <expr pos:start="17:33" pos:end="17:44"><name pos:start="17:33" pos:end="17:40">range_op</name> <operator pos:start="17:42" pos:end="17:42">+</operator> <literal type="number" pos:start="17:44" pos:end="17:44">2</literal></expr> </then><else pos:start="17:46" pos:end="17:51">: <expr pos:start="17:48" pos:end="17:51"><name pos:start="17:48" pos:end="17:51">NULL</name></expr></else></ternary></expr>;</expr_stmt>
            <if_stmt pos:start="18:13" pos:end="49:27"><if pos:start="18:13" pos:end="49:27">if <condition pos:start="18:16" pos:end="18:25">(<expr pos:start="18:17" pos:end="18:24"><name pos:start="18:17" pos:end="18:24">range_op</name></expr>)</condition> <block pos:start="18:27" pos:end="49:27">{<block_content pos:start="19:17" pos:end="49:27">
                <decl_stmt pos:start="19:17" pos:end="19:37"><decl pos:start="19:17" pos:end="19:36"><type pos:start="19:17" pos:end="19:28"><specifier pos:start="19:17" pos:end="19:21">const</specifier> <name pos:start="19:23" pos:end="19:26">char</name> <modifier pos:start="19:28" pos:end="19:28">*</modifier></type><name pos:start="19:29" pos:end="19:29">e</name> <init pos:start="19:31" pos:end="19:36">= <expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">NULL</name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="20:17" pos:end="20:38"><decl pos:start="20:17" pos:end="20:30"><type pos:start="20:17" pos:end="20:24"><name pos:start="20:17" pos:end="20:24">uint64_t</name></type> <name pos:start="20:26" pos:end="20:30">r1val</name></decl>, <decl pos:start="20:33" pos:end="20:37"><type ref="prev" pos:start="20:17" pos:end="20:24"/><name pos:start="20:33" pos:end="20:37">r2val</name></decl>;</decl_stmt>
                <if_stmt pos:start="21:17" pos:end="49:27"><if pos:start="21:17" pos:end="49:27">if <condition pos:start="21:20" pos:end="23:30">(<expr pos:start="21:21" pos:end="23:29"><operator pos:start="21:21" pos:end="21:21">(</operator><call pos:start="21:22" pos:end="21:52"><name pos:start="21:22" pos:end="21:34">qemu_strtoull</name><argument_list pos:start="21:35" pos:end="21:52">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">r</name></expr></argument>, <argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><operator pos:start="21:39" pos:end="21:39">&amp;</operator><name pos:start="21:40" pos:end="21:40">e</name></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">0</literal></expr></argument>, <argument pos:start="21:46" pos:end="21:51"><expr pos:start="21:46" pos:end="21:51"><operator pos:start="21:46" pos:end="21:46">&amp;</operator><name pos:start="21:47" pos:end="21:51">r1val</name></expr></argument>)</argument_list></call> <operator pos:start="21:54" pos:end="21:55">==</operator> <literal type="number" pos:start="21:57" pos:end="21:57">0</literal><operator pos:start="21:58" pos:end="21:58">)</operator> <operator pos:start="21:60" pos:end="21:61">&amp;&amp;</operator>
                    <operator pos:start="22:21" pos:end="22:21">(</operator><call pos:start="22:22" pos:end="22:55"><name pos:start="22:22" pos:end="22:34">qemu_strtoull</name><argument_list pos:start="22:35" pos:end="22:55">(<argument pos:start="22:36" pos:end="22:37"><expr pos:start="22:36" pos:end="22:37"><name pos:start="22:36" pos:end="22:37">r2</name></expr></argument>, <argument pos:start="22:40" pos:end="22:43"><expr pos:start="22:40" pos:end="22:43"><name pos:start="22:40" pos:end="22:43">NULL</name></expr></argument>, <argument pos:start="22:46" pos:end="22:46"><expr pos:start="22:46" pos:end="22:46"><literal type="number" pos:start="22:46" pos:end="22:46">0</literal></expr></argument>, <argument pos:start="22:49" pos:end="22:54"><expr pos:start="22:49" pos:end="22:54"><operator pos:start="22:49" pos:end="22:49">&amp;</operator><name pos:start="22:50" pos:end="22:54">r2val</name></expr></argument>)</argument_list></call> <operator pos:start="22:57" pos:end="22:58">==</operator> <literal type="number" pos:start="22:60" pos:end="22:60">0</literal><operator pos:start="22:61" pos:end="22:61">)</operator> <operator pos:start="22:63" pos:end="22:64">&amp;&amp;</operator>
                    <name pos:start="23:21" pos:end="23:25">r2val</name> <operator pos:start="23:27" pos:end="23:27">&gt;</operator> <literal type="number" pos:start="23:29" pos:end="23:29">0</literal></expr>)</condition> <block pos:start="23:32" pos:end="49:27">{<block_content pos:start="24:21" pos:end="49:27">
                    <decl_stmt pos:start="24:21" pos:end="24:39"><decl pos:start="24:21" pos:end="24:38"><type pos:start="24:21" pos:end="24:32"><name pos:start="24:21" pos:end="24:32"><name pos:start="24:21" pos:end="24:26">struct</name> <name pos:start="24:28" pos:end="24:32">Range</name></name></type> <name pos:start="24:34" pos:end="24:38">range</name></decl>;</decl_stmt>
                    <expr_stmt pos:start="25:21" pos:end="25:44"><expr pos:start="25:21" pos:end="25:43"><call pos:start="25:21" pos:end="25:43"><name pos:start="25:21" pos:end="25:28">g_assert</name><argument_list pos:start="25:29" pos:end="25:43">(<argument pos:start="25:30" pos:end="25:42"><expr pos:start="25:30" pos:end="25:42"><name pos:start="25:30" pos:end="25:30">e</name> <operator pos:start="25:32" pos:end="25:33">==</operator> <name pos:start="25:35" pos:end="25:42">range_op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <switch pos:start="26:21" pos:end="49:27">switch <condition pos:start="26:28" pos:end="26:38">(<expr pos:start="26:29" pos:end="26:37"><operator pos:start="26:29" pos:end="26:29">*</operator><name pos:start="26:30" pos:end="26:37">range_op</name></expr>)</condition> <block pos:start="26:40" pos:end="49:27">{<block_content pos:start="27:21" pos:end="49:27">
                    <case pos:start="27:21" pos:end="27:29">case <expr pos:start="27:26" pos:end="27:28"><literal type="char" pos:start="27:26" pos:end="27:28">'+'</literal></expr>:</case>
                    <block pos:start="28:21" pos:end="49:27">{<block_content pos:start="29:25" pos:end="49:27">
                        <expr_stmt pos:start="29:25" pos:end="29:44"><expr pos:start="29:25" pos:end="29:43"><name pos:start="29:25" pos:end="29:35"><name pos:start="29:25" pos:end="29:29">range</name><operator pos:start="29:30" pos:end="29:30">.</operator><name pos:start="29:31" pos:end="29:35">begin</name></name> <operator pos:start="29:37" pos:end="29:37">=</operator> <name pos:start="29:39" pos:end="29:43">r1val</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="30:25" pos:end="30:56"><expr pos:start="30:25" pos:end="30:55"><name pos:start="30:25" pos:end="30:33"><name pos:start="30:25" pos:end="30:29">range</name><operator pos:start="30:30" pos:end="30:30">.</operator><name pos:start="30:31" pos:end="30:33">end</name></name> <operator pos:start="30:35" pos:end="30:35">=</operator> <name pos:start="30:37" pos:end="30:41">r1val</name> <operator pos:start="30:43" pos:end="30:43">+</operator> <operator pos:start="30:45" pos:end="30:45">(</operator><name pos:start="30:46" pos:end="30:50">r2val</name> <operator pos:start="30:52" pos:end="30:52">-</operator> <literal type="number" pos:start="30:54" pos:end="30:54">1</literal><operator pos:start="30:55" pos:end="30:55">)</operator></expr>;</expr_stmt>
                        <break pos:start="31:25" pos:end="31:30">break;</break>
                    <case pos:start="32:21" pos:end="32:29">case <expr pos:start="32:26" pos:end="32:28"><literal type="char" pos:start="32:26" pos:end="32:28">'-'</literal></expr>:</case>
                    <block pos:start="33:21" pos:end="44:17">{<block_content pos:start="34:25" pos:end="43:61">
                        <expr_stmt pos:start="34:25" pos:end="34:42"><expr pos:start="34:25" pos:end="34:41"><name pos:start="34:25" pos:end="34:33"><name pos:start="34:25" pos:end="34:29">range</name><operator pos:start="34:30" pos:end="34:30">.</operator><name pos:start="34:31" pos:end="34:33">end</name></name> <operator pos:start="34:35" pos:end="34:35">=</operator> <name pos:start="34:37" pos:end="34:41">r1val</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="35:25" pos:end="35:58"><expr pos:start="35:25" pos:end="35:57"><name pos:start="35:25" pos:end="35:35"><name pos:start="35:25" pos:end="35:29">range</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:35">begin</name></name> <operator pos:start="35:37" pos:end="35:37">=</operator> <name pos:start="35:39" pos:end="35:43">r1val</name> <operator pos:start="35:45" pos:end="35:45">-</operator> <operator pos:start="35:47" pos:end="35:47">(</operator><name pos:start="35:48" pos:end="35:52">r2val</name> <operator pos:start="35:54" pos:end="35:54">-</operator> <literal type="number" pos:start="35:56" pos:end="35:56">1</literal><operator pos:start="35:57" pos:end="35:57">)</operator></expr>;</expr_stmt>
                        <break pos:start="36:25" pos:end="36:30">break;</break>
                    <case pos:start="37:21" pos:end="37:29">case <expr pos:start="37:26" pos:end="37:28"><literal type="char" pos:start="37:26" pos:end="37:28">'.'</literal></expr>:</case>
                        <expr_stmt pos:start="38:25" pos:end="38:44"><expr pos:start="38:25" pos:end="38:43"><name pos:start="38:25" pos:end="38:35"><name pos:start="38:25" pos:end="38:29">range</name><operator pos:start="38:30" pos:end="38:30">.</operator><name pos:start="38:31" pos:end="38:35">begin</name></name> <operator pos:start="38:37" pos:end="38:37">=</operator> <name pos:start="38:39" pos:end="38:43">r1val</name></expr>;</expr_stmt>
                        <expr_stmt pos:start="39:25" pos:end="39:42"><expr pos:start="39:25" pos:end="39:41"><name pos:start="39:25" pos:end="39:33"><name pos:start="39:25" pos:end="39:29">range</name><operator pos:start="39:30" pos:end="39:30">.</operator><name pos:start="39:31" pos:end="39:33">end</name></name> <operator pos:start="39:35" pos:end="39:35">=</operator> <name pos:start="39:37" pos:end="39:41">r2val</name></expr>;</expr_stmt>
                        <break pos:start="40:25" pos:end="40:30">break;</break>
                    <default pos:start="41:21" pos:end="41:28">default:</default>
                        <expr_stmt pos:start="42:25" pos:end="42:47"><expr pos:start="42:25" pos:end="42:46"><call pos:start="42:25" pos:end="42:46"><name pos:start="42:25" pos:end="42:44">g_assert_not_reached</name><argument_list pos:start="42:45" pos:end="42:46">()</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt pos:start="43:21" pos:end="43:61"><expr pos:start="43:21" pos:end="43:60"><call pos:start="43:21" pos:end="43:60"><name pos:start="43:21" pos:end="43:38">g_array_append_val</name><argument_list pos:start="43:39" pos:end="43:60">(<argument pos:start="43:40" pos:end="43:52"><expr pos:start="43:40" pos:end="43:52"><name pos:start="43:40" pos:end="43:52">debug_regions</name></expr></argument>, <argument pos:start="43:55" pos:end="43:59"><expr pos:start="43:55" pos:end="43:59"><name pos:start="43:55" pos:end="43:59">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block> <if_stmt pos:start="44:19" pos:end="46:13"><else pos:start="44:19" pos:end="46:13">else <block pos:start="44:24" pos:end="46:13">{<block_content pos:start="45:21" pos:end="45:63">
                    <expr_stmt pos:start="45:21" pos:end="45:63"><expr pos:start="45:21" pos:end="45:62"><call pos:start="45:21" pos:end="45:62"><name pos:start="45:21" pos:end="45:27">g_error</name><argument_list pos:start="45:28" pos:end="45:62">(<argument pos:start="45:29" pos:end="45:58"><expr pos:start="45:29" pos:end="45:58"><literal type="string" pos:start="45:29" pos:end="45:58">"Failed to parse range in: %s"</literal></expr></argument>, <argument pos:start="45:61" pos:end="45:61"><expr pos:start="45:61" pos:end="45:61"><name pos:start="45:61" pos:end="45:61">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></else></if_stmt> <if_stmt pos:start="46:15" pos:end="49:27"><else pos:start="46:15" pos:end="49:27">else <block pos:start="46:20" pos:end="49:27">{<block_content pos:start="47:17" pos:end="49:27">
                <expr_stmt pos:start="47:17" pos:end="47:57"><expr pos:start="47:17" pos:end="47:56"><call pos:start="47:17" pos:end="47:56"><name pos:start="47:17" pos:end="47:23">g_error</name><argument_list pos:start="47:24" pos:end="47:56">(<argument pos:start="47:25" pos:end="47:52"><expr pos:start="47:25" pos:end="47:52"><literal type="string" pos:start="47:25" pos:end="47:52">"Bad range specifier in: %s"</literal></expr></argument>, <argument pos:start="47:55" pos:end="47:55"><expr pos:start="47:55" pos:end="47:55"><name pos:start="47:55" pos:end="47:55">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:24"><expr pos:start="48:13" pos:end="48:23"><name pos:start="48:13" pos:end="48:13">r</name> <operator pos:start="48:15" pos:end="48:15">=</operator> <operator pos:start="48:17" pos:end="48:17">*</operator><name pos:start="48:18" pos:end="48:21">next</name><operator pos:start="48:22" pos:end="48:23">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><call pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:18">g_strfreev</name><argument_list pos:start="49:19" pos:end="49:26">(<argument pos:start="49:20" pos:end="49:25"><expr pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:25">ranges</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></if></if_stmt></block_content></block></function></unit>
