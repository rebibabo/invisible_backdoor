<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/723.c" pos:tabs="8"><function pos:start="1:1" pos:end="785:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">kvm_get_msrs</name><parameter_list pos:start="1:24" pos:end="1:36">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:32"><name pos:start="1:25" pos:end="1:30">X86CPU</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">cpu</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="785:1">{<block_content pos:start="5:5" pos:end="783:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">env</name> <init pos:start="5:22" pos:end="5:32">= <expr pos:start="5:24" pos:end="5:32"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">cpu</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">kvm_msr_entry</name></name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">msrs</name> <init pos:start="7:32" pos:end="7:58">= <expr pos:start="7:34" pos:end="7:58"><name pos:start="7:34" pos:end="7:58"><name pos:start="7:34" pos:end="7:36">cpu</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:49">kvm_msr_buf</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:58">entries</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:26">mtrr_top_bits</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:21">kvm_msr_buf_reset</name><argument_list pos:start="15:22" pos:end="15:26">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:21">kvm_msr_entry_add</name><argument_list pos:start="19:22" pos:end="19:51">(<argument pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:25">cpu</name></expr></argument>, <argument pos:start="19:28" pos:end="19:47"><expr pos:start="19:28" pos:end="19:47"><name pos:start="19:28" pos:end="19:47">MSR_IA32_SYSENTER_CS</name></expr></argument>, <argument pos:start="19:50" pos:end="19:50"><expr pos:start="19:50" pos:end="19:50"><literal type="number" pos:start="19:50" pos:end="19:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:21">kvm_msr_entry_add</name><argument_list pos:start="21:22" pos:end="21:52">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">cpu</name></expr></argument>, <argument pos:start="21:28" pos:end="21:48"><expr pos:start="21:28" pos:end="21:48"><name pos:start="21:28" pos:end="21:48">MSR_IA32_SYSENTER_ESP</name></expr></argument>, <argument pos:start="21:51" pos:end="21:51"><expr pos:start="21:51" pos:end="21:51"><literal type="number" pos:start="21:51" pos:end="21:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><call pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:21">kvm_msr_entry_add</name><argument_list pos:start="23:22" pos:end="23:52">(<argument pos:start="23:23" pos:end="23:25"><expr pos:start="23:23" pos:end="23:25"><name pos:start="23:23" pos:end="23:25">cpu</name></expr></argument>, <argument pos:start="23:28" pos:end="23:48"><expr pos:start="23:28" pos:end="23:48"><name pos:start="23:28" pos:end="23:48">MSR_IA32_SYSENTER_EIP</name></expr></argument>, <argument pos:start="23:51" pos:end="23:51"><expr pos:start="23:51" pos:end="23:51"><literal type="number" pos:start="23:51" pos:end="23:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><call pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:21">kvm_msr_entry_add</name><argument_list pos:start="25:22" pos:end="25:38">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">cpu</name></expr></argument>, <argument pos:start="25:28" pos:end="25:34"><expr pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:34">MSR_PAT</name></expr></argument>, <argument pos:start="25:37" pos:end="25:37"><expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20">has_msr_star</name></expr>)</condition> <block pos:start="27:23" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:44">

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:25">kvm_msr_entry_add</name><argument_list pos:start="29:26" pos:end="29:43">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">cpu</name></expr></argument>, <argument pos:start="29:32" pos:end="29:39"><expr pos:start="29:32" pos:end="29:39"><name pos:start="29:32" pos:end="29:39">MSR_STAR</name></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:24">has_msr_hsave_pa</name></expr>)</condition> <block pos:start="33:27" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:51">

        <expr_stmt pos:start="35:9" pos:end="35:51"><expr pos:start="35:9" pos:end="35:50"><call pos:start="35:9" pos:end="35:50"><name pos:start="35:9" pos:end="35:25">kvm_msr_entry_add</name><argument_list pos:start="35:26" pos:end="35:50">(<argument pos:start="35:27" pos:end="35:29"><expr pos:start="35:27" pos:end="35:29"><name pos:start="35:27" pos:end="35:29">cpu</name></expr></argument>, <argument pos:start="35:32" pos:end="35:46"><expr pos:start="35:32" pos:end="35:46"><name pos:start="35:32" pos:end="35:46">MSR_VM_HSAVE_PA</name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:24">(<expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:23">has_msr_tsc_aux</name></expr>)</condition> <block pos:start="39:26" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:47">

        <expr_stmt pos:start="41:9" pos:end="41:47"><expr pos:start="41:9" pos:end="41:46"><call pos:start="41:9" pos:end="41:46"><name pos:start="41:9" pos:end="41:25">kvm_msr_entry_add</name><argument_list pos:start="41:26" pos:end="41:46">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">cpu</name></expr></argument>, <argument pos:start="41:32" pos:end="41:42"><expr pos:start="41:32" pos:end="41:42"><name pos:start="41:32" pos:end="41:42">MSR_TSC_AUX</name></expr></argument>, <argument pos:start="41:45" pos:end="41:45"><expr pos:start="41:45" pos:end="41:45"><literal type="number" pos:start="41:45" pos:end="41:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:27">(<expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:26">has_msr_tsc_adjust</name></expr>)</condition> <block pos:start="45:29" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:50">

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:25">kvm_msr_entry_add</name><argument_list pos:start="47:26" pos:end="47:49">(<argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><name pos:start="47:27" pos:end="47:29">cpu</name></expr></argument>, <argument pos:start="47:32" pos:end="47:45"><expr pos:start="47:32" pos:end="47:45"><name pos:start="47:32" pos:end="47:45">MSR_TSC_ADJUST</name></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:29">(<expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:28">has_msr_tsc_deadline</name></expr>)</condition> <block pos:start="51:31" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:56">

        <expr_stmt pos:start="53:9" pos:end="53:56"><expr pos:start="53:9" pos:end="53:55"><call pos:start="53:9" pos:end="53:55"><name pos:start="53:9" pos:end="53:25">kvm_msr_entry_add</name><argument_list pos:start="53:26" pos:end="53:55">(<argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">cpu</name></expr></argument>, <argument pos:start="53:32" pos:end="53:51"><expr pos:start="53:32" pos:end="53:51"><name pos:start="53:32" pos:end="53:51">MSR_IA32_TSCDEADLINE</name></expr></argument>, <argument pos:start="53:54" pos:end="53:54"><expr pos:start="53:54" pos:end="53:54"><literal type="number" pos:start="53:54" pos:end="53:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:28">(<expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:27">has_msr_misc_enable</name></expr>)</condition> <block pos:start="57:30" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:56">

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:25">kvm_msr_entry_add</name><argument_list pos:start="59:26" pos:end="59:55">(<argument pos:start="59:27" pos:end="59:29"><expr pos:start="59:27" pos:end="59:29"><name pos:start="59:27" pos:end="59:29">cpu</name></expr></argument>, <argument pos:start="59:32" pos:end="59:51"><expr pos:start="59:32" pos:end="59:51"><name pos:start="59:32" pos:end="59:51">MSR_IA32_MISC_ENABLE</name></expr></argument>, <argument pos:start="59:54" pos:end="59:54"><expr pos:start="59:54" pos:end="59:54"><literal type="number" pos:start="59:54" pos:end="59:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:23">(<expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:22">has_msr_smbase</name></expr>)</condition> <block pos:start="63:25" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:51">

        <expr_stmt pos:start="65:9" pos:end="65:51"><expr pos:start="65:9" pos:end="65:50"><call pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:25">kvm_msr_entry_add</name><argument_list pos:start="65:26" pos:end="65:50">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">cpu</name></expr></argument>, <argument pos:start="65:32" pos:end="65:46"><expr pos:start="65:32" pos:end="65:46"><name pos:start="65:32" pos:end="65:46">MSR_IA32_SMBASE</name></expr></argument>, <argument pos:start="65:49" pos:end="65:49"><expr pos:start="65:49" pos:end="65:49"><literal type="number" pos:start="65:49" pos:end="65:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:32">(<expr pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:31">has_msr_feature_control</name></expr>)</condition> <block pos:start="69:34" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:60">

        <expr_stmt pos:start="71:9" pos:end="71:60"><expr pos:start="71:9" pos:end="71:59"><call pos:start="71:9" pos:end="71:59"><name pos:start="71:9" pos:end="71:25">kvm_msr_entry_add</name><argument_list pos:start="71:26" pos:end="71:59">(<argument pos:start="71:27" pos:end="71:29"><expr pos:start="71:27" pos:end="71:29"><name pos:start="71:27" pos:end="71:29">cpu</name></expr></argument>, <argument pos:start="71:32" pos:end="71:55"><expr pos:start="71:32" pos:end="71:55"><name pos:start="71:32" pos:end="71:55">MSR_IA32_FEATURE_CONTROL</name></expr></argument>, <argument pos:start="71:58" pos:end="71:58"><expr pos:start="71:58" pos:end="71:58"><literal type="number" pos:start="71:58" pos:end="71:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:23">has_msr_bndcfgs</name></expr>)</condition> <block pos:start="75:26" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:52">

        <expr_stmt pos:start="77:9" pos:end="77:52"><expr pos:start="77:9" pos:end="77:51"><call pos:start="77:9" pos:end="77:51"><name pos:start="77:9" pos:end="77:25">kvm_msr_entry_add</name><argument_list pos:start="77:26" pos:end="77:51">(<argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:29">cpu</name></expr></argument>, <argument pos:start="77:32" pos:end="77:47"><expr pos:start="77:32" pos:end="77:47"><name pos:start="77:32" pos:end="77:47">MSR_IA32_BNDCFGS</name></expr></argument>, <argument pos:start="77:50" pos:end="77:50"><expr pos:start="77:50" pos:end="77:50"><literal type="number" pos:start="77:50" pos:end="77:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="85:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:20">(<expr pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:19">has_msr_xss</name></expr>)</condition> <block pos:start="81:22" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:48">

        <expr_stmt pos:start="83:9" pos:end="83:48"><expr pos:start="83:9" pos:end="83:47"><call pos:start="83:9" pos:end="83:47"><name pos:start="83:9" pos:end="83:25">kvm_msr_entry_add</name><argument_list pos:start="83:26" pos:end="83:47">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">cpu</name></expr></argument>, <argument pos:start="83:32" pos:end="83:43"><expr pos:start="83:32" pos:end="83:43"><name pos:start="83:32" pos:end="83:43">MSR_IA32_XSS</name></expr></argument>, <argument pos:start="83:46" pos:end="83:46"><expr pos:start="83:46" pos:end="83:46"><literal type="number" pos:start="83:46" pos:end="83:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <if_stmt pos:start="91:5" pos:end="102:0"><if pos:start="91:5" pos:end="102:0">if <condition pos:start="91:8" pos:end="91:24">(<expr pos:start="91:9" pos:end="91:23"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:23"><name pos:start="91:10" pos:end="91:12">env</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:23">tsc_valid</name></name></expr>)</condition> <block pos:start="91:26" pos:end="102:0">{<block_content pos:start="93:9" pos:end="95:48">

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><call pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:25">kvm_msr_entry_add</name><argument_list pos:start="93:26" pos:end="93:47">(<argument pos:start="93:27" pos:end="93:29"><expr pos:start="93:27" pos:end="93:29"><name pos:start="93:27" pos:end="93:29">cpu</name></expr></argument>, <argument pos:start="93:32" pos:end="93:43"><expr pos:start="93:32" pos:end="93:43"><name pos:start="93:32" pos:end="93:43">MSR_IA32_TSC</name></expr></argument>, <argument pos:start="93:46" pos:end="93:46"><expr pos:start="93:46" pos:end="93:46"><literal type="number" pos:start="93:46" pos:end="93:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:48"><expr pos:start="95:9" pos:end="95:47"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">env</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">tsc_valid</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <operator pos:start="95:26" pos:end="95:26">!</operator><call pos:start="95:27" pos:end="95:47"><name pos:start="95:27" pos:end="95:45">runstate_is_running</name><argument_list pos:start="95:46" pos:end="95:47">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="101:1" pos:end="101:20">#<cpp:directive pos:start="101:2" pos:end="101:6">ifdef</cpp:directive> <name pos:start="101:8" pos:end="101:20">TARGET_X86_64</name></cpp:ifdef>

    <if_stmt pos:start="103:5" pos:end="116:0"><if pos:start="103:5" pos:end="116:0">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:25">lm_capable_kernel</name></expr>)</condition> <block pos:start="103:28" pos:end="116:0">{<block_content pos:start="105:9" pos:end="111:45">

        <expr_stmt pos:start="105:9" pos:end="105:45"><expr pos:start="105:9" pos:end="105:44"><call pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:25">kvm_msr_entry_add</name><argument_list pos:start="105:26" pos:end="105:44">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">cpu</name></expr></argument>, <argument pos:start="105:32" pos:end="105:40"><expr pos:start="105:32" pos:end="105:40"><name pos:start="105:32" pos:end="105:40">MSR_CSTAR</name></expr></argument>, <argument pos:start="105:43" pos:end="105:43"><expr pos:start="105:43" pos:end="105:43"><literal type="number" pos:start="105:43" pos:end="105:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:52"><expr pos:start="107:9" pos:end="107:51"><call pos:start="107:9" pos:end="107:51"><name pos:start="107:9" pos:end="107:25">kvm_msr_entry_add</name><argument_list pos:start="107:26" pos:end="107:51">(<argument pos:start="107:27" pos:end="107:29"><expr pos:start="107:27" pos:end="107:29"><name pos:start="107:27" pos:end="107:29">cpu</name></expr></argument>, <argument pos:start="107:32" pos:end="107:47"><expr pos:start="107:32" pos:end="107:47"><name pos:start="107:32" pos:end="107:47">MSR_KERNELGSBASE</name></expr></argument>, <argument pos:start="107:50" pos:end="107:50"><expr pos:start="107:50" pos:end="107:50"><literal type="number" pos:start="107:50" pos:end="107:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:45"><expr pos:start="109:9" pos:end="109:44"><call pos:start="109:9" pos:end="109:44"><name pos:start="109:9" pos:end="109:25">kvm_msr_entry_add</name><argument_list pos:start="109:26" pos:end="109:44">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">cpu</name></expr></argument>, <argument pos:start="109:32" pos:end="109:40"><expr pos:start="109:32" pos:end="109:40"><name pos:start="109:32" pos:end="109:40">MSR_FMASK</name></expr></argument>, <argument pos:start="109:43" pos:end="109:43"><expr pos:start="109:43" pos:end="109:43"><literal type="number" pos:start="109:43" pos:end="109:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:45"><expr pos:start="111:9" pos:end="111:44"><call pos:start="111:9" pos:end="111:44"><name pos:start="111:9" pos:end="111:25">kvm_msr_entry_add</name><argument_list pos:start="111:26" pos:end="111:44">(<argument pos:start="111:27" pos:end="111:29"><expr pos:start="111:27" pos:end="111:29"><name pos:start="111:27" pos:end="111:29">cpu</name></expr></argument>, <argument pos:start="111:32" pos:end="111:40"><expr pos:start="111:32" pos:end="111:40"><name pos:start="111:32" pos:end="111:40">MSR_LSTAR</name></expr></argument>, <argument pos:start="111:43" pos:end="111:43"><expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="117:5" pos:end="117:51"><expr pos:start="117:5" pos:end="117:50"><call pos:start="117:5" pos:end="117:50"><name pos:start="117:5" pos:end="117:21">kvm_msr_entry_add</name><argument_list pos:start="117:22" pos:end="117:50">(<argument pos:start="117:23" pos:end="117:25"><expr pos:start="117:23" pos:end="117:25"><name pos:start="117:23" pos:end="117:25">cpu</name></expr></argument>, <argument pos:start="117:28" pos:end="117:46"><expr pos:start="117:28" pos:end="117:46"><name pos:start="117:28" pos:end="117:46">MSR_KVM_SYSTEM_TIME</name></expr></argument>, <argument pos:start="117:49" pos:end="117:49"><expr pos:start="117:49" pos:end="117:49"><literal type="number" pos:start="117:49" pos:end="117:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:50"><expr pos:start="119:5" pos:end="119:49"><call pos:start="119:5" pos:end="119:49"><name pos:start="119:5" pos:end="119:21">kvm_msr_entry_add</name><argument_list pos:start="119:22" pos:end="119:49">(<argument pos:start="119:23" pos:end="119:25"><expr pos:start="119:23" pos:end="119:25"><name pos:start="119:23" pos:end="119:25">cpu</name></expr></argument>, <argument pos:start="119:28" pos:end="119:45"><expr pos:start="119:28" pos:end="119:45"><name pos:start="119:28" pos:end="119:45">MSR_KVM_WALL_CLOCK</name></expr></argument>, <argument pos:start="119:48" pos:end="119:48"><expr pos:start="119:48" pos:end="119:48"><literal type="number" pos:start="119:48" pos:end="119:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:62">(<expr pos:start="121:9" pos:end="121:61"><name pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:11">env</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:21">features</name><index pos:start="121:22" pos:end="121:31">[<expr pos:start="121:23" pos:end="121:30"><name pos:start="121:23" pos:end="121:30">FEAT_KVM</name></expr>]</index></name> <operator pos:start="121:33" pos:end="121:33">&amp;</operator> <operator pos:start="121:35" pos:end="121:35">(</operator><literal type="number" pos:start="121:36" pos:end="121:36">1</literal> <operator pos:start="121:38" pos:end="121:39">&lt;&lt;</operator> <name pos:start="121:41" pos:end="121:60">KVM_FEATURE_ASYNC_PF</name><operator pos:start="121:61" pos:end="121:61">)</operator></expr>)</condition> <block pos:start="121:64" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:55">

        <expr_stmt pos:start="123:9" pos:end="123:55"><expr pos:start="123:9" pos:end="123:54"><call pos:start="123:9" pos:end="123:54"><name pos:start="123:9" pos:end="123:25">kvm_msr_entry_add</name><argument_list pos:start="123:26" pos:end="123:54">(<argument pos:start="123:27" pos:end="123:29"><expr pos:start="123:27" pos:end="123:29"><name pos:start="123:27" pos:end="123:29">cpu</name></expr></argument>, <argument pos:start="123:32" pos:end="123:50"><expr pos:start="123:32" pos:end="123:50"><name pos:start="123:32" pos:end="123:50">MSR_KVM_ASYNC_PF_EN</name></expr></argument>, <argument pos:start="123:53" pos:end="123:53"><expr pos:start="123:53" pos:end="123:53"><literal type="number" pos:start="123:53" pos:end="123:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:60">(<expr pos:start="127:9" pos:end="127:59"><name pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:11">env</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:21">features</name><index pos:start="127:22" pos:end="127:31">[<expr pos:start="127:23" pos:end="127:30"><name pos:start="127:23" pos:end="127:30">FEAT_KVM</name></expr>]</index></name> <operator pos:start="127:33" pos:end="127:33">&amp;</operator> <operator pos:start="127:35" pos:end="127:35">(</operator><literal type="number" pos:start="127:36" pos:end="127:36">1</literal> <operator pos:start="127:38" pos:end="127:39">&lt;&lt;</operator> <name pos:start="127:41" pos:end="127:58">KVM_FEATURE_PV_EOI</name><operator pos:start="127:59" pos:end="127:59">)</operator></expr>)</condition> <block pos:start="127:62" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:53">

        <expr_stmt pos:start="129:9" pos:end="129:53"><expr pos:start="129:9" pos:end="129:52"><call pos:start="129:9" pos:end="129:52"><name pos:start="129:9" pos:end="129:25">kvm_msr_entry_add</name><argument_list pos:start="129:26" pos:end="129:52">(<argument pos:start="129:27" pos:end="129:29"><expr pos:start="129:27" pos:end="129:29"><name pos:start="129:27" pos:end="129:29">cpu</name></expr></argument>, <argument pos:start="129:32" pos:end="129:48"><expr pos:start="129:32" pos:end="129:48"><name pos:start="129:32" pos:end="129:48">MSR_KVM_PV_EOI_EN</name></expr></argument>, <argument pos:start="129:51" pos:end="129:51"><expr pos:start="129:51" pos:end="129:51"><literal type="number" pos:start="129:51" pos:end="129:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:64">(<expr pos:start="133:9" pos:end="133:63"><name pos:start="133:9" pos:end="133:31"><name pos:start="133:9" pos:end="133:11">env</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:21">features</name><index pos:start="133:22" pos:end="133:31">[<expr pos:start="133:23" pos:end="133:30"><name pos:start="133:23" pos:end="133:30">FEAT_KVM</name></expr>]</index></name> <operator pos:start="133:33" pos:end="133:33">&amp;</operator> <operator pos:start="133:35" pos:end="133:35">(</operator><literal type="number" pos:start="133:36" pos:end="133:36">1</literal> <operator pos:start="133:38" pos:end="133:39">&lt;&lt;</operator> <name pos:start="133:41" pos:end="133:62">KVM_FEATURE_STEAL_TIME</name><operator pos:start="133:63" pos:end="133:63">)</operator></expr>)</condition> <block pos:start="133:66" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:54">

        <expr_stmt pos:start="135:9" pos:end="135:54"><expr pos:start="135:9" pos:end="135:53"><call pos:start="135:9" pos:end="135:53"><name pos:start="135:9" pos:end="135:25">kvm_msr_entry_add</name><argument_list pos:start="135:26" pos:end="135:53">(<argument pos:start="135:27" pos:end="135:29"><expr pos:start="135:27" pos:end="135:29"><name pos:start="135:27" pos:end="135:29">cpu</name></expr></argument>, <argument pos:start="135:32" pos:end="135:49"><expr pos:start="135:32" pos:end="135:49"><name pos:start="135:32" pos:end="135:49">MSR_KVM_STEAL_TIME</name></expr></argument>, <argument pos:start="135:52" pos:end="135:52"><expr pos:start="135:52" pos:end="135:52"><literal type="number" pos:start="135:52" pos:end="135:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="163:5"><if pos:start="139:5" pos:end="163:5">if <condition pos:start="139:8" pos:end="139:34">(<expr pos:start="139:9" pos:end="139:33"><name pos:start="139:9" pos:end="139:33">has_msr_architectural_pmu</name></expr>)</condition> <block pos:start="139:36" pos:end="163:5">{<block_content pos:start="141:9" pos:end="161:9">

        <expr_stmt pos:start="141:9" pos:end="141:64"><expr pos:start="141:9" pos:end="141:63"><call pos:start="141:9" pos:end="141:63"><name pos:start="141:9" pos:end="141:25">kvm_msr_entry_add</name><argument_list pos:start="141:26" pos:end="141:63">(<argument pos:start="141:27" pos:end="141:29"><expr pos:start="141:27" pos:end="141:29"><name pos:start="141:27" pos:end="141:29">cpu</name></expr></argument>, <argument pos:start="141:32" pos:end="141:59"><expr pos:start="141:32" pos:end="141:59"><name pos:start="141:32" pos:end="141:59">MSR_CORE_PERF_FIXED_CTR_CTRL</name></expr></argument>, <argument pos:start="141:62" pos:end="141:62"><expr pos:start="141:62" pos:end="141:62"><literal type="number" pos:start="141:62" pos:end="141:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:61"><expr pos:start="143:9" pos:end="143:60"><call pos:start="143:9" pos:end="143:60"><name pos:start="143:9" pos:end="143:25">kvm_msr_entry_add</name><argument_list pos:start="143:26" pos:end="143:60">(<argument pos:start="143:27" pos:end="143:29"><expr pos:start="143:27" pos:end="143:29"><name pos:start="143:27" pos:end="143:29">cpu</name></expr></argument>, <argument pos:start="143:32" pos:end="143:56"><expr pos:start="143:32" pos:end="143:56"><name pos:start="143:32" pos:end="143:56">MSR_CORE_PERF_GLOBAL_CTRL</name></expr></argument>, <argument pos:start="143:59" pos:end="143:59"><expr pos:start="143:59" pos:end="143:59"><literal type="number" pos:start="143:59" pos:end="143:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:63"><expr pos:start="145:9" pos:end="145:62"><call pos:start="145:9" pos:end="145:62"><name pos:start="145:9" pos:end="145:25">kvm_msr_entry_add</name><argument_list pos:start="145:26" pos:end="145:62">(<argument pos:start="145:27" pos:end="145:29"><expr pos:start="145:27" pos:end="145:29"><name pos:start="145:27" pos:end="145:29">cpu</name></expr></argument>, <argument pos:start="145:32" pos:end="145:58"><expr pos:start="145:32" pos:end="145:58"><name pos:start="145:32" pos:end="145:58">MSR_CORE_PERF_GLOBAL_STATUS</name></expr></argument>, <argument pos:start="145:61" pos:end="145:61"><expr pos:start="145:61" pos:end="145:61"><literal type="number" pos:start="145:61" pos:end="145:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:65"><expr pos:start="147:9" pos:end="147:64"><call pos:start="147:9" pos:end="147:64"><name pos:start="147:9" pos:end="147:25">kvm_msr_entry_add</name><argument_list pos:start="147:26" pos:end="147:64">(<argument pos:start="147:27" pos:end="147:29"><expr pos:start="147:27" pos:end="147:29"><name pos:start="147:27" pos:end="147:29">cpu</name></expr></argument>, <argument pos:start="147:32" pos:end="147:60"><expr pos:start="147:32" pos:end="147:60"><name pos:start="147:32" pos:end="147:60">MSR_CORE_PERF_GLOBAL_OVF_CTRL</name></expr></argument>, <argument pos:start="147:63" pos:end="147:63"><expr pos:start="147:63" pos:end="147:63"><literal type="number" pos:start="147:63" pos:end="147:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="149:9" pos:end="153:9">for <control pos:start="149:13" pos:end="149:48">(<init pos:start="149:14" pos:end="149:19"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:14">i</name> <operator pos:start="149:16" pos:end="149:16">=</operator> <literal type="number" pos:start="149:18" pos:end="149:18">0</literal></expr>;</init> <condition pos:start="149:21" pos:end="149:43"><expr pos:start="149:21" pos:end="149:42"><name pos:start="149:21" pos:end="149:21">i</name> <operator pos:start="149:23" pos:end="149:23">&lt;</operator> <name pos:start="149:25" pos:end="149:42">MAX_FIXED_COUNTERS</name></expr>;</condition> <incr pos:start="149:45" pos:end="149:47"><expr pos:start="149:45" pos:end="149:47"><name pos:start="149:45" pos:end="149:45">i</name><operator pos:start="149:46" pos:end="149:47">++</operator></expr></incr>)</control> <block pos:start="149:50" pos:end="153:9">{<block_content pos:start="151:13" pos:end="151:68">

            <expr_stmt pos:start="151:13" pos:end="151:68"><expr pos:start="151:13" pos:end="151:67"><call pos:start="151:13" pos:end="151:67"><name pos:start="151:13" pos:end="151:29">kvm_msr_entry_add</name><argument_list pos:start="151:30" pos:end="151:67">(<argument pos:start="151:31" pos:end="151:33"><expr pos:start="151:31" pos:end="151:33"><name pos:start="151:31" pos:end="151:33">cpu</name></expr></argument>, <argument pos:start="151:36" pos:end="151:63"><expr pos:start="151:36" pos:end="151:63"><name pos:start="151:36" pos:end="151:59">MSR_CORE_PERF_FIXED_CTR0</name> <operator pos:start="151:61" pos:end="151:61">+</operator> <name pos:start="151:63" pos:end="151:63">i</name></expr></argument>, <argument pos:start="151:66" pos:end="151:66"><expr pos:start="151:66" pos:end="151:66"><literal type="number" pos:start="151:66" pos:end="151:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="155:9" pos:end="161:9">for <control pos:start="155:13" pos:end="155:60">(<init pos:start="155:14" pos:end="155:19"><expr pos:start="155:14" pos:end="155:18"><name pos:start="155:14" pos:end="155:14">i</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">0</literal></expr>;</init> <condition pos:start="155:21" pos:end="155:55"><expr pos:start="155:21" pos:end="155:54"><name pos:start="155:21" pos:end="155:21">i</name> <operator pos:start="155:23" pos:end="155:23">&lt;</operator> <name pos:start="155:25" pos:end="155:54">num_architectural_pmu_counters</name></expr>;</condition> <incr pos:start="155:57" pos:end="155:59"><expr pos:start="155:57" pos:end="155:59"><name pos:start="155:57" pos:end="155:57">i</name><operator pos:start="155:58" pos:end="155:59">++</operator></expr></incr>)</control> <block pos:start="155:62" pos:end="161:9">{<block_content pos:start="157:13" pos:end="159:59">

            <expr_stmt pos:start="157:13" pos:end="157:59"><expr pos:start="157:13" pos:end="157:58"><call pos:start="157:13" pos:end="157:58"><name pos:start="157:13" pos:end="157:29">kvm_msr_entry_add</name><argument_list pos:start="157:30" pos:end="157:58">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">cpu</name></expr></argument>, <argument pos:start="157:36" pos:end="157:54"><expr pos:start="157:36" pos:end="157:54"><name pos:start="157:36" pos:end="157:50">MSR_P6_PERFCTR0</name> <operator pos:start="157:52" pos:end="157:52">+</operator> <name pos:start="157:54" pos:end="157:54">i</name></expr></argument>, <argument pos:start="157:57" pos:end="157:57"><expr pos:start="157:57" pos:end="157:57"><literal type="number" pos:start="157:57" pos:end="157:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:59"><expr pos:start="159:13" pos:end="159:58"><call pos:start="159:13" pos:end="159:58"><name pos:start="159:13" pos:end="159:29">kvm_msr_entry_add</name><argument_list pos:start="159:30" pos:end="159:58">(<argument pos:start="159:31" pos:end="159:33"><expr pos:start="159:31" pos:end="159:33"><name pos:start="159:31" pos:end="159:33">cpu</name></expr></argument>, <argument pos:start="159:36" pos:end="159:54"><expr pos:start="159:36" pos:end="159:54"><name pos:start="159:36" pos:end="159:50">MSR_P6_EVNTSEL0</name> <operator pos:start="159:52" pos:end="159:52">+</operator> <name pos:start="159:54" pos:end="159:54">i</name></expr></argument>, <argument pos:start="159:57" pos:end="159:57"><expr pos:start="159:57" pos:end="159:57"><literal type="number" pos:start="159:57" pos:end="159:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="185:5"><if pos:start="167:5" pos:end="185:5">if <condition pos:start="167:8" pos:end="167:21">(<expr pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:11">env</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:20">mcg_cap</name></name></expr>)</condition> <block pos:start="167:23" pos:end="185:5">{<block_content pos:start="169:9" pos:end="183:9">

        <expr_stmt pos:start="169:9" pos:end="169:50"><expr pos:start="169:9" pos:end="169:49"><call pos:start="169:9" pos:end="169:49"><name pos:start="169:9" pos:end="169:25">kvm_msr_entry_add</name><argument_list pos:start="169:26" pos:end="169:49">(<argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">cpu</name></expr></argument>, <argument pos:start="169:32" pos:end="169:45"><expr pos:start="169:32" pos:end="169:45"><name pos:start="169:32" pos:end="169:45">MSR_MCG_STATUS</name></expr></argument>, <argument pos:start="169:48" pos:end="169:48"><expr pos:start="169:48" pos:end="169:48"><literal type="number" pos:start="169:48" pos:end="169:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:47"><expr pos:start="171:9" pos:end="171:46"><call pos:start="171:9" pos:end="171:46"><name pos:start="171:9" pos:end="171:25">kvm_msr_entry_add</name><argument_list pos:start="171:26" pos:end="171:46">(<argument pos:start="171:27" pos:end="171:29"><expr pos:start="171:27" pos:end="171:29"><name pos:start="171:27" pos:end="171:29">cpu</name></expr></argument>, <argument pos:start="171:32" pos:end="171:42"><expr pos:start="171:32" pos:end="171:42"><name pos:start="171:32" pos:end="171:42">MSR_MCG_CTL</name></expr></argument>, <argument pos:start="171:45" pos:end="171:45"><expr pos:start="171:45" pos:end="171:45"><literal type="number" pos:start="171:45" pos:end="171:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:32">(<expr pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:31">has_msr_mcg_ext_ctl</name></expr>)</condition> <block pos:start="173:34" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:55">

            <expr_stmt pos:start="175:13" pos:end="175:55"><expr pos:start="175:13" pos:end="175:54"><call pos:start="175:13" pos:end="175:54"><name pos:start="175:13" pos:end="175:29">kvm_msr_entry_add</name><argument_list pos:start="175:30" pos:end="175:54">(<argument pos:start="175:31" pos:end="175:33"><expr pos:start="175:31" pos:end="175:33"><name pos:start="175:31" pos:end="175:33">cpu</name></expr></argument>, <argument pos:start="175:36" pos:end="175:50"><expr pos:start="175:36" pos:end="175:50"><name pos:start="175:36" pos:end="175:50">MSR_MCG_EXT_CTL</name></expr></argument>, <argument pos:start="175:53" pos:end="175:53"><expr pos:start="175:53" pos:end="175:53"><literal type="number" pos:start="175:53" pos:end="175:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="179:9" pos:end="183:9">for <control pos:start="179:13" pos:end="179:55">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">i</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:50"><expr pos:start="179:21" pos:end="179:49"><name pos:start="179:21" pos:end="179:21">i</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <operator pos:start="179:25" pos:end="179:25">(</operator><name pos:start="179:26" pos:end="179:37"><name pos:start="179:26" pos:end="179:28">env</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:37">mcg_cap</name></name> <operator pos:start="179:39" pos:end="179:39">&amp;</operator> <literal type="number" pos:start="179:41" pos:end="179:44">0xff</literal><operator pos:start="179:45" pos:end="179:45">)</operator> <operator pos:start="179:47" pos:end="179:47">*</operator> <literal type="number" pos:start="179:49" pos:end="179:49">4</literal></expr>;</condition> <incr pos:start="179:52" pos:end="179:54"><expr pos:start="179:52" pos:end="179:54"><name pos:start="179:52" pos:end="179:52">i</name><operator pos:start="179:53" pos:end="179:54">++</operator></expr></incr>)</control> <block pos:start="179:57" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:55">

            <expr_stmt pos:start="181:13" pos:end="181:55"><expr pos:start="181:13" pos:end="181:54"><call pos:start="181:13" pos:end="181:54"><name pos:start="181:13" pos:end="181:29">kvm_msr_entry_add</name><argument_list pos:start="181:30" pos:end="181:54">(<argument pos:start="181:31" pos:end="181:33"><expr pos:start="181:31" pos:end="181:33"><name pos:start="181:31" pos:end="181:33">cpu</name></expr></argument>, <argument pos:start="181:36" pos:end="181:50"><expr pos:start="181:36" pos:end="181:50"><name pos:start="181:36" pos:end="181:46">MSR_MC0_CTL</name> <operator pos:start="181:48" pos:end="181:48">+</operator> <name pos:start="181:50" pos:end="181:50">i</name></expr></argument>, <argument pos:start="181:53" pos:end="181:53"><expr pos:start="181:53" pos:end="181:53"><literal type="number" pos:start="181:53" pos:end="181:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="189:5" pos:end="195:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:29">(<expr pos:start="189:9" pos:end="189:28"><name pos:start="189:9" pos:end="189:28">has_msr_hv_hypercall</name></expr>)</condition> <block pos:start="189:31" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:58">

        <expr_stmt pos:start="191:9" pos:end="191:56"><expr pos:start="191:9" pos:end="191:55"><call pos:start="191:9" pos:end="191:55"><name pos:start="191:9" pos:end="191:25">kvm_msr_entry_add</name><argument_list pos:start="191:26" pos:end="191:55">(<argument pos:start="191:27" pos:end="191:29"><expr pos:start="191:27" pos:end="191:29"><name pos:start="191:27" pos:end="191:29">cpu</name></expr></argument>, <argument pos:start="191:32" pos:end="191:51"><expr pos:start="191:32" pos:end="191:51"><name pos:start="191:32" pos:end="191:51">HV_X64_MSR_HYPERCALL</name></expr></argument>, <argument pos:start="191:54" pos:end="191:54"><expr pos:start="191:54" pos:end="191:54"><literal type="number" pos:start="191:54" pos:end="191:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:58"><expr pos:start="193:9" pos:end="193:57"><call pos:start="193:9" pos:end="193:57"><name pos:start="193:9" pos:end="193:25">kvm_msr_entry_add</name><argument_list pos:start="193:26" pos:end="193:57">(<argument pos:start="193:27" pos:end="193:29"><expr pos:start="193:27" pos:end="193:29"><name pos:start="193:27" pos:end="193:29">cpu</name></expr></argument>, <argument pos:start="193:32" pos:end="193:53"><expr pos:start="193:32" pos:end="193:53"><name pos:start="193:32" pos:end="193:53">HV_X64_MSR_GUEST_OS_ID</name></expr></argument>, <argument pos:start="193:56" pos:end="193:56"><expr pos:start="193:56" pos:end="193:56"><literal type="number" pos:start="193:56" pos:end="193:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="201:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:26">(<expr pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:11">cpu</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:25">hyperv_vapic</name></name></expr>)</condition> <block pos:start="197:28" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:63">

        <expr_stmt pos:start="199:9" pos:end="199:63"><expr pos:start="199:9" pos:end="199:62"><call pos:start="199:9" pos:end="199:62"><name pos:start="199:9" pos:end="199:25">kvm_msr_entry_add</name><argument_list pos:start="199:26" pos:end="199:62">(<argument pos:start="199:27" pos:end="199:29"><expr pos:start="199:27" pos:end="199:29"><name pos:start="199:27" pos:end="199:29">cpu</name></expr></argument>, <argument pos:start="199:32" pos:end="199:58"><expr pos:start="199:32" pos:end="199:58"><name pos:start="199:32" pos:end="199:58">HV_X64_MSR_APIC_ASSIST_PAGE</name></expr></argument>, <argument pos:start="199:61" pos:end="199:61"><expr pos:start="199:61" pos:end="199:61"><literal type="number" pos:start="199:61" pos:end="199:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="203:5" pos:end="207:5"><if pos:start="203:5" pos:end="207:5">if <condition pos:start="203:8" pos:end="203:25">(<expr pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:11">cpu</name><operator pos:start="203:12" pos:end="203:13">-&gt;</operator><name pos:start="203:14" pos:end="203:24">hyperv_time</name></name></expr>)</condition> <block pos:start="203:27" pos:end="207:5">{<block_content pos:start="205:9" pos:end="205:60">

        <expr_stmt pos:start="205:9" pos:end="205:60"><expr pos:start="205:9" pos:end="205:59"><call pos:start="205:9" pos:end="205:59"><name pos:start="205:9" pos:end="205:25">kvm_msr_entry_add</name><argument_list pos:start="205:26" pos:end="205:59">(<argument pos:start="205:27" pos:end="205:29"><expr pos:start="205:27" pos:end="205:29"><name pos:start="205:27" pos:end="205:29">cpu</name></expr></argument>, <argument pos:start="205:32" pos:end="205:55"><expr pos:start="205:32" pos:end="205:55"><name pos:start="205:32" pos:end="205:55">HV_X64_MSR_REFERENCE_TSC</name></expr></argument>, <argument pos:start="205:58" pos:end="205:58"><expr pos:start="205:58" pos:end="205:58"><literal type="number" pos:start="205:58" pos:end="205:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="209:5" pos:end="221:5"><if pos:start="209:5" pos:end="221:5">if <condition pos:start="209:8" pos:end="209:25">(<expr pos:start="209:9" pos:end="209:24"><name pos:start="209:9" pos:end="209:24">has_msr_hv_crash</name></expr>)</condition> <block pos:start="209:27" pos:end="221:5">{<block_content pos:start="211:9" pos:end="219:9">

        <decl_stmt pos:start="211:9" pos:end="211:14"><decl pos:start="211:9" pos:end="211:13"><type pos:start="211:9" pos:end="211:11"><name pos:start="211:9" pos:end="211:11">int</name></type> <name pos:start="211:13" pos:end="211:13">j</name></decl>;</decl_stmt>



        <for pos:start="215:9" pos:end="219:9">for <control pos:start="215:13" pos:end="215:45">(<init pos:start="215:14" pos:end="215:19"><expr pos:start="215:14" pos:end="215:18"><name pos:start="215:14" pos:end="215:14">j</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="number" pos:start="215:18" pos:end="215:18">0</literal></expr>;</init> <condition pos:start="215:21" pos:end="215:40"><expr pos:start="215:21" pos:end="215:39"><name pos:start="215:21" pos:end="215:21">j</name> <operator pos:start="215:23" pos:end="215:23">&lt;</operator> <name pos:start="215:25" pos:end="215:39">HV_CRASH_PARAMS</name></expr>;</condition> <incr pos:start="215:42" pos:end="215:44"><expr pos:start="215:42" pos:end="215:44"><name pos:start="215:42" pos:end="215:42">j</name><operator pos:start="215:43" pos:end="215:44">++</operator></expr></incr>)</control> <block pos:start="215:47" pos:end="219:9">{<block_content pos:start="217:13" pos:end="217:63">

            <expr_stmt pos:start="217:13" pos:end="217:63"><expr pos:start="217:13" pos:end="217:62"><call pos:start="217:13" pos:end="217:62"><name pos:start="217:13" pos:end="217:29">kvm_msr_entry_add</name><argument_list pos:start="217:30" pos:end="217:62">(<argument pos:start="217:31" pos:end="217:33"><expr pos:start="217:31" pos:end="217:33"><name pos:start="217:31" pos:end="217:33">cpu</name></expr></argument>, <argument pos:start="217:36" pos:end="217:58"><expr pos:start="217:36" pos:end="217:58"><name pos:start="217:36" pos:end="217:54">HV_X64_MSR_CRASH_P0</name> <operator pos:start="217:56" pos:end="217:56">+</operator> <name pos:start="217:58" pos:end="217:58">j</name></expr></argument>, <argument pos:start="217:61" pos:end="217:61"><expr pos:start="217:61" pos:end="217:61"><literal type="number" pos:start="217:61" pos:end="217:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:27">(<expr pos:start="223:9" pos:end="223:26"><name pos:start="223:9" pos:end="223:26">has_msr_hv_runtime</name></expr>)</condition> <block pos:start="223:29" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:57">

        <expr_stmt pos:start="225:9" pos:end="225:57"><expr pos:start="225:9" pos:end="225:56"><call pos:start="225:9" pos:end="225:56"><name pos:start="225:9" pos:end="225:25">kvm_msr_entry_add</name><argument_list pos:start="225:26" pos:end="225:56">(<argument pos:start="225:27" pos:end="225:29"><expr pos:start="225:27" pos:end="225:29"><name pos:start="225:27" pos:end="225:29">cpu</name></expr></argument>, <argument pos:start="225:32" pos:end="225:52"><expr pos:start="225:32" pos:end="225:52"><name pos:start="225:32" pos:end="225:52">HV_X64_MSR_VP_RUNTIME</name></expr></argument>, <argument pos:start="225:55" pos:end="225:55"><expr pos:start="225:55" pos:end="225:55"><literal type="number" pos:start="225:55" pos:end="225:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="229:5" pos:end="247:5"><if pos:start="229:5" pos:end="247:5">if <condition pos:start="229:8" pos:end="229:26">(<expr pos:start="229:9" pos:end="229:25"><name pos:start="229:9" pos:end="229:25"><name pos:start="229:9" pos:end="229:11">cpu</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:25">hyperv_synic</name></name></expr>)</condition> <block pos:start="229:28" pos:end="247:5">{<block_content pos:start="231:9" pos:end="245:9">

        <decl_stmt pos:start="231:9" pos:end="231:21"><decl pos:start="231:9" pos:end="231:20"><type pos:start="231:9" pos:end="231:16"><name pos:start="231:9" pos:end="231:16">uint32_t</name></type> <name pos:start="231:18" pos:end="231:20">msr</name></decl>;</decl_stmt>



        <expr_stmt pos:start="235:9" pos:end="235:55"><expr pos:start="235:9" pos:end="235:54"><call pos:start="235:9" pos:end="235:54"><name pos:start="235:9" pos:end="235:25">kvm_msr_entry_add</name><argument_list pos:start="235:26" pos:end="235:54">(<argument pos:start="235:27" pos:end="235:29"><expr pos:start="235:27" pos:end="235:29"><name pos:start="235:27" pos:end="235:29">cpu</name></expr></argument>, <argument pos:start="235:32" pos:end="235:50"><expr pos:start="235:32" pos:end="235:50"><name pos:start="235:32" pos:end="235:50">HV_X64_MSR_SCONTROL</name></expr></argument>, <argument pos:start="235:53" pos:end="235:53"><expr pos:start="235:53" pos:end="235:53"><literal type="number" pos:start="235:53" pos:end="235:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:52"><expr pos:start="237:9" pos:end="237:51"><call pos:start="237:9" pos:end="237:51"><name pos:start="237:9" pos:end="237:25">kvm_msr_entry_add</name><argument_list pos:start="237:26" pos:end="237:51">(<argument pos:start="237:27" pos:end="237:29"><expr pos:start="237:27" pos:end="237:29"><name pos:start="237:27" pos:end="237:29">cpu</name></expr></argument>, <argument pos:start="237:32" pos:end="237:47"><expr pos:start="237:32" pos:end="237:47"><name pos:start="237:32" pos:end="237:47">HV_X64_MSR_SIEFP</name></expr></argument>, <argument pos:start="237:50" pos:end="237:50"><expr pos:start="237:50" pos:end="237:50"><literal type="number" pos:start="237:50" pos:end="237:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:51"><expr pos:start="239:9" pos:end="239:50"><call pos:start="239:9" pos:end="239:50"><name pos:start="239:9" pos:end="239:25">kvm_msr_entry_add</name><argument_list pos:start="239:26" pos:end="239:50">(<argument pos:start="239:27" pos:end="239:29"><expr pos:start="239:27" pos:end="239:29"><name pos:start="239:27" pos:end="239:29">cpu</name></expr></argument>, <argument pos:start="239:32" pos:end="239:46"><expr pos:start="239:32" pos:end="239:46"><name pos:start="239:32" pos:end="239:46">HV_X64_MSR_SIMP</name></expr></argument>, <argument pos:start="239:49" pos:end="239:49"><expr pos:start="239:49" pos:end="239:49"><literal type="number" pos:start="239:49" pos:end="239:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="241:9" pos:end="245:9">for <control pos:start="241:13" pos:end="241:69">(<init pos:start="241:14" pos:end="241:36"><expr pos:start="241:14" pos:end="241:35"><name pos:start="241:14" pos:end="241:16">msr</name> <operator pos:start="241:18" pos:end="241:18">=</operator> <name pos:start="241:20" pos:end="241:35">HV_X64_MSR_SINT0</name></expr>;</init> <condition pos:start="241:38" pos:end="241:62"><expr pos:start="241:38" pos:end="241:61"><name pos:start="241:38" pos:end="241:40">msr</name> <operator pos:start="241:42" pos:end="241:43">&lt;=</operator> <name pos:start="241:45" pos:end="241:61">HV_X64_MSR_SINT15</name></expr>;</condition> <incr pos:start="241:64" pos:end="241:68"><expr pos:start="241:64" pos:end="241:68"><name pos:start="241:64" pos:end="241:66">msr</name><operator pos:start="241:67" pos:end="241:68">++</operator></expr></incr>)</control> <block pos:start="241:71" pos:end="245:9">{<block_content pos:start="243:13" pos:end="243:43">

            <expr_stmt pos:start="243:13" pos:end="243:43"><expr pos:start="243:13" pos:end="243:42"><call pos:start="243:13" pos:end="243:42"><name pos:start="243:13" pos:end="243:29">kvm_msr_entry_add</name><argument_list pos:start="243:30" pos:end="243:42">(<argument pos:start="243:31" pos:end="243:33"><expr pos:start="243:31" pos:end="243:33"><name pos:start="243:31" pos:end="243:33">cpu</name></expr></argument>, <argument pos:start="243:36" pos:end="243:38"><expr pos:start="243:36" pos:end="243:38"><name pos:start="243:36" pos:end="243:38">msr</name></expr></argument>, <argument pos:start="243:41" pos:end="243:41"><expr pos:start="243:41" pos:end="243:41"><literal type="number" pos:start="243:41" pos:end="243:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="249:5" pos:end="263:5"><if pos:start="249:5" pos:end="263:5">if <condition pos:start="249:8" pos:end="249:26">(<expr pos:start="249:9" pos:end="249:25"><name pos:start="249:9" pos:end="249:25">has_msr_hv_stimer</name></expr>)</condition> <block pos:start="249:28" pos:end="263:5">{<block_content pos:start="251:9" pos:end="261:9">

        <decl_stmt pos:start="251:9" pos:end="251:21"><decl pos:start="251:9" pos:end="251:20"><type pos:start="251:9" pos:end="251:16"><name pos:start="251:9" pos:end="251:16">uint32_t</name></type> <name pos:start="251:18" pos:end="251:20">msr</name></decl>;</decl_stmt>



        <for pos:start="255:9" pos:end="261:9">for <control pos:start="255:13" pos:end="257:19">(<init pos:start="255:14" pos:end="255:45"><expr pos:start="255:14" pos:end="255:44"><name pos:start="255:14" pos:end="255:16">msr</name> <operator pos:start="255:18" pos:end="255:18">=</operator> <name pos:start="255:20" pos:end="255:44">HV_X64_MSR_STIMER0_CONFIG</name></expr>;</init> <condition pos:start="255:47" pos:end="255:78"><expr pos:start="255:47" pos:end="255:77"><name pos:start="255:47" pos:end="255:49">msr</name> <operator pos:start="255:51" pos:end="255:52">&lt;=</operator> <name pos:start="255:54" pos:end="255:77">HV_X64_MSR_STIMER3_COUNT</name></expr>;</condition>

             <incr pos:start="257:14" pos:end="257:18"><expr pos:start="257:14" pos:end="257:18"><name pos:start="257:14" pos:end="257:16">msr</name><operator pos:start="257:17" pos:end="257:18">++</operator></expr></incr>)</control> <block pos:start="257:21" pos:end="261:9">{<block_content pos:start="259:13" pos:end="259:43">

            <expr_stmt pos:start="259:13" pos:end="259:43"><expr pos:start="259:13" pos:end="259:42"><call pos:start="259:13" pos:end="259:42"><name pos:start="259:13" pos:end="259:29">kvm_msr_entry_add</name><argument_list pos:start="259:30" pos:end="259:42">(<argument pos:start="259:31" pos:end="259:33"><expr pos:start="259:31" pos:end="259:33"><name pos:start="259:31" pos:end="259:33">cpu</name></expr></argument>, <argument pos:start="259:36" pos:end="259:38"><expr pos:start="259:36" pos:end="259:38"><name pos:start="259:36" pos:end="259:38">msr</name></expr></argument>, <argument pos:start="259:41" pos:end="259:41"><expr pos:start="259:41" pos:end="259:41"><literal type="number" pos:start="259:41" pos:end="259:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="265:5" pos:end="299:5"><if pos:start="265:5" pos:end="299:5">if <condition pos:start="265:8" pos:end="265:47">(<expr pos:start="265:9" pos:end="265:46"><name pos:start="265:9" pos:end="265:33"><name pos:start="265:9" pos:end="265:11">env</name><operator pos:start="265:12" pos:end="265:13">-&gt;</operator><name pos:start="265:14" pos:end="265:21">features</name><index pos:start="265:22" pos:end="265:33">[<expr pos:start="265:23" pos:end="265:32"><name pos:start="265:23" pos:end="265:32">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="265:35" pos:end="265:35">&amp;</operator> <name pos:start="265:37" pos:end="265:46">CPUID_MTRR</name></expr>)</condition> <block pos:start="265:49" pos:end="299:5">{<block_content pos:start="267:9" pos:end="297:9">

        <expr_stmt pos:start="267:9" pos:end="267:51"><expr pos:start="267:9" pos:end="267:50"><call pos:start="267:9" pos:end="267:50"><name pos:start="267:9" pos:end="267:25">kvm_msr_entry_add</name><argument_list pos:start="267:26" pos:end="267:50">(<argument pos:start="267:27" pos:end="267:29"><expr pos:start="267:27" pos:end="267:29"><name pos:start="267:27" pos:end="267:29">cpu</name></expr></argument>, <argument pos:start="267:32" pos:end="267:46"><expr pos:start="267:32" pos:end="267:46"><name pos:start="267:32" pos:end="267:46">MSR_MTRRdefType</name></expr></argument>, <argument pos:start="267:49" pos:end="267:49"><expr pos:start="267:49" pos:end="267:49"><literal type="number" pos:start="267:49" pos:end="267:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:56"><expr pos:start="269:9" pos:end="269:55"><call pos:start="269:9" pos:end="269:55"><name pos:start="269:9" pos:end="269:25">kvm_msr_entry_add</name><argument_list pos:start="269:26" pos:end="269:55">(<argument pos:start="269:27" pos:end="269:29"><expr pos:start="269:27" pos:end="269:29"><name pos:start="269:27" pos:end="269:29">cpu</name></expr></argument>, <argument pos:start="269:32" pos:end="269:51"><expr pos:start="269:32" pos:end="269:51"><name pos:start="269:32" pos:end="269:51">MSR_MTRRfix64K_00000</name></expr></argument>, <argument pos:start="269:54" pos:end="269:54"><expr pos:start="269:54" pos:end="269:54"><literal type="number" pos:start="269:54" pos:end="269:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:56"><expr pos:start="271:9" pos:end="271:55"><call pos:start="271:9" pos:end="271:55"><name pos:start="271:9" pos:end="271:25">kvm_msr_entry_add</name><argument_list pos:start="271:26" pos:end="271:55">(<argument pos:start="271:27" pos:end="271:29"><expr pos:start="271:27" pos:end="271:29"><name pos:start="271:27" pos:end="271:29">cpu</name></expr></argument>, <argument pos:start="271:32" pos:end="271:51"><expr pos:start="271:32" pos:end="271:51"><name pos:start="271:32" pos:end="271:51">MSR_MTRRfix16K_80000</name></expr></argument>, <argument pos:start="271:54" pos:end="271:54"><expr pos:start="271:54" pos:end="271:54"><literal type="number" pos:start="271:54" pos:end="271:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:56"><expr pos:start="273:9" pos:end="273:55"><call pos:start="273:9" pos:end="273:55"><name pos:start="273:9" pos:end="273:25">kvm_msr_entry_add</name><argument_list pos:start="273:26" pos:end="273:55">(<argument pos:start="273:27" pos:end="273:29"><expr pos:start="273:27" pos:end="273:29"><name pos:start="273:27" pos:end="273:29">cpu</name></expr></argument>, <argument pos:start="273:32" pos:end="273:51"><expr pos:start="273:32" pos:end="273:51"><name pos:start="273:32" pos:end="273:51">MSR_MTRRfix16K_A0000</name></expr></argument>, <argument pos:start="273:54" pos:end="273:54"><expr pos:start="273:54" pos:end="273:54"><literal type="number" pos:start="273:54" pos:end="273:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:55"><expr pos:start="275:9" pos:end="275:54"><call pos:start="275:9" pos:end="275:54"><name pos:start="275:9" pos:end="275:25">kvm_msr_entry_add</name><argument_list pos:start="275:26" pos:end="275:54">(<argument pos:start="275:27" pos:end="275:29"><expr pos:start="275:27" pos:end="275:29"><name pos:start="275:27" pos:end="275:29">cpu</name></expr></argument>, <argument pos:start="275:32" pos:end="275:50"><expr pos:start="275:32" pos:end="275:50"><name pos:start="275:32" pos:end="275:50">MSR_MTRRfix4K_C0000</name></expr></argument>, <argument pos:start="275:53" pos:end="275:53"><expr pos:start="275:53" pos:end="275:53"><literal type="number" pos:start="275:53" pos:end="275:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:55"><expr pos:start="277:9" pos:end="277:54"><call pos:start="277:9" pos:end="277:54"><name pos:start="277:9" pos:end="277:25">kvm_msr_entry_add</name><argument_list pos:start="277:26" pos:end="277:54">(<argument pos:start="277:27" pos:end="277:29"><expr pos:start="277:27" pos:end="277:29"><name pos:start="277:27" pos:end="277:29">cpu</name></expr></argument>, <argument pos:start="277:32" pos:end="277:50"><expr pos:start="277:32" pos:end="277:50"><name pos:start="277:32" pos:end="277:50">MSR_MTRRfix4K_C8000</name></expr></argument>, <argument pos:start="277:53" pos:end="277:53"><expr pos:start="277:53" pos:end="277:53"><literal type="number" pos:start="277:53" pos:end="277:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:55"><expr pos:start="279:9" pos:end="279:54"><call pos:start="279:9" pos:end="279:54"><name pos:start="279:9" pos:end="279:25">kvm_msr_entry_add</name><argument_list pos:start="279:26" pos:end="279:54">(<argument pos:start="279:27" pos:end="279:29"><expr pos:start="279:27" pos:end="279:29"><name pos:start="279:27" pos:end="279:29">cpu</name></expr></argument>, <argument pos:start="279:32" pos:end="279:50"><expr pos:start="279:32" pos:end="279:50"><name pos:start="279:32" pos:end="279:50">MSR_MTRRfix4K_D0000</name></expr></argument>, <argument pos:start="279:53" pos:end="279:53"><expr pos:start="279:53" pos:end="279:53"><literal type="number" pos:start="279:53" pos:end="279:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:55"><expr pos:start="281:9" pos:end="281:54"><call pos:start="281:9" pos:end="281:54"><name pos:start="281:9" pos:end="281:25">kvm_msr_entry_add</name><argument_list pos:start="281:26" pos:end="281:54">(<argument pos:start="281:27" pos:end="281:29"><expr pos:start="281:27" pos:end="281:29"><name pos:start="281:27" pos:end="281:29">cpu</name></expr></argument>, <argument pos:start="281:32" pos:end="281:50"><expr pos:start="281:32" pos:end="281:50"><name pos:start="281:32" pos:end="281:50">MSR_MTRRfix4K_D8000</name></expr></argument>, <argument pos:start="281:53" pos:end="281:53"><expr pos:start="281:53" pos:end="281:53"><literal type="number" pos:start="281:53" pos:end="281:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:55"><expr pos:start="283:9" pos:end="283:54"><call pos:start="283:9" pos:end="283:54"><name pos:start="283:9" pos:end="283:25">kvm_msr_entry_add</name><argument_list pos:start="283:26" pos:end="283:54">(<argument pos:start="283:27" pos:end="283:29"><expr pos:start="283:27" pos:end="283:29"><name pos:start="283:27" pos:end="283:29">cpu</name></expr></argument>, <argument pos:start="283:32" pos:end="283:50"><expr pos:start="283:32" pos:end="283:50"><name pos:start="283:32" pos:end="283:50">MSR_MTRRfix4K_E0000</name></expr></argument>, <argument pos:start="283:53" pos:end="283:53"><expr pos:start="283:53" pos:end="283:53"><literal type="number" pos:start="283:53" pos:end="283:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:55"><expr pos:start="285:9" pos:end="285:54"><call pos:start="285:9" pos:end="285:54"><name pos:start="285:9" pos:end="285:25">kvm_msr_entry_add</name><argument_list pos:start="285:26" pos:end="285:54">(<argument pos:start="285:27" pos:end="285:29"><expr pos:start="285:27" pos:end="285:29"><name pos:start="285:27" pos:end="285:29">cpu</name></expr></argument>, <argument pos:start="285:32" pos:end="285:50"><expr pos:start="285:32" pos:end="285:50"><name pos:start="285:32" pos:end="285:50">MSR_MTRRfix4K_E8000</name></expr></argument>, <argument pos:start="285:53" pos:end="285:53"><expr pos:start="285:53" pos:end="285:53"><literal type="number" pos:start="285:53" pos:end="285:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:55"><expr pos:start="287:9" pos:end="287:54"><call pos:start="287:9" pos:end="287:54"><name pos:start="287:9" pos:end="287:25">kvm_msr_entry_add</name><argument_list pos:start="287:26" pos:end="287:54">(<argument pos:start="287:27" pos:end="287:29"><expr pos:start="287:27" pos:end="287:29"><name pos:start="287:27" pos:end="287:29">cpu</name></expr></argument>, <argument pos:start="287:32" pos:end="287:50"><expr pos:start="287:32" pos:end="287:50"><name pos:start="287:32" pos:end="287:50">MSR_MTRRfix4K_F0000</name></expr></argument>, <argument pos:start="287:53" pos:end="287:53"><expr pos:start="287:53" pos:end="287:53"><literal type="number" pos:start="287:53" pos:end="287:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:55"><expr pos:start="289:9" pos:end="289:54"><call pos:start="289:9" pos:end="289:54"><name pos:start="289:9" pos:end="289:25">kvm_msr_entry_add</name><argument_list pos:start="289:26" pos:end="289:54">(<argument pos:start="289:27" pos:end="289:29"><expr pos:start="289:27" pos:end="289:29"><name pos:start="289:27" pos:end="289:29">cpu</name></expr></argument>, <argument pos:start="289:32" pos:end="289:50"><expr pos:start="289:32" pos:end="289:50"><name pos:start="289:32" pos:end="289:50">MSR_MTRRfix4K_F8000</name></expr></argument>, <argument pos:start="289:53" pos:end="289:53"><expr pos:start="289:53" pos:end="289:53"><literal type="number" pos:start="289:53" pos:end="289:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="291:9" pos:end="297:9">for <control pos:start="291:13" pos:end="291:46">(<init pos:start="291:14" pos:end="291:19"><expr pos:start="291:14" pos:end="291:18"><name pos:start="291:14" pos:end="291:14">i</name> <operator pos:start="291:16" pos:end="291:16">=</operator> <literal type="number" pos:start="291:18" pos:end="291:18">0</literal></expr>;</init> <condition pos:start="291:21" pos:end="291:41"><expr pos:start="291:21" pos:end="291:40"><name pos:start="291:21" pos:end="291:21">i</name> <operator pos:start="291:23" pos:end="291:23">&lt;</operator> <name pos:start="291:25" pos:end="291:40">MSR_MTRRcap_VCNT</name></expr>;</condition> <incr pos:start="291:43" pos:end="291:45"><expr pos:start="291:43" pos:end="291:45"><name pos:start="291:43" pos:end="291:43">i</name><operator pos:start="291:44" pos:end="291:45">++</operator></expr></incr>)</control> <block pos:start="291:48" pos:end="297:9">{<block_content pos:start="293:13" pos:end="295:59">

            <expr_stmt pos:start="293:13" pos:end="293:59"><expr pos:start="293:13" pos:end="293:58"><call pos:start="293:13" pos:end="293:58"><name pos:start="293:13" pos:end="293:29">kvm_msr_entry_add</name><argument_list pos:start="293:30" pos:end="293:58">(<argument pos:start="293:31" pos:end="293:33"><expr pos:start="293:31" pos:end="293:33"><name pos:start="293:31" pos:end="293:33">cpu</name></expr></argument>, <argument pos:start="293:36" pos:end="293:54"><expr pos:start="293:36" pos:end="293:54"><call pos:start="293:36" pos:end="293:54"><name pos:start="293:36" pos:end="293:51">MSR_MTRRphysBase</name><argument_list pos:start="293:52" pos:end="293:54">(<argument pos:start="293:53" pos:end="293:53"><expr pos:start="293:53" pos:end="293:53"><name pos:start="293:53" pos:end="293:53">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="293:57" pos:end="293:57"><expr pos:start="293:57" pos:end="293:57"><literal type="number" pos:start="293:57" pos:end="293:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:59"><expr pos:start="295:13" pos:end="295:58"><call pos:start="295:13" pos:end="295:58"><name pos:start="295:13" pos:end="295:29">kvm_msr_entry_add</name><argument_list pos:start="295:30" pos:end="295:58">(<argument pos:start="295:31" pos:end="295:33"><expr pos:start="295:31" pos:end="295:33"><name pos:start="295:31" pos:end="295:33">cpu</name></expr></argument>, <argument pos:start="295:36" pos:end="295:54"><expr pos:start="295:36" pos:end="295:54"><call pos:start="295:36" pos:end="295:54"><name pos:start="295:36" pos:end="295:51">MSR_MTRRphysMask</name><argument_list pos:start="295:52" pos:end="295:54">(<argument pos:start="295:53" pos:end="295:53"><expr pos:start="295:53" pos:end="295:53"><name pos:start="295:53" pos:end="295:53">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="295:57" pos:end="295:57"><expr pos:start="295:57" pos:end="295:57"><literal type="number" pos:start="295:57" pos:end="295:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:67"><expr pos:start="303:5" pos:end="303:66"><name pos:start="303:5" pos:end="303:7">ret</name> <operator pos:start="303:9" pos:end="303:9">=</operator> <call pos:start="303:11" pos:end="303:66"><name pos:start="303:11" pos:end="303:24">kvm_vcpu_ioctl</name><argument_list pos:start="303:25" pos:end="303:66">(<argument pos:start="303:26" pos:end="303:33"><expr pos:start="303:26" pos:end="303:33"><call pos:start="303:26" pos:end="303:33"><name pos:start="303:26" pos:end="303:28">CPU</name><argument_list pos:start="303:29" pos:end="303:33">(<argument pos:start="303:30" pos:end="303:32"><expr pos:start="303:30" pos:end="303:32"><name pos:start="303:30" pos:end="303:32">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="303:36" pos:end="303:47"><expr pos:start="303:36" pos:end="303:47"><name pos:start="303:36" pos:end="303:47">KVM_GET_MSRS</name></expr></argument>, <argument pos:start="303:50" pos:end="303:65"><expr pos:start="303:50" pos:end="303:65"><name pos:start="303:50" pos:end="303:65"><name pos:start="303:50" pos:end="303:52">cpu</name><operator pos:start="303:53" pos:end="303:54">-&gt;</operator><name pos:start="303:55" pos:end="303:65">kvm_msr_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="305:5" pos:end="309:5"><if pos:start="305:5" pos:end="309:5">if <condition pos:start="305:8" pos:end="305:16">(<expr pos:start="305:9" pos:end="305:15"><name pos:start="305:9" pos:end="305:11">ret</name> <operator pos:start="305:13" pos:end="305:13">&lt;</operator> <literal type="number" pos:start="305:15" pos:end="305:15">0</literal></expr>)</condition> <block pos:start="305:18" pos:end="309:5">{<block_content pos:start="307:9" pos:end="307:19">

        <return pos:start="307:9" pos:end="307:19">return <expr pos:start="307:16" pos:end="307:18"><name pos:start="307:16" pos:end="307:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="313:5" pos:end="321:5"><if pos:start="313:5" pos:end="321:5">if <condition pos:start="313:8" pos:end="313:38">(<expr pos:start="313:9" pos:end="313:37"><name pos:start="313:9" pos:end="313:11">ret</name> <operator pos:start="313:13" pos:end="313:13">&lt;</operator> <name pos:start="313:15" pos:end="313:37"><name pos:start="313:15" pos:end="313:17">cpu</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:30">kvm_msr_buf</name><operator pos:start="313:31" pos:end="313:32">-&gt;</operator><name pos:start="313:33" pos:end="313:37">nmsrs</name></name></expr>)</condition> <block pos:start="313:40" pos:end="321:5">{<block_content pos:start="315:9" pos:end="319:41">

        <decl_stmt pos:start="315:9" pos:end="315:66"><decl pos:start="315:9" pos:end="315:65"><type pos:start="315:9" pos:end="315:30"><name pos:start="315:9" pos:end="315:28"><name pos:start="315:9" pos:end="315:14">struct</name> <name pos:start="315:16" pos:end="315:28">kvm_msr_entry</name></name> <modifier pos:start="315:30" pos:end="315:30">*</modifier></type><name pos:start="315:31" pos:end="315:31">e</name> <init pos:start="315:33" pos:end="315:65">= <expr pos:start="315:35" pos:end="315:65"><operator pos:start="315:35" pos:end="315:35">&amp;</operator><name pos:start="315:36" pos:end="315:65"><name pos:start="315:36" pos:end="315:38">cpu</name><operator pos:start="315:39" pos:end="315:40">-&gt;</operator><name pos:start="315:41" pos:end="315:51">kvm_msr_buf</name><operator pos:start="315:52" pos:end="315:53">-&gt;</operator><name pos:start="315:54" pos:end="315:60">entries</name><index pos:start="315:61" pos:end="315:65">[<expr pos:start="315:62" pos:end="315:64"><name pos:start="315:62" pos:end="315:64">ret</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="317:9" pos:end="319:41"><expr pos:start="317:9" pos:end="319:40"><call pos:start="317:9" pos:end="319:40"><name pos:start="317:9" pos:end="317:20">error_report</name><argument_list pos:start="317:21" pos:end="319:40">(<argument pos:start="317:22" pos:end="317:58"><expr pos:start="317:22" pos:end="317:58"><literal type="string" pos:start="317:22" pos:end="317:51">"error: failed to get MSR 0x%"</literal> <name pos:start="317:53" pos:end="317:58">PRIx32</name></expr></argument>,

                     <argument pos:start="319:22" pos:end="319:39"><expr pos:start="319:22" pos:end="319:39"><operator pos:start="319:22" pos:end="319:22">(</operator><name pos:start="319:23" pos:end="319:30">uint32_t</name><operator pos:start="319:31" pos:end="319:31">)</operator><name pos:start="319:32" pos:end="319:39"><name pos:start="319:32" pos:end="319:32">e</name><operator pos:start="319:33" pos:end="319:34">-&gt;</operator><name pos:start="319:35" pos:end="319:39">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="325:5" pos:end="325:43"><expr pos:start="325:5" pos:end="325:42"><call pos:start="325:5" pos:end="325:42"><name pos:start="325:5" pos:end="325:10">assert</name><argument_list pos:start="325:11" pos:end="325:42">(<argument pos:start="325:12" pos:end="325:41"><expr pos:start="325:12" pos:end="325:41"><name pos:start="325:12" pos:end="325:14">ret</name> <operator pos:start="325:16" pos:end="325:17">==</operator> <name pos:start="325:19" pos:end="325:41"><name pos:start="325:19" pos:end="325:21">cpu</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:34">kvm_msr_buf</name><operator pos:start="325:35" pos:end="325:36">-&gt;</operator><name pos:start="325:37" pos:end="325:41">nmsrs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="327:5" pos:end="355:7">/*

     * MTRR masks: Each mask consists of 5 parts

     * a  10..0: must be zero

     * b  11   : valid bit

     * c n-1.12: actual mask bits

     * d  51..n: reserved must be zero

     * e  63.52: reserved must be zero

     *

     * 'n' is the number of physical bits supported by the CPU and is

     * apparently always &lt;= 52.   We know our 'n' but don't know what

     * the destinations 'n' is; it might be smaller, in which case

     * it masks (c) on loading. It might be larger, in which case

     * we fill 'd' so that d..c is consistent irrespetive of the 'n'

     * we're migrating to.

     */</comment>



    <if_stmt pos:start="359:5" pos:end="371:5"><if pos:start="359:5" pos:end="367:5">if <condition pos:start="359:8" pos:end="359:28">(<expr pos:start="359:9" pos:end="359:27"><name pos:start="359:9" pos:end="359:27"><name pos:start="359:9" pos:end="359:11">cpu</name><operator pos:start="359:12" pos:end="359:13">-&gt;</operator><name pos:start="359:14" pos:end="359:27">fill_mtrr_mask</name></name></expr>)</condition> <block pos:start="359:30" pos:end="367:5">{<block_content pos:start="361:9" pos:end="365:77">

        <expr_stmt pos:start="361:9" pos:end="361:60"><expr pos:start="361:9" pos:end="361:59"><call pos:start="361:9" pos:end="361:59"><name pos:start="361:9" pos:end="361:25">QEMU_BUILD_BUG_ON</name><argument_list pos:start="361:26" pos:end="361:59">(<argument pos:start="361:27" pos:end="361:58"><expr pos:start="361:27" pos:end="361:58"><name pos:start="361:27" pos:end="361:53">TARGET_PHYS_ADDR_SPACE_BITS</name> <operator pos:start="361:55" pos:end="361:55">&gt;</operator> <literal type="number" pos:start="361:57" pos:end="361:58">52</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:62"><expr pos:start="363:9" pos:end="363:61"><call pos:start="363:9" pos:end="363:61"><name pos:start="363:9" pos:end="363:14">assert</name><argument_list pos:start="363:15" pos:end="363:61">(<argument pos:start="363:16" pos:end="363:60"><expr pos:start="363:16" pos:end="363:60"><name pos:start="363:16" pos:end="363:29"><name pos:start="363:16" pos:end="363:18">cpu</name><operator pos:start="363:19" pos:end="363:20">-&gt;</operator><name pos:start="363:21" pos:end="363:29">phys_bits</name></name> <operator pos:start="363:31" pos:end="363:32">&lt;=</operator> <name pos:start="363:34" pos:end="363:60">TARGET_PHYS_ADDR_SPACE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:77"><expr pos:start="365:9" pos:end="365:76"><name pos:start="365:9" pos:end="365:21">mtrr_top_bits</name> <operator pos:start="365:23" pos:end="365:23">=</operator> <call pos:start="365:25" pos:end="365:76"><name pos:start="365:25" pos:end="365:39">MAKE_64BIT_MASK</name><argument_list pos:start="365:40" pos:end="365:76">(<argument pos:start="365:41" pos:end="365:54"><expr pos:start="365:41" pos:end="365:54"><name pos:start="365:41" pos:end="365:54"><name pos:start="365:41" pos:end="365:43">cpu</name><operator pos:start="365:44" pos:end="365:45">-&gt;</operator><name pos:start="365:46" pos:end="365:54">phys_bits</name></name></expr></argument>, <argument pos:start="365:57" pos:end="365:75"><expr pos:start="365:57" pos:end="365:75"><literal type="number" pos:start="365:57" pos:end="365:60">52</literal> <operator pos:start="365:60" pos:end="365:60">-</operator> <name pos:start="365:62" pos:end="365:75"><name pos:start="365:62" pos:end="365:64">cpu</name><operator pos:start="365:65" pos:end="365:66">-&gt;</operator><name pos:start="365:67" pos:end="365:75">phys_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="367:7" pos:end="371:5">else <block pos:start="367:12" pos:end="371:5">{<block_content pos:start="369:9" pos:end="369:26">

        <expr_stmt pos:start="369:9" pos:end="369:26"><expr pos:start="369:9" pos:end="369:25"><name pos:start="369:9" pos:end="369:21">mtrr_top_bits</name> <operator pos:start="369:23" pos:end="369:23">=</operator> <literal type="number" pos:start="369:25" pos:end="369:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="375:5" pos:end="779:5">for <control pos:start="375:9" pos:end="375:29">(<init pos:start="375:10" pos:end="375:15"><expr pos:start="375:10" pos:end="375:14"><name pos:start="375:10" pos:end="375:10">i</name> <operator pos:start="375:12" pos:end="375:12">=</operator> <literal type="number" pos:start="375:14" pos:end="375:14">0</literal></expr>;</init> <condition pos:start="375:17" pos:end="375:24"><expr pos:start="375:17" pos:end="375:23"><name pos:start="375:17" pos:end="375:17">i</name> <operator pos:start="375:19" pos:end="375:19">&lt;</operator> <name pos:start="375:21" pos:end="375:23">ret</name></expr>;</condition> <incr pos:start="375:26" pos:end="375:28"><expr pos:start="375:26" pos:end="375:28"><name pos:start="375:26" pos:end="375:26">i</name><operator pos:start="375:27" pos:end="375:28">++</operator></expr></incr>)</control> <block pos:start="375:31" pos:end="779:5">{<block_content pos:start="377:9" pos:end="777:9">

        <decl_stmt pos:start="377:9" pos:end="377:39"><decl pos:start="377:9" pos:end="377:38"><type pos:start="377:9" pos:end="377:16"><name pos:start="377:9" pos:end="377:16">uint32_t</name></type> <name pos:start="377:18" pos:end="377:22">index</name> <init pos:start="377:24" pos:end="377:38">= <expr pos:start="377:26" pos:end="377:38"><name pos:start="377:26" pos:end="377:32"><name pos:start="377:26" pos:end="377:29">msrs</name><index pos:start="377:30" pos:end="377:32">[<expr pos:start="377:31" pos:end="377:31"><name pos:start="377:31" pos:end="377:31">i</name></expr>]</index></name><operator pos:start="377:33" pos:end="377:33">.</operator><name pos:start="377:34" pos:end="377:38">index</name></expr></init></decl>;</decl_stmt>

        <switch pos:start="379:9" pos:end="777:9">switch <condition pos:start="379:16" pos:end="379:22">(<expr pos:start="379:17" pos:end="379:21"><name pos:start="379:17" pos:end="379:21">index</name></expr>)</condition> <block pos:start="379:24" pos:end="777:9">{<block_content pos:start="381:9" pos:end="775:18">

        <case pos:start="381:9" pos:end="381:34">case <expr pos:start="381:14" pos:end="381:33"><name pos:start="381:14" pos:end="381:33">MSR_IA32_SYSENTER_CS</name></expr>:</case>

            <expr_stmt pos:start="383:13" pos:end="383:44"><expr pos:start="383:13" pos:end="383:43"><name pos:start="383:13" pos:end="383:28"><name pos:start="383:13" pos:end="383:15">env</name><operator pos:start="383:16" pos:end="383:17">-&gt;</operator><name pos:start="383:18" pos:end="383:28">sysenter_cs</name></name> <operator pos:start="383:30" pos:end="383:30">=</operator> <name pos:start="383:32" pos:end="383:38"><name pos:start="383:32" pos:end="383:35">msrs</name><index pos:start="383:36" pos:end="383:38">[<expr pos:start="383:37" pos:end="383:37"><name pos:start="383:37" pos:end="383:37">i</name></expr>]</index></name><operator pos:start="383:39" pos:end="383:39">.</operator><name pos:start="383:40" pos:end="383:43">data</name></expr>;</expr_stmt>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <case pos:start="387:9" pos:end="387:35">case <expr pos:start="387:14" pos:end="387:34"><name pos:start="387:14" pos:end="387:34">MSR_IA32_SYSENTER_ESP</name></expr>:</case>

            <expr_stmt pos:start="389:13" pos:end="389:45"><expr pos:start="389:13" pos:end="389:44"><name pos:start="389:13" pos:end="389:29"><name pos:start="389:13" pos:end="389:15">env</name><operator pos:start="389:16" pos:end="389:17">-&gt;</operator><name pos:start="389:18" pos:end="389:29">sysenter_esp</name></name> <operator pos:start="389:31" pos:end="389:31">=</operator> <name pos:start="389:33" pos:end="389:39"><name pos:start="389:33" pos:end="389:36">msrs</name><index pos:start="389:37" pos:end="389:39">[<expr pos:start="389:38" pos:end="389:38"><name pos:start="389:38" pos:end="389:38">i</name></expr>]</index></name><operator pos:start="389:40" pos:end="389:40">.</operator><name pos:start="389:41" pos:end="389:44">data</name></expr>;</expr_stmt>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:35">case <expr pos:start="393:14" pos:end="393:34"><name pos:start="393:14" pos:end="393:34">MSR_IA32_SYSENTER_EIP</name></expr>:</case>

            <expr_stmt pos:start="395:13" pos:end="395:45"><expr pos:start="395:13" pos:end="395:44"><name pos:start="395:13" pos:end="395:29"><name pos:start="395:13" pos:end="395:15">env</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:29">sysenter_eip</name></name> <operator pos:start="395:31" pos:end="395:31">=</operator> <name pos:start="395:33" pos:end="395:39"><name pos:start="395:33" pos:end="395:36">msrs</name><index pos:start="395:37" pos:end="395:39">[<expr pos:start="395:38" pos:end="395:38"><name pos:start="395:38" pos:end="395:38">i</name></expr>]</index></name><operator pos:start="395:40" pos:end="395:40">.</operator><name pos:start="395:41" pos:end="395:44">data</name></expr>;</expr_stmt>

            <break pos:start="397:13" pos:end="397:18">break;</break>

        <case pos:start="399:9" pos:end="399:21">case <expr pos:start="399:14" pos:end="399:20"><name pos:start="399:14" pos:end="399:20">MSR_PAT</name></expr>:</case>

            <expr_stmt pos:start="401:13" pos:end="401:36"><expr pos:start="401:13" pos:end="401:35"><name pos:start="401:13" pos:end="401:20"><name pos:start="401:13" pos:end="401:15">env</name><operator pos:start="401:16" pos:end="401:17">-&gt;</operator><name pos:start="401:18" pos:end="401:20">pat</name></name> <operator pos:start="401:22" pos:end="401:22">=</operator> <name pos:start="401:24" pos:end="401:30"><name pos:start="401:24" pos:end="401:27">msrs</name><index pos:start="401:28" pos:end="401:30">[<expr pos:start="401:29" pos:end="401:29"><name pos:start="401:29" pos:end="401:29">i</name></expr>]</index></name><operator pos:start="401:31" pos:end="401:31">.</operator><name pos:start="401:32" pos:end="401:35">data</name></expr>;</expr_stmt>

            <break pos:start="403:13" pos:end="403:18">break;</break>

        <case pos:start="405:9" pos:end="405:22">case <expr pos:start="405:14" pos:end="405:21"><name pos:start="405:14" pos:end="405:21">MSR_STAR</name></expr>:</case>

            <expr_stmt pos:start="407:13" pos:end="407:37"><expr pos:start="407:13" pos:end="407:36"><name pos:start="407:13" pos:end="407:21"><name pos:start="407:13" pos:end="407:15">env</name><operator pos:start="407:16" pos:end="407:17">-&gt;</operator><name pos:start="407:18" pos:end="407:21">star</name></name> <operator pos:start="407:23" pos:end="407:23">=</operator> <name pos:start="407:25" pos:end="407:31"><name pos:start="407:25" pos:end="407:28">msrs</name><index pos:start="407:29" pos:end="407:31">[<expr pos:start="407:30" pos:end="407:30"><name pos:start="407:30" pos:end="407:30">i</name></expr>]</index></name><operator pos:start="407:32" pos:end="407:32">.</operator><name pos:start="407:33" pos:end="407:36">data</name></expr>;</expr_stmt>

            <break pos:start="409:13" pos:end="412:0">break;</break>

<cpp:ifdef pos:start="411:1" pos:end="411:20">#<cpp:directive pos:start="411:2" pos:end="411:6">ifdef</cpp:directive> <name pos:start="411:8" pos:end="411:20">TARGET_X86_64</name></cpp:ifdef>

        <case pos:start="413:9" pos:end="413:23">case <expr pos:start="413:14" pos:end="413:22"><name pos:start="413:14" pos:end="413:22">MSR_CSTAR</name></expr>:</case>

            <expr_stmt pos:start="415:13" pos:end="415:38"><expr pos:start="415:13" pos:end="415:37"><name pos:start="415:13" pos:end="415:22"><name pos:start="415:13" pos:end="415:15">env</name><operator pos:start="415:16" pos:end="415:17">-&gt;</operator><name pos:start="415:18" pos:end="415:22">cstar</name></name> <operator pos:start="415:24" pos:end="415:24">=</operator> <name pos:start="415:26" pos:end="415:32"><name pos:start="415:26" pos:end="415:29">msrs</name><index pos:start="415:30" pos:end="415:32">[<expr pos:start="415:31" pos:end="415:31"><name pos:start="415:31" pos:end="415:31">i</name></expr>]</index></name><operator pos:start="415:33" pos:end="415:33">.</operator><name pos:start="415:34" pos:end="415:37">data</name></expr>;</expr_stmt>

            <break pos:start="417:13" pos:end="417:18">break;</break>

        <case pos:start="419:9" pos:end="419:30">case <expr pos:start="419:14" pos:end="419:29"><name pos:start="419:14" pos:end="419:29">MSR_KERNELGSBASE</name></expr>:</case>

            <expr_stmt pos:start="421:13" pos:end="421:45"><expr pos:start="421:13" pos:end="421:44"><name pos:start="421:13" pos:end="421:29"><name pos:start="421:13" pos:end="421:15">env</name><operator pos:start="421:16" pos:end="421:17">-&gt;</operator><name pos:start="421:18" pos:end="421:29">kernelgsbase</name></name> <operator pos:start="421:31" pos:end="421:31">=</operator> <name pos:start="421:33" pos:end="421:39"><name pos:start="421:33" pos:end="421:36">msrs</name><index pos:start="421:37" pos:end="421:39">[<expr pos:start="421:38" pos:end="421:38"><name pos:start="421:38" pos:end="421:38">i</name></expr>]</index></name><operator pos:start="421:40" pos:end="421:40">.</operator><name pos:start="421:41" pos:end="421:44">data</name></expr>;</expr_stmt>

            <break pos:start="423:13" pos:end="423:18">break;</break>

        <case pos:start="425:9" pos:end="425:23">case <expr pos:start="425:14" pos:end="425:22"><name pos:start="425:14" pos:end="425:22">MSR_FMASK</name></expr>:</case>

            <expr_stmt pos:start="427:13" pos:end="427:38"><expr pos:start="427:13" pos:end="427:37"><name pos:start="427:13" pos:end="427:22"><name pos:start="427:13" pos:end="427:15">env</name><operator pos:start="427:16" pos:end="427:17">-&gt;</operator><name pos:start="427:18" pos:end="427:22">fmask</name></name> <operator pos:start="427:24" pos:end="427:24">=</operator> <name pos:start="427:26" pos:end="427:32"><name pos:start="427:26" pos:end="427:29">msrs</name><index pos:start="427:30" pos:end="427:32">[<expr pos:start="427:31" pos:end="427:31"><name pos:start="427:31" pos:end="427:31">i</name></expr>]</index></name><operator pos:start="427:33" pos:end="427:33">.</operator><name pos:start="427:34" pos:end="427:37">data</name></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <case pos:start="431:9" pos:end="431:23">case <expr pos:start="431:14" pos:end="431:22"><name pos:start="431:14" pos:end="431:22">MSR_LSTAR</name></expr>:</case>

            <expr_stmt pos:start="433:13" pos:end="433:38"><expr pos:start="433:13" pos:end="433:37"><name pos:start="433:13" pos:end="433:22"><name pos:start="433:13" pos:end="433:15">env</name><operator pos:start="433:16" pos:end="433:17">-&gt;</operator><name pos:start="433:18" pos:end="433:22">lstar</name></name> <operator pos:start="433:24" pos:end="433:24">=</operator> <name pos:start="433:26" pos:end="433:32"><name pos:start="433:26" pos:end="433:29">msrs</name><index pos:start="433:30" pos:end="433:32">[<expr pos:start="433:31" pos:end="433:31"><name pos:start="433:31" pos:end="433:31">i</name></expr>]</index></name><operator pos:start="433:33" pos:end="433:33">.</operator><name pos:start="433:34" pos:end="433:37">data</name></expr>;</expr_stmt>

            <break pos:start="435:13" pos:end="438:0">break;</break>

<cpp:endif pos:start="437:1" pos:end="437:6">#<cpp:directive pos:start="437:2" pos:end="437:6">endif</cpp:directive></cpp:endif>

        <case pos:start="439:9" pos:end="439:26">case <expr pos:start="439:14" pos:end="439:25"><name pos:start="439:14" pos:end="439:25">MSR_IA32_TSC</name></expr>:</case>

            <expr_stmt pos:start="441:13" pos:end="441:36"><expr pos:start="441:13" pos:end="441:35"><name pos:start="441:13" pos:end="441:20"><name pos:start="441:13" pos:end="441:15">env</name><operator pos:start="441:16" pos:end="441:17">-&gt;</operator><name pos:start="441:18" pos:end="441:20">tsc</name></name> <operator pos:start="441:22" pos:end="441:22">=</operator> <name pos:start="441:24" pos:end="441:30"><name pos:start="441:24" pos:end="441:27">msrs</name><index pos:start="441:28" pos:end="441:30">[<expr pos:start="441:29" pos:end="441:29"><name pos:start="441:29" pos:end="441:29">i</name></expr>]</index></name><operator pos:start="441:31" pos:end="441:31">.</operator><name pos:start="441:32" pos:end="441:35">data</name></expr>;</expr_stmt>

            <break pos:start="443:13" pos:end="443:18">break;</break>

        <case pos:start="445:9" pos:end="445:25">case <expr pos:start="445:14" pos:end="445:24"><name pos:start="445:14" pos:end="445:24">MSR_TSC_AUX</name></expr>:</case>

            <expr_stmt pos:start="447:13" pos:end="447:40"><expr pos:start="447:13" pos:end="447:39"><name pos:start="447:13" pos:end="447:24"><name pos:start="447:13" pos:end="447:15">env</name><operator pos:start="447:16" pos:end="447:17">-&gt;</operator><name pos:start="447:18" pos:end="447:24">tsc_aux</name></name> <operator pos:start="447:26" pos:end="447:26">=</operator> <name pos:start="447:28" pos:end="447:34"><name pos:start="447:28" pos:end="447:31">msrs</name><index pos:start="447:32" pos:end="447:34">[<expr pos:start="447:33" pos:end="447:33"><name pos:start="447:33" pos:end="447:33">i</name></expr>]</index></name><operator pos:start="447:35" pos:end="447:35">.</operator><name pos:start="447:36" pos:end="447:39">data</name></expr>;</expr_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <case pos:start="451:9" pos:end="451:28">case <expr pos:start="451:14" pos:end="451:27"><name pos:start="451:14" pos:end="451:27">MSR_TSC_ADJUST</name></expr>:</case>

            <expr_stmt pos:start="453:13" pos:end="453:43"><expr pos:start="453:13" pos:end="453:42"><name pos:start="453:13" pos:end="453:27"><name pos:start="453:13" pos:end="453:15">env</name><operator pos:start="453:16" pos:end="453:17">-&gt;</operator><name pos:start="453:18" pos:end="453:27">tsc_adjust</name></name> <operator pos:start="453:29" pos:end="453:29">=</operator> <name pos:start="453:31" pos:end="453:37"><name pos:start="453:31" pos:end="453:34">msrs</name><index pos:start="453:35" pos:end="453:37">[<expr pos:start="453:36" pos:end="453:36"><name pos:start="453:36" pos:end="453:36">i</name></expr>]</index></name><operator pos:start="453:38" pos:end="453:38">.</operator><name pos:start="453:39" pos:end="453:42">data</name></expr>;</expr_stmt>

            <break pos:start="455:13" pos:end="455:18">break;</break>

        <case pos:start="457:9" pos:end="457:34">case <expr pos:start="457:14" pos:end="457:33"><name pos:start="457:14" pos:end="457:33">MSR_IA32_TSCDEADLINE</name></expr>:</case>

            <expr_stmt pos:start="459:13" pos:end="459:45"><expr pos:start="459:13" pos:end="459:44"><name pos:start="459:13" pos:end="459:29"><name pos:start="459:13" pos:end="459:15">env</name><operator pos:start="459:16" pos:end="459:17">-&gt;</operator><name pos:start="459:18" pos:end="459:29">tsc_deadline</name></name> <operator pos:start="459:31" pos:end="459:31">=</operator> <name pos:start="459:33" pos:end="459:39"><name pos:start="459:33" pos:end="459:36">msrs</name><index pos:start="459:37" pos:end="459:39">[<expr pos:start="459:38" pos:end="459:38"><name pos:start="459:38" pos:end="459:38">i</name></expr>]</index></name><operator pos:start="459:40" pos:end="459:40">.</operator><name pos:start="459:41" pos:end="459:44">data</name></expr>;</expr_stmt>

            <break pos:start="461:13" pos:end="461:18">break;</break>

        <case pos:start="463:9" pos:end="463:29">case <expr pos:start="463:14" pos:end="463:28"><name pos:start="463:14" pos:end="463:28">MSR_VM_HSAVE_PA</name></expr>:</case>

            <expr_stmt pos:start="465:13" pos:end="465:41"><expr pos:start="465:13" pos:end="465:40"><name pos:start="465:13" pos:end="465:25"><name pos:start="465:13" pos:end="465:15">env</name><operator pos:start="465:16" pos:end="465:17">-&gt;</operator><name pos:start="465:18" pos:end="465:25">vm_hsave</name></name> <operator pos:start="465:27" pos:end="465:27">=</operator> <name pos:start="465:29" pos:end="465:35"><name pos:start="465:29" pos:end="465:32">msrs</name><index pos:start="465:33" pos:end="465:35">[<expr pos:start="465:34" pos:end="465:34"><name pos:start="465:34" pos:end="465:34">i</name></expr>]</index></name><operator pos:start="465:36" pos:end="465:36">.</operator><name pos:start="465:37" pos:end="465:40">data</name></expr>;</expr_stmt>

            <break pos:start="467:13" pos:end="467:18">break;</break>

        <case pos:start="469:9" pos:end="469:33">case <expr pos:start="469:14" pos:end="469:32"><name pos:start="469:14" pos:end="469:32">MSR_KVM_SYSTEM_TIME</name></expr>:</case>

            <expr_stmt pos:start="471:13" pos:end="471:48"><expr pos:start="471:13" pos:end="471:47"><name pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:15">env</name><operator pos:start="471:16" pos:end="471:17">-&gt;</operator><name pos:start="471:18" pos:end="471:32">system_time_msr</name></name> <operator pos:start="471:34" pos:end="471:34">=</operator> <name pos:start="471:36" pos:end="471:42"><name pos:start="471:36" pos:end="471:39">msrs</name><index pos:start="471:40" pos:end="471:42">[<expr pos:start="471:41" pos:end="471:41"><name pos:start="471:41" pos:end="471:41">i</name></expr>]</index></name><operator pos:start="471:43" pos:end="471:43">.</operator><name pos:start="471:44" pos:end="471:47">data</name></expr>;</expr_stmt>

            <break pos:start="473:13" pos:end="473:18">break;</break>

        <case pos:start="475:9" pos:end="475:32">case <expr pos:start="475:14" pos:end="475:31"><name pos:start="475:14" pos:end="475:31">MSR_KVM_WALL_CLOCK</name></expr>:</case>

            <expr_stmt pos:start="477:13" pos:end="477:47"><expr pos:start="477:13" pos:end="477:46"><name pos:start="477:13" pos:end="477:31"><name pos:start="477:13" pos:end="477:15">env</name><operator pos:start="477:16" pos:end="477:17">-&gt;</operator><name pos:start="477:18" pos:end="477:31">wall_clock_msr</name></name> <operator pos:start="477:33" pos:end="477:33">=</operator> <name pos:start="477:35" pos:end="477:41"><name pos:start="477:35" pos:end="477:38">msrs</name><index pos:start="477:39" pos:end="477:41">[<expr pos:start="477:40" pos:end="477:40"><name pos:start="477:40" pos:end="477:40">i</name></expr>]</index></name><operator pos:start="477:42" pos:end="477:42">.</operator><name pos:start="477:43" pos:end="477:46">data</name></expr>;</expr_stmt>

            <break pos:start="479:13" pos:end="479:18">break;</break>

        <case pos:start="481:9" pos:end="481:28">case <expr pos:start="481:14" pos:end="481:27"><name pos:start="481:14" pos:end="481:27">MSR_MCG_STATUS</name></expr>:</case>

            <expr_stmt pos:start="483:13" pos:end="483:43"><expr pos:start="483:13" pos:end="483:42"><name pos:start="483:13" pos:end="483:27"><name pos:start="483:13" pos:end="483:15">env</name><operator pos:start="483:16" pos:end="483:17">-&gt;</operator><name pos:start="483:18" pos:end="483:27">mcg_status</name></name> <operator pos:start="483:29" pos:end="483:29">=</operator> <name pos:start="483:31" pos:end="483:37"><name pos:start="483:31" pos:end="483:34">msrs</name><index pos:start="483:35" pos:end="483:37">[<expr pos:start="483:36" pos:end="483:36"><name pos:start="483:36" pos:end="483:36">i</name></expr>]</index></name><operator pos:start="483:38" pos:end="483:38">.</operator><name pos:start="483:39" pos:end="483:42">data</name></expr>;</expr_stmt>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        <case pos:start="487:9" pos:end="487:25">case <expr pos:start="487:14" pos:end="487:24"><name pos:start="487:14" pos:end="487:24">MSR_MCG_CTL</name></expr>:</case>

            <expr_stmt pos:start="489:13" pos:end="489:40"><expr pos:start="489:13" pos:end="489:39"><name pos:start="489:13" pos:end="489:24"><name pos:start="489:13" pos:end="489:15">env</name><operator pos:start="489:16" pos:end="489:17">-&gt;</operator><name pos:start="489:18" pos:end="489:24">mcg_ctl</name></name> <operator pos:start="489:26" pos:end="489:26">=</operator> <name pos:start="489:28" pos:end="489:34"><name pos:start="489:28" pos:end="489:31">msrs</name><index pos:start="489:32" pos:end="489:34">[<expr pos:start="489:33" pos:end="489:33"><name pos:start="489:33" pos:end="489:33">i</name></expr>]</index></name><operator pos:start="489:35" pos:end="489:35">.</operator><name pos:start="489:36" pos:end="489:39">data</name></expr>;</expr_stmt>

            <break pos:start="491:13" pos:end="491:18">break;</break>

        <case pos:start="493:9" pos:end="493:29">case <expr pos:start="493:14" pos:end="493:28"><name pos:start="493:14" pos:end="493:28">MSR_MCG_EXT_CTL</name></expr>:</case>

            <expr_stmt pos:start="495:13" pos:end="495:44"><expr pos:start="495:13" pos:end="495:43"><name pos:start="495:13" pos:end="495:28"><name pos:start="495:13" pos:end="495:15">env</name><operator pos:start="495:16" pos:end="495:17">-&gt;</operator><name pos:start="495:18" pos:end="495:28">mcg_ext_ctl</name></name> <operator pos:start="495:30" pos:end="495:30">=</operator> <name pos:start="495:32" pos:end="495:38"><name pos:start="495:32" pos:end="495:35">msrs</name><index pos:start="495:36" pos:end="495:38">[<expr pos:start="495:37" pos:end="495:37"><name pos:start="495:37" pos:end="495:37">i</name></expr>]</index></name><operator pos:start="495:39" pos:end="495:39">.</operator><name pos:start="495:40" pos:end="495:43">data</name></expr>;</expr_stmt>

            <break pos:start="497:13" pos:end="497:18">break;</break>

        <case pos:start="499:9" pos:end="499:34">case <expr pos:start="499:14" pos:end="499:33"><name pos:start="499:14" pos:end="499:33">MSR_IA32_MISC_ENABLE</name></expr>:</case>

            <expr_stmt pos:start="501:13" pos:end="501:53"><expr pos:start="501:13" pos:end="501:52"><name pos:start="501:13" pos:end="501:37"><name pos:start="501:13" pos:end="501:15">env</name><operator pos:start="501:16" pos:end="501:17">-&gt;</operator><name pos:start="501:18" pos:end="501:37">msr_ia32_misc_enable</name></name> <operator pos:start="501:39" pos:end="501:39">=</operator> <name pos:start="501:41" pos:end="501:47"><name pos:start="501:41" pos:end="501:44">msrs</name><index pos:start="501:45" pos:end="501:47">[<expr pos:start="501:46" pos:end="501:46"><name pos:start="501:46" pos:end="501:46">i</name></expr>]</index></name><operator pos:start="501:48" pos:end="501:48">.</operator><name pos:start="501:49" pos:end="501:52">data</name></expr>;</expr_stmt>

            <break pos:start="503:13" pos:end="503:18">break;</break>

        <case pos:start="505:9" pos:end="505:29">case <expr pos:start="505:14" pos:end="505:28"><name pos:start="505:14" pos:end="505:28">MSR_IA32_SMBASE</name></expr>:</case>

            <expr_stmt pos:start="507:13" pos:end="507:39"><expr pos:start="507:13" pos:end="507:38"><name pos:start="507:13" pos:end="507:23"><name pos:start="507:13" pos:end="507:15">env</name><operator pos:start="507:16" pos:end="507:17">-&gt;</operator><name pos:start="507:18" pos:end="507:23">smbase</name></name> <operator pos:start="507:25" pos:end="507:25">=</operator> <name pos:start="507:27" pos:end="507:33"><name pos:start="507:27" pos:end="507:30">msrs</name><index pos:start="507:31" pos:end="507:33">[<expr pos:start="507:32" pos:end="507:32"><name pos:start="507:32" pos:end="507:32">i</name></expr>]</index></name><operator pos:start="507:34" pos:end="507:34">.</operator><name pos:start="507:35" pos:end="507:38">data</name></expr>;</expr_stmt>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        <case pos:start="511:9" pos:end="511:38">case <expr pos:start="511:14" pos:end="511:37"><name pos:start="511:14" pos:end="511:37">MSR_IA32_FEATURE_CONTROL</name></expr>:</case>

            <expr_stmt pos:start="513:13" pos:end="513:57"><expr pos:start="513:13" pos:end="513:56"><name pos:start="513:13" pos:end="513:41"><name pos:start="513:13" pos:end="513:15">env</name><operator pos:start="513:16" pos:end="513:17">-&gt;</operator><name pos:start="513:18" pos:end="513:41">msr_ia32_feature_control</name></name> <operator pos:start="513:43" pos:end="513:43">=</operator> <name pos:start="513:45" pos:end="513:51"><name pos:start="513:45" pos:end="513:48">msrs</name><index pos:start="513:49" pos:end="513:51">[<expr pos:start="513:50" pos:end="513:50"><name pos:start="513:50" pos:end="513:50">i</name></expr>]</index></name><operator pos:start="513:52" pos:end="513:52">.</operator><name pos:start="513:53" pos:end="513:56">data</name></expr>;</expr_stmt>

            <break pos:start="515:13" pos:end="515:18">break;</break>

        <case pos:start="517:9" pos:end="517:30">case <expr pos:start="517:14" pos:end="517:29"><name pos:start="517:14" pos:end="517:29">MSR_IA32_BNDCFGS</name></expr>:</case>

            <expr_stmt pos:start="519:13" pos:end="519:44"><expr pos:start="519:13" pos:end="519:43"><name pos:start="519:13" pos:end="519:28"><name pos:start="519:13" pos:end="519:15">env</name><operator pos:start="519:16" pos:end="519:17">-&gt;</operator><name pos:start="519:18" pos:end="519:28">msr_bndcfgs</name></name> <operator pos:start="519:30" pos:end="519:30">=</operator> <name pos:start="519:32" pos:end="519:38"><name pos:start="519:32" pos:end="519:35">msrs</name><index pos:start="519:36" pos:end="519:38">[<expr pos:start="519:37" pos:end="519:37"><name pos:start="519:37" pos:end="519:37">i</name></expr>]</index></name><operator pos:start="519:39" pos:end="519:39">.</operator><name pos:start="519:40" pos:end="519:43">data</name></expr>;</expr_stmt>

            <break pos:start="521:13" pos:end="521:18">break;</break>

        <case pos:start="523:9" pos:end="523:26">case <expr pos:start="523:14" pos:end="523:25"><name pos:start="523:14" pos:end="523:25">MSR_IA32_XSS</name></expr>:</case>

            <expr_stmt pos:start="525:13" pos:end="525:36"><expr pos:start="525:13" pos:end="525:35"><name pos:start="525:13" pos:end="525:20"><name pos:start="525:13" pos:end="525:15">env</name><operator pos:start="525:16" pos:end="525:17">-&gt;</operator><name pos:start="525:18" pos:end="525:20">xss</name></name> <operator pos:start="525:22" pos:end="525:22">=</operator> <name pos:start="525:24" pos:end="525:30"><name pos:start="525:24" pos:end="525:27">msrs</name><index pos:start="525:28" pos:end="525:30">[<expr pos:start="525:29" pos:end="525:29"><name pos:start="525:29" pos:end="525:29">i</name></expr>]</index></name><operator pos:start="525:31" pos:end="525:31">.</operator><name pos:start="525:32" pos:end="525:35">data</name></expr>;</expr_stmt>

            <break pos:start="527:13" pos:end="527:18">break;</break>

        <default pos:start="529:9" pos:end="529:16">default:</default>

            <if_stmt pos:start="531:13" pos:end="537:13"><if pos:start="531:13" pos:end="537:13">if <condition pos:start="531:16" pos:end="533:72">(<expr pos:start="531:17" pos:end="533:71"><name pos:start="531:17" pos:end="531:23"><name pos:start="531:17" pos:end="531:20">msrs</name><index pos:start="531:21" pos:end="531:23">[<expr pos:start="531:22" pos:end="531:22"><name pos:start="531:22" pos:end="531:22">i</name></expr>]</index></name><operator pos:start="531:24" pos:end="531:24">.</operator><name pos:start="531:25" pos:end="531:29">index</name> <operator pos:start="531:31" pos:end="531:32">&gt;=</operator> <name pos:start="531:34" pos:end="531:44">MSR_MC0_CTL</name> <operator pos:start="531:46" pos:end="531:47">&amp;&amp;</operator>

                <name pos:start="533:17" pos:end="533:23"><name pos:start="533:17" pos:end="533:20">msrs</name><index pos:start="533:21" pos:end="533:23">[<expr pos:start="533:22" pos:end="533:22"><name pos:start="533:22" pos:end="533:22">i</name></expr>]</index></name><operator pos:start="533:24" pos:end="533:24">.</operator><name pos:start="533:25" pos:end="533:29">index</name> <operator pos:start="533:31" pos:end="533:31">&lt;</operator> <name pos:start="533:33" pos:end="533:43">MSR_MC0_CTL</name> <operator pos:start="533:45" pos:end="533:45">+</operator> <operator pos:start="533:47" pos:end="533:47">(</operator><name pos:start="533:48" pos:end="533:59"><name pos:start="533:48" pos:end="533:50">env</name><operator pos:start="533:51" pos:end="533:52">-&gt;</operator><name pos:start="533:53" pos:end="533:59">mcg_cap</name></name> <operator pos:start="533:61" pos:end="533:61">&amp;</operator> <literal type="number" pos:start="533:63" pos:end="533:66">0xff</literal><operator pos:start="533:67" pos:end="533:67">)</operator> <operator pos:start="533:69" pos:end="533:69">*</operator> <literal type="number" pos:start="533:71" pos:end="533:71">4</literal></expr>)</condition> <block pos:start="533:74" pos:end="537:13">{<block_content pos:start="535:17" pos:end="535:75">

                <expr_stmt pos:start="535:17" pos:end="535:75"><expr pos:start="535:17" pos:end="535:74"><name pos:start="535:17" pos:end="535:59"><name pos:start="535:17" pos:end="535:19">env</name><operator pos:start="535:20" pos:end="535:21">-&gt;</operator><name pos:start="535:22" pos:end="535:30">mce_banks</name><index pos:start="535:31" pos:end="535:59">[<expr pos:start="535:32" pos:end="535:58"><name pos:start="535:32" pos:end="535:38"><name pos:start="535:32" pos:end="535:35">msrs</name><index pos:start="535:36" pos:end="535:38">[<expr pos:start="535:37" pos:end="535:37"><name pos:start="535:37" pos:end="535:37">i</name></expr>]</index></name><operator pos:start="535:39" pos:end="535:39">.</operator><name pos:start="535:40" pos:end="535:44">index</name> <operator pos:start="535:46" pos:end="535:46">-</operator> <name pos:start="535:48" pos:end="535:58">MSR_MC0_CTL</name></expr>]</index></name> <operator pos:start="535:61" pos:end="535:61">=</operator> <name pos:start="535:63" pos:end="535:69"><name pos:start="535:63" pos:end="535:66">msrs</name><index pos:start="535:67" pos:end="535:69">[<expr pos:start="535:68" pos:end="535:68"><name pos:start="535:68" pos:end="535:68">i</name></expr>]</index></name><operator pos:start="535:70" pos:end="535:70">.</operator><name pos:start="535:71" pos:end="535:74">data</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="539:13" pos:end="539:18">break;</break>

        <case pos:start="541:9" pos:end="541:33">case <expr pos:start="541:14" pos:end="541:32"><name pos:start="541:14" pos:end="541:32">MSR_KVM_ASYNC_PF_EN</name></expr>:</case>

            <expr_stmt pos:start="543:13" pos:end="543:48"><expr pos:start="543:13" pos:end="543:47"><name pos:start="543:13" pos:end="543:32"><name pos:start="543:13" pos:end="543:15">env</name><operator pos:start="543:16" pos:end="543:17">-&gt;</operator><name pos:start="543:18" pos:end="543:32">async_pf_en_msr</name></name> <operator pos:start="543:34" pos:end="543:34">=</operator> <name pos:start="543:36" pos:end="543:42"><name pos:start="543:36" pos:end="543:39">msrs</name><index pos:start="543:40" pos:end="543:42">[<expr pos:start="543:41" pos:end="543:41"><name pos:start="543:41" pos:end="543:41">i</name></expr>]</index></name><operator pos:start="543:43" pos:end="543:43">.</operator><name pos:start="543:44" pos:end="543:47">data</name></expr>;</expr_stmt>

            <break pos:start="545:13" pos:end="545:18">break;</break>

        <case pos:start="547:9" pos:end="547:31">case <expr pos:start="547:14" pos:end="547:30"><name pos:start="547:14" pos:end="547:30">MSR_KVM_PV_EOI_EN</name></expr>:</case>

            <expr_stmt pos:start="549:13" pos:end="549:46"><expr pos:start="549:13" pos:end="549:45"><name pos:start="549:13" pos:end="549:30"><name pos:start="549:13" pos:end="549:15">env</name><operator pos:start="549:16" pos:end="549:17">-&gt;</operator><name pos:start="549:18" pos:end="549:30">pv_eoi_en_msr</name></name> <operator pos:start="549:32" pos:end="549:32">=</operator> <name pos:start="549:34" pos:end="549:40"><name pos:start="549:34" pos:end="549:37">msrs</name><index pos:start="549:38" pos:end="549:40">[<expr pos:start="549:39" pos:end="549:39"><name pos:start="549:39" pos:end="549:39">i</name></expr>]</index></name><operator pos:start="549:41" pos:end="549:41">.</operator><name pos:start="549:42" pos:end="549:45">data</name></expr>;</expr_stmt>

            <break pos:start="551:13" pos:end="551:18">break;</break>

        <case pos:start="553:9" pos:end="553:32">case <expr pos:start="553:14" pos:end="553:31"><name pos:start="553:14" pos:end="553:31">MSR_KVM_STEAL_TIME</name></expr>:</case>

            <expr_stmt pos:start="555:13" pos:end="555:47"><expr pos:start="555:13" pos:end="555:46"><name pos:start="555:13" pos:end="555:31"><name pos:start="555:13" pos:end="555:15">env</name><operator pos:start="555:16" pos:end="555:17">-&gt;</operator><name pos:start="555:18" pos:end="555:31">steal_time_msr</name></name> <operator pos:start="555:33" pos:end="555:33">=</operator> <name pos:start="555:35" pos:end="555:41"><name pos:start="555:35" pos:end="555:38">msrs</name><index pos:start="555:39" pos:end="555:41">[<expr pos:start="555:40" pos:end="555:40"><name pos:start="555:40" pos:end="555:40">i</name></expr>]</index></name><operator pos:start="555:42" pos:end="555:42">.</operator><name pos:start="555:43" pos:end="555:46">data</name></expr>;</expr_stmt>

            <break pos:start="557:13" pos:end="557:18">break;</break>

        <case pos:start="559:9" pos:end="559:42">case <expr pos:start="559:14" pos:end="559:41"><name pos:start="559:14" pos:end="559:41">MSR_CORE_PERF_FIXED_CTR_CTRL</name></expr>:</case>

            <expr_stmt pos:start="561:13" pos:end="561:51"><expr pos:start="561:13" pos:end="561:50"><name pos:start="561:13" pos:end="561:35"><name pos:start="561:13" pos:end="561:15">env</name><operator pos:start="561:16" pos:end="561:17">-&gt;</operator><name pos:start="561:18" pos:end="561:35">msr_fixed_ctr_ctrl</name></name> <operator pos:start="561:37" pos:end="561:37">=</operator> <name pos:start="561:39" pos:end="561:45"><name pos:start="561:39" pos:end="561:42">msrs</name><index pos:start="561:43" pos:end="561:45">[<expr pos:start="561:44" pos:end="561:44"><name pos:start="561:44" pos:end="561:44">i</name></expr>]</index></name><operator pos:start="561:46" pos:end="561:46">.</operator><name pos:start="561:47" pos:end="561:50">data</name></expr>;</expr_stmt>

            <break pos:start="563:13" pos:end="563:18">break;</break>

        <case pos:start="565:9" pos:end="565:39">case <expr pos:start="565:14" pos:end="565:38"><name pos:start="565:14" pos:end="565:38">MSR_CORE_PERF_GLOBAL_CTRL</name></expr>:</case>

            <expr_stmt pos:start="567:13" pos:end="567:48"><expr pos:start="567:13" pos:end="567:47"><name pos:start="567:13" pos:end="567:32"><name pos:start="567:13" pos:end="567:15">env</name><operator pos:start="567:16" pos:end="567:17">-&gt;</operator><name pos:start="567:18" pos:end="567:32">msr_global_ctrl</name></name> <operator pos:start="567:34" pos:end="567:34">=</operator> <name pos:start="567:36" pos:end="567:42"><name pos:start="567:36" pos:end="567:39">msrs</name><index pos:start="567:40" pos:end="567:42">[<expr pos:start="567:41" pos:end="567:41"><name pos:start="567:41" pos:end="567:41">i</name></expr>]</index></name><operator pos:start="567:43" pos:end="567:43">.</operator><name pos:start="567:44" pos:end="567:47">data</name></expr>;</expr_stmt>

            <break pos:start="569:13" pos:end="569:18">break;</break>

        <case pos:start="571:9" pos:end="571:41">case <expr pos:start="571:14" pos:end="571:40"><name pos:start="571:14" pos:end="571:40">MSR_CORE_PERF_GLOBAL_STATUS</name></expr>:</case>

            <expr_stmt pos:start="573:13" pos:end="573:50"><expr pos:start="573:13" pos:end="573:49"><name pos:start="573:13" pos:end="573:34"><name pos:start="573:13" pos:end="573:15">env</name><operator pos:start="573:16" pos:end="573:17">-&gt;</operator><name pos:start="573:18" pos:end="573:34">msr_global_status</name></name> <operator pos:start="573:36" pos:end="573:36">=</operator> <name pos:start="573:38" pos:end="573:44"><name pos:start="573:38" pos:end="573:41">msrs</name><index pos:start="573:42" pos:end="573:44">[<expr pos:start="573:43" pos:end="573:43"><name pos:start="573:43" pos:end="573:43">i</name></expr>]</index></name><operator pos:start="573:45" pos:end="573:45">.</operator><name pos:start="573:46" pos:end="573:49">data</name></expr>;</expr_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>

        <case pos:start="577:9" pos:end="577:43">case <expr pos:start="577:14" pos:end="577:42"><name pos:start="577:14" pos:end="577:42">MSR_CORE_PERF_GLOBAL_OVF_CTRL</name></expr>:</case>

            <expr_stmt pos:start="579:13" pos:end="579:52"><expr pos:start="579:13" pos:end="579:51"><name pos:start="579:13" pos:end="579:36"><name pos:start="579:13" pos:end="579:15">env</name><operator pos:start="579:16" pos:end="579:17">-&gt;</operator><name pos:start="579:18" pos:end="579:36">msr_global_ovf_ctrl</name></name> <operator pos:start="579:38" pos:end="579:38">=</operator> <name pos:start="579:40" pos:end="579:46"><name pos:start="579:40" pos:end="579:43">msrs</name><index pos:start="579:44" pos:end="579:46">[<expr pos:start="579:45" pos:end="579:45"><name pos:start="579:45" pos:end="579:45">i</name></expr>]</index></name><operator pos:start="579:47" pos:end="579:47">.</operator><name pos:start="579:48" pos:end="579:51">data</name></expr>;</expr_stmt>

            <break pos:start="581:13" pos:end="581:18">break;</break>

        <case pos:start="583:9" pos:end="583:92">case <expr pos:start="583:14" pos:end="583:91"><name pos:start="583:14" pos:end="583:37">MSR_CORE_PERF_FIXED_CTR0</name> <operator pos:start="583:39" pos:end="583:41">...</operator> <name pos:start="583:43" pos:end="583:66">MSR_CORE_PERF_FIXED_CTR0</name> <operator pos:start="583:68" pos:end="583:68">+</operator> <name pos:start="583:70" pos:end="583:87">MAX_FIXED_COUNTERS</name> <operator pos:start="583:89" pos:end="583:89">-</operator> <literal type="number" pos:start="583:91" pos:end="583:91">1</literal></expr>:</case>

            <expr_stmt pos:start="585:13" pos:end="585:85"><expr pos:start="585:13" pos:end="585:84"><name pos:start="585:13" pos:end="585:69"><name pos:start="585:13" pos:end="585:15">env</name><operator pos:start="585:16" pos:end="585:17">-&gt;</operator><name pos:start="585:18" pos:end="585:35">msr_fixed_counters</name><index pos:start="585:36" pos:end="585:69">[<expr pos:start="585:37" pos:end="585:68"><name pos:start="585:37" pos:end="585:41">index</name> <operator pos:start="585:43" pos:end="585:43">-</operator> <name pos:start="585:45" pos:end="585:68">MSR_CORE_PERF_FIXED_CTR0</name></expr>]</index></name> <operator pos:start="585:71" pos:end="585:71">=</operator> <name pos:start="585:73" pos:end="585:79"><name pos:start="585:73" pos:end="585:76">msrs</name><index pos:start="585:77" pos:end="585:79">[<expr pos:start="585:78" pos:end="585:78"><name pos:start="585:78" pos:end="585:78">i</name></expr>]</index></name><operator pos:start="585:80" pos:end="585:80">.</operator><name pos:start="585:81" pos:end="585:84">data</name></expr>;</expr_stmt>

            <break pos:start="587:13" pos:end="587:18">break;</break>

        <case pos:start="589:9" pos:end="589:71">case <expr pos:start="589:14" pos:end="589:70"><name pos:start="589:14" pos:end="589:28">MSR_P6_PERFCTR0</name> <operator pos:start="589:30" pos:end="589:32">...</operator> <name pos:start="589:34" pos:end="589:48">MSR_P6_PERFCTR0</name> <operator pos:start="589:50" pos:end="589:50">+</operator> <name pos:start="589:52" pos:end="589:66">MAX_GP_COUNTERS</name> <operator pos:start="589:68" pos:end="589:68">-</operator> <literal type="number" pos:start="589:70" pos:end="589:70">1</literal></expr>:</case>

            <expr_stmt pos:start="591:13" pos:end="591:73"><expr pos:start="591:13" pos:end="591:72"><name pos:start="591:13" pos:end="591:57"><name pos:start="591:13" pos:end="591:15">env</name><operator pos:start="591:16" pos:end="591:17">-&gt;</operator><name pos:start="591:18" pos:end="591:32">msr_gp_counters</name><index pos:start="591:33" pos:end="591:57">[<expr pos:start="591:34" pos:end="591:56"><name pos:start="591:34" pos:end="591:38">index</name> <operator pos:start="591:40" pos:end="591:40">-</operator> <name pos:start="591:42" pos:end="591:56">MSR_P6_PERFCTR0</name></expr>]</index></name> <operator pos:start="591:59" pos:end="591:59">=</operator> <name pos:start="591:61" pos:end="591:67"><name pos:start="591:61" pos:end="591:64">msrs</name><index pos:start="591:65" pos:end="591:67">[<expr pos:start="591:66" pos:end="591:66"><name pos:start="591:66" pos:end="591:66">i</name></expr>]</index></name><operator pos:start="591:68" pos:end="591:68">.</operator><name pos:start="591:69" pos:end="591:72">data</name></expr>;</expr_stmt>

            <break pos:start="593:13" pos:end="593:18">break;</break>

        <case pos:start="595:9" pos:end="595:71">case <expr pos:start="595:14" pos:end="595:70"><name pos:start="595:14" pos:end="595:28">MSR_P6_EVNTSEL0</name> <operator pos:start="595:30" pos:end="595:32">...</operator> <name pos:start="595:34" pos:end="595:48">MSR_P6_EVNTSEL0</name> <operator pos:start="595:50" pos:end="595:50">+</operator> <name pos:start="595:52" pos:end="595:66">MAX_GP_COUNTERS</name> <operator pos:start="595:68" pos:end="595:68">-</operator> <literal type="number" pos:start="595:70" pos:end="595:70">1</literal></expr>:</case>

            <expr_stmt pos:start="597:13" pos:end="597:71"><expr pos:start="597:13" pos:end="597:70"><name pos:start="597:13" pos:end="597:55"><name pos:start="597:13" pos:end="597:15">env</name><operator pos:start="597:16" pos:end="597:17">-&gt;</operator><name pos:start="597:18" pos:end="597:30">msr_gp_evtsel</name><index pos:start="597:31" pos:end="597:55">[<expr pos:start="597:32" pos:end="597:54"><name pos:start="597:32" pos:end="597:36">index</name> <operator pos:start="597:38" pos:end="597:38">-</operator> <name pos:start="597:40" pos:end="597:54">MSR_P6_EVNTSEL0</name></expr>]</index></name> <operator pos:start="597:57" pos:end="597:57">=</operator> <name pos:start="597:59" pos:end="597:65"><name pos:start="597:59" pos:end="597:62">msrs</name><index pos:start="597:63" pos:end="597:65">[<expr pos:start="597:64" pos:end="597:64"><name pos:start="597:64" pos:end="597:64">i</name></expr>]</index></name><operator pos:start="597:66" pos:end="597:66">.</operator><name pos:start="597:67" pos:end="597:70">data</name></expr>;</expr_stmt>

            <break pos:start="599:13" pos:end="599:18">break;</break>

        <case pos:start="601:9" pos:end="601:34">case <expr pos:start="601:14" pos:end="601:33"><name pos:start="601:14" pos:end="601:33">HV_X64_MSR_HYPERCALL</name></expr>:</case>

            <expr_stmt pos:start="603:13" pos:end="603:49"><expr pos:start="603:13" pos:end="603:48"><name pos:start="603:13" pos:end="603:33"><name pos:start="603:13" pos:end="603:15">env</name><operator pos:start="603:16" pos:end="603:17">-&gt;</operator><name pos:start="603:18" pos:end="603:33">msr_hv_hypercall</name></name> <operator pos:start="603:35" pos:end="603:35">=</operator> <name pos:start="603:37" pos:end="603:43"><name pos:start="603:37" pos:end="603:40">msrs</name><index pos:start="603:41" pos:end="603:43">[<expr pos:start="603:42" pos:end="603:42"><name pos:start="603:42" pos:end="603:42">i</name></expr>]</index></name><operator pos:start="603:44" pos:end="603:44">.</operator><name pos:start="603:45" pos:end="603:48">data</name></expr>;</expr_stmt>

            <break pos:start="605:13" pos:end="605:18">break;</break>

        <case pos:start="607:9" pos:end="607:36">case <expr pos:start="607:14" pos:end="607:35"><name pos:start="607:14" pos:end="607:35">HV_X64_MSR_GUEST_OS_ID</name></expr>:</case>

            <expr_stmt pos:start="609:13" pos:end="609:51"><expr pos:start="609:13" pos:end="609:50"><name pos:start="609:13" pos:end="609:35"><name pos:start="609:13" pos:end="609:15">env</name><operator pos:start="609:16" pos:end="609:17">-&gt;</operator><name pos:start="609:18" pos:end="609:35">msr_hv_guest_os_id</name></name> <operator pos:start="609:37" pos:end="609:37">=</operator> <name pos:start="609:39" pos:end="609:45"><name pos:start="609:39" pos:end="609:42">msrs</name><index pos:start="609:43" pos:end="609:45">[<expr pos:start="609:44" pos:end="609:44"><name pos:start="609:44" pos:end="609:44">i</name></expr>]</index></name><operator pos:start="609:46" pos:end="609:46">.</operator><name pos:start="609:47" pos:end="609:50">data</name></expr>;</expr_stmt>

            <break pos:start="611:13" pos:end="611:18">break;</break>

        <case pos:start="613:9" pos:end="613:41">case <expr pos:start="613:14" pos:end="613:40"><name pos:start="613:14" pos:end="613:40">HV_X64_MSR_APIC_ASSIST_PAGE</name></expr>:</case>

            <expr_stmt pos:start="615:13" pos:end="615:45"><expr pos:start="615:13" pos:end="615:44"><name pos:start="615:13" pos:end="615:29"><name pos:start="615:13" pos:end="615:15">env</name><operator pos:start="615:16" pos:end="615:17">-&gt;</operator><name pos:start="615:18" pos:end="615:29">msr_hv_vapic</name></name> <operator pos:start="615:31" pos:end="615:31">=</operator> <name pos:start="615:33" pos:end="615:39"><name pos:start="615:33" pos:end="615:36">msrs</name><index pos:start="615:37" pos:end="615:39">[<expr pos:start="615:38" pos:end="615:38"><name pos:start="615:38" pos:end="615:38">i</name></expr>]</index></name><operator pos:start="615:40" pos:end="615:40">.</operator><name pos:start="615:41" pos:end="615:44">data</name></expr>;</expr_stmt>

            <break pos:start="617:13" pos:end="617:18">break;</break>

        <case pos:start="619:9" pos:end="619:38">case <expr pos:start="619:14" pos:end="619:37"><name pos:start="619:14" pos:end="619:37">HV_X64_MSR_REFERENCE_TSC</name></expr>:</case>

            <expr_stmt pos:start="621:13" pos:end="621:43"><expr pos:start="621:13" pos:end="621:42"><name pos:start="621:13" pos:end="621:27"><name pos:start="621:13" pos:end="621:15">env</name><operator pos:start="621:16" pos:end="621:17">-&gt;</operator><name pos:start="621:18" pos:end="621:27">msr_hv_tsc</name></name> <operator pos:start="621:29" pos:end="621:29">=</operator> <name pos:start="621:31" pos:end="621:37"><name pos:start="621:31" pos:end="621:34">msrs</name><index pos:start="621:35" pos:end="621:37">[<expr pos:start="621:36" pos:end="621:36"><name pos:start="621:36" pos:end="621:36">i</name></expr>]</index></name><operator pos:start="621:38" pos:end="621:38">.</operator><name pos:start="621:39" pos:end="621:42">data</name></expr>;</expr_stmt>

            <break pos:start="623:13" pos:end="623:18">break;</break>

        <case pos:start="625:9" pos:end="625:57">case <expr pos:start="625:14" pos:end="625:56"><name pos:start="625:14" pos:end="625:32">HV_X64_MSR_CRASH_P0</name> <operator pos:start="625:34" pos:end="625:36">...</operator> <name pos:start="625:38" pos:end="625:56">HV_X64_MSR_CRASH_P4</name></expr>:</case>

            <expr_stmt pos:start="627:13" pos:end="627:81"><expr pos:start="627:13" pos:end="627:80"><name pos:start="627:13" pos:end="627:65"><name pos:start="627:13" pos:end="627:15">env</name><operator pos:start="627:16" pos:end="627:17">-&gt;</operator><name pos:start="627:18" pos:end="627:36">msr_hv_crash_params</name><index pos:start="627:37" pos:end="627:65">[<expr pos:start="627:38" pos:end="627:64"><name pos:start="627:38" pos:end="627:42">index</name> <operator pos:start="627:44" pos:end="627:44">-</operator> <name pos:start="627:46" pos:end="627:64">HV_X64_MSR_CRASH_P0</name></expr>]</index></name> <operator pos:start="627:67" pos:end="627:67">=</operator> <name pos:start="627:69" pos:end="627:75"><name pos:start="627:69" pos:end="627:72">msrs</name><index pos:start="627:73" pos:end="627:75">[<expr pos:start="627:74" pos:end="627:74"><name pos:start="627:74" pos:end="627:74">i</name></expr>]</index></name><operator pos:start="627:76" pos:end="627:76">.</operator><name pos:start="627:77" pos:end="627:80">data</name></expr>;</expr_stmt>

            <break pos:start="629:13" pos:end="629:18">break;</break>

        <case pos:start="631:9" pos:end="631:35">case <expr pos:start="631:14" pos:end="631:34"><name pos:start="631:14" pos:end="631:34">HV_X64_MSR_VP_RUNTIME</name></expr>:</case>

            <expr_stmt pos:start="633:13" pos:end="633:47"><expr pos:start="633:13" pos:end="633:46"><name pos:start="633:13" pos:end="633:31"><name pos:start="633:13" pos:end="633:15">env</name><operator pos:start="633:16" pos:end="633:17">-&gt;</operator><name pos:start="633:18" pos:end="633:31">msr_hv_runtime</name></name> <operator pos:start="633:33" pos:end="633:33">=</operator> <name pos:start="633:35" pos:end="633:41"><name pos:start="633:35" pos:end="633:38">msrs</name><index pos:start="633:39" pos:end="633:41">[<expr pos:start="633:40" pos:end="633:40"><name pos:start="633:40" pos:end="633:40">i</name></expr>]</index></name><operator pos:start="633:42" pos:end="633:42">.</operator><name pos:start="633:43" pos:end="633:46">data</name></expr>;</expr_stmt>

            <break pos:start="635:13" pos:end="635:18">break;</break>

        <case pos:start="637:9" pos:end="637:33">case <expr pos:start="637:14" pos:end="637:32"><name pos:start="637:14" pos:end="637:32">HV_X64_MSR_SCONTROL</name></expr>:</case>

            <expr_stmt pos:start="639:13" pos:end="639:53"><expr pos:start="639:13" pos:end="639:52"><name pos:start="639:13" pos:end="639:37"><name pos:start="639:13" pos:end="639:15">env</name><operator pos:start="639:16" pos:end="639:17">-&gt;</operator><name pos:start="639:18" pos:end="639:37">msr_hv_synic_control</name></name> <operator pos:start="639:39" pos:end="639:39">=</operator> <name pos:start="639:41" pos:end="639:47"><name pos:start="639:41" pos:end="639:44">msrs</name><index pos:start="639:45" pos:end="639:47">[<expr pos:start="639:46" pos:end="639:46"><name pos:start="639:46" pos:end="639:46">i</name></expr>]</index></name><operator pos:start="639:48" pos:end="639:48">.</operator><name pos:start="639:49" pos:end="639:52">data</name></expr>;</expr_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        <case pos:start="643:9" pos:end="643:30">case <expr pos:start="643:14" pos:end="643:29"><name pos:start="643:14" pos:end="643:29">HV_X64_MSR_SIEFP</name></expr>:</case>

            <expr_stmt pos:start="645:13" pos:end="645:54"><expr pos:start="645:13" pos:end="645:53"><name pos:start="645:13" pos:end="645:38"><name pos:start="645:13" pos:end="645:15">env</name><operator pos:start="645:16" pos:end="645:17">-&gt;</operator><name pos:start="645:18" pos:end="645:38">msr_hv_synic_evt_page</name></name> <operator pos:start="645:40" pos:end="645:40">=</operator> <name pos:start="645:42" pos:end="645:48"><name pos:start="645:42" pos:end="645:45">msrs</name><index pos:start="645:46" pos:end="645:48">[<expr pos:start="645:47" pos:end="645:47"><name pos:start="645:47" pos:end="645:47">i</name></expr>]</index></name><operator pos:start="645:49" pos:end="645:49">.</operator><name pos:start="645:50" pos:end="645:53">data</name></expr>;</expr_stmt>

            <break pos:start="647:13" pos:end="647:18">break;</break>

        <case pos:start="649:9" pos:end="649:29">case <expr pos:start="649:14" pos:end="649:28"><name pos:start="649:14" pos:end="649:28">HV_X64_MSR_SIMP</name></expr>:</case>

            <expr_stmt pos:start="651:13" pos:end="651:54"><expr pos:start="651:13" pos:end="651:53"><name pos:start="651:13" pos:end="651:38"><name pos:start="651:13" pos:end="651:15">env</name><operator pos:start="651:16" pos:end="651:17">-&gt;</operator><name pos:start="651:18" pos:end="651:38">msr_hv_synic_msg_page</name></name> <operator pos:start="651:40" pos:end="651:40">=</operator> <name pos:start="651:42" pos:end="651:48"><name pos:start="651:42" pos:end="651:45">msrs</name><index pos:start="651:46" pos:end="651:48">[<expr pos:start="651:47" pos:end="651:47"><name pos:start="651:47" pos:end="651:47">i</name></expr>]</index></name><operator pos:start="651:49" pos:end="651:49">.</operator><name pos:start="651:50" pos:end="651:53">data</name></expr>;</expr_stmt>

            <break pos:start="653:13" pos:end="653:18">break;</break>

        <case pos:start="655:9" pos:end="655:52">case <expr pos:start="655:14" pos:end="655:51"><name pos:start="655:14" pos:end="655:29">HV_X64_MSR_SINT0</name> <operator pos:start="655:31" pos:end="655:33">...</operator> <name pos:start="655:35" pos:end="655:51">HV_X64_MSR_SINT15</name></expr>:</case>

            <expr_stmt pos:start="657:13" pos:end="657:76"><expr pos:start="657:13" pos:end="657:75"><name pos:start="657:13" pos:end="657:60"><name pos:start="657:13" pos:end="657:15">env</name><operator pos:start="657:16" pos:end="657:17">-&gt;</operator><name pos:start="657:18" pos:end="657:34">msr_hv_synic_sint</name><index pos:start="657:35" pos:end="657:60">[<expr pos:start="657:36" pos:end="657:59"><name pos:start="657:36" pos:end="657:40">index</name> <operator pos:start="657:42" pos:end="657:42">-</operator> <name pos:start="657:44" pos:end="657:59">HV_X64_MSR_SINT0</name></expr>]</index></name> <operator pos:start="657:62" pos:end="657:62">=</operator> <name pos:start="657:64" pos:end="657:70"><name pos:start="657:64" pos:end="657:67">msrs</name><index pos:start="657:68" pos:end="657:70">[<expr pos:start="657:69" pos:end="657:69"><name pos:start="657:69" pos:end="657:69">i</name></expr>]</index></name><operator pos:start="657:71" pos:end="657:71">.</operator><name pos:start="657:72" pos:end="657:75">data</name></expr>;</expr_stmt>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        <case pos:start="661:9" pos:end="661:39">case <expr pos:start="661:14" pos:end="661:38"><name pos:start="661:14" pos:end="661:38">HV_X64_MSR_STIMER0_CONFIG</name></expr>:</case>

        <case pos:start="663:9" pos:end="663:39">case <expr pos:start="663:14" pos:end="663:38"><name pos:start="663:14" pos:end="663:38">HV_X64_MSR_STIMER1_CONFIG</name></expr>:</case>

        <case pos:start="665:9" pos:end="665:39">case <expr pos:start="665:14" pos:end="665:38"><name pos:start="665:14" pos:end="665:38">HV_X64_MSR_STIMER2_CONFIG</name></expr>:</case>

        <case pos:start="667:9" pos:end="667:39">case <expr pos:start="667:14" pos:end="667:38"><name pos:start="667:14" pos:end="667:38">HV_X64_MSR_STIMER3_CONFIG</name></expr>:</case>

            <expr_stmt pos:start="669:13" pos:end="671:45"><expr pos:start="669:13" pos:end="671:44"><name pos:start="669:13" pos:end="669:76"><name pos:start="669:13" pos:end="669:15">env</name><operator pos:start="669:16" pos:end="669:17">-&gt;</operator><name pos:start="669:18" pos:end="669:37">msr_hv_stimer_config</name><index pos:start="669:38" pos:end="669:76">[<expr pos:start="669:39" pos:end="669:75"><operator pos:start="669:39" pos:end="669:39">(</operator><name pos:start="669:40" pos:end="669:44">index</name> <operator pos:start="669:46" pos:end="669:46">-</operator> <name pos:start="669:48" pos:end="669:72">HV_X64_MSR_STIMER0_CONFIG</name><operator pos:start="669:73" pos:end="669:73">)</operator><operator pos:start="669:74" pos:end="669:74">/</operator><literal type="number" pos:start="669:75" pos:end="669:75">2</literal></expr>]</index></name> <operator pos:start="669:78" pos:end="669:78">=</operator>

                                <name pos:start="671:33" pos:end="671:39"><name pos:start="671:33" pos:end="671:36">msrs</name><index pos:start="671:37" pos:end="671:39">[<expr pos:start="671:38" pos:end="671:38"><name pos:start="671:38" pos:end="671:38">i</name></expr>]</index></name><operator pos:start="671:40" pos:end="671:40">.</operator><name pos:start="671:41" pos:end="671:44">data</name></expr>;</expr_stmt>

            <break pos:start="673:13" pos:end="673:18">break;</break>

        <case pos:start="675:9" pos:end="675:38">case <expr pos:start="675:14" pos:end="675:37"><name pos:start="675:14" pos:end="675:37">HV_X64_MSR_STIMER0_COUNT</name></expr>:</case>

        <case pos:start="677:9" pos:end="677:38">case <expr pos:start="677:14" pos:end="677:37"><name pos:start="677:14" pos:end="677:37">HV_X64_MSR_STIMER1_COUNT</name></expr>:</case>

        <case pos:start="679:9" pos:end="679:38">case <expr pos:start="679:14" pos:end="679:37"><name pos:start="679:14" pos:end="679:37">HV_X64_MSR_STIMER2_COUNT</name></expr>:</case>

        <case pos:start="681:9" pos:end="681:38">case <expr pos:start="681:14" pos:end="681:37"><name pos:start="681:14" pos:end="681:37">HV_X64_MSR_STIMER3_COUNT</name></expr>:</case>

            <expr_stmt pos:start="683:13" pos:end="685:45"><expr pos:start="683:13" pos:end="685:44"><name pos:start="683:13" pos:end="683:74"><name pos:start="683:13" pos:end="683:15">env</name><operator pos:start="683:16" pos:end="683:17">-&gt;</operator><name pos:start="683:18" pos:end="683:36">msr_hv_stimer_count</name><index pos:start="683:37" pos:end="683:74">[<expr pos:start="683:38" pos:end="683:73"><operator pos:start="683:38" pos:end="683:38">(</operator><name pos:start="683:39" pos:end="683:43">index</name> <operator pos:start="683:45" pos:end="683:45">-</operator> <name pos:start="683:47" pos:end="683:70">HV_X64_MSR_STIMER0_COUNT</name><operator pos:start="683:71" pos:end="683:71">)</operator><operator pos:start="683:72" pos:end="683:72">/</operator><literal type="number" pos:start="683:73" pos:end="683:73">2</literal></expr>]</index></name> <operator pos:start="683:76" pos:end="683:76">=</operator>

                                <name pos:start="685:33" pos:end="685:39"><name pos:start="685:33" pos:end="685:36">msrs</name><index pos:start="685:37" pos:end="685:39">[<expr pos:start="685:38" pos:end="685:38"><name pos:start="685:38" pos:end="685:38">i</name></expr>]</index></name><operator pos:start="685:40" pos:end="685:40">.</operator><name pos:start="685:41" pos:end="685:44">data</name></expr>;</expr_stmt>

            <break pos:start="687:13" pos:end="687:18">break;</break>

        <case pos:start="689:9" pos:end="689:29">case <expr pos:start="689:14" pos:end="689:28"><name pos:start="689:14" pos:end="689:28">MSR_MTRRdefType</name></expr>:</case>

            <expr_stmt pos:start="691:13" pos:end="691:45"><expr pos:start="691:13" pos:end="691:44"><name pos:start="691:13" pos:end="691:29"><name pos:start="691:13" pos:end="691:15">env</name><operator pos:start="691:16" pos:end="691:17">-&gt;</operator><name pos:start="691:18" pos:end="691:29">mtrr_deftype</name></name> <operator pos:start="691:31" pos:end="691:31">=</operator> <name pos:start="691:33" pos:end="691:39"><name pos:start="691:33" pos:end="691:36">msrs</name><index pos:start="691:37" pos:end="691:39">[<expr pos:start="691:38" pos:end="691:38"><name pos:start="691:38" pos:end="691:38">i</name></expr>]</index></name><operator pos:start="691:40" pos:end="691:40">.</operator><name pos:start="691:41" pos:end="691:44">data</name></expr>;</expr_stmt>

            <break pos:start="693:13" pos:end="693:18">break;</break>

        <case pos:start="695:9" pos:end="695:34">case <expr pos:start="695:14" pos:end="695:33"><name pos:start="695:14" pos:end="695:33">MSR_MTRRfix64K_00000</name></expr>:</case>

            <expr_stmt pos:start="697:13" pos:end="697:46"><expr pos:start="697:13" pos:end="697:45"><name pos:start="697:13" pos:end="697:30"><name pos:start="697:13" pos:end="697:15">env</name><operator pos:start="697:16" pos:end="697:17">-&gt;</operator><name pos:start="697:18" pos:end="697:27">mtrr_fixed</name><index pos:start="697:28" pos:end="697:30">[<expr pos:start="697:29" pos:end="697:29"><literal type="number" pos:start="697:29" pos:end="697:29">0</literal></expr>]</index></name> <operator pos:start="697:32" pos:end="697:32">=</operator> <name pos:start="697:34" pos:end="697:40"><name pos:start="697:34" pos:end="697:37">msrs</name><index pos:start="697:38" pos:end="697:40">[<expr pos:start="697:39" pos:end="697:39"><name pos:start="697:39" pos:end="697:39">i</name></expr>]</index></name><operator pos:start="697:41" pos:end="697:41">.</operator><name pos:start="697:42" pos:end="697:45">data</name></expr>;</expr_stmt>

            <break pos:start="699:13" pos:end="699:18">break;</break>

        <case pos:start="701:9" pos:end="701:34">case <expr pos:start="701:14" pos:end="701:33"><name pos:start="701:14" pos:end="701:33">MSR_MTRRfix16K_80000</name></expr>:</case>

            <expr_stmt pos:start="703:13" pos:end="703:46"><expr pos:start="703:13" pos:end="703:45"><name pos:start="703:13" pos:end="703:30"><name pos:start="703:13" pos:end="703:15">env</name><operator pos:start="703:16" pos:end="703:17">-&gt;</operator><name pos:start="703:18" pos:end="703:27">mtrr_fixed</name><index pos:start="703:28" pos:end="703:30">[<expr pos:start="703:29" pos:end="703:29"><literal type="number" pos:start="703:29" pos:end="703:29">1</literal></expr>]</index></name> <operator pos:start="703:32" pos:end="703:32">=</operator> <name pos:start="703:34" pos:end="703:40"><name pos:start="703:34" pos:end="703:37">msrs</name><index pos:start="703:38" pos:end="703:40">[<expr pos:start="703:39" pos:end="703:39"><name pos:start="703:39" pos:end="703:39">i</name></expr>]</index></name><operator pos:start="703:41" pos:end="703:41">.</operator><name pos:start="703:42" pos:end="703:45">data</name></expr>;</expr_stmt>

            <break pos:start="705:13" pos:end="705:18">break;</break>

        <case pos:start="707:9" pos:end="707:34">case <expr pos:start="707:14" pos:end="707:33"><name pos:start="707:14" pos:end="707:33">MSR_MTRRfix16K_A0000</name></expr>:</case>

            <expr_stmt pos:start="709:13" pos:end="709:46"><expr pos:start="709:13" pos:end="709:45"><name pos:start="709:13" pos:end="709:30"><name pos:start="709:13" pos:end="709:15">env</name><operator pos:start="709:16" pos:end="709:17">-&gt;</operator><name pos:start="709:18" pos:end="709:27">mtrr_fixed</name><index pos:start="709:28" pos:end="709:30">[<expr pos:start="709:29" pos:end="709:29"><literal type="number" pos:start="709:29" pos:end="709:29">2</literal></expr>]</index></name> <operator pos:start="709:32" pos:end="709:32">=</operator> <name pos:start="709:34" pos:end="709:40"><name pos:start="709:34" pos:end="709:37">msrs</name><index pos:start="709:38" pos:end="709:40">[<expr pos:start="709:39" pos:end="709:39"><name pos:start="709:39" pos:end="709:39">i</name></expr>]</index></name><operator pos:start="709:41" pos:end="709:41">.</operator><name pos:start="709:42" pos:end="709:45">data</name></expr>;</expr_stmt>

            <break pos:start="711:13" pos:end="711:18">break;</break>

        <case pos:start="713:9" pos:end="713:33">case <expr pos:start="713:14" pos:end="713:32"><name pos:start="713:14" pos:end="713:32">MSR_MTRRfix4K_C0000</name></expr>:</case>

            <expr_stmt pos:start="715:13" pos:end="715:46"><expr pos:start="715:13" pos:end="715:45"><name pos:start="715:13" pos:end="715:30"><name pos:start="715:13" pos:end="715:15">env</name><operator pos:start="715:16" pos:end="715:17">-&gt;</operator><name pos:start="715:18" pos:end="715:27">mtrr_fixed</name><index pos:start="715:28" pos:end="715:30">[<expr pos:start="715:29" pos:end="715:29"><literal type="number" pos:start="715:29" pos:end="715:29">3</literal></expr>]</index></name> <operator pos:start="715:32" pos:end="715:32">=</operator> <name pos:start="715:34" pos:end="715:40"><name pos:start="715:34" pos:end="715:37">msrs</name><index pos:start="715:38" pos:end="715:40">[<expr pos:start="715:39" pos:end="715:39"><name pos:start="715:39" pos:end="715:39">i</name></expr>]</index></name><operator pos:start="715:41" pos:end="715:41">.</operator><name pos:start="715:42" pos:end="715:45">data</name></expr>;</expr_stmt>

            <break pos:start="717:13" pos:end="717:18">break;</break>

        <case pos:start="719:9" pos:end="719:33">case <expr pos:start="719:14" pos:end="719:32"><name pos:start="719:14" pos:end="719:32">MSR_MTRRfix4K_C8000</name></expr>:</case>

            <expr_stmt pos:start="721:13" pos:end="721:46"><expr pos:start="721:13" pos:end="721:45"><name pos:start="721:13" pos:end="721:30"><name pos:start="721:13" pos:end="721:15">env</name><operator pos:start="721:16" pos:end="721:17">-&gt;</operator><name pos:start="721:18" pos:end="721:27">mtrr_fixed</name><index pos:start="721:28" pos:end="721:30">[<expr pos:start="721:29" pos:end="721:29"><literal type="number" pos:start="721:29" pos:end="721:29">4</literal></expr>]</index></name> <operator pos:start="721:32" pos:end="721:32">=</operator> <name pos:start="721:34" pos:end="721:40"><name pos:start="721:34" pos:end="721:37">msrs</name><index pos:start="721:38" pos:end="721:40">[<expr pos:start="721:39" pos:end="721:39"><name pos:start="721:39" pos:end="721:39">i</name></expr>]</index></name><operator pos:start="721:41" pos:end="721:41">.</operator><name pos:start="721:42" pos:end="721:45">data</name></expr>;</expr_stmt>

            <break pos:start="723:13" pos:end="723:18">break;</break>

        <case pos:start="725:9" pos:end="725:33">case <expr pos:start="725:14" pos:end="725:32"><name pos:start="725:14" pos:end="725:32">MSR_MTRRfix4K_D0000</name></expr>:</case>

            <expr_stmt pos:start="727:13" pos:end="727:46"><expr pos:start="727:13" pos:end="727:45"><name pos:start="727:13" pos:end="727:30"><name pos:start="727:13" pos:end="727:15">env</name><operator pos:start="727:16" pos:end="727:17">-&gt;</operator><name pos:start="727:18" pos:end="727:27">mtrr_fixed</name><index pos:start="727:28" pos:end="727:30">[<expr pos:start="727:29" pos:end="727:29"><literal type="number" pos:start="727:29" pos:end="727:29">5</literal></expr>]</index></name> <operator pos:start="727:32" pos:end="727:32">=</operator> <name pos:start="727:34" pos:end="727:40"><name pos:start="727:34" pos:end="727:37">msrs</name><index pos:start="727:38" pos:end="727:40">[<expr pos:start="727:39" pos:end="727:39"><name pos:start="727:39" pos:end="727:39">i</name></expr>]</index></name><operator pos:start="727:41" pos:end="727:41">.</operator><name pos:start="727:42" pos:end="727:45">data</name></expr>;</expr_stmt>

            <break pos:start="729:13" pos:end="729:18">break;</break>

        <case pos:start="731:9" pos:end="731:33">case <expr pos:start="731:14" pos:end="731:32"><name pos:start="731:14" pos:end="731:32">MSR_MTRRfix4K_D8000</name></expr>:</case>

            <expr_stmt pos:start="733:13" pos:end="733:46"><expr pos:start="733:13" pos:end="733:45"><name pos:start="733:13" pos:end="733:30"><name pos:start="733:13" pos:end="733:15">env</name><operator pos:start="733:16" pos:end="733:17">-&gt;</operator><name pos:start="733:18" pos:end="733:27">mtrr_fixed</name><index pos:start="733:28" pos:end="733:30">[<expr pos:start="733:29" pos:end="733:29"><literal type="number" pos:start="733:29" pos:end="733:29">6</literal></expr>]</index></name> <operator pos:start="733:32" pos:end="733:32">=</operator> <name pos:start="733:34" pos:end="733:40"><name pos:start="733:34" pos:end="733:37">msrs</name><index pos:start="733:38" pos:end="733:40">[<expr pos:start="733:39" pos:end="733:39"><name pos:start="733:39" pos:end="733:39">i</name></expr>]</index></name><operator pos:start="733:41" pos:end="733:41">.</operator><name pos:start="733:42" pos:end="733:45">data</name></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        <case pos:start="737:9" pos:end="737:33">case <expr pos:start="737:14" pos:end="737:32"><name pos:start="737:14" pos:end="737:32">MSR_MTRRfix4K_E0000</name></expr>:</case>

            <expr_stmt pos:start="739:13" pos:end="739:46"><expr pos:start="739:13" pos:end="739:45"><name pos:start="739:13" pos:end="739:30"><name pos:start="739:13" pos:end="739:15">env</name><operator pos:start="739:16" pos:end="739:17">-&gt;</operator><name pos:start="739:18" pos:end="739:27">mtrr_fixed</name><index pos:start="739:28" pos:end="739:30">[<expr pos:start="739:29" pos:end="739:29"><literal type="number" pos:start="739:29" pos:end="739:29">7</literal></expr>]</index></name> <operator pos:start="739:32" pos:end="739:32">=</operator> <name pos:start="739:34" pos:end="739:40"><name pos:start="739:34" pos:end="739:37">msrs</name><index pos:start="739:38" pos:end="739:40">[<expr pos:start="739:39" pos:end="739:39"><name pos:start="739:39" pos:end="739:39">i</name></expr>]</index></name><operator pos:start="739:41" pos:end="739:41">.</operator><name pos:start="739:42" pos:end="739:45">data</name></expr>;</expr_stmt>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        <case pos:start="743:9" pos:end="743:33">case <expr pos:start="743:14" pos:end="743:32"><name pos:start="743:14" pos:end="743:32">MSR_MTRRfix4K_E8000</name></expr>:</case>

            <expr_stmt pos:start="745:13" pos:end="745:46"><expr pos:start="745:13" pos:end="745:45"><name pos:start="745:13" pos:end="745:30"><name pos:start="745:13" pos:end="745:15">env</name><operator pos:start="745:16" pos:end="745:17">-&gt;</operator><name pos:start="745:18" pos:end="745:27">mtrr_fixed</name><index pos:start="745:28" pos:end="745:30">[<expr pos:start="745:29" pos:end="745:29"><literal type="number" pos:start="745:29" pos:end="745:29">8</literal></expr>]</index></name> <operator pos:start="745:32" pos:end="745:32">=</operator> <name pos:start="745:34" pos:end="745:40"><name pos:start="745:34" pos:end="745:37">msrs</name><index pos:start="745:38" pos:end="745:40">[<expr pos:start="745:39" pos:end="745:39"><name pos:start="745:39" pos:end="745:39">i</name></expr>]</index></name><operator pos:start="745:41" pos:end="745:41">.</operator><name pos:start="745:42" pos:end="745:45">data</name></expr>;</expr_stmt>

            <break pos:start="747:13" pos:end="747:18">break;</break>

        <case pos:start="749:9" pos:end="749:33">case <expr pos:start="749:14" pos:end="749:32"><name pos:start="749:14" pos:end="749:32">MSR_MTRRfix4K_F0000</name></expr>:</case>

            <expr_stmt pos:start="751:13" pos:end="751:46"><expr pos:start="751:13" pos:end="751:45"><name pos:start="751:13" pos:end="751:30"><name pos:start="751:13" pos:end="751:15">env</name><operator pos:start="751:16" pos:end="751:17">-&gt;</operator><name pos:start="751:18" pos:end="751:27">mtrr_fixed</name><index pos:start="751:28" pos:end="751:30">[<expr pos:start="751:29" pos:end="751:29"><literal type="number" pos:start="751:29" pos:end="751:29">9</literal></expr>]</index></name> <operator pos:start="751:32" pos:end="751:32">=</operator> <name pos:start="751:34" pos:end="751:40"><name pos:start="751:34" pos:end="751:37">msrs</name><index pos:start="751:38" pos:end="751:40">[<expr pos:start="751:39" pos:end="751:39"><name pos:start="751:39" pos:end="751:39">i</name></expr>]</index></name><operator pos:start="751:41" pos:end="751:41">.</operator><name pos:start="751:42" pos:end="751:45">data</name></expr>;</expr_stmt>

            <break pos:start="753:13" pos:end="753:18">break;</break>

        <case pos:start="755:9" pos:end="755:33">case <expr pos:start="755:14" pos:end="755:32"><name pos:start="755:14" pos:end="755:32">MSR_MTRRfix4K_F8000</name></expr>:</case>

            <expr_stmt pos:start="757:13" pos:end="757:47"><expr pos:start="757:13" pos:end="757:46"><name pos:start="757:13" pos:end="757:31"><name pos:start="757:13" pos:end="757:15">env</name><operator pos:start="757:16" pos:end="757:17">-&gt;</operator><name pos:start="757:18" pos:end="757:27">mtrr_fixed</name><index pos:start="757:28" pos:end="757:31">[<expr pos:start="757:29" pos:end="757:30"><literal type="number" pos:start="757:29" pos:end="757:30">10</literal></expr>]</index></name> <operator pos:start="757:33" pos:end="757:33">=</operator> <name pos:start="757:35" pos:end="757:41"><name pos:start="757:35" pos:end="757:38">msrs</name><index pos:start="757:39" pos:end="757:41">[<expr pos:start="757:40" pos:end="757:40"><name pos:start="757:40" pos:end="757:40">i</name></expr>]</index></name><operator pos:start="757:42" pos:end="757:42">.</operator><name pos:start="757:43" pos:end="757:46">data</name></expr>;</expr_stmt>

            <break pos:start="759:13" pos:end="759:18">break;</break>

        <case pos:start="761:9" pos:end="761:76">case <expr pos:start="761:14" pos:end="761:75"><call pos:start="761:14" pos:end="761:32"><name pos:start="761:14" pos:end="761:29">MSR_MTRRphysBase</name><argument_list pos:start="761:30" pos:end="761:32">(<argument pos:start="761:31" pos:end="761:31"><expr pos:start="761:31" pos:end="761:31"><literal type="number" pos:start="761:31" pos:end="761:31">0</literal></expr></argument>)</argument_list></call> <operator pos:start="761:34" pos:end="761:36">...</operator> <call pos:start="761:38" pos:end="761:75"><name pos:start="761:38" pos:end="761:53">MSR_MTRRphysMask</name><argument_list pos:start="761:54" pos:end="761:75">(<argument pos:start="761:55" pos:end="761:74"><expr pos:start="761:55" pos:end="761:74"><name pos:start="761:55" pos:end="761:70">MSR_MTRRcap_VCNT</name> <operator pos:start="761:72" pos:end="761:72">-</operator> <literal type="number" pos:start="761:74" pos:end="761:74">1</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="763:13" pos:end="773:13"><if pos:start="763:13" pos:end="769:13">if <condition pos:start="763:16" pos:end="763:26">(<expr pos:start="763:17" pos:end="763:25"><name pos:start="763:17" pos:end="763:21">index</name> <operator pos:start="763:23" pos:end="763:23">&amp;</operator> <literal type="number" pos:start="763:25" pos:end="763:25">1</literal></expr>)</condition> <block pos:start="763:28" pos:end="769:13">{<block_content pos:start="765:17" pos:end="767:77">

                <expr_stmt pos:start="765:17" pos:end="767:77"><expr pos:start="765:17" pos:end="767:76"><name pos:start="765:17" pos:end="765:55"><name pos:start="765:17" pos:end="765:19">env</name><operator pos:start="765:20" pos:end="765:21">-&gt;</operator><name pos:start="765:22" pos:end="765:29">mtrr_var</name><index pos:start="765:30" pos:end="765:55">[<expr pos:start="765:31" pos:end="765:54"><call pos:start="765:31" pos:end="765:54"><name pos:start="765:31" pos:end="765:47">MSR_MTRRphysIndex</name><argument_list pos:start="765:48" pos:end="765:54">(<argument pos:start="765:49" pos:end="765:53"><expr pos:start="765:49" pos:end="765:53"><name pos:start="765:49" pos:end="765:53">index</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="765:56" pos:end="765:56">.</operator><name pos:start="765:57" pos:end="765:60">mask</name> <operator pos:start="765:62" pos:end="765:62">=</operator> <name pos:start="765:64" pos:end="765:70"><name pos:start="765:64" pos:end="765:67">msrs</name><index pos:start="765:68" pos:end="765:70">[<expr pos:start="765:69" pos:end="765:69"><name pos:start="765:69" pos:end="765:69">i</name></expr>]</index></name><operator pos:start="765:71" pos:end="765:71">.</operator><name pos:start="765:72" pos:end="765:75">data</name> <operator pos:start="765:77" pos:end="765:77">|</operator>

                                                               <name pos:start="767:64" pos:end="767:76">mtrr_top_bits</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="769:15" pos:end="773:13">else <block pos:start="769:20" pos:end="773:13">{<block_content pos:start="771:17" pos:end="771:76">

                <expr_stmt pos:start="771:17" pos:end="771:76"><expr pos:start="771:17" pos:end="771:75"><name pos:start="771:17" pos:end="771:55"><name pos:start="771:17" pos:end="771:19">env</name><operator pos:start="771:20" pos:end="771:21">-&gt;</operator><name pos:start="771:22" pos:end="771:29">mtrr_var</name><index pos:start="771:30" pos:end="771:55">[<expr pos:start="771:31" pos:end="771:54"><call pos:start="771:31" pos:end="771:54"><name pos:start="771:31" pos:end="771:47">MSR_MTRRphysIndex</name><argument_list pos:start="771:48" pos:end="771:54">(<argument pos:start="771:49" pos:end="771:53"><expr pos:start="771:49" pos:end="771:53"><name pos:start="771:49" pos:end="771:53">index</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="771:56" pos:end="771:56">.</operator><name pos:start="771:57" pos:end="771:60">base</name> <operator pos:start="771:62" pos:end="771:62">=</operator> <name pos:start="771:64" pos:end="771:70"><name pos:start="771:64" pos:end="771:67">msrs</name><index pos:start="771:68" pos:end="771:70">[<expr pos:start="771:69" pos:end="771:69"><name pos:start="771:69" pos:end="771:69">i</name></expr>]</index></name><operator pos:start="771:71" pos:end="771:71">.</operator><name pos:start="771:72" pos:end="771:75">data</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="775:13" pos:end="775:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <return pos:start="783:5" pos:end="783:13">return <expr pos:start="783:12" pos:end="783:12"><literal type="number" pos:start="783:12" pos:end="783:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
