<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5758.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:32">mp_dacl_listxattr</name><parameter_list pos:start="1:33" pos:end="3:71">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">FsContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">path</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:43"><decl pos:start="3:34" pos:end="3:43"><type pos:start="3:34" pos:end="3:43"><name pos:start="3:34" pos:end="3:37">char</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">name</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:56"><decl pos:start="3:46" pos:end="3:56"><type pos:start="3:46" pos:end="3:56"><name pos:start="3:46" pos:end="3:49">void</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:56">value</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:64">size_t</name></type> <name pos:start="3:66" pos:end="3:70">osize</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="35:1">{<block_content pos:start="7:5" pos:end="33:13">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">ssize_t</name></type> <name pos:start="7:13" pos:end="7:15">len</name> <init pos:start="7:17" pos:end="7:37">= <expr pos:start="7:19" pos:end="7:37"><sizeof pos:start="7:19" pos:end="7:37">sizeof<argument_list pos:start="7:25" pos:end="7:37">(<argument pos:start="7:26" pos:end="7:36"><expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36">ACL_DEFAULT</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:14">value</name></expr>)</condition> <block pos:start="11:17" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:19">

        <return pos:start="13:9" pos:end="13:19">return <expr pos:start="13:16" pos:end="13:18"><name pos:start="13:16" pos:end="13:18">len</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:13">osize</name> <operator pos:start="19:15" pos:end="19:15">&lt;</operator> <name pos:start="19:17" pos:end="19:19">len</name></expr>)</condition> <block pos:start="19:22" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:23"><expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">errno</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:22">ERANGE</name></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:39">/* len includes the trailing NUL */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><call pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:34">(<argument pos:start="31:12" pos:end="31:16"><expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:16">value</name></expr></argument>, <argument pos:start="31:19" pos:end="31:28"><expr pos:start="31:19" pos:end="31:28"><name pos:start="31:19" pos:end="31:28">ACL_ACCESS</name></expr></argument>, <argument pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
