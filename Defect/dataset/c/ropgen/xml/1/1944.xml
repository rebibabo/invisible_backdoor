<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1944.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">av_stream_add_side_data</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:36">AVStream</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">st</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:72"><decl pos:start="1:43" pos:end="1:72"><type pos:start="1:43" pos:end="1:72"><name pos:start="1:43" pos:end="1:67"><name pos:start="1:43" pos:end="1:46">enum</name> <name pos:start="1:48" pos:end="1:67">AVPacketSideDataType</name></name></type> <name pos:start="1:69" pos:end="1:72">type</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">data</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:54"><decl pos:start="3:44" pos:end="3:54"><type pos:start="3:44" pos:end="3:54"><name pos:start="3:44" pos:end="3:49">size_t</name></type> <name pos:start="3:51" pos:end="3:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:13">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">AVPacketSideData</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">sd</name></decl>, <decl pos:start="7:27" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:22"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <for pos:start="13:5" pos:end="31:5">for <control pos:start="13:9" pos:end="13:42">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">i</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:37"><expr pos:start="13:17" pos:end="13:36"><name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:36"><name pos:start="13:21" pos:end="13:22">st</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:36">nb_side_data</name></name></expr>;</condition> <incr pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:39">i</name><operator pos:start="13:40" pos:end="13:41">++</operator></expr></incr>)</control> <block pos:start="13:44" pos:end="31:5">{<block_content pos:start="15:9" pos:end="29:9">

        <expr_stmt pos:start="15:9" pos:end="15:31"><expr pos:start="15:9" pos:end="15:30"><name pos:start="15:9" pos:end="15:10">sd</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:30"><name pos:start="15:15" pos:end="15:16">st</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:27">side_data</name><index pos:start="15:28" pos:end="15:30">[<expr pos:start="15:29" pos:end="15:29"><name pos:start="15:29" pos:end="15:29">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="19:9" pos:end="29:9"><if pos:start="19:9" pos:end="29:9">if <condition pos:start="19:12" pos:end="19:29">(<expr pos:start="19:13" pos:end="19:28"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:14">sd</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:20">type</name></name> <operator pos:start="19:22" pos:end="19:23">==</operator> <name pos:start="19:25" pos:end="19:28">type</name></expr>)</condition> <block pos:start="19:31" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:21">

            <expr_stmt pos:start="21:13" pos:end="21:32"><expr pos:start="21:13" pos:end="21:31"><call pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:20">av_freep</name><argument_list pos:start="21:21" pos:end="21:31">(<argument pos:start="21:22" pos:end="21:30"><expr pos:start="21:22" pos:end="21:30"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:30"><name pos:start="21:23" pos:end="21:24">sd</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:30">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:14">sd</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">data</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:27">data</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:28"><expr pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:14">sd</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:20">size</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:27">size</name></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:21">return <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="35:5" pos:end="35:78"><expr pos:start="35:5" pos:end="35:77"><name pos:start="35:5" pos:end="35:7">tmp</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:77"><name pos:start="35:11" pos:end="35:26">av_realloc_array</name><argument_list pos:start="35:27" pos:end="35:77">(<argument pos:start="35:28" pos:end="35:40"><expr pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:29">st</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">side_data</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:62"><expr pos:start="35:43" pos:end="35:62"><name pos:start="35:43" pos:end="35:58"><name pos:start="35:43" pos:end="35:44">st</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:58">nb_side_data</name></name> <operator pos:start="35:60" pos:end="35:60">+</operator> <literal type="number" pos:start="35:62" pos:end="35:62">1</literal></expr></argument>, <argument pos:start="35:65" pos:end="35:76"><expr pos:start="35:65" pos:end="35:76"><sizeof pos:start="35:65" pos:end="35:76">sizeof<argument_list pos:start="35:71" pos:end="35:76">(<argument pos:start="35:72" pos:end="35:75"><expr pos:start="35:72" pos:end="35:75"><operator pos:start="35:72" pos:end="35:72">*</operator><name pos:start="35:73" pos:end="35:75">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:13">(<expr pos:start="37:9" pos:end="37:12"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:12">tmp</name></expr>)</condition> <block pos:start="37:15" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:6">st</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:17">side_data</name></name> <operator pos:start="45:19" pos:end="45:19">=</operator> <name pos:start="45:21" pos:end="45:23">tmp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:6">st</name><operator pos:start="47:7" pos:end="47:8">-&gt;</operator><name pos:start="47:9" pos:end="47:20">nb_side_data</name></name><operator pos:start="47:21" pos:end="47:22">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:6">sd</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <operator pos:start="51:10" pos:end="51:10">&amp;</operator><name pos:start="51:11" pos:end="51:45"><name pos:start="51:11" pos:end="51:12">st</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:23">side_data</name><index pos:start="51:24" pos:end="51:45">[<expr pos:start="51:25" pos:end="51:44"><name pos:start="51:25" pos:end="51:40"><name pos:start="51:25" pos:end="51:26">st</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:40">nb_side_data</name></name> <operator pos:start="51:42" pos:end="51:42">-</operator> <literal type="number" pos:start="51:44" pos:end="51:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:20"><expr pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:6">sd</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:12">type</name></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:19">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:20"><expr pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:12"><name pos:start="55:5" pos:end="55:6">sd</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:12">data</name></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:19">data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:6">sd</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:12">size</name></name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:19">size</name></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
