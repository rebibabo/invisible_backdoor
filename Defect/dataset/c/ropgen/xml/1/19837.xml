<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19837.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:16">cksm</name>)<parameter_list pos:start="1:18" pos:end="1:43">(<parameter pos:start="1:19" pos:end="1:29"><decl pos:start="1:19" pos:end="1:29"><type pos:start="1:19" pos:end="1:29"><name pos:start="1:19" pos:end="1:26">uint32_t</name></type> <name pos:start="1:28" pos:end="1:29">r1</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:39">uint32_t</name></type> <name pos:start="1:41" pos:end="1:42">r2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:77">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">src</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:36">get_address_31fix</name><argument_list pos:start="5:37" pos:end="5:40">(<argument pos:start="5:38" pos:end="5:39"><expr pos:start="5:38" pos:end="5:39"><name pos:start="5:38" pos:end="5:39">r2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:20">src_len</name> <init pos:start="7:22" pos:end="7:47">= <expr pos:start="7:24" pos:end="7:47"><name pos:start="7:24" pos:end="7:47"><name pos:start="7:24" pos:end="7:26">env</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">regs</name><index pos:start="7:33" pos:end="7:47">[<expr pos:start="7:34" pos:end="7:46"><operator pos:start="7:34" pos:end="7:34">(</operator><name pos:start="7:35" pos:end="7:36">r2</name> <operator pos:start="7:38" pos:end="7:38">+</operator> <literal type="number" pos:start="7:40" pos:end="7:40">1</literal><operator pos:start="7:41" pos:end="7:41">)</operator> <operator pos:start="7:43" pos:end="7:43">&amp;</operator> <literal type="number" pos:start="7:45" pos:end="7:46">15</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:17">cksm</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="27:5">while <condition pos:start="13:11" pos:end="13:24">(<expr pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:18">src_len</name> <operator pos:start="13:20" pos:end="13:21">&gt;=</operator> <literal type="number" pos:start="13:23" pos:end="13:23">4</literal></expr>)</condition> <block pos:start="13:26" pos:end="27:5">{<block_content pos:start="15:9" pos:end="25:17">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:12">cksm</name> <operator pos:start="15:14" pos:end="15:15">+=</operator> <call pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:19">ldl</name><argument_list pos:start="15:20" pos:end="15:24">(<argument pos:start="15:21" pos:end="15:23"><expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:12">cksm</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:34"><name pos:start="17:16" pos:end="17:28">cksm_overflow</name><argument_list pos:start="17:29" pos:end="17:34">(<argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">cksm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="21:9" pos:end="21:31">/* move to next word */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:15">src_len</name> <operator pos:start="23:17" pos:end="23:18">-=</operator> <literal type="number" pos:start="23:20" pos:end="23:20">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:17"><expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">src</name> <operator pos:start="25:13" pos:end="25:14">+=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">4</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <switch pos:start="31:5" pos:end="65:5">switch <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:19">src_len</name></expr>)</condition> <block pos:start="31:22" pos:end="65:5">{<block_content pos:start="33:5" pos:end="63:14">

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">0</literal></expr>:</case>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">1</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:26"><expr pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:12">cksm</name> <operator pos:start="39:14" pos:end="39:15">+=</operator> <call pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:20">ldub</name><argument_list pos:start="39:21" pos:end="39:25">(<argument pos:start="39:22" pos:end="39:24"><expr pos:start="39:22" pos:end="39:24"><name pos:start="39:22" pos:end="39:24">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:12">cksm</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:34"><name pos:start="41:16" pos:end="41:28">cksm_overflow</name><argument_list pos:start="41:29" pos:end="41:34">(<argument pos:start="41:30" pos:end="41:33"><expr pos:start="41:30" pos:end="41:33"><name pos:start="41:30" pos:end="41:33">cksm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">2</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:12">cksm</name> <operator pos:start="47:14" pos:end="47:15">+=</operator> <call pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:20">lduw</name><argument_list pos:start="47:21" pos:end="47:25">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:12">cksm</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:28">cksm_overflow</name><argument_list pos:start="49:29" pos:end="49:34">(<argument pos:start="49:30" pos:end="49:33"><expr pos:start="49:30" pos:end="49:33"><name pos:start="49:30" pos:end="49:33">cksm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">3</literal></expr>:</case>

        <comment type="block" pos:start="55:9" pos:end="55:49">/* XXX check if this really is correct */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:31"><expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:12">cksm</name> <operator pos:start="57:14" pos:end="57:15">+=</operator> <call pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:20">lduw</name><argument_list pos:start="57:21" pos:end="57:25">(<argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">src</name></expr></argument>)</argument_list></call> <operator pos:start="57:27" pos:end="57:28">&lt;&lt;</operator> <literal type="number" pos:start="57:30" pos:end="57:30">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:12">cksm</name> <operator pos:start="59:14" pos:end="59:15">+=</operator> <call pos:start="59:17" pos:end="59:29"><name pos:start="59:17" pos:end="59:20">ldub</name><argument_list pos:start="59:21" pos:end="59:29">(<argument pos:start="59:22" pos:end="59:28"><expr pos:start="59:22" pos:end="59:28"><name pos:start="59:22" pos:end="59:24">src</name> <operator pos:start="59:26" pos:end="59:26">+</operator> <literal type="number" pos:start="59:28" pos:end="59:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:12">cksm</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:28">cksm_overflow</name><argument_list pos:start="61:29" pos:end="61:34">(<argument pos:start="61:30" pos:end="61:33"><expr pos:start="61:30" pos:end="61:33"><name pos:start="61:30" pos:end="61:33">cksm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    </block_content>}</block></switch>



    <comment type="block" pos:start="69:5" pos:end="69:45">/* indicate we've processed everything */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:7">env</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:13">regs</name><index pos:start="71:14" pos:end="71:28">[<expr pos:start="71:15" pos:end="71:27"><operator pos:start="71:15" pos:end="71:15">(</operator><name pos:start="71:16" pos:end="71:17">r2</name> <operator pos:start="71:19" pos:end="71:19">+</operator> <literal type="number" pos:start="71:21" pos:end="71:21">1</literal><operator pos:start="71:22" pos:end="71:22">)</operator> <operator pos:start="71:24" pos:end="71:24">&amp;</operator> <literal type="number" pos:start="71:26" pos:end="71:27">15</literal></expr>]</index></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <literal type="number" pos:start="71:32" pos:end="71:32">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="75:5" pos:end="75:22">/* store result */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:77"><expr pos:start="77:5" pos:end="77:76"><name pos:start="77:5" pos:end="77:17"><name pos:start="77:5" pos:end="77:7">env</name><operator pos:start="77:8" pos:end="77:9">-&gt;</operator><name pos:start="77:10" pos:end="77:13">regs</name><index pos:start="77:14" pos:end="77:17">[<expr pos:start="77:15" pos:end="77:16"><name pos:start="77:15" pos:end="77:16">r1</name></expr>]</index></name> <operator pos:start="77:19" pos:end="77:19">=</operator> <operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:34"><name pos:start="77:22" pos:end="77:24">env</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:30">regs</name><index pos:start="77:31" pos:end="77:34">[<expr pos:start="77:32" pos:end="77:33"><name pos:start="77:32" pos:end="77:33">r1</name></expr>]</index></name> <operator pos:start="77:36" pos:end="77:36">&amp;</operator> <literal type="number" pos:start="77:38" pos:end="77:58">0xffffffff00000000ULL</literal><operator pos:start="77:59" pos:end="77:59">)</operator> <operator pos:start="77:61" pos:end="77:61">|</operator> <operator pos:start="77:63" pos:end="77:63">(</operator><name pos:start="77:64" pos:end="77:71">uint32_t</name><operator pos:start="77:72" pos:end="77:72">)</operator><name pos:start="77:73" pos:end="77:76">cksm</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
