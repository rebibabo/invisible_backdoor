<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25675.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:19">v7m_msr</name>)<parameter_list pos:start="1:21" pos:end="1:66">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:32">CPUARMState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:51">reg</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:5">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">ARMCPU</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">cpu</name> <init pos:start="5:17" pos:end="5:38">= <expr pos:start="5:19" pos:end="5:38"><call pos:start="5:19" pos:end="5:38"><name pos:start="5:19" pos:end="5:33">arm_env_get_cpu</name><argument_list pos:start="5:34" pos:end="5:38">(<argument pos:start="5:35" pos:end="5:37"><expr pos:start="5:35" pos:end="5:37"><name pos:start="5:35" pos:end="5:37">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="137:5">switch <condition pos:start="9:12" pos:end="9:16">(<expr pos:start="9:13" pos:end="9:15"><name pos:start="9:13" pos:end="9:15">reg</name></expr>)</condition> <block pos:start="9:18" pos:end="137:5">{<block_content pos:start="11:5" pos:end="135:15">

    <case pos:start="11:5" pos:end="11:11">case <expr pos:start="11:10" pos:end="11:10"><literal type="number" pos:start="11:10" pos:end="11:10">0</literal></expr>:</case> <comment type="block" pos:start="11:13" pos:end="11:22">/* APSR */</comment>

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:18">xpsr_write</name><argument_list pos:start="13:19" pos:end="13:40">(<argument pos:start="13:20" pos:end="13:22"><expr pos:start="13:20" pos:end="13:22"><name pos:start="13:20" pos:end="13:22">env</name></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">val</name></expr></argument>, <argument pos:start="13:30" pos:end="13:39"><expr pos:start="13:30" pos:end="13:39"><literal type="number" pos:start="13:30" pos:end="13:39">0xf8000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">1</literal></expr>:</case> <comment type="block" pos:start="17:13" pos:end="17:23">/* IAPSR */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:41"><expr pos:start="19:9" pos:end="19:40"><call pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:18">xpsr_write</name><argument_list pos:start="19:19" pos:end="19:40">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">env</name></expr></argument>, <argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">val</name></expr></argument>, <argument pos:start="19:30" pos:end="19:39"><expr pos:start="19:30" pos:end="19:39"><literal type="number" pos:start="19:30" pos:end="19:39">0xf8000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">2</literal></expr>:</case> <comment type="block" pos:start="23:13" pos:end="23:23">/* EAPSR */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><call pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:18">xpsr_write</name><argument_list pos:start="25:19" pos:end="25:40">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">env</name></expr></argument>, <argument pos:start="25:25" pos:end="25:27"><expr pos:start="25:25" pos:end="25:27"><name pos:start="25:25" pos:end="25:27">val</name></expr></argument>, <argument pos:start="25:30" pos:end="25:39"><expr pos:start="25:30" pos:end="25:39"><literal type="number" pos:start="25:30" pos:end="25:39">0xfe00fc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">3</literal></expr>:</case> <comment type="block" pos:start="29:13" pos:end="29:22">/* xPSR */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:18">xpsr_write</name><argument_list pos:start="31:19" pos:end="31:40">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">env</name></expr></argument>, <argument pos:start="31:25" pos:end="31:27"><expr pos:start="31:25" pos:end="31:27"><name pos:start="31:25" pos:end="31:27">val</name></expr></argument>, <argument pos:start="31:30" pos:end="31:39"><expr pos:start="31:30" pos:end="31:39"><literal type="number" pos:start="31:30" pos:end="31:39">0xfe00fc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">5</literal></expr>:</case> <comment type="block" pos:start="35:13" pos:end="35:22">/* IPSR */</comment>

        <comment type="block" pos:start="37:9" pos:end="37:38">/* IPSR bits are readonly.  */</comment>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">6</literal></expr>:</case> <comment type="block" pos:start="41:13" pos:end="41:22">/* EPSR */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:18">xpsr_write</name><argument_list pos:start="43:19" pos:end="43:40">(<argument pos:start="43:20" pos:end="43:22"><expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">env</name></expr></argument>, <argument pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:27">val</name></expr></argument>, <argument pos:start="43:30" pos:end="43:39"><expr pos:start="43:30" pos:end="43:39"><literal type="number" pos:start="43:30" pos:end="43:39">0x0600fc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">7</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:23">/* IEPSR */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><call pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:18">xpsr_write</name><argument_list pos:start="49:19" pos:end="49:40">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">env</name></expr></argument>, <argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">val</name></expr></argument>, <argument pos:start="49:30" pos:end="49:39"><expr pos:start="49:30" pos:end="49:39"><literal type="number" pos:start="49:30" pos:end="49:39">0x0600fc00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">8</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:21">/* MSP */</comment>

        <if_stmt pos:start="55:9" pos:end="61:32"><if pos:start="55:9" pos:end="57:36">if <condition pos:start="55:12" pos:end="55:32">(<expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:15">env</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:20">v7m</name><operator pos:start="55:21" pos:end="55:21">.</operator><name pos:start="55:22" pos:end="55:31">current_sp</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:36"><block_content pos:start="57:13" pos:end="57:36">

            <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:29"><name pos:start="57:13" pos:end="57:15">env</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:20">v7m</name><operator pos:start="57:21" pos:end="57:21">.</operator><name pos:start="57:22" pos:end="57:29">other_sp</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:35">val</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="59:9" pos:end="61:32">else<block type="pseudo" pos:start="61:13" pos:end="61:32"><block_content pos:start="61:13" pos:end="61:32">

            <expr_stmt pos:start="61:13" pos:end="61:32"><expr pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:15">env</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:21">regs</name><index pos:start="61:22" pos:end="61:25">[<expr pos:start="61:23" pos:end="61:24"><literal type="number" pos:start="61:23" pos:end="61:24">13</literal></expr>]</index></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <name pos:start="61:29" pos:end="61:31">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">9</literal></expr>:</case> <comment type="block" pos:start="65:13" pos:end="65:21">/* PSP */</comment>

        <if_stmt pos:start="67:9" pos:end="73:36"><if pos:start="67:9" pos:end="69:32">if <condition pos:start="67:12" pos:end="67:32">(<expr pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:31"><name pos:start="67:13" pos:end="67:15">env</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:20">v7m</name><operator pos:start="67:21" pos:end="67:21">.</operator><name pos:start="67:22" pos:end="67:31">current_sp</name></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:32"><block_content pos:start="69:13" pos:end="69:32">

            <expr_stmt pos:start="69:13" pos:end="69:32"><expr pos:start="69:13" pos:end="69:31"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">env</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:21">regs</name><index pos:start="69:22" pos:end="69:25">[<expr pos:start="69:23" pos:end="69:24"><literal type="number" pos:start="69:23" pos:end="69:24">13</literal></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:31">val</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="71:9" pos:end="73:36">else<block type="pseudo" pos:start="73:13" pos:end="73:36"><block_content pos:start="73:13" pos:end="73:36">

            <expr_stmt pos:start="73:13" pos:end="73:36"><expr pos:start="73:13" pos:end="73:35"><name pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:15">env</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:20">v7m</name><operator pos:start="73:21" pos:end="73:21">.</operator><name pos:start="73:22" pos:end="73:29">other_sp</name></name> <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:35">val</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:12">case <expr pos:start="77:10" pos:end="77:11"><literal type="number" pos:start="77:10" pos:end="77:11">16</literal></expr>:</case> <comment type="block" pos:start="77:14" pos:end="77:26">/* PRIMASK */</comment>

        <if_stmt pos:start="79:9" pos:end="87:9"><if pos:start="79:9" pos:end="83:9">if <condition pos:start="79:12" pos:end="79:20">(<expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:15">val</name> <operator pos:start="79:17" pos:end="79:17">&amp;</operator> <literal type="number" pos:start="79:19" pos:end="79:19">1</literal></expr>)</condition> <block pos:start="79:22" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:34">

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:15">env</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:21">daif</name></name> <operator pos:start="81:23" pos:end="81:24">|=</operator> <name pos:start="81:26" pos:end="81:33">PSTATE_I</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="87:9">else <block pos:start="83:16" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:35">

            <expr_stmt pos:start="85:13" pos:end="85:35"><expr pos:start="85:13" pos:end="85:34"><name pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:15">env</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:21">daif</name></name> <operator pos:start="85:23" pos:end="85:24">&amp;=</operator> <operator pos:start="85:26" pos:end="85:26">~</operator><name pos:start="85:27" pos:end="85:34">PSTATE_I</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:12">case <expr pos:start="91:10" pos:end="91:11"><literal type="number" pos:start="91:10" pos:end="91:11">17</literal></expr>:</case> <comment type="block" pos:start="91:14" pos:end="91:26">/* BASEPRI */</comment>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:11">env</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:16">v7m</name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:24">basepri</name></name> <operator pos:start="93:26" pos:end="93:26">=</operator> <name pos:start="93:28" pos:end="93:30">val</name> <operator pos:start="93:32" pos:end="93:32">&amp;</operator> <literal type="number" pos:start="93:34" pos:end="93:37">0xff</literal></expr>;</expr_stmt>

        <break pos:start="95:9" pos:end="95:14">break;</break>

    <case pos:start="97:5" pos:end="97:12">case <expr pos:start="97:10" pos:end="97:11"><literal type="number" pos:start="97:10" pos:end="97:11">18</literal></expr>:</case> <comment type="block" pos:start="97:14" pos:end="97:30">/* BASEPRI_MAX */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:20"><expr pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:11">val</name> <operator pos:start="99:13" pos:end="99:14">&amp;=</operator> <literal type="number" pos:start="99:16" pos:end="99:19">0xff</literal></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:35"><if pos:start="101:9" pos:end="103:35">if <condition pos:start="101:12" pos:end="101:74">(<expr pos:start="101:13" pos:end="101:73"><name pos:start="101:13" pos:end="101:15">val</name> <operator pos:start="101:17" pos:end="101:18">!=</operator> <literal type="number" pos:start="101:20" pos:end="101:20">0</literal> <operator pos:start="101:22" pos:end="101:23">&amp;&amp;</operator> <operator pos:start="101:25" pos:end="101:25">(</operator><name pos:start="101:26" pos:end="101:28">val</name> <operator pos:start="101:30" pos:end="101:30">&lt;</operator> <name pos:start="101:32" pos:end="101:47"><name pos:start="101:32" pos:end="101:34">env</name><operator pos:start="101:35" pos:end="101:36">-&gt;</operator><name pos:start="101:37" pos:end="101:39">v7m</name><operator pos:start="101:40" pos:end="101:40">.</operator><name pos:start="101:41" pos:end="101:47">basepri</name></name> <operator pos:start="101:49" pos:end="101:50">||</operator> <name pos:start="101:52" pos:end="101:67"><name pos:start="101:52" pos:end="101:54">env</name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:59">v7m</name><operator pos:start="101:60" pos:end="101:60">.</operator><name pos:start="101:61" pos:end="101:67">basepri</name></name> <operator pos:start="101:69" pos:end="101:70">==</operator> <literal type="number" pos:start="101:72" pos:end="101:72">0</literal><operator pos:start="101:73" pos:end="101:73">)</operator></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:35"><block_content pos:start="103:13" pos:end="103:35">

            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:28"><name pos:start="103:13" pos:end="103:15">env</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:20">v7m</name><operator pos:start="103:21" pos:end="103:21">.</operator><name pos:start="103:22" pos:end="103:28">basepri</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:34">val</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:12">case <expr pos:start="107:10" pos:end="107:11"><literal type="number" pos:start="107:10" pos:end="107:11">19</literal></expr>:</case> <comment type="block" pos:start="107:14" pos:end="107:28">/* FAULTMASK */</comment>

        <if_stmt pos:start="109:9" pos:end="117:9"><if pos:start="109:9" pos:end="113:9">if <condition pos:start="109:12" pos:end="109:20">(<expr pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:15">val</name> <operator pos:start="109:17" pos:end="109:17">&amp;</operator> <literal type="number" pos:start="109:19" pos:end="109:19">1</literal></expr>)</condition> <block pos:start="109:22" pos:end="113:9">{<block_content pos:start="111:13" pos:end="111:34">

            <expr_stmt pos:start="111:13" pos:end="111:34"><expr pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:21"><name pos:start="111:13" pos:end="111:15">env</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:21">daif</name></name> <operator pos:start="111:23" pos:end="111:24">|=</operator> <name pos:start="111:26" pos:end="111:33">PSTATE_F</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="113:11" pos:end="117:9">else <block pos:start="113:16" pos:end="117:9">{<block_content pos:start="115:13" pos:end="115:35">

            <expr_stmt pos:start="115:13" pos:end="115:35"><expr pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:15">env</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:21">daif</name></name> <operator pos:start="115:23" pos:end="115:24">&amp;=</operator> <operator pos:start="115:26" pos:end="115:26">~</operator><name pos:start="115:27" pos:end="115:34">PSTATE_F</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="119:9" pos:end="119:14">break;</break>

    <case pos:start="121:5" pos:end="121:12">case <expr pos:start="121:10" pos:end="121:11"><literal type="number" pos:start="121:10" pos:end="121:11">20</literal></expr>:</case> <comment type="block" pos:start="121:14" pos:end="121:26">/* CONTROL */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:35"><expr pos:start="123:9" pos:end="123:34"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:11">env</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:16">v7m</name><operator pos:start="123:17" pos:end="123:17">.</operator><name pos:start="123:18" pos:end="123:24">control</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:30">val</name> <operator pos:start="123:32" pos:end="123:32">&amp;</operator> <literal type="number" pos:start="123:34" pos:end="123:34">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:43"><expr pos:start="125:9" pos:end="125:42"><call pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:21">switch_v7m_sp</name><argument_list pos:start="125:22" pos:end="125:42">(<argument pos:start="125:23" pos:end="125:25"><expr pos:start="125:23" pos:end="125:25"><name pos:start="125:23" pos:end="125:25">env</name></expr></argument>, <argument pos:start="125:28" pos:end="125:41"><expr pos:start="125:28" pos:end="125:41"><operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:31">val</name> <operator pos:start="125:33" pos:end="125:33">&amp;</operator> <literal type="number" pos:start="125:35" pos:end="125:35">2</literal><operator pos:start="125:36" pos:end="125:36">)</operator> <operator pos:start="125:38" pos:end="125:39">!=</operator> <literal type="number" pos:start="125:41" pos:end="125:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <default pos:start="129:5" pos:end="129:12">default:</default>

        <comment type="block" pos:start="131:9" pos:end="131:38">/* ??? For debugging only.  */</comment>

        <expr_stmt pos:start="133:9" pos:end="133:79"><expr pos:start="133:9" pos:end="133:78"><call pos:start="133:9" pos:end="133:78"><name pos:start="133:9" pos:end="133:17">cpu_abort</name><argument_list pos:start="133:18" pos:end="133:78">(<argument pos:start="133:19" pos:end="133:26"><expr pos:start="133:19" pos:end="133:26"><call pos:start="133:19" pos:end="133:26"><name pos:start="133:19" pos:end="133:21">CPU</name><argument_list pos:start="133:22" pos:end="133:26">(<argument pos:start="133:23" pos:end="133:25"><expr pos:start="133:23" pos:end="133:25"><name pos:start="133:23" pos:end="133:25">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:29" pos:end="133:72"><expr pos:start="133:29" pos:end="133:72"><literal type="string" pos:start="133:29" pos:end="133:72">"Unimplemented system register write (%d)\n"</literal></expr></argument>, <argument pos:start="133:75" pos:end="133:77"><expr pos:start="133:75" pos:end="133:77"><name pos:start="133:75" pos:end="133:77">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="135:9" pos:end="135:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
