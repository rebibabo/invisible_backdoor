<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6970.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">output_frame</name><parameter_list pos:start="1:24" pos:end="1:62">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:45">outlink</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:61">nb_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:47">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:34">outlink</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">src</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:14">MixContext</name>      <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:34">= <expr pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:34"><name pos:start="7:26" pos:end="7:28">ctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:34">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVFilterBufferRef</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:30">out_buf</name></decl>, <decl pos:start="9:33" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:23"><modifier pos:start="9:33" pos:end="9:33">*</modifier></type><name pos:start="9:34" pos:end="9:39">in_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:20">calculate_scales</name><argument_list pos:start="15:21" pos:end="15:35">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">s</name></expr></argument>, <argument pos:start="15:25" pos:end="15:34"><expr pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:34">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:70"><expr pos:start="19:5" pos:end="19:69"><name pos:start="19:5" pos:end="19:11">out_buf</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:69"><name pos:start="19:15" pos:end="19:33">ff_get_audio_buffer</name><argument_list pos:start="19:34" pos:end="19:69">(<argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><name pos:start="19:35" pos:end="19:41">outlink</name></expr></argument>, <argument pos:start="19:44" pos:end="19:56"><expr pos:start="19:44" pos:end="19:56"><name pos:start="19:44" pos:end="19:56">AV_PERM_WRITE</name></expr></argument>, <argument pos:start="19:59" pos:end="19:68"><expr pos:start="19:59" pos:end="19:68"><name pos:start="19:59" pos:end="19:68">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:31"><if pos:start="21:5" pos:end="23:31">if <condition pos:start="21:8" pos:end="21:17">(<expr pos:start="21:9" pos:end="21:16"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:16">out_buf</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:69"><expr pos:start="27:5" pos:end="27:68"><name pos:start="27:5" pos:end="27:10">in_buf</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:68"><name pos:start="27:14" pos:end="27:32">ff_get_audio_buffer</name><argument_list pos:start="27:33" pos:end="27:68">(<argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">outlink</name></expr></argument>, <argument pos:start="27:43" pos:end="27:55"><expr pos:start="27:43" pos:end="27:55"><name pos:start="27:43" pos:end="27:55">AV_PERM_WRITE</name></expr></argument>, <argument pos:start="27:58" pos:end="27:67"><expr pos:start="27:58" pos:end="27:67"><name pos:start="27:58" pos:end="27:67">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:15">in_buf</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="35:5" pos:end="69:5">for <control pos:start="35:9" pos:end="35:38">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:33"><expr pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:32">nb_inputs</name></name></expr>;</condition> <incr pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:35">i</name><operator pos:start="35:36" pos:end="35:37">++</operator></expr></incr>)</control> <block pos:start="35:40" pos:end="69:5">{<block_content pos:start="37:9" pos:end="67:9">

        <if_stmt pos:start="37:9" pos:end="67:9"><if pos:start="37:9" pos:end="67:9">if <condition pos:start="37:12" pos:end="37:42">(<expr pos:start="37:13" pos:end="37:41"><name pos:start="37:13" pos:end="37:29"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:26">input_state</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name> <operator pos:start="37:31" pos:end="37:32">==</operator> <name pos:start="37:34" pos:end="37:41">INPUT_ON</name></expr>)</condition> <block pos:start="37:44" pos:end="67:9">{<block_content pos:start="39:13" pos:end="65:13">

            <decl_stmt pos:start="39:13" pos:end="39:38"><decl pos:start="39:13" pos:end="39:22"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:22">planes</name></decl>, <decl pos:start="39:25" pos:end="39:34"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:25" pos:end="39:34">plane_size</name></decl>, <decl pos:start="39:37" pos:end="39:37"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:37" pos:end="39:37">p</name></decl>;</decl_stmt>



            <expr_stmt pos:start="43:13" pos:end="45:43"><expr pos:start="43:13" pos:end="45:42"><call pos:start="43:13" pos:end="45:42"><name pos:start="43:13" pos:end="43:30">av_audio_fifo_read</name><argument_list pos:start="43:31" pos:end="45:42">(<argument pos:start="43:32" pos:end="43:42"><expr pos:start="43:32" pos:end="43:42"><name pos:start="43:32" pos:end="43:42"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">fifos</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:45" pos:end="43:74"><expr pos:start="43:45" pos:end="43:74"><operator pos:start="43:45" pos:end="43:45">(</operator><name pos:start="43:46" pos:end="43:49">void</name> <operator pos:start="43:51" pos:end="43:51">*</operator><operator pos:start="43:52" pos:end="43:52">*</operator><operator pos:start="43:53" pos:end="43:53">)</operator><name pos:start="43:54" pos:end="43:74"><name pos:start="43:54" pos:end="43:59">in_buf</name><operator pos:start="43:60" pos:end="43:61">-&gt;</operator><name pos:start="43:62" pos:end="43:74">extended_data</name></name></expr></argument>,

                               <argument pos:start="45:32" pos:end="45:41"><expr pos:start="45:32" pos:end="45:41"><name pos:start="45:32" pos:end="45:41">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:56"><expr pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:18">planes</name>     <operator pos:start="49:24" pos:end="49:24">=</operator> <ternary pos:start="49:26" pos:end="49:55"><condition pos:start="49:26" pos:end="49:36"><expr pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:34"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:34">planar</name></name></expr> ?</condition><then pos:start="49:38" pos:end="49:51"> <expr pos:start="49:38" pos:end="49:51"><name pos:start="49:38" pos:end="49:51"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:51">nb_channels</name></name></expr> </then><else pos:start="49:53" pos:end="49:55">: <expr pos:start="49:55" pos:end="49:55"><literal type="number" pos:start="49:55" pos:end="49:55">1</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:71"><expr pos:start="51:13" pos:end="51:70"><name pos:start="51:13" pos:end="51:22">plane_size</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:35">nb_samples</name> <operator pos:start="51:37" pos:end="51:37">*</operator> <operator pos:start="51:39" pos:end="51:39">(</operator><ternary pos:start="51:40" pos:end="51:69"><condition pos:start="51:40" pos:end="51:50"><expr pos:start="51:40" pos:end="51:48"><name pos:start="51:40" pos:end="51:48"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:48">planar</name></name></expr> ?</condition><then pos:start="51:52" pos:end="51:52"> <expr pos:start="51:52" pos:end="51:52"><literal type="number" pos:start="51:52" pos:end="51:52">1</literal></expr> </then><else pos:start="51:54" pos:end="51:69">: <expr pos:start="51:56" pos:end="51:69"><name pos:start="51:56" pos:end="51:69"><name pos:start="51:56" pos:end="51:56">s</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:69">nb_channels</name></name></expr></else></ternary><operator pos:start="51:70" pos:end="51:70">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:49"><expr pos:start="53:13" pos:end="53:48"><name pos:start="53:13" pos:end="53:22">plane_size</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:48"><name pos:start="53:26" pos:end="53:32">FFALIGN</name><argument_list pos:start="53:33" pos:end="53:48">(<argument pos:start="53:34" pos:end="53:43"><expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:43">plane_size</name></expr></argument>, <argument pos:start="53:46" pos:end="53:47"><expr pos:start="53:46" pos:end="53:47"><literal type="number" pos:start="53:46" pos:end="53:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="57:13" pos:end="65:13">for <control pos:start="57:17" pos:end="57:40">(<init pos:start="57:18" pos:end="57:23"><expr pos:start="57:18" pos:end="57:22"><name pos:start="57:18" pos:end="57:18">p</name> <operator pos:start="57:20" pos:end="57:20">=</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>;</init> <condition pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:34"><name pos:start="57:25" pos:end="57:25">p</name> <operator pos:start="57:27" pos:end="57:27">&lt;</operator> <name pos:start="57:29" pos:end="57:34">planes</name></expr>;</condition> <incr pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:37">p</name><operator pos:start="57:38" pos:end="57:39">++</operator></expr></incr>)</control> <block pos:start="57:42" pos:end="65:13">{<block_content pos:start="59:17" pos:end="63:74">

                <expr_stmt pos:start="59:17" pos:end="63:74"><expr pos:start="59:17" pos:end="63:73"><call pos:start="59:17" pos:end="63:73"><name pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:17">s</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:23">fdsp</name><operator pos:start="59:24" pos:end="59:24">.</operator><name pos:start="59:25" pos:end="59:42">vector_fmac_scalar</name></name><argument_list pos:start="59:43" pos:end="63:73">(<argument pos:start="59:44" pos:end="59:77"><expr pos:start="59:44" pos:end="59:77"><operator pos:start="59:44" pos:end="59:44">(</operator><name pos:start="59:45" pos:end="59:49">float</name> <operator pos:start="59:51" pos:end="59:51">*</operator><operator pos:start="59:52" pos:end="59:52">)</operator><name pos:start="59:53" pos:end="59:77"><name pos:start="59:53" pos:end="59:59">out_buf</name><operator pos:start="59:60" pos:end="59:61">-&gt;</operator><name pos:start="59:62" pos:end="59:74">extended_data</name><index pos:start="59:75" pos:end="59:77">[<expr pos:start="59:76" pos:end="59:76"><name pos:start="59:76" pos:end="59:76">p</name></expr>]</index></name></expr></argument>,

                                           <argument pos:start="61:44" pos:end="61:77"><expr pos:start="61:44" pos:end="61:77"><operator pos:start="61:44" pos:end="61:44">(</operator><name pos:start="61:45" pos:end="61:49">float</name> <operator pos:start="61:51" pos:end="61:51">*</operator><operator pos:start="61:52" pos:end="61:52">)</operator> <name pos:start="61:54" pos:end="61:77"><name pos:start="61:54" pos:end="61:59">in_buf</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:74">extended_data</name><index pos:start="61:75" pos:end="61:77">[<expr pos:start="61:76" pos:end="61:76"><name pos:start="61:76" pos:end="61:76">p</name></expr>]</index></name></expr></argument>,

                                           <argument pos:start="63:44" pos:end="63:60"><expr pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:60"><name pos:start="63:44" pos:end="63:44">s</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:57">input_scale</name><index pos:start="63:58" pos:end="63:60">[<expr pos:start="63:59" pos:end="63:59"><name pos:start="63:59" pos:end="63:59">i</name></expr>]</index></name></expr></argument>, <argument pos:start="63:63" pos:end="63:72"><expr pos:start="63:63" pos:end="63:72"><name pos:start="63:63" pos:end="63:72">plane_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="71:5" pos:end="71:34"><expr pos:start="71:5" pos:end="71:33"><call pos:start="71:5" pos:end="71:33"><name pos:start="71:5" pos:end="71:25">avfilter_unref_buffer</name><argument_list pos:start="71:26" pos:end="71:33">(<argument pos:start="71:27" pos:end="71:32"><expr pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:32">in_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:11">out_buf</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:16">pts</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <name pos:start="75:20" pos:end="75:30"><name pos:start="75:20" pos:end="75:20">s</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:30">next_pts</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:34"><if pos:start="77:5" pos:end="79:34">if <condition pos:start="77:8" pos:end="77:38">(<expr pos:start="77:9" pos:end="77:37"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:19">next_pts</name></name> <operator pos:start="77:21" pos:end="77:22">!=</operator> <name pos:start="77:24" pos:end="77:37">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:34"><block_content pos:start="79:9" pos:end="79:34">

        <expr_stmt pos:start="79:9" pos:end="79:34"><expr pos:start="79:9" pos:end="79:33"><name pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:19">next_pts</name></name> <operator pos:start="79:21" pos:end="79:22">+=</operator> <name pos:start="79:24" pos:end="79:33">nb_samples</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="83:5" pos:end="83:47">return <expr pos:start="83:12" pos:end="83:46"><call pos:start="83:12" pos:end="83:46"><name pos:start="83:12" pos:end="83:28">ff_filter_samples</name><argument_list pos:start="83:29" pos:end="83:46">(<argument pos:start="83:30" pos:end="83:36"><expr pos:start="83:30" pos:end="83:36"><name pos:start="83:30" pos:end="83:36">outlink</name></expr></argument>, <argument pos:start="83:39" pos:end="83:45"><expr pos:start="83:39" pos:end="83:45"><name pos:start="83:39" pos:end="83:45">out_buf</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
