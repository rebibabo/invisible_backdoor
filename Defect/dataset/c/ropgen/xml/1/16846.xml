<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16846.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">target_ulong</name></type> <name pos:start="1:14" pos:end="1:24">helper_dvpe</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:37">CPUMIPSState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:16">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">CPUMIPSState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:27">other_cpu</name> <init pos:start="5:29" pos:end="5:39">= <expr pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:39">first_cpu</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">prev</name> <init pos:start="7:23" pos:end="7:48">= <expr pos:start="7:25" pos:end="7:48"><name pos:start="7:25" pos:end="7:48"><name pos:start="7:25" pos:end="7:27">env</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">mvp</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:48">CP0_MVPControl</name></name></expr></init></decl>;</decl_stmt>



    <do pos:start="11:5" pos:end="25:24">do <block pos:start="11:8" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:40">

        <comment type="block" pos:start="13:9" pos:end="13:67">/* Turn off all VPEs except the one executing the dvpe.  */</comment>

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:29">(<expr pos:start="15:13" pos:end="15:28"><name pos:start="15:13" pos:end="15:21">other_cpu</name> <operator pos:start="15:23" pos:end="15:24">!=</operator> <name pos:start="15:26" pos:end="15:28">env</name></expr>)</condition> <block pos:start="15:31" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:38">

            <expr_stmt pos:start="17:13" pos:end="17:67"><expr pos:start="17:13" pos:end="17:66"><name pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:21">other_cpu</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:26">mvp</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:42">CP0_MVPControl</name></name> <operator pos:start="17:44" pos:end="17:45">&amp;=</operator> <operator pos:start="17:47" pos:end="17:47">~</operator><operator pos:start="17:48" pos:end="17:48">(</operator><literal type="number" pos:start="17:49" pos:end="17:49">1</literal> <operator pos:start="17:51" pos:end="17:52">&lt;&lt;</operator> <name pos:start="17:54" pos:end="17:65">CP0MVPCo_EVP</name><operator pos:start="17:66" pos:end="17:66">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="19:13" pos:end="19:38"><expr pos:start="19:13" pos:end="19:37"><call pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:26">mips_vpe_sleep</name><argument_list pos:start="19:27" pos:end="19:37">(<argument pos:start="19:28" pos:end="19:36"><expr pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:36">other_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:17">other_cpu</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:39"><name pos:start="23:21" pos:end="23:29">other_cpu</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:39">next_cpu</name></name></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="25:13" pos:end="25:23">(<expr pos:start="25:14" pos:end="25:22"><name pos:start="25:14" pos:end="25:22">other_cpu</name></expr>)</condition>;</do>

    <return pos:start="27:5" pos:end="27:16">return <expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">prev</name></expr>;</return>

</block_content>}</block></function>
</unit>
