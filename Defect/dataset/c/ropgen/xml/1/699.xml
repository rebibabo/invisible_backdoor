<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/699.c" pos:tabs="8"><function pos:start="1:1" pos:end="178:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">unpack_dct_coeffs</name><parameter_list pos:start="1:29" pos:end="1:68">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:45">Vp3DecodeContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:67"><decl pos:start="1:51" pos:end="1:67"><type pos:start="1:51" pos:end="1:67"><name pos:start="1:51" pos:end="1:63">GetBitContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:67">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="178:1">{<block_content pos:start="5:5" pos:end="176:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">dc_y_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">dc_c_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">ac_y_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">ac_c_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:24">residual_eob_run</name> <init pos:start="15:26" pos:end="15:28">= <expr pos:start="15:28" pos:end="15:28"><literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">VLC</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:17">y_tables</name><index pos:start="17:18" pos:end="17:21">[<expr pos:start="17:19" pos:end="17:20"><literal type="number" pos:start="17:19" pos:end="17:20">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">VLC</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:21"><name pos:start="19:10" pos:end="19:17">c_tables</name><index pos:start="19:18" pos:end="19:21">[<expr pos:start="19:19" pos:end="19:20"><literal type="number" pos:start="19:19" pos:end="19:20">64</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:17">dct_tokens</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>]</index><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>]</index></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <name pos:start="23:27" pos:end="23:44"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:44">dct_tokens_base</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="34:33"><if pos:start="27:5" pos:end="34:33">if <condition pos:start="27:8" pos:end="27:31">(<expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:21">get_bits_left</name><argument_list pos:start="27:22" pos:end="27:25">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:30">16</literal></expr>)</condition><block type="pseudo" pos:start="34:5" pos:end="34:33"><block_content pos:start="34:5" pos:end="34:33">




    <comment type="block" pos:start="32:5" pos:end="32:36">/* fetch the DC table indexes */</comment>

    <expr_stmt pos:start="34:5" pos:end="34:33"><expr pos:start="34:5" pos:end="34:32"><name pos:start="34:5" pos:end="34:14">dc_y_table</name> <operator pos:start="34:16" pos:end="34:16">=</operator> <call pos:start="34:18" pos:end="34:32"><name pos:start="34:18" pos:end="34:25">get_bits</name><argument_list pos:start="34:26" pos:end="34:32">(<argument pos:start="34:27" pos:end="34:28"><expr pos:start="34:27" pos:end="34:28"><name pos:start="34:27" pos:end="34:28">gb</name></expr></argument>, <argument pos:start="34:31" pos:end="34:31"><expr pos:start="34:31" pos:end="34:31"><literal type="number" pos:start="34:31" pos:end="34:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="36:5" pos:end="36:33"><expr pos:start="36:5" pos:end="36:32"><name pos:start="36:5" pos:end="36:14">dc_c_table</name> <operator pos:start="36:16" pos:end="36:16">=</operator> <call pos:start="36:18" pos:end="36:32"><name pos:start="36:18" pos:end="36:25">get_bits</name><argument_list pos:start="36:26" pos:end="36:32">(<argument pos:start="36:27" pos:end="36:28"><expr pos:start="36:27" pos:end="36:28"><name pos:start="36:27" pos:end="36:28">gb</name></expr></argument>, <argument pos:start="36:31" pos:end="36:31"><expr pos:start="36:31" pos:end="36:31"><literal type="number" pos:start="36:31" pos:end="36:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="40:5" pos:end="40:44">/* unpack the Y plane DC coefficients */</comment>

    <expr_stmt pos:start="42:5" pos:end="44:56"><expr pos:start="42:5" pos:end="44:55"><name pos:start="42:5" pos:end="42:20">residual_eob_run</name> <operator pos:start="42:22" pos:end="42:22">=</operator> <call pos:start="42:24" pos:end="44:55"><name pos:start="42:24" pos:end="42:34">unpack_vlcs</name><argument_list pos:start="42:35" pos:end="44:55">(<argument pos:start="42:36" pos:end="42:36"><expr pos:start="42:36" pos:end="42:36"><name pos:start="42:36" pos:end="42:36">s</name></expr></argument>, <argument pos:start="42:39" pos:end="42:40"><expr pos:start="42:39" pos:end="42:40"><name pos:start="42:39" pos:end="42:40">gb</name></expr></argument>, <argument pos:start="42:43" pos:end="42:64"><expr pos:start="42:43" pos:end="42:64"><operator pos:start="42:43" pos:end="42:43">&amp;</operator><name pos:start="42:44" pos:end="42:64"><name pos:start="42:44" pos:end="42:44">s</name><operator pos:start="42:45" pos:end="42:46">-&gt;</operator><name pos:start="42:47" pos:end="42:52">dc_vlc</name><index pos:start="42:53" pos:end="42:64">[<expr pos:start="42:54" pos:end="42:63"><name pos:start="42:54" pos:end="42:63">dc_y_table</name></expr>]</index></name></expr></argument>, <argument pos:start="42:67" pos:end="42:67"><expr pos:start="42:67" pos:end="42:67"><literal type="number" pos:start="42:67" pos:end="42:67">0</literal></expr></argument>,

                                   <argument pos:start="44:36" pos:end="44:36"><expr pos:start="44:36" pos:end="44:36"><literal type="number" pos:start="44:36" pos:end="44:36">0</literal></expr></argument>, <argument pos:start="44:39" pos:end="44:54"><expr pos:start="44:39" pos:end="44:54"><name pos:start="44:39" pos:end="44:54">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="46:5" pos:end="48:32"><if pos:start="46:5" pos:end="48:32">if <condition pos:start="46:8" pos:end="46:29">(<expr pos:start="46:9" pos:end="46:28"><name pos:start="46:9" pos:end="46:24">residual_eob_run</name> <operator pos:start="46:26" pos:end="46:26">&lt;</operator> <literal type="number" pos:start="46:28" pos:end="46:28">0</literal></expr>)</condition><block type="pseudo" pos:start="48:9" pos:end="48:32"><block_content pos:start="48:9" pos:end="48:32">

        <return pos:start="48:9" pos:end="48:32">return <expr pos:start="48:16" pos:end="48:31"><name pos:start="48:16" pos:end="48:31">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>





    <comment type="block" pos:start="54:5" pos:end="54:59">/* reverse prediction of the Y-plane DC coefficients */</comment>

    <expr_stmt pos:start="56:5" pos:end="56:77"><expr pos:start="56:5" pos:end="56:76"><call pos:start="56:5" pos:end="56:76"><name pos:start="56:5" pos:end="56:25">reverse_dc_prediction</name><argument_list pos:start="56:26" pos:end="56:76">(<argument pos:start="56:27" pos:end="56:27"><expr pos:start="56:27" pos:end="56:27"><name pos:start="56:27" pos:end="56:27">s</name></expr></argument>, <argument pos:start="56:30" pos:end="56:30"><expr pos:start="56:30" pos:end="56:30"><literal type="number" pos:start="56:30" pos:end="56:30">0</literal></expr></argument>, <argument pos:start="56:33" pos:end="56:52"><expr pos:start="56:33" pos:end="56:52"><name pos:start="56:33" pos:end="56:52"><name pos:start="56:33" pos:end="56:33">s</name><operator pos:start="56:34" pos:end="56:35">-&gt;</operator><name pos:start="56:36" pos:end="56:49">fragment_width</name><index pos:start="56:50" pos:end="56:52">[<expr pos:start="56:51" pos:end="56:51"><literal type="number" pos:start="56:51" pos:end="56:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="56:55" pos:end="56:75"><expr pos:start="56:55" pos:end="56:75"><name pos:start="56:55" pos:end="56:75"><name pos:start="56:55" pos:end="56:55">s</name><operator pos:start="56:56" pos:end="56:57">-&gt;</operator><name pos:start="56:58" pos:end="56:72">fragment_height</name><index pos:start="56:73" pos:end="56:75">[<expr pos:start="56:74" pos:end="56:74"><literal type="number" pos:start="56:74" pos:end="56:74">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="60:5" pos:end="60:44">/* unpack the C plane DC coefficients */</comment>

    <expr_stmt pos:start="62:5" pos:end="64:56"><expr pos:start="62:5" pos:end="64:55"><name pos:start="62:5" pos:end="62:20">residual_eob_run</name> <operator pos:start="62:22" pos:end="62:22">=</operator> <call pos:start="62:24" pos:end="64:55"><name pos:start="62:24" pos:end="62:34">unpack_vlcs</name><argument_list pos:start="62:35" pos:end="64:55">(<argument pos:start="62:36" pos:end="62:36"><expr pos:start="62:36" pos:end="62:36"><name pos:start="62:36" pos:end="62:36">s</name></expr></argument>, <argument pos:start="62:39" pos:end="62:40"><expr pos:start="62:39" pos:end="62:40"><name pos:start="62:39" pos:end="62:40">gb</name></expr></argument>, <argument pos:start="62:43" pos:end="62:64"><expr pos:start="62:43" pos:end="62:64"><operator pos:start="62:43" pos:end="62:43">&amp;</operator><name pos:start="62:44" pos:end="62:64"><name pos:start="62:44" pos:end="62:44">s</name><operator pos:start="62:45" pos:end="62:46">-&gt;</operator><name pos:start="62:47" pos:end="62:52">dc_vlc</name><index pos:start="62:53" pos:end="62:64">[<expr pos:start="62:54" pos:end="62:63"><name pos:start="62:54" pos:end="62:63">dc_c_table</name></expr>]</index></name></expr></argument>, <argument pos:start="62:67" pos:end="62:67"><expr pos:start="62:67" pos:end="62:67"><literal type="number" pos:start="62:67" pos:end="62:67">0</literal></expr></argument>,

                                   <argument pos:start="64:36" pos:end="64:36"><expr pos:start="64:36" pos:end="64:36"><literal type="number" pos:start="64:36" pos:end="64:36">1</literal></expr></argument>, <argument pos:start="64:39" pos:end="64:54"><expr pos:start="64:39" pos:end="64:54"><name pos:start="64:39" pos:end="64:54">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="66:5" pos:end="68:32"><if pos:start="66:5" pos:end="68:32">if <condition pos:start="66:8" pos:end="66:29">(<expr pos:start="66:9" pos:end="66:28"><name pos:start="66:9" pos:end="66:24">residual_eob_run</name> <operator pos:start="66:26" pos:end="66:26">&lt;</operator> <literal type="number" pos:start="66:28" pos:end="66:28">0</literal></expr>)</condition><block type="pseudo" pos:start="68:9" pos:end="68:32"><block_content pos:start="68:9" pos:end="68:32">

        <return pos:start="68:9" pos:end="68:32">return <expr pos:start="68:16" pos:end="68:31"><name pos:start="68:16" pos:end="68:31">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="70:5" pos:end="72:56"><expr pos:start="70:5" pos:end="72:55"><name pos:start="70:5" pos:end="70:20">residual_eob_run</name> <operator pos:start="70:22" pos:end="70:22">=</operator> <call pos:start="70:24" pos:end="72:55"><name pos:start="70:24" pos:end="70:34">unpack_vlcs</name><argument_list pos:start="70:35" pos:end="72:55">(<argument pos:start="70:36" pos:end="70:36"><expr pos:start="70:36" pos:end="70:36"><name pos:start="70:36" pos:end="70:36">s</name></expr></argument>, <argument pos:start="70:39" pos:end="70:40"><expr pos:start="70:39" pos:end="70:40"><name pos:start="70:39" pos:end="70:40">gb</name></expr></argument>, <argument pos:start="70:43" pos:end="70:64"><expr pos:start="70:43" pos:end="70:64"><operator pos:start="70:43" pos:end="70:43">&amp;</operator><name pos:start="70:44" pos:end="70:64"><name pos:start="70:44" pos:end="70:44">s</name><operator pos:start="70:45" pos:end="70:46">-&gt;</operator><name pos:start="70:47" pos:end="70:52">dc_vlc</name><index pos:start="70:53" pos:end="70:64">[<expr pos:start="70:54" pos:end="70:63"><name pos:start="70:54" pos:end="70:63">dc_c_table</name></expr>]</index></name></expr></argument>, <argument pos:start="70:67" pos:end="70:67"><expr pos:start="70:67" pos:end="70:67"><literal type="number" pos:start="70:67" pos:end="70:67">0</literal></expr></argument>,

                                   <argument pos:start="72:36" pos:end="72:36"><expr pos:start="72:36" pos:end="72:36"><literal type="number" pos:start="72:36" pos:end="72:36">2</literal></expr></argument>, <argument pos:start="72:39" pos:end="72:54"><expr pos:start="72:39" pos:end="72:54"><name pos:start="72:39" pos:end="72:54">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="74:5" pos:end="76:32"><if pos:start="74:5" pos:end="76:32">if <condition pos:start="74:8" pos:end="74:29">(<expr pos:start="74:9" pos:end="74:28"><name pos:start="74:9" pos:end="74:24">residual_eob_run</name> <operator pos:start="74:26" pos:end="74:26">&lt;</operator> <literal type="number" pos:start="74:28" pos:end="74:28">0</literal></expr>)</condition><block type="pseudo" pos:start="76:9" pos:end="76:32"><block_content pos:start="76:9" pos:end="76:32">

        <return pos:start="76:9" pos:end="76:32">return <expr pos:start="76:16" pos:end="76:31"><name pos:start="76:16" pos:end="76:31">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="80:5" pos:end="80:59">/* reverse prediction of the C-plane DC coefficients */</comment>

    <if_stmt pos:start="82:5" pos:end="92:5"><if pos:start="82:5" pos:end="92:5">if <condition pos:start="82:8" pos:end="82:48">(<expr pos:start="82:9" pos:end="82:47"><operator pos:start="82:9" pos:end="82:9">!</operator><operator pos:start="82:10" pos:end="82:10">(</operator><name pos:start="82:11" pos:end="82:25"><name pos:start="82:11" pos:end="82:11">s</name><operator pos:start="82:12" pos:end="82:13">-&gt;</operator><name pos:start="82:14" pos:end="82:18">avctx</name><operator pos:start="82:19" pos:end="82:20">-&gt;</operator><name pos:start="82:21" pos:end="82:25">flags</name></name> <operator pos:start="82:27" pos:end="82:27">&amp;</operator> <name pos:start="82:29" pos:end="82:46">AV_CODEC_FLAG_GRAY</name><operator pos:start="82:47" pos:end="82:47">)</operator></expr>)</condition> <block pos:start="82:50" pos:end="92:5">{<block_content pos:start="84:9" pos:end="90:75">

        <expr_stmt pos:start="84:9" pos:end="86:75"><expr pos:start="84:9" pos:end="86:74"><call pos:start="84:9" pos:end="86:74"><name pos:start="84:9" pos:end="84:29">reverse_dc_prediction</name><argument_list pos:start="84:30" pos:end="86:74">(<argument pos:start="84:31" pos:end="84:31"><expr pos:start="84:31" pos:end="84:31"><name pos:start="84:31" pos:end="84:31">s</name></expr></argument>, <argument pos:start="84:34" pos:end="84:53"><expr pos:start="84:34" pos:end="84:53"><name pos:start="84:34" pos:end="84:53"><name pos:start="84:34" pos:end="84:34">s</name><operator pos:start="84:35" pos:end="84:36">-&gt;</operator><name pos:start="84:37" pos:end="84:50">fragment_start</name><index pos:start="84:51" pos:end="84:53">[<expr pos:start="84:52" pos:end="84:52"><literal type="number" pos:start="84:52" pos:end="84:52">1</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="86:31" pos:end="86:50"><expr pos:start="86:31" pos:end="86:50"><name pos:start="86:31" pos:end="86:50"><name pos:start="86:31" pos:end="86:31">s</name><operator pos:start="86:32" pos:end="86:33">-&gt;</operator><name pos:start="86:34" pos:end="86:47">fragment_width</name><index pos:start="86:48" pos:end="86:50">[<expr pos:start="86:49" pos:end="86:49"><literal type="number" pos:start="86:49" pos:end="86:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="86:53" pos:end="86:73"><expr pos:start="86:53" pos:end="86:73"><name pos:start="86:53" pos:end="86:73"><name pos:start="86:53" pos:end="86:53">s</name><operator pos:start="86:54" pos:end="86:55">-&gt;</operator><name pos:start="86:56" pos:end="86:70">fragment_height</name><index pos:start="86:71" pos:end="86:73">[<expr pos:start="86:72" pos:end="86:72"><literal type="number" pos:start="86:72" pos:end="86:72">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="88:9" pos:end="90:75"><expr pos:start="88:9" pos:end="90:74"><call pos:start="88:9" pos:end="90:74"><name pos:start="88:9" pos:end="88:29">reverse_dc_prediction</name><argument_list pos:start="88:30" pos:end="90:74">(<argument pos:start="88:31" pos:end="88:31"><expr pos:start="88:31" pos:end="88:31"><name pos:start="88:31" pos:end="88:31">s</name></expr></argument>, <argument pos:start="88:34" pos:end="88:53"><expr pos:start="88:34" pos:end="88:53"><name pos:start="88:34" pos:end="88:53"><name pos:start="88:34" pos:end="88:34">s</name><operator pos:start="88:35" pos:end="88:36">-&gt;</operator><name pos:start="88:37" pos:end="88:50">fragment_start</name><index pos:start="88:51" pos:end="88:53">[<expr pos:start="88:52" pos:end="88:52"><literal type="number" pos:start="88:52" pos:end="88:52">2</literal></expr>]</index></name></expr></argument>,

                              <argument pos:start="90:31" pos:end="90:50"><expr pos:start="90:31" pos:end="90:50"><name pos:start="90:31" pos:end="90:50"><name pos:start="90:31" pos:end="90:31">s</name><operator pos:start="90:32" pos:end="90:33">-&gt;</operator><name pos:start="90:34" pos:end="90:47">fragment_width</name><index pos:start="90:48" pos:end="90:50">[<expr pos:start="90:49" pos:end="90:49"><literal type="number" pos:start="90:49" pos:end="90:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="90:53" pos:end="90:73"><expr pos:start="90:53" pos:end="90:73"><name pos:start="90:53" pos:end="90:73"><name pos:start="90:53" pos:end="90:53">s</name><operator pos:start="90:54" pos:end="90:55">-&gt;</operator><name pos:start="90:56" pos:end="90:70">fragment_height</name><index pos:start="90:71" pos:end="90:73">[<expr pos:start="90:72" pos:end="90:72"><literal type="number" pos:start="90:72" pos:end="90:72">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>





    <comment type="block" pos:start="98:5" pos:end="98:36">/* fetch the AC table indexes */</comment>

    <expr_stmt pos:start="100:5" pos:end="100:33"><expr pos:start="100:5" pos:end="100:32"><name pos:start="100:5" pos:end="100:14">ac_y_table</name> <operator pos:start="100:16" pos:end="100:16">=</operator> <call pos:start="100:18" pos:end="100:32"><name pos:start="100:18" pos:end="100:25">get_bits</name><argument_list pos:start="100:26" pos:end="100:32">(<argument pos:start="100:27" pos:end="100:28"><expr pos:start="100:27" pos:end="100:28"><name pos:start="100:27" pos:end="100:28">gb</name></expr></argument>, <argument pos:start="100:31" pos:end="100:31"><expr pos:start="100:31" pos:end="100:31"><literal type="number" pos:start="100:31" pos:end="100:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="102:5" pos:end="102:33"><expr pos:start="102:5" pos:end="102:32"><name pos:start="102:5" pos:end="102:14">ac_c_table</name> <operator pos:start="102:16" pos:end="102:16">=</operator> <call pos:start="102:18" pos:end="102:32"><name pos:start="102:18" pos:end="102:25">get_bits</name><argument_list pos:start="102:26" pos:end="102:32">(<argument pos:start="102:27" pos:end="102:28"><expr pos:start="102:27" pos:end="102:28"><name pos:start="102:27" pos:end="102:28">gb</name></expr></argument>, <argument pos:start="102:31" pos:end="102:31"><expr pos:start="102:31" pos:end="102:31"><literal type="number" pos:start="102:31" pos:end="102:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="106:5" pos:end="106:39">/* build tables of AC VLC tables */</comment>

    <for pos:start="108:5" pos:end="114:5">for <control pos:start="108:9" pos:end="108:28">(<init pos:start="108:10" pos:end="108:15"><expr pos:start="108:10" pos:end="108:14"><name pos:start="108:10" pos:end="108:10">i</name> <operator pos:start="108:12" pos:end="108:12">=</operator> <literal type="number" pos:start="108:14" pos:end="108:14">1</literal></expr>;</init> <condition pos:start="108:17" pos:end="108:23"><expr pos:start="108:17" pos:end="108:22"><name pos:start="108:17" pos:end="108:17">i</name> <operator pos:start="108:19" pos:end="108:20">&lt;=</operator> <literal type="number" pos:start="108:22" pos:end="108:22">5</literal></expr>;</condition> <incr pos:start="108:25" pos:end="108:27"><expr pos:start="108:25" pos:end="108:27"><name pos:start="108:25" pos:end="108:25">i</name><operator pos:start="108:26" pos:end="108:27">++</operator></expr></incr>)</control> <block pos:start="108:30" pos:end="114:5">{<block_content pos:start="110:9" pos:end="112:47">

        <expr_stmt pos:start="110:9" pos:end="110:47"><expr pos:start="110:9" pos:end="110:46"><name pos:start="110:9" pos:end="110:19"><name pos:start="110:9" pos:end="110:16">y_tables</name><index pos:start="110:17" pos:end="110:19">[<expr pos:start="110:18" pos:end="110:18"><name pos:start="110:18" pos:end="110:18">i</name></expr>]</index></name> <operator pos:start="110:21" pos:end="110:21">=</operator> <operator pos:start="110:23" pos:end="110:23">&amp;</operator><name pos:start="110:24" pos:end="110:46"><name pos:start="110:24" pos:end="110:24">s</name><operator pos:start="110:25" pos:end="110:26">-&gt;</operator><name pos:start="110:27" pos:end="110:34">ac_vlc_1</name><index pos:start="110:35" pos:end="110:46">[<expr pos:start="110:36" pos:end="110:45"><name pos:start="110:36" pos:end="110:45">ac_y_table</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="112:9" pos:end="112:47"><expr pos:start="112:9" pos:end="112:46"><name pos:start="112:9" pos:end="112:19"><name pos:start="112:9" pos:end="112:16">c_tables</name><index pos:start="112:17" pos:end="112:19">[<expr pos:start="112:18" pos:end="112:18"><name pos:start="112:18" pos:end="112:18">i</name></expr>]</index></name> <operator pos:start="112:21" pos:end="112:21">=</operator> <operator pos:start="112:23" pos:end="112:23">&amp;</operator><name pos:start="112:24" pos:end="112:46"><name pos:start="112:24" pos:end="112:24">s</name><operator pos:start="112:25" pos:end="112:26">-&gt;</operator><name pos:start="112:27" pos:end="112:34">ac_vlc_1</name><index pos:start="112:35" pos:end="112:46">[<expr pos:start="112:36" pos:end="112:45"><name pos:start="112:36" pos:end="112:45">ac_c_table</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="116:5" pos:end="122:5">for <control pos:start="116:9" pos:end="116:29">(<init pos:start="116:10" pos:end="116:15"><expr pos:start="116:10" pos:end="116:14"><name pos:start="116:10" pos:end="116:10">i</name> <operator pos:start="116:12" pos:end="116:12">=</operator> <literal type="number" pos:start="116:14" pos:end="116:14">6</literal></expr>;</init> <condition pos:start="116:17" pos:end="116:24"><expr pos:start="116:17" pos:end="116:23"><name pos:start="116:17" pos:end="116:17">i</name> <operator pos:start="116:19" pos:end="116:20">&lt;=</operator> <literal type="number" pos:start="116:22" pos:end="116:23">14</literal></expr>;</condition> <incr pos:start="116:26" pos:end="116:28"><expr pos:start="116:26" pos:end="116:28"><name pos:start="116:26" pos:end="116:26">i</name><operator pos:start="116:27" pos:end="116:28">++</operator></expr></incr>)</control> <block pos:start="116:31" pos:end="122:5">{<block_content pos:start="118:9" pos:end="120:47">

        <expr_stmt pos:start="118:9" pos:end="118:47"><expr pos:start="118:9" pos:end="118:46"><name pos:start="118:9" pos:end="118:19"><name pos:start="118:9" pos:end="118:16">y_tables</name><index pos:start="118:17" pos:end="118:19">[<expr pos:start="118:18" pos:end="118:18"><name pos:start="118:18" pos:end="118:18">i</name></expr>]</index></name> <operator pos:start="118:21" pos:end="118:21">=</operator> <operator pos:start="118:23" pos:end="118:23">&amp;</operator><name pos:start="118:24" pos:end="118:46"><name pos:start="118:24" pos:end="118:24">s</name><operator pos:start="118:25" pos:end="118:26">-&gt;</operator><name pos:start="118:27" pos:end="118:34">ac_vlc_2</name><index pos:start="118:35" pos:end="118:46">[<expr pos:start="118:36" pos:end="118:45"><name pos:start="118:36" pos:end="118:45">ac_y_table</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:47"><expr pos:start="120:9" pos:end="120:46"><name pos:start="120:9" pos:end="120:19"><name pos:start="120:9" pos:end="120:16">c_tables</name><index pos:start="120:17" pos:end="120:19">[<expr pos:start="120:18" pos:end="120:18"><name pos:start="120:18" pos:end="120:18">i</name></expr>]</index></name> <operator pos:start="120:21" pos:end="120:21">=</operator> <operator pos:start="120:23" pos:end="120:23">&amp;</operator><name pos:start="120:24" pos:end="120:46"><name pos:start="120:24" pos:end="120:24">s</name><operator pos:start="120:25" pos:end="120:26">-&gt;</operator><name pos:start="120:27" pos:end="120:34">ac_vlc_2</name><index pos:start="120:35" pos:end="120:46">[<expr pos:start="120:36" pos:end="120:45"><name pos:start="120:36" pos:end="120:45">ac_c_table</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="124:5" pos:end="130:5">for <control pos:start="124:9" pos:end="124:30">(<init pos:start="124:10" pos:end="124:16"><expr pos:start="124:10" pos:end="124:15"><name pos:start="124:10" pos:end="124:10">i</name> <operator pos:start="124:12" pos:end="124:12">=</operator> <literal type="number" pos:start="124:14" pos:end="124:15">15</literal></expr>;</init> <condition pos:start="124:18" pos:end="124:25"><expr pos:start="124:18" pos:end="124:24"><name pos:start="124:18" pos:end="124:18">i</name> <operator pos:start="124:20" pos:end="124:21">&lt;=</operator> <literal type="number" pos:start="124:23" pos:end="124:24">27</literal></expr>;</condition> <incr pos:start="124:27" pos:end="124:29"><expr pos:start="124:27" pos:end="124:29"><name pos:start="124:27" pos:end="124:27">i</name><operator pos:start="124:28" pos:end="124:29">++</operator></expr></incr>)</control> <block pos:start="124:32" pos:end="130:5">{<block_content pos:start="126:9" pos:end="128:47">

        <expr_stmt pos:start="126:9" pos:end="126:47"><expr pos:start="126:9" pos:end="126:46"><name pos:start="126:9" pos:end="126:19"><name pos:start="126:9" pos:end="126:16">y_tables</name><index pos:start="126:17" pos:end="126:19">[<expr pos:start="126:18" pos:end="126:18"><name pos:start="126:18" pos:end="126:18">i</name></expr>]</index></name> <operator pos:start="126:21" pos:end="126:21">=</operator> <operator pos:start="126:23" pos:end="126:23">&amp;</operator><name pos:start="126:24" pos:end="126:46"><name pos:start="126:24" pos:end="126:24">s</name><operator pos:start="126:25" pos:end="126:26">-&gt;</operator><name pos:start="126:27" pos:end="126:34">ac_vlc_3</name><index pos:start="126:35" pos:end="126:46">[<expr pos:start="126:36" pos:end="126:45"><name pos:start="126:36" pos:end="126:45">ac_y_table</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="128:9" pos:end="128:47"><expr pos:start="128:9" pos:end="128:46"><name pos:start="128:9" pos:end="128:19"><name pos:start="128:9" pos:end="128:16">c_tables</name><index pos:start="128:17" pos:end="128:19">[<expr pos:start="128:18" pos:end="128:18"><name pos:start="128:18" pos:end="128:18">i</name></expr>]</index></name> <operator pos:start="128:21" pos:end="128:21">=</operator> <operator pos:start="128:23" pos:end="128:23">&amp;</operator><name pos:start="128:24" pos:end="128:46"><name pos:start="128:24" pos:end="128:24">s</name><operator pos:start="128:25" pos:end="128:26">-&gt;</operator><name pos:start="128:27" pos:end="128:34">ac_vlc_3</name><index pos:start="128:35" pos:end="128:46">[<expr pos:start="128:36" pos:end="128:45"><name pos:start="128:36" pos:end="128:45">ac_c_table</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="132:5" pos:end="138:5">for <control pos:start="132:9" pos:end="132:30">(<init pos:start="132:10" pos:end="132:16"><expr pos:start="132:10" pos:end="132:15"><name pos:start="132:10" pos:end="132:10">i</name> <operator pos:start="132:12" pos:end="132:12">=</operator> <literal type="number" pos:start="132:14" pos:end="132:15">28</literal></expr>;</init> <condition pos:start="132:18" pos:end="132:25"><expr pos:start="132:18" pos:end="132:24"><name pos:start="132:18" pos:end="132:18">i</name> <operator pos:start="132:20" pos:end="132:21">&lt;=</operator> <literal type="number" pos:start="132:23" pos:end="132:24">63</literal></expr>;</condition> <incr pos:start="132:27" pos:end="132:29"><expr pos:start="132:27" pos:end="132:29"><name pos:start="132:27" pos:end="132:27">i</name><operator pos:start="132:28" pos:end="132:29">++</operator></expr></incr>)</control> <block pos:start="132:32" pos:end="138:5">{<block_content pos:start="134:9" pos:end="136:47">

        <expr_stmt pos:start="134:9" pos:end="134:47"><expr pos:start="134:9" pos:end="134:46"><name pos:start="134:9" pos:end="134:19"><name pos:start="134:9" pos:end="134:16">y_tables</name><index pos:start="134:17" pos:end="134:19">[<expr pos:start="134:18" pos:end="134:18"><name pos:start="134:18" pos:end="134:18">i</name></expr>]</index></name> <operator pos:start="134:21" pos:end="134:21">=</operator> <operator pos:start="134:23" pos:end="134:23">&amp;</operator><name pos:start="134:24" pos:end="134:46"><name pos:start="134:24" pos:end="134:24">s</name><operator pos:start="134:25" pos:end="134:26">-&gt;</operator><name pos:start="134:27" pos:end="134:34">ac_vlc_4</name><index pos:start="134:35" pos:end="134:46">[<expr pos:start="134:36" pos:end="134:45"><name pos:start="134:36" pos:end="134:45">ac_y_table</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="136:9" pos:end="136:47"><expr pos:start="136:9" pos:end="136:46"><name pos:start="136:9" pos:end="136:19"><name pos:start="136:9" pos:end="136:16">c_tables</name><index pos:start="136:17" pos:end="136:19">[<expr pos:start="136:18" pos:end="136:18"><name pos:start="136:18" pos:end="136:18">i</name></expr>]</index></name> <operator pos:start="136:21" pos:end="136:21">=</operator> <operator pos:start="136:23" pos:end="136:23">&amp;</operator><name pos:start="136:24" pos:end="136:46"><name pos:start="136:24" pos:end="136:24">s</name><operator pos:start="136:25" pos:end="136:26">-&gt;</operator><name pos:start="136:27" pos:end="136:34">ac_vlc_4</name><index pos:start="136:35" pos:end="136:46">[<expr pos:start="136:36" pos:end="136:45"><name pos:start="136:36" pos:end="136:45">ac_c_table</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="142:5" pos:end="142:36">/* decode all AC coefficients */</comment>

    <for pos:start="144:5" pos:end="172:5">for <control pos:start="144:9" pos:end="144:29">(<init pos:start="144:10" pos:end="144:15"><expr pos:start="144:10" pos:end="144:14"><name pos:start="144:10" pos:end="144:10">i</name> <operator pos:start="144:12" pos:end="144:12">=</operator> <literal type="number" pos:start="144:14" pos:end="144:14">1</literal></expr>;</init> <condition pos:start="144:17" pos:end="144:24"><expr pos:start="144:17" pos:end="144:23"><name pos:start="144:17" pos:end="144:17">i</name> <operator pos:start="144:19" pos:end="144:20">&lt;=</operator> <literal type="number" pos:start="144:22" pos:end="144:23">63</literal></expr>;</condition> <incr pos:start="144:26" pos:end="144:28"><expr pos:start="144:26" pos:end="144:28"><name pos:start="144:26" pos:end="144:26">i</name><operator pos:start="144:27" pos:end="144:28">++</operator></expr></incr>)</control> <block pos:start="144:31" pos:end="172:5">{<block_content pos:start="146:9" pos:end="170:36">

        <expr_stmt pos:start="146:9" pos:end="148:60"><expr pos:start="146:9" pos:end="148:59"><name pos:start="146:9" pos:end="146:24">residual_eob_run</name> <operator pos:start="146:26" pos:end="146:26">=</operator> <call pos:start="146:28" pos:end="148:59"><name pos:start="146:28" pos:end="146:38">unpack_vlcs</name><argument_list pos:start="146:39" pos:end="148:59">(<argument pos:start="146:40" pos:end="146:40"><expr pos:start="146:40" pos:end="146:40"><name pos:start="146:40" pos:end="146:40">s</name></expr></argument>, <argument pos:start="146:43" pos:end="146:44"><expr pos:start="146:43" pos:end="146:44"><name pos:start="146:43" pos:end="146:44">gb</name></expr></argument>, <argument pos:start="146:47" pos:end="146:57"><expr pos:start="146:47" pos:end="146:57"><name pos:start="146:47" pos:end="146:57"><name pos:start="146:47" pos:end="146:54">y_tables</name><index pos:start="146:55" pos:end="146:57">[<expr pos:start="146:56" pos:end="146:56"><name pos:start="146:56" pos:end="146:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="146:60" pos:end="146:60"><expr pos:start="146:60" pos:end="146:60"><name pos:start="146:60" pos:end="146:60">i</name></expr></argument>,

                                       <argument pos:start="148:40" pos:end="148:40"><expr pos:start="148:40" pos:end="148:40"><literal type="number" pos:start="148:40" pos:end="148:40">0</literal></expr></argument>, <argument pos:start="148:43" pos:end="148:58"><expr pos:start="148:43" pos:end="148:58"><name pos:start="148:43" pos:end="148:58">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="150:9" pos:end="152:36"><if pos:start="150:9" pos:end="152:36">if <condition pos:start="150:12" pos:end="150:33">(<expr pos:start="150:13" pos:end="150:32"><name pos:start="150:13" pos:end="150:28">residual_eob_run</name> <operator pos:start="150:30" pos:end="150:30">&lt;</operator> <literal type="number" pos:start="150:32" pos:end="150:32">0</literal></expr>)</condition><block type="pseudo" pos:start="152:13" pos:end="152:36"><block_content pos:start="152:13" pos:end="152:36">

            <return pos:start="152:13" pos:end="152:36">return <expr pos:start="152:20" pos:end="152:35"><name pos:start="152:20" pos:end="152:35">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="156:9" pos:end="158:60"><expr pos:start="156:9" pos:end="158:59"><name pos:start="156:9" pos:end="156:24">residual_eob_run</name> <operator pos:start="156:26" pos:end="156:26">=</operator> <call pos:start="156:28" pos:end="158:59"><name pos:start="156:28" pos:end="156:38">unpack_vlcs</name><argument_list pos:start="156:39" pos:end="158:59">(<argument pos:start="156:40" pos:end="156:40"><expr pos:start="156:40" pos:end="156:40"><name pos:start="156:40" pos:end="156:40">s</name></expr></argument>, <argument pos:start="156:43" pos:end="156:44"><expr pos:start="156:43" pos:end="156:44"><name pos:start="156:43" pos:end="156:44">gb</name></expr></argument>, <argument pos:start="156:47" pos:end="156:57"><expr pos:start="156:47" pos:end="156:57"><name pos:start="156:47" pos:end="156:57"><name pos:start="156:47" pos:end="156:54">c_tables</name><index pos:start="156:55" pos:end="156:57">[<expr pos:start="156:56" pos:end="156:56"><name pos:start="156:56" pos:end="156:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="156:60" pos:end="156:60"><expr pos:start="156:60" pos:end="156:60"><name pos:start="156:60" pos:end="156:60">i</name></expr></argument>,

                                       <argument pos:start="158:40" pos:end="158:40"><expr pos:start="158:40" pos:end="158:40"><literal type="number" pos:start="158:40" pos:end="158:40">1</literal></expr></argument>, <argument pos:start="158:43" pos:end="158:58"><expr pos:start="158:43" pos:end="158:58"><name pos:start="158:43" pos:end="158:58">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="160:9" pos:end="162:36"><if pos:start="160:9" pos:end="162:36">if <condition pos:start="160:12" pos:end="160:33">(<expr pos:start="160:13" pos:end="160:32"><name pos:start="160:13" pos:end="160:28">residual_eob_run</name> <operator pos:start="160:30" pos:end="160:30">&lt;</operator> <literal type="number" pos:start="160:32" pos:end="160:32">0</literal></expr>)</condition><block type="pseudo" pos:start="162:13" pos:end="162:36"><block_content pos:start="162:13" pos:end="162:36">

            <return pos:start="162:13" pos:end="162:36">return <expr pos:start="162:20" pos:end="162:35"><name pos:start="162:20" pos:end="162:35">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="164:9" pos:end="166:60"><expr pos:start="164:9" pos:end="166:59"><name pos:start="164:9" pos:end="164:24">residual_eob_run</name> <operator pos:start="164:26" pos:end="164:26">=</operator> <call pos:start="164:28" pos:end="166:59"><name pos:start="164:28" pos:end="164:38">unpack_vlcs</name><argument_list pos:start="164:39" pos:end="166:59">(<argument pos:start="164:40" pos:end="164:40"><expr pos:start="164:40" pos:end="164:40"><name pos:start="164:40" pos:end="164:40">s</name></expr></argument>, <argument pos:start="164:43" pos:end="164:44"><expr pos:start="164:43" pos:end="164:44"><name pos:start="164:43" pos:end="164:44">gb</name></expr></argument>, <argument pos:start="164:47" pos:end="164:57"><expr pos:start="164:47" pos:end="164:57"><name pos:start="164:47" pos:end="164:57"><name pos:start="164:47" pos:end="164:54">c_tables</name><index pos:start="164:55" pos:end="164:57">[<expr pos:start="164:56" pos:end="164:56"><name pos:start="164:56" pos:end="164:56">i</name></expr>]</index></name></expr></argument>, <argument pos:start="164:60" pos:end="164:60"><expr pos:start="164:60" pos:end="164:60"><name pos:start="164:60" pos:end="164:60">i</name></expr></argument>,

                                       <argument pos:start="166:40" pos:end="166:40"><expr pos:start="166:40" pos:end="166:40"><literal type="number" pos:start="166:40" pos:end="166:40">2</literal></expr></argument>, <argument pos:start="166:43" pos:end="166:58"><expr pos:start="166:43" pos:end="166:58"><name pos:start="166:43" pos:end="166:58">residual_eob_run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="168:9" pos:end="170:36"><if pos:start="168:9" pos:end="170:36">if <condition pos:start="168:12" pos:end="168:33">(<expr pos:start="168:13" pos:end="168:32"><name pos:start="168:13" pos:end="168:28">residual_eob_run</name> <operator pos:start="168:30" pos:end="168:30">&lt;</operator> <literal type="number" pos:start="168:32" pos:end="168:32">0</literal></expr>)</condition><block type="pseudo" pos:start="170:13" pos:end="170:36"><block_content pos:start="170:13" pos:end="170:36">

            <return pos:start="170:13" pos:end="170:36">return <expr pos:start="170:20" pos:end="170:35"><name pos:start="170:20" pos:end="170:35">residual_eob_run</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="176:5" pos:end="176:13">return <expr pos:start="176:12" pos:end="176:12"><literal type="number" pos:start="176:12" pos:end="176:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
