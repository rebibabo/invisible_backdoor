<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21961.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">increase_dynamic_storage</name><parameter_list pos:start="1:37" pos:end="1:71">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:49">IVShmemState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:70">new_min_size</name></decl></parameter>)</parameter_list> <block pos:start="1:73" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">



    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">j</name></decl>, <decl pos:start="5:12" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:23">old_nb_alloc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:31"><expr pos:start="9:5" pos:end="9:30"><name pos:start="9:5" pos:end="9:16">old_nb_alloc</name> <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:30">nb_peers</name></name></expr>;</expr_stmt>



    <while pos:start="13:5" pos:end="15:38">while <condition pos:start="13:11" pos:end="13:39">(<expr pos:start="13:12" pos:end="13:38"><name pos:start="13:12" pos:end="13:23">new_min_size</name> <operator pos:start="13:25" pos:end="13:26">&gt;=</operator> <name pos:start="13:28" pos:end="13:38"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:38">nb_peers</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:38"><block_content pos:start="15:9" pos:end="15:38">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">nb_peers</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <name pos:start="15:23" pos:end="15:33"><name pos:start="15:23" pos:end="15:23">s</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:33">nb_peers</name></name> <operator pos:start="15:35" pos:end="15:35">*</operator> <literal type="number" pos:start="15:37" pos:end="15:37">2</literal></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="19:5" pos:end="19:67"><expr pos:start="19:5" pos:end="19:66"><call pos:start="19:5" pos:end="19:66"><name pos:start="19:5" pos:end="19:19">IVSHMEM_DPRINTF</name><argument_list pos:start="19:20" pos:end="19:66">(<argument pos:start="19:21" pos:end="19:52"><expr pos:start="19:21" pos:end="19:52"><literal type="string" pos:start="19:21" pos:end="19:52">"bumping storage to %d guests\n"</literal></expr></argument>, <argument pos:start="19:55" pos:end="19:65"><expr pos:start="19:55" pos:end="19:65"><name pos:start="19:55" pos:end="19:65"><name pos:start="19:55" pos:end="19:55">s</name><operator pos:start="19:56" pos:end="19:57">-&gt;</operator><name pos:start="19:58" pos:end="19:65">nb_peers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">peers</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:62"><name pos:start="21:16" pos:end="21:24">g_realloc</name><argument_list pos:start="21:25" pos:end="21:62">(<argument pos:start="21:26" pos:end="21:33"><expr pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:33"><name pos:start="21:26" pos:end="21:26">s</name><operator pos:start="21:27" pos:end="21:28">-&gt;</operator><name pos:start="21:29" pos:end="21:33">peers</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:61"><expr pos:start="21:36" pos:end="21:61"><name pos:start="21:36" pos:end="21:46"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:46">nb_peers</name></name> <operator pos:start="21:48" pos:end="21:48">*</operator> <sizeof pos:start="21:50" pos:end="21:61">sizeof<argument_list pos:start="21:56" pos:end="21:61">(<argument pos:start="21:57" pos:end="21:60"><expr pos:start="21:57" pos:end="21:60"><name pos:start="21:57" pos:end="21:60">Peer</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:31">/* zero out new pointers */</comment>

    <for pos:start="27:5" pos:end="33:5">for <control pos:start="27:9" pos:end="27:48">(<init pos:start="27:10" pos:end="27:26"><expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:10">j</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:25">old_nb_alloc</name></expr>;</init> <condition pos:start="27:28" pos:end="27:43"><expr pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:28">j</name> <operator pos:start="27:30" pos:end="27:30">&lt;</operator> <name pos:start="27:32" pos:end="27:42"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:42">nb_peers</name></name></expr>;</condition> <incr pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><name pos:start="27:45" pos:end="27:45">j</name><operator pos:start="27:46" pos:end="27:47">++</operator></expr></incr>)</control> <block pos:start="27:50" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:36">

        <expr_stmt pos:start="29:9" pos:end="29:36"><expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:16">peers</name><index pos:start="29:17" pos:end="29:19">[<expr pos:start="29:18" pos:end="29:18"><name pos:start="29:18" pos:end="29:18">j</name></expr>]</index></name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:28">eventfds</name> <operator pos:start="29:30" pos:end="29:30">=</operator> <name pos:start="29:32" pos:end="29:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:36"><expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">peers</name><index pos:start="31:17" pos:end="31:19">[<expr pos:start="31:18" pos:end="31:18"><name pos:start="31:18" pos:end="31:18">j</name></expr>]</index></name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:31">nb_eventfds</name> <operator pos:start="31:33" pos:end="31:33">=</operator> <literal type="number" pos:start="31:35" pos:end="31:35">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
