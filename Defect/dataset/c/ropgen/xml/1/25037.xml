<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25037.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">join_request_frame</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:42">AVFilterLink</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:51">outlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:27">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:34">outlink</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:39">src</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">JoinContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name>       <init pos:start="7:26" pos:end="7:36">= <expr pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:36"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVFilterBufferRef</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:26">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">JoinBufferPriv</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:24">priv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">linesize</name>   <init pos:start="13:20" pos:end="13:28">= <expr pos:start="13:22" pos:end="13:28"><name pos:start="13:22" pos:end="13:28">INT_MAX</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">perms</name>      <init pos:start="15:20" pos:end="15:23">= <expr pos:start="15:22" pos:end="15:23"><operator pos:start="15:22" pos:end="15:22">~</operator><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">nb_samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">j</name></decl>, <decl pos:start="19:15" pos:end="19:17"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:17">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:35">/* get a frame on each input */</comment>

    <for pos:start="25:5" pos:end="53:5">for <control pos:start="25:9" pos:end="25:40">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:35"><expr pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:23">ctx</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:34">nb_inputs</name></name></expr>;</condition> <incr pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:37">i</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control> <block pos:start="25:42" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:9">

        <decl_stmt pos:start="27:9" pos:end="27:46"><decl pos:start="27:9" pos:end="27:45"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:20">AVFilterLink</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:28">inlink</name> <init pos:start="27:30" pos:end="27:45">= <expr pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:34">ctx</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:42">inputs</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><name pos:start="27:44" pos:end="27:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="35:23"><if pos:start="31:9" pos:end="35:23">if <condition pos:start="31:12" pos:end="33:49">(<expr pos:start="31:13" pos:end="33:48"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:14">s</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">input_frames</name><index pos:start="31:29" pos:end="31:31">[<expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">i</name></expr>]</index></name> <operator pos:start="31:33" pos:end="31:34">&amp;&amp;</operator>

            <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:16">ret</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:43"><name pos:start="33:20" pos:end="33:35">ff_request_frame</name><argument_list pos:start="33:36" pos:end="33:43">(<argument pos:start="33:37" pos:end="33:42"><expr pos:start="33:37" pos:end="33:42"><name pos:start="33:37" pos:end="33:42">inlink</name></expr></argument>)</argument_list></call><operator pos:start="33:44" pos:end="33:44">)</operator> <operator pos:start="33:46" pos:end="33:46">&lt;</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:23"><block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:62">/* request the same number of samples on all inputs */</comment>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:19">(<expr pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:13">i</name> <operator pos:start="41:15" pos:end="41:16">==</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>)</condition> <block pos:start="41:21" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:61">

            <expr_stmt pos:start="43:13" pos:end="43:63"><expr pos:start="43:13" pos:end="43:62"><name pos:start="43:13" pos:end="43:22">nb_samples</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <name pos:start="43:26" pos:end="43:43"><name pos:start="43:26" pos:end="43:26">s</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:40">input_frames</name><index pos:start="43:41" pos:end="43:43">[<expr pos:start="43:42" pos:end="43:42"><literal type="number" pos:start="43:42" pos:end="43:42">0</literal></expr>]</index></name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:62"><name pos:start="43:46" pos:end="43:50">audio</name><operator pos:start="43:51" pos:end="43:52">-&gt;</operator><name pos:start="43:53" pos:end="43:62">nb_samples</name></name></expr>;</expr_stmt>



            <for pos:start="47:13" pos:end="49:61">for <control pos:start="47:17" pos:end="47:54">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">j</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">1</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:49"><expr pos:start="47:25" pos:end="47:48"><operator pos:start="47:25" pos:end="47:25">!</operator><name pos:start="47:26" pos:end="47:26">i</name> <operator pos:start="47:28" pos:end="47:29">&amp;&amp;</operator> <name pos:start="47:31" pos:end="47:31">j</name> <operator pos:start="47:33" pos:end="47:33">&lt;</operator> <name pos:start="47:35" pos:end="47:48"><name pos:start="47:35" pos:end="47:37">ctx</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:48">nb_inputs</name></name></expr>;</condition> <incr pos:start="47:51" pos:end="47:53"><expr pos:start="47:51" pos:end="47:53"><name pos:start="47:51" pos:end="47:51">j</name><operator pos:start="47:52" pos:end="47:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:17" pos:end="49:61"><block_content pos:start="49:17" pos:end="49:61">

                <expr_stmt pos:start="49:17" pos:end="49:61"><expr pos:start="49:17" pos:end="49:60"><name pos:start="49:17" pos:end="49:30"><name pos:start="49:17" pos:end="49:19">ctx</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:27">inputs</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><name pos:start="49:29" pos:end="49:29">j</name></expr>]</index></name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:47">request_samples</name> <operator pos:start="49:49" pos:end="49:49">=</operator> <name pos:start="49:51" pos:end="49:60">nb_samples</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="57:5" pos:end="71:5">for <control pos:start="57:9" pos:end="57:40">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:35"><expr pos:start="57:17" pos:end="57:34"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:34">nb_channels</name></name></expr>;</condition> <incr pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:37">i</name><operator pos:start="57:38" pos:end="57:39">++</operator></expr></incr>)</control> <block pos:start="57:42" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:36">

        <decl_stmt pos:start="59:9" pos:end="59:41"><decl pos:start="59:9" pos:end="59:40"><type pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:18">ChannelMap</name> <modifier pos:start="59:20" pos:end="59:20">*</modifier></type><name pos:start="59:21" pos:end="59:22">ch</name> <init pos:start="59:24" pos:end="59:40">= <expr pos:start="59:26" pos:end="59:40"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:40"><name pos:start="59:27" pos:end="59:27">s</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:37">channels</name><index pos:start="59:38" pos:end="59:40">[<expr pos:start="59:39" pos:end="59:39"><name pos:start="59:39" pos:end="59:39">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="61:9" pos:end="61:64"><decl pos:start="61:9" pos:end="61:63"><type pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:25">AVFilterBufferRef</name> <modifier pos:start="61:27" pos:end="61:27">*</modifier></type><name pos:start="61:28" pos:end="61:34">cur_buf</name> <init pos:start="61:36" pos:end="61:63">= <expr pos:start="61:38" pos:end="61:63"><name pos:start="61:38" pos:end="61:63"><name pos:start="61:38" pos:end="61:38">s</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:52">input_frames</name><index pos:start="61:53" pos:end="61:63">[<expr pos:start="61:54" pos:end="61:62"><name pos:start="61:54" pos:end="61:62"><name pos:start="61:54" pos:end="61:55">ch</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:62">input</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:64"><expr pos:start="65:9" pos:end="65:63"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">data</name><index pos:start="65:16" pos:end="65:18">[<expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">i</name></expr>]</index></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:63"><name pos:start="65:22" pos:end="65:28">cur_buf</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:43">extended_data</name><index pos:start="65:44" pos:end="65:63">[<expr pos:start="65:45" pos:end="65:62"><name pos:start="65:45" pos:end="65:62"><name pos:start="65:45" pos:end="65:46">ch</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:62">in_channel_idx</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:59"><expr pos:start="67:9" pos:end="67:58"><name pos:start="67:9" pos:end="67:16">linesize</name>   <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:58"><name pos:start="67:22" pos:end="67:26">FFMIN</name><argument_list pos:start="67:27" pos:end="67:58">(<argument pos:start="67:28" pos:end="67:35"><expr pos:start="67:28" pos:end="67:35"><name pos:start="67:28" pos:end="67:35">linesize</name></expr></argument>, <argument pos:start="67:38" pos:end="67:57"><expr pos:start="67:38" pos:end="67:57"><name pos:start="67:38" pos:end="67:57"><name pos:start="67:38" pos:end="67:44">cur_buf</name><operator pos:start="67:45" pos:end="67:46">-&gt;</operator><name pos:start="67:47" pos:end="67:54">linesize</name><index pos:start="67:55" pos:end="67:57">[<expr pos:start="67:56" pos:end="67:56"><literal type="number" pos:start="67:56" pos:end="67:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:36"><expr pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:13">perms</name>     <operator pos:start="69:19" pos:end="69:20">&amp;=</operator> <name pos:start="69:22" pos:end="69:35"><name pos:start="69:22" pos:end="69:28">cur_buf</name><operator pos:start="69:29" pos:end="69:30">-&gt;</operator><name pos:start="69:31" pos:end="69:35">perms</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="75:5" pos:end="79:77"><expr pos:start="75:5" pos:end="79:76"><name pos:start="75:5" pos:end="75:7">buf</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="79:76"><name pos:start="75:11" pos:end="75:51">avfilter_get_audio_buffer_ref_from_arrays</name><argument_list pos:start="75:52" pos:end="79:76">(<argument pos:start="75:53" pos:end="75:59"><expr pos:start="75:53" pos:end="75:59"><name pos:start="75:53" pos:end="75:59"><name pos:start="75:53" pos:end="75:53">s</name><operator pos:start="75:54" pos:end="75:55">-&gt;</operator><name pos:start="75:56" pos:end="75:59">data</name></name></expr></argument>, <argument pos:start="75:62" pos:end="75:69"><expr pos:start="75:62" pos:end="75:69"><name pos:start="75:62" pos:end="75:69">linesize</name></expr></argument>, <argument pos:start="75:72" pos:end="75:76"><expr pos:start="75:72" pos:end="75:76"><name pos:start="75:72" pos:end="75:76">perms</name></expr></argument>,

                                                    <argument pos:start="77:53" pos:end="77:62"><expr pos:start="77:53" pos:end="77:62"><name pos:start="77:53" pos:end="77:62">nb_samples</name></expr></argument>, <argument pos:start="77:65" pos:end="77:79"><expr pos:start="77:65" pos:end="77:79"><name pos:start="77:65" pos:end="77:79"><name pos:start="77:65" pos:end="77:71">outlink</name><operator pos:start="77:72" pos:end="77:73">-&gt;</operator><name pos:start="77:74" pos:end="77:79">format</name></name></expr></argument>,

                                                    <argument pos:start="79:53" pos:end="79:75"><expr pos:start="79:53" pos:end="79:75"><name pos:start="79:53" pos:end="79:75"><name pos:start="79:53" pos:end="79:59">outlink</name><operator pos:start="79:60" pos:end="79:61">-&gt;</operator><name pos:start="79:62" pos:end="79:75">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:31"><if pos:start="81:5" pos:end="83:31">if <condition pos:start="81:8" pos:end="81:13">(<expr pos:start="81:9" pos:end="81:12"><operator pos:start="81:9" pos:end="81:9">!</operator><name pos:start="81:10" pos:end="81:12">buf</name></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:31"><block_content pos:start="83:9" pos:end="83:31">

        <return pos:start="83:9" pos:end="83:31">return <expr pos:start="83:16" pos:end="83:30"><call pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:30">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:18"><name pos:start="87:5" pos:end="87:7">buf</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:12">buf</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:18">free</name></name> <operator pos:start="87:20" pos:end="87:20">=</operator> <name pos:start="87:22" pos:end="87:37">join_free_buffer</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:45"><expr pos:start="89:5" pos:end="89:44"><name pos:start="89:5" pos:end="89:12"><name pos:start="89:5" pos:end="89:7">buf</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:12">pts</name></name>       <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:39"><name pos:start="89:22" pos:end="89:22">s</name><operator pos:start="89:23" pos:end="89:24">-&gt;</operator><name pos:start="89:25" pos:end="89:36">input_frames</name><index pos:start="89:37" pos:end="89:39">[<expr pos:start="89:38" pos:end="89:38"><literal type="number" pos:start="89:38" pos:end="89:38">0</literal></expr>]</index></name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:44">pts</name></expr>;</expr_stmt>



    <if_stmt pos:start="93:5" pos:end="95:18"><if pos:start="93:5" pos:end="95:18">if <condition pos:start="93:8" pos:end="93:44">(<expr pos:start="93:9" pos:end="93:43"><operator pos:start="93:9" pos:end="93:9">!</operator><operator pos:start="93:10" pos:end="93:10">(</operator><name pos:start="93:11" pos:end="93:14">priv</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:42"><name pos:start="93:18" pos:end="93:27">av_mallocz</name><argument_list pos:start="93:28" pos:end="93:42">(<argument pos:start="93:29" pos:end="93:41"><expr pos:start="93:29" pos:end="93:41"><sizeof pos:start="93:29" pos:end="93:41">sizeof<argument_list pos:start="93:35" pos:end="93:41">(<argument pos:start="93:36" pos:end="93:40"><expr pos:start="93:36" pos:end="93:40"><operator pos:start="93:36" pos:end="93:36">*</operator><name pos:start="93:37" pos:end="93:40">priv</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="93:43" pos:end="93:43">)</operator></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:18"><block_content pos:start="95:9" pos:end="95:18">

        <goto pos:start="95:9" pos:end="95:18">goto <name pos:start="95:14" pos:end="95:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="97:5" pos:end="99:18"><if pos:start="97:5" pos:end="99:18">if <condition pos:start="97:8" pos:end="97:85">(<expr pos:start="97:9" pos:end="97:84"><operator pos:start="97:9" pos:end="97:9">!</operator><operator pos:start="97:10" pos:end="97:10">(</operator><name pos:start="97:11" pos:end="97:26"><name pos:start="97:11" pos:end="97:14">priv</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:26">in_buffers</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <call pos:start="97:30" pos:end="97:83"><name pos:start="97:30" pos:end="97:39">av_mallocz</name><argument_list pos:start="97:40" pos:end="97:83">(<argument pos:start="97:41" pos:end="97:82"><expr pos:start="97:41" pos:end="97:82"><sizeof pos:start="97:41" pos:end="97:65">sizeof<argument_list pos:start="97:47" pos:end="97:65">(<argument pos:start="97:48" pos:end="97:64"><expr pos:start="97:48" pos:end="97:64"><operator pos:start="97:48" pos:end="97:48">*</operator><name pos:start="97:49" pos:end="97:64"><name pos:start="97:49" pos:end="97:52">priv</name><operator pos:start="97:53" pos:end="97:54">-&gt;</operator><name pos:start="97:55" pos:end="97:64">in_buffers</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="97:67" pos:end="97:67">*</operator> <name pos:start="97:69" pos:end="97:82"><name pos:start="97:69" pos:end="97:71">ctx</name><operator pos:start="97:72" pos:end="97:73">-&gt;</operator><name pos:start="97:74" pos:end="97:82">nb_inputs</name></name></expr></argument>)</argument_list></call><operator pos:start="97:84" pos:end="97:84">)</operator></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:18"><block_content pos:start="99:9" pos:end="99:18">

        <goto pos:start="99:9" pos:end="99:18">goto <name pos:start="99:14" pos:end="99:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="103:5" pos:end="105:49">for <control pos:start="103:9" pos:end="103:40">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:23">ctx</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:34">nb_inputs</name></name></expr>;</condition> <incr pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:37">i</name><operator pos:start="103:38" pos:end="103:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="105:49"><block_content pos:start="105:9" pos:end="105:49">

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:12">priv</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:24">in_buffers</name><index pos:start="105:25" pos:end="105:27">[<expr pos:start="105:26" pos:end="105:26"><name pos:start="105:26" pos:end="105:26">i</name></expr>]</index></name> <operator pos:start="105:29" pos:end="105:29">=</operator> <name pos:start="105:31" pos:end="105:48"><name pos:start="105:31" pos:end="105:31">s</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:45">input_frames</name><index pos:start="105:46" pos:end="105:48">[<expr pos:start="105:47" pos:end="105:47"><name pos:start="105:47" pos:end="105:47">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="107:5" pos:end="107:41"><expr pos:start="107:5" pos:end="107:40"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:8">priv</name><operator pos:start="107:9" pos:end="107:10">-&gt;</operator><name pos:start="107:11" pos:end="107:23">nb_in_buffers</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:40"><name pos:start="107:27" pos:end="107:29">ctx</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:40">nb_inputs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:31"><expr pos:start="109:5" pos:end="109:30"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">buf</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:12">buf</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:18">priv</name></name>      <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:30">priv</name></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:36"><expr pos:start="113:5" pos:end="113:35"><call pos:start="113:5" pos:end="113:35"><name pos:start="113:5" pos:end="113:21">ff_filter_samples</name><argument_list pos:start="113:22" pos:end="113:35">(<argument pos:start="113:23" pos:end="113:29"><expr pos:start="113:23" pos:end="113:29"><name pos:start="113:23" pos:end="113:29">outlink</name></expr></argument>, <argument pos:start="113:32" pos:end="113:34"><expr pos:start="113:32" pos:end="113:34"><name pos:start="113:32" pos:end="113:34">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:74"><expr pos:start="117:5" pos:end="117:73"><call pos:start="117:5" pos:end="117:73"><name pos:start="117:5" pos:end="117:10">memset</name><argument_list pos:start="117:11" pos:end="117:73">(<argument pos:start="117:12" pos:end="117:26"><expr pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:12">s</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:26">input_frames</name></name></expr></argument>, <argument pos:start="117:29" pos:end="117:29"><expr pos:start="117:29" pos:end="117:29"><literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr></argument>, <argument pos:start="117:32" pos:end="117:72"><expr pos:start="117:32" pos:end="117:72"><sizeof pos:start="117:32" pos:end="117:55">sizeof<argument_list pos:start="117:38" pos:end="117:55">(<argument pos:start="117:39" pos:end="117:54"><expr pos:start="117:39" pos:end="117:54"><operator pos:start="117:39" pos:end="117:39">*</operator><name pos:start="117:40" pos:end="117:54"><name pos:start="117:40" pos:end="117:40">s</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:54">input_frames</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:57" pos:end="117:57">*</operator> <name pos:start="117:59" pos:end="117:72"><name pos:start="117:59" pos:end="117:61">ctx</name><operator pos:start="117:62" pos:end="117:63">-&gt;</operator><name pos:start="117:64" pos:end="117:72">nb_inputs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>



<label pos:start="125:1" pos:end="125:5"><name pos:start="125:1" pos:end="125:4">fail</name>:</label>

    <expr_stmt pos:start="127:5" pos:end="127:31"><expr pos:start="127:5" pos:end="127:30"><call pos:start="127:5" pos:end="127:30"><name pos:start="127:5" pos:end="127:25">avfilter_unref_buffer</name><argument_list pos:start="127:26" pos:end="127:30">(<argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:36"><if pos:start="129:5" pos:end="131:36">if <condition pos:start="129:8" pos:end="129:13">(<expr pos:start="129:9" pos:end="129:12"><name pos:start="129:9" pos:end="129:12">priv</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:36"><block_content pos:start="131:9" pos:end="131:36">

        <expr_stmt pos:start="131:9" pos:end="131:36"><expr pos:start="131:9" pos:end="131:35"><call pos:start="131:9" pos:end="131:35"><name pos:start="131:9" pos:end="131:16">av_freep</name><argument_list pos:start="131:17" pos:end="131:35">(<argument pos:start="131:18" pos:end="131:34"><expr pos:start="131:18" pos:end="131:34"><operator pos:start="131:18" pos:end="131:18">&amp;</operator><name pos:start="131:19" pos:end="131:34"><name pos:start="131:19" pos:end="131:22">priv</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:34">in_buffers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:20"><expr pos:start="133:5" pos:end="133:19"><call pos:start="133:5" pos:end="133:19"><name pos:start="133:5" pos:end="133:12">av_freep</name><argument_list pos:start="133:13" pos:end="133:19">(<argument pos:start="133:14" pos:end="133:18"><expr pos:start="133:14" pos:end="133:18"><operator pos:start="133:14" pos:end="133:14">&amp;</operator><name pos:start="133:15" pos:end="133:18">priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:27">return <expr pos:start="135:12" pos:end="135:26"><call pos:start="135:12" pos:end="135:26"><name pos:start="135:12" pos:end="135:18">AVERROR</name><argument_list pos:start="135:19" pos:end="135:26">(<argument pos:start="135:20" pos:end="135:25"><expr pos:start="135:20" pos:end="135:25"><name pos:start="135:20" pos:end="135:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
