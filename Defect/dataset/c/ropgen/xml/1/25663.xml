<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25663.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">abi_long</name></type> <name pos:start="1:17" pos:end="1:37">do_sendrecvmsg_locked</name><parameter_list pos:start="1:38" pos:end="3:58">(<parameter pos:start="1:39" pos:end="1:44"><decl pos:start="1:39" pos:end="1:44"><type pos:start="1:39" pos:end="1:44"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:44">fd</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:72"><decl pos:start="1:47" pos:end="1:72"><type pos:start="1:47" pos:end="1:72"><name pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:52">struct</name> <name pos:start="1:54" pos:end="1:66">target_msghdr</name></name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">msgp</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:47"><decl pos:start="3:39" pos:end="3:47"><type pos:start="3:39" pos:end="3:47"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:47">flags</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:57"><decl pos:start="3:50" pos:end="3:57"><type pos:start="3:50" pos:end="3:57"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:57">send</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="153:1">{<block_content pos:start="7:5" pos:end="151:15">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">abi_long</name></type> <name pos:start="7:14" pos:end="7:16">ret</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:21">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:17">msghdr</name></name></type> <name pos:start="9:19" pos:end="9:21">msg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:16">iovec</name></name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">vec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">abi_ulong</name></type> <name pos:start="15:15" pos:end="15:24">target_vec</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="43:5"><if pos:start="19:5" pos:end="37:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:12">msgp</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">msg_name</name></name></expr>)</condition> <block pos:start="19:25" pos:end="37:5">{<block_content pos:start="21:9" pos:end="35:9">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">msg</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:23">msg_namelen</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:52"><name pos:start="21:27" pos:end="21:33">tswap32</name><argument_list pos:start="21:34" pos:end="21:52">(<argument pos:start="21:35" pos:end="21:51"><expr pos:start="21:35" pos:end="21:51"><name pos:start="21:35" pos:end="21:51"><name pos:start="21:35" pos:end="21:38">msgp</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:51">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">msg</name><operator pos:start="23:12" pos:end="23:12">.</operator><name pos:start="23:13" pos:end="23:20">msg_name</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:48"><name pos:start="23:24" pos:end="23:29">alloca</name><argument_list pos:start="23:30" pos:end="23:48">(<argument pos:start="23:31" pos:end="23:47"><expr pos:start="23:31" pos:end="23:47"><name pos:start="23:31" pos:end="23:45"><name pos:start="23:31" pos:end="23:33">msg</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:45">msg_namelen</name></name><operator pos:start="23:46" pos:end="23:46">+</operator><literal type="number" pos:start="23:47" pos:end="23:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="29:55"><expr pos:start="25:9" pos:end="29:54"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="29:54"><name pos:start="25:15" pos:end="25:37">target_to_host_sockaddr</name><argument_list pos:start="25:38" pos:end="29:54">(<argument pos:start="25:39" pos:end="25:40"><expr pos:start="25:39" pos:end="25:40"><name pos:start="25:39" pos:end="25:40">fd</name></expr></argument>, <argument pos:start="25:43" pos:end="25:54"><expr pos:start="25:43" pos:end="25:54"><name pos:start="25:43" pos:end="25:54"><name pos:start="25:43" pos:end="25:45">msg</name><operator pos:start="25:46" pos:end="25:46">.</operator><name pos:start="25:47" pos:end="25:54">msg_name</name></name></expr></argument>,

                                      <argument pos:start="27:39" pos:end="27:61"><expr pos:start="27:39" pos:end="27:61"><call pos:start="27:39" pos:end="27:61"><name pos:start="27:39" pos:end="27:45">tswapal</name><argument_list pos:start="27:46" pos:end="27:61">(<argument pos:start="27:47" pos:end="27:60"><expr pos:start="27:47" pos:end="27:60"><name pos:start="27:47" pos:end="27:60"><name pos:start="27:47" pos:end="27:50">msgp</name><operator pos:start="27:51" pos:end="27:52">-&gt;</operator><name pos:start="27:53" pos:end="27:60">msg_name</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                      <argument pos:start="29:39" pos:end="29:53"><expr pos:start="29:39" pos:end="29:53"><name pos:start="29:39" pos:end="29:53"><name pos:start="29:39" pos:end="29:41">msg</name><operator pos:start="29:42" pos:end="29:42">.</operator><name pos:start="29:43" pos:end="29:53">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:16">(<expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">ret</name></expr>)</condition> <block pos:start="31:18" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:22">

            <goto pos:start="33:13" pos:end="33:22">goto <name pos:start="33:18" pos:end="33:21">out2</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:28">

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:11">msg</name><operator pos:start="39:12" pos:end="39:12">.</operator><name pos:start="39:13" pos:end="39:20">msg_name</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:28"><expr pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">msg</name><operator pos:start="41:12" pos:end="41:12">.</operator><name pos:start="41:13" pos:end="41:23">msg_namelen</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <literal type="number" pos:start="41:27" pos:end="41:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:22"><name pos:start="45:5" pos:end="45:7">msg</name><operator pos:start="45:8" pos:end="45:8">.</operator><name pos:start="45:9" pos:end="45:22">msg_controllen</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">2</literal> <operator pos:start="45:28" pos:end="45:28">*</operator> <call pos:start="45:30" pos:end="45:58"><name pos:start="45:30" pos:end="45:36">tswapal</name><argument_list pos:start="45:37" pos:end="45:58">(<argument pos:start="45:38" pos:end="45:57"><expr pos:start="45:38" pos:end="45:57"><name pos:start="45:38" pos:end="45:57"><name pos:start="45:38" pos:end="45:41">msgp</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:57">msg_controllen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:7">msg</name><operator pos:start="47:8" pos:end="47:8">.</operator><name pos:start="47:9" pos:end="47:19">msg_control</name></name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:48"><name pos:start="47:23" pos:end="47:28">alloca</name><argument_list pos:start="47:29" pos:end="47:48">(<argument pos:start="47:30" pos:end="47:47"><expr pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:47"><name pos:start="47:30" pos:end="47:32">msg</name><operator pos:start="47:33" pos:end="47:33">.</operator><name pos:start="47:34" pos:end="47:47">msg_controllen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:17"><name pos:start="49:5" pos:end="49:7">msg</name><operator pos:start="49:8" pos:end="49:8">.</operator><name pos:start="49:9" pos:end="49:17">msg_flags</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:44"><name pos:start="49:21" pos:end="49:27">tswap32</name><argument_list pos:start="49:28" pos:end="49:44">(<argument pos:start="49:29" pos:end="49:43"><expr pos:start="49:29" pos:end="49:43"><name pos:start="49:29" pos:end="49:43"><name pos:start="49:29" pos:end="49:32">msgp</name><operator pos:start="49:33" pos:end="49:34">-&gt;</operator><name pos:start="49:35" pos:end="49:43">msg_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:9">count</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:37"><name pos:start="53:13" pos:end="53:19">tswapal</name><argument_list pos:start="53:20" pos:end="53:37">(<argument pos:start="53:21" pos:end="53:36"><expr pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:36"><name pos:start="53:21" pos:end="53:24">msgp</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">msg_iovlen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:40"><expr pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:14">target_vec</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:39"><name pos:start="55:18" pos:end="55:24">tswapal</name><argument_list pos:start="55:25" pos:end="55:39">(<argument pos:start="55:26" pos:end="55:38"><expr pos:start="55:26" pos:end="55:38"><name pos:start="55:26" pos:end="55:38"><name pos:start="55:26" pos:end="55:29">msgp</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:38">msg_iov</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:46"><expr pos:start="57:5" pos:end="59:45"><name pos:start="57:5" pos:end="57:7">vec</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="59:45"><name pos:start="57:11" pos:end="57:20">lock_iovec</name><argument_list pos:start="57:21" pos:end="59:45">(<argument pos:start="57:22" pos:end="57:54"><expr pos:start="57:22" pos:end="57:54"><ternary pos:start="57:22" pos:end="57:54"><condition pos:start="57:22" pos:end="57:27"><expr pos:start="57:22" pos:end="57:25"><name pos:start="57:22" pos:end="57:25">send</name></expr> ?</condition><then pos:start="57:29" pos:end="57:39"> <expr pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:39">VERIFY_READ</name></expr> </then><else pos:start="57:41" pos:end="57:54">: <expr pos:start="57:43" pos:end="57:54"><name pos:start="57:43" pos:end="57:54">VERIFY_WRITE</name></expr></else></ternary></expr></argument>,

                     <argument pos:start="59:22" pos:end="59:31"><expr pos:start="59:22" pos:end="59:31"><name pos:start="59:22" pos:end="59:31">target_vec</name></expr></argument>, <argument pos:start="59:34" pos:end="59:38"><expr pos:start="59:34" pos:end="59:38"><name pos:start="59:34" pos:end="59:38">count</name></expr></argument>, <argument pos:start="59:41" pos:end="59:44"><expr pos:start="59:41" pos:end="59:44"><name pos:start="59:41" pos:end="59:44">send</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:20">(<expr pos:start="61:9" pos:end="61:19"><name pos:start="61:9" pos:end="61:11">vec</name> <operator pos:start="61:13" pos:end="61:14">==</operator> <name pos:start="61:16" pos:end="61:19">NULL</name></expr>)</condition> <block pos:start="61:22" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:18">

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">-</operator><call pos:start="63:16" pos:end="63:42"><name pos:start="63:16" pos:end="63:35">host_to_target_errno</name><argument_list pos:start="63:36" pos:end="63:42">(<argument pos:start="63:37" pos:end="63:41"><expr pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:41">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">out2</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:7">msg</name><operator pos:start="69:8" pos:end="69:8">.</operator><name pos:start="69:9" pos:end="69:18">msg_iovlen</name></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:26">count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:7">msg</name><operator pos:start="71:8" pos:end="71:8">.</operator><name pos:start="71:9" pos:end="71:15">msg_iov</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:21">vec</name></expr>;</expr_stmt>



    <if_stmt pos:start="75:5" pos:end="141:5"><if pos:start="75:5" pos:end="95:5">if <condition pos:start="75:8" pos:end="75:13">(<expr pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:12">send</name></expr>)</condition> <block pos:start="75:15" pos:end="95:5">{<block_content pos:start="77:9" pos:end="93:9">

        <if_stmt pos:start="77:9" pos:end="87:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:45">(<expr pos:start="77:13" pos:end="77:44"><call pos:start="77:13" pos:end="77:44"><name pos:start="77:13" pos:end="77:40">fd_trans_target_to_host_data</name><argument_list pos:start="77:41" pos:end="77:44">(<argument pos:start="77:42" pos:end="77:43"><expr pos:start="77:42" pos:end="77:43"><name pos:start="77:42" pos:end="77:43">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:47" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:73">

            <expr_stmt pos:start="79:13" pos:end="81:73"><expr pos:start="79:13" pos:end="81:72"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="81:72"><call pos:start="79:19" pos:end="79:50"><name pos:start="79:19" pos:end="79:46">fd_trans_target_to_host_data</name><argument_list pos:start="79:47" pos:end="79:50">(<argument pos:start="79:48" pos:end="79:49"><expr pos:start="79:48" pos:end="79:49"><name pos:start="79:48" pos:end="79:49">fd</name></expr></argument>)</argument_list></call><argument_list pos:start="79:51" pos:end="81:72">(<argument pos:start="79:52" pos:end="79:72"><expr pos:start="79:52" pos:end="79:72"><name pos:start="79:52" pos:end="79:72"><name pos:start="79:52" pos:end="79:54">msg</name><operator pos:start="79:55" pos:end="79:55">.</operator><name pos:start="79:56" pos:end="79:62">msg_iov</name><operator pos:start="79:63" pos:end="79:64">-&gt;</operator><name pos:start="79:65" pos:end="79:72">iov_base</name></name></expr></argument>,

                                                   <argument pos:start="81:52" pos:end="81:71"><expr pos:start="81:52" pos:end="81:71"><name pos:start="81:52" pos:end="81:71"><name pos:start="81:52" pos:end="81:54">msg</name><operator pos:start="81:55" pos:end="81:55">.</operator><name pos:start="81:56" pos:end="81:62">msg_iov</name><operator pos:start="81:63" pos:end="81:64">-&gt;</operator><name pos:start="81:65" pos:end="81:71">iov_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="87:9">else <block pos:start="83:16" pos:end="87:9">{<block_content pos:start="85:13" pos:end="85:50">

            <expr_stmt pos:start="85:13" pos:end="85:50"><expr pos:start="85:13" pos:end="85:49"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:49"><name pos:start="85:19" pos:end="85:37">target_to_host_cmsg</name><argument_list pos:start="85:38" pos:end="85:49">(<argument pos:start="85:39" pos:end="85:42"><expr pos:start="85:39" pos:end="85:42"><operator pos:start="85:39" pos:end="85:39">&amp;</operator><name pos:start="85:40" pos:end="85:42">msg</name></expr></argument>, <argument pos:start="85:45" pos:end="85:48"><expr pos:start="85:45" pos:end="85:48"><name pos:start="85:45" pos:end="85:48">msgp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="89:9" pos:end="93:9"><if pos:start="89:9" pos:end="93:9">if <condition pos:start="89:12" pos:end="89:21">(<expr pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:15">ret</name> <operator pos:start="89:17" pos:end="89:18">==</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>)</condition> <block pos:start="89:23" pos:end="93:9">{<block_content pos:start="91:13" pos:end="91:59">

            <expr_stmt pos:start="91:13" pos:end="91:59"><expr pos:start="91:13" pos:end="91:58"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:58"><name pos:start="91:19" pos:end="91:27">get_errno</name><argument_list pos:start="91:28" pos:end="91:58">(<argument pos:start="91:29" pos:end="91:57"><expr pos:start="91:29" pos:end="91:57"><call pos:start="91:29" pos:end="91:57"><name pos:start="91:29" pos:end="91:40">safe_sendmsg</name><argument_list pos:start="91:41" pos:end="91:57">(<argument pos:start="91:42" pos:end="91:43"><expr pos:start="91:42" pos:end="91:43"><name pos:start="91:42" pos:end="91:43">fd</name></expr></argument>, <argument pos:start="91:46" pos:end="91:49"><expr pos:start="91:46" pos:end="91:49"><operator pos:start="91:46" pos:end="91:46">&amp;</operator><name pos:start="91:47" pos:end="91:49">msg</name></expr></argument>, <argument pos:start="91:52" pos:end="91:56"><expr pos:start="91:52" pos:end="91:56"><name pos:start="91:52" pos:end="91:56">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="141:5">else <block pos:start="95:12" pos:end="141:5">{<block_content pos:start="97:9" pos:end="139:9">

        <expr_stmt pos:start="97:9" pos:end="97:55"><expr pos:start="97:9" pos:end="97:54"><name pos:start="97:9" pos:end="97:11">ret</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:54"><name pos:start="97:15" pos:end="97:23">get_errno</name><argument_list pos:start="97:24" pos:end="97:54">(<argument pos:start="97:25" pos:end="97:53"><expr pos:start="97:25" pos:end="97:53"><call pos:start="97:25" pos:end="97:53"><name pos:start="97:25" pos:end="97:36">safe_recvmsg</name><argument_list pos:start="97:37" pos:end="97:53">(<argument pos:start="97:38" pos:end="97:39"><expr pos:start="97:38" pos:end="97:39"><name pos:start="97:38" pos:end="97:39">fd</name></expr></argument>, <argument pos:start="97:42" pos:end="97:45"><expr pos:start="97:42" pos:end="97:45"><operator pos:start="97:42" pos:end="97:42">&amp;</operator><name pos:start="97:43" pos:end="97:45">msg</name></expr></argument>, <argument pos:start="97:48" pos:end="97:52"><expr pos:start="97:48" pos:end="97:52"><name pos:start="97:48" pos:end="97:52">flags</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="139:9"><if pos:start="99:9" pos:end="139:9">if <condition pos:start="99:12" pos:end="99:27">(<expr pos:start="99:13" pos:end="99:26"><operator pos:start="99:13" pos:end="99:13">!</operator><call pos:start="99:14" pos:end="99:26"><name pos:start="99:14" pos:end="99:21">is_error</name><argument_list pos:start="99:22" pos:end="99:26">(<argument pos:start="99:23" pos:end="99:25"><expr pos:start="99:23" pos:end="99:25"><name pos:start="99:23" pos:end="99:25">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:29" pos:end="139:9">{<block_content pos:start="101:13" pos:end="137:13">

            <expr_stmt pos:start="101:13" pos:end="101:22"><expr pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:15">len</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <name pos:start="101:19" pos:end="101:21">ret</name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="113:13"><if pos:start="103:13" pos:end="109:13">if <condition pos:start="103:16" pos:end="103:49">(<expr pos:start="103:17" pos:end="103:48"><call pos:start="103:17" pos:end="103:48"><name pos:start="103:17" pos:end="103:44">fd_trans_host_to_target_data</name><argument_list pos:start="103:45" pos:end="103:48">(<argument pos:start="103:46" pos:end="103:47"><expr pos:start="103:46" pos:end="103:47"><name pos:start="103:46" pos:end="103:47">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:51" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:60">

                <expr_stmt pos:start="105:17" pos:end="107:60"><expr pos:start="105:17" pos:end="107:59"><name pos:start="105:17" pos:end="105:19">ret</name> <operator pos:start="105:21" pos:end="105:21">=</operator> <call pos:start="105:23" pos:end="107:59"><call pos:start="105:23" pos:end="105:54"><name pos:start="105:23" pos:end="105:50">fd_trans_host_to_target_data</name><argument_list pos:start="105:51" pos:end="105:54">(<argument pos:start="105:52" pos:end="105:53"><expr pos:start="105:52" pos:end="105:53"><name pos:start="105:52" pos:end="105:53">fd</name></expr></argument>)</argument_list></call><argument_list pos:start="105:55" pos:end="107:59">(<argument pos:start="105:56" pos:end="105:76"><expr pos:start="105:56" pos:end="105:76"><name pos:start="105:56" pos:end="105:76"><name pos:start="105:56" pos:end="105:58">msg</name><operator pos:start="105:59" pos:end="105:59">.</operator><name pos:start="105:60" pos:end="105:66">msg_iov</name><operator pos:start="105:67" pos:end="105:68">-&gt;</operator><name pos:start="105:69" pos:end="105:76">iov_base</name></name></expr></argument>,

                                                       <argument pos:start="107:56" pos:end="107:58"><expr pos:start="107:56" pos:end="107:58"><name pos:start="107:56" pos:end="107:58">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="113:13">else <block pos:start="109:20" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:54">

                <expr_stmt pos:start="111:17" pos:end="111:54"><expr pos:start="111:17" pos:end="111:53"><name pos:start="111:17" pos:end="111:19">ret</name> <operator pos:start="111:21" pos:end="111:21">=</operator> <call pos:start="111:23" pos:end="111:53"><name pos:start="111:23" pos:end="111:41">host_to_target_cmsg</name><argument_list pos:start="111:42" pos:end="111:53">(<argument pos:start="111:43" pos:end="111:46"><expr pos:start="111:43" pos:end="111:46"><name pos:start="111:43" pos:end="111:46">msgp</name></expr></argument>, <argument pos:start="111:49" pos:end="111:52"><expr pos:start="111:49" pos:end="111:52"><operator pos:start="111:49" pos:end="111:49">&amp;</operator><name pos:start="111:50" pos:end="111:52">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="115:13" pos:end="137:13"><if pos:start="115:13" pos:end="137:13">if <condition pos:start="115:16" pos:end="115:31">(<expr pos:start="115:17" pos:end="115:30"><operator pos:start="115:17" pos:end="115:17">!</operator><call pos:start="115:18" pos:end="115:30"><name pos:start="115:18" pos:end="115:25">is_error</name><argument_list pos:start="115:26" pos:end="115:30">(<argument pos:start="115:27" pos:end="115:29"><expr pos:start="115:27" pos:end="115:29"><name pos:start="115:27" pos:end="115:29">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:33" pos:end="137:13">{<block_content pos:start="117:17" pos:end="135:26">

                <expr_stmt pos:start="117:17" pos:end="117:61"><expr pos:start="117:17" pos:end="117:60"><name pos:start="117:17" pos:end="117:33"><name pos:start="117:17" pos:end="117:20">msgp</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:33">msg_namelen</name></name> <operator pos:start="117:35" pos:end="117:35">=</operator> <call pos:start="117:37" pos:end="117:60"><name pos:start="117:37" pos:end="117:43">tswap32</name><argument_list pos:start="117:44" pos:end="117:60">(<argument pos:start="117:45" pos:end="117:59"><expr pos:start="117:45" pos:end="117:59"><name pos:start="117:45" pos:end="117:59"><name pos:start="117:45" pos:end="117:47">msg</name><operator pos:start="117:48" pos:end="117:48">.</operator><name pos:start="117:49" pos:end="117:59">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="119:17" pos:end="131:17"><if pos:start="119:17" pos:end="131:17">if <condition pos:start="119:20" pos:end="119:41">(<expr pos:start="119:21" pos:end="119:40"><name pos:start="119:21" pos:end="119:32"><name pos:start="119:21" pos:end="119:23">msg</name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:32">msg_name</name></name> <operator pos:start="119:34" pos:end="119:35">!=</operator> <name pos:start="119:37" pos:end="119:40">NULL</name></expr>)</condition> <block pos:start="119:43" pos:end="131:17">{<block_content pos:start="121:21" pos:end="129:21">

                    <expr_stmt pos:start="121:21" pos:end="123:67"><expr pos:start="121:21" pos:end="123:66"><name pos:start="121:21" pos:end="121:23">ret</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <call pos:start="121:27" pos:end="123:66"><name pos:start="121:27" pos:end="121:49">host_to_target_sockaddr</name><argument_list pos:start="121:50" pos:end="123:66">(<argument pos:start="121:51" pos:end="121:73"><expr pos:start="121:51" pos:end="121:73"><call pos:start="121:51" pos:end="121:73"><name pos:start="121:51" pos:end="121:57">tswapal</name><argument_list pos:start="121:58" pos:end="121:73">(<argument pos:start="121:59" pos:end="121:72"><expr pos:start="121:59" pos:end="121:72"><name pos:start="121:59" pos:end="121:72"><name pos:start="121:59" pos:end="121:62">msgp</name><operator pos:start="121:63" pos:end="121:64">-&gt;</operator><name pos:start="121:65" pos:end="121:72">msg_name</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="123:37" pos:end="123:48"><expr pos:start="123:37" pos:end="123:48"><name pos:start="123:37" pos:end="123:48"><name pos:start="123:37" pos:end="123:39">msg</name><operator pos:start="123:40" pos:end="123:40">.</operator><name pos:start="123:41" pos:end="123:48">msg_name</name></name></expr></argument>, <argument pos:start="123:51" pos:end="123:65"><expr pos:start="123:51" pos:end="123:65"><name pos:start="123:51" pos:end="123:65"><name pos:start="123:51" pos:end="123:53">msg</name><operator pos:start="123:54" pos:end="123:54">.</operator><name pos:start="123:55" pos:end="123:65">msg_namelen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="125:21" pos:end="129:21"><if pos:start="125:21" pos:end="129:21">if <condition pos:start="125:24" pos:end="125:28">(<expr pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:27">ret</name></expr>)</condition> <block pos:start="125:30" pos:end="129:21">{<block_content pos:start="127:25" pos:end="127:33">

                        <goto pos:start="127:25" pos:end="127:33">goto <name pos:start="127:30" pos:end="127:32">out</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="135:17" pos:end="135:26"><expr pos:start="135:17" pos:end="135:25"><name pos:start="135:17" pos:end="135:19">ret</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:25">len</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="145:1" pos:end="145:4"><name pos:start="145:1" pos:end="145:3">out</name>:</label>

    <expr_stmt pos:start="147:5" pos:end="147:48"><expr pos:start="147:5" pos:end="147:47"><call pos:start="147:5" pos:end="147:47"><name pos:start="147:5" pos:end="147:16">unlock_iovec</name><argument_list pos:start="147:17" pos:end="147:47">(<argument pos:start="147:18" pos:end="147:20"><expr pos:start="147:18" pos:end="147:20"><name pos:start="147:18" pos:end="147:20">vec</name></expr></argument>, <argument pos:start="147:23" pos:end="147:32"><expr pos:start="147:23" pos:end="147:32"><name pos:start="147:23" pos:end="147:32">target_vec</name></expr></argument>, <argument pos:start="147:35" pos:end="147:39"><expr pos:start="147:35" pos:end="147:39"><name pos:start="147:35" pos:end="147:39">count</name></expr></argument>, <argument pos:start="147:42" pos:end="147:46"><expr pos:start="147:42" pos:end="147:46"><operator pos:start="147:42" pos:end="147:42">!</operator><name pos:start="147:43" pos:end="147:46">send</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="149:1" pos:end="149:5"><name pos:start="149:1" pos:end="149:4">out2</name>:</label>

    <return pos:start="151:5" pos:end="151:15">return <expr pos:start="151:12" pos:end="151:14"><name pos:start="151:12" pos:end="151:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
