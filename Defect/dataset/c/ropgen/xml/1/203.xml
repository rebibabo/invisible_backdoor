<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/203.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">av_vsrc_buffer_add_frame2</name><parameter_list pos:start="1:30" pos:end="7:52">(<parameter pos:start="1:31" pos:end="1:60"><decl pos:start="1:31" pos:end="1:60"><type pos:start="1:31" pos:end="1:60"><name pos:start="1:31" pos:end="1:45">AVFilterContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:60">buffer_filter</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:69">AVFrame</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">frame</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:37">int64_t</name></type> <name pos:start="3:39" pos:end="3:41">pts</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:66"><decl pos:start="3:44" pos:end="3:66"><type pos:start="3:44" pos:end="3:66"><name pos:start="3:44" pos:end="3:53">AVRational</name></type> <name pos:start="3:55" pos:end="3:66">pixel_aspect</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:77"><decl pos:start="3:69" pos:end="3:77"><type pos:start="3:69" pos:end="3:77"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:77">width</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:40"><decl pos:start="5:31" pos:end="5:40"><type pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:40">height</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:67"><decl pos:start="5:43" pos:end="5:67"><type pos:start="5:43" pos:end="5:67"><name pos:start="5:43" pos:end="5:58"><name pos:start="5:43" pos:end="5:46">enum</name> <name pos:start="5:48" pos:end="5:58">PixelFormat</name></name></type>  <name pos:start="5:61" pos:end="5:67">pix_fmt</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:51"><decl pos:start="7:31" pos:end="7:51"><type pos:start="7:31" pos:end="7:51"><specifier pos:start="7:31" pos:end="7:35">const</specifier> <name pos:start="7:37" pos:end="7:40">char</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:51">sws_param</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="127:1">{<block_content pos:start="11:5" pos:end="125:13">

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">BufferSourceContext</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:26">c</name> <init pos:start="11:28" pos:end="11:48">= <expr pos:start="11:30" pos:end="11:48"><name pos:start="11:30" pos:end="11:48"><name pos:start="11:30" pos:end="11:42">buffer_filter</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:21">(<expr pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:20">has_frame</name></name></expr>)</condition> <block pos:start="17:23" pos:end="29:5">{<block_content pos:start="19:9" pos:end="25:14">

        <expr_stmt pos:start="19:9" pos:end="25:14"><expr pos:start="19:9" pos:end="25:13"><call pos:start="19:9" pos:end="25:13"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="25:13">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28">buffer_filter</name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="21:16" pos:end="23:79"><expr pos:start="21:16" pos:end="23:79"><literal type="string" pos:start="21:16" pos:end="21:60">"Buffering several frames is not supported. "</literal>

               <literal type="string" pos:start="23:16" pos:end="23:79">"Please consume all available frames before adding a new one.\n"</literal></expr></argument>

            )</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="27:9" pos:end="27:20">//return -1;</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="101:5"><if pos:start="33:5" pos:end="101:5">if<condition pos:start="33:7" pos:end="33:64">(<expr pos:start="33:8" pos:end="33:63"><name pos:start="33:8" pos:end="33:12">width</name> <operator pos:start="33:14" pos:end="33:15">!=</operator> <name pos:start="33:17" pos:end="33:20"><name pos:start="33:17" pos:end="33:17">c</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:20">w</name></name> <operator pos:start="33:22" pos:end="33:23">||</operator> <name pos:start="33:25" pos:end="33:30">height</name> <operator pos:start="33:32" pos:end="33:33">!=</operator> <name pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:35">c</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:38">h</name></name> <operator pos:start="33:40" pos:end="33:41">||</operator> <name pos:start="33:43" pos:end="33:49">pix_fmt</name> <operator pos:start="33:51" pos:end="33:52">!=</operator> <name pos:start="33:54" pos:end="33:63"><name pos:start="33:54" pos:end="33:54">c</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:63">pix_fmt</name></name></expr>)</condition><block pos:start="33:65" pos:end="101:5">{<block_content pos:start="35:9" pos:end="99:23">

        <decl_stmt pos:start="35:9" pos:end="35:63"><decl pos:start="35:9" pos:end="35:62"><type pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:23">AVFilterContext</name> <modifier pos:start="35:25" pos:end="35:25">*</modifier></type><name pos:start="35:26" pos:end="35:30">scale</name><init pos:start="35:31" pos:end="35:62">= <expr pos:start="35:33" pos:end="35:62"><name pos:start="35:33" pos:end="35:57"><name pos:start="35:33" pos:end="35:45">buffer_filter</name><operator pos:start="35:46" pos:end="35:47">-&gt;</operator><name pos:start="35:48" pos:end="35:54">outputs</name><index pos:start="35:55" pos:end="35:57">[<expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">0</literal></expr>]</index></name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:62">dst</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:27"><decl pos:start="37:9" pos:end="37:26"><type pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:20">AVFilterLink</name> <modifier pos:start="37:22" pos:end="37:22">*</modifier></type><name pos:start="37:23" pos:end="37:26">link</name></decl>;</decl_stmt>



        <expr_stmt pos:start="41:9" pos:end="43:76"><expr pos:start="41:9" pos:end="43:75"><call pos:start="41:9" pos:end="43:75"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:75">(<argument pos:start="41:16" pos:end="41:28"><expr pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:28">buffer_filter</name></expr></argument>, <argument pos:start="41:31" pos:end="41:41"><expr pos:start="41:31" pos:end="41:41"><name pos:start="41:31" pos:end="41:41">AV_LOG_INFO</name></expr></argument>, <argument pos:start="41:44" pos:end="41:101"><expr pos:start="41:44" pos:end="41:101"><literal type="string" pos:start="41:44" pos:end="41:101">"Changing filter graph input to accept %dx%d %d (%d %d)\n"</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">width</name></expr></argument>,<argument pos:start="43:22" pos:end="43:27"><expr pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:27">height</name></expr></argument>,<argument pos:start="43:29" pos:end="43:35"><expr pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:35">pix_fmt</name></expr></argument>, <argument pos:start="43:38" pos:end="43:47"><expr pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:38">c</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:47">pix_fmt</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:74"><expr pos:start="43:50" pos:end="43:74"><name pos:start="43:50" pos:end="43:66"><name pos:start="43:50" pos:end="43:54">scale</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:63">outputs</name><index pos:start="43:64" pos:end="43:66">[<expr pos:start="43:65" pos:end="43:65"><literal type="number" pos:start="43:65" pos:end="43:65">0</literal></expr>]</index></name><operator pos:start="43:67" pos:end="43:68">-&gt;</operator><name pos:start="43:69" pos:end="43:74">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="47:9" pos:end="83:9"><if pos:start="47:9" pos:end="83:9">if<condition pos:start="47:11" pos:end="47:57">(<expr pos:start="47:12" pos:end="47:56"><operator pos:start="47:12" pos:end="47:12">!</operator><name pos:start="47:13" pos:end="47:17">scale</name> <operator pos:start="47:19" pos:end="47:20">||</operator> <call pos:start="47:22" pos:end="47:56"><name pos:start="47:22" pos:end="47:27">strcmp</name><argument_list pos:start="47:28" pos:end="47:56">(<argument pos:start="47:29" pos:end="47:47"><expr pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:33">scale</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:41">filter</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:47">name</name></name></expr></argument>,<argument pos:start="47:49" pos:end="47:55"><expr pos:start="47:49" pos:end="47:55"><literal type="string" pos:start="47:49" pos:end="47:55">"scale"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="47:58" pos:end="83:9">{<block_content pos:start="49:13" pos:end="81:50">

            <decl_stmt pos:start="49:13" pos:end="49:55"><decl pos:start="49:13" pos:end="49:54"><type pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:20">AVFilter</name> <modifier pos:start="49:22" pos:end="49:22">*</modifier></type><name pos:start="49:23" pos:end="49:23">f</name><init pos:start="49:24" pos:end="49:54">= <expr pos:start="49:26" pos:end="49:54"><call pos:start="49:26" pos:end="49:54"><name pos:start="49:26" pos:end="49:45">avfilter_get_by_name</name><argument_list pos:start="49:46" pos:end="49:54">(<argument pos:start="49:47" pos:end="49:53"><expr pos:start="49:47" pos:end="49:53"><literal type="string" pos:start="49:47" pos:end="49:53">"scale"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:76"><expr pos:start="53:13" pos:end="53:75"><call pos:start="53:13" pos:end="53:75"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="53:75">(<argument pos:start="53:20" pos:end="53:32"><expr pos:start="53:20" pos:end="53:32"><name pos:start="53:20" pos:end="53:32">buffer_filter</name></expr></argument>, <argument pos:start="53:35" pos:end="53:45"><expr pos:start="53:35" pos:end="53:45"><name pos:start="53:35" pos:end="53:45">AV_LOG_INFO</name></expr></argument>, <argument pos:start="53:48" pos:end="53:74"><expr pos:start="53:48" pos:end="53:74"><literal type="string" pos:start="53:48" pos:end="53:74">"Inserting scaler filter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="57:26"><if pos:start="55:13" pos:end="57:26">if<condition pos:start="55:15" pos:end="55:63">(<expr pos:start="55:16" pos:end="55:62"><call pos:start="55:16" pos:end="55:58"><name pos:start="55:16" pos:end="55:28">avfilter_open</name><argument_list pos:start="55:29" pos:end="55:58">(<argument pos:start="55:30" pos:end="55:35"><expr pos:start="55:30" pos:end="55:35"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:35">scale</name></expr></argument>, <argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">f</name></expr></argument>, <argument pos:start="55:41" pos:end="55:57"><expr pos:start="55:41" pos:end="55:57"><literal type="string" pos:start="55:41" pos:end="55:57">"Input equalizer"</literal></expr></argument>)</argument_list></call> <operator pos:start="55:60" pos:end="55:60">&lt;</operator> <literal type="number" pos:start="55:62" pos:end="55:62">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:26"><block_content pos:start="57:17" pos:end="57:26">

                <return pos:start="57:17" pos:end="57:26">return <expr pos:start="57:24" pos:end="57:25"><operator pos:start="57:24" pos:end="57:24">-</operator><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if<condition pos:start="61:15" pos:end="61:68">(<expr pos:start="61:16" pos:end="61:67"><operator pos:start="61:16" pos:end="61:16">(</operator><name pos:start="61:17" pos:end="61:19">ret</name><operator pos:start="61:20" pos:end="61:20">=</operator><call pos:start="61:21" pos:end="61:64"><name pos:start="61:21" pos:end="61:40">avfilter_init_filter</name><argument_list pos:start="61:41" pos:end="61:64">(<argument pos:start="61:42" pos:end="61:46"><expr pos:start="61:42" pos:end="61:46"><name pos:start="61:42" pos:end="61:46">scale</name></expr></argument>, <argument pos:start="61:49" pos:end="61:57"><expr pos:start="61:49" pos:end="61:57"><name pos:start="61:49" pos:end="61:57">sws_param</name></expr></argument>, <argument pos:start="61:60" pos:end="61:63"><expr pos:start="61:60" pos:end="61:63"><name pos:start="61:60" pos:end="61:63">NULL</name></expr></argument>)</argument_list></call><operator pos:start="61:65" pos:end="61:65">)</operator><operator pos:start="61:66" pos:end="61:66">&lt;</operator><literal type="number" pos:start="61:67" pos:end="61:67">0</literal></expr>)</condition><block pos:start="61:69" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:27">

                <expr_stmt pos:start="63:17" pos:end="63:37"><expr pos:start="63:17" pos:end="63:36"><call pos:start="63:17" pos:end="63:36"><name pos:start="63:17" pos:end="63:29">avfilter_free</name><argument_list pos:start="63:30" pos:end="63:36">(<argument pos:start="63:31" pos:end="63:35"><expr pos:start="63:31" pos:end="63:35"><name pos:start="63:31" pos:end="63:35">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="65:17" pos:end="65:27">return <expr pos:start="65:24" pos:end="65:26"><name pos:start="65:24" pos:end="65:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="71:13" pos:end="77:13"><if pos:start="71:13" pos:end="77:13">if<condition pos:start="71:15" pos:end="71:86">(<expr pos:start="71:16" pos:end="71:85"><operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:19">ret</name><operator pos:start="71:20" pos:end="71:20">=</operator><call pos:start="71:21" pos:end="71:82"><name pos:start="71:21" pos:end="71:42">avfilter_insert_filter</name><argument_list pos:start="71:43" pos:end="71:82">(<argument pos:start="71:44" pos:end="71:68"><expr pos:start="71:44" pos:end="71:68"><name pos:start="71:44" pos:end="71:68"><name pos:start="71:44" pos:end="71:56">buffer_filter</name><operator pos:start="71:57" pos:end="71:58">-&gt;</operator><name pos:start="71:59" pos:end="71:65">outputs</name><index pos:start="71:66" pos:end="71:68">[<expr pos:start="71:67" pos:end="71:67"><literal type="number" pos:start="71:67" pos:end="71:67">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:71" pos:end="71:75"><expr pos:start="71:71" pos:end="71:75"><name pos:start="71:71" pos:end="71:75">scale</name></expr></argument>, <argument pos:start="71:78" pos:end="71:78"><expr pos:start="71:78" pos:end="71:78"><literal type="number" pos:start="71:78" pos:end="71:78">0</literal></expr></argument>, <argument pos:start="71:81" pos:end="71:81"><expr pos:start="71:81" pos:end="71:81"><literal type="number" pos:start="71:81" pos:end="71:81">0</literal></expr></argument>)</argument_list></call><operator pos:start="71:83" pos:end="71:83">)</operator><operator pos:start="71:84" pos:end="71:84">&lt;</operator><literal type="number" pos:start="71:85" pos:end="71:85">0</literal></expr>)</condition><block pos:start="71:87" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:27">

                <expr_stmt pos:start="73:17" pos:end="73:37"><expr pos:start="73:17" pos:end="73:36"><call pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:29">avfilter_free</name><argument_list pos:start="73:30" pos:end="73:36">(<argument pos:start="73:31" pos:end="73:35"><expr pos:start="73:31" pos:end="73:35"><name pos:start="73:31" pos:end="73:35">scale</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="75:17" pos:end="75:27">return <expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:50"><expr pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:17">scale</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:26">outputs</name><index pos:start="81:27" pos:end="81:29">[<expr pos:start="81:28" pos:end="81:28"><literal type="number" pos:start="81:28" pos:end="81:28">0</literal></expr>]</index></name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:37">format</name><operator pos:start="81:38" pos:end="81:38">=</operator> <name pos:start="81:40" pos:end="81:49"><name pos:start="81:40" pos:end="81:40">c</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:49">pix_fmt</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:54"><expr pos:start="87:9" pos:end="87:53"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:9">c</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">pix_fmt</name></name><operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:25">scale</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:33">inputs</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">0</literal></expr>]</index></name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:44">format</name><operator pos:start="87:45" pos:end="87:45">=</operator> <name pos:start="87:47" pos:end="87:53">pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:12"><name pos:start="89:9" pos:end="89:9">c</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:12">w</name></name><operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:30"><name pos:start="89:15" pos:end="89:19">scale</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:27">inputs</name><index pos:start="89:28" pos:end="89:30">[<expr pos:start="89:29" pos:end="89:29"><literal type="number" pos:start="89:29" pos:end="89:29">0</literal></expr>]</index></name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:33">w</name><operator pos:start="89:34" pos:end="89:34">=</operator> <name pos:start="89:36" pos:end="89:40">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:42"><expr pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:9">c</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:12">h</name></name><operator pos:start="91:13" pos:end="91:13">=</operator> <name pos:start="91:15" pos:end="91:30"><name pos:start="91:15" pos:end="91:19">scale</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:27">inputs</name><index pos:start="91:28" pos:end="91:30">[<expr pos:start="91:29" pos:end="91:29"><literal type="number" pos:start="91:29" pos:end="91:29">0</literal></expr>]</index></name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:33">h</name><operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:41">height</name></expr>;</expr_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:32"><expr pos:start="95:9" pos:end="95:31"><name pos:start="95:9" pos:end="95:12">link</name><operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:31"><name pos:start="95:15" pos:end="95:19">scale</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:28">outputs</name><index pos:start="95:29" pos:end="95:31">[<expr pos:start="95:30" pos:end="95:30"><literal type="number" pos:start="95:30" pos:end="95:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:23"><if pos:start="97:9" pos:end="99:23">if <condition pos:start="97:12" pos:end="97:58">(<expr pos:start="97:13" pos:end="97:57"><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:16">ret</name> <operator pos:start="97:18" pos:end="97:18">=</operator>  <call pos:start="97:21" pos:end="97:52"><name pos:start="97:21" pos:end="97:46"><name pos:start="97:21" pos:end="97:24">link</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:32">srcpad</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:46">config_props</name></name><argument_list pos:start="97:47" pos:end="97:52">(<argument pos:start="97:48" pos:end="97:51"><expr pos:start="97:48" pos:end="97:51"><name pos:start="97:48" pos:end="97:51">link</name></expr></argument>)</argument_list></call><operator pos:start="97:53" pos:end="97:53">)</operator> <operator pos:start="97:55" pos:end="97:55">&lt;</operator> <literal type="number" pos:start="97:57" pos:end="97:57">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:23"><block_content pos:start="99:13" pos:end="99:23">

            <return pos:start="99:13" pos:end="99:23">return <expr pos:start="99:20" pos:end="99:22"><name pos:start="99:20" pos:end="99:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:68"><expr pos:start="105:5" pos:end="105:67"><call pos:start="105:5" pos:end="105:67"><name pos:start="105:5" pos:end="105:10">memcpy</name><argument_list pos:start="105:11" pos:end="105:67">(<argument pos:start="105:12" pos:end="105:24"><expr pos:start="105:12" pos:end="105:24"><name pos:start="105:12" pos:end="105:24"><name pos:start="105:12" pos:end="105:12">c</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:19">frame</name><operator pos:start="105:20" pos:end="105:20">.</operator><name pos:start="105:21" pos:end="105:24">data</name></name></expr></argument>    , <argument pos:start="105:31" pos:end="105:41"><expr pos:start="105:31" pos:end="105:41"><name pos:start="105:31" pos:end="105:41"><name pos:start="105:31" pos:end="105:35">frame</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:41">data</name></name></expr></argument>    , <argument pos:start="105:48" pos:end="105:66"><expr pos:start="105:48" pos:end="105:66"><sizeof pos:start="105:48" pos:end="105:66">sizeof<argument_list pos:start="105:54" pos:end="105:66">(<argument pos:start="105:55" pos:end="105:65"><expr pos:start="105:55" pos:end="105:65"><name pos:start="105:55" pos:end="105:65"><name pos:start="105:55" pos:end="105:59">frame</name><operator pos:start="105:60" pos:end="105:61">-&gt;</operator><name pos:start="105:62" pos:end="105:65">data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:72"><expr pos:start="107:5" pos:end="107:71"><call pos:start="107:5" pos:end="107:71"><name pos:start="107:5" pos:end="107:10">memcpy</name><argument_list pos:start="107:11" pos:end="107:71">(<argument pos:start="107:12" pos:end="107:28"><expr pos:start="107:12" pos:end="107:28"><name pos:start="107:12" pos:end="107:28"><name pos:start="107:12" pos:end="107:12">c</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:19">frame</name><operator pos:start="107:20" pos:end="107:20">.</operator><name pos:start="107:21" pos:end="107:28">linesize</name></name></expr></argument>, <argument pos:start="107:31" pos:end="107:45"><expr pos:start="107:31" pos:end="107:45"><name pos:start="107:31" pos:end="107:45"><name pos:start="107:31" pos:end="107:35">frame</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:45">linesize</name></name></expr></argument>, <argument pos:start="107:48" pos:end="107:70"><expr pos:start="107:48" pos:end="107:70"><sizeof pos:start="107:48" pos:end="107:70">sizeof<argument_list pos:start="107:54" pos:end="107:70">(<argument pos:start="107:55" pos:end="107:69"><expr pos:start="107:55" pos:end="107:69"><name pos:start="107:55" pos:end="107:69"><name pos:start="107:55" pos:end="107:59">frame</name><operator pos:start="107:60" pos:end="107:61">-&gt;</operator><name pos:start="107:62" pos:end="107:69">linesize</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:55"><expr pos:start="109:5" pos:end="109:54"><name pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:5">c</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:12">frame</name><operator pos:start="109:13" pos:end="109:13">.</operator><name pos:start="109:14" pos:end="109:29">interlaced_frame</name></name><operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:54"><name pos:start="109:32" pos:end="109:36">frame</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:54">interlaced_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:54"><expr pos:start="111:5" pos:end="111:53"><name pos:start="111:5" pos:end="111:28"><name pos:start="111:5" pos:end="111:5">c</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:12">frame</name><operator pos:start="111:13" pos:end="111:13">.</operator><name pos:start="111:14" pos:end="111:28">top_field_first</name></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:53"><name pos:start="111:32" pos:end="111:36">frame</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:53">top_field_first</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:42"><expr pos:start="113:5" pos:end="113:41"><name pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:5">c</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:12">frame</name><operator pos:start="113:13" pos:end="113:13">.</operator><name pos:start="113:14" pos:end="113:22">key_frame</name></name> <operator pos:start="113:24" pos:end="113:24">=</operator> <name pos:start="113:26" pos:end="113:41"><name pos:start="113:26" pos:end="113:30">frame</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:41">key_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:42"><expr pos:start="115:5" pos:end="115:41"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:5">c</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:12">frame</name><operator pos:start="115:13" pos:end="115:13">.</operator><name pos:start="115:14" pos:end="115:22">pict_type</name></name> <operator pos:start="115:24" pos:end="115:24">=</operator> <name pos:start="115:26" pos:end="115:41"><name pos:start="115:26" pos:end="115:30">frame</name><operator pos:start="115:31" pos:end="115:32">-&gt;</operator><name pos:start="115:33" pos:end="115:41">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:17"><expr pos:start="117:5" pos:end="117:16"><name pos:start="117:5" pos:end="117:10"><name pos:start="117:5" pos:end="117:5">c</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:10">pts</name></name> <operator pos:start="117:12" pos:end="117:12">=</operator> <name pos:start="117:14" pos:end="117:16">pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:35"><expr pos:start="119:5" pos:end="119:34"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:5">c</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:19">pixel_aspect</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <name pos:start="119:23" pos:end="119:34">pixel_aspect</name></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:21"><expr pos:start="121:5" pos:end="121:20"><name pos:start="121:5" pos:end="121:16"><name pos:start="121:5" pos:end="121:5">c</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:16">has_frame</name></name> <operator pos:start="121:18" pos:end="121:18">=</operator> <literal type="number" pos:start="121:20" pos:end="121:20">1</literal></expr>;</expr_stmt>



    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
