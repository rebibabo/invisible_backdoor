<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10787.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:35">rgb16to32</name>)<parameter_list pos:start="1:37" pos:end="1:84">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">src</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dst</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:83"><decl pos:start="1:72" pos:end="1:83"><type pos:start="1:72" pos:end="1:83"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:83">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">uint16_t</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">uint16_t</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:26">mm_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">d</name> <init pos:start="9:16" pos:end="9:20">= <expr pos:start="9:18" pos:end="9:20"><name pos:start="9:18" pos:end="9:20">dst</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:21">s</name> <init pos:start="11:23" pos:end="11:44">= <expr pos:start="11:25" pos:end="11:44"><operator pos:start="11:25" pos:end="11:25">(</operator><specifier pos:start="11:26" pos:end="11:30">const</specifier> <name pos:start="11:32" pos:end="11:39">uint16_t</name><operator pos:start="11:40" pos:end="11:40">*</operator><operator pos:start="11:41" pos:end="11:41">)</operator><name pos:start="11:42" pos:end="11:44">src</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:7">end</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:11">s</name> <operator pos:start="13:13" pos:end="13:13">+</operator> <name pos:start="13:15" pos:end="13:22">src_size</name><operator pos:start="13:23" pos:end="13:23">/</operator><literal type="number" pos:start="13:24" pos:end="13:24">2</literal></expr>;</expr_stmt>

    <asm pos:start="15:5" pos:end="15:57">__asm__ <specifier pos:start="15:13" pos:end="15:20">volatile</specifier>(PREFETCH"    %0"::"m"(*s):"memory");</asm>

    <asm pos:start="17:5" pos:end="17:63">__asm__ <specifier pos:start="17:13" pos:end="17:20">volatile</specifier>("pxor    %%mm7,%%mm7    \n\t":::"memory");</asm>

    <asm pos:start="19:5" pos:end="19:63">__asm__ <specifier pos:start="19:13" pos:end="19:20">volatile</specifier>("pcmpeqd %%mm6,%%mm6    \n\t":::"memory");</asm>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:10">mm_end</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:16">end</name> <operator pos:start="21:18" pos:end="21:18">-</operator> <literal type="number" pos:start="21:20" pos:end="21:20">3</literal></expr>;</expr_stmt>

    <while pos:start="23:5" pos:end="59:5">while <condition pos:start="23:11" pos:end="23:22">(<expr pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:12">s</name> <operator pos:start="23:14" pos:end="23:14">&lt;</operator> <name pos:start="23:16" pos:end="23:21">mm_end</name></expr>)</condition> <block pos:start="23:24" pos:end="59:5">{<block_content pos:start="25:9" pos:end="57:15">

        <asm pos:start="25:9" pos:end="53:23">__asm__ <specifier pos:start="25:17" pos:end="25:24">volatile</specifier>(

            PREFETCH"    32%1           \n\t"

            "movq          %1, %%mm0    \n\t"

            "movq          %1, %%mm1    \n\t"

            "movq          %1, %%mm2    \n\t"

            "pand          %2, %%mm0    \n\t"

            "pand          %3, %%mm1    \n\t"

            "pand          %4, %%mm2    \n\t"

            "psllq         $3, %%mm0    \n\t"

            "psrlq         $3, %%mm1    \n\t"

            "psrlq         $8, %%mm2    \n\t"

            PACK_RGB32

            :"=m"(*d)

            :"m"(*s),"m"(mask16b),"m"(mask16g),"m"(mask16r)

            :"memory");</asm>

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">d</name> <operator pos:start="55:11" pos:end="55:12">+=</operator> <literal type="number" pos:start="55:14" pos:end="55:15">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:15"><expr pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:9">s</name> <operator pos:start="57:11" pos:end="57:12">+=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">4</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <asm pos:start="61:5" pos:end="61:40">__asm__ <specifier pos:start="61:13" pos:end="61:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="63:5" pos:end="63:38">__asm__ <specifier pos:start="63:13" pos:end="63:20">volatile</specifier>(EMMS:::"memory");</asm>

    <while pos:start="65:5" pos:end="79:5">while <condition pos:start="65:11" pos:end="65:19">(<expr pos:start="65:12" pos:end="65:18"><name pos:start="65:12" pos:end="65:12">s</name> <operator pos:start="65:14" pos:end="65:14">&lt;</operator> <name pos:start="65:16" pos:end="65:18">end</name></expr>)</condition> <block pos:start="65:21" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:19">

        <decl_stmt pos:start="67:9" pos:end="67:30"><decl pos:start="67:9" pos:end="67:29"><type pos:start="67:9" pos:end="67:25"><specifier pos:start="67:9" pos:end="67:16">register</specifier> <name pos:start="67:18" pos:end="67:25">uint16_t</name></type> <name pos:start="67:27" pos:end="67:29">bgr</name></decl>;</decl_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:19"><expr pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">bgr</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <operator pos:start="69:15" pos:end="69:15">*</operator><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:10">d</name><operator pos:start="71:11" pos:end="71:12">++</operator> <operator pos:start="71:14" pos:end="71:14">=</operator> <operator pos:start="71:16" pos:end="71:16">(</operator><name pos:start="71:17" pos:end="71:19">bgr</name><operator pos:start="71:20" pos:end="71:20">&amp;</operator><literal type="number" pos:start="71:21" pos:end="71:24">0x1F</literal><operator pos:start="71:25" pos:end="71:25">)</operator><operator pos:start="71:26" pos:end="71:27">&lt;&lt;</operator><literal type="number" pos:start="71:28" pos:end="71:28">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><operator pos:start="73:9" pos:end="73:9">*</operator><name pos:start="73:10" pos:end="73:10">d</name><operator pos:start="73:11" pos:end="73:12">++</operator> <operator pos:start="73:14" pos:end="73:14">=</operator> <operator pos:start="73:16" pos:end="73:16">(</operator><name pos:start="73:17" pos:end="73:19">bgr</name><operator pos:start="73:20" pos:end="73:20">&amp;</operator><literal type="number" pos:start="73:21" pos:end="73:25">0x7E0</literal><operator pos:start="73:26" pos:end="73:26">)</operator><operator pos:start="73:27" pos:end="73:28">&gt;&gt;</operator><literal type="number" pos:start="73:29" pos:end="73:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:10">d</name><operator pos:start="75:11" pos:end="75:12">++</operator> <operator pos:start="75:14" pos:end="75:14">=</operator> <operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:19">bgr</name><operator pos:start="75:20" pos:end="75:20">&amp;</operator><literal type="number" pos:start="75:21" pos:end="75:26">0xF800</literal><operator pos:start="75:27" pos:end="75:27">)</operator><operator pos:start="75:28" pos:end="75:29">&gt;&gt;</operator><literal type="number" pos:start="75:30" pos:end="75:30">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:19"><expr pos:start="77:9" pos:end="77:18"><operator pos:start="77:9" pos:end="77:9">*</operator><name pos:start="77:10" pos:end="77:10">d</name><operator pos:start="77:11" pos:end="77:12">++</operator> <operator pos:start="77:14" pos:end="77:14">=</operator> <literal type="number" pos:start="77:16" pos:end="77:18">255</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
