<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7776.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:30">virtio_scsi_handle_cmd_vq</name><parameter_list pos:start="1:31" pos:end="1:60">(<parameter pos:start="1:32" pos:end="1:44"><decl pos:start="1:32" pos:end="1:44"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:41">VirtIOSCSI</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:55">VirtQueue</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">vq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:20">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">VirtIOSCSIReq</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">req</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:19"><modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">progress</name> <init pos:start="9:19" pos:end="9:25">= <expr pos:start="9:21" pos:end="9:25"><name pos:start="9:21" pos:end="9:25">false</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:15">QTAILQ_HEAD</name><argument_list pos:start="13:16" pos:end="13:32">(<argument/>, <argument pos:start="13:19" pos:end="13:31">VirtIOSCSIReq</argument>)</argument_list></macro> <expr_stmt pos:start="13:34" pos:end="13:70"><expr pos:start="13:34" pos:end="13:69"><name pos:start="13:34" pos:end="13:37">reqs</name> <operator pos:start="13:39" pos:end="13:39">=</operator> <call pos:start="13:41" pos:end="13:69"><name pos:start="13:41" pos:end="13:63">QTAILQ_HEAD_INITIALIZER</name><argument_list pos:start="13:64" pos:end="13:69">(<argument pos:start="13:65" pos:end="13:68"><expr pos:start="13:65" pos:end="13:68"><name pos:start="13:65" pos:end="13:68">reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><call pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:23">virtio_scsi_acquire</name><argument_list pos:start="17:24" pos:end="17:26">(<argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><name pos:start="17:25" pos:end="17:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <do pos:start="19:5" pos:end="63:56">do <block pos:start="19:8" pos:end="63:5">{<block_content pos:start="21:9" pos:end="61:45">

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><call pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:37">virtio_queue_set_notification</name><argument_list pos:start="21:38" pos:end="21:44">(<argument pos:start="21:39" pos:end="21:40"><expr pos:start="21:39" pos:end="21:40"><name pos:start="21:39" pos:end="21:40">vq</name></expr></argument>, <argument pos:start="21:43" pos:end="21:43"><expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="25:9" pos:end="57:9">while <condition pos:start="25:15" pos:end="25:50">(<expr pos:start="25:16" pos:end="25:49"><operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:19">req</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:48"><name pos:start="25:23" pos:end="25:41">virtio_scsi_pop_req</name><argument_list pos:start="25:42" pos:end="25:48">(<argument pos:start="25:43" pos:end="25:43"><expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">s</name></expr></argument>, <argument pos:start="25:46" pos:end="25:47"><expr pos:start="25:46" pos:end="25:47"><name pos:start="25:46" pos:end="25:47">vq</name></expr></argument>)</argument_list></call><operator pos:start="25:49" pos:end="25:49">)</operator></expr>)</condition> <block pos:start="25:52" pos:end="57:9">{<block_content pos:start="27:13" pos:end="55:13">

            <expr_stmt pos:start="27:13" pos:end="27:28"><expr pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:20">progress</name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:27">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:61"><expr pos:start="29:13" pos:end="29:60"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:60"><name pos:start="29:19" pos:end="29:52">virtio_scsi_handle_cmd_req_prepare</name><argument_list pos:start="29:53" pos:end="29:60">(<argument pos:start="29:54" pos:end="29:54"><expr pos:start="29:54" pos:end="29:54"><name pos:start="29:54" pos:end="29:54">s</name></expr></argument>, <argument pos:start="29:57" pos:end="29:59"><expr pos:start="29:57" pos:end="29:59"><name pos:start="29:57" pos:end="29:59">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="55:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:21">(<expr pos:start="31:17" pos:end="31:20"><operator pos:start="31:17" pos:end="31:17">!</operator><name pos:start="31:18" pos:end="31:20">ret</name></expr>)</condition> <block pos:start="31:23" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:53">

                <expr_stmt pos:start="33:17" pos:end="33:53"><expr pos:start="33:17" pos:end="33:52"><call pos:start="33:17" pos:end="33:52"><name pos:start="33:17" pos:end="33:34">QTAILQ_INSERT_TAIL</name><argument_list pos:start="33:35" pos:end="33:52">(<argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:40">reqs</name></expr></argument>, <argument pos:start="33:43" pos:end="33:45"><expr pos:start="33:43" pos:end="33:45"><name pos:start="33:43" pos:end="33:45">req</name></expr></argument>, <argument pos:start="33:48" pos:end="33:51"><expr pos:start="33:48" pos:end="33:51"><name pos:start="33:48" pos:end="33:51">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="35:15" pos:end="55:13">else if <condition pos:start="35:23" pos:end="35:38">(<expr pos:start="35:24" pos:end="35:37"><name pos:start="35:24" pos:end="35:26">ret</name> <operator pos:start="35:28" pos:end="35:29">==</operator> <operator pos:start="35:31" pos:end="35:31">-</operator><name pos:start="35:32" pos:end="35:37">EINVAL</name></expr>)</condition> <block pos:start="35:40" pos:end="55:13">{<block_content pos:start="39:17" pos:end="53:17">

                <comment type="block" pos:start="37:17" pos:end="37:76">/* The device is broken and shouldn't process any request */</comment>

                <while pos:start="39:17" pos:end="53:17">while <condition pos:start="39:23" pos:end="39:44">(<expr pos:start="39:24" pos:end="39:43"><operator pos:start="39:24" pos:end="39:24">!</operator><call pos:start="39:25" pos:end="39:43"><name pos:start="39:25" pos:end="39:36">QTAILQ_EMPTY</name><argument_list pos:start="39:37" pos:end="39:43">(<argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:42">reqs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="53:17">{<block_content pos:start="41:21" pos:end="51:46">

                    <expr_stmt pos:start="41:21" pos:end="41:46"><expr pos:start="41:21" pos:end="41:45"><name pos:start="41:21" pos:end="41:23">req</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:45"><name pos:start="41:27" pos:end="41:38">QTAILQ_FIRST</name><argument_list pos:start="41:39" pos:end="41:45">(<argument pos:start="41:40" pos:end="41:44"><expr pos:start="41:40" pos:end="41:44"><operator pos:start="41:40" pos:end="41:40">&amp;</operator><name pos:start="41:41" pos:end="41:44">reqs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:52"><expr pos:start="43:21" pos:end="43:51"><call pos:start="43:21" pos:end="43:51"><name pos:start="43:21" pos:end="43:33">QTAILQ_REMOVE</name><argument_list pos:start="43:34" pos:end="43:51">(<argument pos:start="43:35" pos:end="43:39"><expr pos:start="43:35" pos:end="43:39"><operator pos:start="43:35" pos:end="43:35">&amp;</operator><name pos:start="43:36" pos:end="43:39">reqs</name></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">req</name></expr></argument>, <argument pos:start="43:47" pos:end="43:50"><expr pos:start="43:47" pos:end="43:50"><name pos:start="43:47" pos:end="43:50">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:60"><expr pos:start="45:21" pos:end="45:59"><call pos:start="45:21" pos:end="45:59"><name pos:start="45:21" pos:end="45:33">blk_io_unplug</name><argument_list pos:start="45:34" pos:end="45:59">(<argument pos:start="45:35" pos:end="45:58"><expr pos:start="45:35" pos:end="45:58"><name pos:start="45:35" pos:end="45:58"><name pos:start="45:35" pos:end="45:37">req</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:43">sreq</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:48">dev</name><operator pos:start="45:49" pos:end="45:50">-&gt;</operator><name pos:start="45:51" pos:end="45:54">conf</name><operator pos:start="45:55" pos:end="45:55">.</operator><name pos:start="45:56" pos:end="45:58">blk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="47:21" pos:end="47:46"><expr pos:start="47:21" pos:end="47:45"><call pos:start="47:21" pos:end="47:45"><name pos:start="47:21" pos:end="47:34">scsi_req_unref</name><argument_list pos:start="47:35" pos:end="47:45">(<argument pos:start="47:36" pos:end="47:44"><expr pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:38">req</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:44">sreq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:69"><expr pos:start="49:21" pos:end="49:68"><call pos:start="49:21" pos:end="49:68"><name pos:start="49:21" pos:end="49:44">virtqueue_detach_element</name><argument_list pos:start="49:45" pos:end="49:68">(<argument pos:start="49:46" pos:end="49:52"><expr pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:52"><name pos:start="49:46" pos:end="49:48">req</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:52">vq</name></name></expr></argument>, <argument pos:start="49:55" pos:end="49:64"><expr pos:start="49:55" pos:end="49:64"><operator pos:start="49:55" pos:end="49:55">&amp;</operator><name pos:start="49:56" pos:end="49:64"><name pos:start="49:56" pos:end="49:58">req</name><operator pos:start="49:59" pos:end="49:60">-&gt;</operator><name pos:start="49:61" pos:end="49:64">elem</name></name></expr></argument>, <argument pos:start="49:67" pos:end="49:67"><expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:46"><expr pos:start="51:21" pos:end="51:45"><call pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:40">virtio_scsi_free_req</name><argument_list pos:start="51:41" pos:end="51:45">(<argument pos:start="51:42" pos:end="51:44"><expr pos:start="51:42" pos:end="51:44"><name pos:start="51:42" pos:end="51:44">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="61:9" pos:end="61:45"><expr pos:start="61:9" pos:end="61:44"><call pos:start="61:9" pos:end="61:44"><name pos:start="61:9" pos:end="61:37">virtio_queue_set_notification</name><argument_list pos:start="61:38" pos:end="61:44">(<argument pos:start="61:39" pos:end="61:40"><expr pos:start="61:39" pos:end="61:40"><name pos:start="61:39" pos:end="61:40">vq</name></expr></argument>, <argument pos:start="61:43" pos:end="61:43"><expr pos:start="61:43" pos:end="61:43"><literal type="number" pos:start="61:43" pos:end="61:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="63:13" pos:end="63:55">(<expr pos:start="63:14" pos:end="63:54"><name pos:start="63:14" pos:end="63:16">ret</name> <operator pos:start="63:18" pos:end="63:19">!=</operator> <operator pos:start="63:21" pos:end="63:21">-</operator><name pos:start="63:22" pos:end="63:27">EINVAL</name> <operator pos:start="63:29" pos:end="63:30">&amp;&amp;</operator> <operator pos:start="63:32" pos:end="63:32">!</operator><call pos:start="63:33" pos:end="63:54"><name pos:start="63:33" pos:end="63:50">virtio_queue_empty</name><argument_list pos:start="63:51" pos:end="63:54">(<argument pos:start="63:52" pos:end="63:53"><expr pos:start="63:52" pos:end="63:53"><name pos:start="63:52" pos:end="63:53">vq</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>



    <macro pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="67:24" pos:end="67:47">(<argument pos:start="67:25" pos:end="67:27">req</argument>, <argument pos:start="67:30" pos:end="67:34">&amp;reqs</argument>, <argument pos:start="67:37" pos:end="67:40">next</argument>, <argument pos:start="67:43" pos:end="67:46">next</argument>)</argument_list></macro> <block pos:start="67:49" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:50">

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><call pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:41">virtio_scsi_handle_cmd_req_submit</name><argument_list pos:start="69:42" pos:end="69:49">(<argument pos:start="69:43" pos:end="69:43"><expr pos:start="69:43" pos:end="69:43"><name pos:start="69:43" pos:end="69:43">s</name></expr></argument>, <argument pos:start="69:46" pos:end="69:48"><expr pos:start="69:46" pos:end="69:48"><name pos:start="69:46" pos:end="69:48">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><call pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:23">virtio_scsi_release</name><argument_list pos:start="73:24" pos:end="73:26">(<argument pos:start="73:25" pos:end="73:25"><expr pos:start="73:25" pos:end="73:25"><name pos:start="73:25" pos:end="73:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="75:5" pos:end="75:20">return <expr pos:start="75:12" pos:end="75:19"><name pos:start="75:12" pos:end="75:19">progress</name></expr>;</return>

</block_content>}</block></function>
</unit>
