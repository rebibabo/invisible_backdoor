<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16935.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:28">l2_allocate</name><parameter_list pos:start="1:29" pos:end="1:64">(<parameter pos:start="1:30" pos:end="1:49"><decl pos:start="1:30" pos:end="1:49"><type pos:start="1:30" pos:end="1:49"><name pos:start="1:30" pos:end="1:45">BlockDriverState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">bs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:63">l1_index</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:20">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">min_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:26">old_l2_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint64_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:22">l2_table</name></decl>, <decl pos:start="11:25" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:25" pos:end="11:33">l2_offset</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:17">old_l2_offset</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:41"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:31">l1_table</name><index pos:start="15:32" pos:end="15:41">[<expr pos:start="15:33" pos:end="15:40"><name pos:start="15:33" pos:end="15:40">l1_index</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:33">/* allocate a new l2 entry */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:72"><expr pos:start="23:5" pos:end="23:71"><name pos:start="23:5" pos:end="23:13">l2_offset</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <call pos:start="23:17" pos:end="23:71"><name pos:start="23:17" pos:end="23:36">qcow2_alloc_clusters</name><argument_list pos:start="23:37" pos:end="23:71">(<argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">bs</name></expr></argument>, <argument pos:start="23:42" pos:end="23:70"><expr pos:start="23:42" pos:end="23:70"><name pos:start="23:42" pos:end="23:51"><name pos:start="23:42" pos:end="23:42">s</name><operator pos:start="23:43" pos:end="23:44">-&gt;</operator><name pos:start="23:45" pos:end="23:51">l2_size</name></name> <operator pos:start="23:53" pos:end="23:53">*</operator> <sizeof pos:start="23:55" pos:end="23:70">sizeof<argument_list pos:start="23:61" pos:end="23:70">(<argument pos:start="23:62" pos:end="23:69"><expr pos:start="23:62" pos:end="23:69"><name pos:start="23:62" pos:end="23:69">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:17">l2_offset</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr>)</condition> <block pos:start="25:24" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:29">/* update the L1 entry */</comment>



    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">l1_table</name><index pos:start="37:16" pos:end="37:25">[<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:24">l1_index</name></expr>]</index></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:37">l2_offset</name> <operator pos:start="37:39" pos:end="37:39">|</operator> <name pos:start="37:41" pos:end="37:57">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:40">(<expr pos:start="39:9" pos:end="39:39"><call pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:22">write_l1_entry</name><argument_list pos:start="39:23" pos:end="39:35">(<argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">s</name></expr></argument>, <argument pos:start="39:27" pos:end="39:34"><expr pos:start="39:27" pos:end="39:34"><name pos:start="39:27" pos:end="39:34">l1_index</name></expr></argument>)</argument_list></call> <operator pos:start="39:37" pos:end="39:37">&lt;</operator> <literal type="number" pos:start="39:39" pos:end="39:39">0</literal></expr>)</condition> <block pos:start="39:42" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:20">

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:46">/* allocate a new entry in the l2 cache */</comment>



    <expr_stmt pos:start="51:5" pos:end="51:39"><expr pos:start="51:5" pos:end="51:38"><name pos:start="51:5" pos:end="51:13">min_index</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:34">l2_cache_new_entry</name><argument_list pos:start="51:35" pos:end="51:38">(<argument pos:start="51:36" pos:end="51:37"><expr pos:start="51:36" pos:end="51:37"><name pos:start="51:36" pos:end="51:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:12">l2_table</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:26"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:26">l2_cache</name></name> <operator pos:start="53:28" pos:end="53:28">+</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><name pos:start="53:31" pos:end="53:39">min_index</name> <operator pos:start="53:41" pos:end="53:42">&lt;&lt;</operator> <name pos:start="53:44" pos:end="53:53"><name pos:start="53:44" pos:end="53:44">s</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:53">l2_bits</name></name><operator pos:start="53:54" pos:end="53:54">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="57:5" pos:end="75:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:27">(<expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:21">old_l2_offset</name> <operator pos:start="57:23" pos:end="57:24">==</operator> <literal type="number" pos:start="57:26" pos:end="57:26">0</literal></expr>)</condition> <block pos:start="57:29" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:59">

        <comment type="block" pos:start="59:9" pos:end="59:63">/* if there was no old l2 table, clear the new table */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:59"><expr pos:start="61:9" pos:end="61:58"><call pos:start="61:9" pos:end="61:58"><name pos:start="61:9" pos:end="61:14">memset</name><argument_list pos:start="61:15" pos:end="61:58">(<argument pos:start="61:16" pos:end="61:23"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:23">l2_table</name></expr></argument>, <argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr></argument>, <argument pos:start="61:29" pos:end="61:57"><expr pos:start="61:29" pos:end="61:57"><name pos:start="61:29" pos:end="61:38"><name pos:start="61:29" pos:end="61:29">s</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">l2_size</name></name> <operator pos:start="61:40" pos:end="61:40">*</operator> <sizeof pos:start="61:42" pos:end="61:57">sizeof<argument_list pos:start="61:48" pos:end="61:57">(<argument pos:start="61:49" pos:end="61:56"><expr pos:start="61:49" pos:end="61:56"><name pos:start="61:49" pos:end="61:56">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="75:5">else <block pos:start="63:12" pos:end="75:5">{<block_content pos:start="67:9" pos:end="73:24">

        <comment type="block" pos:start="65:9" pos:end="65:65">/* if there was an old l2 table, read it from the disk */</comment>

        <if_stmt pos:start="67:9" pos:end="73:24"><if pos:start="67:9" pos:end="73:24">if <condition pos:start="67:12" pos:end="71:42">(<expr pos:start="67:13" pos:end="71:41"><call pos:start="67:13" pos:end="69:63"><name pos:start="67:13" pos:end="67:22">bdrv_pread</name><argument_list pos:start="67:23" pos:end="69:63">(<argument pos:start="67:24" pos:end="67:28"><expr pos:start="67:24" pos:end="67:28"><name pos:start="67:24" pos:end="67:28"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:28">hd</name></name></expr></argument>, <argument pos:start="67:31" pos:end="67:43"><expr pos:start="67:31" pos:end="67:43"><name pos:start="67:31" pos:end="67:43">old_l2_offset</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:31"><expr pos:start="69:24" pos:end="69:31"><name pos:start="69:24" pos:end="69:31">l2_table</name></expr></argument>, <argument pos:start="69:34" pos:end="69:62"><expr pos:start="69:34" pos:end="69:62"><name pos:start="69:34" pos:end="69:43"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:43">l2_size</name></name> <operator pos:start="69:45" pos:end="69:45">*</operator> <sizeof pos:start="69:47" pos:end="69:62">sizeof<argument_list pos:start="69:53" pos:end="69:62">(<argument pos:start="69:54" pos:end="69:61"><expr pos:start="69:54" pos:end="69:61"><name pos:start="69:54" pos:end="69:61">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="69:65" pos:end="69:66">!=</operator>

            <name pos:start="71:13" pos:end="71:22"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:22">l2_size</name></name> <operator pos:start="71:24" pos:end="71:24">*</operator> <sizeof pos:start="71:26" pos:end="71:41">sizeof<argument_list pos:start="71:32" pos:end="71:41">(<argument pos:start="71:33" pos:end="71:40"><expr pos:start="71:33" pos:end="71:40"><name pos:start="71:33" pos:end="71:40">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:24"><block_content pos:start="73:13" pos:end="73:24">

            <return pos:start="73:13" pos:end="73:24">return <expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:40">/* write the l2 table to the file */</comment>

    <if_stmt pos:start="79:5" pos:end="85:20"><if pos:start="79:5" pos:end="85:20">if <condition pos:start="79:8" pos:end="83:38">(<expr pos:start="79:9" pos:end="83:37"><call pos:start="79:9" pos:end="81:60"><name pos:start="79:9" pos:end="79:19">bdrv_pwrite</name><argument_list pos:start="79:20" pos:end="81:60">(<argument pos:start="79:21" pos:end="79:25"><expr pos:start="79:21" pos:end="79:25"><name pos:start="79:21" pos:end="79:25"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:25">hd</name></name></expr></argument>, <argument pos:start="79:28" pos:end="79:36"><expr pos:start="79:28" pos:end="79:36"><name pos:start="79:28" pos:end="79:36">l2_offset</name></expr></argument>,

                    <argument pos:start="81:21" pos:end="81:28"><expr pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:28">l2_table</name></expr></argument>, <argument pos:start="81:31" pos:end="81:59"><expr pos:start="81:31" pos:end="81:59"><name pos:start="81:31" pos:end="81:40"><name pos:start="81:31" pos:end="81:31">s</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:40">l2_size</name></name> <operator pos:start="81:42" pos:end="81:42">*</operator> <sizeof pos:start="81:44" pos:end="81:59">sizeof<argument_list pos:start="81:50" pos:end="81:59">(<argument pos:start="81:51" pos:end="81:58"><expr pos:start="81:51" pos:end="81:58"><name pos:start="81:51" pos:end="81:58">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="81:62" pos:end="81:63">!=</operator>

        <name pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:18">l2_size</name></name> <operator pos:start="83:20" pos:end="83:20">*</operator> <sizeof pos:start="83:22" pos:end="83:37">sizeof<argument_list pos:start="83:28" pos:end="83:37">(<argument pos:start="83:29" pos:end="83:36"><expr pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:36">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:20"><block_content pos:start="85:9" pos:end="85:20">

        <return pos:start="85:9" pos:end="85:20">return <expr pos:start="85:16" pos:end="85:19"><name pos:start="85:16" pos:end="85:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:35">/* update the l2 cache entry */</comment>



    <expr_stmt pos:start="93:5" pos:end="93:47"><expr pos:start="93:5" pos:end="93:46"><name pos:start="93:5" pos:end="93:34"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:23">l2_cache_offsets</name><index pos:start="93:24" pos:end="93:34">[<expr pos:start="93:25" pos:end="93:33"><name pos:start="93:25" pos:end="93:33">min_index</name></expr>]</index></name> <operator pos:start="93:36" pos:end="93:36">=</operator> <name pos:start="93:38" pos:end="93:46">l2_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:33"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:22">l2_cache_counts</name><index pos:start="95:23" pos:end="95:33">[<expr pos:start="95:24" pos:end="95:32"><name pos:start="95:24" pos:end="95:32">min_index</name></expr>]</index></name> <operator pos:start="95:35" pos:end="95:35">=</operator> <literal type="number" pos:start="95:37" pos:end="95:37">1</literal></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:20">return <expr pos:start="99:12" pos:end="99:19"><name pos:start="99:12" pos:end="99:19">l2_table</name></expr>;</return>

</block_content>}</block></function>
</unit>
