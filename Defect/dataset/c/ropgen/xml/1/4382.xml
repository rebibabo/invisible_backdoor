<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4382.c" pos:tabs="8"><function pos:start="1:1" pos:end="58:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vnc_display_close</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VncDisplay</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="58:1">{<block_content pos:start="5:5" pos:end="56:26">

    <if_stmt pos:start="5:5" pos:end="7:15"><if pos:start="5:5" pos:end="7:15">if <condition pos:start="5:8" pos:end="5:12">(<expr pos:start="5:9" pos:end="5:11"><operator pos:start="5:9" pos:end="5:9">!</operator><name pos:start="5:10" pos:end="5:11">vs</name></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:15"><block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:6">vs</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:15">enabled</name></name> <operator pos:start="9:17" pos:end="9:17">=</operator> <name pos:start="9:19" pos:end="9:23">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:6">vs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:15">is_unix</name></name> <operator pos:start="11:17" pos:end="11:17">=</operator> <name pos:start="11:19" pos:end="11:23">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="25:5"><if pos:start="13:5" pos:end="25:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:10">vs</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:17">lsock</name></name> <operator pos:start="13:19" pos:end="13:20">!=</operator> <name pos:start="13:22" pos:end="13:25">NULL</name></expr>)</condition> <block pos:start="13:28" pos:end="25:5">{<block_content pos:start="15:9" pos:end="23:25">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:14">vs</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:25">lsock_tag</name></name></expr>)</condition> <block pos:start="15:28" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:43">

            <expr_stmt pos:start="17:13" pos:end="17:43"><expr pos:start="17:13" pos:end="17:42"><call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:27">g_source_remove</name><argument_list pos:start="17:28" pos:end="17:42">(<argument pos:start="17:29" pos:end="17:41"><expr pos:start="17:29" pos:end="17:41"><name pos:start="17:29" pos:end="17:41"><name pos:start="17:29" pos:end="17:30">vs</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:41">lsock_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><call pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:20">object_unref</name><argument_list pos:start="21:21" pos:end="21:39">(<argument pos:start="21:22" pos:end="21:38"><expr pos:start="21:22" pos:end="21:38"><call pos:start="21:22" pos:end="21:38"><name pos:start="21:22" pos:end="21:27">OBJECT</name><argument_list pos:start="21:28" pos:end="21:38">(<argument pos:start="21:29" pos:end="21:37"><expr pos:start="21:29" pos:end="21:37"><name pos:start="21:29" pos:end="21:37"><name pos:start="21:29" pos:end="21:30">vs</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">lsock</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">vs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:17">lsock</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:24">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:6">vs</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:18">ws_enabled</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:26">false</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:10">vs</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">lwebsock</name></name> <operator pos:start="29:22" pos:end="29:23">!=</operator> <name pos:start="29:25" pos:end="29:28">NULL</name></expr>)</condition> <block pos:start="29:31" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:28">

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:29">(<expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:14">vs</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:28">lwebsock_tag</name></name></expr>)</condition> <block pos:start="31:31" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:46">

            <expr_stmt pos:start="33:13" pos:end="33:46"><expr pos:start="33:13" pos:end="33:45"><call pos:start="33:13" pos:end="33:45"><name pos:start="33:13" pos:end="33:27">g_source_remove</name><argument_list pos:start="33:28" pos:end="33:45">(<argument pos:start="33:29" pos:end="33:44"><expr pos:start="33:29" pos:end="33:44"><name pos:start="33:29" pos:end="33:44"><name pos:start="33:29" pos:end="33:30">vs</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:44">lwebsock_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><call pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:20">object_unref</name><argument_list pos:start="37:21" pos:end="37:42">(<argument pos:start="37:22" pos:end="37:41"><expr pos:start="37:22" pos:end="37:41"><call pos:start="37:22" pos:end="37:41"><name pos:start="37:22" pos:end="37:27">OBJECT</name><argument_list pos:start="37:28" pos:end="37:41">(<argument pos:start="37:29" pos:end="37:40"><expr pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:40"><name pos:start="37:29" pos:end="37:30">vs</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:40">lwebsock</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:10">vs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">lwebsock</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:27">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:6">vs</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:12">auth</name></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:31">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:6">vs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:15">subauth</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:34">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="52:5"><if pos:start="47:5" pos:end="52:5">if <condition pos:start="47:8" pos:end="47:21">(<expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:10">vs</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">tlscreds</name></name></expr>)</condition> <block pos:start="47:23" pos:end="52:5">{<block_content pos:start="49:9" pos:end="49:46">

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:23">object_unparent</name><argument_list pos:start="49:24" pos:end="49:45">(<argument pos:start="49:25" pos:end="49:44"><expr pos:start="49:25" pos:end="49:44"><call pos:start="49:25" pos:end="49:44"><name pos:start="49:25" pos:end="49:30">OBJECT</name><argument_list pos:start="49:31" pos:end="49:44">(<argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:33">vs</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:43">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:27"><expr pos:start="54:5" pos:end="54:26"><call pos:start="54:5" pos:end="54:26"><name pos:start="54:5" pos:end="54:10">g_free</name><argument_list pos:start="54:11" pos:end="54:26">(<argument pos:start="54:12" pos:end="54:25"><expr pos:start="54:12" pos:end="54:25"><name pos:start="54:12" pos:end="54:25"><name pos:start="54:12" pos:end="54:13">vs</name><operator pos:start="54:14" pos:end="54:15">-&gt;</operator><name pos:start="54:16" pos:end="54:25">tlsaclname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:26"><expr pos:start="56:5" pos:end="56:25"><name pos:start="56:5" pos:end="56:18"><name pos:start="56:5" pos:end="56:6">vs</name><operator pos:start="56:7" pos:end="56:8">-&gt;</operator><name pos:start="56:9" pos:end="56:18">tlsaclname</name></name> <operator pos:start="56:20" pos:end="56:20">=</operator> <name pos:start="56:22" pos:end="56:25">NULL</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
