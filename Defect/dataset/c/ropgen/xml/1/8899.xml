<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8899.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:9"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ffserver_parse_acl_row</name><parameter_list pos:start="1:28" pos:end="3:78">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:42">FFServerStream</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">stream</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:72"><decl pos:start="1:53" pos:end="1:72"><type pos:start="1:53" pos:end="1:72"><name pos:start="1:53" pos:end="1:66">FFServerStream</name><modifier pos:start="1:67" pos:end="1:67">*</modifier></type> <name pos:start="1:69" pos:end="1:72">feed</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:57"><decl pos:start="2:29" pos:end="2:57"><type pos:start="2:29" pos:end="2:57"><name pos:start="2:29" pos:end="2:48">FFServerIPAddressACL</name> <modifier pos:start="2:50" pos:end="2:50">*</modifier></type><name pos:start="2:51" pos:end="2:57">ext_acl</name></decl></parameter>,
                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:41">p</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:63"><decl pos:start="3:44" pos:end="3:63"><type pos:start="3:44" pos:end="3:63"><specifier pos:start="3:44" pos:end="3:48">const</specifier> <name pos:start="3:50" pos:end="3:53">char</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:63">filename</name></decl></parameter>, <parameter pos:start="3:66" pos:end="3:77"><decl pos:start="3:66" pos:end="3:77"><type pos:start="3:66" pos:end="3:77"><name pos:start="3:66" pos:end="3:68">int</name></type> <name pos:start="3:70" pos:end="3:77">line_num</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="49:9">{<block_content pos:start="5:5" pos:end="49:9">
    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:18"><name pos:start="5:10" pos:end="5:12">arg</name><index pos:start="5:13" pos:end="5:18">[<expr pos:start="5:14" pos:end="5:17"><literal type="number" pos:start="5:14" pos:end="5:17">1024</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:29"><decl pos:start="6:5" pos:end="6:28"><type pos:start="6:5" pos:end="6:24"><name pos:start="6:5" pos:end="6:24">FFServerIPAddressACL</name></type> <name pos:start="6:26" pos:end="6:28">acl</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">FFServerIPAddressACL</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:30">nacl</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:33"><decl pos:start="8:5" pos:end="8:32"><type pos:start="8:5" pos:end="8:27"><name pos:start="8:5" pos:end="8:24">FFServerIPAddressACL</name> <modifier pos:start="8:26" pos:end="8:26">*</modifier><modifier pos:start="8:27" pos:end="8:27">*</modifier></type><name pos:start="8:28" pos:end="8:32">naclp</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:43"><expr pos:start="9:5" pos:end="9:42"><call pos:start="9:5" pos:end="9:42"><name pos:start="9:5" pos:end="9:20">ffserver_get_arg</name><argument_list pos:start="9:21" pos:end="9:42">(<argument pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:24">arg</name></expr></argument>, <argument pos:start="9:27" pos:end="9:37"><expr pos:start="9:27" pos:end="9:37"><sizeof pos:start="9:27" pos:end="9:37">sizeof<argument_list pos:start="9:33" pos:end="9:37">(<argument pos:start="9:34" pos:end="9:36"><expr pos:start="9:34" pos:end="9:36"><name pos:start="9:34" pos:end="9:36">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="9:40" pos:end="9:41"><expr pos:start="9:40" pos:end="9:41"><operator pos:start="9:40" pos:end="9:40">&amp;</operator><name pos:start="9:41" pos:end="9:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="49:9"><if pos:start="10:5" pos:end="11:30">if <condition pos:start="10:8" pos:end="10:41">(<expr pos:start="10:9" pos:end="10:40"><call pos:start="10:9" pos:end="10:35"><name pos:start="10:9" pos:end="10:21">av_strcasecmp</name><argument_list pos:start="10:22" pos:end="10:35">(<argument pos:start="10:23" pos:end="10:25"><expr pos:start="10:23" pos:end="10:25"><name pos:start="10:23" pos:end="10:25">arg</name></expr></argument>, <argument pos:start="10:28" pos:end="10:34"><expr pos:start="10:28" pos:end="10:34"><literal type="string" pos:start="10:28" pos:end="10:34">"allow"</literal></expr></argument>)</argument_list></call> <operator pos:start="10:37" pos:end="10:38">==</operator> <literal type="number" pos:start="10:40" pos:end="10:40">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:30"><block_content pos:start="11:9" pos:end="11:30">
        <expr_stmt pos:start="11:9" pos:end="11:30"><expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:11">acl</name><operator pos:start="11:12" pos:end="11:12">.</operator><name pos:start="11:13" pos:end="11:18">action</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:29">IP_ALLOW</name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="12:5" pos:end="13:29">else if <condition pos:start="12:13" pos:end="12:45">(<expr pos:start="12:14" pos:end="12:44"><call pos:start="12:14" pos:end="12:39"><name pos:start="12:14" pos:end="12:26">av_strcasecmp</name><argument_list pos:start="12:27" pos:end="12:39">(<argument pos:start="12:28" pos:end="12:30"><expr pos:start="12:28" pos:end="12:30"><name pos:start="12:28" pos:end="12:30">arg</name></expr></argument>, <argument pos:start="12:33" pos:end="12:38"><expr pos:start="12:33" pos:end="12:38"><literal type="string" pos:start="12:33" pos:end="12:38">"deny"</literal></expr></argument>)</argument_list></call> <operator pos:start="12:41" pos:end="12:42">==</operator> <literal type="number" pos:start="12:44" pos:end="12:44">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:29"><block_content pos:start="13:9" pos:end="13:29">
        <expr_stmt pos:start="13:9" pos:end="13:29"><expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:11">acl</name><operator pos:start="13:12" pos:end="13:12">.</operator><name pos:start="13:13" pos:end="13:18">action</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:28">IP_DENY</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="14:5" pos:end="49:9">else <block pos:start="14:10" pos:end="49:9">{<block_content pos:start="15:9" pos:end="49:9">
        <expr_stmt pos:start="15:9" pos:end="16:41"><expr pos:start="15:9" pos:end="16:40"><call pos:start="15:9" pos:end="16:40"><name pos:start="15:9" pos:end="15:15">fprintf</name><argument_list pos:start="15:16" pos:end="16:40">(<argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><name pos:start="15:17" pos:end="15:22">stderr</name></expr></argument>, <argument pos:start="15:25" pos:end="15:75"><expr pos:start="15:25" pos:end="15:75"><literal type="string" pos:start="15:25" pos:end="15:75">"%s:%d: ACL action '%s' should be ALLOW or DENY.\n"</literal></expr></argument>,
                <argument pos:start="16:17" pos:end="16:24"><expr pos:start="16:17" pos:end="16:24"><name pos:start="16:17" pos:end="16:24">filename</name></expr></argument>, <argument pos:start="16:27" pos:end="16:34"><expr pos:start="16:27" pos:end="16:34"><name pos:start="16:27" pos:end="16:34">line_num</name></expr></argument>, <argument pos:start="16:37" pos:end="16:39"><expr pos:start="16:37" pos:end="16:39"><name pos:start="16:37" pos:end="16:39">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><call pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:20">ffserver_get_arg</name><argument_list pos:start="17:21" pos:end="17:42">(<argument pos:start="17:22" pos:end="17:24"><expr pos:start="17:22" pos:end="17:24"><name pos:start="17:22" pos:end="17:24">arg</name></expr></argument>, <argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><sizeof pos:start="17:27" pos:end="17:37">sizeof<argument_list pos:start="17:33" pos:end="17:37">(<argument pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:36">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><operator pos:start="17:40" pos:end="17:40">&amp;</operator><name pos:start="17:41" pos:end="17:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="18:5" pos:end="49:9"><if pos:start="18:5" pos:end="49:9">if <condition pos:start="18:8" pos:end="18:38">(<expr pos:start="18:9" pos:end="18:37"><call pos:start="18:9" pos:end="18:37"><name pos:start="18:9" pos:end="18:20">resolve_host</name><argument_list pos:start="18:21" pos:end="18:37">(<argument pos:start="18:22" pos:end="18:31"><expr pos:start="18:22" pos:end="18:31"><operator pos:start="18:22" pos:end="18:22">&amp;</operator><name pos:start="18:23" pos:end="18:31"><name pos:start="18:23" pos:end="18:25">acl</name><operator pos:start="18:26" pos:end="18:26">.</operator><name pos:start="18:27" pos:end="18:31">first</name></name></expr></argument>, <argument pos:start="18:34" pos:end="18:36"><expr pos:start="18:34" pos:end="18:36"><name pos:start="18:34" pos:end="18:36">arg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="18:40" pos:end="49:9">{<block_content pos:start="19:9" pos:end="49:9">
        <expr_stmt pos:start="19:9" pos:end="21:41"><expr pos:start="19:9" pos:end="21:40"><call pos:start="19:9" pos:end="21:40"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="21:40">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>,
                <argument pos:start="20:17" pos:end="20:72"><expr pos:start="20:17" pos:end="20:72"><literal type="string" pos:start="20:17" pos:end="20:72">"%s:%d: ACL refers to invalid host or IP address '%s'\n"</literal></expr></argument>,
                <argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24">filename</name></expr></argument>, <argument pos:start="21:27" pos:end="21:34"><expr pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:34">line_num</name></expr></argument>, <argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:25"><expr pos:start="22:5" pos:end="22:24"><name pos:start="22:5" pos:end="22:12"><name pos:start="22:5" pos:end="22:7">acl</name><operator pos:start="22:8" pos:end="22:8">.</operator><name pos:start="22:9" pos:end="22:12">last</name></name> <operator pos:start="22:14" pos:end="22:14">=</operator> <name pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:18">acl</name><operator pos:start="22:19" pos:end="22:19">.</operator><name pos:start="22:20" pos:end="22:24">first</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><call pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:20">ffserver_get_arg</name><argument_list pos:start="23:21" pos:end="23:42">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:24">arg</name></expr></argument>, <argument pos:start="23:27" pos:end="23:37"><expr pos:start="23:27" pos:end="23:37"><sizeof pos:start="23:27" pos:end="23:37">sizeof<argument_list pos:start="23:33" pos:end="23:37">(<argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><name pos:start="23:34" pos:end="23:36">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="49:9"><if pos:start="24:5" pos:end="49:9">if <condition pos:start="24:8" pos:end="24:15">(<expr pos:start="24:9" pos:end="24:14"><name pos:start="24:9" pos:end="24:14"><name pos:start="24:9" pos:end="24:11">arg</name><index pos:start="24:12" pos:end="24:14">[<expr pos:start="24:13" pos:end="24:13"><literal type="number" pos:start="24:13" pos:end="24:13">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="24:17" pos:end="49:9">{<block_content pos:start="25:9" pos:end="49:9">
        <if_stmt pos:start="25:9" pos:end="49:9"><if pos:start="25:9" pos:end="49:9">if <condition pos:start="25:12" pos:end="25:41">(<expr pos:start="25:13" pos:end="25:40"><call pos:start="25:13" pos:end="25:40"><name pos:start="25:13" pos:end="25:24">resolve_host</name><argument_list pos:start="25:25" pos:end="25:40">(<argument pos:start="25:26" pos:end="25:34"><expr pos:start="25:26" pos:end="25:34"><operator pos:start="25:26" pos:end="25:26">&amp;</operator><name pos:start="25:27" pos:end="25:34"><name pos:start="25:27" pos:end="25:29">acl</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:34">last</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">arg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:43" pos:end="49:9">{<block_content pos:start="26:13" pos:end="49:9">
            <expr_stmt pos:start="26:13" pos:end="28:45"><expr pos:start="26:13" pos:end="28:44"><call pos:start="26:13" pos:end="28:44"><name pos:start="26:13" pos:end="26:19">fprintf</name><argument_list pos:start="26:20" pos:end="28:44">(<argument pos:start="26:21" pos:end="26:26"><expr pos:start="26:21" pos:end="26:26"><name pos:start="26:21" pos:end="26:26">stderr</name></expr></argument>,
                    <argument pos:start="27:21" pos:end="27:76"><expr pos:start="27:21" pos:end="27:76"><literal type="string" pos:start="27:21" pos:end="27:76">"%s:%d: ACL refers to invalid host or IP address '%s'\n"</literal></expr></argument>,
                    <argument pos:start="28:21" pos:end="28:28"><expr pos:start="28:21" pos:end="28:28"><name pos:start="28:21" pos:end="28:28">filename</name></expr></argument>, <argument pos:start="28:31" pos:end="28:38"><expr pos:start="28:31" pos:end="28:38"><name pos:start="28:31" pos:end="28:38">line_num</name></expr></argument>, <argument pos:start="28:41" pos:end="28:43"><expr pos:start="28:41" pos:end="28:43"><name pos:start="28:41" pos:end="28:43">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:8">nacl</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:36"><name pos:start="29:12" pos:end="29:21">av_mallocz</name><argument_list pos:start="29:22" pos:end="29:36">(<argument pos:start="29:23" pos:end="29:35"><expr pos:start="29:23" pos:end="29:35"><sizeof pos:start="29:23" pos:end="29:35">sizeof<argument_list pos:start="29:29" pos:end="29:35">(<argument pos:start="29:30" pos:end="29:34"><expr pos:start="29:30" pos:end="29:34"><operator pos:start="29:30" pos:end="29:30">*</operator><name pos:start="29:31" pos:end="29:34">nacl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:14"><expr pos:start="30:5" pos:end="30:13"><name pos:start="30:5" pos:end="30:9">naclp</name> <operator pos:start="30:11" pos:end="30:11">=</operator> <literal type="number" pos:start="30:13" pos:end="30:13">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:17"><expr pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:7">acl</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:12">next</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:16"><expr pos:start="32:5" pos:end="32:15"><operator pos:start="32:5" pos:end="32:5">*</operator><name pos:start="32:6" pos:end="32:9">nacl</name> <operator pos:start="32:11" pos:end="32:11">=</operator> <name pos:start="32:13" pos:end="32:15">acl</name></expr>;</expr_stmt>
    <if_stmt pos:start="33:5" pos:end="41:36"><if pos:start="33:5" pos:end="34:29">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><name pos:start="33:9" pos:end="33:14">stream</name></expr>)</condition><block type="pseudo" pos:start="34:9" pos:end="34:29"><block_content pos:start="34:9" pos:end="34:29">
        <expr_stmt pos:start="34:9" pos:end="34:29"><expr pos:start="34:9" pos:end="34:28"><name pos:start="34:9" pos:end="34:13">naclp</name> <operator pos:start="34:15" pos:end="34:15">=</operator> <operator pos:start="34:17" pos:end="34:17">&amp;</operator><name pos:start="34:18" pos:end="34:28"><name pos:start="34:18" pos:end="34:23">stream</name><operator pos:start="34:24" pos:end="34:25">-&gt;</operator><name pos:start="34:26" pos:end="34:28">acl</name></name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="35:5" pos:end="36:27">else if <condition pos:start="35:13" pos:end="35:18">(<expr pos:start="35:14" pos:end="35:17"><name pos:start="35:14" pos:end="35:17">feed</name></expr>)</condition><block type="pseudo" pos:start="36:9" pos:end="36:27"><block_content pos:start="36:9" pos:end="36:27">
        <expr_stmt pos:start="36:9" pos:end="36:27"><expr pos:start="36:9" pos:end="36:26"><name pos:start="36:9" pos:end="36:13">naclp</name> <operator pos:start="36:15" pos:end="36:15">=</operator> <operator pos:start="36:17" pos:end="36:17">&amp;</operator><name pos:start="36:18" pos:end="36:26"><name pos:start="36:18" pos:end="36:21">feed</name><operator pos:start="36:22" pos:end="36:23">-&gt;</operator><name pos:start="36:24" pos:end="36:26">acl</name></name></expr>;</expr_stmt></block_content></block></if>
    <if type="elseif" pos:start="37:5" pos:end="38:25">else if <condition pos:start="37:13" pos:end="37:21">(<expr pos:start="37:14" pos:end="37:20"><name pos:start="37:14" pos:end="37:20">ext_acl</name></expr>)</condition><block type="pseudo" pos:start="38:9" pos:end="38:25"><block_content pos:start="38:9" pos:end="38:25">
        <expr_stmt pos:start="38:9" pos:end="38:25"><expr pos:start="38:9" pos:end="38:24"><name pos:start="38:9" pos:end="38:13">naclp</name> <operator pos:start="38:15" pos:end="38:15">=</operator> <operator pos:start="38:17" pos:end="38:17">&amp;</operator><name pos:start="38:18" pos:end="38:24">ext_acl</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="39:5" pos:end="41:36">else<block type="pseudo" pos:start="40:9" pos:end="41:36"><block_content pos:start="40:9" pos:end="41:36">
        <expr_stmt pos:start="40:9" pos:end="41:36"><expr pos:start="40:9" pos:end="41:35"><call pos:start="40:9" pos:end="41:35"><name pos:start="40:9" pos:end="40:15">fprintf</name><argument_list pos:start="40:16" pos:end="41:35">(<argument pos:start="40:17" pos:end="40:22"><expr pos:start="40:17" pos:end="40:22"><name pos:start="40:17" pos:end="40:22">stderr</name></expr></argument>, <argument pos:start="40:25" pos:end="40:70"><expr pos:start="40:25" pos:end="40:70"><literal type="string" pos:start="40:25" pos:end="40:70">"%s:%d: ACL found not in &lt;Stream&gt; or &lt;Feed&gt;\n"</literal></expr></argument>,
                <argument pos:start="41:17" pos:end="41:24"><expr pos:start="41:17" pos:end="41:24"><name pos:start="41:17" pos:end="41:24">filename</name></expr></argument>, <argument pos:start="41:27" pos:end="41:34"><expr pos:start="41:27" pos:end="41:34"><name pos:start="41:27" pos:end="41:34">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="42:5" pos:end="47:22"><if pos:start="42:5" pos:end="46:5">if <condition pos:start="42:8" pos:end="42:14">(<expr pos:start="42:9" pos:end="42:13"><name pos:start="42:9" pos:end="42:13">naclp</name></expr>)</condition> <block pos:start="42:16" pos:end="46:5">{<block_content pos:start="43:9" pos:end="45:22">
        <while pos:start="43:9" pos:end="44:36">while <condition pos:start="43:15" pos:end="43:22">(<expr pos:start="43:16" pos:end="43:21"><operator pos:start="43:16" pos:end="43:16">*</operator><name pos:start="43:17" pos:end="43:21">naclp</name></expr>)</condition><block type="pseudo" pos:start="44:13" pos:end="44:36"><block_content pos:start="44:13" pos:end="44:36">
            <expr_stmt pos:start="44:13" pos:end="44:36"><expr pos:start="44:13" pos:end="44:35"><name pos:start="44:13" pos:end="44:17">naclp</name> <operator pos:start="44:19" pos:end="44:19">=</operator> <operator pos:start="44:21" pos:end="44:21">&amp;</operator><name pos:start="44:22" pos:end="44:35"><operator pos:start="44:22" pos:end="44:22">(</operator><operator pos:start="44:23" pos:end="44:23">*</operator><name pos:start="44:24" pos:end="44:28">naclp</name><operator pos:start="44:29" pos:end="44:29">)</operator><operator pos:start="44:30" pos:end="44:31">-&gt;</operator><name pos:start="44:32" pos:end="44:35">next</name></name></expr>;</expr_stmt></block_content></block></while>
        <expr_stmt pos:start="45:9" pos:end="45:22"><expr pos:start="45:9" pos:end="45:21"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:14">naclp</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:21">nacl</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="46:7" pos:end="47:22">else<block type="pseudo" pos:start="47:9" pos:end="47:22"><block_content pos:start="47:9" pos:end="47:22">
        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:15">av_free</name><argument_list pos:start="47:16" pos:end="47:21">(<argument pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">nacl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
<label pos:start="48:1" pos:end="48:5"><name pos:start="48:1" pos:end="48:4">bail</name>:</label>
  <return pos:start="49:3" pos:end="49:9">return;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></function></unit>
