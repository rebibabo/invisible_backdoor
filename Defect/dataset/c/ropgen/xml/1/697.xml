<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/697.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">decode_component</name><parameter_list pos:start="1:29" pos:end="1:55">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:41">DiracContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:54">comp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:95">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">avctx</name> <init pos:start="5:27" pos:end="5:36">= <expr pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:36">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">SubBand</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:38"><name pos:start="7:14" pos:end="7:18">bands</name><index pos:start="7:19" pos:end="7:38">[<expr pos:start="7:20" pos:end="7:37"><literal type="number" pos:start="7:20" pos:end="7:20">3</literal><operator pos:start="7:21" pos:end="7:21">*</operator><name pos:start="7:22" pos:end="7:35">MAX_DWT_LEVELS</name><operator pos:start="7:36" pos:end="7:36">+</operator><literal type="number" pos:start="7:37" pos:end="7:37">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:8">enum</name> <name pos:start="9:10" pos:end="9:22">dirac_subband</name></name></type> <name pos:start="9:24" pos:end="9:34">orientation</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">level</name></decl>, <decl pos:start="11:16" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:24">num_bands</name> <init pos:start="11:26" pos:end="11:28">= <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:44">/* Unpack all subbands at all levels. */</comment>

    <for pos:start="17:5" pos:end="57:5">for <control pos:start="17:9" pos:end="17:54">(<init pos:start="17:10" pos:end="17:19"><expr pos:start="17:10" pos:end="17:18"><name pos:start="17:10" pos:end="17:14">level</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:45"><expr pos:start="17:21" pos:end="17:44"><name pos:start="17:21" pos:end="17:25">level</name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <name pos:start="17:29" pos:end="17:44"><name pos:start="17:29" pos:end="17:29">s</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:44">wavelet_depth</name></name></expr>;</condition> <incr pos:start="17:47" pos:end="17:53"><expr pos:start="17:47" pos:end="17:53"><name pos:start="17:47" pos:end="17:51">level</name><operator pos:start="17:52" pos:end="17:53">++</operator></expr></incr>)</control> <block pos:start="17:56" pos:end="57:5">{<block_content pos:start="19:9" pos:end="55:61">

        <for pos:start="19:9" pos:end="47:9">for <control pos:start="19:13" pos:end="19:67">(<init pos:start="19:14" pos:end="19:35"><expr pos:start="19:14" pos:end="19:34"><name pos:start="19:14" pos:end="19:24">orientation</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <operator pos:start="19:28" pos:end="19:28">!</operator><operator pos:start="19:29" pos:end="19:29">!</operator><name pos:start="19:30" pos:end="19:34">level</name></expr>;</init> <condition pos:start="19:37" pos:end="19:52"><expr pos:start="19:37" pos:end="19:51"><name pos:start="19:37" pos:end="19:47">orientation</name> <operator pos:start="19:49" pos:end="19:49">&lt;</operator> <literal type="number" pos:start="19:51" pos:end="19:51">4</literal></expr>;</condition> <incr pos:start="19:54" pos:end="19:66"><expr pos:start="19:54" pos:end="19:66"><name pos:start="19:54" pos:end="19:64">orientation</name><operator pos:start="19:65" pos:end="19:66">++</operator></expr></incr>)</control> <block pos:start="19:69" pos:end="47:9">{<block_content pos:start="21:13" pos:end="45:13">

            <decl_stmt pos:start="21:13" pos:end="21:66"><decl pos:start="21:13" pos:end="21:65"><type pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:19">SubBand</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:22">b</name> <init pos:start="21:24" pos:end="21:65">= <expr pos:start="21:26" pos:end="21:65"><operator pos:start="21:26" pos:end="21:26">&amp;</operator><name pos:start="21:27" pos:end="21:40"><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:34">plane</name><index pos:start="21:35" pos:end="21:40">[<expr pos:start="21:36" pos:end="21:39"><name pos:start="21:36" pos:end="21:39">comp</name></expr>]</index></name><operator pos:start="21:41" pos:end="21:41">.</operator><name pos:start="21:42" pos:end="21:65"><name pos:start="21:42" pos:end="21:45">band</name><index pos:start="21:46" pos:end="21:52">[<expr pos:start="21:47" pos:end="21:51"><name pos:start="21:47" pos:end="21:51">level</name></expr>]</index><index pos:start="21:53" pos:end="21:65">[<expr pos:start="21:54" pos:end="21:64"><name pos:start="21:54" pos:end="21:64">orientation</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:35"><expr pos:start="23:13" pos:end="23:34"><name pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:17">bands</name><index pos:start="23:18" pos:end="23:30">[<expr pos:start="23:19" pos:end="23:29"><name pos:start="23:19" pos:end="23:27">num_bands</name><operator pos:start="23:28" pos:end="23:29">++</operator></expr>]</index></name> <operator pos:start="23:32" pos:end="23:32">=</operator> <name pos:start="23:34" pos:end="23:34">b</name></expr>;</expr_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:26">align_get_bits</name><argument_list pos:start="27:27" pos:end="27:34">(<argument pos:start="27:28" pos:end="27:33"><expr pos:start="27:28" pos:end="27:33"><operator pos:start="27:28" pos:end="27:28">&amp;</operator><name pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:29">s</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="29:13" pos:end="29:46">/* [DIRAC_STD] 13.4.2 subband() */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:51"><expr pos:start="31:13" pos:end="31:50"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:13">b</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">length</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="31:50"><name pos:start="31:25" pos:end="31:42">svq3_get_ue_golomb</name><argument_list pos:start="31:43" pos:end="31:50">(<argument pos:start="31:44" pos:end="31:49"><expr pos:start="31:44" pos:end="31:49"><operator pos:start="31:44" pos:end="31:44">&amp;</operator><name pos:start="31:45" pos:end="31:49"><name pos:start="31:45" pos:end="31:45">s</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="45:13"><if pos:start="33:13" pos:end="45:13">if <condition pos:start="33:16" pos:end="33:26">(<expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:17">b</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:25">length</name></name></expr>)</condition> <block pos:start="33:28" pos:end="45:13">{<block_content pos:start="35:17" pos:end="43:52">

                <expr_stmt pos:start="35:17" pos:end="35:54"><expr pos:start="35:17" pos:end="35:53"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">b</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">quant</name></name> <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:53"><name pos:start="35:28" pos:end="35:45">svq3_get_ue_golomb</name><argument_list pos:start="35:46" pos:end="35:53">(<argument pos:start="35:47" pos:end="35:52"><expr pos:start="35:47" pos:end="35:52"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:48">s</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:39"><expr pos:start="37:17" pos:end="37:38"><call pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:30">align_get_bits</name><argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:72"><expr pos:start="39:17" pos:end="39:71"><name pos:start="39:17" pos:end="39:29"><name pos:start="39:17" pos:end="39:17">b</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:29">coeff_data</name></name> <operator pos:start="39:31" pos:end="39:31">=</operator> <name pos:start="39:33" pos:end="39:44"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:37">gb</name><operator pos:start="39:38" pos:end="39:38">.</operator><name pos:start="39:39" pos:end="39:44">buffer</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <call pos:start="39:48" pos:end="39:69"><name pos:start="39:48" pos:end="39:61">get_bits_count</name><argument_list pos:start="39:62" pos:end="39:69">(<argument pos:start="39:63" pos:end="39:68"><expr pos:start="39:63" pos:end="39:68"><operator pos:start="39:63" pos:end="39:63">&amp;</operator><name pos:start="39:64" pos:end="39:68"><name pos:start="39:64" pos:end="39:64">s</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:68">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="39:70" pos:end="39:70">/</operator><literal type="number" pos:start="39:71" pos:end="39:71">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:70"><expr pos:start="41:17" pos:end="41:69"><name pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:17">b</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">length</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:69"><name pos:start="41:29" pos:end="41:33">FFMIN</name><argument_list pos:start="41:34" pos:end="41:69">(<argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:35">b</name><operator pos:start="41:36" pos:end="41:37">-&gt;</operator><name pos:start="41:38" pos:end="41:43">length</name></name></expr></argument>, <argument pos:start="41:46" pos:end="41:68"><expr pos:start="41:46" pos:end="41:68"><call pos:start="41:46" pos:end="41:66"><name pos:start="41:46" pos:end="41:58">get_bits_left</name><argument_list pos:start="41:59" pos:end="41:66">(<argument pos:start="41:60" pos:end="41:65"><expr pos:start="41:60" pos:end="41:65"><operator pos:start="41:60" pos:end="41:60">&amp;</operator><name pos:start="41:61" pos:end="41:65"><name pos:start="41:61" pos:end="41:61">s</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:65">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="41:67" pos:end="41:67">/</operator><literal type="number" pos:start="41:68" pos:end="41:68">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:52"><expr pos:start="43:17" pos:end="43:51"><call pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:30">skip_bits_long</name><argument_list pos:start="43:31" pos:end="43:51">(<argument pos:start="43:32" pos:end="43:37"><expr pos:start="43:32" pos:end="43:37"><operator pos:start="43:32" pos:end="43:32">&amp;</operator><name pos:start="43:33" pos:end="43:37"><name pos:start="43:33" pos:end="43:33">s</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:37">gb</name></name></expr></argument>, <argument pos:start="43:40" pos:end="43:50"><expr pos:start="43:40" pos:end="43:50"><name pos:start="43:40" pos:end="43:48"><name pos:start="43:40" pos:end="43:40">b</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:48">length</name></name><operator pos:start="43:49" pos:end="43:49">*</operator><literal type="number" pos:start="43:50" pos:end="43:50">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="49:9" pos:end="49:104">/* arithmetic coding has inter-level dependencies, so we can only execute one level at a time */</comment>

        <if_stmt pos:start="51:9" pos:end="55:61"><if pos:start="51:9" pos:end="55:61">if <condition pos:start="51:12" pos:end="51:24">(<expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">is_arith</name></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="55:61"><block_content pos:start="53:13" pos:end="55:61">

            <expr_stmt pos:start="53:13" pos:end="55:61"><expr pos:start="53:13" pos:end="55:60"><call pos:start="53:13" pos:end="55:60"><name pos:start="53:13" pos:end="53:26"><name pos:start="53:13" pos:end="53:17">avctx</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">execute</name></name><argument_list pos:start="53:27" pos:end="55:60">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">avctx</name></expr></argument>, <argument pos:start="53:35" pos:end="53:54"><expr pos:start="53:35" pos:end="53:54"><name pos:start="53:35" pos:end="53:54">decode_subband_arith</name></expr></argument>, <argument pos:start="53:57" pos:end="53:92"><expr pos:start="53:57" pos:end="53:92"><operator pos:start="53:57" pos:end="53:57">&amp;</operator><name pos:start="53:58" pos:end="53:71"><name pos:start="53:58" pos:end="53:58">s</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:65">plane</name><index pos:start="53:66" pos:end="53:71">[<expr pos:start="53:67" pos:end="53:70"><name pos:start="53:67" pos:end="53:70">comp</name></expr>]</index></name><operator pos:start="53:72" pos:end="53:72">.</operator><name pos:start="53:73" pos:end="53:92"><name pos:start="53:73" pos:end="53:76">band</name><index pos:start="53:77" pos:end="53:83">[<expr pos:start="53:78" pos:end="53:82"><name pos:start="53:78" pos:end="53:82">level</name></expr>]</index><index pos:start="53:84" pos:end="53:92">[<expr pos:start="53:85" pos:end="53:91"><operator pos:start="53:85" pos:end="53:85">!</operator><operator pos:start="53:86" pos:end="53:86">!</operator><name pos:start="53:87" pos:end="53:91">level</name></expr>]</index></name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:31"><expr pos:start="55:28" pos:end="55:31"><name pos:start="55:28" pos:end="55:31">NULL</name></expr></argument>, <argument pos:start="55:34" pos:end="55:42"><expr pos:start="55:34" pos:end="55:42"><literal type="number" pos:start="55:34" pos:end="55:35">4</literal><operator pos:start="55:35" pos:end="55:35">-</operator><operator pos:start="55:36" pos:end="55:36">!</operator><operator pos:start="55:37" pos:end="55:37">!</operator><name pos:start="55:38" pos:end="55:42">level</name></expr></argument>, <argument pos:start="55:45" pos:end="55:59"><expr pos:start="55:45" pos:end="55:59"><sizeof pos:start="55:45" pos:end="55:59">sizeof<argument_list pos:start="55:51" pos:end="55:59">(<argument pos:start="55:52" pos:end="55:58"><expr pos:start="55:52" pos:end="55:58"><name pos:start="55:52" pos:end="55:58">SubBand</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="59:5" pos:end="59:99">/* golomb coding has no inter-level dependencies, so we can execute all subbands in parallel */</comment>

    <if_stmt pos:start="61:5" pos:end="63:95"><if pos:start="61:5" pos:end="63:95">if <condition pos:start="61:8" pos:end="61:21">(<expr pos:start="61:9" pos:end="61:20"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:20"><name pos:start="61:10" pos:end="61:10">s</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:20">is_arith</name></name></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:95"><block_content pos:start="63:9" pos:end="63:95">

        <expr_stmt pos:start="63:9" pos:end="63:95"><expr pos:start="63:9" pos:end="63:94"><call pos:start="63:9" pos:end="63:94"><name pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:13">avctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">execute</name></name><argument_list pos:start="63:23" pos:end="63:94">(<argument pos:start="63:24" pos:end="63:28"><expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28">avctx</name></expr></argument>, <argument pos:start="63:31" pos:end="63:51"><expr pos:start="63:31" pos:end="63:51"><name pos:start="63:31" pos:end="63:51">decode_subband_golomb</name></expr></argument>, <argument pos:start="63:54" pos:end="63:58"><expr pos:start="63:54" pos:end="63:58"><name pos:start="63:54" pos:end="63:58">bands</name></expr></argument>, <argument pos:start="63:61" pos:end="63:64"><expr pos:start="63:61" pos:end="63:64"><name pos:start="63:61" pos:end="63:64">NULL</name></expr></argument>, <argument pos:start="63:67" pos:end="63:75"><expr pos:start="63:67" pos:end="63:75"><name pos:start="63:67" pos:end="63:75">num_bands</name></expr></argument>, <argument pos:start="63:78" pos:end="63:93"><expr pos:start="63:78" pos:end="63:93"><sizeof pos:start="63:78" pos:end="63:93">sizeof<argument_list pos:start="63:84" pos:end="63:93">(<argument pos:start="63:85" pos:end="63:92"><expr pos:start="63:85" pos:end="63:92"><name pos:start="63:85" pos:end="63:91">SubBand</name><operator pos:start="63:92" pos:end="63:92">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
