<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3614.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">h263_encode_mb</name><parameter_list pos:start="1:20" pos:end="5:47">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:34">MpegEncContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>,

		    <parameter pos:start="3:21" pos:end="3:40"><decl pos:start="3:21" pos:end="3:40"><type pos:start="3:21" pos:end="3:33"><name pos:start="3:21" pos:end="3:27">DCTELEM</name></type> <name pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">block</name><index pos:start="3:34" pos:end="3:36">[<expr pos:start="3:35" pos:end="3:35"><literal type="number" pos:start="3:35" pos:end="3:35">6</literal></expr>]</index><index pos:start="3:37" pos:end="3:40">[<expr pos:start="3:38" pos:end="3:39"><literal type="number" pos:start="3:38" pos:end="3:39">64</literal></expr>]</index></name></decl></parameter>,

		    <parameter pos:start="5:21" pos:end="5:32"><decl pos:start="5:21" pos:end="5:32"><type pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:23">int</name></type> <name pos:start="5:25" pos:end="5:32">motion_x</name></decl></parameter>, <parameter pos:start="5:35" pos:end="5:46"><decl pos:start="5:35" pos:end="5:46"><type pos:start="5:35" pos:end="5:46"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:46">motion_y</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="159:1">{<block_content pos:start="9:5" pos:end="157:5">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">cbpc</name></decl>, <decl pos:start="9:15" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:18">cbpy</name></decl>, <decl pos:start="9:21" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:21">i</name></decl>, <decl pos:start="9:24" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:26">cbp</name></decl>, <decl pos:start="9:29" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:34">pred_x</name></decl>, <decl pos:start="9:37" pos:end="9:42"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:42">pred_y</name></decl>;</decl_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:55">//    printf("**mb x=%d y=%d\n", s-&gt;mb_x, s-&gt;mb_y);</comment>

   <if_stmt pos:start="15:4" pos:end="135:5"><if pos:start="15:4" pos:end="85:4">if <condition pos:start="15:7" pos:end="15:20">(<expr pos:start="15:8" pos:end="15:19"><operator pos:start="15:8" pos:end="15:8">!</operator><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">mb_intra</name></name></expr>)</condition> <block pos:start="15:22" pos:end="85:4">{<block_content pos:start="19:12" pos:end="83:7">

	   <comment type="block" pos:start="17:12" pos:end="17:28">/* compute cbp */</comment>

	   <expr_stmt pos:start="19:12" pos:end="19:19"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:14">cbp</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</expr_stmt>

	   <for pos:start="21:12" pos:end="27:12">for <control pos:start="21:16" pos:end="21:34">(<init pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr>;</init> <condition pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:24">i</name> <operator pos:start="21:26" pos:end="21:26">&lt;</operator> <literal type="number" pos:start="21:28" pos:end="21:28">6</literal></expr>;</condition> <incr pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:33">++</operator></expr></incr>)</control> <block pos:start="21:36" pos:end="27:12">{<block_content pos:start="23:15" pos:end="25:39">

	      <if_stmt pos:start="23:15" pos:end="25:39"><if pos:start="23:15" pos:end="25:39">if <condition pos:start="23:18" pos:end="23:46">(<expr pos:start="23:19" pos:end="23:45"><name pos:start="23:19" pos:end="23:40"><name pos:start="23:19" pos:end="23:19">s</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:37">block_last_index</name><index pos:start="23:38" pos:end="23:40">[<expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">i</name></expr>]</index></name> <operator pos:start="23:42" pos:end="23:43">&gt;=</operator> <literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr>)</condition><block type="pseudo" pos:start="25:20" pos:end="25:39"><block_content pos:start="25:20" pos:end="25:39">

		   <expr_stmt pos:start="25:20" pos:end="25:39"><expr pos:start="25:20" pos:end="25:38"><name pos:start="25:20" pos:end="25:22">cbp</name> <operator pos:start="25:24" pos:end="25:25">|=</operator> <literal type="number" pos:start="25:27" pos:end="25:27">1</literal> <operator pos:start="25:29" pos:end="25:30">&lt;&lt;</operator> <operator pos:start="25:32" pos:end="25:32">(</operator><literal type="number" pos:start="25:33" pos:end="25:35">5</literal> <operator pos:start="25:35" pos:end="25:35">-</operator> <name pos:start="25:37" pos:end="25:37">i</name><operator pos:start="25:38" pos:end="25:38">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

	   </block_content>}</block></for>

	   <if_stmt pos:start="29:12" pos:end="37:12"><if pos:start="29:12" pos:end="37:12">if <condition pos:start="29:15" pos:end="29:48">(<expr pos:start="29:16" pos:end="29:47"><operator pos:start="29:16" pos:end="29:16">(</operator><name pos:start="29:17" pos:end="29:19">cbp</name> <operator pos:start="29:21" pos:end="29:21">|</operator> <name pos:start="29:23" pos:end="29:30">motion_x</name> <operator pos:start="29:32" pos:end="29:32">|</operator> <name pos:start="29:34" pos:end="29:41">motion_y</name><operator pos:start="29:42" pos:end="29:42">)</operator> <operator pos:start="29:44" pos:end="29:45">==</operator> <literal type="number" pos:start="29:47" pos:end="29:47">0</literal></expr>)</condition> <block pos:start="29:50" pos:end="37:12">{<block_content pos:start="33:15" pos:end="35:21">

	      <comment type="block" pos:start="31:15" pos:end="31:35">/* skip macroblock */</comment>

	      <expr_stmt pos:start="33:15" pos:end="33:37"><expr pos:start="33:15" pos:end="33:36"><call pos:start="33:15" pos:end="33:36"><name pos:start="33:15" pos:end="33:22">put_bits</name><argument_list pos:start="33:23" pos:end="33:36">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:29"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:29">pb</name></name></expr></argument>, <argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr></argument>, <argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	      <return pos:start="35:15" pos:end="35:21">return;</return>

	   </block_content>}</block></if></if_stmt>

	   <expr_stmt pos:start="39:12" pos:end="39:34"><expr pos:start="39:12" pos:end="39:33"><call pos:start="39:12" pos:end="39:33"><name pos:start="39:12" pos:end="39:19">put_bits</name><argument_list pos:start="39:20" pos:end="39:33">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><operator pos:start="39:21" pos:end="39:21">&amp;</operator><name pos:start="39:22" pos:end="39:26"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:26">pb</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:29"><expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">1</literal></expr></argument>, <argument pos:start="39:32" pos:end="39:32"><expr pos:start="39:32" pos:end="39:32"><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="39:41" pos:end="39:54">/* mb coded */</comment>

	   <expr_stmt pos:start="41:12" pos:end="41:26"><expr pos:start="41:12" pos:end="41:25"><name pos:start="41:12" pos:end="41:15">cbpc</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:21">cbp</name> <operator pos:start="41:23" pos:end="41:23">&amp;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">3</literal></expr>;</expr_stmt>

	   <expr_stmt pos:start="43:12" pos:end="47:40"><expr pos:start="43:12" pos:end="47:39"><call pos:start="43:12" pos:end="47:39"><name pos:start="43:12" pos:end="43:19">put_bits</name><argument_list pos:start="43:20" pos:end="47:39">(<argument pos:start="43:21" pos:end="43:26"><expr pos:start="43:21" pos:end="43:26"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:26"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:26">pb</name></name></expr></argument>,

		<argument pos:start="45:17" pos:end="45:38"><expr pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:38"><name pos:start="45:17" pos:end="45:32">inter_MCBPC_bits</name><index pos:start="45:33" pos:end="45:38">[<expr pos:start="45:34" pos:end="45:37"><name pos:start="45:34" pos:end="45:37">cbpc</name></expr>]</index></name></expr></argument>,

		<argument pos:start="47:17" pos:end="47:38"><expr pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:38"><name pos:start="47:17" pos:end="47:32">inter_MCBPC_code</name><index pos:start="47:33" pos:end="47:38">[<expr pos:start="47:34" pos:end="47:37"><name pos:start="47:34" pos:end="47:37">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	   <expr_stmt pos:start="49:12" pos:end="49:27"><expr pos:start="49:12" pos:end="49:26"><name pos:start="49:12" pos:end="49:15">cbpy</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:21">cbp</name> <operator pos:start="49:23" pos:end="49:24">&gt;&gt;</operator> <literal type="number" pos:start="49:26" pos:end="49:26">2</literal></expr>;</expr_stmt>

	   <expr_stmt pos:start="51:12" pos:end="51:23"><expr pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:15">cbpy</name> <operator pos:start="51:17" pos:end="51:18">^=</operator> <literal type="number" pos:start="51:20" pos:end="51:22">0xf</literal></expr>;</expr_stmt>

	   <expr_stmt pos:start="53:12" pos:end="53:66"><expr pos:start="53:12" pos:end="53:65"><call pos:start="53:12" pos:end="53:65"><name pos:start="53:12" pos:end="53:19">put_bits</name><argument_list pos:start="53:20" pos:end="53:65">(<argument pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:26"><operator pos:start="53:21" pos:end="53:21">&amp;</operator><name pos:start="53:22" pos:end="53:26"><name pos:start="53:22" pos:end="53:22">s</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:26">pb</name></name></expr></argument>, <argument pos:start="53:29" pos:end="53:45"><expr pos:start="53:29" pos:end="53:45"><name pos:start="53:29" pos:end="53:45"><name pos:start="53:29" pos:end="53:36">cbpy_tab</name><index pos:start="53:37" pos:end="53:42">[<expr pos:start="53:38" pos:end="53:41"><name pos:start="53:38" pos:end="53:41">cbpy</name></expr>]</index><index pos:start="53:43" pos:end="53:45">[<expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="53:48" pos:end="53:64"><expr pos:start="53:48" pos:end="53:64"><name pos:start="53:48" pos:end="53:64"><name pos:start="53:48" pos:end="53:55">cbpy_tab</name><index pos:start="53:56" pos:end="53:61">[<expr pos:start="53:57" pos:end="53:60"><name pos:start="53:57" pos:end="53:60">cbpy</name></expr>]</index><index pos:start="53:62" pos:end="53:64">[<expr pos:start="53:63" pos:end="53:63"><literal type="number" pos:start="53:63" pos:end="53:63">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	   <comment type="block" pos:start="57:12" pos:end="57:52">/* motion vectors: 16x16 mode only now */</comment>

      <expr_stmt pos:start="59:7" pos:end="59:47"><expr pos:start="59:7" pos:end="59:46"><call pos:start="59:7" pos:end="59:46"><name pos:start="59:7" pos:end="59:22">h263_pred_motion</name><argument_list pos:start="59:23" pos:end="59:46">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">s</name></expr></argument>, <argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">0</literal></expr></argument>, <argument pos:start="59:30" pos:end="59:36"><expr pos:start="59:30" pos:end="59:36"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:36">pred_x</name></expr></argument>, <argument pos:start="59:39" pos:end="59:45"><expr pos:start="59:39" pos:end="59:45"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:45">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      

      <if_stmt pos:start="63:7" pos:end="83:7"><if pos:start="63:7" pos:end="69:7">if <condition pos:start="63:10" pos:end="63:19">(<expr pos:start="63:11" pos:end="63:18"><operator pos:start="63:11" pos:end="63:11">!</operator><name pos:start="63:12" pos:end="63:18">umvplus</name></expr>)</condition> <block pos:start="63:21" pos:end="69:7">{<block_content pos:start="65:10" pos:end="67:50">  

         <expr_stmt pos:start="65:10" pos:end="65:50"><expr pos:start="65:10" pos:end="65:49"><call pos:start="65:10" pos:end="65:49"><name pos:start="65:10" pos:end="65:27">h263_encode_motion</name><argument_list pos:start="65:28" pos:end="65:49">(<argument pos:start="65:29" pos:end="65:29"><expr pos:start="65:29" pos:end="65:29"><name pos:start="65:29" pos:end="65:29">s</name></expr></argument>, <argument pos:start="65:32" pos:end="65:48"><expr pos:start="65:32" pos:end="65:48"><name pos:start="65:32" pos:end="65:39">motion_x</name> <operator pos:start="65:41" pos:end="65:41">-</operator> <name pos:start="65:43" pos:end="65:48">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="67:10" pos:end="67:50"><expr pos:start="67:10" pos:end="67:49"><call pos:start="67:10" pos:end="67:49"><name pos:start="67:10" pos:end="67:27">h263_encode_motion</name><argument_list pos:start="67:28" pos:end="67:49">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">s</name></expr></argument>, <argument pos:start="67:32" pos:end="67:48"><expr pos:start="67:32" pos:end="67:48"><name pos:start="67:32" pos:end="67:39">motion_y</name> <operator pos:start="67:41" pos:end="67:41">-</operator> <name pos:start="67:43" pos:end="67:48">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></if>

      <else pos:start="71:7" pos:end="83:7">else <block pos:start="71:12" pos:end="83:7">{<block_content pos:start="73:10" pos:end="81:33">

         <expr_stmt pos:start="73:10" pos:end="73:52"><expr pos:start="73:10" pos:end="73:51"><call pos:start="73:10" pos:end="73:51"><name pos:start="73:10" pos:end="73:29">h263p_encode_umotion</name><argument_list pos:start="73:30" pos:end="73:51">(<argument pos:start="73:31" pos:end="73:31"><expr pos:start="73:31" pos:end="73:31"><name pos:start="73:31" pos:end="73:31">s</name></expr></argument>, <argument pos:start="73:34" pos:end="73:50"><expr pos:start="73:34" pos:end="73:50"><name pos:start="73:34" pos:end="73:41">motion_x</name> <operator pos:start="73:43" pos:end="73:43">-</operator> <name pos:start="73:45" pos:end="73:50">pred_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="75:10" pos:end="75:52"><expr pos:start="75:10" pos:end="75:51"><call pos:start="75:10" pos:end="75:51"><name pos:start="75:10" pos:end="75:29">h263p_encode_umotion</name><argument_list pos:start="75:30" pos:end="75:51">(<argument pos:start="75:31" pos:end="75:31"><expr pos:start="75:31" pos:end="75:31"><name pos:start="75:31" pos:end="75:31">s</name></expr></argument>, <argument pos:start="75:34" pos:end="75:50"><expr pos:start="75:34" pos:end="75:50"><name pos:start="75:34" pos:end="75:41">motion_y</name> <operator pos:start="75:43" pos:end="75:43">-</operator> <name pos:start="75:45" pos:end="75:50">pred_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <if_stmt pos:start="77:10" pos:end="81:33"><if pos:start="77:10" pos:end="81:33">if <condition pos:start="77:13" pos:end="77:70">(<expr pos:start="77:14" pos:end="77:69"><operator pos:start="77:14" pos:end="77:14">(</operator><operator pos:start="77:15" pos:end="77:15">(</operator><name pos:start="77:16" pos:end="77:23">motion_x</name> <operator pos:start="77:25" pos:end="77:25">-</operator> <name pos:start="77:27" pos:end="77:32">pred_x</name><operator pos:start="77:33" pos:end="77:33">)</operator> <operator pos:start="77:35" pos:end="77:36">==</operator> <literal type="number" pos:start="77:38" pos:end="77:38">1</literal><operator pos:start="77:39" pos:end="77:39">)</operator> <operator pos:start="77:41" pos:end="77:42">&amp;&amp;</operator> <operator pos:start="77:44" pos:end="77:44">(</operator><operator pos:start="77:45" pos:end="77:45">(</operator><name pos:start="77:46" pos:end="77:53">motion_y</name> <operator pos:start="77:55" pos:end="77:55">-</operator> <name pos:start="77:57" pos:end="77:62">pred_y</name><operator pos:start="77:63" pos:end="77:63">)</operator> <operator pos:start="77:65" pos:end="77:66">==</operator> <literal type="number" pos:start="77:68" pos:end="77:68">1</literal><operator pos:start="77:69" pos:end="77:69">)</operator></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:33"><block_content pos:start="81:13" pos:end="81:33">

            <comment type="block" pos:start="79:13" pos:end="79:49">/* To prevent Start Code emulation */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:33"><expr pos:start="81:13" pos:end="81:32"><call pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:20">put_bits</name><argument_list pos:start="81:21" pos:end="81:32">(<argument pos:start="81:22" pos:end="81:27"><expr pos:start="81:22" pos:end="81:27"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:27"><name pos:start="81:23" pos:end="81:23">s</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:27">pb</name></name></expr></argument>,<argument pos:start="81:29" pos:end="81:29"><expr pos:start="81:29" pos:end="81:29"><literal type="number" pos:start="81:29" pos:end="81:29">1</literal></expr></argument>,<argument pos:start="81:31" pos:end="81:31"><expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

      </block_content>}</block></else></if_stmt>

   </block_content>}</block></if> <else pos:start="85:6" pos:end="135:5">else <block pos:start="85:11" pos:end="135:5">{<block_content pos:start="89:9" pos:end="133:63">

	<comment type="block" pos:start="87:9" pos:end="87:25">/* compute cbp */</comment>

	<expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">cbp</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">0</literal></expr>;</expr_stmt>

	<for pos:start="91:9" pos:end="97:9">for <control pos:start="91:13" pos:end="91:31">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:26"><expr pos:start="91:21" pos:end="91:25"><name pos:start="91:21" pos:end="91:21">i</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:25">6</literal></expr>;</condition> <incr pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:28">i</name><operator pos:start="91:29" pos:end="91:30">++</operator></expr></incr>)</control> <block pos:start="91:33" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:36">

	    <if_stmt pos:start="93:13" pos:end="95:36"><if pos:start="93:13" pos:end="95:36">if <condition pos:start="93:16" pos:end="93:44">(<expr pos:start="93:17" pos:end="93:43"><name pos:start="93:17" pos:end="93:38"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:35">block_last_index</name><index pos:start="93:36" pos:end="93:38">[<expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">i</name></expr>]</index></name> <operator pos:start="93:40" pos:end="93:41">&gt;=</operator> <literal type="number" pos:start="93:43" pos:end="93:43">1</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:36"><block_content pos:start="95:17" pos:end="95:36">

		<expr_stmt pos:start="95:17" pos:end="95:36"><expr pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:19">cbp</name> <operator pos:start="95:21" pos:end="95:22">|=</operator> <literal type="number" pos:start="95:24" pos:end="95:24">1</literal> <operator pos:start="95:26" pos:end="95:27">&lt;&lt;</operator> <operator pos:start="95:29" pos:end="95:29">(</operator><literal type="number" pos:start="95:30" pos:end="95:32">5</literal> <operator pos:start="95:32" pos:end="95:32">-</operator> <name pos:start="95:34" pos:end="95:34">i</name><operator pos:start="95:35" pos:end="95:35">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:12">cbpc</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:18">cbp</name> <operator pos:start="101:20" pos:end="101:20">&amp;</operator> <literal type="number" pos:start="101:22" pos:end="101:22">3</literal></expr>;</expr_stmt>

	<if_stmt pos:start="103:9" pos:end="121:9"><if pos:start="103:9" pos:end="111:9">if <condition pos:start="103:12" pos:end="103:35">(<expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:24">pict_type</name></name> <operator pos:start="103:26" pos:end="103:27">==</operator> <name pos:start="103:29" pos:end="103:34">I_TYPE</name></expr>)</condition> <block pos:start="103:37" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:45">

	    <expr_stmt pos:start="105:13" pos:end="109:45"><expr pos:start="105:13" pos:end="109:44"><call pos:start="105:13" pos:end="109:44"><name pos:start="105:13" pos:end="105:20">put_bits</name><argument_list pos:start="105:21" pos:end="109:44">(<argument pos:start="105:22" pos:end="105:27"><expr pos:start="105:22" pos:end="105:27"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:27"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:27">pb</name></name></expr></argument>,

		     <argument pos:start="107:22" pos:end="107:43"><expr pos:start="107:22" pos:end="107:43"><name pos:start="107:22" pos:end="107:43"><name pos:start="107:22" pos:end="107:37">intra_MCBPC_bits</name><index pos:start="107:38" pos:end="107:43">[<expr pos:start="107:39" pos:end="107:42"><name pos:start="107:39" pos:end="107:42">cbpc</name></expr>]</index></name></expr></argument>,

		     <argument pos:start="109:22" pos:end="109:43"><expr pos:start="109:22" pos:end="109:43"><name pos:start="109:22" pos:end="109:43"><name pos:start="109:22" pos:end="109:37">intra_MCBPC_code</name><index pos:start="109:38" pos:end="109:43">[<expr pos:start="109:39" pos:end="109:42"><name pos:start="109:39" pos:end="109:42">cbpc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="111:11" pos:end="121:9">else <block pos:start="111:16" pos:end="121:9">{<block_content pos:start="113:13" pos:end="119:49">

	    <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><call pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:20">put_bits</name><argument_list pos:start="113:21" pos:end="113:34">(<argument pos:start="113:22" pos:end="113:27"><expr pos:start="113:22" pos:end="113:27"><operator pos:start="113:22" pos:end="113:22">&amp;</operator><name pos:start="113:23" pos:end="113:27"><name pos:start="113:23" pos:end="113:23">s</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:27">pb</name></name></expr></argument>, <argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><literal type="number" pos:start="113:30" pos:end="113:30">1</literal></expr></argument>, <argument pos:start="113:33" pos:end="113:33"><expr pos:start="113:33" pos:end="113:33"><literal type="number" pos:start="113:33" pos:end="113:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="113:41" pos:end="113:54">/* mb coded */</comment>

	    <expr_stmt pos:start="115:13" pos:end="119:49"><expr pos:start="115:13" pos:end="119:48"><call pos:start="115:13" pos:end="119:48"><name pos:start="115:13" pos:end="115:20">put_bits</name><argument_list pos:start="115:21" pos:end="119:48">(<argument pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:27"><operator pos:start="115:22" pos:end="115:22">&amp;</operator><name pos:start="115:23" pos:end="115:27"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:27">pb</name></name></expr></argument>,

		     <argument pos:start="117:22" pos:end="117:47"><expr pos:start="117:22" pos:end="117:47"><name pos:start="117:22" pos:end="117:47"><name pos:start="117:22" pos:end="117:37">inter_MCBPC_bits</name><index pos:start="117:38" pos:end="117:47">[<expr pos:start="117:39" pos:end="117:46"><name pos:start="117:39" pos:end="117:42">cbpc</name> <operator pos:start="117:44" pos:end="117:44">+</operator> <literal type="number" pos:start="117:46" pos:end="117:46">4</literal></expr>]</index></name></expr></argument>,

		     <argument pos:start="119:22" pos:end="119:47"><expr pos:start="119:22" pos:end="119:47"><name pos:start="119:22" pos:end="119:47"><name pos:start="119:22" pos:end="119:37">inter_MCBPC_code</name><index pos:start="119:38" pos:end="119:47">[<expr pos:start="119:39" pos:end="119:46"><name pos:start="119:39" pos:end="119:42">cbpc</name> <operator pos:start="119:44" pos:end="119:44">+</operator> <literal type="number" pos:start="119:46" pos:end="119:46">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

	<if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:25">(<expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:24">h263_pred</name></name></expr>)</condition> <block pos:start="123:27" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:35">

	    <comment type="block" pos:start="125:13" pos:end="125:68">/* XXX: currently, we do not try to use ac prediction */</comment>

	    <expr_stmt pos:start="127:13" pos:end="127:35"><expr pos:start="127:13" pos:end="127:34"><call pos:start="127:13" pos:end="127:34"><name pos:start="127:13" pos:end="127:20">put_bits</name><argument_list pos:start="127:21" pos:end="127:34">(<argument pos:start="127:22" pos:end="127:27"><expr pos:start="127:22" pos:end="127:27"><operator pos:start="127:22" pos:end="127:22">&amp;</operator><name pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:27">pb</name></name></expr></argument>, <argument pos:start="127:30" pos:end="127:30"><expr pos:start="127:30" pos:end="127:30"><literal type="number" pos:start="127:30" pos:end="127:30">1</literal></expr></argument>, <argument pos:start="127:33" pos:end="127:33"><expr pos:start="127:33" pos:end="127:33"><literal type="number" pos:start="127:33" pos:end="127:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" pos:start="127:41" pos:end="127:62">/* no ac prediction */</comment>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="131:9" pos:end="131:24"><expr pos:start="131:9" pos:end="131:23"><name pos:start="131:9" pos:end="131:12">cbpy</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <name pos:start="131:16" pos:end="131:18">cbp</name> <operator pos:start="131:20" pos:end="131:21">&gt;&gt;</operator> <literal type="number" pos:start="131:23" pos:end="131:23">2</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="133:9" pos:end="133:63"><expr pos:start="133:9" pos:end="133:62"><call pos:start="133:9" pos:end="133:62"><name pos:start="133:9" pos:end="133:16">put_bits</name><argument_list pos:start="133:17" pos:end="133:62">(<argument pos:start="133:18" pos:end="133:23"><expr pos:start="133:18" pos:end="133:23"><operator pos:start="133:18" pos:end="133:18">&amp;</operator><name pos:start="133:19" pos:end="133:23"><name pos:start="133:19" pos:end="133:19">s</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:23">pb</name></name></expr></argument>, <argument pos:start="133:26" pos:end="133:42"><expr pos:start="133:26" pos:end="133:42"><name pos:start="133:26" pos:end="133:42"><name pos:start="133:26" pos:end="133:33">cbpy_tab</name><index pos:start="133:34" pos:end="133:39">[<expr pos:start="133:35" pos:end="133:38"><name pos:start="133:35" pos:end="133:38">cbpy</name></expr>]</index><index pos:start="133:40" pos:end="133:42">[<expr pos:start="133:41" pos:end="133:41"><literal type="number" pos:start="133:41" pos:end="133:41">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:45" pos:end="133:61"><expr pos:start="133:45" pos:end="133:61"><name pos:start="133:45" pos:end="133:61"><name pos:start="133:45" pos:end="133:52">cbpy_tab</name><index pos:start="133:53" pos:end="133:58">[<expr pos:start="133:54" pos:end="133:57"><name pos:start="133:54" pos:end="133:57">cbpy</name></expr>]</index><index pos:start="133:59" pos:end="133:61">[<expr pos:start="133:60" pos:end="133:60"><literal type="number" pos:start="133:60" pos:end="133:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="139:5" pos:end="139:27">/* encode each block */</comment>

    <if_stmt pos:start="141:5" pos:end="157:5"><if pos:start="141:5" pos:end="149:5">if <condition pos:start="141:8" pos:end="141:21">(<expr pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:20"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:20">h263_pred</name></name></expr>)</condition> <block pos:start="141:23" pos:end="149:5">{<block_content pos:start="143:9" pos:end="147:9">

	<for pos:start="143:9" pos:end="147:9">for <control pos:start="143:13" pos:end="143:31">(<init pos:start="143:14" pos:end="143:19"><expr pos:start="143:14" pos:end="143:18"><name pos:start="143:14" pos:end="143:14">i</name> <operator pos:start="143:16" pos:end="143:16">=</operator> <literal type="number" pos:start="143:18" pos:end="143:18">0</literal></expr>;</init> <condition pos:start="143:21" pos:end="143:26"><expr pos:start="143:21" pos:end="143:25"><name pos:start="143:21" pos:end="143:21">i</name> <operator pos:start="143:23" pos:end="143:23">&lt;</operator> <literal type="number" pos:start="143:25" pos:end="143:25">6</literal></expr>;</condition> <incr pos:start="143:28" pos:end="143:30"><expr pos:start="143:28" pos:end="143:30"><name pos:start="143:28" pos:end="143:28">i</name><operator pos:start="143:29" pos:end="143:30">++</operator></expr></incr>)</control> <block pos:start="143:33" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:47">

	    <expr_stmt pos:start="145:13" pos:end="145:47"><expr pos:start="145:13" pos:end="145:46"><call pos:start="145:13" pos:end="145:46"><name pos:start="145:13" pos:end="145:30">mpeg4_encode_block</name><argument_list pos:start="145:31" pos:end="145:46">(<argument pos:start="145:32" pos:end="145:32"><expr pos:start="145:32" pos:end="145:32"><name pos:start="145:32" pos:end="145:32">s</name></expr></argument>, <argument pos:start="145:35" pos:end="145:42"><expr pos:start="145:35" pos:end="145:42"><name pos:start="145:35" pos:end="145:42"><name pos:start="145:35" pos:end="145:39">block</name><index pos:start="145:40" pos:end="145:42">[<expr pos:start="145:41" pos:end="145:41"><name pos:start="145:41" pos:end="145:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="145:45" pos:end="145:45"><expr pos:start="145:45" pos:end="145:45"><name pos:start="145:45" pos:end="145:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="157:5">else <block pos:start="149:12" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:9">

	<for pos:start="151:9" pos:end="155:9">for <control pos:start="151:13" pos:end="151:31">(<init pos:start="151:14" pos:end="151:19"><expr pos:start="151:14" pos:end="151:18"><name pos:start="151:14" pos:end="151:14">i</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <literal type="number" pos:start="151:18" pos:end="151:18">0</literal></expr>;</init> <condition pos:start="151:21" pos:end="151:26"><expr pos:start="151:21" pos:end="151:25"><name pos:start="151:21" pos:end="151:21">i</name> <operator pos:start="151:23" pos:end="151:23">&lt;</operator> <literal type="number" pos:start="151:25" pos:end="151:25">6</literal></expr>;</condition> <incr pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:28">i</name><operator pos:start="151:29" pos:end="151:30">++</operator></expr></incr>)</control> <block pos:start="151:33" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:46">

	    <expr_stmt pos:start="153:13" pos:end="153:46"><expr pos:start="153:13" pos:end="153:45"><call pos:start="153:13" pos:end="153:45"><name pos:start="153:13" pos:end="153:29">h263_encode_block</name><argument_list pos:start="153:30" pos:end="153:45">(<argument pos:start="153:31" pos:end="153:31"><expr pos:start="153:31" pos:end="153:31"><name pos:start="153:31" pos:end="153:31">s</name></expr></argument>, <argument pos:start="153:34" pos:end="153:41"><expr pos:start="153:34" pos:end="153:41"><name pos:start="153:34" pos:end="153:41"><name pos:start="153:34" pos:end="153:38">block</name><index pos:start="153:39" pos:end="153:41">[<expr pos:start="153:40" pos:end="153:40"><name pos:start="153:40" pos:end="153:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="153:44" pos:end="153:44"><expr pos:start="153:44" pos:end="153:44"><name pos:start="153:44" pos:end="153:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
