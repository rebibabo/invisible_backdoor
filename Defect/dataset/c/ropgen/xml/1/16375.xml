<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16375.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">lag_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:72">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:71"><decl pos:start="3:57" pos:end="3:71"><type pos:start="3:57" pos:end="3:71"><name pos:start="3:57" pos:end="3:64">AVPacket</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="343:1">{<block_content pos:start="7:5" pos:end="341:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">LagarithContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:22">l</name> <init pos:start="11:24" pos:end="11:41">= <expr pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:41"><name pos:start="11:26" pos:end="11:30">avctx</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier><specifier pos:start="13:14" pos:end="13:18">const</specifier></type> <name pos:start="13:20" pos:end="13:20">p</name> <init pos:start="13:22" pos:end="13:34">= <expr pos:start="13:24" pos:end="13:34"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:34"><name pos:start="13:25" pos:end="13:25">l</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:34">picture</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:21">frametype</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:57"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:22">offset_gu</name> <init pos:start="17:24" pos:end="17:26">= <expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr></init></decl>, <decl pos:start="17:29" pos:end="17:41"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:29" pos:end="17:37">offset_bv</name> <init pos:start="17:39" pos:end="17:41">= <expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">0</literal></expr></init></decl>, <decl pos:start="17:44" pos:end="17:56"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:44" pos:end="17:52">offset_ry</name> <init pos:start="17:54" pos:end="17:56">= <expr pos:start="17:56" pos:end="17:56"><literal type="number" pos:start="17:56" pos:end="17:56">9</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:20"><name pos:start="19:14" pos:end="19:17">offs</name><index pos:start="19:18" pos:end="19:20">[<expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:20"><name pos:start="21:14" pos:end="21:17">srcs</name><index pos:start="21:18" pos:end="21:20">[<expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">4</literal></expr>]</index></name></decl>, <decl pos:start="21:23" pos:end="21:26"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:26">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">j</name></decl>, <decl pos:start="23:15" pos:end="23:24"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:20">planes</name> <init pos:start="23:22" pos:end="23:24">= <expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">3</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="27:5" pos:end="27:28"><decl pos:start="27:5" pos:end="27:27"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">AVFrame</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:20">picture</name> <init pos:start="27:22" pos:end="27:27">= <expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="33:40"><if pos:start="31:5" pos:end="33:40">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:9">p</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">data</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:40"><block_content pos:start="33:9" pos:end="33:40">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:29">release_buffer</name></name><argument_list pos:start="33:30" pos:end="33:39">(<argument pos:start="33:31" pos:end="33:35"><expr pos:start="33:31" pos:end="33:35"><name pos:start="33:31" pos:end="33:35">avctx</name></expr></argument>, <argument pos:start="33:38" pos:end="33:38"><expr pos:start="33:38" pos:end="33:38"><name pos:start="33:38" pos:end="33:38">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">p</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">reference</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:16"><name pos:start="39:5" pos:end="39:5">p</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:16">key_frame</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:13">frametype</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:19">buf</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:13">offset_gu</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:23">AV_RL32</name><argument_list pos:start="47:24" pos:end="47:32">(<argument pos:start="47:25" pos:end="47:31"><expr pos:start="47:25" pos:end="47:31"><name pos:start="47:25" pos:end="47:27">buf</name> <operator pos:start="47:29" pos:end="47:29">+</operator> <literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:13">offset_bv</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:23">AV_RL32</name><argument_list pos:start="49:24" pos:end="49:32">(<argument pos:start="49:25" pos:end="49:31"><expr pos:start="49:25" pos:end="49:31"><name pos:start="49:25" pos:end="49:27">buf</name> <operator pos:start="49:29" pos:end="49:29">+</operator> <literal type="number" pos:start="49:31" pos:end="49:31">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="53:5" pos:end="331:5">switch <condition pos:start="53:12" pos:end="53:22">(<expr pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:21">frametype</name></expr>)</condition> <block pos:start="53:24" pos:end="331:5">{<block_content pos:start="55:5" pos:end="329:18">

    <case pos:start="55:5" pos:end="55:26">case <expr pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:25">FRAME_SOLID_RGBA</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:13">avctx</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:22">pix_fmt</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:38">PIX_FMT_RGB32</name></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:44">(<expr pos:start="61:13" pos:end="61:43"><call pos:start="61:13" pos:end="61:39"><name pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:17">avctx</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">get_buffer</name></name><argument_list pos:start="61:30" pos:end="61:39">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">avctx</name></expr></argument>, <argument pos:start="61:38" pos:end="61:38"><expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="61:41" pos:end="61:41">&lt;</operator> <literal type="number" pos:start="61:43" pos:end="61:43">0</literal></expr>)</condition> <block pos:start="61:46" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:22">

            <expr_stmt pos:start="63:13" pos:end="63:65"><expr pos:start="63:13" pos:end="63:64"><call pos:start="63:13" pos:end="63:64"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:64">(<argument pos:start="63:20" pos:end="63:24"><expr pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:24">avctx</name></expr></argument>, <argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:41" pos:end="63:63"><expr pos:start="63:41" pos:end="63:63"><literal type="string" pos:start="63:41" pos:end="63:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:22">return <expr pos:start="65:20" pos:end="65:21"><operator pos:start="65:20" pos:end="65:20">-</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:11">dst</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:24"><name pos:start="71:15" pos:end="71:15">p</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:21">data</name><index pos:start="71:22" pos:end="71:24">[<expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="73:9" pos:end="81:9">for <control pos:start="73:13" pos:end="73:43">(<init pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:18"><name pos:start="73:14" pos:end="73:14">j</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <literal type="number" pos:start="73:18" pos:end="73:18">0</literal></expr>;</init> <condition pos:start="73:21" pos:end="73:38"><expr pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:21">j</name> <operator pos:start="73:23" pos:end="73:23">&lt;</operator> <name pos:start="73:25" pos:end="73:37"><name pos:start="73:25" pos:end="73:29">avctx</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:37">height</name></name></expr>;</condition> <incr pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:40">j</name><operator pos:start="73:41" pos:end="73:42">++</operator></expr></incr>)</control> <block pos:start="73:45" pos:end="81:9">{<block_content pos:start="75:13" pos:end="79:34">

            <for pos:start="75:13" pos:end="77:48">for <control pos:start="75:17" pos:end="75:46">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">i</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:41"><expr pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:25">i</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:33">avctx</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:40">width</name></name></expr>;</condition> <incr pos:start="75:43" pos:end="75:45"><expr pos:start="75:43" pos:end="75:45"><name pos:start="75:43" pos:end="75:43">i</name><operator pos:start="75:44" pos:end="75:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:17" pos:end="77:48"><block_content pos:start="77:17" pos:end="77:48">

                <expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><call pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:23">AV_WN32</name><argument_list pos:start="77:24" pos:end="77:47">(<argument pos:start="77:25" pos:end="77:35"><expr pos:start="77:25" pos:end="77:35"><name pos:start="77:25" pos:end="77:27">dst</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:31">i</name> <operator pos:start="77:33" pos:end="77:33">*</operator> <literal type="number" pos:start="77:35" pos:end="77:35">4</literal></expr></argument>, <argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:46">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="79:13" pos:end="79:34"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:15">dst</name> <operator pos:start="79:17" pos:end="79:18">+=</operator> <name pos:start="79:20" pos:end="79:33"><name pos:start="79:20" pos:end="79:20">p</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">linesize</name><index pos:start="79:31" pos:end="79:33">[<expr pos:start="79:32" pos:end="79:32"><literal type="number" pos:start="79:32" pos:end="79:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:26">case <expr pos:start="85:10" pos:end="85:25"><name pos:start="85:10" pos:end="85:25">FRAME_ARITH_RGBA</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:22">pix_fmt</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:38">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:19"><expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:14">planes</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:23"><expr pos:start="91:9" pos:end="91:22"><name pos:start="91:9" pos:end="91:17">offset_ry</name> <operator pos:start="91:19" pos:end="91:20">+=</operator> <literal type="number" pos:start="91:22" pos:end="91:22">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:12">offs</name><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">3</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:34"><name pos:start="93:19" pos:end="93:25">AV_RL32</name><argument_list pos:start="93:26" pos:end="93:34">(<argument pos:start="93:27" pos:end="93:33"><expr pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:29">buf</name> <operator pos:start="93:31" pos:end="93:31">+</operator> <literal type="number" pos:start="93:33" pos:end="93:33">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="95:5" pos:end="95:27">case <expr pos:start="95:10" pos:end="95:26"><name pos:start="95:10" pos:end="95:26">FRAME_ARITH_RGB24</name></expr>:</case>

    <case pos:start="97:5" pos:end="97:23">case <expr pos:start="97:10" pos:end="97:22"><name pos:start="97:10" pos:end="97:22">FRAME_U_RGB24</name></expr>:</case>

        <if_stmt pos:start="99:9" pos:end="101:43"><if pos:start="99:9" pos:end="101:43">if <condition pos:start="99:12" pos:end="99:73">(<expr pos:start="99:13" pos:end="99:72"><name pos:start="99:13" pos:end="99:21">frametype</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <name pos:start="99:26" pos:end="99:42">FRAME_ARITH_RGB24</name> <operator pos:start="99:44" pos:end="99:45">||</operator> <name pos:start="99:47" pos:end="99:55">frametype</name> <operator pos:start="99:57" pos:end="99:58">==</operator> <name pos:start="99:60" pos:end="99:72">FRAME_U_RGB24</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:43"><block_content pos:start="101:13" pos:end="101:43">

            <expr_stmt pos:start="101:13" pos:end="101:43"><expr pos:start="101:13" pos:end="101:42"><name pos:start="101:13" pos:end="101:26"><name pos:start="101:13" pos:end="101:17">avctx</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:26">pix_fmt</name></name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:42">PIX_FMT_RGB24</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:44">(<expr pos:start="105:13" pos:end="105:43"><call pos:start="105:13" pos:end="105:39"><name pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:17">avctx</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:29">get_buffer</name></name><argument_list pos:start="105:30" pos:end="105:39">(<argument pos:start="105:31" pos:end="105:35"><expr pos:start="105:31" pos:end="105:35"><name pos:start="105:31" pos:end="105:35">avctx</name></expr></argument>, <argument pos:start="105:38" pos:end="105:38"><expr pos:start="105:38" pos:end="105:38"><name pos:start="105:38" pos:end="105:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="105:41" pos:end="105:41">&lt;</operator> <literal type="number" pos:start="105:43" pos:end="105:43">0</literal></expr>)</condition> <block pos:start="105:46" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:22">

            <expr_stmt pos:start="107:13" pos:end="107:65"><expr pos:start="107:13" pos:end="107:64"><call pos:start="107:13" pos:end="107:64"><name pos:start="107:13" pos:end="107:18">av_log</name><argument_list pos:start="107:19" pos:end="107:64">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">avctx</name></expr></argument>, <argument pos:start="107:27" pos:end="107:38"><expr pos:start="107:27" pos:end="107:38"><name pos:start="107:27" pos:end="107:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:41" pos:end="107:63"><expr pos:start="107:41" pos:end="107:63"><literal type="string" pos:start="107:41" pos:end="107:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:22">return <expr pos:start="109:20" pos:end="109:21"><operator pos:start="109:20" pos:end="109:20">-</operator><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:28"><expr pos:start="115:9" pos:end="115:27"><name pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:12">offs</name><index pos:start="115:13" pos:end="115:15">[<expr pos:start="115:14" pos:end="115:14"><literal type="number" pos:start="115:14" pos:end="115:14">0</literal></expr>]</index></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <name pos:start="115:19" pos:end="115:27">offset_bv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:15"><name pos:start="117:9" pos:end="117:12">offs</name><index pos:start="117:13" pos:end="117:15">[<expr pos:start="117:14" pos:end="117:14"><literal type="number" pos:start="117:14" pos:end="117:14">1</literal></expr>]</index></name> <operator pos:start="117:17" pos:end="117:17">=</operator> <name pos:start="117:19" pos:end="117:27">offset_gu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:28"><expr pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:15"><name pos:start="119:9" pos:end="119:12">offs</name><index pos:start="119:13" pos:end="119:15">[<expr pos:start="119:14" pos:end="119:14"><literal type="number" pos:start="119:14" pos:end="119:14">2</literal></expr>]</index></name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:27">offset_ry</name></expr>;</expr_stmt>



        <if_stmt pos:start="123:9" pos:end="137:9"><if pos:start="123:9" pos:end="137:9">if <condition pos:start="123:12" pos:end="123:27">(<expr pos:start="123:13" pos:end="123:26"><operator pos:start="123:13" pos:end="123:13">!</operator><name pos:start="123:14" pos:end="123:26"><name pos:start="123:14" pos:end="123:14">l</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:26">rgb_planes</name></name></expr>)</condition> <block pos:start="123:29" pos:end="137:9">{<block_content pos:start="125:13" pos:end="135:13">

            <expr_stmt pos:start="125:13" pos:end="125:54"><expr pos:start="125:13" pos:end="125:53"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:13">l</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:25">rgb_stride</name></name> <operator pos:start="125:27" pos:end="125:27">=</operator> <call pos:start="125:29" pos:end="125:53"><name pos:start="125:29" pos:end="125:35">FFALIGN</name><argument_list pos:start="125:36" pos:end="125:53">(<argument pos:start="125:37" pos:end="125:48"><expr pos:start="125:37" pos:end="125:48"><name pos:start="125:37" pos:end="125:48"><name pos:start="125:37" pos:end="125:41">avctx</name><operator pos:start="125:42" pos:end="125:43">-&gt;</operator><name pos:start="125:44" pos:end="125:48">width</name></name></expr></argument>, <argument pos:start="125:51" pos:end="125:52"><expr pos:start="125:51" pos:end="125:52"><literal type="number" pos:start="125:51" pos:end="125:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:78"><expr pos:start="127:13" pos:end="127:77"><name pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:13">l</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:25">rgb_planes</name></name> <operator pos:start="127:27" pos:end="127:27">=</operator> <call pos:start="127:29" pos:end="127:77"><name pos:start="127:29" pos:end="127:37">av_malloc</name><argument_list pos:start="127:38" pos:end="127:77">(<argument pos:start="127:39" pos:end="127:76"><expr pos:start="127:39" pos:end="127:76"><name pos:start="127:39" pos:end="127:51"><name pos:start="127:39" pos:end="127:39">l</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:51">rgb_stride</name></name> <operator pos:start="127:53" pos:end="127:53">*</operator> <name pos:start="127:55" pos:end="127:67"><name pos:start="127:55" pos:end="127:59">avctx</name><operator pos:start="127:60" pos:end="127:61">-&gt;</operator><name pos:start="127:62" pos:end="127:67">height</name></name> <operator pos:start="127:69" pos:end="127:69">*</operator> <name pos:start="127:71" pos:end="127:76">planes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:31">(<expr pos:start="129:17" pos:end="129:30"><operator pos:start="129:17" pos:end="129:17">!</operator><name pos:start="129:18" pos:end="129:30"><name pos:start="129:18" pos:end="129:18">l</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:30">rgb_planes</name></name></expr>)</condition> <block pos:start="129:33" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:39">

                <expr_stmt pos:start="131:17" pos:end="131:82"><expr pos:start="131:17" pos:end="131:81"><call pos:start="131:17" pos:end="131:81"><name pos:start="131:17" pos:end="131:22">av_log</name><argument_list pos:start="131:23" pos:end="131:81">(<argument pos:start="131:24" pos:end="131:28"><expr pos:start="131:24" pos:end="131:28"><name pos:start="131:24" pos:end="131:28">avctx</name></expr></argument>, <argument pos:start="131:31" pos:end="131:42"><expr pos:start="131:31" pos:end="131:42"><name pos:start="131:31" pos:end="131:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:45" pos:end="131:80"><expr pos:start="131:45" pos:end="131:80"><literal type="string" pos:start="131:45" pos:end="131:80">"cannot allocate temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="133:17" pos:end="133:39">return <expr pos:start="133:24" pos:end="133:38"><call pos:start="133:24" pos:end="133:38"><name pos:start="133:24" pos:end="133:30">AVERROR</name><argument_list pos:start="133:31" pos:end="133:38">(<argument pos:start="133:32" pos:end="133:37"><expr pos:start="133:32" pos:end="133:37"><name pos:start="133:32" pos:end="133:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="139:9" pos:end="141:94">for <control pos:start="139:13" pos:end="139:36">(<init pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:18"><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">0</literal></expr>;</init> <condition pos:start="139:21" pos:end="139:31"><expr pos:start="139:21" pos:end="139:30"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:23">&lt;</operator> <name pos:start="139:25" pos:end="139:30">planes</name></expr>;</condition> <incr pos:start="139:33" pos:end="139:35"><expr pos:start="139:33" pos:end="139:35"><name pos:start="139:33" pos:end="139:33">i</name><operator pos:start="139:34" pos:end="139:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:13" pos:end="141:94"><block_content pos:start="141:13" pos:end="141:94">

            <expr_stmt pos:start="141:13" pos:end="141:94"><expr pos:start="141:13" pos:end="141:93"><name pos:start="141:13" pos:end="141:19"><name pos:start="141:13" pos:end="141:16">srcs</name><index pos:start="141:17" pos:end="141:19">[<expr pos:start="141:18" pos:end="141:18"><name pos:start="141:18" pos:end="141:18">i</name></expr>]</index></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <name pos:start="141:23" pos:end="141:35"><name pos:start="141:23" pos:end="141:23">l</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:35">rgb_planes</name></name> <operator pos:start="141:37" pos:end="141:37">+</operator> <operator pos:start="141:39" pos:end="141:39">(</operator><name pos:start="141:40" pos:end="141:40">i</name> <operator pos:start="141:42" pos:end="141:42">+</operator> <literal type="number" pos:start="141:44" pos:end="141:44">1</literal><operator pos:start="141:45" pos:end="141:45">)</operator> <operator pos:start="141:47" pos:end="141:47">*</operator> <name pos:start="141:49" pos:end="141:61"><name pos:start="141:49" pos:end="141:49">l</name><operator pos:start="141:50" pos:end="141:51">-&gt;</operator><name pos:start="141:52" pos:end="141:61">rgb_stride</name></name> <operator pos:start="141:63" pos:end="141:63">*</operator> <name pos:start="141:65" pos:end="141:77"><name pos:start="141:65" pos:end="141:69">avctx</name><operator pos:start="141:70" pos:end="141:71">-&gt;</operator><name pos:start="141:72" pos:end="141:77">height</name></name> <operator pos:start="141:79" pos:end="141:79">-</operator> <name pos:start="141:81" pos:end="141:93"><name pos:start="141:81" pos:end="141:81">l</name><operator pos:start="141:82" pos:end="141:83">-&gt;</operator><name pos:start="141:84" pos:end="141:93">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        <if_stmt pos:start="143:9" pos:end="157:9"><if pos:start="143:9" pos:end="157:9">if <condition pos:start="143:12" pos:end="149:49">(<expr pos:start="143:13" pos:end="149:48"><name pos:start="143:13" pos:end="143:21">offset_ry</name> <operator pos:start="143:23" pos:end="143:24">&gt;=</operator> <name pos:start="143:26" pos:end="143:33">buf_size</name> <operator pos:start="143:35" pos:end="143:36">||</operator>

            <name pos:start="145:13" pos:end="145:21">offset_gu</name> <operator pos:start="145:23" pos:end="145:24">&gt;=</operator> <name pos:start="145:26" pos:end="145:33">buf_size</name> <operator pos:start="145:35" pos:end="145:36">||</operator>

            <name pos:start="147:13" pos:end="147:21">offset_bv</name> <operator pos:start="147:23" pos:end="147:24">&gt;=</operator> <name pos:start="147:26" pos:end="147:33">buf_size</name> <operator pos:start="147:35" pos:end="147:36">||</operator>

            <operator pos:start="149:13" pos:end="149:13">(</operator><name pos:start="149:14" pos:end="149:19">planes</name> <operator pos:start="149:21" pos:end="149:22">==</operator> <literal type="number" pos:start="149:24" pos:end="149:24">4</literal> <operator pos:start="149:26" pos:end="149:27">&amp;&amp;</operator> <name pos:start="149:29" pos:end="149:35"><name pos:start="149:29" pos:end="149:32">offs</name><index pos:start="149:33" pos:end="149:35">[<expr pos:start="149:34" pos:end="149:34"><literal type="number" pos:start="149:34" pos:end="149:34">3</literal></expr>]</index></name> <operator pos:start="149:37" pos:end="149:38">&gt;=</operator> <name pos:start="149:40" pos:end="149:47">buf_size</name><operator pos:start="149:48" pos:end="149:48">)</operator></expr>)</condition> <block pos:start="149:51" pos:end="157:9">{<block_content pos:start="151:13" pos:end="155:39">

            <expr_stmt pos:start="151:13" pos:end="153:47"><expr pos:start="151:13" pos:end="153:46"><call pos:start="151:13" pos:end="153:46"><name pos:start="151:13" pos:end="151:18">av_log</name><argument_list pos:start="151:19" pos:end="153:46">(<argument pos:start="151:20" pos:end="151:24"><expr pos:start="151:20" pos:end="151:24"><name pos:start="151:20" pos:end="151:24">avctx</name></expr></argument>, <argument pos:start="151:27" pos:end="151:38"><expr pos:start="151:27" pos:end="151:38"><name pos:start="151:27" pos:end="151:38">AV_LOG_ERROR</name></expr></argument>,

                    <argument pos:start="153:21" pos:end="153:45"><expr pos:start="153:21" pos:end="153:45"><literal type="string" pos:start="153:21" pos:end="153:45">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="155:13" pos:end="155:39">return <expr pos:start="155:20" pos:end="155:38"><name pos:start="155:20" pos:end="155:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="159:9" pos:end="167:55">for <control pos:start="159:13" pos:end="159:36">(<init pos:start="159:14" pos:end="159:19"><expr pos:start="159:14" pos:end="159:18"><name pos:start="159:14" pos:end="159:14">i</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">0</literal></expr>;</init> <condition pos:start="159:21" pos:end="159:31"><expr pos:start="159:21" pos:end="159:30"><name pos:start="159:21" pos:end="159:21">i</name> <operator pos:start="159:23" pos:end="159:23">&lt;</operator> <name pos:start="159:25" pos:end="159:30">planes</name></expr>;</condition> <incr pos:start="159:33" pos:end="159:35"><expr pos:start="159:33" pos:end="159:35"><name pos:start="159:33" pos:end="159:33">i</name><operator pos:start="159:34" pos:end="159:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:13" pos:end="167:55"><block_content pos:start="161:13" pos:end="167:55">

            <expr_stmt pos:start="161:13" pos:end="167:55"><expr pos:start="161:13" pos:end="167:54"><call pos:start="161:13" pos:end="167:54"><name pos:start="161:13" pos:end="161:34">lag_decode_arith_plane</name><argument_list pos:start="161:35" pos:end="167:54">(<argument pos:start="161:36" pos:end="161:36"><expr pos:start="161:36" pos:end="161:36"><name pos:start="161:36" pos:end="161:36">l</name></expr></argument>, <argument pos:start="161:39" pos:end="161:45"><expr pos:start="161:39" pos:end="161:45"><name pos:start="161:39" pos:end="161:45"><name pos:start="161:39" pos:end="161:42">srcs</name><index pos:start="161:43" pos:end="161:45">[<expr pos:start="161:44" pos:end="161:44"><name pos:start="161:44" pos:end="161:44">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="163:36" pos:end="163:47"><expr pos:start="163:36" pos:end="163:47"><name pos:start="163:36" pos:end="163:47"><name pos:start="163:36" pos:end="163:40">avctx</name><operator pos:start="163:41" pos:end="163:42">-&gt;</operator><name pos:start="163:43" pos:end="163:47">width</name></name></expr></argument>, <argument pos:start="163:50" pos:end="163:62"><expr pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:62"><name pos:start="163:50" pos:end="163:54">avctx</name><operator pos:start="163:55" pos:end="163:56">-&gt;</operator><name pos:start="163:57" pos:end="163:62">height</name></name></expr></argument>,

                                   <argument pos:start="165:36" pos:end="165:49"><expr pos:start="165:36" pos:end="165:49"><operator pos:start="165:36" pos:end="165:36">-</operator><name pos:start="165:37" pos:end="165:49"><name pos:start="165:37" pos:end="165:37">l</name><operator pos:start="165:38" pos:end="165:39">-&gt;</operator><name pos:start="165:40" pos:end="165:49">rgb_stride</name></name></expr></argument>, <argument pos:start="165:52" pos:end="165:64"><expr pos:start="165:52" pos:end="165:64"><name pos:start="165:52" pos:end="165:54">buf</name> <operator pos:start="165:56" pos:end="165:56">+</operator> <name pos:start="165:58" pos:end="165:64"><name pos:start="165:58" pos:end="165:61">offs</name><index pos:start="165:62" pos:end="165:64">[<expr pos:start="165:63" pos:end="165:63"><name pos:start="165:63" pos:end="165:63">i</name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="167:36" pos:end="167:53"><expr pos:start="167:36" pos:end="167:53"><name pos:start="167:36" pos:end="167:43">buf_size</name> <operator pos:start="167:45" pos:end="167:45">-</operator> <name pos:start="167:47" pos:end="167:53"><name pos:start="167:47" pos:end="167:50">offs</name><index pos:start="167:51" pos:end="167:53">[<expr pos:start="167:52" pos:end="167:52"><name pos:start="167:52" pos:end="167:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="169:9" pos:end="169:25"><expr pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:11">dst</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <name pos:start="169:15" pos:end="169:24"><name pos:start="169:15" pos:end="169:15">p</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:21">data</name><index pos:start="169:22" pos:end="169:24">[<expr pos:start="169:23" pos:end="169:23"><literal type="number" pos:start="169:23" pos:end="169:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="171:9" pos:end="173:72">for <control pos:start="171:13" pos:end="171:36">(<init pos:start="171:14" pos:end="171:19"><expr pos:start="171:14" pos:end="171:18"><name pos:start="171:14" pos:end="171:14">i</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <literal type="number" pos:start="171:18" pos:end="171:18">0</literal></expr>;</init> <condition pos:start="171:21" pos:end="171:31"><expr pos:start="171:21" pos:end="171:30"><name pos:start="171:21" pos:end="171:21">i</name> <operator pos:start="171:23" pos:end="171:23">&lt;</operator> <name pos:start="171:25" pos:end="171:30">planes</name></expr>;</condition> <incr pos:start="171:33" pos:end="171:35"><expr pos:start="171:33" pos:end="171:35"><name pos:start="171:33" pos:end="171:33">i</name><operator pos:start="171:34" pos:end="171:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="173:13" pos:end="173:72"><block_content pos:start="173:13" pos:end="173:72">

            <expr_stmt pos:start="173:13" pos:end="173:72"><expr pos:start="173:13" pos:end="173:71"><name pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:16">srcs</name><index pos:start="173:17" pos:end="173:19">[<expr pos:start="173:18" pos:end="173:18"><name pos:start="173:18" pos:end="173:18">i</name></expr>]</index></name> <operator pos:start="173:21" pos:end="173:21">=</operator> <name pos:start="173:23" pos:end="173:35"><name pos:start="173:23" pos:end="173:23">l</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:35">rgb_planes</name></name> <operator pos:start="173:37" pos:end="173:37">+</operator> <name pos:start="173:39" pos:end="173:39">i</name> <operator pos:start="173:41" pos:end="173:41">*</operator> <name pos:start="173:43" pos:end="173:55"><name pos:start="173:43" pos:end="173:43">l</name><operator pos:start="173:44" pos:end="173:45">-&gt;</operator><name pos:start="173:46" pos:end="173:55">rgb_stride</name></name> <operator pos:start="173:57" pos:end="173:57">*</operator> <name pos:start="173:59" pos:end="173:71"><name pos:start="173:59" pos:end="173:63">avctx</name><operator pos:start="173:64" pos:end="173:65">-&gt;</operator><name pos:start="173:66" pos:end="173:71">height</name></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="175:9" pos:end="215:9">for <control pos:start="175:13" pos:end="175:43">(<init pos:start="175:14" pos:end="175:19"><expr pos:start="175:14" pos:end="175:18"><name pos:start="175:14" pos:end="175:14">j</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">0</literal></expr>;</init> <condition pos:start="175:21" pos:end="175:38"><expr pos:start="175:21" pos:end="175:37"><name pos:start="175:21" pos:end="175:21">j</name> <operator pos:start="175:23" pos:end="175:23">&lt;</operator> <name pos:start="175:25" pos:end="175:37"><name pos:start="175:25" pos:end="175:29">avctx</name><operator pos:start="175:30" pos:end="175:31">-&gt;</operator><name pos:start="175:32" pos:end="175:37">height</name></name></expr>;</condition> <incr pos:start="175:40" pos:end="175:42"><expr pos:start="175:40" pos:end="175:42"><name pos:start="175:40" pos:end="175:40">j</name><operator pos:start="175:41" pos:end="175:42">++</operator></expr></incr>)</control> <block pos:start="175:45" pos:end="215:9">{<block_content pos:start="177:13" pos:end="213:41">

            <for pos:start="177:13" pos:end="207:13">for <control pos:start="177:17" pos:end="177:46">(<init pos:start="177:18" pos:end="177:23"><expr pos:start="177:18" pos:end="177:22"><name pos:start="177:18" pos:end="177:18">i</name> <operator pos:start="177:20" pos:end="177:20">=</operator> <literal type="number" pos:start="177:22" pos:end="177:22">0</literal></expr>;</init> <condition pos:start="177:25" pos:end="177:41"><expr pos:start="177:25" pos:end="177:40"><name pos:start="177:25" pos:end="177:25">i</name> <operator pos:start="177:27" pos:end="177:27">&lt;</operator> <name pos:start="177:29" pos:end="177:40"><name pos:start="177:29" pos:end="177:33">avctx</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:40">width</name></name></expr>;</condition> <incr pos:start="177:43" pos:end="177:45"><expr pos:start="177:43" pos:end="177:45"><name pos:start="177:43" pos:end="177:43">i</name><operator pos:start="177:44" pos:end="177:45">++</operator></expr></incr>)</control> <block pos:start="177:48" pos:end="207:13">{<block_content pos:start="179:17" pos:end="205:17">

                <decl_stmt pos:start="179:17" pos:end="179:35"><decl pos:start="179:17" pos:end="179:25"><type pos:start="179:17" pos:end="179:23"><name pos:start="179:17" pos:end="179:23">uint8_t</name></type> <name pos:start="179:25" pos:end="179:25">r</name></decl>, <decl pos:start="179:28" pos:end="179:28"><type ref="prev" pos:start="179:17" pos:end="179:23"/><name pos:start="179:28" pos:end="179:28">g</name></decl>, <decl pos:start="179:31" pos:end="179:31"><type ref="prev" pos:start="179:17" pos:end="179:23"/><name pos:start="179:31" pos:end="179:31">b</name></decl>, <decl pos:start="179:34" pos:end="179:34"><type ref="prev" pos:start="179:17" pos:end="179:23"/><name pos:start="179:34" pos:end="179:34">a</name></decl>;</decl_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:31"><expr pos:start="181:17" pos:end="181:30"><name pos:start="181:17" pos:end="181:17">r</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:30"><name pos:start="181:21" pos:end="181:24">srcs</name><index pos:start="181:25" pos:end="181:27">[<expr pos:start="181:26" pos:end="181:26"><literal type="number" pos:start="181:26" pos:end="181:26">0</literal></expr>]</index><index pos:start="181:28" pos:end="181:30">[<expr pos:start="181:29" pos:end="181:29"><name pos:start="181:29" pos:end="181:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:31"><expr pos:start="183:17" pos:end="183:30"><name pos:start="183:17" pos:end="183:17">g</name> <operator pos:start="183:19" pos:end="183:19">=</operator> <name pos:start="183:21" pos:end="183:30"><name pos:start="183:21" pos:end="183:24">srcs</name><index pos:start="183:25" pos:end="183:27">[<expr pos:start="183:26" pos:end="183:26"><literal type="number" pos:start="183:26" pos:end="183:26">1</literal></expr>]</index><index pos:start="183:28" pos:end="183:30">[<expr pos:start="183:29" pos:end="183:29"><name pos:start="183:29" pos:end="183:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:31"><expr pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:17">b</name> <operator pos:start="185:19" pos:end="185:19">=</operator> <name pos:start="185:21" pos:end="185:30"><name pos:start="185:21" pos:end="185:24">srcs</name><index pos:start="185:25" pos:end="185:27">[<expr pos:start="185:26" pos:end="185:26"><literal type="number" pos:start="185:26" pos:end="185:26">2</literal></expr>]</index><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><name pos:start="185:29" pos:end="185:29">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:23"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:17">r</name> <operator pos:start="187:19" pos:end="187:20">+=</operator> <name pos:start="187:22" pos:end="187:22">g</name></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:23"><expr pos:start="189:17" pos:end="189:22"><name pos:start="189:17" pos:end="189:17">b</name> <operator pos:start="189:19" pos:end="189:20">+=</operator> <name pos:start="189:22" pos:end="189:22">g</name></expr>;</expr_stmt>

                <if_stmt pos:start="191:17" pos:end="205:17"><if pos:start="191:17" pos:end="197:17">if <condition pos:start="191:20" pos:end="191:50">(<expr pos:start="191:21" pos:end="191:49"><name pos:start="191:21" pos:end="191:29">frametype</name> <operator pos:start="191:31" pos:end="191:32">==</operator> <name pos:start="191:34" pos:end="191:49">FRAME_ARITH_RGBA</name></expr>)</condition> <block pos:start="191:52" pos:end="197:17">{<block_content pos:start="193:21" pos:end="195:62">

                    <expr_stmt pos:start="193:21" pos:end="193:35"><expr pos:start="193:21" pos:end="193:34"><name pos:start="193:21" pos:end="193:21">a</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <name pos:start="193:25" pos:end="193:34"><name pos:start="193:25" pos:end="193:28">srcs</name><index pos:start="193:29" pos:end="193:31">[<expr pos:start="193:30" pos:end="193:30"><literal type="number" pos:start="193:30" pos:end="193:30">3</literal></expr>]</index><index pos:start="193:32" pos:end="193:34">[<expr pos:start="193:33" pos:end="193:33"><name pos:start="193:33" pos:end="193:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:62"><expr pos:start="195:21" pos:end="195:61"><call pos:start="195:21" pos:end="195:61"><name pos:start="195:21" pos:end="195:27">AV_WN32</name><argument_list pos:start="195:28" pos:end="195:61">(<argument pos:start="195:29" pos:end="195:39"><expr pos:start="195:29" pos:end="195:39"><name pos:start="195:29" pos:end="195:31">dst</name> <operator pos:start="195:33" pos:end="195:33">+</operator> <name pos:start="195:35" pos:end="195:35">i</name> <operator pos:start="195:37" pos:end="195:37">*</operator> <literal type="number" pos:start="195:39" pos:end="195:39">4</literal></expr></argument>, <argument pos:start="195:42" pos:end="195:60"><expr pos:start="195:42" pos:end="195:60"><call pos:start="195:42" pos:end="195:60"><name pos:start="195:42" pos:end="195:48">MKBETAG</name><argument_list pos:start="195:49" pos:end="195:60">(<argument pos:start="195:50" pos:end="195:50"><expr pos:start="195:50" pos:end="195:50"><name pos:start="195:50" pos:end="195:50">a</name></expr></argument>, <argument pos:start="195:53" pos:end="195:53"><expr pos:start="195:53" pos:end="195:53"><name pos:start="195:53" pos:end="195:53">r</name></expr></argument>, <argument pos:start="195:56" pos:end="195:56"><expr pos:start="195:56" pos:end="195:56"><name pos:start="195:56" pos:end="195:56">g</name></expr></argument>, <argument pos:start="195:59" pos:end="195:59"><expr pos:start="195:59" pos:end="195:59"><name pos:start="195:59" pos:end="195:59">b</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="197:19" pos:end="205:17">else <block pos:start="197:24" pos:end="205:17">{<block_content pos:start="199:21" pos:end="203:39">

                    <expr_stmt pos:start="199:21" pos:end="199:39"><expr pos:start="199:21" pos:end="199:38"><name pos:start="199:21" pos:end="199:34"><name pos:start="199:21" pos:end="199:23">dst</name><index pos:start="199:24" pos:end="199:34">[<expr pos:start="199:25" pos:end="199:33"><name pos:start="199:25" pos:end="199:25">i</name> <operator pos:start="199:27" pos:end="199:27">*</operator> <literal type="number" pos:start="199:29" pos:end="199:29">3</literal> <operator pos:start="199:31" pos:end="199:31">+</operator> <literal type="number" pos:start="199:33" pos:end="199:33">0</literal></expr>]</index></name> <operator pos:start="199:36" pos:end="199:36">=</operator> <name pos:start="199:38" pos:end="199:38">r</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:39"><expr pos:start="201:21" pos:end="201:38"><name pos:start="201:21" pos:end="201:34"><name pos:start="201:21" pos:end="201:23">dst</name><index pos:start="201:24" pos:end="201:34">[<expr pos:start="201:25" pos:end="201:33"><name pos:start="201:25" pos:end="201:25">i</name> <operator pos:start="201:27" pos:end="201:27">*</operator> <literal type="number" pos:start="201:29" pos:end="201:29">3</literal> <operator pos:start="201:31" pos:end="201:31">+</operator> <literal type="number" pos:start="201:33" pos:end="201:33">1</literal></expr>]</index></name> <operator pos:start="201:36" pos:end="201:36">=</operator> <name pos:start="201:38" pos:end="201:38">g</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:39"><expr pos:start="203:21" pos:end="203:38"><name pos:start="203:21" pos:end="203:34"><name pos:start="203:21" pos:end="203:23">dst</name><index pos:start="203:24" pos:end="203:34">[<expr pos:start="203:25" pos:end="203:33"><name pos:start="203:25" pos:end="203:25">i</name> <operator pos:start="203:27" pos:end="203:27">*</operator> <literal type="number" pos:start="203:29" pos:end="203:29">3</literal> <operator pos:start="203:31" pos:end="203:31">+</operator> <literal type="number" pos:start="203:33" pos:end="203:33">2</literal></expr>]</index></name> <operator pos:start="203:36" pos:end="203:36">=</operator> <name pos:start="203:38" pos:end="203:38">b</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="209:13" pos:end="209:34"><expr pos:start="209:13" pos:end="209:33"><name pos:start="209:13" pos:end="209:15">dst</name> <operator pos:start="209:17" pos:end="209:18">+=</operator> <name pos:start="209:20" pos:end="209:33"><name pos:start="209:20" pos:end="209:20">p</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:30">linesize</name><index pos:start="209:31" pos:end="209:33">[<expr pos:start="209:32" pos:end="209:32"><literal type="number" pos:start="209:32" pos:end="209:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <for pos:start="211:13" pos:end="213:41">for <control pos:start="211:17" pos:end="211:40">(<init pos:start="211:18" pos:end="211:23"><expr pos:start="211:18" pos:end="211:22"><name pos:start="211:18" pos:end="211:18">i</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <literal type="number" pos:start="211:22" pos:end="211:22">0</literal></expr>;</init> <condition pos:start="211:25" pos:end="211:35"><expr pos:start="211:25" pos:end="211:34"><name pos:start="211:25" pos:end="211:25">i</name> <operator pos:start="211:27" pos:end="211:27">&lt;</operator> <name pos:start="211:29" pos:end="211:34">planes</name></expr>;</condition> <incr pos:start="211:37" pos:end="211:39"><expr pos:start="211:37" pos:end="211:39"><name pos:start="211:37" pos:end="211:37">i</name><operator pos:start="211:38" pos:end="211:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="213:17" pos:end="213:41"><block_content pos:start="213:17" pos:end="213:41">

                <expr_stmt pos:start="213:17" pos:end="213:41"><expr pos:start="213:17" pos:end="213:40"><name pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:20">srcs</name><index pos:start="213:21" pos:end="213:23">[<expr pos:start="213:22" pos:end="213:22"><name pos:start="213:22" pos:end="213:22">i</name></expr>]</index></name> <operator pos:start="213:25" pos:end="213:26">+=</operator> <name pos:start="213:28" pos:end="213:40"><name pos:start="213:28" pos:end="213:28">l</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:40">rgb_stride</name></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <break pos:start="217:9" pos:end="217:14">break;</break>

    <case pos:start="219:5" pos:end="219:26">case <expr pos:start="219:10" pos:end="219:25"><name pos:start="219:10" pos:end="219:25">FRAME_ARITH_YUY2</name></expr>:</case>

        <expr_stmt pos:start="221:9" pos:end="221:41"><expr pos:start="221:9" pos:end="221:40"><name pos:start="221:9" pos:end="221:22"><name pos:start="221:9" pos:end="221:13">avctx</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:22">pix_fmt</name></name> <operator pos:start="221:24" pos:end="221:24">=</operator> <name pos:start="221:26" pos:end="221:40">PIX_FMT_YUV422P</name></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="231:9"><if pos:start="225:9" pos:end="231:9">if <condition pos:start="225:12" pos:end="225:44">(<expr pos:start="225:13" pos:end="225:43"><call pos:start="225:13" pos:end="225:39"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:17">avctx</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:29">get_buffer</name></name><argument_list pos:start="225:30" pos:end="225:39">(<argument pos:start="225:31" pos:end="225:35"><expr pos:start="225:31" pos:end="225:35"><name pos:start="225:31" pos:end="225:35">avctx</name></expr></argument>, <argument pos:start="225:38" pos:end="225:38"><expr pos:start="225:38" pos:end="225:38"><name pos:start="225:38" pos:end="225:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="225:41" pos:end="225:41">&lt;</operator> <literal type="number" pos:start="225:43" pos:end="225:43">0</literal></expr>)</condition> <block pos:start="225:46" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:22">

            <expr_stmt pos:start="227:13" pos:end="227:65"><expr pos:start="227:13" pos:end="227:64"><call pos:start="227:13" pos:end="227:64"><name pos:start="227:13" pos:end="227:18">av_log</name><argument_list pos:start="227:19" pos:end="227:64">(<argument pos:start="227:20" pos:end="227:24"><expr pos:start="227:20" pos:end="227:24"><name pos:start="227:20" pos:end="227:24">avctx</name></expr></argument>, <argument pos:start="227:27" pos:end="227:38"><expr pos:start="227:27" pos:end="227:38"><name pos:start="227:27" pos:end="227:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="227:41" pos:end="227:63"><expr pos:start="227:41" pos:end="227:63"><literal type="string" pos:start="227:41" pos:end="227:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="229:13" pos:end="229:22">return <expr pos:start="229:20" pos:end="229:21"><operator pos:start="229:20" pos:end="229:20">-</operator><literal type="number" pos:start="229:21" pos:end="229:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="235:9" pos:end="247:9"><if pos:start="235:9" pos:end="247:9">if <condition pos:start="235:12" pos:end="239:34">(<expr pos:start="235:13" pos:end="239:33"><name pos:start="235:13" pos:end="235:21">offset_ry</name> <operator pos:start="235:23" pos:end="235:24">&gt;=</operator> <name pos:start="235:26" pos:end="235:33">buf_size</name> <operator pos:start="235:35" pos:end="235:36">||</operator>

            <name pos:start="237:13" pos:end="237:21">offset_gu</name> <operator pos:start="237:23" pos:end="237:24">&gt;=</operator> <name pos:start="237:26" pos:end="237:33">buf_size</name> <operator pos:start="237:35" pos:end="237:36">||</operator>

            <name pos:start="239:13" pos:end="239:21">offset_bv</name> <operator pos:start="239:23" pos:end="239:24">&gt;=</operator> <name pos:start="239:26" pos:end="239:33">buf_size</name></expr>)</condition> <block pos:start="239:36" pos:end="247:9">{<block_content pos:start="241:13" pos:end="245:39">

            <expr_stmt pos:start="241:13" pos:end="243:46"><expr pos:start="241:13" pos:end="243:45"><call pos:start="241:13" pos:end="243:45"><name pos:start="241:13" pos:end="241:18">av_log</name><argument_list pos:start="241:19" pos:end="243:45">(<argument pos:start="241:20" pos:end="241:24"><expr pos:start="241:20" pos:end="241:24"><name pos:start="241:20" pos:end="241:24">avctx</name></expr></argument>, <argument pos:start="241:27" pos:end="241:38"><expr pos:start="241:27" pos:end="241:38"><name pos:start="241:27" pos:end="241:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="243:20" pos:end="243:44"><expr pos:start="243:20" pos:end="243:44"><literal type="string" pos:start="243:20" pos:end="243:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="245:13" pos:end="245:39">return <expr pos:start="245:20" pos:end="245:38"><name pos:start="245:20" pos:end="245:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="251:9" pos:end="255:53"><expr pos:start="251:9" pos:end="255:52"><call pos:start="251:9" pos:end="255:52"><name pos:start="251:9" pos:end="251:30">lag_decode_arith_plane</name><argument_list pos:start="251:31" pos:end="255:52">(<argument pos:start="251:32" pos:end="251:32"><expr pos:start="251:32" pos:end="251:32"><name pos:start="251:32" pos:end="251:32">l</name></expr></argument>, <argument pos:start="251:35" pos:end="251:44"><expr pos:start="251:35" pos:end="251:44"><name pos:start="251:35" pos:end="251:44"><name pos:start="251:35" pos:end="251:35">p</name><operator pos:start="251:36" pos:end="251:37">-&gt;</operator><name pos:start="251:38" pos:end="251:41">data</name><index pos:start="251:42" pos:end="251:44">[<expr pos:start="251:43" pos:end="251:43"><literal type="number" pos:start="251:43" pos:end="251:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:47" pos:end="251:58"><expr pos:start="251:47" pos:end="251:58"><name pos:start="251:47" pos:end="251:58"><name pos:start="251:47" pos:end="251:51">avctx</name><operator pos:start="251:52" pos:end="251:53">-&gt;</operator><name pos:start="251:54" pos:end="251:58">width</name></name></expr></argument>, <argument pos:start="251:61" pos:end="251:73"><expr pos:start="251:61" pos:end="251:73"><name pos:start="251:61" pos:end="251:73"><name pos:start="251:61" pos:end="251:65">avctx</name><operator pos:start="251:66" pos:end="251:67">-&gt;</operator><name pos:start="251:68" pos:end="251:73">height</name></name></expr></argument>,

                               <argument pos:start="253:32" pos:end="253:45"><expr pos:start="253:32" pos:end="253:45"><name pos:start="253:32" pos:end="253:45"><name pos:start="253:32" pos:end="253:32">p</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:42">linesize</name><index pos:start="253:43" pos:end="253:45">[<expr pos:start="253:44" pos:end="253:44"><literal type="number" pos:start="253:44" pos:end="253:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:48" pos:end="253:62"><expr pos:start="253:48" pos:end="253:62"><name pos:start="253:48" pos:end="253:50">buf</name> <operator pos:start="253:52" pos:end="253:52">+</operator> <name pos:start="253:54" pos:end="253:62">offset_ry</name></expr></argument>,

                               <argument pos:start="255:32" pos:end="255:51"><expr pos:start="255:32" pos:end="255:51"><name pos:start="255:32" pos:end="255:39">buf_size</name> <operator pos:start="255:41" pos:end="255:41">-</operator> <name pos:start="255:43" pos:end="255:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="261:70"><expr pos:start="257:9" pos:end="261:69"><call pos:start="257:9" pos:end="261:69"><name pos:start="257:9" pos:end="257:30">lag_decode_arith_plane</name><argument_list pos:start="257:31" pos:end="261:69">(<argument pos:start="257:32" pos:end="257:32"><expr pos:start="257:32" pos:end="257:32"><name pos:start="257:32" pos:end="257:32">l</name></expr></argument>, <argument pos:start="257:35" pos:end="257:44"><expr pos:start="257:35" pos:end="257:44"><name pos:start="257:35" pos:end="257:44"><name pos:start="257:35" pos:end="257:35">p</name><operator pos:start="257:36" pos:end="257:37">-&gt;</operator><name pos:start="257:38" pos:end="257:41">data</name><index pos:start="257:42" pos:end="257:44">[<expr pos:start="257:43" pos:end="257:43"><literal type="number" pos:start="257:43" pos:end="257:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="257:47" pos:end="257:62"><expr pos:start="257:47" pos:end="257:62"><name pos:start="257:47" pos:end="257:58"><name pos:start="257:47" pos:end="257:51">avctx</name><operator pos:start="257:52" pos:end="257:53">-&gt;</operator><name pos:start="257:54" pos:end="257:58">width</name></name> <operator pos:start="257:60" pos:end="257:60">/</operator> <literal type="number" pos:start="257:62" pos:end="257:62">2</literal></expr></argument>,

                               <argument pos:start="259:32" pos:end="259:44"><expr pos:start="259:32" pos:end="259:44"><name pos:start="259:32" pos:end="259:44"><name pos:start="259:32" pos:end="259:36">avctx</name><operator pos:start="259:37" pos:end="259:38">-&gt;</operator><name pos:start="259:39" pos:end="259:44">height</name></name></expr></argument>, <argument pos:start="259:47" pos:end="259:60"><expr pos:start="259:47" pos:end="259:60"><name pos:start="259:47" pos:end="259:60"><name pos:start="259:47" pos:end="259:47">p</name><operator pos:start="259:48" pos:end="259:49">-&gt;</operator><name pos:start="259:50" pos:end="259:57">linesize</name><index pos:start="259:58" pos:end="259:60">[<expr pos:start="259:59" pos:end="259:59"><literal type="number" pos:start="259:59" pos:end="259:59">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="261:32" pos:end="261:46"><expr pos:start="261:32" pos:end="261:46"><name pos:start="261:32" pos:end="261:34">buf</name> <operator pos:start="261:36" pos:end="261:36">+</operator> <name pos:start="261:38" pos:end="261:46">offset_gu</name></expr></argument>, <argument pos:start="261:49" pos:end="261:68"><expr pos:start="261:49" pos:end="261:68"><name pos:start="261:49" pos:end="261:56">buf_size</name> <operator pos:start="261:58" pos:end="261:58">-</operator> <name pos:start="261:60" pos:end="261:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="267:70"><expr pos:start="263:9" pos:end="267:69"><call pos:start="263:9" pos:end="267:69"><name pos:start="263:9" pos:end="263:30">lag_decode_arith_plane</name><argument_list pos:start="263:31" pos:end="267:69">(<argument pos:start="263:32" pos:end="263:32"><expr pos:start="263:32" pos:end="263:32"><name pos:start="263:32" pos:end="263:32">l</name></expr></argument>, <argument pos:start="263:35" pos:end="263:44"><expr pos:start="263:35" pos:end="263:44"><name pos:start="263:35" pos:end="263:44"><name pos:start="263:35" pos:end="263:35">p</name><operator pos:start="263:36" pos:end="263:37">-&gt;</operator><name pos:start="263:38" pos:end="263:41">data</name><index pos:start="263:42" pos:end="263:44">[<expr pos:start="263:43" pos:end="263:43"><literal type="number" pos:start="263:43" pos:end="263:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:47" pos:end="263:62"><expr pos:start="263:47" pos:end="263:62"><name pos:start="263:47" pos:end="263:58"><name pos:start="263:47" pos:end="263:51">avctx</name><operator pos:start="263:52" pos:end="263:53">-&gt;</operator><name pos:start="263:54" pos:end="263:58">width</name></name> <operator pos:start="263:60" pos:end="263:60">/</operator> <literal type="number" pos:start="263:62" pos:end="263:62">2</literal></expr></argument>,

                               <argument pos:start="265:32" pos:end="265:44"><expr pos:start="265:32" pos:end="265:44"><name pos:start="265:32" pos:end="265:44"><name pos:start="265:32" pos:end="265:36">avctx</name><operator pos:start="265:37" pos:end="265:38">-&gt;</operator><name pos:start="265:39" pos:end="265:44">height</name></name></expr></argument>, <argument pos:start="265:47" pos:end="265:60"><expr pos:start="265:47" pos:end="265:60"><name pos:start="265:47" pos:end="265:60"><name pos:start="265:47" pos:end="265:47">p</name><operator pos:start="265:48" pos:end="265:49">-&gt;</operator><name pos:start="265:50" pos:end="265:57">linesize</name><index pos:start="265:58" pos:end="265:60">[<expr pos:start="265:59" pos:end="265:59"><literal type="number" pos:start="265:59" pos:end="265:59">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="267:32" pos:end="267:46"><expr pos:start="267:32" pos:end="267:46"><name pos:start="267:32" pos:end="267:34">buf</name> <operator pos:start="267:36" pos:end="267:36">+</operator> <name pos:start="267:38" pos:end="267:46">offset_bv</name></expr></argument>, <argument pos:start="267:49" pos:end="267:68"><expr pos:start="267:49" pos:end="267:68"><name pos:start="267:49" pos:end="267:56">buf_size</name> <operator pos:start="267:58" pos:end="267:58">-</operator> <name pos:start="267:60" pos:end="267:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="269:9" pos:end="269:14">break;</break>

    <case pos:start="271:5" pos:end="271:26">case <expr pos:start="271:10" pos:end="271:25"><name pos:start="271:10" pos:end="271:25">FRAME_ARITH_YV12</name></expr>:</case>

        <expr_stmt pos:start="273:9" pos:end="273:41"><expr pos:start="273:9" pos:end="273:40"><name pos:start="273:9" pos:end="273:22"><name pos:start="273:9" pos:end="273:13">avctx</name><operator pos:start="273:14" pos:end="273:15">-&gt;</operator><name pos:start="273:16" pos:end="273:22">pix_fmt</name></name> <operator pos:start="273:24" pos:end="273:24">=</operator> <name pos:start="273:26" pos:end="273:40">PIX_FMT_YUV420P</name></expr>;</expr_stmt>



        <if_stmt pos:start="277:9" pos:end="283:9"><if pos:start="277:9" pos:end="283:9">if <condition pos:start="277:12" pos:end="277:44">(<expr pos:start="277:13" pos:end="277:43"><call pos:start="277:13" pos:end="277:39"><name pos:start="277:13" pos:end="277:29"><name pos:start="277:13" pos:end="277:17">avctx</name><operator pos:start="277:18" pos:end="277:19">-&gt;</operator><name pos:start="277:20" pos:end="277:29">get_buffer</name></name><argument_list pos:start="277:30" pos:end="277:39">(<argument pos:start="277:31" pos:end="277:35"><expr pos:start="277:31" pos:end="277:35"><name pos:start="277:31" pos:end="277:35">avctx</name></expr></argument>, <argument pos:start="277:38" pos:end="277:38"><expr pos:start="277:38" pos:end="277:38"><name pos:start="277:38" pos:end="277:38">p</name></expr></argument>)</argument_list></call> <operator pos:start="277:41" pos:end="277:41">&lt;</operator> <literal type="number" pos:start="277:43" pos:end="277:43">0</literal></expr>)</condition> <block pos:start="277:46" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:22">

            <expr_stmt pos:start="279:13" pos:end="279:65"><expr pos:start="279:13" pos:end="279:64"><call pos:start="279:13" pos:end="279:64"><name pos:start="279:13" pos:end="279:18">av_log</name><argument_list pos:start="279:19" pos:end="279:64">(<argument pos:start="279:20" pos:end="279:24"><expr pos:start="279:20" pos:end="279:24"><name pos:start="279:20" pos:end="279:24">avctx</name></expr></argument>, <argument pos:start="279:27" pos:end="279:38"><expr pos:start="279:27" pos:end="279:38"><name pos:start="279:27" pos:end="279:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="279:41" pos:end="279:63"><expr pos:start="279:41" pos:end="279:63"><literal type="string" pos:start="279:41" pos:end="279:63">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="281:13" pos:end="281:22">return <expr pos:start="281:20" pos:end="281:21"><operator pos:start="281:20" pos:end="281:20">-</operator><literal type="number" pos:start="281:21" pos:end="281:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="287:9" pos:end="299:9"><if pos:start="287:9" pos:end="299:9">if <condition pos:start="287:12" pos:end="291:34">(<expr pos:start="287:13" pos:end="291:33"><name pos:start="287:13" pos:end="287:21">offset_ry</name> <operator pos:start="287:23" pos:end="287:24">&gt;=</operator> <name pos:start="287:26" pos:end="287:33">buf_size</name> <operator pos:start="287:35" pos:end="287:36">||</operator>

            <name pos:start="289:13" pos:end="289:21">offset_gu</name> <operator pos:start="289:23" pos:end="289:24">&gt;=</operator> <name pos:start="289:26" pos:end="289:33">buf_size</name> <operator pos:start="289:35" pos:end="289:36">||</operator>

            <name pos:start="291:13" pos:end="291:21">offset_bv</name> <operator pos:start="291:23" pos:end="291:24">&gt;=</operator> <name pos:start="291:26" pos:end="291:33">buf_size</name></expr>)</condition> <block pos:start="291:36" pos:end="299:9">{<block_content pos:start="293:13" pos:end="297:39">

            <expr_stmt pos:start="293:13" pos:end="295:46"><expr pos:start="293:13" pos:end="295:45"><call pos:start="293:13" pos:end="295:45"><name pos:start="293:13" pos:end="293:18">av_log</name><argument_list pos:start="293:19" pos:end="295:45">(<argument pos:start="293:20" pos:end="293:24"><expr pos:start="293:20" pos:end="293:24"><name pos:start="293:20" pos:end="293:24">avctx</name></expr></argument>, <argument pos:start="293:27" pos:end="293:38"><expr pos:start="293:27" pos:end="293:38"><name pos:start="293:27" pos:end="293:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="295:20" pos:end="295:44"><expr pos:start="295:20" pos:end="295:44"><literal type="string" pos:start="295:20" pos:end="295:44">"Invalid frame offsets\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="297:13" pos:end="297:39">return <expr pos:start="297:20" pos:end="297:38"><name pos:start="297:20" pos:end="297:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="303:9" pos:end="307:53"><expr pos:start="303:9" pos:end="307:52"><call pos:start="303:9" pos:end="307:52"><name pos:start="303:9" pos:end="303:30">lag_decode_arith_plane</name><argument_list pos:start="303:31" pos:end="307:52">(<argument pos:start="303:32" pos:end="303:32"><expr pos:start="303:32" pos:end="303:32"><name pos:start="303:32" pos:end="303:32">l</name></expr></argument>, <argument pos:start="303:35" pos:end="303:44"><expr pos:start="303:35" pos:end="303:44"><name pos:start="303:35" pos:end="303:44"><name pos:start="303:35" pos:end="303:35">p</name><operator pos:start="303:36" pos:end="303:37">-&gt;</operator><name pos:start="303:38" pos:end="303:41">data</name><index pos:start="303:42" pos:end="303:44">[<expr pos:start="303:43" pos:end="303:43"><literal type="number" pos:start="303:43" pos:end="303:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="303:47" pos:end="303:58"><expr pos:start="303:47" pos:end="303:58"><name pos:start="303:47" pos:end="303:58"><name pos:start="303:47" pos:end="303:51">avctx</name><operator pos:start="303:52" pos:end="303:53">-&gt;</operator><name pos:start="303:54" pos:end="303:58">width</name></name></expr></argument>, <argument pos:start="303:61" pos:end="303:73"><expr pos:start="303:61" pos:end="303:73"><name pos:start="303:61" pos:end="303:73"><name pos:start="303:61" pos:end="303:65">avctx</name><operator pos:start="303:66" pos:end="303:67">-&gt;</operator><name pos:start="303:68" pos:end="303:73">height</name></name></expr></argument>,

                               <argument pos:start="305:32" pos:end="305:45"><expr pos:start="305:32" pos:end="305:45"><name pos:start="305:32" pos:end="305:45"><name pos:start="305:32" pos:end="305:32">p</name><operator pos:start="305:33" pos:end="305:34">-&gt;</operator><name pos:start="305:35" pos:end="305:42">linesize</name><index pos:start="305:43" pos:end="305:45">[<expr pos:start="305:44" pos:end="305:44"><literal type="number" pos:start="305:44" pos:end="305:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="305:48" pos:end="305:62"><expr pos:start="305:48" pos:end="305:62"><name pos:start="305:48" pos:end="305:50">buf</name> <operator pos:start="305:52" pos:end="305:52">+</operator> <name pos:start="305:54" pos:end="305:62">offset_ry</name></expr></argument>,

                               <argument pos:start="307:32" pos:end="307:51"><expr pos:start="307:32" pos:end="307:51"><name pos:start="307:32" pos:end="307:39">buf_size</name> <operator pos:start="307:41" pos:end="307:41">-</operator> <name pos:start="307:43" pos:end="307:51">offset_ry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="313:70"><expr pos:start="309:9" pos:end="313:69"><call pos:start="309:9" pos:end="313:69"><name pos:start="309:9" pos:end="309:30">lag_decode_arith_plane</name><argument_list pos:start="309:31" pos:end="313:69">(<argument pos:start="309:32" pos:end="309:32"><expr pos:start="309:32" pos:end="309:32"><name pos:start="309:32" pos:end="309:32">l</name></expr></argument>, <argument pos:start="309:35" pos:end="309:44"><expr pos:start="309:35" pos:end="309:44"><name pos:start="309:35" pos:end="309:44"><name pos:start="309:35" pos:end="309:35">p</name><operator pos:start="309:36" pos:end="309:37">-&gt;</operator><name pos:start="309:38" pos:end="309:41">data</name><index pos:start="309:42" pos:end="309:44">[<expr pos:start="309:43" pos:end="309:43"><literal type="number" pos:start="309:43" pos:end="309:43">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="309:47" pos:end="309:62"><expr pos:start="309:47" pos:end="309:62"><name pos:start="309:47" pos:end="309:58"><name pos:start="309:47" pos:end="309:51">avctx</name><operator pos:start="309:52" pos:end="309:53">-&gt;</operator><name pos:start="309:54" pos:end="309:58">width</name></name> <operator pos:start="309:60" pos:end="309:60">/</operator> <literal type="number" pos:start="309:62" pos:end="309:62">2</literal></expr></argument>,

                               <argument pos:start="311:32" pos:end="311:48"><expr pos:start="311:32" pos:end="311:48"><name pos:start="311:32" pos:end="311:44"><name pos:start="311:32" pos:end="311:36">avctx</name><operator pos:start="311:37" pos:end="311:38">-&gt;</operator><name pos:start="311:39" pos:end="311:44">height</name></name> <operator pos:start="311:46" pos:end="311:46">/</operator> <literal type="number" pos:start="311:48" pos:end="311:48">2</literal></expr></argument>, <argument pos:start="311:51" pos:end="311:64"><expr pos:start="311:51" pos:end="311:64"><name pos:start="311:51" pos:end="311:64"><name pos:start="311:51" pos:end="311:51">p</name><operator pos:start="311:52" pos:end="311:53">-&gt;</operator><name pos:start="311:54" pos:end="311:61">linesize</name><index pos:start="311:62" pos:end="311:64">[<expr pos:start="311:63" pos:end="311:63"><literal type="number" pos:start="311:63" pos:end="311:63">2</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="313:32" pos:end="313:46"><expr pos:start="313:32" pos:end="313:46"><name pos:start="313:32" pos:end="313:34">buf</name> <operator pos:start="313:36" pos:end="313:36">+</operator> <name pos:start="313:38" pos:end="313:46">offset_gu</name></expr></argument>, <argument pos:start="313:49" pos:end="313:68"><expr pos:start="313:49" pos:end="313:68"><name pos:start="313:49" pos:end="313:56">buf_size</name> <operator pos:start="313:58" pos:end="313:58">-</operator> <name pos:start="313:60" pos:end="313:68">offset_gu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="319:70"><expr pos:start="315:9" pos:end="319:69"><call pos:start="315:9" pos:end="319:69"><name pos:start="315:9" pos:end="315:30">lag_decode_arith_plane</name><argument_list pos:start="315:31" pos:end="319:69">(<argument pos:start="315:32" pos:end="315:32"><expr pos:start="315:32" pos:end="315:32"><name pos:start="315:32" pos:end="315:32">l</name></expr></argument>, <argument pos:start="315:35" pos:end="315:44"><expr pos:start="315:35" pos:end="315:44"><name pos:start="315:35" pos:end="315:44"><name pos:start="315:35" pos:end="315:35">p</name><operator pos:start="315:36" pos:end="315:37">-&gt;</operator><name pos:start="315:38" pos:end="315:41">data</name><index pos:start="315:42" pos:end="315:44">[<expr pos:start="315:43" pos:end="315:43"><literal type="number" pos:start="315:43" pos:end="315:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="315:47" pos:end="315:62"><expr pos:start="315:47" pos:end="315:62"><name pos:start="315:47" pos:end="315:58"><name pos:start="315:47" pos:end="315:51">avctx</name><operator pos:start="315:52" pos:end="315:53">-&gt;</operator><name pos:start="315:54" pos:end="315:58">width</name></name> <operator pos:start="315:60" pos:end="315:60">/</operator> <literal type="number" pos:start="315:62" pos:end="315:62">2</literal></expr></argument>,

                               <argument pos:start="317:32" pos:end="317:48"><expr pos:start="317:32" pos:end="317:48"><name pos:start="317:32" pos:end="317:44"><name pos:start="317:32" pos:end="317:36">avctx</name><operator pos:start="317:37" pos:end="317:38">-&gt;</operator><name pos:start="317:39" pos:end="317:44">height</name></name> <operator pos:start="317:46" pos:end="317:46">/</operator> <literal type="number" pos:start="317:48" pos:end="317:48">2</literal></expr></argument>, <argument pos:start="317:51" pos:end="317:64"><expr pos:start="317:51" pos:end="317:64"><name pos:start="317:51" pos:end="317:64"><name pos:start="317:51" pos:end="317:51">p</name><operator pos:start="317:52" pos:end="317:53">-&gt;</operator><name pos:start="317:54" pos:end="317:61">linesize</name><index pos:start="317:62" pos:end="317:64">[<expr pos:start="317:63" pos:end="317:63"><literal type="number" pos:start="317:63" pos:end="317:63">1</literal></expr>]</index></name></expr></argument>,

                               <argument pos:start="319:32" pos:end="319:46"><expr pos:start="319:32" pos:end="319:46"><name pos:start="319:32" pos:end="319:34">buf</name> <operator pos:start="319:36" pos:end="319:36">+</operator> <name pos:start="319:38" pos:end="319:46">offset_bv</name></expr></argument>, <argument pos:start="319:49" pos:end="319:68"><expr pos:start="319:49" pos:end="319:68"><name pos:start="319:49" pos:end="319:56">buf_size</name> <operator pos:start="319:58" pos:end="319:58">-</operator> <name pos:start="319:60" pos:end="319:68">offset_bv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    <default pos:start="323:5" pos:end="323:12">default:</default>

        <expr_stmt pos:start="325:9" pos:end="327:68"><expr pos:start="325:9" pos:end="327:67"><call pos:start="325:9" pos:end="327:67"><name pos:start="325:9" pos:end="325:14">av_log</name><argument_list pos:start="325:15" pos:end="327:67">(<argument pos:start="325:16" pos:end="325:20"><expr pos:start="325:16" pos:end="325:20"><name pos:start="325:16" pos:end="325:20">avctx</name></expr></argument>, <argument pos:start="325:23" pos:end="325:34"><expr pos:start="325:23" pos:end="325:34"><name pos:start="325:23" pos:end="325:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="327:16" pos:end="327:55"><expr pos:start="327:16" pos:end="327:55"><literal type="string" pos:start="327:16" pos:end="327:55">"Unsupported Lagarith frame type: %#x\n"</literal></expr></argument>, <argument pos:start="327:58" pos:end="327:66"><expr pos:start="327:58" pos:end="327:66"><name pos:start="327:58" pos:end="327:66">frametype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="329:9" pos:end="329:18">return <expr pos:start="329:16" pos:end="329:17"><operator pos:start="329:16" pos:end="329:16">-</operator><literal type="number" pos:start="329:17" pos:end="329:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="335:5" pos:end="335:18"><expr pos:start="335:5" pos:end="335:17"><operator pos:start="335:5" pos:end="335:5">*</operator><name pos:start="335:6" pos:end="335:12">picture</name> <operator pos:start="335:14" pos:end="335:14">=</operator> <operator pos:start="335:16" pos:end="335:16">*</operator><name pos:start="335:17" pos:end="335:17">p</name></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:33"><expr pos:start="337:5" pos:end="337:32"><operator pos:start="337:5" pos:end="337:5">*</operator><name pos:start="337:6" pos:end="337:14">data_size</name> <operator pos:start="337:16" pos:end="337:16">=</operator> <sizeof pos:start="337:18" pos:end="337:32">sizeof<argument_list pos:start="337:24" pos:end="337:32">(<argument pos:start="337:25" pos:end="337:31"><expr pos:start="337:25" pos:end="337:31"><name pos:start="337:25" pos:end="337:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="341:5" pos:end="341:20">return <expr pos:start="341:12" pos:end="341:19"><name pos:start="341:12" pos:end="341:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
