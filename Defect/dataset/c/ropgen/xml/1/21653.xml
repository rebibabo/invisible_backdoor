<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21653.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:38">archipelago_volume_info</name><parameter_list pos:start="1:39" pos:end="1:63">(<parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:61"><name pos:start="1:40" pos:end="1:59">BDRVArchipelagoState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:16">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:22">targetlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">xseg_request</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:28">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">xseg_reply_info</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:33">xinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:63"><decl pos:start="13:5" pos:end="13:62"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AIORequestData</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:27">reqdata</name> <init pos:start="13:29" pos:end="13:62">= <expr pos:start="13:31" pos:end="13:62"><call pos:start="13:31" pos:end="13:62"><name pos:start="13:31" pos:end="13:38">g_malloc</name><argument_list pos:start="13:39" pos:end="13:62">(<argument pos:start="13:40" pos:end="13:61"><expr pos:start="13:40" pos:end="13:61"><sizeof pos:start="13:40" pos:end="13:61">sizeof<argument_list pos:start="13:46" pos:end="13:61">(<argument pos:start="13:47" pos:end="13:60"><expr pos:start="13:47" pos:end="13:60"><name pos:start="13:47" pos:end="13:60">AIORequestData</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">volname</name> <init pos:start="17:25" pos:end="17:36">= <expr pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:36">volname</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:13">targetlen</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:22">strlen</name><argument_list pos:start="19:23" pos:end="19:31">(<argument pos:start="19:24" pos:end="19:30"><expr pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:30">volname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:69"><expr pos:start="21:5" pos:end="21:68"><name pos:start="21:5" pos:end="21:7">req</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:68"><name pos:start="21:11" pos:end="21:26">xseg_get_request</name><argument_list pos:start="21:27" pos:end="21:68">(<argument pos:start="21:28" pos:end="21:34"><expr pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:34"><name pos:start="21:28" pos:end="21:28">s</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:34">xseg</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:46"><expr pos:start="21:37" pos:end="21:46"><name pos:start="21:37" pos:end="21:46"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:46">srcport</name></name></expr></argument>, <argument pos:start="21:49" pos:end="21:58"><expr pos:start="21:49" pos:end="21:58"><name pos:start="21:49" pos:end="21:58"><name pos:start="21:49" pos:end="21:49">s</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:58">mportno</name></name></expr></argument>, <argument pos:start="21:61" pos:end="21:67"><expr pos:start="21:61" pos:end="21:67"><name pos:start="21:61" pos:end="21:67">X_ALLOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">req</name></expr>)</condition> <block pos:start="23:15" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:23">

        <expr_stmt pos:start="25:9" pos:end="25:52"><expr pos:start="25:9" pos:end="25:51"><call pos:start="25:9" pos:end="25:51"><name pos:start="25:9" pos:end="25:22">archipelagolog</name><argument_list pos:start="25:23" pos:end="25:51">(<argument pos:start="25:24" pos:end="25:50"><expr pos:start="25:24" pos:end="25:50"><literal type="string" pos:start="25:24" pos:end="25:50">"Cannot get XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="27:9" pos:end="27:23">goto <name pos:start="27:14" pos:end="27:22">err_exit2</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:60"><expr pos:start="31:5" pos:end="33:59"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="33:59"><name pos:start="31:11" pos:end="31:27">xseg_prep_request</name><argument_list pos:start="31:28" pos:end="33:59">(<argument pos:start="31:29" pos:end="31:35"><expr pos:start="31:29" pos:end="31:35"><name pos:start="31:29" pos:end="31:35"><name pos:start="31:29" pos:end="31:29">s</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:35">xseg</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:40"><expr pos:start="31:38" pos:end="31:40"><name pos:start="31:38" pos:end="31:40">req</name></expr></argument>, <argument pos:start="31:43" pos:end="31:51"><expr pos:start="31:43" pos:end="31:51"><name pos:start="31:43" pos:end="31:51">targetlen</name></expr></argument>,

                            <argument pos:start="33:29" pos:end="33:58"><expr pos:start="33:29" pos:end="33:58"><sizeof pos:start="33:29" pos:end="33:58">sizeof<argument_list pos:start="33:35" pos:end="33:58">(<argument pos:start="33:36" pos:end="33:57"><expr pos:start="33:36" pos:end="33:57">struct <name pos:start="33:43" pos:end="33:57">xseg_reply_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:16">(<expr pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">&lt;</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>)</condition> <block pos:start="35:18" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:22">

        <expr_stmt pos:start="37:9" pos:end="37:56"><expr pos:start="37:9" pos:end="37:55"><call pos:start="37:9" pos:end="37:55"><name pos:start="37:9" pos:end="37:22">archipelagolog</name><argument_list pos:start="37:23" pos:end="37:55">(<argument pos:start="37:24" pos:end="37:54"><expr pos:start="37:24" pos:end="37:54"><literal type="string" pos:start="37:24" pos:end="37:54">"Cannot prepare XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:22">goto <name pos:start="39:14" pos:end="39:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:49"><decl pos:start="43:5" pos:end="43:48"><type pos:start="43:5" pos:end="43:10"><name pos:start="43:5" pos:end="43:8">char</name> <modifier pos:start="43:10" pos:end="43:10">*</modifier></type><name pos:start="43:11" pos:end="43:16">target</name> <init pos:start="43:18" pos:end="43:48">= <expr pos:start="43:20" pos:end="43:48"><call pos:start="43:20" pos:end="43:48"><name pos:start="43:20" pos:end="43:34">xseg_get_target</name><argument_list pos:start="43:35" pos:end="43:48">(<argument pos:start="43:36" pos:end="43:42"><expr pos:start="43:36" pos:end="43:42"><name pos:start="43:36" pos:end="43:42"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:42">xseg</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:47">req</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">target</name></expr>)</condition> <block pos:start="45:18" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:22">

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><call pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:22">archipelagolog</name><argument_list pos:start="47:23" pos:end="47:50">(<argument pos:start="47:24" pos:end="47:49"><expr pos:start="47:24" pos:end="47:49"><literal type="string" pos:start="47:24" pos:end="47:49">"Cannot get XSEG target\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:22">goto <name pos:start="49:14" pos:end="49:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:10">memcpy</name><argument_list pos:start="53:11" pos:end="53:38">(<argument pos:start="53:12" pos:end="53:17"><expr pos:start="53:12" pos:end="53:17"><name pos:start="53:12" pos:end="53:17">target</name></expr></argument>, <argument pos:start="53:20" pos:end="53:26"><expr pos:start="53:20" pos:end="53:26"><name pos:start="53:20" pos:end="53:26">volname</name></expr></argument>, <argument pos:start="53:29" pos:end="53:37"><expr pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:37">targetlen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:29"><expr pos:start="55:5" pos:end="55:28"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:7">req</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:13">size</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:19">req</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:28">datalen</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:7">req</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:15">offset</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:7">req</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:11">op</name></name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:20">X_INFO</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:15"><name pos:start="63:5" pos:end="63:11">reqdata</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:15">op</name></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:35">ARCHIP_OP_VOLINFO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:11">reqdata</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:20">volname</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:30">volname</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><call pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:21">xseg_set_req_data</name><argument_list pos:start="67:22" pos:end="67:44">(<argument pos:start="67:23" pos:end="67:29"><expr pos:start="67:23" pos:end="67:29"><name pos:start="67:23" pos:end="67:29"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:29">xseg</name></name></expr></argument>, <argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">req</name></expr></argument>, <argument pos:start="67:37" pos:end="67:43"><expr pos:start="67:37" pos:end="67:43"><name pos:start="67:37" pos:end="67:43">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <decl_stmt pos:start="71:5" pos:end="71:61"><decl pos:start="71:5" pos:end="71:60"><type pos:start="71:5" pos:end="71:9"><name pos:start="71:5" pos:end="71:9">xport</name></type> <name pos:start="71:11" pos:end="71:11">p</name> <init pos:start="71:13" pos:end="71:60">= <expr pos:start="71:15" pos:end="71:60"><call pos:start="71:15" pos:end="71:60"><name pos:start="71:15" pos:end="71:25">xseg_submit</name><argument_list pos:start="71:26" pos:end="71:60">(<argument pos:start="71:27" pos:end="71:33"><expr pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:33"><name pos:start="71:27" pos:end="71:27">s</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:33">xseg</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:38">req</name></expr></argument>, <argument pos:start="71:41" pos:end="71:50"><expr pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:50"><name pos:start="71:41" pos:end="71:41">s</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:50">srcport</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:59"><expr pos:start="71:53" pos:end="71:59"><name pos:start="71:53" pos:end="71:59">X_ALLOC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:20">(<expr pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:9">p</name> <operator pos:start="73:11" pos:end="73:12">==</operator> <name pos:start="73:14" pos:end="73:19">NoPort</name></expr>)</condition> <block pos:start="73:22" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:22">

        <expr_stmt pos:start="75:9" pos:end="75:55"><expr pos:start="75:9" pos:end="75:54"><call pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:22">archipelagolog</name><argument_list pos:start="75:23" pos:end="75:54">(<argument pos:start="75:24" pos:end="75:53"><expr pos:start="75:24" pos:end="75:53"><literal type="string" pos:start="75:24" pos:end="75:53">"Cannot submit XSEG request\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:22">goto <name pos:start="77:14" pos:end="77:21">err_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><call pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:15">xseg_signal</name><argument_list pos:start="81:16" pos:end="81:27">(<argument pos:start="81:17" pos:end="81:23"><expr pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">xseg</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><call pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:19">qemu_mutex_lock</name><argument_list pos:start="83:20" pos:end="83:37">(<argument pos:start="83:21" pos:end="83:36"><expr pos:start="83:21" pos:end="83:36"><operator pos:start="83:21" pos:end="83:21">&amp;</operator><name pos:start="83:22" pos:end="83:36"><name pos:start="83:22" pos:end="83:22">s</name><operator pos:start="83:23" pos:end="83:24">-&gt;</operator><name pos:start="83:25" pos:end="83:36">archip_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="85:5" pos:end="89:5">while <condition pos:start="85:11" pos:end="85:27">(<expr pos:start="85:12" pos:end="85:26"><operator pos:start="85:12" pos:end="85:12">!</operator><name pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:26">is_signaled</name></name></expr>)</condition> <block pos:start="85:29" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:58">

        <expr_stmt pos:start="87:9" pos:end="87:58"><expr pos:start="87:9" pos:end="87:57"><call pos:start="87:9" pos:end="87:57"><name pos:start="87:9" pos:end="87:22">qemu_cond_wait</name><argument_list pos:start="87:23" pos:end="87:57">(<argument pos:start="87:24" pos:end="87:38"><expr pos:start="87:24" pos:end="87:38"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:38"><name pos:start="87:25" pos:end="87:25">s</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:38">archip_cond</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:56"><expr pos:start="87:41" pos:end="87:56"><operator pos:start="87:41" pos:end="87:41">&amp;</operator><name pos:start="87:42" pos:end="87:56"><name pos:start="87:42" pos:end="87:42">s</name><operator pos:start="87:43" pos:end="87:44">-&gt;</operator><name pos:start="87:45" pos:end="87:56">archip_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="91:5" pos:end="91:27"><expr pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:18">is_signaled</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <name pos:start="91:22" pos:end="91:26">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:40"><expr pos:start="93:5" pos:end="93:39"><call pos:start="93:5" pos:end="93:39"><name pos:start="93:5" pos:end="93:21">qemu_mutex_unlock</name><argument_list pos:start="93:22" pos:end="93:39">(<argument pos:start="93:23" pos:end="93:38"><expr pos:start="93:23" pos:end="93:38"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:38"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:38">archip_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:67"><expr pos:start="97:5" pos:end="97:66"><name pos:start="97:5" pos:end="97:9">xinfo</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <operator pos:start="97:13" pos:end="97:13">(</operator>struct <name pos:start="97:21" pos:end="97:35">xseg_reply_info</name> <operator pos:start="97:37" pos:end="97:37">*</operator><operator pos:start="97:38" pos:end="97:38">)</operator> <call pos:start="97:40" pos:end="97:66"><name pos:start="97:40" pos:end="97:52">xseg_get_data</name><argument_list pos:start="97:53" pos:end="97:66">(<argument pos:start="97:54" pos:end="97:60"><expr pos:start="97:54" pos:end="97:60"><name pos:start="97:54" pos:end="97:60"><name pos:start="97:54" pos:end="97:54">s</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:60">xseg</name></name></expr></argument>, <argument pos:start="97:63" pos:end="97:65"><expr pos:start="97:63" pos:end="97:65"><name pos:start="97:63" pos:end="97:65">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:8">size</name> <operator pos:start="99:10" pos:end="99:10">=</operator> <name pos:start="99:12" pos:end="99:22"><name pos:start="99:12" pos:end="99:16">xinfo</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:47"><expr pos:start="101:5" pos:end="101:46"><call pos:start="101:5" pos:end="101:46"><name pos:start="101:5" pos:end="101:20">xseg_put_request</name><argument_list pos:start="101:21" pos:end="101:46">(<argument pos:start="101:22" pos:end="101:28"><expr pos:start="101:22" pos:end="101:28"><name pos:start="101:22" pos:end="101:28"><name pos:start="101:22" pos:end="101:22">s</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:28">xseg</name></name></expr></argument>, <argument pos:start="101:31" pos:end="101:33"><expr pos:start="101:31" pos:end="101:33"><name pos:start="101:31" pos:end="101:33">req</name></expr></argument>, <argument pos:start="101:36" pos:end="101:45"><expr pos:start="101:36" pos:end="101:45"><name pos:start="101:36" pos:end="101:45"><name pos:start="101:36" pos:end="101:36">s</name><operator pos:start="101:37" pos:end="101:38">-&gt;</operator><name pos:start="101:39" pos:end="101:45">srcport</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><call pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:19">(<argument pos:start="103:12" pos:end="103:18"><expr pos:start="103:12" pos:end="103:18"><name pos:start="103:12" pos:end="103:18">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:19"><expr pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:11"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:11">size</name></name> <operator pos:start="105:13" pos:end="105:13">=</operator> <name pos:start="105:15" pos:end="105:18">size</name></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:16">return <expr pos:start="107:12" pos:end="107:15"><name pos:start="107:12" pos:end="107:15">size</name></expr>;</return>



<label pos:start="111:1" pos:end="111:9"><name pos:start="111:1" pos:end="111:8">err_exit</name>:</label>

    <expr_stmt pos:start="113:5" pos:end="113:47"><expr pos:start="113:5" pos:end="113:46"><call pos:start="113:5" pos:end="113:46"><name pos:start="113:5" pos:end="113:20">xseg_put_request</name><argument_list pos:start="113:21" pos:end="113:46">(<argument pos:start="113:22" pos:end="113:28"><expr pos:start="113:22" pos:end="113:28"><name pos:start="113:22" pos:end="113:28"><name pos:start="113:22" pos:end="113:22">s</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:28">xseg</name></name></expr></argument>, <argument pos:start="113:31" pos:end="113:33"><expr pos:start="113:31" pos:end="113:33"><name pos:start="113:31" pos:end="113:33">req</name></expr></argument>, <argument pos:start="113:36" pos:end="113:45"><expr pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:45"><name pos:start="113:36" pos:end="113:36">s</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:45">srcport</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="115:1" pos:end="115:10"><name pos:start="115:1" pos:end="115:9">err_exit2</name>:</label>

    <expr_stmt pos:start="117:5" pos:end="117:20"><expr pos:start="117:5" pos:end="117:19"><call pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:10">g_free</name><argument_list pos:start="117:11" pos:end="117:19">(<argument pos:start="117:12" pos:end="117:18"><expr pos:start="117:12" pos:end="117:18"><name pos:start="117:12" pos:end="117:18">reqdata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:16">return <expr pos:start="119:12" pos:end="119:15"><operator pos:start="119:12" pos:end="119:12">-</operator><name pos:start="119:13" pos:end="119:15">EIO</name></expr>;</return>

</block_content>}</block></function>
</unit>
