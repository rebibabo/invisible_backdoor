<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6338.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">init_mbr</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:36"><name pos:start="1:22" pos:end="1:35">BDRVVVFATState</name><modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:53">

    <comment type="block" pos:start="5:5" pos:end="5:69">/* TODO: if the files mbr.img and bootsect.img exist, use them */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:9">mbr_t</name><modifier pos:start="7:10" pos:end="7:10">*</modifier></type> <name pos:start="7:12" pos:end="7:19">real_mbr</name><init pos:start="7:20" pos:end="7:44">=<expr pos:start="7:21" pos:end="7:44"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:26">mbr_t</name><operator pos:start="7:27" pos:end="7:27">*</operator><operator pos:start="7:28" pos:end="7:28">)</operator><name pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:29">s</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:44">first_sectors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:55"><decl pos:start="9:5" pos:end="9:54"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:15">partition_t</name><modifier pos:start="9:16" pos:end="9:16">*</modifier></type> <name pos:start="9:18" pos:end="9:26">partition</name> <init pos:start="9:28" pos:end="9:54">= <expr pos:start="9:30" pos:end="9:54"><operator pos:start="9:30" pos:end="9:30">&amp;</operator><operator pos:start="9:31" pos:end="9:31">(</operator><name pos:start="9:32" pos:end="9:53"><name pos:start="9:32" pos:end="9:39">real_mbr</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:50">partition</name><index pos:start="9:51" pos:end="9:53">[<expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr>]</index></name><operator pos:start="9:54" pos:end="9:54">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">lba</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><call pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:10">memset</name><argument_list pos:start="15:11" pos:end="15:34">(<argument pos:start="15:12" pos:end="15:27"><expr pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:27"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:27">first_sectors</name></name></expr></argument>,<argument pos:start="15:29" pos:end="15:29"><expr pos:start="15:29" pos:end="15:29"><literal type="number" pos:start="15:29" pos:end="15:29">0</literal></expr></argument>,<argument pos:start="15:31" pos:end="15:33"><expr pos:start="15:31" pos:end="15:33"><literal type="number" pos:start="15:31" pos:end="15:33">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:31">/* Win NT Disk Signature */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">real_mbr</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:19">nt_id</name></name><operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:44"><name pos:start="21:22" pos:end="21:32">cpu_to_le32</name><argument_list pos:start="21:33" pos:end="21:44">(<argument pos:start="21:34" pos:end="21:43"><expr pos:start="21:34" pos:end="21:43"><literal type="number" pos:start="21:34" pos:end="21:43">0xbe1afdfa</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:13">partition</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">attributes</name></name><operator pos:start="25:26" pos:end="25:26">=</operator><literal type="number" pos:start="25:27" pos:end="25:30">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="25:33" pos:end="25:46">/* bootable */</comment>



    <comment type="block" pos:start="29:5" pos:end="29:64">/* LBA is used when partition is outside the CHS geometry */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:78"><expr pos:start="31:5" pos:end="31:77"><name pos:start="31:5" pos:end="31:7">lba</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:77"><name pos:start="31:11" pos:end="31:20">sector2CHS</name><argument_list pos:start="31:21" pos:end="31:77">(<argument pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:26">bs</name></name></expr></argument>, <argument pos:start="31:29" pos:end="31:49"><expr pos:start="31:29" pos:end="31:49"><operator pos:start="31:29" pos:end="31:29">&amp;</operator><name pos:start="31:30" pos:end="31:49"><name pos:start="31:30" pos:end="31:38">partition</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:49">start_CHS</name></name></expr></argument>, <argument pos:start="31:52" pos:end="31:76"><expr pos:start="31:52" pos:end="31:76"><name pos:start="31:52" pos:end="31:74"><name pos:start="31:52" pos:end="31:52">s</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:74">first_sectors_number</name></name><operator pos:start="31:75" pos:end="31:75">-</operator><literal type="number" pos:start="31:76" pos:end="31:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:68"><expr pos:start="33:5" pos:end="33:67"><name pos:start="33:5" pos:end="33:7">lba</name><operator pos:start="33:8" pos:end="33:9">|=</operator> <call pos:start="33:11" pos:end="33:67"><name pos:start="33:11" pos:end="33:20">sector2CHS</name><argument_list pos:start="33:21" pos:end="33:67">(<argument pos:start="33:22" pos:end="33:26"><expr pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:26">bs</name></name></expr></argument>, <argument pos:start="33:29" pos:end="33:47"><expr pos:start="33:29" pos:end="33:47"><operator pos:start="33:29" pos:end="33:29">&amp;</operator><name pos:start="33:30" pos:end="33:47"><name pos:start="33:30" pos:end="33:38">partition</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:47">end_CHS</name></name></expr></argument>,   <argument pos:start="33:52" pos:end="33:66"><expr pos:start="33:52" pos:end="33:66"><name pos:start="33:52" pos:end="33:66"><name pos:start="33:52" pos:end="33:52">s</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:66">sector_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:81">/*LBA partitions are identified only by start/length_sector_long not by CHS*/</comment>

    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:13">partition</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:32">start_sector_long</name></name> <operator pos:start="39:34" pos:end="39:34">=</operator><call pos:start="39:35" pos:end="39:72"><name pos:start="39:35" pos:end="39:45">cpu_to_le32</name><argument_list pos:start="39:46" pos:end="39:72">(<argument pos:start="39:47" pos:end="39:71"><expr pos:start="39:47" pos:end="39:71"><name pos:start="39:47" pos:end="39:69"><name pos:start="39:47" pos:end="39:47">s</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:69">first_sectors_number</name></name><operator pos:start="39:70" pos:end="39:70">-</operator><literal type="number" pos:start="39:71" pos:end="39:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:91"><expr pos:start="41:5" pos:end="41:90"><name pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:13">partition</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:33">length_sector_long</name></name><operator pos:start="41:34" pos:end="41:34">=</operator><call pos:start="41:35" pos:end="41:90"><name pos:start="41:35" pos:end="41:45">cpu_to_le32</name><argument_list pos:start="41:46" pos:end="41:90">(<argument pos:start="41:47" pos:end="41:89"><expr pos:start="41:47" pos:end="41:89"><name pos:start="41:47" pos:end="41:61"><name pos:start="41:47" pos:end="41:47">s</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:61">sector_count</name></name> <operator pos:start="41:63" pos:end="41:63">-</operator> <name pos:start="41:65" pos:end="41:87"><name pos:start="41:65" pos:end="41:65">s</name><operator pos:start="41:66" pos:end="41:67">-&gt;</operator><name pos:start="41:68" pos:end="41:87">first_sectors_number</name></name><operator pos:start="41:88" pos:end="41:88">+</operator><literal type="number" pos:start="41:89" pos:end="41:89">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:27">/* FAT12/FAT16/FAT32 */</comment>

    <comment type="block" pos:start="47:5" pos:end="49:67">/* DOS uses different types when partition is LBA,

       probably to prevent older versions from using CHS on them */</comment>

    <expr_stmt pos:start="51:5" pos:end="55:57"><expr pos:start="51:5" pos:end="55:56"><name pos:start="51:5" pos:end="51:22"><name pos:start="51:5" pos:end="51:13">partition</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">fs_type</name></name><operator pos:start="51:23" pos:end="51:23">=</operator> <ternary pos:start="51:25" pos:end="55:56"><condition pos:start="51:25" pos:end="51:41"><expr pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:35">fat_type</name></name><operator pos:start="51:36" pos:end="51:37">==</operator><literal type="number" pos:start="51:38" pos:end="51:39">12</literal></expr> ?</condition><then pos:start="51:43" pos:end="51:45"> <expr pos:start="51:43" pos:end="51:45"><literal type="number" pos:start="51:43" pos:end="51:45">0x1</literal></expr></then><else pos:start="51:46" pos:end="55:56">:

                        <expr pos:start="53:25" pos:end="55:56"><ternary pos:start="53:25" pos:end="55:56"><condition pos:start="53:25" pos:end="53:41"><expr pos:start="53:25" pos:end="53:39"><name pos:start="53:25" pos:end="53:35"><name pos:start="53:25" pos:end="53:25">s</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:35">fat_type</name></name><operator pos:start="53:36" pos:end="53:37">==</operator><literal type="number" pos:start="53:38" pos:end="53:39">16</literal></expr> ?</condition><then pos:start="53:43" pos:end="53:56"> <expr pos:start="53:43" pos:end="53:56"><operator pos:start="53:43" pos:end="53:43">(</operator><ternary pos:start="53:44" pos:end="53:55"><condition pos:start="53:44" pos:end="53:47"><expr pos:start="53:44" pos:end="53:46"><name pos:start="53:44" pos:end="53:46">lba</name></expr>?</condition><then pos:start="53:48" pos:end="53:50"><expr pos:start="53:48" pos:end="53:50"><literal type="number" pos:start="53:48" pos:end="53:50">0xe</literal></expr></then><else pos:start="53:51" pos:end="53:55">:<expr pos:start="53:52" pos:end="53:55"><literal type="number" pos:start="53:52" pos:end="53:55">0x06</literal></expr></else></ternary><operator pos:start="53:56" pos:end="53:56">)</operator></expr></then><else pos:start="53:57" pos:end="55:56">:

                         <comment type="block" pos:start="55:26" pos:end="55:41">/*fat_tyoe==32*/</comment> <expr pos:start="55:43" pos:end="55:56"><operator pos:start="55:43" pos:end="55:43">(</operator><ternary pos:start="55:44" pos:end="55:55"><condition pos:start="55:44" pos:end="55:47"><expr pos:start="55:44" pos:end="55:46"><name pos:start="55:44" pos:end="55:46">lba</name></expr>?</condition><then pos:start="55:48" pos:end="55:50"><expr pos:start="55:48" pos:end="55:50"><literal type="number" pos:start="55:48" pos:end="55:50">0xc</literal></expr></then><else pos:start="55:51" pos:end="55:55">:<expr pos:start="55:52" pos:end="55:55"><literal type="number" pos:start="55:52" pos:end="55:55">0x0b</literal></expr></else></ternary><operator pos:start="55:56" pos:end="55:56">)</operator></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:22"><name pos:start="59:5" pos:end="59:12">real_mbr</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:19">magic</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>]</index></name><operator pos:start="59:23" pos:end="59:23">=</operator><literal type="number" pos:start="59:24" pos:end="59:27">0x55</literal></expr>;</expr_stmt> <expr_stmt pos:start="59:30" pos:end="59:53"><expr pos:start="59:30" pos:end="59:52"><name pos:start="59:30" pos:end="59:47"><name pos:start="59:30" pos:end="59:37">real_mbr</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:44">magic</name><index pos:start="59:45" pos:end="59:47">[<expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">1</literal></expr>]</index></name><operator pos:start="59:48" pos:end="59:48">=</operator><literal type="number" pos:start="59:49" pos:end="59:52">0xaa</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
