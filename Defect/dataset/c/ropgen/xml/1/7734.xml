<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7734.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">cpu_gen_code</name><parameter_list pos:start="1:17" pos:end="3:59">(<parameter pos:start="1:18" pos:end="1:30"><decl pos:start="1:18" pos:end="1:30"><type pos:start="1:18" pos:end="1:30"><name pos:start="1:18" pos:end="1:25">CPUState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><name pos:start="1:33" pos:end="1:48">TranslationBlock</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">tb</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:34"><decl pos:start="3:18" pos:end="3:34"><type pos:start="3:18" pos:end="3:34"><name pos:start="3:18" pos:end="3:20">int</name></type> <name pos:start="3:22" pos:end="3:34">max_code_size</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:58"><decl pos:start="3:37" pos:end="3:58"><type pos:start="3:37" pos:end="3:58"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:58">gen_code_size_ptr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:13">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:25">gen_code_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:21">gen_code_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><call pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:29">gen_intermediate_code</name><argument_list pos:start="13:30" pos:end="13:38">(<argument pos:start="13:31" pos:end="13:33"><expr pos:start="13:31" pos:end="13:33"><name pos:start="13:31" pos:end="13:33">env</name></expr></argument>, <argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">tb</name></expr></argument>)</argument_list></call> <operator pos:start="13:40" pos:end="13:40">&lt;</operator> <literal type="number" pos:start="13:42" pos:end="13:42">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="19:5" pos:end="19:31">/* generate machine code */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:6">tb</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:22">tb_next_offset</name><index pos:start="21:23" pos:end="21:25">[<expr pos:start="21:24" pos:end="21:24"><literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>]</index></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <literal type="number" pos:start="21:29" pos:end="21:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:6">tb</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:22">tb_next_offset</name><index pos:start="23:23" pos:end="23:25">[<expr pos:start="23:24" pos:end="23:24"><literal type="number" pos:start="23:24" pos:end="23:24">1</literal></expr>]</index></name> <operator pos:start="23:27" pos:end="23:27">=</operator> <literal type="number" pos:start="23:29" pos:end="23:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:16">gen_code_buf</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:29"><name pos:start="25:20" pos:end="25:21">tb</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:29">tc_ptr</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="27:1" pos:end="27:22">#<cpp:directive pos:start="27:2" pos:end="27:6">ifdef</cpp:directive> <name pos:start="27:8" pos:end="27:22">USE_DIRECT_JUMP</name></cpp:ifdef>

    <comment type="block" pos:start="29:5" pos:end="29:75">/* the following two entries are optional (only used for string ops) */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:6">tb</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:21">tb_jmp_offset</name><index pos:start="31:22" pos:end="31:24">[<expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">2</literal></expr>]</index></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <literal type="number" pos:start="31:28" pos:end="31:33">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="36:0"><expr pos:start="33:5" pos:end="33:33"><name pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:6">tb</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:21">tb_jmp_offset</name><index pos:start="33:22" pos:end="33:24">[<expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">3</literal></expr>]</index></name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:33">0xffff</literal></expr>;</expr_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="37:5" pos:end="37:72"><expr pos:start="37:5" pos:end="37:71"><call pos:start="37:5" pos:end="37:71"><name pos:start="37:5" pos:end="37:17">dyngen_labels</name><argument_list pos:start="37:18" pos:end="37:71">(<argument pos:start="37:19" pos:end="37:28"><expr pos:start="37:19" pos:end="37:28"><name pos:start="37:19" pos:end="37:28">gen_labels</name></expr></argument>, <argument pos:start="37:31" pos:end="37:43"><expr pos:start="37:31" pos:end="37:43"><name pos:start="37:31" pos:end="37:43">nb_gen_labels</name></expr></argument>, <argument pos:start="37:46" pos:end="37:57"><expr pos:start="37:46" pos:end="37:57"><name pos:start="37:46" pos:end="37:57">gen_code_buf</name></expr></argument>, <argument pos:start="37:60" pos:end="37:70"><expr pos:start="37:60" pos:end="37:70"><name pos:start="37:60" pos:end="37:70">gen_opc_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="41:5" pos:end="53:74"><expr pos:start="41:5" pos:end="53:73"><name pos:start="41:5" pos:end="41:17">gen_code_size</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="53:73"><name pos:start="41:21" pos:end="41:31">dyngen_code</name><argument_list pos:start="41:32" pos:end="53:73">(<argument pos:start="41:33" pos:end="41:44"><expr pos:start="41:33" pos:end="41:44"><name pos:start="41:33" pos:end="41:44">gen_code_buf</name></expr></argument>, <argument pos:start="41:47" pos:end="41:64"><expr pos:start="41:47" pos:end="41:64"><name pos:start="41:47" pos:end="41:64"><name pos:start="41:47" pos:end="41:48">tb</name><operator pos:start="41:49" pos:end="41:50">-&gt;</operator><name pos:start="41:51" pos:end="41:64">tb_next_offset</name></name></expr></argument>,

<cpp:ifdef pos:start="43:1" pos:end="43:22">#<cpp:directive pos:start="43:2" pos:end="43:6">ifdef</cpp:directive> <name pos:start="43:8" pos:end="43:22">USE_DIRECT_JUMP</name></cpp:ifdef>

                                <argument pos:start="45:33" pos:end="45:49"><expr pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:34">tb</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:49">tb_jmp_offset</name></name></expr></argument>,

<cpp:else pos:start="47:1" pos:end="47:5">#<cpp:directive pos:start="47:2" pos:end="47:5">else</cpp:directive></cpp:else>

                                <argument pos:start="49:33" pos:end="49:36"><expr pos:start="49:33" pos:end="49:36"><name pos:start="49:33" pos:end="49:36">NULL</name></expr></argument>,

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

                                <argument pos:start="53:33" pos:end="53:43"><expr pos:start="53:33" pos:end="53:43"><name pos:start="53:33" pos:end="53:43">gen_opc_buf</name></expr></argument>, <argument pos:start="53:46" pos:end="53:60"><expr pos:start="53:46" pos:end="53:60"><name pos:start="53:46" pos:end="53:60">gen_opparam_buf</name></expr></argument>, <argument pos:start="53:63" pos:end="53:72"><expr pos:start="53:63" pos:end="53:72"><name pos:start="53:63" pos:end="53:72">gen_labels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:38"><operator pos:start="55:5" pos:end="55:5">*</operator><name pos:start="55:6" pos:end="55:22">gen_code_size_ptr</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:38">gen_code_size</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="57:1" pos:end="57:18">#<cpp:directive pos:start="57:2" pos:end="57:6">ifdef</cpp:directive> <name pos:start="57:8" pos:end="57:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="59:5" pos:end="72:0"><if pos:start="59:5" pos:end="72:0">if <condition pos:start="59:8" pos:end="59:38">(<expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:16">loglevel</name> <operator pos:start="59:18" pos:end="59:18">&amp;</operator> <name pos:start="59:20" pos:end="59:37">CPU_LOG_TB_OUT_ASM</name></expr>)</condition> <block pos:start="59:40" pos:end="72:0">{<block_content pos:start="61:9" pos:end="67:24">

        <expr_stmt pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:64"><call pos:start="61:9" pos:end="61:64"><name pos:start="61:9" pos:end="61:15">fprintf</name><argument_list pos:start="61:16" pos:end="61:64">(<argument pos:start="61:17" pos:end="61:23"><expr pos:start="61:17" pos:end="61:23"><name pos:start="61:17" pos:end="61:23">logfile</name></expr></argument>, <argument pos:start="61:26" pos:end="61:43"><expr pos:start="61:26" pos:end="61:43"><literal type="string" pos:start="61:26" pos:end="61:43">"OUT: [size=%d]\n"</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:63"><expr pos:start="61:46" pos:end="61:63"><operator pos:start="61:46" pos:end="61:46">*</operator><name pos:start="61:47" pos:end="61:63">gen_code_size_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:55"><expr pos:start="63:9" pos:end="63:54"><call pos:start="63:9" pos:end="63:54"><name pos:start="63:9" pos:end="63:13">disas</name><argument_list pos:start="63:14" pos:end="63:54">(<argument pos:start="63:15" pos:end="63:21"><expr pos:start="63:15" pos:end="63:21"><name pos:start="63:15" pos:end="63:21">logfile</name></expr></argument>, <argument pos:start="63:24" pos:end="63:33"><expr pos:start="63:24" pos:end="63:33"><name pos:start="63:24" pos:end="63:33"><name pos:start="63:24" pos:end="63:25">tb</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:33">tc_ptr</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:53"><expr pos:start="63:36" pos:end="63:53"><operator pos:start="63:36" pos:end="63:36">*</operator><name pos:start="63:37" pos:end="63:53">gen_code_size_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:15">fprintf</name><argument_list pos:start="65:16" pos:end="65:30">(<argument pos:start="65:17" pos:end="65:23"><expr pos:start="65:17" pos:end="65:23"><name pos:start="65:17" pos:end="65:23">logfile</name></expr></argument>, <argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><literal type="string" pos:start="65:26" pos:end="65:29">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><call pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:14">fflush</name><argument_list pos:start="67:15" pos:end="67:23">(<argument pos:start="67:16" pos:end="67:22"><expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22">logfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
