<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7711.c" pos:tabs="8"><function pos:start="1:1" pos:end="102:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">aacPlus_encode_init</name><parameter_list pos:start="1:39" pos:end="1:61">(<parameter pos:start="1:40" pos:end="1:60"><decl pos:start="1:40" pos:end="1:60"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:53">AVCodecContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="102:13">{<block_content pos:start="5:5" pos:end="102:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">aacPlusAudioContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27">aacplusEncConfiguration</name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:40">aacplus_cfg</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:28">/* number of channels */</comment>

    <if_stmt pos:start="13:5" pos:end="102:13"><if pos:start="13:5" pos:end="102:13">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">channels</name></name> <operator pos:start="13:25" pos:end="13:25">&lt;</operator> <literal type="number" pos:start="13:27" pos:end="13:27">1</literal> <operator pos:start="13:29" pos:end="13:30">||</operator> <name pos:start="13:32" pos:end="13:46"><name pos:start="13:32" pos:end="13:36">avctx</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:46">channels</name></name> <operator pos:start="13:48" pos:end="13:48">&gt;</operator> <literal type="number" pos:start="13:50" pos:end="13:50">2</literal></expr>)</condition> <block pos:start="13:53" pos:end="102:13">{<block_content pos:start="15:9" pos:end="102:13">

        <expr_stmt pos:start="15:9" pos:end="15:96"><expr pos:start="15:9" pos:end="15:95"><call pos:start="15:9" pos:end="15:95"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:95">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:77"><expr pos:start="15:37" pos:end="15:77"><literal type="string" pos:start="15:37" pos:end="15:77">"encoding %d channel(s) is not allowed\n"</literal></expr></argument>, <argument pos:start="15:80" pos:end="15:94"><expr pos:start="15:80" pos:end="15:94"><name pos:start="15:80" pos:end="15:94"><name pos:start="15:80" pos:end="15:84">avctx</name><operator pos:start="15:85" pos:end="15:86">-&gt;</operator><name pos:start="15:87" pos:end="15:94">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <if_stmt pos:start="22:5" pos:end="102:13"><if pos:start="22:5" pos:end="102:13">if <condition pos:start="22:8" pos:end="22:85">(<expr pos:start="22:9" pos:end="22:84"><name pos:start="22:9" pos:end="22:22"><name pos:start="22:9" pos:end="22:13">avctx</name><operator pos:start="22:14" pos:end="22:15">-&gt;</operator><name pos:start="22:16" pos:end="22:22">profile</name></name> <operator pos:start="22:24" pos:end="22:25">!=</operator> <name pos:start="22:27" pos:end="22:44">FF_PROFILE_AAC_LOW</name> <operator pos:start="22:46" pos:end="22:47">&amp;&amp;</operator> <name pos:start="22:49" pos:end="22:62"><name pos:start="22:49" pos:end="22:53">avctx</name><operator pos:start="22:54" pos:end="22:55">-&gt;</operator><name pos:start="22:56" pos:end="22:62">profile</name></name> <operator pos:start="22:64" pos:end="22:65">!=</operator> <name pos:start="22:67" pos:end="22:84">FF_PROFILE_UNKNOWN</name></expr>)</condition> <block pos:start="22:87" pos:end="102:13">{<block_content pos:start="24:9" pos:end="102:13">

        <expr_stmt pos:start="24:9" pos:end="24:100"><expr pos:start="24:9" pos:end="24:99"><call pos:start="24:9" pos:end="24:99"><name pos:start="24:9" pos:end="24:14">av_log</name><argument_list pos:start="24:15" pos:end="24:99">(<argument pos:start="24:16" pos:end="24:20"><expr pos:start="24:16" pos:end="24:20"><name pos:start="24:16" pos:end="24:20">avctx</name></expr></argument>, <argument pos:start="24:23" pos:end="24:34"><expr pos:start="24:23" pos:end="24:34"><name pos:start="24:23" pos:end="24:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="24:37" pos:end="24:82"><expr pos:start="24:37" pos:end="24:82"><literal type="string" pos:start="24:37" pos:end="24:82">"invalid AAC profile: %d, only LC supported\n"</literal></expr></argument>, <argument pos:start="24:85" pos:end="24:98"><expr pos:start="24:85" pos:end="24:98"><name pos:start="24:85" pos:end="24:98"><name pos:start="24:85" pos:end="24:89">avctx</name><operator pos:start="24:90" pos:end="24:91">-&gt;</operator><name pos:start="24:92" pos:end="24:98">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="26:9" pos:end="26:31">return <expr pos:start="26:16" pos:end="26:30"><call pos:start="26:16" pos:end="26:30"><name pos:start="26:16" pos:end="26:22">AVERROR</name><argument_list pos:start="26:23" pos:end="26:30">(<argument pos:start="26:24" pos:end="26:29"><expr pos:start="26:24" pos:end="26:29"><name pos:start="26:24" pos:end="26:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="31:5" pos:end="33:80"><expr pos:start="31:5" pos:end="33:79"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">aacplus_handle</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <call pos:start="31:25" pos:end="33:79"><name pos:start="31:25" pos:end="31:38">aacplusEncOpen</name><argument_list pos:start="31:39" pos:end="33:79">(<argument pos:start="31:40" pos:end="31:57"><expr pos:start="31:40" pos:end="31:57"><name pos:start="31:40" pos:end="31:57"><name pos:start="31:40" pos:end="31:44">avctx</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:57">sample_rate</name></name></expr></argument>, <argument pos:start="31:60" pos:end="31:74"><expr pos:start="31:60" pos:end="31:74"><name pos:start="31:60" pos:end="31:74"><name pos:start="31:60" pos:end="31:64">avctx</name><operator pos:start="31:65" pos:end="31:66">-&gt;</operator><name pos:start="31:67" pos:end="31:74">channels</name></name></expr></argument>,

                                       <argument pos:start="33:40" pos:end="33:56"><expr pos:start="33:40" pos:end="33:56"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:56"><name pos:start="33:41" pos:end="33:41">s</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:56">samples_input</name></name></expr></argument>, <argument pos:start="33:59" pos:end="33:78"><expr pos:start="33:59" pos:end="33:78"><operator pos:start="33:59" pos:end="33:59">&amp;</operator><name pos:start="33:60" pos:end="33:78"><name pos:start="33:60" pos:end="33:60">s</name><operator pos:start="33:61" pos:end="33:62">-&gt;</operator><name pos:start="33:63" pos:end="33:78">max_output_bytes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="102:13"><if pos:start="35:5" pos:end="102:13">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:10">s</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:26">aacplus_handle</name></name></expr>)</condition> <block pos:start="35:29" pos:end="102:13">{<block_content pos:start="37:9" pos:end="102:13">

        <expr_stmt pos:start="37:9" pos:end="37:60"><expr pos:start="37:9" pos:end="37:59"><call pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:59">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:58"><expr pos:start="37:37" pos:end="37:58"><literal type="string" pos:start="37:37" pos:end="37:58">"can't open encoder\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <comment type="block" pos:start="44:5" pos:end="44:31">/* check aacplus version */</comment>

    <expr_stmt pos:start="46:5" pos:end="46:71"><expr pos:start="46:5" pos:end="46:70"><name pos:start="46:5" pos:end="46:15">aacplus_cfg</name> <operator pos:start="46:17" pos:end="46:17">=</operator> <call pos:start="46:19" pos:end="46:70"><name pos:start="46:19" pos:end="46:51">aacplusEncGetCurrentConfiguration</name><argument_list pos:start="46:52" pos:end="46:70">(<argument pos:start="46:53" pos:end="46:69"><expr pos:start="46:53" pos:end="46:69"><name pos:start="46:53" pos:end="46:69"><name pos:start="46:53" pos:end="46:53">s</name><operator pos:start="46:54" pos:end="46:55">-&gt;</operator><name pos:start="46:56" pos:end="46:69">aacplus_handle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="50:5" pos:end="50:43"><expr pos:start="50:5" pos:end="50:42"><name pos:start="50:5" pos:end="50:24"><name pos:start="50:5" pos:end="50:15">aacplus_cfg</name><operator pos:start="50:16" pos:end="50:17">-&gt;</operator><name pos:start="50:18" pos:end="50:24">bitRate</name></name> <operator pos:start="50:26" pos:end="50:26">=</operator> <name pos:start="50:28" pos:end="50:42"><name pos:start="50:28" pos:end="50:32">avctx</name><operator pos:start="50:33" pos:end="50:34">-&gt;</operator><name pos:start="50:35" pos:end="50:42">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:43"><expr pos:start="52:5" pos:end="52:42"><name pos:start="52:5" pos:end="52:26"><name pos:start="52:5" pos:end="52:15">aacplus_cfg</name><operator pos:start="52:16" pos:end="52:17">-&gt;</operator><name pos:start="52:18" pos:end="52:26">bandWidth</name></name> <operator pos:start="52:28" pos:end="52:28">=</operator> <name pos:start="52:30" pos:end="52:42"><name pos:start="52:30" pos:end="52:34">avctx</name><operator pos:start="52:35" pos:end="52:36">-&gt;</operator><name pos:start="52:37" pos:end="52:42">cutoff</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:75"><expr pos:start="54:5" pos:end="54:74"><name pos:start="54:5" pos:end="54:29"><name pos:start="54:5" pos:end="54:15">aacplus_cfg</name><operator pos:start="54:16" pos:end="54:17">-&gt;</operator><name pos:start="54:18" pos:end="54:29">outputFormat</name></name> <operator pos:start="54:31" pos:end="54:31">=</operator> <operator pos:start="54:33" pos:end="54:33">!</operator><operator pos:start="54:34" pos:end="54:34">(</operator><name pos:start="54:35" pos:end="54:46"><name pos:start="54:35" pos:end="54:39">avctx</name><operator pos:start="54:40" pos:end="54:41">-&gt;</operator><name pos:start="54:42" pos:end="54:46">flags</name></name> <operator pos:start="54:48" pos:end="54:48">&amp;</operator> <name pos:start="54:50" pos:end="54:73">CODEC_FLAG_GLOBAL_HEADER</name><operator pos:start="54:74" pos:end="54:74">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:114"><expr pos:start="56:5" pos:end="56:113"><name pos:start="56:5" pos:end="56:28"><name pos:start="56:5" pos:end="56:15">aacplus_cfg</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:28">inputFormat</name></name> <operator pos:start="56:30" pos:end="56:30">=</operator> <ternary pos:start="56:32" pos:end="56:113"><condition pos:start="56:32" pos:end="56:71"><expr pos:start="56:32" pos:end="56:69"><name pos:start="56:32" pos:end="56:48"><name pos:start="56:32" pos:end="56:36">avctx</name><operator pos:start="56:37" pos:end="56:38">-&gt;</operator><name pos:start="56:39" pos:end="56:48">sample_fmt</name></name> <operator pos:start="56:50" pos:end="56:51">==</operator> <name pos:start="56:53" pos:end="56:69">AV_SAMPLE_FMT_FLT</name></expr> ?</condition><then pos:start="56:73" pos:end="56:91"> <expr pos:start="56:73" pos:end="56:91"><name pos:start="56:73" pos:end="56:91">AACPLUS_INPUT_FLOAT</name></expr> </then><else pos:start="56:93" pos:end="56:113">: <expr pos:start="56:95" pos:end="56:113"><name pos:start="56:95" pos:end="56:113">AACPLUS_INPUT_16BIT</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="58:5" pos:end="102:13"><if pos:start="58:5" pos:end="102:13">if <condition pos:start="58:8" pos:end="58:68">(<expr pos:start="58:9" pos:end="58:67"><operator pos:start="58:9" pos:end="58:9">!</operator><call pos:start="58:10" pos:end="58:67"><name pos:start="58:10" pos:end="58:35">aacplusEncSetConfiguration</name><argument_list pos:start="58:36" pos:end="58:67">(<argument pos:start="58:37" pos:end="58:53"><expr pos:start="58:37" pos:end="58:53"><name pos:start="58:37" pos:end="58:53"><name pos:start="58:37" pos:end="58:37">s</name><operator pos:start="58:38" pos:end="58:39">-&gt;</operator><name pos:start="58:40" pos:end="58:53">aacplus_handle</name></name></expr></argument>, <argument pos:start="58:56" pos:end="58:66"><expr pos:start="58:56" pos:end="58:66"><name pos:start="58:56" pos:end="58:66">aacplus_cfg</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="58:70" pos:end="102:13">{<block_content pos:start="60:9" pos:end="102:13">

        <expr_stmt pos:start="60:9" pos:end="60:88"><expr pos:start="60:9" pos:end="60:87"><call pos:start="60:9" pos:end="60:87"><name pos:start="60:9" pos:end="60:14">av_log</name><argument_list pos:start="60:15" pos:end="60:87">(<argument pos:start="60:16" pos:end="60:20"><expr pos:start="60:16" pos:end="60:20"><name pos:start="60:16" pos:end="60:20">avctx</name></expr></argument>, <argument pos:start="60:23" pos:end="60:34"><expr pos:start="60:23" pos:end="60:34"><name pos:start="60:23" pos:end="60:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="60:37" pos:end="60:86"><expr pos:start="60:37" pos:end="60:86"><literal type="string" pos:start="60:37" pos:end="60:86">"libaacplus doesn't support this output format!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="62:9" pos:end="62:31">return <expr pos:start="62:16" pos:end="62:30"><call pos:start="62:16" pos:end="62:30"><name pos:start="62:16" pos:end="62:22">AVERROR</name><argument_list pos:start="62:23" pos:end="62:30">(<argument pos:start="62:24" pos:end="62:29"><expr pos:start="62:24" pos:end="62:29"><name pos:start="62:24" pos:end="62:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="67:5" pos:end="67:59"><expr pos:start="67:5" pos:end="67:58"><name pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:9">avctx</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">frame_size</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:40"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:40">samples_input</name></name> <operator pos:start="67:42" pos:end="67:42">/</operator> <name pos:start="67:44" pos:end="67:58"><name pos:start="67:44" pos:end="67:48">avctx</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:58">channels</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:35">/* Set decoder specific info */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:9">avctx</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:25">extradata_size</name></name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:29">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="102:13"><if pos:start="75:5" pos:end="102:13">if <condition pos:start="75:8" pos:end="75:48">(<expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:13">avctx</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:20">flags</name></name> <operator pos:start="75:22" pos:end="75:22">&amp;</operator> <name pos:start="75:24" pos:end="75:47">CODEC_FLAG_GLOBAL_HEADER</name></expr>)</condition> <block pos:start="75:50" pos:end="102:13">{<block_content pos:start="79:9" pos:end="102:13">



        <decl_stmt pos:start="79:9" pos:end="79:37"><decl pos:start="79:9" pos:end="79:36"><type pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:16">unsigned</name> <name pos:start="79:18" pos:end="79:21">char</name> <modifier pos:start="79:23" pos:end="79:23">*</modifier></type><name pos:start="79:24" pos:end="79:29">buffer</name> <init pos:start="79:31" pos:end="79:36">= <expr pos:start="79:33" pos:end="79:36"><name pos:start="79:33" pos:end="79:36">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="81:49"><decl pos:start="81:9" pos:end="81:48"><type pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:16">unsigned</name> <name pos:start="81:18" pos:end="81:21">long</name></type> <name pos:start="81:23" pos:end="81:48">decoder_specific_info_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="85:9" pos:end="102:13"><if pos:start="85:9" pos:end="102:13">if <condition pos:start="85:12" pos:end="87:77">(<expr pos:start="85:13" pos:end="87:76"><call pos:start="85:13" pos:end="87:71"><name pos:start="85:13" pos:end="85:44">aacplusEncGetDecoderSpecificInfo</name><argument_list pos:start="85:45" pos:end="87:71">(<argument pos:start="85:46" pos:end="85:62"><expr pos:start="85:46" pos:end="85:62"><name pos:start="85:46" pos:end="85:62"><name pos:start="85:46" pos:end="85:46">s</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:62">aacplus_handle</name></name></expr></argument>, <argument pos:start="85:65" pos:end="85:71"><expr pos:start="85:65" pos:end="85:71"><operator pos:start="85:65" pos:end="85:65">&amp;</operator><name pos:start="85:66" pos:end="85:71">buffer</name></expr></argument>,

                                           <argument pos:start="87:44" pos:end="87:70"><expr pos:start="87:44" pos:end="87:70"><operator pos:start="87:44" pos:end="87:44">&amp;</operator><name pos:start="87:45" pos:end="87:70">decoder_specific_info_size</name></expr></argument>)</argument_list></call> <operator pos:start="87:73" pos:end="87:74">==</operator> <literal type="number" pos:start="87:76" pos:end="87:76">1</literal></expr>)</condition> <block pos:start="87:79" pos:end="102:13">{<block_content pos:start="89:13" pos:end="102:13">

            <expr_stmt pos:start="89:13" pos:end="89:100"><expr pos:start="89:13" pos:end="89:99"><name pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:17">avctx</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:28">extradata</name></name> <operator pos:start="89:30" pos:end="89:30">=</operator> <call pos:start="89:32" pos:end="89:99"><name pos:start="89:32" pos:end="89:40">av_malloc</name><argument_list pos:start="89:41" pos:end="89:99">(<argument pos:start="89:42" pos:end="89:98"><expr pos:start="89:42" pos:end="89:98"><name pos:start="89:42" pos:end="89:67">decoder_specific_info_size</name> <operator pos:start="89:69" pos:end="89:69">+</operator> <name pos:start="89:71" pos:end="89:98">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





            <expr_stmt pos:start="95:13" pos:end="95:63"><expr pos:start="95:13" pos:end="95:62"><name pos:start="95:13" pos:end="95:33"><name pos:start="95:13" pos:end="95:17">avctx</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:33">extradata_size</name></name> <operator pos:start="95:35" pos:end="95:35">=</operator> <name pos:start="95:37" pos:end="95:62">decoder_specific_info_size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:68"><expr pos:start="97:13" pos:end="97:67"><call pos:start="97:13" pos:end="97:67"><name pos:start="97:13" pos:end="97:18">memcpy</name><argument_list pos:start="97:19" pos:end="97:67">(<argument pos:start="97:20" pos:end="97:35"><expr pos:start="97:20" pos:end="97:35"><name pos:start="97:20" pos:end="97:35"><name pos:start="97:20" pos:end="97:24">avctx</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:35">extradata</name></name></expr></argument>, <argument pos:start="97:38" pos:end="97:43"><expr pos:start="97:38" pos:end="97:43"><name pos:start="97:38" pos:end="97:43">buffer</name></expr></argument>, <argument pos:start="97:46" pos:end="97:66"><expr pos:start="97:46" pos:end="97:66"><name pos:start="97:46" pos:end="97:66"><name pos:start="97:46" pos:end="97:50">avctx</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="102:5" pos:end="102:13">return <expr pos:start="102:12" pos:end="102:12"><literal type="number" pos:start="102:12" pos:end="102:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
