<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/741.c" pos:tabs="8"><function pos:start="1:1" pos:end="162:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:17">avio_seek</name><parameter_list pos:start="1:18" pos:end="1:61">(<parameter pos:start="1:19" pos:end="1:32"><decl pos:start="1:19" pos:end="1:32"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:29">AVIOContext</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">s</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:48"><decl pos:start="1:35" pos:end="1:48"><type pos:start="1:35" pos:end="1:48"><name pos:start="1:35" pos:end="1:41">int64_t</name></type> <name pos:start="1:43" pos:end="1:48">offset</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:60">whence</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="162:1">{<block_content pos:start="5:5" pos:end="160:18">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:19">offset1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">force</name> <init pos:start="9:15" pos:end="9:37">= <expr pos:start="9:17" pos:end="9:37"><name pos:start="9:17" pos:end="9:22">whence</name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:37">AVSEEK_FORCE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">buffer_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">short_seek</name></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:10">whence</name> <operator pos:start="15:12" pos:end="15:13">&amp;=</operator> <operator pos:start="15:15" pos:end="15:15">~</operator><name pos:start="15:16" pos:end="15:27">AVSEEK_FORCE</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="24:41"><if pos:start="19:5" pos:end="24:41">if<condition pos:start="19:7" pos:end="19:10">(<expr pos:start="19:8" pos:end="19:9"><operator pos:start="19:8" pos:end="19:8">!</operator><name pos:start="19:9" pos:end="19:9">s</name></expr>)</condition><block type="pseudo" pos:start="24:5" pos:end="24:41"><block_content pos:start="24:5" pos:end="24:41">




    <expr_stmt pos:start="24:5" pos:end="24:41"><expr pos:start="24:5" pos:end="24:40"><name pos:start="24:5" pos:end="24:15">buffer_size</name> <operator pos:start="24:17" pos:end="24:17">=</operator> <name pos:start="24:19" pos:end="24:28"><name pos:start="24:19" pos:end="24:19">s</name><operator pos:start="24:20" pos:end="24:21">-&gt;</operator><name pos:start="24:22" pos:end="24:28">buf_end</name></name> <operator pos:start="24:30" pos:end="24:30">-</operator> <name pos:start="24:32" pos:end="24:40"><name pos:start="24:32" pos:end="24:32">s</name><operator pos:start="24:33" pos:end="24:34">-&gt;</operator><name pos:start="24:35" pos:end="24:40">buffer</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="26:5" pos:end="26:94">// pos is the absolute position that the beginning of s-&gt;buffer corresponds to in the file</comment>

    <expr_stmt pos:start="28:5" pos:end="28:53"><expr pos:start="28:5" pos:end="28:52"><name pos:start="28:5" pos:end="28:7">pos</name> <operator pos:start="28:9" pos:end="28:9">=</operator> <name pos:start="28:11" pos:end="28:16"><name pos:start="28:11" pos:end="28:11">s</name><operator pos:start="28:12" pos:end="28:13">-&gt;</operator><name pos:start="28:14" pos:end="28:16">pos</name></name> <operator pos:start="28:18" pos:end="28:18">-</operator> <operator pos:start="28:20" pos:end="28:20">(</operator><ternary pos:start="28:21" pos:end="28:51"><condition pos:start="28:21" pos:end="28:35"><expr pos:start="28:21" pos:end="28:33"><name pos:start="28:21" pos:end="28:33"><name pos:start="28:21" pos:end="28:21">s</name><operator pos:start="28:22" pos:end="28:23">-&gt;</operator><name pos:start="28:24" pos:end="28:33">write_flag</name></name></expr> ?</condition><then pos:start="28:37" pos:end="28:37"> <expr pos:start="28:37" pos:end="28:37"><literal type="number" pos:start="28:37" pos:end="28:37">0</literal></expr> </then><else pos:start="28:39" pos:end="28:51">: <expr pos:start="28:41" pos:end="28:51"><name pos:start="28:41" pos:end="28:51">buffer_size</name></expr></else></ternary><operator pos:start="28:52" pos:end="28:52">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="32:5" pos:end="49:5"><if pos:start="32:5" pos:end="49:5">if <condition pos:start="32:8" pos:end="32:49">(<expr pos:start="32:9" pos:end="32:48"><name pos:start="32:9" pos:end="32:14">whence</name> <operator pos:start="32:16" pos:end="32:17">!=</operator> <name pos:start="32:19" pos:end="32:26">SEEK_CUR</name> <operator pos:start="32:28" pos:end="32:29">&amp;&amp;</operator> <name pos:start="32:31" pos:end="32:36">whence</name> <operator pos:start="32:38" pos:end="32:39">!=</operator> <name pos:start="32:41" pos:end="32:48">SEEK_SET</name></expr>)</condition><block type="pseudo" pos:start="37:5" pos:end="49:5"><block_content pos:start="37:5" pos:end="49:5">




    <if_stmt pos:start="37:5" pos:end="49:5"><if pos:start="37:5" pos:end="49:5">if <condition pos:start="37:8" pos:end="37:27">(<expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:14">whence</name> <operator pos:start="37:16" pos:end="37:17">==</operator> <name pos:start="37:19" pos:end="37:26">SEEK_CUR</name></expr>)</condition> <block pos:start="37:29" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:26">

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:15">offset1</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:21">pos</name> <operator pos:start="39:23" pos:end="39:23">+</operator> <operator pos:start="39:25" pos:end="39:25">(</operator><name pos:start="39:26" pos:end="39:35"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:35">buf_ptr</name></name> <operator pos:start="39:37" pos:end="39:37">-</operator> <name pos:start="39:39" pos:end="39:47"><name pos:start="39:39" pos:end="39:39">s</name><operator pos:start="39:40" pos:end="39:41">-&gt;</operator><name pos:start="39:42" pos:end="39:47">buffer</name></name><operator pos:start="39:48" pos:end="39:48">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:27"><if pos:start="41:9" pos:end="43:27">if <condition pos:start="41:12" pos:end="41:24">(<expr pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:18">offset</name> <operator pos:start="41:20" pos:end="41:21">==</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:27"><block_content pos:start="43:13" pos:end="43:27">

            <return pos:start="43:13" pos:end="43:27">return <expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">offset1</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:14">offset</name> <operator pos:start="47:16" pos:end="47:17">+=</operator> <name pos:start="47:19" pos:end="47:25">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="68:45"><if pos:start="51:5" pos:end="68:45">if <condition pos:start="51:8" pos:end="51:19">(<expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:14">offset</name> <operator pos:start="51:16" pos:end="51:16">&lt;</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>)</condition><block type="pseudo" pos:start="56:5" pos:end="68:45"><block_content pos:start="56:5" pos:end="68:45">




    <if_stmt pos:start="56:5" pos:end="68:45"><if pos:start="56:5" pos:end="66:5">if <condition pos:start="56:8" pos:end="56:26">(<expr pos:start="56:9" pos:end="56:25"><name pos:start="56:9" pos:end="56:25"><name pos:start="56:9" pos:end="56:9">s</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:25">short_seek_get</name></name></expr>)</condition> <block pos:start="56:28" pos:end="66:5">{<block_content pos:start="58:9" pos:end="64:49">

        <expr_stmt pos:start="58:9" pos:end="58:50"><expr pos:start="58:9" pos:end="58:49"><name pos:start="58:9" pos:end="58:18">short_seek</name> <operator pos:start="58:20" pos:end="58:20">=</operator> <call pos:start="58:22" pos:end="58:49"><name pos:start="58:22" pos:end="58:38"><name pos:start="58:22" pos:end="58:22">s</name><operator pos:start="58:23" pos:end="58:24">-&gt;</operator><name pos:start="58:25" pos:end="58:38">short_seek_get</name></name><argument_list pos:start="58:39" pos:end="58:49">(<argument pos:start="58:40" pos:end="58:48"><expr pos:start="58:40" pos:end="58:48"><name pos:start="58:40" pos:end="58:48"><name pos:start="58:40" pos:end="58:40">s</name><operator pos:start="58:41" pos:end="58:42">-&gt;</operator><name pos:start="58:43" pos:end="58:48">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="60:9" pos:end="60:44">/* fallback to default short seek */</comment>

        <if_stmt pos:start="62:9" pos:end="64:49"><if pos:start="62:9" pos:end="64:49">if <condition pos:start="62:12" pos:end="62:28">(<expr pos:start="62:13" pos:end="62:27"><name pos:start="62:13" pos:end="62:22">short_seek</name> <operator pos:start="62:24" pos:end="62:25">&lt;=</operator> <literal type="number" pos:start="62:27" pos:end="62:27">0</literal></expr>)</condition><block type="pseudo" pos:start="64:13" pos:end="64:49"><block_content pos:start="64:13" pos:end="64:49">

            <expr_stmt pos:start="64:13" pos:end="64:49"><expr pos:start="64:13" pos:end="64:48"><name pos:start="64:13" pos:end="64:22">short_seek</name> <operator pos:start="64:24" pos:end="64:24">=</operator> <name pos:start="64:26" pos:end="64:48"><name pos:start="64:26" pos:end="64:26">s</name><operator pos:start="64:27" pos:end="64:28">-&gt;</operator><name pos:start="64:29" pos:end="64:48">short_seek_threshold</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="66:7" pos:end="68:45">else<block type="pseudo" pos:start="68:9" pos:end="68:45"><block_content pos:start="68:9" pos:end="68:45">

        <expr_stmt pos:start="68:9" pos:end="68:45"><expr pos:start="68:9" pos:end="68:44"><name pos:start="68:9" pos:end="68:18">short_seek</name> <operator pos:start="68:20" pos:end="68:20">=</operator> <name pos:start="68:22" pos:end="68:44"><name pos:start="68:22" pos:end="68:22">s</name><operator pos:start="68:23" pos:end="68:24">-&gt;</operator><name pos:start="68:25" pos:end="68:44">short_seek_threshold</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="72:5" pos:end="72:27"><expr pos:start="72:5" pos:end="72:26"><name pos:start="72:5" pos:end="72:11">offset1</name> <operator pos:start="72:13" pos:end="72:13">=</operator> <name pos:start="72:15" pos:end="72:20">offset</name> <operator pos:start="72:22" pos:end="72:22">-</operator> <name pos:start="72:24" pos:end="72:26">pos</name></expr>;</expr_stmt> <comment type="line" pos:start="72:29" pos:end="72:95">// "offset1" is the relative offset from the beginning of s-&gt;buffer</comment>

    <expr_stmt pos:start="74:5" pos:end="74:55"><expr pos:start="74:5" pos:end="74:54"><name pos:start="74:5" pos:end="74:18"><name pos:start="74:5" pos:end="74:5">s</name><operator pos:start="74:6" pos:end="74:7">-&gt;</operator><name pos:start="74:8" pos:end="74:18">buf_ptr_max</name></name> <operator pos:start="74:20" pos:end="74:20">=</operator> <call pos:start="74:22" pos:end="74:54"><name pos:start="74:22" pos:end="74:26">FFMAX</name><argument_list pos:start="74:27" pos:end="74:54">(<argument pos:start="74:28" pos:end="74:41"><expr pos:start="74:28" pos:end="74:41"><name pos:start="74:28" pos:end="74:41"><name pos:start="74:28" pos:end="74:28">s</name><operator pos:start="74:29" pos:end="74:30">-&gt;</operator><name pos:start="74:31" pos:end="74:41">buf_ptr_max</name></name></expr></argument>, <argument pos:start="74:44" pos:end="74:53"><expr pos:start="74:44" pos:end="74:53"><name pos:start="74:44" pos:end="74:53"><name pos:start="74:44" pos:end="74:44">s</name><operator pos:start="74:45" pos:end="74:46">-&gt;</operator><name pos:start="74:47" pos:end="74:53">buf_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="76:5" pos:end="156:5"><if pos:start="76:5" pos:end="84:5">if <condition pos:start="76:8" pos:end="78:94">(<expr pos:start="76:9" pos:end="78:93"><operator pos:start="76:9" pos:end="76:9">(</operator><operator pos:start="76:10" pos:end="76:10">!</operator><name pos:start="76:11" pos:end="76:19"><name pos:start="76:11" pos:end="76:11">s</name><operator pos:start="76:12" pos:end="76:13">-&gt;</operator><name pos:start="76:14" pos:end="76:19">direct</name></name> <operator pos:start="76:21" pos:end="76:22">||</operator> <operator pos:start="76:24" pos:end="76:24">!</operator><name pos:start="76:25" pos:end="76:31"><name pos:start="76:25" pos:end="76:25">s</name><operator pos:start="76:26" pos:end="76:27">-&gt;</operator><name pos:start="76:28" pos:end="76:31">seek</name></name><operator pos:start="76:32" pos:end="76:32">)</operator> <operator pos:start="76:34" pos:end="76:35">&amp;&amp;</operator>

        <name pos:start="78:9" pos:end="78:15">offset1</name> <operator pos:start="78:17" pos:end="78:18">&gt;=</operator> <literal type="number" pos:start="78:20" pos:end="78:20">0</literal> <operator pos:start="78:22" pos:end="78:23">&amp;&amp;</operator> <name pos:start="78:25" pos:end="78:31">offset1</name> <operator pos:start="78:33" pos:end="78:34">&lt;=</operator> <operator pos:start="78:36" pos:end="78:36">(</operator><ternary pos:start="78:37" pos:end="78:92"><condition pos:start="78:37" pos:end="78:51"><expr pos:start="78:37" pos:end="78:49"><name pos:start="78:37" pos:end="78:49"><name pos:start="78:37" pos:end="78:37">s</name><operator pos:start="78:38" pos:end="78:39">-&gt;</operator><name pos:start="78:40" pos:end="78:49">write_flag</name></name></expr> ?</condition><then pos:start="78:53" pos:end="78:78"> <expr pos:start="78:53" pos:end="78:78"><name pos:start="78:53" pos:end="78:66"><name pos:start="78:53" pos:end="78:53">s</name><operator pos:start="78:54" pos:end="78:55">-&gt;</operator><name pos:start="78:56" pos:end="78:66">buf_ptr_max</name></name> <operator pos:start="78:68" pos:end="78:68">-</operator> <name pos:start="78:70" pos:end="78:78"><name pos:start="78:70" pos:end="78:70">s</name><operator pos:start="78:71" pos:end="78:72">-&gt;</operator><name pos:start="78:73" pos:end="78:78">buffer</name></name></expr> </then><else pos:start="78:80" pos:end="78:92">: <expr pos:start="78:82" pos:end="78:92"><name pos:start="78:82" pos:end="78:92">buffer_size</name></expr></else></ternary><operator pos:start="78:93" pos:end="78:93">)</operator></expr>)</condition> <block pos:start="78:96" pos:end="84:5">{<block_content pos:start="82:9" pos:end="82:41">

        <comment type="block" pos:start="80:9" pos:end="80:47">/* can do the seek inside the buffer */</comment>

        <expr_stmt pos:start="82:9" pos:end="82:41"><expr pos:start="82:9" pos:end="82:40"><name pos:start="82:9" pos:end="82:18"><name pos:start="82:9" pos:end="82:9">s</name><operator pos:start="82:10" pos:end="82:11">-&gt;</operator><name pos:start="82:12" pos:end="82:18">buf_ptr</name></name> <operator pos:start="82:20" pos:end="82:20">=</operator> <name pos:start="82:22" pos:end="82:30"><name pos:start="82:22" pos:end="82:22">s</name><operator pos:start="82:23" pos:end="82:24">-&gt;</operator><name pos:start="82:25" pos:end="82:30">buffer</name></name> <operator pos:start="82:32" pos:end="82:32">+</operator> <name pos:start="82:34" pos:end="82:40">offset1</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="84:7" pos:end="104:5">else if <condition pos:start="84:15" pos:end="92:44">(<expr pos:start="84:16" pos:end="92:43"><operator pos:start="84:16" pos:end="84:16">(</operator><operator pos:start="84:17" pos:end="84:17">!</operator><operator pos:start="84:18" pos:end="84:18">(</operator><name pos:start="84:19" pos:end="84:29"><name pos:start="84:19" pos:end="84:19">s</name><operator pos:start="84:20" pos:end="84:21">-&gt;</operator><name pos:start="84:22" pos:end="84:29">seekable</name></name> <operator pos:start="84:31" pos:end="84:31">&amp;</operator> <name pos:start="84:33" pos:end="84:52">AVIO_SEEKABLE_NORMAL</name><operator pos:start="84:53" pos:end="84:53">)</operator> <operator pos:start="84:55" pos:end="84:56">||</operator>

               <name pos:start="86:16" pos:end="86:22">offset1</name> <operator pos:start="86:24" pos:end="86:25">&lt;=</operator> <name pos:start="86:27" pos:end="86:37">buffer_size</name> <operator pos:start="86:39" pos:end="86:39">+</operator> <name pos:start="86:41" pos:end="86:50">short_seek</name><operator pos:start="86:51" pos:end="86:51">)</operator> <operator pos:start="86:53" pos:end="86:54">&amp;&amp;</operator>

               <operator pos:start="88:16" pos:end="88:16">!</operator><name pos:start="88:17" pos:end="88:29"><name pos:start="88:17" pos:end="88:17">s</name><operator pos:start="88:18" pos:end="88:19">-&gt;</operator><name pos:start="88:20" pos:end="88:29">write_flag</name></name> <operator pos:start="88:31" pos:end="88:32">&amp;&amp;</operator> <name pos:start="88:34" pos:end="88:40">offset1</name> <operator pos:start="88:42" pos:end="88:43">&gt;=</operator> <literal type="number" pos:start="88:45" pos:end="88:45">0</literal> <operator pos:start="88:47" pos:end="88:48">&amp;&amp;</operator>

               <operator pos:start="90:16" pos:end="90:16">(</operator><operator pos:start="90:17" pos:end="90:17">!</operator><name pos:start="90:18" pos:end="90:26"><name pos:start="90:18" pos:end="90:18">s</name><operator pos:start="90:19" pos:end="90:20">-&gt;</operator><name pos:start="90:21" pos:end="90:26">direct</name></name> <operator pos:start="90:28" pos:end="90:29">||</operator> <operator pos:start="90:31" pos:end="90:31">!</operator><name pos:start="90:32" pos:end="90:38"><name pos:start="90:32" pos:end="90:32">s</name><operator pos:start="90:33" pos:end="90:34">-&gt;</operator><name pos:start="90:35" pos:end="90:38">seek</name></name><operator pos:start="90:39" pos:end="90:39">)</operator> <operator pos:start="90:41" pos:end="90:42">&amp;&amp;</operator>

              <operator pos:start="92:15" pos:end="92:15">(</operator><name pos:start="92:16" pos:end="92:21">whence</name> <operator pos:start="92:23" pos:end="92:24">!=</operator> <name pos:start="92:26" pos:end="92:33">SEEK_END</name> <operator pos:start="92:35" pos:end="92:36">||</operator> <name pos:start="92:38" pos:end="92:42">force</name><operator pos:start="92:43" pos:end="92:43">)</operator></expr>)</condition> <block pos:start="92:46" pos:end="104:5">{<block_content pos:start="94:9" pos:end="102:52">

        <while pos:start="94:9" pos:end="96:27">while<condition pos:start="94:14" pos:end="94:49">(<expr pos:start="94:15" pos:end="94:48"><name pos:start="94:15" pos:end="94:20"><name pos:start="94:15" pos:end="94:15">s</name><operator pos:start="94:16" pos:end="94:17">-&gt;</operator><name pos:start="94:18" pos:end="94:20">pos</name></name> <operator pos:start="94:22" pos:end="94:22">&lt;</operator> <name pos:start="94:24" pos:end="94:29">offset</name> <operator pos:start="94:31" pos:end="94:32">&amp;&amp;</operator> <operator pos:start="94:34" pos:end="94:34">!</operator><name pos:start="94:35" pos:end="94:48"><name pos:start="94:35" pos:end="94:35">s</name><operator pos:start="94:36" pos:end="94:37">-&gt;</operator><name pos:start="94:38" pos:end="94:48">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="96:13" pos:end="96:27"><block_content pos:start="96:13" pos:end="96:27">

            <expr_stmt pos:start="96:13" pos:end="96:27"><expr pos:start="96:13" pos:end="96:26"><call pos:start="96:13" pos:end="96:26"><name pos:start="96:13" pos:end="96:23">fill_buffer</name><argument_list pos:start="96:24" pos:end="96:26">(<argument pos:start="96:25" pos:end="96:25"><expr pos:start="96:25" pos:end="96:25"><name pos:start="96:25" pos:end="96:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>

        <if_stmt pos:start="98:9" pos:end="100:31"><if pos:start="98:9" pos:end="100:31">if <condition pos:start="98:12" pos:end="98:27">(<expr pos:start="98:13" pos:end="98:26"><name pos:start="98:13" pos:end="98:26"><name pos:start="98:13" pos:end="98:13">s</name><operator pos:start="98:14" pos:end="98:15">-&gt;</operator><name pos:start="98:16" pos:end="98:26">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="100:13" pos:end="100:31"><block_content pos:start="100:13" pos:end="100:31">

            <return pos:start="100:13" pos:end="100:31">return <expr pos:start="100:20" pos:end="100:30"><name pos:start="100:20" pos:end="100:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="102:9" pos:end="102:52"><expr pos:start="102:9" pos:end="102:51"><name pos:start="102:9" pos:end="102:18"><name pos:start="102:9" pos:end="102:9">s</name><operator pos:start="102:10" pos:end="102:11">-&gt;</operator><name pos:start="102:12" pos:end="102:18">buf_ptr</name></name> <operator pos:start="102:20" pos:end="102:20">=</operator> <name pos:start="102:22" pos:end="102:31"><name pos:start="102:22" pos:end="102:22">s</name><operator pos:start="102:23" pos:end="102:24">-&gt;</operator><name pos:start="102:25" pos:end="102:31">buf_end</name></name> <operator pos:start="102:33" pos:end="102:33">-</operator> <operator pos:start="102:35" pos:end="102:35">(</operator><name pos:start="102:36" pos:end="102:41"><name pos:start="102:36" pos:end="102:36">s</name><operator pos:start="102:37" pos:end="102:38">-&gt;</operator><name pos:start="102:39" pos:end="102:41">pos</name></name> <operator pos:start="102:43" pos:end="102:43">-</operator> <name pos:start="102:45" pos:end="102:50">offset</name><operator pos:start="102:51" pos:end="102:51">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="104:7" pos:end="128:5">else if<condition pos:start="104:14" pos:end="104:98">(<expr pos:start="104:15" pos:end="104:97"><operator pos:start="104:15" pos:end="104:15">!</operator><name pos:start="104:16" pos:end="104:28"><name pos:start="104:16" pos:end="104:16">s</name><operator pos:start="104:17" pos:end="104:18">-&gt;</operator><name pos:start="104:19" pos:end="104:28">write_flag</name></name> <operator pos:start="104:30" pos:end="104:31">&amp;&amp;</operator> <name pos:start="104:33" pos:end="104:71"><name pos:start="104:33" pos:end="104:39">offset1</name> <argument_list type="generic" pos:start="104:41" pos:end="104:71">&lt; <argument pos:start="104:43" pos:end="104:70"><expr pos:start="104:43" pos:end="104:70"><literal type="number" pos:start="104:43" pos:end="104:43">0</literal> <operator pos:start="104:45" pos:end="104:46">&amp;&amp;</operator> <operator pos:start="104:48" pos:end="104:48">-</operator><name pos:start="104:49" pos:end="104:70"><name pos:start="104:49" pos:end="104:55">offset1</name> <argument_list type="generic" pos:start="104:57" pos:end="104:70">&lt; <argument pos:start="104:59" pos:end="104:69"><expr pos:start="104:59" pos:end="104:69"><name pos:start="104:59" pos:end="104:69">buffer_size</name></expr></argument>&gt;</argument_list></name></expr></argument>&gt;</argument_list></name><literal type="number" pos:start="104:72" pos:end="104:72">1</literal> <operator pos:start="104:74" pos:end="104:75">&amp;&amp;</operator> <name pos:start="104:77" pos:end="104:83"><name pos:start="104:77" pos:end="104:77">s</name><operator pos:start="104:78" pos:end="104:79">-&gt;</operator><name pos:start="104:80" pos:end="104:83">seek</name></name> <operator pos:start="104:85" pos:end="104:86">&amp;&amp;</operator> <name pos:start="104:88" pos:end="104:93">offset</name> <operator pos:start="104:95" pos:end="104:95">&gt;</operator> <literal type="number" pos:start="104:97" pos:end="104:97">0</literal></expr>)</condition> <block pos:start="104:100" pos:end="128:5">{<block_content pos:start="106:9" pos:end="126:54">

        <decl_stmt pos:start="106:9" pos:end="106:20"><decl pos:start="106:9" pos:end="106:19"><type pos:start="106:9" pos:end="106:15"><name pos:start="106:9" pos:end="106:15">int64_t</name></type> <name pos:start="106:17" pos:end="106:19">res</name></decl>;</decl_stmt>



        <expr_stmt pos:start="110:9" pos:end="110:42"><expr pos:start="110:9" pos:end="110:41"><name pos:start="110:9" pos:end="110:11">pos</name> <operator pos:start="110:13" pos:end="110:14">-=</operator> <call pos:start="110:16" pos:end="110:41"><name pos:start="110:16" pos:end="110:20">FFMIN</name><argument_list pos:start="110:21" pos:end="110:41">(<argument pos:start="110:22" pos:end="110:35"><expr pos:start="110:22" pos:end="110:35"><name pos:start="110:22" pos:end="110:32">buffer_size</name><operator pos:start="110:33" pos:end="110:34">&gt;&gt;</operator><literal type="number" pos:start="110:35" pos:end="110:35">1</literal></expr></argument>, <argument pos:start="110:38" pos:end="110:40"><expr pos:start="110:38" pos:end="110:40"><name pos:start="110:38" pos:end="110:40">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="112:9" pos:end="114:23"><if pos:start="112:9" pos:end="114:23">if <condition pos:start="112:12" pos:end="112:58">(<expr pos:start="112:13" pos:end="112:57"><operator pos:start="112:13" pos:end="112:13">(</operator><name pos:start="112:14" pos:end="112:16">res</name> <operator pos:start="112:18" pos:end="112:18">=</operator> <call pos:start="112:20" pos:end="112:52"><name pos:start="112:20" pos:end="112:26"><name pos:start="112:20" pos:end="112:20">s</name><operator pos:start="112:21" pos:end="112:22">-&gt;</operator><name pos:start="112:23" pos:end="112:26">seek</name></name><argument_list pos:start="112:27" pos:end="112:52">(<argument pos:start="112:28" pos:end="112:36"><expr pos:start="112:28" pos:end="112:36"><name pos:start="112:28" pos:end="112:36"><name pos:start="112:28" pos:end="112:28">s</name><operator pos:start="112:29" pos:end="112:30">-&gt;</operator><name pos:start="112:31" pos:end="112:36">opaque</name></name></expr></argument>, <argument pos:start="112:39" pos:end="112:41"><expr pos:start="112:39" pos:end="112:41"><name pos:start="112:39" pos:end="112:41">pos</name></expr></argument>, <argument pos:start="112:44" pos:end="112:51"><expr pos:start="112:44" pos:end="112:51"><name pos:start="112:44" pos:end="112:51">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="112:53" pos:end="112:53">)</operator> <operator pos:start="112:55" pos:end="112:55">&lt;</operator> <literal type="number" pos:start="112:57" pos:end="112:57">0</literal></expr>)</condition><block type="pseudo" pos:start="114:13" pos:end="114:23"><block_content pos:start="114:13" pos:end="114:23">

            <return pos:start="114:13" pos:end="114:23">return <expr pos:start="114:20" pos:end="114:22"><name pos:start="114:20" pos:end="114:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="116:9" pos:end="118:31"><expr pos:start="116:9" pos:end="118:30"><name pos:start="116:9" pos:end="116:18"><name pos:start="116:9" pos:end="116:9">s</name><operator pos:start="116:10" pos:end="116:11">-&gt;</operator><name pos:start="116:12" pos:end="116:18">buf_end</name></name> <operator pos:start="116:20" pos:end="116:20">=</operator>

        <name pos:start="118:9" pos:end="118:18"><name pos:start="118:9" pos:end="118:9">s</name><operator pos:start="118:10" pos:end="118:11">-&gt;</operator><name pos:start="118:12" pos:end="118:18">buf_ptr</name></name> <operator pos:start="118:20" pos:end="118:20">=</operator> <name pos:start="118:22" pos:end="118:30"><name pos:start="118:22" pos:end="118:22">s</name><operator pos:start="118:23" pos:end="118:24">-&gt;</operator><name pos:start="118:25" pos:end="118:30">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:21"><expr pos:start="120:9" pos:end="120:20"><name pos:start="120:9" pos:end="120:14"><name pos:start="120:9" pos:end="120:9">s</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:14">pos</name></name> <operator pos:start="120:16" pos:end="120:16">=</operator> <name pos:start="120:18" pos:end="120:20">pos</name></expr>;</expr_stmt>

        <expr_stmt pos:start="122:9" pos:end="122:27"><expr pos:start="122:9" pos:end="122:26"><name pos:start="122:9" pos:end="122:22"><name pos:start="122:9" pos:end="122:9">s</name><operator pos:start="122:10" pos:end="122:11">-&gt;</operator><name pos:start="122:12" pos:end="122:22">eof_reached</name></name> <operator pos:start="122:24" pos:end="122:24">=</operator> <literal type="number" pos:start="122:26" pos:end="122:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="124:9" pos:end="124:23"><expr pos:start="124:9" pos:end="124:22"><call pos:start="124:9" pos:end="124:22"><name pos:start="124:9" pos:end="124:19">fill_buffer</name><argument_list pos:start="124:20" pos:end="124:22">(<argument pos:start="124:21" pos:end="124:21"><expr pos:start="124:21" pos:end="124:21"><name pos:start="124:21" pos:end="124:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="126:9" pos:end="126:54">return <expr pos:start="126:16" pos:end="126:53"><call pos:start="126:16" pos:end="126:53"><name pos:start="126:16" pos:end="126:24">avio_seek</name><argument_list pos:start="126:25" pos:end="126:53">(<argument pos:start="126:26" pos:end="126:26"><expr pos:start="126:26" pos:end="126:26"><name pos:start="126:26" pos:end="126:26">s</name></expr></argument>, <argument pos:start="126:29" pos:end="126:34"><expr pos:start="126:29" pos:end="126:34"><name pos:start="126:29" pos:end="126:34">offset</name></expr></argument>, <argument pos:start="126:37" pos:end="126:52"><expr pos:start="126:37" pos:end="126:52"><name pos:start="126:37" pos:end="126:44">SEEK_SET</name> <operator pos:start="126:46" pos:end="126:46">|</operator> <name pos:start="126:48" pos:end="126:52">force</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="128:7" pos:end="156:5">else <block pos:start="128:12" pos:end="156:5">{<block_content pos:start="130:9" pos:end="154:24">

        <decl_stmt pos:start="130:9" pos:end="130:20"><decl pos:start="130:9" pos:end="130:19"><type pos:start="130:9" pos:end="130:15"><name pos:start="130:9" pos:end="130:15">int64_t</name></type> <name pos:start="130:17" pos:end="130:19">res</name></decl>;</decl_stmt>

        <if_stmt pos:start="132:9" pos:end="136:9"><if pos:start="132:9" pos:end="136:9">if <condition pos:start="132:12" pos:end="132:26">(<expr pos:start="132:13" pos:end="132:25"><name pos:start="132:13" pos:end="132:25"><name pos:start="132:13" pos:end="132:13">s</name><operator pos:start="132:14" pos:end="132:15">-&gt;</operator><name pos:start="132:16" pos:end="132:25">write_flag</name></name></expr>)</condition> <block pos:start="132:28" pos:end="136:9">{<block_content pos:start="134:13" pos:end="134:28">

            <expr_stmt pos:start="134:13" pos:end="134:28"><expr pos:start="134:13" pos:end="134:27"><call pos:start="134:13" pos:end="134:27"><name pos:start="134:13" pos:end="134:24">flush_buffer</name><argument_list pos:start="134:25" pos:end="134:27">(<argument pos:start="134:26" pos:end="134:26"><expr pos:start="134:26" pos:end="134:26"><name pos:start="134:26" pos:end="134:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="138:9" pos:end="140:34"><if pos:start="138:9" pos:end="140:34">if <condition pos:start="138:12" pos:end="138:21">(<expr pos:start="138:13" pos:end="138:20"><operator pos:start="138:13" pos:end="138:13">!</operator><name pos:start="138:14" pos:end="138:20"><name pos:start="138:14" pos:end="138:14">s</name><operator pos:start="138:15" pos:end="138:16">-&gt;</operator><name pos:start="138:17" pos:end="138:20">seek</name></name></expr>)</condition><block type="pseudo" pos:start="140:13" pos:end="140:34"><block_content pos:start="140:13" pos:end="140:34">

            <return pos:start="140:13" pos:end="140:34">return <expr pos:start="140:20" pos:end="140:33"><call pos:start="140:20" pos:end="140:33"><name pos:start="140:20" pos:end="140:26">AVERROR</name><argument_list pos:start="140:27" pos:end="140:33">(<argument pos:start="140:28" pos:end="140:32"><expr pos:start="140:28" pos:end="140:32"><name pos:start="140:28" pos:end="140:32">EPIPE</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="142:9" pos:end="144:23"><if pos:start="142:9" pos:end="144:23">if <condition pos:start="142:12" pos:end="142:61">(<expr pos:start="142:13" pos:end="142:60"><operator pos:start="142:13" pos:end="142:13">(</operator><name pos:start="142:14" pos:end="142:16">res</name> <operator pos:start="142:18" pos:end="142:18">=</operator> <call pos:start="142:20" pos:end="142:55"><name pos:start="142:20" pos:end="142:26"><name pos:start="142:20" pos:end="142:20">s</name><operator pos:start="142:21" pos:end="142:22">-&gt;</operator><name pos:start="142:23" pos:end="142:26">seek</name></name><argument_list pos:start="142:27" pos:end="142:55">(<argument pos:start="142:28" pos:end="142:36"><expr pos:start="142:28" pos:end="142:36"><name pos:start="142:28" pos:end="142:36"><name pos:start="142:28" pos:end="142:28">s</name><operator pos:start="142:29" pos:end="142:30">-&gt;</operator><name pos:start="142:31" pos:end="142:36">opaque</name></name></expr></argument>, <argument pos:start="142:39" pos:end="142:44"><expr pos:start="142:39" pos:end="142:44"><name pos:start="142:39" pos:end="142:44">offset</name></expr></argument>, <argument pos:start="142:47" pos:end="142:54"><expr pos:start="142:47" pos:end="142:54"><name pos:start="142:47" pos:end="142:54">SEEK_SET</name></expr></argument>)</argument_list></call><operator pos:start="142:56" pos:end="142:56">)</operator> <operator pos:start="142:58" pos:end="142:58">&lt;</operator> <literal type="number" pos:start="142:60" pos:end="142:60">0</literal></expr>)</condition><block type="pseudo" pos:start="144:13" pos:end="144:23"><block_content pos:start="144:13" pos:end="144:23">

            <return pos:start="144:13" pos:end="144:23">return <expr pos:start="144:20" pos:end="144:22"><name pos:start="144:20" pos:end="144:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="146:9" pos:end="146:25"><expr pos:start="146:9" pos:end="146:24"><name pos:start="146:9" pos:end="146:21"><name pos:start="146:9" pos:end="146:9">s</name><operator pos:start="146:10" pos:end="146:11">-&gt;</operator><name pos:start="146:12" pos:end="146:21">seek_count</name></name> <operator pos:start="146:23" pos:end="146:24">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="148:9" pos:end="150:35"><if pos:start="148:9" pos:end="150:35">if <condition pos:start="148:12" pos:end="148:27">(<expr pos:start="148:13" pos:end="148:26"><operator pos:start="148:13" pos:end="148:13">!</operator><name pos:start="148:14" pos:end="148:26"><name pos:start="148:14" pos:end="148:14">s</name><operator pos:start="148:15" pos:end="148:16">-&gt;</operator><name pos:start="148:17" pos:end="148:26">write_flag</name></name></expr>)</condition><block type="pseudo" pos:start="150:13" pos:end="150:35"><block_content pos:start="150:13" pos:end="150:35">

            <expr_stmt pos:start="150:13" pos:end="150:35"><expr pos:start="150:13" pos:end="150:34"><name pos:start="150:13" pos:end="150:22"><name pos:start="150:13" pos:end="150:13">s</name><operator pos:start="150:14" pos:end="150:15">-&gt;</operator><name pos:start="150:16" pos:end="150:22">buf_end</name></name> <operator pos:start="150:24" pos:end="150:24">=</operator> <name pos:start="150:26" pos:end="150:34"><name pos:start="150:26" pos:end="150:26">s</name><operator pos:start="150:27" pos:end="150:28">-&gt;</operator><name pos:start="150:29" pos:end="150:34">buffer</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="152:9" pos:end="152:48"><expr pos:start="152:9" pos:end="152:47"><name pos:start="152:9" pos:end="152:18"><name pos:start="152:9" pos:end="152:9">s</name><operator pos:start="152:10" pos:end="152:11">-&gt;</operator><name pos:start="152:12" pos:end="152:18">buf_ptr</name></name> <operator pos:start="152:20" pos:end="152:20">=</operator> <name pos:start="152:22" pos:end="152:35"><name pos:start="152:22" pos:end="152:22">s</name><operator pos:start="152:23" pos:end="152:24">-&gt;</operator><name pos:start="152:25" pos:end="152:35">buf_ptr_max</name></name> <operator pos:start="152:37" pos:end="152:37">=</operator> <name pos:start="152:39" pos:end="152:47"><name pos:start="152:39" pos:end="152:39">s</name><operator pos:start="152:40" pos:end="152:41">-&gt;</operator><name pos:start="152:42" pos:end="152:47">buffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="154:9" pos:end="154:24"><expr pos:start="154:9" pos:end="154:23"><name pos:start="154:9" pos:end="154:14"><name pos:start="154:9" pos:end="154:9">s</name><operator pos:start="154:10" pos:end="154:11">-&gt;</operator><name pos:start="154:12" pos:end="154:14">pos</name></name> <operator pos:start="154:16" pos:end="154:16">=</operator> <name pos:start="154:18" pos:end="154:23">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="158:5" pos:end="158:23"><expr pos:start="158:5" pos:end="158:22"><name pos:start="158:5" pos:end="158:18"><name pos:start="158:5" pos:end="158:5">s</name><operator pos:start="158:6" pos:end="158:7">-&gt;</operator><name pos:start="158:8" pos:end="158:18">eof_reached</name></name> <operator pos:start="158:20" pos:end="158:20">=</operator> <literal type="number" pos:start="158:22" pos:end="158:22">0</literal></expr>;</expr_stmt>

    <return pos:start="160:5" pos:end="160:18">return <expr pos:start="160:12" pos:end="160:17"><name pos:start="160:12" pos:end="160:17">offset</name></expr>;</return>

</block_content>}</block></function></unit>
