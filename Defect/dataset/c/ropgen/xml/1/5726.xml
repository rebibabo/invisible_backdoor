<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5726.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">skip_data_stream_element</name><parameter_list pos:start="1:37" pos:end="1:55">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:50">GetBitContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:34">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">byte_align</name> <init pos:start="5:20" pos:end="5:34">= <expr pos:start="5:22" pos:end="5:34"><call pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:30">get_bits1</name><argument_list pos:start="5:31" pos:end="5:34">(<argument pos:start="5:32" pos:end="5:33"><expr pos:start="5:32" pos:end="5:33"><name pos:start="5:32" pos:end="5:33">gb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">count</name> <init pos:start="7:15" pos:end="7:31">= <expr pos:start="7:17" pos:end="7:31"><call pos:start="7:17" pos:end="7:31"><name pos:start="7:17" pos:end="7:24">get_bits</name><argument_list pos:start="7:25" pos:end="7:31">(<argument pos:start="7:26" pos:end="7:27"><expr pos:start="7:26" pos:end="7:27"><name pos:start="7:26" pos:end="7:27">gb</name></expr></argument>, <argument pos:start="7:30" pos:end="7:30"><expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="11:33"><if pos:start="9:5" pos:end="11:33">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:13">count</name> <operator pos:start="9:15" pos:end="9:16">==</operator> <literal type="number" pos:start="9:18" pos:end="9:20">255</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:33"><block_content pos:start="11:9" pos:end="11:33">

        <expr_stmt pos:start="11:9" pos:end="11:33"><expr pos:start="11:9" pos:end="11:32"><name pos:start="11:9" pos:end="11:13">count</name> <operator pos:start="11:15" pos:end="11:16">+=</operator> <call pos:start="11:18" pos:end="11:32"><name pos:start="11:18" pos:end="11:25">get_bits</name><argument_list pos:start="11:26" pos:end="11:32">(<argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">gb</name></expr></argument>, <argument pos:start="11:31" pos:end="11:31"><expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="15:27"><if pos:start="13:5" pos:end="15:27">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:18">byte_align</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:27"><block_content pos:start="15:9" pos:end="15:27">

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:22">align_get_bits</name><argument_list pos:start="15:23" pos:end="15:26">(<argument pos:start="15:24" pos:end="15:25"><expr pos:start="15:24" pos:end="15:25"><name pos:start="15:24" pos:end="15:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><call pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:18">skip_bits_long</name><argument_list pos:start="17:19" pos:end="17:33">(<argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>, <argument pos:start="17:24" pos:end="17:32"><expr pos:start="17:24" pos:end="17:32"><literal type="number" pos:start="17:24" pos:end="17:24">8</literal> <operator pos:start="17:26" pos:end="17:26">*</operator> <name pos:start="17:28" pos:end="17:32">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
