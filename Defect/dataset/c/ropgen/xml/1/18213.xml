<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18213.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">inet_connect</name><parameter_list pos:start="1:17" pos:end="1:59">(<parameter pos:start="1:18" pos:end="1:32"><decl pos:start="1:18" pos:end="1:32"><type pos:start="1:18" pos:end="1:32"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">str</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:44"><decl pos:start="1:35" pos:end="1:44"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:38">bool</name></type> <name pos:start="1:40" pos:end="1:44">block</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:16">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">sock</name> <init pos:start="7:14" pos:end="7:17">= <expr pos:start="7:16" pos:end="7:17"><operator pos:start="7:16" pos:end="7:16">-</operator><literal type="number" pos:start="7:17" pos:end="7:17">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:50"><expr pos:start="11:5" pos:end="11:49"><name pos:start="11:5" pos:end="11:8">opts</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:49"><name pos:start="11:12" pos:end="11:27">qemu_opts_create</name><argument_list pos:start="11:28" pos:end="11:49">(<argument pos:start="11:29" pos:end="11:39"><expr pos:start="11:29" pos:end="11:39"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:39">dummy_opts</name></expr></argument>, <argument pos:start="11:42" pos:end="11:45"><expr pos:start="11:42" pos:end="11:45"><name pos:start="11:42" pos:end="11:45">NULL</name></expr></argument>, <argument pos:start="11:48" pos:end="11:48"><expr pos:start="11:48" pos:end="11:48"><literal type="number" pos:start="11:48" pos:end="11:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:18">inet_parse</name><argument_list pos:start="13:19" pos:end="13:29">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">opts</name></expr></argument>, <argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">str</name></expr></argument>)</argument_list></call> <operator pos:start="13:31" pos:end="13:32">==</operator> <literal type="number" pos:start="13:34" pos:end="13:34">0</literal></expr>)</condition> <block pos:start="13:37" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:45">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:18">(<expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:17">block</name></expr>)</condition> <block pos:start="15:20" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:46">

            <expr_stmt pos:start="17:13" pos:end="17:46"><expr pos:start="17:13" pos:end="17:45"><call pos:start="17:13" pos:end="17:45"><name pos:start="17:13" pos:end="17:24">qemu_opt_set</name><argument_list pos:start="17:25" pos:end="17:45">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">opts</name></expr></argument>, <argument pos:start="17:32" pos:end="17:38"><expr pos:start="17:32" pos:end="17:38"><literal type="string" pos:start="17:32" pos:end="17:38">"block"</literal></expr></argument>, <argument pos:start="17:41" pos:end="17:44"><expr pos:start="17:41" pos:end="17:44"><literal type="string" pos:start="17:41" pos:end="17:44">"on"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:45"><expr pos:start="21:9" pos:end="21:44"><name pos:start="21:9" pos:end="21:12">sock</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:44"><name pos:start="21:16" pos:end="21:32">inet_connect_opts</name><argument_list pos:start="21:33" pos:end="21:44">(<argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37">opts</name></expr></argument>, <argument pos:start="21:40" pos:end="21:43"><expr pos:start="21:40" pos:end="21:43"><name pos:start="21:40" pos:end="21:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:51">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><call pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:17">error_set</name><argument_list pos:start="25:18" pos:end="25:50">(<argument pos:start="25:19" pos:end="25:22"><expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">errp</name></expr></argument>, <argument pos:start="25:25" pos:end="25:49"><expr pos:start="25:25" pos:end="25:49"><name pos:start="25:25" pos:end="25:49">QERR_SOCKET_CREATE_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><call pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:17">qemu_opts_del</name><argument_list pos:start="29:18" pos:end="29:23">(<argument pos:start="29:19" pos:end="29:22"><expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="31:5" pos:end="31:16">return <expr pos:start="31:12" pos:end="31:15"><name pos:start="31:12" pos:end="31:15">sock</name></expr>;</return>

</block_content>}</block></function>
</unit>
