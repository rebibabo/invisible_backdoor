<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8478.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">doTest</name><parameter_list pos:start="1:18" pos:end="5:68">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:30">ref</name><index pos:start="1:31" pos:end="1:33">[<expr pos:start="1:32" pos:end="1:32"><literal type="number" pos:start="1:32" pos:end="1:32">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:48">refStride</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:44"><decl pos:start="3:19" pos:end="3:44"><type pos:start="3:19" pos:end="3:44"><name pos:start="3:19" pos:end="3:34"><name pos:start="3:19" pos:end="3:22">enum</name> <name pos:start="3:24" pos:end="3:34">PixelFormat</name></name></type> <name pos:start="3:36" pos:end="3:44">srcFormat</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:72"><decl pos:start="3:47" pos:end="3:72"><type pos:start="3:47" pos:end="3:72"><name pos:start="3:47" pos:end="3:62"><name pos:start="3:47" pos:end="3:50">enum</name> <name pos:start="3:52" pos:end="3:62">PixelFormat</name></name></type> <name pos:start="3:64" pos:end="3:72">dstFormat</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:26"><decl pos:start="5:19" pos:end="5:26"><type pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:21">int</name></type> <name pos:start="5:23" pos:end="5:26">srcW</name></decl></parameter>, <parameter pos:start="5:29" pos:end="5:36"><decl pos:start="5:29" pos:end="5:36"><type pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:36">srcH</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:46"><decl pos:start="5:39" pos:end="5:46"><type pos:start="5:39" pos:end="5:46"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:46">dstW</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:56"><decl pos:start="5:49" pos:end="5:56"><type pos:start="5:49" pos:end="5:56"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:56">dstH</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:67"><decl pos:start="5:59" pos:end="5:67"><type pos:start="5:59" pos:end="5:67"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="231:1">{<block_content pos:start="9:5" pos:end="229:15">

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:19"><name pos:start="9:14" pos:end="9:16">src</name><index pos:start="9:17" pos:end="9:19">[<expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">4</literal></expr>]</index></name> <init pos:start="9:21" pos:end="9:25">= <expr pos:start="9:23" pos:end="9:25"><block pos:start="9:23" pos:end="9:25">{<expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19"><name pos:start="11:14" pos:end="11:16">dst</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">4</literal></expr>]</index></name> <init pos:start="11:21" pos:end="11:25">= <expr pos:start="11:23" pos:end="11:25"><block pos:start="11:23" pos:end="11:25">{<expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:19"><name pos:start="13:14" pos:end="13:16">out</name><index pos:start="13:17" pos:end="13:19">[<expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">4</literal></expr>]</index></name> <init pos:start="13:21" pos:end="13:25">= <expr pos:start="13:23" pos:end="13:25"><block pos:start="13:23" pos:end="13:25">{<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:17">srcStride</name><index pos:start="15:18" pos:end="15:20">[<expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr>]</index></name></decl>, <decl pos:start="15:23" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:31">dstStride</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:17">ssdY</name></decl>, <decl pos:start="19:20" pos:end="19:25"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:20" pos:end="19:23">ssdU</name><init pos:start="19:24" pos:end="19:25">=<expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr></init></decl>, <decl pos:start="19:28" pos:end="19:33"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:28" pos:end="19:31">ssdV</name><init pos:start="19:32" pos:end="19:33">=<expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">0</literal></expr></init></decl>, <decl pos:start="19:36" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:12"/><name pos:start="19:36" pos:end="19:39">ssdA</name><init pos:start="19:40" pos:end="19:41">=<expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="23:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:10">struct</name> <name pos:start="21:12" pos:end="21:21">SwsContext</name></name> <modifier pos:start="21:23" pos:end="21:23">*</modifier></type><name pos:start="21:24" pos:end="21:33">srcContext</name> <init pos:start="21:35" pos:end="21:40">= <expr pos:start="21:37" pos:end="21:40"><name pos:start="21:37" pos:end="21:40">NULL</name></expr></init></decl>, <decl pos:start="21:43" pos:end="21:60"><type ref="prev" pos:start="21:5" pos:end="21:23"><modifier pos:start="21:43" pos:end="21:43">*</modifier></type><name pos:start="21:44" pos:end="21:53">dstContext</name> <init pos:start="21:55" pos:end="21:60">= <expr pos:start="21:57" pos:end="21:60"><name pos:start="21:57" pos:end="21:60">NULL</name></expr></init></decl>,

                      <decl pos:start="23:23" pos:end="23:40"><type ref="prev" pos:start="21:5" pos:end="21:23"><modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:33">outContext</name> <init pos:start="23:35" pos:end="23:40">= <expr pos:start="23:37" pos:end="23:40"><name pos:start="23:37" pos:end="23:40">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:12"><expr pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:7">res</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <literal type="number" pos:start="29:11" pos:end="29:11">0</literal></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="93:5">for <control pos:start="31:9" pos:end="31:23">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">i</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:18"><expr pos:start="31:15" pos:end="31:17"><name pos:start="31:15" pos:end="31:15">i</name><operator pos:start="31:16" pos:end="31:16">&lt;</operator><literal type="number" pos:start="31:17" pos:end="31:17">4</literal></expr>;</condition> <incr pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:20">i</name><operator pos:start="31:21" pos:end="31:22">++</operator></expr></incr>)</control> <block pos:start="31:25" pos:end="93:5">{<block_content pos:start="35:9" pos:end="91:9">

        <comment type="line" pos:start="33:9" pos:end="33:34">// avoid stride % bpp != 0</comment>

        <if_stmt pos:start="35:9" pos:end="45:33"><if pos:start="35:9" pos:end="37:33">if <condition pos:start="35:12" pos:end="35:65">(<expr pos:start="35:13" pos:end="35:64"><name pos:start="35:13" pos:end="35:21">srcFormat</name><operator pos:start="35:22" pos:end="35:23">==</operator><name pos:start="35:24" pos:end="35:36">PIX_FMT_RGB24</name> <operator pos:start="35:38" pos:end="35:39">||</operator> <name pos:start="35:41" pos:end="35:49">srcFormat</name><operator pos:start="35:50" pos:end="35:51">==</operator><name pos:start="35:52" pos:end="35:64">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:21">srcStride</name><index pos:start="37:22" pos:end="37:24">[<expr pos:start="37:23" pos:end="37:23"><name pos:start="37:23" pos:end="37:23">i</name></expr>]</index></name><operator pos:start="37:25" pos:end="37:25">=</operator> <name pos:start="37:27" pos:end="37:30">srcW</name><operator pos:start="37:31" pos:end="37:31">*</operator><literal type="number" pos:start="37:32" pos:end="37:32">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="39:9" pos:end="41:33">else if <condition pos:start="39:17" pos:end="39:74">(<expr pos:start="39:18" pos:end="39:73"><name pos:start="39:18" pos:end="39:26">srcFormat</name><operator pos:start="39:27" pos:end="39:28">==</operator><name pos:start="39:29" pos:end="39:43">PIX_FMT_RGB48BE</name> <operator pos:start="39:45" pos:end="39:46">||</operator> <name pos:start="39:48" pos:end="39:56">srcFormat</name><operator pos:start="39:57" pos:end="39:58">==</operator><name pos:start="39:59" pos:end="39:73">PIX_FMT_RGB48LE</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:33"><block_content pos:start="41:13" pos:end="41:33">

            <expr_stmt pos:start="41:13" pos:end="41:33"><expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:21">srcStride</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><name pos:start="41:23" pos:end="41:23">i</name></expr>]</index></name><operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:30">srcW</name><operator pos:start="41:31" pos:end="41:31">*</operator><literal type="number" pos:start="41:32" pos:end="41:32">6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="43:9" pos:end="45:33">else<block type="pseudo" pos:start="45:13" pos:end="45:33"><block_content pos:start="45:13" pos:end="45:33">

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:21">srcStride</name><index pos:start="45:22" pos:end="45:24">[<expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">i</name></expr>]</index></name><operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:30">srcW</name><operator pos:start="45:31" pos:end="45:31">*</operator><literal type="number" pos:start="45:32" pos:end="45:32">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="49:9" pos:end="59:33"><if pos:start="49:9" pos:end="51:33">if <condition pos:start="49:12" pos:end="49:65">(<expr pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:21">dstFormat</name><operator pos:start="49:22" pos:end="49:23">==</operator><name pos:start="49:24" pos:end="49:36">PIX_FMT_RGB24</name> <operator pos:start="49:38" pos:end="49:39">||</operator> <name pos:start="49:41" pos:end="49:49">dstFormat</name><operator pos:start="49:50" pos:end="49:51">==</operator><name pos:start="49:52" pos:end="49:64">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:33"><block_content pos:start="51:13" pos:end="51:33">

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:21">dstStride</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">i</name></expr>]</index></name><operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:30">dstW</name><operator pos:start="51:31" pos:end="51:31">*</operator><literal type="number" pos:start="51:32" pos:end="51:32">3</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="53:9" pos:end="55:33">else if <condition pos:start="53:17" pos:end="53:74">(<expr pos:start="53:18" pos:end="53:73"><name pos:start="53:18" pos:end="53:26">dstFormat</name><operator pos:start="53:27" pos:end="53:28">==</operator><name pos:start="53:29" pos:end="53:43">PIX_FMT_RGB48BE</name> <operator pos:start="53:45" pos:end="53:46">||</operator> <name pos:start="53:48" pos:end="53:56">dstFormat</name><operator pos:start="53:57" pos:end="53:58">==</operator><name pos:start="53:59" pos:end="53:73">PIX_FMT_RGB48LE</name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:33"><block_content pos:start="55:13" pos:end="55:33">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:21">dstStride</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr>]</index></name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:30">dstW</name><operator pos:start="55:31" pos:end="55:31">*</operator><literal type="number" pos:start="55:32" pos:end="55:32">6</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="57:9" pos:end="59:33">else<block type="pseudo" pos:start="59:13" pos:end="59:33"><block_content pos:start="59:13" pos:end="59:33">

            <expr_stmt pos:start="59:13" pos:end="59:33"><expr pos:start="59:13" pos:end="59:32"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:21">dstStride</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">i</name></expr>]</index></name><operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:30">dstW</name><operator pos:start="59:31" pos:end="59:31">*</operator><literal type="number" pos:start="59:32" pos:end="59:32">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <comment type="block" pos:start="63:9" pos:end="69:40">/* Image buffers passed into libswscale can be allocated any way you

         * prefer, as long as they're aligned enough for the architecture, and

         * they're freed appropriately (such as using av_free for buffers

         * allocated with av_malloc). */</comment>

        <comment type="block" pos:start="71:9" pos:end="73:28">/* An extra 16 bytes is being allocated because some scalers may write

         * out of bounds. */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:11">src</name><index pos:start="75:12" pos:end="75:14">[<expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">i</name></expr>]</index></name><operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:26">av_mallocz</name><argument_list pos:start="75:27" pos:end="75:48">(<argument pos:start="75:28" pos:end="75:47"><expr pos:start="75:28" pos:end="75:47"><name pos:start="75:28" pos:end="75:39"><name pos:start="75:28" pos:end="75:36">srcStride</name><index pos:start="75:37" pos:end="75:39">[<expr pos:start="75:38" pos:end="75:38"><name pos:start="75:38" pos:end="75:38">i</name></expr>]</index></name><operator pos:start="75:40" pos:end="75:40">*</operator><name pos:start="75:41" pos:end="75:44">srcH</name><operator pos:start="75:45" pos:end="75:45">+</operator><literal type="number" pos:start="75:46" pos:end="75:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:14"><name pos:start="77:9" pos:end="77:11">dst</name><index pos:start="77:12" pos:end="77:14">[<expr pos:start="77:13" pos:end="77:13"><name pos:start="77:13" pos:end="77:13">i</name></expr>]</index></name><operator pos:start="77:15" pos:end="77:15">=</operator> <call pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:26">av_mallocz</name><argument_list pos:start="77:27" pos:end="77:48">(<argument pos:start="77:28" pos:end="77:47"><expr pos:start="77:28" pos:end="77:47"><name pos:start="77:28" pos:end="77:39"><name pos:start="77:28" pos:end="77:36">dstStride</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><name pos:start="77:38" pos:end="77:38">i</name></expr>]</index></name><operator pos:start="77:40" pos:end="77:40">*</operator><name pos:start="77:41" pos:end="77:44">dstH</name><operator pos:start="77:45" pos:end="77:45">+</operator><literal type="number" pos:start="77:46" pos:end="77:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:11">out</name><index pos:start="79:12" pos:end="79:14">[<expr pos:start="79:13" pos:end="79:13"><name pos:start="79:13" pos:end="79:13">i</name></expr>]</index></name><operator pos:start="79:15" pos:end="79:15">=</operator> <call pos:start="79:17" pos:end="79:42"><name pos:start="79:17" pos:end="79:26">av_mallocz</name><argument_list pos:start="79:27" pos:end="79:42">(<argument pos:start="79:28" pos:end="79:41"><expr pos:start="79:28" pos:end="79:41"><name pos:start="79:28" pos:end="79:39"><name pos:start="79:28" pos:end="79:36">refStride</name><index pos:start="79:37" pos:end="79:39">[<expr pos:start="79:38" pos:end="79:38"><name pos:start="79:38" pos:end="79:38">i</name></expr>]</index></name><operator pos:start="79:40" pos:end="79:40">*</operator><name pos:start="79:41" pos:end="79:41">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="91:9"><if pos:start="81:9" pos:end="91:9">if <condition pos:start="81:12" pos:end="81:42">(<expr pos:start="81:13" pos:end="81:41"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:19"><name pos:start="81:14" pos:end="81:16">src</name><index pos:start="81:17" pos:end="81:19">[<expr pos:start="81:18" pos:end="81:18"><name pos:start="81:18" pos:end="81:18">i</name></expr>]</index></name> <operator pos:start="81:21" pos:end="81:22">||</operator> <operator pos:start="81:24" pos:end="81:24">!</operator><name pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:27">dst</name><index pos:start="81:28" pos:end="81:30">[<expr pos:start="81:29" pos:end="81:29"><name pos:start="81:29" pos:end="81:29">i</name></expr>]</index></name> <operator pos:start="81:32" pos:end="81:33">||</operator> <operator pos:start="81:35" pos:end="81:35">!</operator><name pos:start="81:36" pos:end="81:41"><name pos:start="81:36" pos:end="81:38">out</name><index pos:start="81:39" pos:end="81:41">[<expr pos:start="81:40" pos:end="81:40"><name pos:start="81:40" pos:end="81:40">i</name></expr>]</index></name></expr>)</condition> <block pos:start="81:44" pos:end="91:9">{<block_content pos:start="83:13" pos:end="89:21">

            <expr_stmt pos:start="83:13" pos:end="83:29"><expr pos:start="83:13" pos:end="83:28"><call pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:18">perror</name><argument_list pos:start="83:19" pos:end="83:28">(<argument pos:start="83:20" pos:end="83:27"><expr pos:start="83:20" pos:end="83:27"><literal type="string" pos:start="83:20" pos:end="83:27">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">res</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>;</expr_stmt>



            <goto pos:start="89:13" pos:end="89:21">goto <name pos:start="89:18" pos:end="89:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="97:5" pos:end="97:103"><expr pos:start="97:5" pos:end="97:102"><name pos:start="97:5" pos:end="97:14">srcContext</name><operator pos:start="97:15" pos:end="97:15">=</operator> <call pos:start="97:17" pos:end="97:102"><name pos:start="97:17" pos:end="97:30">sws_getContext</name><argument_list pos:start="97:31" pos:end="97:102">(<argument pos:start="97:32" pos:end="97:32"><expr pos:start="97:32" pos:end="97:32"><name pos:start="97:32" pos:end="97:32">w</name></expr></argument>, <argument pos:start="97:35" pos:end="97:35"><expr pos:start="97:35" pos:end="97:35"><name pos:start="97:35" pos:end="97:35">h</name></expr></argument>, <argument pos:start="97:38" pos:end="97:53"><expr pos:start="97:38" pos:end="97:53"><name pos:start="97:38" pos:end="97:53">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="97:56" pos:end="97:59"><expr pos:start="97:56" pos:end="97:59"><name pos:start="97:56" pos:end="97:59">srcW</name></expr></argument>, <argument pos:start="97:62" pos:end="97:65"><expr pos:start="97:62" pos:end="97:65"><name pos:start="97:62" pos:end="97:65">srcH</name></expr></argument>, <argument pos:start="97:68" pos:end="97:76"><expr pos:start="97:68" pos:end="97:76"><name pos:start="97:68" pos:end="97:76">srcFormat</name></expr></argument>, <argument pos:start="97:79" pos:end="97:83"><expr pos:start="97:79" pos:end="97:83"><name pos:start="97:79" pos:end="97:83">flags</name></expr></argument>, <argument pos:start="97:86" pos:end="97:89"><expr pos:start="97:86" pos:end="97:89"><name pos:start="97:86" pos:end="97:89">NULL</name></expr></argument>, <argument pos:start="97:92" pos:end="97:95"><expr pos:start="97:92" pos:end="97:95"><name pos:start="97:92" pos:end="97:95">NULL</name></expr></argument>, <argument pos:start="97:98" pos:end="97:101"><expr pos:start="97:98" pos:end="97:101"><name pos:start="97:98" pos:end="97:101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="99:20">(<expr pos:start="99:9" pos:end="99:19"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:19">srcContext</name></expr>)</condition> <block pos:start="99:22" pos:end="113:5">{<block_content pos:start="101:9" pos:end="111:17">

        <expr_stmt pos:start="101:9" pos:end="105:56"><expr pos:start="101:9" pos:end="105:55"><call pos:start="101:9" pos:end="105:55"><name pos:start="101:9" pos:end="101:15">fprintf</name><argument_list pos:start="101:16" pos:end="105:55">(<argument pos:start="101:17" pos:end="101:22"><expr pos:start="101:17" pos:end="101:22"><name pos:start="101:17" pos:end="101:22">stderr</name></expr></argument>, <argument pos:start="101:25" pos:end="101:52"><expr pos:start="101:25" pos:end="101:52"><literal type="string" pos:start="101:25" pos:end="101:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="103:17" pos:end="103:61"><expr pos:start="103:17" pos:end="103:61"><name pos:start="103:17" pos:end="103:56"><name pos:start="103:17" pos:end="103:38">av_pix_fmt_descriptors</name><index pos:start="103:39" pos:end="103:56">[<expr pos:start="103:40" pos:end="103:55"><name pos:start="103:40" pos:end="103:55">PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="103:57" pos:end="103:57">.</operator><name pos:start="103:58" pos:end="103:61">name</name></expr></argument>,

                <argument pos:start="105:17" pos:end="105:54"><expr pos:start="105:17" pos:end="105:54"><name pos:start="105:17" pos:end="105:49"><name pos:start="105:17" pos:end="105:38">av_pix_fmt_descriptors</name><index pos:start="105:39" pos:end="105:49">[<expr pos:start="105:40" pos:end="105:48"><name pos:start="105:40" pos:end="105:48">srcFormat</name></expr>]</index></name><operator pos:start="105:50" pos:end="105:50">.</operator><name pos:start="105:51" pos:end="105:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:17"><expr pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:11">res</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <operator pos:start="107:15" pos:end="107:15">-</operator><literal type="number" pos:start="107:16" pos:end="107:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="111:9" pos:end="111:17">goto <name pos:start="111:14" pos:end="111:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:102"><expr pos:start="115:5" pos:end="115:101"><name pos:start="115:5" pos:end="115:14">dstContext</name><operator pos:start="115:15" pos:end="115:15">=</operator> <call pos:start="115:17" pos:end="115:101"><name pos:start="115:17" pos:end="115:30">sws_getContext</name><argument_list pos:start="115:31" pos:end="115:101">(<argument pos:start="115:32" pos:end="115:35"><expr pos:start="115:32" pos:end="115:35"><name pos:start="115:32" pos:end="115:35">srcW</name></expr></argument>, <argument pos:start="115:38" pos:end="115:41"><expr pos:start="115:38" pos:end="115:41"><name pos:start="115:38" pos:end="115:41">srcH</name></expr></argument>, <argument pos:start="115:44" pos:end="115:52"><expr pos:start="115:44" pos:end="115:52"><name pos:start="115:44" pos:end="115:52">srcFormat</name></expr></argument>, <argument pos:start="115:55" pos:end="115:58"><expr pos:start="115:55" pos:end="115:58"><name pos:start="115:55" pos:end="115:58">dstW</name></expr></argument>, <argument pos:start="115:61" pos:end="115:64"><expr pos:start="115:61" pos:end="115:64"><name pos:start="115:61" pos:end="115:64">dstH</name></expr></argument>, <argument pos:start="115:67" pos:end="115:75"><expr pos:start="115:67" pos:end="115:75"><name pos:start="115:67" pos:end="115:75">dstFormat</name></expr></argument>, <argument pos:start="115:78" pos:end="115:82"><expr pos:start="115:78" pos:end="115:82"><name pos:start="115:78" pos:end="115:82">flags</name></expr></argument>, <argument pos:start="115:85" pos:end="115:88"><expr pos:start="115:85" pos:end="115:88"><name pos:start="115:85" pos:end="115:88">NULL</name></expr></argument>, <argument pos:start="115:91" pos:end="115:94"><expr pos:start="115:91" pos:end="115:94"><name pos:start="115:91" pos:end="115:94">NULL</name></expr></argument>, <argument pos:start="115:97" pos:end="115:100"><expr pos:start="115:97" pos:end="115:100"><name pos:start="115:97" pos:end="115:100">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="131:5"><if pos:start="117:5" pos:end="131:5">if <condition pos:start="117:8" pos:end="117:20">(<expr pos:start="117:9" pos:end="117:19"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:19">dstContext</name></expr>)</condition> <block pos:start="117:22" pos:end="131:5">{<block_content pos:start="119:9" pos:end="129:17">

        <expr_stmt pos:start="119:9" pos:end="123:56"><expr pos:start="119:9" pos:end="123:55"><call pos:start="119:9" pos:end="123:55"><name pos:start="119:9" pos:end="119:15">fprintf</name><argument_list pos:start="119:16" pos:end="123:55">(<argument pos:start="119:17" pos:end="119:22"><expr pos:start="119:17" pos:end="119:22"><name pos:start="119:17" pos:end="119:22">stderr</name></expr></argument>, <argument pos:start="119:25" pos:end="119:52"><expr pos:start="119:25" pos:end="119:52"><literal type="string" pos:start="119:25" pos:end="119:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="121:17" pos:end="121:54"><expr pos:start="121:17" pos:end="121:54"><name pos:start="121:17" pos:end="121:49"><name pos:start="121:17" pos:end="121:38">av_pix_fmt_descriptors</name><index pos:start="121:39" pos:end="121:49">[<expr pos:start="121:40" pos:end="121:48"><name pos:start="121:40" pos:end="121:48">srcFormat</name></expr>]</index></name><operator pos:start="121:50" pos:end="121:50">.</operator><name pos:start="121:51" pos:end="121:54">name</name></expr></argument>,

                <argument pos:start="123:17" pos:end="123:54"><expr pos:start="123:17" pos:end="123:54"><name pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:38">av_pix_fmt_descriptors</name><index pos:start="123:39" pos:end="123:49">[<expr pos:start="123:40" pos:end="123:48"><name pos:start="123:40" pos:end="123:48">dstFormat</name></expr>]</index></name><operator pos:start="123:50" pos:end="123:50">.</operator><name pos:start="123:51" pos:end="123:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:17"><expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:11">res</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <operator pos:start="125:15" pos:end="125:15">-</operator><literal type="number" pos:start="125:16" pos:end="125:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="129:9" pos:end="129:17">goto <name pos:start="129:14" pos:end="129:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:103"><expr pos:start="133:5" pos:end="133:102"><name pos:start="133:5" pos:end="133:14">outContext</name><operator pos:start="133:15" pos:end="133:15">=</operator> <call pos:start="133:17" pos:end="133:102"><name pos:start="133:17" pos:end="133:30">sws_getContext</name><argument_list pos:start="133:31" pos:end="133:102">(<argument pos:start="133:32" pos:end="133:35"><expr pos:start="133:32" pos:end="133:35"><name pos:start="133:32" pos:end="133:35">dstW</name></expr></argument>, <argument pos:start="133:38" pos:end="133:41"><expr pos:start="133:38" pos:end="133:41"><name pos:start="133:38" pos:end="133:41">dstH</name></expr></argument>, <argument pos:start="133:44" pos:end="133:52"><expr pos:start="133:44" pos:end="133:52"><name pos:start="133:44" pos:end="133:52">dstFormat</name></expr></argument>, <argument pos:start="133:55" pos:end="133:55"><expr pos:start="133:55" pos:end="133:55"><name pos:start="133:55" pos:end="133:55">w</name></expr></argument>, <argument pos:start="133:58" pos:end="133:58"><expr pos:start="133:58" pos:end="133:58"><name pos:start="133:58" pos:end="133:58">h</name></expr></argument>, <argument pos:start="133:61" pos:end="133:76"><expr pos:start="133:61" pos:end="133:76"><name pos:start="133:61" pos:end="133:76">PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="133:79" pos:end="133:83"><expr pos:start="133:79" pos:end="133:83"><name pos:start="133:79" pos:end="133:83">flags</name></expr></argument>, <argument pos:start="133:86" pos:end="133:89"><expr pos:start="133:86" pos:end="133:89"><name pos:start="133:86" pos:end="133:89">NULL</name></expr></argument>, <argument pos:start="133:92" pos:end="133:95"><expr pos:start="133:92" pos:end="133:95"><name pos:start="133:92" pos:end="133:95">NULL</name></expr></argument>, <argument pos:start="133:98" pos:end="133:101"><expr pos:start="133:98" pos:end="133:101"><name pos:start="133:98" pos:end="133:101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="149:5"><if pos:start="135:5" pos:end="149:5">if <condition pos:start="135:8" pos:end="135:20">(<expr pos:start="135:9" pos:end="135:19"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:19">outContext</name></expr>)</condition> <block pos:start="135:22" pos:end="149:5">{<block_content pos:start="137:9" pos:end="147:17">

        <expr_stmt pos:start="137:9" pos:end="141:63"><expr pos:start="137:9" pos:end="141:62"><call pos:start="137:9" pos:end="141:62"><name pos:start="137:9" pos:end="137:15">fprintf</name><argument_list pos:start="137:16" pos:end="141:62">(<argument pos:start="137:17" pos:end="137:22"><expr pos:start="137:17" pos:end="137:22"><name pos:start="137:17" pos:end="137:22">stderr</name></expr></argument>, <argument pos:start="137:25" pos:end="137:52"><expr pos:start="137:25" pos:end="137:52"><literal type="string" pos:start="137:25" pos:end="137:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="139:17" pos:end="139:54"><expr pos:start="139:17" pos:end="139:54"><name pos:start="139:17" pos:end="139:49"><name pos:start="139:17" pos:end="139:38">av_pix_fmt_descriptors</name><index pos:start="139:39" pos:end="139:49">[<expr pos:start="139:40" pos:end="139:48"><name pos:start="139:40" pos:end="139:48">dstFormat</name></expr>]</index></name><operator pos:start="139:50" pos:end="139:50">.</operator><name pos:start="139:51" pos:end="139:54">name</name></expr></argument>,

                <argument pos:start="141:17" pos:end="141:61"><expr pos:start="141:17" pos:end="141:61"><name pos:start="141:17" pos:end="141:56"><name pos:start="141:17" pos:end="141:38">av_pix_fmt_descriptors</name><index pos:start="141:39" pos:end="141:56">[<expr pos:start="141:40" pos:end="141:55"><name pos:start="141:40" pos:end="141:55">PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="141:57" pos:end="141:57">.</operator><name pos:start="141:58" pos:end="141:61">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:17"><expr pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:11">res</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <operator pos:start="143:15" pos:end="143:15">-</operator><literal type="number" pos:start="143:16" pos:end="143:16">1</literal></expr>;</expr_stmt>



        <goto pos:start="147:9" pos:end="147:17">goto <name pos:start="147:14" pos:end="147:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="151:1" pos:end="151:82">//    printf("test %X %X %X -&gt; %X %X %X\n", (int)ref[0], (int)ref[1], (int)ref[2],</comment>

<comment type="line" pos:start="153:1" pos:end="153:49">//        (int)src[0], (int)src[1], (int)src[2]);</comment>



    <expr_stmt pos:start="157:5" pos:end="157:67"><expr pos:start="157:5" pos:end="157:66"><call pos:start="157:5" pos:end="157:66"><name pos:start="157:5" pos:end="157:13">sws_scale</name><argument_list pos:start="157:14" pos:end="157:66">(<argument pos:start="157:15" pos:end="157:24"><expr pos:start="157:15" pos:end="157:24"><name pos:start="157:15" pos:end="157:24">srcContext</name></expr></argument>, <argument pos:start="157:27" pos:end="157:29"><expr pos:start="157:27" pos:end="157:29"><name pos:start="157:27" pos:end="157:29">ref</name></expr></argument>, <argument pos:start="157:32" pos:end="157:40"><expr pos:start="157:32" pos:end="157:40"><name pos:start="157:32" pos:end="157:40">refStride</name></expr></argument>, <argument pos:start="157:43" pos:end="157:43"><expr pos:start="157:43" pos:end="157:43"><literal type="number" pos:start="157:43" pos:end="157:43">0</literal></expr></argument>, <argument pos:start="157:46" pos:end="157:46"><expr pos:start="157:46" pos:end="157:46"><name pos:start="157:46" pos:end="157:46">h</name></expr></argument>   , <argument pos:start="157:52" pos:end="157:54"><expr pos:start="157:52" pos:end="157:54"><name pos:start="157:52" pos:end="157:54">src</name></expr></argument>, <argument pos:start="157:57" pos:end="157:65"><expr pos:start="157:57" pos:end="157:65"><name pos:start="157:57" pos:end="157:65">srcStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:67"><expr pos:start="159:5" pos:end="159:66"><call pos:start="159:5" pos:end="159:66"><name pos:start="159:5" pos:end="159:13">sws_scale</name><argument_list pos:start="159:14" pos:end="159:66">(<argument pos:start="159:15" pos:end="159:24"><expr pos:start="159:15" pos:end="159:24"><name pos:start="159:15" pos:end="159:24">dstContext</name></expr></argument>, <argument pos:start="159:27" pos:end="159:29"><expr pos:start="159:27" pos:end="159:29"><name pos:start="159:27" pos:end="159:29">src</name></expr></argument>, <argument pos:start="159:32" pos:end="159:40"><expr pos:start="159:32" pos:end="159:40"><name pos:start="159:32" pos:end="159:40">srcStride</name></expr></argument>, <argument pos:start="159:43" pos:end="159:43"><expr pos:start="159:43" pos:end="159:43"><literal type="number" pos:start="159:43" pos:end="159:43">0</literal></expr></argument>, <argument pos:start="159:46" pos:end="159:49"><expr pos:start="159:46" pos:end="159:49"><name pos:start="159:46" pos:end="159:49">srcH</name></expr></argument>, <argument pos:start="159:52" pos:end="159:54"><expr pos:start="159:52" pos:end="159:54"><name pos:start="159:52" pos:end="159:54">dst</name></expr></argument>, <argument pos:start="159:57" pos:end="159:65"><expr pos:start="159:57" pos:end="159:65"><name pos:start="159:57" pos:end="159:65">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:67"><expr pos:start="161:5" pos:end="161:66"><call pos:start="161:5" pos:end="161:66"><name pos:start="161:5" pos:end="161:13">sws_scale</name><argument_list pos:start="161:14" pos:end="161:66">(<argument pos:start="161:15" pos:end="161:24"><expr pos:start="161:15" pos:end="161:24"><name pos:start="161:15" pos:end="161:24">outContext</name></expr></argument>, <argument pos:start="161:27" pos:end="161:29"><expr pos:start="161:27" pos:end="161:29"><name pos:start="161:27" pos:end="161:29">dst</name></expr></argument>, <argument pos:start="161:32" pos:end="161:40"><expr pos:start="161:32" pos:end="161:40"><name pos:start="161:32" pos:end="161:40">dstStride</name></expr></argument>, <argument pos:start="161:43" pos:end="161:43"><expr pos:start="161:43" pos:end="161:43"><literal type="number" pos:start="161:43" pos:end="161:43">0</literal></expr></argument>, <argument pos:start="161:46" pos:end="161:49"><expr pos:start="161:46" pos:end="161:49"><name pos:start="161:46" pos:end="161:49">dstH</name></expr></argument>, <argument pos:start="161:52" pos:end="161:54"><expr pos:start="161:52" pos:end="161:54"><name pos:start="161:52" pos:end="161:54">out</name></expr></argument>, <argument pos:start="161:57" pos:end="161:65"><expr pos:start="161:57" pos:end="161:65"><name pos:start="161:57" pos:end="161:65">refStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:67"><expr pos:start="165:5" pos:end="165:66"><name pos:start="165:5" pos:end="165:8">ssdY</name><operator pos:start="165:9" pos:end="165:9">=</operator> <call pos:start="165:11" pos:end="165:66"><name pos:start="165:11" pos:end="165:16">getSSD</name><argument_list pos:start="165:17" pos:end="165:66">(<argument pos:start="165:18" pos:end="165:23"><expr pos:start="165:18" pos:end="165:23"><name pos:start="165:18" pos:end="165:23"><name pos:start="165:18" pos:end="165:20">ref</name><index pos:start="165:21" pos:end="165:23">[<expr pos:start="165:22" pos:end="165:22"><literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:26" pos:end="165:31"><expr pos:start="165:26" pos:end="165:31"><name pos:start="165:26" pos:end="165:31"><name pos:start="165:26" pos:end="165:28">out</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:34" pos:end="165:45"><expr pos:start="165:34" pos:end="165:45"><name pos:start="165:34" pos:end="165:45"><name pos:start="165:34" pos:end="165:42">refStride</name><index pos:start="165:43" pos:end="165:45">[<expr pos:start="165:44" pos:end="165:44"><literal type="number" pos:start="165:44" pos:end="165:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:48" pos:end="165:59"><expr pos:start="165:48" pos:end="165:59"><name pos:start="165:48" pos:end="165:59"><name pos:start="165:48" pos:end="165:56">refStride</name><index pos:start="165:57" pos:end="165:59">[<expr pos:start="165:58" pos:end="165:58"><literal type="number" pos:start="165:58" pos:end="165:58">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:62" pos:end="165:62"><expr pos:start="165:62" pos:end="165:62"><name pos:start="165:62" pos:end="165:62">w</name></expr></argument>, <argument pos:start="165:65" pos:end="165:65"><expr pos:start="165:65" pos:end="165:65"><name pos:start="165:65" pos:end="165:65">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="175:5"><if pos:start="167:5" pos:end="175:5">if <condition pos:start="167:8" pos:end="167:53">(<expr pos:start="167:9" pos:end="167:52"><call pos:start="167:9" pos:end="167:28"><name pos:start="167:9" pos:end="167:17">hasChroma</name><argument_list pos:start="167:18" pos:end="167:28">(<argument pos:start="167:19" pos:end="167:27"><expr pos:start="167:19" pos:end="167:27"><name pos:start="167:19" pos:end="167:27">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="167:30" pos:end="167:31">&amp;&amp;</operator> <call pos:start="167:33" pos:end="167:52"><name pos:start="167:33" pos:end="167:41">hasChroma</name><argument_list pos:start="167:42" pos:end="167:52">(<argument pos:start="167:43" pos:end="167:51"><expr pos:start="167:43" pos:end="167:51"><name pos:start="167:43" pos:end="167:51">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="167:55" pos:end="175:5">{<block_content pos:start="171:9" pos:end="173:85">

        <comment type="line" pos:start="169:9" pos:end="169:48">//FIXME check that output is really gray</comment>

        <expr_stmt pos:start="171:9" pos:end="171:85"><expr pos:start="171:9" pos:end="171:84"><name pos:start="171:9" pos:end="171:12">ssdU</name><operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:84"><name pos:start="171:15" pos:end="171:20">getSSD</name><argument_list pos:start="171:21" pos:end="171:84">(<argument pos:start="171:22" pos:end="171:27"><expr pos:start="171:22" pos:end="171:27"><name pos:start="171:22" pos:end="171:27"><name pos:start="171:22" pos:end="171:24">ref</name><index pos:start="171:25" pos:end="171:27">[<expr pos:start="171:26" pos:end="171:26"><literal type="number" pos:start="171:26" pos:end="171:26">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:30" pos:end="171:35"><expr pos:start="171:30" pos:end="171:35"><name pos:start="171:30" pos:end="171:35"><name pos:start="171:30" pos:end="171:32">out</name><index pos:start="171:33" pos:end="171:35">[<expr pos:start="171:34" pos:end="171:34"><literal type="number" pos:start="171:34" pos:end="171:34">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:38" pos:end="171:49"><expr pos:start="171:38" pos:end="171:49"><name pos:start="171:38" pos:end="171:49"><name pos:start="171:38" pos:end="171:46">refStride</name><index pos:start="171:47" pos:end="171:49">[<expr pos:start="171:48" pos:end="171:48"><literal type="number" pos:start="171:48" pos:end="171:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:52" pos:end="171:63"><expr pos:start="171:52" pos:end="171:63"><name pos:start="171:52" pos:end="171:63"><name pos:start="171:52" pos:end="171:60">refStride</name><index pos:start="171:61" pos:end="171:63">[<expr pos:start="171:62" pos:end="171:62"><literal type="number" pos:start="171:62" pos:end="171:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="171:66" pos:end="171:73"><expr pos:start="171:66" pos:end="171:73"><operator pos:start="171:66" pos:end="171:66">(</operator><name pos:start="171:67" pos:end="171:67">w</name><operator pos:start="171:68" pos:end="171:68">+</operator><literal type="number" pos:start="171:69" pos:end="171:69">1</literal><operator pos:start="171:70" pos:end="171:70">)</operator><operator pos:start="171:71" pos:end="171:72">&gt;&gt;</operator><literal type="number" pos:start="171:73" pos:end="171:73">1</literal></expr></argument>, <argument pos:start="171:76" pos:end="171:83"><expr pos:start="171:76" pos:end="171:83"><operator pos:start="171:76" pos:end="171:76">(</operator><name pos:start="171:77" pos:end="171:77">h</name><operator pos:start="171:78" pos:end="171:78">+</operator><literal type="number" pos:start="171:79" pos:end="171:79">1</literal><operator pos:start="171:80" pos:end="171:80">)</operator><operator pos:start="171:81" pos:end="171:82">&gt;&gt;</operator><literal type="number" pos:start="171:83" pos:end="171:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:85"><expr pos:start="173:9" pos:end="173:84"><name pos:start="173:9" pos:end="173:12">ssdV</name><operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:84"><name pos:start="173:15" pos:end="173:20">getSSD</name><argument_list pos:start="173:21" pos:end="173:84">(<argument pos:start="173:22" pos:end="173:27"><expr pos:start="173:22" pos:end="173:27"><name pos:start="173:22" pos:end="173:27"><name pos:start="173:22" pos:end="173:24">ref</name><index pos:start="173:25" pos:end="173:27">[<expr pos:start="173:26" pos:end="173:26"><literal type="number" pos:start="173:26" pos:end="173:26">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:30" pos:end="173:35"><expr pos:start="173:30" pos:end="173:35"><name pos:start="173:30" pos:end="173:35"><name pos:start="173:30" pos:end="173:32">out</name><index pos:start="173:33" pos:end="173:35">[<expr pos:start="173:34" pos:end="173:34"><literal type="number" pos:start="173:34" pos:end="173:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:38" pos:end="173:49"><expr pos:start="173:38" pos:end="173:49"><name pos:start="173:38" pos:end="173:49"><name pos:start="173:38" pos:end="173:46">refStride</name><index pos:start="173:47" pos:end="173:49">[<expr pos:start="173:48" pos:end="173:48"><literal type="number" pos:start="173:48" pos:end="173:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:52" pos:end="173:63"><expr pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:60">refStride</name><index pos:start="173:61" pos:end="173:63">[<expr pos:start="173:62" pos:end="173:62"><literal type="number" pos:start="173:62" pos:end="173:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:66" pos:end="173:73"><expr pos:start="173:66" pos:end="173:73"><operator pos:start="173:66" pos:end="173:66">(</operator><name pos:start="173:67" pos:end="173:67">w</name><operator pos:start="173:68" pos:end="173:68">+</operator><literal type="number" pos:start="173:69" pos:end="173:69">1</literal><operator pos:start="173:70" pos:end="173:70">)</operator><operator pos:start="173:71" pos:end="173:72">&gt;&gt;</operator><literal type="number" pos:start="173:73" pos:end="173:73">1</literal></expr></argument>, <argument pos:start="173:76" pos:end="173:83"><expr pos:start="173:76" pos:end="173:83"><operator pos:start="173:76" pos:end="173:76">(</operator><name pos:start="173:77" pos:end="173:77">h</name><operator pos:start="173:78" pos:end="173:78">+</operator><literal type="number" pos:start="173:79" pos:end="173:79">1</literal><operator pos:start="173:80" pos:end="173:80">)</operator><operator pos:start="173:81" pos:end="173:82">&gt;&gt;</operator><literal type="number" pos:start="173:83" pos:end="173:83">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="177:5" pos:end="179:71"><if pos:start="177:5" pos:end="179:71">if <condition pos:start="177:8" pos:end="177:49">(<expr pos:start="177:9" pos:end="177:48"><call pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:15">isALPHA</name><argument_list pos:start="177:16" pos:end="177:26">(<argument pos:start="177:17" pos:end="177:25"><expr pos:start="177:17" pos:end="177:25"><name pos:start="177:17" pos:end="177:25">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="177:28" pos:end="177:29">&amp;&amp;</operator> <call pos:start="177:31" pos:end="177:48"><name pos:start="177:31" pos:end="177:37">isALPHA</name><argument_list pos:start="177:38" pos:end="177:48">(<argument pos:start="177:39" pos:end="177:47"><expr pos:start="177:39" pos:end="177:47"><name pos:start="177:39" pos:end="177:47">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="179:9" pos:end="179:71"><block_content pos:start="179:9" pos:end="179:71">

        <expr_stmt pos:start="179:9" pos:end="179:71"><expr pos:start="179:9" pos:end="179:70"><name pos:start="179:9" pos:end="179:12">ssdA</name><operator pos:start="179:13" pos:end="179:13">=</operator> <call pos:start="179:15" pos:end="179:70"><name pos:start="179:15" pos:end="179:20">getSSD</name><argument_list pos:start="179:21" pos:end="179:70">(<argument pos:start="179:22" pos:end="179:27"><expr pos:start="179:22" pos:end="179:27"><name pos:start="179:22" pos:end="179:27"><name pos:start="179:22" pos:end="179:24">ref</name><index pos:start="179:25" pos:end="179:27">[<expr pos:start="179:26" pos:end="179:26"><literal type="number" pos:start="179:26" pos:end="179:26">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:30" pos:end="179:35"><expr pos:start="179:30" pos:end="179:35"><name pos:start="179:30" pos:end="179:35"><name pos:start="179:30" pos:end="179:32">out</name><index pos:start="179:33" pos:end="179:35">[<expr pos:start="179:34" pos:end="179:34"><literal type="number" pos:start="179:34" pos:end="179:34">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:38" pos:end="179:49"><expr pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:46">refStride</name><index pos:start="179:47" pos:end="179:49">[<expr pos:start="179:48" pos:end="179:48"><literal type="number" pos:start="179:48" pos:end="179:48">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:52" pos:end="179:63"><expr pos:start="179:52" pos:end="179:63"><name pos:start="179:52" pos:end="179:63"><name pos:start="179:52" pos:end="179:60">refStride</name><index pos:start="179:61" pos:end="179:63">[<expr pos:start="179:62" pos:end="179:62"><literal type="number" pos:start="179:62" pos:end="179:62">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:66" pos:end="179:66"><expr pos:start="179:66" pos:end="179:66"><name pos:start="179:66" pos:end="179:66">w</name></expr></argument>, <argument pos:start="179:69" pos:end="179:69"><expr pos:start="179:69" pos:end="179:69"><name pos:start="179:69" pos:end="179:69">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="183:5" pos:end="183:15"><expr pos:start="183:5" pos:end="183:14"><name pos:start="183:5" pos:end="183:8">ssdY</name><operator pos:start="183:9" pos:end="183:10">/=</operator> <name pos:start="183:12" pos:end="183:12">w</name><operator pos:start="183:13" pos:end="183:13">*</operator><name pos:start="183:14" pos:end="183:14">h</name></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:17"><expr pos:start="185:5" pos:end="185:16"><name pos:start="185:5" pos:end="185:8">ssdU</name><operator pos:start="185:9" pos:end="185:10">/=</operator> <name pos:start="185:12" pos:end="185:12">w</name><operator pos:start="185:13" pos:end="185:13">*</operator><name pos:start="185:14" pos:end="185:14">h</name><operator pos:start="185:15" pos:end="185:15">/</operator><literal type="number" pos:start="185:16" pos:end="185:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:17"><expr pos:start="187:5" pos:end="187:16"><name pos:start="187:5" pos:end="187:8">ssdV</name><operator pos:start="187:9" pos:end="187:10">/=</operator> <name pos:start="187:12" pos:end="187:12">w</name><operator pos:start="187:13" pos:end="187:13">*</operator><name pos:start="187:14" pos:end="187:14">h</name><operator pos:start="187:15" pos:end="187:15">/</operator><literal type="number" pos:start="187:16" pos:end="187:16">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:15"><expr pos:start="189:5" pos:end="189:14"><name pos:start="189:5" pos:end="189:8">ssdA</name><operator pos:start="189:9" pos:end="189:10">/=</operator> <name pos:start="189:12" pos:end="189:12">w</name><operator pos:start="189:13" pos:end="189:13">*</operator><name pos:start="189:14" pos:end="189:14">h</name></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="199:42"><expr pos:start="193:5" pos:end="199:41"><call pos:start="193:5" pos:end="199:41"><name pos:start="193:5" pos:end="193:10">printf</name><argument_list pos:start="193:11" pos:end="199:41">(<argument pos:start="193:12" pos:end="193:96"><expr pos:start="193:12" pos:end="193:96"><literal type="string" pos:start="193:12" pos:end="193:53">" %s %dx%d -&gt; %s %4dx%4d flags=%2d SSD=%5"</literal><name pos:start="193:54" pos:end="193:59">PRId64</name><literal type="string" pos:start="193:60" pos:end="193:64">",%5"</literal><name pos:start="193:65" pos:end="193:70">PRId64</name><literal type="string" pos:start="193:71" pos:end="193:75">",%5"</literal><name pos:start="193:76" pos:end="193:81">PRId64</name><literal type="string" pos:start="193:82" pos:end="193:86">",%5"</literal><name pos:start="193:87" pos:end="193:92">PRId64</name><literal type="string" pos:start="193:93" pos:end="193:96">"\n"</literal></expr></argument>,

           <argument pos:start="195:12" pos:end="195:49"><expr pos:start="195:12" pos:end="195:49"><name pos:start="195:12" pos:end="195:44"><name pos:start="195:12" pos:end="195:33">av_pix_fmt_descriptors</name><index pos:start="195:34" pos:end="195:44">[<expr pos:start="195:35" pos:end="195:43"><name pos:start="195:35" pos:end="195:43">srcFormat</name></expr>]</index></name><operator pos:start="195:45" pos:end="195:45">.</operator><name pos:start="195:46" pos:end="195:49">name</name></expr></argument>, <argument pos:start="195:52" pos:end="195:55"><expr pos:start="195:52" pos:end="195:55"><name pos:start="195:52" pos:end="195:55">srcW</name></expr></argument>, <argument pos:start="195:58" pos:end="195:61"><expr pos:start="195:58" pos:end="195:61"><name pos:start="195:58" pos:end="195:61">srcH</name></expr></argument>,

           <argument pos:start="197:12" pos:end="197:49"><expr pos:start="197:12" pos:end="197:49"><name pos:start="197:12" pos:end="197:44"><name pos:start="197:12" pos:end="197:33">av_pix_fmt_descriptors</name><index pos:start="197:34" pos:end="197:44">[<expr pos:start="197:35" pos:end="197:43"><name pos:start="197:35" pos:end="197:43">dstFormat</name></expr>]</index></name><operator pos:start="197:45" pos:end="197:45">.</operator><name pos:start="197:46" pos:end="197:49">name</name></expr></argument>, <argument pos:start="197:52" pos:end="197:55"><expr pos:start="197:52" pos:end="197:55"><name pos:start="197:52" pos:end="197:55">dstW</name></expr></argument>, <argument pos:start="197:58" pos:end="197:61"><expr pos:start="197:58" pos:end="197:61"><name pos:start="197:58" pos:end="197:61">dstH</name></expr></argument>,

           <argument pos:start="199:12" pos:end="199:16"><expr pos:start="199:12" pos:end="199:16"><name pos:start="199:12" pos:end="199:16">flags</name></expr></argument>, <argument pos:start="199:19" pos:end="199:22"><expr pos:start="199:19" pos:end="199:22"><name pos:start="199:19" pos:end="199:22">ssdY</name></expr></argument>, <argument pos:start="199:25" pos:end="199:28"><expr pos:start="199:25" pos:end="199:28"><name pos:start="199:25" pos:end="199:28">ssdU</name></expr></argument>, <argument pos:start="199:31" pos:end="199:34"><expr pos:start="199:31" pos:end="199:34"><name pos:start="199:31" pos:end="199:34">ssdV</name></expr></argument>, <argument pos:start="199:37" pos:end="199:40"><expr pos:start="199:37" pos:end="199:40"><name pos:start="199:37" pos:end="199:40">ssdA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:19"><expr pos:start="201:5" pos:end="201:18"><call pos:start="201:5" pos:end="201:18"><name pos:start="201:5" pos:end="201:10">fflush</name><argument_list pos:start="201:11" pos:end="201:18">(<argument pos:start="201:12" pos:end="201:17"><expr pos:start="201:12" pos:end="201:17"><name pos:start="201:12" pos:end="201:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="205:1" pos:end="205:4"><name pos:start="205:1" pos:end="205:3">end</name>:</label>



    <expr_stmt pos:start="209:5" pos:end="209:32"><expr pos:start="209:5" pos:end="209:31"><call pos:start="209:5" pos:end="209:31"><name pos:start="209:5" pos:end="209:19">sws_freeContext</name><argument_list pos:start="209:20" pos:end="209:31">(<argument pos:start="209:21" pos:end="209:30"><expr pos:start="209:21" pos:end="209:30"><name pos:start="209:21" pos:end="209:30">srcContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:32"><expr pos:start="211:5" pos:end="211:31"><call pos:start="211:5" pos:end="211:31"><name pos:start="211:5" pos:end="211:19">sws_freeContext</name><argument_list pos:start="211:20" pos:end="211:31">(<argument pos:start="211:21" pos:end="211:30"><expr pos:start="211:21" pos:end="211:30"><name pos:start="211:21" pos:end="211:30">dstContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:32"><expr pos:start="213:5" pos:end="213:31"><call pos:start="213:5" pos:end="213:31"><name pos:start="213:5" pos:end="213:19">sws_freeContext</name><argument_list pos:start="213:20" pos:end="213:31">(<argument pos:start="213:21" pos:end="213:30"><expr pos:start="213:21" pos:end="213:30"><name pos:start="213:21" pos:end="213:30">outContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="217:5" pos:end="225:5">for <control pos:start="217:9" pos:end="217:23">(<init pos:start="217:10" pos:end="217:13"><expr pos:start="217:10" pos:end="217:12"><name pos:start="217:10" pos:end="217:10">i</name><operator pos:start="217:11" pos:end="217:11">=</operator><literal type="number" pos:start="217:12" pos:end="217:12">0</literal></expr>;</init> <condition pos:start="217:15" pos:end="217:18"><expr pos:start="217:15" pos:end="217:17"><name pos:start="217:15" pos:end="217:15">i</name><operator pos:start="217:16" pos:end="217:16">&lt;</operator><literal type="number" pos:start="217:17" pos:end="217:17">4</literal></expr>;</condition> <incr pos:start="217:20" pos:end="217:22"><expr pos:start="217:20" pos:end="217:22"><name pos:start="217:20" pos:end="217:20">i</name><operator pos:start="217:21" pos:end="217:22">++</operator></expr></incr>)</control> <block pos:start="217:25" pos:end="225:5">{<block_content pos:start="219:9" pos:end="223:24">

        <expr_stmt pos:start="219:9" pos:end="219:24"><expr pos:start="219:9" pos:end="219:23"><call pos:start="219:9" pos:end="219:23"><name pos:start="219:9" pos:end="219:15">av_free</name><argument_list pos:start="219:16" pos:end="219:23">(<argument pos:start="219:17" pos:end="219:22"><expr pos:start="219:17" pos:end="219:22"><name pos:start="219:17" pos:end="219:22"><name pos:start="219:17" pos:end="219:19">src</name><index pos:start="219:20" pos:end="219:22">[<expr pos:start="219:21" pos:end="219:21"><name pos:start="219:21" pos:end="219:21">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:24"><expr pos:start="221:9" pos:end="221:23"><call pos:start="221:9" pos:end="221:23"><name pos:start="221:9" pos:end="221:15">av_free</name><argument_list pos:start="221:16" pos:end="221:23">(<argument pos:start="221:17" pos:end="221:22"><expr pos:start="221:17" pos:end="221:22"><name pos:start="221:17" pos:end="221:22"><name pos:start="221:17" pos:end="221:19">dst</name><index pos:start="221:20" pos:end="221:22">[<expr pos:start="221:21" pos:end="221:21"><name pos:start="221:21" pos:end="221:21">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:24"><expr pos:start="223:9" pos:end="223:23"><call pos:start="223:9" pos:end="223:23"><name pos:start="223:9" pos:end="223:15">av_free</name><argument_list pos:start="223:16" pos:end="223:23">(<argument pos:start="223:17" pos:end="223:22"><expr pos:start="223:17" pos:end="223:22"><name pos:start="223:17" pos:end="223:22"><name pos:start="223:17" pos:end="223:19">out</name><index pos:start="223:20" pos:end="223:22">[<expr pos:start="223:21" pos:end="223:21"><name pos:start="223:21" pos:end="223:21">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="229:5" pos:end="229:15">return <expr pos:start="229:12" pos:end="229:14"><name pos:start="229:12" pos:end="229:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
