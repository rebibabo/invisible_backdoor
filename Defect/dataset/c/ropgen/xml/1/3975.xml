<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3975.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">error_set_win32</name><parameter_list pos:start="1:21" pos:end="3:42">(<parameter pos:start="1:22" pos:end="1:33"><decl pos:start="1:22" pos:end="1:33"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:26">Error</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier><modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">errp</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:48">win32_err</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:70"><decl pos:start="1:51" pos:end="1:70"><type pos:start="1:51" pos:end="1:70"><name pos:start="1:51" pos:end="1:60">ErrorClass</name></type> <name pos:start="1:62" pos:end="1:70">err_class</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:36"><decl pos:start="3:22" pos:end="3:36"><type pos:start="3:22" pos:end="3:36"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:31">char</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:36">fmt</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:41"><decl pos:start="3:39" pos:end="3:41"><type pos:start="3:39" pos:end="3:41"><modifier pos:start="3:39" pos:end="3:41">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">va_list</name></type> <name pos:start="7:13" pos:end="7:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">msg1</name></decl>, <decl pos:start="9:17" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">msg2</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:21">(<expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:12">errp</name> <operator pos:start="13:14" pos:end="13:15">==</operator> <name pos:start="13:17" pos:end="13:20">NULL</name></expr>)</condition> <block pos:start="13:23" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:12">va_start</name><argument_list pos:start="21:13" pos:end="21:21">(<argument pos:start="21:14" pos:end="21:15"><expr pos:start="21:14" pos:end="21:15"><name pos:start="21:14" pos:end="21:15">ap</name></expr></argument>, <argument pos:start="21:18" pos:end="21:20"><expr pos:start="21:18" pos:end="21:20"><name pos:start="21:18" pos:end="21:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:14">error_setv</name><argument_list pos:start="23:15" pos:end="23:40">(<argument pos:start="23:16" pos:end="23:19"><expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">errp</name></expr></argument>, <argument pos:start="23:22" pos:end="23:30"><expr pos:start="23:22" pos:end="23:30"><name pos:start="23:22" pos:end="23:30">err_class</name></expr></argument>, <argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">fmt</name></expr></argument>, <argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><call pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:10">va_end</name><argument_list pos:start="25:11" pos:end="25:14">(<argument pos:start="25:12" pos:end="25:13"><expr pos:start="25:12" pos:end="25:13"><name pos:start="25:12" pos:end="25:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="43:5"><if pos:start="29:5" pos:end="43:5">if <condition pos:start="29:8" pos:end="29:23">(<expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">win32_err</name> <operator pos:start="29:19" pos:end="29:20">!=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>)</condition> <block pos:start="29:25" pos:end="43:5">{<block_content pos:start="31:9" pos:end="41:21">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:12">msg1</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:27"><operator pos:start="31:16" pos:end="31:16">(</operator><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:21">errp</name><operator pos:start="31:22" pos:end="31:22">)</operator><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">msg</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:48"><expr pos:start="33:9" pos:end="33:47"><name pos:start="33:9" pos:end="33:12">msg2</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:47"><name pos:start="33:16" pos:end="33:36">g_win32_error_message</name><argument_list pos:start="33:37" pos:end="33:47">(<argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:46">win32_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:60"><expr pos:start="35:9" pos:end="37:59"><name pos:start="35:9" pos:end="35:20"><operator pos:start="35:9" pos:end="35:9">(</operator><operator pos:start="35:10" pos:end="35:10">*</operator><name pos:start="35:11" pos:end="35:14">errp</name><operator pos:start="35:15" pos:end="35:15">)</operator><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">msg</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="37:59"><name pos:start="35:24" pos:end="35:38">g_strdup_printf</name><argument_list pos:start="35:39" pos:end="37:59">(<argument pos:start="35:40" pos:end="35:59"><expr pos:start="35:40" pos:end="35:59"><literal type="string" pos:start="35:40" pos:end="35:59">"%s: %s (error: %x)"</literal></expr></argument>, <argument pos:start="35:62" pos:end="35:65"><expr pos:start="35:62" pos:end="35:65"><name pos:start="35:62" pos:end="35:65">msg1</name></expr></argument>, <argument pos:start="35:68" pos:end="35:71"><expr pos:start="35:68" pos:end="35:71"><name pos:start="35:68" pos:end="35:71">msg2</name></expr></argument>,

                                       <argument pos:start="37:40" pos:end="37:58"><expr pos:start="37:40" pos:end="37:58"><operator pos:start="37:40" pos:end="37:40">(</operator><name pos:start="37:41" pos:end="37:48">unsigned</name><operator pos:start="37:49" pos:end="37:49">)</operator><name pos:start="37:50" pos:end="37:58">win32_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">g_free</name><argument_list pos:start="39:15" pos:end="39:20">(<argument pos:start="39:16" pos:end="39:19"><expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">msg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><call pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:14">g_free</name><argument_list pos:start="41:15" pos:end="41:20">(<argument pos:start="41:16" pos:end="41:19"><expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">msg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
