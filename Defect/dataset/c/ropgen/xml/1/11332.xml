<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11332.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">VFIOGroup</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:32">vfio_get_group</name><parameter_list pos:start="1:33" pos:end="1:45">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:36"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:44">groupid</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:16">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VFIOGroup</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">group</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:13">path</name><index pos:start="7:14" pos:end="7:17">[<expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:66"><decl pos:start="9:5" pos:end="9:65"><type pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:28"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:28">vfio_group_status</name></name></type> <name pos:start="9:30" pos:end="9:35">status</name> <init pos:start="9:37" pos:end="9:65">= <expr pos:start="9:39" pos:end="9:65"><block pos:start="9:39" pos:end="9:65">{ <expr pos:start="9:41" pos:end="9:63"><operator pos:start="9:41" pos:end="9:41">.</operator><name pos:start="9:42" pos:end="9:46">argsz</name> <operator pos:start="9:48" pos:end="9:48">=</operator> sizeof<operator pos:start="9:56" pos:end="9:56">(</operator><name pos:start="9:57" pos:end="9:62">status</name><operator pos:start="9:63" pos:end="9:63">)</operator></expr> }</block></expr></init></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:17">QLIST_FOREACH</name><argument_list pos:start="13:18" pos:end="13:43">(<argument pos:start="13:19" pos:end="13:23">group</argument>, <argument pos:start="13:26" pos:end="13:36">&amp;group_list</argument>, <argument pos:start="13:39" pos:end="13:42">next</argument>)</argument_list></macro> <block pos:start="13:45" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:9">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:38">(<expr pos:start="15:13" pos:end="15:37"><name pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:17">group</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:26">groupid</name></name> <operator pos:start="15:28" pos:end="15:29">==</operator> <name pos:start="15:31" pos:end="15:37">groupid</name></expr>)</condition> <block pos:start="15:40" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:25">

            <return pos:start="17:13" pos:end="17:25">return <expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24">group</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="25:5" pos:end="25:38"><expr pos:start="25:5" pos:end="25:37"><name pos:start="25:5" pos:end="25:9">group</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:21">g_malloc0</name><argument_list pos:start="25:22" pos:end="25:37">(<argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><sizeof pos:start="25:23" pos:end="25:36">sizeof<argument_list pos:start="25:29" pos:end="25:36">(<argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><operator pos:start="25:30" pos:end="25:30">*</operator><name pos:start="25:31" pos:end="25:35">group</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><call pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:12">snprintf</name><argument_list pos:start="29:13" pos:end="29:57">(<argument pos:start="29:14" pos:end="29:17"><expr pos:start="29:14" pos:end="29:17"><name pos:start="29:14" pos:end="29:17">path</name></expr></argument>, <argument pos:start="29:20" pos:end="29:31"><expr pos:start="29:20" pos:end="29:31"><sizeof pos:start="29:20" pos:end="29:31">sizeof<argument_list pos:start="29:26" pos:end="29:31">(<argument pos:start="29:27" pos:end="29:30"><expr pos:start="29:27" pos:end="29:30"><name pos:start="29:27" pos:end="29:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:34" pos:end="29:47"><expr pos:start="29:34" pos:end="29:47"><literal type="string" pos:start="29:34" pos:end="29:47">"/dev/vfio/%d"</literal></expr></argument>, <argument pos:start="29:50" pos:end="29:56"><expr pos:start="29:50" pos:end="29:56"><name pos:start="29:50" pos:end="29:56">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:9">group</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:13">fd</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:39"><name pos:start="31:17" pos:end="31:25">qemu_open</name><argument_list pos:start="31:26" pos:end="31:39">(<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">path</name></expr></argument>, <argument pos:start="31:33" pos:end="31:38"><expr pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:38">O_RDWR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:13">group</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:17">fd</name></name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>)</condition> <block pos:start="33:24" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:29">

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><call pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:20">error_report</name><argument_list pos:start="35:21" pos:end="35:56">(<argument pos:start="35:22" pos:end="35:49"><expr pos:start="35:22" pos:end="35:49"><literal type="string" pos:start="35:22" pos:end="35:49">"vfio: error opening %s: %m"</literal></expr></argument>, <argument pos:start="35:52" pos:end="35:55"><expr pos:start="35:52" pos:end="35:55"><name pos:start="35:52" pos:end="35:55">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:29">goto <name pos:start="37:14" pos:end="37:28">free_group_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:57">(<expr pos:start="43:9" pos:end="43:56"><call pos:start="43:9" pos:end="43:56"><name pos:start="43:9" pos:end="43:13">ioctl</name><argument_list pos:start="43:14" pos:end="43:56">(<argument pos:start="43:15" pos:end="43:23"><expr pos:start="43:15" pos:end="43:23"><name pos:start="43:15" pos:end="43:23"><name pos:start="43:15" pos:end="43:19">group</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:23">fd</name></name></expr></argument>, <argument pos:start="43:26" pos:end="43:46"><expr pos:start="43:26" pos:end="43:46"><name pos:start="43:26" pos:end="43:46">VFIO_GROUP_GET_STATUS</name></expr></argument>, <argument pos:start="43:49" pos:end="43:55"><expr pos:start="43:49" pos:end="43:55"><operator pos:start="43:49" pos:end="43:49">&amp;</operator><name pos:start="43:50" pos:end="43:55">status</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:59" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:27">

        <expr_stmt pos:start="45:9" pos:end="45:61"><expr pos:start="45:9" pos:end="45:60"><call pos:start="45:9" pos:end="45:60"><name pos:start="45:9" pos:end="45:20">error_report</name><argument_list pos:start="45:21" pos:end="45:60">(<argument pos:start="45:22" pos:end="45:59"><expr pos:start="45:22" pos:end="45:59"><literal type="string" pos:start="45:22" pos:end="45:59">"vfio: error getting group status: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:27">goto <name pos:start="47:14" pos:end="47:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="63:5">if <condition pos:start="53:8" pos:end="53:50">(<expr pos:start="53:9" pos:end="53:49"><operator pos:start="53:9" pos:end="53:9">!</operator><operator pos:start="53:10" pos:end="53:10">(</operator><name pos:start="53:11" pos:end="53:22"><name pos:start="53:11" pos:end="53:16">status</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:22">flags</name></name> <operator pos:start="53:24" pos:end="53:24">&amp;</operator> <name pos:start="53:26" pos:end="53:48">VFIO_GROUP_FLAGS_VIABLE</name><operator pos:start="53:49" pos:end="53:49">)</operator></expr>)</condition> <block pos:start="53:52" pos:end="63:5">{<block_content pos:start="55:9" pos:end="61:27">

        <expr_stmt pos:start="55:9" pos:end="59:50"><expr pos:start="55:9" pos:end="59:49"><call pos:start="55:9" pos:end="59:49"><name pos:start="55:9" pos:end="55:20">error_report</name><argument_list pos:start="55:21" pos:end="59:49">(<argument pos:start="55:22" pos:end="59:39"><expr pos:start="55:22" pos:end="59:39"><literal type="string" pos:start="55:22" pos:end="55:74">"vfio: error, group %d is not viable, please ensure "</literal>

                     <literal type="string" pos:start="57:22" pos:end="57:77">"all devices within the iommu_group are bound to their "</literal>

                     <literal type="string" pos:start="59:22" pos:end="59:39">"vfio bus driver."</literal></expr></argument>, <argument pos:start="59:42" pos:end="59:48"><expr pos:start="59:42" pos:end="59:48"><name pos:start="59:42" pos:end="59:48">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:27">goto <name pos:start="61:14" pos:end="61:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:9">group</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:18">groupid</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:28">groupid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><call pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:14">QLIST_INIT</name><argument_list pos:start="69:15" pos:end="69:35">(<argument pos:start="69:16" pos:end="69:34"><expr pos:start="69:16" pos:end="69:34"><operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:34"><name pos:start="69:17" pos:end="69:21">group</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:34">device_list</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:38">(<expr pos:start="73:9" pos:end="73:37"><call pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:30">vfio_connect_container</name><argument_list pos:start="73:31" pos:end="73:37">(<argument pos:start="73:32" pos:end="73:36"><expr pos:start="73:32" pos:end="73:36"><name pos:start="73:32" pos:end="73:36">group</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:40" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:27">

        <expr_stmt pos:start="75:9" pos:end="75:78"><expr pos:start="75:9" pos:end="75:77"><call pos:start="75:9" pos:end="75:77"><name pos:start="75:9" pos:end="75:20">error_report</name><argument_list pos:start="75:21" pos:end="75:77">(<argument pos:start="75:22" pos:end="75:67"><expr pos:start="75:22" pos:end="75:67"><literal type="string" pos:start="75:22" pos:end="75:67">"vfio: failed to setup container for group %d"</literal></expr></argument>, <argument pos:start="75:70" pos:end="75:76"><expr pos:start="75:70" pos:end="75:76"><name pos:start="75:70" pos:end="75:76">groupid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:27">goto <name pos:start="77:14" pos:end="77:26">close_fd_exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="87:5"><if pos:start="83:5" pos:end="87:5">if <condition pos:start="83:8" pos:end="83:33">(<expr pos:start="83:9" pos:end="83:32"><call pos:start="83:9" pos:end="83:32"><name pos:start="83:9" pos:end="83:19">QLIST_EMPTY</name><argument_list pos:start="83:20" pos:end="83:32">(<argument pos:start="83:21" pos:end="83:31"><expr pos:start="83:21" pos:end="83:31"><operator pos:start="83:21" pos:end="83:21">&amp;</operator><name pos:start="83:22" pos:end="83:31">group_list</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:35" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:58">

        <expr_stmt pos:start="85:9" pos:end="85:58"><expr pos:start="85:9" pos:end="85:57"><call pos:start="85:9" pos:end="85:57"><name pos:start="85:9" pos:end="85:27">qemu_register_reset</name><argument_list pos:start="85:28" pos:end="85:57">(<argument pos:start="85:29" pos:end="85:50"><expr pos:start="85:29" pos:end="85:50"><name pos:start="85:29" pos:end="85:50">vfio_pci_reset_handler</name></expr></argument>, <argument pos:start="85:53" pos:end="85:56"><expr pos:start="85:53" pos:end="85:56"><name pos:start="85:53" pos:end="85:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:48"><expr pos:start="91:5" pos:end="91:47"><call pos:start="91:5" pos:end="91:47"><name pos:start="91:5" pos:end="91:21">QLIST_INSERT_HEAD</name><argument_list pos:start="91:22" pos:end="91:47">(<argument pos:start="91:23" pos:end="91:33"><expr pos:start="91:23" pos:end="91:33"><operator pos:start="91:23" pos:end="91:23">&amp;</operator><name pos:start="91:24" pos:end="91:33">group_list</name></expr></argument>, <argument pos:start="91:36" pos:end="91:40"><expr pos:start="91:36" pos:end="91:40"><name pos:start="91:36" pos:end="91:40">group</name></expr></argument>, <argument pos:start="91:43" pos:end="91:46"><expr pos:start="91:43" pos:end="91:46"><name pos:start="91:43" pos:end="91:46">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><call pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:29">vfio_kvm_device_add_group</name><argument_list pos:start="95:30" pos:end="95:36">(<argument pos:start="95:31" pos:end="95:35"><expr pos:start="95:31" pos:end="95:35"><name pos:start="95:31" pos:end="95:35">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="99:5" pos:end="99:17">return <expr pos:start="99:12" pos:end="99:16"><name pos:start="99:12" pos:end="99:16">group</name></expr>;</return>



<label pos:start="103:1" pos:end="103:14"><name pos:start="103:1" pos:end="103:13">close_fd_exit</name>:</label>

    <expr_stmt pos:start="105:5" pos:end="105:21"><expr pos:start="105:5" pos:end="105:20"><call pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:9">close</name><argument_list pos:start="105:10" pos:end="105:20">(<argument pos:start="105:11" pos:end="105:19"><expr pos:start="105:11" pos:end="105:19"><name pos:start="105:11" pos:end="105:19"><name pos:start="105:11" pos:end="105:15">group</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="109:1" pos:end="109:16"><name pos:start="109:1" pos:end="109:15">free_group_exit</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:18"><expr pos:start="111:5" pos:end="111:17"><call pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:10">g_free</name><argument_list pos:start="111:11" pos:end="111:17">(<argument pos:start="111:12" pos:end="111:16"><expr pos:start="111:12" pos:end="111:16"><name pos:start="111:12" pos:end="111:16">group</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="115:5" pos:end="115:16">return <expr pos:start="115:12" pos:end="115:15"><name pos:start="115:12" pos:end="115:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
