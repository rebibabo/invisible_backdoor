<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23318.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">doTest</name><parameter_list pos:start="1:18" pos:end="7:36">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:30">ref</name><index pos:start="1:31" pos:end="1:33">[<expr pos:start="1:32" pos:end="1:32"><literal type="number" pos:start="1:32" pos:end="1:32">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:48">refStride</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:58"><decl pos:start="1:54" pos:end="1:58"><type pos:start="1:54" pos:end="1:58"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:58">w</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">h</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:46"><decl pos:start="3:19" pos:end="3:46"><type pos:start="3:19" pos:end="3:46"><name pos:start="3:19" pos:end="3:36"><name pos:start="3:19" pos:end="3:22">enum</name> <name pos:start="3:24" pos:end="3:36">AVPixelFormat</name></name></type> <name pos:start="3:38" pos:end="3:46">srcFormat</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:76"><decl pos:start="3:49" pos:end="3:76"><type pos:start="3:49" pos:end="3:76"><name pos:start="3:49" pos:end="3:66"><name pos:start="3:49" pos:end="3:52">enum</name> <name pos:start="3:54" pos:end="3:66">AVPixelFormat</name></name></type> <name pos:start="3:68" pos:end="3:76">dstFormat</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:26"><decl pos:start="5:19" pos:end="5:26"><type pos:start="5:19" pos:end="5:26"><name pos:start="5:19" pos:end="5:21">int</name></type> <name pos:start="5:23" pos:end="5:26">srcW</name></decl></parameter>, <parameter pos:start="5:29" pos:end="5:36"><decl pos:start="5:29" pos:end="5:36"><type pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:36">srcH</name></decl></parameter>, <parameter pos:start="5:39" pos:end="5:46"><decl pos:start="5:39" pos:end="5:46"><type pos:start="5:39" pos:end="5:46"><name pos:start="5:39" pos:end="5:41">int</name></type> <name pos:start="5:43" pos:end="5:46">dstW</name></decl></parameter>, <parameter pos:start="5:49" pos:end="5:56"><decl pos:start="5:49" pos:end="5:56"><type pos:start="5:49" pos:end="5:56"><name pos:start="5:49" pos:end="5:51">int</name></type> <name pos:start="5:53" pos:end="5:56">dstH</name></decl></parameter>, <parameter pos:start="5:59" pos:end="5:67"><decl pos:start="5:59" pos:end="5:67"><type pos:start="5:59" pos:end="5:67"><name pos:start="5:59" pos:end="5:61">int</name></type> <name pos:start="5:63" pos:end="5:67">flags</name></decl></parameter>,

                  <parameter pos:start="7:19" pos:end="7:35"><decl pos:start="7:19" pos:end="7:35"><type pos:start="7:19" pos:end="7:35"><name pos:start="7:19" pos:end="7:32"><name pos:start="7:19" pos:end="7:24">struct</name> <name pos:start="7:26" pos:end="7:32">Results</name></name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:35">r</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="313:1">{<block_content pos:start="11:5" pos:end="311:15">

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:29"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:29"><name pos:start="11:12" pos:end="11:15">enum</name> <name pos:start="11:17" pos:end="11:29">AVPixelFormat</name></name></type> <name pos:start="11:31" pos:end="11:43">cur_srcFormat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:14"><specifier pos:start="13:5" pos:end="13:10">static</specifier> <name pos:start="13:12" pos:end="13:14">int</name></type> <name pos:start="13:16" pos:end="13:23">cur_srcW</name></decl>, <decl pos:start="13:26" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:14"/><name pos:start="13:26" pos:end="13:33">cur_srcH</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:20"><specifier pos:start="15:5" pos:end="15:10">static</specifier> <name pos:start="15:12" pos:end="15:18">uint8_t</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:26"><name pos:start="15:21" pos:end="15:23">src</name><index pos:start="15:24" pos:end="15:26">[<expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:14"><specifier pos:start="17:5" pos:end="17:10">static</specifier> <name pos:start="17:12" pos:end="17:14">int</name></type> <name pos:start="17:16" pos:end="17:27"><name pos:start="17:16" pos:end="17:24">srcStride</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:19"><name pos:start="19:14" pos:end="19:16">dst</name><index pos:start="19:17" pos:end="19:19">[<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">4</literal></expr>]</index></name> <init pos:start="19:21" pos:end="19:27">= <expr pos:start="19:23" pos:end="19:27"><block pos:start="19:23" pos:end="19:27">{ <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:28"><decl pos:start="21:5" pos:end="21:27"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:19"><name pos:start="21:14" pos:end="21:16">out</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">4</literal></expr>]</index></name> <init pos:start="21:21" pos:end="21:27">= <expr pos:start="21:23" pos:end="21:27"><block pos:start="21:23" pos:end="21:27">{ <expr pos:start="21:25" pos:end="21:25"><literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:17">dstStride</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:48"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint64_t</name></type> <name pos:start="27:14" pos:end="27:17">ssdY</name></decl>, <decl pos:start="27:20" pos:end="27:27"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:20" pos:end="27:23">ssdU</name> <init pos:start="27:25" pos:end="27:27">= <expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">0</literal></expr></init></decl>, <decl pos:start="27:30" pos:end="27:37"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:30" pos:end="27:33">ssdV</name> <init pos:start="27:35" pos:end="27:37">= <expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">0</literal></expr></init></decl>, <decl pos:start="27:40" pos:end="27:47"><type ref="prev" pos:start="27:5" pos:end="27:12"/><name pos:start="27:40" pos:end="27:43">ssdA</name> <init pos:start="27:45" pos:end="27:47">= <expr pos:start="27:47" pos:end="27:47"><literal type="number" pos:start="27:47" pos:end="27:47">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:61"><decl pos:start="29:5" pos:end="29:40"><type pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">struct</name> <name pos:start="29:12" pos:end="29:21">SwsContext</name></name> <modifier pos:start="29:23" pos:end="29:23">*</modifier></type><name pos:start="29:24" pos:end="29:33">dstContext</name> <init pos:start="29:35" pos:end="29:40">= <expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">NULL</name></expr></init></decl>, <decl pos:start="29:43" pos:end="29:60"><type ref="prev" pos:start="29:5" pos:end="29:23"><modifier pos:start="29:43" pos:end="29:43">*</modifier></type><name pos:start="29:44" pos:end="29:53">outContext</name> <init pos:start="29:55" pos:end="29:60">= <expr pos:start="29:57" pos:end="29:60"><name pos:start="29:57" pos:end="29:60">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:21"><decl pos:start="31:5" pos:end="31:20"><type pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:12">uint32_t</name></type> <name pos:start="31:14" pos:end="31:16">crc</name> <init pos:start="31:18" pos:end="31:20">= <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:21"><decl pos:start="33:5" pos:end="33:20"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:11">res</name>      <init pos:start="33:18" pos:end="33:20">= <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="37:5" pos:end="103:5"><if pos:start="37:5" pos:end="103:5">if <condition pos:start="37:8" pos:end="37:75">(<expr pos:start="37:9" pos:end="37:74"><name pos:start="37:9" pos:end="37:21">cur_srcFormat</name> <operator pos:start="37:23" pos:end="37:24">!=</operator> <name pos:start="37:26" pos:end="37:34">srcFormat</name> <operator pos:start="37:36" pos:end="37:37">||</operator> <name pos:start="37:39" pos:end="37:46">cur_srcW</name> <operator pos:start="37:48" pos:end="37:49">!=</operator> <name pos:start="37:51" pos:end="37:54">srcW</name> <operator pos:start="37:56" pos:end="37:57">||</operator> <name pos:start="37:59" pos:end="37:66">cur_srcH</name> <operator pos:start="37:68" pos:end="37:69">!=</operator> <name pos:start="37:71" pos:end="37:74">srcH</name></expr>)</condition> <block pos:start="37:77" pos:end="103:5">{<block_content pos:start="39:9" pos:end="101:29">

        <decl_stmt pos:start="39:9" pos:end="39:45"><decl pos:start="39:9" pos:end="39:44"><type pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:25"><name pos:start="39:9" pos:end="39:14">struct</name> <name pos:start="39:16" pos:end="39:25">SwsContext</name></name> <modifier pos:start="39:27" pos:end="39:27">*</modifier></type><name pos:start="39:28" pos:end="39:37">srcContext</name> <init pos:start="39:39" pos:end="39:44">= <expr pos:start="39:41" pos:end="39:44"><name pos:start="39:41" pos:end="39:44">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:14"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">p</name></decl>;</decl_stmt>



        <for pos:start="45:9" pos:end="47:30">for <control pos:start="45:13" pos:end="45:31">(<init pos:start="45:14" pos:end="45:19"><expr pos:start="45:14" pos:end="45:18"><name pos:start="45:14" pos:end="45:14">p</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</init> <condition pos:start="45:21" pos:end="45:26"><expr pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">p</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">4</literal></expr>;</condition> <incr pos:start="45:28" pos:end="45:30"><expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:28">p</name><operator pos:start="45:29" pos:end="45:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="47:30"><block_content pos:start="47:13" pos:end="47:30">

            <expr_stmt pos:start="47:13" pos:end="47:30"><expr pos:start="47:13" pos:end="47:29"><call pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:20">av_freep</name><argument_list pos:start="47:21" pos:end="47:29">(<argument pos:start="47:22" pos:end="47:28"><expr pos:start="47:22" pos:end="47:28"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:28"><name pos:start="47:23" pos:end="47:25">src</name><index pos:start="47:26" pos:end="47:28">[<expr pos:start="47:27" pos:end="47:27"><name pos:start="47:27" pos:end="47:27">p</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><call pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:31">av_image_fill_linesizes</name><argument_list pos:start="51:32" pos:end="51:59">(<argument pos:start="51:33" pos:end="51:41"><expr pos:start="51:33" pos:end="51:41"><name pos:start="51:33" pos:end="51:41">srcStride</name></expr></argument>, <argument pos:start="51:44" pos:end="51:52"><expr pos:start="51:44" pos:end="51:52"><name pos:start="51:44" pos:end="51:52">srcFormat</name></expr></argument>, <argument pos:start="51:55" pos:end="51:58"><expr pos:start="51:55" pos:end="51:58"><name pos:start="51:55" pos:end="51:58">srcW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="53:9" pos:end="71:9">for <control pos:start="53:13" pos:end="53:31">(<init pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">p</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>;</init> <condition pos:start="53:21" pos:end="53:26"><expr pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">p</name> <operator pos:start="53:23" pos:end="53:23">&lt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">4</literal></expr>;</condition> <incr pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:28">p</name><operator pos:start="53:29" pos:end="53:30">++</operator></expr></incr>)</control> <block pos:start="53:33" pos:end="71:9">{<block_content pos:start="55:13" pos:end="69:13">

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:21">srcStride</name><index pos:start="55:22" pos:end="55:24">[<expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">p</name></expr>]</index></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <call pos:start="55:28" pos:end="55:52"><name pos:start="55:28" pos:end="55:34">FFALIGN</name><argument_list pos:start="55:35" pos:end="55:52">(<argument pos:start="55:36" pos:end="55:47"><expr pos:start="55:36" pos:end="55:47"><name pos:start="55:36" pos:end="55:47"><name pos:start="55:36" pos:end="55:44">srcStride</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><name pos:start="55:46" pos:end="55:46">p</name></expr>]</index></name></expr></argument>, <argument pos:start="55:50" pos:end="55:51"><expr pos:start="55:50" pos:end="55:51"><literal type="number" pos:start="55:50" pos:end="55:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:62"><if pos:start="57:13" pos:end="59:62">if <condition pos:start="57:16" pos:end="57:29">(<expr pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:28"><name pos:start="57:17" pos:end="57:25">srcStride</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><name pos:start="57:27" pos:end="57:27">p</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:62"><block_content pos:start="59:17" pos:end="59:62">

                <expr_stmt pos:start="59:17" pos:end="59:62"><expr pos:start="59:17" pos:end="59:61"><name pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:19">src</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">p</name></expr>]</index></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:61"><name pos:start="59:26" pos:end="59:35">av_mallocz</name><argument_list pos:start="59:36" pos:end="59:61">(<argument pos:start="59:37" pos:end="59:60"><expr pos:start="59:37" pos:end="59:60"><name pos:start="59:37" pos:end="59:48"><name pos:start="59:37" pos:end="59:45">srcStride</name><index pos:start="59:46" pos:end="59:48">[<expr pos:start="59:47" pos:end="59:47"><name pos:start="59:47" pos:end="59:47">p</name></expr>]</index></name> <operator pos:start="59:50" pos:end="59:50">*</operator> <name pos:start="59:52" pos:end="59:55">srcH</name> <operator pos:start="59:57" pos:end="59:57">+</operator> <literal type="number" pos:start="59:59" pos:end="59:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="69:13"><if pos:start="61:13" pos:end="69:13">if <condition pos:start="61:16" pos:end="61:40">(<expr pos:start="61:17" pos:end="61:39"><name pos:start="61:17" pos:end="61:28"><name pos:start="61:17" pos:end="61:25">srcStride</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><name pos:start="61:27" pos:end="61:27">p</name></expr>]</index></name> <operator pos:start="61:30" pos:end="61:31">&amp;&amp;</operator> <operator pos:start="61:33" pos:end="61:33">!</operator><name pos:start="61:34" pos:end="61:39"><name pos:start="61:34" pos:end="61:36">src</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">p</name></expr>]</index></name></expr>)</condition> <block pos:start="61:42" pos:end="69:13">{<block_content pos:start="63:17" pos:end="67:25">

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><call pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:22">perror</name><argument_list pos:start="63:23" pos:end="63:32">(<argument pos:start="63:24" pos:end="63:31"><expr pos:start="63:24" pos:end="63:31"><literal type="string" pos:start="63:24" pos:end="63:31">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:25"><expr pos:start="65:17" pos:end="65:24"><name pos:start="65:17" pos:end="65:19">res</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <operator pos:start="65:23" pos:end="65:23">-</operator><literal type="number" pos:start="65:24" pos:end="65:24">1</literal></expr>;</expr_stmt>

                <goto pos:start="67:17" pos:end="67:25">goto <name pos:start="67:22" pos:end="67:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="73:9" pos:end="75:79"><expr pos:start="73:9" pos:end="75:78"><name pos:start="73:9" pos:end="73:18">srcContext</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <call pos:start="73:22" pos:end="75:78"><name pos:start="73:22" pos:end="73:35">sws_getContext</name><argument_list pos:start="73:36" pos:end="75:78">(<argument pos:start="73:37" pos:end="73:37"><expr pos:start="73:37" pos:end="73:37"><name pos:start="73:37" pos:end="73:37">w</name></expr></argument>, <argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">h</name></expr></argument>, <argument pos:start="73:43" pos:end="73:61"><expr pos:start="73:43" pos:end="73:61"><name pos:start="73:43" pos:end="73:61">AV_PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="73:64" pos:end="73:67"><expr pos:start="73:64" pos:end="73:67"><name pos:start="73:64" pos:end="73:67">srcW</name></expr></argument>, <argument pos:start="73:70" pos:end="73:73"><expr pos:start="73:70" pos:end="73:73"><name pos:start="73:70" pos:end="73:73">srcH</name></expr></argument>,

                                    <argument pos:start="75:37" pos:end="75:45"><expr pos:start="75:37" pos:end="75:45"><name pos:start="75:37" pos:end="75:45">srcFormat</name></expr></argument>, <argument pos:start="75:48" pos:end="75:59"><expr pos:start="75:48" pos:end="75:59"><name pos:start="75:48" pos:end="75:59">SWS_BILINEAR</name></expr></argument>, <argument pos:start="75:62" pos:end="75:65"><expr pos:start="75:62" pos:end="75:65"><name pos:start="75:62" pos:end="75:65">NULL</name></expr></argument>, <argument pos:start="75:68" pos:end="75:71"><expr pos:start="75:68" pos:end="75:71"><name pos:start="75:68" pos:end="75:71">NULL</name></expr></argument>, <argument pos:start="75:74" pos:end="75:77"><expr pos:start="75:74" pos:end="75:77"><name pos:start="75:74" pos:end="75:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="77:24">(<expr pos:start="77:13" pos:end="77:23"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:23">srcContext</name></expr>)</condition> <block pos:start="77:26" pos:end="89:9">{<block_content pos:start="79:13" pos:end="87:21">

            <expr_stmt pos:start="79:13" pos:end="83:60"><expr pos:start="79:13" pos:end="83:59"><call pos:start="79:13" pos:end="83:59"><name pos:start="79:13" pos:end="79:19">fprintf</name><argument_list pos:start="79:20" pos:end="83:59">(<argument pos:start="79:21" pos:end="79:26"><expr pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:26">stderr</name></expr></argument>, <argument pos:start="79:29" pos:end="79:56"><expr pos:start="79:29" pos:end="79:56"><literal type="string" pos:start="79:29" pos:end="79:56">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                    <argument pos:start="81:21" pos:end="81:68"><expr pos:start="81:21" pos:end="81:68"><name pos:start="81:21" pos:end="81:63"><name pos:start="81:21" pos:end="81:42">av_pix_fmt_descriptors</name><index pos:start="81:43" pos:end="81:63">[<expr pos:start="81:44" pos:end="81:62"><name pos:start="81:44" pos:end="81:62">AV_PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="81:64" pos:end="81:64">.</operator><name pos:start="81:65" pos:end="81:68">name</name></expr></argument>,

                    <argument pos:start="83:21" pos:end="83:58"><expr pos:start="83:21" pos:end="83:58"><name pos:start="83:21" pos:end="83:53"><name pos:start="83:21" pos:end="83:42">av_pix_fmt_descriptors</name><index pos:start="83:43" pos:end="83:53">[<expr pos:start="83:44" pos:end="83:52"><name pos:start="83:44" pos:end="83:52">srcFormat</name></expr>]</index></name><operator pos:start="83:54" pos:end="83:54">.</operator><name pos:start="83:55" pos:end="83:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:21"><expr pos:start="85:13" pos:end="85:20"><name pos:start="85:13" pos:end="85:15">res</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>;</expr_stmt>

            <goto pos:start="87:13" pos:end="87:21">goto <name pos:start="87:18" pos:end="87:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:68"><expr pos:start="91:9" pos:end="91:67"><call pos:start="91:9" pos:end="91:67"><name pos:start="91:9" pos:end="91:17">sws_scale</name><argument_list pos:start="91:18" pos:end="91:67">(<argument pos:start="91:19" pos:end="91:28"><expr pos:start="91:19" pos:end="91:28"><name pos:start="91:19" pos:end="91:28">srcContext</name></expr></argument>, <argument pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:33">ref</name></expr></argument>, <argument pos:start="91:36" pos:end="91:44"><expr pos:start="91:36" pos:end="91:44"><name pos:start="91:36" pos:end="91:44">refStride</name></expr></argument>, <argument pos:start="91:47" pos:end="91:47"><expr pos:start="91:47" pos:end="91:47"><literal type="number" pos:start="91:47" pos:end="91:47">0</literal></expr></argument>, <argument pos:start="91:50" pos:end="91:50"><expr pos:start="91:50" pos:end="91:50"><name pos:start="91:50" pos:end="91:50">h</name></expr></argument>, <argument pos:start="91:53" pos:end="91:55"><expr pos:start="91:53" pos:end="91:55"><name pos:start="91:53" pos:end="91:55">src</name></expr></argument>, <argument pos:start="91:58" pos:end="91:66"><expr pos:start="91:58" pos:end="91:66"><name pos:start="91:58" pos:end="91:66">srcStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:36"><expr pos:start="93:9" pos:end="93:35"><call pos:start="93:9" pos:end="93:35"><name pos:start="93:9" pos:end="93:23">sws_freeContext</name><argument_list pos:start="93:24" pos:end="93:35">(<argument pos:start="93:25" pos:end="93:34"><expr pos:start="93:25" pos:end="93:34"><name pos:start="93:25" pos:end="93:34">srcContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="97:9" pos:end="97:34"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:21">cur_srcFormat</name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:33">srcFormat</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:16">cur_srcW</name>      <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:28">srcW</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:16">cur_srcH</name>      <operator pos:start="101:23" pos:end="101:23">=</operator> <name pos:start="101:25" pos:end="101:28">srcH</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:56"><expr pos:start="107:5" pos:end="107:55"><call pos:start="107:5" pos:end="107:55"><name pos:start="107:5" pos:end="107:27">av_image_fill_linesizes</name><argument_list pos:start="107:28" pos:end="107:55">(<argument pos:start="107:29" pos:end="107:37"><expr pos:start="107:29" pos:end="107:37"><name pos:start="107:29" pos:end="107:37">dstStride</name></expr></argument>, <argument pos:start="107:40" pos:end="107:48"><expr pos:start="107:40" pos:end="107:48"><name pos:start="107:40" pos:end="107:48">dstFormat</name></expr></argument>, <argument pos:start="107:51" pos:end="107:54"><expr pos:start="107:51" pos:end="107:54"><name pos:start="107:51" pos:end="107:54">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="109:5" pos:end="141:5">for <control pos:start="109:9" pos:end="109:27">(<init pos:start="109:10" pos:end="109:15"><expr pos:start="109:10" pos:end="109:14"><name pos:start="109:10" pos:end="109:10">i</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>;</init> <condition pos:start="109:17" pos:end="109:22"><expr pos:start="109:17" pos:end="109:21"><name pos:start="109:17" pos:end="109:17">i</name> <operator pos:start="109:19" pos:end="109:19">&lt;</operator> <literal type="number" pos:start="109:21" pos:end="109:21">4</literal></expr>;</condition> <incr pos:start="109:24" pos:end="109:26"><expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:24">i</name><operator pos:start="109:25" pos:end="109:26">++</operator></expr></incr>)</control> <block pos:start="109:29" pos:end="141:5">{<block_content pos:start="123:9" pos:end="139:9">

        <comment type="block" pos:start="111:9" pos:end="117:40">/* Image buffers passed into libswscale can be allocated any way you

         * prefer, as long as they're aligned enough for the architecture, and

         * they're freed appropriately (such as using av_free for buffers

         * allocated with av_malloc). */</comment>

        <comment type="block" pos:start="119:9" pos:end="121:28">/* An extra 16 bytes is being allocated because some scalers may write

         * out of bounds. */</comment>

        <expr_stmt pos:start="123:9" pos:end="123:49"><expr pos:start="123:9" pos:end="123:48"><name pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:17">dstStride</name><index pos:start="123:18" pos:end="123:20">[<expr pos:start="123:19" pos:end="123:19"><name pos:start="123:19" pos:end="123:19">i</name></expr>]</index></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <call pos:start="123:24" pos:end="123:48"><name pos:start="123:24" pos:end="123:30">FFALIGN</name><argument_list pos:start="123:31" pos:end="123:48">(<argument pos:start="123:32" pos:end="123:43"><expr pos:start="123:32" pos:end="123:43"><name pos:start="123:32" pos:end="123:43"><name pos:start="123:32" pos:end="123:40">dstStride</name><index pos:start="123:41" pos:end="123:43">[<expr pos:start="123:42" pos:end="123:42"><name pos:start="123:42" pos:end="123:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="123:46" pos:end="123:47"><expr pos:start="123:46" pos:end="123:47"><literal type="number" pos:start="123:46" pos:end="123:47">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:58"><if pos:start="125:9" pos:end="127:58">if <condition pos:start="125:12" pos:end="125:25">(<expr pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:21">dstStride</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><name pos:start="125:23" pos:end="125:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:58"><block_content pos:start="127:13" pos:end="127:58">

            <expr_stmt pos:start="127:13" pos:end="127:58"><expr pos:start="127:13" pos:end="127:57"><name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:15">dst</name><index pos:start="127:16" pos:end="127:18">[<expr pos:start="127:17" pos:end="127:17"><name pos:start="127:17" pos:end="127:17">i</name></expr>]</index></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:57"><name pos:start="127:22" pos:end="127:31">av_mallocz</name><argument_list pos:start="127:32" pos:end="127:57">(<argument pos:start="127:33" pos:end="127:56"><expr pos:start="127:33" pos:end="127:56"><name pos:start="127:33" pos:end="127:44"><name pos:start="127:33" pos:end="127:41">dstStride</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><name pos:start="127:43" pos:end="127:43">i</name></expr>]</index></name> <operator pos:start="127:46" pos:end="127:46">*</operator> <name pos:start="127:48" pos:end="127:51">dstH</name> <operator pos:start="127:53" pos:end="127:53">+</operator> <literal type="number" pos:start="127:55" pos:end="127:56">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="139:9"><if pos:start="129:9" pos:end="139:9">if <condition pos:start="129:12" pos:end="129:36">(<expr pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:24"><name pos:start="129:13" pos:end="129:21">dstStride</name><index pos:start="129:22" pos:end="129:24">[<expr pos:start="129:23" pos:end="129:23"><name pos:start="129:23" pos:end="129:23">i</name></expr>]</index></name> <operator pos:start="129:26" pos:end="129:27">&amp;&amp;</operator> <operator pos:start="129:29" pos:end="129:29">!</operator><name pos:start="129:30" pos:end="129:35"><name pos:start="129:30" pos:end="129:32">dst</name><index pos:start="129:33" pos:end="129:35">[<expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="129:38" pos:end="139:9">{<block_content pos:start="131:13" pos:end="137:21">

            <expr_stmt pos:start="131:13" pos:end="131:29"><expr pos:start="131:13" pos:end="131:28"><call pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:18">perror</name><argument_list pos:start="131:19" pos:end="131:28">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><literal type="string" pos:start="131:20" pos:end="131:27">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:21"><expr pos:start="133:13" pos:end="133:20"><name pos:start="133:13" pos:end="133:15">res</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <operator pos:start="133:19" pos:end="133:19">-</operator><literal type="number" pos:start="133:20" pos:end="133:20">1</literal></expr>;</expr_stmt>



            <goto pos:start="137:13" pos:end="137:21">goto <name pos:start="137:18" pos:end="137:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="145:5" pos:end="147:57"><expr pos:start="145:5" pos:end="147:56"><name pos:start="145:5" pos:end="145:14">dstContext</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <call pos:start="145:18" pos:end="147:56"><name pos:start="145:18" pos:end="145:31">sws_getContext</name><argument_list pos:start="145:32" pos:end="147:56">(<argument pos:start="145:33" pos:end="145:36"><expr pos:start="145:33" pos:end="145:36"><name pos:start="145:33" pos:end="145:36">srcW</name></expr></argument>, <argument pos:start="145:39" pos:end="145:42"><expr pos:start="145:39" pos:end="145:42"><name pos:start="145:39" pos:end="145:42">srcH</name></expr></argument>, <argument pos:start="145:45" pos:end="145:53"><expr pos:start="145:45" pos:end="145:53"><name pos:start="145:45" pos:end="145:53">srcFormat</name></expr></argument>, <argument pos:start="145:56" pos:end="145:59"><expr pos:start="145:56" pos:end="145:59"><name pos:start="145:56" pos:end="145:59">dstW</name></expr></argument>, <argument pos:start="145:62" pos:end="145:65"><expr pos:start="145:62" pos:end="145:65"><name pos:start="145:62" pos:end="145:65">dstH</name></expr></argument>, <argument pos:start="145:68" pos:end="145:76"><expr pos:start="145:68" pos:end="145:76"><name pos:start="145:68" pos:end="145:76">dstFormat</name></expr></argument>,

                                <argument pos:start="147:33" pos:end="147:37"><expr pos:start="147:33" pos:end="147:37"><name pos:start="147:33" pos:end="147:37">flags</name></expr></argument>, <argument pos:start="147:40" pos:end="147:43"><expr pos:start="147:40" pos:end="147:43"><name pos:start="147:40" pos:end="147:43">NULL</name></expr></argument>, <argument pos:start="147:46" pos:end="147:49"><expr pos:start="147:46" pos:end="147:49"><name pos:start="147:46" pos:end="147:49">NULL</name></expr></argument>, <argument pos:start="147:52" pos:end="147:55"><expr pos:start="147:52" pos:end="147:55"><name pos:start="147:52" pos:end="147:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="149:5" pos:end="161:5"><if pos:start="149:5" pos:end="161:5">if <condition pos:start="149:8" pos:end="149:20">(<expr pos:start="149:9" pos:end="149:19"><operator pos:start="149:9" pos:end="149:9">!</operator><name pos:start="149:10" pos:end="149:19">dstContext</name></expr>)</condition> <block pos:start="149:22" pos:end="161:5">{<block_content pos:start="151:9" pos:end="159:17">

        <expr_stmt pos:start="151:9" pos:end="155:56"><expr pos:start="151:9" pos:end="155:55"><call pos:start="151:9" pos:end="155:55"><name pos:start="151:9" pos:end="151:15">fprintf</name><argument_list pos:start="151:16" pos:end="155:55">(<argument pos:start="151:17" pos:end="151:22"><expr pos:start="151:17" pos:end="151:22"><name pos:start="151:17" pos:end="151:22">stderr</name></expr></argument>, <argument pos:start="151:25" pos:end="151:52"><expr pos:start="151:25" pos:end="151:52"><literal type="string" pos:start="151:25" pos:end="151:52">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                <argument pos:start="153:17" pos:end="153:54"><expr pos:start="153:17" pos:end="153:54"><name pos:start="153:17" pos:end="153:49"><name pos:start="153:17" pos:end="153:38">av_pix_fmt_descriptors</name><index pos:start="153:39" pos:end="153:49">[<expr pos:start="153:40" pos:end="153:48"><name pos:start="153:40" pos:end="153:48">srcFormat</name></expr>]</index></name><operator pos:start="153:50" pos:end="153:50">.</operator><name pos:start="153:51" pos:end="153:54">name</name></expr></argument>,

                <argument pos:start="155:17" pos:end="155:54"><expr pos:start="155:17" pos:end="155:54"><name pos:start="155:17" pos:end="155:49"><name pos:start="155:17" pos:end="155:38">av_pix_fmt_descriptors</name><index pos:start="155:39" pos:end="155:49">[<expr pos:start="155:40" pos:end="155:48"><name pos:start="155:40" pos:end="155:48">dstFormat</name></expr>]</index></name><operator pos:start="155:50" pos:end="155:50">.</operator><name pos:start="155:51" pos:end="155:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:17"><expr pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:11">res</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <operator pos:start="157:15" pos:end="157:15">-</operator><literal type="number" pos:start="157:16" pos:end="157:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="159:9" pos:end="159:17">goto <name pos:start="159:14" pos:end="159:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="171:18"><expr pos:start="165:5" pos:end="171:17"><call pos:start="165:5" pos:end="171:17"><name pos:start="165:5" pos:end="165:10">printf</name><argument_list pos:start="165:11" pos:end="171:17">(<argument pos:start="165:12" pos:end="165:46"><expr pos:start="165:12" pos:end="165:46"><literal type="string" pos:start="165:12" pos:end="165:46">" %s %dx%d -&gt; %s %3dx%3d flags=%2d"</literal></expr></argument>,

           <argument pos:start="167:12" pos:end="167:49"><expr pos:start="167:12" pos:end="167:49"><name pos:start="167:12" pos:end="167:44"><name pos:start="167:12" pos:end="167:33">av_pix_fmt_descriptors</name><index pos:start="167:34" pos:end="167:44">[<expr pos:start="167:35" pos:end="167:43"><name pos:start="167:35" pos:end="167:43">srcFormat</name></expr>]</index></name><operator pos:start="167:45" pos:end="167:45">.</operator><name pos:start="167:46" pos:end="167:49">name</name></expr></argument>, <argument pos:start="167:52" pos:end="167:55"><expr pos:start="167:52" pos:end="167:55"><name pos:start="167:52" pos:end="167:55">srcW</name></expr></argument>, <argument pos:start="167:58" pos:end="167:61"><expr pos:start="167:58" pos:end="167:61"><name pos:start="167:58" pos:end="167:61">srcH</name></expr></argument>,

           <argument pos:start="169:12" pos:end="169:49"><expr pos:start="169:12" pos:end="169:49"><name pos:start="169:12" pos:end="169:44"><name pos:start="169:12" pos:end="169:33">av_pix_fmt_descriptors</name><index pos:start="169:34" pos:end="169:44">[<expr pos:start="169:35" pos:end="169:43"><name pos:start="169:35" pos:end="169:43">dstFormat</name></expr>]</index></name><operator pos:start="169:45" pos:end="169:45">.</operator><name pos:start="169:46" pos:end="169:49">name</name></expr></argument>, <argument pos:start="169:52" pos:end="169:55"><expr pos:start="169:52" pos:end="169:55"><name pos:start="169:52" pos:end="169:55">dstW</name></expr></argument>, <argument pos:start="169:58" pos:end="169:61"><expr pos:start="169:58" pos:end="169:61"><name pos:start="169:58" pos:end="169:61">dstH</name></expr></argument>,

           <argument pos:start="171:12" pos:end="171:16"><expr pos:start="171:12" pos:end="171:16"><name pos:start="171:12" pos:end="171:16">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:19"><expr pos:start="173:5" pos:end="173:18"><call pos:start="173:5" pos:end="173:18"><name pos:start="173:5" pos:end="173:10">fflush</name><argument_list pos:start="173:11" pos:end="173:18">(<argument pos:start="173:12" pos:end="173:17"><expr pos:start="173:12" pos:end="173:17"><name pos:start="173:12" pos:end="173:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:67"><expr pos:start="177:5" pos:end="177:66"><call pos:start="177:5" pos:end="177:66"><name pos:start="177:5" pos:end="177:13">sws_scale</name><argument_list pos:start="177:14" pos:end="177:66">(<argument pos:start="177:15" pos:end="177:24"><expr pos:start="177:15" pos:end="177:24"><name pos:start="177:15" pos:end="177:24">dstContext</name></expr></argument>, <argument pos:start="177:27" pos:end="177:29"><expr pos:start="177:27" pos:end="177:29"><name pos:start="177:27" pos:end="177:29">src</name></expr></argument>, <argument pos:start="177:32" pos:end="177:40"><expr pos:start="177:32" pos:end="177:40"><name pos:start="177:32" pos:end="177:40">srcStride</name></expr></argument>, <argument pos:start="177:43" pos:end="177:43"><expr pos:start="177:43" pos:end="177:43"><literal type="number" pos:start="177:43" pos:end="177:43">0</literal></expr></argument>, <argument pos:start="177:46" pos:end="177:49"><expr pos:start="177:46" pos:end="177:49"><name pos:start="177:46" pos:end="177:49">srcH</name></expr></argument>, <argument pos:start="177:52" pos:end="177:54"><expr pos:start="177:52" pos:end="177:54"><name pos:start="177:52" pos:end="177:54">dst</name></expr></argument>, <argument pos:start="177:57" pos:end="177:65"><expr pos:start="177:57" pos:end="177:65"><name pos:start="177:57" pos:end="177:65">dstStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="181:5" pos:end="185:42">for <control pos:start="181:9" pos:end="181:43">(<init pos:start="181:10" pos:end="181:15"><expr pos:start="181:10" pos:end="181:14"><name pos:start="181:10" pos:end="181:10">i</name> <operator pos:start="181:12" pos:end="181:12">=</operator> <literal type="number" pos:start="181:14" pos:end="181:14">0</literal></expr>;</init> <condition pos:start="181:17" pos:end="181:38"><expr pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:17">i</name> <operator pos:start="181:19" pos:end="181:19">&lt;</operator> <literal type="number" pos:start="181:21" pos:end="181:21">4</literal> <operator pos:start="181:23" pos:end="181:24">&amp;&amp;</operator> <name pos:start="181:26" pos:end="181:37"><name pos:start="181:26" pos:end="181:34">dstStride</name><index pos:start="181:35" pos:end="181:37">[<expr pos:start="181:36" pos:end="181:36"><name pos:start="181:36" pos:end="181:36">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="181:40" pos:end="181:42"><expr pos:start="181:40" pos:end="181:42"><name pos:start="181:40" pos:end="181:40">i</name><operator pos:start="181:41" pos:end="181:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:9" pos:end="185:42"><block_content pos:start="183:9" pos:end="185:42">

        <expr_stmt pos:start="183:9" pos:end="185:42"><expr pos:start="183:9" pos:end="185:41"><name pos:start="183:9" pos:end="183:11">crc</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="185:41"><name pos:start="183:15" pos:end="183:20">av_crc</name><argument_list pos:start="183:21" pos:end="185:41">(<argument pos:start="183:22" pos:end="183:53"><expr pos:start="183:22" pos:end="183:53"><call pos:start="183:22" pos:end="183:53"><name pos:start="183:22" pos:end="183:37">av_crc_get_table</name><argument_list pos:start="183:38" pos:end="183:53">(<argument pos:start="183:39" pos:end="183:52"><expr pos:start="183:39" pos:end="183:52"><name pos:start="183:39" pos:end="183:52">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:56" pos:end="183:58"><expr pos:start="183:56" pos:end="183:58"><name pos:start="183:56" pos:end="183:58">crc</name></expr></argument>, <argument pos:start="183:61" pos:end="183:66"><expr pos:start="183:61" pos:end="183:66"><name pos:start="183:61" pos:end="183:66"><name pos:start="183:61" pos:end="183:63">dst</name><index pos:start="183:64" pos:end="183:66">[<expr pos:start="183:65" pos:end="183:65"><name pos:start="183:65" pos:end="183:65">i</name></expr>]</index></name></expr></argument>,

                     <argument pos:start="185:22" pos:end="185:40"><expr pos:start="185:22" pos:end="185:40"><name pos:start="185:22" pos:end="185:33"><name pos:start="185:22" pos:end="185:30">dstStride</name><index pos:start="185:31" pos:end="185:33">[<expr pos:start="185:32" pos:end="185:32"><name pos:start="185:32" pos:end="185:32">i</name></expr>]</index></name> <operator pos:start="185:35" pos:end="185:35">*</operator> <name pos:start="185:37" pos:end="185:40">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="189:5" pos:end="287:5"><if pos:start="189:5" pos:end="199:5">if <condition pos:start="189:8" pos:end="189:27">(<expr pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:9">r</name> <operator pos:start="189:11" pos:end="189:12">&amp;&amp;</operator> <name pos:start="189:14" pos:end="189:16">crc</name> <operator pos:start="189:18" pos:end="189:19">==</operator> <name pos:start="189:21" pos:end="189:26"><name pos:start="189:21" pos:end="189:21">r</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:26">crc</name></name></expr>)</condition> <block pos:start="189:29" pos:end="199:5">{<block_content pos:start="191:9" pos:end="197:23">

        <expr_stmt pos:start="191:9" pos:end="191:23"><expr pos:start="191:9" pos:end="191:22"><name pos:start="191:9" pos:end="191:12">ssdY</name> <operator pos:start="191:14" pos:end="191:14">=</operator> <name pos:start="191:16" pos:end="191:22"><name pos:start="191:16" pos:end="191:16">r</name><operator pos:start="191:17" pos:end="191:18">-&gt;</operator><name pos:start="191:19" pos:end="191:22">ssdY</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:23"><expr pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:12">ssdU</name> <operator pos:start="193:14" pos:end="193:14">=</operator> <name pos:start="193:16" pos:end="193:22"><name pos:start="193:16" pos:end="193:16">r</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:22">ssdU</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:23"><expr pos:start="195:9" pos:end="195:22"><name pos:start="195:9" pos:end="195:12">ssdV</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <name pos:start="195:16" pos:end="195:22"><name pos:start="195:16" pos:end="195:16">r</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:22">ssdV</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:23"><expr pos:start="197:9" pos:end="197:22"><name pos:start="197:9" pos:end="197:12">ssdA</name> <operator pos:start="197:14" pos:end="197:14">=</operator> <name pos:start="197:16" pos:end="197:22"><name pos:start="197:16" pos:end="197:16">r</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:22">ssdA</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="199:7" pos:end="287:5">else <block pos:start="199:12" pos:end="287:5">{<block_content pos:start="201:9" pos:end="285:32">

        <for pos:start="201:9" pos:end="219:9">for <control pos:start="201:13" pos:end="201:31">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">i</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:26"><expr pos:start="201:21" pos:end="201:25"><name pos:start="201:21" pos:end="201:21">i</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <literal type="number" pos:start="201:25" pos:end="201:25">4</literal></expr>;</condition> <incr pos:start="201:28" pos:end="201:30"><expr pos:start="201:28" pos:end="201:30"><name pos:start="201:28" pos:end="201:28">i</name><operator pos:start="201:29" pos:end="201:30">++</operator></expr></incr>)</control> <block pos:start="201:33" pos:end="219:9">{<block_content pos:start="203:13" pos:end="217:13">

            <expr_stmt pos:start="203:13" pos:end="203:53"><expr pos:start="203:13" pos:end="203:52"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:21">refStride</name><index pos:start="203:22" pos:end="203:24">[<expr pos:start="203:23" pos:end="203:23"><name pos:start="203:23" pos:end="203:23">i</name></expr>]</index></name> <operator pos:start="203:26" pos:end="203:26">=</operator> <call pos:start="203:28" pos:end="203:52"><name pos:start="203:28" pos:end="203:34">FFALIGN</name><argument_list pos:start="203:35" pos:end="203:52">(<argument pos:start="203:36" pos:end="203:47"><expr pos:start="203:36" pos:end="203:47"><name pos:start="203:36" pos:end="203:47"><name pos:start="203:36" pos:end="203:44">refStride</name><index pos:start="203:45" pos:end="203:47">[<expr pos:start="203:46" pos:end="203:46"><name pos:start="203:46" pos:end="203:46">i</name></expr>]</index></name></expr></argument>, <argument pos:start="203:50" pos:end="203:51"><expr pos:start="203:50" pos:end="203:51"><literal type="number" pos:start="203:50" pos:end="203:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="207:54"><if pos:start="205:13" pos:end="207:54">if <condition pos:start="205:16" pos:end="205:29">(<expr pos:start="205:17" pos:end="205:28"><name pos:start="205:17" pos:end="205:28"><name pos:start="205:17" pos:end="205:25">refStride</name><index pos:start="205:26" pos:end="205:28">[<expr pos:start="205:27" pos:end="205:27"><name pos:start="205:27" pos:end="205:27">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:54"><block_content pos:start="207:17" pos:end="207:54">

                <expr_stmt pos:start="207:17" pos:end="207:54"><expr pos:start="207:17" pos:end="207:53"><name pos:start="207:17" pos:end="207:22"><name pos:start="207:17" pos:end="207:19">out</name><index pos:start="207:20" pos:end="207:22">[<expr pos:start="207:21" pos:end="207:21"><name pos:start="207:21" pos:end="207:21">i</name></expr>]</index></name> <operator pos:start="207:24" pos:end="207:24">=</operator> <call pos:start="207:26" pos:end="207:53"><name pos:start="207:26" pos:end="207:35">av_mallocz</name><argument_list pos:start="207:36" pos:end="207:53">(<argument pos:start="207:37" pos:end="207:52"><expr pos:start="207:37" pos:end="207:52"><name pos:start="207:37" pos:end="207:48"><name pos:start="207:37" pos:end="207:45">refStride</name><index pos:start="207:46" pos:end="207:48">[<expr pos:start="207:47" pos:end="207:47"><name pos:start="207:47" pos:end="207:47">i</name></expr>]</index></name> <operator pos:start="207:50" pos:end="207:50">*</operator> <name pos:start="207:52" pos:end="207:52">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="209:13" pos:end="217:13"><if pos:start="209:13" pos:end="217:13">if <condition pos:start="209:16" pos:end="209:40">(<expr pos:start="209:17" pos:end="209:39"><name pos:start="209:17" pos:end="209:28"><name pos:start="209:17" pos:end="209:25">refStride</name><index pos:start="209:26" pos:end="209:28">[<expr pos:start="209:27" pos:end="209:27"><name pos:start="209:27" pos:end="209:27">i</name></expr>]</index></name> <operator pos:start="209:30" pos:end="209:31">&amp;&amp;</operator> <operator pos:start="209:33" pos:end="209:33">!</operator><name pos:start="209:34" pos:end="209:39"><name pos:start="209:34" pos:end="209:36">out</name><index pos:start="209:37" pos:end="209:39">[<expr pos:start="209:38" pos:end="209:38"><name pos:start="209:38" pos:end="209:38">i</name></expr>]</index></name></expr>)</condition> <block pos:start="209:42" pos:end="217:13">{<block_content pos:start="211:17" pos:end="215:25">

                <expr_stmt pos:start="211:17" pos:end="211:33"><expr pos:start="211:17" pos:end="211:32"><call pos:start="211:17" pos:end="211:32"><name pos:start="211:17" pos:end="211:22">perror</name><argument_list pos:start="211:23" pos:end="211:32">(<argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><literal type="string" pos:start="211:24" pos:end="211:31">"Malloc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="213:17" pos:end="213:25"><expr pos:start="213:17" pos:end="213:24"><name pos:start="213:17" pos:end="213:19">res</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <operator pos:start="213:23" pos:end="213:23">-</operator><literal type="number" pos:start="213:24" pos:end="213:24">1</literal></expr>;</expr_stmt>

                <goto pos:start="215:17" pos:end="215:25">goto <name pos:start="215:22" pos:end="215:24">end</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="221:9" pos:end="225:54"><expr pos:start="221:9" pos:end="225:53"><name pos:start="221:9" pos:end="221:18">outContext</name> <operator pos:start="221:20" pos:end="221:20">=</operator> <call pos:start="221:22" pos:end="225:53"><name pos:start="221:22" pos:end="221:35">sws_getContext</name><argument_list pos:start="221:36" pos:end="225:53">(<argument pos:start="221:37" pos:end="221:40"><expr pos:start="221:37" pos:end="221:40"><name pos:start="221:37" pos:end="221:40">dstW</name></expr></argument>, <argument pos:start="221:43" pos:end="221:46"><expr pos:start="221:43" pos:end="221:46"><name pos:start="221:43" pos:end="221:46">dstH</name></expr></argument>, <argument pos:start="221:49" pos:end="221:57"><expr pos:start="221:49" pos:end="221:57"><name pos:start="221:49" pos:end="221:57">dstFormat</name></expr></argument>, <argument pos:start="221:60" pos:end="221:60"><expr pos:start="221:60" pos:end="221:60"><name pos:start="221:60" pos:end="221:60">w</name></expr></argument>, <argument pos:start="221:63" pos:end="221:63"><expr pos:start="221:63" pos:end="221:63"><name pos:start="221:63" pos:end="221:63">h</name></expr></argument>,

                                    <argument pos:start="223:37" pos:end="223:55"><expr pos:start="223:37" pos:end="223:55"><name pos:start="223:37" pos:end="223:55">AV_PIX_FMT_YUVA420P</name></expr></argument>, <argument pos:start="223:58" pos:end="223:69"><expr pos:start="223:58" pos:end="223:69"><name pos:start="223:58" pos:end="223:69">SWS_BILINEAR</name></expr></argument>,

                                    <argument pos:start="225:37" pos:end="225:40"><expr pos:start="225:37" pos:end="225:40"><name pos:start="225:37" pos:end="225:40">NULL</name></expr></argument>, <argument pos:start="225:43" pos:end="225:46"><expr pos:start="225:43" pos:end="225:46"><name pos:start="225:43" pos:end="225:46">NULL</name></expr></argument>, <argument pos:start="225:49" pos:end="225:52"><expr pos:start="225:49" pos:end="225:52"><name pos:start="225:49" pos:end="225:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="239:9"><if pos:start="227:9" pos:end="239:9">if <condition pos:start="227:12" pos:end="227:24">(<expr pos:start="227:13" pos:end="227:23"><operator pos:start="227:13" pos:end="227:13">!</operator><name pos:start="227:14" pos:end="227:23">outContext</name></expr>)</condition> <block pos:start="227:26" pos:end="239:9">{<block_content pos:start="229:13" pos:end="237:21">

            <expr_stmt pos:start="229:13" pos:end="233:70"><expr pos:start="229:13" pos:end="233:69"><call pos:start="229:13" pos:end="233:69"><name pos:start="229:13" pos:end="229:19">fprintf</name><argument_list pos:start="229:20" pos:end="233:69">(<argument pos:start="229:21" pos:end="229:26"><expr pos:start="229:21" pos:end="229:26"><name pos:start="229:21" pos:end="229:26">stderr</name></expr></argument>, <argument pos:start="229:29" pos:end="229:56"><expr pos:start="229:29" pos:end="229:56"><literal type="string" pos:start="229:29" pos:end="229:56">"Failed to get %s ---&gt; %s\n"</literal></expr></argument>,

                    <argument pos:start="231:21" pos:end="231:58"><expr pos:start="231:21" pos:end="231:58"><name pos:start="231:21" pos:end="231:53"><name pos:start="231:21" pos:end="231:42">av_pix_fmt_descriptors</name><index pos:start="231:43" pos:end="231:53">[<expr pos:start="231:44" pos:end="231:52"><name pos:start="231:44" pos:end="231:52">dstFormat</name></expr>]</index></name><operator pos:start="231:54" pos:end="231:54">.</operator><name pos:start="231:55" pos:end="231:58">name</name></expr></argument>,

                    <argument pos:start="233:21" pos:end="233:68"><expr pos:start="233:21" pos:end="233:68"><name pos:start="233:21" pos:end="233:63"><name pos:start="233:21" pos:end="233:42">av_pix_fmt_descriptors</name><index pos:start="233:43" pos:end="233:63">[<expr pos:start="233:44" pos:end="233:62"><name pos:start="233:44" pos:end="233:62">AV_PIX_FMT_YUVA420P</name></expr>]</index></name><operator pos:start="233:64" pos:end="233:64">.</operator><name pos:start="233:65" pos:end="233:68">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:21"><expr pos:start="235:13" pos:end="235:20"><name pos:start="235:13" pos:end="235:15">res</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <operator pos:start="235:19" pos:end="235:19">-</operator><literal type="number" pos:start="235:20" pos:end="235:20">1</literal></expr>;</expr_stmt>

            <goto pos:start="237:13" pos:end="237:21">goto <name pos:start="237:18" pos:end="237:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:71"><expr pos:start="241:9" pos:end="241:70"><call pos:start="241:9" pos:end="241:70"><name pos:start="241:9" pos:end="241:17">sws_scale</name><argument_list pos:start="241:18" pos:end="241:70">(<argument pos:start="241:19" pos:end="241:28"><expr pos:start="241:19" pos:end="241:28"><name pos:start="241:19" pos:end="241:28">outContext</name></expr></argument>, <argument pos:start="241:31" pos:end="241:33"><expr pos:start="241:31" pos:end="241:33"><name pos:start="241:31" pos:end="241:33">dst</name></expr></argument>, <argument pos:start="241:36" pos:end="241:44"><expr pos:start="241:36" pos:end="241:44"><name pos:start="241:36" pos:end="241:44">dstStride</name></expr></argument>, <argument pos:start="241:47" pos:end="241:47"><expr pos:start="241:47" pos:end="241:47"><literal type="number" pos:start="241:47" pos:end="241:47">0</literal></expr></argument>, <argument pos:start="241:50" pos:end="241:53"><expr pos:start="241:50" pos:end="241:53"><name pos:start="241:50" pos:end="241:53">dstH</name></expr></argument>, <argument pos:start="241:56" pos:end="241:58"><expr pos:start="241:56" pos:end="241:58"><name pos:start="241:56" pos:end="241:58">out</name></expr></argument>, <argument pos:start="241:61" pos:end="241:69"><expr pos:start="241:61" pos:end="241:69"><name pos:start="241:61" pos:end="241:69">refStride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:72"><expr pos:start="245:9" pos:end="245:71"><name pos:start="245:9" pos:end="245:12">ssdY</name> <operator pos:start="245:14" pos:end="245:14">=</operator> <call pos:start="245:16" pos:end="245:71"><name pos:start="245:16" pos:end="245:21">getSSD</name><argument_list pos:start="245:22" pos:end="245:71">(<argument pos:start="245:23" pos:end="245:28"><expr pos:start="245:23" pos:end="245:28"><name pos:start="245:23" pos:end="245:28"><name pos:start="245:23" pos:end="245:25">ref</name><index pos:start="245:26" pos:end="245:28">[<expr pos:start="245:27" pos:end="245:27"><literal type="number" pos:start="245:27" pos:end="245:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:31" pos:end="245:36"><expr pos:start="245:31" pos:end="245:36"><name pos:start="245:31" pos:end="245:36"><name pos:start="245:31" pos:end="245:33">out</name><index pos:start="245:34" pos:end="245:36">[<expr pos:start="245:35" pos:end="245:35"><literal type="number" pos:start="245:35" pos:end="245:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:39" pos:end="245:50"><expr pos:start="245:39" pos:end="245:50"><name pos:start="245:39" pos:end="245:50"><name pos:start="245:39" pos:end="245:47">refStride</name><index pos:start="245:48" pos:end="245:50">[<expr pos:start="245:49" pos:end="245:49"><literal type="number" pos:start="245:49" pos:end="245:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:53" pos:end="245:64"><expr pos:start="245:53" pos:end="245:64"><name pos:start="245:53" pos:end="245:64"><name pos:start="245:53" pos:end="245:61">refStride</name><index pos:start="245:62" pos:end="245:64">[<expr pos:start="245:63" pos:end="245:63"><literal type="number" pos:start="245:63" pos:end="245:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="245:67" pos:end="245:67"><expr pos:start="245:67" pos:end="245:67"><name pos:start="245:67" pos:end="245:67">w</name></expr></argument>, <argument pos:start="245:70" pos:end="245:70"><expr pos:start="245:70" pos:end="245:70"><name pos:start="245:70" pos:end="245:70">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="247:9" pos:end="259:9"><if pos:start="247:9" pos:end="259:9">if <condition pos:start="247:12" pos:end="247:57">(<expr pos:start="247:13" pos:end="247:56"><call pos:start="247:13" pos:end="247:32"><name pos:start="247:13" pos:end="247:21">hasChroma</name><argument_list pos:start="247:22" pos:end="247:32">(<argument pos:start="247:23" pos:end="247:31"><expr pos:start="247:23" pos:end="247:31"><name pos:start="247:23" pos:end="247:31">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="247:34" pos:end="247:35">&amp;&amp;</operator> <call pos:start="247:37" pos:end="247:56"><name pos:start="247:37" pos:end="247:45">hasChroma</name><argument_list pos:start="247:46" pos:end="247:56">(<argument pos:start="247:47" pos:end="247:55"><expr pos:start="247:47" pos:end="247:55"><name pos:start="247:47" pos:end="247:55">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="247:59" pos:end="259:9">{<block_content pos:start="251:13" pos:end="257:54">

            <comment type="line" pos:start="249:13" pos:end="249:52">//FIXME check that output is really gray</comment>

            <expr_stmt pos:start="251:13" pos:end="253:54"><expr pos:start="251:13" pos:end="253:53"><name pos:start="251:13" pos:end="251:16">ssdU</name> <operator pos:start="251:18" pos:end="251:18">=</operator> <call pos:start="251:20" pos:end="253:53"><name pos:start="251:20" pos:end="251:25">getSSD</name><argument_list pos:start="251:26" pos:end="253:53">(<argument pos:start="251:27" pos:end="251:32"><expr pos:start="251:27" pos:end="251:32"><name pos:start="251:27" pos:end="251:32"><name pos:start="251:27" pos:end="251:29">ref</name><index pos:start="251:30" pos:end="251:32">[<expr pos:start="251:31" pos:end="251:31"><literal type="number" pos:start="251:31" pos:end="251:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:35" pos:end="251:40"><expr pos:start="251:35" pos:end="251:40"><name pos:start="251:35" pos:end="251:40"><name pos:start="251:35" pos:end="251:37">out</name><index pos:start="251:38" pos:end="251:40">[<expr pos:start="251:39" pos:end="251:39"><literal type="number" pos:start="251:39" pos:end="251:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:43" pos:end="251:54"><expr pos:start="251:43" pos:end="251:54"><name pos:start="251:43" pos:end="251:54"><name pos:start="251:43" pos:end="251:51">refStride</name><index pos:start="251:52" pos:end="251:54">[<expr pos:start="251:53" pos:end="251:53"><literal type="number" pos:start="251:53" pos:end="251:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:57" pos:end="251:68"><expr pos:start="251:57" pos:end="251:68"><name pos:start="251:57" pos:end="251:68"><name pos:start="251:57" pos:end="251:65">refStride</name><index pos:start="251:66" pos:end="251:68">[<expr pos:start="251:67" pos:end="251:67"><literal type="number" pos:start="251:67" pos:end="251:67">1</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="253:27" pos:end="253:38"><expr pos:start="253:27" pos:end="253:38"><operator pos:start="253:27" pos:end="253:27">(</operator><name pos:start="253:28" pos:end="253:28">w</name> <operator pos:start="253:30" pos:end="253:30">+</operator> <literal type="number" pos:start="253:32" pos:end="253:32">1</literal><operator pos:start="253:33" pos:end="253:33">)</operator> <operator pos:start="253:35" pos:end="253:36">&gt;&gt;</operator> <literal type="number" pos:start="253:38" pos:end="253:38">1</literal></expr></argument>, <argument pos:start="253:41" pos:end="253:52"><expr pos:start="253:41" pos:end="253:52"><operator pos:start="253:41" pos:end="253:41">(</operator><name pos:start="253:42" pos:end="253:42">h</name> <operator pos:start="253:44" pos:end="253:44">+</operator> <literal type="number" pos:start="253:46" pos:end="253:46">1</literal><operator pos:start="253:47" pos:end="253:47">)</operator> <operator pos:start="253:49" pos:end="253:50">&gt;&gt;</operator> <literal type="number" pos:start="253:52" pos:end="253:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="257:54"><expr pos:start="255:13" pos:end="257:53"><name pos:start="255:13" pos:end="255:16">ssdV</name> <operator pos:start="255:18" pos:end="255:18">=</operator> <call pos:start="255:20" pos:end="257:53"><name pos:start="255:20" pos:end="255:25">getSSD</name><argument_list pos:start="255:26" pos:end="257:53">(<argument pos:start="255:27" pos:end="255:32"><expr pos:start="255:27" pos:end="255:32"><name pos:start="255:27" pos:end="255:32"><name pos:start="255:27" pos:end="255:29">ref</name><index pos:start="255:30" pos:end="255:32">[<expr pos:start="255:31" pos:end="255:31"><literal type="number" pos:start="255:31" pos:end="255:31">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:35" pos:end="255:40"><expr pos:start="255:35" pos:end="255:40"><name pos:start="255:35" pos:end="255:40"><name pos:start="255:35" pos:end="255:37">out</name><index pos:start="255:38" pos:end="255:40">[<expr pos:start="255:39" pos:end="255:39"><literal type="number" pos:start="255:39" pos:end="255:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:43" pos:end="255:54"><expr pos:start="255:43" pos:end="255:54"><name pos:start="255:43" pos:end="255:54"><name pos:start="255:43" pos:end="255:51">refStride</name><index pos:start="255:52" pos:end="255:54">[<expr pos:start="255:53" pos:end="255:53"><literal type="number" pos:start="255:53" pos:end="255:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="255:57" pos:end="255:68"><expr pos:start="255:57" pos:end="255:68"><name pos:start="255:57" pos:end="255:68"><name pos:start="255:57" pos:end="255:65">refStride</name><index pos:start="255:66" pos:end="255:68">[<expr pos:start="255:67" pos:end="255:67"><literal type="number" pos:start="255:67" pos:end="255:67">2</literal></expr>]</index></name></expr></argument>,

                          <argument pos:start="257:27" pos:end="257:38"><expr pos:start="257:27" pos:end="257:38"><operator pos:start="257:27" pos:end="257:27">(</operator><name pos:start="257:28" pos:end="257:28">w</name> <operator pos:start="257:30" pos:end="257:30">+</operator> <literal type="number" pos:start="257:32" pos:end="257:32">1</literal><operator pos:start="257:33" pos:end="257:33">)</operator> <operator pos:start="257:35" pos:end="257:36">&gt;&gt;</operator> <literal type="number" pos:start="257:38" pos:end="257:38">1</literal></expr></argument>, <argument pos:start="257:41" pos:end="257:52"><expr pos:start="257:41" pos:end="257:52"><operator pos:start="257:41" pos:end="257:41">(</operator><name pos:start="257:42" pos:end="257:42">h</name> <operator pos:start="257:44" pos:end="257:44">+</operator> <literal type="number" pos:start="257:46" pos:end="257:46">1</literal><operator pos:start="257:47" pos:end="257:47">)</operator> <operator pos:start="257:49" pos:end="257:50">&gt;&gt;</operator> <literal type="number" pos:start="257:52" pos:end="257:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="261:9" pos:end="263:76"><if pos:start="261:9" pos:end="263:76">if <condition pos:start="261:12" pos:end="261:53">(<expr pos:start="261:13" pos:end="261:52"><call pos:start="261:13" pos:end="261:30"><name pos:start="261:13" pos:end="261:19">isALPHA</name><argument_list pos:start="261:20" pos:end="261:30">(<argument pos:start="261:21" pos:end="261:29"><expr pos:start="261:21" pos:end="261:29"><name pos:start="261:21" pos:end="261:29">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="261:32" pos:end="261:33">&amp;&amp;</operator> <call pos:start="261:35" pos:end="261:52"><name pos:start="261:35" pos:end="261:41">isALPHA</name><argument_list pos:start="261:42" pos:end="261:52">(<argument pos:start="261:43" pos:end="261:51"><expr pos:start="261:43" pos:end="261:51"><name pos:start="261:43" pos:end="261:51">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:76"><block_content pos:start="263:13" pos:end="263:76">

            <expr_stmt pos:start="263:13" pos:end="263:76"><expr pos:start="263:13" pos:end="263:75"><name pos:start="263:13" pos:end="263:16">ssdA</name> <operator pos:start="263:18" pos:end="263:18">=</operator> <call pos:start="263:20" pos:end="263:75"><name pos:start="263:20" pos:end="263:25">getSSD</name><argument_list pos:start="263:26" pos:end="263:75">(<argument pos:start="263:27" pos:end="263:32"><expr pos:start="263:27" pos:end="263:32"><name pos:start="263:27" pos:end="263:32"><name pos:start="263:27" pos:end="263:29">ref</name><index pos:start="263:30" pos:end="263:32">[<expr pos:start="263:31" pos:end="263:31"><literal type="number" pos:start="263:31" pos:end="263:31">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:35" pos:end="263:40"><expr pos:start="263:35" pos:end="263:40"><name pos:start="263:35" pos:end="263:40"><name pos:start="263:35" pos:end="263:37">out</name><index pos:start="263:38" pos:end="263:40">[<expr pos:start="263:39" pos:end="263:39"><literal type="number" pos:start="263:39" pos:end="263:39">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:43" pos:end="263:54"><expr pos:start="263:43" pos:end="263:54"><name pos:start="263:43" pos:end="263:54"><name pos:start="263:43" pos:end="263:51">refStride</name><index pos:start="263:52" pos:end="263:54">[<expr pos:start="263:53" pos:end="263:53"><literal type="number" pos:start="263:53" pos:end="263:53">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:57" pos:end="263:68"><expr pos:start="263:57" pos:end="263:68"><name pos:start="263:57" pos:end="263:68"><name pos:start="263:57" pos:end="263:65">refStride</name><index pos:start="263:66" pos:end="263:68">[<expr pos:start="263:67" pos:end="263:67"><literal type="number" pos:start="263:67" pos:end="263:67">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:71" pos:end="263:71"><expr pos:start="263:71" pos:end="263:71"><name pos:start="263:71" pos:end="263:71">w</name></expr></argument>, <argument pos:start="263:74" pos:end="263:74"><expr pos:start="263:74" pos:end="263:74"><name pos:start="263:74" pos:end="263:74">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:22"><expr pos:start="267:9" pos:end="267:21"><name pos:start="267:9" pos:end="267:12">ssdY</name> <operator pos:start="267:14" pos:end="267:15">/=</operator> <name pos:start="267:17" pos:end="267:17">w</name> <operator pos:start="267:19" pos:end="267:19">*</operator> <name pos:start="267:21" pos:end="267:21">h</name></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:26"><expr pos:start="269:9" pos:end="269:25"><name pos:start="269:9" pos:end="269:12">ssdU</name> <operator pos:start="269:14" pos:end="269:15">/=</operator> <name pos:start="269:17" pos:end="269:17">w</name> <operator pos:start="269:19" pos:end="269:19">*</operator> <name pos:start="269:21" pos:end="269:21">h</name> <operator pos:start="269:23" pos:end="269:23">/</operator> <literal type="number" pos:start="269:25" pos:end="269:25">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:26"><expr pos:start="271:9" pos:end="271:25"><name pos:start="271:9" pos:end="271:12">ssdV</name> <operator pos:start="271:14" pos:end="271:15">/=</operator> <name pos:start="271:17" pos:end="271:17">w</name> <operator pos:start="271:19" pos:end="271:19">*</operator> <name pos:start="271:21" pos:end="271:21">h</name> <operator pos:start="271:23" pos:end="271:23">/</operator> <literal type="number" pos:start="271:25" pos:end="271:25">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:22"><expr pos:start="273:9" pos:end="273:21"><name pos:start="273:9" pos:end="273:12">ssdA</name> <operator pos:start="273:14" pos:end="273:15">/=</operator> <name pos:start="273:17" pos:end="273:17">w</name> <operator pos:start="273:19" pos:end="273:19">*</operator> <name pos:start="273:21" pos:end="273:21">h</name></expr>;</expr_stmt>



        <expr_stmt pos:start="277:9" pos:end="277:36"><expr pos:start="277:9" pos:end="277:35"><call pos:start="277:9" pos:end="277:35"><name pos:start="277:9" pos:end="277:23">sws_freeContext</name><argument_list pos:start="277:24" pos:end="277:35">(<argument pos:start="277:25" pos:end="277:34"><expr pos:start="277:25" pos:end="277:34"><name pos:start="277:25" pos:end="277:34">outContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="281:9" pos:end="285:32">for <control pos:start="281:13" pos:end="281:31">(<init pos:start="281:14" pos:end="281:19"><expr pos:start="281:14" pos:end="281:18"><name pos:start="281:14" pos:end="281:14">i</name> <operator pos:start="281:16" pos:end="281:16">=</operator> <literal type="number" pos:start="281:18" pos:end="281:18">0</literal></expr>;</init> <condition pos:start="281:21" pos:end="281:26"><expr pos:start="281:21" pos:end="281:25"><name pos:start="281:21" pos:end="281:21">i</name> <operator pos:start="281:23" pos:end="281:23">&lt;</operator> <literal type="number" pos:start="281:25" pos:end="281:25">4</literal></expr>;</condition> <incr pos:start="281:28" pos:end="281:30"><expr pos:start="281:28" pos:end="281:30"><name pos:start="281:28" pos:end="281:28">i</name><operator pos:start="281:29" pos:end="281:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="283:13" pos:end="285:32"><block_content pos:start="283:13" pos:end="285:32">

            <if_stmt pos:start="283:13" pos:end="285:32"><if pos:start="283:13" pos:end="285:32">if <condition pos:start="283:16" pos:end="283:29">(<expr pos:start="283:17" pos:end="283:28"><name pos:start="283:17" pos:end="283:28"><name pos:start="283:17" pos:end="283:25">refStride</name><index pos:start="283:26" pos:end="283:28">[<expr pos:start="283:27" pos:end="283:27"><name pos:start="283:27" pos:end="283:27">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="285:17" pos:end="285:32"><block_content pos:start="285:17" pos:end="285:32">

                <expr_stmt pos:start="285:17" pos:end="285:32"><expr pos:start="285:17" pos:end="285:31"><call pos:start="285:17" pos:end="285:31"><name pos:start="285:17" pos:end="285:23">av_free</name><argument_list pos:start="285:24" pos:end="285:31">(<argument pos:start="285:25" pos:end="285:30"><expr pos:start="285:25" pos:end="285:30"><name pos:start="285:25" pos:end="285:30"><name pos:start="285:25" pos:end="285:27">out</name><index pos:start="285:28" pos:end="285:30">[<expr pos:start="285:29" pos:end="285:29"><name pos:start="285:29" pos:end="285:29">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="291:5" pos:end="293:40"><expr pos:start="291:5" pos:end="293:39"><call pos:start="291:5" pos:end="293:39"><name pos:start="291:5" pos:end="291:10">printf</name><argument_list pos:start="291:11" pos:end="293:39">(<argument pos:start="291:12" pos:end="291:76"><expr pos:start="291:12" pos:end="291:76"><literal type="string" pos:start="291:12" pos:end="291:29">" CRC=%08x SSD=%5"</literal><name pos:start="291:30" pos:end="291:35">PRId64</name> <literal type="string" pos:start="291:37" pos:end="291:41">",%5"</literal><name pos:start="291:42" pos:end="291:47">PRId64</name> <literal type="string" pos:start="291:49" pos:end="291:53">",%5"</literal><name pos:start="291:54" pos:end="291:59">PRId64</name> <literal type="string" pos:start="291:61" pos:end="291:65">",%5"</literal><name pos:start="291:66" pos:end="291:71">PRId64</name> <literal type="string" pos:start="291:73" pos:end="291:76">"\n"</literal></expr></argument>,

           <argument pos:start="293:12" pos:end="293:14"><expr pos:start="293:12" pos:end="293:14"><name pos:start="293:12" pos:end="293:14">crc</name></expr></argument>, <argument pos:start="293:17" pos:end="293:20"><expr pos:start="293:17" pos:end="293:20"><name pos:start="293:17" pos:end="293:20">ssdY</name></expr></argument>, <argument pos:start="293:23" pos:end="293:26"><expr pos:start="293:23" pos:end="293:26"><name pos:start="293:23" pos:end="293:26">ssdU</name></expr></argument>, <argument pos:start="293:29" pos:end="293:32"><expr pos:start="293:29" pos:end="293:32"><name pos:start="293:29" pos:end="293:32">ssdV</name></expr></argument>, <argument pos:start="293:35" pos:end="293:38"><expr pos:start="293:35" pos:end="293:38"><name pos:start="293:35" pos:end="293:38">ssdA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="297:1" pos:end="297:4"><name pos:start="297:1" pos:end="297:3">end</name>:</label>

    <expr_stmt pos:start="299:5" pos:end="299:32"><expr pos:start="299:5" pos:end="299:31"><call pos:start="299:5" pos:end="299:31"><name pos:start="299:5" pos:end="299:19">sws_freeContext</name><argument_list pos:start="299:20" pos:end="299:31">(<argument pos:start="299:21" pos:end="299:30"><expr pos:start="299:21" pos:end="299:30"><name pos:start="299:21" pos:end="299:30">dstContext</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="303:5" pos:end="307:28">for <control pos:start="303:9" pos:end="303:27">(<init pos:start="303:10" pos:end="303:15"><expr pos:start="303:10" pos:end="303:14"><name pos:start="303:10" pos:end="303:10">i</name> <operator pos:start="303:12" pos:end="303:12">=</operator> <literal type="number" pos:start="303:14" pos:end="303:14">0</literal></expr>;</init> <condition pos:start="303:17" pos:end="303:22"><expr pos:start="303:17" pos:end="303:21"><name pos:start="303:17" pos:end="303:17">i</name> <operator pos:start="303:19" pos:end="303:19">&lt;</operator> <literal type="number" pos:start="303:21" pos:end="303:21">4</literal></expr>;</condition> <incr pos:start="303:24" pos:end="303:26"><expr pos:start="303:24" pos:end="303:26"><name pos:start="303:24" pos:end="303:24">i</name><operator pos:start="303:25" pos:end="303:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="305:9" pos:end="307:28"><block_content pos:start="305:9" pos:end="307:28">

        <if_stmt pos:start="305:9" pos:end="307:28"><if pos:start="305:9" pos:end="307:28">if <condition pos:start="305:12" pos:end="305:25">(<expr pos:start="305:13" pos:end="305:24"><name pos:start="305:13" pos:end="305:24"><name pos:start="305:13" pos:end="305:21">dstStride</name><index pos:start="305:22" pos:end="305:24">[<expr pos:start="305:23" pos:end="305:23"><name pos:start="305:23" pos:end="305:23">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:28"><block_content pos:start="307:13" pos:end="307:28">

            <expr_stmt pos:start="307:13" pos:end="307:28"><expr pos:start="307:13" pos:end="307:27"><call pos:start="307:13" pos:end="307:27"><name pos:start="307:13" pos:end="307:19">av_free</name><argument_list pos:start="307:20" pos:end="307:27">(<argument pos:start="307:21" pos:end="307:26"><expr pos:start="307:21" pos:end="307:26"><name pos:start="307:21" pos:end="307:26"><name pos:start="307:21" pos:end="307:23">dst</name><index pos:start="307:24" pos:end="307:26">[<expr pos:start="307:25" pos:end="307:25"><name pos:start="307:25" pos:end="307:25">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <return pos:start="311:5" pos:end="311:15">return <expr pos:start="311:12" pos:end="311:14"><name pos:start="311:12" pos:end="311:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
