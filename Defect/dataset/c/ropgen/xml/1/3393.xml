<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3393.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_get_wav_header</name><parameter_list pos:start="1:23" pos:end="1:72">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:34">AVIOContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">pb</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:61"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">codec</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:5">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">id</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:6">id</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <call pos:start="9:10" pos:end="9:22"><name pos:start="9:10" pos:end="9:18">avio_rl16</name><argument_list pos:start="9:19" pos:end="9:22">(<argument pos:start="9:20" pos:end="9:21"><expr pos:start="9:20" pos:end="9:21"><name pos:start="9:20" pos:end="9:21">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:9">codec</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:21">codec_type</name></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <name pos:start="11:25" pos:end="11:42">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:9">codec</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">codec_tag</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <name pos:start="13:24" pos:end="13:25">id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:9">codec</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">channels</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <call pos:start="15:23" pos:end="15:35"><name pos:start="15:23" pos:end="15:31">avio_rl16</name><argument_list pos:start="15:32" pos:end="15:35">(<argument pos:start="15:33" pos:end="15:34"><expr pos:start="15:33" pos:end="15:34"><name pos:start="15:33" pos:end="15:34">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:9">codec</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">sample_rate</name></name> <operator pos:start="17:24" pos:end="17:24">=</operator> <call pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:34">avio_rl32</name><argument_list pos:start="17:35" pos:end="17:38">(<argument pos:start="17:36" pos:end="17:37"><expr pos:start="17:36" pos:end="17:37"><name pos:start="17:36" pos:end="17:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:40"><expr pos:start="19:5" pos:end="19:39"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:9">codec</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">bit_rate</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:35"><name pos:start="19:23" pos:end="19:31">avio_rl32</name><argument_list pos:start="19:32" pos:end="19:35">(<argument pos:start="19:33" pos:end="19:34"><expr pos:start="19:33" pos:end="19:34"><name pos:start="19:33" pos:end="19:34">pb</name></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:37">*</operator> <literal type="number" pos:start="19:39" pos:end="19:39">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:9">codec</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:22">block_align</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:38"><name pos:start="21:26" pos:end="21:34">avio_rl16</name><argument_list pos:start="21:35" pos:end="21:38">(<argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><name pos:start="21:36" pos:end="21:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:53"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">size</name> <operator pos:start="23:14" pos:end="23:15">==</operator> <literal type="number" pos:start="23:17" pos:end="23:18">14</literal></expr>)</condition> <block pos:start="23:21" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:41">  <comment type="block" pos:start="23:24" pos:end="23:72">/* We're dealing with plain vanilla WAVEFORMAT */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:41"><expr pos:start="25:9" pos:end="25:40"><name pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:13">codec</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:36">bits_per_coded_sample</name></name> <operator pos:start="25:38" pos:end="25:38">=</operator> <literal type="number" pos:start="25:40" pos:end="25:40">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="27:6" pos:end="29:53">else<block type="pseudo" pos:start="29:9" pos:end="29:53"><block_content pos:start="29:9" pos:end="29:53">

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:36"><name pos:start="29:9" pos:end="29:13">codec</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:36">bits_per_coded_sample</name></name> <operator pos:start="29:38" pos:end="29:38">=</operator> <call pos:start="29:40" pos:end="29:52"><name pos:start="29:40" pos:end="29:48">avio_rl16</name><argument_list pos:start="29:49" pos:end="29:52">(<argument pos:start="29:50" pos:end="29:51"><expr pos:start="29:50" pos:end="29:51"><name pos:start="29:50" pos:end="29:51">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="31:5" pos:end="75:5"><if pos:start="31:5" pos:end="75:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:12">size</name> <operator pos:start="31:14" pos:end="31:15">&gt;=</operator> <literal type="number" pos:start="31:17" pos:end="31:18">18</literal></expr>)</condition> <block pos:start="31:21" pos:end="75:5">{<block_content pos:start="33:9" pos:end="73:32">  <comment type="block" pos:start="31:24" pos:end="31:70">/* We're obviously dealing with WAVEFORMATEX */</comment>

        <decl_stmt pos:start="33:9" pos:end="33:35"><decl pos:start="33:9" pos:end="33:34"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:18">cbSize</name> <init pos:start="33:20" pos:end="33:34">= <expr pos:start="33:22" pos:end="33:34"><call pos:start="33:22" pos:end="33:34"><name pos:start="33:22" pos:end="33:30">avio_rl16</name><argument_list pos:start="33:31" pos:end="33:34">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="33:37" pos:end="33:48">/* cbSize */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:19"><expr pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:12">size</name> <operator pos:start="35:14" pos:end="35:15">-=</operator> <literal type="number" pos:start="35:17" pos:end="35:18">18</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:14">cbSize</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <call pos:start="37:18" pos:end="37:36"><name pos:start="37:18" pos:end="37:22">FFMIN</name><argument_list pos:start="37:23" pos:end="37:36">(<argument pos:start="37:24" pos:end="37:27"><expr pos:start="37:24" pos:end="37:27"><name pos:start="37:24" pos:end="37:27">size</name></expr></argument>, <argument pos:start="37:30" pos:end="37:35"><expr pos:start="37:30" pos:end="37:35"><name pos:start="37:30" pos:end="37:35">cbSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="53:9"><if pos:start="39:9" pos:end="53:9">if <condition pos:start="39:12" pos:end="39:41">(<expr pos:start="39:13" pos:end="39:40"><name pos:start="39:13" pos:end="39:18">cbSize</name> <operator pos:start="39:20" pos:end="39:21">&gt;=</operator> <literal type="number" pos:start="39:23" pos:end="39:24">22</literal> <operator pos:start="39:26" pos:end="39:27">&amp;&amp;</operator> <name pos:start="39:29" pos:end="39:30">id</name> <operator pos:start="39:32" pos:end="39:33">==</operator> <literal type="number" pos:start="39:35" pos:end="39:40">0xfffe</literal></expr>)</condition> <block pos:start="39:43" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:23"> <comment type="block" pos:start="39:45" pos:end="39:70">/* WAVEFORMATEXTENSIBLE */</comment>

            <expr_stmt pos:start="41:13" pos:end="41:57"><expr pos:start="41:13" pos:end="41:56"><name pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:17">codec</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:40">bits_per_coded_sample</name></name> <operator pos:start="41:42" pos:end="41:42">=</operator> <call pos:start="41:44" pos:end="41:56"><name pos:start="41:44" pos:end="41:52">avio_rl16</name><argument_list pos:start="41:53" pos:end="41:56">(<argument pos:start="41:54" pos:end="41:55"><expr pos:start="41:54" pos:end="41:55"><name pos:start="41:54" pos:end="41:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:50"><expr pos:start="43:13" pos:end="43:49"><name pos:start="43:13" pos:end="43:33"><name pos:start="43:13" pos:end="43:17">codec</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:33">channel_layout</name></name> <operator pos:start="43:35" pos:end="43:35">=</operator> <call pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:45">avio_rl32</name><argument_list pos:start="43:46" pos:end="43:49">(<argument pos:start="43:47" pos:end="43:48"><expr pos:start="43:47" pos:end="43:48"><name pos:start="43:47" pos:end="43:48">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:52" pos:end="43:70">/* dwChannelMask */</comment>

            <expr_stmt pos:start="45:13" pos:end="45:31"><expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:14">id</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:30"><name pos:start="45:18" pos:end="45:26">avio_rl32</name><argument_list pos:start="45:27" pos:end="45:30">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:33" pos:end="45:59">/* 4 first bytes of GUID */</comment>

            <expr_stmt pos:start="47:13" pos:end="47:30"><expr pos:start="47:13" pos:end="47:29"><call pos:start="47:13" pos:end="47:29"><name pos:start="47:13" pos:end="47:21">avio_skip</name><argument_list pos:start="47:22" pos:end="47:29">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">pb</name></expr></argument>, <argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><literal type="number" pos:start="47:27" pos:end="47:28">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="47:32" pos:end="47:53">/* skip end of GUID */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:18">cbSize</name> <operator pos:start="49:20" pos:end="49:21">-=</operator> <literal type="number" pos:start="49:23" pos:end="49:24">22</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:16">size</name> <operator pos:start="51:18" pos:end="51:19">-=</operator> <literal type="number" pos:start="51:21" pos:end="51:22">22</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:39"><expr pos:start="55:9" pos:end="55:38"><name pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:13">codec</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:29">extradata_size</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <name pos:start="55:33" pos:end="55:38">cbSize</name></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:23">(<expr pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:18">cbSize</name> <operator pos:start="57:20" pos:end="57:20">&gt;</operator> <literal type="number" pos:start="57:22" pos:end="57:22">0</literal></expr>)</condition> <block pos:start="57:25" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:27">

            <expr_stmt pos:start="59:13" pos:end="59:96"><expr pos:start="59:13" pos:end="59:95"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:17">codec</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:28">extradata</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:95"><name pos:start="59:32" pos:end="59:41">av_mallocz</name><argument_list pos:start="59:42" pos:end="59:95">(<argument pos:start="59:43" pos:end="59:94"><expr pos:start="59:43" pos:end="59:94"><name pos:start="59:43" pos:end="59:63"><name pos:start="59:43" pos:end="59:47">codec</name><operator pos:start="59:48" pos:end="59:49">-&gt;</operator><name pos:start="59:50" pos:end="59:63">extradata_size</name></name> <operator pos:start="59:65" pos:end="59:65">+</operator> <name pos:start="59:67" pos:end="59:94">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:67"><expr pos:start="61:13" pos:end="61:66"><call pos:start="61:13" pos:end="61:66"><name pos:start="61:13" pos:end="61:21">avio_read</name><argument_list pos:start="61:22" pos:end="61:66">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">pb</name></expr></argument>, <argument pos:start="61:27" pos:end="61:42"><expr pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:31">codec</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:42">extradata</name></name></expr></argument>, <argument pos:start="61:45" pos:end="61:65"><expr pos:start="61:45" pos:end="61:65"><name pos:start="61:45" pos:end="61:65"><name pos:start="61:45" pos:end="61:49">codec</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:65">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:27"><expr pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:16">size</name> <operator pos:start="63:18" pos:end="63:19">-=</operator> <name pos:start="63:21" pos:end="63:26">cbSize</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:72">/* It is possible for the chunk to contain garbage at the end */</comment>

        <if_stmt pos:start="71:9" pos:end="73:32"><if pos:start="71:9" pos:end="73:32">if <condition pos:start="71:12" pos:end="71:21">(<expr pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:16">size</name> <operator pos:start="71:18" pos:end="71:18">&gt;</operator> <literal type="number" pos:start="71:20" pos:end="71:20">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:32"><block_content pos:start="73:13" pos:end="73:32">

            <expr_stmt pos:start="73:13" pos:end="73:32"><expr pos:start="73:13" pos:end="73:31"><call pos:start="73:13" pos:end="73:31"><name pos:start="73:13" pos:end="73:21">avio_skip</name><argument_list pos:start="73:22" pos:end="73:31">(<argument pos:start="73:23" pos:end="73:24"><expr pos:start="73:23" pos:end="73:24"><name pos:start="73:23" pos:end="73:24">pb</name></expr></argument>, <argument pos:start="73:27" pos:end="73:30"><expr pos:start="73:27" pos:end="73:30"><name pos:start="73:27" pos:end="73:30">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:76"><expr pos:start="77:5" pos:end="77:75"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:9">codec</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:19">codec_id</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:75"><name pos:start="77:23" pos:end="77:41">ff_wav_codec_get_id</name><argument_list pos:start="77:42" pos:end="77:75">(<argument pos:start="77:43" pos:end="77:44"><expr pos:start="77:43" pos:end="77:44"><name pos:start="77:43" pos:end="77:44">id</name></expr></argument>, <argument pos:start="77:47" pos:end="77:74"><expr pos:start="77:47" pos:end="77:74"><name pos:start="77:47" pos:end="77:74"><name pos:start="77:47" pos:end="77:51">codec</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:74">bits_per_coded_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if <condition pos:start="79:8" pos:end="79:45">(<expr pos:start="79:9" pos:end="79:44"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:13">codec</name><operator pos:start="79:14" pos:end="79:15">-&gt;</operator><name pos:start="79:16" pos:end="79:23">codec_id</name></name> <operator pos:start="79:25" pos:end="79:26">==</operator> <name pos:start="79:28" pos:end="79:44">CODEC_ID_AAC_LATM</name></expr>)</condition> <block pos:start="79:47" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:31">

        <comment type="block" pos:start="81:9" pos:end="81:87">/* channels and sample_rate values are those prior to applying SBR and/or PS */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:31"><expr pos:start="83:9" pos:end="83:30"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:13">codec</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">channels</name></name>    <operator pos:start="83:28" pos:end="83:28">=</operator> <literal type="number" pos:start="83:30" pos:end="83:30">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:31"><expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:13">codec</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:26">sample_rate</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
