<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9228.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:11">MemTxResult</name></type> <name pos:start="1:13" pos:end="1:29">gicv3_redist_read</name><parameter_list pos:start="1:30" pos:end="2:62">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:50">hwaddr</name></type> <name pos:start="1:52" pos:end="1:57">offset</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:67">uint64_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">data</name></decl></parameter>,
                              <parameter pos:start="2:31" pos:end="2:43"><decl pos:start="2:31" pos:end="2:43"><type pos:start="2:31" pos:end="2:43"><name pos:start="2:31" pos:end="2:38">unsigned</name></type> <name pos:start="2:40" pos:end="2:43">size</name></decl></parameter>, <parameter pos:start="2:46" pos:end="2:61"><decl pos:start="2:46" pos:end="2:61"><type pos:start="2:46" pos:end="2:61"><name pos:start="2:46" pos:end="2:55">MemTxAttrs</name></type> <name pos:start="2:57" pos:end="2:61">attrs</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="4:5" pos:end="42:13">
    <decl_stmt pos:start="4:5" pos:end="4:27"><decl pos:start="4:5" pos:end="4:26"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">GICv3State</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:17">s</name> <init pos:start="4:19" pos:end="4:26">= <expr pos:start="4:21" pos:end="4:26"><name pos:start="4:21" pos:end="4:26">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GICv3CPUState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">cs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:18"><decl pos:start="6:5" pos:end="6:17"><type pos:start="6:5" pos:end="6:15"><name pos:start="6:5" pos:end="6:15">MemTxResult</name></type> <name pos:start="6:17" pos:end="6:17">r</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">cpuidx</name></decl>;</decl_stmt>
    <comment type="block" pos:start="8:5" pos:end="13:7">/* This region covers all the redistributor pages; there are
     * (for GICv3) two 64K pages per CPU. At the moment they are
     * all contiguous (ie in this one region), though we might later
     * want to allow splitting of redistributor pages into several
     * blocks so we can support more CPUs.
     */</comment>
    <expr_stmt pos:start="14:5" pos:end="14:30"><expr pos:start="14:5" pos:end="14:29"><name pos:start="14:5" pos:end="14:10">cpuidx</name> <operator pos:start="14:12" pos:end="14:12">=</operator> <name pos:start="14:14" pos:end="14:19">offset</name> <operator pos:start="14:21" pos:end="14:21">/</operator> <literal type="number" pos:start="14:23" pos:end="14:29">0x20000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:10">offset</name> <operator pos:start="15:12" pos:end="15:13">%=</operator> <literal type="number" pos:start="15:15" pos:end="15:21">0x20000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:32"><expr pos:start="16:5" pos:end="16:31"><call pos:start="16:5" pos:end="16:31"><name pos:start="16:5" pos:end="16:10">assert</name><argument_list pos:start="16:11" pos:end="16:31">(<argument pos:start="16:12" pos:end="16:30"><expr pos:start="16:12" pos:end="16:30"><name pos:start="16:12" pos:end="16:17">cpuidx</name> <operator pos:start="16:19" pos:end="16:19">&lt;</operator> <name pos:start="16:21" pos:end="16:30"><name pos:start="16:21" pos:end="16:21">s</name><operator pos:start="16:22" pos:end="16:23">-&gt;</operator><name pos:start="16:24" pos:end="16:30">num_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:6">cs</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <operator pos:start="17:10" pos:end="17:10">&amp;</operator><name pos:start="17:11" pos:end="17:24"><name pos:start="17:11" pos:end="17:11">s</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">cpu</name><index pos:start="17:17" pos:end="17:24">[<expr pos:start="17:18" pos:end="17:23"><name pos:start="17:18" pos:end="17:23">cpuidx</name></expr>]</index></name></expr>;</expr_stmt>
    <switch pos:start="18:5" pos:end="31:5">switch <condition pos:start="18:12" pos:end="18:17">(<expr pos:start="18:13" pos:end="18:16"><name pos:start="18:13" pos:end="18:16">size</name></expr>)</condition> <block pos:start="18:19" pos:end="31:5">{<block_content pos:start="19:5" pos:end="30:14">
    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case>
        <expr_stmt pos:start="20:9" pos:end="20:48"><expr pos:start="20:9" pos:end="20:47"><name pos:start="20:9" pos:end="20:9">r</name> <operator pos:start="20:11" pos:end="20:11">=</operator> <call pos:start="20:13" pos:end="20:47"><name pos:start="20:13" pos:end="20:22">gicr_readb</name><argument_list pos:start="20:23" pos:end="20:47">(<argument pos:start="20:24" pos:end="20:25"><expr pos:start="20:24" pos:end="20:25"><name pos:start="20:24" pos:end="20:25">cs</name></expr></argument>, <argument pos:start="20:28" pos:end="20:33"><expr pos:start="20:28" pos:end="20:33"><name pos:start="20:28" pos:end="20:33">offset</name></expr></argument>, <argument pos:start="20:36" pos:end="20:39"><expr pos:start="20:36" pos:end="20:39"><name pos:start="20:36" pos:end="20:39">data</name></expr></argument>, <argument pos:start="20:42" pos:end="20:46"><expr pos:start="20:42" pos:end="20:46"><name pos:start="20:42" pos:end="20:46">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="21:9" pos:end="21:14">break;</break>
    <case pos:start="22:5" pos:end="22:11">case <expr pos:start="22:10" pos:end="22:10"><literal type="number" pos:start="22:10" pos:end="22:10">4</literal></expr>:</case>
        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:9">r</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:22">gicr_readl</name><argument_list pos:start="23:23" pos:end="23:47">(<argument pos:start="23:24" pos:end="23:25"><expr pos:start="23:24" pos:end="23:25"><name pos:start="23:24" pos:end="23:25">cs</name></expr></argument>, <argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">offset</name></expr></argument>, <argument pos:start="23:36" pos:end="23:39"><expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">data</name></expr></argument>, <argument pos:start="23:42" pos:end="23:46"><expr pos:start="23:42" pos:end="23:46"><name pos:start="23:42" pos:end="23:46">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="24:9" pos:end="24:14">break;</break>
    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">8</literal></expr>:</case>
        <expr_stmt pos:start="26:9" pos:end="26:49"><expr pos:start="26:9" pos:end="26:48"><name pos:start="26:9" pos:end="26:9">r</name> <operator pos:start="26:11" pos:end="26:11">=</operator> <call pos:start="26:13" pos:end="26:48"><name pos:start="26:13" pos:end="26:23">gicr_readll</name><argument_list pos:start="26:24" pos:end="26:48">(<argument pos:start="26:25" pos:end="26:26"><expr pos:start="26:25" pos:end="26:26"><name pos:start="26:25" pos:end="26:26">cs</name></expr></argument>, <argument pos:start="26:29" pos:end="26:34"><expr pos:start="26:29" pos:end="26:34"><name pos:start="26:29" pos:end="26:34">offset</name></expr></argument>, <argument pos:start="26:37" pos:end="26:40"><expr pos:start="26:37" pos:end="26:40"><name pos:start="26:37" pos:end="26:40">data</name></expr></argument>, <argument pos:start="26:43" pos:end="26:47"><expr pos:start="26:43" pos:end="26:47"><name pos:start="26:43" pos:end="26:47">attrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="27:9" pos:end="27:14">break;</break>
    <default pos:start="28:5" pos:end="28:12">default:</default>
        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:23">MEMTX_ERROR</name></expr>;</expr_stmt>
        <break pos:start="30:9" pos:end="30:14">break;</break>
    </block_content>}</block></switch>
    <if_stmt pos:start="32:5" pos:end="41:5"><if pos:start="32:5" pos:end="38:5">if <condition pos:start="32:8" pos:end="32:25">(<expr pos:start="32:9" pos:end="32:24"><name pos:start="32:9" pos:end="32:9">r</name> <operator pos:start="32:11" pos:end="32:12">==</operator> <name pos:start="32:14" pos:end="32:24">MEMTX_ERROR</name></expr>)</condition> <block pos:start="32:27" pos:end="38:5">{<block_content pos:start="33:9" pos:end="37:55">
        <expr_stmt pos:start="33:9" pos:end="35:59"><expr pos:start="33:9" pos:end="35:58"><call pos:start="33:9" pos:end="35:58"><name pos:start="33:9" pos:end="33:21">qemu_log_mask</name><argument_list pos:start="33:22" pos:end="35:58">(<argument pos:start="33:23" pos:end="33:37"><expr pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:37">LOG_GUEST_ERROR</name></expr></argument>,
                      <argument pos:start="34:23" pos:end="35:33"><expr pos:start="34:23" pos:end="35:33"><literal type="string" pos:start="34:23" pos:end="34:57">"%s: invalid guest read at offset "</literal> <name pos:start="34:59" pos:end="34:72">TARGET_FMT_plx</name>
                      <literal type="string" pos:start="35:23" pos:end="35:33">"size %u\n"</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:43"><expr pos:start="35:36" pos:end="35:43"><name pos:start="35:36" pos:end="35:43">__func__</name></expr></argument>, <argument pos:start="35:46" pos:end="35:51"><expr pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:51">offset</name></expr></argument>, <argument pos:start="35:54" pos:end="35:57"><expr pos:start="35:54" pos:end="35:57"><name pos:start="35:54" pos:end="35:57">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="36:9" pos:end="37:55"><expr pos:start="36:9" pos:end="37:54"><call pos:start="36:9" pos:end="37:54"><name pos:start="36:9" pos:end="36:34">trace_gicv3_redist_badread</name><argument_list pos:start="36:35" pos:end="37:54">(<argument pos:start="36:36" pos:end="36:57"><expr pos:start="36:36" pos:end="36:57"><call pos:start="36:36" pos:end="36:57"><name pos:start="36:36" pos:end="36:53">gicv3_redist_affid</name><argument_list pos:start="36:54" pos:end="36:57">(<argument pos:start="36:55" pos:end="36:56"><expr pos:start="36:55" pos:end="36:56"><name pos:start="36:55" pos:end="36:56">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="36:60" pos:end="36:65"><expr pos:start="36:60" pos:end="36:65"><name pos:start="36:60" pos:end="36:65">offset</name></expr></argument>,
                                   <argument pos:start="37:36" pos:end="37:39"><expr pos:start="37:36" pos:end="37:39"><name pos:start="37:36" pos:end="37:39">size</name></expr></argument>, <argument pos:start="37:42" pos:end="37:53"><expr pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:46">attrs</name><operator pos:start="37:47" pos:end="37:47">.</operator><name pos:start="37:48" pos:end="37:53">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="38:7" pos:end="41:5">else <block pos:start="38:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="40:52">
        <expr_stmt pos:start="39:9" pos:end="40:52"><expr pos:start="39:9" pos:end="40:51"><call pos:start="39:9" pos:end="40:51"><name pos:start="39:9" pos:end="39:31">trace_gicv3_redist_read</name><argument_list pos:start="39:32" pos:end="40:51">(<argument pos:start="39:33" pos:end="39:54"><expr pos:start="39:33" pos:end="39:54"><call pos:start="39:33" pos:end="39:54"><name pos:start="39:33" pos:end="39:50">gicv3_redist_affid</name><argument_list pos:start="39:51" pos:end="39:54">(<argument pos:start="39:52" pos:end="39:53"><expr pos:start="39:52" pos:end="39:53"><name pos:start="39:52" pos:end="39:53">cs</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:57" pos:end="39:62"><expr pos:start="39:57" pos:end="39:62"><name pos:start="39:57" pos:end="39:62">offset</name></expr></argument>, <argument pos:start="39:65" pos:end="39:69"><expr pos:start="39:65" pos:end="39:69"><operator pos:start="39:65" pos:end="39:65">*</operator><name pos:start="39:66" pos:end="39:69">data</name></expr></argument>,
                                <argument pos:start="40:33" pos:end="40:36"><expr pos:start="40:33" pos:end="40:36"><name pos:start="40:33" pos:end="40:36">size</name></expr></argument>, <argument pos:start="40:39" pos:end="40:50"><expr pos:start="40:39" pos:end="40:50"><name pos:start="40:39" pos:end="40:50"><name pos:start="40:39" pos:end="40:43">attrs</name><operator pos:start="40:44" pos:end="40:44">.</operator><name pos:start="40:45" pos:end="40:50">secure</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><name pos:start="42:12" pos:end="42:12">r</name></expr>;</return>
</block_content>}</block></function></unit>
