<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15386.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">theora_decode_header</name><parameter_list pos:start="1:32" pos:end="1:72">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:68">GetBitContext</name></type> <name pos:start="1:70" pos:end="1:71">gb</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="41:13">{<block_content pos:start="3:5" pos:end="41:13">
    <decl_stmt pos:start="3:5" pos:end="3:43"><decl pos:start="3:5" pos:end="3:42"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">Vp3DecodeContext</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:23">s</name> <init pos:start="3:25" pos:end="3:42">= <expr pos:start="3:27" pos:end="3:42"><name pos:start="3:27" pos:end="3:42"><name pos:start="3:27" pos:end="3:31">avctx</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:42">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:28"><decl pos:start="4:5" pos:end="4:13"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:13">major</name></decl>, <decl pos:start="4:16" pos:end="4:20"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:16" pos:end="4:20">minor</name></decl>, <decl pos:start="4:23" pos:end="4:27"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:23" pos:end="4:27">micro</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:29"><expr pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:9">major</name> <operator pos:start="5:11" pos:end="5:11">=</operator> <call pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:20">get_bits</name><argument_list pos:start="5:21" pos:end="5:28">(<argument pos:start="5:22" pos:end="5:24"><expr pos:start="5:22" pos:end="5:24"><operator pos:start="5:22" pos:end="5:22">&amp;</operator><name pos:start="5:23" pos:end="5:24">gb</name></expr></argument>, <argument pos:start="5:27" pos:end="5:27"><expr pos:start="5:27" pos:end="5:27"><literal type="number" pos:start="5:27" pos:end="5:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="5:31" pos:end="5:49">/* version major */</comment>
    <expr_stmt pos:start="6:5" pos:end="6:29"><expr pos:start="6:5" pos:end="6:28"><name pos:start="6:5" pos:end="6:9">minor</name> <operator pos:start="6:11" pos:end="6:11">=</operator> <call pos:start="6:13" pos:end="6:28"><name pos:start="6:13" pos:end="6:20">get_bits</name><argument_list pos:start="6:21" pos:end="6:28">(<argument pos:start="6:22" pos:end="6:24"><expr pos:start="6:22" pos:end="6:24"><operator pos:start="6:22" pos:end="6:22">&amp;</operator><name pos:start="6:23" pos:end="6:24">gb</name></expr></argument>, <argument pos:start="6:27" pos:end="6:27"><expr pos:start="6:27" pos:end="6:27"><literal type="number" pos:start="6:27" pos:end="6:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="6:31" pos:end="6:49">/* version minor */</comment>
    <expr_stmt pos:start="7:5" pos:end="7:29"><expr pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:9">micro</name> <operator pos:start="7:11" pos:end="7:11">=</operator> <call pos:start="7:13" pos:end="7:28"><name pos:start="7:13" pos:end="7:20">get_bits</name><argument_list pos:start="7:21" pos:end="7:28">(<argument pos:start="7:22" pos:end="7:24"><expr pos:start="7:22" pos:end="7:24"><operator pos:start="7:22" pos:end="7:22">&amp;</operator><name pos:start="7:23" pos:end="7:24">gb</name></expr></argument>, <argument pos:start="7:27" pos:end="7:27"><expr pos:start="7:27" pos:end="7:27"><literal type="number" pos:start="7:27" pos:end="7:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="7:31" pos:end="7:49">/* version micro */</comment>
    <expr_stmt pos:start="8:5" pos:end="9:29"><expr pos:start="8:5" pos:end="9:28"><call pos:start="8:5" pos:end="9:28"><name pos:start="8:5" pos:end="8:10">av_log</name><argument_list pos:start="8:11" pos:end="9:28">(<argument pos:start="8:12" pos:end="8:16"><expr pos:start="8:12" pos:end="8:16"><name pos:start="8:12" pos:end="8:16">avctx</name></expr></argument>, <argument pos:start="8:19" pos:end="8:29"><expr pos:start="8:19" pos:end="8:29"><name pos:start="8:19" pos:end="8:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="8:32" pos:end="8:68"><expr pos:start="8:32" pos:end="8:68"><literal type="string" pos:start="8:32" pos:end="8:68">"Theora bitstream version %d.%d.%d\n"</literal></expr></argument>,
	<argument pos:start="9:9" pos:end="9:13"><expr pos:start="9:9" pos:end="9:13"><name pos:start="9:9" pos:end="9:13">major</name></expr></argument>, <argument pos:start="9:16" pos:end="9:20"><expr pos:start="9:16" pos:end="9:20"><name pos:start="9:16" pos:end="9:20">minor</name></expr></argument>, <argument pos:start="9:23" pos:end="9:27"><expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27">micro</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:27">/* FIXME: endianess? */</comment>
    <expr_stmt pos:start="11:5" pos:end="11:53"><expr pos:start="11:5" pos:end="11:52"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:5">s</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:13">theora</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:22">major</name> <operator pos:start="11:24" pos:end="11:25">&lt;&lt;</operator> <literal type="number" pos:start="11:27" pos:end="11:28">16</literal><operator pos:start="11:29" pos:end="11:29">)</operator> <operator pos:start="11:31" pos:end="11:31">|</operator> <operator pos:start="11:33" pos:end="11:33">(</operator><name pos:start="11:34" pos:end="11:38">minor</name> <operator pos:start="11:40" pos:end="11:41">&lt;&lt;</operator> <literal type="number" pos:start="11:43" pos:end="11:43">8</literal><operator pos:start="11:44" pos:end="11:44">)</operator> <operator pos:start="11:46" pos:end="11:46">|</operator> <name pos:start="11:48" pos:end="11:52">micro</name></expr>;</expr_stmt>
    <comment type="block" pos:start="12:5" pos:end="12:73">/* 3.3.0 aka alpha3 has the same frame orientation as original vp3 */</comment>
    <comment type="block" pos:start="13:5" pos:end="13:70">/* but previous versions have the image flipped relative to vp3 */</comment>
    <if_stmt pos:start="14:5" pos:end="41:13"><if pos:start="14:5" pos:end="41:13">if <condition pos:start="14:8" pos:end="14:29">(<expr pos:start="14:9" pos:end="14:28"><name pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:9">s</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:17">theora</name></name> <operator pos:start="14:19" pos:end="14:19">&lt;</operator> <literal type="number" pos:start="14:21" pos:end="14:28">0x030300</literal></expr>)</condition>
    <block pos:start="15:5" pos:end="41:13">{<block_content pos:start="16:9" pos:end="41:13">
	<expr_stmt pos:start="16:9" pos:end="16:29"><expr pos:start="16:9" pos:end="16:28"><name pos:start="16:9" pos:end="16:24"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:24">flipped_image</name></name> <operator pos:start="16:26" pos:end="16:26">=</operator> <literal type="number" pos:start="16:28" pos:end="16:28">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:87"><expr pos:start="17:9" pos:end="17:86"><call pos:start="17:9" pos:end="17:86"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="17:86">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="17:37" pos:end="17:85"><expr pos:start="17:37" pos:end="17:85"><literal type="string" pos:start="17:37" pos:end="17:85">"Old (&lt;alpha3) Theora bitstream, flipped image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:38"><expr pos:start="18:5" pos:end="18:37"><name pos:start="18:5" pos:end="18:12"><name pos:start="18:5" pos:end="18:5">s</name><operator pos:start="18:6" pos:end="18:7">-&gt;</operator><name pos:start="18:8" pos:end="18:12">width</name></name> <operator pos:start="18:14" pos:end="18:14">=</operator> <call pos:start="18:16" pos:end="18:32"><name pos:start="18:16" pos:end="18:23">get_bits</name><argument_list pos:start="18:24" pos:end="18:32">(<argument pos:start="18:25" pos:end="18:27"><expr pos:start="18:25" pos:end="18:27"><operator pos:start="18:25" pos:end="18:25">&amp;</operator><name pos:start="18:26" pos:end="18:27">gb</name></expr></argument>, <argument pos:start="18:30" pos:end="18:31"><expr pos:start="18:30" pos:end="18:31"><literal type="number" pos:start="18:30" pos:end="18:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="18:34" pos:end="18:35">&lt;&lt;</operator> <literal type="number" pos:start="18:37" pos:end="18:37">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:13">height</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:24">get_bits</name><argument_list pos:start="19:25" pos:end="19:33">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><operator pos:start="19:26" pos:end="19:26">&amp;</operator><name pos:start="19:27" pos:end="19:28">gb</name></expr></argument>, <argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><literal type="number" pos:start="19:31" pos:end="19:32">16</literal></expr></argument>)</argument_list></call> <operator pos:start="19:35" pos:end="19:36">&lt;&lt;</operator> <literal type="number" pos:start="19:38" pos:end="19:38">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:23"><expr pos:start="20:5" pos:end="20:22"><call pos:start="20:5" pos:end="20:22"><name pos:start="20:5" pos:end="20:13">skip_bits</name><argument_list pos:start="20:14" pos:end="20:22">(<argument pos:start="20:15" pos:end="20:17"><expr pos:start="20:15" pos:end="20:17"><operator pos:start="20:15" pos:end="20:15">&amp;</operator><name pos:start="20:16" pos:end="20:17">gb</name></expr></argument>, <argument pos:start="20:20" pos:end="20:21"><expr pos:start="20:20" pos:end="20:21"><literal type="number" pos:start="20:20" pos:end="20:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="20:25" pos:end="20:41">/* frame width */</comment>
    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><call pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:13">skip_bits</name><argument_list pos:start="21:14" pos:end="21:22">(<argument pos:start="21:15" pos:end="21:17"><expr pos:start="21:15" pos:end="21:17"><operator pos:start="21:15" pos:end="21:15">&amp;</operator><name pos:start="21:16" pos:end="21:17">gb</name></expr></argument>, <argument pos:start="21:20" pos:end="21:21"><expr pos:start="21:20" pos:end="21:21"><literal type="number" pos:start="21:20" pos:end="21:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:25" pos:end="21:42">/* frame height */</comment>
    <expr_stmt pos:start="22:5" pos:end="22:22"><expr pos:start="22:5" pos:end="22:21"><call pos:start="22:5" pos:end="22:21"><name pos:start="22:5" pos:end="22:13">skip_bits</name><argument_list pos:start="22:14" pos:end="22:21">(<argument pos:start="22:15" pos:end="22:17"><expr pos:start="22:15" pos:end="22:17"><operator pos:start="22:15" pos:end="22:15">&amp;</operator><name pos:start="22:16" pos:end="22:17">gb</name></expr></argument>, <argument pos:start="22:20" pos:end="22:20"><expr pos:start="22:20" pos:end="22:20"><literal type="number" pos:start="22:20" pos:end="22:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="22:24" pos:end="22:37">/* offset x */</comment>
    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:13">skip_bits</name><argument_list pos:start="23:14" pos:end="23:21">(<argument pos:start="23:15" pos:end="23:17"><expr pos:start="23:15" pos:end="23:17"><operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:17">gb</name></expr></argument>, <argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:24" pos:end="23:37">/* offset y */</comment>
    <expr_stmt pos:start="24:5" pos:end="24:23"><expr pos:start="24:5" pos:end="24:22"><call pos:start="24:5" pos:end="24:22"><name pos:start="24:5" pos:end="24:13">skip_bits</name><argument_list pos:start="24:14" pos:end="24:22">(<argument pos:start="24:15" pos:end="24:17"><expr pos:start="24:15" pos:end="24:17"><operator pos:start="24:15" pos:end="24:15">&amp;</operator><name pos:start="24:16" pos:end="24:17">gb</name></expr></argument>, <argument pos:start="24:20" pos:end="24:21"><expr pos:start="24:20" pos:end="24:21"><literal type="number" pos:start="24:20" pos:end="24:21">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="24:25" pos:end="24:43">/* fps numerator */</comment>
    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><call pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:13">skip_bits</name><argument_list pos:start="25:14" pos:end="25:22">(<argument pos:start="25:15" pos:end="25:17"><expr pos:start="25:15" pos:end="25:17"><operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:17">gb</name></expr></argument>, <argument pos:start="25:20" pos:end="25:21"><expr pos:start="25:20" pos:end="25:21"><literal type="number" pos:start="25:20" pos:end="25:21">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:25" pos:end="25:45">/* fps denumerator */</comment>
    <expr_stmt pos:start="26:5" pos:end="26:23"><expr pos:start="26:5" pos:end="26:22"><call pos:start="26:5" pos:end="26:22"><name pos:start="26:5" pos:end="26:13">skip_bits</name><argument_list pos:start="26:14" pos:end="26:22">(<argument pos:start="26:15" pos:end="26:17"><expr pos:start="26:15" pos:end="26:17"><operator pos:start="26:15" pos:end="26:15">&amp;</operator><name pos:start="26:16" pos:end="26:17">gb</name></expr></argument>, <argument pos:start="26:20" pos:end="26:21"><expr pos:start="26:20" pos:end="26:21"><literal type="number" pos:start="26:20" pos:end="26:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="26:25" pos:end="26:46">/* aspect numerator */</comment>
    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><call pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:13">skip_bits</name><argument_list pos:start="27:14" pos:end="27:22">(<argument pos:start="27:15" pos:end="27:17"><expr pos:start="27:15" pos:end="27:17"><operator pos:start="27:15" pos:end="27:15">&amp;</operator><name pos:start="27:16" pos:end="27:17">gb</name></expr></argument>, <argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><literal type="number" pos:start="27:20" pos:end="27:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:25" pos:end="27:48">/* aspect denumerator */</comment>
    <if_stmt pos:start="28:5" pos:end="29:26"><if pos:start="28:5" pos:end="29:26">if <condition pos:start="28:8" pos:end="28:29">(<expr pos:start="28:9" pos:end="28:28"><name pos:start="28:9" pos:end="28:17"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:17">theora</name></name> <operator pos:start="28:19" pos:end="28:19">&lt;</operator> <literal type="number" pos:start="28:21" pos:end="28:28">0x030300</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:26"><block_content pos:start="29:9" pos:end="29:26">
	<expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:17">skip_bits</name><argument_list pos:start="29:18" pos:end="29:25">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><operator pos:start="29:19" pos:end="29:19">&amp;</operator><name pos:start="29:20" pos:end="29:21">gb</name></expr></argument>, <argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="29:28" pos:end="29:57">/* keyframe frequency force */</comment>
    <expr_stmt pos:start="30:5" pos:end="30:22"><expr pos:start="30:5" pos:end="30:21"><call pos:start="30:5" pos:end="30:21"><name pos:start="30:5" pos:end="30:13">skip_bits</name><argument_list pos:start="30:14" pos:end="30:21">(<argument pos:start="30:15" pos:end="30:17"><expr pos:start="30:15" pos:end="30:17"><operator pos:start="30:15" pos:end="30:15">&amp;</operator><name pos:start="30:16" pos:end="30:17">gb</name></expr></argument>, <argument pos:start="30:20" pos:end="30:20"><expr pos:start="30:20" pos:end="30:20"><literal type="number" pos:start="30:20" pos:end="30:20">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="30:24" pos:end="30:39">/* colorspace */</comment>
    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:13">skip_bits</name><argument_list pos:start="31:14" pos:end="31:22">(<argument pos:start="31:15" pos:end="31:17"><expr pos:start="31:15" pos:end="31:17"><operator pos:start="31:15" pos:end="31:15">&amp;</operator><name pos:start="31:16" pos:end="31:17">gb</name></expr></argument>, <argument pos:start="31:20" pos:end="31:21"><expr pos:start="31:20" pos:end="31:21"><literal type="number" pos:start="31:20" pos:end="31:21">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:25" pos:end="31:37">/* bitrate */</comment>
    <expr_stmt pos:start="32:5" pos:end="32:22"><expr pos:start="32:5" pos:end="32:21"><call pos:start="32:5" pos:end="32:21"><name pos:start="32:5" pos:end="32:13">skip_bits</name><argument_list pos:start="32:14" pos:end="32:21">(<argument pos:start="32:15" pos:end="32:17"><expr pos:start="32:15" pos:end="32:17"><operator pos:start="32:15" pos:end="32:15">&amp;</operator><name pos:start="32:16" pos:end="32:17">gb</name></expr></argument>, <argument pos:start="32:20" pos:end="32:20"><expr pos:start="32:20" pos:end="32:20"><literal type="number" pos:start="32:20" pos:end="32:20">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="32:24" pos:end="32:50">/* last(?) quality index */</comment>
    <if_stmt pos:start="33:5" pos:end="41:13"><if pos:start="33:5" pos:end="41:13">if <condition pos:start="33:8" pos:end="33:30">(<expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">theora</name></name> <operator pos:start="33:19" pos:end="33:20">&gt;=</operator> <literal type="number" pos:start="33:22" pos:end="33:29">0x030300</literal></expr>)</condition>
    <block pos:start="34:5" pos:end="41:13">{<block_content pos:start="35:9" pos:end="41:13">
	<expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><call pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:17">skip_bits</name><argument_list pos:start="35:18" pos:end="35:25">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><operator pos:start="35:19" pos:end="35:19">&amp;</operator><name pos:start="35:20" pos:end="35:21">gb</name></expr></argument>, <argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><literal type="number" pos:start="35:24" pos:end="35:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:28" pos:end="35:57">/* keyframe frequency force */</comment>
	<expr_stmt pos:start="36:9" pos:end="36:26"><expr pos:start="36:9" pos:end="36:25"><call pos:start="36:9" pos:end="36:25"><name pos:start="36:9" pos:end="36:17">skip_bits</name><argument_list pos:start="36:18" pos:end="36:25">(<argument pos:start="36:19" pos:end="36:21"><expr pos:start="36:19" pos:end="36:21"><operator pos:start="36:19" pos:end="36:19">&amp;</operator><name pos:start="36:20" pos:end="36:21">gb</name></expr></argument>, <argument pos:start="36:24" pos:end="36:24"><expr pos:start="36:24" pos:end="36:24"><literal type="number" pos:start="36:24" pos:end="36:24">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="36:28" pos:end="36:43">/* spare bits */</comment>
<comment type="line" pos:start="37:1" pos:end="37:26">//    align_get_bits(&amp;gb);</comment>
    <expr_stmt pos:start="38:5" pos:end="38:28"><expr pos:start="38:5" pos:end="38:27"><name pos:start="38:5" pos:end="38:16"><name pos:start="38:5" pos:end="38:9">avctx</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:16">width</name></name> <operator pos:start="38:18" pos:end="38:18">=</operator> <name pos:start="38:20" pos:end="38:27"><name pos:start="38:20" pos:end="38:20">s</name><operator pos:start="38:21" pos:end="38:22">-&gt;</operator><name pos:start="38:23" pos:end="38:27">width</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:9">avctx</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">height</name></name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:29">height</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:27"><expr pos:start="40:5" pos:end="40:26"><call pos:start="40:5" pos:end="40:26"><name pos:start="40:5" pos:end="40:19">vp3_decode_init</name><argument_list pos:start="40:20" pos:end="40:26">(<argument pos:start="40:21" pos:end="40:25"><expr pos:start="40:21" pos:end="40:25"><name pos:start="40:21" pos:end="40:25">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
