<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9609.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">loader_exec</name><parameter_list pos:start="1:16" pos:end="3:68">(<parameter pos:start="1:17" pos:end="1:37"><decl pos:start="1:17" pos:end="1:37"><type pos:start="1:17" pos:end="1:37"><specifier pos:start="1:17" pos:end="1:21">const</specifier> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type> <name pos:start="1:30" pos:end="1:37">filename</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">char</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier><modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:51">argv</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier><modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:65">envp</name></decl></parameter>,

             <parameter pos:start="3:14" pos:end="3:41"><decl pos:start="3:14" pos:end="3:41"><type pos:start="3:14" pos:end="3:41"><name pos:start="3:14" pos:end="3:34"><name pos:start="3:14" pos:end="3:19">struct</name> <name pos:start="3:21" pos:end="3:34">target_pt_regs</name></name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type> <name pos:start="3:38" pos:end="3:41">regs</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:67"><decl pos:start="3:44" pos:end="3:67"><type pos:start="3:44" pos:end="3:67"><name pos:start="3:44" pos:end="3:60"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:60">image_info</name></name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:67">infop</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:19">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">linux_binprm</name></name></type> <name pos:start="7:25" pos:end="7:28">bprm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">retval</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:65"><expr pos:start="15:5" pos:end="15:64"><name pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">bprm</name><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:10">p</name></name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:29">TARGET_PAGE_SIZE</name><operator pos:start="15:30" pos:end="15:30">*</operator><name pos:start="15:31" pos:end="15:43">MAX_ARG_PAGES</name><operator pos:start="15:44" pos:end="15:44">-</operator>sizeof<operator pos:start="15:51" pos:end="15:51">(</operator><name pos:start="15:52" pos:end="15:59">unsigned</name> <name pos:start="15:61" pos:end="15:63">int</name><operator pos:start="15:64" pos:end="15:64">)</operator></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="19:32">for <control pos:start="17:9" pos:end="17:37">(<init pos:start="17:10" pos:end="17:14"><expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:10">i</name><operator pos:start="17:11" pos:end="17:11">=</operator><literal type="number" pos:start="17:12" pos:end="17:12">0</literal></expr> ;</init> <condition pos:start="17:16" pos:end="17:32"><expr pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:16">i</name><operator pos:start="17:17" pos:end="17:17">&lt;</operator><name pos:start="17:18" pos:end="17:30">MAX_ARG_PAGES</name></expr> ;</condition> <incr pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:34">i</name><operator pos:start="17:35" pos:end="17:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:13" pos:end="19:32"><block_content pos:start="19:13" pos:end="19:32">       <comment type="block" pos:start="17:45" pos:end="17:66">/* clear page-table */</comment>

            <expr_stmt pos:start="19:13" pos:end="19:32"><expr pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:24"><name pos:start="19:13" pos:end="19:16">bprm</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:21">page</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">i</name></expr>]</index></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:31">NULL</name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:10">retval</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:37"><name pos:start="21:14" pos:end="21:17">open</name><argument_list pos:start="21:18" pos:end="21:37">(<argument pos:start="21:19" pos:end="21:26"><expr pos:start="21:19" pos:end="21:26"><name pos:start="21:19" pos:end="21:26">filename</name></expr></argument>, <argument pos:start="21:29" pos:end="21:36"><expr pos:start="21:29" pos:end="21:36"><name pos:start="21:29" pos:end="21:36">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:22"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:14">retval</name> <operator pos:start="23:16" pos:end="23:16">&lt;</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

        <return pos:start="25:9" pos:end="25:22">return <expr pos:start="25:16" pos:end="25:21"><name pos:start="25:16" pos:end="25:21">retval</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:8">bprm</name><operator pos:start="27:9" pos:end="27:9">.</operator><name pos:start="27:10" pos:end="27:11">fd</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:20">retval</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:8">bprm</name><operator pos:start="29:9" pos:end="29:9">.</operator><name pos:start="29:10" pos:end="29:17">filename</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:25">char</name> <operator pos:start="29:27" pos:end="29:27">*</operator><operator pos:start="29:28" pos:end="29:28">)</operator><name pos:start="29:29" pos:end="29:36">filename</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:8">bprm</name><operator pos:start="31:9" pos:end="31:9">.</operator><name pos:start="31:10" pos:end="31:13">argc</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:27"><name pos:start="31:17" pos:end="31:21">count</name><argument_list pos:start="31:22" pos:end="31:27">(<argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:26">argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13"><name pos:start="33:5" pos:end="33:8">bprm</name><operator pos:start="33:9" pos:end="33:9">.</operator><name pos:start="33:10" pos:end="33:13">argv</name></name> <operator pos:start="33:15" pos:end="33:15">=</operator> <name pos:start="33:17" pos:end="33:20">argv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:28"><expr pos:start="35:5" pos:end="35:27"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:8">bprm</name><operator pos:start="35:9" pos:end="35:9">.</operator><name pos:start="35:10" pos:end="35:13">envc</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:21">count</name><argument_list pos:start="35:22" pos:end="35:27">(<argument pos:start="35:23" pos:end="35:26"><expr pos:start="35:23" pos:end="35:26"><name pos:start="35:23" pos:end="35:26">envp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:21"><expr pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:8">bprm</name><operator pos:start="37:9" pos:end="37:9">.</operator><name pos:start="37:10" pos:end="37:13">envp</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:20">envp</name></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:10">retval</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:34"><name pos:start="41:14" pos:end="41:27">prepare_binprm</name><argument_list pos:start="41:28" pos:end="41:34">(<argument pos:start="41:29" pos:end="41:33"><expr pos:start="41:29" pos:end="41:33"><operator pos:start="41:29" pos:end="41:29">&amp;</operator><name pos:start="41:30" pos:end="41:33">bprm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="65:5"><if pos:start="45:5" pos:end="65:5">if<condition pos:start="45:7" pos:end="45:17">(<expr pos:start="45:8" pos:end="45:16"><name pos:start="45:8" pos:end="45:13">retval</name><operator pos:start="45:14" pos:end="45:15">&gt;=</operator><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>)</condition> <block pos:start="45:19" pos:end="65:5">{<block_content pos:start="47:9" pos:end="63:9">

        <if_stmt pos:start="47:9" pos:end="63:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="53:38">(<expr pos:start="47:13" pos:end="53:37"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:16">bprm</name><operator pos:start="47:17" pos:end="47:17">.</operator><name pos:start="47:18" pos:end="47:20">buf</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>]</index></name> <operator pos:start="47:25" pos:end="47:26">==</operator> <literal type="number" pos:start="47:28" pos:end="47:31">0x7f</literal>

                <operator pos:start="49:17" pos:end="49:18">&amp;&amp;</operator> <name pos:start="49:20" pos:end="49:30"><name pos:start="49:20" pos:end="49:23">bprm</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:27">buf</name><index pos:start="49:28" pos:end="49:30">[<expr pos:start="49:29" pos:end="49:29"><literal type="number" pos:start="49:29" pos:end="49:29">1</literal></expr>]</index></name> <operator pos:start="49:32" pos:end="49:33">==</operator> <literal type="char" pos:start="49:35" pos:end="49:37">'E'</literal>

                <operator pos:start="51:17" pos:end="51:18">&amp;&amp;</operator> <name pos:start="51:20" pos:end="51:30"><name pos:start="51:20" pos:end="51:23">bprm</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:27">buf</name><index pos:start="51:28" pos:end="51:30">[<expr pos:start="51:29" pos:end="51:29"><literal type="number" pos:start="51:29" pos:end="51:29">2</literal></expr>]</index></name> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="char" pos:start="51:35" pos:end="51:37">'L'</literal>

                <operator pos:start="53:17" pos:end="53:18">&amp;&amp;</operator> <name pos:start="53:20" pos:end="53:30"><name pos:start="53:20" pos:end="53:23">bprm</name><operator pos:start="53:24" pos:end="53:24">.</operator><name pos:start="53:25" pos:end="53:27">buf</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><literal type="number" pos:start="53:29" pos:end="53:29">3</literal></expr>]</index></name> <operator pos:start="53:32" pos:end="53:33">==</operator> <literal type="char" pos:start="53:35" pos:end="53:37">'F'</literal></expr>)</condition> <block pos:start="53:40" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:55">

            <expr_stmt pos:start="55:13" pos:end="55:55"><expr pos:start="55:13" pos:end="55:54"><name pos:start="55:13" pos:end="55:18">retval</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="55:54"><name pos:start="55:22" pos:end="55:36">load_elf_binary</name><argument_list pos:start="55:37" pos:end="55:54">(<argument pos:start="55:38" pos:end="55:42"><expr pos:start="55:38" pos:end="55:42"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:42">bprm</name></expr></argument>,<argument pos:start="55:44" pos:end="55:47"><expr pos:start="55:44" pos:end="55:47"><name pos:start="55:44" pos:end="55:47">regs</name></expr></argument>,<argument pos:start="55:49" pos:end="55:53"><expr pos:start="55:49" pos:end="55:53"><name pos:start="55:49" pos:end="55:53">infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="63:9">else <block pos:start="57:16" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:22">

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:19">fprintf</name><argument_list pos:start="59:20" pos:end="59:54">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">stderr</name></expr></argument>, <argument pos:start="59:29" pos:end="59:53"><expr pos:start="59:29" pos:end="59:53"><literal type="string" pos:start="59:29" pos:end="59:53">"Unknown binary format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if<condition pos:start="69:7" pos:end="69:17">(<expr pos:start="69:8" pos:end="69:16"><name pos:start="69:8" pos:end="69:13">retval</name><operator pos:start="69:14" pos:end="69:15">&gt;=</operator><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>)</condition> <block pos:start="69:19" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:22">

        <comment type="block" pos:start="71:9" pos:end="71:54">/* success.  Initialize important registers */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><call pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:22">do_init_thread</name><argument_list pos:start="73:23" pos:end="73:35">(<argument pos:start="73:24" pos:end="73:27"><expr pos:start="73:24" pos:end="73:27"><name pos:start="73:24" pos:end="73:27">regs</name></expr></argument>, <argument pos:start="73:30" pos:end="73:34"><expr pos:start="73:30" pos:end="73:34"><name pos:start="73:30" pos:end="73:34">infop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:22">return <expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21">retval</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:75">/* Something went wrong, return the inode and free the argument pages*/</comment>

    <for pos:start="83:5" pos:end="87:5">for <control pos:start="83:9" pos:end="83:37">(<init pos:start="83:10" pos:end="83:14"><expr pos:start="83:10" pos:end="83:12"><name pos:start="83:10" pos:end="83:10">i</name><operator pos:start="83:11" pos:end="83:11">=</operator><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr> ;</init> <condition pos:start="83:16" pos:end="83:32"><expr pos:start="83:16" pos:end="83:30"><name pos:start="83:16" pos:end="83:16">i</name><operator pos:start="83:17" pos:end="83:17">&lt;</operator><name pos:start="83:18" pos:end="83:30">MAX_ARG_PAGES</name></expr> ;</condition> <incr pos:start="83:34" pos:end="83:36"><expr pos:start="83:34" pos:end="83:36"><name pos:start="83:34" pos:end="83:34">i</name><operator pos:start="83:35" pos:end="83:36">++</operator></expr></incr>)</control> <block pos:start="83:39" pos:end="87:5">{<block_content pos:start="85:9" pos:end="85:27">

        <expr_stmt pos:start="85:9" pos:end="85:27"><expr pos:start="85:9" pos:end="85:26"><call pos:start="85:9" pos:end="85:26"><name pos:start="85:9" pos:end="85:12">free</name><argument_list pos:start="85:13" pos:end="85:26">(<argument pos:start="85:14" pos:end="85:25"><expr pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:17">bprm</name><operator pos:start="85:18" pos:end="85:18">.</operator><name pos:start="85:19" pos:end="85:22">page</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="89:5" pos:end="89:19">return<expr pos:start="89:11" pos:end="89:18"><operator pos:start="89:11" pos:end="89:11">(</operator><name pos:start="89:12" pos:end="89:17">retval</name><operator pos:start="89:18" pos:end="89:18">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
