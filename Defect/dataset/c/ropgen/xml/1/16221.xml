<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16221.c" pos:tabs="8"><function pos:start="1:1" pos:end="78:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ff_huff_build_tree</name><parameter_list pos:start="1:23" pos:end="3:68">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:54"><decl pos:start="1:47" pos:end="1:54"><type pos:start="1:47" pos:end="1:54"><name pos:start="1:47" pos:end="1:49">VLC</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">vlc</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">nb_codes</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:34"><decl pos:start="3:24" pos:end="3:34"><type pos:start="3:24" pos:end="3:34"><name pos:start="3:24" pos:end="3:27">Node</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:34">nodes</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:46">huff_cmp_t</name></type> <name pos:start="3:48" pos:end="3:50">cmp</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:67">hnode_first</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="78:1">{<block_content pos:start="7:5" pos:end="76:13">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">cur_node</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">sum</name> <init pos:start="11:17" pos:end="11:19">= <expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="15:5" pos:end="23:5">for<control pos:start="15:8" pos:end="15:33">(<init pos:start="15:9" pos:end="15:14"><expr pos:start="15:9" pos:end="15:13"><name pos:start="15:9" pos:end="15:9">i</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>;</init> <condition pos:start="15:16" pos:end="15:28"><expr pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:16">i</name> <operator pos:start="15:18" pos:end="15:18">&lt;</operator> <name pos:start="15:20" pos:end="15:27">nb_codes</name></expr>;</condition> <incr pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><name pos:start="15:30" pos:end="15:30">i</name><operator pos:start="15:31" pos:end="15:32">++</operator></expr></incr>)</control><block pos:start="15:34" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:30">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:13">nodes</name><index pos:start="17:14" pos:end="17:16">[<expr pos:start="17:15" pos:end="17:15"><name pos:start="17:15" pos:end="17:15">i</name></expr>]</index></name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:20">sym</name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:24">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:13">nodes</name><index pos:start="19:14" pos:end="19:16">[<expr pos:start="19:15" pos:end="19:15"><name pos:start="19:15" pos:end="19:15">i</name></expr>]</index></name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:19">n0</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <operator pos:start="19:23" pos:end="19:23">-</operator><literal type="number" pos:start="19:24" pos:end="19:24">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:11">sum</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:20">nodes</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">i</name></expr>]</index></name><operator pos:start="21:24" pos:end="21:24">.</operator><name pos:start="21:25" pos:end="21:29">count</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if<condition pos:start="27:7" pos:end="27:17">(<expr pos:start="27:8" pos:end="27:16"><name pos:start="27:8" pos:end="27:10">sum</name> <operator pos:start="27:12" pos:end="27:13">&gt;&gt;</operator> <literal type="number" pos:start="27:15" pos:end="27:16">31</literal></expr>)</condition> <block pos:start="27:19" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:104"><expr pos:start="29:9" pos:end="29:103"><call pos:start="29:9" pos:end="29:103"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:103">(<argument pos:start="29:16" pos:end="29:20"><expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">avctx</name></expr></argument>, <argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:37" pos:end="29:102"><expr pos:start="29:37" pos:end="29:102"><literal type="string" pos:start="29:37" pos:end="29:102">"Too high symbol frequencies. Tree construction is not possible\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:46"><expr pos:start="35:5" pos:end="35:45"><call pos:start="35:5" pos:end="35:45"><name pos:start="35:5" pos:end="35:9">qsort</name><argument_list pos:start="35:10" pos:end="35:45">(<argument pos:start="35:11" pos:end="35:15"><expr pos:start="35:11" pos:end="35:15"><name pos:start="35:11" pos:end="35:15">nodes</name></expr></argument>, <argument pos:start="35:18" pos:end="35:25"><expr pos:start="35:18" pos:end="35:25"><name pos:start="35:18" pos:end="35:25">nb_codes</name></expr></argument>, <argument pos:start="35:28" pos:end="35:39"><expr pos:start="35:28" pos:end="35:39"><sizeof pos:start="35:28" pos:end="35:39">sizeof<argument_list pos:start="35:34" pos:end="35:39">(<argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">Node</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><name pos:start="35:42" pos:end="35:44">cmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:12">cur_node</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:23">nb_codes</name></expr>;</expr_stmt>


    <for pos:start="40:5" pos:end="66:5">for<control pos:start="40:8" pos:end="40:40">(<init pos:start="40:9" pos:end="40:14"><expr pos:start="40:9" pos:end="40:13"><name pos:start="40:9" pos:end="40:9">i</name> <operator pos:start="40:11" pos:end="40:11">=</operator> <literal type="number" pos:start="40:13" pos:end="40:13">0</literal></expr>;</init> <condition pos:start="40:16" pos:end="40:32"><expr pos:start="40:16" pos:end="40:31"><name pos:start="40:16" pos:end="40:16">i</name> <operator pos:start="40:18" pos:end="40:18">&lt;</operator> <name pos:start="40:20" pos:end="40:27">nb_codes</name><operator pos:start="40:28" pos:end="40:28">*</operator><literal type="number" pos:start="40:29" pos:end="40:30">2</literal><operator pos:start="40:30" pos:end="40:30">-</operator><literal type="number" pos:start="40:31" pos:end="40:31">1</literal></expr>;</condition> <incr pos:start="40:34" pos:end="40:39"><expr pos:start="40:34" pos:end="40:39"><name pos:start="40:34" pos:end="40:34">i</name> <operator pos:start="40:36" pos:end="40:37">+=</operator> <literal type="number" pos:start="40:39" pos:end="40:39">2</literal></expr></incr>)</control><block pos:start="40:41" pos:end="66:5">{<block_content pos:start="42:9" pos:end="64:19">

        <expr_stmt pos:start="42:9" pos:end="42:36"><expr pos:start="42:9" pos:end="42:35"><name pos:start="42:9" pos:end="42:23"><name pos:start="42:9" pos:end="42:13">nodes</name><index pos:start="42:14" pos:end="42:23">[<expr pos:start="42:15" pos:end="42:22"><name pos:start="42:15" pos:end="42:22">cur_node</name></expr>]</index></name><operator pos:start="42:24" pos:end="42:24">.</operator><name pos:start="42:25" pos:end="42:27">sym</name> <operator pos:start="42:29" pos:end="42:29">=</operator> <name pos:start="42:31" pos:end="42:35">HNODE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="44:9" pos:end="44:66"><expr pos:start="44:9" pos:end="44:65"><name pos:start="44:9" pos:end="44:23"><name pos:start="44:9" pos:end="44:13">nodes</name><index pos:start="44:14" pos:end="44:23">[<expr pos:start="44:15" pos:end="44:22"><name pos:start="44:15" pos:end="44:22">cur_node</name></expr>]</index></name><operator pos:start="44:24" pos:end="44:24">.</operator><name pos:start="44:25" pos:end="44:29">count</name> <operator pos:start="44:31" pos:end="44:31">=</operator> <name pos:start="44:33" pos:end="44:40"><name pos:start="44:33" pos:end="44:37">nodes</name><index pos:start="44:38" pos:end="44:40">[<expr pos:start="44:39" pos:end="44:39"><name pos:start="44:39" pos:end="44:39">i</name></expr>]</index></name><operator pos:start="44:41" pos:end="44:41">.</operator><name pos:start="44:42" pos:end="44:46">count</name> <operator pos:start="44:48" pos:end="44:48">+</operator> <name pos:start="44:50" pos:end="44:59"><name pos:start="44:50" pos:end="44:54">nodes</name><index pos:start="44:55" pos:end="44:59">[<expr pos:start="44:56" pos:end="44:58"><name pos:start="44:56" pos:end="44:56">i</name><operator pos:start="44:57" pos:end="44:57">+</operator><literal type="number" pos:start="44:58" pos:end="44:58">1</literal></expr>]</index></name><operator pos:start="44:60" pos:end="44:60">.</operator><name pos:start="44:61" pos:end="44:65">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="46:9" pos:end="46:31"><expr pos:start="46:9" pos:end="46:30"><name pos:start="46:9" pos:end="46:23"><name pos:start="46:9" pos:end="46:13">nodes</name><index pos:start="46:14" pos:end="46:23">[<expr pos:start="46:15" pos:end="46:22"><name pos:start="46:15" pos:end="46:22">cur_node</name></expr>]</index></name><operator pos:start="46:24" pos:end="46:24">.</operator><name pos:start="46:25" pos:end="46:26">n0</name> <operator pos:start="46:28" pos:end="46:28">=</operator> <name pos:start="46:30" pos:end="46:30">i</name></expr>;</expr_stmt>

        <for pos:start="48:9" pos:end="62:9">for<control pos:start="48:12" pos:end="48:37">(<init pos:start="48:13" pos:end="48:25"><expr pos:start="48:13" pos:end="48:24"><name pos:start="48:13" pos:end="48:13">j</name> <operator pos:start="48:15" pos:end="48:15">=</operator> <name pos:start="48:17" pos:end="48:24">cur_node</name></expr>;</init> <condition pos:start="48:27" pos:end="48:32"><expr pos:start="48:27" pos:end="48:31"><name pos:start="48:27" pos:end="48:27">j</name> <operator pos:start="48:29" pos:end="48:29">&gt;</operator> <literal type="number" pos:start="48:31" pos:end="48:31">0</literal></expr>;</condition> <incr pos:start="48:34" pos:end="48:36"><expr pos:start="48:34" pos:end="48:36"><name pos:start="48:34" pos:end="48:34">j</name><operator pos:start="48:35" pos:end="48:36">--</operator></expr></incr>)</control><block pos:start="48:38" pos:end="62:9">{<block_content pos:start="50:13" pos:end="60:47">

            <if_stmt pos:start="50:13" pos:end="58:22"><if pos:start="50:13" pos:end="58:22">if<condition pos:start="50:15" pos:end="56:66">(<expr pos:start="50:16" pos:end="56:65"><name pos:start="50:16" pos:end="50:23"><name pos:start="50:16" pos:end="50:20">nodes</name><index pos:start="50:21" pos:end="50:23">[<expr pos:start="50:22" pos:end="50:22"><name pos:start="50:22" pos:end="50:22">j</name></expr>]</index></name><operator pos:start="50:24" pos:end="50:24">.</operator><name pos:start="50:25" pos:end="50:29">count</name> <operator pos:start="50:31" pos:end="50:31">&gt;</operator> <name pos:start="50:33" pos:end="50:42"><name pos:start="50:33" pos:end="50:37">nodes</name><index pos:start="50:38" pos:end="50:42">[<expr pos:start="50:39" pos:end="50:41"><name pos:start="50:39" pos:end="50:39">j</name><operator pos:start="50:40" pos:end="50:40">-</operator><literal type="number" pos:start="50:41" pos:end="50:41">1</literal></expr>]</index></name><operator pos:start="50:43" pos:end="50:43">.</operator><name pos:start="50:44" pos:end="50:48">count</name> <operator pos:start="50:50" pos:end="50:51">||</operator>

               <operator pos:start="52:16" pos:end="52:16">(</operator><name pos:start="52:17" pos:end="52:24"><name pos:start="52:17" pos:end="52:21">nodes</name><index pos:start="52:22" pos:end="52:24">[<expr pos:start="52:23" pos:end="52:23"><name pos:start="52:23" pos:end="52:23">j</name></expr>]</index></name><operator pos:start="52:25" pos:end="52:25">.</operator><name pos:start="52:26" pos:end="52:30">count</name> <operator pos:start="52:32" pos:end="52:33">==</operator> <name pos:start="52:35" pos:end="52:44"><name pos:start="52:35" pos:end="52:39">nodes</name><index pos:start="52:40" pos:end="52:44">[<expr pos:start="52:41" pos:end="52:43"><name pos:start="52:41" pos:end="52:41">j</name><operator pos:start="52:42" pos:end="52:42">-</operator><literal type="number" pos:start="52:43" pos:end="52:43">1</literal></expr>]</index></name><operator pos:start="52:45" pos:end="52:45">.</operator><name pos:start="52:46" pos:end="52:50">count</name> <operator pos:start="52:52" pos:end="52:53">&amp;&amp;</operator>

                <operator pos:start="54:17" pos:end="54:17">(</operator><operator pos:start="54:18" pos:end="54:18">!</operator><name pos:start="54:19" pos:end="54:29">hnode_first</name> <operator pos:start="54:31" pos:end="54:32">||</operator> <name pos:start="54:34" pos:end="54:41"><name pos:start="54:34" pos:end="54:38">nodes</name><index pos:start="54:39" pos:end="54:41">[<expr pos:start="54:40" pos:end="54:40"><name pos:start="54:40" pos:end="54:40">j</name></expr>]</index></name><operator pos:start="54:42" pos:end="54:42">.</operator><name pos:start="54:43" pos:end="54:44">n0</name><operator pos:start="54:45" pos:end="54:46">==</operator><name pos:start="54:47" pos:end="54:47">j</name><operator pos:start="54:48" pos:end="54:48">-</operator><literal type="number" pos:start="54:49" pos:end="54:49">1</literal> <operator pos:start="54:51" pos:end="54:52">||</operator> <name pos:start="54:54" pos:end="54:61"><name pos:start="54:54" pos:end="54:58">nodes</name><index pos:start="54:59" pos:end="54:61">[<expr pos:start="54:60" pos:end="54:60"><name pos:start="54:60" pos:end="54:60">j</name></expr>]</index></name><operator pos:start="54:62" pos:end="54:62">.</operator><name pos:start="54:63" pos:end="54:64">n0</name><operator pos:start="54:65" pos:end="54:66">==</operator><name pos:start="54:67" pos:end="54:67">j</name><operator pos:start="54:68" pos:end="54:68">-</operator><literal type="number" pos:start="54:69" pos:end="54:69">2</literal> <operator pos:start="54:71" pos:end="54:72">||</operator>

                 <operator pos:start="56:18" pos:end="56:18">(</operator><name pos:start="56:19" pos:end="56:26"><name pos:start="56:19" pos:end="56:23">nodes</name><index pos:start="56:24" pos:end="56:26">[<expr pos:start="56:25" pos:end="56:25"><name pos:start="56:25" pos:end="56:25">j</name></expr>]</index></name><operator pos:start="56:27" pos:end="56:27">.</operator><name pos:start="56:28" pos:end="56:30">sym</name><operator pos:start="56:31" pos:end="56:32">!=</operator><name pos:start="56:33" pos:end="56:37">HNODE</name> <operator pos:start="56:39" pos:end="56:40">&amp;&amp;</operator> <name pos:start="56:42" pos:end="56:51"><name pos:start="56:42" pos:end="56:46">nodes</name><index pos:start="56:47" pos:end="56:51">[<expr pos:start="56:48" pos:end="56:50"><name pos:start="56:48" pos:end="56:48">j</name><operator pos:start="56:49" pos:end="56:49">-</operator><literal type="number" pos:start="56:50" pos:end="56:50">1</literal></expr>]</index></name><operator pos:start="56:52" pos:end="56:52">.</operator><name pos:start="56:53" pos:end="56:55">sym</name><operator pos:start="56:56" pos:end="56:57">!=</operator><name pos:start="56:58" pos:end="56:62">HNODE</name><operator pos:start="56:63" pos:end="56:63">)</operator><operator pos:start="56:64" pos:end="56:64">)</operator><operator pos:start="56:65" pos:end="56:65">)</operator></expr>)</condition><block type="pseudo" pos:start="58:17" pos:end="58:22"><block_content pos:start="58:17" pos:end="58:22">

                <break pos:start="58:17" pos:end="58:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="60:13" pos:end="60:47"><expr pos:start="60:13" pos:end="60:46"><call pos:start="60:13" pos:end="60:46"><name pos:start="60:13" pos:end="60:18">FFSWAP</name><argument_list pos:start="60:19" pos:end="60:46">(<argument pos:start="60:20" pos:end="60:23"><expr pos:start="60:20" pos:end="60:23"><name pos:start="60:20" pos:end="60:23">Node</name></expr></argument>, <argument pos:start="60:26" pos:end="60:33"><expr pos:start="60:26" pos:end="60:33"><name pos:start="60:26" pos:end="60:33"><name pos:start="60:26" pos:end="60:30">nodes</name><index pos:start="60:31" pos:end="60:33">[<expr pos:start="60:32" pos:end="60:32"><name pos:start="60:32" pos:end="60:32">j</name></expr>]</index></name></expr></argument>, <argument pos:start="60:36" pos:end="60:45"><expr pos:start="60:36" pos:end="60:45"><name pos:start="60:36" pos:end="60:45"><name pos:start="60:36" pos:end="60:40">nodes</name><index pos:start="60:41" pos:end="60:45">[<expr pos:start="60:42" pos:end="60:44"><name pos:start="60:42" pos:end="60:42">j</name><operator pos:start="60:43" pos:end="60:43">-</operator><literal type="number" pos:start="60:44" pos:end="60:44">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="64:9" pos:end="64:19"><expr pos:start="64:9" pos:end="64:18"><name pos:start="64:9" pos:end="64:16">cur_node</name><operator pos:start="64:17" pos:end="64:18">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="68:5" pos:end="74:5"><if pos:start="68:5" pos:end="74:5">if<condition pos:start="68:7" pos:end="68:53">(<expr pos:start="68:8" pos:end="68:52"><call pos:start="68:8" pos:end="68:48"><name pos:start="68:8" pos:end="68:22">build_huff_tree</name><argument_list pos:start="68:23" pos:end="68:48">(<argument pos:start="68:24" pos:end="68:26"><expr pos:start="68:24" pos:end="68:26"><name pos:start="68:24" pos:end="68:26">vlc</name></expr></argument>, <argument pos:start="68:29" pos:end="68:33"><expr pos:start="68:29" pos:end="68:33"><name pos:start="68:29" pos:end="68:33">nodes</name></expr></argument>, <argument pos:start="68:36" pos:end="68:47"><expr pos:start="68:36" pos:end="68:47"><name pos:start="68:36" pos:end="68:43">nb_codes</name><operator pos:start="68:44" pos:end="68:44">*</operator><literal type="number" pos:start="68:45" pos:end="68:46">2</literal><operator pos:start="68:46" pos:end="68:46">-</operator><literal type="number" pos:start="68:47" pos:end="68:47">2</literal></expr></argument>)</argument_list></call> <operator pos:start="68:50" pos:end="68:50">&lt;</operator> <literal type="number" pos:start="68:52" pos:end="68:52">0</literal></expr>)</condition><block pos:start="68:54" pos:end="74:5">{<block_content pos:start="70:9" pos:end="72:18">

        <expr_stmt pos:start="70:9" pos:end="70:61"><expr pos:start="70:9" pos:end="70:60"><call pos:start="70:9" pos:end="70:60"><name pos:start="70:9" pos:end="70:14">av_log</name><argument_list pos:start="70:15" pos:end="70:60">(<argument pos:start="70:16" pos:end="70:20"><expr pos:start="70:16" pos:end="70:20"><name pos:start="70:16" pos:end="70:20">avctx</name></expr></argument>, <argument pos:start="70:23" pos:end="70:34"><expr pos:start="70:23" pos:end="70:34"><name pos:start="70:23" pos:end="70:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="70:37" pos:end="70:59"><expr pos:start="70:37" pos:end="70:59"><literal type="string" pos:start="70:37" pos:end="70:59">"Error building tree\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="72:9" pos:end="72:18">return <expr pos:start="72:16" pos:end="72:17"><operator pos:start="72:16" pos:end="72:16">-</operator><literal type="number" pos:start="72:17" pos:end="72:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="76:5" pos:end="76:13">return <expr pos:start="76:12" pos:end="76:12"><literal type="number" pos:start="76:12" pos:end="76:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
