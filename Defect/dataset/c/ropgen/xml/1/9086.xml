<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9086.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">helper_mtc0_status</name><parameter_list pos:start="1:24" pos:end="1:61">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:36">CPUMIPSState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">target_ulong</name></type> <name pos:start="1:57" pos:end="1:60">arg1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">MIPSCPU</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">cpu</name> <init pos:start="5:18" pos:end="5:40">= <expr pos:start="5:20" pos:end="5:40"><call pos:start="5:20" pos:end="5:40"><name pos:start="5:20" pos:end="5:35">mips_env_get_cpu</name><argument_list pos:start="5:36" pos:end="5:40">(<argument pos:start="5:37" pos:end="5:39"><expr pos:start="5:37" pos:end="5:39"><name pos:start="5:37" pos:end="5:39">env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:19" pos:end="7:21">old</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">mask</name> <init pos:start="9:19" pos:end="9:46">= <expr pos:start="9:21" pos:end="9:46"><name pos:start="9:21" pos:end="9:46"><name pos:start="9:21" pos:end="9:23">env</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:46">CP0_Status_rw_bitmask</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:11">env</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:23">insn_flags</name></name> <operator pos:start="13:25" pos:end="13:25">&amp;</operator> <name pos:start="13:27" pos:end="13:38">ISA_MIPS32R6</name></expr>)</condition> <block pos:start="13:41" pos:end="23:5">{<block_content pos:start="15:9" pos:end="21:37">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:60">(<expr pos:start="15:13" pos:end="15:59"><call pos:start="15:13" pos:end="15:52"><name pos:start="15:13" pos:end="15:21">extract32</name><argument_list pos:start="15:22" pos:end="15:52">(<argument pos:start="15:23" pos:end="15:37"><expr pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:25">env</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:37">CP0_Status</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:48"><expr pos:start="15:40" pos:end="15:48"><name pos:start="15:40" pos:end="15:48">CP0St_KSU</name></expr></argument>, <argument pos:start="15:51" pos:end="15:51"><expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">2</literal></expr></argument>)</argument_list></call> <operator pos:start="15:54" pos:end="15:55">==</operator> <literal type="number" pos:start="15:57" pos:end="15:59">0x3</literal></expr>)</condition> <block pos:start="15:62" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:38">

            <expr_stmt pos:start="17:13" pos:end="17:38"><expr pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:16">mask</name> <operator pos:start="17:18" pos:end="17:19">&amp;=</operator> <operator pos:start="17:21" pos:end="17:21">~</operator><operator pos:start="17:22" pos:end="17:22">(</operator><literal type="number" pos:start="17:23" pos:end="17:23">3</literal> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <name pos:start="17:28" pos:end="17:36">CP0St_KSU</name><operator pos:start="17:37" pos:end="17:37">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:12">mask</name> <operator pos:start="21:14" pos:end="21:15">&amp;=</operator> <operator pos:start="21:17" pos:end="21:17">~</operator><operator pos:start="21:18" pos:end="21:18">(</operator><literal type="number" pos:start="21:19" pos:end="21:28">0x00180000</literal> <operator pos:start="21:30" pos:end="21:30">&amp;</operator> <name pos:start="21:32" pos:end="21:35">arg1</name><operator pos:start="21:36" pos:end="21:36">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:7">val</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:14">arg1</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <name pos:start="27:18" pos:end="27:21">mask</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:7">old</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:25"><name pos:start="29:11" pos:end="29:13">env</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">CP0_Status</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:7">env</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:19">CP0_Status</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:26">env</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:38">CP0_Status</name></name> <operator pos:start="31:40" pos:end="31:40">&amp;</operator> <operator pos:start="31:42" pos:end="31:42">~</operator><name pos:start="31:43" pos:end="31:46">mask</name><operator pos:start="31:47" pos:end="31:47">)</operator> <operator pos:start="31:49" pos:end="31:49">|</operator> <name pos:start="31:51" pos:end="31:53">val</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:43">(<expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:24">CP0_Config3</name></name> <operator pos:start="33:26" pos:end="33:26">&amp;</operator> <operator pos:start="33:28" pos:end="33:28">(</operator><literal type="number" pos:start="33:29" pos:end="33:29">1</literal> <operator pos:start="33:31" pos:end="33:32">&lt;&lt;</operator> <name pos:start="33:34" pos:end="33:41">CP0C3_MT</name><operator pos:start="33:42" pos:end="33:42">)</operator></expr>)</condition> <block pos:start="33:45" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:50">

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:22">sync_c0_status</name><argument_list pos:start="35:23" pos:end="35:49">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">env</name></expr></argument>, <argument pos:start="35:29" pos:end="35:31"><expr pos:start="35:29" pos:end="35:31"><name pos:start="35:29" pos:end="35:31">env</name></expr></argument>, <argument pos:start="35:34" pos:end="35:48"><expr pos:start="35:34" pos:end="35:48"><name pos:start="35:34" pos:end="35:48"><name pos:start="35:34" pos:end="35:36">env</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:48">current_tc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:28">

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><call pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:22">compute_hflags</name><argument_list pos:start="39:23" pos:end="39:27">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="71:5"><if pos:start="45:5" pos:end="71:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><call pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:26">qemu_loglevel_mask</name><argument_list pos:start="45:27" pos:end="45:40">(<argument pos:start="45:28" pos:end="45:39"><expr pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:39">CPU_LOG_EXEC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:43" pos:end="71:5">{<block_content pos:start="47:9" pos:end="69:9">

        <expr_stmt pos:start="47:9" pos:end="53:32"><expr pos:start="47:9" pos:end="53:31"><call pos:start="47:9" pos:end="53:31"><name pos:start="47:9" pos:end="47:16">qemu_log</name><argument_list pos:start="47:17" pos:end="53:31">(<argument pos:start="47:18" pos:end="47:63"><expr pos:start="47:18" pos:end="47:63"><literal type="string" pos:start="47:18" pos:end="47:63">"Status %08x (%08x) =&gt; %08x (%08x) Cause %08x"</literal></expr></argument>,

                <argument pos:start="49:17" pos:end="49:19"><expr pos:start="49:17" pos:end="49:19"><name pos:start="49:17" pos:end="49:19">old</name></expr></argument>, <argument pos:start="49:22" pos:end="49:57"><expr pos:start="49:22" pos:end="49:57"><name pos:start="49:22" pos:end="49:24">old</name> <operator pos:start="49:26" pos:end="49:26">&amp;</operator> <name pos:start="49:28" pos:end="49:41"><name pos:start="49:28" pos:end="49:30">env</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:41">CP0_Cause</name></name> <operator pos:start="49:43" pos:end="49:43">&amp;</operator> <name pos:start="49:45" pos:end="49:57">CP0Ca_IP_mask</name></expr></argument>,

                <argument pos:start="51:17" pos:end="51:19"><expr pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">val</name></expr></argument>, <argument pos:start="51:22" pos:end="51:57"><expr pos:start="51:22" pos:end="51:57"><name pos:start="51:22" pos:end="51:24">val</name> <operator pos:start="51:26" pos:end="51:26">&amp;</operator> <name pos:start="51:28" pos:end="51:41"><name pos:start="51:28" pos:end="51:30">env</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:41">CP0_Cause</name></name> <operator pos:start="51:43" pos:end="51:43">&amp;</operator> <name pos:start="51:45" pos:end="51:57">CP0Ca_IP_mask</name></expr></argument>,

                <argument pos:start="53:17" pos:end="53:30"><expr pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:30"><name pos:start="53:17" pos:end="53:19">env</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:30">CP0_Cause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="55:9" pos:end="69:9">switch <condition pos:start="55:16" pos:end="55:45">(<expr pos:start="55:17" pos:end="55:44"><name pos:start="55:17" pos:end="55:27"><name pos:start="55:17" pos:end="55:19">env</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:27">hflags</name></name> <operator pos:start="55:29" pos:end="55:29">&amp;</operator> <name pos:start="55:31" pos:end="55:44">MIPS_HFLAG_KSU</name></expr>)</condition> <block pos:start="55:47" pos:end="69:9">{<block_content pos:start="57:9" pos:end="67:18">

        <case pos:start="57:9" pos:end="57:27">case <expr pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:26">MIPS_HFLAG_UM</name></expr>:</case> <expr_stmt pos:start="57:29" pos:end="57:47"><expr pos:start="57:29" pos:end="57:46"><call pos:start="57:29" pos:end="57:46"><name pos:start="57:29" pos:end="57:36">qemu_log</name><argument_list pos:start="57:37" pos:end="57:46">(<argument pos:start="57:38" pos:end="57:45"><expr pos:start="57:38" pos:end="57:45"><literal type="string" pos:start="57:38" pos:end="57:45">", UM\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="57:49" pos:end="57:54">break;</break>

        <case pos:start="59:9" pos:end="59:27">case <expr pos:start="59:14" pos:end="59:26"><name pos:start="59:14" pos:end="59:26">MIPS_HFLAG_SM</name></expr>:</case> <expr_stmt pos:start="59:29" pos:end="59:47"><expr pos:start="59:29" pos:end="59:46"><call pos:start="59:29" pos:end="59:46"><name pos:start="59:29" pos:end="59:36">qemu_log</name><argument_list pos:start="59:37" pos:end="59:46">(<argument pos:start="59:38" pos:end="59:45"><expr pos:start="59:38" pos:end="59:45"><literal type="string" pos:start="59:38" pos:end="59:45">", SM\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="59:49" pos:end="59:54">break;</break>

        <case pos:start="61:9" pos:end="61:27">case <expr pos:start="61:14" pos:end="61:26"><name pos:start="61:14" pos:end="61:26">MIPS_HFLAG_KM</name></expr>:</case> <expr_stmt pos:start="61:29" pos:end="61:43"><expr pos:start="61:29" pos:end="61:42"><call pos:start="61:29" pos:end="61:42"><name pos:start="61:29" pos:end="61:36">qemu_log</name><argument_list pos:start="61:37" pos:end="61:42">(<argument pos:start="61:38" pos:end="61:41"><expr pos:start="61:38" pos:end="61:41"><literal type="string" pos:start="61:38" pos:end="61:41">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="61:45" pos:end="61:50">break;</break>

        <default pos:start="63:9" pos:end="63:16">default:</default>

            <expr_stmt pos:start="65:13" pos:end="65:55"><expr pos:start="65:13" pos:end="65:54"><call pos:start="65:13" pos:end="65:54"><name pos:start="65:13" pos:end="65:21">cpu_abort</name><argument_list pos:start="65:22" pos:end="65:54">(<argument pos:start="65:23" pos:end="65:30"><expr pos:start="65:23" pos:end="65:30"><call pos:start="65:23" pos:end="65:30"><name pos:start="65:23" pos:end="65:25">CPU</name><argument_list pos:start="65:26" pos:end="65:30">(<argument pos:start="65:27" pos:end="65:29"><expr pos:start="65:27" pos:end="65:29"><name pos:start="65:27" pos:end="65:29">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:33" pos:end="65:53"><expr pos:start="65:33" pos:end="65:53"><literal type="string" pos:start="65:33" pos:end="65:53">"Invalid MMU mode!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
