<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9788.c" pos:tabs="8"><function pos:start="1:1" pos:end="64:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">gdb_set_cpu_pc</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:38"><name pos:start="1:28" pos:end="1:35">GDBState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:52">target_ulong</name></type> <name pos:start="1:54" pos:end="1:55">pc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="64:1">{<block_content pos:start="7:5" pos:end="63:0">

<cpp:if pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:24"><call pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:24">(<argument pos:start="5:13" pos:end="5:23"><expr pos:start="5:13" pos:end="5:23"><name pos:start="5:13" pos:end="5:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><call pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:25">cpu_synchronize_state</name><argument_list pos:start="7:26" pos:end="7:35">(<argument pos:start="7:27" pos:end="7:34"><expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:34">c_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="12:0"><expr pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">c_cpu</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:17">eip</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <name pos:start="9:21" pos:end="9:22">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="11:1" pos:end="11:26">#<cpp:directive pos:start="11:2" pos:end="11:5">elif</cpp:directive> <expr pos:start="11:7" pos:end="11:26"><call pos:start="11:7" pos:end="11:26"><name pos:start="11:7" pos:end="11:13">defined</name> <argument_list pos:start="11:15" pos:end="11:26">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:12">c_cpu</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">nip</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:22">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="15:1" pos:end="15:28">#<cpp:directive pos:start="15:2" pos:end="15:5">elif</cpp:directive> <expr pos:start="15:7" pos:end="15:28"><call pos:start="15:7" pos:end="15:28"><name pos:start="15:7" pos:end="15:13">defined</name> <argument_list pos:start="15:15" pos:end="15:28">(<argument pos:start="15:16" pos:end="15:27"><expr pos:start="15:16" pos:end="15:27"><name pos:start="15:16" pos:end="15:27">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>


    <expr_stmt pos:start="18:5" pos:end="21:0"><expr pos:start="18:5" pos:end="18:26"><name pos:start="18:5" pos:end="18:17"><name pos:start="18:5" pos:end="18:5">s</name><operator pos:start="18:6" pos:end="18:7">-&gt;</operator><name pos:start="18:8" pos:end="18:12">c_cpu</name><operator pos:start="18:13" pos:end="18:14">-&gt;</operator><name pos:start="18:15" pos:end="18:17">npc</name></name> <operator pos:start="18:19" pos:end="18:19">=</operator> <name pos:start="18:21" pos:end="18:22">pc</name> <operator pos:start="18:24" pos:end="18:24">+</operator> <literal type="number" pos:start="18:26" pos:end="18:26">4</literal></expr>;</expr_stmt>

<cpp:elif pos:start="20:1" pos:end="20:26">#<cpp:directive pos:start="20:2" pos:end="20:5">elif</cpp:directive> <expr pos:start="20:7" pos:end="20:26"><call pos:start="20:7" pos:end="20:26"><name pos:start="20:7" pos:end="20:13">defined</name> <argument_list pos:start="20:15" pos:end="20:26">(<argument pos:start="20:16" pos:end="20:25"><expr pos:start="20:16" pos:end="20:25"><name pos:start="20:16" pos:end="20:25">TARGET_ARM</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="22:5" pos:end="28:0"><expr pos:start="22:5" pos:end="22:27"><name pos:start="22:5" pos:end="22:22"><name pos:start="22:5" pos:end="22:5">s</name><operator pos:start="22:6" pos:end="22:7">-&gt;</operator><name pos:start="22:8" pos:end="22:12">c_cpu</name><operator pos:start="22:13" pos:end="22:14">-&gt;</operator><name pos:start="22:15" pos:end="22:18">regs</name><index pos:start="22:19" pos:end="22:22">[<expr pos:start="22:20" pos:end="22:21"><literal type="number" pos:start="22:20" pos:end="22:21">15</literal></expr>]</index></name> <operator pos:start="22:24" pos:end="22:24">=</operator> <name pos:start="22:26" pos:end="22:27">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="24:1" pos:end="24:26">#<cpp:directive pos:start="24:2" pos:end="24:5">elif</cpp:directive> <expr pos:start="24:7" pos:end="24:26"><call pos:start="24:7" pos:end="24:26"><name pos:start="24:7" pos:end="24:13">defined</name> <argument_list pos:start="24:15" pos:end="24:26">(<argument pos:start="24:16" pos:end="24:25"><expr pos:start="24:16" pos:end="24:25"><name pos:start="24:16" pos:end="24:25">TARGET_SH4</name></expr></argument>)</argument_list></call></expr></cpp:elif>


<cpp:elif pos:start="27:1" pos:end="27:27">#<cpp:directive pos:start="27:2" pos:end="27:5">elif</cpp:directive> <expr pos:start="27:7" pos:end="27:27"><call pos:start="27:7" pos:end="27:27"><name pos:start="27:7" pos:end="27:13">defined</name> <argument_list pos:start="27:15" pos:end="27:27">(<argument pos:start="27:16" pos:end="27:26"><expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:12">c_cpu</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:23">active_tc</name><operator pos:start="29:24" pos:end="29:24">.</operator><name pos:start="29:25" pos:end="29:26">PC</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:31">pc</name> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <operator pos:start="29:35" pos:end="29:35">~</operator><operator pos:start="29:36" pos:end="29:36">(</operator><name pos:start="29:37" pos:end="29:48">target_ulong</name><operator pos:start="29:49" pos:end="29:49">)</operator><literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="42:0"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:10">pc</name> <operator pos:start="31:12" pos:end="31:12">&amp;</operator> <literal type="number" pos:start="31:14" pos:end="31:14">1</literal></expr>)</condition> <block pos:start="31:17" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:43">

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:16">c_cpu</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:24">hflags</name></name> <operator pos:start="33:26" pos:end="33:27">|=</operator> <name pos:start="33:29" pos:end="33:42">MIPS_HFLAG_M16</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="42:0">else <block pos:start="35:12" pos:end="42:0">{<block_content pos:start="37:9" pos:end="37:46">

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:16">c_cpu</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:24">hflags</name></name> <operator pos:start="37:26" pos:end="37:27">&amp;=</operator> <operator pos:start="37:29" pos:end="37:29">~</operator><operator pos:start="37:30" pos:end="37:30">(</operator><name pos:start="37:31" pos:end="37:44">MIPS_HFLAG_M16</name><operator pos:start="37:45" pos:end="37:45">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:elif pos:start="41:1" pos:end="41:33">#<cpp:directive pos:start="41:2" pos:end="41:5">elif</cpp:directive> <expr pos:start="41:7" pos:end="41:33"><call pos:start="41:7" pos:end="41:33"><name pos:start="41:7" pos:end="41:13">defined</name> <argument_list pos:start="41:15" pos:end="41:33">(<argument pos:start="41:16" pos:end="41:32"><expr pos:start="41:16" pos:end="41:32"><name pos:start="41:16" pos:end="41:32">TARGET_MICROBLAZE</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="43:5" pos:end="52:0"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:12">c_cpu</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:19">sregs</name><index pos:start="43:20" pos:end="43:26">[<expr pos:start="43:21" pos:end="43:25"><name pos:start="43:21" pos:end="43:25">SR_PC</name></expr>]</index></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:31">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="45:1" pos:end="45:27">#<cpp:directive pos:start="45:2" pos:end="45:5">elif</cpp:directive> <expr pos:start="45:7" pos:end="45:27"><call pos:start="45:7" pos:end="45:27"><name pos:start="45:7" pos:end="45:13">defined</name> <argument_list pos:start="45:15" pos:end="45:27">(<argument pos:start="45:16" pos:end="45:26"><expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>


<cpp:elif pos:start="48:1" pos:end="48:28">#<cpp:directive pos:start="48:2" pos:end="48:5">elif</cpp:directive> <expr pos:start="48:7" pos:end="48:28"><call pos:start="48:7" pos:end="48:28"><name pos:start="48:7" pos:end="48:13">defined</name> <argument_list pos:start="48:15" pos:end="48:28">(<argument pos:start="48:16" pos:end="48:27"><expr pos:start="48:16" pos:end="48:27"><name pos:start="48:16" pos:end="48:27">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:elif>


<cpp:elif pos:start="51:1" pos:end="51:28">#<cpp:directive pos:start="51:2" pos:end="51:5">elif</cpp:directive> <expr pos:start="51:7" pos:end="51:28"><call pos:start="51:7" pos:end="51:28"><name pos:start="51:7" pos:end="51:13">defined</name> <argument_list pos:start="51:15" pos:end="51:28">(<argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27">TARGET_S390X</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><call pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:25">cpu_synchronize_state</name><argument_list pos:start="53:26" pos:end="53:35">(<argument pos:start="53:27" pos:end="53:34"><expr pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:34"><name pos:start="53:27" pos:end="53:27">s</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:34">c_cpu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="63:0"><expr pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:12">c_cpu</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:17">psw</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:22">addr</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:27">pc</name></expr>;</expr_stmt>

<cpp:elif pos:start="57:1" pos:end="57:27">#<cpp:directive pos:start="57:2" pos:end="57:5">elif</cpp:directive> <expr pos:start="57:7" pos:end="57:27"><call pos:start="57:7" pos:end="57:27"><name pos:start="57:7" pos:end="57:13">defined</name> <argument_list pos:start="57:15" pos:end="57:27">(<argument pos:start="57:16" pos:end="57:26"><expr pos:start="57:16" pos:end="57:26"><name pos:start="57:16" pos:end="57:26">TARGET_LM32</name></expr></argument>)</argument_list></call></expr></cpp:elif>




<cpp:endif pos:start="62:1" pos:end="62:6">#<cpp:directive pos:start="62:2" pos:end="62:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
