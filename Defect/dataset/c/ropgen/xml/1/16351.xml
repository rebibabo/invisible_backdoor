<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16351.c" pos:tabs="8"><function pos:start="1:1" pos:end="1303:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name><parameter_list pos:start="1:9" pos:end="1:44">(<parameter pos:start="1:10" pos:end="1:17"><decl pos:start="1:10" pos:end="1:17"><type pos:start="1:10" pos:end="1:17"><name pos:start="1:10" pos:end="1:12">int</name></type> <name pos:start="1:14" pos:end="1:17">argc</name></decl></parameter>, <parameter pos:start="1:20" pos:end="1:30"><decl pos:start="1:20" pos:end="1:30"><type pos:start="1:20" pos:end="1:30"><name pos:start="1:20" pos:end="1:23">char</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier><modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:30">argv</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:43"><decl pos:start="1:33" pos:end="1:43"><type pos:start="1:33" pos:end="1:43"><name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">envp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1303:1">{<block_content pos:start="5:5" pos:end="1301:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:25">target_pt_regs</name></name></type> <name pos:start="5:27" pos:end="5:31">regs1</name></decl>, <decl pos:start="5:34" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:25"><modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">regs</name> <init pos:start="5:40" pos:end="5:47">= <expr pos:start="5:42" pos:end="5:47"><operator pos:start="5:42" pos:end="5:42">&amp;</operator><name pos:start="5:43" pos:end="5:47">regs1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">image_info</name></name></type> <name pos:start="7:23" pos:end="7:27">info1</name></decl>, <decl pos:start="7:30" pos:end="7:43"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">info</name> <init pos:start="7:36" pos:end="7:43">= <expr pos:start="7:38" pos:end="7:43"><operator pos:start="7:38" pos:end="7:38">&amp;</operator><name pos:start="7:39" pos:end="7:43">info1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">linux_binprm</name></name></type> <name pos:start="9:25" pos:end="9:28">bprm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">TaskState</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">ts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">CPUArchState</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">CPUState</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:14"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:14">optind</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:8">char</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier><modifier pos:start="19:11" pos:end="19:11">*</modifier></type><name pos:start="19:12" pos:end="19:25">target_environ</name></decl>, <decl pos:start="19:28" pos:end="19:32"><type ref="prev" pos:start="19:5" pos:end="19:11"><modifier pos:start="19:28" pos:end="19:28">*</modifier><modifier pos:start="19:29" pos:end="19:29">*</modifier></type><name pos:start="19:30" pos:end="19:32">wrk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier><modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:22">target_argv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">target_argc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:15"><decl pos:start="29:5" pos:end="29:14"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:14">execfd</name></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:40"><expr pos:start="33:5" pos:end="33:39"><call pos:start="33:5" pos:end="33:39"><name pos:start="33:5" pos:end="33:20">module_call_init</name><argument_list pos:start="33:21" pos:end="33:39">(<argument pos:start="33:22" pos:end="33:38"><expr pos:start="33:22" pos:end="33:38"><name pos:start="33:22" pos:end="33:38">MODULE_INIT_TRACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><call pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:22">qemu_init_cpu_list</name><argument_list pos:start="35:23" pos:end="35:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><call pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:20">module_call_init</name><argument_list pos:start="37:21" pos:end="37:37">(<argument pos:start="37:22" pos:end="37:36"><expr pos:start="37:22" pos:end="37:36"><name pos:start="37:22" pos:end="37:36">MODULE_INIT_QOM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:45">(<expr pos:start="41:9" pos:end="41:44"><operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:16">envlist</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:33">envlist_create</name><argument_list pos:start="41:34" pos:end="41:35">()</argument_list></call><operator pos:start="41:36" pos:end="41:36">)</operator> <operator pos:start="41:38" pos:end="41:39">==</operator> <name pos:start="41:41" pos:end="41:44">NULL</name></expr>)</condition> <block pos:start="41:47" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:27">

        <expr_stmt pos:start="43:9" pos:end="43:63"><expr pos:start="43:9" pos:end="43:62"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:13">void</name><operator pos:start="43:14" pos:end="43:14">)</operator> <call pos:start="43:16" pos:end="43:62"><name pos:start="43:16" pos:end="43:22">fprintf</name><argument_list pos:start="43:23" pos:end="43:62">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">stderr</name></expr></argument>, <argument pos:start="43:32" pos:end="43:61"><expr pos:start="43:32" pos:end="43:61"><literal type="string" pos:start="43:32" pos:end="43:61">"Unable to allocate envlist\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><call pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:12">exit</name><argument_list pos:start="45:13" pos:end="45:26">(<argument pos:start="45:14" pos:end="45:25"><expr pos:start="45:14" pos:end="45:25"><name pos:start="45:14" pos:end="45:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:47">/* add current environment into the list */</comment>

    <for pos:start="53:5" pos:end="57:5">for <control pos:start="53:9" pos:end="53:44">(<init pos:start="53:10" pos:end="53:23"><expr pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:12">wrk</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:22">environ</name></expr>;</init> <condition pos:start="53:25" pos:end="53:37"><expr pos:start="53:25" pos:end="53:36"><operator pos:start="53:25" pos:end="53:25">*</operator><name pos:start="53:26" pos:end="53:28">wrk</name> <operator pos:start="53:30" pos:end="53:31">!=</operator> <name pos:start="53:33" pos:end="53:36">NULL</name></expr>;</condition> <incr pos:start="53:39" pos:end="53:43"><expr pos:start="53:39" pos:end="53:43"><name pos:start="53:39" pos:end="53:41">wrk</name><operator pos:start="53:42" pos:end="53:43">++</operator></expr></incr>)</control> <block pos:start="53:46" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:45">

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:13">void</name><operator pos:start="55:14" pos:end="55:14">)</operator> <call pos:start="55:16" pos:end="55:44"><name pos:start="55:16" pos:end="55:29">envlist_setenv</name><argument_list pos:start="55:30" pos:end="55:44">(<argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><name pos:start="55:31" pos:end="55:37">envlist</name></expr></argument>, <argument pos:start="55:40" pos:end="55:43"><expr pos:start="55:40" pos:end="55:43"><operator pos:start="55:40" pos:end="55:40">*</operator><name pos:start="55:41" pos:end="55:43">wrk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="61:5" pos:end="63:62">/* Read the stack limit from the kernel.  If it's "unlimited",

       then we can do little else besides use the default.  */</comment>

    <block pos:start="65:5" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:9">

        <decl_stmt pos:start="67:9" pos:end="67:26"><decl pos:start="67:9" pos:end="67:25"><type pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:14">struct</name> <name pos:start="67:16" pos:end="67:21">rlimit</name></name></type> <name pos:start="67:23" pos:end="67:25">lim</name></decl>;</decl_stmt>

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="73:57">(<expr pos:start="69:13" pos:end="73:56"><call pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:21">getrlimit</name><argument_list pos:start="69:22" pos:end="69:41">(<argument pos:start="69:23" pos:end="69:34"><expr pos:start="69:23" pos:end="69:34"><name pos:start="69:23" pos:end="69:34">RLIMIT_STACK</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><operator pos:start="69:37" pos:end="69:37">&amp;</operator><name pos:start="69:38" pos:end="69:40">lim</name></expr></argument>)</argument_list></call> <operator pos:start="69:43" pos:end="69:44">==</operator> <literal type="number" pos:start="69:46" pos:end="69:46">0</literal>

            <operator pos:start="71:13" pos:end="71:14">&amp;&amp;</operator> <name pos:start="71:16" pos:end="71:27"><name pos:start="71:16" pos:end="71:18">lim</name><operator pos:start="71:19" pos:end="71:19">.</operator><name pos:start="71:20" pos:end="71:27">rlim_cur</name></name> <operator pos:start="71:29" pos:end="71:30">!=</operator> <name pos:start="71:32" pos:end="71:44">RLIM_INFINITY</name>

            <operator pos:start="73:13" pos:end="73:14">&amp;&amp;</operator> <name pos:start="73:16" pos:end="73:27"><name pos:start="73:16" pos:end="73:18">lim</name><operator pos:start="73:19" pos:end="73:19">.</operator><name pos:start="73:20" pos:end="73:27">rlim_cur</name></name> <operator pos:start="73:29" pos:end="73:30">==</operator> <operator pos:start="73:32" pos:end="73:32">(</operator><name pos:start="73:33" pos:end="73:43">target_long</name><operator pos:start="73:44" pos:end="73:44">)</operator><name pos:start="73:45" pos:end="73:56"><name pos:start="73:45" pos:end="73:47">lim</name><operator pos:start="73:48" pos:end="73:48">.</operator><name pos:start="73:49" pos:end="73:56">rlim_cur</name></name></expr>)</condition> <block pos:start="73:59" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:44">

            <expr_stmt pos:start="75:13" pos:end="75:44"><expr pos:start="75:13" pos:end="75:43"><name pos:start="75:13" pos:end="75:28">guest_stack_size</name> <operator pos:start="75:30" pos:end="75:30">=</operator> <name pos:start="75:32" pos:end="75:43"><name pos:start="75:32" pos:end="75:34">lim</name><operator pos:start="75:35" pos:end="75:35">.</operator><name pos:start="75:36" pos:end="75:43">rlim_cur</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <expr_stmt pos:start="83:5" pos:end="83:21"><expr pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:13">cpu_model</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:20">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:22"><expr pos:start="87:5" pos:end="87:21"><call pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:9">srand</name><argument_list pos:start="87:10" pos:end="87:21">(<argument pos:start="87:11" pos:end="87:20"><expr pos:start="87:11" pos:end="87:20"><call pos:start="87:11" pos:end="87:20"><name pos:start="87:11" pos:end="87:14">time</name><argument_list pos:start="87:15" pos:end="87:20">(<argument pos:start="87:16" pos:end="87:19"><expr pos:start="87:16" pos:end="87:19"><name pos:start="87:16" pos:end="87:19">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:36"><expr pos:start="91:5" pos:end="91:35"><call pos:start="91:5" pos:end="91:35"><name pos:start="91:5" pos:end="91:17">qemu_add_opts</name><argument_list pos:start="91:18" pos:end="91:35">(<argument pos:start="91:19" pos:end="91:34"><expr pos:start="91:19" pos:end="91:34"><operator pos:start="91:19" pos:end="91:19">&amp;</operator><name pos:start="91:20" pos:end="91:34">qemu_trace_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:36"><expr pos:start="95:5" pos:end="95:35"><name pos:start="95:5" pos:end="95:10">optind</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <call pos:start="95:14" pos:end="95:35"><name pos:start="95:14" pos:end="95:23">parse_args</name><argument_list pos:start="95:24" pos:end="95:35">(<argument pos:start="95:25" pos:end="95:28"><expr pos:start="95:25" pos:end="95:28"><name pos:start="95:25" pos:end="95:28">argc</name></expr></argument>, <argument pos:start="95:31" pos:end="95:34"><expr pos:start="95:31" pos:end="95:34"><name pos:start="95:31" pos:end="95:34">argv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="103:5"><if pos:start="99:5" pos:end="103:5">if <condition pos:start="99:8" pos:end="99:31">(<expr pos:start="99:9" pos:end="99:30"><operator pos:start="99:9" pos:end="99:9">!</operator><call pos:start="99:10" pos:end="99:30"><name pos:start="99:10" pos:end="99:28">trace_init_backends</name><argument_list pos:start="99:29" pos:end="99:30">()</argument_list></call></expr>)</condition> <block pos:start="99:33" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:16">

        <expr_stmt pos:start="101:9" pos:end="101:16"><expr pos:start="101:9" pos:end="101:15"><call pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:12">exit</name><argument_list pos:start="101:13" pos:end="101:15">(<argument pos:start="101:14" pos:end="101:14"><expr pos:start="101:14" pos:end="101:14"><literal type="number" pos:start="101:14" pos:end="101:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><call pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:19">trace_init_file</name><argument_list pos:start="105:20" pos:end="105:31">(<argument pos:start="105:21" pos:end="105:30"><expr pos:start="105:21" pos:end="105:30"><name pos:start="105:21" pos:end="105:30">trace_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:23">/* Zero out regs */</comment>

    <expr_stmt pos:start="111:5" pos:end="111:51"><expr pos:start="111:5" pos:end="111:50"><call pos:start="111:5" pos:end="111:50"><name pos:start="111:5" pos:end="111:10">memset</name><argument_list pos:start="111:11" pos:end="111:50">(<argument pos:start="111:12" pos:end="111:15"><expr pos:start="111:12" pos:end="111:15"><name pos:start="111:12" pos:end="111:15">regs</name></expr></argument>, <argument pos:start="111:18" pos:end="111:18"><expr pos:start="111:18" pos:end="111:18"><literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr></argument>, <argument pos:start="111:21" pos:end="111:49"><expr pos:start="111:21" pos:end="111:49"><sizeof pos:start="111:21" pos:end="111:49">sizeof<argument_list pos:start="111:27" pos:end="111:49">(<argument pos:start="111:28" pos:end="111:48"><expr pos:start="111:28" pos:end="111:48">struct <name pos:start="111:35" pos:end="111:48">target_pt_regs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:29">/* Zero out image_info */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:47"><expr pos:start="117:5" pos:end="117:46"><call pos:start="117:5" pos:end="117:46"><name pos:start="117:5" pos:end="117:10">memset</name><argument_list pos:start="117:11" pos:end="117:46">(<argument pos:start="117:12" pos:end="117:15"><expr pos:start="117:12" pos:end="117:15"><name pos:start="117:12" pos:end="117:15">info</name></expr></argument>, <argument pos:start="117:18" pos:end="117:18"><expr pos:start="117:18" pos:end="117:18"><literal type="number" pos:start="117:18" pos:end="117:18">0</literal></expr></argument>, <argument pos:start="117:21" pos:end="117:45"><expr pos:start="117:21" pos:end="117:45"><sizeof pos:start="117:21" pos:end="117:45">sizeof<argument_list pos:start="117:27" pos:end="117:45">(<argument pos:start="117:28" pos:end="117:44"><expr pos:start="117:28" pos:end="117:44">struct <name pos:start="117:35" pos:end="117:44">image_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:36"><expr pos:start="121:5" pos:end="121:35"><call pos:start="121:5" pos:end="121:35"><name pos:start="121:5" pos:end="121:10">memset</name><argument_list pos:start="121:11" pos:end="121:35">(<argument pos:start="121:12" pos:end="121:16"><expr pos:start="121:12" pos:end="121:16"><operator pos:start="121:12" pos:end="121:12">&amp;</operator><name pos:start="121:13" pos:end="121:16">bprm</name></expr></argument>, <argument pos:start="121:19" pos:end="121:19"><expr pos:start="121:19" pos:end="121:19"><literal type="number" pos:start="121:19" pos:end="121:19">0</literal></expr></argument>, <argument pos:start="121:22" pos:end="121:34"><expr pos:start="121:22" pos:end="121:34"><sizeof pos:start="121:22" pos:end="121:34">sizeof <argument_list pos:start="121:29" pos:end="121:34">(<argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><name pos:start="121:30" pos:end="121:33">bprm</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:55">/* Scan interp_prefix dir for replacement files. */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><call pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:14">init_paths</name><argument_list pos:start="127:15" pos:end="127:29">(<argument pos:start="127:16" pos:end="127:28"><expr pos:start="127:16" pos:end="127:28"><name pos:start="127:16" pos:end="127:28">interp_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:30"><expr pos:start="131:5" pos:end="131:29"><call pos:start="131:5" pos:end="131:29"><name pos:start="131:5" pos:end="131:27">init_qemu_uname_release</name><argument_list pos:start="131:28" pos:end="131:29">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="135:5" pos:end="215:5"><if pos:start="135:5" pos:end="215:5">if <condition pos:start="135:8" pos:end="135:26">(<expr pos:start="135:9" pos:end="135:25"><name pos:start="135:9" pos:end="135:17">cpu_model</name> <operator pos:start="135:19" pos:end="135:20">==</operator> <name pos:start="135:22" pos:end="135:25">NULL</name></expr>)</condition> <block pos:start="135:28" pos:end="215:5">{<block_content pos:start="141:9" pos:end="214:0">

<cpp:if pos:start="137:1" pos:end="137:24">#<cpp:directive pos:start="137:2" pos:end="137:3">if</cpp:directive> <expr pos:start="137:5" pos:end="137:24"><call pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:11">defined</name><argument_list pos:start="137:12" pos:end="137:24">(<argument pos:start="137:13" pos:end="137:23"><expr pos:start="137:13" pos:end="137:23"><name pos:start="137:13" pos:end="137:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:ifdef pos:start="139:1" pos:end="139:20">#<cpp:directive pos:start="139:2" pos:end="139:6">ifdef</cpp:directive> <name pos:start="139:8" pos:end="139:20">TARGET_X86_64</name></cpp:ifdef>

        <expr_stmt pos:start="141:9" pos:end="144:0"><expr pos:start="141:9" pos:end="141:28"><name pos:start="141:9" pos:end="141:17">cpu_model</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <literal type="string" pos:start="141:21" pos:end="141:28">"qemu64"</literal></expr>;</expr_stmt>

<cpp:else pos:start="143:1" pos:end="143:5">#<cpp:directive pos:start="143:2" pos:end="143:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="145:9" pos:end="150:0"><expr pos:start="145:9" pos:end="145:28"><name pos:start="145:9" pos:end="145:17">cpu_model</name> <operator pos:start="145:19" pos:end="145:19">=</operator> <literal type="string" pos:start="145:21" pos:end="145:28">"qemu32"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="147:1" pos:end="147:6">#<cpp:directive pos:start="147:2" pos:end="147:6">endif</cpp:directive></cpp:endif>

<cpp:elif pos:start="149:1" pos:end="149:25">#<cpp:directive pos:start="149:2" pos:end="149:5">elif</cpp:directive> <expr pos:start="149:7" pos:end="149:25"><call pos:start="149:7" pos:end="149:25"><name pos:start="149:7" pos:end="149:13">defined</name><argument_list pos:start="149:14" pos:end="149:25">(<argument pos:start="149:15" pos:end="149:24"><expr pos:start="149:15" pos:end="149:24"><name pos:start="149:15" pos:end="149:24">TARGET_ARM</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="151:9" pos:end="154:0"><expr pos:start="151:9" pos:end="151:25"><name pos:start="151:9" pos:end="151:17">cpu_model</name> <operator pos:start="151:19" pos:end="151:19">=</operator> <literal type="string" pos:start="151:21" pos:end="151:25">"any"</literal></expr>;</expr_stmt>

<cpp:elif pos:start="153:1" pos:end="153:31">#<cpp:directive pos:start="153:2" pos:end="153:5">elif</cpp:directive> <expr pos:start="153:7" pos:end="153:31"><call pos:start="153:7" pos:end="153:31"><name pos:start="153:7" pos:end="153:13">defined</name><argument_list pos:start="153:14" pos:end="153:31">(<argument pos:start="153:15" pos:end="153:30"><expr pos:start="153:15" pos:end="153:30"><name pos:start="153:15" pos:end="153:30">TARGET_UNICORE32</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="155:9" pos:end="158:0"><expr pos:start="155:9" pos:end="155:25"><name pos:start="155:9" pos:end="155:17">cpu_model</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <literal type="string" pos:start="155:21" pos:end="155:25">"any"</literal></expr>;</expr_stmt>

<cpp:elif pos:start="157:1" pos:end="157:26">#<cpp:directive pos:start="157:2" pos:end="157:5">elif</cpp:directive> <expr pos:start="157:7" pos:end="157:26"><call pos:start="157:7" pos:end="157:26"><name pos:start="157:7" pos:end="157:13">defined</name><argument_list pos:start="157:14" pos:end="157:26">(<argument pos:start="157:15" pos:end="157:25"><expr pos:start="157:15" pos:end="157:25"><name pos:start="157:15" pos:end="157:25">TARGET_M68K</name></expr></argument>)</argument_list></call></expr></cpp:elif>

        <expr_stmt pos:start="159:9" pos:end="164:0"><expr pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:17">cpu_model</name> <operator pos:start="159:19" pos:end="159:19">=</operator> <literal type="string" pos:start="159:21" pos:end="159:25">"any"</literal></expr>;</expr_stmt>

<cpp:elif pos:start="161:1" pos:end="161:27">#<cpp:directive pos:start="161:2" pos:end="161:5">elif</cpp:directive> <expr pos:start="161:7" pos:end="161:27"><call pos:start="161:7" pos:end="161:27"><name pos:start="161:7" pos:end="161:13">defined</name><argument_list pos:start="161:14" pos:end="161:27">(<argument pos:start="161:15" pos:end="161:26"><expr pos:start="161:15" pos:end="161:26"><name pos:start="161:15" pos:end="161:26">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:ifdef pos:start="163:1" pos:end="163:21">#<cpp:directive pos:start="163:2" pos:end="163:6">ifdef</cpp:directive> <name pos:start="163:8" pos:end="163:21">TARGET_SPARC64</name></cpp:ifdef>

        <expr_stmt pos:start="165:9" pos:end="168:0"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:17">cpu_model</name> <operator pos:start="165:19" pos:end="165:19">=</operator> <literal type="string" pos:start="165:21" pos:end="165:38">"TI UltraSparc II"</literal></expr>;</expr_stmt>

<cpp:else pos:start="167:1" pos:end="167:5">#<cpp:directive pos:start="167:2" pos:end="167:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="169:9" pos:end="176:0"><expr pos:start="169:9" pos:end="169:37"><name pos:start="169:9" pos:end="169:17">cpu_model</name> <operator pos:start="169:19" pos:end="169:19">=</operator> <literal type="string" pos:start="169:21" pos:end="169:37">"Fujitsu MB86904"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="171:1" pos:end="171:6">#<cpp:directive pos:start="171:2" pos:end="171:6">endif</cpp:directive></cpp:endif>

<cpp:elif pos:start="173:1" pos:end="173:26">#<cpp:directive pos:start="173:2" pos:end="173:5">elif</cpp:directive> <expr pos:start="173:7" pos:end="173:26"><call pos:start="173:7" pos:end="173:26"><name pos:start="173:7" pos:end="173:13">defined</name><argument_list pos:start="173:14" pos:end="173:26">(<argument pos:start="173:15" pos:end="173:25"><expr pos:start="173:15" pos:end="173:25"><name pos:start="173:15" pos:end="173:25">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:if pos:start="175:1" pos:end="175:62">#<cpp:directive pos:start="175:2" pos:end="175:3">if</cpp:directive> <expr pos:start="175:5" pos:end="175:62"><call pos:start="175:5" pos:end="175:31"><name pos:start="175:5" pos:end="175:11">defined</name><argument_list pos:start="175:12" pos:end="175:31">(<argument pos:start="175:13" pos:end="175:30"><expr pos:start="175:13" pos:end="175:30"><name pos:start="175:13" pos:end="175:30">TARGET_ABI_MIPSN32</name></expr></argument>)</argument_list></call> <operator pos:start="175:33" pos:end="175:34">||</operator> <call pos:start="175:36" pos:end="175:62"><name pos:start="175:36" pos:end="175:42">defined</name><argument_list pos:start="175:43" pos:end="175:62">(<argument pos:start="175:44" pos:end="175:61"><expr pos:start="175:44" pos:end="175:61"><name pos:start="175:44" pos:end="175:61">TARGET_ABI_MIPSN64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="177:9" pos:end="180:0"><expr pos:start="177:9" pos:end="177:26"><name pos:start="177:9" pos:end="177:17">cpu_model</name> <operator pos:start="177:19" pos:end="177:19">=</operator> <literal type="string" pos:start="177:21" pos:end="177:26">"5KEf"</literal></expr>;</expr_stmt>

<cpp:else pos:start="179:1" pos:end="179:5">#<cpp:directive pos:start="179:2" pos:end="179:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="181:9" pos:end="186:0"><expr pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:17">cpu_model</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <literal type="string" pos:start="181:21" pos:end="181:26">"24Kf"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

<cpp:elif pos:start="185:1" pos:end="185:29">#<cpp:directive pos:start="185:2" pos:end="185:5">elif</cpp:directive> <expr pos:start="185:7" pos:end="185:29"><name pos:start="185:7" pos:end="185:13">defined</name> <name pos:start="185:15" pos:end="185:29">TARGET_OPENRISC</name></expr></cpp:elif>

        <expr_stmt pos:start="187:9" pos:end="192:0"><expr pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:17">cpu_model</name> <operator pos:start="187:19" pos:end="187:19">=</operator> <literal type="string" pos:start="187:21" pos:end="187:28">"or1200"</literal></expr>;</expr_stmt>

<cpp:elif pos:start="189:1" pos:end="189:25">#<cpp:directive pos:start="189:2" pos:end="189:5">elif</cpp:directive> <expr pos:start="189:7" pos:end="189:25"><call pos:start="189:7" pos:end="189:25"><name pos:start="189:7" pos:end="189:13">defined</name><argument_list pos:start="189:14" pos:end="189:25">(<argument pos:start="189:15" pos:end="189:24"><expr pos:start="189:15" pos:end="189:24"><name pos:start="189:15" pos:end="189:24">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

<cpp:ifdef pos:start="191:1" pos:end="191:20"># <cpp:directive pos:start="191:3" pos:end="191:7">ifdef</cpp:directive> <name pos:start="191:9" pos:end="191:20">TARGET_PPC64</name></cpp:ifdef>

        <expr_stmt pos:start="193:9" pos:end="196:0"><expr pos:start="193:9" pos:end="193:28"><name pos:start="193:9" pos:end="193:17">cpu_model</name> <operator pos:start="193:19" pos:end="193:19">=</operator> <literal type="string" pos:start="193:21" pos:end="193:28">"POWER8"</literal></expr>;</expr_stmt>

<cpp:else pos:start="195:1" pos:end="195:6"># <cpp:directive pos:start="195:3" pos:end="195:6">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="197:9" pos:end="202:0"><expr pos:start="197:9" pos:end="197:25"><name pos:start="197:9" pos:end="197:17">cpu_model</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <literal type="string" pos:start="197:21" pos:end="197:25">"750"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="199:1" pos:end="199:7"># <cpp:directive pos:start="199:3" pos:end="199:7">endif</cpp:directive></cpp:endif>

<cpp:elif pos:start="201:1" pos:end="201:24">#<cpp:directive pos:start="201:2" pos:end="201:5">elif</cpp:directive> <expr pos:start="201:7" pos:end="201:24"><name pos:start="201:7" pos:end="201:13">defined</name> <name pos:start="201:15" pos:end="201:24">TARGET_SH4</name></expr></cpp:elif>

        <expr_stmt pos:start="203:9" pos:end="206:0"><expr pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:17">cpu_model</name> <operator pos:start="203:19" pos:end="203:19">=</operator> <name pos:start="203:21" pos:end="203:35">TYPE_SH7785_CPU</name></expr>;</expr_stmt>

<cpp:elif pos:start="205:1" pos:end="205:26">#<cpp:directive pos:start="205:2" pos:end="205:5">elif</cpp:directive> <expr pos:start="205:7" pos:end="205:26"><name pos:start="205:7" pos:end="205:13">defined</name> <name pos:start="205:15" pos:end="205:26">TARGET_S390X</name></expr></cpp:elif>

        <expr_stmt pos:start="207:9" pos:end="210:0"><expr pos:start="207:9" pos:end="207:26"><name pos:start="207:9" pos:end="207:17">cpu_model</name> <operator pos:start="207:19" pos:end="207:19">=</operator> <literal type="string" pos:start="207:21" pos:end="207:26">"qemu"</literal></expr>;</expr_stmt>

<cpp:else pos:start="209:1" pos:end="209:5">#<cpp:directive pos:start="209:2" pos:end="209:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="211:9" pos:end="214:0"><expr pos:start="211:9" pos:end="211:25"><name pos:start="211:9" pos:end="211:17">cpu_model</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <literal type="string" pos:start="211:21" pos:end="211:25">"any"</literal></expr>;</expr_stmt>

<cpp:endif pos:start="213:1" pos:end="213:6">#<cpp:directive pos:start="213:2" pos:end="213:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:21"><expr pos:start="217:5" pos:end="217:20"><call pos:start="217:5" pos:end="217:20"><name pos:start="217:5" pos:end="217:17">tcg_exec_init</name><argument_list pos:start="217:18" pos:end="217:20">(<argument pos:start="217:19" pos:end="217:19"><expr pos:start="217:19" pos:end="217:19"><literal type="number" pos:start="217:19" pos:end="217:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="219:5" pos:end="221:29">/* NOTE: we need to init the CPU at this stage to get

       qemu_host_page_size */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:30"><expr pos:start="223:5" pos:end="223:29"><name pos:start="223:5" pos:end="223:7">cpu</name> <operator pos:start="223:9" pos:end="223:9">=</operator> <call pos:start="223:11" pos:end="223:29"><name pos:start="223:11" pos:end="223:18">cpu_init</name><argument_list pos:start="223:19" pos:end="223:29">(<argument pos:start="223:20" pos:end="223:28"><expr pos:start="223:20" pos:end="223:28"><name pos:start="223:20" pos:end="223:28">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="225:5" pos:end="231:5"><if pos:start="225:5" pos:end="231:5">if <condition pos:start="225:8" pos:end="225:13">(<expr pos:start="225:9" pos:end="225:12"><operator pos:start="225:9" pos:end="225:9">!</operator><name pos:start="225:10" pos:end="225:12">cpu</name></expr>)</condition> <block pos:start="225:15" pos:end="231:5">{<block_content pos:start="227:9" pos:end="229:27">

        <expr_stmt pos:start="227:9" pos:end="227:59"><expr pos:start="227:9" pos:end="227:58"><call pos:start="227:9" pos:end="227:58"><name pos:start="227:9" pos:end="227:15">fprintf</name><argument_list pos:start="227:16" pos:end="227:58">(<argument pos:start="227:17" pos:end="227:22"><expr pos:start="227:17" pos:end="227:22"><name pos:start="227:17" pos:end="227:22">stderr</name></expr></argument>, <argument pos:start="227:25" pos:end="227:57"><expr pos:start="227:25" pos:end="227:57"><literal type="string" pos:start="227:25" pos:end="227:57">"Unable to find CPU definition\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:27"><expr pos:start="229:9" pos:end="229:26"><call pos:start="229:9" pos:end="229:26"><name pos:start="229:9" pos:end="229:12">exit</name><argument_list pos:start="229:13" pos:end="229:26">(<argument pos:start="229:14" pos:end="229:25"><expr pos:start="229:14" pos:end="229:25"><name pos:start="229:14" pos:end="229:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:23"><expr pos:start="233:5" pos:end="233:22"><name pos:start="233:5" pos:end="233:7">env</name> <operator pos:start="233:9" pos:end="233:9">=</operator> <name pos:start="233:11" pos:end="233:22"><name pos:start="233:11" pos:end="233:13">cpu</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:22">env_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:19"><expr pos:start="235:5" pos:end="235:18"><call pos:start="235:5" pos:end="235:18"><name pos:start="235:5" pos:end="235:13">cpu_reset</name><argument_list pos:start="235:14" pos:end="235:18">(<argument pos:start="235:15" pos:end="235:17"><expr pos:start="235:15" pos:end="235:17"><name pos:start="235:15" pos:end="235:17">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:21"><expr pos:start="239:5" pos:end="239:20"><name pos:start="239:5" pos:end="239:14">thread_cpu</name> <operator pos:start="239:16" pos:end="239:16">=</operator> <name pos:start="239:18" pos:end="239:20">cpu</name></expr>;</expr_stmt>



    <if_stmt pos:start="243:5" pos:end="247:5"><if pos:start="243:5" pos:end="247:5">if <condition pos:start="243:8" pos:end="243:30">(<expr pos:start="243:9" pos:end="243:29"><call pos:start="243:9" pos:end="243:29"><name pos:start="243:9" pos:end="243:14">getenv</name><argument_list pos:start="243:15" pos:end="243:29">(<argument pos:start="243:16" pos:end="243:28"><expr pos:start="243:16" pos:end="243:28"><literal type="string" pos:start="243:16" pos:end="243:28">"QEMU_STRACE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:32" pos:end="247:5">{<block_content pos:start="245:9" pos:end="245:22">

        <expr_stmt pos:start="245:9" pos:end="245:22"><expr pos:start="245:9" pos:end="245:21"><name pos:start="245:9" pos:end="245:17">do_strace</name> <operator pos:start="245:19" pos:end="245:19">=</operator> <literal type="number" pos:start="245:21" pos:end="245:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="251:5" pos:end="255:5"><if pos:start="251:5" pos:end="255:5">if <condition pos:start="251:8" pos:end="251:33">(<expr pos:start="251:9" pos:end="251:32"><call pos:start="251:9" pos:end="251:32"><name pos:start="251:9" pos:end="251:14">getenv</name><argument_list pos:start="251:15" pos:end="251:32">(<argument pos:start="251:16" pos:end="251:31"><expr pos:start="251:16" pos:end="251:31"><literal type="string" pos:start="251:16" pos:end="251:31">"QEMU_RAND_SEED"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="251:35" pos:end="255:5">{<block_content pos:start="253:9" pos:end="253:54">

        <expr_stmt pos:start="253:9" pos:end="253:54"><expr pos:start="253:9" pos:end="253:53"><call pos:start="253:9" pos:end="253:53"><name pos:start="253:9" pos:end="253:27">handle_arg_randseed</name><argument_list pos:start="253:28" pos:end="253:53">(<argument pos:start="253:29" pos:end="253:52"><expr pos:start="253:29" pos:end="253:52"><call pos:start="253:29" pos:end="253:52"><name pos:start="253:29" pos:end="253:34">getenv</name><argument_list pos:start="253:35" pos:end="253:52">(<argument pos:start="253:36" pos:end="253:51"><expr pos:start="253:36" pos:end="253:51"><literal type="string" pos:start="253:36" pos:end="253:51">"QEMU_RAND_SEED"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:55"><expr pos:start="259:5" pos:end="259:54"><name pos:start="259:5" pos:end="259:18">target_environ</name> <operator pos:start="259:20" pos:end="259:20">=</operator> <call pos:start="259:22" pos:end="259:54"><name pos:start="259:22" pos:end="259:39">envlist_to_environ</name><argument_list pos:start="259:40" pos:end="259:54">(<argument pos:start="259:41" pos:end="259:47"><expr pos:start="259:41" pos:end="259:47"><name pos:start="259:41" pos:end="259:47">envlist</name></expr></argument>, <argument pos:start="259:50" pos:end="259:53"><expr pos:start="259:50" pos:end="259:53"><name pos:start="259:50" pos:end="259:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:26"><expr pos:start="261:5" pos:end="261:25"><call pos:start="261:5" pos:end="261:25"><name pos:start="261:5" pos:end="261:16">envlist_free</name><argument_list pos:start="261:17" pos:end="261:25">(<argument pos:start="261:18" pos:end="261:24"><expr pos:start="261:18" pos:end="261:24"><name pos:start="261:18" pos:end="261:24">envlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="265:5" pos:end="271:7">/*

     * Now that page sizes are configured in cpu_init() we can do

     * proper page alignment for guest_base.

     */</comment>

    <expr_stmt pos:start="273:5" pos:end="273:45"><expr pos:start="273:5" pos:end="273:44"><name pos:start="273:5" pos:end="273:14">guest_base</name> <operator pos:start="273:16" pos:end="273:16">=</operator> <call pos:start="273:18" pos:end="273:44"><name pos:start="273:18" pos:end="273:32">HOST_PAGE_ALIGN</name><argument_list pos:start="273:33" pos:end="273:44">(<argument pos:start="273:34" pos:end="273:43"><expr pos:start="273:34" pos:end="273:43"><name pos:start="273:34" pos:end="273:43">guest_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="277:5" pos:end="305:5"><if pos:start="277:5" pos:end="305:5">if <condition pos:start="277:8" pos:end="277:39">(<expr pos:start="277:9" pos:end="277:38"><name pos:start="277:9" pos:end="277:19">reserved_va</name> <operator pos:start="277:21" pos:end="277:22">||</operator> <name pos:start="277:24" pos:end="277:38">have_guest_base</name></expr>)</condition> <block pos:start="277:41" pos:end="305:5">{<block_content pos:start="279:9" pos:end="303:9">

        <expr_stmt pos:start="279:9" pos:end="281:55"><expr pos:start="279:9" pos:end="281:54"><name pos:start="279:9" pos:end="279:18">guest_base</name> <operator pos:start="279:20" pos:end="279:20">=</operator> <call pos:start="279:22" pos:end="281:54"><name pos:start="279:22" pos:end="279:37">init_guest_space</name><argument_list pos:start="279:38" pos:end="281:54">(<argument pos:start="279:39" pos:end="279:48"><expr pos:start="279:39" pos:end="279:48"><name pos:start="279:39" pos:end="279:48">guest_base</name></expr></argument>, <argument pos:start="279:51" pos:end="279:61"><expr pos:start="279:51" pos:end="279:61"><name pos:start="279:51" pos:end="279:61">reserved_va</name></expr></argument>, <argument pos:start="279:64" pos:end="279:64"><expr pos:start="279:64" pos:end="279:64"><literal type="number" pos:start="279:64" pos:end="279:64">0</literal></expr></argument>,

                                      <argument pos:start="281:39" pos:end="281:53"><expr pos:start="281:39" pos:end="281:53"><name pos:start="281:39" pos:end="281:53">have_guest_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="283:9" pos:end="295:9"><if pos:start="283:9" pos:end="295:9">if <condition pos:start="283:12" pos:end="283:44">(<expr pos:start="283:13" pos:end="283:43"><name pos:start="283:13" pos:end="283:22">guest_base</name> <operator pos:start="283:24" pos:end="283:25">==</operator> <operator pos:start="283:27" pos:end="283:27">(</operator><name pos:start="283:28" pos:end="283:35">unsigned</name> <name pos:start="283:37" pos:end="283:40">long</name><operator pos:start="283:41" pos:end="283:41">)</operator><operator pos:start="283:42" pos:end="283:42">-</operator><literal type="number" pos:start="283:43" pos:end="283:43">1</literal></expr>)</condition> <block pos:start="283:46" pos:end="295:9">{<block_content pos:start="285:13" pos:end="293:31">

            <expr_stmt pos:start="285:13" pos:end="291:33"><expr pos:start="285:13" pos:end="291:32"><call pos:start="285:13" pos:end="291:32"><name pos:start="285:13" pos:end="285:19">fprintf</name><argument_list pos:start="285:20" pos:end="291:32">(<argument pos:start="285:21" pos:end="285:26"><expr pos:start="285:21" pos:end="285:26"><name pos:start="285:21" pos:end="285:26">stderr</name></expr></argument>, <argument pos:start="285:29" pos:end="289:78"><expr pos:start="285:29" pos:end="289:78"><literal type="string" pos:start="285:29" pos:end="285:79">"Unable to reserve 0x%lx bytes of virtual address "</literal>

                    <literal type="string" pos:start="287:21" pos:end="287:79">"space for use as guest address space (check your virtual "</literal>

                    <literal type="string" pos:start="289:21" pos:end="289:78">"memory ulimit setting or reserve less using -R option)\n"</literal></expr></argument>,

                    <argument pos:start="291:21" pos:end="291:31"><expr pos:start="291:21" pos:end="291:31"><name pos:start="291:21" pos:end="291:31">reserved_va</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:31"><expr pos:start="293:13" pos:end="293:30"><call pos:start="293:13" pos:end="293:30"><name pos:start="293:13" pos:end="293:16">exit</name><argument_list pos:start="293:17" pos:end="293:30">(<argument pos:start="293:18" pos:end="293:29"><expr pos:start="293:18" pos:end="293:29"><name pos:start="293:18" pos:end="293:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="299:9" pos:end="303:9"><if pos:start="299:9" pos:end="303:9">if <condition pos:start="299:12" pos:end="299:24">(<expr pos:start="299:13" pos:end="299:23"><name pos:start="299:13" pos:end="299:23">reserved_va</name></expr>)</condition> <block pos:start="299:26" pos:end="303:9">{<block_content pos:start="301:13" pos:end="301:42">

            <expr_stmt pos:start="301:13" pos:end="301:42"><expr pos:start="301:13" pos:end="301:41"><name pos:start="301:13" pos:end="301:27">mmap_next_start</name> <operator pos:start="301:29" pos:end="301:29">=</operator> <name pos:start="301:31" pos:end="301:41">reserved_va</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="309:5" pos:end="317:7">/*

     * Read in mmap_min_addr kernel parameter.  This value is used

     * When loading the ELF image to determine whether guest_base

     * is needed.  It is also used in mmap_find_vma.

     */</comment>

    <block pos:start="319:5" pos:end="341:5">{<block_content pos:start="321:9" pos:end="339:9">

        <decl_stmt pos:start="321:9" pos:end="321:17"><decl pos:start="321:9" pos:end="321:16"><type pos:start="321:9" pos:end="321:14"><name pos:start="321:9" pos:end="321:12">FILE</name> <modifier pos:start="321:14" pos:end="321:14">*</modifier></type><name pos:start="321:15" pos:end="321:16">fp</name></decl>;</decl_stmt>



        <if_stmt pos:start="325:9" pos:end="339:9"><if pos:start="325:9" pos:end="339:9">if <condition pos:start="325:12" pos:end="325:68">(<expr pos:start="325:13" pos:end="325:67"><operator pos:start="325:13" pos:end="325:13">(</operator><name pos:start="325:14" pos:end="325:15">fp</name> <operator pos:start="325:17" pos:end="325:17">=</operator> <call pos:start="325:19" pos:end="325:58"><name pos:start="325:19" pos:end="325:23">fopen</name><argument_list pos:start="325:24" pos:end="325:58">(<argument pos:start="325:25" pos:end="325:52"><expr pos:start="325:25" pos:end="325:52"><literal type="string" pos:start="325:25" pos:end="325:52">"/proc/sys/vm/mmap_min_addr"</literal></expr></argument>, <argument pos:start="325:55" pos:end="325:57"><expr pos:start="325:55" pos:end="325:57"><literal type="string" pos:start="325:55" pos:end="325:57">"r"</literal></expr></argument>)</argument_list></call><operator pos:start="325:59" pos:end="325:59">)</operator> <operator pos:start="325:61" pos:end="325:62">!=</operator> <name pos:start="325:64" pos:end="325:67">NULL</name></expr>)</condition> <block pos:start="325:70" pos:end="339:9">{<block_content pos:start="327:13" pos:end="337:23">

            <decl_stmt pos:start="327:13" pos:end="327:30"><decl pos:start="327:13" pos:end="327:29"><type pos:start="327:13" pos:end="327:25"><name pos:start="327:13" pos:end="327:20">unsigned</name> <name pos:start="327:22" pos:end="327:25">long</name></type> <name pos:start="327:27" pos:end="327:29">tmp</name></decl>;</decl_stmt>

            <if_stmt pos:start="329:13" pos:end="335:13"><if pos:start="329:13" pos:end="335:13">if <condition pos:start="329:16" pos:end="329:45">(<expr pos:start="329:17" pos:end="329:44"><call pos:start="329:17" pos:end="329:39"><name pos:start="329:17" pos:end="329:22">fscanf</name><argument_list pos:start="329:23" pos:end="329:39">(<argument pos:start="329:24" pos:end="329:25"><expr pos:start="329:24" pos:end="329:25"><name pos:start="329:24" pos:end="329:25">fp</name></expr></argument>, <argument pos:start="329:28" pos:end="329:32"><expr pos:start="329:28" pos:end="329:32"><literal type="string" pos:start="329:28" pos:end="329:32">"%lu"</literal></expr></argument>, <argument pos:start="329:35" pos:end="329:38"><expr pos:start="329:35" pos:end="329:38"><operator pos:start="329:35" pos:end="329:35">&amp;</operator><name pos:start="329:36" pos:end="329:38">tmp</name></expr></argument>)</argument_list></call> <operator pos:start="329:41" pos:end="329:42">==</operator> <literal type="number" pos:start="329:44" pos:end="329:44">1</literal></expr>)</condition> <block pos:start="329:47" pos:end="335:13">{<block_content pos:start="331:17" pos:end="333:89">

                <expr_stmt pos:start="331:17" pos:end="331:36"><expr pos:start="331:17" pos:end="331:35"><name pos:start="331:17" pos:end="331:29">mmap_min_addr</name> <operator pos:start="331:31" pos:end="331:31">=</operator> <name pos:start="331:33" pos:end="331:35">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:89"><expr pos:start="333:17" pos:end="333:88"><call pos:start="333:17" pos:end="333:88"><name pos:start="333:17" pos:end="333:29">qemu_log_mask</name><argument_list pos:start="333:30" pos:end="333:88">(<argument pos:start="333:31" pos:end="333:42"><expr pos:start="333:31" pos:end="333:42"><name pos:start="333:31" pos:end="333:42">CPU_LOG_PAGE</name></expr></argument>, <argument pos:start="333:45" pos:end="333:72"><expr pos:start="333:45" pos:end="333:72"><literal type="string" pos:start="333:45" pos:end="333:72">"host mmap_min_addr=0x%lx\n"</literal></expr></argument>, <argument pos:start="333:75" pos:end="333:87"><expr pos:start="333:75" pos:end="333:87"><name pos:start="333:75" pos:end="333:87">mmap_min_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:23"><expr pos:start="337:13" pos:end="337:22"><call pos:start="337:13" pos:end="337:22"><name pos:start="337:13" pos:end="337:18">fclose</name><argument_list pos:start="337:19" pos:end="337:22">(<argument pos:start="337:20" pos:end="337:21"><expr pos:start="337:20" pos:end="337:21"><name pos:start="337:20" pos:end="337:21">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="345:5" pos:end="349:7">/*

     * Prepare copy of argv vector for target.

     */</comment>

    <expr_stmt pos:start="351:5" pos:end="351:32"><expr pos:start="351:5" pos:end="351:31"><name pos:start="351:5" pos:end="351:15">target_argc</name> <operator pos:start="351:17" pos:end="351:17">=</operator> <name pos:start="351:19" pos:end="351:22">argc</name> <operator pos:start="351:24" pos:end="351:24">-</operator> <name pos:start="351:26" pos:end="351:31">optind</name></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:59"><expr pos:start="353:5" pos:end="353:58"><name pos:start="353:5" pos:end="353:15">target_argv</name> <operator pos:start="353:17" pos:end="353:17">=</operator> <call pos:start="353:19" pos:end="353:58"><name pos:start="353:19" pos:end="353:24">calloc</name><argument_list pos:start="353:25" pos:end="353:58">(<argument pos:start="353:26" pos:end="353:40"><expr pos:start="353:26" pos:end="353:40"><name pos:start="353:26" pos:end="353:36">target_argc</name> <operator pos:start="353:38" pos:end="353:38">+</operator> <literal type="number" pos:start="353:40" pos:end="353:40">1</literal></expr></argument>, <argument pos:start="353:43" pos:end="353:57"><expr pos:start="353:43" pos:end="353:57"><sizeof pos:start="353:43" pos:end="353:57">sizeof <argument_list pos:start="353:50" pos:end="353:57">(<argument pos:start="353:51" pos:end="353:56"><expr pos:start="353:51" pos:end="353:56"><name pos:start="353:51" pos:end="353:54">char</name> <operator pos:start="353:56" pos:end="353:56">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="355:5" pos:end="361:5"><if pos:start="355:5" pos:end="361:5">if <condition pos:start="355:8" pos:end="355:28">(<expr pos:start="355:9" pos:end="355:27"><name pos:start="355:9" pos:end="355:19">target_argv</name> <operator pos:start="355:21" pos:end="355:22">==</operator> <name pos:start="355:24" pos:end="355:27">NULL</name></expr>)</condition> <block pos:start="355:30" pos:end="361:5">{<block_content pos:start="357:9" pos:end="359:27">

	<expr_stmt pos:start="357:9" pos:end="357:78"><expr pos:start="357:9" pos:end="357:77"><operator pos:start="357:9" pos:end="357:9">(</operator><name pos:start="357:10" pos:end="357:13">void</name><operator pos:start="357:14" pos:end="357:14">)</operator> <call pos:start="357:16" pos:end="357:77"><name pos:start="357:16" pos:end="357:22">fprintf</name><argument_list pos:start="357:23" pos:end="357:77">(<argument pos:start="357:24" pos:end="357:29"><expr pos:start="357:24" pos:end="357:29"><name pos:start="357:24" pos:end="357:29">stderr</name></expr></argument>, <argument pos:start="357:32" pos:end="357:76"><expr pos:start="357:32" pos:end="357:76"><literal type="string" pos:start="357:32" pos:end="357:76">"Unable to allocate memory for target_argv\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="359:9" pos:end="359:27"><expr pos:start="359:9" pos:end="359:26"><call pos:start="359:9" pos:end="359:26"><name pos:start="359:9" pos:end="359:12">exit</name><argument_list pos:start="359:13" pos:end="359:26">(<argument pos:start="359:14" pos:end="359:25"><expr pos:start="359:14" pos:end="359:25"><name pos:start="359:14" pos:end="359:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="365:5" pos:end="371:7">/*

     * If argv0 is specified (using '-0' switch) we replace

     * argv[0] pointer with the given one.

     */</comment>

    <expr_stmt pos:start="373:5" pos:end="373:10"><expr pos:start="373:5" pos:end="373:9"><name pos:start="373:5" pos:end="373:5">i</name> <operator pos:start="373:7" pos:end="373:7">=</operator> <literal type="number" pos:start="373:9" pos:end="373:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="375:5" pos:end="379:5"><if pos:start="375:5" pos:end="379:5">if <condition pos:start="375:8" pos:end="375:22">(<expr pos:start="375:9" pos:end="375:21"><name pos:start="375:9" pos:end="375:13">argv0</name> <operator pos:start="375:15" pos:end="375:16">!=</operator> <name pos:start="375:18" pos:end="375:21">NULL</name></expr>)</condition> <block pos:start="375:24" pos:end="379:5">{<block_content pos:start="377:9" pos:end="377:41">

        <expr_stmt pos:start="377:9" pos:end="377:41"><expr pos:start="377:9" pos:end="377:40"><name pos:start="377:9" pos:end="377:24"><name pos:start="377:9" pos:end="377:19">target_argv</name><index pos:start="377:20" pos:end="377:24">[<expr pos:start="377:21" pos:end="377:23"><name pos:start="377:21" pos:end="377:21">i</name><operator pos:start="377:22" pos:end="377:23">++</operator></expr>]</index></name> <operator pos:start="377:26" pos:end="377:26">=</operator> <call pos:start="377:28" pos:end="377:40"><name pos:start="377:28" pos:end="377:33">strdup</name><argument_list pos:start="377:34" pos:end="377:40">(<argument pos:start="377:35" pos:end="377:39"><expr pos:start="377:35" pos:end="377:39"><name pos:start="377:35" pos:end="377:39">argv0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="381:5" pos:end="385:5">for <control pos:start="381:9" pos:end="381:32">(<init pos:start="381:10" pos:end="381:10">;</init> <condition pos:start="381:12" pos:end="381:27"><expr pos:start="381:12" pos:end="381:26"><name pos:start="381:12" pos:end="381:12">i</name> <operator pos:start="381:14" pos:end="381:14">&lt;</operator> <name pos:start="381:16" pos:end="381:26">target_argc</name></expr>;</condition> <incr pos:start="381:29" pos:end="381:31"><expr pos:start="381:29" pos:end="381:31"><name pos:start="381:29" pos:end="381:29">i</name><operator pos:start="381:30" pos:end="381:31">++</operator></expr></incr>)</control> <block pos:start="381:34" pos:end="385:5">{<block_content pos:start="383:9" pos:end="383:50">

        <expr_stmt pos:start="383:9" pos:end="383:50"><expr pos:start="383:9" pos:end="383:49"><name pos:start="383:9" pos:end="383:22"><name pos:start="383:9" pos:end="383:19">target_argv</name><index pos:start="383:20" pos:end="383:22">[<expr pos:start="383:21" pos:end="383:21"><name pos:start="383:21" pos:end="383:21">i</name></expr>]</index></name> <operator pos:start="383:24" pos:end="383:24">=</operator> <call pos:start="383:26" pos:end="383:49"><name pos:start="383:26" pos:end="383:31">strdup</name><argument_list pos:start="383:32" pos:end="383:49">(<argument pos:start="383:33" pos:end="383:48"><expr pos:start="383:33" pos:end="383:48"><name pos:start="383:33" pos:end="383:48"><name pos:start="383:33" pos:end="383:36">argv</name><index pos:start="383:37" pos:end="383:48">[<expr pos:start="383:38" pos:end="383:47"><name pos:start="383:38" pos:end="383:43">optind</name> <operator pos:start="383:45" pos:end="383:45">+</operator> <name pos:start="383:47" pos:end="383:47">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="387:5" pos:end="387:36"><expr pos:start="387:5" pos:end="387:35"><name pos:start="387:5" pos:end="387:28"><name pos:start="387:5" pos:end="387:15">target_argv</name><index pos:start="387:16" pos:end="387:28">[<expr pos:start="387:17" pos:end="387:27"><name pos:start="387:17" pos:end="387:27">target_argc</name></expr>]</index></name> <operator pos:start="387:30" pos:end="387:30">=</operator> <name pos:start="387:32" pos:end="387:35">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="391:5" pos:end="391:30"><expr pos:start="391:5" pos:end="391:29"><name pos:start="391:5" pos:end="391:6">ts</name> <operator pos:start="391:8" pos:end="391:8">=</operator> <call pos:start="391:10" pos:end="391:29"><name pos:start="391:10" pos:end="391:15">g_new0</name><argument_list pos:start="391:16" pos:end="391:29">(<argument pos:start="391:17" pos:end="391:25"><expr pos:start="391:17" pos:end="391:25"><name pos:start="391:17" pos:end="391:25">TaskState</name></expr></argument>, <argument pos:start="391:28" pos:end="391:28"><expr pos:start="391:28" pos:end="391:28"><literal type="number" pos:start="391:28" pos:end="391:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="393:5" pos:end="393:24"><expr pos:start="393:5" pos:end="393:23"><call pos:start="393:5" pos:end="393:23"><name pos:start="393:5" pos:end="393:19">init_task_state</name><argument_list pos:start="393:20" pos:end="393:23">(<argument pos:start="393:21" pos:end="393:22"><expr pos:start="393:21" pos:end="393:22"><name pos:start="393:21" pos:end="393:22">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="395:5" pos:end="395:26">/* build Task State */</comment>

    <expr_stmt pos:start="397:5" pos:end="397:20"><expr pos:start="397:5" pos:end="397:19"><name pos:start="397:5" pos:end="397:12"><name pos:start="397:5" pos:end="397:6">ts</name><operator pos:start="397:7" pos:end="397:8">-&gt;</operator><name pos:start="397:9" pos:end="397:12">info</name></name> <operator pos:start="397:14" pos:end="397:14">=</operator> <name pos:start="397:16" pos:end="397:19">info</name></expr>;</expr_stmt>

    <expr_stmt pos:start="399:5" pos:end="399:21"><expr pos:start="399:5" pos:end="399:20"><name pos:start="399:5" pos:end="399:12"><name pos:start="399:5" pos:end="399:6">ts</name><operator pos:start="399:7" pos:end="399:8">-&gt;</operator><name pos:start="399:9" pos:end="399:12">bprm</name></name> <operator pos:start="399:14" pos:end="399:14">=</operator> <operator pos:start="399:16" pos:end="399:16">&amp;</operator><name pos:start="399:17" pos:end="399:20">bprm</name></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:21"><expr pos:start="401:5" pos:end="401:20"><name pos:start="401:5" pos:end="401:15"><name pos:start="401:5" pos:end="401:7">cpu</name><operator pos:start="401:8" pos:end="401:9">-&gt;</operator><name pos:start="401:10" pos:end="401:15">opaque</name></name> <operator pos:start="401:17" pos:end="401:17">=</operator> <name pos:start="401:19" pos:end="401:20">ts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="403:5" pos:end="403:20"><expr pos:start="403:5" pos:end="403:19"><call pos:start="403:5" pos:end="403:19"><name pos:start="403:5" pos:end="403:15">task_settid</name><argument_list pos:start="403:16" pos:end="403:19">(<argument pos:start="403:17" pos:end="403:18"><expr pos:start="403:17" pos:end="403:18"><name pos:start="403:17" pos:end="403:18">ts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:39"><expr pos:start="407:5" pos:end="407:38"><name pos:start="407:5" pos:end="407:10">execfd</name> <operator pos:start="407:12" pos:end="407:12">=</operator> <call pos:start="407:14" pos:end="407:38"><name pos:start="407:14" pos:end="407:27">qemu_getauxval</name><argument_list pos:start="407:28" pos:end="407:38">(<argument pos:start="407:29" pos:end="407:37"><expr pos:start="407:29" pos:end="407:37"><name pos:start="407:29" pos:end="407:37">AT_EXECFD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="409:5" pos:end="421:5"><if pos:start="409:5" pos:end="421:5">if <condition pos:start="409:8" pos:end="409:20">(<expr pos:start="409:9" pos:end="409:19"><name pos:start="409:9" pos:end="409:14">execfd</name> <operator pos:start="409:16" pos:end="409:17">==</operator> <literal type="number" pos:start="409:19" pos:end="409:19">0</literal></expr>)</condition> <block pos:start="409:22" pos:end="421:5">{<block_content pos:start="411:9" pos:end="419:9">

        <expr_stmt pos:start="411:9" pos:end="411:42"><expr pos:start="411:9" pos:end="411:41"><name pos:start="411:9" pos:end="411:14">execfd</name> <operator pos:start="411:16" pos:end="411:16">=</operator> <call pos:start="411:18" pos:end="411:41"><name pos:start="411:18" pos:end="411:21">open</name><argument_list pos:start="411:22" pos:end="411:41">(<argument pos:start="411:23" pos:end="411:30"><expr pos:start="411:23" pos:end="411:30"><name pos:start="411:23" pos:end="411:30">filename</name></expr></argument>, <argument pos:start="411:33" pos:end="411:40"><expr pos:start="411:33" pos:end="411:40"><name pos:start="411:33" pos:end="411:40">O_RDONLY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="413:9" pos:end="419:9"><if pos:start="413:9" pos:end="419:9">if <condition pos:start="413:12" pos:end="413:23">(<expr pos:start="413:13" pos:end="413:22"><name pos:start="413:13" pos:end="413:18">execfd</name> <operator pos:start="413:20" pos:end="413:20">&lt;</operator> <literal type="number" pos:start="413:22" pos:end="413:22">0</literal></expr>)</condition> <block pos:start="413:25" pos:end="419:9">{<block_content pos:start="415:13" pos:end="417:32">

            <expr_stmt pos:start="415:13" pos:end="415:78"><expr pos:start="415:13" pos:end="415:77"><call pos:start="415:13" pos:end="415:77"><name pos:start="415:13" pos:end="415:18">printf</name><argument_list pos:start="415:19" pos:end="415:77">(<argument pos:start="415:20" pos:end="415:49"><expr pos:start="415:20" pos:end="415:49"><literal type="string" pos:start="415:20" pos:end="415:49">"Error while loading %s: %s\n"</literal></expr></argument>, <argument pos:start="415:52" pos:end="415:59"><expr pos:start="415:52" pos:end="415:59"><name pos:start="415:52" pos:end="415:59">filename</name></expr></argument>, <argument pos:start="415:62" pos:end="415:76"><expr pos:start="415:62" pos:end="415:76"><call pos:start="415:62" pos:end="415:76"><name pos:start="415:62" pos:end="415:69">strerror</name><argument_list pos:start="415:70" pos:end="415:76">(<argument pos:start="415:71" pos:end="415:75"><expr pos:start="415:71" pos:end="415:75"><name pos:start="415:71" pos:end="415:75">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:32"><expr pos:start="417:13" pos:end="417:31"><call pos:start="417:13" pos:end="417:31"><name pos:start="417:13" pos:end="417:17">_exit</name><argument_list pos:start="417:18" pos:end="417:31">(<argument pos:start="417:19" pos:end="417:30"><expr pos:start="417:19" pos:end="417:30"><name pos:start="417:19" pos:end="417:30">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="425:5" pos:end="427:21"><expr pos:start="425:5" pos:end="427:20"><name pos:start="425:5" pos:end="425:7">ret</name> <operator pos:start="425:9" pos:end="425:9">=</operator> <call pos:start="425:11" pos:end="427:20"><name pos:start="425:11" pos:end="425:21">loader_exec</name><argument_list pos:start="425:22" pos:end="427:20">(<argument pos:start="425:23" pos:end="425:28"><expr pos:start="425:23" pos:end="425:28"><name pos:start="425:23" pos:end="425:28">execfd</name></expr></argument>, <argument pos:start="425:31" pos:end="425:38"><expr pos:start="425:31" pos:end="425:38"><name pos:start="425:31" pos:end="425:38">filename</name></expr></argument>, <argument pos:start="425:41" pos:end="425:51"><expr pos:start="425:41" pos:end="425:51"><name pos:start="425:41" pos:end="425:51">target_argv</name></expr></argument>, <argument pos:start="425:54" pos:end="425:67"><expr pos:start="425:54" pos:end="425:67"><name pos:start="425:54" pos:end="425:67">target_environ</name></expr></argument>, <argument pos:start="425:70" pos:end="425:73"><expr pos:start="425:70" pos:end="425:73"><name pos:start="425:70" pos:end="425:73">regs</name></expr></argument>,

        <argument pos:start="427:9" pos:end="427:12"><expr pos:start="427:9" pos:end="427:12"><name pos:start="427:9" pos:end="427:12">info</name></expr></argument>, <argument pos:start="427:15" pos:end="427:19"><expr pos:start="427:15" pos:end="427:19"><operator pos:start="427:15" pos:end="427:15">&amp;</operator><name pos:start="427:16" pos:end="427:19">bprm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="429:5" pos:end="435:5"><if pos:start="429:5" pos:end="435:5">if <condition pos:start="429:8" pos:end="429:17">(<expr pos:start="429:9" pos:end="429:16"><name pos:start="429:9" pos:end="429:11">ret</name> <operator pos:start="429:13" pos:end="429:14">!=</operator> <literal type="number" pos:start="429:16" pos:end="429:16">0</literal></expr>)</condition> <block pos:start="429:19" pos:end="435:5">{<block_content pos:start="431:9" pos:end="433:28">

        <expr_stmt pos:start="431:9" pos:end="431:73"><expr pos:start="431:9" pos:end="431:72"><call pos:start="431:9" pos:end="431:72"><name pos:start="431:9" pos:end="431:14">printf</name><argument_list pos:start="431:15" pos:end="431:72">(<argument pos:start="431:16" pos:end="431:45"><expr pos:start="431:16" pos:end="431:45"><literal type="string" pos:start="431:16" pos:end="431:45">"Error while loading %s: %s\n"</literal></expr></argument>, <argument pos:start="431:48" pos:end="431:55"><expr pos:start="431:48" pos:end="431:55"><name pos:start="431:48" pos:end="431:55">filename</name></expr></argument>, <argument pos:start="431:58" pos:end="431:71"><expr pos:start="431:58" pos:end="431:71"><call pos:start="431:58" pos:end="431:71"><name pos:start="431:58" pos:end="431:65">strerror</name><argument_list pos:start="431:66" pos:end="431:71">(<argument pos:start="431:67" pos:end="431:70"><expr pos:start="431:67" pos:end="431:70"><operator pos:start="431:67" pos:end="431:67">-</operator><name pos:start="431:68" pos:end="431:70">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:28"><expr pos:start="433:9" pos:end="433:27"><call pos:start="433:9" pos:end="433:27"><name pos:start="433:9" pos:end="433:13">_exit</name><argument_list pos:start="433:14" pos:end="433:27">(<argument pos:start="433:15" pos:end="433:26"><expr pos:start="433:15" pos:end="433:26"><name pos:start="433:15" pos:end="433:26">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="439:5" pos:end="443:5">for <control pos:start="439:9" pos:end="439:43">(<init pos:start="439:10" pos:end="439:30"><expr pos:start="439:10" pos:end="439:29"><name pos:start="439:10" pos:end="439:12">wrk</name> <operator pos:start="439:14" pos:end="439:14">=</operator> <name pos:start="439:16" pos:end="439:29">target_environ</name></expr>;</init> <condition pos:start="439:32" pos:end="439:36"><expr pos:start="439:32" pos:end="439:35"><operator pos:start="439:32" pos:end="439:32">*</operator><name pos:start="439:33" pos:end="439:35">wrk</name></expr>;</condition> <incr pos:start="439:38" pos:end="439:42"><expr pos:start="439:38" pos:end="439:42"><name pos:start="439:38" pos:end="439:40">wrk</name><operator pos:start="439:41" pos:end="439:42">++</operator></expr></incr>)</control> <block pos:start="439:45" pos:end="443:5">{<block_content pos:start="441:9" pos:end="441:19">

        <expr_stmt pos:start="441:9" pos:end="441:19"><expr pos:start="441:9" pos:end="441:18"><call pos:start="441:9" pos:end="441:18"><name pos:start="441:9" pos:end="441:12">free</name><argument_list pos:start="441:13" pos:end="441:18">(<argument pos:start="441:14" pos:end="441:17"><expr pos:start="441:14" pos:end="441:17"><operator pos:start="441:14" pos:end="441:14">*</operator><name pos:start="441:15" pos:end="441:17">wrk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="447:5" pos:end="447:25"><expr pos:start="447:5" pos:end="447:24"><call pos:start="447:5" pos:end="447:24"><name pos:start="447:5" pos:end="447:8">free</name><argument_list pos:start="447:9" pos:end="447:24">(<argument pos:start="447:10" pos:end="447:23"><expr pos:start="447:10" pos:end="447:23"><name pos:start="447:10" pos:end="447:23">target_environ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="451:5" pos:end="483:5"><if pos:start="451:5" pos:end="483:5">if <condition pos:start="451:8" pos:end="451:41">(<expr pos:start="451:9" pos:end="451:40"><call pos:start="451:9" pos:end="451:40"><name pos:start="451:9" pos:end="451:26">qemu_loglevel_mask</name><argument_list pos:start="451:27" pos:end="451:40">(<argument pos:start="451:28" pos:end="451:39"><expr pos:start="451:28" pos:end="451:39"><name pos:start="451:28" pos:end="451:39">CPU_LOG_PAGE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="451:43" pos:end="483:5">{<block_content pos:start="453:9" pos:end="481:76">

        <expr_stmt pos:start="453:9" pos:end="453:52"><expr pos:start="453:9" pos:end="453:51"><call pos:start="453:9" pos:end="453:51"><name pos:start="453:9" pos:end="453:16">qemu_log</name><argument_list pos:start="453:17" pos:end="453:51">(<argument pos:start="453:18" pos:end="453:38"><expr pos:start="453:18" pos:end="453:38"><literal type="string" pos:start="453:18" pos:end="453:38">"guest_base  0x%lx\n"</literal></expr></argument>, <argument pos:start="453:41" pos:end="453:50"><expr pos:start="453:41" pos:end="453:50"><name pos:start="453:41" pos:end="453:50">guest_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:24"><expr pos:start="455:9" pos:end="455:23"><call pos:start="455:9" pos:end="455:23"><name pos:start="455:9" pos:end="455:21">log_page_dump</name><argument_list pos:start="455:22" pos:end="455:23">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="459:9" pos:end="459:75"><expr pos:start="459:9" pos:end="459:74"><call pos:start="459:9" pos:end="459:74"><name pos:start="459:9" pos:end="459:16">qemu_log</name><argument_list pos:start="459:17" pos:end="459:74">(<argument pos:start="459:18" pos:end="459:56"><expr pos:start="459:18" pos:end="459:56"><literal type="string" pos:start="459:18" pos:end="459:33">"start_brk   0x"</literal> <name pos:start="459:35" pos:end="459:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="459:53" pos:end="459:56">"\n"</literal></expr></argument>, <argument pos:start="459:59" pos:end="459:73"><expr pos:start="459:59" pos:end="459:73"><name pos:start="459:59" pos:end="459:73"><name pos:start="459:59" pos:end="459:62">info</name><operator pos:start="459:63" pos:end="459:64">-&gt;</operator><name pos:start="459:65" pos:end="459:73">start_brk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:74"><expr pos:start="461:9" pos:end="461:73"><call pos:start="461:9" pos:end="461:73"><name pos:start="461:9" pos:end="461:16">qemu_log</name><argument_list pos:start="461:17" pos:end="461:73">(<argument pos:start="461:18" pos:end="461:56"><expr pos:start="461:18" pos:end="461:56"><literal type="string" pos:start="461:18" pos:end="461:33">"end_code    0x"</literal> <name pos:start="461:35" pos:end="461:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="461:53" pos:end="461:56">"\n"</literal></expr></argument>, <argument pos:start="461:59" pos:end="461:72"><expr pos:start="461:59" pos:end="461:72"><name pos:start="461:59" pos:end="461:72"><name pos:start="461:59" pos:end="461:62">info</name><operator pos:start="461:63" pos:end="461:64">-&gt;</operator><name pos:start="461:65" pos:end="461:72">end_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:76"><expr pos:start="463:9" pos:end="463:75"><call pos:start="463:9" pos:end="463:75"><name pos:start="463:9" pos:end="463:16">qemu_log</name><argument_list pos:start="463:17" pos:end="463:75">(<argument pos:start="463:18" pos:end="463:56"><expr pos:start="463:18" pos:end="463:56"><literal type="string" pos:start="463:18" pos:end="463:33">"start_code  0x"</literal> <name pos:start="463:35" pos:end="463:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="463:53" pos:end="463:56">"\n"</literal></expr></argument>, <argument pos:start="463:59" pos:end="463:74"><expr pos:start="463:59" pos:end="463:74"><name pos:start="463:59" pos:end="463:74"><name pos:start="463:59" pos:end="463:62">info</name><operator pos:start="463:63" pos:end="463:64">-&gt;</operator><name pos:start="463:65" pos:end="463:74">start_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:76"><expr pos:start="465:9" pos:end="465:75"><call pos:start="465:9" pos:end="465:75"><name pos:start="465:9" pos:end="465:16">qemu_log</name><argument_list pos:start="465:17" pos:end="465:75">(<argument pos:start="465:18" pos:end="465:56"><expr pos:start="465:18" pos:end="465:56"><literal type="string" pos:start="465:18" pos:end="465:33">"start_data  0x"</literal> <name pos:start="465:35" pos:end="465:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="465:53" pos:end="465:56">"\n"</literal></expr></argument>, <argument pos:start="465:59" pos:end="465:74"><expr pos:start="465:59" pos:end="465:74"><name pos:start="465:59" pos:end="465:74"><name pos:start="465:59" pos:end="465:62">info</name><operator pos:start="465:63" pos:end="465:64">-&gt;</operator><name pos:start="465:65" pos:end="465:74">start_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:74"><expr pos:start="467:9" pos:end="467:73"><call pos:start="467:9" pos:end="467:73"><name pos:start="467:9" pos:end="467:16">qemu_log</name><argument_list pos:start="467:17" pos:end="467:73">(<argument pos:start="467:18" pos:end="467:56"><expr pos:start="467:18" pos:end="467:56"><literal type="string" pos:start="467:18" pos:end="467:33">"end_data    0x"</literal> <name pos:start="467:35" pos:end="467:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="467:53" pos:end="467:56">"\n"</literal></expr></argument>, <argument pos:start="467:59" pos:end="467:72"><expr pos:start="467:59" pos:end="467:72"><name pos:start="467:59" pos:end="467:72"><name pos:start="467:59" pos:end="467:62">info</name><operator pos:start="467:63" pos:end="467:64">-&gt;</operator><name pos:start="467:65" pos:end="467:72">end_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:77"><expr pos:start="469:9" pos:end="469:76"><call pos:start="469:9" pos:end="469:76"><name pos:start="469:9" pos:end="469:16">qemu_log</name><argument_list pos:start="469:17" pos:end="469:76">(<argument pos:start="469:18" pos:end="469:56"><expr pos:start="469:18" pos:end="469:56"><literal type="string" pos:start="469:18" pos:end="469:33">"start_stack 0x"</literal> <name pos:start="469:35" pos:end="469:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="469:53" pos:end="469:56">"\n"</literal></expr></argument>, <argument pos:start="469:59" pos:end="469:75"><expr pos:start="469:59" pos:end="469:75"><name pos:start="469:59" pos:end="469:75"><name pos:start="469:59" pos:end="469:62">info</name><operator pos:start="469:63" pos:end="469:64">-&gt;</operator><name pos:start="469:65" pos:end="469:75">start_stack</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:69"><expr pos:start="471:9" pos:end="471:68"><call pos:start="471:9" pos:end="471:68"><name pos:start="471:9" pos:end="471:16">qemu_log</name><argument_list pos:start="471:17" pos:end="471:68">(<argument pos:start="471:18" pos:end="471:56"><expr pos:start="471:18" pos:end="471:56"><literal type="string" pos:start="471:18" pos:end="471:33">"brk         0x"</literal> <name pos:start="471:35" pos:end="471:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="471:53" pos:end="471:56">"\n"</literal></expr></argument>, <argument pos:start="471:59" pos:end="471:67"><expr pos:start="471:59" pos:end="471:67"><name pos:start="471:59" pos:end="471:67"><name pos:start="471:59" pos:end="471:62">info</name><operator pos:start="471:63" pos:end="471:64">-&gt;</operator><name pos:start="471:65" pos:end="471:67">brk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:71"><expr pos:start="473:9" pos:end="473:70"><call pos:start="473:9" pos:end="473:70"><name pos:start="473:9" pos:end="473:16">qemu_log</name><argument_list pos:start="473:17" pos:end="473:70">(<argument pos:start="473:18" pos:end="473:56"><expr pos:start="473:18" pos:end="473:56"><literal type="string" pos:start="473:18" pos:end="473:33">"entry       0x"</literal> <name pos:start="473:35" pos:end="473:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="473:53" pos:end="473:56">"\n"</literal></expr></argument>, <argument pos:start="473:59" pos:end="473:69"><expr pos:start="473:59" pos:end="473:69"><name pos:start="473:59" pos:end="473:69"><name pos:start="473:59" pos:end="473:62">info</name><operator pos:start="473:63" pos:end="473:64">-&gt;</operator><name pos:start="473:65" pos:end="473:69">entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="475:9" pos:end="475:75"><expr pos:start="475:9" pos:end="475:74"><call pos:start="475:9" pos:end="475:74"><name pos:start="475:9" pos:end="475:16">qemu_log</name><argument_list pos:start="475:17" pos:end="475:74">(<argument pos:start="475:18" pos:end="475:56"><expr pos:start="475:18" pos:end="475:56"><literal type="string" pos:start="475:18" pos:end="475:33">"argv_start  0x"</literal> <name pos:start="475:35" pos:end="475:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="475:53" pos:end="475:56">"\n"</literal></expr></argument>, <argument pos:start="475:59" pos:end="475:73"><expr pos:start="475:59" pos:end="475:73"><name pos:start="475:59" pos:end="475:73"><name pos:start="475:59" pos:end="475:62">info</name><operator pos:start="475:63" pos:end="475:64">-&gt;</operator><name pos:start="475:65" pos:end="475:73">arg_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="477:9" pos:end="479:63"><expr pos:start="477:9" pos:end="479:62"><call pos:start="477:9" pos:end="479:62"><name pos:start="477:9" pos:end="477:16">qemu_log</name><argument_list pos:start="477:17" pos:end="479:62">(<argument pos:start="477:18" pos:end="477:56"><expr pos:start="477:18" pos:end="477:56"><literal type="string" pos:start="477:18" pos:end="477:33">"env_start   0x"</literal> <name pos:start="477:35" pos:end="477:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="477:53" pos:end="477:56">"\n"</literal></expr></argument>,

                 <argument pos:start="479:18" pos:end="479:61"><expr pos:start="479:18" pos:end="479:61"><name pos:start="479:18" pos:end="479:30"><name pos:start="479:18" pos:end="479:21">info</name><operator pos:start="479:22" pos:end="479:23">-&gt;</operator><name pos:start="479:24" pos:end="479:30">arg_end</name></name> <operator pos:start="479:32" pos:end="479:32">+</operator> <operator pos:start="479:34" pos:end="479:34">(</operator><name pos:start="479:35" pos:end="479:43">abi_ulong</name><operator pos:start="479:44" pos:end="479:44">)</operator><sizeof pos:start="479:45" pos:end="479:61">sizeof<argument_list pos:start="479:51" pos:end="479:61">(<argument pos:start="479:52" pos:end="479:60"><expr pos:start="479:52" pos:end="479:60"><name pos:start="479:52" pos:end="479:60">abi_ulong</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:76"><expr pos:start="481:9" pos:end="481:75"><call pos:start="481:9" pos:end="481:75"><name pos:start="481:9" pos:end="481:16">qemu_log</name><argument_list pos:start="481:17" pos:end="481:75">(<argument pos:start="481:18" pos:end="481:56"><expr pos:start="481:18" pos:end="481:56"><literal type="string" pos:start="481:18" pos:end="481:33">"auxv_start  0x"</literal> <name pos:start="481:35" pos:end="481:51">TARGET_ABI_FMT_lx</name> <literal type="string" pos:start="481:53" pos:end="481:56">"\n"</literal></expr></argument>, <argument pos:start="481:59" pos:end="481:74"><expr pos:start="481:59" pos:end="481:74"><name pos:start="481:59" pos:end="481:74"><name pos:start="481:59" pos:end="481:62">info</name><operator pos:start="481:63" pos:end="481:64">-&gt;</operator><name pos:start="481:65" pos:end="481:74">saved_auxv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="487:5" pos:end="487:30"><expr pos:start="487:5" pos:end="487:29"><call pos:start="487:5" pos:end="487:29"><name pos:start="487:5" pos:end="487:18">target_set_brk</name><argument_list pos:start="487:19" pos:end="487:29">(<argument pos:start="487:20" pos:end="487:28"><expr pos:start="487:20" pos:end="487:28"><name pos:start="487:20" pos:end="487:28"><name pos:start="487:20" pos:end="487:23">info</name><operator pos:start="487:24" pos:end="487:25">-&gt;</operator><name pos:start="487:26" pos:end="487:28">brk</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="489:5" pos:end="489:19"><expr pos:start="489:5" pos:end="489:18"><call pos:start="489:5" pos:end="489:18"><name pos:start="489:5" pos:end="489:16">syscall_init</name><argument_list pos:start="489:17" pos:end="489:18">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="491:5" pos:end="491:18"><expr pos:start="491:5" pos:end="491:17"><call pos:start="491:5" pos:end="491:17"><name pos:start="491:5" pos:end="491:15">signal_init</name><argument_list pos:start="491:16" pos:end="491:17">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="495:5" pos:end="499:53">/* Now that we've loaded the binary, GUEST_BASE is fixed.  Delay

       generating the prologue until now so that the prologue can take

       the real value of GUEST_BASE into account.  */</comment>

    <expr_stmt pos:start="501:5" pos:end="506:0"><expr pos:start="501:5" pos:end="501:31"><call pos:start="501:5" pos:end="501:31"><name pos:start="501:5" pos:end="501:21">tcg_prologue_init</name><argument_list pos:start="501:22" pos:end="501:31">(<argument pos:start="501:23" pos:end="501:30"><expr pos:start="501:23" pos:end="501:30"><operator pos:start="501:23" pos:end="501:23">&amp;</operator><name pos:start="501:24" pos:end="501:30">tcg_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="505:1" pos:end="505:24">#<cpp:directive pos:start="505:2" pos:end="505:3">if</cpp:directive> <expr pos:start="505:5" pos:end="505:24"><call pos:start="505:5" pos:end="505:24"><name pos:start="505:5" pos:end="505:11">defined</name><argument_list pos:start="505:12" pos:end="505:24">(<argument pos:start="505:13" pos:end="505:23"><expr pos:start="505:13" pos:end="505:23"><name pos:start="505:13" pos:end="505:23">TARGET_I386</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="507:5" pos:end="507:57"><expr pos:start="507:5" pos:end="507:56"><name pos:start="507:5" pos:end="507:14"><name pos:start="507:5" pos:end="507:7">env</name><operator pos:start="507:8" pos:end="507:9">-&gt;</operator><name pos:start="507:10" pos:end="507:11">cr</name><index pos:start="507:12" pos:end="507:14">[<expr pos:start="507:13" pos:end="507:13"><literal type="number" pos:start="507:13" pos:end="507:13">0</literal></expr>]</index></name> <operator pos:start="507:16" pos:end="507:16">=</operator> <name pos:start="507:18" pos:end="507:28">CR0_PG_MASK</name> <operator pos:start="507:30" pos:end="507:30">|</operator> <name pos:start="507:32" pos:end="507:42">CR0_WP_MASK</name> <operator pos:start="507:44" pos:end="507:44">|</operator> <name pos:start="507:46" pos:end="507:56">CR0_PE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:44"><expr pos:start="509:5" pos:end="509:43"><name pos:start="509:5" pos:end="509:15"><name pos:start="509:5" pos:end="509:7">env</name><operator pos:start="509:8" pos:end="509:9">-&gt;</operator><name pos:start="509:10" pos:end="509:15">hflags</name></name> <operator pos:start="509:17" pos:end="509:18">|=</operator> <name pos:start="509:20" pos:end="509:29">HF_PE_MASK</name> <operator pos:start="509:31" pos:end="509:31">|</operator> <name pos:start="509:33" pos:end="509:43">HF_CPL_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="511:5" pos:end="520:0"><if pos:start="511:5" pos:end="520:0">if <condition pos:start="511:8" pos:end="511:46">(<expr pos:start="511:9" pos:end="511:45"><name pos:start="511:9" pos:end="511:33"><name pos:start="511:9" pos:end="511:11">env</name><operator pos:start="511:12" pos:end="511:13">-&gt;</operator><name pos:start="511:14" pos:end="511:21">features</name><index pos:start="511:22" pos:end="511:33">[<expr pos:start="511:23" pos:end="511:32"><name pos:start="511:23" pos:end="511:32">FEAT_1_EDX</name></expr>]</index></name> <operator pos:start="511:35" pos:end="511:35">&amp;</operator> <name pos:start="511:37" pos:end="511:45">CPUID_SSE</name></expr>)</condition> <block pos:start="511:48" pos:end="520:0">{<block_content pos:start="513:9" pos:end="515:38">

        <expr_stmt pos:start="513:9" pos:end="513:38"><expr pos:start="513:9" pos:end="513:37"><name pos:start="513:9" pos:end="513:18"><name pos:start="513:9" pos:end="513:11">env</name><operator pos:start="513:12" pos:end="513:13">-&gt;</operator><name pos:start="513:14" pos:end="513:15">cr</name><index pos:start="513:16" pos:end="513:18">[<expr pos:start="513:17" pos:end="513:17"><literal type="number" pos:start="513:17" pos:end="513:17">4</literal></expr>]</index></name> <operator pos:start="513:20" pos:end="513:21">|=</operator> <name pos:start="513:23" pos:end="513:37">CR4_OSFXSR_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="515:9" pos:end="515:38"><expr pos:start="515:9" pos:end="515:37"><name pos:start="515:9" pos:end="515:19"><name pos:start="515:9" pos:end="515:11">env</name><operator pos:start="515:12" pos:end="515:13">-&gt;</operator><name pos:start="515:14" pos:end="515:19">hflags</name></name> <operator pos:start="515:21" pos:end="515:22">|=</operator> <name pos:start="515:24" pos:end="515:37">HF_OSFXSR_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="519:1" pos:end="519:20">#<cpp:directive pos:start="519:2" pos:end="519:7">ifndef</cpp:directive> <name pos:start="519:9" pos:end="519:20">TARGET_ABI32</name></cpp:ifndef>

    <comment type="block" pos:start="521:5" pos:end="521:40">/* enable 64 bit mode if possible */</comment>

    <if_stmt pos:start="523:5" pos:end="529:5"><if pos:start="523:5" pos:end="529:5">if <condition pos:start="523:8" pos:end="523:61">(<expr pos:start="523:9" pos:end="523:60"><operator pos:start="523:9" pos:end="523:9">!</operator><operator pos:start="523:10" pos:end="523:10">(</operator><name pos:start="523:11" pos:end="523:43"><name pos:start="523:11" pos:end="523:13">env</name><operator pos:start="523:14" pos:end="523:15">-&gt;</operator><name pos:start="523:16" pos:end="523:23">features</name><index pos:start="523:24" pos:end="523:43">[<expr pos:start="523:25" pos:end="523:42"><name pos:start="523:25" pos:end="523:42">FEAT_8000_0001_EDX</name></expr>]</index></name> <operator pos:start="523:45" pos:end="523:45">&amp;</operator> <name pos:start="523:47" pos:end="523:59">CPUID_EXT2_LM</name><operator pos:start="523:60" pos:end="523:60">)</operator></expr>)</condition> <block pos:start="523:63" pos:end="529:5">{<block_content pos:start="525:9" pos:end="527:27">

        <expr_stmt pos:start="525:9" pos:end="525:79"><expr pos:start="525:9" pos:end="525:78"><call pos:start="525:9" pos:end="525:78"><name pos:start="525:9" pos:end="525:15">fprintf</name><argument_list pos:start="525:16" pos:end="525:78">(<argument pos:start="525:17" pos:end="525:22"><expr pos:start="525:17" pos:end="525:22"><name pos:start="525:17" pos:end="525:22">stderr</name></expr></argument>, <argument pos:start="525:25" pos:end="525:77"><expr pos:start="525:25" pos:end="525:77"><literal type="string" pos:start="525:25" pos:end="525:77">"The selected x86 CPU does not support 64 bit mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:27"><expr pos:start="527:9" pos:end="527:26"><call pos:start="527:9" pos:end="527:26"><name pos:start="527:9" pos:end="527:12">exit</name><argument_list pos:start="527:13" pos:end="527:26">(<argument pos:start="527:14" pos:end="527:25"><expr pos:start="527:14" pos:end="527:25"><name pos:start="527:14" pos:end="527:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="531:5" pos:end="531:31"><expr pos:start="531:5" pos:end="531:30"><name pos:start="531:5" pos:end="531:14"><name pos:start="531:5" pos:end="531:7">env</name><operator pos:start="531:8" pos:end="531:9">-&gt;</operator><name pos:start="531:10" pos:end="531:11">cr</name><index pos:start="531:12" pos:end="531:14">[<expr pos:start="531:13" pos:end="531:13"><literal type="number" pos:start="531:13" pos:end="531:13">4</literal></expr>]</index></name> <operator pos:start="531:16" pos:end="531:17">|=</operator> <name pos:start="531:19" pos:end="531:30">CR4_PAE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="533:5" pos:end="533:45"><expr pos:start="533:5" pos:end="533:44"><name pos:start="533:5" pos:end="533:13"><name pos:start="533:5" pos:end="533:7">env</name><operator pos:start="533:8" pos:end="533:9">-&gt;</operator><name pos:start="533:10" pos:end="533:13">efer</name></name> <operator pos:start="533:15" pos:end="533:16">|=</operator> <name pos:start="533:18" pos:end="533:29">MSR_EFER_LMA</name> <operator pos:start="533:31" pos:end="533:31">|</operator> <name pos:start="533:33" pos:end="533:44">MSR_EFER_LME</name></expr>;</expr_stmt>

    <expr_stmt pos:start="535:5" pos:end="538:0"><expr pos:start="535:5" pos:end="535:30"><name pos:start="535:5" pos:end="535:15"><name pos:start="535:5" pos:end="535:7">env</name><operator pos:start="535:8" pos:end="535:9">-&gt;</operator><name pos:start="535:10" pos:end="535:15">hflags</name></name> <operator pos:start="535:17" pos:end="535:18">|=</operator> <name pos:start="535:20" pos:end="535:30">HF_LMA_MASK</name></expr>;</expr_stmt>

<cpp:endif pos:start="537:1" pos:end="537:6">#<cpp:directive pos:start="537:2" pos:end="537:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="541:5" pos:end="541:71">/* flags setup : we activate the IRQs by default as in user mode */</comment>

    <expr_stmt pos:start="543:5" pos:end="550:0"><expr pos:start="543:5" pos:end="543:26"><name pos:start="543:5" pos:end="543:15"><name pos:start="543:5" pos:end="543:7">env</name><operator pos:start="543:8" pos:end="543:9">-&gt;</operator><name pos:start="543:10" pos:end="543:15">eflags</name></name> <operator pos:start="543:17" pos:end="543:18">|=</operator> <name pos:start="543:20" pos:end="543:26">IF_MASK</name></expr>;</expr_stmt>



    <comment type="block" pos:start="547:5" pos:end="547:30">/* linux register setup */</comment>

<cpp:ifndef pos:start="549:1" pos:end="549:20">#<cpp:directive pos:start="549:2" pos:end="549:7">ifndef</cpp:directive> <name pos:start="549:9" pos:end="549:20">TARGET_ABI32</name></cpp:ifndef>

    <expr_stmt pos:start="551:5" pos:end="551:33"><expr pos:start="551:5" pos:end="551:32"><name pos:start="551:5" pos:end="551:20"><name pos:start="551:5" pos:end="551:7">env</name><operator pos:start="551:8" pos:end="551:9">-&gt;</operator><name pos:start="551:10" pos:end="551:13">regs</name><index pos:start="551:14" pos:end="551:20">[<expr pos:start="551:15" pos:end="551:19"><name pos:start="551:15" pos:end="551:19">R_EAX</name></expr>]</index></name> <operator pos:start="551:22" pos:end="551:22">=</operator> <name pos:start="551:24" pos:end="551:32"><name pos:start="551:24" pos:end="551:27">regs</name><operator pos:start="551:28" pos:end="551:29">-&gt;</operator><name pos:start="551:30" pos:end="551:32">rax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="553:5" pos:end="553:33"><expr pos:start="553:5" pos:end="553:32"><name pos:start="553:5" pos:end="553:20"><name pos:start="553:5" pos:end="553:7">env</name><operator pos:start="553:8" pos:end="553:9">-&gt;</operator><name pos:start="553:10" pos:end="553:13">regs</name><index pos:start="553:14" pos:end="553:20">[<expr pos:start="553:15" pos:end="553:19"><name pos:start="553:15" pos:end="553:19">R_EBX</name></expr>]</index></name> <operator pos:start="553:22" pos:end="553:22">=</operator> <name pos:start="553:24" pos:end="553:32"><name pos:start="553:24" pos:end="553:27">regs</name><operator pos:start="553:28" pos:end="553:29">-&gt;</operator><name pos:start="553:30" pos:end="553:32">rbx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="555:5" pos:end="555:33"><expr pos:start="555:5" pos:end="555:32"><name pos:start="555:5" pos:end="555:20"><name pos:start="555:5" pos:end="555:7">env</name><operator pos:start="555:8" pos:end="555:9">-&gt;</operator><name pos:start="555:10" pos:end="555:13">regs</name><index pos:start="555:14" pos:end="555:20">[<expr pos:start="555:15" pos:end="555:19"><name pos:start="555:15" pos:end="555:19">R_ECX</name></expr>]</index></name> <operator pos:start="555:22" pos:end="555:22">=</operator> <name pos:start="555:24" pos:end="555:32"><name pos:start="555:24" pos:end="555:27">regs</name><operator pos:start="555:28" pos:end="555:29">-&gt;</operator><name pos:start="555:30" pos:end="555:32">rcx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="557:5" pos:end="557:33"><expr pos:start="557:5" pos:end="557:32"><name pos:start="557:5" pos:end="557:20"><name pos:start="557:5" pos:end="557:7">env</name><operator pos:start="557:8" pos:end="557:9">-&gt;</operator><name pos:start="557:10" pos:end="557:13">regs</name><index pos:start="557:14" pos:end="557:20">[<expr pos:start="557:15" pos:end="557:19"><name pos:start="557:15" pos:end="557:19">R_EDX</name></expr>]</index></name> <operator pos:start="557:22" pos:end="557:22">=</operator> <name pos:start="557:24" pos:end="557:32"><name pos:start="557:24" pos:end="557:27">regs</name><operator pos:start="557:28" pos:end="557:29">-&gt;</operator><name pos:start="557:30" pos:end="557:32">rdx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="559:5" pos:end="559:33"><expr pos:start="559:5" pos:end="559:32"><name pos:start="559:5" pos:end="559:20"><name pos:start="559:5" pos:end="559:7">env</name><operator pos:start="559:8" pos:end="559:9">-&gt;</operator><name pos:start="559:10" pos:end="559:13">regs</name><index pos:start="559:14" pos:end="559:20">[<expr pos:start="559:15" pos:end="559:19"><name pos:start="559:15" pos:end="559:19">R_ESI</name></expr>]</index></name> <operator pos:start="559:22" pos:end="559:22">=</operator> <name pos:start="559:24" pos:end="559:32"><name pos:start="559:24" pos:end="559:27">regs</name><operator pos:start="559:28" pos:end="559:29">-&gt;</operator><name pos:start="559:30" pos:end="559:32">rsi</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="561:5" pos:end="561:33"><expr pos:start="561:5" pos:end="561:32"><name pos:start="561:5" pos:end="561:20"><name pos:start="561:5" pos:end="561:7">env</name><operator pos:start="561:8" pos:end="561:9">-&gt;</operator><name pos:start="561:10" pos:end="561:13">regs</name><index pos:start="561:14" pos:end="561:20">[<expr pos:start="561:15" pos:end="561:19"><name pos:start="561:15" pos:end="561:19">R_EDI</name></expr>]</index></name> <operator pos:start="561:22" pos:end="561:22">=</operator> <name pos:start="561:24" pos:end="561:32"><name pos:start="561:24" pos:end="561:27">regs</name><operator pos:start="561:28" pos:end="561:29">-&gt;</operator><name pos:start="561:30" pos:end="561:32">rdi</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="563:5" pos:end="563:33"><expr pos:start="563:5" pos:end="563:32"><name pos:start="563:5" pos:end="563:20"><name pos:start="563:5" pos:end="563:7">env</name><operator pos:start="563:8" pos:end="563:9">-&gt;</operator><name pos:start="563:10" pos:end="563:13">regs</name><index pos:start="563:14" pos:end="563:20">[<expr pos:start="563:15" pos:end="563:19"><name pos:start="563:15" pos:end="563:19">R_EBP</name></expr>]</index></name> <operator pos:start="563:22" pos:end="563:22">=</operator> <name pos:start="563:24" pos:end="563:32"><name pos:start="563:24" pos:end="563:27">regs</name><operator pos:start="563:28" pos:end="563:29">-&gt;</operator><name pos:start="563:30" pos:end="563:32">rbp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="565:5" pos:end="565:33"><expr pos:start="565:5" pos:end="565:32"><name pos:start="565:5" pos:end="565:20"><name pos:start="565:5" pos:end="565:7">env</name><operator pos:start="565:8" pos:end="565:9">-&gt;</operator><name pos:start="565:10" pos:end="565:13">regs</name><index pos:start="565:14" pos:end="565:20">[<expr pos:start="565:15" pos:end="565:19"><name pos:start="565:15" pos:end="565:19">R_ESP</name></expr>]</index></name> <operator pos:start="565:22" pos:end="565:22">=</operator> <name pos:start="565:24" pos:end="565:32"><name pos:start="565:24" pos:end="565:27">regs</name><operator pos:start="565:28" pos:end="565:29">-&gt;</operator><name pos:start="565:30" pos:end="565:32">rsp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="567:5" pos:end="570:0"><expr pos:start="567:5" pos:end="567:24"><name pos:start="567:5" pos:end="567:12"><name pos:start="567:5" pos:end="567:7">env</name><operator pos:start="567:8" pos:end="567:9">-&gt;</operator><name pos:start="567:10" pos:end="567:12">eip</name></name> <operator pos:start="567:14" pos:end="567:14">=</operator> <name pos:start="567:16" pos:end="567:24"><name pos:start="567:16" pos:end="567:19">regs</name><operator pos:start="567:20" pos:end="567:21">-&gt;</operator><name pos:start="567:22" pos:end="567:24">rip</name></name></expr>;</expr_stmt>

<cpp:else pos:start="569:1" pos:end="569:5">#<cpp:directive pos:start="569:2" pos:end="569:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="571:5" pos:end="571:33"><expr pos:start="571:5" pos:end="571:32"><name pos:start="571:5" pos:end="571:20"><name pos:start="571:5" pos:end="571:7">env</name><operator pos:start="571:8" pos:end="571:9">-&gt;</operator><name pos:start="571:10" pos:end="571:13">regs</name><index pos:start="571:14" pos:end="571:20">[<expr pos:start="571:15" pos:end="571:19"><name pos:start="571:15" pos:end="571:19">R_EAX</name></expr>]</index></name> <operator pos:start="571:22" pos:end="571:22">=</operator> <name pos:start="571:24" pos:end="571:32"><name pos:start="571:24" pos:end="571:27">regs</name><operator pos:start="571:28" pos:end="571:29">-&gt;</operator><name pos:start="571:30" pos:end="571:32">eax</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="573:5" pos:end="573:33"><expr pos:start="573:5" pos:end="573:32"><name pos:start="573:5" pos:end="573:20"><name pos:start="573:5" pos:end="573:7">env</name><operator pos:start="573:8" pos:end="573:9">-&gt;</operator><name pos:start="573:10" pos:end="573:13">regs</name><index pos:start="573:14" pos:end="573:20">[<expr pos:start="573:15" pos:end="573:19"><name pos:start="573:15" pos:end="573:19">R_EBX</name></expr>]</index></name> <operator pos:start="573:22" pos:end="573:22">=</operator> <name pos:start="573:24" pos:end="573:32"><name pos:start="573:24" pos:end="573:27">regs</name><operator pos:start="573:28" pos:end="573:29">-&gt;</operator><name pos:start="573:30" pos:end="573:32">ebx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="575:5" pos:end="575:33"><expr pos:start="575:5" pos:end="575:32"><name pos:start="575:5" pos:end="575:20"><name pos:start="575:5" pos:end="575:7">env</name><operator pos:start="575:8" pos:end="575:9">-&gt;</operator><name pos:start="575:10" pos:end="575:13">regs</name><index pos:start="575:14" pos:end="575:20">[<expr pos:start="575:15" pos:end="575:19"><name pos:start="575:15" pos:end="575:19">R_ECX</name></expr>]</index></name> <operator pos:start="575:22" pos:end="575:22">=</operator> <name pos:start="575:24" pos:end="575:32"><name pos:start="575:24" pos:end="575:27">regs</name><operator pos:start="575:28" pos:end="575:29">-&gt;</operator><name pos:start="575:30" pos:end="575:32">ecx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="577:5" pos:end="577:33"><expr pos:start="577:5" pos:end="577:32"><name pos:start="577:5" pos:end="577:20"><name pos:start="577:5" pos:end="577:7">env</name><operator pos:start="577:8" pos:end="577:9">-&gt;</operator><name pos:start="577:10" pos:end="577:13">regs</name><index pos:start="577:14" pos:end="577:20">[<expr pos:start="577:15" pos:end="577:19"><name pos:start="577:15" pos:end="577:19">R_EDX</name></expr>]</index></name> <operator pos:start="577:22" pos:end="577:22">=</operator> <name pos:start="577:24" pos:end="577:32"><name pos:start="577:24" pos:end="577:27">regs</name><operator pos:start="577:28" pos:end="577:29">-&gt;</operator><name pos:start="577:30" pos:end="577:32">edx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="579:5" pos:end="579:33"><expr pos:start="579:5" pos:end="579:32"><name pos:start="579:5" pos:end="579:20"><name pos:start="579:5" pos:end="579:7">env</name><operator pos:start="579:8" pos:end="579:9">-&gt;</operator><name pos:start="579:10" pos:end="579:13">regs</name><index pos:start="579:14" pos:end="579:20">[<expr pos:start="579:15" pos:end="579:19"><name pos:start="579:15" pos:end="579:19">R_ESI</name></expr>]</index></name> <operator pos:start="579:22" pos:end="579:22">=</operator> <name pos:start="579:24" pos:end="579:32"><name pos:start="579:24" pos:end="579:27">regs</name><operator pos:start="579:28" pos:end="579:29">-&gt;</operator><name pos:start="579:30" pos:end="579:32">esi</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="581:5" pos:end="581:33"><expr pos:start="581:5" pos:end="581:32"><name pos:start="581:5" pos:end="581:20"><name pos:start="581:5" pos:end="581:7">env</name><operator pos:start="581:8" pos:end="581:9">-&gt;</operator><name pos:start="581:10" pos:end="581:13">regs</name><index pos:start="581:14" pos:end="581:20">[<expr pos:start="581:15" pos:end="581:19"><name pos:start="581:15" pos:end="581:19">R_EDI</name></expr>]</index></name> <operator pos:start="581:22" pos:end="581:22">=</operator> <name pos:start="581:24" pos:end="581:32"><name pos:start="581:24" pos:end="581:27">regs</name><operator pos:start="581:28" pos:end="581:29">-&gt;</operator><name pos:start="581:30" pos:end="581:32">edi</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="583:5" pos:end="583:33"><expr pos:start="583:5" pos:end="583:32"><name pos:start="583:5" pos:end="583:20"><name pos:start="583:5" pos:end="583:7">env</name><operator pos:start="583:8" pos:end="583:9">-&gt;</operator><name pos:start="583:10" pos:end="583:13">regs</name><index pos:start="583:14" pos:end="583:20">[<expr pos:start="583:15" pos:end="583:19"><name pos:start="583:15" pos:end="583:19">R_EBP</name></expr>]</index></name> <operator pos:start="583:22" pos:end="583:22">=</operator> <name pos:start="583:24" pos:end="583:32"><name pos:start="583:24" pos:end="583:27">regs</name><operator pos:start="583:28" pos:end="583:29">-&gt;</operator><name pos:start="583:30" pos:end="583:32">ebp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="585:5" pos:end="585:33"><expr pos:start="585:5" pos:end="585:32"><name pos:start="585:5" pos:end="585:20"><name pos:start="585:5" pos:end="585:7">env</name><operator pos:start="585:8" pos:end="585:9">-&gt;</operator><name pos:start="585:10" pos:end="585:13">regs</name><index pos:start="585:14" pos:end="585:20">[<expr pos:start="585:15" pos:end="585:19"><name pos:start="585:15" pos:end="585:19">R_ESP</name></expr>]</index></name> <operator pos:start="585:22" pos:end="585:22">=</operator> <name pos:start="585:24" pos:end="585:32"><name pos:start="585:24" pos:end="585:27">regs</name><operator pos:start="585:28" pos:end="585:29">-&gt;</operator><name pos:start="585:30" pos:end="585:32">esp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="587:5" pos:end="596:0"><expr pos:start="587:5" pos:end="587:24"><name pos:start="587:5" pos:end="587:12"><name pos:start="587:5" pos:end="587:7">env</name><operator pos:start="587:8" pos:end="587:9">-&gt;</operator><name pos:start="587:10" pos:end="587:12">eip</name></name> <operator pos:start="587:14" pos:end="587:14">=</operator> <name pos:start="587:16" pos:end="587:24"><name pos:start="587:16" pos:end="587:19">regs</name><operator pos:start="587:20" pos:end="587:21">-&gt;</operator><name pos:start="587:22" pos:end="587:24">eip</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="589:1" pos:end="589:6">#<cpp:directive pos:start="589:2" pos:end="589:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="593:5" pos:end="593:31">/* linux interrupt setup */</comment>

<cpp:ifndef pos:start="595:1" pos:end="595:20">#<cpp:directive pos:start="595:2" pos:end="595:7">ifndef</cpp:directive> <name pos:start="595:9" pos:end="595:20">TARGET_ABI32</name></cpp:ifndef>

    <expr_stmt pos:start="597:5" pos:end="600:0"><expr pos:start="597:5" pos:end="597:24"><name pos:start="597:5" pos:end="597:18"><name pos:start="597:5" pos:end="597:7">env</name><operator pos:start="597:8" pos:end="597:9">-&gt;</operator><name pos:start="597:10" pos:end="597:12">idt</name><operator pos:start="597:13" pos:end="597:13">.</operator><name pos:start="597:14" pos:end="597:18">limit</name></name> <operator pos:start="597:20" pos:end="597:20">=</operator> <literal type="number" pos:start="597:22" pos:end="597:24">511</literal></expr>;</expr_stmt>

<cpp:else pos:start="599:1" pos:end="599:5">#<cpp:directive pos:start="599:2" pos:end="599:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="601:5" pos:end="604:0"><expr pos:start="601:5" pos:end="601:24"><name pos:start="601:5" pos:end="601:18"><name pos:start="601:5" pos:end="601:7">env</name><operator pos:start="601:8" pos:end="601:9">-&gt;</operator><name pos:start="601:10" pos:end="601:12">idt</name><operator pos:start="601:13" pos:end="601:13">.</operator><name pos:start="601:14" pos:end="601:18">limit</name></name> <operator pos:start="601:20" pos:end="601:20">=</operator> <literal type="number" pos:start="601:22" pos:end="601:24">255</literal></expr>;</expr_stmt>

<cpp:endif pos:start="603:1" pos:end="603:6">#<cpp:directive pos:start="603:2" pos:end="603:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="605:5" pos:end="609:66"><expr pos:start="605:5" pos:end="609:65"><name pos:start="605:5" pos:end="605:17"><name pos:start="605:5" pos:end="605:7">env</name><operator pos:start="605:8" pos:end="605:9">-&gt;</operator><name pos:start="605:10" pos:end="605:12">idt</name><operator pos:start="605:13" pos:end="605:13">.</operator><name pos:start="605:14" pos:end="605:17">base</name></name> <operator pos:start="605:19" pos:end="605:19">=</operator> <call pos:start="605:21" pos:end="609:65"><name pos:start="605:21" pos:end="605:31">target_mmap</name><argument_list pos:start="605:32" pos:end="609:65">(<argument pos:start="605:33" pos:end="605:33"><expr pos:start="605:33" pos:end="605:33"><literal type="number" pos:start="605:33" pos:end="605:33">0</literal></expr></argument>, <argument pos:start="605:36" pos:end="605:74"><expr pos:start="605:36" pos:end="605:74"><sizeof pos:start="605:36" pos:end="605:51">sizeof<argument_list pos:start="605:42" pos:end="605:51">(<argument pos:start="605:43" pos:end="605:50"><expr pos:start="605:43" pos:end="605:50"><name pos:start="605:43" pos:end="605:50">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="605:53" pos:end="605:53">*</operator> <operator pos:start="605:55" pos:end="605:55">(</operator><name pos:start="605:56" pos:end="605:69"><name pos:start="605:56" pos:end="605:58">env</name><operator pos:start="605:59" pos:end="605:60">-&gt;</operator><name pos:start="605:61" pos:end="605:63">idt</name><operator pos:start="605:64" pos:end="605:64">.</operator><name pos:start="605:65" pos:end="605:69">limit</name></name> <operator pos:start="605:71" pos:end="605:71">+</operator> <literal type="number" pos:start="605:73" pos:end="605:73">1</literal><operator pos:start="605:74" pos:end="605:74">)</operator></expr></argument>,

                                <argument pos:start="607:33" pos:end="607:52"><expr pos:start="607:33" pos:end="607:52"><name pos:start="607:33" pos:end="607:41">PROT_READ</name><operator pos:start="607:42" pos:end="607:42">|</operator><name pos:start="607:43" pos:end="607:52">PROT_WRITE</name></expr></argument>,

                                <argument pos:start="609:33" pos:end="609:57"><expr pos:start="609:33" pos:end="609:57"><name pos:start="609:33" pos:end="609:45">MAP_ANONYMOUS</name><operator pos:start="609:46" pos:end="609:46">|</operator><name pos:start="609:47" pos:end="609:57">MAP_PRIVATE</name></expr></argument>, <argument pos:start="609:60" pos:end="609:61"><expr pos:start="609:60" pos:end="609:61"><operator pos:start="609:60" pos:end="609:60">-</operator><literal type="number" pos:start="609:61" pos:end="609:61">1</literal></expr></argument>, <argument pos:start="609:64" pos:end="609:64"><expr pos:start="609:64" pos:end="609:64"><literal type="number" pos:start="609:64" pos:end="609:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="611:5" pos:end="611:35"><expr pos:start="611:5" pos:end="611:34"><name pos:start="611:5" pos:end="611:13">idt_table</name> <operator pos:start="611:15" pos:end="611:15">=</operator> <call pos:start="611:17" pos:end="611:34"><name pos:start="611:17" pos:end="611:19">g2h</name><argument_list pos:start="611:20" pos:end="611:34">(<argument pos:start="611:21" pos:end="611:33"><expr pos:start="611:21" pos:end="611:33"><name pos:start="611:21" pos:end="611:33"><name pos:start="611:21" pos:end="611:23">env</name><operator pos:start="611:24" pos:end="611:25">-&gt;</operator><name pos:start="611:26" pos:end="611:28">idt</name><operator pos:start="611:29" pos:end="611:29">.</operator><name pos:start="611:30" pos:end="611:33">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="613:5" pos:end="613:18"><expr pos:start="613:5" pos:end="613:17"><call pos:start="613:5" pos:end="613:17"><name pos:start="613:5" pos:end="613:11">set_idt</name><argument_list pos:start="613:12" pos:end="613:17">(<argument pos:start="613:13" pos:end="613:13"><expr pos:start="613:13" pos:end="613:13"><literal type="number" pos:start="613:13" pos:end="613:13">0</literal></expr></argument>, <argument pos:start="613:16" pos:end="613:16"><expr pos:start="613:16" pos:end="613:16"><literal type="number" pos:start="613:16" pos:end="613:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="615:5" pos:end="615:18"><expr pos:start="615:5" pos:end="615:17"><call pos:start="615:5" pos:end="615:17"><name pos:start="615:5" pos:end="615:11">set_idt</name><argument_list pos:start="615:12" pos:end="615:17">(<argument pos:start="615:13" pos:end="615:13"><expr pos:start="615:13" pos:end="615:13"><literal type="number" pos:start="615:13" pos:end="615:13">1</literal></expr></argument>, <argument pos:start="615:16" pos:end="615:16"><expr pos:start="615:16" pos:end="615:16"><literal type="number" pos:start="615:16" pos:end="615:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="617:5" pos:end="617:18"><expr pos:start="617:5" pos:end="617:17"><call pos:start="617:5" pos:end="617:17"><name pos:start="617:5" pos:end="617:11">set_idt</name><argument_list pos:start="617:12" pos:end="617:17">(<argument pos:start="617:13" pos:end="617:13"><expr pos:start="617:13" pos:end="617:13"><literal type="number" pos:start="617:13" pos:end="617:13">2</literal></expr></argument>, <argument pos:start="617:16" pos:end="617:16"><expr pos:start="617:16" pos:end="617:16"><literal type="number" pos:start="617:16" pos:end="617:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="619:5" pos:end="619:18"><expr pos:start="619:5" pos:end="619:17"><call pos:start="619:5" pos:end="619:17"><name pos:start="619:5" pos:end="619:11">set_idt</name><argument_list pos:start="619:12" pos:end="619:17">(<argument pos:start="619:13" pos:end="619:13"><expr pos:start="619:13" pos:end="619:13"><literal type="number" pos:start="619:13" pos:end="619:13">3</literal></expr></argument>, <argument pos:start="619:16" pos:end="619:16"><expr pos:start="619:16" pos:end="619:16"><literal type="number" pos:start="619:16" pos:end="619:16">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="621:5" pos:end="621:18"><expr pos:start="621:5" pos:end="621:17"><call pos:start="621:5" pos:end="621:17"><name pos:start="621:5" pos:end="621:11">set_idt</name><argument_list pos:start="621:12" pos:end="621:17">(<argument pos:start="621:13" pos:end="621:13"><expr pos:start="621:13" pos:end="621:13"><literal type="number" pos:start="621:13" pos:end="621:13">4</literal></expr></argument>, <argument pos:start="621:16" pos:end="621:16"><expr pos:start="621:16" pos:end="621:16"><literal type="number" pos:start="621:16" pos:end="621:16">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="623:5" pos:end="623:18"><expr pos:start="623:5" pos:end="623:17"><call pos:start="623:5" pos:end="623:17"><name pos:start="623:5" pos:end="623:11">set_idt</name><argument_list pos:start="623:12" pos:end="623:17">(<argument pos:start="623:13" pos:end="623:13"><expr pos:start="623:13" pos:end="623:13"><literal type="number" pos:start="623:13" pos:end="623:13">5</literal></expr></argument>, <argument pos:start="623:16" pos:end="623:16"><expr pos:start="623:16" pos:end="623:16"><literal type="number" pos:start="623:16" pos:end="623:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="625:5" pos:end="625:18"><expr pos:start="625:5" pos:end="625:17"><call pos:start="625:5" pos:end="625:17"><name pos:start="625:5" pos:end="625:11">set_idt</name><argument_list pos:start="625:12" pos:end="625:17">(<argument pos:start="625:13" pos:end="625:13"><expr pos:start="625:13" pos:end="625:13"><literal type="number" pos:start="625:13" pos:end="625:13">6</literal></expr></argument>, <argument pos:start="625:16" pos:end="625:16"><expr pos:start="625:16" pos:end="625:16"><literal type="number" pos:start="625:16" pos:end="625:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="627:5" pos:end="627:18"><expr pos:start="627:5" pos:end="627:17"><call pos:start="627:5" pos:end="627:17"><name pos:start="627:5" pos:end="627:11">set_idt</name><argument_list pos:start="627:12" pos:end="627:17">(<argument pos:start="627:13" pos:end="627:13"><expr pos:start="627:13" pos:end="627:13"><literal type="number" pos:start="627:13" pos:end="627:13">7</literal></expr></argument>, <argument pos:start="627:16" pos:end="627:16"><expr pos:start="627:16" pos:end="627:16"><literal type="number" pos:start="627:16" pos:end="627:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="629:5" pos:end="629:18"><expr pos:start="629:5" pos:end="629:17"><call pos:start="629:5" pos:end="629:17"><name pos:start="629:5" pos:end="629:11">set_idt</name><argument_list pos:start="629:12" pos:end="629:17">(<argument pos:start="629:13" pos:end="629:13"><expr pos:start="629:13" pos:end="629:13"><literal type="number" pos:start="629:13" pos:end="629:13">8</literal></expr></argument>, <argument pos:start="629:16" pos:end="629:16"><expr pos:start="629:16" pos:end="629:16"><literal type="number" pos:start="629:16" pos:end="629:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="631:5" pos:end="631:18"><expr pos:start="631:5" pos:end="631:17"><call pos:start="631:5" pos:end="631:17"><name pos:start="631:5" pos:end="631:11">set_idt</name><argument_list pos:start="631:12" pos:end="631:17">(<argument pos:start="631:13" pos:end="631:13"><expr pos:start="631:13" pos:end="631:13"><literal type="number" pos:start="631:13" pos:end="631:13">9</literal></expr></argument>, <argument pos:start="631:16" pos:end="631:16"><expr pos:start="631:16" pos:end="631:16"><literal type="number" pos:start="631:16" pos:end="631:16">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="633:5" pos:end="633:19"><expr pos:start="633:5" pos:end="633:18"><call pos:start="633:5" pos:end="633:18"><name pos:start="633:5" pos:end="633:11">set_idt</name><argument_list pos:start="633:12" pos:end="633:18">(<argument pos:start="633:13" pos:end="633:14"><expr pos:start="633:13" pos:end="633:14"><literal type="number" pos:start="633:13" pos:end="633:14">10</literal></expr></argument>, <argument pos:start="633:17" pos:end="633:17"><expr pos:start="633:17" pos:end="633:17"><literal type="number" pos:start="633:17" pos:end="633:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="635:5" pos:end="635:19"><expr pos:start="635:5" pos:end="635:18"><call pos:start="635:5" pos:end="635:18"><name pos:start="635:5" pos:end="635:11">set_idt</name><argument_list pos:start="635:12" pos:end="635:18">(<argument pos:start="635:13" pos:end="635:14"><expr pos:start="635:13" pos:end="635:14"><literal type="number" pos:start="635:13" pos:end="635:14">11</literal></expr></argument>, <argument pos:start="635:17" pos:end="635:17"><expr pos:start="635:17" pos:end="635:17"><literal type="number" pos:start="635:17" pos:end="635:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="637:5" pos:end="637:19"><expr pos:start="637:5" pos:end="637:18"><call pos:start="637:5" pos:end="637:18"><name pos:start="637:5" pos:end="637:11">set_idt</name><argument_list pos:start="637:12" pos:end="637:18">(<argument pos:start="637:13" pos:end="637:14"><expr pos:start="637:13" pos:end="637:14"><literal type="number" pos:start="637:13" pos:end="637:14">12</literal></expr></argument>, <argument pos:start="637:17" pos:end="637:17"><expr pos:start="637:17" pos:end="637:17"><literal type="number" pos:start="637:17" pos:end="637:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="639:5" pos:end="639:19"><expr pos:start="639:5" pos:end="639:18"><call pos:start="639:5" pos:end="639:18"><name pos:start="639:5" pos:end="639:11">set_idt</name><argument_list pos:start="639:12" pos:end="639:18">(<argument pos:start="639:13" pos:end="639:14"><expr pos:start="639:13" pos:end="639:14"><literal type="number" pos:start="639:13" pos:end="639:14">13</literal></expr></argument>, <argument pos:start="639:17" pos:end="639:17"><expr pos:start="639:17" pos:end="639:17"><literal type="number" pos:start="639:17" pos:end="639:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="641:5" pos:end="641:19"><expr pos:start="641:5" pos:end="641:18"><call pos:start="641:5" pos:end="641:18"><name pos:start="641:5" pos:end="641:11">set_idt</name><argument_list pos:start="641:12" pos:end="641:18">(<argument pos:start="641:13" pos:end="641:14"><expr pos:start="641:13" pos:end="641:14"><literal type="number" pos:start="641:13" pos:end="641:14">14</literal></expr></argument>, <argument pos:start="641:17" pos:end="641:17"><expr pos:start="641:17" pos:end="641:17"><literal type="number" pos:start="641:17" pos:end="641:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="643:5" pos:end="643:19"><expr pos:start="643:5" pos:end="643:18"><call pos:start="643:5" pos:end="643:18"><name pos:start="643:5" pos:end="643:11">set_idt</name><argument_list pos:start="643:12" pos:end="643:18">(<argument pos:start="643:13" pos:end="643:14"><expr pos:start="643:13" pos:end="643:14"><literal type="number" pos:start="643:13" pos:end="643:14">15</literal></expr></argument>, <argument pos:start="643:17" pos:end="643:17"><expr pos:start="643:17" pos:end="643:17"><literal type="number" pos:start="643:17" pos:end="643:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="645:5" pos:end="645:19"><expr pos:start="645:5" pos:end="645:18"><call pos:start="645:5" pos:end="645:18"><name pos:start="645:5" pos:end="645:11">set_idt</name><argument_list pos:start="645:12" pos:end="645:18">(<argument pos:start="645:13" pos:end="645:14"><expr pos:start="645:13" pos:end="645:14"><literal type="number" pos:start="645:13" pos:end="645:14">16</literal></expr></argument>, <argument pos:start="645:17" pos:end="645:17"><expr pos:start="645:17" pos:end="645:17"><literal type="number" pos:start="645:17" pos:end="645:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="647:5" pos:end="647:19"><expr pos:start="647:5" pos:end="647:18"><call pos:start="647:5" pos:end="647:18"><name pos:start="647:5" pos:end="647:11">set_idt</name><argument_list pos:start="647:12" pos:end="647:18">(<argument pos:start="647:13" pos:end="647:14"><expr pos:start="647:13" pos:end="647:14"><literal type="number" pos:start="647:13" pos:end="647:14">17</literal></expr></argument>, <argument pos:start="647:17" pos:end="647:17"><expr pos:start="647:17" pos:end="647:17"><literal type="number" pos:start="647:17" pos:end="647:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="649:5" pos:end="649:19"><expr pos:start="649:5" pos:end="649:18"><call pos:start="649:5" pos:end="649:18"><name pos:start="649:5" pos:end="649:11">set_idt</name><argument_list pos:start="649:12" pos:end="649:18">(<argument pos:start="649:13" pos:end="649:14"><expr pos:start="649:13" pos:end="649:14"><literal type="number" pos:start="649:13" pos:end="649:14">18</literal></expr></argument>, <argument pos:start="649:17" pos:end="649:17"><expr pos:start="649:17" pos:end="649:17"><literal type="number" pos:start="649:17" pos:end="649:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="651:5" pos:end="651:19"><expr pos:start="651:5" pos:end="651:18"><call pos:start="651:5" pos:end="651:18"><name pos:start="651:5" pos:end="651:11">set_idt</name><argument_list pos:start="651:12" pos:end="651:18">(<argument pos:start="651:13" pos:end="651:14"><expr pos:start="651:13" pos:end="651:14"><literal type="number" pos:start="651:13" pos:end="651:14">19</literal></expr></argument>, <argument pos:start="651:17" pos:end="651:17"><expr pos:start="651:17" pos:end="651:17"><literal type="number" pos:start="651:17" pos:end="651:17">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="653:5" pos:end="653:21"><expr pos:start="653:5" pos:end="653:20"><call pos:start="653:5" pos:end="653:20"><name pos:start="653:5" pos:end="653:11">set_idt</name><argument_list pos:start="653:12" pos:end="653:20">(<argument pos:start="653:13" pos:end="653:16"><expr pos:start="653:13" pos:end="653:16"><literal type="number" pos:start="653:13" pos:end="653:16">0x80</literal></expr></argument>, <argument pos:start="653:19" pos:end="653:19"><expr pos:start="653:19" pos:end="653:19"><literal type="number" pos:start="653:19" pos:end="653:19">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="657:5" pos:end="657:29">/* linux segment setup */</comment>

    <block pos:start="659:5" pos:end="701:5">{<block_content pos:start="661:9" pos:end="699:67">

        <decl_stmt pos:start="661:9" pos:end="661:28"><decl pos:start="661:9" pos:end="661:27"><type pos:start="661:9" pos:end="661:18"><name pos:start="661:9" pos:end="661:16">uint64_t</name> <modifier pos:start="661:18" pos:end="661:18">*</modifier></type><name pos:start="661:19" pos:end="661:27">gdt_table</name></decl>;</decl_stmt>

        <expr_stmt pos:start="663:9" pos:end="667:70"><expr pos:start="663:9" pos:end="667:69"><name pos:start="663:9" pos:end="663:21"><name pos:start="663:9" pos:end="663:11">env</name><operator pos:start="663:12" pos:end="663:13">-&gt;</operator><name pos:start="663:14" pos:end="663:16">gdt</name><operator pos:start="663:17" pos:end="663:17">.</operator><name pos:start="663:18" pos:end="663:21">base</name></name> <operator pos:start="663:23" pos:end="663:23">=</operator> <call pos:start="663:25" pos:end="667:69"><name pos:start="663:25" pos:end="663:35">target_mmap</name><argument_list pos:start="663:36" pos:end="667:69">(<argument pos:start="663:37" pos:end="663:37"><expr pos:start="663:37" pos:end="663:37"><literal type="number" pos:start="663:37" pos:end="663:37">0</literal></expr></argument>, <argument pos:start="663:40" pos:end="663:76"><expr pos:start="663:40" pos:end="663:76"><sizeof pos:start="663:40" pos:end="663:55">sizeof<argument_list pos:start="663:46" pos:end="663:55">(<argument pos:start="663:47" pos:end="663:54"><expr pos:start="663:47" pos:end="663:54"><name pos:start="663:47" pos:end="663:54">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="663:57" pos:end="663:57">*</operator> <name pos:start="663:59" pos:end="663:76">TARGET_GDT_ENTRIES</name></expr></argument>,

                                    <argument pos:start="665:37" pos:end="665:56"><expr pos:start="665:37" pos:end="665:56"><name pos:start="665:37" pos:end="665:45">PROT_READ</name><operator pos:start="665:46" pos:end="665:46">|</operator><name pos:start="665:47" pos:end="665:56">PROT_WRITE</name></expr></argument>,

                                    <argument pos:start="667:37" pos:end="667:61"><expr pos:start="667:37" pos:end="667:61"><name pos:start="667:37" pos:end="667:49">MAP_ANONYMOUS</name><operator pos:start="667:50" pos:end="667:50">|</operator><name pos:start="667:51" pos:end="667:61">MAP_PRIVATE</name></expr></argument>, <argument pos:start="667:64" pos:end="667:65"><expr pos:start="667:64" pos:end="667:65"><operator pos:start="667:64" pos:end="667:64">-</operator><literal type="number" pos:start="667:65" pos:end="667:65">1</literal></expr></argument>, <argument pos:start="667:68" pos:end="667:68"><expr pos:start="667:68" pos:end="667:68"><literal type="number" pos:start="667:68" pos:end="667:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="669:9" pos:end="669:67"><expr pos:start="669:9" pos:end="669:66"><name pos:start="669:9" pos:end="669:22"><name pos:start="669:9" pos:end="669:11">env</name><operator pos:start="669:12" pos:end="669:13">-&gt;</operator><name pos:start="669:14" pos:end="669:16">gdt</name><operator pos:start="669:17" pos:end="669:17">.</operator><name pos:start="669:18" pos:end="669:22">limit</name></name> <operator pos:start="669:24" pos:end="669:24">=</operator> <sizeof pos:start="669:26" pos:end="669:41">sizeof<argument_list pos:start="669:32" pos:end="669:41">(<argument pos:start="669:33" pos:end="669:40"><expr pos:start="669:33" pos:end="669:40"><name pos:start="669:33" pos:end="669:40">uint64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="669:43" pos:end="669:43">*</operator> <name pos:start="669:45" pos:end="669:62">TARGET_GDT_ENTRIES</name> <operator pos:start="669:64" pos:end="669:64">-</operator> <literal type="number" pos:start="669:66" pos:end="669:66">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="671:9" pos:end="674:0"><expr pos:start="671:9" pos:end="671:38"><name pos:start="671:9" pos:end="671:17">gdt_table</name> <operator pos:start="671:19" pos:end="671:19">=</operator> <call pos:start="671:21" pos:end="671:38"><name pos:start="671:21" pos:end="671:23">g2h</name><argument_list pos:start="671:24" pos:end="671:38">(<argument pos:start="671:25" pos:end="671:37"><expr pos:start="671:25" pos:end="671:37"><name pos:start="671:25" pos:end="671:37"><name pos:start="671:25" pos:end="671:27">env</name><operator pos:start="671:28" pos:end="671:29">-&gt;</operator><name pos:start="671:30" pos:end="671:32">gdt</name><operator pos:start="671:33" pos:end="671:33">.</operator><name pos:start="671:34" pos:end="671:37">base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="673:1" pos:end="673:19">#<cpp:directive pos:start="673:2" pos:end="673:6">ifdef</cpp:directive> <name pos:start="673:8" pos:end="673:19">TARGET_ABI32</name></cpp:ifdef>

        <expr_stmt pos:start="675:9" pos:end="682:0"><expr pos:start="675:9" pos:end="679:66"><call pos:start="675:9" pos:end="679:66"><name pos:start="675:9" pos:end="675:16">write_dt</name><argument_list pos:start="675:17" pos:end="679:66">(<argument pos:start="675:18" pos:end="675:43"><expr pos:start="675:18" pos:end="675:43"><operator pos:start="675:18" pos:end="675:18">&amp;</operator><name pos:start="675:19" pos:end="675:43"><name pos:start="675:19" pos:end="675:27">gdt_table</name><index pos:start="675:28" pos:end="675:43">[<expr pos:start="675:29" pos:end="675:42"><name pos:start="675:29" pos:end="675:37">__USER_CS</name> <operator pos:start="675:39" pos:end="675:40">&gt;&gt;</operator> <literal type="number" pos:start="675:42" pos:end="675:42">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="675:46" pos:end="675:46"><expr pos:start="675:46" pos:end="675:46"><literal type="number" pos:start="675:46" pos:end="675:46">0</literal></expr></argument>, <argument pos:start="675:49" pos:end="675:55"><expr pos:start="675:49" pos:end="675:55"><literal type="number" pos:start="675:49" pos:end="675:55">0xfffff</literal></expr></argument>,

                 <argument pos:start="677:18" pos:end="679:65"><expr pos:start="677:18" pos:end="679:65"><name pos:start="677:18" pos:end="677:28">DESC_G_MASK</name> <operator pos:start="677:30" pos:end="677:30">|</operator> <name pos:start="677:32" pos:end="677:42">DESC_B_MASK</name> <operator pos:start="677:44" pos:end="677:44">|</operator> <name pos:start="677:46" pos:end="677:56">DESC_P_MASK</name> <operator pos:start="677:58" pos:end="677:58">|</operator> <name pos:start="677:60" pos:end="677:70">DESC_S_MASK</name> <operator pos:start="677:72" pos:end="677:72">|</operator>

                 <operator pos:start="679:18" pos:end="679:18">(</operator><literal type="number" pos:start="679:19" pos:end="679:19">3</literal> <operator pos:start="679:21" pos:end="679:22">&lt;&lt;</operator> <name pos:start="679:24" pos:end="679:37">DESC_DPL_SHIFT</name><operator pos:start="679:38" pos:end="679:38">)</operator> <operator pos:start="679:40" pos:end="679:40">|</operator> <operator pos:start="679:42" pos:end="679:42">(</operator><literal type="number" pos:start="679:43" pos:end="679:45">0xa</literal> <operator pos:start="679:47" pos:end="679:48">&lt;&lt;</operator> <name pos:start="679:50" pos:end="679:64">DESC_TYPE_SHIFT</name><operator pos:start="679:65" pos:end="679:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="681:1" pos:end="681:5">#<cpp:directive pos:start="681:2" pos:end="681:5">else</cpp:directive></cpp:else>

        <comment type="block" pos:start="683:9" pos:end="683:33">/* 64 bit code segment */</comment>

        <expr_stmt pos:start="685:9" pos:end="694:0"><expr pos:start="685:9" pos:end="691:66"><call pos:start="685:9" pos:end="691:66"><name pos:start="685:9" pos:end="685:16">write_dt</name><argument_list pos:start="685:17" pos:end="691:66">(<argument pos:start="685:18" pos:end="685:43"><expr pos:start="685:18" pos:end="685:43"><operator pos:start="685:18" pos:end="685:18">&amp;</operator><name pos:start="685:19" pos:end="685:43"><name pos:start="685:19" pos:end="685:27">gdt_table</name><index pos:start="685:28" pos:end="685:43">[<expr pos:start="685:29" pos:end="685:42"><name pos:start="685:29" pos:end="685:37">__USER_CS</name> <operator pos:start="685:39" pos:end="685:40">&gt;&gt;</operator> <literal type="number" pos:start="685:42" pos:end="685:42">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="685:46" pos:end="685:46"><expr pos:start="685:46" pos:end="685:46"><literal type="number" pos:start="685:46" pos:end="685:46">0</literal></expr></argument>, <argument pos:start="685:49" pos:end="685:55"><expr pos:start="685:49" pos:end="685:55"><literal type="number" pos:start="685:49" pos:end="685:55">0xfffff</literal></expr></argument>,

                 <argument pos:start="687:18" pos:end="691:65"><expr pos:start="687:18" pos:end="691:65"><name pos:start="687:18" pos:end="687:28">DESC_G_MASK</name> <operator pos:start="687:30" pos:end="687:30">|</operator> <name pos:start="687:32" pos:end="687:42">DESC_B_MASK</name> <operator pos:start="687:44" pos:end="687:44">|</operator> <name pos:start="687:46" pos:end="687:56">DESC_P_MASK</name> <operator pos:start="687:58" pos:end="687:58">|</operator> <name pos:start="687:60" pos:end="687:70">DESC_S_MASK</name> <operator pos:start="687:72" pos:end="687:72">|</operator>

                 <name pos:start="689:18" pos:end="689:28">DESC_L_MASK</name> <operator pos:start="689:30" pos:end="689:30">|</operator>

                 <operator pos:start="691:18" pos:end="691:18">(</operator><literal type="number" pos:start="691:19" pos:end="691:19">3</literal> <operator pos:start="691:21" pos:end="691:22">&lt;&lt;</operator> <name pos:start="691:24" pos:end="691:37">DESC_DPL_SHIFT</name><operator pos:start="691:38" pos:end="691:38">)</operator> <operator pos:start="691:40" pos:end="691:40">|</operator> <operator pos:start="691:42" pos:end="691:42">(</operator><literal type="number" pos:start="691:43" pos:end="691:45">0xa</literal> <operator pos:start="691:47" pos:end="691:48">&lt;&lt;</operator> <name pos:start="691:50" pos:end="691:64">DESC_TYPE_SHIFT</name><operator pos:start="691:65" pos:end="691:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="693:1" pos:end="693:6">#<cpp:directive pos:start="693:2" pos:end="693:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="695:9" pos:end="699:67"><expr pos:start="695:9" pos:end="699:66"><call pos:start="695:9" pos:end="699:66"><name pos:start="695:9" pos:end="695:16">write_dt</name><argument_list pos:start="695:17" pos:end="699:66">(<argument pos:start="695:18" pos:end="695:43"><expr pos:start="695:18" pos:end="695:43"><operator pos:start="695:18" pos:end="695:18">&amp;</operator><name pos:start="695:19" pos:end="695:43"><name pos:start="695:19" pos:end="695:27">gdt_table</name><index pos:start="695:28" pos:end="695:43">[<expr pos:start="695:29" pos:end="695:42"><name pos:start="695:29" pos:end="695:37">__USER_DS</name> <operator pos:start="695:39" pos:end="695:40">&gt;&gt;</operator> <literal type="number" pos:start="695:42" pos:end="695:42">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="695:46" pos:end="695:46"><expr pos:start="695:46" pos:end="695:46"><literal type="number" pos:start="695:46" pos:end="695:46">0</literal></expr></argument>, <argument pos:start="695:49" pos:end="695:55"><expr pos:start="695:49" pos:end="695:55"><literal type="number" pos:start="695:49" pos:end="695:55">0xfffff</literal></expr></argument>,

                 <argument pos:start="697:18" pos:end="699:65"><expr pos:start="697:18" pos:end="699:65"><name pos:start="697:18" pos:end="697:28">DESC_G_MASK</name> <operator pos:start="697:30" pos:end="697:30">|</operator> <name pos:start="697:32" pos:end="697:42">DESC_B_MASK</name> <operator pos:start="697:44" pos:end="697:44">|</operator> <name pos:start="697:46" pos:end="697:56">DESC_P_MASK</name> <operator pos:start="697:58" pos:end="697:58">|</operator> <name pos:start="697:60" pos:end="697:70">DESC_S_MASK</name> <operator pos:start="697:72" pos:end="697:72">|</operator>

                 <operator pos:start="699:18" pos:end="699:18">(</operator><literal type="number" pos:start="699:19" pos:end="699:19">3</literal> <operator pos:start="699:21" pos:end="699:22">&lt;&lt;</operator> <name pos:start="699:24" pos:end="699:37">DESC_DPL_SHIFT</name><operator pos:start="699:38" pos:end="699:38">)</operator> <operator pos:start="699:40" pos:end="699:40">|</operator> <operator pos:start="699:42" pos:end="699:42">(</operator><literal type="number" pos:start="699:43" pos:end="699:45">0x2</literal> <operator pos:start="699:47" pos:end="699:48">&lt;&lt;</operator> <name pos:start="699:50" pos:end="699:64">DESC_TYPE_SHIFT</name><operator pos:start="699:65" pos:end="699:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="703:5" pos:end="703:43"><expr pos:start="703:5" pos:end="703:42"><call pos:start="703:5" pos:end="703:42"><name pos:start="703:5" pos:end="703:20">cpu_x86_load_seg</name><argument_list pos:start="703:21" pos:end="703:42">(<argument pos:start="703:22" pos:end="703:24"><expr pos:start="703:22" pos:end="703:24"><name pos:start="703:22" pos:end="703:24">env</name></expr></argument>, <argument pos:start="703:27" pos:end="703:30"><expr pos:start="703:27" pos:end="703:30"><name pos:start="703:27" pos:end="703:30">R_CS</name></expr></argument>, <argument pos:start="703:33" pos:end="703:41"><expr pos:start="703:33" pos:end="703:41"><name pos:start="703:33" pos:end="703:41">__USER_CS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="705:5" pos:end="708:0"><expr pos:start="705:5" pos:end="705:42"><call pos:start="705:5" pos:end="705:42"><name pos:start="705:5" pos:end="705:20">cpu_x86_load_seg</name><argument_list pos:start="705:21" pos:end="705:42">(<argument pos:start="705:22" pos:end="705:24"><expr pos:start="705:22" pos:end="705:24"><name pos:start="705:22" pos:end="705:24">env</name></expr></argument>, <argument pos:start="705:27" pos:end="705:30"><expr pos:start="705:27" pos:end="705:30"><name pos:start="705:27" pos:end="705:30">R_SS</name></expr></argument>, <argument pos:start="705:33" pos:end="705:41"><expr pos:start="705:33" pos:end="705:41"><name pos:start="705:33" pos:end="705:41">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="707:1" pos:end="707:19">#<cpp:directive pos:start="707:2" pos:end="707:6">ifdef</cpp:directive> <name pos:start="707:8" pos:end="707:19">TARGET_ABI32</name></cpp:ifdef>

    <expr_stmt pos:start="709:5" pos:end="709:43"><expr pos:start="709:5" pos:end="709:42"><call pos:start="709:5" pos:end="709:42"><name pos:start="709:5" pos:end="709:20">cpu_x86_load_seg</name><argument_list pos:start="709:21" pos:end="709:42">(<argument pos:start="709:22" pos:end="709:24"><expr pos:start="709:22" pos:end="709:24"><name pos:start="709:22" pos:end="709:24">env</name></expr></argument>, <argument pos:start="709:27" pos:end="709:30"><expr pos:start="709:27" pos:end="709:30"><name pos:start="709:27" pos:end="709:30">R_DS</name></expr></argument>, <argument pos:start="709:33" pos:end="709:41"><expr pos:start="709:33" pos:end="709:41"><name pos:start="709:33" pos:end="709:41">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="711:5" pos:end="711:43"><expr pos:start="711:5" pos:end="711:42"><call pos:start="711:5" pos:end="711:42"><name pos:start="711:5" pos:end="711:20">cpu_x86_load_seg</name><argument_list pos:start="711:21" pos:end="711:42">(<argument pos:start="711:22" pos:end="711:24"><expr pos:start="711:22" pos:end="711:24"><name pos:start="711:22" pos:end="711:24">env</name></expr></argument>, <argument pos:start="711:27" pos:end="711:30"><expr pos:start="711:27" pos:end="711:30"><name pos:start="711:27" pos:end="711:30">R_ES</name></expr></argument>, <argument pos:start="711:33" pos:end="711:41"><expr pos:start="711:33" pos:end="711:41"><name pos:start="711:33" pos:end="711:41">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="713:5" pos:end="713:43"><expr pos:start="713:5" pos:end="713:42"><call pos:start="713:5" pos:end="713:42"><name pos:start="713:5" pos:end="713:20">cpu_x86_load_seg</name><argument_list pos:start="713:21" pos:end="713:42">(<argument pos:start="713:22" pos:end="713:24"><expr pos:start="713:22" pos:end="713:24"><name pos:start="713:22" pos:end="713:24">env</name></expr></argument>, <argument pos:start="713:27" pos:end="713:30"><expr pos:start="713:27" pos:end="713:30"><name pos:start="713:27" pos:end="713:30">R_FS</name></expr></argument>, <argument pos:start="713:33" pos:end="713:41"><expr pos:start="713:33" pos:end="713:41"><name pos:start="713:33" pos:end="713:41">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="715:5" pos:end="715:43"><expr pos:start="715:5" pos:end="715:42"><call pos:start="715:5" pos:end="715:42"><name pos:start="715:5" pos:end="715:20">cpu_x86_load_seg</name><argument_list pos:start="715:21" pos:end="715:42">(<argument pos:start="715:22" pos:end="715:24"><expr pos:start="715:22" pos:end="715:24"><name pos:start="715:22" pos:end="715:24">env</name></expr></argument>, <argument pos:start="715:27" pos:end="715:30"><expr pos:start="715:27" pos:end="715:30"><name pos:start="715:27" pos:end="715:30">R_GS</name></expr></argument>, <argument pos:start="715:33" pos:end="715:41"><expr pos:start="715:33" pos:end="715:41"><name pos:start="715:33" pos:end="715:41">__USER_DS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="717:5" pos:end="717:38">/* This hack makes Wine work... */</comment>

    <expr_stmt pos:start="719:5" pos:end="722:0"><expr pos:start="719:5" pos:end="719:32"><name pos:start="719:5" pos:end="719:19"><name pos:start="719:5" pos:end="719:7">env</name><operator pos:start="719:8" pos:end="719:9">-&gt;</operator><name pos:start="719:10" pos:end="719:13">segs</name><index pos:start="719:14" pos:end="719:19">[<expr pos:start="719:15" pos:end="719:18"><name pos:start="719:15" pos:end="719:18">R_FS</name></expr>]</index></name><operator pos:start="719:20" pos:end="719:20">.</operator><name pos:start="719:21" pos:end="719:28">selector</name> <operator pos:start="719:30" pos:end="719:30">=</operator> <literal type="number" pos:start="719:32" pos:end="719:32">0</literal></expr>;</expr_stmt>

<cpp:else pos:start="721:1" pos:end="721:5">#<cpp:directive pos:start="721:2" pos:end="721:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="723:5" pos:end="723:35"><expr pos:start="723:5" pos:end="723:34"><call pos:start="723:5" pos:end="723:34"><name pos:start="723:5" pos:end="723:20">cpu_x86_load_seg</name><argument_list pos:start="723:21" pos:end="723:34">(<argument pos:start="723:22" pos:end="723:24"><expr pos:start="723:22" pos:end="723:24"><name pos:start="723:22" pos:end="723:24">env</name></expr></argument>, <argument pos:start="723:27" pos:end="723:30"><expr pos:start="723:27" pos:end="723:30"><name pos:start="723:27" pos:end="723:30">R_DS</name></expr></argument>, <argument pos:start="723:33" pos:end="723:33"><expr pos:start="723:33" pos:end="723:33"><literal type="number" pos:start="723:33" pos:end="723:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="725:5" pos:end="725:35"><expr pos:start="725:5" pos:end="725:34"><call pos:start="725:5" pos:end="725:34"><name pos:start="725:5" pos:end="725:20">cpu_x86_load_seg</name><argument_list pos:start="725:21" pos:end="725:34">(<argument pos:start="725:22" pos:end="725:24"><expr pos:start="725:22" pos:end="725:24"><name pos:start="725:22" pos:end="725:24">env</name></expr></argument>, <argument pos:start="725:27" pos:end="725:30"><expr pos:start="725:27" pos:end="725:30"><name pos:start="725:27" pos:end="725:30">R_ES</name></expr></argument>, <argument pos:start="725:33" pos:end="725:33"><expr pos:start="725:33" pos:end="725:33"><literal type="number" pos:start="725:33" pos:end="725:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="727:5" pos:end="727:35"><expr pos:start="727:5" pos:end="727:34"><call pos:start="727:5" pos:end="727:34"><name pos:start="727:5" pos:end="727:20">cpu_x86_load_seg</name><argument_list pos:start="727:21" pos:end="727:34">(<argument pos:start="727:22" pos:end="727:24"><expr pos:start="727:22" pos:end="727:24"><name pos:start="727:22" pos:end="727:24">env</name></expr></argument>, <argument pos:start="727:27" pos:end="727:30"><expr pos:start="727:27" pos:end="727:30"><name pos:start="727:27" pos:end="727:30">R_FS</name></expr></argument>, <argument pos:start="727:33" pos:end="727:33"><expr pos:start="727:33" pos:end="727:33"><literal type="number" pos:start="727:33" pos:end="727:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="729:5" pos:end="734:0"><expr pos:start="729:5" pos:end="729:34"><call pos:start="729:5" pos:end="729:34"><name pos:start="729:5" pos:end="729:20">cpu_x86_load_seg</name><argument_list pos:start="729:21" pos:end="729:34">(<argument pos:start="729:22" pos:end="729:24"><expr pos:start="729:22" pos:end="729:24"><name pos:start="729:22" pos:end="729:24">env</name></expr></argument>, <argument pos:start="729:27" pos:end="729:30"><expr pos:start="729:27" pos:end="729:30"><name pos:start="729:27" pos:end="729:30">R_GS</name></expr></argument>, <argument pos:start="729:33" pos:end="729:33"><expr pos:start="729:33" pos:end="729:33"><literal type="number" pos:start="729:33" pos:end="729:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="731:1" pos:end="731:6">#<cpp:directive pos:start="731:2" pos:end="731:6">endif</cpp:directive></cpp:endif>

<cpp:elif pos:start="733:1" pos:end="733:29">#<cpp:directive pos:start="733:2" pos:end="733:5">elif</cpp:directive> <expr pos:start="733:7" pos:end="733:29"><call pos:start="733:7" pos:end="733:29"><name pos:start="733:7" pos:end="733:13">defined</name><argument_list pos:start="733:14" pos:end="733:29">(<argument pos:start="733:15" pos:end="733:28"><expr pos:start="733:15" pos:end="733:28"><name pos:start="733:15" pos:end="733:28">TARGET_AARCH64</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="735:5" pos:end="766:0">{<block_content pos:start="737:9" pos:end="761:34">

        <decl_stmt pos:start="737:9" pos:end="737:14"><decl pos:start="737:9" pos:end="737:13"><type pos:start="737:9" pos:end="737:11"><name pos:start="737:9" pos:end="737:11">int</name></type> <name pos:start="737:13" pos:end="737:13">i</name></decl>;</decl_stmt>



        <if_stmt pos:start="741:9" pos:end="749:9"><if pos:start="741:9" pos:end="749:9">if <condition pos:start="741:12" pos:end="741:53">(<expr pos:start="741:13" pos:end="741:52"><operator pos:start="741:13" pos:end="741:13">!</operator><operator pos:start="741:14" pos:end="741:14">(</operator><call pos:start="741:15" pos:end="741:51"><name pos:start="741:15" pos:end="741:25">arm_feature</name><argument_list pos:start="741:26" pos:end="741:51">(<argument pos:start="741:27" pos:end="741:29"><expr pos:start="741:27" pos:end="741:29"><name pos:start="741:27" pos:end="741:29">env</name></expr></argument>, <argument pos:start="741:32" pos:end="741:50"><expr pos:start="741:32" pos:end="741:50"><name pos:start="741:32" pos:end="741:50">ARM_FEATURE_AARCH64</name></expr></argument>)</argument_list></call><operator pos:start="741:52" pos:end="741:52">)</operator></expr>)</condition> <block pos:start="741:55" pos:end="749:9">{<block_content pos:start="743:13" pos:end="747:31">

            <expr_stmt pos:start="743:13" pos:end="745:75"><expr pos:start="743:13" pos:end="745:74"><call pos:start="743:13" pos:end="745:74"><name pos:start="743:13" pos:end="743:19">fprintf</name><argument_list pos:start="743:20" pos:end="745:74">(<argument pos:start="743:21" pos:end="743:26"><expr pos:start="743:21" pos:end="743:26"><name pos:start="743:21" pos:end="743:26">stderr</name></expr></argument>,

                    <argument pos:start="745:21" pos:end="745:73"><expr pos:start="745:21" pos:end="745:73"><literal type="string" pos:start="745:21" pos:end="745:73">"The selected ARM CPU does not support 64 bit mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="747:13" pos:end="747:31"><expr pos:start="747:13" pos:end="747:30"><call pos:start="747:13" pos:end="747:30"><name pos:start="747:13" pos:end="747:16">exit</name><argument_list pos:start="747:17" pos:end="747:30">(<argument pos:start="747:18" pos:end="747:29"><expr pos:start="747:18" pos:end="747:29"><name pos:start="747:18" pos:end="747:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="753:9" pos:end="757:9">for <control pos:start="753:13" pos:end="753:32">(<init pos:start="753:14" pos:end="753:19"><expr pos:start="753:14" pos:end="753:18"><name pos:start="753:14" pos:end="753:14">i</name> <operator pos:start="753:16" pos:end="753:16">=</operator> <literal type="number" pos:start="753:18" pos:end="753:18">0</literal></expr>;</init> <condition pos:start="753:21" pos:end="753:27"><expr pos:start="753:21" pos:end="753:26"><name pos:start="753:21" pos:end="753:21">i</name> <operator pos:start="753:23" pos:end="753:23">&lt;</operator> <literal type="number" pos:start="753:25" pos:end="753:26">31</literal></expr>;</condition> <incr pos:start="753:29" pos:end="753:31"><expr pos:start="753:29" pos:end="753:31"><name pos:start="753:29" pos:end="753:29">i</name><operator pos:start="753:30" pos:end="753:31">++</operator></expr></incr>)</control> <block pos:start="753:34" pos:end="757:9">{<block_content pos:start="755:13" pos:end="755:42">

            <expr_stmt pos:start="755:13" pos:end="755:42"><expr pos:start="755:13" pos:end="755:41"><name pos:start="755:13" pos:end="755:25"><name pos:start="755:13" pos:end="755:15">env</name><operator pos:start="755:16" pos:end="755:17">-&gt;</operator><name pos:start="755:18" pos:end="755:22">xregs</name><index pos:start="755:23" pos:end="755:25">[<expr pos:start="755:24" pos:end="755:24"><name pos:start="755:24" pos:end="755:24">i</name></expr>]</index></name> <operator pos:start="755:27" pos:end="755:27">=</operator> <name pos:start="755:29" pos:end="755:41"><name pos:start="755:29" pos:end="755:32">regs</name><operator pos:start="755:33" pos:end="755:34">-&gt;</operator><name pos:start="755:35" pos:end="755:38">regs</name><index pos:start="755:39" pos:end="755:41">[<expr pos:start="755:40" pos:end="755:40"><name pos:start="755:40" pos:end="755:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="759:9" pos:end="759:27"><expr pos:start="759:9" pos:end="759:26"><name pos:start="759:9" pos:end="759:15"><name pos:start="759:9" pos:end="759:11">env</name><operator pos:start="759:12" pos:end="759:13">-&gt;</operator><name pos:start="759:14" pos:end="759:15">pc</name></name> <operator pos:start="759:17" pos:end="759:17">=</operator> <name pos:start="759:19" pos:end="759:26"><name pos:start="759:19" pos:end="759:22">regs</name><operator pos:start="759:23" pos:end="759:24">-&gt;</operator><name pos:start="759:25" pos:end="759:26">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="761:9" pos:end="761:34"><expr pos:start="761:9" pos:end="761:33"><name pos:start="761:9" pos:end="761:22"><name pos:start="761:9" pos:end="761:11">env</name><operator pos:start="761:12" pos:end="761:13">-&gt;</operator><name pos:start="761:14" pos:end="761:18">xregs</name><index pos:start="761:19" pos:end="761:22">[<expr pos:start="761:20" pos:end="761:21"><literal type="number" pos:start="761:20" pos:end="761:21">31</literal></expr>]</index></name> <operator pos:start="761:24" pos:end="761:24">=</operator> <name pos:start="761:26" pos:end="761:33"><name pos:start="761:26" pos:end="761:29">regs</name><operator pos:start="761:30" pos:end="761:31">-&gt;</operator><name pos:start="761:32" pos:end="761:33">sp</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="765:1" pos:end="765:25">#<cpp:directive pos:start="765:2" pos:end="765:5">elif</cpp:directive> <expr pos:start="765:7" pos:end="765:25"><call pos:start="765:7" pos:end="765:25"><name pos:start="765:7" pos:end="765:13">defined</name><argument_list pos:start="765:14" pos:end="765:25">(<argument pos:start="765:15" pos:end="765:24"><expr pos:start="765:15" pos:end="765:24"><name pos:start="765:15" pos:end="765:24">TARGET_ARM</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="767:5" pos:end="804:0">{<block_content pos:start="769:9" pos:end="800:0">

        <decl_stmt pos:start="769:9" pos:end="769:14"><decl pos:start="769:9" pos:end="769:13"><type pos:start="769:9" pos:end="769:11"><name pos:start="769:9" pos:end="769:11">int</name></type> <name pos:start="769:13" pos:end="769:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="771:9" pos:end="773:37"><expr pos:start="771:9" pos:end="773:36"><call pos:start="771:9" pos:end="773:36"><name pos:start="771:9" pos:end="771:18">cpsr_write</name><argument_list pos:start="771:19" pos:end="773:36">(<argument pos:start="771:20" pos:end="771:22"><expr pos:start="771:20" pos:end="771:22"><name pos:start="771:20" pos:end="771:22">env</name></expr></argument>, <argument pos:start="771:25" pos:end="771:39"><expr pos:start="771:25" pos:end="771:39"><name pos:start="771:25" pos:end="771:39"><name pos:start="771:25" pos:end="771:28">regs</name><operator pos:start="771:29" pos:end="771:30">-&gt;</operator><name pos:start="771:31" pos:end="771:35">uregs</name><index pos:start="771:36" pos:end="771:39">[<expr pos:start="771:37" pos:end="771:38"><literal type="number" pos:start="771:37" pos:end="771:38">16</literal></expr>]</index></name></expr></argument>, <argument pos:start="771:42" pos:end="771:62"><expr pos:start="771:42" pos:end="771:62"><name pos:start="771:42" pos:end="771:50">CPSR_USER</name> <operator pos:start="771:52" pos:end="771:52">|</operator> <name pos:start="771:54" pos:end="771:62">CPSR_EXEC</name></expr></argument>,

                   <argument pos:start="773:20" pos:end="773:35"><expr pos:start="773:20" pos:end="773:35"><name pos:start="773:20" pos:end="773:35">CPSRWriteByInstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="775:9" pos:end="782:0">for<control pos:start="775:12" pos:end="775:31">(<init pos:start="775:13" pos:end="775:18"><expr pos:start="775:13" pos:end="775:17"><name pos:start="775:13" pos:end="775:13">i</name> <operator pos:start="775:15" pos:end="775:15">=</operator> <literal type="number" pos:start="775:17" pos:end="775:17">0</literal></expr>;</init> <condition pos:start="775:20" pos:end="775:26"><expr pos:start="775:20" pos:end="775:25"><name pos:start="775:20" pos:end="775:20">i</name> <operator pos:start="775:22" pos:end="775:22">&lt;</operator> <literal type="number" pos:start="775:24" pos:end="775:25">16</literal></expr>;</condition> <incr pos:start="775:28" pos:end="775:30"><expr pos:start="775:28" pos:end="775:30"><name pos:start="775:28" pos:end="775:28">i</name><operator pos:start="775:29" pos:end="775:30">++</operator></expr></incr>)</control> <block pos:start="775:33" pos:end="782:0">{<block_content pos:start="777:13" pos:end="777:42">

            <expr_stmt pos:start="777:13" pos:end="777:42"><expr pos:start="777:13" pos:end="777:41"><name pos:start="777:13" pos:end="777:24"><name pos:start="777:13" pos:end="777:15">env</name><operator pos:start="777:16" pos:end="777:17">-&gt;</operator><name pos:start="777:18" pos:end="777:21">regs</name><index pos:start="777:22" pos:end="777:24">[<expr pos:start="777:23" pos:end="777:23"><name pos:start="777:23" pos:end="777:23">i</name></expr>]</index></name> <operator pos:start="777:26" pos:end="777:26">=</operator> <name pos:start="777:28" pos:end="777:41"><name pos:start="777:28" pos:end="777:31">regs</name><operator pos:start="777:32" pos:end="777:33">-&gt;</operator><name pos:start="777:34" pos:end="777:38">uregs</name><index pos:start="777:39" pos:end="777:41">[<expr pos:start="777:40" pos:end="777:40"><name pos:start="777:40" pos:end="777:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:ifdef pos:start="781:1" pos:end="781:29">#<cpp:directive pos:start="781:2" pos:end="781:6">ifdef</cpp:directive> <name pos:start="781:8" pos:end="781:29">TARGET_WORDS_BIGENDIAN</name></cpp:ifdef>

        <comment type="block" pos:start="783:9" pos:end="783:26">/* Enable BE8.  */</comment>

        <if_stmt pos:start="785:9" pos:end="800:0"><if pos:start="785:9" pos:end="793:9">if <condition pos:start="785:12" pos:end="787:46">(<expr pos:start="785:13" pos:end="787:45"><call pos:start="785:13" pos:end="785:48"><name pos:start="785:13" pos:end="785:31">EF_ARM_EABI_VERSION</name><argument_list pos:start="785:32" pos:end="785:48">(<argument pos:start="785:33" pos:end="785:47"><expr pos:start="785:33" pos:end="785:47"><name pos:start="785:33" pos:end="785:47"><name pos:start="785:33" pos:end="785:36">info</name><operator pos:start="785:37" pos:end="785:38">-&gt;</operator><name pos:start="785:39" pos:end="785:47">elf_flags</name></name></expr></argument>)</argument_list></call> <operator pos:start="785:50" pos:end="785:51">&gt;=</operator> <name pos:start="785:53" pos:end="785:68">EF_ARM_EABI_VER4</name>

            <operator pos:start="787:13" pos:end="787:14">&amp;&amp;</operator> <operator pos:start="787:16" pos:end="787:16">(</operator><name pos:start="787:17" pos:end="787:31"><name pos:start="787:17" pos:end="787:20">info</name><operator pos:start="787:21" pos:end="787:22">-&gt;</operator><name pos:start="787:23" pos:end="787:31">elf_flags</name></name> <operator pos:start="787:33" pos:end="787:33">&amp;</operator> <name pos:start="787:35" pos:end="787:44">EF_ARM_BE8</name><operator pos:start="787:45" pos:end="787:45">)</operator></expr>)</condition> <block pos:start="787:48" pos:end="793:9">{<block_content pos:start="789:13" pos:end="791:47">

            <expr_stmt pos:start="789:13" pos:end="789:41"><expr pos:start="789:13" pos:end="789:40"><name pos:start="789:13" pos:end="789:30"><name pos:start="789:13" pos:end="789:15">env</name><operator pos:start="789:16" pos:end="789:17">-&gt;</operator><name pos:start="789:18" pos:end="789:30">uncached_cpsr</name></name> <operator pos:start="789:32" pos:end="789:33">|=</operator> <name pos:start="789:35" pos:end="789:40">CPSR_E</name></expr>;</expr_stmt>

            <expr_stmt pos:start="791:13" pos:end="791:47"><expr pos:start="791:13" pos:end="791:46"><name pos:start="791:13" pos:end="791:33"><name pos:start="791:13" pos:end="791:15">env</name><operator pos:start="791:16" pos:end="791:17">-&gt;</operator><name pos:start="791:18" pos:end="791:21">cp15</name><operator pos:start="791:22" pos:end="791:22">.</operator><name pos:start="791:23" pos:end="791:30">sctlr_el</name><index pos:start="791:31" pos:end="791:33">[<expr pos:start="791:32" pos:end="791:32"><literal type="number" pos:start="791:32" pos:end="791:32">1</literal></expr>]</index></name> <operator pos:start="791:35" pos:end="791:36">|=</operator> <name pos:start="791:38" pos:end="791:46">SCTLR_E0E</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="793:11" pos:end="800:0">else <block pos:start="793:16" pos:end="800:0">{<block_content pos:start="795:13" pos:end="795:45">

            <expr_stmt pos:start="795:13" pos:end="795:45"><expr pos:start="795:13" pos:end="795:44"><name pos:start="795:13" pos:end="795:33"><name pos:start="795:13" pos:end="795:15">env</name><operator pos:start="795:16" pos:end="795:17">-&gt;</operator><name pos:start="795:18" pos:end="795:21">cp15</name><operator pos:start="795:22" pos:end="795:22">.</operator><name pos:start="795:23" pos:end="795:30">sctlr_el</name><index pos:start="795:31" pos:end="795:33">[<expr pos:start="795:32" pos:end="795:32"><literal type="number" pos:start="795:32" pos:end="795:32">1</literal></expr>]</index></name> <operator pos:start="795:35" pos:end="795:36">|=</operator> <name pos:start="795:38" pos:end="795:44">SCTLR_B</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="799:1" pos:end="799:6">#<cpp:directive pos:start="799:2" pos:end="799:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>

<cpp:elif pos:start="803:1" pos:end="803:31">#<cpp:directive pos:start="803:2" pos:end="803:5">elif</cpp:directive> <expr pos:start="803:7" pos:end="803:31"><call pos:start="803:7" pos:end="803:31"><name pos:start="803:7" pos:end="803:13">defined</name><argument_list pos:start="803:14" pos:end="803:31">(<argument pos:start="803:15" pos:end="803:30"><expr pos:start="803:15" pos:end="803:30"><name pos:start="803:15" pos:end="803:30">TARGET_UNICORE32</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="805:5" pos:end="820:0">{<block_content pos:start="807:9" pos:end="815:9">

        <decl_stmt pos:start="807:9" pos:end="807:14"><decl pos:start="807:9" pos:end="807:13"><type pos:start="807:9" pos:end="807:11"><name pos:start="807:9" pos:end="807:11">int</name></type> <name pos:start="807:13" pos:end="807:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="809:9" pos:end="809:56"><expr pos:start="809:9" pos:end="809:55"><call pos:start="809:9" pos:end="809:55"><name pos:start="809:9" pos:end="809:21">cpu_asr_write</name><argument_list pos:start="809:22" pos:end="809:55">(<argument pos:start="809:23" pos:end="809:25"><expr pos:start="809:23" pos:end="809:25"><name pos:start="809:23" pos:end="809:25">env</name></expr></argument>, <argument pos:start="809:28" pos:end="809:42"><expr pos:start="809:28" pos:end="809:42"><name pos:start="809:28" pos:end="809:42"><name pos:start="809:28" pos:end="809:31">regs</name><operator pos:start="809:32" pos:end="809:33">-&gt;</operator><name pos:start="809:34" pos:end="809:38">uregs</name><index pos:start="809:39" pos:end="809:42">[<expr pos:start="809:40" pos:end="809:41"><literal type="number" pos:start="809:40" pos:end="809:41">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="809:45" pos:end="809:54"><expr pos:start="809:45" pos:end="809:54"><literal type="number" pos:start="809:45" pos:end="809:54">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="811:9" pos:end="815:9">for <control pos:start="811:13" pos:end="811:32">(<init pos:start="811:14" pos:end="811:19"><expr pos:start="811:14" pos:end="811:18"><name pos:start="811:14" pos:end="811:14">i</name> <operator pos:start="811:16" pos:end="811:16">=</operator> <literal type="number" pos:start="811:18" pos:end="811:18">0</literal></expr>;</init> <condition pos:start="811:21" pos:end="811:27"><expr pos:start="811:21" pos:end="811:26"><name pos:start="811:21" pos:end="811:21">i</name> <operator pos:start="811:23" pos:end="811:23">&lt;</operator> <literal type="number" pos:start="811:25" pos:end="811:26">32</literal></expr>;</condition> <incr pos:start="811:29" pos:end="811:31"><expr pos:start="811:29" pos:end="811:31"><name pos:start="811:29" pos:end="811:29">i</name><operator pos:start="811:30" pos:end="811:31">++</operator></expr></incr>)</control> <block pos:start="811:34" pos:end="815:9">{<block_content pos:start="813:13" pos:end="813:42">

            <expr_stmt pos:start="813:13" pos:end="813:42"><expr pos:start="813:13" pos:end="813:41"><name pos:start="813:13" pos:end="813:24"><name pos:start="813:13" pos:end="813:15">env</name><operator pos:start="813:16" pos:end="813:17">-&gt;</operator><name pos:start="813:18" pos:end="813:21">regs</name><index pos:start="813:22" pos:end="813:24">[<expr pos:start="813:23" pos:end="813:23"><name pos:start="813:23" pos:end="813:23">i</name></expr>]</index></name> <operator pos:start="813:26" pos:end="813:26">=</operator> <name pos:start="813:28" pos:end="813:41"><name pos:start="813:28" pos:end="813:31">regs</name><operator pos:start="813:32" pos:end="813:33">-&gt;</operator><name pos:start="813:34" pos:end="813:38">uregs</name><index pos:start="813:39" pos:end="813:41">[<expr pos:start="813:40" pos:end="813:40"><name pos:start="813:40" pos:end="813:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:elif pos:start="819:1" pos:end="819:27">#<cpp:directive pos:start="819:2" pos:end="819:5">elif</cpp:directive> <expr pos:start="819:7" pos:end="819:27"><call pos:start="819:7" pos:end="819:27"><name pos:start="819:7" pos:end="819:13">defined</name><argument_list pos:start="819:14" pos:end="819:27">(<argument pos:start="819:15" pos:end="819:26"><expr pos:start="819:15" pos:end="819:26"><name pos:start="819:15" pos:end="819:26">TARGET_SPARC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="821:5" pos:end="842:0">{<block_content pos:start="823:9" pos:end="837:50">

        <decl_stmt pos:start="823:9" pos:end="823:14"><decl pos:start="823:9" pos:end="823:13"><type pos:start="823:9" pos:end="823:11"><name pos:start="823:9" pos:end="823:11">int</name></type> <name pos:start="823:13" pos:end="823:13">i</name></decl>;</decl_stmt>

	<expr_stmt pos:start="825:9" pos:end="825:27"><expr pos:start="825:9" pos:end="825:26"><name pos:start="825:9" pos:end="825:15"><name pos:start="825:9" pos:end="825:11">env</name><operator pos:start="825:12" pos:end="825:13">-&gt;</operator><name pos:start="825:14" pos:end="825:15">pc</name></name> <operator pos:start="825:17" pos:end="825:17">=</operator> <name pos:start="825:19" pos:end="825:26"><name pos:start="825:19" pos:end="825:22">regs</name><operator pos:start="825:23" pos:end="825:24">-&gt;</operator><name pos:start="825:25" pos:end="825:26">pc</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="827:9" pos:end="827:29"><expr pos:start="827:9" pos:end="827:28"><name pos:start="827:9" pos:end="827:16"><name pos:start="827:9" pos:end="827:11">env</name><operator pos:start="827:12" pos:end="827:13">-&gt;</operator><name pos:start="827:14" pos:end="827:16">npc</name></name> <operator pos:start="827:18" pos:end="827:18">=</operator> <name pos:start="827:20" pos:end="827:28"><name pos:start="827:20" pos:end="827:23">regs</name><operator pos:start="827:24" pos:end="827:25">-&gt;</operator><name pos:start="827:26" pos:end="827:28">npc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="829:9" pos:end="829:25"><expr pos:start="829:9" pos:end="829:24"><name pos:start="829:9" pos:end="829:14"><name pos:start="829:9" pos:end="829:11">env</name><operator pos:start="829:12" pos:end="829:13">-&gt;</operator><name pos:start="829:14" pos:end="829:14">y</name></name> <operator pos:start="829:16" pos:end="829:16">=</operator> <name pos:start="829:18" pos:end="829:24"><name pos:start="829:18" pos:end="829:21">regs</name><operator pos:start="829:22" pos:end="829:23">-&gt;</operator><name pos:start="829:24" pos:end="829:24">y</name></name></expr>;</expr_stmt>

        <for pos:start="831:9" pos:end="833:44">for<control pos:start="831:12" pos:end="831:30">(<init pos:start="831:13" pos:end="831:18"><expr pos:start="831:13" pos:end="831:17"><name pos:start="831:13" pos:end="831:13">i</name> <operator pos:start="831:15" pos:end="831:15">=</operator> <literal type="number" pos:start="831:17" pos:end="831:17">0</literal></expr>;</init> <condition pos:start="831:20" pos:end="831:25"><expr pos:start="831:20" pos:end="831:24"><name pos:start="831:20" pos:end="831:20">i</name> <operator pos:start="831:22" pos:end="831:22">&lt;</operator> <literal type="number" pos:start="831:24" pos:end="831:24">8</literal></expr>;</condition> <incr pos:start="831:27" pos:end="831:29"><expr pos:start="831:27" pos:end="831:29"><name pos:start="831:27" pos:end="831:27">i</name><operator pos:start="831:28" pos:end="831:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="833:13" pos:end="833:44"><block_content pos:start="833:13" pos:end="833:44">

            <expr_stmt pos:start="833:13" pos:end="833:44"><expr pos:start="833:13" pos:end="833:43"><name pos:start="833:13" pos:end="833:25"><name pos:start="833:13" pos:end="833:15">env</name><operator pos:start="833:16" pos:end="833:17">-&gt;</operator><name pos:start="833:18" pos:end="833:22">gregs</name><index pos:start="833:23" pos:end="833:25">[<expr pos:start="833:24" pos:end="833:24"><name pos:start="833:24" pos:end="833:24">i</name></expr>]</index></name> <operator pos:start="833:27" pos:end="833:27">=</operator> <name pos:start="833:29" pos:end="833:43"><name pos:start="833:29" pos:end="833:32">regs</name><operator pos:start="833:33" pos:end="833:34">-&gt;</operator><name pos:start="833:35" pos:end="833:40">u_regs</name><index pos:start="833:41" pos:end="833:43">[<expr pos:start="833:42" pos:end="833:42"><name pos:start="833:42" pos:end="833:42">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="835:9" pos:end="837:50">for<control pos:start="835:12" pos:end="835:30">(<init pos:start="835:13" pos:end="835:18"><expr pos:start="835:13" pos:end="835:17"><name pos:start="835:13" pos:end="835:13">i</name> <operator pos:start="835:15" pos:end="835:15">=</operator> <literal type="number" pos:start="835:17" pos:end="835:17">0</literal></expr>;</init> <condition pos:start="835:20" pos:end="835:25"><expr pos:start="835:20" pos:end="835:24"><name pos:start="835:20" pos:end="835:20">i</name> <operator pos:start="835:22" pos:end="835:22">&lt;</operator> <literal type="number" pos:start="835:24" pos:end="835:24">8</literal></expr>;</condition> <incr pos:start="835:27" pos:end="835:29"><expr pos:start="835:27" pos:end="835:29"><name pos:start="835:27" pos:end="835:27">i</name><operator pos:start="835:28" pos:end="835:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="837:13" pos:end="837:50"><block_content pos:start="837:13" pos:end="837:50">

            <expr_stmt pos:start="837:13" pos:end="837:50"><expr pos:start="837:13" pos:end="837:49"><name pos:start="837:13" pos:end="837:27"><name pos:start="837:13" pos:end="837:15">env</name><operator pos:start="837:16" pos:end="837:17">-&gt;</operator><name pos:start="837:18" pos:end="837:24">regwptr</name><index pos:start="837:25" pos:end="837:27">[<expr pos:start="837:26" pos:end="837:26"><name pos:start="837:26" pos:end="837:26">i</name></expr>]</index></name> <operator pos:start="837:29" pos:end="837:29">=</operator> <name pos:start="837:31" pos:end="837:49"><name pos:start="837:31" pos:end="837:34">regs</name><operator pos:start="837:35" pos:end="837:36">-&gt;</operator><name pos:start="837:37" pos:end="837:42">u_regs</name><index pos:start="837:43" pos:end="837:49">[<expr pos:start="837:44" pos:end="837:48"><name pos:start="837:44" pos:end="837:44">i</name> <operator pos:start="837:46" pos:end="837:46">+</operator> <literal type="number" pos:start="837:48" pos:end="837:48">8</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block>

<cpp:elif pos:start="841:1" pos:end="841:25">#<cpp:directive pos:start="841:2" pos:end="841:5">elif</cpp:directive> <expr pos:start="841:7" pos:end="841:25"><call pos:start="841:7" pos:end="841:25"><name pos:start="841:7" pos:end="841:13">defined</name><argument_list pos:start="841:14" pos:end="841:25">(<argument pos:start="841:15" pos:end="841:24"><expr pos:start="841:15" pos:end="841:24"><name pos:start="841:15" pos:end="841:24">TARGET_PPC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="843:5" pos:end="876:0">{<block_content pos:start="845:9" pos:end="871:9">

        <decl_stmt pos:start="845:9" pos:end="850:0"><decl pos:start="845:9" pos:end="845:13"><type pos:start="845:9" pos:end="845:11"><name pos:start="845:9" pos:end="845:11">int</name></type> <name pos:start="845:13" pos:end="845:13">i</name></decl>;</decl_stmt>



<cpp:if pos:start="849:1" pos:end="849:25">#<cpp:directive pos:start="849:2" pos:end="849:3">if</cpp:directive> <expr pos:start="849:5" pos:end="849:25"><call pos:start="849:5" pos:end="849:25"><name pos:start="849:5" pos:end="849:11">defined</name><argument_list pos:start="849:12" pos:end="849:25">(<argument pos:start="849:13" pos:end="849:24"><expr pos:start="849:13" pos:end="849:24"><name pos:start="849:13" pos:end="849:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <decl_stmt pos:start="851:9" pos:end="854:0"><decl pos:start="851:9" pos:end="851:72"><type pos:start="851:9" pos:end="851:11"><name pos:start="851:9" pos:end="851:11">int</name></type> <name pos:start="851:13" pos:end="851:16">flag</name> <init pos:start="851:18" pos:end="851:72">= <expr pos:start="851:20" pos:end="851:72"><ternary pos:start="851:20" pos:end="851:72"><condition pos:start="851:20" pos:end="851:56"><expr pos:start="851:20" pos:end="851:54"><operator pos:start="851:20" pos:end="851:20">(</operator><name pos:start="851:21" pos:end="851:37"><name pos:start="851:21" pos:end="851:23">env</name><operator pos:start="851:24" pos:end="851:25">-&gt;</operator><name pos:start="851:26" pos:end="851:37">insns_flags2</name></name> <operator pos:start="851:39" pos:end="851:39">&amp;</operator> <name pos:start="851:41" pos:end="851:53">PPC2_BOOKE206</name><operator pos:start="851:54" pos:end="851:54">)</operator></expr> ?</condition><then pos:start="851:58" pos:end="851:63"> <expr pos:start="851:58" pos:end="851:63"><name pos:start="851:58" pos:end="851:63">MSR_CM</name></expr> </then><else pos:start="851:65" pos:end="851:72">: <expr pos:start="851:67" pos:end="851:72"><name pos:start="851:67" pos:end="851:72">MSR_SF</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="853:1" pos:end="853:25">#<cpp:directive pos:start="853:2" pos:end="853:3">if</cpp:directive> <expr pos:start="853:5" pos:end="853:25"><call pos:start="853:5" pos:end="853:25"><name pos:start="853:5" pos:end="853:11">defined</name><argument_list pos:start="853:12" pos:end="853:25">(<argument pos:start="853:13" pos:end="853:24"><expr pos:start="853:13" pos:end="853:24"><name pos:start="853:13" pos:end="853:24">TARGET_ABI32</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="855:9" pos:end="858:0"><expr pos:start="855:9" pos:end="855:46"><name pos:start="855:9" pos:end="855:16"><name pos:start="855:9" pos:end="855:11">env</name><operator pos:start="855:12" pos:end="855:13">-&gt;</operator><name pos:start="855:14" pos:end="855:16">msr</name></name> <operator pos:start="855:18" pos:end="855:19">&amp;=</operator> <operator pos:start="855:21" pos:end="855:21">~</operator><operator pos:start="855:22" pos:end="855:22">(</operator><operator pos:start="855:23" pos:end="855:23">(</operator><name pos:start="855:24" pos:end="855:35">target_ulong</name><operator pos:start="855:36" pos:end="855:36">)</operator><literal type="number" pos:start="855:37" pos:end="855:37">1</literal> <operator pos:start="855:39" pos:end="855:40">&lt;&lt;</operator> <name pos:start="855:42" pos:end="855:45">flag</name><operator pos:start="855:46" pos:end="855:46">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="857:1" pos:end="857:5">#<cpp:directive pos:start="857:2" pos:end="857:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="859:9" pos:end="864:0"><expr pos:start="859:9" pos:end="859:43"><name pos:start="859:9" pos:end="859:16"><name pos:start="859:9" pos:end="859:11">env</name><operator pos:start="859:12" pos:end="859:13">-&gt;</operator><name pos:start="859:14" pos:end="859:16">msr</name></name> <operator pos:start="859:18" pos:end="859:19">|=</operator> <operator pos:start="859:21" pos:end="859:21">(</operator><name pos:start="859:22" pos:end="859:33">target_ulong</name><operator pos:start="859:34" pos:end="859:34">)</operator><literal type="number" pos:start="859:35" pos:end="859:35">1</literal> <operator pos:start="859:37" pos:end="859:38">&lt;&lt;</operator> <name pos:start="859:40" pos:end="859:43">flag</name></expr>;</expr_stmt>

<cpp:endif pos:start="861:1" pos:end="861:6">#<cpp:directive pos:start="861:2" pos:end="861:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="863:1" pos:end="863:6">#<cpp:directive pos:start="863:2" pos:end="863:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="865:9" pos:end="865:29"><expr pos:start="865:9" pos:end="865:28"><name pos:start="865:9" pos:end="865:16"><name pos:start="865:9" pos:end="865:11">env</name><operator pos:start="865:12" pos:end="865:13">-&gt;</operator><name pos:start="865:14" pos:end="865:16">nip</name></name> <operator pos:start="865:18" pos:end="865:18">=</operator> <name pos:start="865:20" pos:end="865:28"><name pos:start="865:20" pos:end="865:23">regs</name><operator pos:start="865:24" pos:end="865:25">-&gt;</operator><name pos:start="865:26" pos:end="865:28">nip</name></name></expr>;</expr_stmt>

        <for pos:start="867:9" pos:end="871:9">for<control pos:start="867:12" pos:end="867:31">(<init pos:start="867:13" pos:end="867:18"><expr pos:start="867:13" pos:end="867:17"><name pos:start="867:13" pos:end="867:13">i</name> <operator pos:start="867:15" pos:end="867:15">=</operator> <literal type="number" pos:start="867:17" pos:end="867:17">0</literal></expr>;</init> <condition pos:start="867:20" pos:end="867:26"><expr pos:start="867:20" pos:end="867:25"><name pos:start="867:20" pos:end="867:20">i</name> <operator pos:start="867:22" pos:end="867:22">&lt;</operator> <literal type="number" pos:start="867:24" pos:end="867:25">32</literal></expr>;</condition> <incr pos:start="867:28" pos:end="867:30"><expr pos:start="867:28" pos:end="867:30"><name pos:start="867:28" pos:end="867:28">i</name><operator pos:start="867:29" pos:end="867:30">++</operator></expr></incr>)</control> <block pos:start="867:33" pos:end="871:9">{<block_content pos:start="869:13" pos:end="869:39">

            <expr_stmt pos:start="869:13" pos:end="869:39"><expr pos:start="869:13" pos:end="869:38"><name pos:start="869:13" pos:end="869:23"><name pos:start="869:13" pos:end="869:15">env</name><operator pos:start="869:16" pos:end="869:17">-&gt;</operator><name pos:start="869:18" pos:end="869:20">gpr</name><index pos:start="869:21" pos:end="869:23">[<expr pos:start="869:22" pos:end="869:22"><name pos:start="869:22" pos:end="869:22">i</name></expr>]</index></name> <operator pos:start="869:25" pos:end="869:25">=</operator> <name pos:start="869:27" pos:end="869:38"><name pos:start="869:27" pos:end="869:30">regs</name><operator pos:start="869:31" pos:end="869:32">-&gt;</operator><name pos:start="869:33" pos:end="869:35">gpr</name><index pos:start="869:36" pos:end="869:38">[<expr pos:start="869:37" pos:end="869:37"><name pos:start="869:37" pos:end="869:37">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block>

<cpp:elif pos:start="875:1" pos:end="875:26">#<cpp:directive pos:start="875:2" pos:end="875:5">elif</cpp:directive> <expr pos:start="875:7" pos:end="875:26"><call pos:start="875:7" pos:end="875:26"><name pos:start="875:7" pos:end="875:13">defined</name><argument_list pos:start="875:14" pos:end="875:26">(<argument pos:start="875:15" pos:end="875:25"><expr pos:start="875:15" pos:end="875:25"><name pos:start="875:15" pos:end="875:25">TARGET_M68K</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="877:5" pos:end="920:0">{<block_content pos:start="879:9" pos:end="915:29">

        <expr_stmt pos:start="879:9" pos:end="879:27"><expr pos:start="879:9" pos:end="879:26"><name pos:start="879:9" pos:end="879:15"><name pos:start="879:9" pos:end="879:11">env</name><operator pos:start="879:12" pos:end="879:13">-&gt;</operator><name pos:start="879:14" pos:end="879:15">pc</name></name> <operator pos:start="879:17" pos:end="879:17">=</operator> <name pos:start="879:19" pos:end="879:26"><name pos:start="879:19" pos:end="879:22">regs</name><operator pos:start="879:23" pos:end="879:24">-&gt;</operator><name pos:start="879:25" pos:end="879:26">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="881:9" pos:end="881:33"><expr pos:start="881:9" pos:end="881:32"><name pos:start="881:9" pos:end="881:21"><name pos:start="881:9" pos:end="881:11">env</name><operator pos:start="881:12" pos:end="881:13">-&gt;</operator><name pos:start="881:14" pos:end="881:18">dregs</name><index pos:start="881:19" pos:end="881:21">[<expr pos:start="881:20" pos:end="881:20"><literal type="number" pos:start="881:20" pos:end="881:20">0</literal></expr>]</index></name> <operator pos:start="881:23" pos:end="881:23">=</operator> <name pos:start="881:25" pos:end="881:32"><name pos:start="881:25" pos:end="881:28">regs</name><operator pos:start="881:29" pos:end="881:30">-&gt;</operator><name pos:start="881:31" pos:end="881:32">d0</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="883:9" pos:end="883:33"><expr pos:start="883:9" pos:end="883:32"><name pos:start="883:9" pos:end="883:21"><name pos:start="883:9" pos:end="883:11">env</name><operator pos:start="883:12" pos:end="883:13">-&gt;</operator><name pos:start="883:14" pos:end="883:18">dregs</name><index pos:start="883:19" pos:end="883:21">[<expr pos:start="883:20" pos:end="883:20"><literal type="number" pos:start="883:20" pos:end="883:20">1</literal></expr>]</index></name> <operator pos:start="883:23" pos:end="883:23">=</operator> <name pos:start="883:25" pos:end="883:32"><name pos:start="883:25" pos:end="883:28">regs</name><operator pos:start="883:29" pos:end="883:30">-&gt;</operator><name pos:start="883:31" pos:end="883:32">d1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="885:9" pos:end="885:33"><expr pos:start="885:9" pos:end="885:32"><name pos:start="885:9" pos:end="885:21"><name pos:start="885:9" pos:end="885:11">env</name><operator pos:start="885:12" pos:end="885:13">-&gt;</operator><name pos:start="885:14" pos:end="885:18">dregs</name><index pos:start="885:19" pos:end="885:21">[<expr pos:start="885:20" pos:end="885:20"><literal type="number" pos:start="885:20" pos:end="885:20">2</literal></expr>]</index></name> <operator pos:start="885:23" pos:end="885:23">=</operator> <name pos:start="885:25" pos:end="885:32"><name pos:start="885:25" pos:end="885:28">regs</name><operator pos:start="885:29" pos:end="885:30">-&gt;</operator><name pos:start="885:31" pos:end="885:32">d2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:33"><expr pos:start="887:9" pos:end="887:32"><name pos:start="887:9" pos:end="887:21"><name pos:start="887:9" pos:end="887:11">env</name><operator pos:start="887:12" pos:end="887:13">-&gt;</operator><name pos:start="887:14" pos:end="887:18">dregs</name><index pos:start="887:19" pos:end="887:21">[<expr pos:start="887:20" pos:end="887:20"><literal type="number" pos:start="887:20" pos:end="887:20">3</literal></expr>]</index></name> <operator pos:start="887:23" pos:end="887:23">=</operator> <name pos:start="887:25" pos:end="887:32"><name pos:start="887:25" pos:end="887:28">regs</name><operator pos:start="887:29" pos:end="887:30">-&gt;</operator><name pos:start="887:31" pos:end="887:32">d3</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="889:9" pos:end="889:33"><expr pos:start="889:9" pos:end="889:32"><name pos:start="889:9" pos:end="889:21"><name pos:start="889:9" pos:end="889:11">env</name><operator pos:start="889:12" pos:end="889:13">-&gt;</operator><name pos:start="889:14" pos:end="889:18">dregs</name><index pos:start="889:19" pos:end="889:21">[<expr pos:start="889:20" pos:end="889:20"><literal type="number" pos:start="889:20" pos:end="889:20">4</literal></expr>]</index></name> <operator pos:start="889:23" pos:end="889:23">=</operator> <name pos:start="889:25" pos:end="889:32"><name pos:start="889:25" pos:end="889:28">regs</name><operator pos:start="889:29" pos:end="889:30">-&gt;</operator><name pos:start="889:31" pos:end="889:32">d4</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="891:9" pos:end="891:33"><expr pos:start="891:9" pos:end="891:32"><name pos:start="891:9" pos:end="891:21"><name pos:start="891:9" pos:end="891:11">env</name><operator pos:start="891:12" pos:end="891:13">-&gt;</operator><name pos:start="891:14" pos:end="891:18">dregs</name><index pos:start="891:19" pos:end="891:21">[<expr pos:start="891:20" pos:end="891:20"><literal type="number" pos:start="891:20" pos:end="891:20">5</literal></expr>]</index></name> <operator pos:start="891:23" pos:end="891:23">=</operator> <name pos:start="891:25" pos:end="891:32"><name pos:start="891:25" pos:end="891:28">regs</name><operator pos:start="891:29" pos:end="891:30">-&gt;</operator><name pos:start="891:31" pos:end="891:32">d5</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="893:9" pos:end="893:33"><expr pos:start="893:9" pos:end="893:32"><name pos:start="893:9" pos:end="893:21"><name pos:start="893:9" pos:end="893:11">env</name><operator pos:start="893:12" pos:end="893:13">-&gt;</operator><name pos:start="893:14" pos:end="893:18">dregs</name><index pos:start="893:19" pos:end="893:21">[<expr pos:start="893:20" pos:end="893:20"><literal type="number" pos:start="893:20" pos:end="893:20">6</literal></expr>]</index></name> <operator pos:start="893:23" pos:end="893:23">=</operator> <name pos:start="893:25" pos:end="893:32"><name pos:start="893:25" pos:end="893:28">regs</name><operator pos:start="893:29" pos:end="893:30">-&gt;</operator><name pos:start="893:31" pos:end="893:32">d6</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="895:9" pos:end="895:33"><expr pos:start="895:9" pos:end="895:32"><name pos:start="895:9" pos:end="895:21"><name pos:start="895:9" pos:end="895:11">env</name><operator pos:start="895:12" pos:end="895:13">-&gt;</operator><name pos:start="895:14" pos:end="895:18">dregs</name><index pos:start="895:19" pos:end="895:21">[<expr pos:start="895:20" pos:end="895:20"><literal type="number" pos:start="895:20" pos:end="895:20">7</literal></expr>]</index></name> <operator pos:start="895:23" pos:end="895:23">=</operator> <name pos:start="895:25" pos:end="895:32"><name pos:start="895:25" pos:end="895:28">regs</name><operator pos:start="895:29" pos:end="895:30">-&gt;</operator><name pos:start="895:31" pos:end="895:32">d7</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="897:9" pos:end="897:33"><expr pos:start="897:9" pos:end="897:32"><name pos:start="897:9" pos:end="897:21"><name pos:start="897:9" pos:end="897:11">env</name><operator pos:start="897:12" pos:end="897:13">-&gt;</operator><name pos:start="897:14" pos:end="897:18">aregs</name><index pos:start="897:19" pos:end="897:21">[<expr pos:start="897:20" pos:end="897:20"><literal type="number" pos:start="897:20" pos:end="897:20">0</literal></expr>]</index></name> <operator pos:start="897:23" pos:end="897:23">=</operator> <name pos:start="897:25" pos:end="897:32"><name pos:start="897:25" pos:end="897:28">regs</name><operator pos:start="897:29" pos:end="897:30">-&gt;</operator><name pos:start="897:31" pos:end="897:32">a0</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="899:9" pos:end="899:33"><expr pos:start="899:9" pos:end="899:32"><name pos:start="899:9" pos:end="899:21"><name pos:start="899:9" pos:end="899:11">env</name><operator pos:start="899:12" pos:end="899:13">-&gt;</operator><name pos:start="899:14" pos:end="899:18">aregs</name><index pos:start="899:19" pos:end="899:21">[<expr pos:start="899:20" pos:end="899:20"><literal type="number" pos:start="899:20" pos:end="899:20">1</literal></expr>]</index></name> <operator pos:start="899:23" pos:end="899:23">=</operator> <name pos:start="899:25" pos:end="899:32"><name pos:start="899:25" pos:end="899:28">regs</name><operator pos:start="899:29" pos:end="899:30">-&gt;</operator><name pos:start="899:31" pos:end="899:32">a1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="901:9" pos:end="901:33"><expr pos:start="901:9" pos:end="901:32"><name pos:start="901:9" pos:end="901:21"><name pos:start="901:9" pos:end="901:11">env</name><operator pos:start="901:12" pos:end="901:13">-&gt;</operator><name pos:start="901:14" pos:end="901:18">aregs</name><index pos:start="901:19" pos:end="901:21">[<expr pos:start="901:20" pos:end="901:20"><literal type="number" pos:start="901:20" pos:end="901:20">2</literal></expr>]</index></name> <operator pos:start="901:23" pos:end="901:23">=</operator> <name pos:start="901:25" pos:end="901:32"><name pos:start="901:25" pos:end="901:28">regs</name><operator pos:start="901:29" pos:end="901:30">-&gt;</operator><name pos:start="901:31" pos:end="901:32">a2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="903:9" pos:end="903:33"><expr pos:start="903:9" pos:end="903:32"><name pos:start="903:9" pos:end="903:21"><name pos:start="903:9" pos:end="903:11">env</name><operator pos:start="903:12" pos:end="903:13">-&gt;</operator><name pos:start="903:14" pos:end="903:18">aregs</name><index pos:start="903:19" pos:end="903:21">[<expr pos:start="903:20" pos:end="903:20"><literal type="number" pos:start="903:20" pos:end="903:20">3</literal></expr>]</index></name> <operator pos:start="903:23" pos:end="903:23">=</operator> <name pos:start="903:25" pos:end="903:32"><name pos:start="903:25" pos:end="903:28">regs</name><operator pos:start="903:29" pos:end="903:30">-&gt;</operator><name pos:start="903:31" pos:end="903:32">a3</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="905:9" pos:end="905:33"><expr pos:start="905:9" pos:end="905:32"><name pos:start="905:9" pos:end="905:21"><name pos:start="905:9" pos:end="905:11">env</name><operator pos:start="905:12" pos:end="905:13">-&gt;</operator><name pos:start="905:14" pos:end="905:18">aregs</name><index pos:start="905:19" pos:end="905:21">[<expr pos:start="905:20" pos:end="905:20"><literal type="number" pos:start="905:20" pos:end="905:20">4</literal></expr>]</index></name> <operator pos:start="905:23" pos:end="905:23">=</operator> <name pos:start="905:25" pos:end="905:32"><name pos:start="905:25" pos:end="905:28">regs</name><operator pos:start="905:29" pos:end="905:30">-&gt;</operator><name pos:start="905:31" pos:end="905:32">a4</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="907:9" pos:end="907:33"><expr pos:start="907:9" pos:end="907:32"><name pos:start="907:9" pos:end="907:21"><name pos:start="907:9" pos:end="907:11">env</name><operator pos:start="907:12" pos:end="907:13">-&gt;</operator><name pos:start="907:14" pos:end="907:18">aregs</name><index pos:start="907:19" pos:end="907:21">[<expr pos:start="907:20" pos:end="907:20"><literal type="number" pos:start="907:20" pos:end="907:20">5</literal></expr>]</index></name> <operator pos:start="907:23" pos:end="907:23">=</operator> <name pos:start="907:25" pos:end="907:32"><name pos:start="907:25" pos:end="907:28">regs</name><operator pos:start="907:29" pos:end="907:30">-&gt;</operator><name pos:start="907:31" pos:end="907:32">a5</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="909:9" pos:end="909:33"><expr pos:start="909:9" pos:end="909:32"><name pos:start="909:9" pos:end="909:21"><name pos:start="909:9" pos:end="909:11">env</name><operator pos:start="909:12" pos:end="909:13">-&gt;</operator><name pos:start="909:14" pos:end="909:18">aregs</name><index pos:start="909:19" pos:end="909:21">[<expr pos:start="909:20" pos:end="909:20"><literal type="number" pos:start="909:20" pos:end="909:20">6</literal></expr>]</index></name> <operator pos:start="909:23" pos:end="909:23">=</operator> <name pos:start="909:25" pos:end="909:32"><name pos:start="909:25" pos:end="909:28">regs</name><operator pos:start="909:29" pos:end="909:30">-&gt;</operator><name pos:start="909:31" pos:end="909:32">a6</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="911:9" pos:end="911:34"><expr pos:start="911:9" pos:end="911:33"><name pos:start="911:9" pos:end="911:21"><name pos:start="911:9" pos:end="911:11">env</name><operator pos:start="911:12" pos:end="911:13">-&gt;</operator><name pos:start="911:14" pos:end="911:18">aregs</name><index pos:start="911:19" pos:end="911:21">[<expr pos:start="911:20" pos:end="911:20"><literal type="number" pos:start="911:20" pos:end="911:20">7</literal></expr>]</index></name> <operator pos:start="911:23" pos:end="911:23">=</operator> <name pos:start="911:25" pos:end="911:33"><name pos:start="911:25" pos:end="911:28">regs</name><operator pos:start="911:29" pos:end="911:30">-&gt;</operator><name pos:start="911:31" pos:end="911:33">usp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="913:9" pos:end="913:27"><expr pos:start="913:9" pos:end="913:26"><name pos:start="913:9" pos:end="913:15"><name pos:start="913:9" pos:end="913:11">env</name><operator pos:start="913:12" pos:end="913:13">-&gt;</operator><name pos:start="913:14" pos:end="913:15">sr</name></name> <operator pos:start="913:17" pos:end="913:17">=</operator> <name pos:start="913:19" pos:end="913:26"><name pos:start="913:19" pos:end="913:22">regs</name><operator pos:start="913:23" pos:end="913:24">-&gt;</operator><name pos:start="913:25" pos:end="913:26">sr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="915:9" pos:end="915:29"><expr pos:start="915:9" pos:end="915:28"><name pos:start="915:9" pos:end="915:24"><name pos:start="915:9" pos:end="915:10">ts</name><operator pos:start="915:11" pos:end="915:12">-&gt;</operator><name pos:start="915:13" pos:end="915:24">sim_syscalls</name></name> <operator pos:start="915:26" pos:end="915:26">=</operator> <literal type="number" pos:start="915:28" pos:end="915:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="919:1" pos:end="919:32">#<cpp:directive pos:start="919:2" pos:end="919:5">elif</cpp:directive> <expr pos:start="919:7" pos:end="919:32"><call pos:start="919:7" pos:end="919:32"><name pos:start="919:7" pos:end="919:13">defined</name><argument_list pos:start="919:14" pos:end="919:32">(<argument pos:start="919:15" pos:end="919:31"><expr pos:start="919:15" pos:end="919:31"><name pos:start="919:15" pos:end="919:31">TARGET_MICROBLAZE</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="921:5" pos:end="992:0">{<block_content pos:start="923:9" pos:end="987:37">

        <expr_stmt pos:start="923:9" pos:end="923:32"><expr pos:start="923:9" pos:end="923:31"><name pos:start="923:9" pos:end="923:20"><name pos:start="923:9" pos:end="923:11">env</name><operator pos:start="923:12" pos:end="923:13">-&gt;</operator><name pos:start="923:14" pos:end="923:17">regs</name><index pos:start="923:18" pos:end="923:20">[<expr pos:start="923:19" pos:end="923:19"><literal type="number" pos:start="923:19" pos:end="923:19">0</literal></expr>]</index></name> <operator pos:start="923:22" pos:end="923:22">=</operator> <name pos:start="923:24" pos:end="923:31"><name pos:start="923:24" pos:end="923:27">regs</name><operator pos:start="923:28" pos:end="923:29">-&gt;</operator><name pos:start="923:30" pos:end="923:31">r0</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="925:9" pos:end="925:32"><expr pos:start="925:9" pos:end="925:31"><name pos:start="925:9" pos:end="925:20"><name pos:start="925:9" pos:end="925:11">env</name><operator pos:start="925:12" pos:end="925:13">-&gt;</operator><name pos:start="925:14" pos:end="925:17">regs</name><index pos:start="925:18" pos:end="925:20">[<expr pos:start="925:19" pos:end="925:19"><literal type="number" pos:start="925:19" pos:end="925:19">1</literal></expr>]</index></name> <operator pos:start="925:22" pos:end="925:22">=</operator> <name pos:start="925:24" pos:end="925:31"><name pos:start="925:24" pos:end="925:27">regs</name><operator pos:start="925:28" pos:end="925:29">-&gt;</operator><name pos:start="925:30" pos:end="925:31">r1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="927:9" pos:end="927:32"><expr pos:start="927:9" pos:end="927:31"><name pos:start="927:9" pos:end="927:20"><name pos:start="927:9" pos:end="927:11">env</name><operator pos:start="927:12" pos:end="927:13">-&gt;</operator><name pos:start="927:14" pos:end="927:17">regs</name><index pos:start="927:18" pos:end="927:20">[<expr pos:start="927:19" pos:end="927:19"><literal type="number" pos:start="927:19" pos:end="927:19">2</literal></expr>]</index></name> <operator pos:start="927:22" pos:end="927:22">=</operator> <name pos:start="927:24" pos:end="927:31"><name pos:start="927:24" pos:end="927:27">regs</name><operator pos:start="927:28" pos:end="927:29">-&gt;</operator><name pos:start="927:30" pos:end="927:31">r2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:32"><expr pos:start="929:9" pos:end="929:31"><name pos:start="929:9" pos:end="929:20"><name pos:start="929:9" pos:end="929:11">env</name><operator pos:start="929:12" pos:end="929:13">-&gt;</operator><name pos:start="929:14" pos:end="929:17">regs</name><index pos:start="929:18" pos:end="929:20">[<expr pos:start="929:19" pos:end="929:19"><literal type="number" pos:start="929:19" pos:end="929:19">3</literal></expr>]</index></name> <operator pos:start="929:22" pos:end="929:22">=</operator> <name pos:start="929:24" pos:end="929:31"><name pos:start="929:24" pos:end="929:27">regs</name><operator pos:start="929:28" pos:end="929:29">-&gt;</operator><name pos:start="929:30" pos:end="929:31">r3</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="931:9" pos:end="931:32"><expr pos:start="931:9" pos:end="931:31"><name pos:start="931:9" pos:end="931:20"><name pos:start="931:9" pos:end="931:11">env</name><operator pos:start="931:12" pos:end="931:13">-&gt;</operator><name pos:start="931:14" pos:end="931:17">regs</name><index pos:start="931:18" pos:end="931:20">[<expr pos:start="931:19" pos:end="931:19"><literal type="number" pos:start="931:19" pos:end="931:19">4</literal></expr>]</index></name> <operator pos:start="931:22" pos:end="931:22">=</operator> <name pos:start="931:24" pos:end="931:31"><name pos:start="931:24" pos:end="931:27">regs</name><operator pos:start="931:28" pos:end="931:29">-&gt;</operator><name pos:start="931:30" pos:end="931:31">r4</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="933:9" pos:end="933:32"><expr pos:start="933:9" pos:end="933:31"><name pos:start="933:9" pos:end="933:20"><name pos:start="933:9" pos:end="933:11">env</name><operator pos:start="933:12" pos:end="933:13">-&gt;</operator><name pos:start="933:14" pos:end="933:17">regs</name><index pos:start="933:18" pos:end="933:20">[<expr pos:start="933:19" pos:end="933:19"><literal type="number" pos:start="933:19" pos:end="933:19">5</literal></expr>]</index></name> <operator pos:start="933:22" pos:end="933:22">=</operator> <name pos:start="933:24" pos:end="933:31"><name pos:start="933:24" pos:end="933:27">regs</name><operator pos:start="933:28" pos:end="933:29">-&gt;</operator><name pos:start="933:30" pos:end="933:31">r5</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="935:9" pos:end="935:32"><expr pos:start="935:9" pos:end="935:31"><name pos:start="935:9" pos:end="935:20"><name pos:start="935:9" pos:end="935:11">env</name><operator pos:start="935:12" pos:end="935:13">-&gt;</operator><name pos:start="935:14" pos:end="935:17">regs</name><index pos:start="935:18" pos:end="935:20">[<expr pos:start="935:19" pos:end="935:19"><literal type="number" pos:start="935:19" pos:end="935:19">6</literal></expr>]</index></name> <operator pos:start="935:22" pos:end="935:22">=</operator> <name pos:start="935:24" pos:end="935:31"><name pos:start="935:24" pos:end="935:27">regs</name><operator pos:start="935:28" pos:end="935:29">-&gt;</operator><name pos:start="935:30" pos:end="935:31">r6</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="937:9" pos:end="937:32"><expr pos:start="937:9" pos:end="937:31"><name pos:start="937:9" pos:end="937:20"><name pos:start="937:9" pos:end="937:11">env</name><operator pos:start="937:12" pos:end="937:13">-&gt;</operator><name pos:start="937:14" pos:end="937:17">regs</name><index pos:start="937:18" pos:end="937:20">[<expr pos:start="937:19" pos:end="937:19"><literal type="number" pos:start="937:19" pos:end="937:19">7</literal></expr>]</index></name> <operator pos:start="937:22" pos:end="937:22">=</operator> <name pos:start="937:24" pos:end="937:31"><name pos:start="937:24" pos:end="937:27">regs</name><operator pos:start="937:28" pos:end="937:29">-&gt;</operator><name pos:start="937:30" pos:end="937:31">r7</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="939:9" pos:end="939:32"><expr pos:start="939:9" pos:end="939:31"><name pos:start="939:9" pos:end="939:20"><name pos:start="939:9" pos:end="939:11">env</name><operator pos:start="939:12" pos:end="939:13">-&gt;</operator><name pos:start="939:14" pos:end="939:17">regs</name><index pos:start="939:18" pos:end="939:20">[<expr pos:start="939:19" pos:end="939:19"><literal type="number" pos:start="939:19" pos:end="939:19">8</literal></expr>]</index></name> <operator pos:start="939:22" pos:end="939:22">=</operator> <name pos:start="939:24" pos:end="939:31"><name pos:start="939:24" pos:end="939:27">regs</name><operator pos:start="939:28" pos:end="939:29">-&gt;</operator><name pos:start="939:30" pos:end="939:31">r8</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="941:9" pos:end="941:32"><expr pos:start="941:9" pos:end="941:31"><name pos:start="941:9" pos:end="941:20"><name pos:start="941:9" pos:end="941:11">env</name><operator pos:start="941:12" pos:end="941:13">-&gt;</operator><name pos:start="941:14" pos:end="941:17">regs</name><index pos:start="941:18" pos:end="941:20">[<expr pos:start="941:19" pos:end="941:19"><literal type="number" pos:start="941:19" pos:end="941:19">9</literal></expr>]</index></name> <operator pos:start="941:22" pos:end="941:22">=</operator> <name pos:start="941:24" pos:end="941:31"><name pos:start="941:24" pos:end="941:27">regs</name><operator pos:start="941:28" pos:end="941:29">-&gt;</operator><name pos:start="941:30" pos:end="941:31">r9</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="943:9" pos:end="943:34"><expr pos:start="943:9" pos:end="943:33"><name pos:start="943:9" pos:end="943:21"><name pos:start="943:9" pos:end="943:11">env</name><operator pos:start="943:12" pos:end="943:13">-&gt;</operator><name pos:start="943:14" pos:end="943:17">regs</name><index pos:start="943:18" pos:end="943:21">[<expr pos:start="943:19" pos:end="943:20"><literal type="number" pos:start="943:19" pos:end="943:20">10</literal></expr>]</index></name> <operator pos:start="943:23" pos:end="943:23">=</operator> <name pos:start="943:25" pos:end="943:33"><name pos:start="943:25" pos:end="943:28">regs</name><operator pos:start="943:29" pos:end="943:30">-&gt;</operator><name pos:start="943:31" pos:end="943:33">r10</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="945:9" pos:end="945:34"><expr pos:start="945:9" pos:end="945:33"><name pos:start="945:9" pos:end="945:21"><name pos:start="945:9" pos:end="945:11">env</name><operator pos:start="945:12" pos:end="945:13">-&gt;</operator><name pos:start="945:14" pos:end="945:17">regs</name><index pos:start="945:18" pos:end="945:21">[<expr pos:start="945:19" pos:end="945:20"><literal type="number" pos:start="945:19" pos:end="945:20">11</literal></expr>]</index></name> <operator pos:start="945:23" pos:end="945:23">=</operator> <name pos:start="945:25" pos:end="945:33"><name pos:start="945:25" pos:end="945:28">regs</name><operator pos:start="945:29" pos:end="945:30">-&gt;</operator><name pos:start="945:31" pos:end="945:33">r11</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="947:9" pos:end="947:34"><expr pos:start="947:9" pos:end="947:33"><name pos:start="947:9" pos:end="947:21"><name pos:start="947:9" pos:end="947:11">env</name><operator pos:start="947:12" pos:end="947:13">-&gt;</operator><name pos:start="947:14" pos:end="947:17">regs</name><index pos:start="947:18" pos:end="947:21">[<expr pos:start="947:19" pos:end="947:20"><literal type="number" pos:start="947:19" pos:end="947:20">12</literal></expr>]</index></name> <operator pos:start="947:23" pos:end="947:23">=</operator> <name pos:start="947:25" pos:end="947:33"><name pos:start="947:25" pos:end="947:28">regs</name><operator pos:start="947:29" pos:end="947:30">-&gt;</operator><name pos:start="947:31" pos:end="947:33">r12</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="949:9" pos:end="949:34"><expr pos:start="949:9" pos:end="949:33"><name pos:start="949:9" pos:end="949:21"><name pos:start="949:9" pos:end="949:11">env</name><operator pos:start="949:12" pos:end="949:13">-&gt;</operator><name pos:start="949:14" pos:end="949:17">regs</name><index pos:start="949:18" pos:end="949:21">[<expr pos:start="949:19" pos:end="949:20"><literal type="number" pos:start="949:19" pos:end="949:20">13</literal></expr>]</index></name> <operator pos:start="949:23" pos:end="949:23">=</operator> <name pos:start="949:25" pos:end="949:33"><name pos:start="949:25" pos:end="949:28">regs</name><operator pos:start="949:29" pos:end="949:30">-&gt;</operator><name pos:start="949:31" pos:end="949:33">r13</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="951:9" pos:end="951:34"><expr pos:start="951:9" pos:end="951:33"><name pos:start="951:9" pos:end="951:21"><name pos:start="951:9" pos:end="951:11">env</name><operator pos:start="951:12" pos:end="951:13">-&gt;</operator><name pos:start="951:14" pos:end="951:17">regs</name><index pos:start="951:18" pos:end="951:21">[<expr pos:start="951:19" pos:end="951:20"><literal type="number" pos:start="951:19" pos:end="951:20">14</literal></expr>]</index></name> <operator pos:start="951:23" pos:end="951:23">=</operator> <name pos:start="951:25" pos:end="951:33"><name pos:start="951:25" pos:end="951:28">regs</name><operator pos:start="951:29" pos:end="951:30">-&gt;</operator><name pos:start="951:31" pos:end="951:33">r14</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="953:9" pos:end="953:34"><expr pos:start="953:9" pos:end="953:33"><name pos:start="953:9" pos:end="953:21"><name pos:start="953:9" pos:end="953:11">env</name><operator pos:start="953:12" pos:end="953:13">-&gt;</operator><name pos:start="953:14" pos:end="953:17">regs</name><index pos:start="953:18" pos:end="953:21">[<expr pos:start="953:19" pos:end="953:20"><literal type="number" pos:start="953:19" pos:end="953:20">15</literal></expr>]</index></name> <operator pos:start="953:23" pos:end="953:23">=</operator> <name pos:start="953:25" pos:end="953:33"><name pos:start="953:25" pos:end="953:28">regs</name><operator pos:start="953:29" pos:end="953:30">-&gt;</operator><name pos:start="953:31" pos:end="953:33">r15</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="955:9" pos:end="955:34"><expr pos:start="955:9" pos:end="955:33"><name pos:start="955:9" pos:end="955:21"><name pos:start="955:9" pos:end="955:11">env</name><operator pos:start="955:12" pos:end="955:13">-&gt;</operator><name pos:start="955:14" pos:end="955:17">regs</name><index pos:start="955:18" pos:end="955:21">[<expr pos:start="955:19" pos:end="955:20"><literal type="number" pos:start="955:19" pos:end="955:20">16</literal></expr>]</index></name> <operator pos:start="955:23" pos:end="955:23">=</operator> <name pos:start="955:25" pos:end="955:33"><name pos:start="955:25" pos:end="955:28">regs</name><operator pos:start="955:29" pos:end="955:30">-&gt;</operator><name pos:start="955:31" pos:end="955:33">r16</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="957:9" pos:end="957:34"><expr pos:start="957:9" pos:end="957:33"><name pos:start="957:9" pos:end="957:21"><name pos:start="957:9" pos:end="957:11">env</name><operator pos:start="957:12" pos:end="957:13">-&gt;</operator><name pos:start="957:14" pos:end="957:17">regs</name><index pos:start="957:18" pos:end="957:21">[<expr pos:start="957:19" pos:end="957:20"><literal type="number" pos:start="957:19" pos:end="957:20">17</literal></expr>]</index></name> <operator pos:start="957:23" pos:end="957:23">=</operator> <name pos:start="957:25" pos:end="957:33"><name pos:start="957:25" pos:end="957:28">regs</name><operator pos:start="957:29" pos:end="957:30">-&gt;</operator><name pos:start="957:31" pos:end="957:33">r17</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="959:9" pos:end="959:34"><expr pos:start="959:9" pos:end="959:33"><name pos:start="959:9" pos:end="959:21"><name pos:start="959:9" pos:end="959:11">env</name><operator pos:start="959:12" pos:end="959:13">-&gt;</operator><name pos:start="959:14" pos:end="959:17">regs</name><index pos:start="959:18" pos:end="959:21">[<expr pos:start="959:19" pos:end="959:20"><literal type="number" pos:start="959:19" pos:end="959:20">18</literal></expr>]</index></name> <operator pos:start="959:23" pos:end="959:23">=</operator> <name pos:start="959:25" pos:end="959:33"><name pos:start="959:25" pos:end="959:28">regs</name><operator pos:start="959:29" pos:end="959:30">-&gt;</operator><name pos:start="959:31" pos:end="959:33">r18</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="961:9" pos:end="961:34"><expr pos:start="961:9" pos:end="961:33"><name pos:start="961:9" pos:end="961:21"><name pos:start="961:9" pos:end="961:11">env</name><operator pos:start="961:12" pos:end="961:13">-&gt;</operator><name pos:start="961:14" pos:end="961:17">regs</name><index pos:start="961:18" pos:end="961:21">[<expr pos:start="961:19" pos:end="961:20"><literal type="number" pos:start="961:19" pos:end="961:20">19</literal></expr>]</index></name> <operator pos:start="961:23" pos:end="961:23">=</operator> <name pos:start="961:25" pos:end="961:33"><name pos:start="961:25" pos:end="961:28">regs</name><operator pos:start="961:29" pos:end="961:30">-&gt;</operator><name pos:start="961:31" pos:end="961:33">r19</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="963:9" pos:end="963:34"><expr pos:start="963:9" pos:end="963:33"><name pos:start="963:9" pos:end="963:21"><name pos:start="963:9" pos:end="963:11">env</name><operator pos:start="963:12" pos:end="963:13">-&gt;</operator><name pos:start="963:14" pos:end="963:17">regs</name><index pos:start="963:18" pos:end="963:21">[<expr pos:start="963:19" pos:end="963:20"><literal type="number" pos:start="963:19" pos:end="963:20">20</literal></expr>]</index></name> <operator pos:start="963:23" pos:end="963:23">=</operator> <name pos:start="963:25" pos:end="963:33"><name pos:start="963:25" pos:end="963:28">regs</name><operator pos:start="963:29" pos:end="963:30">-&gt;</operator><name pos:start="963:31" pos:end="963:33">r20</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="965:9" pos:end="965:34"><expr pos:start="965:9" pos:end="965:33"><name pos:start="965:9" pos:end="965:21"><name pos:start="965:9" pos:end="965:11">env</name><operator pos:start="965:12" pos:end="965:13">-&gt;</operator><name pos:start="965:14" pos:end="965:17">regs</name><index pos:start="965:18" pos:end="965:21">[<expr pos:start="965:19" pos:end="965:20"><literal type="number" pos:start="965:19" pos:end="965:20">21</literal></expr>]</index></name> <operator pos:start="965:23" pos:end="965:23">=</operator> <name pos:start="965:25" pos:end="965:33"><name pos:start="965:25" pos:end="965:28">regs</name><operator pos:start="965:29" pos:end="965:30">-&gt;</operator><name pos:start="965:31" pos:end="965:33">r21</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="967:9" pos:end="967:34"><expr pos:start="967:9" pos:end="967:33"><name pos:start="967:9" pos:end="967:21"><name pos:start="967:9" pos:end="967:11">env</name><operator pos:start="967:12" pos:end="967:13">-&gt;</operator><name pos:start="967:14" pos:end="967:17">regs</name><index pos:start="967:18" pos:end="967:21">[<expr pos:start="967:19" pos:end="967:20"><literal type="number" pos:start="967:19" pos:end="967:20">22</literal></expr>]</index></name> <operator pos:start="967:23" pos:end="967:23">=</operator> <name pos:start="967:25" pos:end="967:33"><name pos:start="967:25" pos:end="967:28">regs</name><operator pos:start="967:29" pos:end="967:30">-&gt;</operator><name pos:start="967:31" pos:end="967:33">r22</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="969:9" pos:end="969:34"><expr pos:start="969:9" pos:end="969:33"><name pos:start="969:9" pos:end="969:21"><name pos:start="969:9" pos:end="969:11">env</name><operator pos:start="969:12" pos:end="969:13">-&gt;</operator><name pos:start="969:14" pos:end="969:17">regs</name><index pos:start="969:18" pos:end="969:21">[<expr pos:start="969:19" pos:end="969:20"><literal type="number" pos:start="969:19" pos:end="969:20">23</literal></expr>]</index></name> <operator pos:start="969:23" pos:end="969:23">=</operator> <name pos:start="969:25" pos:end="969:33"><name pos:start="969:25" pos:end="969:28">regs</name><operator pos:start="969:29" pos:end="969:30">-&gt;</operator><name pos:start="969:31" pos:end="969:33">r23</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="971:9" pos:end="971:34"><expr pos:start="971:9" pos:end="971:33"><name pos:start="971:9" pos:end="971:21"><name pos:start="971:9" pos:end="971:11">env</name><operator pos:start="971:12" pos:end="971:13">-&gt;</operator><name pos:start="971:14" pos:end="971:17">regs</name><index pos:start="971:18" pos:end="971:21">[<expr pos:start="971:19" pos:end="971:20"><literal type="number" pos:start="971:19" pos:end="971:20">24</literal></expr>]</index></name> <operator pos:start="971:23" pos:end="971:23">=</operator> <name pos:start="971:25" pos:end="971:33"><name pos:start="971:25" pos:end="971:28">regs</name><operator pos:start="971:29" pos:end="971:30">-&gt;</operator><name pos:start="971:31" pos:end="971:33">r24</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="973:9" pos:end="973:34"><expr pos:start="973:9" pos:end="973:33"><name pos:start="973:9" pos:end="973:21"><name pos:start="973:9" pos:end="973:11">env</name><operator pos:start="973:12" pos:end="973:13">-&gt;</operator><name pos:start="973:14" pos:end="973:17">regs</name><index pos:start="973:18" pos:end="973:21">[<expr pos:start="973:19" pos:end="973:20"><literal type="number" pos:start="973:19" pos:end="973:20">25</literal></expr>]</index></name> <operator pos:start="973:23" pos:end="973:23">=</operator> <name pos:start="973:25" pos:end="973:33"><name pos:start="973:25" pos:end="973:28">regs</name><operator pos:start="973:29" pos:end="973:30">-&gt;</operator><name pos:start="973:31" pos:end="973:33">r25</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="975:9" pos:end="975:34"><expr pos:start="975:9" pos:end="975:33"><name pos:start="975:9" pos:end="975:21"><name pos:start="975:9" pos:end="975:11">env</name><operator pos:start="975:12" pos:end="975:13">-&gt;</operator><name pos:start="975:14" pos:end="975:17">regs</name><index pos:start="975:18" pos:end="975:21">[<expr pos:start="975:19" pos:end="975:20"><literal type="number" pos:start="975:19" pos:end="975:20">26</literal></expr>]</index></name> <operator pos:start="975:23" pos:end="975:23">=</operator> <name pos:start="975:25" pos:end="975:33"><name pos:start="975:25" pos:end="975:28">regs</name><operator pos:start="975:29" pos:end="975:30">-&gt;</operator><name pos:start="975:31" pos:end="975:33">r26</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="977:9" pos:end="977:34"><expr pos:start="977:9" pos:end="977:33"><name pos:start="977:9" pos:end="977:21"><name pos:start="977:9" pos:end="977:11">env</name><operator pos:start="977:12" pos:end="977:13">-&gt;</operator><name pos:start="977:14" pos:end="977:17">regs</name><index pos:start="977:18" pos:end="977:21">[<expr pos:start="977:19" pos:end="977:20"><literal type="number" pos:start="977:19" pos:end="977:20">27</literal></expr>]</index></name> <operator pos:start="977:23" pos:end="977:23">=</operator> <name pos:start="977:25" pos:end="977:33"><name pos:start="977:25" pos:end="977:28">regs</name><operator pos:start="977:29" pos:end="977:30">-&gt;</operator><name pos:start="977:31" pos:end="977:33">r27</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="979:9" pos:end="979:34"><expr pos:start="979:9" pos:end="979:33"><name pos:start="979:9" pos:end="979:21"><name pos:start="979:9" pos:end="979:11">env</name><operator pos:start="979:12" pos:end="979:13">-&gt;</operator><name pos:start="979:14" pos:end="979:17">regs</name><index pos:start="979:18" pos:end="979:21">[<expr pos:start="979:19" pos:end="979:20"><literal type="number" pos:start="979:19" pos:end="979:20">28</literal></expr>]</index></name> <operator pos:start="979:23" pos:end="979:23">=</operator> <name pos:start="979:25" pos:end="979:33"><name pos:start="979:25" pos:end="979:28">regs</name><operator pos:start="979:29" pos:end="979:30">-&gt;</operator><name pos:start="979:31" pos:end="979:33">r28</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="981:9" pos:end="981:34"><expr pos:start="981:9" pos:end="981:33"><name pos:start="981:9" pos:end="981:21"><name pos:start="981:9" pos:end="981:11">env</name><operator pos:start="981:12" pos:end="981:13">-&gt;</operator><name pos:start="981:14" pos:end="981:17">regs</name><index pos:start="981:18" pos:end="981:21">[<expr pos:start="981:19" pos:end="981:20"><literal type="number" pos:start="981:19" pos:end="981:20">29</literal></expr>]</index></name> <operator pos:start="981:23" pos:end="981:23">=</operator> <name pos:start="981:25" pos:end="981:33"><name pos:start="981:25" pos:end="981:28">regs</name><operator pos:start="981:29" pos:end="981:30">-&gt;</operator><name pos:start="981:31" pos:end="981:33">r29</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="983:9" pos:end="983:34"><expr pos:start="983:9" pos:end="983:33"><name pos:start="983:9" pos:end="983:21"><name pos:start="983:9" pos:end="983:11">env</name><operator pos:start="983:12" pos:end="983:13">-&gt;</operator><name pos:start="983:14" pos:end="983:17">regs</name><index pos:start="983:18" pos:end="983:21">[<expr pos:start="983:19" pos:end="983:20"><literal type="number" pos:start="983:19" pos:end="983:20">30</literal></expr>]</index></name> <operator pos:start="983:23" pos:end="983:23">=</operator> <name pos:start="983:25" pos:end="983:33"><name pos:start="983:25" pos:end="983:28">regs</name><operator pos:start="983:29" pos:end="983:30">-&gt;</operator><name pos:start="983:31" pos:end="983:33">r30</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="985:9" pos:end="985:34"><expr pos:start="985:9" pos:end="985:33"><name pos:start="985:9" pos:end="985:21"><name pos:start="985:9" pos:end="985:11">env</name><operator pos:start="985:12" pos:end="985:13">-&gt;</operator><name pos:start="985:14" pos:end="985:17">regs</name><index pos:start="985:18" pos:end="985:21">[<expr pos:start="985:19" pos:end="985:20"><literal type="number" pos:start="985:19" pos:end="985:20">31</literal></expr>]</index></name> <operator pos:start="985:23" pos:end="985:23">=</operator> <name pos:start="985:25" pos:end="985:33"><name pos:start="985:25" pos:end="985:28">regs</name><operator pos:start="985:29" pos:end="985:30">-&gt;</operator><name pos:start="985:31" pos:end="985:33">r31</name></name></expr>;</expr_stmt>	    

        <expr_stmt pos:start="987:9" pos:end="987:37"><expr pos:start="987:9" pos:end="987:36"><name pos:start="987:9" pos:end="987:25"><name pos:start="987:9" pos:end="987:11">env</name><operator pos:start="987:12" pos:end="987:13">-&gt;</operator><name pos:start="987:14" pos:end="987:18">sregs</name><index pos:start="987:19" pos:end="987:25">[<expr pos:start="987:20" pos:end="987:24"><name pos:start="987:20" pos:end="987:24">SR_PC</name></expr>]</index></name> <operator pos:start="987:27" pos:end="987:27">=</operator> <name pos:start="987:29" pos:end="987:36"><name pos:start="987:29" pos:end="987:32">regs</name><operator pos:start="987:33" pos:end="987:34">-&gt;</operator><name pos:start="987:35" pos:end="987:36">pc</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="991:1" pos:end="991:26">#<cpp:directive pos:start="991:2" pos:end="991:5">elif</cpp:directive> <expr pos:start="991:7" pos:end="991:26"><call pos:start="991:7" pos:end="991:26"><name pos:start="991:7" pos:end="991:13">defined</name><argument_list pos:start="991:14" pos:end="991:26">(<argument pos:start="991:15" pos:end="991:25"><expr pos:start="991:15" pos:end="991:25"><name pos:start="991:15" pos:end="991:25">TARGET_MIPS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="993:5" pos:end="1044:0">{<block_content pos:start="995:9" pos:end="1039:9">

        <decl_stmt pos:start="995:9" pos:end="995:14"><decl pos:start="995:9" pos:end="995:13"><type pos:start="995:9" pos:end="995:11"><name pos:start="995:9" pos:end="995:11">int</name></type> <name pos:start="995:13" pos:end="995:13">i</name></decl>;</decl_stmt>



        <for pos:start="999:9" pos:end="1003:9">for<control pos:start="999:12" pos:end="999:31">(<init pos:start="999:13" pos:end="999:18"><expr pos:start="999:13" pos:end="999:17"><name pos:start="999:13" pos:end="999:13">i</name> <operator pos:start="999:15" pos:end="999:15">=</operator> <literal type="number" pos:start="999:17" pos:end="999:17">0</literal></expr>;</init> <condition pos:start="999:20" pos:end="999:26"><expr pos:start="999:20" pos:end="999:25"><name pos:start="999:20" pos:end="999:20">i</name> <operator pos:start="999:22" pos:end="999:22">&lt;</operator> <literal type="number" pos:start="999:24" pos:end="999:25">32</literal></expr>;</condition> <incr pos:start="999:28" pos:end="999:30"><expr pos:start="999:28" pos:end="999:30"><name pos:start="999:28" pos:end="999:28">i</name><operator pos:start="999:29" pos:end="999:30">++</operator></expr></incr>)</control> <block pos:start="999:33" pos:end="1003:9">{<block_content pos:start="1001:13" pos:end="1001:50">

            <expr_stmt pos:start="1001:13" pos:end="1001:50"><expr pos:start="1001:13" pos:end="1001:49"><name pos:start="1001:13" pos:end="1001:33"><name pos:start="1001:13" pos:end="1001:15">env</name><operator pos:start="1001:16" pos:end="1001:17">-&gt;</operator><name pos:start="1001:18" pos:end="1001:26">active_tc</name><operator pos:start="1001:27" pos:end="1001:27">.</operator><name pos:start="1001:28" pos:end="1001:30">gpr</name><index pos:start="1001:31" pos:end="1001:33">[<expr pos:start="1001:32" pos:end="1001:32"><name pos:start="1001:32" pos:end="1001:32">i</name></expr>]</index></name> <operator pos:start="1001:35" pos:end="1001:35">=</operator> <name pos:start="1001:37" pos:end="1001:49"><name pos:start="1001:37" pos:end="1001:40">regs</name><operator pos:start="1001:41" pos:end="1001:42">-&gt;</operator><name pos:start="1001:43" pos:end="1001:46">regs</name><index pos:start="1001:47" pos:end="1001:49">[<expr pos:start="1001:48" pos:end="1001:48"><name pos:start="1001:48" pos:end="1001:48">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1005:9" pos:end="1005:61"><expr pos:start="1005:9" pos:end="1005:60"><name pos:start="1005:9" pos:end="1005:25"><name pos:start="1005:9" pos:end="1005:11">env</name><operator pos:start="1005:12" pos:end="1005:13">-&gt;</operator><name pos:start="1005:14" pos:end="1005:22">active_tc</name><operator pos:start="1005:23" pos:end="1005:23">.</operator><name pos:start="1005:24" pos:end="1005:25">PC</name></name> <operator pos:start="1005:27" pos:end="1005:27">=</operator> <name pos:start="1005:29" pos:end="1005:41"><name pos:start="1005:29" pos:end="1005:32">regs</name><operator pos:start="1005:33" pos:end="1005:34">-&gt;</operator><name pos:start="1005:35" pos:end="1005:41">cp0_epc</name></name> <operator pos:start="1005:43" pos:end="1005:43">&amp;</operator> <operator pos:start="1005:45" pos:end="1005:45">~</operator><operator pos:start="1005:46" pos:end="1005:46">(</operator><name pos:start="1005:47" pos:end="1005:58">target_ulong</name><operator pos:start="1005:59" pos:end="1005:59">)</operator><literal type="number" pos:start="1005:60" pos:end="1005:60">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="1007:9" pos:end="1011:9"><if pos:start="1007:9" pos:end="1011:9">if <condition pos:start="1007:12" pos:end="1007:30">(<expr pos:start="1007:13" pos:end="1007:29"><name pos:start="1007:13" pos:end="1007:25"><name pos:start="1007:13" pos:end="1007:16">regs</name><operator pos:start="1007:17" pos:end="1007:18">-&gt;</operator><name pos:start="1007:19" pos:end="1007:25">cp0_epc</name></name> <operator pos:start="1007:27" pos:end="1007:27">&amp;</operator> <literal type="number" pos:start="1007:29" pos:end="1007:29">1</literal></expr>)</condition> <block pos:start="1007:32" pos:end="1011:9">{<block_content pos:start="1009:13" pos:end="1009:42">

            <expr_stmt pos:start="1009:13" pos:end="1009:42"><expr pos:start="1009:13" pos:end="1009:41"><name pos:start="1009:13" pos:end="1009:23"><name pos:start="1009:13" pos:end="1009:15">env</name><operator pos:start="1009:16" pos:end="1009:17">-&gt;</operator><name pos:start="1009:18" pos:end="1009:23">hflags</name></name> <operator pos:start="1009:25" pos:end="1009:26">|=</operator> <name pos:start="1009:28" pos:end="1009:41">MIPS_HFLAG_M16</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="1013:9" pos:end="1039:9"><if pos:start="1013:9" pos:end="1039:9">if <condition pos:start="1013:12" pos:end="1015:66">(<expr pos:start="1013:13" pos:end="1015:65"><operator pos:start="1013:13" pos:end="1013:13">(</operator><operator pos:start="1013:14" pos:end="1013:14">(</operator><name pos:start="1013:15" pos:end="1013:29"><name pos:start="1013:15" pos:end="1013:18">info</name><operator pos:start="1013:19" pos:end="1013:20">-&gt;</operator><name pos:start="1013:21" pos:end="1013:29">elf_flags</name></name> <operator pos:start="1013:31" pos:end="1013:31">&amp;</operator> <name pos:start="1013:33" pos:end="1013:47">EF_MIPS_NAN2008</name><operator pos:start="1013:48" pos:end="1013:48">)</operator> <operator pos:start="1013:50" pos:end="1013:51">!=</operator> <literal type="number" pos:start="1013:53" pos:end="1013:53">0</literal><operator pos:start="1013:54" pos:end="1013:54">)</operator> <operator pos:start="1013:56" pos:end="1013:57">!=</operator>

            <operator pos:start="1015:13" pos:end="1015:13">(</operator><operator pos:start="1015:14" pos:end="1015:14">(</operator><name pos:start="1015:15" pos:end="1015:35"><name pos:start="1015:15" pos:end="1015:17">env</name><operator pos:start="1015:18" pos:end="1015:19">-&gt;</operator><name pos:start="1015:20" pos:end="1015:29">active_fpu</name><operator pos:start="1015:30" pos:end="1015:30">.</operator><name pos:start="1015:31" pos:end="1015:35">fcr31</name></name> <operator pos:start="1015:37" pos:end="1015:37">&amp;</operator> <operator pos:start="1015:39" pos:end="1015:39">(</operator><literal type="number" pos:start="1015:40" pos:end="1015:40">1</literal> <operator pos:start="1015:42" pos:end="1015:43">&lt;&lt;</operator> <name pos:start="1015:45" pos:end="1015:57">FCR31_NAN2008</name><operator pos:start="1015:58" pos:end="1015:58">)</operator><operator pos:start="1015:59" pos:end="1015:59">)</operator> <operator pos:start="1015:61" pos:end="1015:62">!=</operator> <literal type="number" pos:start="1015:64" pos:end="1015:64">0</literal><operator pos:start="1015:65" pos:end="1015:65">)</operator></expr>)</condition> <block pos:start="1015:68" pos:end="1039:9">{<block_content pos:start="1017:13" pos:end="1037:39">

            <if_stmt pos:start="1017:13" pos:end="1025:13"><if pos:start="1017:13" pos:end="1025:13">if <condition pos:start="1017:16" pos:end="1019:45">(<expr pos:start="1017:17" pos:end="1019:44"><operator pos:start="1017:17" pos:end="1017:17">(</operator><name pos:start="1017:18" pos:end="1017:49"><name pos:start="1017:18" pos:end="1017:20">env</name><operator pos:start="1017:21" pos:end="1017:22">-&gt;</operator><name pos:start="1017:23" pos:end="1017:32">active_fpu</name><operator pos:start="1017:33" pos:end="1017:33">.</operator><name pos:start="1017:34" pos:end="1017:49">fcr31_rw_bitmask</name></name> <operator pos:start="1017:51" pos:end="1017:51">&amp;</operator>

                  <operator pos:start="1019:19" pos:end="1019:19">(</operator><literal type="number" pos:start="1019:20" pos:end="1019:20">1</literal> <operator pos:start="1019:22" pos:end="1019:23">&lt;&lt;</operator> <name pos:start="1019:25" pos:end="1019:37">FCR31_NAN2008</name><operator pos:start="1019:38" pos:end="1019:38">)</operator><operator pos:start="1019:39" pos:end="1019:39">)</operator> <operator pos:start="1019:41" pos:end="1019:42">==</operator> <literal type="number" pos:start="1019:44" pos:end="1019:44">0</literal></expr>)</condition> <block pos:start="1019:47" pos:end="1025:13">{<block_content pos:start="1021:17" pos:end="1023:24">

                <expr_stmt pos:start="1021:17" pos:end="1021:80"><expr pos:start="1021:17" pos:end="1021:79"><call pos:start="1021:17" pos:end="1021:79"><name pos:start="1021:17" pos:end="1021:23">fprintf</name><argument_list pos:start="1021:24" pos:end="1021:79">(<argument pos:start="1021:25" pos:end="1021:30"><expr pos:start="1021:25" pos:end="1021:30"><name pos:start="1021:25" pos:end="1021:30">stderr</name></expr></argument>, <argument pos:start="1021:33" pos:end="1021:78"><expr pos:start="1021:33" pos:end="1021:78"><literal type="string" pos:start="1021:33" pos:end="1021:78">"ELF binary's NaN mode not supported by CPU\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1023:17" pos:end="1023:24"><expr pos:start="1023:17" pos:end="1023:23"><call pos:start="1023:17" pos:end="1023:23"><name pos:start="1023:17" pos:end="1023:20">exit</name><argument_list pos:start="1023:21" pos:end="1023:23">(<argument pos:start="1023:22" pos:end="1023:22"><expr pos:start="1023:22" pos:end="1023:22"><literal type="number" pos:start="1023:22" pos:end="1023:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="1027:13" pos:end="1035:13"><if pos:start="1027:13" pos:end="1031:13">if <condition pos:start="1027:16" pos:end="1027:57">(<expr pos:start="1027:17" pos:end="1027:56"><operator pos:start="1027:17" pos:end="1027:17">(</operator><name pos:start="1027:18" pos:end="1027:32"><name pos:start="1027:18" pos:end="1027:21">info</name><operator pos:start="1027:22" pos:end="1027:23">-&gt;</operator><name pos:start="1027:24" pos:end="1027:32">elf_flags</name></name> <operator pos:start="1027:34" pos:end="1027:34">&amp;</operator> <name pos:start="1027:36" pos:end="1027:50">EF_MIPS_NAN2008</name><operator pos:start="1027:51" pos:end="1027:51">)</operator> <operator pos:start="1027:53" pos:end="1027:54">!=</operator> <literal type="number" pos:start="1027:56" pos:end="1027:56">0</literal></expr>)</condition> <block pos:start="1027:59" pos:end="1031:13">{<block_content pos:start="1029:17" pos:end="1029:62">

                <expr_stmt pos:start="1029:17" pos:end="1029:62"><expr pos:start="1029:17" pos:end="1029:61"><name pos:start="1029:17" pos:end="1029:37"><name pos:start="1029:17" pos:end="1029:19">env</name><operator pos:start="1029:20" pos:end="1029:21">-&gt;</operator><name pos:start="1029:22" pos:end="1029:31">active_fpu</name><operator pos:start="1029:32" pos:end="1029:32">.</operator><name pos:start="1029:33" pos:end="1029:37">fcr31</name></name> <operator pos:start="1029:39" pos:end="1029:40">|=</operator> <operator pos:start="1029:42" pos:end="1029:42">(</operator><literal type="number" pos:start="1029:43" pos:end="1029:43">1</literal> <operator pos:start="1029:45" pos:end="1029:46">&lt;&lt;</operator> <name pos:start="1029:48" pos:end="1029:60">FCR31_NAN2008</name><operator pos:start="1029:61" pos:end="1029:61">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1031:15" pos:end="1035:13">else <block pos:start="1031:20" pos:end="1035:13">{<block_content pos:start="1033:17" pos:end="1033:63">

                <expr_stmt pos:start="1033:17" pos:end="1033:63"><expr pos:start="1033:17" pos:end="1033:62"><name pos:start="1033:17" pos:end="1033:37"><name pos:start="1033:17" pos:end="1033:19">env</name><operator pos:start="1033:20" pos:end="1033:21">-&gt;</operator><name pos:start="1033:22" pos:end="1033:31">active_fpu</name><operator pos:start="1033:32" pos:end="1033:32">.</operator><name pos:start="1033:33" pos:end="1033:37">fcr31</name></name> <operator pos:start="1033:39" pos:end="1033:40">&amp;=</operator> <operator pos:start="1033:42" pos:end="1033:42">~</operator><operator pos:start="1033:43" pos:end="1033:43">(</operator><literal type="number" pos:start="1033:44" pos:end="1033:44">1</literal> <operator pos:start="1033:46" pos:end="1033:47">&lt;&lt;</operator> <name pos:start="1033:49" pos:end="1033:61">FCR31_NAN2008</name><operator pos:start="1033:62" pos:end="1033:62">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1037:13" pos:end="1037:39"><expr pos:start="1037:13" pos:end="1037:38"><call pos:start="1037:13" pos:end="1037:38"><name pos:start="1037:13" pos:end="1037:33">restore_snan_bit_mode</name><argument_list pos:start="1037:34" pos:end="1037:38">(<argument pos:start="1037:35" pos:end="1037:37"><expr pos:start="1037:35" pos:end="1037:37"><name pos:start="1037:35" pos:end="1037:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1043:1" pos:end="1043:27">#<cpp:directive pos:start="1043:2" pos:end="1043:5">elif</cpp:directive> <expr pos:start="1043:7" pos:end="1043:27"><call pos:start="1043:7" pos:end="1043:27"><name pos:start="1043:7" pos:end="1043:13">defined</name><argument_list pos:start="1043:14" pos:end="1043:27">(<argument pos:start="1043:15" pos:end="1043:26"><expr pos:start="1043:15" pos:end="1043:26"><name pos:start="1043:15" pos:end="1043:26">TARGET_NIOS2</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1045:5" pos:end="1104:0">{<block_content pos:start="1047:9" pos:end="1099:35">

        <expr_stmt pos:start="1047:9" pos:end="1047:25"><expr pos:start="1047:9" pos:end="1047:24"><name pos:start="1047:9" pos:end="1047:20"><name pos:start="1047:9" pos:end="1047:11">env</name><operator pos:start="1047:12" pos:end="1047:13">-&gt;</operator><name pos:start="1047:14" pos:end="1047:17">regs</name><index pos:start="1047:18" pos:end="1047:20">[<expr pos:start="1047:19" pos:end="1047:19"><literal type="number" pos:start="1047:19" pos:end="1047:19">0</literal></expr>]</index></name> <operator pos:start="1047:22" pos:end="1047:22">=</operator> <literal type="number" pos:start="1047:24" pos:end="1047:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="1049:9" pos:end="1049:32"><expr pos:start="1049:9" pos:end="1049:31"><name pos:start="1049:9" pos:end="1049:20"><name pos:start="1049:9" pos:end="1049:11">env</name><operator pos:start="1049:12" pos:end="1049:13">-&gt;</operator><name pos:start="1049:14" pos:end="1049:17">regs</name><index pos:start="1049:18" pos:end="1049:20">[<expr pos:start="1049:19" pos:end="1049:19"><literal type="number" pos:start="1049:19" pos:end="1049:19">1</literal></expr>]</index></name> <operator pos:start="1049:22" pos:end="1049:22">=</operator> <name pos:start="1049:24" pos:end="1049:31"><name pos:start="1049:24" pos:end="1049:27">regs</name><operator pos:start="1049:28" pos:end="1049:29">-&gt;</operator><name pos:start="1049:30" pos:end="1049:31">r1</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1051:9" pos:end="1051:32"><expr pos:start="1051:9" pos:end="1051:31"><name pos:start="1051:9" pos:end="1051:20"><name pos:start="1051:9" pos:end="1051:11">env</name><operator pos:start="1051:12" pos:end="1051:13">-&gt;</operator><name pos:start="1051:14" pos:end="1051:17">regs</name><index pos:start="1051:18" pos:end="1051:20">[<expr pos:start="1051:19" pos:end="1051:19"><literal type="number" pos:start="1051:19" pos:end="1051:19">2</literal></expr>]</index></name> <operator pos:start="1051:22" pos:end="1051:22">=</operator> <name pos:start="1051:24" pos:end="1051:31"><name pos:start="1051:24" pos:end="1051:27">regs</name><operator pos:start="1051:28" pos:end="1051:29">-&gt;</operator><name pos:start="1051:30" pos:end="1051:31">r2</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1053:9" pos:end="1053:32"><expr pos:start="1053:9" pos:end="1053:31"><name pos:start="1053:9" pos:end="1053:20"><name pos:start="1053:9" pos:end="1053:11">env</name><operator pos:start="1053:12" pos:end="1053:13">-&gt;</operator><name pos:start="1053:14" pos:end="1053:17">regs</name><index pos:start="1053:18" pos:end="1053:20">[<expr pos:start="1053:19" pos:end="1053:19"><literal type="number" pos:start="1053:19" pos:end="1053:19">3</literal></expr>]</index></name> <operator pos:start="1053:22" pos:end="1053:22">=</operator> <name pos:start="1053:24" pos:end="1053:31"><name pos:start="1053:24" pos:end="1053:27">regs</name><operator pos:start="1053:28" pos:end="1053:29">-&gt;</operator><name pos:start="1053:30" pos:end="1053:31">r3</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1055:9" pos:end="1055:32"><expr pos:start="1055:9" pos:end="1055:31"><name pos:start="1055:9" pos:end="1055:20"><name pos:start="1055:9" pos:end="1055:11">env</name><operator pos:start="1055:12" pos:end="1055:13">-&gt;</operator><name pos:start="1055:14" pos:end="1055:17">regs</name><index pos:start="1055:18" pos:end="1055:20">[<expr pos:start="1055:19" pos:end="1055:19"><literal type="number" pos:start="1055:19" pos:end="1055:19">4</literal></expr>]</index></name> <operator pos:start="1055:22" pos:end="1055:22">=</operator> <name pos:start="1055:24" pos:end="1055:31"><name pos:start="1055:24" pos:end="1055:27">regs</name><operator pos:start="1055:28" pos:end="1055:29">-&gt;</operator><name pos:start="1055:30" pos:end="1055:31">r4</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1057:9" pos:end="1057:32"><expr pos:start="1057:9" pos:end="1057:31"><name pos:start="1057:9" pos:end="1057:20"><name pos:start="1057:9" pos:end="1057:11">env</name><operator pos:start="1057:12" pos:end="1057:13">-&gt;</operator><name pos:start="1057:14" pos:end="1057:17">regs</name><index pos:start="1057:18" pos:end="1057:20">[<expr pos:start="1057:19" pos:end="1057:19"><literal type="number" pos:start="1057:19" pos:end="1057:19">5</literal></expr>]</index></name> <operator pos:start="1057:22" pos:end="1057:22">=</operator> <name pos:start="1057:24" pos:end="1057:31"><name pos:start="1057:24" pos:end="1057:27">regs</name><operator pos:start="1057:28" pos:end="1057:29">-&gt;</operator><name pos:start="1057:30" pos:end="1057:31">r5</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1059:9" pos:end="1059:32"><expr pos:start="1059:9" pos:end="1059:31"><name pos:start="1059:9" pos:end="1059:20"><name pos:start="1059:9" pos:end="1059:11">env</name><operator pos:start="1059:12" pos:end="1059:13">-&gt;</operator><name pos:start="1059:14" pos:end="1059:17">regs</name><index pos:start="1059:18" pos:end="1059:20">[<expr pos:start="1059:19" pos:end="1059:19"><literal type="number" pos:start="1059:19" pos:end="1059:19">6</literal></expr>]</index></name> <operator pos:start="1059:22" pos:end="1059:22">=</operator> <name pos:start="1059:24" pos:end="1059:31"><name pos:start="1059:24" pos:end="1059:27">regs</name><operator pos:start="1059:28" pos:end="1059:29">-&gt;</operator><name pos:start="1059:30" pos:end="1059:31">r6</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1061:9" pos:end="1061:32"><expr pos:start="1061:9" pos:end="1061:31"><name pos:start="1061:9" pos:end="1061:20"><name pos:start="1061:9" pos:end="1061:11">env</name><operator pos:start="1061:12" pos:end="1061:13">-&gt;</operator><name pos:start="1061:14" pos:end="1061:17">regs</name><index pos:start="1061:18" pos:end="1061:20">[<expr pos:start="1061:19" pos:end="1061:19"><literal type="number" pos:start="1061:19" pos:end="1061:19">7</literal></expr>]</index></name> <operator pos:start="1061:22" pos:end="1061:22">=</operator> <name pos:start="1061:24" pos:end="1061:31"><name pos:start="1061:24" pos:end="1061:27">regs</name><operator pos:start="1061:28" pos:end="1061:29">-&gt;</operator><name pos:start="1061:30" pos:end="1061:31">r7</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1063:9" pos:end="1063:32"><expr pos:start="1063:9" pos:end="1063:31"><name pos:start="1063:9" pos:end="1063:20"><name pos:start="1063:9" pos:end="1063:11">env</name><operator pos:start="1063:12" pos:end="1063:13">-&gt;</operator><name pos:start="1063:14" pos:end="1063:17">regs</name><index pos:start="1063:18" pos:end="1063:20">[<expr pos:start="1063:19" pos:end="1063:19"><literal type="number" pos:start="1063:19" pos:end="1063:19">8</literal></expr>]</index></name> <operator pos:start="1063:22" pos:end="1063:22">=</operator> <name pos:start="1063:24" pos:end="1063:31"><name pos:start="1063:24" pos:end="1063:27">regs</name><operator pos:start="1063:28" pos:end="1063:29">-&gt;</operator><name pos:start="1063:30" pos:end="1063:31">r8</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1065:9" pos:end="1065:32"><expr pos:start="1065:9" pos:end="1065:31"><name pos:start="1065:9" pos:end="1065:20"><name pos:start="1065:9" pos:end="1065:11">env</name><operator pos:start="1065:12" pos:end="1065:13">-&gt;</operator><name pos:start="1065:14" pos:end="1065:17">regs</name><index pos:start="1065:18" pos:end="1065:20">[<expr pos:start="1065:19" pos:end="1065:19"><literal type="number" pos:start="1065:19" pos:end="1065:19">9</literal></expr>]</index></name> <operator pos:start="1065:22" pos:end="1065:22">=</operator> <name pos:start="1065:24" pos:end="1065:31"><name pos:start="1065:24" pos:end="1065:27">regs</name><operator pos:start="1065:28" pos:end="1065:29">-&gt;</operator><name pos:start="1065:30" pos:end="1065:31">r9</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1067:9" pos:end="1067:34"><expr pos:start="1067:9" pos:end="1067:33"><name pos:start="1067:9" pos:end="1067:21"><name pos:start="1067:9" pos:end="1067:11">env</name><operator pos:start="1067:12" pos:end="1067:13">-&gt;</operator><name pos:start="1067:14" pos:end="1067:17">regs</name><index pos:start="1067:18" pos:end="1067:21">[<expr pos:start="1067:19" pos:end="1067:20"><literal type="number" pos:start="1067:19" pos:end="1067:20">10</literal></expr>]</index></name> <operator pos:start="1067:23" pos:end="1067:23">=</operator> <name pos:start="1067:25" pos:end="1067:33"><name pos:start="1067:25" pos:end="1067:28">regs</name><operator pos:start="1067:29" pos:end="1067:30">-&gt;</operator><name pos:start="1067:31" pos:end="1067:33">r10</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1069:9" pos:end="1069:34"><expr pos:start="1069:9" pos:end="1069:33"><name pos:start="1069:9" pos:end="1069:21"><name pos:start="1069:9" pos:end="1069:11">env</name><operator pos:start="1069:12" pos:end="1069:13">-&gt;</operator><name pos:start="1069:14" pos:end="1069:17">regs</name><index pos:start="1069:18" pos:end="1069:21">[<expr pos:start="1069:19" pos:end="1069:20"><literal type="number" pos:start="1069:19" pos:end="1069:20">11</literal></expr>]</index></name> <operator pos:start="1069:23" pos:end="1069:23">=</operator> <name pos:start="1069:25" pos:end="1069:33"><name pos:start="1069:25" pos:end="1069:28">regs</name><operator pos:start="1069:29" pos:end="1069:30">-&gt;</operator><name pos:start="1069:31" pos:end="1069:33">r11</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1071:9" pos:end="1071:34"><expr pos:start="1071:9" pos:end="1071:33"><name pos:start="1071:9" pos:end="1071:21"><name pos:start="1071:9" pos:end="1071:11">env</name><operator pos:start="1071:12" pos:end="1071:13">-&gt;</operator><name pos:start="1071:14" pos:end="1071:17">regs</name><index pos:start="1071:18" pos:end="1071:21">[<expr pos:start="1071:19" pos:end="1071:20"><literal type="number" pos:start="1071:19" pos:end="1071:20">12</literal></expr>]</index></name> <operator pos:start="1071:23" pos:end="1071:23">=</operator> <name pos:start="1071:25" pos:end="1071:33"><name pos:start="1071:25" pos:end="1071:28">regs</name><operator pos:start="1071:29" pos:end="1071:30">-&gt;</operator><name pos:start="1071:31" pos:end="1071:33">r12</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1073:9" pos:end="1073:34"><expr pos:start="1073:9" pos:end="1073:33"><name pos:start="1073:9" pos:end="1073:21"><name pos:start="1073:9" pos:end="1073:11">env</name><operator pos:start="1073:12" pos:end="1073:13">-&gt;</operator><name pos:start="1073:14" pos:end="1073:17">regs</name><index pos:start="1073:18" pos:end="1073:21">[<expr pos:start="1073:19" pos:end="1073:20"><literal type="number" pos:start="1073:19" pos:end="1073:20">13</literal></expr>]</index></name> <operator pos:start="1073:23" pos:end="1073:23">=</operator> <name pos:start="1073:25" pos:end="1073:33"><name pos:start="1073:25" pos:end="1073:28">regs</name><operator pos:start="1073:29" pos:end="1073:30">-&gt;</operator><name pos:start="1073:31" pos:end="1073:33">r13</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1075:9" pos:end="1075:34"><expr pos:start="1075:9" pos:end="1075:33"><name pos:start="1075:9" pos:end="1075:21"><name pos:start="1075:9" pos:end="1075:11">env</name><operator pos:start="1075:12" pos:end="1075:13">-&gt;</operator><name pos:start="1075:14" pos:end="1075:17">regs</name><index pos:start="1075:18" pos:end="1075:21">[<expr pos:start="1075:19" pos:end="1075:20"><literal type="number" pos:start="1075:19" pos:end="1075:20">14</literal></expr>]</index></name> <operator pos:start="1075:23" pos:end="1075:23">=</operator> <name pos:start="1075:25" pos:end="1075:33"><name pos:start="1075:25" pos:end="1075:28">regs</name><operator pos:start="1075:29" pos:end="1075:30">-&gt;</operator><name pos:start="1075:31" pos:end="1075:33">r14</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1077:9" pos:end="1077:34"><expr pos:start="1077:9" pos:end="1077:33"><name pos:start="1077:9" pos:end="1077:21"><name pos:start="1077:9" pos:end="1077:11">env</name><operator pos:start="1077:12" pos:end="1077:13">-&gt;</operator><name pos:start="1077:14" pos:end="1077:17">regs</name><index pos:start="1077:18" pos:end="1077:21">[<expr pos:start="1077:19" pos:end="1077:20"><literal type="number" pos:start="1077:19" pos:end="1077:20">15</literal></expr>]</index></name> <operator pos:start="1077:23" pos:end="1077:23">=</operator> <name pos:start="1077:25" pos:end="1077:33"><name pos:start="1077:25" pos:end="1077:28">regs</name><operator pos:start="1077:29" pos:end="1077:30">-&gt;</operator><name pos:start="1077:31" pos:end="1077:33">r15</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="1079:9" pos:end="1079:43">/* TODO: unsigned long  orig_r2; */</comment>

        <expr_stmt pos:start="1081:9" pos:end="1081:35"><expr pos:start="1081:9" pos:end="1081:34"><name pos:start="1081:9" pos:end="1081:23"><name pos:start="1081:9" pos:end="1081:11">env</name><operator pos:start="1081:12" pos:end="1081:13">-&gt;</operator><name pos:start="1081:14" pos:end="1081:17">regs</name><index pos:start="1081:18" pos:end="1081:23">[<expr pos:start="1081:19" pos:end="1081:22"><name pos:start="1081:19" pos:end="1081:22">R_RA</name></expr>]</index></name> <operator pos:start="1081:25" pos:end="1081:25">=</operator> <name pos:start="1081:27" pos:end="1081:34"><name pos:start="1081:27" pos:end="1081:30">regs</name><operator pos:start="1081:31" pos:end="1081:32">-&gt;</operator><name pos:start="1081:33" pos:end="1081:34">ra</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1083:9" pos:end="1083:35"><expr pos:start="1083:9" pos:end="1083:34"><name pos:start="1083:9" pos:end="1083:23"><name pos:start="1083:9" pos:end="1083:11">env</name><operator pos:start="1083:12" pos:end="1083:13">-&gt;</operator><name pos:start="1083:14" pos:end="1083:17">regs</name><index pos:start="1083:18" pos:end="1083:23">[<expr pos:start="1083:19" pos:end="1083:22"><name pos:start="1083:19" pos:end="1083:22">R_FP</name></expr>]</index></name> <operator pos:start="1083:25" pos:end="1083:25">=</operator> <name pos:start="1083:27" pos:end="1083:34"><name pos:start="1083:27" pos:end="1083:30">regs</name><operator pos:start="1083:31" pos:end="1083:32">-&gt;</operator><name pos:start="1083:33" pos:end="1083:34">fp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1085:9" pos:end="1085:35"><expr pos:start="1085:9" pos:end="1085:34"><name pos:start="1085:9" pos:end="1085:23"><name pos:start="1085:9" pos:end="1085:11">env</name><operator pos:start="1085:12" pos:end="1085:13">-&gt;</operator><name pos:start="1085:14" pos:end="1085:17">regs</name><index pos:start="1085:18" pos:end="1085:23">[<expr pos:start="1085:19" pos:end="1085:22"><name pos:start="1085:19" pos:end="1085:22">R_SP</name></expr>]</index></name> <operator pos:start="1085:25" pos:end="1085:25">=</operator> <name pos:start="1085:27" pos:end="1085:34"><name pos:start="1085:27" pos:end="1085:30">regs</name><operator pos:start="1085:31" pos:end="1085:32">-&gt;</operator><name pos:start="1085:33" pos:end="1085:34">sp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1087:9" pos:end="1087:35"><expr pos:start="1087:9" pos:end="1087:34"><name pos:start="1087:9" pos:end="1087:23"><name pos:start="1087:9" pos:end="1087:11">env</name><operator pos:start="1087:12" pos:end="1087:13">-&gt;</operator><name pos:start="1087:14" pos:end="1087:17">regs</name><index pos:start="1087:18" pos:end="1087:23">[<expr pos:start="1087:19" pos:end="1087:22"><name pos:start="1087:19" pos:end="1087:22">R_GP</name></expr>]</index></name> <operator pos:start="1087:25" pos:end="1087:25">=</operator> <name pos:start="1087:27" pos:end="1087:34"><name pos:start="1087:27" pos:end="1087:30">regs</name><operator pos:start="1087:31" pos:end="1087:32">-&gt;</operator><name pos:start="1087:33" pos:end="1087:34">gp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1089:9" pos:end="1089:46"><expr pos:start="1089:9" pos:end="1089:45"><name pos:start="1089:9" pos:end="1089:29"><name pos:start="1089:9" pos:end="1089:11">env</name><operator pos:start="1089:12" pos:end="1089:13">-&gt;</operator><name pos:start="1089:14" pos:end="1089:17">regs</name><index pos:start="1089:18" pos:end="1089:29">[<expr pos:start="1089:19" pos:end="1089:28"><name pos:start="1089:19" pos:end="1089:28">CR_ESTATUS</name></expr>]</index></name> <operator pos:start="1089:31" pos:end="1089:31">=</operator> <name pos:start="1089:33" pos:end="1089:45"><name pos:start="1089:33" pos:end="1089:36">regs</name><operator pos:start="1089:37" pos:end="1089:38">-&gt;</operator><name pos:start="1089:39" pos:end="1089:45">estatus</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1091:9" pos:end="1091:35"><expr pos:start="1091:9" pos:end="1091:34"><name pos:start="1091:9" pos:end="1091:23"><name pos:start="1091:9" pos:end="1091:11">env</name><operator pos:start="1091:12" pos:end="1091:13">-&gt;</operator><name pos:start="1091:14" pos:end="1091:17">regs</name><index pos:start="1091:18" pos:end="1091:23">[<expr pos:start="1091:19" pos:end="1091:22"><name pos:start="1091:19" pos:end="1091:22">R_EA</name></expr>]</index></name> <operator pos:start="1091:25" pos:end="1091:25">=</operator> <name pos:start="1091:27" pos:end="1091:34"><name pos:start="1091:27" pos:end="1091:30">regs</name><operator pos:start="1091:31" pos:end="1091:32">-&gt;</operator><name pos:start="1091:33" pos:end="1091:34">ea</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="1093:9" pos:end="1093:43">/* TODO: unsigned long  orig_r7; */</comment>



        <comment type="block" pos:start="1097:9" pos:end="1097:48">/* Emulate eret when starting thread. */</comment>

        <expr_stmt pos:start="1099:9" pos:end="1099:35"><expr pos:start="1099:9" pos:end="1099:34"><name pos:start="1099:9" pos:end="1099:23"><name pos:start="1099:9" pos:end="1099:11">env</name><operator pos:start="1099:12" pos:end="1099:13">-&gt;</operator><name pos:start="1099:14" pos:end="1099:17">regs</name><index pos:start="1099:18" pos:end="1099:23">[<expr pos:start="1099:19" pos:end="1099:22"><name pos:start="1099:19" pos:end="1099:22">R_PC</name></expr>]</index></name> <operator pos:start="1099:25" pos:end="1099:25">=</operator> <name pos:start="1099:27" pos:end="1099:34"><name pos:start="1099:27" pos:end="1099:30">regs</name><operator pos:start="1099:31" pos:end="1099:32">-&gt;</operator><name pos:start="1099:33" pos:end="1099:34">ea</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1103:1" pos:end="1103:30">#<cpp:directive pos:start="1103:2" pos:end="1103:5">elif</cpp:directive> <expr pos:start="1103:7" pos:end="1103:30"><call pos:start="1103:7" pos:end="1103:30"><name pos:start="1103:7" pos:end="1103:13">defined</name><argument_list pos:start="1103:14" pos:end="1103:30">(<argument pos:start="1103:15" pos:end="1103:29"><expr pos:start="1103:15" pos:end="1103:29"><name pos:start="1103:15" pos:end="1103:29">TARGET_OPENRISC</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1105:5" pos:end="1124:0">{<block_content pos:start="1107:9" pos:end="1119:34">

        <decl_stmt pos:start="1107:9" pos:end="1107:14"><decl pos:start="1107:9" pos:end="1107:13"><type pos:start="1107:9" pos:end="1107:11"><name pos:start="1107:9" pos:end="1107:11">int</name></type> <name pos:start="1107:13" pos:end="1107:13">i</name></decl>;</decl_stmt>



        <for pos:start="1111:9" pos:end="1115:9">for <control pos:start="1111:13" pos:end="1111:32">(<init pos:start="1111:14" pos:end="1111:19"><expr pos:start="1111:14" pos:end="1111:18"><name pos:start="1111:14" pos:end="1111:14">i</name> <operator pos:start="1111:16" pos:end="1111:16">=</operator> <literal type="number" pos:start="1111:18" pos:end="1111:18">0</literal></expr>;</init> <condition pos:start="1111:21" pos:end="1111:27"><expr pos:start="1111:21" pos:end="1111:26"><name pos:start="1111:21" pos:end="1111:21">i</name> <operator pos:start="1111:23" pos:end="1111:23">&lt;</operator> <literal type="number" pos:start="1111:25" pos:end="1111:26">32</literal></expr>;</condition> <incr pos:start="1111:29" pos:end="1111:31"><expr pos:start="1111:29" pos:end="1111:31"><name pos:start="1111:29" pos:end="1111:29">i</name><operator pos:start="1111:30" pos:end="1111:31">++</operator></expr></incr>)</control> <block pos:start="1111:34" pos:end="1115:9">{<block_content pos:start="1113:13" pos:end="1113:39">

            <expr_stmt pos:start="1113:13" pos:end="1113:39"><expr pos:start="1113:13" pos:end="1113:38"><name pos:start="1113:13" pos:end="1113:23"><name pos:start="1113:13" pos:end="1113:15">env</name><operator pos:start="1113:16" pos:end="1113:17">-&gt;</operator><name pos:start="1113:18" pos:end="1113:20">gpr</name><index pos:start="1113:21" pos:end="1113:23">[<expr pos:start="1113:22" pos:end="1113:22"><name pos:start="1113:22" pos:end="1113:22">i</name></expr>]</index></name> <operator pos:start="1113:25" pos:end="1113:25">=</operator> <name pos:start="1113:27" pos:end="1113:38"><name pos:start="1113:27" pos:end="1113:30">regs</name><operator pos:start="1113:31" pos:end="1113:32">-&gt;</operator><name pos:start="1113:33" pos:end="1113:35">gpr</name><index pos:start="1113:36" pos:end="1113:38">[<expr pos:start="1113:37" pos:end="1113:37"><name pos:start="1113:37" pos:end="1113:37">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1117:9" pos:end="1117:27"><expr pos:start="1117:9" pos:end="1117:26"><name pos:start="1117:9" pos:end="1117:15"><name pos:start="1117:9" pos:end="1117:11">env</name><operator pos:start="1117:12" pos:end="1117:13">-&gt;</operator><name pos:start="1117:14" pos:end="1117:15">pc</name></name> <operator pos:start="1117:17" pos:end="1117:17">=</operator> <name pos:start="1117:19" pos:end="1117:26"><name pos:start="1117:19" pos:end="1117:22">regs</name><operator pos:start="1117:23" pos:end="1117:24">-&gt;</operator><name pos:start="1117:25" pos:end="1117:26">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1119:9" pos:end="1119:34"><expr pos:start="1119:9" pos:end="1119:33"><call pos:start="1119:9" pos:end="1119:33"><name pos:start="1119:9" pos:end="1119:18">cpu_set_sr</name><argument_list pos:start="1119:19" pos:end="1119:33">(<argument pos:start="1119:20" pos:end="1119:22"><expr pos:start="1119:20" pos:end="1119:22"><name pos:start="1119:20" pos:end="1119:22">env</name></expr></argument>, <argument pos:start="1119:25" pos:end="1119:32"><expr pos:start="1119:25" pos:end="1119:32"><name pos:start="1119:25" pos:end="1119:32"><name pos:start="1119:25" pos:end="1119:28">regs</name><operator pos:start="1119:29" pos:end="1119:30">-&gt;</operator><name pos:start="1119:31" pos:end="1119:32">sr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1123:1" pos:end="1123:25">#<cpp:directive pos:start="1123:2" pos:end="1123:5">elif</cpp:directive> <expr pos:start="1123:7" pos:end="1123:25"><call pos:start="1123:7" pos:end="1123:25"><name pos:start="1123:7" pos:end="1123:13">defined</name><argument_list pos:start="1123:14" pos:end="1123:25">(<argument pos:start="1123:15" pos:end="1123:24"><expr pos:start="1123:15" pos:end="1123:24"><name pos:start="1123:15" pos:end="1123:24">TARGET_SH4</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1125:5" pos:end="1142:0">{<block_content pos:start="1127:9" pos:end="1137:27">

        <decl_stmt pos:start="1127:9" pos:end="1127:14"><decl pos:start="1127:9" pos:end="1127:13"><type pos:start="1127:9" pos:end="1127:11"><name pos:start="1127:9" pos:end="1127:11">int</name></type> <name pos:start="1127:13" pos:end="1127:13">i</name></decl>;</decl_stmt>



        <for pos:start="1131:9" pos:end="1135:9">for<control pos:start="1131:12" pos:end="1131:31">(<init pos:start="1131:13" pos:end="1131:18"><expr pos:start="1131:13" pos:end="1131:17"><name pos:start="1131:13" pos:end="1131:13">i</name> <operator pos:start="1131:15" pos:end="1131:15">=</operator> <literal type="number" pos:start="1131:17" pos:end="1131:17">0</literal></expr>;</init> <condition pos:start="1131:20" pos:end="1131:26"><expr pos:start="1131:20" pos:end="1131:25"><name pos:start="1131:20" pos:end="1131:20">i</name> <operator pos:start="1131:22" pos:end="1131:22">&lt;</operator> <literal type="number" pos:start="1131:24" pos:end="1131:25">16</literal></expr>;</condition> <incr pos:start="1131:28" pos:end="1131:30"><expr pos:start="1131:28" pos:end="1131:30"><name pos:start="1131:28" pos:end="1131:28">i</name><operator pos:start="1131:29" pos:end="1131:30">++</operator></expr></incr>)</control> <block pos:start="1131:33" pos:end="1135:9">{<block_content pos:start="1133:13" pos:end="1133:42">

            <expr_stmt pos:start="1133:13" pos:end="1133:42"><expr pos:start="1133:13" pos:end="1133:41"><name pos:start="1133:13" pos:end="1133:25"><name pos:start="1133:13" pos:end="1133:15">env</name><operator pos:start="1133:16" pos:end="1133:17">-&gt;</operator><name pos:start="1133:18" pos:end="1133:22">gregs</name><index pos:start="1133:23" pos:end="1133:25">[<expr pos:start="1133:24" pos:end="1133:24"><name pos:start="1133:24" pos:end="1133:24">i</name></expr>]</index></name> <operator pos:start="1133:27" pos:end="1133:27">=</operator> <name pos:start="1133:29" pos:end="1133:41"><name pos:start="1133:29" pos:end="1133:32">regs</name><operator pos:start="1133:33" pos:end="1133:34">-&gt;</operator><name pos:start="1133:35" pos:end="1133:38">regs</name><index pos:start="1133:39" pos:end="1133:41">[<expr pos:start="1133:40" pos:end="1133:40"><name pos:start="1133:40" pos:end="1133:40">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1137:9" pos:end="1137:27"><expr pos:start="1137:9" pos:end="1137:26"><name pos:start="1137:9" pos:end="1137:15"><name pos:start="1137:9" pos:end="1137:11">env</name><operator pos:start="1137:12" pos:end="1137:13">-&gt;</operator><name pos:start="1137:14" pos:end="1137:15">pc</name></name> <operator pos:start="1137:17" pos:end="1137:17">=</operator> <name pos:start="1137:19" pos:end="1137:26"><name pos:start="1137:19" pos:end="1137:22">regs</name><operator pos:start="1137:23" pos:end="1137:24">-&gt;</operator><name pos:start="1137:25" pos:end="1137:26">pc</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1141:1" pos:end="1141:27">#<cpp:directive pos:start="1141:2" pos:end="1141:5">elif</cpp:directive> <expr pos:start="1141:7" pos:end="1141:27"><call pos:start="1141:7" pos:end="1141:27"><name pos:start="1141:7" pos:end="1141:13">defined</name><argument_list pos:start="1141:14" pos:end="1141:27">(<argument pos:start="1141:15" pos:end="1141:26"><expr pos:start="1141:15" pos:end="1141:26"><name pos:start="1141:15" pos:end="1141:26">TARGET_ALPHA</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1143:5" pos:end="1162:0">{<block_content pos:start="1145:9" pos:end="1157:27">

        <decl_stmt pos:start="1145:9" pos:end="1145:14"><decl pos:start="1145:9" pos:end="1145:13"><type pos:start="1145:9" pos:end="1145:11"><name pos:start="1145:9" pos:end="1145:11">int</name></type> <name pos:start="1145:13" pos:end="1145:13">i</name></decl>;</decl_stmt>



        <for pos:start="1149:9" pos:end="1153:9">for<control pos:start="1149:12" pos:end="1149:31">(<init pos:start="1149:13" pos:end="1149:18"><expr pos:start="1149:13" pos:end="1149:17"><name pos:start="1149:13" pos:end="1149:13">i</name> <operator pos:start="1149:15" pos:end="1149:15">=</operator> <literal type="number" pos:start="1149:17" pos:end="1149:17">0</literal></expr>;</init> <condition pos:start="1149:20" pos:end="1149:26"><expr pos:start="1149:20" pos:end="1149:25"><name pos:start="1149:20" pos:end="1149:20">i</name> <operator pos:start="1149:22" pos:end="1149:22">&lt;</operator> <literal type="number" pos:start="1149:24" pos:end="1149:25">28</literal></expr>;</condition> <incr pos:start="1149:28" pos:end="1149:30"><expr pos:start="1149:28" pos:end="1149:30"><name pos:start="1149:28" pos:end="1149:28">i</name><operator pos:start="1149:29" pos:end="1149:30">++</operator></expr></incr>)</control> <block pos:start="1149:33" pos:end="1153:9">{<block_content pos:start="1151:13" pos:end="1151:48">

            <expr_stmt pos:start="1151:13" pos:end="1151:48"><expr pos:start="1151:13" pos:end="1151:47"><name pos:start="1151:13" pos:end="1151:22"><name pos:start="1151:13" pos:end="1151:15">env</name><operator pos:start="1151:16" pos:end="1151:17">-&gt;</operator><name pos:start="1151:18" pos:end="1151:19">ir</name><index pos:start="1151:20" pos:end="1151:22">[<expr pos:start="1151:21" pos:end="1151:21"><name pos:start="1151:21" pos:end="1151:21">i</name></expr>]</index></name> <operator pos:start="1151:24" pos:end="1151:24">=</operator> <operator pos:start="1151:26" pos:end="1151:26">(</operator><operator pos:start="1151:27" pos:end="1151:27">(</operator><name pos:start="1151:28" pos:end="1151:36">abi_ulong</name> <operator pos:start="1151:38" pos:end="1151:38">*</operator><operator pos:start="1151:39" pos:end="1151:39">)</operator><name pos:start="1151:40" pos:end="1151:43">regs</name><operator pos:start="1151:44" pos:end="1151:44">)</operator><index pos:start="1151:45" pos:end="1151:47">[<expr pos:start="1151:46" pos:end="1151:46"><name pos:start="1151:46" pos:end="1151:46">i</name></expr>]</index></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1155:9" pos:end="1155:35"><expr pos:start="1155:9" pos:end="1155:34"><name pos:start="1155:9" pos:end="1155:22"><name pos:start="1155:9" pos:end="1155:11">env</name><operator pos:start="1155:12" pos:end="1155:13">-&gt;</operator><name pos:start="1155:14" pos:end="1155:15">ir</name><index pos:start="1155:16" pos:end="1155:22">[<expr pos:start="1155:17" pos:end="1155:21"><name pos:start="1155:17" pos:end="1155:21">IR_SP</name></expr>]</index></name> <operator pos:start="1155:24" pos:end="1155:24">=</operator> <name pos:start="1155:26" pos:end="1155:34"><name pos:start="1155:26" pos:end="1155:29">regs</name><operator pos:start="1155:30" pos:end="1155:31">-&gt;</operator><name pos:start="1155:32" pos:end="1155:34">usp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1157:9" pos:end="1157:27"><expr pos:start="1157:9" pos:end="1157:26"><name pos:start="1157:9" pos:end="1157:15"><name pos:start="1157:9" pos:end="1157:11">env</name><operator pos:start="1157:12" pos:end="1157:13">-&gt;</operator><name pos:start="1157:14" pos:end="1157:15">pc</name></name> <operator pos:start="1157:17" pos:end="1157:17">=</operator> <name pos:start="1157:19" pos:end="1157:26"><name pos:start="1157:19" pos:end="1157:22">regs</name><operator pos:start="1157:23" pos:end="1157:24">-&gt;</operator><name pos:start="1157:25" pos:end="1157:26">pc</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1161:1" pos:end="1161:26">#<cpp:directive pos:start="1161:2" pos:end="1161:5">elif</cpp:directive> <expr pos:start="1161:7" pos:end="1161:26"><call pos:start="1161:7" pos:end="1161:26"><name pos:start="1161:7" pos:end="1161:13">defined</name><argument_list pos:start="1161:14" pos:end="1161:26">(<argument pos:start="1161:15" pos:end="1161:25"><expr pos:start="1161:15" pos:end="1161:25"><name pos:start="1161:15" pos:end="1161:25">TARGET_CRIS</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1163:5" pos:end="1202:0">{<block_content pos:start="1165:13" pos:end="1197:32">

	    <expr_stmt pos:start="1165:13" pos:end="1165:36"><expr pos:start="1165:13" pos:end="1165:35"><name pos:start="1165:13" pos:end="1165:24"><name pos:start="1165:13" pos:end="1165:15">env</name><operator pos:start="1165:16" pos:end="1165:17">-&gt;</operator><name pos:start="1165:18" pos:end="1165:21">regs</name><index pos:start="1165:22" pos:end="1165:24">[<expr pos:start="1165:23" pos:end="1165:23"><literal type="number" pos:start="1165:23" pos:end="1165:23">0</literal></expr>]</index></name> <operator pos:start="1165:26" pos:end="1165:26">=</operator> <name pos:start="1165:28" pos:end="1165:35"><name pos:start="1165:28" pos:end="1165:31">regs</name><operator pos:start="1165:32" pos:end="1165:33">-&gt;</operator><name pos:start="1165:34" pos:end="1165:35">r0</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1167:13" pos:end="1167:36"><expr pos:start="1167:13" pos:end="1167:35"><name pos:start="1167:13" pos:end="1167:24"><name pos:start="1167:13" pos:end="1167:15">env</name><operator pos:start="1167:16" pos:end="1167:17">-&gt;</operator><name pos:start="1167:18" pos:end="1167:21">regs</name><index pos:start="1167:22" pos:end="1167:24">[<expr pos:start="1167:23" pos:end="1167:23"><literal type="number" pos:start="1167:23" pos:end="1167:23">1</literal></expr>]</index></name> <operator pos:start="1167:26" pos:end="1167:26">=</operator> <name pos:start="1167:28" pos:end="1167:35"><name pos:start="1167:28" pos:end="1167:31">regs</name><operator pos:start="1167:32" pos:end="1167:33">-&gt;</operator><name pos:start="1167:34" pos:end="1167:35">r1</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1169:13" pos:end="1169:36"><expr pos:start="1169:13" pos:end="1169:35"><name pos:start="1169:13" pos:end="1169:24"><name pos:start="1169:13" pos:end="1169:15">env</name><operator pos:start="1169:16" pos:end="1169:17">-&gt;</operator><name pos:start="1169:18" pos:end="1169:21">regs</name><index pos:start="1169:22" pos:end="1169:24">[<expr pos:start="1169:23" pos:end="1169:23"><literal type="number" pos:start="1169:23" pos:end="1169:23">2</literal></expr>]</index></name> <operator pos:start="1169:26" pos:end="1169:26">=</operator> <name pos:start="1169:28" pos:end="1169:35"><name pos:start="1169:28" pos:end="1169:31">regs</name><operator pos:start="1169:32" pos:end="1169:33">-&gt;</operator><name pos:start="1169:34" pos:end="1169:35">r2</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1171:13" pos:end="1171:36"><expr pos:start="1171:13" pos:end="1171:35"><name pos:start="1171:13" pos:end="1171:24"><name pos:start="1171:13" pos:end="1171:15">env</name><operator pos:start="1171:16" pos:end="1171:17">-&gt;</operator><name pos:start="1171:18" pos:end="1171:21">regs</name><index pos:start="1171:22" pos:end="1171:24">[<expr pos:start="1171:23" pos:end="1171:23"><literal type="number" pos:start="1171:23" pos:end="1171:23">3</literal></expr>]</index></name> <operator pos:start="1171:26" pos:end="1171:26">=</operator> <name pos:start="1171:28" pos:end="1171:35"><name pos:start="1171:28" pos:end="1171:31">regs</name><operator pos:start="1171:32" pos:end="1171:33">-&gt;</operator><name pos:start="1171:34" pos:end="1171:35">r3</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1173:13" pos:end="1173:36"><expr pos:start="1173:13" pos:end="1173:35"><name pos:start="1173:13" pos:end="1173:24"><name pos:start="1173:13" pos:end="1173:15">env</name><operator pos:start="1173:16" pos:end="1173:17">-&gt;</operator><name pos:start="1173:18" pos:end="1173:21">regs</name><index pos:start="1173:22" pos:end="1173:24">[<expr pos:start="1173:23" pos:end="1173:23"><literal type="number" pos:start="1173:23" pos:end="1173:23">4</literal></expr>]</index></name> <operator pos:start="1173:26" pos:end="1173:26">=</operator> <name pos:start="1173:28" pos:end="1173:35"><name pos:start="1173:28" pos:end="1173:31">regs</name><operator pos:start="1173:32" pos:end="1173:33">-&gt;</operator><name pos:start="1173:34" pos:end="1173:35">r4</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1175:13" pos:end="1175:36"><expr pos:start="1175:13" pos:end="1175:35"><name pos:start="1175:13" pos:end="1175:24"><name pos:start="1175:13" pos:end="1175:15">env</name><operator pos:start="1175:16" pos:end="1175:17">-&gt;</operator><name pos:start="1175:18" pos:end="1175:21">regs</name><index pos:start="1175:22" pos:end="1175:24">[<expr pos:start="1175:23" pos:end="1175:23"><literal type="number" pos:start="1175:23" pos:end="1175:23">5</literal></expr>]</index></name> <operator pos:start="1175:26" pos:end="1175:26">=</operator> <name pos:start="1175:28" pos:end="1175:35"><name pos:start="1175:28" pos:end="1175:31">regs</name><operator pos:start="1175:32" pos:end="1175:33">-&gt;</operator><name pos:start="1175:34" pos:end="1175:35">r5</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1177:13" pos:end="1177:36"><expr pos:start="1177:13" pos:end="1177:35"><name pos:start="1177:13" pos:end="1177:24"><name pos:start="1177:13" pos:end="1177:15">env</name><operator pos:start="1177:16" pos:end="1177:17">-&gt;</operator><name pos:start="1177:18" pos:end="1177:21">regs</name><index pos:start="1177:22" pos:end="1177:24">[<expr pos:start="1177:23" pos:end="1177:23"><literal type="number" pos:start="1177:23" pos:end="1177:23">6</literal></expr>]</index></name> <operator pos:start="1177:26" pos:end="1177:26">=</operator> <name pos:start="1177:28" pos:end="1177:35"><name pos:start="1177:28" pos:end="1177:31">regs</name><operator pos:start="1177:32" pos:end="1177:33">-&gt;</operator><name pos:start="1177:34" pos:end="1177:35">r6</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1179:13" pos:end="1179:36"><expr pos:start="1179:13" pos:end="1179:35"><name pos:start="1179:13" pos:end="1179:24"><name pos:start="1179:13" pos:end="1179:15">env</name><operator pos:start="1179:16" pos:end="1179:17">-&gt;</operator><name pos:start="1179:18" pos:end="1179:21">regs</name><index pos:start="1179:22" pos:end="1179:24">[<expr pos:start="1179:23" pos:end="1179:23"><literal type="number" pos:start="1179:23" pos:end="1179:23">7</literal></expr>]</index></name> <operator pos:start="1179:26" pos:end="1179:26">=</operator> <name pos:start="1179:28" pos:end="1179:35"><name pos:start="1179:28" pos:end="1179:31">regs</name><operator pos:start="1179:32" pos:end="1179:33">-&gt;</operator><name pos:start="1179:34" pos:end="1179:35">r7</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1181:13" pos:end="1181:36"><expr pos:start="1181:13" pos:end="1181:35"><name pos:start="1181:13" pos:end="1181:24"><name pos:start="1181:13" pos:end="1181:15">env</name><operator pos:start="1181:16" pos:end="1181:17">-&gt;</operator><name pos:start="1181:18" pos:end="1181:21">regs</name><index pos:start="1181:22" pos:end="1181:24">[<expr pos:start="1181:23" pos:end="1181:23"><literal type="number" pos:start="1181:23" pos:end="1181:23">8</literal></expr>]</index></name> <operator pos:start="1181:26" pos:end="1181:26">=</operator> <name pos:start="1181:28" pos:end="1181:35"><name pos:start="1181:28" pos:end="1181:31">regs</name><operator pos:start="1181:32" pos:end="1181:33">-&gt;</operator><name pos:start="1181:34" pos:end="1181:35">r8</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1183:13" pos:end="1183:36"><expr pos:start="1183:13" pos:end="1183:35"><name pos:start="1183:13" pos:end="1183:24"><name pos:start="1183:13" pos:end="1183:15">env</name><operator pos:start="1183:16" pos:end="1183:17">-&gt;</operator><name pos:start="1183:18" pos:end="1183:21">regs</name><index pos:start="1183:22" pos:end="1183:24">[<expr pos:start="1183:23" pos:end="1183:23"><literal type="number" pos:start="1183:23" pos:end="1183:23">9</literal></expr>]</index></name> <operator pos:start="1183:26" pos:end="1183:26">=</operator> <name pos:start="1183:28" pos:end="1183:35"><name pos:start="1183:28" pos:end="1183:31">regs</name><operator pos:start="1183:32" pos:end="1183:33">-&gt;</operator><name pos:start="1183:34" pos:end="1183:35">r9</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1185:13" pos:end="1185:38"><expr pos:start="1185:13" pos:end="1185:37"><name pos:start="1185:13" pos:end="1185:25"><name pos:start="1185:13" pos:end="1185:15">env</name><operator pos:start="1185:16" pos:end="1185:17">-&gt;</operator><name pos:start="1185:18" pos:end="1185:21">regs</name><index pos:start="1185:22" pos:end="1185:25">[<expr pos:start="1185:23" pos:end="1185:24"><literal type="number" pos:start="1185:23" pos:end="1185:24">10</literal></expr>]</index></name> <operator pos:start="1185:27" pos:end="1185:27">=</operator> <name pos:start="1185:29" pos:end="1185:37"><name pos:start="1185:29" pos:end="1185:32">regs</name><operator pos:start="1185:33" pos:end="1185:34">-&gt;</operator><name pos:start="1185:35" pos:end="1185:37">r10</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1187:13" pos:end="1187:38"><expr pos:start="1187:13" pos:end="1187:37"><name pos:start="1187:13" pos:end="1187:25"><name pos:start="1187:13" pos:end="1187:15">env</name><operator pos:start="1187:16" pos:end="1187:17">-&gt;</operator><name pos:start="1187:18" pos:end="1187:21">regs</name><index pos:start="1187:22" pos:end="1187:25">[<expr pos:start="1187:23" pos:end="1187:24"><literal type="number" pos:start="1187:23" pos:end="1187:24">11</literal></expr>]</index></name> <operator pos:start="1187:27" pos:end="1187:27">=</operator> <name pos:start="1187:29" pos:end="1187:37"><name pos:start="1187:29" pos:end="1187:32">regs</name><operator pos:start="1187:33" pos:end="1187:34">-&gt;</operator><name pos:start="1187:35" pos:end="1187:37">r11</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1189:13" pos:end="1189:38"><expr pos:start="1189:13" pos:end="1189:37"><name pos:start="1189:13" pos:end="1189:25"><name pos:start="1189:13" pos:end="1189:15">env</name><operator pos:start="1189:16" pos:end="1189:17">-&gt;</operator><name pos:start="1189:18" pos:end="1189:21">regs</name><index pos:start="1189:22" pos:end="1189:25">[<expr pos:start="1189:23" pos:end="1189:24"><literal type="number" pos:start="1189:23" pos:end="1189:24">12</literal></expr>]</index></name> <operator pos:start="1189:27" pos:end="1189:27">=</operator> <name pos:start="1189:29" pos:end="1189:37"><name pos:start="1189:29" pos:end="1189:32">regs</name><operator pos:start="1189:33" pos:end="1189:34">-&gt;</operator><name pos:start="1189:35" pos:end="1189:37">r12</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1191:13" pos:end="1191:38"><expr pos:start="1191:13" pos:end="1191:37"><name pos:start="1191:13" pos:end="1191:25"><name pos:start="1191:13" pos:end="1191:15">env</name><operator pos:start="1191:16" pos:end="1191:17">-&gt;</operator><name pos:start="1191:18" pos:end="1191:21">regs</name><index pos:start="1191:22" pos:end="1191:25">[<expr pos:start="1191:23" pos:end="1191:24"><literal type="number" pos:start="1191:23" pos:end="1191:24">13</literal></expr>]</index></name> <operator pos:start="1191:27" pos:end="1191:27">=</operator> <name pos:start="1191:29" pos:end="1191:37"><name pos:start="1191:29" pos:end="1191:32">regs</name><operator pos:start="1191:33" pos:end="1191:34">-&gt;</operator><name pos:start="1191:35" pos:end="1191:37">r13</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1193:13" pos:end="1193:46"><expr pos:start="1193:13" pos:end="1193:45"><name pos:start="1193:13" pos:end="1193:25"><name pos:start="1193:13" pos:end="1193:15">env</name><operator pos:start="1193:16" pos:end="1193:17">-&gt;</operator><name pos:start="1193:18" pos:end="1193:21">regs</name><index pos:start="1193:22" pos:end="1193:25">[<expr pos:start="1193:23" pos:end="1193:24"><literal type="number" pos:start="1193:23" pos:end="1193:24">14</literal></expr>]</index></name> <operator pos:start="1193:27" pos:end="1193:27">=</operator> <name pos:start="1193:29" pos:end="1193:45"><name pos:start="1193:29" pos:end="1193:32">info</name><operator pos:start="1193:33" pos:end="1193:34">-&gt;</operator><name pos:start="1193:35" pos:end="1193:45">start_stack</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="1195:13" pos:end="1195:38"><expr pos:start="1195:13" pos:end="1195:37"><name pos:start="1195:13" pos:end="1195:25"><name pos:start="1195:13" pos:end="1195:15">env</name><operator pos:start="1195:16" pos:end="1195:17">-&gt;</operator><name pos:start="1195:18" pos:end="1195:21">regs</name><index pos:start="1195:22" pos:end="1195:25">[<expr pos:start="1195:23" pos:end="1195:24"><literal type="number" pos:start="1195:23" pos:end="1195:24">15</literal></expr>]</index></name> <operator pos:start="1195:27" pos:end="1195:27">=</operator> <name pos:start="1195:29" pos:end="1195:37"><name pos:start="1195:29" pos:end="1195:32">regs</name><operator pos:start="1195:33" pos:end="1195:34">-&gt;</operator><name pos:start="1195:35" pos:end="1195:37">acr</name></name></expr>;</expr_stmt>	    

	    <expr_stmt pos:start="1197:13" pos:end="1197:32"><expr pos:start="1197:13" pos:end="1197:31"><name pos:start="1197:13" pos:end="1197:19"><name pos:start="1197:13" pos:end="1197:15">env</name><operator pos:start="1197:16" pos:end="1197:17">-&gt;</operator><name pos:start="1197:18" pos:end="1197:19">pc</name></name> <operator pos:start="1197:21" pos:end="1197:21">=</operator> <name pos:start="1197:23" pos:end="1197:31"><name pos:start="1197:23" pos:end="1197:26">regs</name><operator pos:start="1197:27" pos:end="1197:28">-&gt;</operator><name pos:start="1197:29" pos:end="1197:31">erp</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1201:1" pos:end="1201:27">#<cpp:directive pos:start="1201:2" pos:end="1201:5">elif</cpp:directive> <expr pos:start="1201:7" pos:end="1201:27"><call pos:start="1201:7" pos:end="1201:27"><name pos:start="1201:7" pos:end="1201:13">defined</name><argument_list pos:start="1201:14" pos:end="1201:27">(<argument pos:start="1201:15" pos:end="1201:26"><expr pos:start="1201:15" pos:end="1201:26"><name pos:start="1201:15" pos:end="1201:26">TARGET_S390X</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1203:5" pos:end="1220:0">{<block_content pos:start="1205:13" pos:end="1215:43">

            <decl_stmt pos:start="1205:13" pos:end="1205:18"><decl pos:start="1205:13" pos:end="1205:17"><type pos:start="1205:13" pos:end="1205:15"><name pos:start="1205:13" pos:end="1205:15">int</name></type> <name pos:start="1205:17" pos:end="1205:17">i</name></decl>;</decl_stmt>

            <for pos:start="1207:13" pos:end="1211:13">for <control pos:start="1207:17" pos:end="1207:36">(<init pos:start="1207:18" pos:end="1207:23"><expr pos:start="1207:18" pos:end="1207:22"><name pos:start="1207:18" pos:end="1207:18">i</name> <operator pos:start="1207:20" pos:end="1207:20">=</operator> <literal type="number" pos:start="1207:22" pos:end="1207:22">0</literal></expr>;</init> <condition pos:start="1207:25" pos:end="1207:31"><expr pos:start="1207:25" pos:end="1207:30"><name pos:start="1207:25" pos:end="1207:25">i</name> <operator pos:start="1207:27" pos:end="1207:27">&lt;</operator> <literal type="number" pos:start="1207:29" pos:end="1207:30">16</literal></expr>;</condition> <incr pos:start="1207:33" pos:end="1207:35"><expr pos:start="1207:33" pos:end="1207:35"><name pos:start="1207:33" pos:end="1207:33">i</name><operator pos:start="1207:34" pos:end="1207:35">++</operator></expr></incr>)</control> <block pos:start="1207:38" pos:end="1211:13">{<block_content pos:start="1209:17" pos:end="1209:45">

                <expr_stmt pos:start="1209:17" pos:end="1209:45"><expr pos:start="1209:17" pos:end="1209:44"><name pos:start="1209:17" pos:end="1209:28"><name pos:start="1209:17" pos:end="1209:19">env</name><operator pos:start="1209:20" pos:end="1209:21">-&gt;</operator><name pos:start="1209:22" pos:end="1209:25">regs</name><index pos:start="1209:26" pos:end="1209:28">[<expr pos:start="1209:27" pos:end="1209:27"><name pos:start="1209:27" pos:end="1209:27">i</name></expr>]</index></name> <operator pos:start="1209:30" pos:end="1209:30">=</operator> <name pos:start="1209:32" pos:end="1209:44"><name pos:start="1209:32" pos:end="1209:35">regs</name><operator pos:start="1209:36" pos:end="1209:37">-&gt;</operator><name pos:start="1209:38" pos:end="1209:41">gprs</name><index pos:start="1209:42" pos:end="1209:44">[<expr pos:start="1209:43" pos:end="1209:43"><name pos:start="1209:43" pos:end="1209:43">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="1213:13" pos:end="1213:43"><expr pos:start="1213:13" pos:end="1213:42"><name pos:start="1213:13" pos:end="1213:25"><name pos:start="1213:13" pos:end="1213:15">env</name><operator pos:start="1213:16" pos:end="1213:17">-&gt;</operator><name pos:start="1213:18" pos:end="1213:20">psw</name><operator pos:start="1213:21" pos:end="1213:21">.</operator><name pos:start="1213:22" pos:end="1213:25">mask</name></name> <operator pos:start="1213:27" pos:end="1213:27">=</operator> <name pos:start="1213:29" pos:end="1213:42"><name pos:start="1213:29" pos:end="1213:32">regs</name><operator pos:start="1213:33" pos:end="1213:34">-&gt;</operator><name pos:start="1213:35" pos:end="1213:37">psw</name><operator pos:start="1213:38" pos:end="1213:38">.</operator><name pos:start="1213:39" pos:end="1213:42">mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="1215:13" pos:end="1215:43"><expr pos:start="1215:13" pos:end="1215:42"><name pos:start="1215:13" pos:end="1215:25"><name pos:start="1215:13" pos:end="1215:15">env</name><operator pos:start="1215:16" pos:end="1215:17">-&gt;</operator><name pos:start="1215:18" pos:end="1215:20">psw</name><operator pos:start="1215:21" pos:end="1215:21">.</operator><name pos:start="1215:22" pos:end="1215:25">addr</name></name> <operator pos:start="1215:27" pos:end="1215:27">=</operator> <name pos:start="1215:29" pos:end="1215:42"><name pos:start="1215:29" pos:end="1215:32">regs</name><operator pos:start="1215:33" pos:end="1215:34">-&gt;</operator><name pos:start="1215:35" pos:end="1215:37">psw</name><operator pos:start="1215:38" pos:end="1215:38">.</operator><name pos:start="1215:39" pos:end="1215:42">addr</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1219:1" pos:end="1219:28">#<cpp:directive pos:start="1219:2" pos:end="1219:5">elif</cpp:directive> <expr pos:start="1219:7" pos:end="1219:28"><call pos:start="1219:7" pos:end="1219:28"><name pos:start="1219:7" pos:end="1219:13">defined</name><argument_list pos:start="1219:14" pos:end="1219:28">(<argument pos:start="1219:15" pos:end="1219:27"><expr pos:start="1219:15" pos:end="1219:27"><name pos:start="1219:15" pos:end="1219:27">TARGET_TILEGX</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1221:5" pos:end="1242:0">{<block_content pos:start="1223:9" pos:end="1237:27">

        <decl_stmt pos:start="1223:9" pos:end="1223:14"><decl pos:start="1223:9" pos:end="1223:13"><type pos:start="1223:9" pos:end="1223:11"><name pos:start="1223:9" pos:end="1223:11">int</name></type> <name pos:start="1223:13" pos:end="1223:13">i</name></decl>;</decl_stmt>

        <for pos:start="1225:9" pos:end="1229:9">for <control pos:start="1225:13" pos:end="1225:44">(<init pos:start="1225:14" pos:end="1225:19"><expr pos:start="1225:14" pos:end="1225:18"><name pos:start="1225:14" pos:end="1225:14">i</name> <operator pos:start="1225:16" pos:end="1225:16">=</operator> <literal type="number" pos:start="1225:18" pos:end="1225:18">0</literal></expr>;</init> <condition pos:start="1225:21" pos:end="1225:39"><expr pos:start="1225:21" pos:end="1225:38"><name pos:start="1225:21" pos:end="1225:21">i</name> <operator pos:start="1225:23" pos:end="1225:23">&lt;</operator> <name pos:start="1225:25" pos:end="1225:38">TILEGX_R_COUNT</name></expr>;</condition> <incr pos:start="1225:41" pos:end="1225:43"><expr pos:start="1225:41" pos:end="1225:43"><name pos:start="1225:41" pos:end="1225:41">i</name><operator pos:start="1225:42" pos:end="1225:43">++</operator></expr></incr>)</control> <block pos:start="1225:46" pos:end="1229:9">{<block_content pos:start="1227:13" pos:end="1227:41">

            <expr_stmt pos:start="1227:13" pos:end="1227:41"><expr pos:start="1227:13" pos:end="1227:40"><name pos:start="1227:13" pos:end="1227:24"><name pos:start="1227:13" pos:end="1227:15">env</name><operator pos:start="1227:16" pos:end="1227:17">-&gt;</operator><name pos:start="1227:18" pos:end="1227:21">regs</name><index pos:start="1227:22" pos:end="1227:24">[<expr pos:start="1227:23" pos:end="1227:23"><name pos:start="1227:23" pos:end="1227:23">i</name></expr>]</index></name> <operator pos:start="1227:26" pos:end="1227:26">=</operator> <name pos:start="1227:28" pos:end="1227:40"><name pos:start="1227:28" pos:end="1227:31">regs</name><operator pos:start="1227:32" pos:end="1227:33">-&gt;</operator><name pos:start="1227:34" pos:end="1227:37">regs</name><index pos:start="1227:38" pos:end="1227:40">[<expr pos:start="1227:39" pos:end="1227:39"><name pos:start="1227:39" pos:end="1227:39">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="1231:9" pos:end="1235:9">for <control pos:start="1231:13" pos:end="1231:46">(<init pos:start="1231:14" pos:end="1231:19"><expr pos:start="1231:14" pos:end="1231:18"><name pos:start="1231:14" pos:end="1231:14">i</name> <operator pos:start="1231:16" pos:end="1231:16">=</operator> <literal type="number" pos:start="1231:18" pos:end="1231:18">0</literal></expr>;</init> <condition pos:start="1231:21" pos:end="1231:41"><expr pos:start="1231:21" pos:end="1231:40"><name pos:start="1231:21" pos:end="1231:21">i</name> <operator pos:start="1231:23" pos:end="1231:23">&lt;</operator> <name pos:start="1231:25" pos:end="1231:40">TILEGX_SPR_COUNT</name></expr>;</condition> <incr pos:start="1231:43" pos:end="1231:45"><expr pos:start="1231:43" pos:end="1231:45"><name pos:start="1231:43" pos:end="1231:43">i</name><operator pos:start="1231:44" pos:end="1231:45">++</operator></expr></incr>)</control> <block pos:start="1231:48" pos:end="1235:9">{<block_content pos:start="1233:13" pos:end="1233:31">

            <expr_stmt pos:start="1233:13" pos:end="1233:31"><expr pos:start="1233:13" pos:end="1233:30"><name pos:start="1233:13" pos:end="1233:26"><name pos:start="1233:13" pos:end="1233:15">env</name><operator pos:start="1233:16" pos:end="1233:17">-&gt;</operator><name pos:start="1233:18" pos:end="1233:23">spregs</name><index pos:start="1233:24" pos:end="1233:26">[<expr pos:start="1233:25" pos:end="1233:25"><name pos:start="1233:25" pos:end="1233:25">i</name></expr>]</index></name> <operator pos:start="1233:28" pos:end="1233:28">=</operator> <literal type="number" pos:start="1233:30" pos:end="1233:30">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1237:9" pos:end="1237:27"><expr pos:start="1237:9" pos:end="1237:26"><name pos:start="1237:9" pos:end="1237:15"><name pos:start="1237:9" pos:end="1237:11">env</name><operator pos:start="1237:12" pos:end="1237:13">-&gt;</operator><name pos:start="1237:14" pos:end="1237:15">pc</name></name> <operator pos:start="1237:17" pos:end="1237:17">=</operator> <name pos:start="1237:19" pos:end="1237:26"><name pos:start="1237:19" pos:end="1237:22">regs</name><operator pos:start="1237:23" pos:end="1237:24">-&gt;</operator><name pos:start="1237:25" pos:end="1237:26">pc</name></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:elif pos:start="1241:1" pos:end="1241:26">#<cpp:directive pos:start="1241:2" pos:end="1241:5">elif</cpp:directive> <expr pos:start="1241:7" pos:end="1241:26"><call pos:start="1241:7" pos:end="1241:26"><name pos:start="1241:7" pos:end="1241:13">defined</name><argument_list pos:start="1241:14" pos:end="1241:26">(<argument pos:start="1241:15" pos:end="1241:25"><expr pos:start="1241:15" pos:end="1241:25"><name pos:start="1241:15" pos:end="1241:25">TARGET_HPPA</name></expr></argument>)</argument_list></call></expr></cpp:elif>

    <block pos:start="1243:5" pos:end="1268:0">{<block_content pos:start="1245:9" pos:end="1255:36">

        <decl_stmt pos:start="1245:9" pos:end="1245:14"><decl pos:start="1245:9" pos:end="1245:13"><type pos:start="1245:9" pos:end="1245:11"><name pos:start="1245:9" pos:end="1245:11">int</name></type> <name pos:start="1245:13" pos:end="1245:13">i</name></decl>;</decl_stmt>

        <for pos:start="1247:9" pos:end="1251:9">for <control pos:start="1247:13" pos:end="1247:32">(<init pos:start="1247:14" pos:end="1247:19"><expr pos:start="1247:14" pos:end="1247:18"><name pos:start="1247:14" pos:end="1247:14">i</name> <operator pos:start="1247:16" pos:end="1247:16">=</operator> <literal type="number" pos:start="1247:18" pos:end="1247:18">1</literal></expr>;</init> <condition pos:start="1247:21" pos:end="1247:27"><expr pos:start="1247:21" pos:end="1247:26"><name pos:start="1247:21" pos:end="1247:21">i</name> <operator pos:start="1247:23" pos:end="1247:23">&lt;</operator> <literal type="number" pos:start="1247:25" pos:end="1247:26">32</literal></expr>;</condition> <incr pos:start="1247:29" pos:end="1247:31"><expr pos:start="1247:29" pos:end="1247:31"><name pos:start="1247:29" pos:end="1247:29">i</name><operator pos:start="1247:30" pos:end="1247:31">++</operator></expr></incr>)</control> <block pos:start="1247:34" pos:end="1251:9">{<block_content pos:start="1249:13" pos:end="1249:37">

            <expr_stmt pos:start="1249:13" pos:end="1249:37"><expr pos:start="1249:13" pos:end="1249:36"><name pos:start="1249:13" pos:end="1249:22"><name pos:start="1249:13" pos:end="1249:15">env</name><operator pos:start="1249:16" pos:end="1249:17">-&gt;</operator><name pos:start="1249:18" pos:end="1249:19">gr</name><index pos:start="1249:20" pos:end="1249:22">[<expr pos:start="1249:21" pos:end="1249:21"><name pos:start="1249:21" pos:end="1249:21">i</name></expr>]</index></name> <operator pos:start="1249:24" pos:end="1249:24">=</operator> <name pos:start="1249:26" pos:end="1249:36"><name pos:start="1249:26" pos:end="1249:29">regs</name><operator pos:start="1249:30" pos:end="1249:31">-&gt;</operator><name pos:start="1249:32" pos:end="1249:33">gr</name><index pos:start="1249:34" pos:end="1249:36">[<expr pos:start="1249:35" pos:end="1249:35"><name pos:start="1249:35" pos:end="1249:35">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="1253:9" pos:end="1253:36"><expr pos:start="1253:9" pos:end="1253:35"><name pos:start="1253:9" pos:end="1253:19"><name pos:start="1253:9" pos:end="1253:11">env</name><operator pos:start="1253:12" pos:end="1253:13">-&gt;</operator><name pos:start="1253:14" pos:end="1253:19">iaoq_f</name></name> <operator pos:start="1253:21" pos:end="1253:21">=</operator> <name pos:start="1253:23" pos:end="1253:35"><name pos:start="1253:23" pos:end="1253:26">regs</name><operator pos:start="1253:27" pos:end="1253:28">-&gt;</operator><name pos:start="1253:29" pos:end="1253:32">iaoq</name><index pos:start="1253:33" pos:end="1253:35">[<expr pos:start="1253:34" pos:end="1253:34"><literal type="number" pos:start="1253:34" pos:end="1253:34">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="1255:9" pos:end="1255:36"><expr pos:start="1255:9" pos:end="1255:35"><name pos:start="1255:9" pos:end="1255:19"><name pos:start="1255:9" pos:end="1255:11">env</name><operator pos:start="1255:12" pos:end="1255:13">-&gt;</operator><name pos:start="1255:14" pos:end="1255:19">iaoq_b</name></name> <operator pos:start="1255:21" pos:end="1255:21">=</operator> <name pos:start="1255:23" pos:end="1255:35"><name pos:start="1255:23" pos:end="1255:26">regs</name><operator pos:start="1255:27" pos:end="1255:28">-&gt;</operator><name pos:start="1255:29" pos:end="1255:32">iaoq</name><index pos:start="1255:33" pos:end="1255:35">[<expr pos:start="1255:34" pos:end="1255:34"><literal type="number" pos:start="1255:34" pos:end="1255:34">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:else pos:start="1259:1" pos:end="1259:5">#<cpp:directive pos:start="1259:2" pos:end="1259:5">else</cpp:directive></cpp:else>

<cpp:error pos:start="1261:1" pos:end="1261:29">#<cpp:directive pos:start="1261:2" pos:end="1261:6">error</cpp:directive> unsupported target CPU</cpp:error>

<cpp:endif pos:start="1263:1" pos:end="1263:6">#<cpp:directive pos:start="1263:2" pos:end="1263:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="1267:1" pos:end="1267:76">#<cpp:directive pos:start="1267:2" pos:end="1267:3">if</cpp:directive> <expr pos:start="1267:5" pos:end="1267:76"><call pos:start="1267:5" pos:end="1267:23"><name pos:start="1267:5" pos:end="1267:11">defined</name><argument_list pos:start="1267:12" pos:end="1267:23">(<argument pos:start="1267:13" pos:end="1267:22"><expr pos:start="1267:13" pos:end="1267:22"><name pos:start="1267:13" pos:end="1267:22">TARGET_ARM</name></expr></argument>)</argument_list></call> <operator pos:start="1267:25" pos:end="1267:26">||</operator> <call pos:start="1267:28" pos:end="1267:47"><name pos:start="1267:28" pos:end="1267:34">defined</name><argument_list pos:start="1267:35" pos:end="1267:47">(<argument pos:start="1267:36" pos:end="1267:46"><expr pos:start="1267:36" pos:end="1267:46"><name pos:start="1267:36" pos:end="1267:46">TARGET_M68K</name></expr></argument>)</argument_list></call> <operator pos:start="1267:49" pos:end="1267:50">||</operator> <call pos:start="1267:52" pos:end="1267:76"><name pos:start="1267:52" pos:end="1267:58">defined</name><argument_list pos:start="1267:59" pos:end="1267:76">(<argument pos:start="1267:60" pos:end="1267:75"><expr pos:start="1267:60" pos:end="1267:75"><name pos:start="1267:60" pos:end="1267:75">TARGET_UNICORE32</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="1269:5" pos:end="1269:39"><expr pos:start="1269:5" pos:end="1269:38"><name pos:start="1269:5" pos:end="1269:18"><name pos:start="1269:5" pos:end="1269:6">ts</name><operator pos:start="1269:7" pos:end="1269:8">-&gt;</operator><name pos:start="1269:9" pos:end="1269:18">stack_base</name></name> <operator pos:start="1269:20" pos:end="1269:20">=</operator> <name pos:start="1269:22" pos:end="1269:38"><name pos:start="1269:22" pos:end="1269:25">info</name><operator pos:start="1269:26" pos:end="1269:27">-&gt;</operator><name pos:start="1269:28" pos:end="1269:38">start_stack</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="1271:5" pos:end="1271:30"><expr pos:start="1271:5" pos:end="1271:29"><name pos:start="1271:5" pos:end="1271:17"><name pos:start="1271:5" pos:end="1271:6">ts</name><operator pos:start="1271:7" pos:end="1271:8">-&gt;</operator><name pos:start="1271:9" pos:end="1271:17">heap_base</name></name> <operator pos:start="1271:19" pos:end="1271:19">=</operator> <name pos:start="1271:21" pos:end="1271:29"><name pos:start="1271:21" pos:end="1271:24">info</name><operator pos:start="1271:25" pos:end="1271:26">-&gt;</operator><name pos:start="1271:27" pos:end="1271:29">brk</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="1273:5" pos:end="1273:65">/* This will be filled in on the first SYS_HEAPINFO call.  */</comment>

    <expr_stmt pos:start="1275:5" pos:end="1278:0"><expr pos:start="1275:5" pos:end="1275:22"><name pos:start="1275:5" pos:end="1275:18"><name pos:start="1275:5" pos:end="1275:6">ts</name><operator pos:start="1275:7" pos:end="1275:8">-&gt;</operator><name pos:start="1275:9" pos:end="1275:18">heap_limit</name></name> <operator pos:start="1275:20" pos:end="1275:20">=</operator> <literal type="number" pos:start="1275:22" pos:end="1275:22">0</literal></expr>;</expr_stmt>

<cpp:endif pos:start="1277:1" pos:end="1277:6">#<cpp:directive pos:start="1277:2" pos:end="1277:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="1281:5" pos:end="1295:5"><if pos:start="1281:5" pos:end="1295:5">if <condition pos:start="1281:8" pos:end="1281:21">(<expr pos:start="1281:9" pos:end="1281:20"><name pos:start="1281:9" pos:end="1281:20">gdbstub_port</name></expr>)</condition> <block pos:start="1281:23" pos:end="1295:5">{<block_content pos:start="1283:9" pos:end="1293:30">

        <if_stmt pos:start="1283:9" pos:end="1291:9"><if pos:start="1283:9" pos:end="1291:9">if <condition pos:start="1283:12" pos:end="1283:46">(<expr pos:start="1283:13" pos:end="1283:45"><call pos:start="1283:13" pos:end="1283:41"><name pos:start="1283:13" pos:end="1283:27">gdbserver_start</name><argument_list pos:start="1283:28" pos:end="1283:41">(<argument pos:start="1283:29" pos:end="1283:40"><expr pos:start="1283:29" pos:end="1283:40"><name pos:start="1283:29" pos:end="1283:40">gdbstub_port</name></expr></argument>)</argument_list></call> <operator pos:start="1283:43" pos:end="1283:43">&lt;</operator> <literal type="number" pos:start="1283:45" pos:end="1283:45">0</literal></expr>)</condition> <block pos:start="1283:48" pos:end="1291:9">{<block_content pos:start="1285:13" pos:end="1289:31">

            <expr_stmt pos:start="1285:13" pos:end="1287:34"><expr pos:start="1285:13" pos:end="1287:33"><call pos:start="1285:13" pos:end="1287:33"><name pos:start="1285:13" pos:end="1285:19">fprintf</name><argument_list pos:start="1285:20" pos:end="1287:33">(<argument pos:start="1285:21" pos:end="1285:26"><expr pos:start="1285:21" pos:end="1285:26"><name pos:start="1285:21" pos:end="1285:26">stderr</name></expr></argument>, <argument pos:start="1285:29" pos:end="1285:73"><expr pos:start="1285:29" pos:end="1285:73"><literal type="string" pos:start="1285:29" pos:end="1285:73">"qemu: could not open gdbserver on port %d\n"</literal></expr></argument>,

                    <argument pos:start="1287:21" pos:end="1287:32"><expr pos:start="1287:21" pos:end="1287:32"><name pos:start="1287:21" pos:end="1287:32">gdbstub_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1289:13" pos:end="1289:31"><expr pos:start="1289:13" pos:end="1289:30"><call pos:start="1289:13" pos:end="1289:30"><name pos:start="1289:13" pos:end="1289:16">exit</name><argument_list pos:start="1289:17" pos:end="1289:30">(<argument pos:start="1289:18" pos:end="1289:29"><expr pos:start="1289:18" pos:end="1289:29"><name pos:start="1289:18" pos:end="1289:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1293:9" pos:end="1293:30"><expr pos:start="1293:9" pos:end="1293:29"><call pos:start="1293:9" pos:end="1293:29"><name pos:start="1293:9" pos:end="1293:21">gdb_handlesig</name><argument_list pos:start="1293:22" pos:end="1293:29">(<argument pos:start="1293:23" pos:end="1293:25"><expr pos:start="1293:23" pos:end="1293:25"><name pos:start="1293:23" pos:end="1293:25">cpu</name></expr></argument>, <argument pos:start="1293:28" pos:end="1293:28"><expr pos:start="1293:28" pos:end="1293:28"><literal type="number" pos:start="1293:28" pos:end="1293:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1297:5" pos:end="1297:18"><expr pos:start="1297:5" pos:end="1297:17"><call pos:start="1297:5" pos:end="1297:17"><name pos:start="1297:5" pos:end="1297:12">cpu_loop</name><argument_list pos:start="1297:13" pos:end="1297:17">(<argument pos:start="1297:14" pos:end="1297:16"><expr pos:start="1297:14" pos:end="1297:16"><name pos:start="1297:14" pos:end="1297:16">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="1299:5" pos:end="1299:21">/* never exits */</comment>

    <return pos:start="1301:5" pos:end="1301:13">return <expr pos:start="1301:12" pos:end="1301:12"><literal type="number" pos:start="1301:12" pos:end="1301:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
