<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17856.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">int64_t</name></type> <name pos:start="1:9" pos:end="1:24">ff_ape_parse_tag</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:21">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">file_size</name> <init pos:start="7:19" pos:end="7:33">= <expr pos:start="7:21" pos:end="7:33"><call pos:start="7:21" pos:end="7:33"><name pos:start="7:21" pos:end="7:29">avio_size</name><argument_list pos:start="7:30" pos:end="7:33">(<argument pos:start="7:31" pos:end="7:32"><expr pos:start="7:31" pos:end="7:32"><name pos:start="7:31" pos:end="7:32">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>, <decl pos:start="9:19" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:24">fields</name></decl>, <decl pos:start="9:27" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:27" pos:end="9:35">tag_bytes</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:18">[<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:21">tag_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:41">(<expr pos:start="19:9" pos:end="19:40"><name pos:start="19:9" pos:end="19:17">file_size</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:40">APE_TAG_FOOTER_BYTES</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:13">avio_seek</name><argument_list pos:start="25:14" pos:end="25:61">(<argument pos:start="25:15" pos:end="25:16"><expr pos:start="25:15" pos:end="25:16"><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>, <argument pos:start="25:19" pos:end="25:50"><expr pos:start="25:19" pos:end="25:50"><name pos:start="25:19" pos:end="25:27">file_size</name> <operator pos:start="25:29" pos:end="25:29">-</operator> <name pos:start="25:31" pos:end="25:50">APE_TAG_FOOTER_BYTES</name></expr></argument>, <argument pos:start="25:53" pos:end="25:60"><expr pos:start="25:53" pos:end="25:60"><name pos:start="25:53" pos:end="25:60">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:13">avio_read</name><argument_list pos:start="29:14" pos:end="29:25">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>, <argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">buf</name></expr></argument>, <argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="29:32" pos:end="29:45">/* APETAGEX */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:36">(<expr pos:start="31:9" pos:end="31:35"><call pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:15">strncmp</name><argument_list pos:start="31:16" pos:end="31:35">(<argument pos:start="31:17" pos:end="31:19"><expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">buf</name></expr></argument>, <argument pos:start="31:22" pos:end="31:31"><expr pos:start="31:22" pos:end="31:31"><literal type="string" pos:start="31:22" pos:end="31:31">"APETAGEX"</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:38" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:7">val</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:23"><name pos:start="39:11" pos:end="39:19">avio_rl32</name><argument_list pos:start="39:20" pos:end="39:23">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="39:32" pos:end="39:52">/* APE tag version */</comment>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:30">(<expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:11">val</name> <operator pos:start="41:13" pos:end="41:13">&gt;</operator> <name pos:start="41:15" pos:end="41:29">APE_TAG_VERSION</name></expr>)</condition> <block pos:start="41:32" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:17">

        <expr_stmt pos:start="43:9" pos:end="43:86"><expr pos:start="43:9" pos:end="43:85"><call pos:start="43:9" pos:end="43:85"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:85">(<argument pos:start="43:16" pos:end="43:16"><expr pos:start="43:16" pos:end="43:16"><name pos:start="43:16" pos:end="43:16">s</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:67"><expr pos:start="43:33" pos:end="43:67"><literal type="string" pos:start="43:33" pos:end="43:67">"Unsupported tag version. (&gt;=%d)\n"</literal></expr></argument>, <argument pos:start="43:70" pos:end="43:84"><expr pos:start="43:70" pos:end="43:84"><name pos:start="43:70" pos:end="43:84">APE_TAG_VERSION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:13">tag_bytes</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <call pos:start="51:17" pos:end="51:29"><name pos:start="51:17" pos:end="51:25">avio_rl32</name><argument_list pos:start="51:26" pos:end="51:29">(<argument pos:start="51:27" pos:end="51:28"><expr pos:start="51:27" pos:end="51:28"><name pos:start="51:27" pos:end="51:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:32" pos:end="51:45">/* tag size */</comment>

    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:62">(<expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:17">tag_bytes</name> <operator pos:start="53:19" pos:end="53:19">-</operator> <name pos:start="53:21" pos:end="53:40">APE_TAG_FOOTER_BYTES</name> <operator pos:start="53:42" pos:end="53:42">&gt;</operator> <operator pos:start="53:44" pos:end="53:44">(</operator><literal type="number" pos:start="53:45" pos:end="53:48">1024</literal> <operator pos:start="53:50" pos:end="53:50">*</operator> <literal type="number" pos:start="53:52" pos:end="53:55">1024</literal> <operator pos:start="53:57" pos:end="53:57">*</operator> <literal type="number" pos:start="53:59" pos:end="53:60">16</literal><operator pos:start="53:61" pos:end="53:61">)</operator></expr>)</condition> <block pos:start="53:64" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:61"><expr pos:start="55:9" pos:end="55:60"><call pos:start="55:9" pos:end="55:60"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:60">(<argument pos:start="55:16" pos:end="55:16"><expr pos:start="55:16" pos:end="55:16"><name pos:start="55:16" pos:end="55:16">s</name></expr></argument>, <argument pos:start="55:19" pos:end="55:30"><expr pos:start="55:19" pos:end="55:30"><name pos:start="55:19" pos:end="55:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:33" pos:end="55:59"><expr pos:start="55:33" pos:end="55:59"><literal type="string" pos:start="55:33" pos:end="55:59">"Tag size is way too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:61"><expr pos:start="63:5" pos:end="63:60"><name pos:start="63:5" pos:end="63:13">tag_start</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:25">file_size</name> <operator pos:start="63:27" pos:end="63:27">-</operator> <name pos:start="63:29" pos:end="63:37">tag_bytes</name> <operator pos:start="63:39" pos:end="63:39">-</operator> <name pos:start="63:41" pos:end="63:60">APE_TAG_FOOTER_BYTES</name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:22">(<expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:17">tag_start</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <literal type="number" pos:start="65:21" pos:end="65:21">0</literal></expr>)</condition> <block pos:start="65:24" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:17">

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><call pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:68">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:30"><expr pos:start="67:19" pos:end="67:30"><name pos:start="67:19" pos:end="67:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:33" pos:end="67:56"><expr pos:start="67:33" pos:end="67:56"><literal type="string" pos:start="67:33" pos:end="67:56">"Invalid tag size %u.\n"</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:67"><expr pos:start="67:59" pos:end="67:67"><name pos:start="67:59" pos:end="67:67">tag_bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:10">fields</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <call pos:start="75:14" pos:end="75:26"><name pos:start="75:14" pos:end="75:22">avio_rl32</name><argument_list pos:start="75:23" pos:end="75:26">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="75:32" pos:end="75:53">/* number of fields */</comment>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:23">(<expr pos:start="77:9" pos:end="77:22"><name pos:start="77:9" pos:end="77:14">fields</name> <operator pos:start="77:16" pos:end="77:16">&gt;</operator> <literal type="number" pos:start="77:18" pos:end="77:22">65536</literal></expr>)</condition> <block pos:start="77:25" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:17">

        <expr_stmt pos:start="79:9" pos:end="79:70"><expr pos:start="79:9" pos:end="79:69"><call pos:start="79:9" pos:end="79:69"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:69">(<argument pos:start="79:16" pos:end="79:16"><expr pos:start="79:16" pos:end="79:16"><name pos:start="79:16" pos:end="79:16">s</name></expr></argument>, <argument pos:start="79:19" pos:end="79:30"><expr pos:start="79:19" pos:end="79:30"><name pos:start="79:19" pos:end="79:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:33" pos:end="79:60"><expr pos:start="79:33" pos:end="79:60"><literal type="string" pos:start="79:33" pos:end="79:60">"Too many tag fields (%d)\n"</literal></expr></argument>, <argument pos:start="79:63" pos:end="79:68"><expr pos:start="79:63" pos:end="79:68"><name pos:start="79:63" pos:end="79:68">fields</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:7">val</name> <operator pos:start="87:9" pos:end="87:9">=</operator> <call pos:start="87:11" pos:end="87:23"><name pos:start="87:11" pos:end="87:19">avio_rl32</name><argument_list pos:start="87:20" pos:end="87:23">(<argument pos:start="87:21" pos:end="87:22"><expr pos:start="87:21" pos:end="87:22"><name pos:start="87:21" pos:end="87:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="87:32" pos:end="87:42">/* flags */</comment>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:37">(<expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:11">val</name> <operator pos:start="89:13" pos:end="89:13">&amp;</operator> <name pos:start="89:15" pos:end="89:36">APE_TAG_FLAG_IS_HEADER</name></expr>)</condition> <block pos:start="89:39" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:17">

        <expr_stmt pos:start="91:9" pos:end="91:57"><expr pos:start="91:9" pos:end="91:56"><call pos:start="91:9" pos:end="91:56"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:56">(<argument pos:start="91:16" pos:end="91:16"><expr pos:start="91:16" pos:end="91:16"><name pos:start="91:16" pos:end="91:16">s</name></expr></argument>, <argument pos:start="91:19" pos:end="91:30"><expr pos:start="91:19" pos:end="91:30"><name pos:start="91:19" pos:end="91:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:33" pos:end="91:55"><expr pos:start="91:33" pos:end="91:55"><literal type="string" pos:start="91:33" pos:end="91:55">"APE Tag is a header\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:17">return <expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:51"><expr pos:start="99:5" pos:end="99:50"><call pos:start="99:5" pos:end="99:50"><name pos:start="99:5" pos:end="99:13">avio_seek</name><argument_list pos:start="99:14" pos:end="99:50">(<argument pos:start="99:15" pos:end="99:16"><expr pos:start="99:15" pos:end="99:16"><name pos:start="99:15" pos:end="99:16">pb</name></expr></argument>, <argument pos:start="99:19" pos:end="99:39"><expr pos:start="99:19" pos:end="99:39"><name pos:start="99:19" pos:end="99:27">file_size</name> <operator pos:start="99:29" pos:end="99:29">-</operator> <name pos:start="99:31" pos:end="99:39">tag_bytes</name></expr></argument>, <argument pos:start="99:42" pos:end="99:49"><expr pos:start="99:42" pos:end="99:49"><name pos:start="99:42" pos:end="99:49">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="103:5" pos:end="105:45">for <control pos:start="103:9" pos:end="103:28">(<init pos:start="103:10" pos:end="103:13"><expr pos:start="103:10" pos:end="103:12"><name pos:start="103:10" pos:end="103:10">i</name><operator pos:start="103:11" pos:end="103:11">=</operator><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</init> <condition pos:start="103:15" pos:end="103:23"><expr pos:start="103:15" pos:end="103:22"><name pos:start="103:15" pos:end="103:15">i</name><operator pos:start="103:16" pos:end="103:16">&lt;</operator><name pos:start="103:17" pos:end="103:22">fields</name></expr>;</condition> <incr pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:25">i</name><operator pos:start="103:26" pos:end="103:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="105:45"><block_content pos:start="105:9" pos:end="105:45">

        <if_stmt pos:start="105:9" pos:end="105:45"><if pos:start="105:9" pos:end="105:45">if <condition pos:start="105:12" pos:end="105:38">(<expr pos:start="105:13" pos:end="105:37"><call pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:30">ape_tag_read_field</name><argument_list pos:start="105:31" pos:end="105:33">(<argument pos:start="105:32" pos:end="105:32"><expr pos:start="105:32" pos:end="105:32"><name pos:start="105:32" pos:end="105:32">s</name></expr></argument>)</argument_list></call> <operator pos:start="105:35" pos:end="105:35">&lt;</operator> <literal type="number" pos:start="105:37" pos:end="105:37">0</literal></expr>)</condition><block type="pseudo" pos:start="105:40" pos:end="105:45"><block_content pos:start="105:40" pos:end="105:45"> <break pos:start="105:40" pos:end="105:45">break;</break></block_content></block></if></if_stmt></block_content></block></for>



    <return pos:start="109:5" pos:end="109:21">return <expr pos:start="109:12" pos:end="109:20"><name pos:start="109:12" pos:end="109:20">tag_start</name></expr>;</return>

</block_content>}</block></function>
</unit>
