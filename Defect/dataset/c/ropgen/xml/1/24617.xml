<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24617.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parse_filename</name><parameter_list pos:start="1:26" pos:end="3:78">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:40">filename</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:66"><decl pos:start="1:43" pos:end="1:66"><type pos:start="1:43" pos:end="1:66"><name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier><modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:66">representation_id</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:55"><decl pos:start="3:27" pos:end="3:55"><type pos:start="3:27" pos:end="3:55"><name pos:start="3:27" pos:end="3:30">char</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier><modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:55">initialization_pattern</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:77"><decl pos:start="3:58" pos:end="3:77"><type pos:start="3:58" pos:end="3:77"><name pos:start="3:58" pos:end="3:61">char</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier><modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:77">media_pattern</name></decl></parameter>)</parameter_list> <block pos:start="3:80" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:24">underscore_pos</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:20">period_pos</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">temp_pos</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:22">filename_str</name> <init pos:start="11:24" pos:end="11:44">= <expr pos:start="11:26" pos:end="11:44"><call pos:start="11:26" pos:end="11:44"><name pos:start="11:26" pos:end="11:34">av_strdup</name><argument_list pos:start="11:35" pos:end="11:44">(<argument pos:start="11:36" pos:end="11:43"><expr pos:start="11:36" pos:end="11:43"><name pos:start="11:36" pos:end="11:43">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="13:46"><if pos:start="13:5" pos:end="13:46">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:21">filename_str</name></expr>)</condition><block type="pseudo" pos:start="13:24" pos:end="13:46"><block_content pos:start="13:24" pos:end="13:46"> <return pos:start="13:24" pos:end="13:46">return <expr pos:start="13:31" pos:end="13:45"><call pos:start="13:31" pos:end="13:45"><name pos:start="13:31" pos:end="13:37">AVERROR</name><argument_list pos:start="13:38" pos:end="13:45">(<argument pos:start="13:39" pos:end="13:44"><expr pos:start="13:39" pos:end="13:44"><name pos:start="13:39" pos:end="13:44">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:12">temp_pos</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:44"><name pos:start="15:16" pos:end="15:25">av_stristr</name><argument_list pos:start="15:26" pos:end="15:44">(<argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:38">filename_str</name></expr></argument>, <argument pos:start="15:41" pos:end="15:43"><expr pos:start="15:41" pos:end="15:43"><literal type="string" pos:start="15:41" pos:end="15:43">"_"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="23:5">while <condition pos:start="17:11" pos:end="17:20">(<expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:19">temp_pos</name></expr>)</condition> <block pos:start="17:22" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:49">

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:22">underscore_pos</name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:33">temp_pos</name> <operator pos:start="19:35" pos:end="19:35">+</operator> <literal type="number" pos:start="19:37" pos:end="19:37">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:49"><expr pos:start="21:9" pos:end="21:48"><name pos:start="21:9" pos:end="21:16">temp_pos</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:29">av_stristr</name><argument_list pos:start="21:30" pos:end="21:48">(<argument pos:start="21:31" pos:end="21:42"><expr pos:start="21:31" pos:end="21:42"><name pos:start="21:31" pos:end="21:38">temp_pos</name> <operator pos:start="21:40" pos:end="21:40">+</operator> <literal type="number" pos:start="21:42" pos:end="21:42">1</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><literal type="string" pos:start="21:45" pos:end="21:47">"_"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="25:5" pos:end="25:35"><if pos:start="25:5" pos:end="25:35">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:23">underscore_pos</name></expr>)</condition><block type="pseudo" pos:start="25:26" pos:end="25:35"><block_content pos:start="25:26" pos:end="25:35"> <return pos:start="25:26" pos:end="25:35">return <expr pos:start="25:33" pos:end="25:34"><operator pos:start="25:33" pos:end="25:33">-</operator><literal type="number" pos:start="25:34" pos:end="25:34">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:49"><expr pos:start="27:5" pos:end="27:48"><name pos:start="27:5" pos:end="27:14">period_pos</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:48"><name pos:start="27:18" pos:end="27:27">av_stristr</name><argument_list pos:start="27:28" pos:end="27:48">(<argument pos:start="27:29" pos:end="27:42"><expr pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:42">underscore_pos</name></expr></argument>, <argument pos:start="27:45" pos:end="27:47"><expr pos:start="27:45" pos:end="27:47"><literal type="string" pos:start="27:45" pos:end="27:47">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="29:31"><if pos:start="29:5" pos:end="29:31">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:19">period_pos</name></expr>)</condition><block type="pseudo" pos:start="29:22" pos:end="29:31"><block_content pos:start="29:22" pos:end="29:31"> <return pos:start="29:22" pos:end="29:31">return <expr pos:start="29:29" pos:end="29:30"><operator pos:start="29:29" pos:end="29:29">-</operator><literal type="number" pos:start="29:30" pos:end="29:30">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><operator pos:start="31:5" pos:end="31:5">*</operator><operator pos:start="31:6" pos:end="31:6">(</operator><name pos:start="31:7" pos:end="31:20">underscore_pos</name> <operator pos:start="31:22" pos:end="31:22">-</operator> <literal type="number" pos:start="31:24" pos:end="31:24">1</literal><operator pos:start="31:25" pos:end="31:25">)</operator> <operator pos:start="31:27" pos:end="31:27">=</operator> <literal type="number" pos:start="31:29" pos:end="31:29">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:26">(<expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:25">representation_id</name></expr>)</condition> <block pos:start="33:28" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:88">

        <expr_stmt pos:start="35:9" pos:end="35:72"><expr pos:start="35:9" pos:end="35:71"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:26">representation_id</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:71"><name pos:start="35:30" pos:end="35:38">av_malloc</name><argument_list pos:start="35:39" pos:end="35:71">(<argument pos:start="35:40" pos:end="35:70"><expr pos:start="35:40" pos:end="35:70"><name pos:start="35:40" pos:end="35:49">period_pos</name> <operator pos:start="35:51" pos:end="35:51">-</operator> <name pos:start="35:53" pos:end="35:66">underscore_pos</name> <operator pos:start="35:68" pos:end="35:68">+</operator> <literal type="number" pos:start="35:70" pos:end="35:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="37:58"><if pos:start="37:9" pos:end="37:58">if <condition pos:start="37:12" pos:end="37:34">(<expr pos:start="37:13" pos:end="37:33"><operator pos:start="37:13" pos:end="37:13">!</operator><operator pos:start="37:14" pos:end="37:14">(</operator><operator pos:start="37:15" pos:end="37:15">*</operator><name pos:start="37:16" pos:end="37:32">representation_id</name><operator pos:start="37:33" pos:end="37:33">)</operator></expr>)</condition><block type="pseudo" pos:start="37:36" pos:end="37:58"><block_content pos:start="37:36" pos:end="37:58"> <return pos:start="37:36" pos:end="37:58">return <expr pos:start="37:43" pos:end="37:57"><call pos:start="37:43" pos:end="37:57"><name pos:start="37:43" pos:end="37:49">AVERROR</name><argument_list pos:start="37:50" pos:end="37:57">(<argument pos:start="37:51" pos:end="37:56"><expr pos:start="37:51" pos:end="37:56"><name pos:start="37:51" pos:end="37:56">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:88"><expr pos:start="39:9" pos:end="39:87"><call pos:start="39:9" pos:end="39:87"><name pos:start="39:9" pos:end="39:18">av_strlcpy</name><argument_list pos:start="39:19" pos:end="39:87">(<argument pos:start="39:20" pos:end="39:37"><expr pos:start="39:20" pos:end="39:37"><operator pos:start="39:20" pos:end="39:20">*</operator><name pos:start="39:21" pos:end="39:37">representation_id</name></expr></argument>, <argument pos:start="39:40" pos:end="39:53"><expr pos:start="39:40" pos:end="39:53"><name pos:start="39:40" pos:end="39:53">underscore_pos</name></expr></argument>, <argument pos:start="39:56" pos:end="39:86"><expr pos:start="39:56" pos:end="39:86"><name pos:start="39:56" pos:end="39:65">period_pos</name> <operator pos:start="39:67" pos:end="39:67">-</operator> <name pos:start="39:69" pos:end="39:82">underscore_pos</name> <operator pos:start="39:84" pos:end="39:84">+</operator> <literal type="number" pos:start="39:86" pos:end="39:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:31">(<expr pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:30">initialization_pattern</name></expr>)</condition> <block pos:start="43:33" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:63">

        <expr_stmt pos:start="45:9" pos:end="47:60"><expr pos:start="45:9" pos:end="47:59"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:31">initialization_pattern</name> <operator pos:start="45:33" pos:end="45:33">=</operator> <call pos:start="45:35" pos:end="47:59"><name pos:start="45:35" pos:end="45:45">av_asprintf</name><argument_list pos:start="45:46" pos:end="47:59">(<argument pos:start="45:47" pos:end="45:73"><expr pos:start="45:47" pos:end="45:73"><literal type="string" pos:start="45:47" pos:end="45:73">"%s_$RepresentationID$.hdr"</literal></expr></argument>,

                                              <argument pos:start="47:47" pos:end="47:58"><expr pos:start="47:47" pos:end="47:58"><name pos:start="47:47" pos:end="47:58">filename_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="49:63"><if pos:start="49:9" pos:end="49:63">if <condition pos:start="49:12" pos:end="49:39">(<expr pos:start="49:13" pos:end="49:38"><operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><operator pos:start="49:15" pos:end="49:15">*</operator><name pos:start="49:16" pos:end="49:37">initialization_pattern</name><operator pos:start="49:38" pos:end="49:38">)</operator></expr>)</condition><block type="pseudo" pos:start="49:41" pos:end="49:63"><block_content pos:start="49:41" pos:end="49:63"> <return pos:start="49:41" pos:end="49:63">return <expr pos:start="49:48" pos:end="49:62"><call pos:start="49:48" pos:end="49:62"><name pos:start="49:48" pos:end="49:54">AVERROR</name><argument_list pos:start="49:55" pos:end="49:62">(<argument pos:start="49:56" pos:end="49:61"><expr pos:start="49:56" pos:end="49:61"><name pos:start="49:56" pos:end="49:61">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="61:5"><if pos:start="53:5" pos:end="61:5">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:21">media_pattern</name></expr>)</condition> <block pos:start="53:24" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:54">

        <expr_stmt pos:start="55:9" pos:end="57:51"><expr pos:start="55:9" pos:end="57:50"><operator pos:start="55:9" pos:end="55:9">*</operator><name pos:start="55:10" pos:end="55:22">media_pattern</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="57:50"><name pos:start="55:26" pos:end="55:36">av_asprintf</name><argument_list pos:start="55:37" pos:end="57:50">(<argument pos:start="55:38" pos:end="55:73"><expr pos:start="55:38" pos:end="55:73"><literal type="string" pos:start="55:38" pos:end="55:73">"%s_$RepresentationID$_$Number$.chk"</literal></expr></argument>,

                                     <argument pos:start="57:38" pos:end="57:49"><expr pos:start="57:38" pos:end="57:49"><name pos:start="57:38" pos:end="57:49">filename_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="59:54"><if pos:start="59:9" pos:end="59:54">if <condition pos:start="59:12" pos:end="59:30">(<expr pos:start="59:13" pos:end="59:29"><operator pos:start="59:13" pos:end="59:13">!</operator><operator pos:start="59:14" pos:end="59:14">(</operator><operator pos:start="59:15" pos:end="59:15">*</operator><name pos:start="59:16" pos:end="59:28">media_pattern</name><operator pos:start="59:29" pos:end="59:29">)</operator></expr>)</condition><block type="pseudo" pos:start="59:32" pos:end="59:54"><block_content pos:start="59:32" pos:end="59:54"> <return pos:start="59:32" pos:end="59:54">return <expr pos:start="59:39" pos:end="59:53"><call pos:start="59:39" pos:end="59:53"><name pos:start="59:39" pos:end="59:45">AVERROR</name><argument_list pos:start="59:46" pos:end="59:53">(<argument pos:start="59:47" pos:end="59:52"><expr pos:start="59:47" pos:end="59:52"><name pos:start="59:47" pos:end="59:52">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:26"><expr pos:start="63:5" pos:end="63:25"><call pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:11">av_free</name><argument_list pos:start="63:12" pos:end="63:25">(<argument pos:start="63:13" pos:end="63:24"><expr pos:start="63:13" pos:end="63:24"><name pos:start="63:13" pos:end="63:24">filename_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
