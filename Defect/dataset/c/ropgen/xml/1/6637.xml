<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6637.c" pos:tabs="8"><function pos:start="1:1" pos:end="13:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">check_hwrena</name><parameter_list pos:start="1:32" pos:end="1:59">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">CPUMIPSState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="13:1">{<block_content pos:start="5:5" pos:end="11:46">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:73">(<expr pos:start="5:9" pos:end="5:72"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:20"><name pos:start="5:10" pos:end="5:12">env</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:20">hflags</name></name> <operator pos:start="5:22" pos:end="5:22">&amp;</operator> <name pos:start="5:24" pos:end="5:37">MIPS_HFLAG_CP0</name><operator pos:start="5:38" pos:end="5:38">)</operator> <operator pos:start="5:40" pos:end="5:41">||</operator> <operator pos:start="5:43" pos:end="5:43">(</operator><name pos:start="5:44" pos:end="5:58"><name pos:start="5:44" pos:end="5:46">env</name><operator pos:start="5:47" pos:end="5:48">-&gt;</operator><name pos:start="5:49" pos:end="5:58">CP0_HWREna</name></name> <operator pos:start="5:60" pos:end="5:60">&amp;</operator> <operator pos:start="5:62" pos:end="5:62">(</operator><literal type="number" pos:start="5:63" pos:end="5:63">1</literal> <operator pos:start="5:65" pos:end="5:66">&lt;&lt;</operator> <name pos:start="5:68" pos:end="5:70">reg</name><operator pos:start="5:71" pos:end="5:71">)</operator><operator pos:start="5:72" pos:end="5:72">)</operator></expr>)</condition> <block pos:start="5:75" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:15">

        <return pos:start="7:9" pos:end="7:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:46"><expr pos:start="11:5" pos:end="11:45"><call pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:22">do_raise_exception</name><argument_list pos:start="11:23" pos:end="11:45">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">env</name></expr></argument>, <argument pos:start="11:29" pos:end="11:35"><expr pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:35">EXCP_RI</name></expr></argument>, <argument pos:start="11:38" pos:end="11:44"><expr pos:start="11:38" pos:end="11:44"><call pos:start="11:38" pos:end="11:44"><name pos:start="11:38" pos:end="11:42">GETPC</name><argument_list pos:start="11:43" pos:end="11:44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
