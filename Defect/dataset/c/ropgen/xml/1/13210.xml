<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13210.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">gdb_get_avr_reg</name><parameter_list pos:start="1:27" pos:end="1:66">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:58">mem_buf</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:65"><decl pos:start="1:61" pos:end="1:65"><type pos:start="1:61" pos:end="1:65"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:65">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:13">

    <if_stmt pos:start="5:5" pos:end="23:5"><if pos:start="5:5" pos:end="23:5">if <condition pos:start="5:8" pos:end="5:15">(<expr pos:start="5:9" pos:end="5:14"><name pos:start="5:9" pos:end="5:9">n</name> <operator pos:start="5:11" pos:end="5:11">&lt;</operator> <literal type="number" pos:start="5:13" pos:end="5:14">32</literal></expr>)</condition> <block pos:start="5:17" pos:end="23:5">{<block_content pos:start="9:9" pos:end="21:18">

<cpp:ifdef pos:start="7:1" pos:end="7:22">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:22">WORDS_BIGENDIAN</name></cpp:ifdef>

        <expr_stmt pos:start="9:9" pos:end="9:43"><expr pos:start="9:9" pos:end="9:42"><call pos:start="9:9" pos:end="9:42"><name pos:start="9:9" pos:end="9:13">stq_p</name><argument_list pos:start="9:14" pos:end="9:42">(<argument pos:start="9:15" pos:end="9:21"><expr pos:start="9:15" pos:end="9:21"><name pos:start="9:15" pos:end="9:21">mem_buf</name></expr></argument>, <argument pos:start="9:24" pos:end="9:41"><expr pos:start="9:24" pos:end="9:41"><name pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:26">env</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:31">avr</name><index pos:start="9:32" pos:end="9:34">[<expr pos:start="9:33" pos:end="9:33"><name pos:start="9:33" pos:end="9:33">n</name></expr>]</index></name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:41"><name pos:start="9:36" pos:end="9:38">u64</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="14:0"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:13">stq_p</name><argument_list pos:start="11:14" pos:end="11:44">(<argument pos:start="11:15" pos:end="11:23"><expr pos:start="11:15" pos:end="11:23"><name pos:start="11:15" pos:end="11:21">mem_buf</name><operator pos:start="11:22" pos:end="11:22">+</operator><literal type="number" pos:start="11:23" pos:end="11:23">8</literal></expr></argument>, <argument pos:start="11:26" pos:end="11:43"><expr pos:start="11:26" pos:end="11:43"><name pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:28">env</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:33">avr</name><index pos:start="11:34" pos:end="11:36">[<expr pos:start="11:35" pos:end="11:35"><name pos:start="11:35" pos:end="11:35">n</name></expr>]</index></name><operator pos:start="11:37" pos:end="11:37">.</operator><name pos:start="11:38" pos:end="11:43"><name pos:start="11:38" pos:end="11:40">u64</name><index pos:start="11:41" pos:end="11:43">[<expr pos:start="11:42" pos:end="11:42"><literal type="number" pos:start="11:42" pos:end="11:42">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="13:1" pos:end="13:5">#<cpp:directive pos:start="13:2" pos:end="13:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><call pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:13">stq_p</name><argument_list pos:start="15:14" pos:end="15:42">(<argument pos:start="15:15" pos:end="15:21"><expr pos:start="15:15" pos:end="15:21"><name pos:start="15:15" pos:end="15:21">mem_buf</name></expr></argument>, <argument pos:start="15:24" pos:end="15:41"><expr pos:start="15:24" pos:end="15:41"><name pos:start="15:24" pos:end="15:34"><name pos:start="15:24" pos:end="15:26">env</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:31">avr</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><name pos:start="15:33" pos:end="15:33">n</name></expr>]</index></name><operator pos:start="15:35" pos:end="15:35">.</operator><name pos:start="15:36" pos:end="15:41"><name pos:start="15:36" pos:end="15:38">u64</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:44"><call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:13">stq_p</name><argument_list pos:start="17:14" pos:end="17:44">(<argument pos:start="17:15" pos:end="17:23"><expr pos:start="17:15" pos:end="17:23"><name pos:start="17:15" pos:end="17:21">mem_buf</name><operator pos:start="17:22" pos:end="17:22">+</operator><literal type="number" pos:start="17:23" pos:end="17:23">8</literal></expr></argument>, <argument pos:start="17:26" pos:end="17:43"><expr pos:start="17:26" pos:end="17:43"><name pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:28">env</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:33">avr</name><index pos:start="17:34" pos:end="17:36">[<expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">n</name></expr>]</index></name><operator pos:start="17:37" pos:end="17:37">.</operator><name pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:40">u64</name><index pos:start="17:41" pos:end="17:43">[<expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><literal type="number" pos:start="21:16" pos:end="21:17">16</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:9">n</name> <operator pos:start="25:11" pos:end="25:12">==</operator> <literal type="number" pos:start="25:14" pos:end="25:15">33</literal></expr>)</condition> <block pos:start="25:18" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><call pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">stl_p</name><argument_list pos:start="27:14" pos:end="27:33">(<argument pos:start="27:15" pos:end="27:21"><expr pos:start="27:15" pos:end="27:21"><name pos:start="27:15" pos:end="27:21">mem_buf</name></expr></argument>, <argument pos:start="27:24" pos:end="27:32"><expr pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:32"><name pos:start="27:24" pos:end="27:26">env</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:32">vscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:16">(<expr pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:9">n</name> <operator pos:start="33:11" pos:end="33:12">==</operator> <literal type="number" pos:start="33:14" pos:end="33:15">34</literal></expr>)</condition> <block pos:start="33:18" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><call pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:13">stl_p</name><argument_list pos:start="35:14" pos:end="35:54">(<argument pos:start="35:15" pos:end="35:21"><expr pos:start="35:15" pos:end="35:21"><name pos:start="35:15" pos:end="35:21">mem_buf</name></expr></argument>, <argument pos:start="35:24" pos:end="35:53"><expr pos:start="35:24" pos:end="35:53"><operator pos:start="35:24" pos:end="35:24">(</operator><name pos:start="35:25" pos:end="35:32">uint32_t</name><operator pos:start="35:33" pos:end="35:33">)</operator><name pos:start="35:34" pos:end="35:53"><name pos:start="35:34" pos:end="35:36">env</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:41">spr</name><index pos:start="35:42" pos:end="35:53">[<expr pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:52">SPR_VRSAVE</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">4</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
