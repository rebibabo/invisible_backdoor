<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26743.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">read_len_table</name><parameter_list pos:start="1:27" pos:end="1:59">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">uint8_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">dst</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:54">GetBitContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">gb</name></decl></parameter>)</parameter_list><block pos:start="1:60" pos:end="25:1">{<block_content pos:start="3:5" pos:end="23:5">

    <decl_stmt pos:start="3:5" pos:end="3:23"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:14"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:14">val</name></decl>, <decl pos:start="3:17" pos:end="3:22"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:17" pos:end="3:22">repeat</name></decl>;</decl_stmt>



    <for pos:start="7:5" pos:end="23:5">for<control pos:start="7:8" pos:end="7:20">(<init pos:start="7:9" pos:end="7:12"><expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:9">i</name><operator pos:start="7:10" pos:end="7:10">=</operator><literal type="number" pos:start="7:11" pos:end="7:11">0</literal></expr>;</init> <condition pos:start="7:14" pos:end="7:19"><expr pos:start="7:14" pos:end="7:18"><name pos:start="7:14" pos:end="7:14">i</name><operator pos:start="7:15" pos:end="7:15">&lt;</operator><literal type="number" pos:start="7:16" pos:end="7:18">256</literal></expr>;</condition><incr/>)</control><block pos:start="7:21" pos:end="23:5">{<block_content pos:start="9:9" pos:end="21:27">

        <expr_stmt pos:start="9:9" pos:end="9:32"><expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:14">repeat</name><operator pos:start="9:15" pos:end="9:15">=</operator> <call pos:start="9:17" pos:end="9:31"><name pos:start="9:17" pos:end="9:24">get_bits</name><argument_list pos:start="9:25" pos:end="9:31">(<argument pos:start="9:26" pos:end="9:27"><expr pos:start="9:26" pos:end="9:27"><name pos:start="9:26" pos:end="9:27">gb</name></expr></argument>, <argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:11">val</name>   <operator pos:start="11:15" pos:end="11:15">=</operator> <call pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:24">get_bits</name><argument_list pos:start="11:25" pos:end="11:31">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">gb</name></expr></argument>, <argument pos:start="11:30" pos:end="11:30"><expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:36"><if pos:start="13:9" pos:end="15:36">if<condition pos:start="13:11" pos:end="13:21">(<expr pos:start="13:12" pos:end="13:20"><name pos:start="13:12" pos:end="13:17">repeat</name><operator pos:start="13:18" pos:end="13:19">==</operator><literal type="number" pos:start="13:20" pos:end="13:20">0</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:36"><block_content pos:start="15:13" pos:end="15:36">

            <expr_stmt pos:start="15:13" pos:end="15:36"><expr pos:start="15:13" pos:end="15:35"><name pos:start="15:13" pos:end="15:18">repeat</name><operator pos:start="15:19" pos:end="15:19">=</operator> <call pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:28">get_bits</name><argument_list pos:start="15:29" pos:end="15:35">(<argument pos:start="15:30" pos:end="15:31"><expr pos:start="15:30" pos:end="15:31"><name pos:start="15:30" pos:end="15:31">gb</name></expr></argument>, <argument pos:start="15:34" pos:end="15:34"><expr pos:start="15:34" pos:end="15:34"><literal type="number" pos:start="15:34" pos:end="15:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="17:1" pos:end="17:33">//printf("%d %d\n", val, repeat);</comment>

        <while pos:start="19:9" pos:end="21:27">while <condition pos:start="19:15" pos:end="19:24">(<expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:21">repeat</name><operator pos:start="19:22" pos:end="19:23">--</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:27"><block_content pos:start="21:13" pos:end="21:27">

            <expr_stmt pos:start="21:13" pos:end="21:27"><expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">dst</name><index pos:start="21:16" pos:end="21:20">[<expr pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:17">i</name><operator pos:start="21:18" pos:end="21:19">++</operator></expr>]</index></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:26">val</name></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
