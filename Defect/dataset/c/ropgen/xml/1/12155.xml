<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12155.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qemu_chr_fe_write_all</name><parameter_list pos:start="1:26" pos:end="1:74">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">CharDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:64"><decl pos:start="1:47" pos:end="1:64"><type pos:start="1:47" pos:end="1:64"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">buf</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:73"><decl pos:start="1:67" pos:end="1:73"><type pos:start="1:67" pos:end="1:73"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:73">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:18">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">offset</name> <init pos:start="5:16" pos:end="5:18">= <expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:19">qemu_mutex_lock</name><argument_list pos:start="11:20" pos:end="11:39">(<argument pos:start="11:21" pos:end="11:38"><expr pos:start="11:21" pos:end="11:38"><operator pos:start="11:21" pos:end="11:21">&amp;</operator><name pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:38">chr_write_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="13:5" pos:end="39:5">while <condition pos:start="13:11" pos:end="13:24">(<expr pos:start="13:12" pos:end="13:23"><name pos:start="13:12" pos:end="13:17">offset</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:23">len</name></expr>)</condition> <block pos:start="13:26" pos:end="39:5">{<block_content pos:start="15:9" pos:end="37:22">

        <do pos:start="15:9" pos:end="25:47">do <block pos:start="15:12" pos:end="25:9">{<block_content pos:start="17:13" pos:end="23:13">

            <expr_stmt pos:start="17:13" pos:end="17:62"><expr pos:start="17:13" pos:end="17:61"><name pos:start="17:13" pos:end="17:15">res</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:61"><name pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:19">s</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:30">chr_write</name></name><argument_list pos:start="17:31" pos:end="17:61">(<argument pos:start="17:32" pos:end="17:32"><expr pos:start="17:32" pos:end="17:32"><name pos:start="17:32" pos:end="17:32">s</name></expr></argument>, <argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><name pos:start="17:35" pos:end="17:37">buf</name> <operator pos:start="17:39" pos:end="17:39">+</operator> <name pos:start="17:41" pos:end="17:46">offset</name></expr></argument>, <argument pos:start="17:49" pos:end="17:60"><expr pos:start="17:49" pos:end="17:60"><name pos:start="17:49" pos:end="17:51">len</name> <operator pos:start="17:53" pos:end="17:53">-</operator> <name pos:start="17:55" pos:end="17:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="19:13" pos:end="23:13"><if pos:start="19:13" pos:end="23:13">if <condition pos:start="19:16" pos:end="19:45">(<expr pos:start="19:17" pos:end="19:44"><name pos:start="19:17" pos:end="19:19">res</name> <operator pos:start="19:21" pos:end="19:22">==</operator> <operator pos:start="19:24" pos:end="19:24">-</operator><literal type="number" pos:start="19:25" pos:end="19:25">1</literal> <operator pos:start="19:27" pos:end="19:28">&amp;&amp;</operator> <name pos:start="19:30" pos:end="19:34">errno</name> <operator pos:start="19:36" pos:end="19:37">==</operator> <name pos:start="19:39" pos:end="19:44">EAGAIN</name></expr>)</condition> <block pos:start="19:47" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:30">

                <expr_stmt pos:start="21:17" pos:end="21:30"><expr pos:start="21:17" pos:end="21:29"><call pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:24">g_usleep</name><argument_list pos:start="21:25" pos:end="21:29">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><literal type="number" pos:start="21:26" pos:end="21:28">100</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block> while <condition pos:start="25:17" pos:end="25:46">(<expr pos:start="25:18" pos:end="25:45"><name pos:start="25:18" pos:end="25:20">res</name> <operator pos:start="25:22" pos:end="25:23">==</operator> <operator pos:start="25:25" pos:end="25:25">-</operator><literal type="number" pos:start="25:26" pos:end="25:26">1</literal> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <name pos:start="25:31" pos:end="25:35">errno</name> <operator pos:start="25:37" pos:end="25:38">==</operator> <name pos:start="25:40" pos:end="25:45">EAGAIN</name></expr>)</condition>;</do>



        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">res</name> <operator pos:start="29:17" pos:end="29:18">&lt;=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition> <block pos:start="29:23" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:14">offset</name> <operator pos:start="37:16" pos:end="37:17">+=</operator> <name pos:start="37:19" pos:end="37:21">res</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:21">qemu_mutex_unlock</name><argument_list pos:start="41:22" pos:end="41:41">(<argument pos:start="41:23" pos:end="41:40"><expr pos:start="41:23" pos:end="41:40"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:40"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:40">chr_write_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">res</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:19">

        <return pos:start="47:9" pos:end="47:19">return <expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:18">return <expr pos:start="51:12" pos:end="51:17"><name pos:start="51:12" pos:end="51:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
