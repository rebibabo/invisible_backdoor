<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8723.c" pos:tabs="8"><function pos:start="1:1" pos:end="727:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">MPV_encode_init</name><parameter_list pos:start="1:20" pos:end="1:42">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">AVCodecContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:41">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="727:1">{<block_content pos:start="5:5" pos:end="725:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:16">dummy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">chroma_h_shift</name></decl>, <decl pos:start="9:25" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:38">chroma_v_shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:37"><expr pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:9">avctx</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:18">pix_fmt</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:36">PIX_FMT_YUV420P</name></expr>;</expr_stmt> <comment type="line" pos:start="13:39" pos:end="13:46">// FIXME</comment>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:15">bit_rate</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <name pos:start="17:19" pos:end="17:33"><name pos:start="17:19" pos:end="17:23">avctx</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:33">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">width</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:20">avctx</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:13">height</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:21">avctx</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">height</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if<condition pos:start="23:7" pos:end="23:29">(<expr pos:start="23:8" pos:end="23:28"><name pos:start="23:8" pos:end="23:22"><name pos:start="23:8" pos:end="23:12">avctx</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:22">gop_size</name></name> <operator pos:start="23:24" pos:end="23:24">&gt;</operator> <literal type="number" pos:start="23:26" pos:end="23:28">600</literal></expr>)</condition><block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:28">

	<expr_stmt pos:start="25:9" pos:end="25:94"><expr pos:start="25:9" pos:end="25:93"><call pos:start="25:9" pos:end="25:93"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:93">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:92"><expr pos:start="25:37" pos:end="25:92"><literal type="string" pos:start="25:37" pos:end="25:92">"Warning keyframe interval too large! reducing it ...\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:23">gop_size</name></name><operator pos:start="27:24" pos:end="27:24">=</operator><literal type="number" pos:start="27:25" pos:end="27:27">600</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:34"><expr pos:start="31:5" pos:end="31:33"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">gop_size</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:33"><name pos:start="31:19" pos:end="31:23">avctx</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:33">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:12">avctx</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:12">flags</name></name><operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:26"><name pos:start="35:15" pos:end="35:19">avctx</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:26">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">flags2</name></name><operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:20">avctx</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:28">flags2</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">max_b_frames</name></name><operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:40"><name pos:start="39:22" pos:end="39:26">avctx</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:40">max_b_frames</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:15">codec_id</name></name><operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:33"><name pos:start="41:18" pos:end="41:22">avctx</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:29">codec</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:33">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:57"><expr pos:start="43:5" pos:end="43:56"><name pos:start="43:5" pos:end="43:26"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:26">luma_elim_threshold</name></name>  <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:56"><name pos:start="43:31" pos:end="43:35">avctx</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:56">luma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:59"><expr pos:start="45:5" pos:end="45:58"><name pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:28">chroma_elim_threshold</name></name><operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:58"><name pos:start="45:31" pos:end="45:35">avctx</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:58">chroma_elim_threshold</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:28">strict_std_compliance</name></name><operator pos:start="47:29" pos:end="47:29">=</operator> <name pos:start="47:31" pos:end="47:58"><name pos:start="47:31" pos:end="47:35">avctx</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:58">strict_std_compliance</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:57"><expr pos:start="49:5" pos:end="49:56"><name pos:start="49:5" pos:end="49:24"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:24">data_partitioning</name></name><operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:38"><name pos:start="49:27" pos:end="49:31">avctx</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:38">flags</name></name> <operator pos:start="49:40" pos:end="49:40">&amp;</operator> <name pos:start="49:42" pos:end="49:56">CODEC_FLAG_PART</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:59"><expr pos:start="51:5" pos:end="51:58"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:21">quarter_sample</name></name><operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">(</operator><name pos:start="51:25" pos:end="51:36"><name pos:start="51:25" pos:end="51:29">avctx</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:36">flags</name></name> <operator pos:start="51:38" pos:end="51:38">&amp;</operator> <name pos:start="51:40" pos:end="51:54">CODEC_FLAG_QPEL</name><operator pos:start="51:55" pos:end="51:55">)</operator><operator pos:start="51:56" pos:end="51:57">!=</operator><literal type="number" pos:start="51:58" pos:end="51:58">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">mpeg_quant</name></name><operator pos:start="53:18" pos:end="53:18">=</operator> <name pos:start="53:20" pos:end="53:36"><name pos:start="53:20" pos:end="53:24">avctx</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">mpeg_quant</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:15">rtp_mode</name></name><operator pos:start="55:16" pos:end="55:16">=</operator> <operator pos:start="55:18" pos:end="55:18">!</operator><operator pos:start="55:19" pos:end="55:19">!</operator><name pos:start="55:20" pos:end="55:42"><name pos:start="55:20" pos:end="55:24">avctx</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:42">rtp_payload_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="69:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:25">(<expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:19">gop_size</name></name> <operator pos:start="59:21" pos:end="59:22">&lt;=</operator> <literal type="number" pos:start="59:24" pos:end="59:24">1</literal></expr>)</condition> <block pos:start="59:27" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:25">

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:21">intra_only</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:25"><expr pos:start="63:9" pos:end="63:24"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">gop_size</name></name> <operator pos:start="63:21" pos:end="63:21">=</operator> <literal type="number" pos:start="63:23" pos:end="63:24">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="69:5">else <block pos:start="65:12" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:26">

        <expr_stmt pos:start="67:9" pos:end="67:26"><expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:21">intra_only</name></name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="number" pos:start="67:25" pos:end="67:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:16"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:16">me_method</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:35"><name pos:start="73:20" pos:end="73:24">avctx</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:35">me_method</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:22">/* Fixed QSCALE */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:59"><expr pos:start="79:5" pos:end="79:58"><name pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:19">fixed_qscale</name></name> <operator pos:start="79:21" pos:end="79:21">=</operator> <operator pos:start="79:23" pos:end="79:23">!</operator><operator pos:start="79:24" pos:end="79:24">!</operator><operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:30">avctx</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:37">flags</name></name> <operator pos:start="79:39" pos:end="79:39">&amp;</operator> <name pos:start="79:41" pos:end="79:57">CODEC_FLAG_QSCALE</name><operator pos:start="79:58" pos:end="79:58">)</operator></expr>;</expr_stmt>

    

    <expr_stmt pos:start="83:5" pos:end="95:43"><expr pos:start="83:5" pos:end="95:42"><name pos:start="83:5" pos:end="83:21"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:21">adaptive_quant</name></name><operator pos:start="83:22" pos:end="83:22">=</operator> <operator pos:start="83:24" pos:end="83:24">(</operator>   <name pos:start="83:28" pos:end="83:49"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">avctx</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:49">lumi_masking</name></name>

                        <operator pos:start="85:25" pos:end="85:26">||</operator> <name pos:start="85:28" pos:end="85:49"><name pos:start="85:28" pos:end="85:28">s</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:35">avctx</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:49">dark_masking</name></name>

                        <operator pos:start="87:25" pos:end="87:26">||</operator> <name pos:start="87:28" pos:end="87:58"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:35">avctx</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:58">temporal_cplx_masking</name></name> 

                        <operator pos:start="89:25" pos:end="89:26">||</operator> <name pos:start="89:28" pos:end="89:57"><name pos:start="89:28" pos:end="89:28">s</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:35">avctx</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:57">spatial_cplx_masking</name></name>

                        <operator pos:start="91:25" pos:end="91:26">||</operator> <name pos:start="91:28" pos:end="91:46"><name pos:start="91:28" pos:end="91:28">s</name><operator pos:start="91:29" pos:end="91:30">-&gt;</operator><name pos:start="91:31" pos:end="91:35">avctx</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:46">p_masking</name></name>

                        <operator pos:start="93:25" pos:end="93:26">||</operator> <operator pos:start="93:28" pos:end="93:28">(</operator><name pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:36">flags</name></name><operator pos:start="93:37" pos:end="93:37">&amp;</operator><name pos:start="93:38" pos:end="93:53">CODEC_FLAG_QP_RD</name><operator pos:start="93:54" pos:end="93:54">)</operator><operator pos:start="93:55" pos:end="93:55">)</operator>

                       <operator pos:start="95:24" pos:end="95:25">&amp;&amp;</operator> <operator pos:start="95:27" pos:end="95:27">!</operator><name pos:start="95:28" pos:end="95:42"><name pos:start="95:28" pos:end="95:28">s</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:42">fixed_qscale</name></name></expr>;</expr_stmt>

    

    <expr_stmt pos:start="99:5" pos:end="99:44"><expr pos:start="99:5" pos:end="99:43"><name pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:11">obmc</name></name><operator pos:start="99:12" pos:end="99:12">=</operator> <operator pos:start="99:14" pos:end="99:14">!</operator><operator pos:start="99:15" pos:end="99:15">!</operator><operator pos:start="99:16" pos:end="99:16">(</operator><name pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:17">s</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:24">flags</name></name> <operator pos:start="99:26" pos:end="99:26">&amp;</operator> <name pos:start="99:28" pos:end="99:42">CODEC_FLAG_OBMC</name><operator pos:start="99:43" pos:end="99:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:58"><expr pos:start="101:5" pos:end="101:57"><name pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:18">loop_filter</name></name><operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">!</operator><operator pos:start="101:22" pos:end="101:22">!</operator><operator pos:start="101:23" pos:end="101:23">(</operator><name pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:31">flags</name></name> <operator pos:start="101:33" pos:end="101:33">&amp;</operator> <name pos:start="101:35" pos:end="101:56">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="101:57" pos:end="101:57">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:58"><expr pos:start="103:5" pos:end="103:57"><name pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:21">alternate_scan</name></name><operator pos:start="103:22" pos:end="103:22">=</operator> <operator pos:start="103:24" pos:end="103:24">!</operator><operator pos:start="103:25" pos:end="103:25">!</operator><operator pos:start="103:26" pos:end="103:26">(</operator><name pos:start="103:27" pos:end="103:34"><name pos:start="103:27" pos:end="103:27">s</name><operator pos:start="103:28" pos:end="103:29">-&gt;</operator><name pos:start="103:30" pos:end="103:34">flags</name></name> <operator pos:start="103:36" pos:end="103:36">&amp;</operator> <name pos:start="103:38" pos:end="103:56">CODEC_FLAG_ALT_SCAN</name><operator pos:start="103:57" pos:end="103:57">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="113:5"><if pos:start="107:5" pos:end="113:5">if<condition pos:start="107:7" pos:end="107:52">(<expr pos:start="107:8" pos:end="107:51"><name pos:start="107:8" pos:end="107:25"><name pos:start="107:8" pos:end="107:12">avctx</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:25">rc_max_rate</name></name> <operator pos:start="107:27" pos:end="107:28">&amp;&amp;</operator> <operator pos:start="107:30" pos:end="107:30">!</operator><name pos:start="107:31" pos:end="107:51"><name pos:start="107:31" pos:end="107:35">avctx</name><operator pos:start="107:36" pos:end="107:37">-&gt;</operator><name pos:start="107:38" pos:end="107:51">rc_buffer_size</name></name></expr>)</condition><block pos:start="107:53" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:18">

        <expr_stmt pos:start="109:9" pos:end="109:106"><expr pos:start="109:9" pos:end="109:105"><call pos:start="109:9" pos:end="109:105"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="109:105">(<argument pos:start="109:16" pos:end="109:20"><expr pos:start="109:16" pos:end="109:20"><name pos:start="109:16" pos:end="109:20">avctx</name></expr></argument>, <argument pos:start="109:23" pos:end="109:34"><expr pos:start="109:23" pos:end="109:34"><name pos:start="109:23" pos:end="109:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="109:37" pos:end="109:104"><expr pos:start="109:37" pos:end="109:104"><literal type="string" pos:start="109:37" pos:end="109:104">"a vbv buffer size is needed, for encoding with a maximum bitrate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:18">return <expr pos:start="111:16" pos:end="111:17"><operator pos:start="111:16" pos:end="111:16">-</operator><literal type="number" pos:start="111:17" pos:end="111:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>    



    <if_stmt pos:start="117:5" pos:end="121:5"><if pos:start="117:5" pos:end="121:5">if<condition pos:start="117:7" pos:end="117:70">(<expr pos:start="117:8" pos:end="117:69"><name pos:start="117:8" pos:end="117:25"><name pos:start="117:8" pos:end="117:12">avctx</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:25">rc_min_rate</name></name> <operator pos:start="117:27" pos:end="117:28">&amp;&amp;</operator> <name pos:start="117:30" pos:end="117:47"><name pos:start="117:30" pos:end="117:34">avctx</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:47">rc_max_rate</name></name> <operator pos:start="117:49" pos:end="117:50">!=</operator> <name pos:start="117:52" pos:end="117:69"><name pos:start="117:52" pos:end="117:56">avctx</name><operator pos:start="117:57" pos:end="117:58">-&gt;</operator><name pos:start="117:59" pos:end="117:69">rc_min_rate</name></name></expr>)</condition><block pos:start="117:71" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:104">

        <expr_stmt pos:start="119:9" pos:end="119:104"><expr pos:start="119:9" pos:end="119:103"><call pos:start="119:9" pos:end="119:103"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="119:103">(<argument pos:start="119:16" pos:end="119:20"><expr pos:start="119:16" pos:end="119:20"><name pos:start="119:16" pos:end="119:20">avctx</name></expr></argument>, <argument pos:start="119:23" pos:end="119:33"><expr pos:start="119:23" pos:end="119:33"><name pos:start="119:23" pos:end="119:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="119:36" pos:end="119:102"><expr pos:start="119:36" pos:end="119:102"><literal type="string" pos:start="119:36" pos:end="119:102">"Warning min_rate &gt; 0 but min_rate != max_rate isnt recommanded!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>    

        

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if<condition pos:start="125:7" pos:end="127:72">(<expr pos:start="125:8" pos:end="127:71"><operator pos:start="125:8" pos:end="125:8">(</operator><name pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:16">flags</name></name> <operator pos:start="125:18" pos:end="125:18">&amp;</operator> <name pos:start="125:20" pos:end="125:33">CODEC_FLAG_4MV</name><operator pos:start="125:34" pos:end="125:34">)</operator> <operator pos:start="125:36" pos:end="125:37">&amp;&amp;</operator> <name pos:start="125:39" pos:end="125:49"><name pos:start="125:39" pos:end="125:39">s</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:49">codec_id</name></name> <operator pos:start="125:51" pos:end="125:52">!=</operator> <name pos:start="125:54" pos:end="125:67">CODEC_ID_MPEG4</name> 

       <operator pos:start="127:8" pos:end="127:9">&amp;&amp;</operator> <name pos:start="127:11" pos:end="127:21"><name pos:start="127:11" pos:end="127:11">s</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:21">codec_id</name></name> <operator pos:start="127:23" pos:end="127:24">!=</operator> <name pos:start="127:26" pos:end="127:38">CODEC_ID_H263</name> <operator pos:start="127:40" pos:end="127:41">&amp;&amp;</operator> <name pos:start="127:43" pos:end="127:53"><name pos:start="127:43" pos:end="127:43">s</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:53">codec_id</name></name> <operator pos:start="127:55" pos:end="127:56">!=</operator> <name pos:start="127:58" pos:end="127:71">CODEC_ID_H263P</name></expr>)</condition><block pos:start="127:73" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:18">

        <expr_stmt pos:start="129:9" pos:end="129:68"><expr pos:start="129:9" pos:end="129:67"><call pos:start="129:9" pos:end="129:67"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:67">(<argument pos:start="129:16" pos:end="129:20"><expr pos:start="129:16" pos:end="129:20"><name pos:start="129:16" pos:end="129:20">avctx</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:37" pos:end="129:66"><expr pos:start="129:37" pos:end="129:66"><literal type="string" pos:start="129:37" pos:end="129:66">"4MV not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:18">return <expr pos:start="131:16" pos:end="131:17"><operator pos:start="131:16" pos:end="131:16">-</operator><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

        

    <if_stmt pos:start="137:5" pos:end="143:5"><if pos:start="137:5" pos:end="143:5">if<condition pos:start="137:7" pos:end="137:65">(<expr pos:start="137:8" pos:end="137:64"><name pos:start="137:8" pos:end="137:14"><name pos:start="137:8" pos:end="137:8">s</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:14">obmc</name></name> <operator pos:start="137:16" pos:end="137:17">&amp;&amp;</operator> <name pos:start="137:19" pos:end="137:39"><name pos:start="137:19" pos:end="137:19">s</name><operator pos:start="137:20" pos:end="137:21">-&gt;</operator><name pos:start="137:22" pos:end="137:26">avctx</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:39">mb_decision</name></name> <operator pos:start="137:41" pos:end="137:42">!=</operator> <name pos:start="137:44" pos:end="137:64">FF_MB_DECISION_SIMPLE</name></expr>)</condition><block pos:start="137:66" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:18">

        <expr_stmt pos:start="139:9" pos:end="139:89"><expr pos:start="139:9" pos:end="139:88"><call pos:start="139:9" pos:end="139:88"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="139:88">(<argument pos:start="139:16" pos:end="139:20"><expr pos:start="139:16" pos:end="139:20"><name pos:start="139:16" pos:end="139:20">avctx</name></expr></argument>, <argument pos:start="139:23" pos:end="139:34"><expr pos:start="139:23" pos:end="139:34"><name pos:start="139:23" pos:end="139:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:37" pos:end="139:87"><expr pos:start="139:37" pos:end="139:87"><literal type="string" pos:start="139:37" pos:end="139:87">"OBMC is only supported with simple mb decission\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:18">return <expr pos:start="141:16" pos:end="141:17"><operator pos:start="141:16" pos:end="141:16">-</operator><literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="147:5" pos:end="153:5"><if pos:start="147:5" pos:end="153:5">if<condition pos:start="147:7" pos:end="147:80">(<expr pos:start="147:8" pos:end="147:79"><name pos:start="147:8" pos:end="147:14"><name pos:start="147:8" pos:end="147:8">s</name><operator pos:start="147:9" pos:end="147:10">-&gt;</operator><name pos:start="147:11" pos:end="147:14">obmc</name></name> <operator pos:start="147:16" pos:end="147:17">&amp;&amp;</operator> <name pos:start="147:19" pos:end="147:29"><name pos:start="147:19" pos:end="147:19">s</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:29">codec_id</name></name> <operator pos:start="147:31" pos:end="147:32">!=</operator> <name pos:start="147:34" pos:end="147:46">CODEC_ID_H263</name> <operator pos:start="147:48" pos:end="147:49">&amp;&amp;</operator> <name pos:start="147:51" pos:end="147:61"><name pos:start="147:51" pos:end="147:51">s</name><operator pos:start="147:52" pos:end="147:53">-&gt;</operator><name pos:start="147:54" pos:end="147:61">codec_id</name></name> <operator pos:start="147:63" pos:end="147:64">!=</operator> <name pos:start="147:66" pos:end="147:79">CODEC_ID_H263P</name></expr>)</condition><block pos:start="147:81" pos:end="153:5">{<block_content pos:start="149:9" pos:end="151:18">

        <expr_stmt pos:start="149:9" pos:end="149:77"><expr pos:start="149:9" pos:end="149:76"><call pos:start="149:9" pos:end="149:76"><name pos:start="149:9" pos:end="149:14">av_log</name><argument_list pos:start="149:15" pos:end="149:76">(<argument pos:start="149:16" pos:end="149:20"><expr pos:start="149:16" pos:end="149:20"><name pos:start="149:16" pos:end="149:20">avctx</name></expr></argument>, <argument pos:start="149:23" pos:end="149:34"><expr pos:start="149:23" pos:end="149:34"><name pos:start="149:23" pos:end="149:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:37" pos:end="149:75"><expr pos:start="149:37" pos:end="149:75"><literal type="string" pos:start="149:37" pos:end="149:75">"OBMC is only supported with H263(+)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="151:9" pos:end="151:18">return <expr pos:start="151:16" pos:end="151:17"><operator pos:start="151:16" pos:end="151:16">-</operator><literal type="number" pos:start="151:17" pos:end="151:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="157:5" pos:end="163:5"><if pos:start="157:5" pos:end="163:5">if<condition pos:start="157:7" pos:end="157:58">(<expr pos:start="157:8" pos:end="157:57"><name pos:start="157:8" pos:end="157:24"><name pos:start="157:8" pos:end="157:8">s</name><operator pos:start="157:9" pos:end="157:10">-&gt;</operator><name pos:start="157:11" pos:end="157:24">quarter_sample</name></name> <operator pos:start="157:26" pos:end="157:27">&amp;&amp;</operator> <name pos:start="157:29" pos:end="157:39"><name pos:start="157:29" pos:end="157:29">s</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:39">codec_id</name></name> <operator pos:start="157:41" pos:end="157:42">!=</operator> <name pos:start="157:44" pos:end="157:57">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="157:59" pos:end="163:5">{<block_content pos:start="159:9" pos:end="161:18">

        <expr_stmt pos:start="159:9" pos:end="159:69"><expr pos:start="159:9" pos:end="159:68"><call pos:start="159:9" pos:end="159:68"><name pos:start="159:9" pos:end="159:14">av_log</name><argument_list pos:start="159:15" pos:end="159:68">(<argument pos:start="159:16" pos:end="159:20"><expr pos:start="159:16" pos:end="159:20"><name pos:start="159:16" pos:end="159:20">avctx</name></expr></argument>, <argument pos:start="159:23" pos:end="159:34"><expr pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="159:37" pos:end="159:67"><expr pos:start="159:37" pos:end="159:67"><literal type="string" pos:start="159:37" pos:end="159:67">"qpel not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="161:9" pos:end="161:18">return <expr pos:start="161:16" pos:end="161:17"><operator pos:start="161:16" pos:end="161:16">-</operator><literal type="number" pos:start="161:17" pos:end="161:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="167:5" pos:end="173:5"><if pos:start="167:5" pos:end="173:5">if<condition pos:start="167:7" pos:end="167:61">(<expr pos:start="167:8" pos:end="167:60"><name pos:start="167:8" pos:end="167:27"><name pos:start="167:8" pos:end="167:8">s</name><operator pos:start="167:9" pos:end="167:10">-&gt;</operator><name pos:start="167:11" pos:end="167:27">data_partitioning</name></name> <operator pos:start="167:29" pos:end="167:30">&amp;&amp;</operator> <name pos:start="167:32" pos:end="167:42"><name pos:start="167:32" pos:end="167:32">s</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:42">codec_id</name></name> <operator pos:start="167:44" pos:end="167:45">!=</operator> <name pos:start="167:47" pos:end="167:60">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="167:62" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:18">

        <expr_stmt pos:start="169:9" pos:end="169:82"><expr pos:start="169:9" pos:end="169:81"><call pos:start="169:9" pos:end="169:81"><name pos:start="169:9" pos:end="169:14">av_log</name><argument_list pos:start="169:15" pos:end="169:81">(<argument pos:start="169:16" pos:end="169:20"><expr pos:start="169:16" pos:end="169:20"><name pos:start="169:16" pos:end="169:20">avctx</name></expr></argument>, <argument pos:start="169:23" pos:end="169:34"><expr pos:start="169:23" pos:end="169:34"><name pos:start="169:23" pos:end="169:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="169:37" pos:end="169:80"><expr pos:start="169:37" pos:end="169:80"><literal type="string" pos:start="169:37" pos:end="169:80">"data partitioning not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="171:9" pos:end="171:18">return <expr pos:start="171:16" pos:end="171:17"><operator pos:start="171:16" pos:end="171:16">-</operator><literal type="number" pos:start="171:17" pos:end="171:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="177:5" pos:end="183:5"><if pos:start="177:5" pos:end="183:5">if<condition pos:start="177:7" pos:end="177:132">(<expr pos:start="177:8" pos:end="177:131"><name pos:start="177:8" pos:end="177:22"><name pos:start="177:8" pos:end="177:8">s</name><operator pos:start="177:9" pos:end="177:10">-&gt;</operator><name pos:start="177:11" pos:end="177:22">max_b_frames</name></name> <operator pos:start="177:24" pos:end="177:25">&amp;&amp;</operator> <name pos:start="177:27" pos:end="177:37"><name pos:start="177:27" pos:end="177:27">s</name><operator pos:start="177:28" pos:end="177:29">-&gt;</operator><name pos:start="177:30" pos:end="177:37">codec_id</name></name> <operator pos:start="177:39" pos:end="177:40">!=</operator> <name pos:start="177:42" pos:end="177:55">CODEC_ID_MPEG4</name> <operator pos:start="177:57" pos:end="177:58">&amp;&amp;</operator> <name pos:start="177:60" pos:end="177:70"><name pos:start="177:60" pos:end="177:60">s</name><operator pos:start="177:61" pos:end="177:62">-&gt;</operator><name pos:start="177:63" pos:end="177:70">codec_id</name></name> <operator pos:start="177:72" pos:end="177:73">!=</operator> <name pos:start="177:75" pos:end="177:93">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="177:95" pos:end="177:96">&amp;&amp;</operator> <name pos:start="177:98" pos:end="177:108"><name pos:start="177:98" pos:end="177:98">s</name><operator pos:start="177:99" pos:end="177:100">-&gt;</operator><name pos:start="177:101" pos:end="177:108">codec_id</name></name> <operator pos:start="177:110" pos:end="177:111">!=</operator> <name pos:start="177:113" pos:end="177:131">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="177:133" pos:end="183:5">{<block_content pos:start="179:9" pos:end="181:18">

        <expr_stmt pos:start="179:9" pos:end="179:73"><expr pos:start="179:9" pos:end="179:72"><call pos:start="179:9" pos:end="179:72"><name pos:start="179:9" pos:end="179:14">av_log</name><argument_list pos:start="179:15" pos:end="179:72">(<argument pos:start="179:16" pos:end="179:20"><expr pos:start="179:16" pos:end="179:20"><name pos:start="179:16" pos:end="179:20">avctx</name></expr></argument>, <argument pos:start="179:23" pos:end="179:34"><expr pos:start="179:23" pos:end="179:34"><name pos:start="179:23" pos:end="179:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:37" pos:end="179:71"><expr pos:start="179:37" pos:end="179:71"><literal type="string" pos:start="179:37" pos:end="179:71">"b frames not supported by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="181:9" pos:end="181:18">return <expr pos:start="181:16" pos:end="181:17"><operator pos:start="181:16" pos:end="181:16">-</operator><literal type="number" pos:start="181:17" pos:end="181:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="187:5" pos:end="193:5"><if pos:start="187:5" pos:end="193:5">if<condition pos:start="187:7" pos:end="187:54">(<expr pos:start="187:8" pos:end="187:53"><name pos:start="187:8" pos:end="187:20"><name pos:start="187:8" pos:end="187:8">s</name><operator pos:start="187:9" pos:end="187:10">-&gt;</operator><name pos:start="187:11" pos:end="187:20">mpeg_quant</name></name> <operator pos:start="187:22" pos:end="187:23">&amp;&amp;</operator> <name pos:start="187:25" pos:end="187:35"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:35">codec_id</name></name> <operator pos:start="187:37" pos:end="187:38">!=</operator> <name pos:start="187:40" pos:end="187:53">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="187:55" pos:end="193:5">{<block_content pos:start="189:9" pos:end="191:18"> <comment type="line" pos:start="187:57" pos:end="187:83">//FIXME mpeg2 uses that too</comment>

        <expr_stmt pos:start="189:9" pos:end="189:89"><expr pos:start="189:9" pos:end="189:88"><call pos:start="189:9" pos:end="189:88"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="189:88">(<argument pos:start="189:16" pos:end="189:20"><expr pos:start="189:16" pos:end="189:20"><name pos:start="189:16" pos:end="189:20">avctx</name></expr></argument>, <argument pos:start="189:23" pos:end="189:34"><expr pos:start="189:23" pos:end="189:34"><name pos:start="189:23" pos:end="189:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:37" pos:end="189:87"><expr pos:start="189:37" pos:end="189:87"><literal type="string" pos:start="189:37" pos:end="189:87">"mpeg2 style quantization not supporetd by codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="191:9" pos:end="191:18">return <expr pos:start="191:16" pos:end="191:17"><operator pos:start="191:16" pos:end="191:16">-</operator><literal type="number" pos:start="191:17" pos:end="191:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

        

    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if<condition pos:start="197:7" pos:end="197:80">(<expr pos:start="197:8" pos:end="197:79"><operator pos:start="197:8" pos:end="197:8">(</operator><name pos:start="197:9" pos:end="197:16"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">flags</name></name> <operator pos:start="197:18" pos:end="197:18">&amp;</operator> <name pos:start="197:20" pos:end="197:36">CODEC_FLAG_CBP_RD</name><operator pos:start="197:37" pos:end="197:37">)</operator> <operator pos:start="197:39" pos:end="197:40">&amp;&amp;</operator> <operator pos:start="197:42" pos:end="197:42">!</operator><operator pos:start="197:43" pos:end="197:43">(</operator><name pos:start="197:44" pos:end="197:51"><name pos:start="197:44" pos:end="197:44">s</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:51">flags</name></name> <operator pos:start="197:53" pos:end="197:53">&amp;</operator> <name pos:start="197:55" pos:end="197:78">CODEC_FLAG_TRELLIS_QUANT</name><operator pos:start="197:79" pos:end="197:79">)</operator></expr>)</condition><block pos:start="197:81" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:18">

        <expr_stmt pos:start="199:9" pos:end="199:68"><expr pos:start="199:9" pos:end="199:67"><call pos:start="199:9" pos:end="199:67"><name pos:start="199:9" pos:end="199:14">av_log</name><argument_list pos:start="199:15" pos:end="199:67">(<argument pos:start="199:16" pos:end="199:20"><expr pos:start="199:16" pos:end="199:20"><name pos:start="199:16" pos:end="199:20">avctx</name></expr></argument>, <argument pos:start="199:23" pos:end="199:34"><expr pos:start="199:23" pos:end="199:34"><name pos:start="199:23" pos:end="199:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:37" pos:end="199:66"><expr pos:start="199:37" pos:end="199:66"><literal type="string" pos:start="199:37" pos:end="199:66">"CBP RD needs trellis quant\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="201:9" pos:end="201:18">return <expr pos:start="201:16" pos:end="201:17"><operator pos:start="201:16" pos:end="201:16">-</operator><literal type="number" pos:start="201:17" pos:end="201:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="207:5" pos:end="213:5"><if pos:start="207:5" pos:end="213:5">if<condition pos:start="207:7" pos:end="207:83">(<expr pos:start="207:8" pos:end="207:82"><operator pos:start="207:8" pos:end="207:8">(</operator><name pos:start="207:9" pos:end="207:16"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:16">flags</name></name> <operator pos:start="207:18" pos:end="207:18">&amp;</operator> <name pos:start="207:20" pos:end="207:35">CODEC_FLAG_QP_RD</name><operator pos:start="207:36" pos:end="207:36">)</operator> <operator pos:start="207:38" pos:end="207:39">&amp;&amp;</operator> <name pos:start="207:41" pos:end="207:61"><name pos:start="207:41" pos:end="207:41">s</name><operator pos:start="207:42" pos:end="207:43">-&gt;</operator><name pos:start="207:44" pos:end="207:48">avctx</name><operator pos:start="207:49" pos:end="207:50">-&gt;</operator><name pos:start="207:51" pos:end="207:61">mb_decision</name></name> <operator pos:start="207:63" pos:end="207:64">!=</operator> <name pos:start="207:66" pos:end="207:82">FF_MB_DECISION_RD</name></expr>)</condition><block pos:start="207:84" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:18">

        <expr_stmt pos:start="209:9" pos:end="209:59"><expr pos:start="209:9" pos:end="209:58"><call pos:start="209:9" pos:end="209:58"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="209:58">(<argument pos:start="209:16" pos:end="209:20"><expr pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:20">avctx</name></expr></argument>, <argument pos:start="209:23" pos:end="209:34"><expr pos:start="209:23" pos:end="209:34"><name pos:start="209:23" pos:end="209:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:37" pos:end="209:57"><expr pos:start="209:37" pos:end="209:57"><literal type="string" pos:start="209:37" pos:end="209:57">"QP RD needs mbd=2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="211:9" pos:end="211:18">return <expr pos:start="211:16" pos:end="211:17"><operator pos:start="211:16" pos:end="211:16">-</operator><literal type="number" pos:start="211:17" pos:end="211:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="217:5" pos:end="223:5"><if pos:start="217:5" pos:end="223:5">if<condition pos:start="217:7" pos:end="217:90">(<expr pos:start="217:8" pos:end="217:89"><name pos:start="217:8" pos:end="217:38"><name pos:start="217:8" pos:end="217:8">s</name><operator pos:start="217:9" pos:end="217:10">-&gt;</operator><name pos:start="217:11" pos:end="217:15">avctx</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:38">scenechange_threshold</name></name> <operator pos:start="217:40" pos:end="217:40">&lt;</operator> <literal type="number" pos:start="217:42" pos:end="217:51">1000000000</literal> <operator pos:start="217:53" pos:end="217:54">&amp;&amp;</operator> <operator pos:start="217:56" pos:end="217:56">(</operator><name pos:start="217:57" pos:end="217:64"><name pos:start="217:57" pos:end="217:57">s</name><operator pos:start="217:58" pos:end="217:59">-&gt;</operator><name pos:start="217:60" pos:end="217:64">flags</name></name> <operator pos:start="217:66" pos:end="217:66">&amp;</operator> <name pos:start="217:68" pos:end="217:88">CODEC_FLAG_CLOSED_GOP</name><operator pos:start="217:89" pos:end="217:89">)</operator></expr>)</condition><block pos:start="217:91" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:18">

        <expr_stmt pos:start="219:9" pos:end="219:100"><expr pos:start="219:9" pos:end="219:99"><call pos:start="219:9" pos:end="219:99"><name pos:start="219:9" pos:end="219:14">av_log</name><argument_list pos:start="219:15" pos:end="219:99">(<argument pos:start="219:16" pos:end="219:20"><expr pos:start="219:16" pos:end="219:20"><name pos:start="219:16" pos:end="219:20">avctx</name></expr></argument>, <argument pos:start="219:23" pos:end="219:34"><expr pos:start="219:23" pos:end="219:34"><name pos:start="219:23" pos:end="219:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="219:37" pos:end="219:98"><expr pos:start="219:37" pos:end="219:98"><literal type="string" pos:start="219:37" pos:end="219:98">"closed gop with scene change detection arent supported yet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="221:9" pos:end="221:18">return <expr pos:start="221:16" pos:end="221:17"><operator pos:start="221:16" pos:end="221:16">-</operator><literal type="number" pos:start="221:17" pos:end="221:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="227:57"><expr pos:start="227:5" pos:end="227:56"><name pos:start="227:5" pos:end="227:5">i</name><operator pos:start="227:6" pos:end="227:6">=</operator> <call pos:start="227:8" pos:end="227:56"><name pos:start="227:8" pos:end="227:13">ff_gcd</name><argument_list pos:start="227:14" pos:end="227:56">(<argument pos:start="227:15" pos:end="227:31"><expr pos:start="227:15" pos:end="227:31"><name pos:start="227:15" pos:end="227:31"><name pos:start="227:15" pos:end="227:19">avctx</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:31">frame_rate</name></name></expr></argument>, <argument pos:start="227:34" pos:end="227:55"><expr pos:start="227:34" pos:end="227:55"><name pos:start="227:34" pos:end="227:55"><name pos:start="227:34" pos:end="227:38">avctx</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:55">frame_rate_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="229:5" pos:end="239:5"><if pos:start="229:5" pos:end="239:5">if<condition pos:start="229:7" pos:end="229:13">(<expr pos:start="229:8" pos:end="229:12"><name pos:start="229:8" pos:end="229:8">i</name> <operator pos:start="229:10" pos:end="229:10">&gt;</operator> <literal type="number" pos:start="229:12" pos:end="229:12">1</literal></expr>)</condition><block pos:start="229:14" pos:end="239:5">{<block_content pos:start="231:9" pos:end="235:36">

        <expr_stmt pos:start="231:9" pos:end="231:79"><expr pos:start="231:9" pos:end="231:78"><call pos:start="231:9" pos:end="231:78"><name pos:start="231:9" pos:end="231:14">av_log</name><argument_list pos:start="231:15" pos:end="231:78">(<argument pos:start="231:16" pos:end="231:20"><expr pos:start="231:16" pos:end="231:20"><name pos:start="231:16" pos:end="231:20">avctx</name></expr></argument>, <argument pos:start="231:23" pos:end="231:33"><expr pos:start="231:23" pos:end="231:33"><name pos:start="231:23" pos:end="231:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="231:36" pos:end="231:77"><expr pos:start="231:36" pos:end="231:77"><literal type="string" pos:start="231:36" pos:end="231:77">"removing common factors from framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:31"><expr pos:start="233:9" pos:end="233:30"><name pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:13">avctx</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:25">frame_rate</name></name> <operator pos:start="233:27" pos:end="233:28">/=</operator> <name pos:start="233:30" pos:end="233:30">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:36"><expr pos:start="235:9" pos:end="235:35"><name pos:start="235:9" pos:end="235:30"><name pos:start="235:9" pos:end="235:13">avctx</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:30">frame_rate_base</name></name> <operator pos:start="235:32" pos:end="235:33">/=</operator> <name pos:start="235:35" pos:end="235:35">i</name></expr>;</expr_stmt>

<comment type="line" pos:start="237:1" pos:end="237:20">//        return -1;</comment>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="243:5" pos:end="261:5"><if pos:start="243:5" pos:end="249:5">if<condition pos:start="243:7" pos:end="243:35">(<expr pos:start="243:8" pos:end="243:34"><name pos:start="243:8" pos:end="243:18"><name pos:start="243:8" pos:end="243:8">s</name><operator pos:start="243:9" pos:end="243:10">-&gt;</operator><name pos:start="243:11" pos:end="243:18">codec_id</name></name><operator pos:start="243:19" pos:end="243:20">==</operator><name pos:start="243:21" pos:end="243:34">CODEC_ID_MJPEG</name></expr>)</condition><block pos:start="243:36" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:31">

        <expr_stmt pos:start="245:9" pos:end="245:53"><expr pos:start="245:9" pos:end="245:52"><name pos:start="245:9" pos:end="245:27"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:27">intra_quant_bias</name></name><operator pos:start="245:28" pos:end="245:28">=</operator> <literal type="number" pos:start="245:30" pos:end="245:30">1</literal><operator pos:start="245:31" pos:end="245:32">&lt;&lt;</operator><operator pos:start="245:33" pos:end="245:33">(</operator><name pos:start="245:34" pos:end="245:49">QUANT_BIAS_SHIFT</name><operator pos:start="245:50" pos:end="245:50">-</operator><literal type="number" pos:start="245:51" pos:end="245:51">1</literal><operator pos:start="245:52" pos:end="245:52">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="245:55" pos:end="245:67">//(a + x/2)/x</comment>

        <expr_stmt pos:start="247:9" pos:end="247:31"><expr pos:start="247:9" pos:end="247:30"><name pos:start="247:9" pos:end="247:27"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:27">inter_quant_bias</name></name><operator pos:start="247:28" pos:end="247:28">=</operator> <literal type="number" pos:start="247:30" pos:end="247:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="249:6" pos:end="255:5">else if<condition pos:start="249:13" pos:end="249:99">(<expr pos:start="249:14" pos:end="249:98"><name pos:start="249:14" pos:end="249:26"><name pos:start="249:14" pos:end="249:14">s</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:26">mpeg_quant</name></name> <operator pos:start="249:28" pos:end="249:29">||</operator> <name pos:start="249:31" pos:end="249:41"><name pos:start="249:31" pos:end="249:31">s</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:41">codec_id</name></name><operator pos:start="249:42" pos:end="249:43">==</operator><name pos:start="249:44" pos:end="249:62">CODEC_ID_MPEG1VIDEO</name> <operator pos:start="249:64" pos:end="249:65">||</operator> <name pos:start="249:67" pos:end="249:77"><name pos:start="249:67" pos:end="249:67">s</name><operator pos:start="249:68" pos:end="249:69">-&gt;</operator><name pos:start="249:70" pos:end="249:77">codec_id</name></name><operator pos:start="249:78" pos:end="249:79">==</operator><name pos:start="249:80" pos:end="249:98">CODEC_ID_MPEG2VIDEO</name></expr>)</condition><block pos:start="249:100" pos:end="255:5">{<block_content pos:start="251:9" pos:end="253:31">

        <expr_stmt pos:start="251:9" pos:end="251:53"><expr pos:start="251:9" pos:end="251:52"><name pos:start="251:9" pos:end="251:27"><name pos:start="251:9" pos:end="251:9">s</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:27">intra_quant_bias</name></name><operator pos:start="251:28" pos:end="251:28">=</operator> <literal type="number" pos:start="251:30" pos:end="251:30">3</literal><operator pos:start="251:31" pos:end="251:32">&lt;&lt;</operator><operator pos:start="251:33" pos:end="251:33">(</operator><name pos:start="251:34" pos:end="251:49">QUANT_BIAS_SHIFT</name><operator pos:start="251:50" pos:end="251:50">-</operator><literal type="number" pos:start="251:51" pos:end="251:51">3</literal><operator pos:start="251:52" pos:end="251:52">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="251:55" pos:end="251:69">//(a + x*3/8)/x</comment>

        <expr_stmt pos:start="253:9" pos:end="253:31"><expr pos:start="253:9" pos:end="253:30"><name pos:start="253:9" pos:end="253:27"><name pos:start="253:9" pos:end="253:9">s</name><operator pos:start="253:10" pos:end="253:11">-&gt;</operator><name pos:start="253:12" pos:end="253:27">inter_quant_bias</name></name><operator pos:start="253:28" pos:end="253:28">=</operator> <literal type="number" pos:start="253:30" pos:end="253:30">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="255:6" pos:end="261:5">else<block pos:start="255:10" pos:end="261:5">{<block_content pos:start="257:9" pos:end="259:55">

        <expr_stmt pos:start="257:9" pos:end="257:30"><expr pos:start="257:9" pos:end="257:29"><name pos:start="257:9" pos:end="257:27"><name pos:start="257:9" pos:end="257:9">s</name><operator pos:start="257:10" pos:end="257:11">-&gt;</operator><name pos:start="257:12" pos:end="257:27">intra_quant_bias</name></name><operator pos:start="257:28" pos:end="257:28">=</operator><literal type="number" pos:start="257:29" pos:end="257:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:55"><expr pos:start="259:9" pos:end="259:54"><name pos:start="259:9" pos:end="259:27"><name pos:start="259:9" pos:end="259:9">s</name><operator pos:start="259:10" pos:end="259:11">-&gt;</operator><name pos:start="259:12" pos:end="259:27">inter_quant_bias</name></name><operator pos:start="259:28" pos:end="259:28">=</operator><operator pos:start="259:29" pos:end="259:29">-</operator><operator pos:start="259:30" pos:end="259:30">(</operator><literal type="number" pos:start="259:31" pos:end="259:31">1</literal><operator pos:start="259:32" pos:end="259:33">&lt;&lt;</operator><operator pos:start="259:34" pos:end="259:34">(</operator><name pos:start="259:35" pos:end="259:50">QUANT_BIAS_SHIFT</name><operator pos:start="259:51" pos:end="259:51">-</operator><literal type="number" pos:start="259:52" pos:end="259:52">2</literal><operator pos:start="259:53" pos:end="259:53">)</operator><operator pos:start="259:54" pos:end="259:54">)</operator></expr>;</expr_stmt> <comment type="line" pos:start="259:57" pos:end="259:69">//(a - x/4)/x</comment>

    </block_content>}</block></else></if_stmt>

    

    <if_stmt pos:start="265:5" pos:end="267:53"><if pos:start="265:5" pos:end="267:53">if<condition pos:start="265:7" pos:end="265:56">(<expr pos:start="265:8" pos:end="265:55"><name pos:start="265:8" pos:end="265:30"><name pos:start="265:8" pos:end="265:12">avctx</name><operator pos:start="265:13" pos:end="265:14">-&gt;</operator><name pos:start="265:15" pos:end="265:30">intra_quant_bias</name></name> <operator pos:start="265:32" pos:end="265:33">!=</operator> <name pos:start="265:35" pos:end="265:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="267:9" pos:end="267:53"><block_content pos:start="267:9" pos:end="267:53">

        <expr_stmt pos:start="267:9" pos:end="267:53"><expr pos:start="267:9" pos:end="267:52"><name pos:start="267:9" pos:end="267:27"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:27">intra_quant_bias</name></name><operator pos:start="267:28" pos:end="267:28">=</operator> <name pos:start="267:30" pos:end="267:52"><name pos:start="267:30" pos:end="267:34">avctx</name><operator pos:start="267:35" pos:end="267:36">-&gt;</operator><name pos:start="267:37" pos:end="267:52">intra_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="269:5" pos:end="271:53"><if pos:start="269:5" pos:end="271:53">if<condition pos:start="269:7" pos:end="269:56">(<expr pos:start="269:8" pos:end="269:55"><name pos:start="269:8" pos:end="269:30"><name pos:start="269:8" pos:end="269:12">avctx</name><operator pos:start="269:13" pos:end="269:14">-&gt;</operator><name pos:start="269:15" pos:end="269:30">inter_quant_bias</name></name> <operator pos:start="269:32" pos:end="269:33">!=</operator> <name pos:start="269:35" pos:end="269:55">FF_DEFAULT_QUANT_BIAS</name></expr>)</condition><block type="pseudo" pos:start="271:9" pos:end="271:53"><block_content pos:start="271:9" pos:end="271:53">

        <expr_stmt pos:start="271:9" pos:end="271:53"><expr pos:start="271:9" pos:end="271:52"><name pos:start="271:9" pos:end="271:27"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:27">inter_quant_bias</name></name><operator pos:start="271:28" pos:end="271:28">=</operator> <name pos:start="271:30" pos:end="271:52"><name pos:start="271:30" pos:end="271:34">avctx</name><operator pos:start="271:35" pos:end="271:36">-&gt;</operator><name pos:start="271:37" pos:end="271:52">inter_quant_bias</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        

    <expr_stmt pos:start="275:5" pos:end="275:84"><expr pos:start="275:5" pos:end="275:83"><call pos:start="275:5" pos:end="275:83"><name pos:start="275:5" pos:end="275:33">avcodec_get_chroma_sub_sample</name><argument_list pos:start="275:34" pos:end="275:83">(<argument pos:start="275:35" pos:end="275:48"><expr pos:start="275:35" pos:end="275:48"><name pos:start="275:35" pos:end="275:48"><name pos:start="275:35" pos:end="275:39">avctx</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:48">pix_fmt</name></name></expr></argument>, <argument pos:start="275:51" pos:end="275:65"><expr pos:start="275:51" pos:end="275:65"><operator pos:start="275:51" pos:end="275:51">&amp;</operator><name pos:start="275:52" pos:end="275:65">chroma_h_shift</name></expr></argument>, <argument pos:start="275:68" pos:end="275:82"><expr pos:start="275:68" pos:end="275:82"><operator pos:start="275:68" pos:end="275:68">&amp;</operator><name pos:start="275:69" pos:end="275:82">chroma_v_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="279:5" pos:end="279:113"><expr pos:start="279:5" pos:end="279:112"><call pos:start="279:5" pos:end="279:112"><name pos:start="279:5" pos:end="279:13">av_reduce</name><argument_list pos:start="279:14" pos:end="279:112">(<argument pos:start="279:15" pos:end="279:43"><expr pos:start="279:15" pos:end="279:43"><operator pos:start="279:15" pos:end="279:15">&amp;</operator><name pos:start="279:16" pos:end="279:43"><name pos:start="279:16" pos:end="279:16">s</name><operator pos:start="279:17" pos:end="279:18">-&gt;</operator><name pos:start="279:19" pos:end="279:43">time_increment_resolution</name></name></expr></argument>, <argument pos:start="279:46" pos:end="279:51"><expr pos:start="279:46" pos:end="279:51"><operator pos:start="279:46" pos:end="279:46">&amp;</operator><name pos:start="279:47" pos:end="279:51">dummy</name></expr></argument>, <argument pos:start="279:54" pos:end="279:73"><expr pos:start="279:54" pos:end="279:73"><name pos:start="279:54" pos:end="279:73"><name pos:start="279:54" pos:end="279:54">s</name><operator pos:start="279:55" pos:end="279:56">-&gt;</operator><name pos:start="279:57" pos:end="279:61">avctx</name><operator pos:start="279:62" pos:end="279:63">-&gt;</operator><name pos:start="279:64" pos:end="279:73">frame_rate</name></name></expr></argument>, <argument pos:start="279:76" pos:end="279:100"><expr pos:start="279:76" pos:end="279:100"><name pos:start="279:76" pos:end="279:100"><name pos:start="279:76" pos:end="279:76">s</name><operator pos:start="279:77" pos:end="279:78">-&gt;</operator><name pos:start="279:79" pos:end="279:83">avctx</name><operator pos:start="279:84" pos:end="279:85">-&gt;</operator><name pos:start="279:86" pos:end="279:100">frame_rate_base</name></name></expr></argument>, <argument pos:start="279:103" pos:end="279:111"><expr pos:start="279:103" pos:end="279:111"><operator pos:start="279:103" pos:end="279:103">(</operator><literal type="number" pos:start="279:104" pos:end="279:104">1</literal><operator pos:start="279:105" pos:end="279:106">&lt;&lt;</operator><literal type="number" pos:start="279:107" pos:end="279:108">16</literal><operator pos:start="279:109" pos:end="279:109">)</operator><operator pos:start="279:110" pos:end="279:110">-</operator><literal type="number" pos:start="279:111" pos:end="279:111">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:75"><expr pos:start="281:5" pos:end="281:74"><name pos:start="281:5" pos:end="281:26"><name pos:start="281:5" pos:end="281:5">s</name><operator pos:start="281:6" pos:end="281:7">-&gt;</operator><name pos:start="281:8" pos:end="281:26">time_increment_bits</name></name> <operator pos:start="281:28" pos:end="281:28">=</operator> <call pos:start="281:30" pos:end="281:70"><name pos:start="281:30" pos:end="281:36">av_log2</name><argument_list pos:start="281:37" pos:end="281:70">(<argument pos:start="281:38" pos:end="281:69"><expr pos:start="281:38" pos:end="281:69"><name pos:start="281:38" pos:end="281:65"><name pos:start="281:38" pos:end="281:38">s</name><operator pos:start="281:39" pos:end="281:40">-&gt;</operator><name pos:start="281:41" pos:end="281:65">time_increment_resolution</name></name> <operator pos:start="281:67" pos:end="281:67">-</operator> <literal type="number" pos:start="281:69" pos:end="281:69">1</literal></expr></argument>)</argument_list></call> <operator pos:start="281:72" pos:end="281:72">+</operator> <literal type="number" pos:start="281:74" pos:end="281:74">1</literal></expr>;</expr_stmt>



    <switch pos:start="285:5" pos:end="543:5">switch<condition pos:start="285:11" pos:end="285:28">(<expr pos:start="285:12" pos:end="285:27"><name pos:start="285:12" pos:end="285:27"><name pos:start="285:12" pos:end="285:16">avctx</name><operator pos:start="285:17" pos:end="285:18">-&gt;</operator><name pos:start="285:19" pos:end="285:23">codec</name><operator pos:start="285:24" pos:end="285:25">-&gt;</operator><name pos:start="285:26" pos:end="285:27">id</name></name></expr>)</condition> <block pos:start="285:30" pos:end="543:5">{<block_content pos:start="287:5" pos:end="541:18">

    <case pos:start="287:5" pos:end="287:29">case <expr pos:start="287:10" pos:end="287:28"><name pos:start="287:10" pos:end="287:28">CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:34"><expr pos:start="289:9" pos:end="289:33"><name pos:start="289:9" pos:end="289:21"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:21">out_format</name></name> <operator pos:start="289:23" pos:end="289:23">=</operator> <name pos:start="289:25" pos:end="289:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:24"><expr pos:start="291:9" pos:end="291:23"><name pos:start="291:9" pos:end="291:20"><name pos:start="291:9" pos:end="291:9">s</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:20">low_delay</name></name><operator pos:start="291:21" pos:end="291:21">=</operator> <literal type="number" pos:start="291:23" pos:end="291:23">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="291:26" pos:end="291:51">//s-&gt;max_b_frames ? 0 : 1;</comment>

        <expr_stmt pos:start="293:9" pos:end="293:63"><expr pos:start="293:9" pos:end="293:62"><name pos:start="293:9" pos:end="293:20"><name pos:start="293:9" pos:end="293:13">avctx</name><operator pos:start="293:14" pos:end="293:15">-&gt;</operator><name pos:start="293:16" pos:end="293:20">delay</name></name><operator pos:start="293:21" pos:end="293:21">=</operator> <ternary pos:start="293:23" pos:end="293:62"><condition pos:start="293:23" pos:end="293:36"><expr pos:start="293:23" pos:end="293:34"><name pos:start="293:23" pos:end="293:34"><name pos:start="293:23" pos:end="293:23">s</name><operator pos:start="293:24" pos:end="293:25">-&gt;</operator><name pos:start="293:26" pos:end="293:34">low_delay</name></name></expr> ?</condition><then pos:start="293:38" pos:end="293:38"> <expr pos:start="293:38" pos:end="293:38"><literal type="number" pos:start="293:38" pos:end="293:38">0</literal></expr> </then><else pos:start="293:40" pos:end="293:62">: <expr pos:start="293:42" pos:end="293:62"><operator pos:start="293:42" pos:end="293:42">(</operator><name pos:start="293:43" pos:end="293:57"><name pos:start="293:43" pos:end="293:43">s</name><operator pos:start="293:44" pos:end="293:45">-&gt;</operator><name pos:start="293:46" pos:end="293:57">max_b_frames</name></name> <operator pos:start="293:59" pos:end="293:59">+</operator> <literal type="number" pos:start="293:61" pos:end="293:61">1</literal><operator pos:start="293:62" pos:end="293:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="295:9" pos:end="295:14">break;</break>

    <case pos:start="297:5" pos:end="297:29">case <expr pos:start="297:10" pos:end="297:28"><name pos:start="297:10" pos:end="297:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="299:9" pos:end="299:34"><expr pos:start="299:9" pos:end="299:33"><name pos:start="299:9" pos:end="299:21"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:21">out_format</name></name> <operator pos:start="299:23" pos:end="299:23">=</operator> <name pos:start="299:25" pos:end="299:33">FMT_MPEG1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="301:9" pos:end="301:24"><expr pos:start="301:9" pos:end="301:23"><name pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:20">low_delay</name></name><operator pos:start="301:21" pos:end="301:21">=</operator> <literal type="number" pos:start="301:23" pos:end="301:23">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="301:26" pos:end="301:51">//s-&gt;max_b_frames ? 0 : 1;</comment>

        <expr_stmt pos:start="303:9" pos:end="303:63"><expr pos:start="303:9" pos:end="303:62"><name pos:start="303:9" pos:end="303:20"><name pos:start="303:9" pos:end="303:13">avctx</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:20">delay</name></name><operator pos:start="303:21" pos:end="303:21">=</operator> <ternary pos:start="303:23" pos:end="303:62"><condition pos:start="303:23" pos:end="303:36"><expr pos:start="303:23" pos:end="303:34"><name pos:start="303:23" pos:end="303:34"><name pos:start="303:23" pos:end="303:23">s</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:34">low_delay</name></name></expr> ?</condition><then pos:start="303:38" pos:end="303:38"> <expr pos:start="303:38" pos:end="303:38"><literal type="number" pos:start="303:38" pos:end="303:38">0</literal></expr> </then><else pos:start="303:40" pos:end="303:62">: <expr pos:start="303:42" pos:end="303:62"><operator pos:start="303:42" pos:end="303:42">(</operator><name pos:start="303:43" pos:end="303:57"><name pos:start="303:43" pos:end="303:43">s</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:57">max_b_frames</name></name> <operator pos:start="303:59" pos:end="303:59">+</operator> <literal type="number" pos:start="303:61" pos:end="303:61">1</literal><operator pos:start="303:62" pos:end="303:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="305:9" pos:end="305:23"><expr pos:start="305:9" pos:end="305:22"><name pos:start="305:9" pos:end="305:19"><name pos:start="305:9" pos:end="305:9">s</name><operator pos:start="305:10" pos:end="305:11">-&gt;</operator><name pos:start="305:12" pos:end="305:19">rtp_mode</name></name><operator pos:start="305:20" pos:end="305:20">=</operator> <literal type="number" pos:start="305:22" pos:end="305:22">1</literal></expr>;</expr_stmt>

        <break pos:start="307:9" pos:end="307:14">break;</break>

    <case pos:start="309:5" pos:end="309:24">case <expr pos:start="309:10" pos:end="309:23"><name pos:start="309:10" pos:end="309:23">CODEC_ID_LJPEG</name></expr>:</case>

    <case pos:start="311:5" pos:end="311:24">case <expr pos:start="311:10" pos:end="311:23"><name pos:start="311:10" pos:end="311:23">CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="313:9" pos:end="313:34"><expr pos:start="313:9" pos:end="313:33"><name pos:start="313:9" pos:end="313:21"><name pos:start="313:9" pos:end="313:9">s</name><operator pos:start="313:10" pos:end="313:11">-&gt;</operator><name pos:start="313:12" pos:end="313:21">out_format</name></name> <operator pos:start="313:23" pos:end="313:23">=</operator> <name pos:start="313:25" pos:end="313:33">FMT_MJPEG</name></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:26"><expr pos:start="315:9" pos:end="315:25"><name pos:start="315:9" pos:end="315:21"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:21">intra_only</name></name> <operator pos:start="315:23" pos:end="315:23">=</operator> <literal type="number" pos:start="315:25" pos:end="315:25">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="315:28" pos:end="315:58">/* force intra only for jpeg */</comment>

        <expr_stmt pos:start="317:9" pos:end="317:34"><expr pos:start="317:9" pos:end="317:33"><name pos:start="317:9" pos:end="317:29"><name pos:start="317:9" pos:end="317:9">s</name><operator pos:start="317:10" pos:end="317:11">-&gt;</operator><name pos:start="317:12" pos:end="317:29">mjpeg_write_tables</name></name> <operator pos:start="317:31" pos:end="317:31">=</operator> <literal type="number" pos:start="317:33" pos:end="317:33">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="317:36" pos:end="317:57">/* write all tables */</comment>

	<expr_stmt pos:start="319:9" pos:end="319:38"><expr pos:start="319:9" pos:end="319:37"><name pos:start="319:9" pos:end="319:33"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:33">mjpeg_data_only_frames</name></name> <operator pos:start="319:35" pos:end="319:35">=</operator> <literal type="number" pos:start="319:37" pos:end="319:37">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="319:40" pos:end="319:73">/* write all the needed headers */</comment>

        <expr_stmt pos:start="321:9" pos:end="321:48"><expr pos:start="321:9" pos:end="321:47"><name pos:start="321:9" pos:end="321:27"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:24">mjpeg_vsample</name><index pos:start="321:25" pos:end="321:27">[<expr pos:start="321:26" pos:end="321:26"><literal type="number" pos:start="321:26" pos:end="321:26">0</literal></expr>]</index></name> <operator pos:start="321:29" pos:end="321:29">=</operator> <literal type="number" pos:start="321:31" pos:end="321:31">1</literal><operator pos:start="321:32" pos:end="321:33">&lt;&lt;</operator><name pos:start="321:34" pos:end="321:47">chroma_v_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:32"><expr pos:start="323:9" pos:end="323:31"><name pos:start="323:9" pos:end="323:27"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:24">mjpeg_vsample</name><index pos:start="323:25" pos:end="323:27">[<expr pos:start="323:26" pos:end="323:26"><literal type="number" pos:start="323:26" pos:end="323:26">1</literal></expr>]</index></name> <operator pos:start="323:29" pos:end="323:29">=</operator> <literal type="number" pos:start="323:31" pos:end="323:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:32"><expr pos:start="325:9" pos:end="325:31"><name pos:start="325:9" pos:end="325:27"><name pos:start="325:9" pos:end="325:9">s</name><operator pos:start="325:10" pos:end="325:11">-&gt;</operator><name pos:start="325:12" pos:end="325:24">mjpeg_vsample</name><index pos:start="325:25" pos:end="325:27">[<expr pos:start="325:26" pos:end="325:26"><literal type="number" pos:start="325:26" pos:end="325:26">2</literal></expr>]</index></name> <operator pos:start="325:29" pos:end="325:29">=</operator> <literal type="number" pos:start="325:31" pos:end="325:31">1</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="327:9" pos:end="327:48"><expr pos:start="327:9" pos:end="327:47"><name pos:start="327:9" pos:end="327:27"><name pos:start="327:9" pos:end="327:9">s</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:24">mjpeg_hsample</name><index pos:start="327:25" pos:end="327:27">[<expr pos:start="327:26" pos:end="327:26"><literal type="number" pos:start="327:26" pos:end="327:26">0</literal></expr>]</index></name> <operator pos:start="327:29" pos:end="327:29">=</operator> <literal type="number" pos:start="327:31" pos:end="327:31">1</literal><operator pos:start="327:32" pos:end="327:33">&lt;&lt;</operator><name pos:start="327:34" pos:end="327:47">chroma_h_shift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:32"><expr pos:start="329:9" pos:end="329:31"><name pos:start="329:9" pos:end="329:27"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:24">mjpeg_hsample</name><index pos:start="329:25" pos:end="329:27">[<expr pos:start="329:26" pos:end="329:26"><literal type="number" pos:start="329:26" pos:end="329:26">1</literal></expr>]</index></name> <operator pos:start="329:29" pos:end="329:29">=</operator> <literal type="number" pos:start="329:31" pos:end="329:31">1</literal></expr>;</expr_stmt> 

        <expr_stmt pos:start="331:9" pos:end="331:32"><expr pos:start="331:9" pos:end="331:31"><name pos:start="331:9" pos:end="331:27"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:24">mjpeg_hsample</name><index pos:start="331:25" pos:end="331:27">[<expr pos:start="331:26" pos:end="331:26"><literal type="number" pos:start="331:26" pos:end="331:26">2</literal></expr>]</index></name> <operator pos:start="331:29" pos:end="331:29">=</operator> <literal type="number" pos:start="331:31" pos:end="331:31">1</literal></expr>;</expr_stmt> 

        <if_stmt pos:start="333:9" pos:end="335:22"><if pos:start="333:9" pos:end="335:22">if <condition pos:start="333:12" pos:end="333:30">(<expr pos:start="333:13" pos:end="333:29"><call pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:22">mjpeg_init</name><argument_list pos:start="333:23" pos:end="333:25">(<argument pos:start="333:24" pos:end="333:24"><expr pos:start="333:24" pos:end="333:24"><name pos:start="333:24" pos:end="333:24">s</name></expr></argument>)</argument_list></call> <operator pos:start="333:27" pos:end="333:27">&lt;</operator> <literal type="number" pos:start="333:29" pos:end="333:29">0</literal></expr>)</condition><block type="pseudo" pos:start="335:13" pos:end="335:22"><block_content pos:start="335:13" pos:end="335:22">

            <return pos:start="335:13" pos:end="335:22">return <expr pos:start="335:20" pos:end="335:21"><operator pos:start="335:20" pos:end="335:20">-</operator><literal type="number" pos:start="335:21" pos:end="335:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:23"><expr pos:start="337:9" pos:end="337:22"><name pos:start="337:9" pos:end="337:20"><name pos:start="337:9" pos:end="337:13">avctx</name><operator pos:start="337:14" pos:end="337:15">-&gt;</operator><name pos:start="337:16" pos:end="337:20">delay</name></name><operator pos:start="337:21" pos:end="337:21">=</operator><literal type="number" pos:start="337:22" pos:end="337:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="339:9" pos:end="339:23"><expr pos:start="339:9" pos:end="339:22"><name pos:start="339:9" pos:end="339:20"><name pos:start="339:9" pos:end="339:9">s</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:20">low_delay</name></name><operator pos:start="339:21" pos:end="339:21">=</operator><literal type="number" pos:start="339:22" pos:end="339:22">1</literal></expr>;</expr_stmt>

        <break pos:start="341:9" pos:end="344:0">break;</break>

<cpp:ifdef pos:start="343:1" pos:end="343:19">#<cpp:directive pos:start="343:2" pos:end="343:6">ifdef</cpp:directive> <name pos:start="343:8" pos:end="343:19">CONFIG_RISKY</name></cpp:ifdef>

    <case pos:start="345:5" pos:end="345:23">case <expr pos:start="345:10" pos:end="345:22"><name pos:start="345:10" pos:end="345:22">CODEC_ID_H263</name></expr>:</case>

        <if_stmt pos:start="347:9" pos:end="353:9"><if pos:start="347:9" pos:end="353:9">if <condition pos:start="347:12" pos:end="347:62">(<expr pos:start="347:13" pos:end="347:61"><call pos:start="347:13" pos:end="347:56"><name pos:start="347:13" pos:end="347:35">h263_get_picture_format</name><argument_list pos:start="347:36" pos:end="347:56">(<argument pos:start="347:37" pos:end="347:44"><expr pos:start="347:37" pos:end="347:44"><name pos:start="347:37" pos:end="347:44"><name pos:start="347:37" pos:end="347:37">s</name><operator pos:start="347:38" pos:end="347:39">-&gt;</operator><name pos:start="347:40" pos:end="347:44">width</name></name></expr></argument>, <argument pos:start="347:47" pos:end="347:55"><expr pos:start="347:47" pos:end="347:55"><name pos:start="347:47" pos:end="347:55"><name pos:start="347:47" pos:end="347:47">s</name><operator pos:start="347:48" pos:end="347:49">-&gt;</operator><name pos:start="347:50" pos:end="347:55">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="347:58" pos:end="347:59">==</operator> <literal type="number" pos:start="347:61" pos:end="347:61">7</literal></expr>)</condition> <block pos:start="347:64" pos:end="353:9">{<block_content pos:start="349:13" pos:end="351:22">

            <expr_stmt pos:start="349:13" pos:end="349:104"><expr pos:start="349:13" pos:end="349:103"><call pos:start="349:13" pos:end="349:103"><name pos:start="349:13" pos:end="349:18">av_log</name><argument_list pos:start="349:19" pos:end="349:103">(<argument pos:start="349:20" pos:end="349:24"><expr pos:start="349:20" pos:end="349:24"><name pos:start="349:20" pos:end="349:24">avctx</name></expr></argument>, <argument pos:start="349:27" pos:end="349:37"><expr pos:start="349:27" pos:end="349:37"><name pos:start="349:27" pos:end="349:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="349:40" pos:end="349:102"><expr pos:start="349:40" pos:end="349:102"><literal type="string" pos:start="349:40" pos:end="349:102">"Input picture size isn't suitable for h263 codec! try h263+\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="351:13" pos:end="351:22">return <expr pos:start="351:20" pos:end="351:21"><operator pos:start="351:20" pos:end="351:20">-</operator><literal type="number" pos:start="351:21" pos:end="351:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="355:9" pos:end="355:33"><expr pos:start="355:9" pos:end="355:32"><name pos:start="355:9" pos:end="355:21"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:21">out_format</name></name> <operator pos:start="355:23" pos:end="355:23">=</operator> <name pos:start="355:25" pos:end="355:32">FMT_H263</name></expr>;</expr_stmt>

	<expr_stmt pos:start="357:9" pos:end="357:56"><expr pos:start="357:9" pos:end="357:55"><name pos:start="357:9" pos:end="357:15"><name pos:start="357:9" pos:end="357:9">s</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:15">obmc</name></name><operator pos:start="357:16" pos:end="357:16">=</operator> <ternary pos:start="357:18" pos:end="357:55"><condition pos:start="357:18" pos:end="357:51"><expr pos:start="357:18" pos:end="357:49"><operator pos:start="357:18" pos:end="357:18">(</operator><name pos:start="357:19" pos:end="357:30"><name pos:start="357:19" pos:end="357:23">avctx</name><operator pos:start="357:24" pos:end="357:25">-&gt;</operator><name pos:start="357:26" pos:end="357:30">flags</name></name> <operator pos:start="357:32" pos:end="357:32">&amp;</operator> <name pos:start="357:34" pos:end="357:48">CODEC_FLAG_OBMC</name><operator pos:start="357:49" pos:end="357:49">)</operator></expr> ?</condition><then pos:start="357:53" pos:end="357:53"> <expr pos:start="357:53" pos:end="357:53"><literal type="number" pos:start="357:53" pos:end="357:53">1</literal></expr></then><else pos:start="357:54" pos:end="357:55">:<expr pos:start="357:55" pos:end="357:55"><literal type="number" pos:start="357:55" pos:end="357:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="359:23"><expr pos:start="359:9" pos:end="359:22"><name pos:start="359:9" pos:end="359:20"><name pos:start="359:9" pos:end="359:13">avctx</name><operator pos:start="359:14" pos:end="359:15">-&gt;</operator><name pos:start="359:16" pos:end="359:20">delay</name></name><operator pos:start="359:21" pos:end="359:21">=</operator><literal type="number" pos:start="359:22" pos:end="359:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:23"><expr pos:start="361:9" pos:end="361:22"><name pos:start="361:9" pos:end="361:20"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:20">low_delay</name></name><operator pos:start="361:21" pos:end="361:21">=</operator><literal type="number" pos:start="361:22" pos:end="361:22">1</literal></expr>;</expr_stmt>

        <break pos:start="363:9" pos:end="363:14">break;</break>

    <case pos:start="365:5" pos:end="365:24">case <expr pos:start="365:10" pos:end="365:23"><name pos:start="365:10" pos:end="365:23">CODEC_ID_H263P</name></expr>:</case>

        <expr_stmt pos:start="367:9" pos:end="367:33"><expr pos:start="367:9" pos:end="367:32"><name pos:start="367:9" pos:end="367:21"><name pos:start="367:9" pos:end="367:9">s</name><operator pos:start="367:10" pos:end="367:11">-&gt;</operator><name pos:start="367:12" pos:end="367:21">out_format</name></name> <operator pos:start="367:23" pos:end="367:23">=</operator> <name pos:start="367:25" pos:end="367:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="369:9" pos:end="369:25"><expr pos:start="369:9" pos:end="369:24"><name pos:start="369:9" pos:end="369:20"><name pos:start="369:9" pos:end="369:9">s</name><operator pos:start="369:10" pos:end="369:11">-&gt;</operator><name pos:start="369:12" pos:end="369:20">h263_plus</name></name> <operator pos:start="369:22" pos:end="369:22">=</operator> <literal type="number" pos:start="369:24" pos:end="369:24">1</literal></expr>;</expr_stmt>

	<comment type="block" pos:start="371:9" pos:end="371:16">/* Fx */</comment>

        <expr_stmt pos:start="373:9" pos:end="373:65"><expr pos:start="373:9" pos:end="373:64"><name pos:start="373:9" pos:end="373:18"><name pos:start="373:9" pos:end="373:9">s</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:18">umvplus</name></name> <operator pos:start="373:20" pos:end="373:20">=</operator> <ternary pos:start="373:22" pos:end="373:64"><condition pos:start="373:22" pos:end="373:60"><expr pos:start="373:22" pos:end="373:58"><operator pos:start="373:22" pos:end="373:22">(</operator><name pos:start="373:23" pos:end="373:34"><name pos:start="373:23" pos:end="373:27">avctx</name><operator pos:start="373:28" pos:end="373:29">-&gt;</operator><name pos:start="373:30" pos:end="373:34">flags</name></name> <operator pos:start="373:36" pos:end="373:36">&amp;</operator> <name pos:start="373:38" pos:end="373:57">CODEC_FLAG_H263P_UMV</name><operator pos:start="373:58" pos:end="373:58">)</operator></expr> ?</condition><then pos:start="373:62" pos:end="373:62"> <expr pos:start="373:62" pos:end="373:62"><literal type="number" pos:start="373:62" pos:end="373:62">1</literal></expr></then><else pos:start="373:63" pos:end="373:64">:<expr pos:start="373:64" pos:end="373:64"><literal type="number" pos:start="373:64" pos:end="373:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

	<expr_stmt pos:start="375:9" pos:end="375:65"><expr pos:start="375:9" pos:end="375:64"><name pos:start="375:9" pos:end="375:19"><name pos:start="375:9" pos:end="375:9">s</name><operator pos:start="375:10" pos:end="375:11">-&gt;</operator><name pos:start="375:12" pos:end="375:19">h263_aic</name></name><operator pos:start="375:20" pos:end="375:20">=</operator> <ternary pos:start="375:22" pos:end="375:64"><condition pos:start="375:22" pos:end="375:60"><expr pos:start="375:22" pos:end="375:58"><operator pos:start="375:22" pos:end="375:22">(</operator><name pos:start="375:23" pos:end="375:34"><name pos:start="375:23" pos:end="375:27">avctx</name><operator pos:start="375:28" pos:end="375:29">-&gt;</operator><name pos:start="375:30" pos:end="375:34">flags</name></name> <operator pos:start="375:36" pos:end="375:36">&amp;</operator> <name pos:start="375:38" pos:end="375:57">CODEC_FLAG_H263P_AIC</name><operator pos:start="375:58" pos:end="375:58">)</operator></expr> ?</condition><then pos:start="375:62" pos:end="375:62"> <expr pos:start="375:62" pos:end="375:62"><literal type="number" pos:start="375:62" pos:end="375:62">1</literal></expr></then><else pos:start="375:63" pos:end="375:64">:<expr pos:start="375:64" pos:end="375:64"><literal type="number" pos:start="375:64" pos:end="375:64">0</literal></expr></else></ternary></expr>;</expr_stmt>

	<expr_stmt pos:start="377:9" pos:end="377:39"><expr pos:start="377:9" pos:end="377:38"><name pos:start="377:9" pos:end="377:25"><name pos:start="377:9" pos:end="377:9">s</name><operator pos:start="377:10" pos:end="377:11">-&gt;</operator><name pos:start="377:12" pos:end="377:25">modified_quant</name></name><operator pos:start="377:26" pos:end="377:26">=</operator> <name pos:start="377:28" pos:end="377:38"><name pos:start="377:28" pos:end="377:28">s</name><operator pos:start="377:29" pos:end="377:30">-&gt;</operator><name pos:start="377:31" pos:end="377:38">h263_aic</name></name></expr>;</expr_stmt>

	<expr_stmt pos:start="379:9" pos:end="379:70"><expr pos:start="379:9" pos:end="379:69"><name pos:start="379:9" pos:end="379:24"><name pos:start="379:9" pos:end="379:9">s</name><operator pos:start="379:10" pos:end="379:11">-&gt;</operator><name pos:start="379:12" pos:end="379:24">alt_inter_vlc</name></name><operator pos:start="379:25" pos:end="379:25">=</operator> <ternary pos:start="379:27" pos:end="379:69"><condition pos:start="379:27" pos:end="379:65"><expr pos:start="379:27" pos:end="379:63"><operator pos:start="379:27" pos:end="379:27">(</operator><name pos:start="379:28" pos:end="379:39"><name pos:start="379:28" pos:end="379:32">avctx</name><operator pos:start="379:33" pos:end="379:34">-&gt;</operator><name pos:start="379:35" pos:end="379:39">flags</name></name> <operator pos:start="379:41" pos:end="379:41">&amp;</operator> <name pos:start="379:43" pos:end="379:62">CODEC_FLAG_H263P_AIV</name><operator pos:start="379:63" pos:end="379:63">)</operator></expr> ?</condition><then pos:start="379:67" pos:end="379:67"> <expr pos:start="379:67" pos:end="379:67"><literal type="number" pos:start="379:67" pos:end="379:67">1</literal></expr></then><else pos:start="379:68" pos:end="379:69">:<expr pos:start="379:69" pos:end="379:69"><literal type="number" pos:start="379:69" pos:end="379:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

	<expr_stmt pos:start="381:9" pos:end="381:56"><expr pos:start="381:9" pos:end="381:55"><name pos:start="381:9" pos:end="381:15"><name pos:start="381:9" pos:end="381:9">s</name><operator pos:start="381:10" pos:end="381:11">-&gt;</operator><name pos:start="381:12" pos:end="381:15">obmc</name></name><operator pos:start="381:16" pos:end="381:16">=</operator> <ternary pos:start="381:18" pos:end="381:55"><condition pos:start="381:18" pos:end="381:51"><expr pos:start="381:18" pos:end="381:49"><operator pos:start="381:18" pos:end="381:18">(</operator><name pos:start="381:19" pos:end="381:30"><name pos:start="381:19" pos:end="381:23">avctx</name><operator pos:start="381:24" pos:end="381:25">-&gt;</operator><name pos:start="381:26" pos:end="381:30">flags</name></name> <operator pos:start="381:32" pos:end="381:32">&amp;</operator> <name pos:start="381:34" pos:end="381:48">CODEC_FLAG_OBMC</name><operator pos:start="381:49" pos:end="381:49">)</operator></expr> ?</condition><then pos:start="381:53" pos:end="381:53"> <expr pos:start="381:53" pos:end="381:53"><literal type="number" pos:start="381:53" pos:end="381:53">1</literal></expr></then><else pos:start="381:54" pos:end="381:55">:<expr pos:start="381:55" pos:end="381:55"><literal type="number" pos:start="381:55" pos:end="381:55">0</literal></expr></else></ternary></expr>;</expr_stmt>

	<expr_stmt pos:start="383:9" pos:end="383:70"><expr pos:start="383:9" pos:end="383:69"><name pos:start="383:9" pos:end="383:22"><name pos:start="383:9" pos:end="383:9">s</name><operator pos:start="383:10" pos:end="383:11">-&gt;</operator><name pos:start="383:12" pos:end="383:22">loop_filter</name></name><operator pos:start="383:23" pos:end="383:23">=</operator> <ternary pos:start="383:25" pos:end="383:69"><condition pos:start="383:25" pos:end="383:65"><expr pos:start="383:25" pos:end="383:63"><operator pos:start="383:25" pos:end="383:25">(</operator><name pos:start="383:26" pos:end="383:37"><name pos:start="383:26" pos:end="383:30">avctx</name><operator pos:start="383:31" pos:end="383:32">-&gt;</operator><name pos:start="383:33" pos:end="383:37">flags</name></name> <operator pos:start="383:39" pos:end="383:39">&amp;</operator> <name pos:start="383:41" pos:end="383:62">CODEC_FLAG_LOOP_FILTER</name><operator pos:start="383:63" pos:end="383:63">)</operator></expr> ?</condition><then pos:start="383:67" pos:end="383:67"> <expr pos:start="383:67" pos:end="383:67"><literal type="number" pos:start="383:67" pos:end="383:67">1</literal></expr></then><else pos:start="383:68" pos:end="383:69">:<expr pos:start="383:69" pos:end="383:69"><literal type="number" pos:start="383:69" pos:end="383:69">0</literal></expr></else></ternary></expr>;</expr_stmt>

	<expr_stmt pos:start="385:9" pos:end="385:68"><expr pos:start="385:9" pos:end="385:67"><name pos:start="385:9" pos:end="385:26"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:26">unrestricted_mv</name></name><operator pos:start="385:27" pos:end="385:27">=</operator> <name pos:start="385:29" pos:end="385:35"><name pos:start="385:29" pos:end="385:29">s</name><operator pos:start="385:30" pos:end="385:31">-&gt;</operator><name pos:start="385:32" pos:end="385:35">obmc</name></name> <operator pos:start="385:37" pos:end="385:38">||</operator> <name pos:start="385:40" pos:end="385:53"><name pos:start="385:40" pos:end="385:40">s</name><operator pos:start="385:41" pos:end="385:42">-&gt;</operator><name pos:start="385:43" pos:end="385:53">loop_filter</name></name> <operator pos:start="385:55" pos:end="385:56">||</operator> <name pos:start="385:58" pos:end="385:67"><name pos:start="385:58" pos:end="385:58">s</name><operator pos:start="385:59" pos:end="385:60">-&gt;</operator><name pos:start="385:61" pos:end="385:67">umvplus</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:83"><expr pos:start="387:9" pos:end="387:82"><name pos:start="387:9" pos:end="387:32"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:32">h263_slice_structured</name></name><operator pos:start="387:33" pos:end="387:33">=</operator> <ternary pos:start="387:35" pos:end="387:82"><condition pos:start="387:35" pos:end="387:78"><expr pos:start="387:35" pos:end="387:76"><operator pos:start="387:35" pos:end="387:35">(</operator><name pos:start="387:36" pos:end="387:43"><name pos:start="387:36" pos:end="387:36">s</name><operator pos:start="387:37" pos:end="387:38">-&gt;</operator><name pos:start="387:39" pos:end="387:43">flags</name></name> <operator pos:start="387:45" pos:end="387:45">&amp;</operator> <name pos:start="387:47" pos:end="387:75">CODEC_FLAG_H263P_SLICE_STRUCT</name><operator pos:start="387:76" pos:end="387:76">)</operator></expr> ?</condition><then pos:start="387:80" pos:end="387:80"> <expr pos:start="387:80" pos:end="387:80"><literal type="number" pos:start="387:80" pos:end="387:80">1</literal></expr></then><else pos:start="387:81" pos:end="387:82">:<expr pos:start="387:82" pos:end="387:82"><literal type="number" pos:start="387:82" pos:end="387:82">0</literal></expr></else></ternary></expr>;</expr_stmt>



	<comment type="block" pos:start="391:9" pos:end="391:17">/* /Fx */</comment>

        <comment type="block" pos:start="393:9" pos:end="393:39">/* These are just to be sure */</comment>

        <expr_stmt pos:start="395:9" pos:end="395:23"><expr pos:start="395:9" pos:end="395:22"><name pos:start="395:9" pos:end="395:20"><name pos:start="395:9" pos:end="395:13">avctx</name><operator pos:start="395:14" pos:end="395:15">-&gt;</operator><name pos:start="395:16" pos:end="395:20">delay</name></name><operator pos:start="395:21" pos:end="395:21">=</operator><literal type="number" pos:start="395:22" pos:end="395:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:23"><expr pos:start="397:9" pos:end="397:22"><name pos:start="397:9" pos:end="397:20"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:20">low_delay</name></name><operator pos:start="397:21" pos:end="397:21">=</operator><literal type="number" pos:start="397:22" pos:end="397:22">1</literal></expr>;</expr_stmt>

        <break pos:start="399:9" pos:end="399:14">break;</break>

    <case pos:start="401:5" pos:end="401:23">case <expr pos:start="401:10" pos:end="401:22"><name pos:start="401:10" pos:end="401:22">CODEC_ID_FLV1</name></expr>:</case>

        <expr_stmt pos:start="403:9" pos:end="403:33"><expr pos:start="403:9" pos:end="403:32"><name pos:start="403:9" pos:end="403:21"><name pos:start="403:9" pos:end="403:9">s</name><operator pos:start="403:10" pos:end="403:11">-&gt;</operator><name pos:start="403:12" pos:end="403:21">out_format</name></name> <operator pos:start="403:23" pos:end="403:23">=</operator> <name pos:start="403:25" pos:end="403:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="405:9" pos:end="405:24"><expr pos:start="405:9" pos:end="405:23"><name pos:start="405:9" pos:end="405:19"><name pos:start="405:9" pos:end="405:9">s</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:19">h263_flv</name></name> <operator pos:start="405:21" pos:end="405:21">=</operator> <literal type="number" pos:start="405:23" pos:end="405:23">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="405:26" pos:end="405:55">/* format = 1; 11-bit codes */</comment>

        <expr_stmt pos:start="407:9" pos:end="407:31"><expr pos:start="407:9" pos:end="407:30"><name pos:start="407:9" pos:end="407:26"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:26">unrestricted_mv</name></name> <operator pos:start="407:28" pos:end="407:28">=</operator> <literal type="number" pos:start="407:30" pos:end="407:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:22"><expr pos:start="409:9" pos:end="409:21"><name pos:start="409:9" pos:end="409:19"><name pos:start="409:9" pos:end="409:9">s</name><operator pos:start="409:10" pos:end="409:11">-&gt;</operator><name pos:start="409:12" pos:end="409:19">rtp_mode</name></name><operator pos:start="409:20" pos:end="409:20">=</operator><literal type="number" pos:start="409:21" pos:end="409:21">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="409:24" pos:end="409:44">/* don't allow GOB */</comment>

        <expr_stmt pos:start="411:9" pos:end="411:23"><expr pos:start="411:9" pos:end="411:22"><name pos:start="411:9" pos:end="411:20"><name pos:start="411:9" pos:end="411:13">avctx</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:20">delay</name></name><operator pos:start="411:21" pos:end="411:21">=</operator><literal type="number" pos:start="411:22" pos:end="411:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:23"><expr pos:start="413:9" pos:end="413:22"><name pos:start="413:9" pos:end="413:20"><name pos:start="413:9" pos:end="413:9">s</name><operator pos:start="413:10" pos:end="413:11">-&gt;</operator><name pos:start="413:12" pos:end="413:20">low_delay</name></name><operator pos:start="413:21" pos:end="413:21">=</operator><literal type="number" pos:start="413:22" pos:end="413:22">1</literal></expr>;</expr_stmt>

        <break pos:start="415:9" pos:end="415:14">break;</break>

    <case pos:start="417:5" pos:end="417:23">case <expr pos:start="417:10" pos:end="417:22"><name pos:start="417:10" pos:end="417:22">CODEC_ID_RV10</name></expr>:</case>

        <expr_stmt pos:start="419:9" pos:end="419:33"><expr pos:start="419:9" pos:end="419:32"><name pos:start="419:9" pos:end="419:21"><name pos:start="419:9" pos:end="419:9">s</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:21">out_format</name></name> <operator pos:start="419:23" pos:end="419:23">=</operator> <name pos:start="419:25" pos:end="419:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="421:9" pos:end="421:23"><expr pos:start="421:9" pos:end="421:22"><name pos:start="421:9" pos:end="421:20"><name pos:start="421:9" pos:end="421:13">avctx</name><operator pos:start="421:14" pos:end="421:15">-&gt;</operator><name pos:start="421:16" pos:end="421:20">delay</name></name><operator pos:start="421:21" pos:end="421:21">=</operator><literal type="number" pos:start="421:22" pos:end="421:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="423:9" pos:end="423:23"><expr pos:start="423:9" pos:end="423:22"><name pos:start="423:9" pos:end="423:20"><name pos:start="423:9" pos:end="423:9">s</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:20">low_delay</name></name><operator pos:start="423:21" pos:end="423:21">=</operator><literal type="number" pos:start="423:22" pos:end="423:22">1</literal></expr>;</expr_stmt>

        <break pos:start="425:9" pos:end="425:14">break;</break>

    <case pos:start="427:5" pos:end="427:24">case <expr pos:start="427:10" pos:end="427:23"><name pos:start="427:10" pos:end="427:23">CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="429:9" pos:end="429:33"><expr pos:start="429:9" pos:end="429:32"><name pos:start="429:9" pos:end="429:21"><name pos:start="429:9" pos:end="429:9">s</name><operator pos:start="429:10" pos:end="429:11">-&gt;</operator><name pos:start="429:12" pos:end="429:21">out_format</name></name> <operator pos:start="429:23" pos:end="429:23">=</operator> <name pos:start="429:25" pos:end="429:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="431:25"><expr pos:start="431:9" pos:end="431:24"><name pos:start="431:9" pos:end="431:20"><name pos:start="431:9" pos:end="431:9">s</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:20">h263_pred</name></name> <operator pos:start="431:22" pos:end="431:22">=</operator> <literal type="number" pos:start="431:24" pos:end="431:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:31"><expr pos:start="433:9" pos:end="433:30"><name pos:start="433:9" pos:end="433:26"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:26">unrestricted_mv</name></name> <operator pos:start="433:28" pos:end="433:28">=</operator> <literal type="number" pos:start="433:30" pos:end="433:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="435:9" pos:end="435:46"><expr pos:start="435:9" pos:end="435:45"><name pos:start="435:9" pos:end="435:20"><name pos:start="435:9" pos:end="435:9">s</name><operator pos:start="435:10" pos:end="435:11">-&gt;</operator><name pos:start="435:12" pos:end="435:20">low_delay</name></name><operator pos:start="435:21" pos:end="435:21">=</operator> <ternary pos:start="435:23" pos:end="435:45"><condition pos:start="435:23" pos:end="435:39"><expr pos:start="435:23" pos:end="435:37"><name pos:start="435:23" pos:end="435:37"><name pos:start="435:23" pos:end="435:23">s</name><operator pos:start="435:24" pos:end="435:25">-&gt;</operator><name pos:start="435:26" pos:end="435:37">max_b_frames</name></name></expr> ?</condition><then pos:start="435:41" pos:end="435:41"> <expr pos:start="435:41" pos:end="435:41"><literal type="number" pos:start="435:41" pos:end="435:41">0</literal></expr> </then><else pos:start="435:43" pos:end="435:45">: <expr pos:start="435:45" pos:end="435:45"><literal type="number" pos:start="435:45" pos:end="435:45">1</literal></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:63"><expr pos:start="437:9" pos:end="437:62"><name pos:start="437:9" pos:end="437:20"><name pos:start="437:9" pos:end="437:13">avctx</name><operator pos:start="437:14" pos:end="437:15">-&gt;</operator><name pos:start="437:16" pos:end="437:20">delay</name></name><operator pos:start="437:21" pos:end="437:21">=</operator> <ternary pos:start="437:23" pos:end="437:62"><condition pos:start="437:23" pos:end="437:36"><expr pos:start="437:23" pos:end="437:34"><name pos:start="437:23" pos:end="437:34"><name pos:start="437:23" pos:end="437:23">s</name><operator pos:start="437:24" pos:end="437:25">-&gt;</operator><name pos:start="437:26" pos:end="437:34">low_delay</name></name></expr> ?</condition><then pos:start="437:38" pos:end="437:38"> <expr pos:start="437:38" pos:end="437:38"><literal type="number" pos:start="437:38" pos:end="437:38">0</literal></expr> </then><else pos:start="437:40" pos:end="437:62">: <expr pos:start="437:42" pos:end="437:62"><operator pos:start="437:42" pos:end="437:42">(</operator><name pos:start="437:43" pos:end="437:57"><name pos:start="437:43" pos:end="437:43">s</name><operator pos:start="437:44" pos:end="437:45">-&gt;</operator><name pos:start="437:46" pos:end="437:57">max_b_frames</name></name> <operator pos:start="437:59" pos:end="437:59">+</operator> <literal type="number" pos:start="437:61" pos:end="437:61">1</literal><operator pos:start="437:62" pos:end="437:62">)</operator></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="439:9" pos:end="439:14">break;</break>

    <case pos:start="441:5" pos:end="441:28">case <expr pos:start="441:10" pos:end="441:27"><name pos:start="441:10" pos:end="441:27">CODEC_ID_MSMPEG4V1</name></expr>:</case>

        <expr_stmt pos:start="443:9" pos:end="443:33"><expr pos:start="443:9" pos:end="443:32"><name pos:start="443:9" pos:end="443:21"><name pos:start="443:9" pos:end="443:9">s</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:21">out_format</name></name> <operator pos:start="443:23" pos:end="443:23">=</operator> <name pos:start="443:25" pos:end="443:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="445:9" pos:end="445:28"><expr pos:start="445:9" pos:end="445:27"><name pos:start="445:9" pos:end="445:23"><name pos:start="445:9" pos:end="445:9">s</name><operator pos:start="445:10" pos:end="445:11">-&gt;</operator><name pos:start="445:12" pos:end="445:23">h263_msmpeg4</name></name> <operator pos:start="445:25" pos:end="445:25">=</operator> <literal type="number" pos:start="445:27" pos:end="445:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="447:9" pos:end="447:25"><expr pos:start="447:9" pos:end="447:24"><name pos:start="447:9" pos:end="447:20"><name pos:start="447:9" pos:end="447:9">s</name><operator pos:start="447:10" pos:end="447:11">-&gt;</operator><name pos:start="447:12" pos:end="447:20">h263_pred</name></name> <operator pos:start="447:22" pos:end="447:22">=</operator> <literal type="number" pos:start="447:24" pos:end="447:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="449:9" pos:end="449:31"><expr pos:start="449:9" pos:end="449:30"><name pos:start="449:9" pos:end="449:26"><name pos:start="449:9" pos:end="449:9">s</name><operator pos:start="449:10" pos:end="449:11">-&gt;</operator><name pos:start="449:12" pos:end="449:26">unrestricted_mv</name></name> <operator pos:start="449:28" pos:end="449:28">=</operator> <literal type="number" pos:start="449:30" pos:end="449:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="451:9" pos:end="451:30"><expr pos:start="451:9" pos:end="451:29"><name pos:start="451:9" pos:end="451:26"><name pos:start="451:9" pos:end="451:9">s</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:26">msmpeg4_version</name></name><operator pos:start="451:27" pos:end="451:27">=</operator> <literal type="number" pos:start="451:29" pos:end="451:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:23"><expr pos:start="453:9" pos:end="453:22"><name pos:start="453:9" pos:end="453:20"><name pos:start="453:9" pos:end="453:13">avctx</name><operator pos:start="453:14" pos:end="453:15">-&gt;</operator><name pos:start="453:16" pos:end="453:20">delay</name></name><operator pos:start="453:21" pos:end="453:21">=</operator><literal type="number" pos:start="453:22" pos:end="453:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:23"><expr pos:start="455:9" pos:end="455:22"><name pos:start="455:9" pos:end="455:20"><name pos:start="455:9" pos:end="455:9">s</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:20">low_delay</name></name><operator pos:start="455:21" pos:end="455:21">=</operator><literal type="number" pos:start="455:22" pos:end="455:22">1</literal></expr>;</expr_stmt>

        <break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:28">case <expr pos:start="459:10" pos:end="459:27"><name pos:start="459:10" pos:end="459:27">CODEC_ID_MSMPEG4V2</name></expr>:</case>

        <expr_stmt pos:start="461:9" pos:end="461:33"><expr pos:start="461:9" pos:end="461:32"><name pos:start="461:9" pos:end="461:21"><name pos:start="461:9" pos:end="461:9">s</name><operator pos:start="461:10" pos:end="461:11">-&gt;</operator><name pos:start="461:12" pos:end="461:21">out_format</name></name> <operator pos:start="461:23" pos:end="461:23">=</operator> <name pos:start="461:25" pos:end="461:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:28"><expr pos:start="463:9" pos:end="463:27"><name pos:start="463:9" pos:end="463:23"><name pos:start="463:9" pos:end="463:9">s</name><operator pos:start="463:10" pos:end="463:11">-&gt;</operator><name pos:start="463:12" pos:end="463:23">h263_msmpeg4</name></name> <operator pos:start="463:25" pos:end="463:25">=</operator> <literal type="number" pos:start="463:27" pos:end="463:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:25"><expr pos:start="465:9" pos:end="465:24"><name pos:start="465:9" pos:end="465:20"><name pos:start="465:9" pos:end="465:9">s</name><operator pos:start="465:10" pos:end="465:11">-&gt;</operator><name pos:start="465:12" pos:end="465:20">h263_pred</name></name> <operator pos:start="465:22" pos:end="465:22">=</operator> <literal type="number" pos:start="465:24" pos:end="465:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:31"><expr pos:start="467:9" pos:end="467:30"><name pos:start="467:9" pos:end="467:26"><name pos:start="467:9" pos:end="467:9">s</name><operator pos:start="467:10" pos:end="467:11">-&gt;</operator><name pos:start="467:12" pos:end="467:26">unrestricted_mv</name></name> <operator pos:start="467:28" pos:end="467:28">=</operator> <literal type="number" pos:start="467:30" pos:end="467:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:30"><expr pos:start="469:9" pos:end="469:29"><name pos:start="469:9" pos:end="469:26"><name pos:start="469:9" pos:end="469:9">s</name><operator pos:start="469:10" pos:end="469:11">-&gt;</operator><name pos:start="469:12" pos:end="469:26">msmpeg4_version</name></name><operator pos:start="469:27" pos:end="469:27">=</operator> <literal type="number" pos:start="469:29" pos:end="469:29">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:23"><expr pos:start="471:9" pos:end="471:22"><name pos:start="471:9" pos:end="471:20"><name pos:start="471:9" pos:end="471:13">avctx</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:20">delay</name></name><operator pos:start="471:21" pos:end="471:21">=</operator><literal type="number" pos:start="471:22" pos:end="471:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:23"><expr pos:start="473:9" pos:end="473:22"><name pos:start="473:9" pos:end="473:20"><name pos:start="473:9" pos:end="473:9">s</name><operator pos:start="473:10" pos:end="473:11">-&gt;</operator><name pos:start="473:12" pos:end="473:20">low_delay</name></name><operator pos:start="473:21" pos:end="473:21">=</operator><literal type="number" pos:start="473:22" pos:end="473:22">1</literal></expr>;</expr_stmt>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    <case pos:start="477:5" pos:end="477:28">case <expr pos:start="477:10" pos:end="477:27"><name pos:start="477:10" pos:end="477:27">CODEC_ID_MSMPEG4V3</name></expr>:</case>

        <expr_stmt pos:start="479:9" pos:end="479:33"><expr pos:start="479:9" pos:end="479:32"><name pos:start="479:9" pos:end="479:21"><name pos:start="479:9" pos:end="479:9">s</name><operator pos:start="479:10" pos:end="479:11">-&gt;</operator><name pos:start="479:12" pos:end="479:21">out_format</name></name> <operator pos:start="479:23" pos:end="479:23">=</operator> <name pos:start="479:25" pos:end="479:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="481:9" pos:end="481:28"><expr pos:start="481:9" pos:end="481:27"><name pos:start="481:9" pos:end="481:23"><name pos:start="481:9" pos:end="481:9">s</name><operator pos:start="481:10" pos:end="481:11">-&gt;</operator><name pos:start="481:12" pos:end="481:23">h263_msmpeg4</name></name> <operator pos:start="481:25" pos:end="481:25">=</operator> <literal type="number" pos:start="481:27" pos:end="481:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="483:9" pos:end="483:25"><expr pos:start="483:9" pos:end="483:24"><name pos:start="483:9" pos:end="483:20"><name pos:start="483:9" pos:end="483:9">s</name><operator pos:start="483:10" pos:end="483:11">-&gt;</operator><name pos:start="483:12" pos:end="483:20">h263_pred</name></name> <operator pos:start="483:22" pos:end="483:22">=</operator> <literal type="number" pos:start="483:24" pos:end="483:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:31"><expr pos:start="485:9" pos:end="485:30"><name pos:start="485:9" pos:end="485:26"><name pos:start="485:9" pos:end="485:9">s</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:26">unrestricted_mv</name></name> <operator pos:start="485:28" pos:end="485:28">=</operator> <literal type="number" pos:start="485:30" pos:end="485:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="487:9" pos:end="487:30"><expr pos:start="487:9" pos:end="487:29"><name pos:start="487:9" pos:end="487:26"><name pos:start="487:9" pos:end="487:9">s</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:26">msmpeg4_version</name></name><operator pos:start="487:27" pos:end="487:27">=</operator> <literal type="number" pos:start="487:29" pos:end="487:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="489:9" pos:end="489:31"><expr pos:start="489:9" pos:end="489:30"><name pos:start="489:9" pos:end="489:28"><name pos:start="489:9" pos:end="489:9">s</name><operator pos:start="489:10" pos:end="489:11">-&gt;</operator><name pos:start="489:12" pos:end="489:28">flipflop_rounding</name></name><operator pos:start="489:29" pos:end="489:29">=</operator><literal type="number" pos:start="489:30" pos:end="489:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:23"><expr pos:start="491:9" pos:end="491:22"><name pos:start="491:9" pos:end="491:20"><name pos:start="491:9" pos:end="491:13">avctx</name><operator pos:start="491:14" pos:end="491:15">-&gt;</operator><name pos:start="491:16" pos:end="491:20">delay</name></name><operator pos:start="491:21" pos:end="491:21">=</operator><literal type="number" pos:start="491:22" pos:end="491:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="493:9" pos:end="493:23"><expr pos:start="493:9" pos:end="493:22"><name pos:start="493:9" pos:end="493:20"><name pos:start="493:9" pos:end="493:9">s</name><operator pos:start="493:10" pos:end="493:11">-&gt;</operator><name pos:start="493:12" pos:end="493:20">low_delay</name></name><operator pos:start="493:21" pos:end="493:21">=</operator><literal type="number" pos:start="493:22" pos:end="493:22">1</literal></expr>;</expr_stmt>

        <break pos:start="495:9" pos:end="495:14">break;</break>

    <case pos:start="497:5" pos:end="497:23">case <expr pos:start="497:10" pos:end="497:22"><name pos:start="497:10" pos:end="497:22">CODEC_ID_WMV1</name></expr>:</case>

        <expr_stmt pos:start="499:9" pos:end="499:33"><expr pos:start="499:9" pos:end="499:32"><name pos:start="499:9" pos:end="499:21"><name pos:start="499:9" pos:end="499:9">s</name><operator pos:start="499:10" pos:end="499:11">-&gt;</operator><name pos:start="499:12" pos:end="499:21">out_format</name></name> <operator pos:start="499:23" pos:end="499:23">=</operator> <name pos:start="499:25" pos:end="499:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="501:9" pos:end="501:28"><expr pos:start="501:9" pos:end="501:27"><name pos:start="501:9" pos:end="501:23"><name pos:start="501:9" pos:end="501:9">s</name><operator pos:start="501:10" pos:end="501:11">-&gt;</operator><name pos:start="501:12" pos:end="501:23">h263_msmpeg4</name></name> <operator pos:start="501:25" pos:end="501:25">=</operator> <literal type="number" pos:start="501:27" pos:end="501:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="503:9" pos:end="503:25"><expr pos:start="503:9" pos:end="503:24"><name pos:start="503:9" pos:end="503:20"><name pos:start="503:9" pos:end="503:9">s</name><operator pos:start="503:10" pos:end="503:11">-&gt;</operator><name pos:start="503:12" pos:end="503:20">h263_pred</name></name> <operator pos:start="503:22" pos:end="503:22">=</operator> <literal type="number" pos:start="503:24" pos:end="503:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="505:9" pos:end="505:31"><expr pos:start="505:9" pos:end="505:30"><name pos:start="505:9" pos:end="505:26"><name pos:start="505:9" pos:end="505:9">s</name><operator pos:start="505:10" pos:end="505:11">-&gt;</operator><name pos:start="505:12" pos:end="505:26">unrestricted_mv</name></name> <operator pos:start="505:28" pos:end="505:28">=</operator> <literal type="number" pos:start="505:30" pos:end="505:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="507:9" pos:end="507:30"><expr pos:start="507:9" pos:end="507:29"><name pos:start="507:9" pos:end="507:26"><name pos:start="507:9" pos:end="507:9">s</name><operator pos:start="507:10" pos:end="507:11">-&gt;</operator><name pos:start="507:12" pos:end="507:26">msmpeg4_version</name></name><operator pos:start="507:27" pos:end="507:27">=</operator> <literal type="number" pos:start="507:29" pos:end="507:29">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="509:9" pos:end="509:31"><expr pos:start="509:9" pos:end="509:30"><name pos:start="509:9" pos:end="509:28"><name pos:start="509:9" pos:end="509:9">s</name><operator pos:start="509:10" pos:end="509:11">-&gt;</operator><name pos:start="509:12" pos:end="509:28">flipflop_rounding</name></name><operator pos:start="509:29" pos:end="509:29">=</operator><literal type="number" pos:start="509:30" pos:end="509:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="511:9" pos:end="511:23"><expr pos:start="511:9" pos:end="511:22"><name pos:start="511:9" pos:end="511:20"><name pos:start="511:9" pos:end="511:13">avctx</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:20">delay</name></name><operator pos:start="511:21" pos:end="511:21">=</operator><literal type="number" pos:start="511:22" pos:end="511:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="513:9" pos:end="513:23"><expr pos:start="513:9" pos:end="513:22"><name pos:start="513:9" pos:end="513:20"><name pos:start="513:9" pos:end="513:9">s</name><operator pos:start="513:10" pos:end="513:11">-&gt;</operator><name pos:start="513:12" pos:end="513:20">low_delay</name></name><operator pos:start="513:21" pos:end="513:21">=</operator><literal type="number" pos:start="513:22" pos:end="513:22">1</literal></expr>;</expr_stmt>

        <break pos:start="515:9" pos:end="515:14">break;</break>

    <case pos:start="517:5" pos:end="517:23">case <expr pos:start="517:10" pos:end="517:22"><name pos:start="517:10" pos:end="517:22">CODEC_ID_WMV2</name></expr>:</case>

        <expr_stmt pos:start="519:9" pos:end="519:33"><expr pos:start="519:9" pos:end="519:32"><name pos:start="519:9" pos:end="519:21"><name pos:start="519:9" pos:end="519:9">s</name><operator pos:start="519:10" pos:end="519:11">-&gt;</operator><name pos:start="519:12" pos:end="519:21">out_format</name></name> <operator pos:start="519:23" pos:end="519:23">=</operator> <name pos:start="519:25" pos:end="519:32">FMT_H263</name></expr>;</expr_stmt>

        <expr_stmt pos:start="521:9" pos:end="521:28"><expr pos:start="521:9" pos:end="521:27"><name pos:start="521:9" pos:end="521:23"><name pos:start="521:9" pos:end="521:9">s</name><operator pos:start="521:10" pos:end="521:11">-&gt;</operator><name pos:start="521:12" pos:end="521:23">h263_msmpeg4</name></name> <operator pos:start="521:25" pos:end="521:25">=</operator> <literal type="number" pos:start="521:27" pos:end="521:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="523:9" pos:end="523:25"><expr pos:start="523:9" pos:end="523:24"><name pos:start="523:9" pos:end="523:20"><name pos:start="523:9" pos:end="523:9">s</name><operator pos:start="523:10" pos:end="523:11">-&gt;</operator><name pos:start="523:12" pos:end="523:20">h263_pred</name></name> <operator pos:start="523:22" pos:end="523:22">=</operator> <literal type="number" pos:start="523:24" pos:end="523:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:31"><expr pos:start="525:9" pos:end="525:30"><name pos:start="525:9" pos:end="525:26"><name pos:start="525:9" pos:end="525:9">s</name><operator pos:start="525:10" pos:end="525:11">-&gt;</operator><name pos:start="525:12" pos:end="525:26">unrestricted_mv</name></name> <operator pos:start="525:28" pos:end="525:28">=</operator> <literal type="number" pos:start="525:30" pos:end="525:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:30"><expr pos:start="527:9" pos:end="527:29"><name pos:start="527:9" pos:end="527:26"><name pos:start="527:9" pos:end="527:9">s</name><operator pos:start="527:10" pos:end="527:11">-&gt;</operator><name pos:start="527:12" pos:end="527:26">msmpeg4_version</name></name><operator pos:start="527:27" pos:end="527:27">=</operator> <literal type="number" pos:start="527:29" pos:end="527:29">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="529:9" pos:end="529:31"><expr pos:start="529:9" pos:end="529:30"><name pos:start="529:9" pos:end="529:28"><name pos:start="529:9" pos:end="529:9">s</name><operator pos:start="529:10" pos:end="529:11">-&gt;</operator><name pos:start="529:12" pos:end="529:28">flipflop_rounding</name></name><operator pos:start="529:29" pos:end="529:29">=</operator><literal type="number" pos:start="529:30" pos:end="529:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="531:9" pos:end="531:23"><expr pos:start="531:9" pos:end="531:22"><name pos:start="531:9" pos:end="531:20"><name pos:start="531:9" pos:end="531:13">avctx</name><operator pos:start="531:14" pos:end="531:15">-&gt;</operator><name pos:start="531:16" pos:end="531:20">delay</name></name><operator pos:start="531:21" pos:end="531:21">=</operator><literal type="number" pos:start="531:22" pos:end="531:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:23"><expr pos:start="533:9" pos:end="533:22"><name pos:start="533:9" pos:end="533:20"><name pos:start="533:9" pos:end="533:9">s</name><operator pos:start="533:10" pos:end="533:11">-&gt;</operator><name pos:start="533:12" pos:end="533:20">low_delay</name></name><operator pos:start="533:21" pos:end="533:21">=</operator><literal type="number" pos:start="533:22" pos:end="533:22">1</literal></expr>;</expr_stmt>

        <break pos:start="535:9" pos:end="538:0">break;</break>

<cpp:endif pos:start="537:1" pos:end="537:6">#<cpp:directive pos:start="537:2" pos:end="537:6">endif</cpp:directive></cpp:endif>

    <default pos:start="539:5" pos:end="539:12">default:</default>

        <return pos:start="541:9" pos:end="541:18">return <expr pos:start="541:16" pos:end="541:17"><operator pos:start="541:16" pos:end="541:16">-</operator><literal type="number" pos:start="541:17" pos:end="541:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <block pos:start="547:5" pos:end="575:5">{<block_content pos:start="549:9" pos:end="573:9"> <comment type="block" pos:start="547:7" pos:end="547:76">/* set up some save defaults, some codecs might override them later */</comment>

        <decl_stmt pos:start="549:9" pos:end="549:26"><decl pos:start="549:9" pos:end="549:25"><type pos:start="549:9" pos:end="549:18"><specifier pos:start="549:9" pos:end="549:14">static</specifier> <name pos:start="549:16" pos:end="549:18">int</name></type> <name pos:start="549:20" pos:end="549:23">done</name><init pos:start="549:24" pos:end="549:25">=<expr pos:start="549:25" pos:end="549:25"><literal type="number" pos:start="549:25" pos:end="549:25">0</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="551:9" pos:end="573:9"><if pos:start="551:9" pos:end="573:9">if<condition pos:start="551:11" pos:end="551:17">(<expr pos:start="551:12" pos:end="551:16"><operator pos:start="551:12" pos:end="551:12">!</operator><name pos:start="551:13" pos:end="551:16">done</name></expr>)</condition><block pos:start="551:18" pos:end="573:9">{<block_content pos:start="553:13" pos:end="571:13">

            <decl_stmt pos:start="553:13" pos:end="553:18"><decl pos:start="553:13" pos:end="553:17"><type pos:start="553:13" pos:end="553:15"><name pos:start="553:13" pos:end="553:15">int</name></type> <name pos:start="553:17" pos:end="553:17">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="555:13" pos:end="555:19"><expr pos:start="555:13" pos:end="555:18"><name pos:start="555:13" pos:end="555:16">done</name><operator pos:start="555:17" pos:end="555:17">=</operator><literal type="number" pos:start="555:18" pos:end="555:18">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="559:13" pos:end="559:89"><expr pos:start="559:13" pos:end="559:88"><name pos:start="559:13" pos:end="559:30">default_mv_penalty</name><operator pos:start="559:31" pos:end="559:31">=</operator> <call pos:start="559:33" pos:end="559:88"><name pos:start="559:33" pos:end="559:42">av_mallocz</name><argument_list pos:start="559:43" pos:end="559:88">( <argument pos:start="559:45" pos:end="559:86"><expr pos:start="559:45" pos:end="559:86"><sizeof pos:start="559:45" pos:end="559:59">sizeof<argument_list pos:start="559:51" pos:end="559:59">(<argument pos:start="559:52" pos:end="559:58"><expr pos:start="559:52" pos:end="559:58"><name pos:start="559:52" pos:end="559:58">uint8_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="559:60" pos:end="559:60">*</operator><operator pos:start="559:61" pos:end="559:61">(</operator><name pos:start="559:62" pos:end="559:70">MAX_FCODE</name><operator pos:start="559:71" pos:end="559:71">+</operator><literal type="number" pos:start="559:72" pos:end="559:72">1</literal><operator pos:start="559:73" pos:end="559:73">)</operator><operator pos:start="559:74" pos:end="559:74">*</operator><operator pos:start="559:75" pos:end="559:75">(</operator><literal type="number" pos:start="559:76" pos:end="559:76">2</literal><operator pos:start="559:77" pos:end="559:77">*</operator><name pos:start="559:78" pos:end="559:83">MAX_MV</name><operator pos:start="559:84" pos:end="559:84">+</operator><literal type="number" pos:start="559:85" pos:end="559:85">1</literal><operator pos:start="559:86" pos:end="559:86">)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:86"><expr pos:start="561:13" pos:end="561:85"><call pos:start="561:13" pos:end="561:85"><name pos:start="561:13" pos:end="561:18">memset</name><argument_list pos:start="561:19" pos:end="561:85">(<argument pos:start="561:20" pos:end="561:37"><expr pos:start="561:20" pos:end="561:37"><name pos:start="561:20" pos:end="561:37">default_mv_penalty</name></expr></argument>, <argument pos:start="561:40" pos:end="561:40"><expr pos:start="561:40" pos:end="561:40"><literal type="number" pos:start="561:40" pos:end="561:40">0</literal></expr></argument>, <argument pos:start="561:43" pos:end="561:84"><expr pos:start="561:43" pos:end="561:84"><sizeof pos:start="561:43" pos:end="561:57">sizeof<argument_list pos:start="561:49" pos:end="561:57">(<argument pos:start="561:50" pos:end="561:56"><expr pos:start="561:50" pos:end="561:56"><name pos:start="561:50" pos:end="561:56">uint8_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="561:58" pos:end="561:58">*</operator><operator pos:start="561:59" pos:end="561:59">(</operator><name pos:start="561:60" pos:end="561:68">MAX_FCODE</name><operator pos:start="561:69" pos:end="561:69">+</operator><literal type="number" pos:start="561:70" pos:end="561:70">1</literal><operator pos:start="561:71" pos:end="561:71">)</operator><operator pos:start="561:72" pos:end="561:72">*</operator><operator pos:start="561:73" pos:end="561:73">(</operator><literal type="number" pos:start="561:74" pos:end="561:74">2</literal><operator pos:start="561:75" pos:end="561:75">*</operator><name pos:start="561:76" pos:end="561:81">MAX_MV</name><operator pos:start="561:82" pos:end="561:82">+</operator><literal type="number" pos:start="561:83" pos:end="561:83">1</literal><operator pos:start="561:84" pos:end="561:84">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="563:13" pos:end="563:72"><expr pos:start="563:13" pos:end="563:71"><call pos:start="563:13" pos:end="563:71"><name pos:start="563:13" pos:end="563:18">memset</name><argument_list pos:start="563:19" pos:end="563:71">(<argument pos:start="563:20" pos:end="563:36"><expr pos:start="563:20" pos:end="563:36"><name pos:start="563:20" pos:end="563:36">default_fcode_tab</name></expr></argument> , <argument pos:start="563:40" pos:end="563:40"><expr pos:start="563:40" pos:end="563:40"><literal type="number" pos:start="563:40" pos:end="563:40">0</literal></expr></argument>, <argument pos:start="563:43" pos:end="563:70"><expr pos:start="563:43" pos:end="563:70"><sizeof pos:start="563:43" pos:end="563:57">sizeof<argument_list pos:start="563:49" pos:end="563:57">(<argument pos:start="563:50" pos:end="563:56"><expr pos:start="563:50" pos:end="563:56"><name pos:start="563:50" pos:end="563:56">uint8_t</name></expr></argument>)</argument_list></sizeof><operator pos:start="563:58" pos:end="563:58">*</operator><operator pos:start="563:59" pos:end="563:59">(</operator><literal type="number" pos:start="563:60" pos:end="563:60">2</literal><operator pos:start="563:61" pos:end="563:61">*</operator><name pos:start="563:62" pos:end="563:67">MAX_MV</name><operator pos:start="563:68" pos:end="563:68">+</operator><literal type="number" pos:start="563:69" pos:end="563:69">1</literal><operator pos:start="563:70" pos:end="563:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="567:13" pos:end="571:13">for<control pos:start="567:16" pos:end="567:33">(<init pos:start="567:17" pos:end="567:22"><expr pos:start="567:17" pos:end="567:21"><name pos:start="567:17" pos:end="567:17">i</name><operator pos:start="567:18" pos:end="567:18">=</operator><operator pos:start="567:19" pos:end="567:19">-</operator><literal type="number" pos:start="567:20" pos:end="567:21">16</literal></expr>;</init> <condition pos:start="567:24" pos:end="567:28"><expr pos:start="567:24" pos:end="567:27"><name pos:start="567:24" pos:end="567:24">i</name><operator pos:start="567:25" pos:end="567:25">&lt;</operator><literal type="number" pos:start="567:26" pos:end="567:27">16</literal></expr>;</condition> <incr pos:start="567:30" pos:end="567:32"><expr pos:start="567:30" pos:end="567:32"><name pos:start="567:30" pos:end="567:30">i</name><operator pos:start="567:31" pos:end="567:32">++</operator></expr></incr>)</control><block pos:start="567:34" pos:end="571:13">{<block_content pos:start="569:17" pos:end="569:49">

                <expr_stmt pos:start="569:17" pos:end="569:49"><expr pos:start="569:17" pos:end="569:48"><name pos:start="569:17" pos:end="569:45"><name pos:start="569:17" pos:end="569:33">default_fcode_tab</name><index pos:start="569:34" pos:end="569:45">[<expr pos:start="569:35" pos:end="569:44"><name pos:start="569:35" pos:end="569:35">i</name> <operator pos:start="569:37" pos:end="569:37">+</operator> <name pos:start="569:39" pos:end="569:44">MAX_MV</name></expr>]</index></name><operator pos:start="569:46" pos:end="569:46">=</operator> <literal type="number" pos:start="569:48" pos:end="569:48">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="577:5" pos:end="577:41"><expr pos:start="577:5" pos:end="577:40"><name pos:start="577:5" pos:end="577:20"><name pos:start="577:5" pos:end="577:5">s</name><operator pos:start="577:6" pos:end="577:7">-&gt;</operator><name pos:start="577:8" pos:end="577:9">me</name><operator pos:start="577:10" pos:end="577:10">.</operator><name pos:start="577:11" pos:end="577:20">mv_penalty</name></name><operator pos:start="577:21" pos:end="577:21">=</operator> <name pos:start="577:23" pos:end="577:40">default_mv_penalty</name></expr>;</expr_stmt>

    <expr_stmt pos:start="579:5" pos:end="579:36"><expr pos:start="579:5" pos:end="579:35"><name pos:start="579:5" pos:end="579:16"><name pos:start="579:5" pos:end="579:5">s</name><operator pos:start="579:6" pos:end="579:7">-&gt;</operator><name pos:start="579:8" pos:end="579:16">fcode_tab</name></name><operator pos:start="579:17" pos:end="579:17">=</operator> <name pos:start="579:19" pos:end="579:35">default_fcode_tab</name></expr>;</expr_stmt>

 

    <comment type="block" pos:start="583:5" pos:end="583:71">/* dont use mv_penalty table for crap MV as it would be confused */</comment>

    <comment type="line" pos:start="585:5" pos:end="585:49">//FIXME remove after fixing / removing old ME</comment>

    <if_stmt pos:start="587:5" pos:end="587:70"><if pos:start="587:5" pos:end="587:70">if <condition pos:start="587:8" pos:end="587:31">(<expr pos:start="587:9" pos:end="587:30"><name pos:start="587:9" pos:end="587:20"><name pos:start="587:9" pos:end="587:9">s</name><operator pos:start="587:10" pos:end="587:11">-&gt;</operator><name pos:start="587:12" pos:end="587:20">me_method</name></name> <operator pos:start="587:22" pos:end="587:22">&lt;</operator> <name pos:start="587:24" pos:end="587:30">ME_EPZS</name></expr>)</condition><block type="pseudo" pos:start="587:33" pos:end="587:70"><block_content pos:start="587:33" pos:end="587:70"> <expr_stmt pos:start="587:33" pos:end="587:70"><expr pos:start="587:33" pos:end="587:69"><name pos:start="587:33" pos:end="587:48"><name pos:start="587:33" pos:end="587:33">s</name><operator pos:start="587:34" pos:end="587:35">-&gt;</operator><name pos:start="587:36" pos:end="587:37">me</name><operator pos:start="587:38" pos:end="587:38">.</operator><name pos:start="587:39" pos:end="587:48">mv_penalty</name></name> <operator pos:start="587:50" pos:end="587:50">=</operator> <name pos:start="587:52" pos:end="587:69">default_mv_penalty</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="591:5" pos:end="591:20"><expr pos:start="591:5" pos:end="591:19"><name pos:start="591:5" pos:end="591:15"><name pos:start="591:5" pos:end="591:5">s</name><operator pos:start="591:6" pos:end="591:7">-&gt;</operator><name pos:start="591:8" pos:end="591:15">encoding</name></name> <operator pos:start="591:17" pos:end="591:17">=</operator> <literal type="number" pos:start="591:19" pos:end="591:19">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="595:5" pos:end="595:14">/* init */</comment>

    <if_stmt pos:start="597:5" pos:end="599:18"><if pos:start="597:5" pos:end="599:18">if <condition pos:start="597:8" pos:end="597:31">(<expr pos:start="597:9" pos:end="597:30"><call pos:start="597:9" pos:end="597:26"><name pos:start="597:9" pos:end="597:23">MPV_common_init</name><argument_list pos:start="597:24" pos:end="597:26">(<argument pos:start="597:25" pos:end="597:25"><expr pos:start="597:25" pos:end="597:25"><name pos:start="597:25" pos:end="597:25">s</name></expr></argument>)</argument_list></call> <operator pos:start="597:28" pos:end="597:28">&lt;</operator> <literal type="number" pos:start="597:30" pos:end="597:30">0</literal></expr>)</condition><block type="pseudo" pos:start="599:9" pos:end="599:18"><block_content pos:start="599:9" pos:end="599:18">

        <return pos:start="599:9" pos:end="599:18">return <expr pos:start="599:16" pos:end="599:17"><operator pos:start="599:16" pos:end="599:16">-</operator><literal type="number" pos:start="599:17" pos:end="599:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="603:5" pos:end="605:60"><if pos:start="603:5" pos:end="605:60">if<condition pos:start="603:7" pos:end="603:25">(<expr pos:start="603:8" pos:end="603:24"><name pos:start="603:8" pos:end="603:24"><name pos:start="603:8" pos:end="603:8">s</name><operator pos:start="603:9" pos:end="603:10">-&gt;</operator><name pos:start="603:11" pos:end="603:24">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="605:9" pos:end="605:60"><block_content pos:start="605:9" pos:end="605:60">

        <expr_stmt pos:start="605:9" pos:end="605:60"><expr pos:start="605:9" pos:end="605:59"><name pos:start="605:9" pos:end="605:30"><name pos:start="605:9" pos:end="605:9">s</name><operator pos:start="605:10" pos:end="605:11">-&gt;</operator><name pos:start="605:12" pos:end="605:30">chroma_qscale_table</name></name><operator pos:start="605:31" pos:end="605:31">=</operator> <name pos:start="605:33" pos:end="605:59">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="607:5" pos:end="609:100"><expr pos:start="607:5" pos:end="609:99"><name pos:start="607:5" pos:end="607:24"><name pos:start="607:5" pos:end="607:5">s</name><operator pos:start="607:6" pos:end="607:7">-&gt;</operator><name pos:start="607:8" pos:end="607:24">progressive_frame</name></name><operator pos:start="607:25" pos:end="607:25">=</operator> 

    <name pos:start="609:5" pos:end="609:27"><name pos:start="609:5" pos:end="609:5">s</name><operator pos:start="609:6" pos:end="609:7">-&gt;</operator><name pos:start="609:8" pos:end="609:27">progressive_sequence</name></name><operator pos:start="609:28" pos:end="609:28">=</operator> <operator pos:start="609:30" pos:end="609:30">!</operator><operator pos:start="609:31" pos:end="609:31">(</operator><name pos:start="609:32" pos:end="609:43"><name pos:start="609:32" pos:end="609:36">avctx</name><operator pos:start="609:37" pos:end="609:38">-&gt;</operator><name pos:start="609:39" pos:end="609:43">flags</name></name> <operator pos:start="609:45" pos:end="609:45">&amp;</operator> <operator pos:start="609:47" pos:end="609:47">(</operator><name pos:start="609:48" pos:end="609:72">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="609:73" pos:end="609:73">|</operator><name pos:start="609:74" pos:end="609:97">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="609:98" pos:end="609:98">)</operator><operator pos:start="609:99" pos:end="609:99">)</operator></expr>;</expr_stmt>

    

    <expr_stmt pos:start="613:5" pos:end="613:63"><expr pos:start="613:5" pos:end="613:62"><call pos:start="613:5" pos:end="613:62"><name pos:start="613:5" pos:end="613:14">ff_set_cmp</name><argument_list pos:start="613:15" pos:end="613:62">(<argument pos:start="613:16" pos:end="613:22"><expr pos:start="613:16" pos:end="613:22"><operator pos:start="613:16" pos:end="613:16">&amp;</operator><name pos:start="613:17" pos:end="613:22"><name pos:start="613:17" pos:end="613:17">s</name><operator pos:start="613:18" pos:end="613:19">-&gt;</operator><name pos:start="613:20" pos:end="613:22">dsp</name></name></expr></argument>, <argument pos:start="613:25" pos:end="613:40"><expr pos:start="613:25" pos:end="613:40"><name pos:start="613:25" pos:end="613:40"><name pos:start="613:25" pos:end="613:25">s</name><operator pos:start="613:26" pos:end="613:27">-&gt;</operator><name pos:start="613:28" pos:end="613:30">dsp</name><operator pos:start="613:31" pos:end="613:31">.</operator><name pos:start="613:32" pos:end="613:40">ildct_cmp</name></name></expr></argument>, <argument pos:start="613:43" pos:end="613:61"><expr pos:start="613:43" pos:end="613:61"><name pos:start="613:43" pos:end="613:61"><name pos:start="613:43" pos:end="613:43">s</name><operator pos:start="613:44" pos:end="613:45">-&gt;</operator><name pos:start="613:46" pos:end="613:50">avctx</name><operator pos:start="613:51" pos:end="613:52">-&gt;</operator><name pos:start="613:53" pos:end="613:61">ildct_cmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="617:5" pos:end="624:0"><expr pos:start="617:5" pos:end="617:17"><call pos:start="617:5" pos:end="617:17"><name pos:start="617:5" pos:end="617:14">ff_init_me</name><argument_list pos:start="617:15" pos:end="617:17">(<argument pos:start="617:16" pos:end="617:16"><expr pos:start="617:16" pos:end="617:16"><name pos:start="617:16" pos:end="617:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="621:1" pos:end="621:22">#<cpp:directive pos:start="621:2" pos:end="621:6">ifdef</cpp:directive> <name pos:start="621:8" pos:end="621:22">CONFIG_ENCODERS</name></cpp:ifdef>

<cpp:ifdef pos:start="623:1" pos:end="623:19">#<cpp:directive pos:start="623:2" pos:end="623:6">ifdef</cpp:directive> <name pos:start="623:8" pos:end="623:19">CONFIG_RISKY</name></cpp:ifdef>

    <if_stmt pos:start="625:5" pos:end="627:28"><if pos:start="625:5" pos:end="627:28">if <condition pos:start="625:8" pos:end="625:34">(<expr pos:start="625:9" pos:end="625:33"><name pos:start="625:9" pos:end="625:21"><name pos:start="625:9" pos:end="625:9">s</name><operator pos:start="625:10" pos:end="625:11">-&gt;</operator><name pos:start="625:12" pos:end="625:21">out_format</name></name> <operator pos:start="625:23" pos:end="625:24">==</operator> <name pos:start="625:26" pos:end="625:33">FMT_H263</name></expr>)</condition><block type="pseudo" pos:start="627:9" pos:end="627:28"><block_content pos:start="627:9" pos:end="627:28">

        <expr_stmt pos:start="627:9" pos:end="627:28"><expr pos:start="627:9" pos:end="627:27"><call pos:start="627:9" pos:end="627:27"><name pos:start="627:9" pos:end="627:24">h263_encode_init</name><argument_list pos:start="627:25" pos:end="627:27">(<argument pos:start="627:26" pos:end="627:26"><expr pos:start="627:26" pos:end="627:26"><name pos:start="627:26" pos:end="627:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="629:5" pos:end="634:0"><if pos:start="629:5" pos:end="634:0">if<condition pos:start="629:7" pos:end="629:26">(<expr pos:start="629:8" pos:end="629:25"><name pos:start="629:8" pos:end="629:25"><name pos:start="629:8" pos:end="629:8">s</name><operator pos:start="629:9" pos:end="629:10">-&gt;</operator><name pos:start="629:11" pos:end="629:25">msmpeg4_version</name></name></expr>)</condition><block type="pseudo" pos:start="631:9" pos:end="634:0"><block_content pos:start="631:9" pos:end="634:0">

        <expr_stmt pos:start="631:9" pos:end="634:0"><expr pos:start="631:9" pos:end="631:33"><call pos:start="631:9" pos:end="631:33"><name pos:start="631:9" pos:end="631:30">ff_msmpeg4_encode_init</name><argument_list pos:start="631:31" pos:end="631:33">(<argument pos:start="631:32" pos:end="631:32"><expr pos:start="631:32" pos:end="631:32"><name pos:start="631:32" pos:end="631:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="633:1" pos:end="633:6">#<cpp:directive pos:start="633:2" pos:end="633:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="635:5" pos:end="640:0"><if pos:start="635:5" pos:end="640:0">if <condition pos:start="635:8" pos:end="635:35">(<expr pos:start="635:9" pos:end="635:34"><name pos:start="635:9" pos:end="635:21"><name pos:start="635:9" pos:end="635:9">s</name><operator pos:start="635:10" pos:end="635:11">-&gt;</operator><name pos:start="635:12" pos:end="635:21">out_format</name></name> <operator pos:start="635:23" pos:end="635:24">==</operator> <name pos:start="635:26" pos:end="635:34">FMT_MPEG1</name></expr>)</condition><block type="pseudo" pos:start="637:9" pos:end="640:0"><block_content pos:start="637:9" pos:end="640:0">

        <expr_stmt pos:start="637:9" pos:end="640:0"><expr pos:start="637:9" pos:end="637:31"><call pos:start="637:9" pos:end="637:31"><name pos:start="637:9" pos:end="637:28">ff_mpeg1_encode_init</name><argument_list pos:start="637:29" pos:end="637:31">(<argument pos:start="637:30" pos:end="637:30"><expr pos:start="637:30" pos:end="637:30"><name pos:start="637:30" pos:end="637:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="639:1" pos:end="639:6">#<cpp:directive pos:start="639:2" pos:end="639:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="643:5" pos:end="643:31">/* init default q matrix */</comment>

    <for pos:start="645:5" pos:end="683:5">for<control pos:start="645:8" pos:end="645:21">(<init pos:start="645:9" pos:end="645:12"><expr pos:start="645:9" pos:end="645:11"><name pos:start="645:9" pos:end="645:9">i</name><operator pos:start="645:10" pos:end="645:10">=</operator><literal type="number" pos:start="645:11" pos:end="645:11">0</literal></expr>;</init><condition pos:start="645:13" pos:end="645:17"><expr pos:start="645:13" pos:end="645:16"><name pos:start="645:13" pos:end="645:13">i</name><operator pos:start="645:14" pos:end="645:14">&lt;</operator><literal type="number" pos:start="645:15" pos:end="645:16">64</literal></expr>;</condition><incr pos:start="645:18" pos:end="645:20"><expr pos:start="645:18" pos:end="645:20"><name pos:start="645:18" pos:end="645:18">i</name><operator pos:start="645:19" pos:end="645:20">++</operator></expr></incr>)</control> <block pos:start="645:23" pos:end="683:5">{<block_content pos:start="647:9" pos:end="681:59">

        <decl_stmt pos:start="647:9" pos:end="650:0"><decl pos:start="647:9" pos:end="647:41"><type pos:start="647:9" pos:end="647:11"><name pos:start="647:9" pos:end="647:11">int</name></type> <name pos:start="647:13" pos:end="647:13">j</name><init pos:start="647:14" pos:end="647:41">= <expr pos:start="647:16" pos:end="647:41"><name pos:start="647:16" pos:end="647:41"><name pos:start="647:16" pos:end="647:16">s</name><operator pos:start="647:17" pos:end="647:18">-&gt;</operator><name pos:start="647:19" pos:end="647:21">dsp</name><operator pos:start="647:22" pos:end="647:22">.</operator><name pos:start="647:23" pos:end="647:38">idct_permutation</name><index pos:start="647:39" pos:end="647:41">[<expr pos:start="647:40" pos:end="647:40"><name pos:start="647:40" pos:end="647:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:start="649:1" pos:end="649:19">#<cpp:directive pos:start="649:2" pos:end="649:6">ifdef</cpp:directive> <name pos:start="649:8" pos:end="649:19">CONFIG_RISKY</name></cpp:ifdef>

        <if_stmt pos:start="651:9" pos:end="673:9"><if pos:start="651:9" pos:end="657:9">if<condition pos:start="651:11" pos:end="651:56">(<expr pos:start="651:12" pos:end="651:55"><name pos:start="651:12" pos:end="651:22"><name pos:start="651:12" pos:end="651:12">s</name><operator pos:start="651:13" pos:end="651:14">-&gt;</operator><name pos:start="651:15" pos:end="651:22">codec_id</name></name><operator pos:start="651:23" pos:end="651:24">==</operator><name pos:start="651:25" pos:end="651:38">CODEC_ID_MPEG4</name> <operator pos:start="651:40" pos:end="651:41">&amp;&amp;</operator> <name pos:start="651:43" pos:end="651:55"><name pos:start="651:43" pos:end="651:43">s</name><operator pos:start="651:44" pos:end="651:45">-&gt;</operator><name pos:start="651:46" pos:end="651:55">mpeg_quant</name></name></expr>)</condition><block pos:start="651:57" pos:end="657:9">{<block_content pos:start="653:13" pos:end="655:70">

            <expr_stmt pos:start="653:13" pos:end="653:66"><expr pos:start="653:13" pos:end="653:65"><name pos:start="653:13" pos:end="653:30"><name pos:start="653:13" pos:end="653:13">s</name><operator pos:start="653:14" pos:end="653:15">-&gt;</operator><name pos:start="653:16" pos:end="653:27">intra_matrix</name><index pos:start="653:28" pos:end="653:30">[<expr pos:start="653:29" pos:end="653:29"><name pos:start="653:29" pos:end="653:29">j</name></expr>]</index></name> <operator pos:start="653:32" pos:end="653:32">=</operator> <name pos:start="653:34" pos:end="653:65"><name pos:start="653:34" pos:end="653:62">ff_mpeg4_default_intra_matrix</name><index pos:start="653:63" pos:end="653:65">[<expr pos:start="653:64" pos:end="653:64"><name pos:start="653:64" pos:end="653:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="655:13" pos:end="655:70"><expr pos:start="655:13" pos:end="655:69"><name pos:start="655:13" pos:end="655:30"><name pos:start="655:13" pos:end="655:13">s</name><operator pos:start="655:14" pos:end="655:15">-&gt;</operator><name pos:start="655:16" pos:end="655:27">inter_matrix</name><index pos:start="655:28" pos:end="655:30">[<expr pos:start="655:29" pos:end="655:29"><name pos:start="655:29" pos:end="655:29">j</name></expr>]</index></name> <operator pos:start="655:32" pos:end="655:32">=</operator> <name pos:start="655:34" pos:end="655:69"><name pos:start="655:34" pos:end="655:66">ff_mpeg4_default_non_intra_matrix</name><index pos:start="655:67" pos:end="655:69">[<expr pos:start="655:68" pos:end="655:68"><name pos:start="655:68" pos:end="655:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="657:10" pos:end="663:9">else if<condition pos:start="657:17" pos:end="657:43">(<expr pos:start="657:18" pos:end="657:42"><name pos:start="657:18" pos:end="657:30"><name pos:start="657:18" pos:end="657:18">s</name><operator pos:start="657:19" pos:end="657:20">-&gt;</operator><name pos:start="657:21" pos:end="657:30">out_format</name></name> <operator pos:start="657:32" pos:end="657:33">==</operator> <name pos:start="657:35" pos:end="657:42">FMT_H263</name></expr>)</condition><block pos:start="657:44" pos:end="663:9">{<block_content pos:start="659:13" pos:end="661:70">

            <expr_stmt pos:start="659:13" pos:end="661:70"><expr pos:start="659:13" pos:end="661:69"><name pos:start="659:13" pos:end="659:30"><name pos:start="659:13" pos:end="659:13">s</name><operator pos:start="659:14" pos:end="659:15">-&gt;</operator><name pos:start="659:16" pos:end="659:27">intra_matrix</name><index pos:start="659:28" pos:end="659:30">[<expr pos:start="659:29" pos:end="659:29"><name pos:start="659:29" pos:end="659:29">j</name></expr>]</index></name> <operator pos:start="659:32" pos:end="659:32">=</operator>

            <name pos:start="661:13" pos:end="661:30"><name pos:start="661:13" pos:end="661:13">s</name><operator pos:start="661:14" pos:end="661:15">-&gt;</operator><name pos:start="661:16" pos:end="661:27">inter_matrix</name><index pos:start="661:28" pos:end="661:30">[<expr pos:start="661:29" pos:end="661:29"><name pos:start="661:29" pos:end="661:29">j</name></expr>]</index></name> <operator pos:start="661:32" pos:end="661:32">=</operator> <name pos:start="661:34" pos:end="661:69"><name pos:start="661:34" pos:end="661:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="661:67" pos:end="661:69">[<expr pos:start="661:68" pos:end="661:68"><name pos:start="661:68" pos:end="661:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="663:10" pos:end="673:9">else

<cpp:endif pos:start="665:1" pos:end="665:6">#<cpp:directive pos:start="665:2" pos:end="665:6">endif</cpp:directive></cpp:endif>

        <block pos:start="667:9" pos:end="673:9">{<block_content pos:start="669:13" pos:end="671:70"> <comment type="block" pos:start="667:11" pos:end="667:23">/* mpeg1/2 */</comment>

            <expr_stmt pos:start="669:13" pos:end="669:66"><expr pos:start="669:13" pos:end="669:65"><name pos:start="669:13" pos:end="669:30"><name pos:start="669:13" pos:end="669:13">s</name><operator pos:start="669:14" pos:end="669:15">-&gt;</operator><name pos:start="669:16" pos:end="669:27">intra_matrix</name><index pos:start="669:28" pos:end="669:30">[<expr pos:start="669:29" pos:end="669:29"><name pos:start="669:29" pos:end="669:29">j</name></expr>]</index></name> <operator pos:start="669:32" pos:end="669:32">=</operator> <name pos:start="669:34" pos:end="669:65"><name pos:start="669:34" pos:end="669:62">ff_mpeg1_default_intra_matrix</name><index pos:start="669:63" pos:end="669:65">[<expr pos:start="669:64" pos:end="669:64"><name pos:start="669:64" pos:end="669:64">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:70"><expr pos:start="671:13" pos:end="671:69"><name pos:start="671:13" pos:end="671:30"><name pos:start="671:13" pos:end="671:13">s</name><operator pos:start="671:14" pos:end="671:15">-&gt;</operator><name pos:start="671:16" pos:end="671:27">inter_matrix</name><index pos:start="671:28" pos:end="671:30">[<expr pos:start="671:29" pos:end="671:29"><name pos:start="671:29" pos:end="671:29">j</name></expr>]</index></name> <operator pos:start="671:32" pos:end="671:32">=</operator> <name pos:start="671:34" pos:end="671:69"><name pos:start="671:34" pos:end="671:66">ff_mpeg1_default_non_intra_matrix</name><index pos:start="671:67" pos:end="671:69">[<expr pos:start="671:68" pos:end="671:68"><name pos:start="671:68" pos:end="671:68">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="675:9" pos:end="677:59"><if pos:start="675:9" pos:end="677:59">if<condition pos:start="675:11" pos:end="675:34">(<expr pos:start="675:12" pos:end="675:33"><name pos:start="675:12" pos:end="675:33"><name pos:start="675:12" pos:end="675:12">s</name><operator pos:start="675:13" pos:end="675:14">-&gt;</operator><name pos:start="675:15" pos:end="675:19">avctx</name><operator pos:start="675:20" pos:end="675:21">-&gt;</operator><name pos:start="675:22" pos:end="675:33">intra_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="677:13" pos:end="677:59"><block_content pos:start="677:13" pos:end="677:59">

            <expr_stmt pos:start="677:13" pos:end="677:59"><expr pos:start="677:13" pos:end="677:58"><name pos:start="677:13" pos:end="677:30"><name pos:start="677:13" pos:end="677:13">s</name><operator pos:start="677:14" pos:end="677:15">-&gt;</operator><name pos:start="677:16" pos:end="677:27">intra_matrix</name><index pos:start="677:28" pos:end="677:30">[<expr pos:start="677:29" pos:end="677:29"><name pos:start="677:29" pos:end="677:29">j</name></expr>]</index></name> <operator pos:start="677:32" pos:end="677:32">=</operator> <name pos:start="677:34" pos:end="677:58"><name pos:start="677:34" pos:end="677:34">s</name><operator pos:start="677:35" pos:end="677:36">-&gt;</operator><name pos:start="677:37" pos:end="677:41">avctx</name><operator pos:start="677:42" pos:end="677:43">-&gt;</operator><name pos:start="677:44" pos:end="677:55">intra_matrix</name><index pos:start="677:56" pos:end="677:58">[<expr pos:start="677:57" pos:end="677:57"><name pos:start="677:57" pos:end="677:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="679:9" pos:end="681:59"><if pos:start="679:9" pos:end="681:59">if<condition pos:start="679:11" pos:end="679:34">(<expr pos:start="679:12" pos:end="679:33"><name pos:start="679:12" pos:end="679:33"><name pos:start="679:12" pos:end="679:12">s</name><operator pos:start="679:13" pos:end="679:14">-&gt;</operator><name pos:start="679:15" pos:end="679:19">avctx</name><operator pos:start="679:20" pos:end="679:21">-&gt;</operator><name pos:start="679:22" pos:end="679:33">inter_matrix</name></name></expr>)</condition><block type="pseudo" pos:start="681:13" pos:end="681:59"><block_content pos:start="681:13" pos:end="681:59">

            <expr_stmt pos:start="681:13" pos:end="681:59"><expr pos:start="681:13" pos:end="681:58"><name pos:start="681:13" pos:end="681:30"><name pos:start="681:13" pos:end="681:13">s</name><operator pos:start="681:14" pos:end="681:15">-&gt;</operator><name pos:start="681:16" pos:end="681:27">inter_matrix</name><index pos:start="681:28" pos:end="681:30">[<expr pos:start="681:29" pos:end="681:29"><name pos:start="681:29" pos:end="681:29">j</name></expr>]</index></name> <operator pos:start="681:32" pos:end="681:32">=</operator> <name pos:start="681:34" pos:end="681:58"><name pos:start="681:34" pos:end="681:34">s</name><operator pos:start="681:35" pos:end="681:36">-&gt;</operator><name pos:start="681:37" pos:end="681:41">avctx</name><operator pos:start="681:42" pos:end="681:43">-&gt;</operator><name pos:start="681:44" pos:end="681:55">inter_matrix</name><index pos:start="681:56" pos:end="681:58">[<expr pos:start="681:57" pos:end="681:57"><name pos:start="681:57" pos:end="681:57">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="687:5" pos:end="687:27">/* precompute matrix */</comment>

    <comment type="block" pos:start="689:5" pos:end="689:55">/* for mjpeg, we do include qscale in the matrix */</comment>

    <if_stmt pos:start="691:5" pos:end="701:5"><if pos:start="691:5" pos:end="701:5">if <condition pos:start="691:8" pos:end="691:35">(<expr pos:start="691:9" pos:end="691:34"><name pos:start="691:9" pos:end="691:21"><name pos:start="691:9" pos:end="691:9">s</name><operator pos:start="691:10" pos:end="691:11">-&gt;</operator><name pos:start="691:12" pos:end="691:21">out_format</name></name> <operator pos:start="691:23" pos:end="691:24">!=</operator> <name pos:start="691:26" pos:end="691:34">FMT_MJPEG</name></expr>)</condition> <block pos:start="691:37" pos:end="701:5">{<block_content pos:start="693:9" pos:end="699:68">

        <expr_stmt pos:start="693:9" pos:end="695:68"><expr pos:start="693:9" pos:end="695:67"><call pos:start="693:9" pos:end="695:67"><name pos:start="693:9" pos:end="693:22">convert_matrix</name><argument_list pos:start="693:23" pos:end="695:67">(<argument pos:start="693:24" pos:end="693:30"><expr pos:start="693:24" pos:end="693:30"><operator pos:start="693:24" pos:end="693:24">&amp;</operator><name pos:start="693:25" pos:end="693:30"><name pos:start="693:25" pos:end="693:25">s</name><operator pos:start="693:26" pos:end="693:27">-&gt;</operator><name pos:start="693:28" pos:end="693:30">dsp</name></name></expr></argument>, <argument pos:start="693:33" pos:end="693:49"><expr pos:start="693:33" pos:end="693:49"><name pos:start="693:33" pos:end="693:49"><name pos:start="693:33" pos:end="693:33">s</name><operator pos:start="693:34" pos:end="693:35">-&gt;</operator><name pos:start="693:36" pos:end="693:49">q_intra_matrix</name></name></expr></argument>, <argument pos:start="693:52" pos:end="693:70"><expr pos:start="693:52" pos:end="693:70"><name pos:start="693:52" pos:end="693:70"><name pos:start="693:52" pos:end="693:52">s</name><operator pos:start="693:53" pos:end="693:54">-&gt;</operator><name pos:start="693:55" pos:end="693:70">q_intra_matrix16</name></name></expr></argument>, 

                       <argument pos:start="695:24" pos:end="695:38"><expr pos:start="695:24" pos:end="695:38"><name pos:start="695:24" pos:end="695:38"><name pos:start="695:24" pos:end="695:24">s</name><operator pos:start="695:25" pos:end="695:26">-&gt;</operator><name pos:start="695:27" pos:end="695:38">intra_matrix</name></name></expr></argument>, <argument pos:start="695:41" pos:end="695:59"><expr pos:start="695:41" pos:end="695:59"><name pos:start="695:41" pos:end="695:59"><name pos:start="695:41" pos:end="695:41">s</name><operator pos:start="695:42" pos:end="695:43">-&gt;</operator><name pos:start="695:44" pos:end="695:59">intra_quant_bias</name></name></expr></argument>, <argument pos:start="695:62" pos:end="695:62"><expr pos:start="695:62" pos:end="695:62"><literal type="number" pos:start="695:62" pos:end="695:62">1</literal></expr></argument>, <argument pos:start="695:65" pos:end="695:66"><expr pos:start="695:65" pos:end="695:66"><literal type="number" pos:start="695:65" pos:end="695:66">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="697:9" pos:end="699:68"><expr pos:start="697:9" pos:end="699:67"><call pos:start="697:9" pos:end="699:67"><name pos:start="697:9" pos:end="697:22">convert_matrix</name><argument_list pos:start="697:23" pos:end="699:67">(<argument pos:start="697:24" pos:end="697:30"><expr pos:start="697:24" pos:end="697:30"><operator pos:start="697:24" pos:end="697:24">&amp;</operator><name pos:start="697:25" pos:end="697:30"><name pos:start="697:25" pos:end="697:25">s</name><operator pos:start="697:26" pos:end="697:27">-&gt;</operator><name pos:start="697:28" pos:end="697:30">dsp</name></name></expr></argument>, <argument pos:start="697:33" pos:end="697:49"><expr pos:start="697:33" pos:end="697:49"><name pos:start="697:33" pos:end="697:49"><name pos:start="697:33" pos:end="697:33">s</name><operator pos:start="697:34" pos:end="697:35">-&gt;</operator><name pos:start="697:36" pos:end="697:49">q_inter_matrix</name></name></expr></argument>, <argument pos:start="697:52" pos:end="697:70"><expr pos:start="697:52" pos:end="697:70"><name pos:start="697:52" pos:end="697:70"><name pos:start="697:52" pos:end="697:52">s</name><operator pos:start="697:53" pos:end="697:54">-&gt;</operator><name pos:start="697:55" pos:end="697:70">q_inter_matrix16</name></name></expr></argument>, 

                       <argument pos:start="699:24" pos:end="699:38"><expr pos:start="699:24" pos:end="699:38"><name pos:start="699:24" pos:end="699:38"><name pos:start="699:24" pos:end="699:24">s</name><operator pos:start="699:25" pos:end="699:26">-&gt;</operator><name pos:start="699:27" pos:end="699:38">inter_matrix</name></name></expr></argument>, <argument pos:start="699:41" pos:end="699:59"><expr pos:start="699:41" pos:end="699:59"><name pos:start="699:41" pos:end="699:59"><name pos:start="699:41" pos:end="699:41">s</name><operator pos:start="699:42" pos:end="699:43">-&gt;</operator><name pos:start="699:44" pos:end="699:59">inter_quant_bias</name></name></expr></argument>, <argument pos:start="699:62" pos:end="699:62"><expr pos:start="699:62" pos:end="699:62"><literal type="number" pos:start="699:62" pos:end="699:62">1</literal></expr></argument>, <argument pos:start="699:65" pos:end="699:66"><expr pos:start="699:65" pos:end="699:66"><literal type="number" pos:start="699:65" pos:end="699:66">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="705:5" pos:end="707:18"><if pos:start="705:5" pos:end="707:18">if<condition pos:start="705:7" pos:end="705:35">(<expr pos:start="705:8" pos:end="705:34"><call pos:start="705:8" pos:end="705:30"><name pos:start="705:8" pos:end="705:27">ff_rate_control_init</name><argument_list pos:start="705:28" pos:end="705:30">(<argument pos:start="705:29" pos:end="705:29"><expr pos:start="705:29" pos:end="705:29"><name pos:start="705:29" pos:end="705:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="705:32" pos:end="705:32">&lt;</operator> <literal type="number" pos:start="705:34" pos:end="705:34">0</literal></expr>)</condition><block type="pseudo" pos:start="707:9" pos:end="707:18"><block_content pos:start="707:9" pos:end="707:18">

        <return pos:start="707:9" pos:end="707:18">return <expr pos:start="707:16" pos:end="707:17"><operator pos:start="707:16" pos:end="707:16">-</operator><literal type="number" pos:start="707:17" pos:end="707:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="711:5" pos:end="711:26"><expr pos:start="711:5" pos:end="711:25"><name pos:start="711:5" pos:end="711:21"><name pos:start="711:5" pos:end="711:5">s</name><operator pos:start="711:6" pos:end="711:7">-&gt;</operator><name pos:start="711:8" pos:end="711:21">picture_number</name></name> <operator pos:start="711:23" pos:end="711:23">=</operator> <literal type="number" pos:start="711:25" pos:end="711:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="713:5" pos:end="713:32"><expr pos:start="713:5" pos:end="713:31"><name pos:start="713:5" pos:end="713:27"><name pos:start="713:5" pos:end="713:5">s</name><operator pos:start="713:6" pos:end="713:7">-&gt;</operator><name pos:start="713:8" pos:end="713:27">input_picture_number</name></name> <operator pos:start="713:29" pos:end="713:29">=</operator> <literal type="number" pos:start="713:31" pos:end="713:31">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="715:5" pos:end="715:33"><expr pos:start="715:5" pos:end="715:32"><name pos:start="715:5" pos:end="715:28"><name pos:start="715:5" pos:end="715:5">s</name><operator pos:start="715:6" pos:end="715:7">-&gt;</operator><name pos:start="715:8" pos:end="715:28">picture_in_gop_number</name></name> <operator pos:start="715:30" pos:end="715:30">=</operator> <literal type="number" pos:start="715:32" pos:end="715:32">0</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="717:5" pos:end="717:30">/* motion detector init */</comment>

    <expr_stmt pos:start="719:5" pos:end="719:18"><expr pos:start="719:5" pos:end="719:17"><name pos:start="719:5" pos:end="719:13"><name pos:start="719:5" pos:end="719:5">s</name><operator pos:start="719:6" pos:end="719:7">-&gt;</operator><name pos:start="719:8" pos:end="719:13">f_code</name></name> <operator pos:start="719:15" pos:end="719:15">=</operator> <literal type="number" pos:start="719:17" pos:end="719:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="721:5" pos:end="721:18"><expr pos:start="721:5" pos:end="721:17"><name pos:start="721:5" pos:end="721:13"><name pos:start="721:5" pos:end="721:5">s</name><operator pos:start="721:6" pos:end="721:7">-&gt;</operator><name pos:start="721:8" pos:end="721:13">b_code</name></name> <operator pos:start="721:15" pos:end="721:15">=</operator> <literal type="number" pos:start="721:17" pos:end="721:17">1</literal></expr>;</expr_stmt>



    <return pos:start="725:5" pos:end="725:13">return <expr pos:start="725:12" pos:end="725:12"><literal type="number" pos:start="725:12" pos:end="725:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
