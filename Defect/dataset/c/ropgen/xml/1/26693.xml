<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26693.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">new_video_stream</name><parameter_list pos:start="1:29" pos:end="1:63">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">oc</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:62">file_idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="289:1">{<block_content pos:start="5:5" pos:end="287:33">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVOutputStream</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">ost</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:29">video_enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:16">CodecID</name></name></type> <name pos:start="11:18" pos:end="11:25">codec_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVCodec</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">codec</name><init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:96"><expr pos:start="17:5" pos:end="17:95"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <call pos:start="17:10" pos:end="17:95"><name pos:start="17:10" pos:end="17:22">av_new_stream</name><argument_list pos:start="17:23" pos:end="17:95">(<argument pos:start="17:24" pos:end="17:25"><expr pos:start="17:24" pos:end="17:25"><name pos:start="17:24" pos:end="17:25">oc</name></expr></argument>, <argument pos:start="17:28" pos:end="17:94"><expr pos:start="17:28" pos:end="17:94"><ternary pos:start="17:28" pos:end="17:94"><condition pos:start="17:28" pos:end="17:61"><expr pos:start="17:28" pos:end="17:59"><name pos:start="17:28" pos:end="17:41"><name pos:start="17:28" pos:end="17:29">oc</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:41">nb_streams</name></name> <operator pos:start="17:43" pos:end="17:43">&lt;</operator> <name pos:start="17:45" pos:end="17:59">nb_streamid_map</name></expr> ?</condition><then pos:start="17:63" pos:end="17:90"> <expr pos:start="17:63" pos:end="17:90"><name pos:start="17:63" pos:end="17:90"><name pos:start="17:63" pos:end="17:74">streamid_map</name><index pos:start="17:75" pos:end="17:90">[<expr pos:start="17:76" pos:end="17:89"><name pos:start="17:76" pos:end="17:89"><name pos:start="17:76" pos:end="17:77">oc</name><operator pos:start="17:78" pos:end="17:79">-&gt;</operator><name pos:start="17:80" pos:end="17:89">nb_streams</name></name></expr>]</index></name></expr> </then><else pos:start="17:92" pos:end="17:94">: <expr pos:start="17:94" pos:end="17:94"><literal type="number" pos:start="17:94" pos:end="17:94">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:11">st</name></expr>)</condition> <block pos:start="19:14" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:23">

        <expr_stmt pos:start="21:9" pos:end="21:52"><expr pos:start="21:9" pos:end="21:51"><call pos:start="21:9" pos:end="21:51"><name pos:start="21:9" pos:end="21:15">fprintf</name><argument_list pos:start="21:16" pos:end="21:51">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">stderr</name></expr></argument>, <argument pos:start="21:25" pos:end="21:50"><expr pos:start="21:25" pos:end="21:50"><literal type="string" pos:start="21:25" pos:end="21:50">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><call pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:19">ffmpeg_exit</name><argument_list pos:start="23:20" pos:end="23:22">(<argument pos:start="23:21" pos:end="23:21"><expr pos:start="23:21" pos:end="23:21"><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:7">ost</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:41"><name pos:start="27:11" pos:end="27:27">new_output_stream</name><argument_list pos:start="27:28" pos:end="27:41">(<argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">oc</name></expr></argument>, <argument pos:start="27:33" pos:end="27:40"><expr pos:start="27:33" pos:end="27:40"><name pos:start="27:33" pos:end="27:40">file_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:111"><expr pos:start="31:5" pos:end="31:110"><name pos:start="31:5" pos:end="31:17">output_codecs</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:110"><name pos:start="31:21" pos:end="31:30">grow_array</name><argument_list pos:start="31:31" pos:end="31:110">(<argument pos:start="31:32" pos:end="31:44"><expr pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:44">output_codecs</name></expr></argument>, <argument pos:start="31:47" pos:end="31:68"><expr pos:start="31:47" pos:end="31:68"><sizeof pos:start="31:47" pos:end="31:68">sizeof<argument_list pos:start="31:53" pos:end="31:68">(<argument pos:start="31:54" pos:end="31:67"><expr pos:start="31:54" pos:end="31:67"><operator pos:start="31:54" pos:end="31:54">*</operator><name pos:start="31:55" pos:end="31:67">output_codecs</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:71" pos:end="31:87"><expr pos:start="31:71" pos:end="31:87"><operator pos:start="31:71" pos:end="31:71">&amp;</operator><name pos:start="31:72" pos:end="31:87">nb_output_codecs</name></expr></argument>, <argument pos:start="31:90" pos:end="31:109"><expr pos:start="31:90" pos:end="31:109"><name pos:start="31:90" pos:end="31:105">nb_output_codecs</name> <operator pos:start="31:107" pos:end="31:107">+</operator> <literal type="number" pos:start="31:109" pos:end="31:109">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="53:5"><if pos:start="33:5" pos:end="53:5">if<condition pos:start="33:7" pos:end="33:26">(<expr pos:start="33:8" pos:end="33:25"><operator pos:start="33:8" pos:end="33:8">!</operator><name pos:start="33:9" pos:end="33:25">video_stream_copy</name></expr>)</condition><block pos:start="33:27" pos:end="53:5">{<block_content pos:start="35:9" pos:end="51:9">

        <if_stmt pos:start="35:9" pos:end="51:9"><if pos:start="35:9" pos:end="45:9">if <condition pos:start="35:12" pos:end="35:29">(<expr pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:28">video_codec_name</name></expr>)</condition> <block pos:start="35:31" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:54">

            <expr_stmt pos:start="37:13" pos:end="39:98"><expr pos:start="37:13" pos:end="39:97"><name pos:start="37:13" pos:end="37:20">codec_id</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="39:97"><name pos:start="37:24" pos:end="37:40">find_codec_or_die</name><argument_list pos:start="37:41" pos:end="39:97">(<argument pos:start="37:42" pos:end="37:57"><expr pos:start="37:42" pos:end="37:57"><name pos:start="37:42" pos:end="37:57">video_codec_name</name></expr></argument>, <argument pos:start="37:60" pos:end="37:77"><expr pos:start="37:60" pos:end="37:77"><name pos:start="37:60" pos:end="37:77">AVMEDIA_TYPE_VIDEO</name></expr></argument>, <argument pos:start="37:80" pos:end="37:80"><expr pos:start="37:80" pos:end="37:80"><literal type="number" pos:start="37:80" pos:end="37:80">1</literal></expr></argument>,

                                         <argument pos:start="39:42" pos:end="39:96"><expr pos:start="39:42" pos:end="39:96"><name pos:start="39:42" pos:end="39:73"><name pos:start="39:42" pos:end="39:53">avcodec_opts</name><index pos:start="39:54" pos:end="39:73">[<expr pos:start="39:55" pos:end="39:72"><name pos:start="39:55" pos:end="39:72">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="39:74" pos:end="39:75">-&gt;</operator><name pos:start="39:76" pos:end="39:96">strict_std_compliance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:67"><expr pos:start="41:13" pos:end="41:66"><name pos:start="41:13" pos:end="41:17">codec</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:66"><name pos:start="41:21" pos:end="41:48">avcodec_find_encoder_by_name</name><argument_list pos:start="41:49" pos:end="41:66">(<argument pos:start="41:50" pos:end="41:65"><expr pos:start="41:50" pos:end="41:65"><name pos:start="41:50" pos:end="41:65">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:54"><expr pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:45"><name pos:start="43:13" pos:end="43:25">output_codecs</name><index pos:start="43:26" pos:end="43:45">[<expr pos:start="43:27" pos:end="43:44"><name pos:start="43:27" pos:end="43:42">nb_output_codecs</name><operator pos:start="43:43" pos:end="43:43">-</operator><literal type="number" pos:start="43:44" pos:end="43:44">1</literal></expr>]</index></name> <operator pos:start="43:47" pos:end="43:47">=</operator> <name pos:start="43:49" pos:end="43:53">codec</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="51:9">else <block pos:start="45:16" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:51">

            <expr_stmt pos:start="47:13" pos:end="47:97"><expr pos:start="47:13" pos:end="47:96"><name pos:start="47:13" pos:end="47:20">codec_id</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <call pos:start="47:24" pos:end="47:96"><name pos:start="47:24" pos:end="47:37">av_guess_codec</name><argument_list pos:start="47:38" pos:end="47:96">(<argument pos:start="47:39" pos:end="47:49"><expr pos:start="47:39" pos:end="47:49"><name pos:start="47:39" pos:end="47:49"><name pos:start="47:39" pos:end="47:40">oc</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:49">oformat</name></name></expr></argument>, <argument pos:start="47:52" pos:end="47:55"><expr pos:start="47:52" pos:end="47:55"><name pos:start="47:52" pos:end="47:55">NULL</name></expr></argument>, <argument pos:start="47:58" pos:end="47:69"><expr pos:start="47:58" pos:end="47:69"><name pos:start="47:58" pos:end="47:69"><name pos:start="47:58" pos:end="47:59">oc</name><operator pos:start="47:60" pos:end="47:61">-&gt;</operator><name pos:start="47:62" pos:end="47:69">filename</name></name></expr></argument>, <argument pos:start="47:72" pos:end="47:75"><expr pos:start="47:72" pos:end="47:75"><name pos:start="47:72" pos:end="47:75">NULL</name></expr></argument>, <argument pos:start="47:78" pos:end="47:95"><expr pos:start="47:78" pos:end="47:95"><name pos:start="47:78" pos:end="47:95">AVMEDIA_TYPE_VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:17">codec</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <call pos:start="49:21" pos:end="49:50"><name pos:start="49:21" pos:end="49:40">avcodec_find_encoder</name><argument_list pos:start="49:41" pos:end="49:50">(<argument pos:start="49:42" pos:end="49:49"><expr pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:49">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:52"><expr pos:start="57:5" pos:end="57:51"><call pos:start="57:5" pos:end="57:51"><name pos:start="57:5" pos:end="57:33">avcodec_get_context_defaults3</name><argument_list pos:start="57:34" pos:end="57:51">(<argument pos:start="57:35" pos:end="57:43"><expr pos:start="57:35" pos:end="57:43"><name pos:start="57:35" pos:end="57:43"><name pos:start="57:35" pos:end="57:36">st</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:43">codec</name></name></expr></argument>, <argument pos:start="57:46" pos:end="57:50"><expr pos:start="57:46" pos:end="57:50"><name pos:start="57:46" pos:end="57:50">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:53"><expr pos:start="59:5" pos:end="59:52"><name pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:7">ost</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:26">bitstream_filters</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:52">video_bitstream_filters</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:27">video_bitstream_filters</name><operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:33">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><call pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:23">avcodec_thread_init</name><argument_list pos:start="65:24" pos:end="65:48">(<argument pos:start="65:25" pos:end="65:33"><expr pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:33"><name pos:start="65:25" pos:end="65:26">st</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:33">codec</name></name></expr></argument>, <argument pos:start="65:36" pos:end="65:47"><expr pos:start="65:36" pos:end="65:47"><name pos:start="65:36" pos:end="65:47">thread_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:13">video_enc</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:18">st</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:25">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="75:46"><if pos:start="73:5" pos:end="75:46">if<condition pos:start="73:7" pos:end="73:23">(<expr pos:start="73:8" pos:end="73:22"><name pos:start="73:8" pos:end="73:22">video_codec_tag</name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:46"><block_content pos:start="75:9" pos:end="75:46">

        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:17">video_enc</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:28">codec_tag</name></name><operator pos:start="75:29" pos:end="75:29">=</operator> <name pos:start="75:31" pos:end="75:45">video_codec_tag</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="87:5"><if pos:start="79:5" pos:end="87:5">if<condition pos:start="79:7" pos:end="81:80">(   <expr pos:start="79:11" pos:end="81:79"><operator pos:start="79:11" pos:end="79:11">(</operator><name pos:start="79:12" pos:end="79:30">video_global_header</name><operator pos:start="79:31" pos:end="79:31">&amp;</operator><literal type="number" pos:start="79:32" pos:end="79:32">1</literal><operator pos:start="79:33" pos:end="79:33">)</operator>

       <operator pos:start="81:8" pos:end="81:9">||</operator> <operator pos:start="81:11" pos:end="81:11">(</operator><name pos:start="81:12" pos:end="81:30">video_global_header</name><operator pos:start="81:31" pos:end="81:32">==</operator><literal type="number" pos:start="81:33" pos:end="81:33">0</literal> <operator pos:start="81:35" pos:end="81:36">&amp;&amp;</operator> <operator pos:start="81:38" pos:end="81:38">(</operator><name pos:start="81:39" pos:end="81:56"><name pos:start="81:39" pos:end="81:40">oc</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:49">oformat</name><operator pos:start="81:50" pos:end="81:51">-&gt;</operator><name pos:start="81:52" pos:end="81:56">flags</name></name> <operator pos:start="81:58" pos:end="81:58">&amp;</operator> <name pos:start="81:60" pos:end="81:77">AVFMT_GLOBALHEADER</name><operator pos:start="81:78" pos:end="81:78">)</operator><operator pos:start="81:79" pos:end="81:79">)</operator></expr>)</condition><block pos:start="81:81" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:75">

        <expr_stmt pos:start="83:9" pos:end="83:53"><expr pos:start="83:9" pos:end="83:52"><name pos:start="83:9" pos:end="83:24"><name pos:start="83:9" pos:end="83:17">video_enc</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:24">flags</name></name> <operator pos:start="83:26" pos:end="83:27">|=</operator> <name pos:start="83:29" pos:end="83:52">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:75"><expr pos:start="85:9" pos:end="85:74"><name pos:start="85:9" pos:end="85:40"><name pos:start="85:9" pos:end="85:20">avcodec_opts</name><index pos:start="85:21" pos:end="85:40">[<expr pos:start="85:22" pos:end="85:39"><name pos:start="85:22" pos:end="85:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:47">flags</name><operator pos:start="85:48" pos:end="85:49">|=</operator> <name pos:start="85:51" pos:end="85:74">CODEC_FLAG_GLOBAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if<condition pos:start="89:7" pos:end="89:29">(<expr pos:start="89:8" pos:end="89:28"><name pos:start="89:8" pos:end="89:26">video_global_header</name><operator pos:start="89:27" pos:end="89:27">&amp;</operator><literal type="number" pos:start="89:28" pos:end="89:28">2</literal></expr>)</condition><block pos:start="89:30" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:76">

        <expr_stmt pos:start="91:9" pos:end="91:54"><expr pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:25"><name pos:start="91:9" pos:end="91:17">video_enc</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:25">flags2</name></name> <operator pos:start="91:27" pos:end="91:28">|=</operator> <name pos:start="91:30" pos:end="91:53">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:76"><expr pos:start="93:9" pos:end="93:75"><name pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:20">avcodec_opts</name><index pos:start="93:21" pos:end="93:40">[<expr pos:start="93:22" pos:end="93:39"><name pos:start="93:22" pos:end="93:39">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="93:41" pos:end="93:42">-&gt;</operator><name pos:start="93:43" pos:end="93:48">flags2</name><operator pos:start="93:49" pos:end="93:50">|=</operator> <name pos:start="93:52" pos:end="93:75">CODEC_FLAG2_LOCAL_HEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="265:5"><if pos:start="99:5" pos:end="109:5">if <condition pos:start="99:8" pos:end="99:26">(<expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:25">video_stream_copy</name></expr>)</condition> <block pos:start="99:28" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:91">

        <expr_stmt pos:start="101:9" pos:end="101:28"><expr pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:10">st</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:23">stream_copy</name></name> <operator pos:start="101:25" pos:end="101:25">=</operator> <literal type="number" pos:start="101:27" pos:end="101:27">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:51"><expr pos:start="103:9" pos:end="103:50"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:17">video_enc</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:29">codec_type</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="107:91"><expr pos:start="105:9" pos:end="107:90"><name pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:17">video_enc</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:38">sample_aspect_ratio</name></name> <operator pos:start="105:40" pos:end="105:40">=</operator>

        <name pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:10">st</name><operator pos:start="107:11" pos:end="107:12">-&gt;</operator><name pos:start="107:13" pos:end="107:31">sample_aspect_ratio</name></name> <operator pos:start="107:33" pos:end="107:33">=</operator> <call pos:start="107:35" pos:end="107:90"><name pos:start="107:35" pos:end="107:40">av_d2q</name><argument_list pos:start="107:41" pos:end="107:90">(<argument pos:start="107:42" pos:end="107:84"><expr pos:start="107:42" pos:end="107:84"><name pos:start="107:42" pos:end="107:59">frame_aspect_ratio</name><operator pos:start="107:60" pos:end="107:60">*</operator><name pos:start="107:61" pos:end="107:72">frame_height</name><operator pos:start="107:73" pos:end="107:73">/</operator><name pos:start="107:74" pos:end="107:84">frame_width</name></expr></argument>, <argument pos:start="107:87" pos:end="107:89"><expr pos:start="107:87" pos:end="107:89"><literal type="number" pos:start="107:87" pos:end="107:89">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="265:5">else <block pos:start="109:12" pos:end="265:5">{<block_content pos:start="111:9" pos:end="263:71">

        <decl_stmt pos:start="111:9" pos:end="111:22"><decl pos:start="111:9" pos:end="111:21"><type pos:start="111:9" pos:end="111:20"><specifier pos:start="111:9" pos:end="111:13">const</specifier> <name pos:start="111:15" pos:end="111:18">char</name> <modifier pos:start="111:20" pos:end="111:20">*</modifier></type><name pos:start="111:21" pos:end="111:21">p</name></decl>;</decl_stmt>

        <decl_stmt pos:start="113:9" pos:end="113:14"><decl pos:start="113:9" pos:end="113:13"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="115:9" pos:end="115:73"><decl pos:start="115:9" pos:end="115:72"><type pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:18">AVRational</name></type> <name pos:start="115:20" pos:end="115:22">fps</name><init pos:start="115:23" pos:end="115:72">= <expr pos:start="115:25" pos:end="115:72"><ternary pos:start="115:25" pos:end="115:72"><condition pos:start="115:25" pos:end="115:40"><expr pos:start="115:25" pos:end="115:38"><name pos:start="115:25" pos:end="115:38"><name pos:start="115:25" pos:end="115:34">frame_rate</name><operator pos:start="115:35" pos:end="115:35">.</operator><name pos:start="115:36" pos:end="115:38">num</name></name></expr> ?</condition><then pos:start="115:42" pos:end="115:51"> <expr pos:start="115:42" pos:end="115:51"><name pos:start="115:42" pos:end="115:51">frame_rate</name></expr> </then><else pos:start="115:53" pos:end="115:72">: <expr pos:start="115:55" pos:end="115:72"><operator pos:start="115:55" pos:end="115:55">(</operator><name pos:start="115:56" pos:end="115:65">AVRational</name><operator pos:start="115:66" pos:end="115:66">)</operator><block pos:start="115:67" pos:end="115:72">{<expr pos:start="115:68" pos:end="115:69"><literal type="number" pos:start="115:68" pos:end="115:69">25</literal></expr>,<expr pos:start="115:71" pos:end="115:71"><literal type="number" pos:start="115:71" pos:end="115:71">1</literal></expr>}</block></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:17">video_enc</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:27">codec_id</name></name> <operator pos:start="119:29" pos:end="119:29">=</operator> <name pos:start="119:31" pos:end="119:38">codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:131"><expr pos:start="121:9" pos:end="121:130"><call pos:start="121:9" pos:end="121:130"><name pos:start="121:9" pos:end="121:24">set_context_opts</name><argument_list pos:start="121:25" pos:end="121:130">(<argument pos:start="121:26" pos:end="121:34"><expr pos:start="121:26" pos:end="121:34"><name pos:start="121:26" pos:end="121:34">video_enc</name></expr></argument>, <argument pos:start="121:37" pos:end="121:68"><expr pos:start="121:37" pos:end="121:68"><name pos:start="121:37" pos:end="121:68"><name pos:start="121:37" pos:end="121:48">avcodec_opts</name><index pos:start="121:49" pos:end="121:68">[<expr pos:start="121:50" pos:end="121:67"><name pos:start="121:50" pos:end="121:67">AVMEDIA_TYPE_VIDEO</name></expr>]</index></name></expr></argument>, <argument pos:start="121:71" pos:end="121:122"><expr pos:start="121:71" pos:end="121:122"><name pos:start="121:71" pos:end="121:93">AV_OPT_FLAG_VIDEO_PARAM</name> <operator pos:start="121:95" pos:end="121:95">|</operator> <name pos:start="121:97" pos:end="121:122">AV_OPT_FLAG_ENCODING_PARAM</name></expr></argument>, <argument pos:start="121:125" pos:end="121:129"><expr pos:start="121:125" pos:end="121:129"><name pos:start="121:125" pos:end="121:129">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="127:103"><if pos:start="125:9" pos:end="127:103">if <condition pos:start="125:12" pos:end="125:63">(<expr pos:start="125:13" pos:end="125:62"><name pos:start="125:13" pos:end="125:17">codec</name> <operator pos:start="125:19" pos:end="125:20">&amp;&amp;</operator> <name pos:start="125:22" pos:end="125:48"><name pos:start="125:22" pos:end="125:26">codec</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:48">supported_framerates</name></name> <operator pos:start="125:50" pos:end="125:51">&amp;&amp;</operator> <operator pos:start="125:53" pos:end="125:53">!</operator><name pos:start="125:54" pos:end="125:62">force_fps</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:103"><block_content pos:start="127:13" pos:end="127:103">

            <expr_stmt pos:start="127:13" pos:end="127:103"><expr pos:start="127:13" pos:end="127:102"><name pos:start="127:13" pos:end="127:15">fps</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:102"><name pos:start="127:19" pos:end="127:23">codec</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:45">supported_framerates</name><index pos:start="127:46" pos:end="127:102">[<expr pos:start="127:47" pos:end="127:101"><call pos:start="127:47" pos:end="127:101"><name pos:start="127:47" pos:end="127:67">av_find_nearest_q_idx</name><argument_list pos:start="127:68" pos:end="127:101">(<argument pos:start="127:69" pos:end="127:71"><expr pos:start="127:69" pos:end="127:71"><name pos:start="127:69" pos:end="127:71">fps</name></expr></argument>, <argument pos:start="127:74" pos:end="127:100"><expr pos:start="127:74" pos:end="127:100"><name pos:start="127:74" pos:end="127:100"><name pos:start="127:74" pos:end="127:78">codec</name><operator pos:start="127:79" pos:end="127:80">-&gt;</operator><name pos:start="127:81" pos:end="127:100">supported_framerates</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:17">video_enc</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:28">time_base</name><operator pos:start="129:29" pos:end="129:29">.</operator><name pos:start="129:30" pos:end="129:32">den</name></name> <operator pos:start="129:34" pos:end="129:34">=</operator> <name pos:start="129:36" pos:end="129:42"><name pos:start="129:36" pos:end="129:38">fps</name><operator pos:start="129:39" pos:end="129:39">.</operator><name pos:start="129:40" pos:end="129:42">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:43"><expr pos:start="131:9" pos:end="131:42"><name pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:17">video_enc</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:28">time_base</name><operator pos:start="131:29" pos:end="131:29">.</operator><name pos:start="131:30" pos:end="131:32">num</name></name> <operator pos:start="131:34" pos:end="131:34">=</operator> <name pos:start="131:36" pos:end="131:42"><name pos:start="131:36" pos:end="131:38">fps</name><operator pos:start="131:39" pos:end="131:39">.</operator><name pos:start="131:40" pos:end="131:42">den</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:39"><expr pos:start="135:9" pos:end="135:38"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:17">video_enc</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:24">width</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:38">frame_width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:41"><expr pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:25"><name pos:start="137:9" pos:end="137:17">video_enc</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:25">height</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:40">frame_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:108"><expr pos:start="139:9" pos:end="139:107"><name pos:start="139:9" pos:end="139:38"><name pos:start="139:9" pos:end="139:17">video_enc</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:38">sample_aspect_ratio</name></name> <operator pos:start="139:40" pos:end="139:40">=</operator> <call pos:start="139:42" pos:end="139:107"><name pos:start="139:42" pos:end="139:47">av_d2q</name><argument_list pos:start="139:48" pos:end="139:107">(<argument pos:start="139:49" pos:end="139:101"><expr pos:start="139:49" pos:end="139:101"><name pos:start="139:49" pos:end="139:66">frame_aspect_ratio</name><operator pos:start="139:67" pos:end="139:67">*</operator><name pos:start="139:68" pos:end="139:84"><name pos:start="139:68" pos:end="139:76">video_enc</name><operator pos:start="139:77" pos:end="139:78">-&gt;</operator><name pos:start="139:79" pos:end="139:84">height</name></name><operator pos:start="139:85" pos:end="139:85">/</operator><name pos:start="139:86" pos:end="139:101"><name pos:start="139:86" pos:end="139:94">video_enc</name><operator pos:start="139:95" pos:end="139:96">-&gt;</operator><name pos:start="139:97" pos:end="139:101">width</name></name></expr></argument>, <argument pos:start="139:104" pos:end="139:106"><expr pos:start="139:104" pos:end="139:106"><literal type="number" pos:start="139:104" pos:end="139:106">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:17">video_enc</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:26">pix_fmt</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:42">frame_pix_fmt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:65"><expr pos:start="143:9" pos:end="143:64"><name pos:start="143:9" pos:end="143:31"><name pos:start="143:9" pos:end="143:10">st</name><operator pos:start="143:11" pos:end="143:12">-&gt;</operator><name pos:start="143:13" pos:end="143:31">sample_aspect_ratio</name></name> <operator pos:start="143:33" pos:end="143:33">=</operator> <name pos:start="143:35" pos:end="143:64"><name pos:start="143:35" pos:end="143:43">video_enc</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:64">sample_aspect_ratio</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:36"><expr pos:start="147:9" pos:end="147:35"><call pos:start="147:9" pos:end="147:35"><name pos:start="147:9" pos:end="147:24">choose_pixel_fmt</name><argument_list pos:start="147:25" pos:end="147:35">(<argument pos:start="147:26" pos:end="147:27"><expr pos:start="147:26" pos:end="147:27"><name pos:start="147:26" pos:end="147:27">st</name></expr></argument>, <argument pos:start="147:30" pos:end="147:34"><expr pos:start="147:30" pos:end="147:34"><name pos:start="147:30" pos:end="147:34">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="151:9" pos:end="153:36"><if pos:start="151:9" pos:end="153:36">if <condition pos:start="151:12" pos:end="151:23">(<expr pos:start="151:13" pos:end="151:22"><name pos:start="151:13" pos:end="151:22">intra_only</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:36"><block_content pos:start="153:13" pos:end="153:36">

            <expr_stmt pos:start="153:13" pos:end="153:36"><expr pos:start="153:13" pos:end="153:35"><name pos:start="153:13" pos:end="153:31"><name pos:start="153:13" pos:end="153:21">video_enc</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:31">gop_size</name></name> <operator pos:start="153:33" pos:end="153:33">=</operator> <literal type="number" pos:start="153:35" pos:end="153:35">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="155:9" pos:end="163:9"><if pos:start="155:9" pos:end="163:9">if <condition pos:start="155:12" pos:end="155:41">(<expr pos:start="155:13" pos:end="155:40"><name pos:start="155:13" pos:end="155:24">video_qscale</name> <operator pos:start="155:26" pos:end="155:27">||</operator> <name pos:start="155:29" pos:end="155:40">same_quality</name></expr>)</condition> <block pos:start="155:43" pos:end="163:9">{<block_content pos:start="157:13" pos:end="161:58">

            <expr_stmt pos:start="157:13" pos:end="157:50"><expr pos:start="157:13" pos:end="157:49"><name pos:start="157:13" pos:end="157:28"><name pos:start="157:13" pos:end="157:21">video_enc</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:28">flags</name></name> <operator pos:start="157:30" pos:end="157:31">|=</operator> <name pos:start="157:33" pos:end="157:49">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="161:58"><expr pos:start="159:13" pos:end="161:57"><name pos:start="159:13" pos:end="159:37"><name pos:start="159:13" pos:end="159:21">video_enc</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:37">global_quality</name></name><operator pos:start="159:38" pos:end="159:38">=</operator>

                <name pos:start="161:17" pos:end="161:27"><name pos:start="161:17" pos:end="161:18">st</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:27">quality</name></name> <operator pos:start="161:29" pos:end="161:29">=</operator> <name pos:start="161:31" pos:end="161:42">FF_QP2LAMBDA</name> <operator pos:start="161:44" pos:end="161:44">*</operator> <name pos:start="161:46" pos:end="161:57">video_qscale</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="167:9" pos:end="169:51"><if pos:start="167:9" pos:end="169:51">if<condition pos:start="167:11" pos:end="167:24">(<expr pos:start="167:12" pos:end="167:23"><name pos:start="167:12" pos:end="167:23">intra_matrix</name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:51"><block_content pos:start="169:13" pos:end="169:51">

            <expr_stmt pos:start="169:13" pos:end="169:51"><expr pos:start="169:13" pos:end="169:50"><name pos:start="169:13" pos:end="169:35"><name pos:start="169:13" pos:end="169:21">video_enc</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:35">intra_matrix</name></name> <operator pos:start="169:37" pos:end="169:37">=</operator> <name pos:start="169:39" pos:end="169:50">intra_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="171:9" pos:end="173:51"><if pos:start="171:9" pos:end="173:51">if<condition pos:start="171:11" pos:end="171:24">(<expr pos:start="171:12" pos:end="171:23"><name pos:start="171:12" pos:end="171:23">inter_matrix</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:51"><block_content pos:start="173:13" pos:end="173:51">

            <expr_stmt pos:start="173:13" pos:end="173:51"><expr pos:start="173:13" pos:end="173:50"><name pos:start="173:13" pos:end="173:35"><name pos:start="173:13" pos:end="173:21">video_enc</name><operator pos:start="173:22" pos:end="173:23">-&gt;</operator><name pos:start="173:24" pos:end="173:35">inter_matrix</name></name> <operator pos:start="173:37" pos:end="173:37">=</operator> <name pos:start="173:39" pos:end="173:50">inter_matrix</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="177:9" pos:end="177:36"><expr pos:start="177:9" pos:end="177:35"><name pos:start="177:9" pos:end="177:9">p</name><operator pos:start="177:10" pos:end="177:10">=</operator> <name pos:start="177:12" pos:end="177:35">video_rc_override_string</name></expr>;</expr_stmt>

        <for pos:start="179:9" pos:end="223:9">for<control pos:start="179:12" pos:end="179:24">(<init pos:start="179:13" pos:end="179:16"><expr pos:start="179:13" pos:end="179:15"><name pos:start="179:13" pos:end="179:13">i</name><operator pos:start="179:14" pos:end="179:14">=</operator><literal type="number" pos:start="179:15" pos:end="179:15">0</literal></expr>;</init> <condition pos:start="179:18" pos:end="179:19"><expr pos:start="179:18" pos:end="179:18"><name pos:start="179:18" pos:end="179:18">p</name></expr>;</condition> <incr pos:start="179:21" pos:end="179:23"><expr pos:start="179:21" pos:end="179:23"><name pos:start="179:21" pos:end="179:21">i</name><operator pos:start="179:22" pos:end="179:23">++</operator></expr></incr>)</control><block pos:start="179:25" pos:end="223:9">{<block_content pos:start="181:13" pos:end="221:22">

            <decl_stmt pos:start="181:13" pos:end="181:30"><decl pos:start="181:13" pos:end="181:21"><type pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:15">int</name></type> <name pos:start="181:17" pos:end="181:21">start</name></decl>, <decl pos:start="181:24" pos:end="181:26"><type ref="prev" pos:start="181:13" pos:end="181:15"/><name pos:start="181:24" pos:end="181:26">end</name></decl>, <decl pos:start="181:29" pos:end="181:29"><type ref="prev" pos:start="181:13" pos:end="181:15"/><name pos:start="181:29" pos:end="181:29">q</name></decl>;</decl_stmt>

            <decl_stmt pos:start="183:13" pos:end="183:58"><decl pos:start="183:13" pos:end="183:57"><type pos:start="183:13" pos:end="183:15"><name pos:start="183:13" pos:end="183:15">int</name></type> <name pos:start="183:17" pos:end="183:17">e</name><init pos:start="183:18" pos:end="183:57">=<expr pos:start="183:19" pos:end="183:57"><call pos:start="183:19" pos:end="183:57"><name pos:start="183:19" pos:end="183:24">sscanf</name><argument_list pos:start="183:25" pos:end="183:57">(<argument pos:start="183:26" pos:end="183:26"><expr pos:start="183:26" pos:end="183:26"><name pos:start="183:26" pos:end="183:26">p</name></expr></argument>, <argument pos:start="183:29" pos:end="183:38"><expr pos:start="183:29" pos:end="183:38"><literal type="string" pos:start="183:29" pos:end="183:38">"%d,%d,%d"</literal></expr></argument>, <argument pos:start="183:41" pos:end="183:46"><expr pos:start="183:41" pos:end="183:46"><operator pos:start="183:41" pos:end="183:41">&amp;</operator><name pos:start="183:42" pos:end="183:46">start</name></expr></argument>, <argument pos:start="183:49" pos:end="183:52"><expr pos:start="183:49" pos:end="183:52"><operator pos:start="183:49" pos:end="183:49">&amp;</operator><name pos:start="183:50" pos:end="183:52">end</name></expr></argument>, <argument pos:start="183:55" pos:end="183:56"><expr pos:start="183:55" pos:end="183:56"><operator pos:start="183:55" pos:end="183:55">&amp;</operator><name pos:start="183:56" pos:end="183:56">q</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="185:13" pos:end="191:13"><if pos:start="185:13" pos:end="191:13">if<condition pos:start="185:15" pos:end="185:20">(<expr pos:start="185:16" pos:end="185:19"><name pos:start="185:16" pos:end="185:16">e</name><operator pos:start="185:17" pos:end="185:18">!=</operator><literal type="number" pos:start="185:19" pos:end="185:19">3</literal></expr>)</condition><block pos:start="185:21" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:31">

                <expr_stmt pos:start="187:17" pos:end="187:63"><expr pos:start="187:17" pos:end="187:62"><call pos:start="187:17" pos:end="187:62"><name pos:start="187:17" pos:end="187:23">fprintf</name><argument_list pos:start="187:24" pos:end="187:62">(<argument pos:start="187:25" pos:end="187:30"><expr pos:start="187:25" pos:end="187:30"><name pos:start="187:25" pos:end="187:30">stderr</name></expr></argument>, <argument pos:start="187:33" pos:end="187:61"><expr pos:start="187:33" pos:end="187:61"><literal type="string" pos:start="187:33" pos:end="187:61">"error parsing rc_override\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:31"><expr pos:start="189:17" pos:end="189:30"><call pos:start="189:17" pos:end="189:30"><name pos:start="189:17" pos:end="189:27">ffmpeg_exit</name><argument_list pos:start="189:28" pos:end="189:30">(<argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><literal type="number" pos:start="189:29" pos:end="189:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="197:53"><expr pos:start="193:13" pos:end="197:52"><name pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:21">video_enc</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:34">rc_override</name></name><operator pos:start="193:35" pos:end="193:35">=</operator>

                <call pos:start="195:17" pos:end="197:52"><name pos:start="195:17" pos:end="195:26">av_realloc</name><argument_list pos:start="195:27" pos:end="197:52">(<argument pos:start="195:28" pos:end="195:49"><expr pos:start="195:28" pos:end="195:49"><name pos:start="195:28" pos:end="195:49"><name pos:start="195:28" pos:end="195:36">video_enc</name><operator pos:start="195:37" pos:end="195:38">-&gt;</operator><name pos:start="195:39" pos:end="195:49">rc_override</name></name></expr></argument>,

                           <argument pos:start="197:28" pos:end="197:51"><expr pos:start="197:28" pos:end="197:51"><sizeof pos:start="197:28" pos:end="197:45">sizeof<argument_list pos:start="197:34" pos:end="197:45">(<argument pos:start="197:35" pos:end="197:44"><expr pos:start="197:35" pos:end="197:44"><name pos:start="197:35" pos:end="197:44">RcOverride</name></expr></argument>)</argument_list></sizeof><operator pos:start="197:46" pos:end="197:46">*</operator><operator pos:start="197:47" pos:end="197:47">(</operator><name pos:start="197:48" pos:end="197:48">i</name><operator pos:start="197:49" pos:end="197:49">+</operator><literal type="number" pos:start="197:50" pos:end="197:50">1</literal><operator pos:start="197:51" pos:end="197:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:57"><expr pos:start="199:13" pos:end="199:56"><name pos:start="199:13" pos:end="199:37"><name pos:start="199:13" pos:end="199:21">video_enc</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:34">rc_override</name><index pos:start="199:35" pos:end="199:37">[<expr pos:start="199:36" pos:end="199:36"><name pos:start="199:36" pos:end="199:36">i</name></expr>]</index></name><operator pos:start="199:38" pos:end="199:38">.</operator><name pos:start="199:39" pos:end="199:49">start_frame</name><operator pos:start="199:50" pos:end="199:50">=</operator> <name pos:start="199:52" pos:end="199:56">start</name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:55"><expr pos:start="201:13" pos:end="201:54"><name pos:start="201:13" pos:end="201:37"><name pos:start="201:13" pos:end="201:21">video_enc</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:34">rc_override</name><index pos:start="201:35" pos:end="201:37">[<expr pos:start="201:36" pos:end="201:36"><name pos:start="201:36" pos:end="201:36">i</name></expr>]</index></name><operator pos:start="201:38" pos:end="201:38">.</operator><name pos:start="201:39" pos:end="201:47">end_frame</name>  <operator pos:start="201:50" pos:end="201:50">=</operator> <name pos:start="201:52" pos:end="201:54">end</name></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="217:13"><if pos:start="203:13" pos:end="209:13">if<condition pos:start="203:15" pos:end="203:19">(<expr pos:start="203:16" pos:end="203:18"><name pos:start="203:16" pos:end="203:16">q</name><operator pos:start="203:17" pos:end="203:17">&gt;</operator><literal type="number" pos:start="203:18" pos:end="203:18">0</literal></expr>)</condition><block pos:start="203:20" pos:end="209:13">{<block_content pos:start="205:17" pos:end="207:62">

                <expr_stmt pos:start="205:17" pos:end="205:52"><expr pos:start="205:17" pos:end="205:51"><name pos:start="205:17" pos:end="205:41"><name pos:start="205:17" pos:end="205:25">video_enc</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:38">rc_override</name><index pos:start="205:39" pos:end="205:41">[<expr pos:start="205:40" pos:end="205:40"><name pos:start="205:40" pos:end="205:40">i</name></expr>]</index></name><operator pos:start="205:42" pos:end="205:42">.</operator><name pos:start="205:43" pos:end="205:48">qscale</name><operator pos:start="205:49" pos:end="205:49">=</operator> <name pos:start="205:51" pos:end="205:51">q</name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:62"><expr pos:start="207:17" pos:end="207:61"><name pos:start="207:17" pos:end="207:41"><name pos:start="207:17" pos:end="207:25">video_enc</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:38">rc_override</name><index pos:start="207:39" pos:end="207:41">[<expr pos:start="207:40" pos:end="207:40"><name pos:start="207:40" pos:end="207:40">i</name></expr>]</index></name><operator pos:start="207:42" pos:end="207:42">.</operator><name pos:start="207:43" pos:end="207:56">quality_factor</name><operator pos:start="207:57" pos:end="207:57">=</operator> <literal type="number" pos:start="207:59" pos:end="207:61">1.0</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="211:13" pos:end="217:13">else<block pos:start="211:17" pos:end="217:13">{<block_content pos:start="213:17" pos:end="215:67">

                <expr_stmt pos:start="213:17" pos:end="213:52"><expr pos:start="213:17" pos:end="213:51"><name pos:start="213:17" pos:end="213:41"><name pos:start="213:17" pos:end="213:25">video_enc</name><operator pos:start="213:26" pos:end="213:27">-&gt;</operator><name pos:start="213:28" pos:end="213:38">rc_override</name><index pos:start="213:39" pos:end="213:41">[<expr pos:start="213:40" pos:end="213:40"><name pos:start="213:40" pos:end="213:40">i</name></expr>]</index></name><operator pos:start="213:42" pos:end="213:42">.</operator><name pos:start="213:43" pos:end="213:48">qscale</name><operator pos:start="213:49" pos:end="213:49">=</operator> <literal type="number" pos:start="213:51" pos:end="213:51">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="215:17" pos:end="215:67"><expr pos:start="215:17" pos:end="215:66"><name pos:start="215:17" pos:end="215:41"><name pos:start="215:17" pos:end="215:25">video_enc</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:38">rc_override</name><index pos:start="215:39" pos:end="215:41">[<expr pos:start="215:40" pos:end="215:40"><name pos:start="215:40" pos:end="215:40">i</name></expr>]</index></name><operator pos:start="215:42" pos:end="215:42">.</operator><name pos:start="215:43" pos:end="215:56">quality_factor</name><operator pos:start="215:57" pos:end="215:57">=</operator> <operator pos:start="215:59" pos:end="215:59">-</operator><name pos:start="215:60" pos:end="215:60">q</name><operator pos:start="215:61" pos:end="215:61">/</operator><literal type="number" pos:start="215:62" pos:end="215:66">100.0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:30"><expr pos:start="219:13" pos:end="219:29"><name pos:start="219:13" pos:end="219:13">p</name><operator pos:start="219:14" pos:end="219:14">=</operator> <call pos:start="219:16" pos:end="219:29"><name pos:start="219:16" pos:end="219:21">strchr</name><argument_list pos:start="219:22" pos:end="219:29">(<argument pos:start="219:23" pos:end="219:23"><expr pos:start="219:23" pos:end="219:23"><name pos:start="219:23" pos:end="219:23">p</name></expr></argument>, <argument pos:start="219:26" pos:end="219:28"><expr pos:start="219:26" pos:end="219:28"><literal type="char" pos:start="219:26" pos:end="219:28">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="221:13" pos:end="221:22"><if pos:start="221:13" pos:end="221:22">if<condition pos:start="221:15" pos:end="221:17">(<expr pos:start="221:16" pos:end="221:16"><name pos:start="221:16" pos:end="221:16">p</name></expr>)</condition><block type="pseudo" pos:start="221:19" pos:end="221:22"><block_content pos:start="221:19" pos:end="221:22"> <expr_stmt pos:start="221:19" pos:end="221:22"><expr pos:start="221:19" pos:end="221:21"><name pos:start="221:19" pos:end="221:19">p</name><operator pos:start="221:20" pos:end="221:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="225:9" pos:end="225:39"><expr pos:start="225:9" pos:end="225:38"><name pos:start="225:9" pos:end="225:36"><name pos:start="225:9" pos:end="225:17">video_enc</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:36">rc_override_count</name></name><operator pos:start="225:37" pos:end="225:37">=</operator><name pos:start="225:38" pos:end="225:38">i</name></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="229:83"><if pos:start="227:9" pos:end="229:83">if <condition pos:start="227:12" pos:end="227:52">(<expr pos:start="227:13" pos:end="227:51"><operator pos:start="227:13" pos:end="227:13">!</operator><name pos:start="227:14" pos:end="227:51"><name pos:start="227:14" pos:end="227:22">video_enc</name><operator pos:start="227:23" pos:end="227:24">-&gt;</operator><name pos:start="227:25" pos:end="227:51">rc_initial_buffer_occupancy</name></name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:83"><block_content pos:start="229:13" pos:end="229:83">

            <expr_stmt pos:start="229:13" pos:end="229:83"><expr pos:start="229:13" pos:end="229:82"><name pos:start="229:13" pos:end="229:50"><name pos:start="229:13" pos:end="229:21">video_enc</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:50">rc_initial_buffer_occupancy</name></name> <operator pos:start="229:52" pos:end="229:52">=</operator> <name pos:start="229:54" pos:end="229:78"><name pos:start="229:54" pos:end="229:62">video_enc</name><operator pos:start="229:63" pos:end="229:64">-&gt;</operator><name pos:start="229:65" pos:end="229:78">rc_buffer_size</name></name><operator pos:start="229:79" pos:end="229:79">*</operator><literal type="number" pos:start="229:80" pos:end="229:80">3</literal><operator pos:start="229:81" pos:end="229:81">/</operator><literal type="number" pos:start="229:82" pos:end="229:82">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:46"><expr pos:start="231:9" pos:end="231:45"><name pos:start="231:9" pos:end="231:31"><name pos:start="231:9" pos:end="231:17">video_enc</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:31">me_threshold</name></name><operator pos:start="231:32" pos:end="231:32">=</operator> <name pos:start="231:34" pos:end="231:45">me_threshold</name></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:62"><expr pos:start="233:9" pos:end="233:61"><name pos:start="233:9" pos:end="233:37"><name pos:start="233:9" pos:end="233:17">video_enc</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:37">intra_dc_precision</name></name><operator pos:start="233:38" pos:end="233:38">=</operator> <name pos:start="233:40" pos:end="233:57">intra_dc_precision</name> <operator pos:start="233:59" pos:end="233:59">-</operator> <literal type="number" pos:start="233:61" pos:end="233:61">8</literal></expr>;</expr_stmt>



        <if_stmt pos:start="237:9" pos:end="239:47"><if pos:start="237:9" pos:end="239:47">if <condition pos:start="237:12" pos:end="237:20">(<expr pos:start="237:13" pos:end="237:19"><name pos:start="237:13" pos:end="237:19">do_psnr</name></expr>)</condition><block type="pseudo" pos:start="239:13" pos:end="239:47"><block_content pos:start="239:13" pos:end="239:47">

            <expr_stmt pos:start="239:13" pos:end="239:47"><expr pos:start="239:13" pos:end="239:46"><name pos:start="239:13" pos:end="239:28"><name pos:start="239:13" pos:end="239:21">video_enc</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:28">flags</name></name><operator pos:start="239:29" pos:end="239:30">|=</operator> <name pos:start="239:32" pos:end="239:46">CODEC_FLAG_PSNR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="243:9" pos:end="243:27">/* two pass mode */</comment>

        <if_stmt pos:start="245:9" pos:end="257:9"><if pos:start="245:9" pos:end="257:9">if <condition pos:start="245:12" pos:end="245:20">(<expr pos:start="245:13" pos:end="245:19"><name pos:start="245:13" pos:end="245:19">do_pass</name></expr>)</condition> <block pos:start="245:22" pos:end="257:9">{<block_content pos:start="247:13" pos:end="255:13">

            <if_stmt pos:start="247:13" pos:end="255:13"><if pos:start="247:13" pos:end="251:13">if <condition pos:start="247:16" pos:end="247:29">(<expr pos:start="247:17" pos:end="247:28"><name pos:start="247:17" pos:end="247:23">do_pass</name> <operator pos:start="247:25" pos:end="247:26">==</operator> <literal type="number" pos:start="247:28" pos:end="247:28">1</literal></expr>)</condition> <block pos:start="247:31" pos:end="251:13">{<block_content pos:start="249:17" pos:end="249:53">

                <expr_stmt pos:start="249:17" pos:end="249:53"><expr pos:start="249:17" pos:end="249:52"><name pos:start="249:17" pos:end="249:32"><name pos:start="249:17" pos:end="249:25">video_enc</name><operator pos:start="249:26" pos:end="249:27">-&gt;</operator><name pos:start="249:28" pos:end="249:32">flags</name></name> <operator pos:start="249:34" pos:end="249:35">|=</operator> <name pos:start="249:37" pos:end="249:52">CODEC_FLAG_PASS1</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="251:15" pos:end="255:13">else <block pos:start="251:20" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:53">

                <expr_stmt pos:start="253:17" pos:end="253:53"><expr pos:start="253:17" pos:end="253:52"><name pos:start="253:17" pos:end="253:32"><name pos:start="253:17" pos:end="253:25">video_enc</name><operator pos:start="253:26" pos:end="253:27">-&gt;</operator><name pos:start="253:28" pos:end="253:32">flags</name></name> <operator pos:start="253:34" pos:end="253:35">|=</operator> <name pos:start="253:37" pos:end="253:52">CODEC_FLAG_PASS2</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="261:9" pos:end="263:71"><if pos:start="261:9" pos:end="263:71">if <condition pos:start="261:12" pos:end="261:30">(<expr pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:29">forced_key_frames</name></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:71"><block_content pos:start="263:13" pos:end="263:71">

            <expr_stmt pos:start="263:13" pos:end="263:71"><expr pos:start="263:13" pos:end="263:70"><call pos:start="263:13" pos:end="263:70"><name pos:start="263:13" pos:end="263:35">parse_forced_key_frames</name><argument_list pos:start="263:36" pos:end="263:70">(<argument pos:start="263:37" pos:end="263:53"><expr pos:start="263:37" pos:end="263:53"><name pos:start="263:37" pos:end="263:53">forced_key_frames</name></expr></argument>, <argument pos:start="263:56" pos:end="263:58"><expr pos:start="263:56" pos:end="263:58"><name pos:start="263:56" pos:end="263:58">ost</name></expr></argument>, <argument pos:start="263:61" pos:end="263:69"><expr pos:start="263:61" pos:end="263:69"><name pos:start="263:61" pos:end="263:69">video_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="267:5" pos:end="273:5"><if pos:start="267:5" pos:end="273:5">if <condition pos:start="267:8" pos:end="267:23">(<expr pos:start="267:9" pos:end="267:22"><name pos:start="267:9" pos:end="267:22">video_language</name></expr>)</condition> <block pos:start="267:25" pos:end="273:5">{<block_content pos:start="269:9" pos:end="271:34">

        <expr_stmt pos:start="269:9" pos:end="269:71"><expr pos:start="269:9" pos:end="269:70"><call pos:start="269:9" pos:end="269:70"><name pos:start="269:9" pos:end="269:24">av_metadata_set2</name><argument_list pos:start="269:25" pos:end="269:70">(<argument pos:start="269:26" pos:end="269:38"><expr pos:start="269:26" pos:end="269:38"><operator pos:start="269:26" pos:end="269:26">&amp;</operator><name pos:start="269:27" pos:end="269:38"><name pos:start="269:27" pos:end="269:28">st</name><operator pos:start="269:29" pos:end="269:30">-&gt;</operator><name pos:start="269:31" pos:end="269:38">metadata</name></name></expr></argument>, <argument pos:start="269:41" pos:end="269:50"><expr pos:start="269:41" pos:end="269:50"><literal type="string" pos:start="269:41" pos:end="269:50">"language"</literal></expr></argument>, <argument pos:start="269:53" pos:end="269:66"><expr pos:start="269:53" pos:end="269:66"><name pos:start="269:53" pos:end="269:66">video_language</name></expr></argument>, <argument pos:start="269:69" pos:end="269:69"><expr pos:start="269:69" pos:end="269:69"><literal type="number" pos:start="269:69" pos:end="269:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:34"><expr pos:start="271:9" pos:end="271:33"><call pos:start="271:9" pos:end="271:33"><name pos:start="271:9" pos:end="271:16">av_freep</name><argument_list pos:start="271:17" pos:end="271:33">(<argument pos:start="271:18" pos:end="271:32"><expr pos:start="271:18" pos:end="271:32"><operator pos:start="271:18" pos:end="271:18">&amp;</operator><name pos:start="271:19" pos:end="271:32">video_language</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="277:5" pos:end="277:35">/* reset some key parameters */</comment>

    <expr_stmt pos:start="279:5" pos:end="279:22"><expr pos:start="279:5" pos:end="279:21"><name pos:start="279:5" pos:end="279:17">video_disable</name> <operator pos:start="279:19" pos:end="279:19">=</operator> <literal type="number" pos:start="279:21" pos:end="279:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:32"><expr pos:start="281:5" pos:end="281:31"><call pos:start="281:5" pos:end="281:31"><name pos:start="281:5" pos:end="281:12">av_freep</name><argument_list pos:start="281:13" pos:end="281:31">(<argument pos:start="281:14" pos:end="281:30"><expr pos:start="281:14" pos:end="281:30"><operator pos:start="281:14" pos:end="281:14">&amp;</operator><name pos:start="281:15" pos:end="281:30">video_codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:33"><expr pos:start="283:5" pos:end="283:32"><call pos:start="283:5" pos:end="283:32"><name pos:start="283:5" pos:end="283:12">av_freep</name><argument_list pos:start="283:13" pos:end="283:32">(<argument pos:start="283:14" pos:end="283:31"><expr pos:start="283:14" pos:end="283:31"><operator pos:start="283:14" pos:end="283:14">&amp;</operator><name pos:start="283:15" pos:end="283:31">forced_key_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:26"><expr pos:start="285:5" pos:end="285:25"><name pos:start="285:5" pos:end="285:21">video_stream_copy</name> <operator pos:start="285:23" pos:end="285:23">=</operator> <literal type="number" pos:start="285:25" pos:end="285:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:33"><expr pos:start="287:5" pos:end="287:32"><name pos:start="287:5" pos:end="287:17">frame_pix_fmt</name> <operator pos:start="287:19" pos:end="287:19">=</operator> <name pos:start="287:21" pos:end="287:32">PIX_FMT_NONE</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
