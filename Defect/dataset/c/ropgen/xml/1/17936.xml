<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17936.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">epaf_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">le</name></decl>, <decl pos:start="5:13" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:13" pos:end="5:23">sample_rate</name></decl>, <decl pos:start="5:26" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:30">codec</name></decl>, <decl pos:start="5:33" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:40">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:24"><expr pos:start="11:5" pos:end="11:23"><call pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:13">avio_skip</name><argument_list pos:start="11:14" pos:end="11:23">(<argument pos:start="11:15" pos:end="11:19"><expr pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:19"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:19">pb</name></name></expr></argument>, <argument pos:start="11:22" pos:end="11:22"><expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:35"><if pos:start="13:5" pos:end="15:35">if <condition pos:start="13:8" pos:end="13:25">(<expr pos:start="13:9" pos:end="13:24"><call pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:17">avio_rl32</name><argument_list pos:start="13:18" pos:end="13:24">(<argument pos:start="13:19" pos:end="13:23"><expr pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:23"><name pos:start="13:19" pos:end="13:19">s</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:23">pb</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:35"><block_content pos:start="15:9" pos:end="15:35">

        <return pos:start="15:9" pos:end="15:35">return <expr pos:start="15:16" pos:end="15:34"><name pos:start="15:16" pos:end="15:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:6">le</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <call pos:start="19:10" pos:end="19:25"><name pos:start="19:10" pos:end="19:18">avio_rl32</name><argument_list pos:start="19:19" pos:end="19:25">(<argument pos:start="19:20" pos:end="19:24"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">s</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:24">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:10">le</name> <operator pos:start="21:12" pos:end="21:13">&amp;&amp;</operator> <name pos:start="21:15" pos:end="21:16">le</name> <operator pos:start="21:18" pos:end="21:19">!=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="43:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:11">(<expr pos:start="27:9" pos:end="27:10"><name pos:start="27:9" pos:end="27:10">le</name></expr>)</condition> <block pos:start="27:13" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:39">

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:19">sample_rate</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:38"><name pos:start="29:23" pos:end="29:31">avio_rl32</name><argument_list pos:start="29:32" pos:end="29:38">(<argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:39"><expr pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:13">codec</name>       <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:38"><name pos:start="31:23" pos:end="31:31">avio_rl32</name><argument_list pos:start="31:32" pos:end="31:38">(<argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:33">s</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:16">channels</name>    <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:38"><name pos:start="33:23" pos:end="33:31">avio_rl32</name><argument_list pos:start="33:32" pos:end="33:38">(<argument pos:start="33:33" pos:end="33:37"><expr pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:37"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="43:5">else <block pos:start="35:12" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:39">

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:19">sample_rate</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:38"><name pos:start="37:23" pos:end="37:31">avio_rb32</name><argument_list pos:start="37:32" pos:end="37:38">(<argument pos:start="37:33" pos:end="37:37"><expr pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:13">codec</name>       <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:38"><name pos:start="39:23" pos:end="39:31">avio_rb32</name><argument_list pos:start="39:32" pos:end="39:38">(<argument pos:start="39:33" pos:end="39:37"><expr pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:37"><name pos:start="39:33" pos:end="39:33">s</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:16">channels</name>    <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:38"><name pos:start="41:23" pos:end="41:31">avio_rb32</name><argument_list pos:start="41:32" pos:end="41:38">(<argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:33">s</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:37">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:35"><if pos:start="47:5" pos:end="49:35">if <condition pos:start="47:8" pos:end="47:34">(<expr pos:start="47:9" pos:end="47:33"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:17">channels</name> <operator pos:start="47:19" pos:end="47:20">||</operator> <operator pos:start="47:22" pos:end="47:22">!</operator><name pos:start="47:23" pos:end="47:33">sample_rate</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:35"><block_content pos:start="49:9" pos:end="49:35">

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:6">st</name> <operator pos:start="53:8" pos:end="53:8">=</operator> <call pos:start="53:10" pos:end="53:37"><name pos:start="53:10" pos:end="53:28">avformat_new_stream</name><argument_list pos:start="53:29" pos:end="53:37">(<argument pos:start="53:30" pos:end="53:30"><expr pos:start="53:30" pos:end="53:30"><name pos:start="53:30" pos:end="53:30">s</name></expr></argument>, <argument pos:start="53:33" pos:end="53:36"><expr pos:start="53:33" pos:end="53:36"><name pos:start="53:33" pos:end="53:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:31"><if pos:start="55:5" pos:end="57:31">if <condition pos:start="55:8" pos:end="55:12">(<expr pos:start="55:9" pos:end="55:11"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:11">st</name></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:31"><block_content pos:start="57:9" pos:end="57:31">

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:6">st</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:16">codecpar</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:28">codec_type</name></name>  <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:41"><expr pos:start="63:5" pos:end="63:40"><name pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:6">st</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:16">codecpar</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:26">channels</name></name>    <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:40">channels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:44"><expr pos:start="65:5" pos:end="65:43"><name pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:6">st</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:16">codecpar</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:29">sample_rate</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:43">sample_rate</name></expr>;</expr_stmt>

    <switch pos:start="67:5" pos:end="89:5">switch <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:17">codec</name></expr>)</condition> <block pos:start="67:20" pos:end="89:5">{<block_content pos:start="69:5" pos:end="87:35">

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">0</literal></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:84"><expr pos:start="71:9" pos:end="71:83"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:10">st</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">codecpar</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:30">codec_id</name></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <ternary pos:start="71:34" pos:end="71:83"><condition pos:start="71:34" pos:end="71:37"><expr pos:start="71:34" pos:end="71:35"><name pos:start="71:34" pos:end="71:35">le</name></expr> ?</condition><then pos:start="71:39" pos:end="71:59"> <expr pos:start="71:39" pos:end="71:59"><name pos:start="71:39" pos:end="71:59">AV_CODEC_ID_PCM_S16LE</name></expr> </then><else pos:start="71:61" pos:end="71:83">: <expr pos:start="71:63" pos:end="71:83"><name pos:start="71:63" pos:end="71:83">AV_CODEC_ID_PCM_S16BE</name></expr></else></ternary></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:11">case <expr pos:start="75:10" pos:end="75:10"><literal type="number" pos:start="75:10" pos:end="75:10">2</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:52"><expr pos:start="77:9" pos:end="77:51"><name pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:10">st</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">codecpar</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:30">codec_id</name></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <name pos:start="77:34" pos:end="77:51">AV_CODEC_ID_PCM_S8</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:11">case <expr pos:start="81:10" pos:end="81:10"><literal type="number" pos:start="81:10" pos:end="81:10">1</literal></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:60"><expr pos:start="83:9" pos:end="83:59"><call pos:start="83:9" pos:end="83:59"><name pos:start="83:9" pos:end="83:29">avpriv_request_sample</name><argument_list pos:start="83:30" pos:end="83:59">(<argument pos:start="83:31" pos:end="83:31"><expr pos:start="83:31" pos:end="83:31"><name pos:start="83:31" pos:end="83:31">s</name></expr></argument>, <argument pos:start="83:34" pos:end="83:58"><expr pos:start="83:34" pos:end="83:58"><literal type="string" pos:start="83:34" pos:end="83:58">"24-bit Paris PCM format"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <default pos:start="85:5" pos:end="85:12">default:</default>

        <return pos:start="87:9" pos:end="87:35">return <expr pos:start="87:16" pos:end="87:34"><name pos:start="87:16" pos:end="87:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="93:5" pos:end="93:89"><expr pos:start="93:5" pos:end="93:88"><name pos:start="93:5" pos:end="93:39"><name pos:start="93:5" pos:end="93:6">st</name><operator pos:start="93:7" pos:end="93:8">-&gt;</operator><name pos:start="93:9" pos:end="93:16">codecpar</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:39">bits_per_coded_sample</name></name> <operator pos:start="93:41" pos:end="93:41">=</operator> <call pos:start="93:43" pos:end="93:88"><name pos:start="93:43" pos:end="93:64">av_get_bits_per_sample</name><argument_list pos:start="93:65" pos:end="93:88">(<argument pos:start="93:66" pos:end="93:87"><expr pos:start="93:66" pos:end="93:87"><name pos:start="93:66" pos:end="93:87"><name pos:start="93:66" pos:end="93:67">st</name><operator pos:start="93:68" pos:end="93:69">-&gt;</operator><name pos:start="93:70" pos:end="93:77">codecpar</name><operator pos:start="93:78" pos:end="93:79">-&gt;</operator><name pos:start="93:80" pos:end="93:87">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:97"><expr pos:start="95:5" pos:end="95:96"><name pos:start="95:5" pos:end="95:29"><name pos:start="95:5" pos:end="95:6">st</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:16">codecpar</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:29">block_align</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <name pos:start="95:33" pos:end="95:67"><name pos:start="95:33" pos:end="95:34">st</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:44">codecpar</name><operator pos:start="95:45" pos:end="95:46">-&gt;</operator><name pos:start="95:47" pos:end="95:67">bits_per_coded_sample</name></name> <operator pos:start="95:69" pos:end="95:69">*</operator> <name pos:start="95:71" pos:end="95:92"><name pos:start="95:71" pos:end="95:72">st</name><operator pos:start="95:73" pos:end="95:74">-&gt;</operator><name pos:start="95:75" pos:end="95:82">codecpar</name><operator pos:start="95:83" pos:end="95:84">-&gt;</operator><name pos:start="95:85" pos:end="95:92">channels</name></name> <operator pos:start="95:94" pos:end="95:94">/</operator> <literal type="number" pos:start="95:96" pos:end="95:96">8</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:62"><expr pos:start="99:5" pos:end="99:61"><call pos:start="99:5" pos:end="99:61"><name pos:start="99:5" pos:end="99:23">avpriv_set_pts_info</name><argument_list pos:start="99:24" pos:end="99:61">(<argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">st</name></expr></argument>, <argument pos:start="99:29" pos:end="99:30"><expr pos:start="99:29" pos:end="99:30"><literal type="number" pos:start="99:29" pos:end="99:30">64</literal></expr></argument>, <argument pos:start="99:33" pos:end="99:33"><expr pos:start="99:33" pos:end="99:33"><literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr></argument>, <argument pos:start="99:36" pos:end="99:60"><expr pos:start="99:36" pos:end="99:60"><name pos:start="99:36" pos:end="99:60"><name pos:start="99:36" pos:end="99:37">st</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:47">codecpar</name><operator pos:start="99:48" pos:end="99:49">-&gt;</operator><name pos:start="99:50" pos:end="99:60">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="103:5" pos:end="105:35"><if pos:start="103:5" pos:end="105:35">if <condition pos:start="103:8" pos:end="103:35">(<expr pos:start="103:9" pos:end="103:34"><call pos:start="103:9" pos:end="103:30"><name pos:start="103:9" pos:end="103:17">avio_skip</name><argument_list pos:start="103:18" pos:end="103:30">(<argument pos:start="103:19" pos:end="103:23"><expr pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:23"><name pos:start="103:19" pos:end="103:19">s</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:23">pb</name></name></expr></argument>, <argument pos:start="103:26" pos:end="103:29"><expr pos:start="103:26" pos:end="103:29"><literal type="number" pos:start="103:26" pos:end="103:29">2024</literal></expr></argument>)</argument_list></call> <operator pos:start="103:32" pos:end="103:32">&lt;</operator> <literal type="number" pos:start="103:34" pos:end="103:34">0</literal></expr>)</condition><block type="pseudo" pos:start="105:9" pos:end="105:35"><block_content pos:start="105:9" pos:end="105:35">

        <return pos:start="105:9" pos:end="105:35">return <expr pos:start="105:16" pos:end="105:34"><name pos:start="105:16" pos:end="105:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
