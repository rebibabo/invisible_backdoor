<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8027.c" pos:tabs="8"><function pos:start="1:1" pos:end="78:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:34">mpeg4_encode_dc</name><parameter_list pos:start="1:35" pos:end="1:71">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:48">PutBitContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:63"><decl pos:start="1:55" pos:end="1:63"><type pos:start="1:55" pos:end="1:63"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:63">level</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="78:1">{<block_content pos:start="8:5" pos:end="77:0">

<cpp:if pos:start="5:1" pos:end="5:5">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:5"><literal type="number" pos:start="5:5" pos:end="5:5">1</literal></expr></cpp:if>


    <expr_stmt pos:start="8:5" pos:end="8:15"><expr pos:start="8:5" pos:end="8:14"><name pos:start="8:5" pos:end="8:9">level</name><operator pos:start="8:10" pos:end="8:11">+=</operator><literal type="number" pos:start="8:12" pos:end="8:14">256</literal></expr>;</expr_stmt>

    <if_stmt pos:start="10:5" pos:end="25:0"><if pos:start="10:5" pos:end="16:5">if <condition pos:start="10:8" pos:end="10:14">(<expr pos:start="10:9" pos:end="10:13"><name pos:start="10:9" pos:end="10:9">n</name> <operator pos:start="10:11" pos:end="10:11">&lt;</operator> <literal type="number" pos:start="10:13" pos:end="10:13">4</literal></expr>)</condition> <block pos:start="10:16" pos:end="16:5">{<block_content pos:start="14:9" pos:end="14:73">

        <comment type="block" pos:start="12:9" pos:end="12:23">/* luminance */</comment>

        <expr_stmt pos:start="14:9" pos:end="14:73"><expr pos:start="14:9" pos:end="14:72"><call pos:start="14:9" pos:end="14:72"><name pos:start="14:9" pos:end="14:16">put_bits</name><argument_list pos:start="14:17" pos:end="14:72">(<argument pos:start="14:18" pos:end="14:18"><expr pos:start="14:18" pos:end="14:18"><name pos:start="14:18" pos:end="14:18">s</name></expr></argument>, <argument pos:start="14:21" pos:end="14:44"><expr pos:start="14:21" pos:end="14:44"><name pos:start="14:21" pos:end="14:44"><name pos:start="14:21" pos:end="14:37">uni_DCtab_lum_len</name><index pos:start="14:38" pos:end="14:44">[<expr pos:start="14:39" pos:end="14:43"><name pos:start="14:39" pos:end="14:43">level</name></expr>]</index></name></expr></argument>, <argument pos:start="14:47" pos:end="14:71"><expr pos:start="14:47" pos:end="14:71"><name pos:start="14:47" pos:end="14:71"><name pos:start="14:47" pos:end="14:64">uni_DCtab_lum_bits</name><index pos:start="14:65" pos:end="14:71">[<expr pos:start="14:66" pos:end="14:70"><name pos:start="14:66" pos:end="14:70">level</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="16:7" pos:end="25:0">else <block pos:start="16:12" pos:end="25:0">{<block_content pos:start="20:9" pos:end="20:77">

        <comment type="block" pos:start="18:9" pos:end="18:25">/* chrominance */</comment>

        <expr_stmt pos:start="20:9" pos:end="20:77"><expr pos:start="20:9" pos:end="20:76"><call pos:start="20:9" pos:end="20:76"><name pos:start="20:9" pos:end="20:16">put_bits</name><argument_list pos:start="20:17" pos:end="20:76">(<argument pos:start="20:18" pos:end="20:18"><expr pos:start="20:18" pos:end="20:18"><name pos:start="20:18" pos:end="20:18">s</name></expr></argument>, <argument pos:start="20:21" pos:end="20:46"><expr pos:start="20:21" pos:end="20:46"><name pos:start="20:21" pos:end="20:46"><name pos:start="20:21" pos:end="20:39">uni_DCtab_chrom_len</name><index pos:start="20:40" pos:end="20:46">[<expr pos:start="20:41" pos:end="20:45"><name pos:start="20:41" pos:end="20:45">level</name></expr>]</index></name></expr></argument>, <argument pos:start="20:49" pos:end="20:75"><expr pos:start="20:49" pos:end="20:75"><name pos:start="20:49" pos:end="20:75"><name pos:start="20:49" pos:end="20:68">uni_DCtab_chrom_bits</name><index pos:start="20:69" pos:end="20:75">[<expr pos:start="20:70" pos:end="20:74"><name pos:start="20:70" pos:end="20:74">level</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:else pos:start="24:1" pos:end="24:5">#<cpp:directive pos:start="24:2" pos:end="24:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="26:5" pos:end="26:16"><decl pos:start="26:5" pos:end="26:12"><type pos:start="26:5" pos:end="26:7"><name pos:start="26:5" pos:end="26:7">int</name></type> <name pos:start="26:9" pos:end="26:12">size</name></decl>, <decl pos:start="26:15" pos:end="26:15"><type ref="prev" pos:start="26:5" pos:end="26:7"/><name pos:start="26:15" pos:end="26:15">v</name></decl>;</decl_stmt>

    <comment type="block" pos:start="28:5" pos:end="28:29">/* find number of bits */</comment>

    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:8">size</name> <operator pos:start="30:10" pos:end="30:10">=</operator> <literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="32:5" pos:end="32:19"><expr pos:start="32:5" pos:end="32:18"><name pos:start="32:5" pos:end="32:5">v</name> <operator pos:start="32:7" pos:end="32:7">=</operator> <call pos:start="32:9" pos:end="32:18"><name pos:start="32:9" pos:end="32:11">abs</name><argument_list pos:start="32:12" pos:end="32:18">(<argument pos:start="32:13" pos:end="32:17"><expr pos:start="32:13" pos:end="32:17"><name pos:start="32:13" pos:end="32:17">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="34:5" pos:end="40:5">while <condition pos:start="34:11" pos:end="34:13">(<expr pos:start="34:12" pos:end="34:12"><name pos:start="34:12" pos:end="34:12">v</name></expr>)</condition> <block pos:start="34:15" pos:end="40:5">{<block_content pos:start="36:9" pos:end="38:15">

        <expr_stmt pos:start="36:9" pos:end="36:16"><expr pos:start="36:9" pos:end="36:15"><name pos:start="36:9" pos:end="36:9">v</name> <operator pos:start="36:11" pos:end="36:13">&gt;&gt;=</operator> <literal type="number" pos:start="36:15" pos:end="36:15">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="38:9" pos:end="38:15"><expr pos:start="38:9" pos:end="38:14"><name pos:start="38:9" pos:end="38:12">size</name><operator pos:start="38:13" pos:end="38:14">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="44:5" pos:end="56:5"><if pos:start="44:5" pos:end="50:5">if <condition pos:start="44:8" pos:end="44:14">(<expr pos:start="44:9" pos:end="44:13"><name pos:start="44:9" pos:end="44:9">n</name> <operator pos:start="44:11" pos:end="44:11">&lt;</operator> <literal type="number" pos:start="44:13" pos:end="44:13">4</literal></expr>)</condition> <block pos:start="44:16" pos:end="50:5">{<block_content pos:start="48:9" pos:end="48:65">

        <comment type="block" pos:start="46:9" pos:end="46:23">/* luminance */</comment>

        <expr_stmt pos:start="48:9" pos:end="48:65"><expr pos:start="48:9" pos:end="48:64"><call pos:start="48:9" pos:end="48:64"><name pos:start="48:9" pos:end="48:16">put_bits</name><argument_list pos:start="48:17" pos:end="48:64">(<argument pos:start="48:18" pos:end="48:23"><expr pos:start="48:18" pos:end="48:23"><operator pos:start="48:18" pos:end="48:18">&amp;</operator><name pos:start="48:19" pos:end="48:23"><name pos:start="48:19" pos:end="48:19">s</name><operator pos:start="48:20" pos:end="48:21">-&gt;</operator><name pos:start="48:22" pos:end="48:23">pb</name></name></expr></argument>, <argument pos:start="48:26" pos:end="48:43"><expr pos:start="48:26" pos:end="48:43"><name pos:start="48:26" pos:end="48:43"><name pos:start="48:26" pos:end="48:34">DCtab_lum</name><index pos:start="48:35" pos:end="48:40">[<expr pos:start="48:36" pos:end="48:39"><name pos:start="48:36" pos:end="48:39">size</name></expr>]</index><index pos:start="48:41" pos:end="48:43">[<expr pos:start="48:42" pos:end="48:42"><literal type="number" pos:start="48:42" pos:end="48:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="48:46" pos:end="48:63"><expr pos:start="48:46" pos:end="48:63"><name pos:start="48:46" pos:end="48:63"><name pos:start="48:46" pos:end="48:54">DCtab_lum</name><index pos:start="48:55" pos:end="48:60">[<expr pos:start="48:56" pos:end="48:59"><name pos:start="48:56" pos:end="48:59">size</name></expr>]</index><index pos:start="48:61" pos:end="48:63">[<expr pos:start="48:62" pos:end="48:62"><literal type="number" pos:start="48:62" pos:end="48:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="50:7" pos:end="56:5">else <block pos:start="50:12" pos:end="56:5">{<block_content pos:start="54:9" pos:end="54:69">

        <comment type="block" pos:start="52:9" pos:end="52:25">/* chrominance */</comment>

        <expr_stmt pos:start="54:9" pos:end="54:69"><expr pos:start="54:9" pos:end="54:68"><call pos:start="54:9" pos:end="54:68"><name pos:start="54:9" pos:end="54:16">put_bits</name><argument_list pos:start="54:17" pos:end="54:68">(<argument pos:start="54:18" pos:end="54:23"><expr pos:start="54:18" pos:end="54:23"><operator pos:start="54:18" pos:end="54:18">&amp;</operator><name pos:start="54:19" pos:end="54:23"><name pos:start="54:19" pos:end="54:19">s</name><operator pos:start="54:20" pos:end="54:21">-&gt;</operator><name pos:start="54:22" pos:end="54:23">pb</name></name></expr></argument>, <argument pos:start="54:26" pos:end="54:45"><expr pos:start="54:26" pos:end="54:45"><name pos:start="54:26" pos:end="54:45"><name pos:start="54:26" pos:end="54:36">DCtab_chrom</name><index pos:start="54:37" pos:end="54:42">[<expr pos:start="54:38" pos:end="54:41"><name pos:start="54:38" pos:end="54:41">size</name></expr>]</index><index pos:start="54:43" pos:end="54:45">[<expr pos:start="54:44" pos:end="54:44"><literal type="number" pos:start="54:44" pos:end="54:44">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="54:48" pos:end="54:67"><expr pos:start="54:48" pos:end="54:67"><name pos:start="54:48" pos:end="54:67"><name pos:start="54:48" pos:end="54:58">DCtab_chrom</name><index pos:start="54:59" pos:end="54:64">[<expr pos:start="54:60" pos:end="54:63"><name pos:start="54:60" pos:end="54:63">size</name></expr>]</index><index pos:start="54:65" pos:end="54:67">[<expr pos:start="54:66" pos:end="54:66"><literal type="number" pos:start="54:66" pos:end="54:66">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="60:5" pos:end="60:31">/* encode remaining bits */</comment>

    <if_stmt pos:start="62:5" pos:end="77:0"><if pos:start="62:5" pos:end="77:0">if <condition pos:start="62:8" pos:end="62:17">(<expr pos:start="62:9" pos:end="62:16"><name pos:start="62:9" pos:end="62:12">size</name> <operator pos:start="62:14" pos:end="62:14">&gt;</operator> <literal type="number" pos:start="62:16" pos:end="62:16">0</literal></expr>)</condition> <block pos:start="62:19" pos:end="77:0">{<block_content pos:start="64:9" pos:end="72:35">

        <if_stmt pos:start="64:9" pos:end="66:49"><if pos:start="64:9" pos:end="66:49">if <condition pos:start="64:12" pos:end="64:22">(<expr pos:start="64:13" pos:end="64:21"><name pos:start="64:13" pos:end="64:17">level</name> <operator pos:start="64:19" pos:end="64:19">&lt;</operator> <literal type="number" pos:start="64:21" pos:end="64:21">0</literal></expr>)</condition><block type="pseudo" pos:start="66:13" pos:end="66:49"><block_content pos:start="66:13" pos:end="66:49">

            <expr_stmt pos:start="66:13" pos:end="66:49"><expr pos:start="66:13" pos:end="66:48"><name pos:start="66:13" pos:end="66:17">level</name> <operator pos:start="66:19" pos:end="66:19">=</operator> <operator pos:start="66:21" pos:end="66:21">(</operator><operator pos:start="66:22" pos:end="66:22">-</operator><name pos:start="66:23" pos:end="66:27">level</name><operator pos:start="66:28" pos:end="66:28">)</operator> <operator pos:start="66:30" pos:end="66:30">^</operator> <operator pos:start="66:32" pos:end="66:32">(</operator><operator pos:start="66:33" pos:end="66:33">(</operator><literal type="number" pos:start="66:34" pos:end="66:34">1</literal> <operator pos:start="66:36" pos:end="66:37">&lt;&lt;</operator> <name pos:start="66:39" pos:end="66:42">size</name><operator pos:start="66:43" pos:end="66:43">)</operator> <operator pos:start="66:45" pos:end="66:45">-</operator> <literal type="number" pos:start="66:47" pos:end="66:47">1</literal><operator pos:start="66:48" pos:end="66:48">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="68:9" pos:end="68:38"><expr pos:start="68:9" pos:end="68:37"><call pos:start="68:9" pos:end="68:37"><name pos:start="68:9" pos:end="68:16">put_bits</name><argument_list pos:start="68:17" pos:end="68:37">(<argument pos:start="68:18" pos:end="68:23"><expr pos:start="68:18" pos:end="68:23"><operator pos:start="68:18" pos:end="68:18">&amp;</operator><name pos:start="68:19" pos:end="68:23"><name pos:start="68:19" pos:end="68:19">s</name><operator pos:start="68:20" pos:end="68:21">-&gt;</operator><name pos:start="68:22" pos:end="68:23">pb</name></name></expr></argument>, <argument pos:start="68:26" pos:end="68:29"><expr pos:start="68:26" pos:end="68:29"><name pos:start="68:26" pos:end="68:29">size</name></expr></argument>, <argument pos:start="68:32" pos:end="68:36"><expr pos:start="68:32" pos:end="68:36"><name pos:start="68:32" pos:end="68:36">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="70:9" pos:end="72:35"><if pos:start="70:9" pos:end="72:35">if <condition pos:start="70:12" pos:end="70:21">(<expr pos:start="70:13" pos:end="70:20"><name pos:start="70:13" pos:end="70:16">size</name> <operator pos:start="70:18" pos:end="70:18">&gt;</operator> <literal type="number" pos:start="70:20" pos:end="70:20">8</literal></expr>)</condition><block type="pseudo" pos:start="72:13" pos:end="72:35"><block_content pos:start="72:13" pos:end="72:35">

            <expr_stmt pos:start="72:13" pos:end="72:35"><expr pos:start="72:13" pos:end="72:34"><call pos:start="72:13" pos:end="72:34"><name pos:start="72:13" pos:end="72:20">put_bits</name><argument_list pos:start="72:21" pos:end="72:34">(<argument pos:start="72:22" pos:end="72:27"><expr pos:start="72:22" pos:end="72:27"><operator pos:start="72:22" pos:end="72:22">&amp;</operator><name pos:start="72:23" pos:end="72:27"><name pos:start="72:23" pos:end="72:23">s</name><operator pos:start="72:24" pos:end="72:25">-&gt;</operator><name pos:start="72:26" pos:end="72:27">pb</name></name></expr></argument>, <argument pos:start="72:30" pos:end="72:30"><expr pos:start="72:30" pos:end="72:30"><literal type="number" pos:start="72:30" pos:end="72:30">1</literal></expr></argument>, <argument pos:start="72:33" pos:end="72:33"><expr pos:start="72:33" pos:end="72:33"><literal type="number" pos:start="72:33" pos:end="72:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="76:1" pos:end="76:6">#<cpp:directive pos:start="76:2" pos:end="76:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function></unit>
