<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5728.c" pos:tabs="8"><function pos:start="1:1" pos:end="1134:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_dmfc0</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:45">TCGv</name></type> <name pos:start="1:47" pos:end="1:49">arg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:67"><decl pos:start="1:61" pos:end="1:67"><type pos:start="1:61" pos:end="1:67"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:67">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1134:1">{<block_content pos:start="5:5" pos:end="1132:37">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="15:5" pos:end="1120:5">switch <condition pos:start="15:12" pos:end="15:16">(<expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:15">reg</name></expr>)</condition> <block pos:start="15:18" pos:end="1120:5">{<block_content pos:start="17:5" pos:end="1118:31">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case>

        <switch pos:start="19:9" pos:end="65:9">switch <condition pos:start="19:16" pos:end="19:20">(<expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">sel</name></expr>)</condition> <block pos:start="19:22" pos:end="65:9">{<block_content pos:start="21:9" pos:end="63:35">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:68"><expr pos:start="23:13" pos:end="23:67"><call pos:start="23:13" pos:end="23:67"><name pos:start="23:13" pos:end="23:27">gen_mfc0_load32</name><argument_list pos:start="23:28" pos:end="23:67">(<argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">arg</name></expr></argument>, <argument pos:start="23:34" pos:end="23:66"><expr pos:start="23:34" pos:end="23:66"><call pos:start="23:34" pos:end="23:66"><name pos:start="23:34" pos:end="23:41">offsetof</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:54"><expr pos:start="23:43" pos:end="23:54"><name pos:start="23:43" pos:end="23:54">CPUMIPSState</name></expr></argument>, <argument pos:start="23:57" pos:end="23:65"><expr pos:start="23:57" pos:end="23:65"><name pos:start="23:57" pos:end="23:65">CP0_Index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:25"><expr pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:14">rn</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="string" pos:start="25:18" pos:end="25:24">"Index"</literal></expr>;</expr_stmt>


        <case pos:start="28:9" pos:end="28:15">case <expr pos:start="28:14" pos:end="28:14"><literal type="number" pos:start="28:14" pos:end="28:14">1</literal></expr>:</case>

            <expr_stmt pos:start="30:13" pos:end="30:48"><expr pos:start="30:13" pos:end="30:47"><call pos:start="30:13" pos:end="30:47"><name pos:start="30:13" pos:end="30:21">CP0_CHECK</name><argument_list pos:start="30:22" pos:end="30:47">(<argument pos:start="30:23" pos:end="30:46"><expr pos:start="30:23" pos:end="30:46"><name pos:start="30:23" pos:end="30:37"><name pos:start="30:23" pos:end="30:25">ctx</name><operator pos:start="30:26" pos:end="30:27">-&gt;</operator><name pos:start="30:28" pos:end="30:37">insn_flags</name></name> <operator pos:start="30:39" pos:end="30:39">&amp;</operator> <name pos:start="30:41" pos:end="30:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="32:13" pos:end="32:53"><expr pos:start="32:13" pos:end="32:52"><call pos:start="32:13" pos:end="32:52"><name pos:start="32:13" pos:end="32:38">gen_helper_mfc0_mvpcontrol</name><argument_list pos:start="32:39" pos:end="32:52">(<argument pos:start="32:40" pos:end="32:42"><expr pos:start="32:40" pos:end="32:42"><name pos:start="32:40" pos:end="32:42">arg</name></expr></argument>, <argument pos:start="32:45" pos:end="32:51"><expr pos:start="32:45" pos:end="32:51"><name pos:start="32:45" pos:end="32:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="34:13" pos:end="34:30"><expr pos:start="34:13" pos:end="34:29"><name pos:start="34:13" pos:end="34:14">rn</name> <operator pos:start="34:16" pos:end="34:16">=</operator> <literal type="string" pos:start="34:18" pos:end="34:29">"MVPControl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="38:13" pos:end="38:48"><expr pos:start="38:13" pos:end="38:47"><call pos:start="38:13" pos:end="38:47"><name pos:start="38:13" pos:end="38:21">CP0_CHECK</name><argument_list pos:start="38:22" pos:end="38:47">(<argument pos:start="38:23" pos:end="38:46"><expr pos:start="38:23" pos:end="38:46"><name pos:start="38:23" pos:end="38:37"><name pos:start="38:23" pos:end="38:25">ctx</name><operator pos:start="38:26" pos:end="38:27">-&gt;</operator><name pos:start="38:28" pos:end="38:37">insn_flags</name></name> <operator pos:start="38:39" pos:end="38:39">&amp;</operator> <name pos:start="38:41" pos:end="38:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="40:13" pos:end="40:51"><expr pos:start="40:13" pos:end="40:50"><call pos:start="40:13" pos:end="40:50"><name pos:start="40:13" pos:end="40:36">gen_helper_mfc0_mvpconf0</name><argument_list pos:start="40:37" pos:end="40:50">(<argument pos:start="40:38" pos:end="40:40"><expr pos:start="40:38" pos:end="40:40"><name pos:start="40:38" pos:end="40:40">arg</name></expr></argument>, <argument pos:start="40:43" pos:end="40:49"><expr pos:start="40:43" pos:end="40:49"><name pos:start="40:43" pos:end="40:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="42:13" pos:end="42:28"><expr pos:start="42:13" pos:end="42:27"><name pos:start="42:13" pos:end="42:14">rn</name> <operator pos:start="42:16" pos:end="42:16">=</operator> <literal type="string" pos:start="42:18" pos:end="42:27">"MVPConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="46:13" pos:end="46:48"><expr pos:start="46:13" pos:end="46:47"><call pos:start="46:13" pos:end="46:47"><name pos:start="46:13" pos:end="46:21">CP0_CHECK</name><argument_list pos:start="46:22" pos:end="46:47">(<argument pos:start="46:23" pos:end="46:46"><expr pos:start="46:23" pos:end="46:46"><name pos:start="46:23" pos:end="46:37"><name pos:start="46:23" pos:end="46:25">ctx</name><operator pos:start="46:26" pos:end="46:27">-&gt;</operator><name pos:start="46:28" pos:end="46:37">insn_flags</name></name> <operator pos:start="46:39" pos:end="46:39">&amp;</operator> <name pos:start="46:41" pos:end="46:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="48:13" pos:end="48:51"><expr pos:start="48:13" pos:end="48:50"><call pos:start="48:13" pos:end="48:50"><name pos:start="48:13" pos:end="48:36">gen_helper_mfc0_mvpconf1</name><argument_list pos:start="48:37" pos:end="48:50">(<argument pos:start="48:38" pos:end="48:40"><expr pos:start="48:38" pos:end="48:40"><name pos:start="48:38" pos:end="48:40">arg</name></expr></argument>, <argument pos:start="48:43" pos:end="48:49"><expr pos:start="48:43" pos:end="48:49"><name pos:start="48:43" pos:end="48:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="50:13" pos:end="50:28"><expr pos:start="50:13" pos:end="50:27"><name pos:start="50:13" pos:end="50:14">rn</name> <operator pos:start="50:16" pos:end="50:16">=</operator> <literal type="string" pos:start="50:18" pos:end="50:27">"MVPConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="54:13" pos:end="54:31"><expr pos:start="54:13" pos:end="54:30"><call pos:start="54:13" pos:end="54:30"><name pos:start="54:13" pos:end="54:21">CP0_CHECK</name><argument_list pos:start="54:22" pos:end="54:30">(<argument pos:start="54:23" pos:end="54:29"><expr pos:start="54:23" pos:end="54:29"><name pos:start="54:23" pos:end="54:29"><name pos:start="54:23" pos:end="54:25">ctx</name><operator pos:start="54:26" pos:end="54:27">-&gt;</operator><name pos:start="54:28" pos:end="54:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="56:13" pos:end="56:72"><expr pos:start="56:13" pos:end="56:71"><call pos:start="56:13" pos:end="56:71"><name pos:start="56:13" pos:end="56:27">gen_mfc0_load32</name><argument_list pos:start="56:28" pos:end="56:71">(<argument pos:start="56:29" pos:end="56:31"><expr pos:start="56:29" pos:end="56:31"><name pos:start="56:29" pos:end="56:31">arg</name></expr></argument>, <argument pos:start="56:34" pos:end="56:70"><expr pos:start="56:34" pos:end="56:70"><call pos:start="56:34" pos:end="56:70"><name pos:start="56:34" pos:end="56:41">offsetof</name><argument_list pos:start="56:42" pos:end="56:70">(<argument pos:start="56:43" pos:end="56:54"><expr pos:start="56:43" pos:end="56:54"><name pos:start="56:43" pos:end="56:54">CPUMIPSState</name></expr></argument>, <argument pos:start="56:57" pos:end="56:69"><expr pos:start="56:57" pos:end="56:69"><name pos:start="56:57" pos:end="56:69">CP0_VPControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="58:13" pos:end="58:29"><expr pos:start="58:13" pos:end="58:28"><name pos:start="58:13" pos:end="58:14">rn</name> <operator pos:start="58:16" pos:end="58:16">=</operator> <literal type="string" pos:start="58:18" pos:end="58:28">"VPControl"</literal></expr>;</expr_stmt>


        <default pos:start="61:9" pos:end="61:16">default:</default>

            <goto pos:start="63:13" pos:end="63:35">goto <name pos:start="63:18" pos:end="63:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="68:5" pos:end="68:11">case <expr pos:start="68:10" pos:end="68:10"><literal type="number" pos:start="68:10" pos:end="68:10">1</literal></expr>:</case>

        <switch pos:start="70:9" pos:end="145:9">switch <condition pos:start="70:16" pos:end="70:20">(<expr pos:start="70:17" pos:end="70:19"><name pos:start="70:17" pos:end="70:19">sel</name></expr>)</condition> <block pos:start="70:22" pos:end="145:9">{<block_content pos:start="72:9" pos:end="143:35">

        <case pos:start="72:9" pos:end="72:15">case <expr pos:start="72:14" pos:end="72:14"><literal type="number" pos:start="72:14" pos:end="72:14">0</literal></expr>:</case>

            <expr_stmt pos:start="74:13" pos:end="74:57"><expr pos:start="74:13" pos:end="74:56"><call pos:start="74:13" pos:end="74:56"><name pos:start="74:13" pos:end="74:21">CP0_CHECK</name><argument_list pos:start="74:22" pos:end="74:56">(<argument pos:start="74:23" pos:end="74:55"><expr pos:start="74:23" pos:end="74:55"><operator pos:start="74:23" pos:end="74:23">!</operator><operator pos:start="74:24" pos:end="74:24">(</operator><name pos:start="74:25" pos:end="74:39"><name pos:start="74:25" pos:end="74:27">ctx</name><operator pos:start="74:28" pos:end="74:29">-&gt;</operator><name pos:start="74:30" pos:end="74:39">insn_flags</name></name> <operator pos:start="74:41" pos:end="74:41">&amp;</operator> <name pos:start="74:43" pos:end="74:54">ISA_MIPS32R6</name><operator pos:start="74:55" pos:end="74:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="76:13" pos:end="76:49"><expr pos:start="76:13" pos:end="76:48"><call pos:start="76:13" pos:end="76:48"><name pos:start="76:13" pos:end="76:34">gen_helper_mfc0_random</name><argument_list pos:start="76:35" pos:end="76:48">(<argument pos:start="76:36" pos:end="76:38"><expr pos:start="76:36" pos:end="76:38"><name pos:start="76:36" pos:end="76:38">arg</name></expr></argument>, <argument pos:start="76:41" pos:end="76:47"><expr pos:start="76:41" pos:end="76:47"><name pos:start="76:41" pos:end="76:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="78:13" pos:end="78:26"><expr pos:start="78:13" pos:end="78:25"><name pos:start="78:13" pos:end="78:14">rn</name> <operator pos:start="78:16" pos:end="78:16">=</operator> <literal type="string" pos:start="78:18" pos:end="78:25">"Random"</literal></expr>;</expr_stmt>


        <case pos:start="81:9" pos:end="81:15">case <expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">1</literal></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><call pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:21">CP0_CHECK</name><argument_list pos:start="83:22" pos:end="83:47">(<argument pos:start="83:23" pos:end="83:46"><expr pos:start="83:23" pos:end="83:46"><name pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:25">ctx</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:37">insn_flags</name></name> <operator pos:start="83:39" pos:end="83:39">&amp;</operator> <name pos:start="83:41" pos:end="83:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:73"><expr pos:start="85:13" pos:end="85:72"><call pos:start="85:13" pos:end="85:72"><name pos:start="85:13" pos:end="85:27">gen_mfc0_load32</name><argument_list pos:start="85:28" pos:end="85:72">(<argument pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:31">arg</name></expr></argument>, <argument pos:start="85:34" pos:end="85:71"><expr pos:start="85:34" pos:end="85:71"><call pos:start="85:34" pos:end="85:71"><name pos:start="85:34" pos:end="85:41">offsetof</name><argument_list pos:start="85:42" pos:end="85:71">(<argument pos:start="85:43" pos:end="85:54"><expr pos:start="85:43" pos:end="85:54"><name pos:start="85:43" pos:end="85:54">CPUMIPSState</name></expr></argument>, <argument pos:start="85:57" pos:end="85:70"><expr pos:start="85:57" pos:end="85:70"><name pos:start="85:57" pos:end="85:70">CP0_VPEControl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:30"><expr pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:14">rn</name> <operator pos:start="87:16" pos:end="87:16">=</operator> <literal type="string" pos:start="87:18" pos:end="87:29">"VPEControl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:48"><expr pos:start="91:13" pos:end="91:47"><call pos:start="91:13" pos:end="91:47"><name pos:start="91:13" pos:end="91:21">CP0_CHECK</name><argument_list pos:start="91:22" pos:end="91:47">(<argument pos:start="91:23" pos:end="91:46"><expr pos:start="91:23" pos:end="91:46"><name pos:start="91:23" pos:end="91:37"><name pos:start="91:23" pos:end="91:25">ctx</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:37">insn_flags</name></name> <operator pos:start="91:39" pos:end="91:39">&amp;</operator> <name pos:start="91:41" pos:end="91:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:71"><expr pos:start="93:13" pos:end="93:70"><call pos:start="93:13" pos:end="93:70"><name pos:start="93:13" pos:end="93:27">gen_mfc0_load32</name><argument_list pos:start="93:28" pos:end="93:70">(<argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">arg</name></expr></argument>, <argument pos:start="93:34" pos:end="93:69"><expr pos:start="93:34" pos:end="93:69"><call pos:start="93:34" pos:end="93:69"><name pos:start="93:34" pos:end="93:41">offsetof</name><argument_list pos:start="93:42" pos:end="93:69">(<argument pos:start="93:43" pos:end="93:54"><expr pos:start="93:43" pos:end="93:54"><name pos:start="93:43" pos:end="93:54">CPUMIPSState</name></expr></argument>, <argument pos:start="93:57" pos:end="93:68"><expr pos:start="93:57" pos:end="93:68"><name pos:start="93:57" pos:end="93:68">CP0_VPEConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:28"><expr pos:start="95:13" pos:end="95:27"><name pos:start="95:13" pos:end="95:14">rn</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <literal type="string" pos:start="95:18" pos:end="95:27">"VPEConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:48"><expr pos:start="99:13" pos:end="99:47"><call pos:start="99:13" pos:end="99:47"><name pos:start="99:13" pos:end="99:21">CP0_CHECK</name><argument_list pos:start="99:22" pos:end="99:47">(<argument pos:start="99:23" pos:end="99:46"><expr pos:start="99:23" pos:end="99:46"><name pos:start="99:23" pos:end="99:37"><name pos:start="99:23" pos:end="99:25">ctx</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:37">insn_flags</name></name> <operator pos:start="99:39" pos:end="99:39">&amp;</operator> <name pos:start="99:41" pos:end="99:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:71"><expr pos:start="101:13" pos:end="101:70"><call pos:start="101:13" pos:end="101:70"><name pos:start="101:13" pos:end="101:27">gen_mfc0_load32</name><argument_list pos:start="101:28" pos:end="101:70">(<argument pos:start="101:29" pos:end="101:31"><expr pos:start="101:29" pos:end="101:31"><name pos:start="101:29" pos:end="101:31">arg</name></expr></argument>, <argument pos:start="101:34" pos:end="101:69"><expr pos:start="101:34" pos:end="101:69"><call pos:start="101:34" pos:end="101:69"><name pos:start="101:34" pos:end="101:41">offsetof</name><argument_list pos:start="101:42" pos:end="101:69">(<argument pos:start="101:43" pos:end="101:54"><expr pos:start="101:43" pos:end="101:54"><name pos:start="101:43" pos:end="101:54">CPUMIPSState</name></expr></argument>, <argument pos:start="101:57" pos:end="101:68"><expr pos:start="101:57" pos:end="101:68"><name pos:start="101:57" pos:end="101:68">CP0_VPEConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:28"><expr pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:14">rn</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="string" pos:start="103:18" pos:end="103:27">"VPEConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><call pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:21">CP0_CHECK</name><argument_list pos:start="107:22" pos:end="107:47">(<argument pos:start="107:23" pos:end="107:46"><expr pos:start="107:23" pos:end="107:46"><name pos:start="107:23" pos:end="107:37"><name pos:start="107:23" pos:end="107:25">ctx</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:37">insn_flags</name></name> <operator pos:start="107:39" pos:end="107:39">&amp;</operator> <name pos:start="107:41" pos:end="107:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:76"><expr pos:start="109:13" pos:end="109:75"><call pos:start="109:13" pos:end="109:75"><name pos:start="109:13" pos:end="109:25">tcg_gen_ld_tl</name><argument_list pos:start="109:26" pos:end="109:75">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><name pos:start="109:27" pos:end="109:29">arg</name></expr></argument>, <argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:38">cpu_env</name></expr></argument>, <argument pos:start="109:41" pos:end="109:74"><expr pos:start="109:41" pos:end="109:74"><call pos:start="109:41" pos:end="109:74"><name pos:start="109:41" pos:end="109:48">offsetof</name><argument_list pos:start="109:49" pos:end="109:74">(<argument pos:start="109:50" pos:end="109:61"><expr pos:start="109:50" pos:end="109:61"><name pos:start="109:50" pos:end="109:61">CPUMIPSState</name></expr></argument>, <argument pos:start="109:64" pos:end="109:73"><expr pos:start="109:64" pos:end="109:73"><name pos:start="109:64" pos:end="109:73">CP0_YQMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:14">rn</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="string" pos:start="111:18" pos:end="111:25">"YQMask"</literal></expr>;</expr_stmt>


        <case pos:start="114:9" pos:end="114:15">case <expr pos:start="114:14" pos:end="114:14"><literal type="number" pos:start="114:14" pos:end="114:14">5</literal></expr>:</case>

            <expr_stmt pos:start="116:13" pos:end="116:48"><expr pos:start="116:13" pos:end="116:47"><call pos:start="116:13" pos:end="116:47"><name pos:start="116:13" pos:end="116:21">CP0_CHECK</name><argument_list pos:start="116:22" pos:end="116:47">(<argument pos:start="116:23" pos:end="116:46"><expr pos:start="116:23" pos:end="116:46"><name pos:start="116:23" pos:end="116:37"><name pos:start="116:23" pos:end="116:25">ctx</name><operator pos:start="116:26" pos:end="116:27">-&gt;</operator><name pos:start="116:28" pos:end="116:37">insn_flags</name></name> <operator pos:start="116:39" pos:end="116:39">&amp;</operator> <name pos:start="116:41" pos:end="116:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:81"><expr pos:start="118:13" pos:end="118:80"><call pos:start="118:13" pos:end="118:80"><name pos:start="118:13" pos:end="118:25">tcg_gen_ld_tl</name><argument_list pos:start="118:26" pos:end="118:80">(<argument pos:start="118:27" pos:end="118:29"><expr pos:start="118:27" pos:end="118:29"><name pos:start="118:27" pos:end="118:29">arg</name></expr></argument>, <argument pos:start="118:32" pos:end="118:38"><expr pos:start="118:32" pos:end="118:38"><name pos:start="118:32" pos:end="118:38">cpu_env</name></expr></argument>, <argument pos:start="118:41" pos:end="118:79"><expr pos:start="118:41" pos:end="118:79"><call pos:start="118:41" pos:end="118:79"><name pos:start="118:41" pos:end="118:48">offsetof</name><argument_list pos:start="118:49" pos:end="118:79">(<argument pos:start="118:50" pos:end="118:61"><expr pos:start="118:50" pos:end="118:61"><name pos:start="118:50" pos:end="118:61">CPUMIPSState</name></expr></argument>, <argument pos:start="118:64" pos:end="118:78"><expr pos:start="118:64" pos:end="118:78"><name pos:start="118:64" pos:end="118:78">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="120:13" pos:end="120:31"><expr pos:start="120:13" pos:end="120:30"><name pos:start="120:13" pos:end="120:14">rn</name> <operator pos:start="120:16" pos:end="120:16">=</operator> <literal type="string" pos:start="120:18" pos:end="120:30">"VPESchedule"</literal></expr>;</expr_stmt>


        <case pos:start="123:9" pos:end="123:15">case <expr pos:start="123:14" pos:end="123:14"><literal type="number" pos:start="123:14" pos:end="123:14">6</literal></expr>:</case>

            <expr_stmt pos:start="125:13" pos:end="125:48"><expr pos:start="125:13" pos:end="125:47"><call pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:21">CP0_CHECK</name><argument_list pos:start="125:22" pos:end="125:47">(<argument pos:start="125:23" pos:end="125:46"><expr pos:start="125:23" pos:end="125:46"><name pos:start="125:23" pos:end="125:37"><name pos:start="125:23" pos:end="125:25">ctx</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:37">insn_flags</name></name> <operator pos:start="125:39" pos:end="125:39">&amp;</operator> <name pos:start="125:41" pos:end="125:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:82"><expr pos:start="127:13" pos:end="127:81"><call pos:start="127:13" pos:end="127:81"><name pos:start="127:13" pos:end="127:25">tcg_gen_ld_tl</name><argument_list pos:start="127:26" pos:end="127:81">(<argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">arg</name></expr></argument>, <argument pos:start="127:32" pos:end="127:38"><expr pos:start="127:32" pos:end="127:38"><name pos:start="127:32" pos:end="127:38">cpu_env</name></expr></argument>, <argument pos:start="127:41" pos:end="127:80"><expr pos:start="127:41" pos:end="127:80"><call pos:start="127:41" pos:end="127:80"><name pos:start="127:41" pos:end="127:48">offsetof</name><argument_list pos:start="127:49" pos:end="127:80">(<argument pos:start="127:50" pos:end="127:61"><expr pos:start="127:50" pos:end="127:61"><name pos:start="127:50" pos:end="127:61">CPUMIPSState</name></expr></argument>, <argument pos:start="127:64" pos:end="127:79"><expr pos:start="127:64" pos:end="127:79"><name pos:start="127:64" pos:end="127:79">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:32"><expr pos:start="129:13" pos:end="129:31"><name pos:start="129:13" pos:end="129:14">rn</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="string" pos:start="129:18" pos:end="129:31">"VPEScheFBack"</literal></expr>;</expr_stmt>


        <case pos:start="132:9" pos:end="132:15">case <expr pos:start="132:14" pos:end="132:14"><literal type="number" pos:start="132:14" pos:end="132:14">7</literal></expr>:</case>

            <expr_stmt pos:start="134:13" pos:end="134:48"><expr pos:start="134:13" pos:end="134:47"><call pos:start="134:13" pos:end="134:47"><name pos:start="134:13" pos:end="134:21">CP0_CHECK</name><argument_list pos:start="134:22" pos:end="134:47">(<argument pos:start="134:23" pos:end="134:46"><expr pos:start="134:23" pos:end="134:46"><name pos:start="134:23" pos:end="134:37"><name pos:start="134:23" pos:end="134:25">ctx</name><operator pos:start="134:26" pos:end="134:27">-&gt;</operator><name pos:start="134:28" pos:end="134:37">insn_flags</name></name> <operator pos:start="134:39" pos:end="134:39">&amp;</operator> <name pos:start="134:41" pos:end="134:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="136:13" pos:end="136:69"><expr pos:start="136:13" pos:end="136:68"><call pos:start="136:13" pos:end="136:68"><name pos:start="136:13" pos:end="136:27">gen_mfc0_load32</name><argument_list pos:start="136:28" pos:end="136:68">(<argument pos:start="136:29" pos:end="136:31"><expr pos:start="136:29" pos:end="136:31"><name pos:start="136:29" pos:end="136:31">arg</name></expr></argument>, <argument pos:start="136:34" pos:end="136:67"><expr pos:start="136:34" pos:end="136:67"><call pos:start="136:34" pos:end="136:67"><name pos:start="136:34" pos:end="136:41">offsetof</name><argument_list pos:start="136:42" pos:end="136:67">(<argument pos:start="136:43" pos:end="136:54"><expr pos:start="136:43" pos:end="136:54"><name pos:start="136:43" pos:end="136:54">CPUMIPSState</name></expr></argument>, <argument pos:start="136:57" pos:end="136:66"><expr pos:start="136:57" pos:end="136:66"><name pos:start="136:57" pos:end="136:66">CP0_VPEOpt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="138:13" pos:end="138:26"><expr pos:start="138:13" pos:end="138:25"><name pos:start="138:13" pos:end="138:14">rn</name> <operator pos:start="138:16" pos:end="138:16">=</operator> <literal type="string" pos:start="138:18" pos:end="138:25">"VPEOpt"</literal></expr>;</expr_stmt>


        <default pos:start="141:9" pos:end="141:16">default:</default>

            <goto pos:start="143:13" pos:end="143:35">goto <name pos:start="143:18" pos:end="143:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="149:9" pos:end="222:9">switch <condition pos:start="149:16" pos:end="149:20">(<expr pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">sel</name></expr>)</condition> <block pos:start="149:22" pos:end="222:9">{<block_content pos:start="151:9" pos:end="220:35">

        <case pos:start="151:9" pos:end="151:15">case <expr pos:start="151:14" pos:end="151:14"><literal type="number" pos:start="151:14" pos:end="151:14">0</literal></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:78"><expr pos:start="153:13" pos:end="153:77"><call pos:start="153:13" pos:end="153:77"><name pos:start="153:13" pos:end="153:25">tcg_gen_ld_tl</name><argument_list pos:start="153:26" pos:end="153:77">(<argument pos:start="153:27" pos:end="153:29"><expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:29">arg</name></expr></argument>, <argument pos:start="153:32" pos:end="153:38"><expr pos:start="153:32" pos:end="153:38"><name pos:start="153:32" pos:end="153:38">cpu_env</name></expr></argument>, <argument pos:start="153:41" pos:end="153:76"><expr pos:start="153:41" pos:end="153:76"><call pos:start="153:41" pos:end="153:76"><name pos:start="153:41" pos:end="153:48">offsetof</name><argument_list pos:start="153:49" pos:end="153:76">(<argument pos:start="153:50" pos:end="153:61"><expr pos:start="153:50" pos:end="153:61"><name pos:start="153:50" pos:end="153:61">CPUMIPSState</name></expr></argument>, <argument pos:start="153:64" pos:end="153:75"><expr pos:start="153:64" pos:end="153:75"><name pos:start="153:64" pos:end="153:75">CP0_EntryLo0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:28"><expr pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:14">rn</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="string" pos:start="155:18" pos:end="155:27">"EntryLo0"</literal></expr>;</expr_stmt>


        <case pos:start="158:9" pos:end="158:15">case <expr pos:start="158:14" pos:end="158:14"><literal type="number" pos:start="158:14" pos:end="158:14">1</literal></expr>:</case>

            <expr_stmt pos:start="160:13" pos:end="160:48"><expr pos:start="160:13" pos:end="160:47"><call pos:start="160:13" pos:end="160:47"><name pos:start="160:13" pos:end="160:21">CP0_CHECK</name><argument_list pos:start="160:22" pos:end="160:47">(<argument pos:start="160:23" pos:end="160:46"><expr pos:start="160:23" pos:end="160:46"><name pos:start="160:23" pos:end="160:37"><name pos:start="160:23" pos:end="160:25">ctx</name><operator pos:start="160:26" pos:end="160:27">-&gt;</operator><name pos:start="160:28" pos:end="160:37">insn_flags</name></name> <operator pos:start="160:39" pos:end="160:39">&amp;</operator> <name pos:start="160:41" pos:end="160:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="162:13" pos:end="162:51"><expr pos:start="162:13" pos:end="162:50"><call pos:start="162:13" pos:end="162:50"><name pos:start="162:13" pos:end="162:36">gen_helper_mfc0_tcstatus</name><argument_list pos:start="162:37" pos:end="162:50">(<argument pos:start="162:38" pos:end="162:40"><expr pos:start="162:38" pos:end="162:40"><name pos:start="162:38" pos:end="162:40">arg</name></expr></argument>, <argument pos:start="162:43" pos:end="162:49"><expr pos:start="162:43" pos:end="162:49"><name pos:start="162:43" pos:end="162:49">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="164:13" pos:end="164:28"><expr pos:start="164:13" pos:end="164:27"><name pos:start="164:13" pos:end="164:14">rn</name> <operator pos:start="164:16" pos:end="164:16">=</operator> <literal type="string" pos:start="164:18" pos:end="164:27">"TCStatus"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="168:13" pos:end="168:48"><expr pos:start="168:13" pos:end="168:47"><call pos:start="168:13" pos:end="168:47"><name pos:start="168:13" pos:end="168:21">CP0_CHECK</name><argument_list pos:start="168:22" pos:end="168:47">(<argument pos:start="168:23" pos:end="168:46"><expr pos:start="168:23" pos:end="168:46"><name pos:start="168:23" pos:end="168:37"><name pos:start="168:23" pos:end="168:25">ctx</name><operator pos:start="168:26" pos:end="168:27">-&gt;</operator><name pos:start="168:28" pos:end="168:37">insn_flags</name></name> <operator pos:start="168:39" pos:end="168:39">&amp;</operator> <name pos:start="168:41" pos:end="168:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="170:13" pos:end="170:49"><expr pos:start="170:13" pos:end="170:48"><call pos:start="170:13" pos:end="170:48"><name pos:start="170:13" pos:end="170:34">gen_helper_mfc0_tcbind</name><argument_list pos:start="170:35" pos:end="170:48">(<argument pos:start="170:36" pos:end="170:38"><expr pos:start="170:36" pos:end="170:38"><name pos:start="170:36" pos:end="170:38">arg</name></expr></argument>, <argument pos:start="170:41" pos:end="170:47"><expr pos:start="170:41" pos:end="170:47"><name pos:start="170:41" pos:end="170:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="172:13" pos:end="172:26"><expr pos:start="172:13" pos:end="172:25"><name pos:start="172:13" pos:end="172:14">rn</name> <operator pos:start="172:16" pos:end="172:16">=</operator> <literal type="string" pos:start="172:18" pos:end="172:25">"TCBind"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="176:13" pos:end="176:48"><expr pos:start="176:13" pos:end="176:47"><call pos:start="176:13" pos:end="176:47"><name pos:start="176:13" pos:end="176:21">CP0_CHECK</name><argument_list pos:start="176:22" pos:end="176:47">(<argument pos:start="176:23" pos:end="176:46"><expr pos:start="176:23" pos:end="176:46"><name pos:start="176:23" pos:end="176:37"><name pos:start="176:23" pos:end="176:25">ctx</name><operator pos:start="176:26" pos:end="176:27">-&gt;</operator><name pos:start="176:28" pos:end="176:37">insn_flags</name></name> <operator pos:start="176:39" pos:end="176:39">&amp;</operator> <name pos:start="176:41" pos:end="176:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="178:13" pos:end="178:53"><expr pos:start="178:13" pos:end="178:52"><call pos:start="178:13" pos:end="178:52"><name pos:start="178:13" pos:end="178:38">gen_helper_dmfc0_tcrestart</name><argument_list pos:start="178:39" pos:end="178:52">(<argument pos:start="178:40" pos:end="178:42"><expr pos:start="178:40" pos:end="178:42"><name pos:start="178:40" pos:end="178:42">arg</name></expr></argument>, <argument pos:start="178:45" pos:end="178:51"><expr pos:start="178:45" pos:end="178:51"><name pos:start="178:45" pos:end="178:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="180:13" pos:end="180:29"><expr pos:start="180:13" pos:end="180:28"><name pos:start="180:13" pos:end="180:14">rn</name> <operator pos:start="180:16" pos:end="180:16">=</operator> <literal type="string" pos:start="180:18" pos:end="180:28">"TCRestart"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="184:13" pos:end="184:48"><expr pos:start="184:13" pos:end="184:47"><call pos:start="184:13" pos:end="184:47"><name pos:start="184:13" pos:end="184:21">CP0_CHECK</name><argument_list pos:start="184:22" pos:end="184:47">(<argument pos:start="184:23" pos:end="184:46"><expr pos:start="184:23" pos:end="184:46"><name pos:start="184:23" pos:end="184:37"><name pos:start="184:23" pos:end="184:25">ctx</name><operator pos:start="184:26" pos:end="184:27">-&gt;</operator><name pos:start="184:28" pos:end="184:37">insn_flags</name></name> <operator pos:start="184:39" pos:end="184:39">&amp;</operator> <name pos:start="184:41" pos:end="184:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="186:13" pos:end="186:50"><expr pos:start="186:13" pos:end="186:49"><call pos:start="186:13" pos:end="186:49"><name pos:start="186:13" pos:end="186:35">gen_helper_dmfc0_tchalt</name><argument_list pos:start="186:36" pos:end="186:49">(<argument pos:start="186:37" pos:end="186:39"><expr pos:start="186:37" pos:end="186:39"><name pos:start="186:37" pos:end="186:39">arg</name></expr></argument>, <argument pos:start="186:42" pos:end="186:48"><expr pos:start="186:42" pos:end="186:48"><name pos:start="186:42" pos:end="186:48">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="188:13" pos:end="188:26"><expr pos:start="188:13" pos:end="188:25"><name pos:start="188:13" pos:end="188:14">rn</name> <operator pos:start="188:16" pos:end="188:16">=</operator> <literal type="string" pos:start="188:18" pos:end="188:25">"TCHalt"</literal></expr>;</expr_stmt>


        <case pos:start="191:9" pos:end="191:15">case <expr pos:start="191:14" pos:end="191:14"><literal type="number" pos:start="191:14" pos:end="191:14">5</literal></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:48"><expr pos:start="193:13" pos:end="193:47"><call pos:start="193:13" pos:end="193:47"><name pos:start="193:13" pos:end="193:21">CP0_CHECK</name><argument_list pos:start="193:22" pos:end="193:47">(<argument pos:start="193:23" pos:end="193:46"><expr pos:start="193:23" pos:end="193:46"><name pos:start="193:23" pos:end="193:37"><name pos:start="193:23" pos:end="193:25">ctx</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:37">insn_flags</name></name> <operator pos:start="193:39" pos:end="193:39">&amp;</operator> <name pos:start="193:41" pos:end="193:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:53"><expr pos:start="195:13" pos:end="195:52"><call pos:start="195:13" pos:end="195:52"><name pos:start="195:13" pos:end="195:38">gen_helper_dmfc0_tccontext</name><argument_list pos:start="195:39" pos:end="195:52">(<argument pos:start="195:40" pos:end="195:42"><expr pos:start="195:40" pos:end="195:42"><name pos:start="195:40" pos:end="195:42">arg</name></expr></argument>, <argument pos:start="195:45" pos:end="195:51"><expr pos:start="195:45" pos:end="195:51"><name pos:start="195:45" pos:end="195:51">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:29"><expr pos:start="197:13" pos:end="197:28"><name pos:start="197:13" pos:end="197:14">rn</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <literal type="string" pos:start="197:18" pos:end="197:28">"TCContext"</literal></expr>;</expr_stmt>


        <case pos:start="200:9" pos:end="200:15">case <expr pos:start="200:14" pos:end="200:14"><literal type="number" pos:start="200:14" pos:end="200:14">6</literal></expr>:</case>

            <expr_stmt pos:start="202:13" pos:end="202:48"><expr pos:start="202:13" pos:end="202:47"><call pos:start="202:13" pos:end="202:47"><name pos:start="202:13" pos:end="202:21">CP0_CHECK</name><argument_list pos:start="202:22" pos:end="202:47">(<argument pos:start="202:23" pos:end="202:46"><expr pos:start="202:23" pos:end="202:46"><name pos:start="202:23" pos:end="202:37"><name pos:start="202:23" pos:end="202:25">ctx</name><operator pos:start="202:26" pos:end="202:27">-&gt;</operator><name pos:start="202:28" pos:end="202:37">insn_flags</name></name> <operator pos:start="202:39" pos:end="202:39">&amp;</operator> <name pos:start="202:41" pos:end="202:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="204:13" pos:end="204:54"><expr pos:start="204:13" pos:end="204:53"><call pos:start="204:13" pos:end="204:53"><name pos:start="204:13" pos:end="204:39">gen_helper_dmfc0_tcschedule</name><argument_list pos:start="204:40" pos:end="204:53">(<argument pos:start="204:41" pos:end="204:43"><expr pos:start="204:41" pos:end="204:43"><name pos:start="204:41" pos:end="204:43">arg</name></expr></argument>, <argument pos:start="204:46" pos:end="204:52"><expr pos:start="204:46" pos:end="204:52"><name pos:start="204:46" pos:end="204:52">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="206:13" pos:end="206:30"><expr pos:start="206:13" pos:end="206:29"><name pos:start="206:13" pos:end="206:14">rn</name> <operator pos:start="206:16" pos:end="206:16">=</operator> <literal type="string" pos:start="206:18" pos:end="206:29">"TCSchedule"</literal></expr>;</expr_stmt>


        <case pos:start="209:9" pos:end="209:15">case <expr pos:start="209:14" pos:end="209:14"><literal type="number" pos:start="209:14" pos:end="209:14">7</literal></expr>:</case>

            <expr_stmt pos:start="211:13" pos:end="211:48"><expr pos:start="211:13" pos:end="211:47"><call pos:start="211:13" pos:end="211:47"><name pos:start="211:13" pos:end="211:21">CP0_CHECK</name><argument_list pos:start="211:22" pos:end="211:47">(<argument pos:start="211:23" pos:end="211:46"><expr pos:start="211:23" pos:end="211:46"><name pos:start="211:23" pos:end="211:37"><name pos:start="211:23" pos:end="211:25">ctx</name><operator pos:start="211:26" pos:end="211:27">-&gt;</operator><name pos:start="211:28" pos:end="211:37">insn_flags</name></name> <operator pos:start="211:39" pos:end="211:39">&amp;</operator> <name pos:start="211:41" pos:end="211:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:55"><expr pos:start="213:13" pos:end="213:54"><call pos:start="213:13" pos:end="213:54"><name pos:start="213:13" pos:end="213:40">gen_helper_dmfc0_tcschefback</name><argument_list pos:start="213:41" pos:end="213:54">(<argument pos:start="213:42" pos:end="213:44"><expr pos:start="213:42" pos:end="213:44"><name pos:start="213:42" pos:end="213:44">arg</name></expr></argument>, <argument pos:start="213:47" pos:end="213:53"><expr pos:start="213:47" pos:end="213:53"><name pos:start="213:47" pos:end="213:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:31"><expr pos:start="215:13" pos:end="215:30"><name pos:start="215:13" pos:end="215:14">rn</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <literal type="string" pos:start="215:18" pos:end="215:30">"TCScheFBack"</literal></expr>;</expr_stmt>


        <default pos:start="218:9" pos:end="218:16">default:</default>

            <goto pos:start="220:13" pos:end="220:35">goto <name pos:start="220:18" pos:end="220:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="226:9" pos:end="248:9">switch <condition pos:start="226:16" pos:end="226:20">(<expr pos:start="226:17" pos:end="226:19"><name pos:start="226:17" pos:end="226:19">sel</name></expr>)</condition> <block pos:start="226:22" pos:end="248:9">{<block_content pos:start="228:9" pos:end="246:35">

        <case pos:start="228:9" pos:end="228:15">case <expr pos:start="228:14" pos:end="228:14"><literal type="number" pos:start="228:14" pos:end="228:14">0</literal></expr>:</case>

            <expr_stmt pos:start="230:13" pos:end="230:78"><expr pos:start="230:13" pos:end="230:77"><call pos:start="230:13" pos:end="230:77"><name pos:start="230:13" pos:end="230:25">tcg_gen_ld_tl</name><argument_list pos:start="230:26" pos:end="230:77">(<argument pos:start="230:27" pos:end="230:29"><expr pos:start="230:27" pos:end="230:29"><name pos:start="230:27" pos:end="230:29">arg</name></expr></argument>, <argument pos:start="230:32" pos:end="230:38"><expr pos:start="230:32" pos:end="230:38"><name pos:start="230:32" pos:end="230:38">cpu_env</name></expr></argument>, <argument pos:start="230:41" pos:end="230:76"><expr pos:start="230:41" pos:end="230:76"><call pos:start="230:41" pos:end="230:76"><name pos:start="230:41" pos:end="230:48">offsetof</name><argument_list pos:start="230:49" pos:end="230:76">(<argument pos:start="230:50" pos:end="230:61"><expr pos:start="230:50" pos:end="230:61"><name pos:start="230:50" pos:end="230:61">CPUMIPSState</name></expr></argument>, <argument pos:start="230:64" pos:end="230:75"><expr pos:start="230:64" pos:end="230:75"><name pos:start="230:64" pos:end="230:75">CP0_EntryLo1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="232:13" pos:end="232:28"><expr pos:start="232:13" pos:end="232:27"><name pos:start="232:13" pos:end="232:14">rn</name> <operator pos:start="232:16" pos:end="232:16">=</operator> <literal type="string" pos:start="232:18" pos:end="232:27">"EntryLo1"</literal></expr>;</expr_stmt>


        <case pos:start="235:9" pos:end="235:15">case <expr pos:start="235:14" pos:end="235:14"><literal type="number" pos:start="235:14" pos:end="235:14">1</literal></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:31"><expr pos:start="237:13" pos:end="237:30"><call pos:start="237:13" pos:end="237:30"><name pos:start="237:13" pos:end="237:21">CP0_CHECK</name><argument_list pos:start="237:22" pos:end="237:30">(<argument pos:start="237:23" pos:end="237:29"><expr pos:start="237:23" pos:end="237:29"><name pos:start="237:23" pos:end="237:29"><name pos:start="237:23" pos:end="237:25">ctx</name><operator pos:start="237:26" pos:end="237:27">-&gt;</operator><name pos:start="237:28" pos:end="237:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:75"><expr pos:start="239:13" pos:end="239:74"><call pos:start="239:13" pos:end="239:74"><name pos:start="239:13" pos:end="239:27">gen_mfc0_load32</name><argument_list pos:start="239:28" pos:end="239:74">(<argument pos:start="239:29" pos:end="239:31"><expr pos:start="239:29" pos:end="239:31"><name pos:start="239:29" pos:end="239:31">arg</name></expr></argument>, <argument pos:start="239:34" pos:end="239:73"><expr pos:start="239:34" pos:end="239:73"><call pos:start="239:34" pos:end="239:73"><name pos:start="239:34" pos:end="239:41">offsetof</name><argument_list pos:start="239:42" pos:end="239:73">(<argument pos:start="239:43" pos:end="239:54"><expr pos:start="239:43" pos:end="239:54"><name pos:start="239:43" pos:end="239:54">CPUMIPSState</name></expr></argument>, <argument pos:start="239:57" pos:end="239:72"><expr pos:start="239:57" pos:end="239:72"><name pos:start="239:57" pos:end="239:72">CP0_GlobalNumber</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:32"><expr pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:14">rn</name> <operator pos:start="241:16" pos:end="241:16">=</operator> <literal type="string" pos:start="241:18" pos:end="241:31">"GlobalNumber"</literal></expr>;</expr_stmt>


        <default pos:start="244:9" pos:end="244:16">default:</default>

            <goto pos:start="246:13" pos:end="246:35">goto <name pos:start="246:18" pos:end="246:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="252:9" pos:end="283:9">switch <condition pos:start="252:16" pos:end="252:20">(<expr pos:start="252:17" pos:end="252:19"><name pos:start="252:17" pos:end="252:19">sel</name></expr>)</condition> <block pos:start="252:22" pos:end="283:9">{<block_content pos:start="254:9" pos:end="281:35">

        <case pos:start="254:9" pos:end="254:15">case <expr pos:start="254:14" pos:end="254:14"><literal type="number" pos:start="254:14" pos:end="254:14">0</literal></expr>:</case>

            <expr_stmt pos:start="256:13" pos:end="256:77"><expr pos:start="256:13" pos:end="256:76"><call pos:start="256:13" pos:end="256:76"><name pos:start="256:13" pos:end="256:25">tcg_gen_ld_tl</name><argument_list pos:start="256:26" pos:end="256:76">(<argument pos:start="256:27" pos:end="256:29"><expr pos:start="256:27" pos:end="256:29"><name pos:start="256:27" pos:end="256:29">arg</name></expr></argument>, <argument pos:start="256:32" pos:end="256:38"><expr pos:start="256:32" pos:end="256:38"><name pos:start="256:32" pos:end="256:38">cpu_env</name></expr></argument>, <argument pos:start="256:41" pos:end="256:75"><expr pos:start="256:41" pos:end="256:75"><call pos:start="256:41" pos:end="256:75"><name pos:start="256:41" pos:end="256:48">offsetof</name><argument_list pos:start="256:49" pos:end="256:75">(<argument pos:start="256:50" pos:end="256:61"><expr pos:start="256:50" pos:end="256:61"><name pos:start="256:50" pos:end="256:61">CPUMIPSState</name></expr></argument>, <argument pos:start="256:64" pos:end="256:74"><expr pos:start="256:64" pos:end="256:74"><name pos:start="256:64" pos:end="256:74">CP0_Context</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="258:13" pos:end="258:27"><expr pos:start="258:13" pos:end="258:26"><name pos:start="258:13" pos:end="258:14">rn</name> <operator pos:start="258:16" pos:end="258:16">=</operator> <literal type="string" pos:start="258:18" pos:end="258:26">"Context"</literal></expr>;</expr_stmt>


        <case pos:start="261:9" pos:end="261:15">case <expr pos:start="261:14" pos:end="261:14"><literal type="number" pos:start="261:14" pos:end="261:14">1</literal></expr>:</case>

<comment type="line" pos:start="263:1" pos:end="263:70">//            gen_helper_dmfc0_contextconfig(arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:33"><expr pos:start="265:13" pos:end="265:32"><name pos:start="265:13" pos:end="265:14">rn</name> <operator pos:start="265:16" pos:end="265:16">=</operator> <literal type="string" pos:start="265:18" pos:end="265:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="267:13" pos:end="267:35">goto <name pos:start="267:18" pos:end="267:34">cp0_unimplemented</name>;</goto>


            <expr_stmt pos:start="270:13" pos:end="270:33"><expr pos:start="270:13" pos:end="270:32"><call pos:start="270:13" pos:end="270:32"><name pos:start="270:13" pos:end="270:21">CP0_CHECK</name><argument_list pos:start="270:22" pos:end="270:32">(<argument pos:start="270:23" pos:end="270:31"><expr pos:start="270:23" pos:end="270:31"><name pos:start="270:23" pos:end="270:31"><name pos:start="270:23" pos:end="270:25">ctx</name><operator pos:start="270:26" pos:end="270:27">-&gt;</operator><name pos:start="270:28" pos:end="270:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="272:13" pos:end="274:75"><expr pos:start="272:13" pos:end="274:74"><call pos:start="272:13" pos:end="274:74"><name pos:start="272:13" pos:end="272:25">tcg_gen_ld_tl</name><argument_list pos:start="272:26" pos:end="274:74">(<argument pos:start="272:27" pos:end="272:29"><expr pos:start="272:27" pos:end="272:29"><name pos:start="272:27" pos:end="272:29">arg</name></expr></argument>, <argument pos:start="272:32" pos:end="272:38"><expr pos:start="272:32" pos:end="272:38"><name pos:start="272:32" pos:end="272:38">cpu_env</name></expr></argument>,

                          <argument pos:start="274:27" pos:end="274:73"><expr pos:start="274:27" pos:end="274:73"><call pos:start="274:27" pos:end="274:73"><name pos:start="274:27" pos:end="274:34">offsetof</name><argument_list pos:start="274:35" pos:end="274:73">(<argument pos:start="274:36" pos:end="274:47"><expr pos:start="274:36" pos:end="274:47"><name pos:start="274:36" pos:end="274:47">CPUMIPSState</name></expr></argument>, <argument pos:start="274:50" pos:end="274:72"><expr pos:start="274:50" pos:end="274:72"><name pos:start="274:50" pos:end="274:72"><name pos:start="274:50" pos:end="274:58">active_tc</name><operator pos:start="274:59" pos:end="274:59">.</operator><name pos:start="274:60" pos:end="274:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="276:13" pos:end="276:29"><expr pos:start="276:13" pos:end="276:28"><name pos:start="276:13" pos:end="276:14">rn</name> <operator pos:start="276:16" pos:end="276:16">=</operator> <literal type="string" pos:start="276:18" pos:end="276:28">"UserLocal"</literal></expr>;</expr_stmt>


        <default pos:start="279:9" pos:end="279:16">default:</default>

            <goto pos:start="281:13" pos:end="281:35">goto <name pos:start="281:18" pos:end="281:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="286:5" pos:end="286:11">case <expr pos:start="286:10" pos:end="286:10"><literal type="number" pos:start="286:10" pos:end="286:10">5</literal></expr>:</case>

        <switch pos:start="288:9" pos:end="325:9">switch <condition pos:start="288:16" pos:end="288:20">(<expr pos:start="288:17" pos:end="288:19"><name pos:start="288:17" pos:end="288:19">sel</name></expr>)</condition> <block pos:start="288:22" pos:end="325:9">{<block_content pos:start="290:9" pos:end="323:35">

        <case pos:start="290:9" pos:end="290:15">case <expr pos:start="290:14" pos:end="290:14"><literal type="number" pos:start="290:14" pos:end="290:14">0</literal></expr>:</case>

            <expr_stmt pos:start="292:13" pos:end="292:71"><expr pos:start="292:13" pos:end="292:70"><call pos:start="292:13" pos:end="292:70"><name pos:start="292:13" pos:end="292:27">gen_mfc0_load32</name><argument_list pos:start="292:28" pos:end="292:70">(<argument pos:start="292:29" pos:end="292:31"><expr pos:start="292:29" pos:end="292:31"><name pos:start="292:29" pos:end="292:31">arg</name></expr></argument>, <argument pos:start="292:34" pos:end="292:69"><expr pos:start="292:34" pos:end="292:69"><call pos:start="292:34" pos:end="292:69"><name pos:start="292:34" pos:end="292:41">offsetof</name><argument_list pos:start="292:42" pos:end="292:69">(<argument pos:start="292:43" pos:end="292:54"><expr pos:start="292:43" pos:end="292:54"><name pos:start="292:43" pos:end="292:54">CPUMIPSState</name></expr></argument>, <argument pos:start="292:57" pos:end="292:68"><expr pos:start="292:57" pos:end="292:68"><name pos:start="292:57" pos:end="292:68">CP0_PageMask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="294:13" pos:end="294:28"><expr pos:start="294:13" pos:end="294:27"><name pos:start="294:13" pos:end="294:14">rn</name> <operator pos:start="294:16" pos:end="294:16">=</operator> <literal type="string" pos:start="294:18" pos:end="294:27">"PageMask"</literal></expr>;</expr_stmt>


        <case pos:start="297:9" pos:end="297:15">case <expr pos:start="297:14" pos:end="297:14"><literal type="number" pos:start="297:14" pos:end="297:14">1</literal></expr>:</case>

            <expr_stmt pos:start="299:13" pos:end="299:42"><expr pos:start="299:13" pos:end="299:41"><call pos:start="299:13" pos:end="299:41"><name pos:start="299:13" pos:end="299:22">check_insn</name><argument_list pos:start="299:23" pos:end="299:41">(<argument pos:start="299:24" pos:end="299:26"><expr pos:start="299:24" pos:end="299:26"><name pos:start="299:24" pos:end="299:26">ctx</name></expr></argument>, <argument pos:start="299:29" pos:end="299:40"><expr pos:start="299:29" pos:end="299:40"><name pos:start="299:29" pos:end="299:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:72"><expr pos:start="301:13" pos:end="301:71"><call pos:start="301:13" pos:end="301:71"><name pos:start="301:13" pos:end="301:27">gen_mfc0_load32</name><argument_list pos:start="301:28" pos:end="301:71">(<argument pos:start="301:29" pos:end="301:31"><expr pos:start="301:29" pos:end="301:31"><name pos:start="301:29" pos:end="301:31">arg</name></expr></argument>, <argument pos:start="301:34" pos:end="301:70"><expr pos:start="301:34" pos:end="301:70"><call pos:start="301:34" pos:end="301:70"><name pos:start="301:34" pos:end="301:41">offsetof</name><argument_list pos:start="301:42" pos:end="301:70">(<argument pos:start="301:43" pos:end="301:54"><expr pos:start="301:43" pos:end="301:54"><name pos:start="301:43" pos:end="301:54">CPUMIPSState</name></expr></argument>, <argument pos:start="301:57" pos:end="301:69"><expr pos:start="301:57" pos:end="301:69"><name pos:start="301:57" pos:end="301:69">CP0_PageGrain</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:29"><expr pos:start="303:13" pos:end="303:28"><name pos:start="303:13" pos:end="303:14">rn</name> <operator pos:start="303:16" pos:end="303:16">=</operator> <literal type="string" pos:start="303:18" pos:end="303:28">"PageGrain"</literal></expr>;</expr_stmt>

















        <default pos:start="321:9" pos:end="321:16">default:</default>

            <goto pos:start="323:13" pos:end="323:35">goto <name pos:start="323:18" pos:end="323:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="328:5" pos:end="328:11">case <expr pos:start="328:10" pos:end="328:10"><literal type="number" pos:start="328:10" pos:end="328:10">6</literal></expr>:</case>

        <switch pos:start="330:9" pos:end="385:9">switch <condition pos:start="330:16" pos:end="330:20">(<expr pos:start="330:17" pos:end="330:19"><name pos:start="330:17" pos:end="330:19">sel</name></expr>)</condition> <block pos:start="330:22" pos:end="385:9">{<block_content pos:start="332:9" pos:end="383:35">

        <case pos:start="332:9" pos:end="332:15">case <expr pos:start="332:14" pos:end="332:14"><literal type="number" pos:start="332:14" pos:end="332:14">0</literal></expr>:</case>

            <expr_stmt pos:start="334:13" pos:end="334:68"><expr pos:start="334:13" pos:end="334:67"><call pos:start="334:13" pos:end="334:67"><name pos:start="334:13" pos:end="334:27">gen_mfc0_load32</name><argument_list pos:start="334:28" pos:end="334:67">(<argument pos:start="334:29" pos:end="334:31"><expr pos:start="334:29" pos:end="334:31"><name pos:start="334:29" pos:end="334:31">arg</name></expr></argument>, <argument pos:start="334:34" pos:end="334:66"><expr pos:start="334:34" pos:end="334:66"><call pos:start="334:34" pos:end="334:66"><name pos:start="334:34" pos:end="334:41">offsetof</name><argument_list pos:start="334:42" pos:end="334:66">(<argument pos:start="334:43" pos:end="334:54"><expr pos:start="334:43" pos:end="334:54"><name pos:start="334:43" pos:end="334:54">CPUMIPSState</name></expr></argument>, <argument pos:start="334:57" pos:end="334:65"><expr pos:start="334:57" pos:end="334:65"><name pos:start="334:57" pos:end="334:65">CP0_Wired</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="336:13" pos:end="336:25"><expr pos:start="336:13" pos:end="336:24"><name pos:start="336:13" pos:end="336:14">rn</name> <operator pos:start="336:16" pos:end="336:16">=</operator> <literal type="string" pos:start="336:18" pos:end="336:24">"Wired"</literal></expr>;</expr_stmt>


        <case pos:start="339:9" pos:end="339:15">case <expr pos:start="339:14" pos:end="339:14"><literal type="number" pos:start="339:14" pos:end="339:14">1</literal></expr>:</case>

            <expr_stmt pos:start="341:13" pos:end="341:42"><expr pos:start="341:13" pos:end="341:41"><call pos:start="341:13" pos:end="341:41"><name pos:start="341:13" pos:end="341:22">check_insn</name><argument_list pos:start="341:23" pos:end="341:41">(<argument pos:start="341:24" pos:end="341:26"><expr pos:start="341:24" pos:end="341:26"><name pos:start="341:24" pos:end="341:26">ctx</name></expr></argument>, <argument pos:start="341:29" pos:end="341:40"><expr pos:start="341:29" pos:end="341:40"><name pos:start="341:29" pos:end="341:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="343:13" pos:end="343:71"><expr pos:start="343:13" pos:end="343:70"><call pos:start="343:13" pos:end="343:70"><name pos:start="343:13" pos:end="343:27">gen_mfc0_load32</name><argument_list pos:start="343:28" pos:end="343:70">(<argument pos:start="343:29" pos:end="343:31"><expr pos:start="343:29" pos:end="343:31"><name pos:start="343:29" pos:end="343:31">arg</name></expr></argument>, <argument pos:start="343:34" pos:end="343:69"><expr pos:start="343:34" pos:end="343:69"><call pos:start="343:34" pos:end="343:69"><name pos:start="343:34" pos:end="343:41">offsetof</name><argument_list pos:start="343:42" pos:end="343:69">(<argument pos:start="343:43" pos:end="343:54"><expr pos:start="343:43" pos:end="343:54"><name pos:start="343:43" pos:end="343:54">CPUMIPSState</name></expr></argument>, <argument pos:start="343:57" pos:end="343:68"><expr pos:start="343:57" pos:end="343:68"><name pos:start="343:57" pos:end="343:68">CP0_SRSConf0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:28"><expr pos:start="345:13" pos:end="345:27"><name pos:start="345:13" pos:end="345:14">rn</name> <operator pos:start="345:16" pos:end="345:16">=</operator> <literal type="string" pos:start="345:18" pos:end="345:27">"SRSConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="349:13" pos:end="349:42"><expr pos:start="349:13" pos:end="349:41"><call pos:start="349:13" pos:end="349:41"><name pos:start="349:13" pos:end="349:22">check_insn</name><argument_list pos:start="349:23" pos:end="349:41">(<argument pos:start="349:24" pos:end="349:26"><expr pos:start="349:24" pos:end="349:26"><name pos:start="349:24" pos:end="349:26">ctx</name></expr></argument>, <argument pos:start="349:29" pos:end="349:40"><expr pos:start="349:29" pos:end="349:40"><name pos:start="349:29" pos:end="349:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:71"><expr pos:start="351:13" pos:end="351:70"><call pos:start="351:13" pos:end="351:70"><name pos:start="351:13" pos:end="351:27">gen_mfc0_load32</name><argument_list pos:start="351:28" pos:end="351:70">(<argument pos:start="351:29" pos:end="351:31"><expr pos:start="351:29" pos:end="351:31"><name pos:start="351:29" pos:end="351:31">arg</name></expr></argument>, <argument pos:start="351:34" pos:end="351:69"><expr pos:start="351:34" pos:end="351:69"><call pos:start="351:34" pos:end="351:69"><name pos:start="351:34" pos:end="351:41">offsetof</name><argument_list pos:start="351:42" pos:end="351:69">(<argument pos:start="351:43" pos:end="351:54"><expr pos:start="351:43" pos:end="351:54"><name pos:start="351:43" pos:end="351:54">CPUMIPSState</name></expr></argument>, <argument pos:start="351:57" pos:end="351:68"><expr pos:start="351:57" pos:end="351:68"><name pos:start="351:57" pos:end="351:68">CP0_SRSConf1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:28"><expr pos:start="353:13" pos:end="353:27"><name pos:start="353:13" pos:end="353:14">rn</name> <operator pos:start="353:16" pos:end="353:16">=</operator> <literal type="string" pos:start="353:18" pos:end="353:27">"SRSConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="357:13" pos:end="357:42"><expr pos:start="357:13" pos:end="357:41"><call pos:start="357:13" pos:end="357:41"><name pos:start="357:13" pos:end="357:22">check_insn</name><argument_list pos:start="357:23" pos:end="357:41">(<argument pos:start="357:24" pos:end="357:26"><expr pos:start="357:24" pos:end="357:26"><name pos:start="357:24" pos:end="357:26">ctx</name></expr></argument>, <argument pos:start="357:29" pos:end="357:40"><expr pos:start="357:29" pos:end="357:40"><name pos:start="357:29" pos:end="357:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:71"><expr pos:start="359:13" pos:end="359:70"><call pos:start="359:13" pos:end="359:70"><name pos:start="359:13" pos:end="359:27">gen_mfc0_load32</name><argument_list pos:start="359:28" pos:end="359:70">(<argument pos:start="359:29" pos:end="359:31"><expr pos:start="359:29" pos:end="359:31"><name pos:start="359:29" pos:end="359:31">arg</name></expr></argument>, <argument pos:start="359:34" pos:end="359:69"><expr pos:start="359:34" pos:end="359:69"><call pos:start="359:34" pos:end="359:69"><name pos:start="359:34" pos:end="359:41">offsetof</name><argument_list pos:start="359:42" pos:end="359:69">(<argument pos:start="359:43" pos:end="359:54"><expr pos:start="359:43" pos:end="359:54"><name pos:start="359:43" pos:end="359:54">CPUMIPSState</name></expr></argument>, <argument pos:start="359:57" pos:end="359:68"><expr pos:start="359:57" pos:end="359:68"><name pos:start="359:57" pos:end="359:68">CP0_SRSConf2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:28"><expr pos:start="361:13" pos:end="361:27"><name pos:start="361:13" pos:end="361:14">rn</name> <operator pos:start="361:16" pos:end="361:16">=</operator> <literal type="string" pos:start="361:18" pos:end="361:27">"SRSConf2"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="365:13" pos:end="365:42"><expr pos:start="365:13" pos:end="365:41"><call pos:start="365:13" pos:end="365:41"><name pos:start="365:13" pos:end="365:22">check_insn</name><argument_list pos:start="365:23" pos:end="365:41">(<argument pos:start="365:24" pos:end="365:26"><expr pos:start="365:24" pos:end="365:26"><name pos:start="365:24" pos:end="365:26">ctx</name></expr></argument>, <argument pos:start="365:29" pos:end="365:40"><expr pos:start="365:29" pos:end="365:40"><name pos:start="365:29" pos:end="365:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:71"><expr pos:start="367:13" pos:end="367:70"><call pos:start="367:13" pos:end="367:70"><name pos:start="367:13" pos:end="367:27">gen_mfc0_load32</name><argument_list pos:start="367:28" pos:end="367:70">(<argument pos:start="367:29" pos:end="367:31"><expr pos:start="367:29" pos:end="367:31"><name pos:start="367:29" pos:end="367:31">arg</name></expr></argument>, <argument pos:start="367:34" pos:end="367:69"><expr pos:start="367:34" pos:end="367:69"><call pos:start="367:34" pos:end="367:69"><name pos:start="367:34" pos:end="367:41">offsetof</name><argument_list pos:start="367:42" pos:end="367:69">(<argument pos:start="367:43" pos:end="367:54"><expr pos:start="367:43" pos:end="367:54"><name pos:start="367:43" pos:end="367:54">CPUMIPSState</name></expr></argument>, <argument pos:start="367:57" pos:end="367:68"><expr pos:start="367:57" pos:end="367:68"><name pos:start="367:57" pos:end="367:68">CP0_SRSConf3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:28"><expr pos:start="369:13" pos:end="369:27"><name pos:start="369:13" pos:end="369:14">rn</name> <operator pos:start="369:16" pos:end="369:16">=</operator> <literal type="string" pos:start="369:18" pos:end="369:27">"SRSConf3"</literal></expr>;</expr_stmt>


        <case pos:start="372:9" pos:end="372:15">case <expr pos:start="372:14" pos:end="372:14"><literal type="number" pos:start="372:14" pos:end="372:14">5</literal></expr>:</case>

            <expr_stmt pos:start="374:13" pos:end="374:42"><expr pos:start="374:13" pos:end="374:41"><call pos:start="374:13" pos:end="374:41"><name pos:start="374:13" pos:end="374:22">check_insn</name><argument_list pos:start="374:23" pos:end="374:41">(<argument pos:start="374:24" pos:end="374:26"><expr pos:start="374:24" pos:end="374:26"><name pos:start="374:24" pos:end="374:26">ctx</name></expr></argument>, <argument pos:start="374:29" pos:end="374:40"><expr pos:start="374:29" pos:end="374:40"><name pos:start="374:29" pos:end="374:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="376:13" pos:end="376:71"><expr pos:start="376:13" pos:end="376:70"><call pos:start="376:13" pos:end="376:70"><name pos:start="376:13" pos:end="376:27">gen_mfc0_load32</name><argument_list pos:start="376:28" pos:end="376:70">(<argument pos:start="376:29" pos:end="376:31"><expr pos:start="376:29" pos:end="376:31"><name pos:start="376:29" pos:end="376:31">arg</name></expr></argument>, <argument pos:start="376:34" pos:end="376:69"><expr pos:start="376:34" pos:end="376:69"><call pos:start="376:34" pos:end="376:69"><name pos:start="376:34" pos:end="376:41">offsetof</name><argument_list pos:start="376:42" pos:end="376:69">(<argument pos:start="376:43" pos:end="376:54"><expr pos:start="376:43" pos:end="376:54"><name pos:start="376:43" pos:end="376:54">CPUMIPSState</name></expr></argument>, <argument pos:start="376:57" pos:end="376:68"><expr pos:start="376:57" pos:end="376:68"><name pos:start="376:57" pos:end="376:68">CP0_SRSConf4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="378:13" pos:end="378:28"><expr pos:start="378:13" pos:end="378:27"><name pos:start="378:13" pos:end="378:14">rn</name> <operator pos:start="378:16" pos:end="378:16">=</operator> <literal type="string" pos:start="378:18" pos:end="378:27">"SRSConf4"</literal></expr>;</expr_stmt>


        <default pos:start="381:9" pos:end="381:16">default:</default>

            <goto pos:start="383:13" pos:end="383:35">goto <name pos:start="383:18" pos:end="383:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="388:5" pos:end="388:11">case <expr pos:start="388:10" pos:end="388:10"><literal type="number" pos:start="388:10" pos:end="388:10">7</literal></expr>:</case>

        <switch pos:start="390:9" pos:end="405:9">switch <condition pos:start="390:16" pos:end="390:20">(<expr pos:start="390:17" pos:end="390:19"><name pos:start="390:17" pos:end="390:19">sel</name></expr>)</condition> <block pos:start="390:22" pos:end="405:9">{<block_content pos:start="392:9" pos:end="403:35">

        <case pos:start="392:9" pos:end="392:15">case <expr pos:start="392:14" pos:end="392:14"><literal type="number" pos:start="392:14" pos:end="392:14">0</literal></expr>:</case>

            <expr_stmt pos:start="394:13" pos:end="394:42"><expr pos:start="394:13" pos:end="394:41"><call pos:start="394:13" pos:end="394:41"><name pos:start="394:13" pos:end="394:22">check_insn</name><argument_list pos:start="394:23" pos:end="394:41">(<argument pos:start="394:24" pos:end="394:26"><expr pos:start="394:24" pos:end="394:26"><name pos:start="394:24" pos:end="394:26">ctx</name></expr></argument>, <argument pos:start="394:29" pos:end="394:40"><expr pos:start="394:29" pos:end="394:40"><name pos:start="394:29" pos:end="394:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="396:13" pos:end="396:69"><expr pos:start="396:13" pos:end="396:68"><call pos:start="396:13" pos:end="396:68"><name pos:start="396:13" pos:end="396:27">gen_mfc0_load32</name><argument_list pos:start="396:28" pos:end="396:68">(<argument pos:start="396:29" pos:end="396:31"><expr pos:start="396:29" pos:end="396:31"><name pos:start="396:29" pos:end="396:31">arg</name></expr></argument>, <argument pos:start="396:34" pos:end="396:67"><expr pos:start="396:34" pos:end="396:67"><call pos:start="396:34" pos:end="396:67"><name pos:start="396:34" pos:end="396:41">offsetof</name><argument_list pos:start="396:42" pos:end="396:67">(<argument pos:start="396:43" pos:end="396:54"><expr pos:start="396:43" pos:end="396:54"><name pos:start="396:43" pos:end="396:54">CPUMIPSState</name></expr></argument>, <argument pos:start="396:57" pos:end="396:66"><expr pos:start="396:57" pos:end="396:66"><name pos:start="396:57" pos:end="396:66">CP0_HWREna</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="398:13" pos:end="398:26"><expr pos:start="398:13" pos:end="398:25"><name pos:start="398:13" pos:end="398:14">rn</name> <operator pos:start="398:16" pos:end="398:16">=</operator> <literal type="string" pos:start="398:18" pos:end="398:25">"HWREna"</literal></expr>;</expr_stmt>


        <default pos:start="401:9" pos:end="401:16">default:</default>

            <goto pos:start="403:13" pos:end="403:35">goto <name pos:start="403:18" pos:end="403:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="408:5" pos:end="408:11">case <expr pos:start="408:10" pos:end="408:10"><literal type="number" pos:start="408:10" pos:end="408:10">8</literal></expr>:</case>

        <switch pos:start="410:9" pos:end="440:9">switch <condition pos:start="410:16" pos:end="410:20">(<expr pos:start="410:17" pos:end="410:19"><name pos:start="410:17" pos:end="410:19">sel</name></expr>)</condition> <block pos:start="410:22" pos:end="440:9">{<block_content pos:start="412:9" pos:end="438:35">

        <case pos:start="412:9" pos:end="412:15">case <expr pos:start="412:14" pos:end="412:14"><literal type="number" pos:start="412:14" pos:end="412:14">0</literal></expr>:</case>

            <expr_stmt pos:start="414:13" pos:end="414:78"><expr pos:start="414:13" pos:end="414:77"><call pos:start="414:13" pos:end="414:77"><name pos:start="414:13" pos:end="414:25">tcg_gen_ld_tl</name><argument_list pos:start="414:26" pos:end="414:77">(<argument pos:start="414:27" pos:end="414:29"><expr pos:start="414:27" pos:end="414:29"><name pos:start="414:27" pos:end="414:29">arg</name></expr></argument>, <argument pos:start="414:32" pos:end="414:38"><expr pos:start="414:32" pos:end="414:38"><name pos:start="414:32" pos:end="414:38">cpu_env</name></expr></argument>, <argument pos:start="414:41" pos:end="414:76"><expr pos:start="414:41" pos:end="414:76"><call pos:start="414:41" pos:end="414:76"><name pos:start="414:41" pos:end="414:48">offsetof</name><argument_list pos:start="414:49" pos:end="414:76">(<argument pos:start="414:50" pos:end="414:61"><expr pos:start="414:50" pos:end="414:61"><name pos:start="414:50" pos:end="414:61">CPUMIPSState</name></expr></argument>, <argument pos:start="414:64" pos:end="414:75"><expr pos:start="414:64" pos:end="414:75"><name pos:start="414:64" pos:end="414:75">CP0_BadVAddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="416:13" pos:end="416:28"><expr pos:start="416:13" pos:end="416:27"><name pos:start="416:13" pos:end="416:14">rn</name> <operator pos:start="416:16" pos:end="416:16">=</operator> <literal type="string" pos:start="416:18" pos:end="416:27">"BadVAddr"</literal></expr>;</expr_stmt>


        <case pos:start="419:9" pos:end="419:15">case <expr pos:start="419:14" pos:end="419:14"><literal type="number" pos:start="419:14" pos:end="419:14">1</literal></expr>:</case>

            <expr_stmt pos:start="421:13" pos:end="421:31"><expr pos:start="421:13" pos:end="421:30"><call pos:start="421:13" pos:end="421:30"><name pos:start="421:13" pos:end="421:21">CP0_CHECK</name><argument_list pos:start="421:22" pos:end="421:30">(<argument pos:start="421:23" pos:end="421:29"><expr pos:start="421:23" pos:end="421:29"><name pos:start="421:23" pos:end="421:29"><name pos:start="421:23" pos:end="421:25">ctx</name><operator pos:start="421:26" pos:end="421:27">-&gt;</operator><name pos:start="421:28" pos:end="421:29">bi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="423:13" pos:end="423:71"><expr pos:start="423:13" pos:end="423:70"><call pos:start="423:13" pos:end="423:70"><name pos:start="423:13" pos:end="423:27">gen_mfc0_load32</name><argument_list pos:start="423:28" pos:end="423:70">(<argument pos:start="423:29" pos:end="423:31"><expr pos:start="423:29" pos:end="423:31"><name pos:start="423:29" pos:end="423:31">arg</name></expr></argument>, <argument pos:start="423:34" pos:end="423:69"><expr pos:start="423:34" pos:end="423:69"><call pos:start="423:34" pos:end="423:69"><name pos:start="423:34" pos:end="423:41">offsetof</name><argument_list pos:start="423:42" pos:end="423:69">(<argument pos:start="423:43" pos:end="423:54"><expr pos:start="423:43" pos:end="423:54"><name pos:start="423:43" pos:end="423:54">CPUMIPSState</name></expr></argument>, <argument pos:start="423:57" pos:end="423:68"><expr pos:start="423:57" pos:end="423:68"><name pos:start="423:57" pos:end="423:68">CP0_BadInstr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:28"><expr pos:start="425:13" pos:end="425:27"><name pos:start="425:13" pos:end="425:14">rn</name> <operator pos:start="425:16" pos:end="425:16">=</operator> <literal type="string" pos:start="425:18" pos:end="425:27">"BadInstr"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="429:13" pos:end="429:31"><expr pos:start="429:13" pos:end="429:30"><call pos:start="429:13" pos:end="429:30"><name pos:start="429:13" pos:end="429:21">CP0_CHECK</name><argument_list pos:start="429:22" pos:end="429:30">(<argument pos:start="429:23" pos:end="429:29"><expr pos:start="429:23" pos:end="429:29"><name pos:start="429:23" pos:end="429:29"><name pos:start="429:23" pos:end="429:25">ctx</name><operator pos:start="429:26" pos:end="429:27">-&gt;</operator><name pos:start="429:28" pos:end="429:29">bp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:72"><expr pos:start="431:13" pos:end="431:71"><call pos:start="431:13" pos:end="431:71"><name pos:start="431:13" pos:end="431:27">gen_mfc0_load32</name><argument_list pos:start="431:28" pos:end="431:71">(<argument pos:start="431:29" pos:end="431:31"><expr pos:start="431:29" pos:end="431:31"><name pos:start="431:29" pos:end="431:31">arg</name></expr></argument>, <argument pos:start="431:34" pos:end="431:70"><expr pos:start="431:34" pos:end="431:70"><call pos:start="431:34" pos:end="431:70"><name pos:start="431:34" pos:end="431:41">offsetof</name><argument_list pos:start="431:42" pos:end="431:70">(<argument pos:start="431:43" pos:end="431:54"><expr pos:start="431:43" pos:end="431:54"><name pos:start="431:43" pos:end="431:54">CPUMIPSState</name></expr></argument>, <argument pos:start="431:57" pos:end="431:69"><expr pos:start="431:57" pos:end="431:69"><name pos:start="431:57" pos:end="431:69">CP0_BadInstrP</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:29"><expr pos:start="433:13" pos:end="433:28"><name pos:start="433:13" pos:end="433:14">rn</name> <operator pos:start="433:16" pos:end="433:16">=</operator> <literal type="string" pos:start="433:18" pos:end="433:28">"BadInstrP"</literal></expr>;</expr_stmt>


        <default pos:start="436:9" pos:end="436:16">default:</default>

            <goto pos:start="438:13" pos:end="438:35">goto <name pos:start="438:18" pos:end="438:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="443:5" pos:end="443:11">case <expr pos:start="443:10" pos:end="443:10"><literal type="number" pos:start="443:10" pos:end="443:10">9</literal></expr>:</case>

        <switch pos:start="445:9" pos:end="480:9">switch <condition pos:start="445:16" pos:end="445:20">(<expr pos:start="445:17" pos:end="445:19"><name pos:start="445:17" pos:end="445:19">sel</name></expr>)</condition> <block pos:start="445:22" pos:end="480:9">{<block_content pos:start="447:9" pos:end="478:35">

        <case pos:start="447:9" pos:end="447:15">case <expr pos:start="447:14" pos:end="447:14"><literal type="number" pos:start="447:14" pos:end="447:14">0</literal></expr>:</case>

            <comment type="block" pos:start="449:13" pos:end="449:68">/* Mark as an IO operation because we read the time.  */</comment>

            <if_stmt pos:start="451:13" pos:end="455:13"><if pos:start="451:13" pos:end="455:13">if <condition pos:start="451:16" pos:end="451:48">(<expr pos:start="451:17" pos:end="451:47"><name pos:start="451:17" pos:end="451:31"><name pos:start="451:17" pos:end="451:19">ctx</name><operator pos:start="451:20" pos:end="451:21">-&gt;</operator><name pos:start="451:22" pos:end="451:23">tb</name><operator pos:start="451:24" pos:end="451:25">-&gt;</operator><name pos:start="451:26" pos:end="451:31">cflags</name></name> <operator pos:start="451:33" pos:end="451:33">&amp;</operator> <name pos:start="451:35" pos:end="451:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="451:50" pos:end="455:13">{<block_content pos:start="453:17" pos:end="453:31">

                <expr_stmt pos:start="453:17" pos:end="453:31"><expr pos:start="453:17" pos:end="453:30"><call pos:start="453:17" pos:end="453:30"><name pos:start="453:17" pos:end="453:28">gen_io_start</name><argument_list pos:start="453:29" pos:end="453:30">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:48"><expr pos:start="457:13" pos:end="457:47"><call pos:start="457:13" pos:end="457:47"><name pos:start="457:13" pos:end="457:33">gen_helper_mfc0_count</name><argument_list pos:start="457:34" pos:end="457:47">(<argument pos:start="457:35" pos:end="457:37"><expr pos:start="457:35" pos:end="457:37"><name pos:start="457:35" pos:end="457:37">arg</name></expr></argument>, <argument pos:start="457:40" pos:end="457:46"><expr pos:start="457:40" pos:end="457:46"><name pos:start="457:40" pos:end="457:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="459:13" pos:end="463:13"><if pos:start="459:13" pos:end="463:13">if <condition pos:start="459:16" pos:end="459:48">(<expr pos:start="459:17" pos:end="459:47"><name pos:start="459:17" pos:end="459:31"><name pos:start="459:17" pos:end="459:19">ctx</name><operator pos:start="459:20" pos:end="459:21">-&gt;</operator><name pos:start="459:22" pos:end="459:23">tb</name><operator pos:start="459:24" pos:end="459:25">-&gt;</operator><name pos:start="459:26" pos:end="459:31">cflags</name></name> <operator pos:start="459:33" pos:end="459:33">&amp;</operator> <name pos:start="459:35" pos:end="459:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="459:50" pos:end="463:13">{<block_content pos:start="461:17" pos:end="461:29">

                <expr_stmt pos:start="461:17" pos:end="461:29"><expr pos:start="461:17" pos:end="461:28"><call pos:start="461:17" pos:end="461:28"><name pos:start="461:17" pos:end="461:26">gen_io_end</name><argument_list pos:start="461:27" pos:end="461:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="465:13" pos:end="467:39">/* Break the TB to be able to take timer interrupts immediately

               after reading count.  */</comment>

            <expr_stmt pos:start="469:13" pos:end="469:34"><expr pos:start="469:13" pos:end="469:33"><name pos:start="469:13" pos:end="469:23"><name pos:start="469:13" pos:end="469:15">ctx</name><operator pos:start="469:16" pos:end="469:17">-&gt;</operator><name pos:start="469:18" pos:end="469:23">bstate</name></name> <operator pos:start="469:25" pos:end="469:25">=</operator> <name pos:start="469:27" pos:end="469:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:25"><expr pos:start="471:13" pos:end="471:24"><name pos:start="471:13" pos:end="471:14">rn</name> <operator pos:start="471:16" pos:end="471:16">=</operator> <literal type="string" pos:start="471:18" pos:end="471:24">"Count"</literal></expr>;</expr_stmt>


        <comment type="block" pos:start="474:9" pos:end="474:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="476:9" pos:end="476:16">default:</default>

            <goto pos:start="478:13" pos:end="478:35">goto <name pos:start="478:18" pos:end="478:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="483:5" pos:end="483:12">case <expr pos:start="483:10" pos:end="483:11"><literal type="number" pos:start="483:10" pos:end="483:11">10</literal></expr>:</case>

        <switch pos:start="485:9" pos:end="498:9">switch <condition pos:start="485:16" pos:end="485:20">(<expr pos:start="485:17" pos:end="485:19"><name pos:start="485:17" pos:end="485:19">sel</name></expr>)</condition> <block pos:start="485:22" pos:end="498:9">{<block_content pos:start="487:9" pos:end="496:35">

        <case pos:start="487:9" pos:end="487:15">case <expr pos:start="487:14" pos:end="487:14"><literal type="number" pos:start="487:14" pos:end="487:14">0</literal></expr>:</case>

            <expr_stmt pos:start="489:13" pos:end="489:77"><expr pos:start="489:13" pos:end="489:76"><call pos:start="489:13" pos:end="489:76"><name pos:start="489:13" pos:end="489:25">tcg_gen_ld_tl</name><argument_list pos:start="489:26" pos:end="489:76">(<argument pos:start="489:27" pos:end="489:29"><expr pos:start="489:27" pos:end="489:29"><name pos:start="489:27" pos:end="489:29">arg</name></expr></argument>, <argument pos:start="489:32" pos:end="489:38"><expr pos:start="489:32" pos:end="489:38"><name pos:start="489:32" pos:end="489:38">cpu_env</name></expr></argument>, <argument pos:start="489:41" pos:end="489:75"><expr pos:start="489:41" pos:end="489:75"><call pos:start="489:41" pos:end="489:75"><name pos:start="489:41" pos:end="489:48">offsetof</name><argument_list pos:start="489:49" pos:end="489:75">(<argument pos:start="489:50" pos:end="489:61"><expr pos:start="489:50" pos:end="489:61"><name pos:start="489:50" pos:end="489:61">CPUMIPSState</name></expr></argument>, <argument pos:start="489:64" pos:end="489:74"><expr pos:start="489:64" pos:end="489:74"><name pos:start="489:64" pos:end="489:74">CP0_EntryHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:27"><expr pos:start="491:13" pos:end="491:26"><name pos:start="491:13" pos:end="491:14">rn</name> <operator pos:start="491:16" pos:end="491:16">=</operator> <literal type="string" pos:start="491:18" pos:end="491:26">"EntryHi"</literal></expr>;</expr_stmt>


        <default pos:start="494:9" pos:end="494:16">default:</default>

            <goto pos:start="496:13" pos:end="496:35">goto <name pos:start="496:18" pos:end="496:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="501:5" pos:end="501:12">case <expr pos:start="501:10" pos:end="501:11"><literal type="number" pos:start="501:10" pos:end="501:11">11</literal></expr>:</case>

        <switch pos:start="503:9" pos:end="518:9">switch <condition pos:start="503:16" pos:end="503:20">(<expr pos:start="503:17" pos:end="503:19"><name pos:start="503:17" pos:end="503:19">sel</name></expr>)</condition> <block pos:start="503:22" pos:end="518:9">{<block_content pos:start="505:9" pos:end="516:35">

        <case pos:start="505:9" pos:end="505:15">case <expr pos:start="505:14" pos:end="505:14"><literal type="number" pos:start="505:14" pos:end="505:14">0</literal></expr>:</case>

            <expr_stmt pos:start="507:13" pos:end="507:70"><expr pos:start="507:13" pos:end="507:69"><call pos:start="507:13" pos:end="507:69"><name pos:start="507:13" pos:end="507:27">gen_mfc0_load32</name><argument_list pos:start="507:28" pos:end="507:69">(<argument pos:start="507:29" pos:end="507:31"><expr pos:start="507:29" pos:end="507:31"><name pos:start="507:29" pos:end="507:31">arg</name></expr></argument>, <argument pos:start="507:34" pos:end="507:68"><expr pos:start="507:34" pos:end="507:68"><call pos:start="507:34" pos:end="507:68"><name pos:start="507:34" pos:end="507:41">offsetof</name><argument_list pos:start="507:42" pos:end="507:68">(<argument pos:start="507:43" pos:end="507:54"><expr pos:start="507:43" pos:end="507:54"><name pos:start="507:43" pos:end="507:54">CPUMIPSState</name></expr></argument>, <argument pos:start="507:57" pos:end="507:67"><expr pos:start="507:57" pos:end="507:67"><name pos:start="507:57" pos:end="507:67">CP0_Compare</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="509:13" pos:end="509:27"><expr pos:start="509:13" pos:end="509:26"><name pos:start="509:13" pos:end="509:14">rn</name> <operator pos:start="509:16" pos:end="509:16">=</operator> <literal type="string" pos:start="509:18" pos:end="509:26">"Compare"</literal></expr>;</expr_stmt>


        <comment type="block" pos:start="512:9" pos:end="512:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="514:9" pos:end="514:16">default:</default>

            <goto pos:start="516:13" pos:end="516:35">goto <name pos:start="516:18" pos:end="516:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="521:5" pos:end="521:12">case <expr pos:start="521:10" pos:end="521:11"><literal type="number" pos:start="521:10" pos:end="521:11">12</literal></expr>:</case>

        <switch pos:start="523:9" pos:end="561:9">switch <condition pos:start="523:16" pos:end="523:20">(<expr pos:start="523:17" pos:end="523:19"><name pos:start="523:17" pos:end="523:19">sel</name></expr>)</condition> <block pos:start="523:22" pos:end="561:9">{<block_content pos:start="525:9" pos:end="559:35">

        <case pos:start="525:9" pos:end="525:15">case <expr pos:start="525:14" pos:end="525:14"><literal type="number" pos:start="525:14" pos:end="525:14">0</literal></expr>:</case>

            <expr_stmt pos:start="527:13" pos:end="527:69"><expr pos:start="527:13" pos:end="527:68"><call pos:start="527:13" pos:end="527:68"><name pos:start="527:13" pos:end="527:27">gen_mfc0_load32</name><argument_list pos:start="527:28" pos:end="527:68">(<argument pos:start="527:29" pos:end="527:31"><expr pos:start="527:29" pos:end="527:31"><name pos:start="527:29" pos:end="527:31">arg</name></expr></argument>, <argument pos:start="527:34" pos:end="527:67"><expr pos:start="527:34" pos:end="527:67"><call pos:start="527:34" pos:end="527:67"><name pos:start="527:34" pos:end="527:41">offsetof</name><argument_list pos:start="527:42" pos:end="527:67">(<argument pos:start="527:43" pos:end="527:54"><expr pos:start="527:43" pos:end="527:54"><name pos:start="527:43" pos:end="527:54">CPUMIPSState</name></expr></argument>, <argument pos:start="527:57" pos:end="527:66"><expr pos:start="527:57" pos:end="527:66"><name pos:start="527:57" pos:end="527:66">CP0_Status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:26"><expr pos:start="529:13" pos:end="529:25"><name pos:start="529:13" pos:end="529:14">rn</name> <operator pos:start="529:16" pos:end="529:16">=</operator> <literal type="string" pos:start="529:18" pos:end="529:25">"Status"</literal></expr>;</expr_stmt>


        <case pos:start="532:9" pos:end="532:15">case <expr pos:start="532:14" pos:end="532:14"><literal type="number" pos:start="532:14" pos:end="532:14">1</literal></expr>:</case>

            <expr_stmt pos:start="534:13" pos:end="534:42"><expr pos:start="534:13" pos:end="534:41"><call pos:start="534:13" pos:end="534:41"><name pos:start="534:13" pos:end="534:22">check_insn</name><argument_list pos:start="534:23" pos:end="534:41">(<argument pos:start="534:24" pos:end="534:26"><expr pos:start="534:24" pos:end="534:26"><name pos:start="534:24" pos:end="534:26">ctx</name></expr></argument>, <argument pos:start="534:29" pos:end="534:40"><expr pos:start="534:29" pos:end="534:40"><name pos:start="534:29" pos:end="534:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="536:13" pos:end="536:69"><expr pos:start="536:13" pos:end="536:68"><call pos:start="536:13" pos:end="536:68"><name pos:start="536:13" pos:end="536:27">gen_mfc0_load32</name><argument_list pos:start="536:28" pos:end="536:68">(<argument pos:start="536:29" pos:end="536:31"><expr pos:start="536:29" pos:end="536:31"><name pos:start="536:29" pos:end="536:31">arg</name></expr></argument>, <argument pos:start="536:34" pos:end="536:67"><expr pos:start="536:34" pos:end="536:67"><call pos:start="536:34" pos:end="536:67"><name pos:start="536:34" pos:end="536:41">offsetof</name><argument_list pos:start="536:42" pos:end="536:67">(<argument pos:start="536:43" pos:end="536:54"><expr pos:start="536:43" pos:end="536:54"><name pos:start="536:43" pos:end="536:54">CPUMIPSState</name></expr></argument>, <argument pos:start="536:57" pos:end="536:66"><expr pos:start="536:57" pos:end="536:66"><name pos:start="536:57" pos:end="536:66">CP0_IntCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="538:13" pos:end="538:26"><expr pos:start="538:13" pos:end="538:25"><name pos:start="538:13" pos:end="538:14">rn</name> <operator pos:start="538:16" pos:end="538:16">=</operator> <literal type="string" pos:start="538:18" pos:end="538:25">"IntCtl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="542:13" pos:end="542:42"><expr pos:start="542:13" pos:end="542:41"><call pos:start="542:13" pos:end="542:41"><name pos:start="542:13" pos:end="542:22">check_insn</name><argument_list pos:start="542:23" pos:end="542:41">(<argument pos:start="542:24" pos:end="542:26"><expr pos:start="542:24" pos:end="542:26"><name pos:start="542:24" pos:end="542:26">ctx</name></expr></argument>, <argument pos:start="542:29" pos:end="542:40"><expr pos:start="542:29" pos:end="542:40"><name pos:start="542:29" pos:end="542:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="544:13" pos:end="544:69"><expr pos:start="544:13" pos:end="544:68"><call pos:start="544:13" pos:end="544:68"><name pos:start="544:13" pos:end="544:27">gen_mfc0_load32</name><argument_list pos:start="544:28" pos:end="544:68">(<argument pos:start="544:29" pos:end="544:31"><expr pos:start="544:29" pos:end="544:31"><name pos:start="544:29" pos:end="544:31">arg</name></expr></argument>, <argument pos:start="544:34" pos:end="544:67"><expr pos:start="544:34" pos:end="544:67"><call pos:start="544:34" pos:end="544:67"><name pos:start="544:34" pos:end="544:41">offsetof</name><argument_list pos:start="544:42" pos:end="544:67">(<argument pos:start="544:43" pos:end="544:54"><expr pos:start="544:43" pos:end="544:54"><name pos:start="544:43" pos:end="544:54">CPUMIPSState</name></expr></argument>, <argument pos:start="544:57" pos:end="544:66"><expr pos:start="544:57" pos:end="544:66"><name pos:start="544:57" pos:end="544:66">CP0_SRSCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="546:13" pos:end="546:26"><expr pos:start="546:13" pos:end="546:25"><name pos:start="546:13" pos:end="546:14">rn</name> <operator pos:start="546:16" pos:end="546:16">=</operator> <literal type="string" pos:start="546:18" pos:end="546:25">"SRSCtl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="550:13" pos:end="550:42"><expr pos:start="550:13" pos:end="550:41"><call pos:start="550:13" pos:end="550:41"><name pos:start="550:13" pos:end="550:22">check_insn</name><argument_list pos:start="550:23" pos:end="550:41">(<argument pos:start="550:24" pos:end="550:26"><expr pos:start="550:24" pos:end="550:26"><name pos:start="550:24" pos:end="550:26">ctx</name></expr></argument>, <argument pos:start="550:29" pos:end="550:40"><expr pos:start="550:29" pos:end="550:40"><name pos:start="550:29" pos:end="550:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="552:13" pos:end="552:69"><expr pos:start="552:13" pos:end="552:68"><call pos:start="552:13" pos:end="552:68"><name pos:start="552:13" pos:end="552:27">gen_mfc0_load32</name><argument_list pos:start="552:28" pos:end="552:68">(<argument pos:start="552:29" pos:end="552:31"><expr pos:start="552:29" pos:end="552:31"><name pos:start="552:29" pos:end="552:31">arg</name></expr></argument>, <argument pos:start="552:34" pos:end="552:67"><expr pos:start="552:34" pos:end="552:67"><call pos:start="552:34" pos:end="552:67"><name pos:start="552:34" pos:end="552:41">offsetof</name><argument_list pos:start="552:42" pos:end="552:67">(<argument pos:start="552:43" pos:end="552:54"><expr pos:start="552:43" pos:end="552:54"><name pos:start="552:43" pos:end="552:54">CPUMIPSState</name></expr></argument>, <argument pos:start="552:57" pos:end="552:66"><expr pos:start="552:57" pos:end="552:66"><name pos:start="552:57" pos:end="552:66">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="554:13" pos:end="554:26"><expr pos:start="554:13" pos:end="554:25"><name pos:start="554:13" pos:end="554:14">rn</name> <operator pos:start="554:16" pos:end="554:16">=</operator> <literal type="string" pos:start="554:18" pos:end="554:25">"SRSMap"</literal></expr>;</expr_stmt>


        <default pos:start="557:9" pos:end="557:16">default:</default>

            <goto pos:start="559:13" pos:end="559:35">goto <name pos:start="559:18" pos:end="559:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="564:5" pos:end="564:12">case <expr pos:start="564:10" pos:end="564:11"><literal type="number" pos:start="564:10" pos:end="564:11">13</literal></expr>:</case>

        <switch pos:start="566:9" pos:end="579:9">switch <condition pos:start="566:16" pos:end="566:20">(<expr pos:start="566:17" pos:end="566:19"><name pos:start="566:17" pos:end="566:19">sel</name></expr>)</condition> <block pos:start="566:22" pos:end="579:9">{<block_content pos:start="568:9" pos:end="577:35">

        <case pos:start="568:9" pos:end="568:15">case <expr pos:start="568:14" pos:end="568:14"><literal type="number" pos:start="568:14" pos:end="568:14">0</literal></expr>:</case>

            <expr_stmt pos:start="570:13" pos:end="570:68"><expr pos:start="570:13" pos:end="570:67"><call pos:start="570:13" pos:end="570:67"><name pos:start="570:13" pos:end="570:27">gen_mfc0_load32</name><argument_list pos:start="570:28" pos:end="570:67">(<argument pos:start="570:29" pos:end="570:31"><expr pos:start="570:29" pos:end="570:31"><name pos:start="570:29" pos:end="570:31">arg</name></expr></argument>, <argument pos:start="570:34" pos:end="570:66"><expr pos:start="570:34" pos:end="570:66"><call pos:start="570:34" pos:end="570:66"><name pos:start="570:34" pos:end="570:41">offsetof</name><argument_list pos:start="570:42" pos:end="570:66">(<argument pos:start="570:43" pos:end="570:54"><expr pos:start="570:43" pos:end="570:54"><name pos:start="570:43" pos:end="570:54">CPUMIPSState</name></expr></argument>, <argument pos:start="570:57" pos:end="570:65"><expr pos:start="570:57" pos:end="570:65"><name pos:start="570:57" pos:end="570:65">CP0_Cause</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="572:13" pos:end="572:25"><expr pos:start="572:13" pos:end="572:24"><name pos:start="572:13" pos:end="572:14">rn</name> <operator pos:start="572:16" pos:end="572:16">=</operator> <literal type="string" pos:start="572:18" pos:end="572:24">"Cause"</literal></expr>;</expr_stmt>


        <default pos:start="575:9" pos:end="575:16">default:</default>

            <goto pos:start="577:13" pos:end="577:35">goto <name pos:start="577:18" pos:end="577:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="582:5" pos:end="582:12">case <expr pos:start="582:10" pos:end="582:11"><literal type="number" pos:start="582:10" pos:end="582:11">14</literal></expr>:</case>

        <switch pos:start="584:9" pos:end="597:9">switch <condition pos:start="584:16" pos:end="584:20">(<expr pos:start="584:17" pos:end="584:19"><name pos:start="584:17" pos:end="584:19">sel</name></expr>)</condition> <block pos:start="584:22" pos:end="597:9">{<block_content pos:start="586:9" pos:end="595:35">

        <case pos:start="586:9" pos:end="586:15">case <expr pos:start="586:14" pos:end="586:14"><literal type="number" pos:start="586:14" pos:end="586:14">0</literal></expr>:</case>

            <expr_stmt pos:start="588:13" pos:end="588:73"><expr pos:start="588:13" pos:end="588:72"><call pos:start="588:13" pos:end="588:72"><name pos:start="588:13" pos:end="588:25">tcg_gen_ld_tl</name><argument_list pos:start="588:26" pos:end="588:72">(<argument pos:start="588:27" pos:end="588:29"><expr pos:start="588:27" pos:end="588:29"><name pos:start="588:27" pos:end="588:29">arg</name></expr></argument>, <argument pos:start="588:32" pos:end="588:38"><expr pos:start="588:32" pos:end="588:38"><name pos:start="588:32" pos:end="588:38">cpu_env</name></expr></argument>, <argument pos:start="588:41" pos:end="588:71"><expr pos:start="588:41" pos:end="588:71"><call pos:start="588:41" pos:end="588:71"><name pos:start="588:41" pos:end="588:48">offsetof</name><argument_list pos:start="588:49" pos:end="588:71">(<argument pos:start="588:50" pos:end="588:61"><expr pos:start="588:50" pos:end="588:61"><name pos:start="588:50" pos:end="588:61">CPUMIPSState</name></expr></argument>, <argument pos:start="588:64" pos:end="588:70"><expr pos:start="588:64" pos:end="588:70"><name pos:start="588:64" pos:end="588:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="590:13" pos:end="590:23"><expr pos:start="590:13" pos:end="590:22"><name pos:start="590:13" pos:end="590:14">rn</name> <operator pos:start="590:16" pos:end="590:16">=</operator> <literal type="string" pos:start="590:18" pos:end="590:22">"EPC"</literal></expr>;</expr_stmt>


        <default pos:start="593:9" pos:end="593:16">default:</default>

            <goto pos:start="595:13" pos:end="595:35">goto <name pos:start="595:18" pos:end="595:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="600:5" pos:end="600:12">case <expr pos:start="600:10" pos:end="600:11"><literal type="number" pos:start="600:10" pos:end="600:11">15</literal></expr>:</case>

        <switch pos:start="602:9" pos:end="634:9">switch <condition pos:start="602:16" pos:end="602:20">(<expr pos:start="602:17" pos:end="602:19"><name pos:start="602:17" pos:end="602:19">sel</name></expr>)</condition> <block pos:start="602:22" pos:end="634:9">{<block_content pos:start="604:9" pos:end="632:35">

        <case pos:start="604:9" pos:end="604:15">case <expr pos:start="604:14" pos:end="604:14"><literal type="number" pos:start="604:14" pos:end="604:14">0</literal></expr>:</case>

            <expr_stmt pos:start="606:13" pos:end="606:67"><expr pos:start="606:13" pos:end="606:66"><call pos:start="606:13" pos:end="606:66"><name pos:start="606:13" pos:end="606:27">gen_mfc0_load32</name><argument_list pos:start="606:28" pos:end="606:66">(<argument pos:start="606:29" pos:end="606:31"><expr pos:start="606:29" pos:end="606:31"><name pos:start="606:29" pos:end="606:31">arg</name></expr></argument>, <argument pos:start="606:34" pos:end="606:65"><expr pos:start="606:34" pos:end="606:65"><call pos:start="606:34" pos:end="606:65"><name pos:start="606:34" pos:end="606:41">offsetof</name><argument_list pos:start="606:42" pos:end="606:65">(<argument pos:start="606:43" pos:end="606:54"><expr pos:start="606:43" pos:end="606:54"><name pos:start="606:43" pos:end="606:54">CPUMIPSState</name></expr></argument>, <argument pos:start="606:57" pos:end="606:64"><expr pos:start="606:57" pos:end="606:64"><name pos:start="606:57" pos:end="606:64">CP0_PRid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="608:13" pos:end="608:24"><expr pos:start="608:13" pos:end="608:23"><name pos:start="608:13" pos:end="608:14">rn</name> <operator pos:start="608:16" pos:end="608:16">=</operator> <literal type="string" pos:start="608:18" pos:end="608:23">"PRid"</literal></expr>;</expr_stmt>


        <case pos:start="611:9" pos:end="611:15">case <expr pos:start="611:14" pos:end="611:14"><literal type="number" pos:start="611:14" pos:end="611:14">1</literal></expr>:</case>

            <expr_stmt pos:start="613:13" pos:end="613:42"><expr pos:start="613:13" pos:end="613:41"><call pos:start="613:13" pos:end="613:41"><name pos:start="613:13" pos:end="613:22">check_insn</name><argument_list pos:start="613:23" pos:end="613:41">(<argument pos:start="613:24" pos:end="613:26"><expr pos:start="613:24" pos:end="613:26"><name pos:start="613:24" pos:end="613:26">ctx</name></expr></argument>, <argument pos:start="613:29" pos:end="613:40"><expr pos:start="613:29" pos:end="613:40"><name pos:start="613:29" pos:end="613:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:75"><expr pos:start="615:13" pos:end="615:74"><call pos:start="615:13" pos:end="615:74"><name pos:start="615:13" pos:end="615:25">tcg_gen_ld_tl</name><argument_list pos:start="615:26" pos:end="615:74">(<argument pos:start="615:27" pos:end="615:29"><expr pos:start="615:27" pos:end="615:29"><name pos:start="615:27" pos:end="615:29">arg</name></expr></argument>, <argument pos:start="615:32" pos:end="615:38"><expr pos:start="615:32" pos:end="615:38"><name pos:start="615:32" pos:end="615:38">cpu_env</name></expr></argument>, <argument pos:start="615:41" pos:end="615:73"><expr pos:start="615:41" pos:end="615:73"><call pos:start="615:41" pos:end="615:73"><name pos:start="615:41" pos:end="615:48">offsetof</name><argument_list pos:start="615:49" pos:end="615:73">(<argument pos:start="615:50" pos:end="615:61"><expr pos:start="615:50" pos:end="615:61"><name pos:start="615:50" pos:end="615:61">CPUMIPSState</name></expr></argument>, <argument pos:start="615:64" pos:end="615:72"><expr pos:start="615:64" pos:end="615:72"><name pos:start="615:64" pos:end="615:72">CP0_EBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:25"><expr pos:start="617:13" pos:end="617:24"><name pos:start="617:13" pos:end="617:14">rn</name> <operator pos:start="617:16" pos:end="617:16">=</operator> <literal type="string" pos:start="617:18" pos:end="617:24">"EBase"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="621:13" pos:end="621:42"><expr pos:start="621:13" pos:end="621:41"><call pos:start="621:13" pos:end="621:41"><name pos:start="621:13" pos:end="621:22">check_insn</name><argument_list pos:start="621:23" pos:end="621:41">(<argument pos:start="621:24" pos:end="621:26"><expr pos:start="621:24" pos:end="621:26"><name pos:start="621:24" pos:end="621:26">ctx</name></expr></argument>, <argument pos:start="621:29" pos:end="621:40"><expr pos:start="621:29" pos:end="621:40"><name pos:start="621:29" pos:end="621:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="623:34"><expr pos:start="623:13" pos:end="623:33"><call pos:start="623:13" pos:end="623:33"><name pos:start="623:13" pos:end="623:21">CP0_CHECK</name><argument_list pos:start="623:22" pos:end="623:33">(<argument pos:start="623:23" pos:end="623:32"><expr pos:start="623:23" pos:end="623:32"><name pos:start="623:23" pos:end="623:32"><name pos:start="623:23" pos:end="623:25">ctx</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:32">cmgcr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="625:13" pos:end="625:79"><expr pos:start="625:13" pos:end="625:78"><call pos:start="625:13" pos:end="625:78"><name pos:start="625:13" pos:end="625:25">tcg_gen_ld_tl</name><argument_list pos:start="625:26" pos:end="625:78">(<argument pos:start="625:27" pos:end="625:29"><expr pos:start="625:27" pos:end="625:29"><name pos:start="625:27" pos:end="625:29">arg</name></expr></argument>, <argument pos:start="625:32" pos:end="625:38"><expr pos:start="625:32" pos:end="625:38"><name pos:start="625:32" pos:end="625:38">cpu_env</name></expr></argument>, <argument pos:start="625:41" pos:end="625:77"><expr pos:start="625:41" pos:end="625:77"><call pos:start="625:41" pos:end="625:77"><name pos:start="625:41" pos:end="625:48">offsetof</name><argument_list pos:start="625:49" pos:end="625:77">(<argument pos:start="625:50" pos:end="625:61"><expr pos:start="625:50" pos:end="625:61"><name pos:start="625:50" pos:end="625:61">CPUMIPSState</name></expr></argument>, <argument pos:start="625:64" pos:end="625:76"><expr pos:start="625:64" pos:end="625:76"><name pos:start="625:64" pos:end="625:76">CP0_CMGCRBase</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="627:13" pos:end="627:29"><expr pos:start="627:13" pos:end="627:28"><name pos:start="627:13" pos:end="627:14">rn</name> <operator pos:start="627:16" pos:end="627:16">=</operator> <literal type="string" pos:start="627:18" pos:end="627:28">"CMGCRBase"</literal></expr>;</expr_stmt>


        <default pos:start="630:9" pos:end="630:16">default:</default>

            <goto pos:start="632:13" pos:end="632:35">goto <name pos:start="632:18" pos:end="632:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="637:5" pos:end="637:12">case <expr pos:start="637:10" pos:end="637:11"><literal type="number" pos:start="637:10" pos:end="637:11">16</literal></expr>:</case>

        <switch pos:start="639:9" pos:end="700:9">switch <condition pos:start="639:16" pos:end="639:20">(<expr pos:start="639:17" pos:end="639:19"><name pos:start="639:17" pos:end="639:19">sel</name></expr>)</condition> <block pos:start="639:22" pos:end="700:9">{<block_content pos:start="641:9" pos:end="698:35">

        <case pos:start="641:9" pos:end="641:15">case <expr pos:start="641:14" pos:end="641:14"><literal type="number" pos:start="641:14" pos:end="641:14">0</literal></expr>:</case>

            <expr_stmt pos:start="643:13" pos:end="643:70"><expr pos:start="643:13" pos:end="643:69"><call pos:start="643:13" pos:end="643:69"><name pos:start="643:13" pos:end="643:27">gen_mfc0_load32</name><argument_list pos:start="643:28" pos:end="643:69">(<argument pos:start="643:29" pos:end="643:31"><expr pos:start="643:29" pos:end="643:31"><name pos:start="643:29" pos:end="643:31">arg</name></expr></argument>, <argument pos:start="643:34" pos:end="643:68"><expr pos:start="643:34" pos:end="643:68"><call pos:start="643:34" pos:end="643:68"><name pos:start="643:34" pos:end="643:41">offsetof</name><argument_list pos:start="643:42" pos:end="643:68">(<argument pos:start="643:43" pos:end="643:54"><expr pos:start="643:43" pos:end="643:54"><name pos:start="643:43" pos:end="643:54">CPUMIPSState</name></expr></argument>, <argument pos:start="643:57" pos:end="643:67"><expr pos:start="643:57" pos:end="643:67"><name pos:start="643:57" pos:end="643:67">CP0_Config0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="645:13" pos:end="645:26"><expr pos:start="645:13" pos:end="645:25"><name pos:start="645:13" pos:end="645:14">rn</name> <operator pos:start="645:16" pos:end="645:16">=</operator> <literal type="string" pos:start="645:18" pos:end="645:25">"Config"</literal></expr>;</expr_stmt>


        <case pos:start="648:9" pos:end="648:15">case <expr pos:start="648:14" pos:end="648:14"><literal type="number" pos:start="648:14" pos:end="648:14">1</literal></expr>:</case>

            <expr_stmt pos:start="650:13" pos:end="650:70"><expr pos:start="650:13" pos:end="650:69"><call pos:start="650:13" pos:end="650:69"><name pos:start="650:13" pos:end="650:27">gen_mfc0_load32</name><argument_list pos:start="650:28" pos:end="650:69">(<argument pos:start="650:29" pos:end="650:31"><expr pos:start="650:29" pos:end="650:31"><name pos:start="650:29" pos:end="650:31">arg</name></expr></argument>, <argument pos:start="650:34" pos:end="650:68"><expr pos:start="650:34" pos:end="650:68"><call pos:start="650:34" pos:end="650:68"><name pos:start="650:34" pos:end="650:41">offsetof</name><argument_list pos:start="650:42" pos:end="650:68">(<argument pos:start="650:43" pos:end="650:54"><expr pos:start="650:43" pos:end="650:54"><name pos:start="650:43" pos:end="650:54">CPUMIPSState</name></expr></argument>, <argument pos:start="650:57" pos:end="650:67"><expr pos:start="650:57" pos:end="650:67"><name pos:start="650:57" pos:end="650:67">CP0_Config1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="652:13" pos:end="652:27"><expr pos:start="652:13" pos:end="652:26"><name pos:start="652:13" pos:end="652:14">rn</name> <operator pos:start="652:16" pos:end="652:16">=</operator> <literal type="string" pos:start="652:18" pos:end="652:26">"Config1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="656:13" pos:end="656:70"><expr pos:start="656:13" pos:end="656:69"><call pos:start="656:13" pos:end="656:69"><name pos:start="656:13" pos:end="656:27">gen_mfc0_load32</name><argument_list pos:start="656:28" pos:end="656:69">(<argument pos:start="656:29" pos:end="656:31"><expr pos:start="656:29" pos:end="656:31"><name pos:start="656:29" pos:end="656:31">arg</name></expr></argument>, <argument pos:start="656:34" pos:end="656:68"><expr pos:start="656:34" pos:end="656:68"><call pos:start="656:34" pos:end="656:68"><name pos:start="656:34" pos:end="656:41">offsetof</name><argument_list pos:start="656:42" pos:end="656:68">(<argument pos:start="656:43" pos:end="656:54"><expr pos:start="656:43" pos:end="656:54"><name pos:start="656:43" pos:end="656:54">CPUMIPSState</name></expr></argument>, <argument pos:start="656:57" pos:end="656:67"><expr pos:start="656:57" pos:end="656:67"><name pos:start="656:57" pos:end="656:67">CP0_Config2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="658:13" pos:end="658:27"><expr pos:start="658:13" pos:end="658:26"><name pos:start="658:13" pos:end="658:14">rn</name> <operator pos:start="658:16" pos:end="658:16">=</operator> <literal type="string" pos:start="658:18" pos:end="658:26">"Config2"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="662:13" pos:end="662:70"><expr pos:start="662:13" pos:end="662:69"><call pos:start="662:13" pos:end="662:69"><name pos:start="662:13" pos:end="662:27">gen_mfc0_load32</name><argument_list pos:start="662:28" pos:end="662:69">(<argument pos:start="662:29" pos:end="662:31"><expr pos:start="662:29" pos:end="662:31"><name pos:start="662:29" pos:end="662:31">arg</name></expr></argument>, <argument pos:start="662:34" pos:end="662:68"><expr pos:start="662:34" pos:end="662:68"><call pos:start="662:34" pos:end="662:68"><name pos:start="662:34" pos:end="662:41">offsetof</name><argument_list pos:start="662:42" pos:end="662:68">(<argument pos:start="662:43" pos:end="662:54"><expr pos:start="662:43" pos:end="662:54"><name pos:start="662:43" pos:end="662:54">CPUMIPSState</name></expr></argument>, <argument pos:start="662:57" pos:end="662:67"><expr pos:start="662:57" pos:end="662:67"><name pos:start="662:57" pos:end="662:67">CP0_Config3</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="664:13" pos:end="664:27"><expr pos:start="664:13" pos:end="664:26"><name pos:start="664:13" pos:end="664:14">rn</name> <operator pos:start="664:16" pos:end="664:16">=</operator> <literal type="string" pos:start="664:18" pos:end="664:26">"Config3"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="668:13" pos:end="668:70"><expr pos:start="668:13" pos:end="668:69"><call pos:start="668:13" pos:end="668:69"><name pos:start="668:13" pos:end="668:27">gen_mfc0_load32</name><argument_list pos:start="668:28" pos:end="668:69">(<argument pos:start="668:29" pos:end="668:31"><expr pos:start="668:29" pos:end="668:31"><name pos:start="668:29" pos:end="668:31">arg</name></expr></argument>, <argument pos:start="668:34" pos:end="668:68"><expr pos:start="668:34" pos:end="668:68"><call pos:start="668:34" pos:end="668:68"><name pos:start="668:34" pos:end="668:41">offsetof</name><argument_list pos:start="668:42" pos:end="668:68">(<argument pos:start="668:43" pos:end="668:54"><expr pos:start="668:43" pos:end="668:54"><name pos:start="668:43" pos:end="668:54">CPUMIPSState</name></expr></argument>, <argument pos:start="668:57" pos:end="668:67"><expr pos:start="668:57" pos:end="668:67"><name pos:start="668:57" pos:end="668:67">CP0_Config4</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="670:13" pos:end="670:27"><expr pos:start="670:13" pos:end="670:26"><name pos:start="670:13" pos:end="670:14">rn</name> <operator pos:start="670:16" pos:end="670:16">=</operator> <literal type="string" pos:start="670:18" pos:end="670:26">"Config4"</literal></expr>;</expr_stmt>


        <case pos:start="673:9" pos:end="673:15">case <expr pos:start="673:14" pos:end="673:14"><literal type="number" pos:start="673:14" pos:end="673:14">5</literal></expr>:</case>

            <expr_stmt pos:start="675:13" pos:end="675:70"><expr pos:start="675:13" pos:end="675:69"><call pos:start="675:13" pos:end="675:69"><name pos:start="675:13" pos:end="675:27">gen_mfc0_load32</name><argument_list pos:start="675:28" pos:end="675:69">(<argument pos:start="675:29" pos:end="675:31"><expr pos:start="675:29" pos:end="675:31"><name pos:start="675:29" pos:end="675:31">arg</name></expr></argument>, <argument pos:start="675:34" pos:end="675:68"><expr pos:start="675:34" pos:end="675:68"><call pos:start="675:34" pos:end="675:68"><name pos:start="675:34" pos:end="675:41">offsetof</name><argument_list pos:start="675:42" pos:end="675:68">(<argument pos:start="675:43" pos:end="675:54"><expr pos:start="675:43" pos:end="675:54"><name pos:start="675:43" pos:end="675:54">CPUMIPSState</name></expr></argument>, <argument pos:start="675:57" pos:end="675:67"><expr pos:start="675:57" pos:end="675:67"><name pos:start="675:57" pos:end="675:67">CP0_Config5</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="677:13" pos:end="677:27"><expr pos:start="677:13" pos:end="677:26"><name pos:start="677:13" pos:end="677:14">rn</name> <operator pos:start="677:16" pos:end="677:16">=</operator> <literal type="string" pos:start="677:18" pos:end="677:26">"Config5"</literal></expr>;</expr_stmt>


       <comment type="block" pos:start="680:8" pos:end="680:45">/* 6,7 are implementation dependent */</comment>

        <case pos:start="682:9" pos:end="682:15">case <expr pos:start="682:14" pos:end="682:14"><literal type="number" pos:start="682:14" pos:end="682:14">6</literal></expr>:</case>

            <expr_stmt pos:start="684:13" pos:end="684:70"><expr pos:start="684:13" pos:end="684:69"><call pos:start="684:13" pos:end="684:69"><name pos:start="684:13" pos:end="684:27">gen_mfc0_load32</name><argument_list pos:start="684:28" pos:end="684:69">(<argument pos:start="684:29" pos:end="684:31"><expr pos:start="684:29" pos:end="684:31"><name pos:start="684:29" pos:end="684:31">arg</name></expr></argument>, <argument pos:start="684:34" pos:end="684:68"><expr pos:start="684:34" pos:end="684:68"><call pos:start="684:34" pos:end="684:68"><name pos:start="684:34" pos:end="684:41">offsetof</name><argument_list pos:start="684:42" pos:end="684:68">(<argument pos:start="684:43" pos:end="684:54"><expr pos:start="684:43" pos:end="684:54"><name pos:start="684:43" pos:end="684:54">CPUMIPSState</name></expr></argument>, <argument pos:start="684:57" pos:end="684:67"><expr pos:start="684:57" pos:end="684:67"><name pos:start="684:57" pos:end="684:67">CP0_Config6</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="686:13" pos:end="686:27"><expr pos:start="686:13" pos:end="686:26"><name pos:start="686:13" pos:end="686:14">rn</name> <operator pos:start="686:16" pos:end="686:16">=</operator> <literal type="string" pos:start="686:18" pos:end="686:26">"Config6"</literal></expr>;</expr_stmt>


        <case pos:start="689:9" pos:end="689:15">case <expr pos:start="689:14" pos:end="689:14"><literal type="number" pos:start="689:14" pos:end="689:14">7</literal></expr>:</case>

            <expr_stmt pos:start="691:13" pos:end="691:70"><expr pos:start="691:13" pos:end="691:69"><call pos:start="691:13" pos:end="691:69"><name pos:start="691:13" pos:end="691:27">gen_mfc0_load32</name><argument_list pos:start="691:28" pos:end="691:69">(<argument pos:start="691:29" pos:end="691:31"><expr pos:start="691:29" pos:end="691:31"><name pos:start="691:29" pos:end="691:31">arg</name></expr></argument>, <argument pos:start="691:34" pos:end="691:68"><expr pos:start="691:34" pos:end="691:68"><call pos:start="691:34" pos:end="691:68"><name pos:start="691:34" pos:end="691:41">offsetof</name><argument_list pos:start="691:42" pos:end="691:68">(<argument pos:start="691:43" pos:end="691:54"><expr pos:start="691:43" pos:end="691:54"><name pos:start="691:43" pos:end="691:54">CPUMIPSState</name></expr></argument>, <argument pos:start="691:57" pos:end="691:67"><expr pos:start="691:57" pos:end="691:67"><name pos:start="691:57" pos:end="691:67">CP0_Config7</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="693:13" pos:end="693:27"><expr pos:start="693:13" pos:end="693:26"><name pos:start="693:13" pos:end="693:14">rn</name> <operator pos:start="693:16" pos:end="693:16">=</operator> <literal type="string" pos:start="693:18" pos:end="693:26">"Config7"</literal></expr>;</expr_stmt>


        <default pos:start="696:9" pos:end="696:16">default:</default>

            <goto pos:start="698:13" pos:end="698:35">goto <name pos:start="698:18" pos:end="698:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="703:5" pos:end="703:12">case <expr pos:start="703:10" pos:end="703:11"><literal type="number" pos:start="703:10" pos:end="703:11">17</literal></expr>:</case>

        <switch pos:start="705:9" pos:end="735:9">switch <condition pos:start="705:16" pos:end="705:20">(<expr pos:start="705:17" pos:end="705:19"><name pos:start="705:17" pos:end="705:19">sel</name></expr>)</condition> <block pos:start="705:22" pos:end="735:9">{<block_content pos:start="707:9" pos:end="733:35">

        <case pos:start="707:9" pos:end="707:15">case <expr pos:start="707:14" pos:end="707:14"><literal type="number" pos:start="707:14" pos:end="707:14">0</literal></expr>:</case>

            <expr_stmt pos:start="709:13" pos:end="709:50"><expr pos:start="709:13" pos:end="709:49"><call pos:start="709:13" pos:end="709:49"><name pos:start="709:13" pos:end="709:35">gen_helper_dmfc0_lladdr</name><argument_list pos:start="709:36" pos:end="709:49">(<argument pos:start="709:37" pos:end="709:39"><expr pos:start="709:37" pos:end="709:39"><name pos:start="709:37" pos:end="709:39">arg</name></expr></argument>, <argument pos:start="709:42" pos:end="709:48"><expr pos:start="709:42" pos:end="709:48"><name pos:start="709:42" pos:end="709:48">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:26"><expr pos:start="711:13" pos:end="711:25"><name pos:start="711:13" pos:end="711:14">rn</name> <operator pos:start="711:16" pos:end="711:16">=</operator> <literal type="string" pos:start="711:18" pos:end="711:25">"LLAddr"</literal></expr>;</expr_stmt>


        <case pos:start="714:9" pos:end="714:15">case <expr pos:start="714:14" pos:end="714:14"><literal type="number" pos:start="714:14" pos:end="714:14">1</literal></expr>:</case>

            <expr_stmt pos:start="716:13" pos:end="716:32"><expr pos:start="716:13" pos:end="716:31"><call pos:start="716:13" pos:end="716:31"><name pos:start="716:13" pos:end="716:21">CP0_CHECK</name><argument_list pos:start="716:22" pos:end="716:31">(<argument pos:start="716:23" pos:end="716:30"><expr pos:start="716:23" pos:end="716:30"><name pos:start="716:23" pos:end="716:30"><name pos:start="716:23" pos:end="716:25">ctx</name><operator pos:start="716:26" pos:end="716:27">-&gt;</operator><name pos:start="716:28" pos:end="716:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="718:13" pos:end="718:48"><expr pos:start="718:13" pos:end="718:47"><call pos:start="718:13" pos:end="718:47"><name pos:start="718:13" pos:end="718:33">gen_helper_dmfc0_maar</name><argument_list pos:start="718:34" pos:end="718:47">(<argument pos:start="718:35" pos:end="718:37"><expr pos:start="718:35" pos:end="718:37"><name pos:start="718:35" pos:end="718:37">arg</name></expr></argument>, <argument pos:start="718:40" pos:end="718:46"><expr pos:start="718:40" pos:end="718:46"><name pos:start="718:40" pos:end="718:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="720:13" pos:end="720:24"><expr pos:start="720:13" pos:end="720:23"><name pos:start="720:13" pos:end="720:14">rn</name> <operator pos:start="720:16" pos:end="720:16">=</operator> <literal type="string" pos:start="720:18" pos:end="720:23">"MAAR"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="724:13" pos:end="724:32"><expr pos:start="724:13" pos:end="724:31"><call pos:start="724:13" pos:end="724:31"><name pos:start="724:13" pos:end="724:21">CP0_CHECK</name><argument_list pos:start="724:22" pos:end="724:31">(<argument pos:start="724:23" pos:end="724:30"><expr pos:start="724:23" pos:end="724:30"><name pos:start="724:23" pos:end="724:30"><name pos:start="724:23" pos:end="724:25">ctx</name><operator pos:start="724:26" pos:end="724:27">-&gt;</operator><name pos:start="724:28" pos:end="724:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="726:13" pos:end="726:68"><expr pos:start="726:13" pos:end="726:67"><call pos:start="726:13" pos:end="726:67"><name pos:start="726:13" pos:end="726:27">gen_mfc0_load32</name><argument_list pos:start="726:28" pos:end="726:67">(<argument pos:start="726:29" pos:end="726:31"><expr pos:start="726:29" pos:end="726:31"><name pos:start="726:29" pos:end="726:31">arg</name></expr></argument>, <argument pos:start="726:34" pos:end="726:66"><expr pos:start="726:34" pos:end="726:66"><call pos:start="726:34" pos:end="726:66"><name pos:start="726:34" pos:end="726:41">offsetof</name><argument_list pos:start="726:42" pos:end="726:66">(<argument pos:start="726:43" pos:end="726:54"><expr pos:start="726:43" pos:end="726:54"><name pos:start="726:43" pos:end="726:54">CPUMIPSState</name></expr></argument>, <argument pos:start="726:57" pos:end="726:65"><expr pos:start="726:57" pos:end="726:65"><name pos:start="726:57" pos:end="726:65">CP0_MAARI</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="728:13" pos:end="728:25"><expr pos:start="728:13" pos:end="728:24"><name pos:start="728:13" pos:end="728:14">rn</name> <operator pos:start="728:16" pos:end="728:16">=</operator> <literal type="string" pos:start="728:18" pos:end="728:24">"MAARI"</literal></expr>;</expr_stmt>


        <default pos:start="731:9" pos:end="731:16">default:</default>

            <goto pos:start="733:13" pos:end="733:35">goto <name pos:start="733:18" pos:end="733:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="738:5" pos:end="738:12">case <expr pos:start="738:10" pos:end="738:11"><literal type="number" pos:start="738:10" pos:end="738:11">18</literal></expr>:</case>

        <switch pos:start="740:9" pos:end="753:9">switch <condition pos:start="740:16" pos:end="740:20">(<expr pos:start="740:17" pos:end="740:19"><name pos:start="740:17" pos:end="740:19">sel</name></expr>)</condition> <block pos:start="740:22" pos:end="753:9">{<block_content pos:start="742:9" pos:end="751:35">

        <case pos:start="742:9" pos:end="742:21">case <expr pos:start="742:14" pos:end="742:20"><literal type="number" pos:start="742:14" pos:end="742:14">0</literal> <operator pos:start="742:16" pos:end="742:18">...</operator> <literal type="number" pos:start="742:20" pos:end="742:20">7</literal></expr>:</case>

            <expr_stmt pos:start="744:13" pos:end="744:53"><expr pos:start="744:13" pos:end="744:52"><call pos:start="744:13" pos:end="744:52"><name pos:start="744:13" pos:end="744:27">gen_helper_1e0i</name><argument_list pos:start="744:28" pos:end="744:52">(<argument pos:start="744:29" pos:end="744:41"><expr pos:start="744:29" pos:end="744:41"><name pos:start="744:29" pos:end="744:41">dmfc0_watchlo</name></expr></argument>, <argument pos:start="744:44" pos:end="744:46"><expr pos:start="744:44" pos:end="744:46"><name pos:start="744:44" pos:end="744:46">arg</name></expr></argument>, <argument pos:start="744:49" pos:end="744:51"><expr pos:start="744:49" pos:end="744:51"><name pos:start="744:49" pos:end="744:51">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="746:13" pos:end="746:27"><expr pos:start="746:13" pos:end="746:26"><name pos:start="746:13" pos:end="746:14">rn</name> <operator pos:start="746:16" pos:end="746:16">=</operator> <literal type="string" pos:start="746:18" pos:end="746:26">"WatchLo"</literal></expr>;</expr_stmt>


        <default pos:start="749:9" pos:end="749:16">default:</default>

            <goto pos:start="751:13" pos:end="751:35">goto <name pos:start="751:18" pos:end="751:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="756:5" pos:end="756:12">case <expr pos:start="756:10" pos:end="756:11"><literal type="number" pos:start="756:10" pos:end="756:11">19</literal></expr>:</case>

        <switch pos:start="758:9" pos:end="771:9">switch <condition pos:start="758:16" pos:end="758:20">(<expr pos:start="758:17" pos:end="758:19"><name pos:start="758:17" pos:end="758:19">sel</name></expr>)</condition> <block pos:start="758:22" pos:end="771:9">{<block_content pos:start="760:9" pos:end="769:35">

        <case pos:start="760:9" pos:end="760:21">case <expr pos:start="760:14" pos:end="760:20"><literal type="number" pos:start="760:14" pos:end="760:14">0</literal> <operator pos:start="760:16" pos:end="760:18">...</operator> <literal type="number" pos:start="760:20" pos:end="760:20">7</literal></expr>:</case>

            <expr_stmt pos:start="762:13" pos:end="762:52"><expr pos:start="762:13" pos:end="762:51"><call pos:start="762:13" pos:end="762:51"><name pos:start="762:13" pos:end="762:27">gen_helper_1e0i</name><argument_list pos:start="762:28" pos:end="762:51">(<argument pos:start="762:29" pos:end="762:40"><expr pos:start="762:29" pos:end="762:40"><name pos:start="762:29" pos:end="762:40">mfc0_watchhi</name></expr></argument>, <argument pos:start="762:43" pos:end="762:45"><expr pos:start="762:43" pos:end="762:45"><name pos:start="762:43" pos:end="762:45">arg</name></expr></argument>, <argument pos:start="762:48" pos:end="762:50"><expr pos:start="762:48" pos:end="762:50"><name pos:start="762:48" pos:end="762:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="764:13" pos:end="764:27"><expr pos:start="764:13" pos:end="764:26"><name pos:start="764:13" pos:end="764:14">rn</name> <operator pos:start="764:16" pos:end="764:16">=</operator> <literal type="string" pos:start="764:18" pos:end="764:26">"WatchHi"</literal></expr>;</expr_stmt>


        <default pos:start="767:9" pos:end="767:16">default:</default>

            <goto pos:start="769:13" pos:end="769:35">goto <name pos:start="769:18" pos:end="769:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="774:5" pos:end="774:12">case <expr pos:start="774:10" pos:end="774:11"><literal type="number" pos:start="774:10" pos:end="774:11">20</literal></expr>:</case>

        <switch pos:start="776:9" pos:end="791:9">switch <condition pos:start="776:16" pos:end="776:20">(<expr pos:start="776:17" pos:end="776:19"><name pos:start="776:17" pos:end="776:19">sel</name></expr>)</condition> <block pos:start="776:22" pos:end="791:9">{<block_content pos:start="778:9" pos:end="789:35">

        <case pos:start="778:9" pos:end="778:15">case <expr pos:start="778:14" pos:end="778:14"><literal type="number" pos:start="778:14" pos:end="778:14">0</literal></expr>:</case>

            <expr_stmt pos:start="780:13" pos:end="780:39"><expr pos:start="780:13" pos:end="780:38"><call pos:start="780:13" pos:end="780:38"><name pos:start="780:13" pos:end="780:22">check_insn</name><argument_list pos:start="780:23" pos:end="780:38">(<argument pos:start="780:24" pos:end="780:26"><expr pos:start="780:24" pos:end="780:26"><name pos:start="780:24" pos:end="780:26">ctx</name></expr></argument>, <argument pos:start="780:29" pos:end="780:37"><expr pos:start="780:29" pos:end="780:37"><name pos:start="780:29" pos:end="780:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="782:13" pos:end="782:78"><expr pos:start="782:13" pos:end="782:77"><call pos:start="782:13" pos:end="782:77"><name pos:start="782:13" pos:end="782:25">tcg_gen_ld_tl</name><argument_list pos:start="782:26" pos:end="782:77">(<argument pos:start="782:27" pos:end="782:29"><expr pos:start="782:27" pos:end="782:29"><name pos:start="782:27" pos:end="782:29">arg</name></expr></argument>, <argument pos:start="782:32" pos:end="782:38"><expr pos:start="782:32" pos:end="782:38"><name pos:start="782:32" pos:end="782:38">cpu_env</name></expr></argument>, <argument pos:start="782:41" pos:end="782:76"><expr pos:start="782:41" pos:end="782:76"><call pos:start="782:41" pos:end="782:76"><name pos:start="782:41" pos:end="782:48">offsetof</name><argument_list pos:start="782:49" pos:end="782:76">(<argument pos:start="782:50" pos:end="782:61"><expr pos:start="782:50" pos:end="782:61"><name pos:start="782:50" pos:end="782:61">CPUMIPSState</name></expr></argument>, <argument pos:start="782:64" pos:end="782:75"><expr pos:start="782:64" pos:end="782:75"><name pos:start="782:64" pos:end="782:75">CP0_XContext</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="784:13" pos:end="784:28"><expr pos:start="784:13" pos:end="784:27"><name pos:start="784:13" pos:end="784:14">rn</name> <operator pos:start="784:16" pos:end="784:16">=</operator> <literal type="string" pos:start="784:18" pos:end="784:27">"XContext"</literal></expr>;</expr_stmt>


        <default pos:start="787:9" pos:end="787:16">default:</default>

            <goto pos:start="789:13" pos:end="789:35">goto <name pos:start="789:18" pos:end="789:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="794:5" pos:end="794:12">case <expr pos:start="794:10" pos:end="794:11"><literal type="number" pos:start="794:10" pos:end="794:11">21</literal></expr>:</case>

       <comment type="block" pos:start="796:8" pos:end="796:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="798:9" pos:end="798:53"><expr pos:start="798:9" pos:end="798:52"><call pos:start="798:9" pos:end="798:52"><name pos:start="798:9" pos:end="798:17">CP0_CHECK</name><argument_list pos:start="798:18" pos:end="798:52">(<argument pos:start="798:19" pos:end="798:51"><expr pos:start="798:19" pos:end="798:51"><operator pos:start="798:19" pos:end="798:19">!</operator><operator pos:start="798:20" pos:end="798:20">(</operator><name pos:start="798:21" pos:end="798:35"><name pos:start="798:21" pos:end="798:23">ctx</name><operator pos:start="798:24" pos:end="798:25">-&gt;</operator><name pos:start="798:26" pos:end="798:35">insn_flags</name></name> <operator pos:start="798:37" pos:end="798:37">&amp;</operator> <name pos:start="798:39" pos:end="798:50">ISA_MIPS32R6</name><operator pos:start="798:51" pos:end="798:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="800:9" pos:end="813:9">switch <condition pos:start="800:16" pos:end="800:20">(<expr pos:start="800:17" pos:end="800:19"><name pos:start="800:17" pos:end="800:19">sel</name></expr>)</condition> <block pos:start="800:22" pos:end="813:9">{<block_content pos:start="802:9" pos:end="811:35">

        <case pos:start="802:9" pos:end="802:15">case <expr pos:start="802:14" pos:end="802:14"><literal type="number" pos:start="802:14" pos:end="802:14">0</literal></expr>:</case>

            <expr_stmt pos:start="804:13" pos:end="804:72"><expr pos:start="804:13" pos:end="804:71"><call pos:start="804:13" pos:end="804:71"><name pos:start="804:13" pos:end="804:27">gen_mfc0_load32</name><argument_list pos:start="804:28" pos:end="804:71">(<argument pos:start="804:29" pos:end="804:31"><expr pos:start="804:29" pos:end="804:31"><name pos:start="804:29" pos:end="804:31">arg</name></expr></argument>, <argument pos:start="804:34" pos:end="804:70"><expr pos:start="804:34" pos:end="804:70"><call pos:start="804:34" pos:end="804:70"><name pos:start="804:34" pos:end="804:41">offsetof</name><argument_list pos:start="804:42" pos:end="804:70">(<argument pos:start="804:43" pos:end="804:54"><expr pos:start="804:43" pos:end="804:54"><name pos:start="804:43" pos:end="804:54">CPUMIPSState</name></expr></argument>, <argument pos:start="804:57" pos:end="804:69"><expr pos:start="804:57" pos:end="804:69"><name pos:start="804:57" pos:end="804:69">CP0_Framemask</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="806:13" pos:end="806:29"><expr pos:start="806:13" pos:end="806:28"><name pos:start="806:13" pos:end="806:14">rn</name> <operator pos:start="806:16" pos:end="806:16">=</operator> <literal type="string" pos:start="806:18" pos:end="806:28">"Framemask"</literal></expr>;</expr_stmt>


        <default pos:start="809:9" pos:end="809:16">default:</default>

            <goto pos:start="811:13" pos:end="811:35">goto <name pos:start="811:18" pos:end="811:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="816:5" pos:end="816:12">case <expr pos:start="816:10" pos:end="816:11"><literal type="number" pos:start="816:10" pos:end="816:11">22</literal></expr>:</case>

        <expr_stmt pos:start="818:9" pos:end="818:32"><expr pos:start="818:9" pos:end="818:31"><call pos:start="818:9" pos:end="818:31"><name pos:start="818:9" pos:end="818:23">tcg_gen_movi_tl</name><argument_list pos:start="818:24" pos:end="818:31">(<argument pos:start="818:25" pos:end="818:27"><expr pos:start="818:25" pos:end="818:27"><name pos:start="818:25" pos:end="818:27">arg</name></expr></argument>, <argument pos:start="818:30" pos:end="818:30"><expr pos:start="818:30" pos:end="818:30"><literal type="number" pos:start="818:30" pos:end="818:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="818:34" pos:end="818:52">/* unimplemented */</comment>

        <expr_stmt pos:start="820:9" pos:end="820:27"><expr pos:start="820:9" pos:end="820:26"><name pos:start="820:9" pos:end="820:10">rn</name> <operator pos:start="820:12" pos:end="820:12">=</operator> <literal type="string" pos:start="820:14" pos:end="820:26">"'Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="820:29" pos:end="820:58">/* implementation dependent */</comment>


    <case pos:start="823:5" pos:end="823:12">case <expr pos:start="823:10" pos:end="823:11"><literal type="number" pos:start="823:10" pos:end="823:11">23</literal></expr>:</case>

        <switch pos:start="825:9" pos:end="867:9">switch <condition pos:start="825:16" pos:end="825:20">(<expr pos:start="825:17" pos:end="825:19"><name pos:start="825:17" pos:end="825:19">sel</name></expr>)</condition> <block pos:start="825:22" pos:end="867:9">{<block_content pos:start="827:9" pos:end="865:35">

        <case pos:start="827:9" pos:end="827:15">case <expr pos:start="827:14" pos:end="827:14"><literal type="number" pos:start="827:14" pos:end="827:14">0</literal></expr>:</case>

            <expr_stmt pos:start="829:13" pos:end="829:48"><expr pos:start="829:13" pos:end="829:47"><call pos:start="829:13" pos:end="829:47"><name pos:start="829:13" pos:end="829:33">gen_helper_mfc0_debug</name><argument_list pos:start="829:34" pos:end="829:47">(<argument pos:start="829:35" pos:end="829:37"><expr pos:start="829:35" pos:end="829:37"><name pos:start="829:35" pos:end="829:37">arg</name></expr></argument>, <argument pos:start="829:40" pos:end="829:46"><expr pos:start="829:40" pos:end="829:46"><name pos:start="829:40" pos:end="829:46">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="829:50" pos:end="829:68">/* EJTAG support */</comment>

            <expr_stmt pos:start="831:13" pos:end="831:25"><expr pos:start="831:13" pos:end="831:24"><name pos:start="831:13" pos:end="831:14">rn</name> <operator pos:start="831:16" pos:end="831:16">=</operator> <literal type="string" pos:start="831:18" pos:end="831:24">"Debug"</literal></expr>;</expr_stmt>


        <case pos:start="834:9" pos:end="834:15">case <expr pos:start="834:14" pos:end="834:14"><literal type="number" pos:start="834:14" pos:end="834:14">1</literal></expr>:</case>

<comment type="line" pos:start="836:1" pos:end="836:80">//            gen_helper_dmfc0_tracecontrol(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="838:13" pos:end="838:32"><expr pos:start="838:13" pos:end="838:31"><name pos:start="838:13" pos:end="838:14">rn</name> <operator pos:start="838:16" pos:end="838:16">=</operator> <literal type="string" pos:start="838:18" pos:end="838:31">"TraceControl"</literal></expr>;</expr_stmt>

            <goto pos:start="840:13" pos:end="840:35">goto <name pos:start="840:18" pos:end="840:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="843:1" pos:end="843:81">//            gen_helper_dmfc0_tracecontrol2(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="845:13" pos:end="845:33"><expr pos:start="845:13" pos:end="845:32"><name pos:start="845:13" pos:end="845:14">rn</name> <operator pos:start="845:16" pos:end="845:16">=</operator> <literal type="string" pos:start="845:18" pos:end="845:32">"TraceControl2"</literal></expr>;</expr_stmt>

            <goto pos:start="847:13" pos:end="847:35">goto <name pos:start="847:18" pos:end="847:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="850:1" pos:end="850:81">//            gen_helper_dmfc0_usertracedata(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="852:13" pos:end="852:33"><expr pos:start="852:13" pos:end="852:32"><name pos:start="852:13" pos:end="852:14">rn</name> <operator pos:start="852:16" pos:end="852:16">=</operator> <literal type="string" pos:start="852:18" pos:end="852:32">"UserTraceData"</literal></expr>;</expr_stmt>

            <goto pos:start="854:13" pos:end="854:35">goto <name pos:start="854:18" pos:end="854:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="857:1" pos:end="857:76">//            gen_helper_dmfc0_tracebpc(arg, cpu_env); /* PDtrace support */</comment>

            <expr_stmt pos:start="859:13" pos:end="859:28"><expr pos:start="859:13" pos:end="859:27"><name pos:start="859:13" pos:end="859:14">rn</name> <operator pos:start="859:16" pos:end="859:16">=</operator> <literal type="string" pos:start="859:18" pos:end="859:27">"TraceBPC"</literal></expr>;</expr_stmt>

            <goto pos:start="861:13" pos:end="861:35">goto <name pos:start="861:18" pos:end="861:34">cp0_unimplemented</name>;</goto>

        <default pos:start="863:9" pos:end="863:16">default:</default>

            <goto pos:start="865:13" pos:end="865:35">goto <name pos:start="865:18" pos:end="865:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="870:5" pos:end="870:12">case <expr pos:start="870:10" pos:end="870:11"><literal type="number" pos:start="870:10" pos:end="870:11">24</literal></expr>:</case>

        <switch pos:start="872:9" pos:end="887:9">switch <condition pos:start="872:16" pos:end="872:20">(<expr pos:start="872:17" pos:end="872:19"><name pos:start="872:17" pos:end="872:19">sel</name></expr>)</condition> <block pos:start="872:22" pos:end="887:9">{<block_content pos:start="874:9" pos:end="885:35">

        <case pos:start="874:9" pos:end="874:15">case <expr pos:start="874:14" pos:end="874:14"><literal type="number" pos:start="874:14" pos:end="874:14">0</literal></expr>:</case>

            <comment type="block" pos:start="876:13" pos:end="876:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="878:13" pos:end="878:74"><expr pos:start="878:13" pos:end="878:73"><call pos:start="878:13" pos:end="878:73"><name pos:start="878:13" pos:end="878:25">tcg_gen_ld_tl</name><argument_list pos:start="878:26" pos:end="878:73">(<argument pos:start="878:27" pos:end="878:29"><expr pos:start="878:27" pos:end="878:29"><name pos:start="878:27" pos:end="878:29">arg</name></expr></argument>, <argument pos:start="878:32" pos:end="878:38"><expr pos:start="878:32" pos:end="878:38"><name pos:start="878:32" pos:end="878:38">cpu_env</name></expr></argument>, <argument pos:start="878:41" pos:end="878:72"><expr pos:start="878:41" pos:end="878:72"><call pos:start="878:41" pos:end="878:72"><name pos:start="878:41" pos:end="878:48">offsetof</name><argument_list pos:start="878:49" pos:end="878:72">(<argument pos:start="878:50" pos:end="878:61"><expr pos:start="878:50" pos:end="878:61"><name pos:start="878:50" pos:end="878:61">CPUMIPSState</name></expr></argument>, <argument pos:start="878:64" pos:end="878:71"><expr pos:start="878:64" pos:end="878:71"><name pos:start="878:64" pos:end="878:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="880:13" pos:end="880:24"><expr pos:start="880:13" pos:end="880:23"><name pos:start="880:13" pos:end="880:14">rn</name> <operator pos:start="880:16" pos:end="880:16">=</operator> <literal type="string" pos:start="880:18" pos:end="880:23">"DEPC"</literal></expr>;</expr_stmt>


        <default pos:start="883:9" pos:end="883:16">default:</default>

            <goto pos:start="885:13" pos:end="885:35">goto <name pos:start="885:18" pos:end="885:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="890:5" pos:end="890:12">case <expr pos:start="890:10" pos:end="890:11"><literal type="number" pos:start="890:10" pos:end="890:11">25</literal></expr>:</case>

        <switch pos:start="892:9" pos:end="958:9">switch <condition pos:start="892:16" pos:end="892:20">(<expr pos:start="892:17" pos:end="892:19"><name pos:start="892:17" pos:end="892:19">sel</name></expr>)</condition> <block pos:start="892:22" pos:end="958:9">{<block_content pos:start="894:9" pos:end="956:35">

        <case pos:start="894:9" pos:end="894:15">case <expr pos:start="894:14" pos:end="894:14"><literal type="number" pos:start="894:14" pos:end="894:14">0</literal></expr>:</case>

            <expr_stmt pos:start="896:13" pos:end="896:75"><expr pos:start="896:13" pos:end="896:74"><call pos:start="896:13" pos:end="896:74"><name pos:start="896:13" pos:end="896:27">gen_mfc0_load32</name><argument_list pos:start="896:28" pos:end="896:74">(<argument pos:start="896:29" pos:end="896:31"><expr pos:start="896:29" pos:end="896:31"><name pos:start="896:29" pos:end="896:31">arg</name></expr></argument>, <argument pos:start="896:34" pos:end="896:73"><expr pos:start="896:34" pos:end="896:73"><call pos:start="896:34" pos:end="896:73"><name pos:start="896:34" pos:end="896:41">offsetof</name><argument_list pos:start="896:42" pos:end="896:73">(<argument pos:start="896:43" pos:end="896:54"><expr pos:start="896:43" pos:end="896:54"><name pos:start="896:43" pos:end="896:54">CPUMIPSState</name></expr></argument>, <argument pos:start="896:57" pos:end="896:72"><expr pos:start="896:57" pos:end="896:72"><name pos:start="896:57" pos:end="896:72">CP0_Performance0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="898:13" pos:end="898:32"><expr pos:start="898:13" pos:end="898:31"><name pos:start="898:13" pos:end="898:14">rn</name> <operator pos:start="898:16" pos:end="898:16">=</operator> <literal type="string" pos:start="898:18" pos:end="898:31">"Performance0"</literal></expr>;</expr_stmt>


        <case pos:start="901:9" pos:end="901:15">case <expr pos:start="901:14" pos:end="901:14"><literal type="number" pos:start="901:14" pos:end="901:14">1</literal></expr>:</case>

<comment type="line" pos:start="903:1" pos:end="903:49">//            gen_helper_dmfc0_performance1(arg);</comment>

            <expr_stmt pos:start="905:13" pos:end="905:32"><expr pos:start="905:13" pos:end="905:31"><name pos:start="905:13" pos:end="905:14">rn</name> <operator pos:start="905:16" pos:end="905:16">=</operator> <literal type="string" pos:start="905:18" pos:end="905:31">"Performance1"</literal></expr>;</expr_stmt>

            <goto pos:start="907:13" pos:end="907:35">goto <name pos:start="907:18" pos:end="907:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="910:1" pos:end="910:49">//            gen_helper_dmfc0_performance2(arg);</comment>

            <expr_stmt pos:start="912:13" pos:end="912:32"><expr pos:start="912:13" pos:end="912:31"><name pos:start="912:13" pos:end="912:14">rn</name> <operator pos:start="912:16" pos:end="912:16">=</operator> <literal type="string" pos:start="912:18" pos:end="912:31">"Performance2"</literal></expr>;</expr_stmt>

            <goto pos:start="914:13" pos:end="914:35">goto <name pos:start="914:18" pos:end="914:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="917:1" pos:end="917:49">//            gen_helper_dmfc0_performance3(arg);</comment>

            <expr_stmt pos:start="919:13" pos:end="919:32"><expr pos:start="919:13" pos:end="919:31"><name pos:start="919:13" pos:end="919:14">rn</name> <operator pos:start="919:16" pos:end="919:16">=</operator> <literal type="string" pos:start="919:18" pos:end="919:31">"Performance3"</literal></expr>;</expr_stmt>

            <goto pos:start="921:13" pos:end="921:35">goto <name pos:start="921:18" pos:end="921:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="924:1" pos:end="924:49">//            gen_helper_dmfc0_performance4(arg);</comment>

            <expr_stmt pos:start="926:13" pos:end="926:32"><expr pos:start="926:13" pos:end="926:31"><name pos:start="926:13" pos:end="926:14">rn</name> <operator pos:start="926:16" pos:end="926:16">=</operator> <literal type="string" pos:start="926:18" pos:end="926:31">"Performance4"</literal></expr>;</expr_stmt>

            <goto pos:start="928:13" pos:end="928:35">goto <name pos:start="928:18" pos:end="928:34">cp0_unimplemented</name>;</goto>

        <case pos:start="930:9" pos:end="930:15">case <expr pos:start="930:14" pos:end="930:14"><literal type="number" pos:start="930:14" pos:end="930:14">5</literal></expr>:</case>

<comment type="line" pos:start="932:1" pos:end="932:49">//            gen_helper_dmfc0_performance5(arg);</comment>

            <expr_stmt pos:start="934:13" pos:end="934:32"><expr pos:start="934:13" pos:end="934:31"><name pos:start="934:13" pos:end="934:14">rn</name> <operator pos:start="934:16" pos:end="934:16">=</operator> <literal type="string" pos:start="934:18" pos:end="934:31">"Performance5"</literal></expr>;</expr_stmt>

            <goto pos:start="936:13" pos:end="936:35">goto <name pos:start="936:18" pos:end="936:34">cp0_unimplemented</name>;</goto>

        <case pos:start="938:9" pos:end="938:15">case <expr pos:start="938:14" pos:end="938:14"><literal type="number" pos:start="938:14" pos:end="938:14">6</literal></expr>:</case>

<comment type="line" pos:start="940:1" pos:end="940:49">//            gen_helper_dmfc0_performance6(arg);</comment>

            <expr_stmt pos:start="942:13" pos:end="942:32"><expr pos:start="942:13" pos:end="942:31"><name pos:start="942:13" pos:end="942:14">rn</name> <operator pos:start="942:16" pos:end="942:16">=</operator> <literal type="string" pos:start="942:18" pos:end="942:31">"Performance6"</literal></expr>;</expr_stmt>

            <goto pos:start="944:13" pos:end="944:35">goto <name pos:start="944:18" pos:end="944:34">cp0_unimplemented</name>;</goto>

        <case pos:start="946:9" pos:end="946:15">case <expr pos:start="946:14" pos:end="946:14"><literal type="number" pos:start="946:14" pos:end="946:14">7</literal></expr>:</case>

<comment type="line" pos:start="948:1" pos:end="948:49">//            gen_helper_dmfc0_performance7(arg);</comment>

            <expr_stmt pos:start="950:13" pos:end="950:32"><expr pos:start="950:13" pos:end="950:31"><name pos:start="950:13" pos:end="950:14">rn</name> <operator pos:start="950:16" pos:end="950:16">=</operator> <literal type="string" pos:start="950:18" pos:end="950:31">"Performance7"</literal></expr>;</expr_stmt>

            <goto pos:start="952:13" pos:end="952:35">goto <name pos:start="952:18" pos:end="952:34">cp0_unimplemented</name>;</goto>

        <default pos:start="954:9" pos:end="954:16">default:</default>

            <goto pos:start="956:13" pos:end="956:35">goto <name pos:start="956:18" pos:end="956:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="961:5" pos:end="961:12">case <expr pos:start="961:10" pos:end="961:11"><literal type="number" pos:start="961:10" pos:end="961:11">26</literal></expr>:</case>

        <switch pos:start="963:9" pos:end="976:9">switch <condition pos:start="963:16" pos:end="963:20">(<expr pos:start="963:17" pos:end="963:19"><name pos:start="963:17" pos:end="963:19">sel</name></expr>)</condition> <block pos:start="963:22" pos:end="976:9">{<block_content pos:start="965:9" pos:end="974:35">

        <case pos:start="965:9" pos:end="965:15">case <expr pos:start="965:14" pos:end="965:14"><literal type="number" pos:start="965:14" pos:end="965:14">0</literal></expr>:</case>

            <expr_stmt pos:start="967:13" pos:end="967:69"><expr pos:start="967:13" pos:end="967:68"><call pos:start="967:13" pos:end="967:68"><name pos:start="967:13" pos:end="967:27">gen_mfc0_load32</name><argument_list pos:start="967:28" pos:end="967:68">(<argument pos:start="967:29" pos:end="967:31"><expr pos:start="967:29" pos:end="967:31"><name pos:start="967:29" pos:end="967:31">arg</name></expr></argument>, <argument pos:start="967:34" pos:end="967:67"><expr pos:start="967:34" pos:end="967:67"><call pos:start="967:34" pos:end="967:67"><name pos:start="967:34" pos:end="967:41">offsetof</name><argument_list pos:start="967:42" pos:end="967:67">(<argument pos:start="967:43" pos:end="967:54"><expr pos:start="967:43" pos:end="967:54"><name pos:start="967:43" pos:end="967:54">CPUMIPSState</name></expr></argument>, <argument pos:start="967:57" pos:end="967:66"><expr pos:start="967:57" pos:end="967:66"><name pos:start="967:57" pos:end="967:66">CP0_ErrCtl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="969:13" pos:end="969:26"><expr pos:start="969:13" pos:end="969:25"><name pos:start="969:13" pos:end="969:14">rn</name> <operator pos:start="969:16" pos:end="969:16">=</operator> <literal type="string" pos:start="969:18" pos:end="969:25">"ErrCtl"</literal></expr>;</expr_stmt>


        <default pos:start="972:9" pos:end="972:16">default:</default>

            <goto pos:start="974:13" pos:end="974:35">goto <name pos:start="974:18" pos:end="974:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="979:5" pos:end="979:12">case <expr pos:start="979:10" pos:end="979:11"><literal type="number" pos:start="979:10" pos:end="979:11">27</literal></expr>:</case>

        <switch pos:start="981:9" pos:end="996:9">switch <condition pos:start="981:16" pos:end="981:20">(<expr pos:start="981:17" pos:end="981:19"><name pos:start="981:17" pos:end="981:19">sel</name></expr>)</condition> <block pos:start="981:22" pos:end="996:9">{<block_content pos:start="985:9" pos:end="994:35">

        <comment type="block" pos:start="983:9" pos:end="983:21">/* ignored */</comment>

        <case pos:start="985:9" pos:end="985:21">case <expr pos:start="985:14" pos:end="985:20"><literal type="number" pos:start="985:14" pos:end="985:14">0</literal> <operator pos:start="985:16" pos:end="985:18">...</operator> <literal type="number" pos:start="985:20" pos:end="985:20">3</literal></expr>:</case>

            <expr_stmt pos:start="987:13" pos:end="987:36"><expr pos:start="987:13" pos:end="987:35"><call pos:start="987:13" pos:end="987:35"><name pos:start="987:13" pos:end="987:27">tcg_gen_movi_tl</name><argument_list pos:start="987:28" pos:end="987:35">(<argument pos:start="987:29" pos:end="987:31"><expr pos:start="987:29" pos:end="987:31"><name pos:start="987:29" pos:end="987:31">arg</name></expr></argument>, <argument pos:start="987:34" pos:end="987:34"><expr pos:start="987:34" pos:end="987:34"><literal type="number" pos:start="987:34" pos:end="987:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="987:38" pos:end="987:56">/* unimplemented */</comment>

            <expr_stmt pos:start="989:13" pos:end="989:28"><expr pos:start="989:13" pos:end="989:27"><name pos:start="989:13" pos:end="989:14">rn</name> <operator pos:start="989:16" pos:end="989:16">=</operator> <literal type="string" pos:start="989:18" pos:end="989:27">"CacheErr"</literal></expr>;</expr_stmt>


        <default pos:start="992:9" pos:end="992:16">default:</default>

            <goto pos:start="994:13" pos:end="994:35">goto <name pos:start="994:18" pos:end="994:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="999:5" pos:end="999:12">case <expr pos:start="999:10" pos:end="999:11"><literal type="number" pos:start="999:10" pos:end="999:11">28</literal></expr>:</case>

        <switch pos:start="1001:9" pos:end="1030:9">switch <condition pos:start="1001:16" pos:end="1001:20">(<expr pos:start="1001:17" pos:end="1001:19"><name pos:start="1001:17" pos:end="1001:19">sel</name></expr>)</condition> <block pos:start="1001:22" pos:end="1030:9">{<block_content pos:start="1003:9" pos:end="1028:35">

        <case pos:start="1003:9" pos:end="1003:15">case <expr pos:start="1003:14" pos:end="1003:14"><literal type="number" pos:start="1003:14" pos:end="1003:14">0</literal></expr>:</case>



        <case pos:start="1007:9" pos:end="1007:15">case <expr pos:start="1007:14" pos:end="1007:14"><literal type="number" pos:start="1007:14" pos:end="1007:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1009:13" pos:end="1009:68"><expr pos:start="1009:13" pos:end="1009:67"><call pos:start="1009:13" pos:end="1009:67"><name pos:start="1009:13" pos:end="1009:27">gen_mfc0_load32</name><argument_list pos:start="1009:28" pos:end="1009:67">(<argument pos:start="1009:29" pos:end="1009:31"><expr pos:start="1009:29" pos:end="1009:31"><name pos:start="1009:29" pos:end="1009:31">arg</name></expr></argument>, <argument pos:start="1009:34" pos:end="1009:66"><expr pos:start="1009:34" pos:end="1009:66"><call pos:start="1009:34" pos:end="1009:66"><name pos:start="1009:34" pos:end="1009:41">offsetof</name><argument_list pos:start="1009:42" pos:end="1009:66">(<argument pos:start="1009:43" pos:end="1009:54"><expr pos:start="1009:43" pos:end="1009:54"><name pos:start="1009:43" pos:end="1009:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1009:57" pos:end="1009:65"><expr pos:start="1009:57" pos:end="1009:65"><name pos:start="1009:57" pos:end="1009:65">CP0_TagLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1011:13" pos:end="1011:25"><expr pos:start="1011:13" pos:end="1011:24"><name pos:start="1011:13" pos:end="1011:14">rn</name> <operator pos:start="1011:16" pos:end="1011:16">=</operator> <literal type="string" pos:start="1011:18" pos:end="1011:24">"TagLo"</literal></expr>;</expr_stmt>


        <case pos:start="1014:9" pos:end="1014:15">case <expr pos:start="1014:14" pos:end="1014:14"><literal type="number" pos:start="1014:14" pos:end="1014:14">1</literal></expr>:</case>


        <case pos:start="1017:9" pos:end="1017:15">case <expr pos:start="1017:14" pos:end="1017:14"><literal type="number" pos:start="1017:14" pos:end="1017:14">5</literal></expr>:</case>

        <case pos:start="1019:9" pos:end="1019:15">case <expr pos:start="1019:14" pos:end="1019:14"><literal type="number" pos:start="1019:14" pos:end="1019:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1021:13" pos:end="1021:69"><expr pos:start="1021:13" pos:end="1021:68"><call pos:start="1021:13" pos:end="1021:68"><name pos:start="1021:13" pos:end="1021:27">gen_mfc0_load32</name><argument_list pos:start="1021:28" pos:end="1021:68">(<argument pos:start="1021:29" pos:end="1021:31"><expr pos:start="1021:29" pos:end="1021:31"><name pos:start="1021:29" pos:end="1021:31">arg</name></expr></argument>, <argument pos:start="1021:34" pos:end="1021:67"><expr pos:start="1021:34" pos:end="1021:67"><call pos:start="1021:34" pos:end="1021:67"><name pos:start="1021:34" pos:end="1021:41">offsetof</name><argument_list pos:start="1021:42" pos:end="1021:67">(<argument pos:start="1021:43" pos:end="1021:54"><expr pos:start="1021:43" pos:end="1021:54"><name pos:start="1021:43" pos:end="1021:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1021:57" pos:end="1021:66"><expr pos:start="1021:57" pos:end="1021:66"><name pos:start="1021:57" pos:end="1021:66">CP0_DataLo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1023:13" pos:end="1023:26"><expr pos:start="1023:13" pos:end="1023:25"><name pos:start="1023:13" pos:end="1023:14">rn</name> <operator pos:start="1023:16" pos:end="1023:16">=</operator> <literal type="string" pos:start="1023:18" pos:end="1023:25">"DataLo"</literal></expr>;</expr_stmt>


        <default pos:start="1026:9" pos:end="1026:16">default:</default>

            <goto pos:start="1028:13" pos:end="1028:35">goto <name pos:start="1028:18" pos:end="1028:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1033:5" pos:end="1033:12">case <expr pos:start="1033:10" pos:end="1033:11"><literal type="number" pos:start="1033:10" pos:end="1033:11">29</literal></expr>:</case>

        <switch pos:start="1035:9" pos:end="1064:9">switch <condition pos:start="1035:16" pos:end="1035:20">(<expr pos:start="1035:17" pos:end="1035:19"><name pos:start="1035:17" pos:end="1035:19">sel</name></expr>)</condition> <block pos:start="1035:22" pos:end="1064:9">{<block_content pos:start="1037:9" pos:end="1062:35">

        <case pos:start="1037:9" pos:end="1037:15">case <expr pos:start="1037:14" pos:end="1037:14"><literal type="number" pos:start="1037:14" pos:end="1037:14">0</literal></expr>:</case>



        <case pos:start="1041:9" pos:end="1041:15">case <expr pos:start="1041:14" pos:end="1041:14"><literal type="number" pos:start="1041:14" pos:end="1041:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1043:13" pos:end="1043:68"><expr pos:start="1043:13" pos:end="1043:67"><call pos:start="1043:13" pos:end="1043:67"><name pos:start="1043:13" pos:end="1043:27">gen_mfc0_load32</name><argument_list pos:start="1043:28" pos:end="1043:67">(<argument pos:start="1043:29" pos:end="1043:31"><expr pos:start="1043:29" pos:end="1043:31"><name pos:start="1043:29" pos:end="1043:31">arg</name></expr></argument>, <argument pos:start="1043:34" pos:end="1043:66"><expr pos:start="1043:34" pos:end="1043:66"><call pos:start="1043:34" pos:end="1043:66"><name pos:start="1043:34" pos:end="1043:41">offsetof</name><argument_list pos:start="1043:42" pos:end="1043:66">(<argument pos:start="1043:43" pos:end="1043:54"><expr pos:start="1043:43" pos:end="1043:54"><name pos:start="1043:43" pos:end="1043:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1043:57" pos:end="1043:65"><expr pos:start="1043:57" pos:end="1043:65"><name pos:start="1043:57" pos:end="1043:65">CP0_TagHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1045:13" pos:end="1045:25"><expr pos:start="1045:13" pos:end="1045:24"><name pos:start="1045:13" pos:end="1045:14">rn</name> <operator pos:start="1045:16" pos:end="1045:16">=</operator> <literal type="string" pos:start="1045:18" pos:end="1045:24">"TagHi"</literal></expr>;</expr_stmt>


        <case pos:start="1048:9" pos:end="1048:15">case <expr pos:start="1048:14" pos:end="1048:14"><literal type="number" pos:start="1048:14" pos:end="1048:14">1</literal></expr>:</case>


        <case pos:start="1051:9" pos:end="1051:15">case <expr pos:start="1051:14" pos:end="1051:14"><literal type="number" pos:start="1051:14" pos:end="1051:14">5</literal></expr>:</case>

        <case pos:start="1053:9" pos:end="1053:15">case <expr pos:start="1053:14" pos:end="1053:14"><literal type="number" pos:start="1053:14" pos:end="1053:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1055:13" pos:end="1055:69"><expr pos:start="1055:13" pos:end="1055:68"><call pos:start="1055:13" pos:end="1055:68"><name pos:start="1055:13" pos:end="1055:27">gen_mfc0_load32</name><argument_list pos:start="1055:28" pos:end="1055:68">(<argument pos:start="1055:29" pos:end="1055:31"><expr pos:start="1055:29" pos:end="1055:31"><name pos:start="1055:29" pos:end="1055:31">arg</name></expr></argument>, <argument pos:start="1055:34" pos:end="1055:67"><expr pos:start="1055:34" pos:end="1055:67"><call pos:start="1055:34" pos:end="1055:67"><name pos:start="1055:34" pos:end="1055:41">offsetof</name><argument_list pos:start="1055:42" pos:end="1055:67">(<argument pos:start="1055:43" pos:end="1055:54"><expr pos:start="1055:43" pos:end="1055:54"><name pos:start="1055:43" pos:end="1055:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1055:57" pos:end="1055:66"><expr pos:start="1055:57" pos:end="1055:66"><name pos:start="1055:57" pos:end="1055:66">CP0_DataHi</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1057:13" pos:end="1057:26"><expr pos:start="1057:13" pos:end="1057:25"><name pos:start="1057:13" pos:end="1057:14">rn</name> <operator pos:start="1057:16" pos:end="1057:16">=</operator> <literal type="string" pos:start="1057:18" pos:end="1057:25">"DataHi"</literal></expr>;</expr_stmt>


        <default pos:start="1060:9" pos:end="1060:16">default:</default>

            <goto pos:start="1062:13" pos:end="1062:35">goto <name pos:start="1062:18" pos:end="1062:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1067:5" pos:end="1067:12">case <expr pos:start="1067:10" pos:end="1067:11"><literal type="number" pos:start="1067:10" pos:end="1067:11">30</literal></expr>:</case>

        <switch pos:start="1069:9" pos:end="1082:9">switch <condition pos:start="1069:16" pos:end="1069:20">(<expr pos:start="1069:17" pos:end="1069:19"><name pos:start="1069:17" pos:end="1069:19">sel</name></expr>)</condition> <block pos:start="1069:22" pos:end="1082:9">{<block_content pos:start="1071:9" pos:end="1080:35">

        <case pos:start="1071:9" pos:end="1071:15">case <expr pos:start="1071:14" pos:end="1071:14"><literal type="number" pos:start="1071:14" pos:end="1071:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1073:13" pos:end="1073:78"><expr pos:start="1073:13" pos:end="1073:77"><call pos:start="1073:13" pos:end="1073:77"><name pos:start="1073:13" pos:end="1073:25">tcg_gen_ld_tl</name><argument_list pos:start="1073:26" pos:end="1073:77">(<argument pos:start="1073:27" pos:end="1073:29"><expr pos:start="1073:27" pos:end="1073:29"><name pos:start="1073:27" pos:end="1073:29">arg</name></expr></argument>, <argument pos:start="1073:32" pos:end="1073:38"><expr pos:start="1073:32" pos:end="1073:38"><name pos:start="1073:32" pos:end="1073:38">cpu_env</name></expr></argument>, <argument pos:start="1073:41" pos:end="1073:76"><expr pos:start="1073:41" pos:end="1073:76"><call pos:start="1073:41" pos:end="1073:76"><name pos:start="1073:41" pos:end="1073:48">offsetof</name><argument_list pos:start="1073:49" pos:end="1073:76">(<argument pos:start="1073:50" pos:end="1073:61"><expr pos:start="1073:50" pos:end="1073:61"><name pos:start="1073:50" pos:end="1073:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1073:64" pos:end="1073:75"><expr pos:start="1073:64" pos:end="1073:75"><name pos:start="1073:64" pos:end="1073:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1075:13" pos:end="1075:28"><expr pos:start="1075:13" pos:end="1075:27"><name pos:start="1075:13" pos:end="1075:14">rn</name> <operator pos:start="1075:16" pos:end="1075:16">=</operator> <literal type="string" pos:start="1075:18" pos:end="1075:27">"ErrorEPC"</literal></expr>;</expr_stmt>


        <default pos:start="1078:9" pos:end="1078:16">default:</default>

            <goto pos:start="1080:13" pos:end="1080:35">goto <name pos:start="1080:18" pos:end="1080:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1085:5" pos:end="1085:12">case <expr pos:start="1085:10" pos:end="1085:11"><literal type="number" pos:start="1085:10" pos:end="1085:11">31</literal></expr>:</case>

        <switch pos:start="1087:9" pos:end="1113:9">switch <condition pos:start="1087:16" pos:end="1087:20">(<expr pos:start="1087:17" pos:end="1087:19"><name pos:start="1087:17" pos:end="1087:19">sel</name></expr>)</condition> <block pos:start="1087:22" pos:end="1113:9">{<block_content pos:start="1089:9" pos:end="1111:35">

        <case pos:start="1089:9" pos:end="1089:15">case <expr pos:start="1089:14" pos:end="1089:14"><literal type="number" pos:start="1089:14" pos:end="1089:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1091:13" pos:end="1091:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1093:13" pos:end="1093:69"><expr pos:start="1093:13" pos:end="1093:68"><call pos:start="1093:13" pos:end="1093:68"><name pos:start="1093:13" pos:end="1093:27">gen_mfc0_load32</name><argument_list pos:start="1093:28" pos:end="1093:68">(<argument pos:start="1093:29" pos:end="1093:31"><expr pos:start="1093:29" pos:end="1093:31"><name pos:start="1093:29" pos:end="1093:31">arg</name></expr></argument>, <argument pos:start="1093:34" pos:end="1093:67"><expr pos:start="1093:34" pos:end="1093:67"><call pos:start="1093:34" pos:end="1093:67"><name pos:start="1093:34" pos:end="1093:41">offsetof</name><argument_list pos:start="1093:42" pos:end="1093:67">(<argument pos:start="1093:43" pos:end="1093:54"><expr pos:start="1093:43" pos:end="1093:54"><name pos:start="1093:43" pos:end="1093:54">CPUMIPSState</name></expr></argument>, <argument pos:start="1093:57" pos:end="1093:66"><expr pos:start="1093:57" pos:end="1093:66"><name pos:start="1093:57" pos:end="1093:66">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:26"><expr pos:start="1095:13" pos:end="1095:25"><name pos:start="1095:13" pos:end="1095:14">rn</name> <operator pos:start="1095:16" pos:end="1095:16">=</operator> <literal type="string" pos:start="1095:18" pos:end="1095:25">"DESAVE"</literal></expr>;</expr_stmt>


        <case pos:start="1098:9" pos:end="1098:21">case <expr pos:start="1098:14" pos:end="1098:20"><literal type="number" pos:start="1098:14" pos:end="1098:14">2</literal> <operator pos:start="1098:16" pos:end="1098:18">...</operator> <literal type="number" pos:start="1098:20" pos:end="1098:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1100:13" pos:end="1100:51"><expr pos:start="1100:13" pos:end="1100:50"><call pos:start="1100:13" pos:end="1100:50"><name pos:start="1100:13" pos:end="1100:21">CP0_CHECK</name><argument_list pos:start="1100:22" pos:end="1100:50">(<argument pos:start="1100:23" pos:end="1100:49"><expr pos:start="1100:23" pos:end="1100:49"><name pos:start="1100:23" pos:end="1100:36"><name pos:start="1100:23" pos:end="1100:25">ctx</name><operator pos:start="1100:26" pos:end="1100:27">-&gt;</operator><name pos:start="1100:28" pos:end="1100:36">kscrexist</name></name> <operator pos:start="1100:38" pos:end="1100:38">&amp;</operator> <operator pos:start="1100:40" pos:end="1100:40">(</operator><literal type="number" pos:start="1100:41" pos:end="1100:41">1</literal> <operator pos:start="1100:43" pos:end="1100:44">&lt;&lt;</operator> <name pos:start="1100:46" pos:end="1100:48">sel</name><operator pos:start="1100:49" pos:end="1100:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1102:13" pos:end="1104:71"><expr pos:start="1102:13" pos:end="1104:70"><call pos:start="1102:13" pos:end="1104:70"><name pos:start="1102:13" pos:end="1102:25">tcg_gen_ld_tl</name><argument_list pos:start="1102:26" pos:end="1104:70">(<argument pos:start="1102:27" pos:end="1102:29"><expr pos:start="1102:27" pos:end="1102:29"><name pos:start="1102:27" pos:end="1102:29">arg</name></expr></argument>, <argument pos:start="1102:32" pos:end="1102:38"><expr pos:start="1102:32" pos:end="1102:38"><name pos:start="1102:32" pos:end="1102:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1104:27" pos:end="1104:69"><expr pos:start="1104:27" pos:end="1104:69"><call pos:start="1104:27" pos:end="1104:69"><name pos:start="1104:27" pos:end="1104:34">offsetof</name><argument_list pos:start="1104:35" pos:end="1104:69">(<argument pos:start="1104:36" pos:end="1104:47"><expr pos:start="1104:36" pos:end="1104:47"><name pos:start="1104:36" pos:end="1104:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1104:50" pos:end="1104:68"><expr pos:start="1104:50" pos:end="1104:68"><name pos:start="1104:50" pos:end="1104:68"><name pos:start="1104:50" pos:end="1104:61">CP0_KScratch</name><index pos:start="1104:62" pos:end="1104:68">[<expr pos:start="1104:63" pos:end="1104:67"><name pos:start="1104:63" pos:end="1104:65">sel</name><operator pos:start="1104:66" pos:end="1104:66">-</operator><literal type="number" pos:start="1104:67" pos:end="1104:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1106:13" pos:end="1106:28"><expr pos:start="1106:13" pos:end="1106:27"><name pos:start="1106:13" pos:end="1106:14">rn</name> <operator pos:start="1106:16" pos:end="1106:16">=</operator> <literal type="string" pos:start="1106:18" pos:end="1106:27">"KScratch"</literal></expr>;</expr_stmt>


        <default pos:start="1109:9" pos:end="1109:16">default:</default>

            <goto pos:start="1111:13" pos:end="1111:35">goto <name pos:start="1111:18" pos:end="1111:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <default pos:start="1116:5" pos:end="1116:12">default:</default>

        <goto pos:start="1118:9" pos:end="1118:31">goto <name pos:start="1118:14" pos:end="1118:30">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1122:5" pos:end="1122:51"><expr pos:start="1122:5" pos:end="1122:50"><call pos:start="1122:5" pos:end="1122:50"><name pos:start="1122:5" pos:end="1122:27">trace_mips_translate_c0</name><argument_list pos:start="1122:28" pos:end="1122:50">(<argument pos:start="1122:29" pos:end="1122:35"><expr pos:start="1122:29" pos:end="1122:35"><literal type="string" pos:start="1122:29" pos:end="1122:35">"dmfc0"</literal></expr></argument>, <argument pos:start="1122:38" pos:end="1122:39"><expr pos:start="1122:38" pos:end="1122:39"><name pos:start="1122:38" pos:end="1122:39">rn</name></expr></argument>, <argument pos:start="1122:42" pos:end="1122:44"><expr pos:start="1122:42" pos:end="1122:44"><name pos:start="1122:42" pos:end="1122:44">reg</name></expr></argument>, <argument pos:start="1122:47" pos:end="1122:49"><expr pos:start="1122:47" pos:end="1122:49"><name pos:start="1122:47" pos:end="1122:49">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="1124:5" pos:end="1124:11">return;</return>



<label pos:start="1128:1" pos:end="1128:18"><name pos:start="1128:1" pos:end="1128:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1130:5" pos:end="1130:73"><expr pos:start="1130:5" pos:end="1130:72"><call pos:start="1130:5" pos:end="1130:72"><name pos:start="1130:5" pos:end="1130:17">qemu_log_mask</name><argument_list pos:start="1130:18" pos:end="1130:72">(<argument pos:start="1130:19" pos:end="1130:27"><expr pos:start="1130:19" pos:end="1130:27"><name pos:start="1130:19" pos:end="1130:27">LOG_UNIMP</name></expr></argument>, <argument pos:start="1130:30" pos:end="1130:57"><expr pos:start="1130:30" pos:end="1130:57"><literal type="string" pos:start="1130:30" pos:end="1130:57">"dmfc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1130:60" pos:end="1130:61"><expr pos:start="1130:60" pos:end="1130:61"><name pos:start="1130:60" pos:end="1130:61">rn</name></expr></argument>, <argument pos:start="1130:64" pos:end="1130:66"><expr pos:start="1130:64" pos:end="1130:66"><name pos:start="1130:64" pos:end="1130:66">reg</name></expr></argument>, <argument pos:start="1130:69" pos:end="1130:71"><expr pos:start="1130:69" pos:end="1130:71"><name pos:start="1130:69" pos:end="1130:71">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="1132:5" pos:end="1132:37"><expr pos:start="1132:5" pos:end="1132:36"><call pos:start="1132:5" pos:end="1132:36"><name pos:start="1132:5" pos:end="1132:26">gen_mfc0_unimplemented</name><argument_list pos:start="1132:27" pos:end="1132:36">(<argument pos:start="1132:28" pos:end="1132:30"><expr pos:start="1132:28" pos:end="1132:30"><name pos:start="1132:28" pos:end="1132:30">ctx</name></expr></argument>, <argument pos:start="1132:33" pos:end="1132:35"><expr pos:start="1132:33" pos:end="1132:35"><name pos:start="1132:33" pos:end="1132:35">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
