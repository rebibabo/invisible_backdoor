<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8511.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <name pos:start="1:13" pos:end="1:24">coroutine_fn</name></type> <name pos:start="1:26" pos:end="1:34">v9fs_open</name><parameter_list pos:start="1:35" pos:end="1:48">(<parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:41"><name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="177:1">{<block_content pos:start="5:5" pos:end="175:27">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int32_t</name></type> <name pos:start="9:13" pos:end="9:16">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">V9fsQID</name></type> <name pos:start="11:13" pos:end="11:15">qid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">iounit</name> <init pos:start="13:16" pos:end="13:18">= <expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">ssize_t</name></type> <name pos:start="15:13" pos:end="15:15">err</name> <init pos:start="15:17" pos:end="15:19">= <expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:10">struct</name> <name pos:start="19:12" pos:end="19:15">stat</name></name></type> <name pos:start="19:17" pos:end="19:21">stbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">V9fsFidState</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:11">V9fsPDU</name> <modifier pos:start="23:13" pos:end="23:13">*</modifier></type><name pos:start="23:14" pos:end="23:16">pdu</name> <init pos:start="23:18" pos:end="23:25">= <expr pos:start="23:20" pos:end="23:25"><name pos:start="23:20" pos:end="23:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:13">V9fsState</name> <modifier pos:start="25:15" pos:end="25:15">*</modifier></type><name pos:start="25:16" pos:end="25:16">s</name> <init pos:start="25:18" pos:end="25:25">= <expr pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:22">pdu</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:25">s</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:24"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:24">proto_version</name></name> <operator pos:start="29:26" pos:end="29:27">==</operator> <name pos:start="29:29" pos:end="29:44">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="29:47" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:60">

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:11">err</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:59"><name pos:start="31:15" pos:end="31:27">pdu_unmarshal</name><argument_list pos:start="31:28" pos:end="31:59">(<argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">pdu</name></expr></argument>, <argument pos:start="31:34" pos:end="31:39"><expr pos:start="31:34" pos:end="31:39"><name pos:start="31:34" pos:end="31:39">offset</name></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><literal type="string" pos:start="31:42" pos:end="31:45">"dd"</literal></expr></argument>, <argument pos:start="31:48" pos:end="31:51"><expr pos:start="31:48" pos:end="31:51"><operator pos:start="31:48" pos:end="31:48">&amp;</operator><name pos:start="31:49" pos:end="31:51">fid</name></expr></argument>, <argument pos:start="31:54" pos:end="31:58"><expr pos:start="31:54" pos:end="31:58"><operator pos:start="31:54" pos:end="31:54">&amp;</operator><name pos:start="31:55" pos:end="31:58">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="41:5">else <block pos:start="33:12" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:24">

        <decl_stmt pos:start="35:9" pos:end="35:25"><decl pos:start="35:9" pos:end="35:24"><type pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:15">uint8_t</name></type> <name pos:start="35:17" pos:end="35:24">modebyte</name></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:63"><name pos:start="37:15" pos:end="37:27">pdu_unmarshal</name><argument_list pos:start="37:28" pos:end="37:63">(<argument pos:start="37:29" pos:end="37:31"><expr pos:start="37:29" pos:end="37:31"><name pos:start="37:29" pos:end="37:31">pdu</name></expr></argument>, <argument pos:start="37:34" pos:end="37:39"><expr pos:start="37:34" pos:end="37:39"><name pos:start="37:34" pos:end="37:39">offset</name></expr></argument>, <argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><literal type="string" pos:start="37:42" pos:end="37:45">"db"</literal></expr></argument>, <argument pos:start="37:48" pos:end="37:51"><expr pos:start="37:48" pos:end="37:51"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:51">fid</name></expr></argument>, <argument pos:start="37:54" pos:end="37:62"><expr pos:start="37:54" pos:end="37:62"><operator pos:start="37:54" pos:end="37:54">&amp;</operator><name pos:start="37:55" pos:end="37:62">modebyte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:12">mode</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:23">modebyte</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:23">

        <goto pos:start="45:9" pos:end="45:23">goto <name pos:start="45:14" pos:end="45:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><call pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:19">trace_v9fs_open</name><argument_list pos:start="49:20" pos:end="49:49">(<argument pos:start="49:21" pos:end="49:28"><expr pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:28"><name pos:start="49:21" pos:end="49:23">pdu</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:28">tag</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:37"><expr pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:33">pdu</name><operator pos:start="49:34" pos:end="49:35">-&gt;</operator><name pos:start="49:36" pos:end="49:37">id</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:42"><expr pos:start="49:40" pos:end="49:42"><name pos:start="49:40" pos:end="49:42">fid</name></expr></argument>, <argument pos:start="49:45" pos:end="49:48"><expr pos:start="49:45" pos:end="49:48"><name pos:start="49:45" pos:end="49:48">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:8">fidp</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:28"><name pos:start="53:12" pos:end="53:18">get_fid</name><argument_list pos:start="53:19" pos:end="53:28">(<argument pos:start="53:20" pos:end="53:22"><expr pos:start="53:20" pos:end="53:22"><name pos:start="53:20" pos:end="53:22">pdu</name></expr></argument>, <argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="61:5"><if pos:start="55:5" pos:end="61:5">if <condition pos:start="55:8" pos:end="55:21">(<expr pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:12">fidp</name> <operator pos:start="55:14" pos:end="55:15">==</operator> <name pos:start="55:17" pos:end="55:20">NULL</name></expr>)</condition> <block pos:start="55:23" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:23">

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:11">err</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">-</operator><name pos:start="57:16" pos:end="57:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:23">goto <name pos:start="59:14" pos:end="59:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:42"><expr pos:start="63:5" pos:end="63:41"><call pos:start="63:5" pos:end="63:41"><name pos:start="63:5" pos:end="63:10">BUG_ON</name><argument_list pos:start="63:11" pos:end="63:41">(<argument pos:start="63:12" pos:end="63:40"><expr pos:start="63:12" pos:end="63:40"><name pos:start="63:12" pos:end="63:25"><name pos:start="63:12" pos:end="63:15">fidp</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:25">fid_type</name></name> <operator pos:start="63:27" pos:end="63:28">!=</operator> <name pos:start="63:30" pos:end="63:40">P9_FID_NONE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:50"><expr pos:start="67:5" pos:end="67:49"><name pos:start="67:5" pos:end="67:7">err</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:49"><name pos:start="67:11" pos:end="67:23">v9fs_co_lstat</name><argument_list pos:start="67:24" pos:end="67:49">(<argument pos:start="67:25" pos:end="67:27"><expr pos:start="67:25" pos:end="67:27"><name pos:start="67:25" pos:end="67:27">pdu</name></expr></argument>, <argument pos:start="67:30" pos:end="67:40"><expr pos:start="67:30" pos:end="67:40"><operator pos:start="67:30" pos:end="67:30">&amp;</operator><name pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:34">fidp</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:40">path</name></name></expr></argument>, <argument pos:start="67:43" pos:end="67:48"><expr pos:start="67:43" pos:end="67:48"><operator pos:start="67:43" pos:end="67:43">&amp;</operator><name pos:start="67:44" pos:end="67:48">stbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:16">(<expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:11">err</name> <operator pos:start="69:13" pos:end="69:13">&lt;</operator> <literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>)</condition> <block pos:start="69:18" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:17">

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><call pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:15">stat_to_qid</name><argument_list pos:start="75:16" pos:end="75:29">(<argument pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:22"><operator pos:start="75:17" pos:end="75:17">&amp;</operator><name pos:start="75:18" pos:end="75:22">stbuf</name></expr></argument>, <argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><operator pos:start="75:25" pos:end="75:25">&amp;</operator><name pos:start="75:26" pos:end="75:28">qid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="163:5"><if pos:start="77:5" pos:end="99:5">if <condition pos:start="77:8" pos:end="77:31">(<expr pos:start="77:9" pos:end="77:30"><call pos:start="77:9" pos:end="77:30"><name pos:start="77:9" pos:end="77:15">S_ISDIR</name><argument_list pos:start="77:16" pos:end="77:30">(<argument pos:start="77:17" pos:end="77:29"><expr pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:21">stbuf</name><operator pos:start="77:22" pos:end="77:22">.</operator><name pos:start="77:23" pos:end="77:29">st_mode</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:33" pos:end="99:5">{<block_content pos:start="79:9" pos:end="97:22">

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:11">err</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:40"><name pos:start="79:15" pos:end="79:29">v9fs_co_opendir</name><argument_list pos:start="79:30" pos:end="79:40">(<argument pos:start="79:31" pos:end="79:33"><expr pos:start="79:31" pos:end="79:33"><name pos:start="79:31" pos:end="79:33">pdu</name></expr></argument>, <argument pos:start="79:36" pos:end="79:39"><expr pos:start="79:36" pos:end="79:39"><name pos:start="79:36" pos:end="79:39">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:20">(<expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">err</name> <operator pos:start="81:17" pos:end="81:17">&lt;</operator> <literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>)</condition> <block pos:start="81:22" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:21">

            <goto pos:start="83:13" pos:end="83:21">goto <name pos:start="83:18" pos:end="83:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:12">fidp</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:22">fid_type</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:35">P9_FID_DIR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:11">err</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:53"><name pos:start="89:15" pos:end="89:25">pdu_marshal</name><argument_list pos:start="89:26" pos:end="89:53">(<argument pos:start="89:27" pos:end="89:29"><expr pos:start="89:27" pos:end="89:29"><name pos:start="89:27" pos:end="89:29">pdu</name></expr></argument>, <argument pos:start="89:32" pos:end="89:37"><expr pos:start="89:32" pos:end="89:37"><name pos:start="89:32" pos:end="89:37">offset</name></expr></argument>, <argument pos:start="89:40" pos:end="89:43"><expr pos:start="89:40" pos:end="89:43"><literal type="string" pos:start="89:40" pos:end="89:43">"Qd"</literal></expr></argument>, <argument pos:start="89:46" pos:end="89:49"><expr pos:start="89:46" pos:end="89:49"><operator pos:start="89:46" pos:end="89:46">&amp;</operator><name pos:start="89:47" pos:end="89:49">qid</name></expr></argument>, <argument pos:start="89:52" pos:end="89:52"><expr pos:start="89:52" pos:end="89:52"><literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="95:9"><if pos:start="91:9" pos:end="95:9">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">err</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition> <block pos:start="91:22" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:21">

            <goto pos:start="93:13" pos:end="93:21">goto <name pos:start="93:18" pos:end="93:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:22"><expr pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:11">err</name> <operator pos:start="97:13" pos:end="97:14">+=</operator> <name pos:start="97:16" pos:end="97:21">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="99:7" pos:end="163:5">else <block pos:start="99:12" pos:end="163:5">{<block_content pos:start="101:9" pos:end="161:22">

        <if_stmt pos:start="101:9" pos:end="109:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:49">(<expr pos:start="101:13" pos:end="101:48"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:28">proto_version</name></name> <operator pos:start="101:30" pos:end="101:31">==</operator> <name pos:start="101:33" pos:end="101:48">V9FS_PROTO_2000L</name></expr>)</condition> <block pos:start="101:51" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:48">

            <expr_stmt pos:start="103:13" pos:end="103:48"><expr pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:17">flags</name> <operator pos:start="103:19" pos:end="103:19">=</operator> <call pos:start="103:21" pos:end="103:47"><name pos:start="103:21" pos:end="103:38">get_dotl_openflags</name><argument_list pos:start="103:39" pos:end="103:47">(<argument pos:start="103:40" pos:end="103:40"><expr pos:start="103:40" pos:end="103:40"><name pos:start="103:40" pos:end="103:40">s</name></expr></argument>, <argument pos:start="103:43" pos:end="103:46"><expr pos:start="103:43" pos:end="103:46"><name pos:start="103:43" pos:end="103:46">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="105:11" pos:end="109:9">else <block pos:start="105:16" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:42">

            <expr_stmt pos:start="107:13" pos:end="107:42"><expr pos:start="107:13" pos:end="107:41"><name pos:start="107:13" pos:end="107:17">flags</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <call pos:start="107:21" pos:end="107:41"><name pos:start="107:21" pos:end="107:35">omode_to_uflags</name><argument_list pos:start="107:36" pos:end="107:41">(<argument pos:start="107:37" pos:end="107:40"><expr pos:start="107:37" pos:end="107:40"><name pos:start="107:37" pos:end="107:40">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="123:9">if <condition pos:start="111:12" pos:end="111:34">(<expr pos:start="111:13" pos:end="111:33"><call pos:start="111:13" pos:end="111:33"><name pos:start="111:13" pos:end="111:24">is_ro_export</name><argument_list pos:start="111:25" pos:end="111:33">(<argument pos:start="111:26" pos:end="111:32"><expr pos:start="111:26" pos:end="111:32"><operator pos:start="111:26" pos:end="111:26">&amp;</operator><name pos:start="111:27" pos:end="111:32"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:32">ctx</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:36" pos:end="123:9">{<block_content pos:start="113:13" pos:end="121:13">

            <if_stmt pos:start="113:13" pos:end="121:13"><if pos:start="113:13" pos:end="121:13">if <condition pos:start="113:16" pos:end="115:50">(<expr pos:start="113:17" pos:end="115:49"><name pos:start="113:17" pos:end="113:20">mode</name> <operator pos:start="113:22" pos:end="113:22">&amp;</operator> <name pos:start="113:24" pos:end="113:31">O_WRONLY</name> <operator pos:start="113:33" pos:end="113:34">||</operator> <name pos:start="113:36" pos:end="113:39">mode</name> <operator pos:start="113:41" pos:end="113:41">&amp;</operator> <name pos:start="113:43" pos:end="113:48">O_RDWR</name> <operator pos:start="113:50" pos:end="113:51">||</operator>

                <name pos:start="115:17" pos:end="115:20">mode</name> <operator pos:start="115:22" pos:end="115:22">&amp;</operator> <name pos:start="115:24" pos:end="115:31">O_APPEND</name> <operator pos:start="115:33" pos:end="115:34">||</operator> <name pos:start="115:36" pos:end="115:39">mode</name> <operator pos:start="115:41" pos:end="115:41">&amp;</operator> <name pos:start="115:43" pos:end="115:49">O_TRUNC</name></expr>)</condition> <block pos:start="115:52" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:25">

                <expr_stmt pos:start="117:17" pos:end="117:29"><expr pos:start="117:17" pos:end="117:28"><name pos:start="117:17" pos:end="117:19">err</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <operator pos:start="117:23" pos:end="117:23">-</operator><name pos:start="117:24" pos:end="117:28">EROFS</name></expr>;</expr_stmt>

                <goto pos:start="119:17" pos:end="119:25">goto <name pos:start="119:22" pos:end="119:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:45"><expr pos:start="125:9" pos:end="125:44"><name pos:start="125:9" pos:end="125:11">err</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <call pos:start="125:15" pos:end="125:44"><name pos:start="125:15" pos:end="125:26">v9fs_co_open</name><argument_list pos:start="125:27" pos:end="125:44">(<argument pos:start="125:28" pos:end="125:30"><expr pos:start="125:28" pos:end="125:30"><name pos:start="125:28" pos:end="125:30">pdu</name></expr></argument>, <argument pos:start="125:33" pos:end="125:36"><expr pos:start="125:33" pos:end="125:36"><name pos:start="125:33" pos:end="125:36">fidp</name></expr></argument>, <argument pos:start="125:39" pos:end="125:43"><expr pos:start="125:39" pos:end="125:43"><name pos:start="125:39" pos:end="125:43">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="131:9"><if pos:start="127:9" pos:end="131:9">if <condition pos:start="127:12" pos:end="127:20">(<expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:15">err</name> <operator pos:start="127:17" pos:end="127:17">&lt;</operator> <literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr>)</condition> <block pos:start="127:22" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:21">

            <goto pos:start="129:13" pos:end="129:21">goto <name pos:start="129:18" pos:end="129:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:37"><expr pos:start="133:9" pos:end="133:36"><name pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:12">fidp</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:22">fid_type</name></name> <operator pos:start="133:24" pos:end="133:24">=</operator> <name pos:start="133:26" pos:end="133:36">P9_FID_FILE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:33"><expr pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:12">fidp</name><operator pos:start="135:13" pos:end="135:14">-&gt;</operator><name pos:start="135:15" pos:end="135:24">open_flags</name></name> <operator pos:start="135:26" pos:end="135:26">=</operator> <name pos:start="135:28" pos:end="135:32">flags</name></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="149:9"><if pos:start="137:9" pos:end="149:9">if <condition pos:start="137:12" pos:end="137:27">(<expr pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:17">flags</name> <operator pos:start="137:19" pos:end="137:19">&amp;</operator> <name pos:start="137:21" pos:end="137:26">O_EXCL</name></expr>)</condition> <block pos:start="137:29" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:47">

            <comment type="block" pos:start="139:13" pos:end="145:15">/*

             * We let the host file system do O_EXCL check

             * We should not reclaim such fd

             */</comment>

            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:16">fidp</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:23">flags</name></name> <operator pos:start="147:25" pos:end="147:26">|=</operator> <name pos:start="147:28" pos:end="147:46">FID_NON_RECLAIMABLE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:46"><expr pos:start="151:9" pos:end="151:45"><name pos:start="151:9" pos:end="151:14">iounit</name> <operator pos:start="151:16" pos:end="151:16">=</operator> <call pos:start="151:18" pos:end="151:45"><name pos:start="151:18" pos:end="151:27">get_iounit</name><argument_list pos:start="151:28" pos:end="151:45">(<argument pos:start="151:29" pos:end="151:31"><expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:31">pdu</name></expr></argument>, <argument pos:start="151:34" pos:end="151:44"><expr pos:start="151:34" pos:end="151:44"><operator pos:start="151:34" pos:end="151:34">&amp;</operator><name pos:start="151:35" pos:end="151:44"><name pos:start="151:35" pos:end="151:38">fidp</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:44">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:59"><expr pos:start="153:9" pos:end="153:58"><name pos:start="153:9" pos:end="153:11">err</name> <operator pos:start="153:13" pos:end="153:13">=</operator> <call pos:start="153:15" pos:end="153:58"><name pos:start="153:15" pos:end="153:25">pdu_marshal</name><argument_list pos:start="153:26" pos:end="153:58">(<argument pos:start="153:27" pos:end="153:29"><expr pos:start="153:27" pos:end="153:29"><name pos:start="153:27" pos:end="153:29">pdu</name></expr></argument>, <argument pos:start="153:32" pos:end="153:37"><expr pos:start="153:32" pos:end="153:37"><name pos:start="153:32" pos:end="153:37">offset</name></expr></argument>, <argument pos:start="153:40" pos:end="153:43"><expr pos:start="153:40" pos:end="153:43"><literal type="string" pos:start="153:40" pos:end="153:43">"Qd"</literal></expr></argument>, <argument pos:start="153:46" pos:end="153:49"><expr pos:start="153:46" pos:end="153:49"><operator pos:start="153:46" pos:end="153:46">&amp;</operator><name pos:start="153:47" pos:end="153:49">qid</name></expr></argument>, <argument pos:start="153:52" pos:end="153:57"><expr pos:start="153:52" pos:end="153:57"><name pos:start="153:52" pos:end="153:57">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="159:9"><if pos:start="155:9" pos:end="159:9">if <condition pos:start="155:12" pos:end="155:20">(<expr pos:start="155:13" pos:end="155:19"><name pos:start="155:13" pos:end="155:15">err</name> <operator pos:start="155:17" pos:end="155:17">&lt;</operator> <literal type="number" pos:start="155:19" pos:end="155:19">0</literal></expr>)</condition> <block pos:start="155:22" pos:end="159:9">{<block_content pos:start="157:13" pos:end="157:21">

            <goto pos:start="157:13" pos:end="157:21">goto <name pos:start="157:18" pos:end="157:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:22"><expr pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:11">err</name> <operator pos:start="161:13" pos:end="161:14">+=</operator> <name pos:start="161:16" pos:end="161:21">offset</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="167:68"><expr pos:start="165:5" pos:end="167:67"><call pos:start="165:5" pos:end="167:67"><name pos:start="165:5" pos:end="165:26">trace_v9fs_open_return</name><argument_list pos:start="165:27" pos:end="167:67">(<argument pos:start="165:28" pos:end="165:35"><expr pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:30">pdu</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:35">tag</name></name></expr></argument>, <argument pos:start="165:38" pos:end="165:44"><expr pos:start="165:38" pos:end="165:44"><name pos:start="165:38" pos:end="165:44"><name pos:start="165:38" pos:end="165:40">pdu</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:44">id</name></name></expr></argument>,

                           <argument pos:start="167:28" pos:end="167:35"><expr pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:30">qid</name><operator pos:start="167:31" pos:end="167:31">.</operator><name pos:start="167:32" pos:end="167:35">type</name></name></expr></argument>, <argument pos:start="167:38" pos:end="167:48"><expr pos:start="167:38" pos:end="167:48"><name pos:start="167:38" pos:end="167:48"><name pos:start="167:38" pos:end="167:40">qid</name><operator pos:start="167:41" pos:end="167:41">.</operator><name pos:start="167:42" pos:end="167:48">version</name></name></expr></argument>, <argument pos:start="167:51" pos:end="167:58"><expr pos:start="167:51" pos:end="167:58"><name pos:start="167:51" pos:end="167:58"><name pos:start="167:51" pos:end="167:53">qid</name><operator pos:start="167:54" pos:end="167:54">.</operator><name pos:start="167:55" pos:end="167:58">path</name></name></expr></argument>, <argument pos:start="167:61" pos:end="167:66"><expr pos:start="167:61" pos:end="167:66"><name pos:start="167:61" pos:end="167:66">iounit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="169:1" pos:end="169:4"><name pos:start="169:1" pos:end="169:3">out</name>:</label>

    <expr_stmt pos:start="171:5" pos:end="171:23"><expr pos:start="171:5" pos:end="171:22"><call pos:start="171:5" pos:end="171:22"><name pos:start="171:5" pos:end="171:11">put_fid</name><argument_list pos:start="171:12" pos:end="171:22">(<argument pos:start="171:13" pos:end="171:15"><expr pos:start="171:13" pos:end="171:15"><name pos:start="171:13" pos:end="171:15">pdu</name></expr></argument>, <argument pos:start="171:18" pos:end="171:21"><expr pos:start="171:18" pos:end="171:21"><name pos:start="171:18" pos:end="171:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="173:1" pos:end="173:10"><name pos:start="173:1" pos:end="173:9">out_nofid</name>:</label>

    <expr_stmt pos:start="175:5" pos:end="175:27"><expr pos:start="175:5" pos:end="175:26"><call pos:start="175:5" pos:end="175:26"><name pos:start="175:5" pos:end="175:16">pdu_complete</name><argument_list pos:start="175:17" pos:end="175:26">(<argument pos:start="175:18" pos:end="175:20"><expr pos:start="175:18" pos:end="175:20"><name pos:start="175:18" pos:end="175:20">pdu</name></expr></argument>, <argument pos:start="175:23" pos:end="175:25"><expr pos:start="175:23" pos:end="175:25"><name pos:start="175:23" pos:end="175:25">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
