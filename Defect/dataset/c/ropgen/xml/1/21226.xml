<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21226.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">vnc_dpy_update</name><parameter_list pos:start="1:27" pos:end="3:54">(<parameter pos:start="1:28" pos:end="1:53"><decl pos:start="1:28" pos:end="1:53"><type pos:start="1:28" pos:end="1:53"><name pos:start="1:28" pos:end="1:48">DisplayChangeListener</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dcl</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:32"><decl pos:start="3:28" pos:end="3:32"><type pos:start="3:28" pos:end="3:32"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:32">x</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:39"><decl pos:start="3:35" pos:end="3:39"><type pos:start="3:35" pos:end="3:39"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:39">y</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:46"><decl pos:start="3:42" pos:end="3:46"><type pos:start="3:42" pos:end="3:46"><name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:46">w</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:53"><decl pos:start="3:49" pos:end="3:53"><type pos:start="3:49" pos:end="3:53"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:53">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:5">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VncDisplay</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">vd</name> <init pos:start="7:20" pos:end="7:55">= <expr pos:start="7:22" pos:end="7:55"><call pos:start="7:22" pos:end="7:55"><name pos:start="7:22" pos:end="7:33">container_of</name><argument_list pos:start="7:34" pos:end="7:55">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">dcl</name></expr></argument>, <argument pos:start="7:40" pos:end="7:49"><expr pos:start="7:40" pos:end="7:49"><name pos:start="7:40" pos:end="7:49">VncDisplay</name></expr></argument>, <argument pos:start="7:52" pos:end="7:54"><expr pos:start="7:52" pos:end="7:54"><name pos:start="7:52" pos:end="7:54">dcl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:21">VncSurface</name></name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">s</name> <init pos:start="9:26" pos:end="9:37">= <expr pos:start="9:28" pos:end="9:37"><operator pos:start="9:28" pos:end="9:28">&amp;</operator><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">vd</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">guest</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">width</name> <init pos:start="11:15" pos:end="11:37">= <expr pos:start="11:17" pos:end="11:37"><call pos:start="11:17" pos:end="11:37"><name pos:start="11:17" pos:end="11:29">surface_width</name><argument_list pos:start="11:30" pos:end="11:37">(<argument pos:start="11:31" pos:end="11:36"><expr pos:start="11:31" pos:end="11:36"><name pos:start="11:31" pos:end="11:36"><name pos:start="11:31" pos:end="11:32">vd</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:36">ds</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">height</name> <init pos:start="13:16" pos:end="13:39">= <expr pos:start="13:18" pos:end="13:39"><call pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:31">surface_height</name><argument_list pos:start="13:32" pos:end="13:39">(<argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:34">vd</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:38">ds</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="19:53">/* this is needed this to ensure we updated all affected

     * blocks if x % VNC_DIRTY_PIXELS_PER_BIT != 0 */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:5">w</name> <operator pos:start="21:7" pos:end="21:8">+=</operator> <operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:11">x</name> <operator pos:start="21:13" pos:end="21:13">%</operator> <name pos:start="21:15" pos:end="21:38">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="21:39" pos:end="21:39">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:5">x</name> <operator pos:start="23:7" pos:end="23:8">-=</operator> <operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:11">x</name> <operator pos:start="23:13" pos:end="23:13">%</operator> <name pos:start="23:15" pos:end="23:38">VNC_DIRTY_PIXELS_PER_BIT</name><operator pos:start="23:39" pos:end="23:39">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:5">x</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:11">MIN</name><argument_list pos:start="27:12" pos:end="27:21">(<argument pos:start="27:13" pos:end="27:13"><expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">x</name></expr></argument>, <argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:5">y</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:11">MIN</name><argument_list pos:start="29:12" pos:end="29:22">(<argument pos:start="29:13" pos:end="29:13"><expr pos:start="29:13" pos:end="29:13"><name pos:start="29:13" pos:end="29:13">y</name></expr></argument>, <argument pos:start="29:16" pos:end="29:21"><expr pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:21">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:5">w</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:11">MIN</name><argument_list pos:start="31:12" pos:end="31:25">(<argument pos:start="31:13" pos:end="31:17"><expr pos:start="31:13" pos:end="31:17"><name pos:start="31:13" pos:end="31:13">x</name> <operator pos:start="31:15" pos:end="31:15">+</operator> <name pos:start="31:17" pos:end="31:17">w</name></expr></argument>, <argument pos:start="31:20" pos:end="31:24"><expr pos:start="31:20" pos:end="31:24"><name pos:start="31:20" pos:end="31:24">width</name></expr></argument>)</argument_list></call> <operator pos:start="31:27" pos:end="31:27">-</operator> <name pos:start="31:29" pos:end="31:29">x</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:5">h</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:11">MIN</name><argument_list pos:start="33:12" pos:end="33:26">(<argument pos:start="33:13" pos:end="33:17"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">y</name> <operator pos:start="33:15" pos:end="33:15">+</operator> <name pos:start="33:17" pos:end="33:17">h</name></expr></argument>, <argument pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:25">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="37:5" pos:end="43:5">for <control pos:start="37:9" pos:end="37:22">(<init pos:start="37:10" pos:end="37:10">;</init> <condition pos:start="37:12" pos:end="37:17"><expr pos:start="37:12" pos:end="37:16"><name pos:start="37:12" pos:end="37:12">y</name> <operator pos:start="37:14" pos:end="37:14">&lt;</operator> <name pos:start="37:16" pos:end="37:16">h</name></expr>;</condition> <incr pos:start="37:19" pos:end="37:21"><expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:19">y</name><operator pos:start="37:20" pos:end="37:21">++</operator></expr></incr>)</control> <block pos:start="37:24" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:62">

        <expr_stmt pos:start="39:9" pos:end="41:62"><expr pos:start="39:9" pos:end="41:61"><call pos:start="39:9" pos:end="41:61"><name pos:start="39:9" pos:end="39:18">bitmap_set</name><argument_list pos:start="39:19" pos:end="41:61">(<argument pos:start="39:20" pos:end="39:30"><expr pos:start="39:20" pos:end="39:30"><name pos:start="39:20" pos:end="39:30"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:27">dirty</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><name pos:start="39:29" pos:end="39:29">y</name></expr>]</index></name></expr></argument>, <argument pos:start="39:33" pos:end="39:60"><expr pos:start="39:33" pos:end="39:60"><name pos:start="39:33" pos:end="39:33">x</name> <operator pos:start="39:35" pos:end="39:35">/</operator> <name pos:start="39:37" pos:end="39:60">VNC_DIRTY_PIXELS_PER_BIT</name></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:60"><expr pos:start="41:20" pos:end="41:60"><call pos:start="41:20" pos:end="41:60"><name pos:start="41:20" pos:end="41:31">DIV_ROUND_UP</name><argument_list pos:start="41:32" pos:end="41:60">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">w</name></expr></argument>, <argument pos:start="41:36" pos:end="41:59"><expr pos:start="41:36" pos:end="41:59"><name pos:start="41:36" pos:end="41:59">VNC_DIRTY_PIXELS_PER_BIT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
