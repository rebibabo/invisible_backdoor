<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17726.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:37">on2avc_decode_init</name><parameter_list pos:start="1:38" pos:end="1:60">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:13">{<block_content pos:start="5:5" pos:end="149:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">On2AVCContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">c</name> <init pos:start="5:22" pos:end="5:39">= <expr pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:39"><name pos:start="5:24" pos:end="5:28">avctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:21"><expr pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:5">c</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:12">avctx</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:20">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:47"><expr pos:start="13:5" pos:end="13:46"><name pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:9">avctx</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:21">sample_fmt</name></name>     <operator pos:start="13:27" pos:end="13:27">=</operator> <name pos:start="13:29" pos:end="13:46">AV_SAMPLE_FMT_FLTP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:71"><expr pos:start="15:5" pos:end="17:70"><name pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:9">avctx</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:25">channel_layout</name></name> <operator pos:start="15:27" pos:end="15:27">=</operator> <ternary pos:start="15:29" pos:end="17:70"><condition pos:start="15:29" pos:end="15:52"><expr pos:start="15:29" pos:end="15:50"><operator pos:start="15:29" pos:end="15:29">(</operator><name pos:start="15:30" pos:end="15:44"><name pos:start="15:30" pos:end="15:34">avctx</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:44">channels</name></name> <operator pos:start="15:46" pos:end="15:47">==</operator> <literal type="number" pos:start="15:49" pos:end="15:49">2</literal><operator pos:start="15:50" pos:end="15:50">)</operator></expr> ?</condition><then pos:start="15:54" pos:end="15:72"> <expr pos:start="15:54" pos:end="15:72"><name pos:start="15:54" pos:end="15:72">AV_CH_LAYOUT_STEREO</name></expr>

                                                   </then><else pos:start="17:52" pos:end="17:70">: <expr pos:start="17:54" pos:end="17:70"><name pos:start="17:54" pos:end="17:70">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:5">c</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:15">is_av500</name></name> <operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">(</operator><name pos:start="21:20" pos:end="21:35"><name pos:start="21:20" pos:end="21:24">avctx</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:35">codec_tag</name></name> <operator pos:start="21:37" pos:end="21:38">==</operator> <literal type="number" pos:start="21:40" pos:end="21:44">0x500</literal><operator pos:start="21:45" pos:end="21:45">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="149:13"><if pos:start="23:5" pos:end="149:13">if <condition pos:start="23:8" pos:end="23:44">(<expr pos:start="23:9" pos:end="23:43"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">is_av500</name></name> <operator pos:start="23:21" pos:end="23:22">&amp;&amp;</operator> <name pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:28">avctx</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:38">channels</name></name> <operator pos:start="23:40" pos:end="23:41">==</operator> <literal type="number" pos:start="23:43" pos:end="23:43">2</literal></expr>)</condition> <block pos:start="23:46" pos:end="149:13">{<block_content pos:start="25:9" pos:end="149:13">

        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><call pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:69">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:68"><expr pos:start="25:37" pos:end="25:68"><literal type="string" pos:start="25:37" pos:end="25:68">"0x500 version should be mono\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>






    <if_stmt pos:start="34:5" pos:end="38:70"><if pos:start="34:5" pos:end="38:70">if <condition pos:start="34:8" pos:end="34:29">(<expr pos:start="34:9" pos:end="34:28"><name pos:start="34:9" pos:end="34:23"><name pos:start="34:9" pos:end="34:13">avctx</name><operator pos:start="34:14" pos:end="34:15">-&gt;</operator><name pos:start="34:16" pos:end="34:23">channels</name></name> <operator pos:start="34:25" pos:end="34:26">==</operator> <literal type="number" pos:start="34:28" pos:end="34:28">2</literal></expr>)</condition><block type="pseudo" pos:start="36:9" pos:end="38:70"><block_content pos:start="36:9" pos:end="38:70">

        <expr_stmt pos:start="36:9" pos:end="38:70"><expr pos:start="36:9" pos:end="38:69"><call pos:start="36:9" pos:end="38:69"><name pos:start="36:9" pos:end="36:14">av_log</name><argument_list pos:start="36:15" pos:end="38:69">(<argument pos:start="36:16" pos:end="36:20"><expr pos:start="36:16" pos:end="36:20"><name pos:start="36:16" pos:end="36:20">avctx</name></expr></argument>, <argument pos:start="36:23" pos:end="36:36"><expr pos:start="36:23" pos:end="36:36"><name pos:start="36:23" pos:end="36:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="38:16" pos:end="38:68"><expr pos:start="38:16" pos:end="38:68"><literal type="string" pos:start="38:16" pos:end="38:68">"Stereo mode support is not good, patch is welcome\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="42:5" pos:end="44:61">for <control pos:start="42:9" pos:end="42:28">(<init pos:start="42:10" pos:end="42:15"><expr pos:start="42:10" pos:end="42:14"><name pos:start="42:10" pos:end="42:10">i</name> <operator pos:start="42:12" pos:end="42:12">=</operator> <literal type="number" pos:start="42:14" pos:end="42:14">0</literal></expr>;</init> <condition pos:start="42:17" pos:end="42:23"><expr pos:start="42:17" pos:end="42:22"><name pos:start="42:17" pos:end="42:17">i</name> <operator pos:start="42:19" pos:end="42:19">&lt;</operator> <literal type="number" pos:start="42:21" pos:end="42:22">20</literal></expr>;</condition> <incr pos:start="42:25" pos:end="42:27"><expr pos:start="42:25" pos:end="42:27"><name pos:start="42:25" pos:end="42:25">i</name><operator pos:start="42:26" pos:end="42:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="44:9" pos:end="44:61"><block_content pos:start="44:9" pos:end="44:61">

        <expr_stmt pos:start="44:9" pos:end="44:61"><expr pos:start="44:9" pos:end="44:60"><name pos:start="44:9" pos:end="44:23"><name pos:start="44:9" pos:end="44:9">c</name><operator pos:start="44:10" pos:end="44:11">-&gt;</operator><name pos:start="44:12" pos:end="44:20">scale_tab</name><index pos:start="44:21" pos:end="44:23">[<expr pos:start="44:22" pos:end="44:22"><name pos:start="44:22" pos:end="44:22">i</name></expr>]</index></name> <operator pos:start="44:25" pos:end="44:25">=</operator> <call pos:start="44:27" pos:end="44:55"><name pos:start="44:27" pos:end="44:30">ceil</name><argument_list pos:start="44:31" pos:end="44:55">(<argument pos:start="44:32" pos:end="44:54"><expr pos:start="44:32" pos:end="44:54"><call pos:start="44:32" pos:end="44:49"><name pos:start="44:32" pos:end="44:34">pow</name><argument_list pos:start="44:35" pos:end="44:49">(<argument pos:start="44:36" pos:end="44:39"><expr pos:start="44:36" pos:end="44:39"><literal type="number" pos:start="44:36" pos:end="44:39">10.0</literal></expr></argument>, <argument pos:start="44:42" pos:end="44:48"><expr pos:start="44:42" pos:end="44:48"><name pos:start="44:42" pos:end="44:42">i</name> <operator pos:start="44:44" pos:end="44:44">*</operator> <literal type="number" pos:start="44:46" pos:end="44:48">0.1</literal></expr></argument>)</argument_list></call> <operator pos:start="44:51" pos:end="44:51">*</operator> <literal type="number" pos:start="44:53" pos:end="44:54">16</literal></expr></argument>)</argument_list></call> <operator pos:start="44:57" pos:end="44:57">/</operator> <literal type="number" pos:start="44:59" pos:end="44:60">32</literal></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="46:5" pos:end="48:57">for <control pos:start="46:9" pos:end="46:24">(<init pos:start="46:10" pos:end="46:10">;</init> <condition pos:start="46:12" pos:end="46:19"><expr pos:start="46:12" pos:end="46:18"><name pos:start="46:12" pos:end="46:12">i</name> <operator pos:start="46:14" pos:end="46:14">&lt;</operator> <literal type="number" pos:start="46:16" pos:end="46:18">128</literal></expr>;</condition> <incr pos:start="46:21" pos:end="46:23"><expr pos:start="46:21" pos:end="46:23"><name pos:start="46:21" pos:end="46:21">i</name><operator pos:start="46:22" pos:end="46:23">++</operator></expr></incr>)</control><block type="pseudo" pos:start="48:9" pos:end="48:57"><block_content pos:start="48:9" pos:end="48:57">

        <expr_stmt pos:start="48:9" pos:end="48:57"><expr pos:start="48:9" pos:end="48:56"><name pos:start="48:9" pos:end="48:23"><name pos:start="48:9" pos:end="48:9">c</name><operator pos:start="48:10" pos:end="48:11">-&gt;</operator><name pos:start="48:12" pos:end="48:20">scale_tab</name><index pos:start="48:21" pos:end="48:23">[<expr pos:start="48:22" pos:end="48:22"><name pos:start="48:22" pos:end="48:22">i</name></expr>]</index></name> <operator pos:start="48:25" pos:end="48:25">=</operator> <call pos:start="48:27" pos:end="48:56"><name pos:start="48:27" pos:end="48:30">ceil</name><argument_list pos:start="48:31" pos:end="48:56">(<argument pos:start="48:32" pos:end="48:55"><expr pos:start="48:32" pos:end="48:55"><call pos:start="48:32" pos:end="48:49"><name pos:start="48:32" pos:end="48:34">pow</name><argument_list pos:start="48:35" pos:end="48:49">(<argument pos:start="48:36" pos:end="48:39"><expr pos:start="48:36" pos:end="48:39"><literal type="number" pos:start="48:36" pos:end="48:39">10.0</literal></expr></argument>, <argument pos:start="48:42" pos:end="48:48"><expr pos:start="48:42" pos:end="48:48"><name pos:start="48:42" pos:end="48:42">i</name> <operator pos:start="48:44" pos:end="48:44">*</operator> <literal type="number" pos:start="48:46" pos:end="48:48">0.1</literal></expr></argument>)</argument_list></call> <operator pos:start="48:51" pos:end="48:51">*</operator> <literal type="number" pos:start="48:53" pos:end="48:55">0.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="52:5" pos:end="62:44"><if pos:start="52:5" pos:end="56:44">if <condition pos:start="52:8" pos:end="52:59">(<expr pos:start="52:9" pos:end="52:58"><name pos:start="52:9" pos:end="52:26"><name pos:start="52:9" pos:end="52:13">avctx</name><operator pos:start="52:14" pos:end="52:15">-&gt;</operator><name pos:start="52:16" pos:end="52:26">sample_rate</name></name> <operator pos:start="52:28" pos:end="52:28">&lt;</operator> <literal type="number" pos:start="52:30" pos:end="52:34">32000</literal> <operator pos:start="52:36" pos:end="52:37">||</operator> <name pos:start="52:39" pos:end="52:53"><name pos:start="52:39" pos:end="52:43">avctx</name><operator pos:start="52:44" pos:end="52:45">-&gt;</operator><name pos:start="52:46" pos:end="52:53">channels</name></name> <operator pos:start="52:55" pos:end="52:56">==</operator> <literal type="number" pos:start="52:58" pos:end="52:58">1</literal></expr>)</condition><block type="pseudo" pos:start="54:9" pos:end="56:44"><block_content pos:start="54:9" pos:end="56:44">

        <expr_stmt pos:start="54:9" pos:end="56:44"><expr pos:start="54:9" pos:end="56:43"><call pos:start="54:9" pos:end="56:43"><name pos:start="54:9" pos:end="54:14">memcpy</name><argument_list pos:start="54:15" pos:end="56:43">(<argument pos:start="54:16" pos:end="54:26"><expr pos:start="54:16" pos:end="54:26"><name pos:start="54:16" pos:end="54:26"><name pos:start="54:16" pos:end="54:16">c</name><operator pos:start="54:17" pos:end="54:18">-&gt;</operator><name pos:start="54:19" pos:end="54:26">long_win</name></name></expr></argument>, <argument pos:start="54:29" pos:end="54:55"><expr pos:start="54:29" pos:end="54:55"><name pos:start="54:29" pos:end="54:55">ff_on2avc_window_long_24000</name></expr></argument>,

               <argument pos:start="56:16" pos:end="56:42"><expr pos:start="56:16" pos:end="56:42"><literal type="number" pos:start="56:16" pos:end="56:19">1024</literal> <operator pos:start="56:21" pos:end="56:21">*</operator> <sizeof pos:start="56:23" pos:end="56:42">sizeof<argument_list pos:start="56:29" pos:end="56:42">(<argument pos:start="56:30" pos:end="56:41"><expr pos:start="56:30" pos:end="56:41"><operator pos:start="56:30" pos:end="56:30">*</operator><name pos:start="56:31" pos:end="56:41"><name pos:start="56:31" pos:end="56:31">c</name><operator pos:start="56:32" pos:end="56:33">-&gt;</operator><name pos:start="56:34" pos:end="56:41">long_win</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="58:5" pos:end="62:44">else<block type="pseudo" pos:start="60:9" pos:end="62:44"><block_content pos:start="60:9" pos:end="62:44">

        <expr_stmt pos:start="60:9" pos:end="62:44"><expr pos:start="60:9" pos:end="62:43"><call pos:start="60:9" pos:end="62:43"><name pos:start="60:9" pos:end="60:14">memcpy</name><argument_list pos:start="60:15" pos:end="62:43">(<argument pos:start="60:16" pos:end="60:26"><expr pos:start="60:16" pos:end="60:26"><name pos:start="60:16" pos:end="60:26"><name pos:start="60:16" pos:end="60:16">c</name><operator pos:start="60:17" pos:end="60:18">-&gt;</operator><name pos:start="60:19" pos:end="60:26">long_win</name></name></expr></argument>, <argument pos:start="60:29" pos:end="60:55"><expr pos:start="60:29" pos:end="60:55"><name pos:start="60:29" pos:end="60:55">ff_on2avc_window_long_32000</name></expr></argument>,

               <argument pos:start="62:16" pos:end="62:42"><expr pos:start="62:16" pos:end="62:42"><literal type="number" pos:start="62:16" pos:end="62:19">1024</literal> <operator pos:start="62:21" pos:end="62:21">*</operator> <sizeof pos:start="62:23" pos:end="62:42">sizeof<argument_list pos:start="62:29" pos:end="62:42">(<argument pos:start="62:30" pos:end="62:41"><expr pos:start="62:30" pos:end="62:41"><operator pos:start="62:30" pos:end="62:30">*</operator><name pos:start="62:31" pos:end="62:41"><name pos:start="62:31" pos:end="62:31">c</name><operator pos:start="62:32" pos:end="62:33">-&gt;</operator><name pos:start="62:34" pos:end="62:41">long_win</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="64:5" pos:end="64:78"><expr pos:start="64:5" pos:end="64:77"><call pos:start="64:5" pos:end="64:77"><name pos:start="64:5" pos:end="64:10">memcpy</name><argument_list pos:start="64:11" pos:end="64:77">(<argument pos:start="64:12" pos:end="64:23"><expr pos:start="64:12" pos:end="64:23"><name pos:start="64:12" pos:end="64:23"><name pos:start="64:12" pos:end="64:12">c</name><operator pos:start="64:13" pos:end="64:14">-&gt;</operator><name pos:start="64:15" pos:end="64:23">short_win</name></name></expr></argument>, <argument pos:start="64:26" pos:end="64:47"><expr pos:start="64:26" pos:end="64:47"><name pos:start="64:26" pos:end="64:47">ff_on2avc_window_short</name></expr></argument>, <argument pos:start="64:50" pos:end="64:76"><expr pos:start="64:50" pos:end="64:76"><literal type="number" pos:start="64:50" pos:end="64:52">128</literal> <operator pos:start="64:54" pos:end="64:54">*</operator> <sizeof pos:start="64:56" pos:end="64:76">sizeof<argument_list pos:start="64:62" pos:end="64:76">(<argument pos:start="64:63" pos:end="64:75"><expr pos:start="64:63" pos:end="64:75"><operator pos:start="64:63" pos:end="64:63">*</operator><name pos:start="64:64" pos:end="64:75"><name pos:start="64:64" pos:end="64:64">c</name><operator pos:start="64:65" pos:end="64:66">-&gt;</operator><name pos:start="64:67" pos:end="64:75">short_win</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="68:5" pos:end="70:66"><expr pos:start="68:5" pos:end="70:65"><name pos:start="68:5" pos:end="68:12"><name pos:start="68:5" pos:end="68:5">c</name><operator pos:start="68:6" pos:end="68:7">-&gt;</operator><name pos:start="68:8" pos:end="68:12">modes</name></name> <operator pos:start="68:14" pos:end="68:14">=</operator> <ternary pos:start="68:16" pos:end="70:65"><condition pos:start="68:16" pos:end="68:46"><expr pos:start="68:16" pos:end="68:44"><operator pos:start="68:16" pos:end="68:16">(</operator><name pos:start="68:17" pos:end="68:34"><name pos:start="68:17" pos:end="68:21">avctx</name><operator pos:start="68:22" pos:end="68:23">-&gt;</operator><name pos:start="68:24" pos:end="68:34">sample_rate</name></name> <operator pos:start="68:36" pos:end="68:37">&lt;=</operator> <literal type="number" pos:start="68:39" pos:end="68:43">40000</literal><operator pos:start="68:44" pos:end="68:44">)</operator></expr> ?</condition><then pos:start="68:48" pos:end="68:65"> <expr pos:start="68:48" pos:end="68:65"><name pos:start="68:48" pos:end="68:65">ff_on2avc_modes_40</name></expr>

                                             </then><else pos:start="70:46" pos:end="70:65">: <expr pos:start="70:48" pos:end="70:65"><name pos:start="70:48" pos:end="70:65">ff_on2avc_modes_44</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="72:5" pos:end="74:54"><expr pos:start="72:5" pos:end="74:53"><name pos:start="72:5" pos:end="72:10"><name pos:start="72:5" pos:end="72:5">c</name><operator pos:start="72:6" pos:end="72:7">-&gt;</operator><name pos:start="72:8" pos:end="72:10">wtf</name></name>   <operator pos:start="72:14" pos:end="72:14">=</operator> <ternary pos:start="72:16" pos:end="74:53"><condition pos:start="72:16" pos:end="72:46"><expr pos:start="72:16" pos:end="72:44"><operator pos:start="72:16" pos:end="72:16">(</operator><name pos:start="72:17" pos:end="72:34"><name pos:start="72:17" pos:end="72:21">avctx</name><operator pos:start="72:22" pos:end="72:23">-&gt;</operator><name pos:start="72:24" pos:end="72:34">sample_rate</name></name> <operator pos:start="72:36" pos:end="72:37">&lt;=</operator> <literal type="number" pos:start="72:39" pos:end="72:43">40000</literal><operator pos:start="72:44" pos:end="72:44">)</operator></expr> ?</condition><then pos:start="72:48" pos:end="72:53"> <expr pos:start="72:48" pos:end="72:53"><name pos:start="72:48" pos:end="72:53">wtf_40</name></expr>

                                             </then><else pos:start="74:46" pos:end="74:53">: <expr pos:start="74:48" pos:end="74:53"><name pos:start="74:48" pos:end="74:53">wtf_44</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="78:5" pos:end="78:66"><expr pos:start="78:5" pos:end="78:65"><call pos:start="78:5" pos:end="78:65"><name pos:start="78:5" pos:end="78:16">ff_mdct_init</name><argument_list pos:start="78:17" pos:end="78:65">(<argument pos:start="78:18" pos:end="78:25"><expr pos:start="78:18" pos:end="78:25"><operator pos:start="78:18" pos:end="78:18">&amp;</operator><name pos:start="78:19" pos:end="78:25"><name pos:start="78:19" pos:end="78:19">c</name><operator pos:start="78:20" pos:end="78:21">-&gt;</operator><name pos:start="78:22" pos:end="78:25">mdct</name></name></expr></argument>,       <argument pos:start="78:34" pos:end="78:35"><expr pos:start="78:34" pos:end="78:35"><literal type="number" pos:start="78:34" pos:end="78:35">11</literal></expr></argument>, <argument pos:start="78:38" pos:end="78:38"><expr pos:start="78:38" pos:end="78:38"><literal type="number" pos:start="78:38" pos:end="78:38">1</literal></expr></argument>, <argument pos:start="78:41" pos:end="78:64"><expr pos:start="78:41" pos:end="78:64"><literal type="number" pos:start="78:41" pos:end="78:43">1.0</literal> <operator pos:start="78:45" pos:end="78:45">/</operator> <operator pos:start="78:47" pos:end="78:47">(</operator><literal type="number" pos:start="78:48" pos:end="78:54">32768.0</literal> <operator pos:start="78:56" pos:end="78:56">*</operator> <literal type="number" pos:start="78:58" pos:end="78:63">1024.0</literal><operator pos:start="78:64" pos:end="78:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="80:5" pos:end="80:65"><expr pos:start="80:5" pos:end="80:64"><call pos:start="80:5" pos:end="80:64"><name pos:start="80:5" pos:end="80:16">ff_mdct_init</name><argument_list pos:start="80:17" pos:end="80:64">(<argument pos:start="80:18" pos:end="80:30"><expr pos:start="80:18" pos:end="80:30"><operator pos:start="80:18" pos:end="80:18">&amp;</operator><name pos:start="80:19" pos:end="80:30"><name pos:start="80:19" pos:end="80:19">c</name><operator pos:start="80:20" pos:end="80:21">-&gt;</operator><name pos:start="80:22" pos:end="80:30">mdct_half</name></name></expr></argument>,  <argument pos:start="80:34" pos:end="80:35"><expr pos:start="80:34" pos:end="80:35"><literal type="number" pos:start="80:34" pos:end="80:35">10</literal></expr></argument>, <argument pos:start="80:38" pos:end="80:38"><expr pos:start="80:38" pos:end="80:38"><literal type="number" pos:start="80:38" pos:end="80:38">1</literal></expr></argument>, <argument pos:start="80:41" pos:end="80:63"><expr pos:start="80:41" pos:end="80:63"><literal type="number" pos:start="80:41" pos:end="80:43">1.0</literal> <operator pos:start="80:45" pos:end="80:45">/</operator> <operator pos:start="80:47" pos:end="80:47">(</operator><literal type="number" pos:start="80:48" pos:end="80:54">32768.0</literal> <operator pos:start="80:56" pos:end="80:56">*</operator> <literal type="number" pos:start="80:58" pos:end="80:62">512.0</literal><operator pos:start="80:63" pos:end="80:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="82:5" pos:end="82:65"><expr pos:start="82:5" pos:end="82:64"><call pos:start="82:5" pos:end="82:64"><name pos:start="82:5" pos:end="82:16">ff_mdct_init</name><argument_list pos:start="82:17" pos:end="82:64">(<argument pos:start="82:18" pos:end="82:31"><expr pos:start="82:18" pos:end="82:31"><operator pos:start="82:18" pos:end="82:18">&amp;</operator><name pos:start="82:19" pos:end="82:31"><name pos:start="82:19" pos:end="82:19">c</name><operator pos:start="82:20" pos:end="82:21">-&gt;</operator><name pos:start="82:22" pos:end="82:31">mdct_small</name></name></expr></argument>,  <argument pos:start="82:35" pos:end="82:35"><expr pos:start="82:35" pos:end="82:35"><literal type="number" pos:start="82:35" pos:end="82:35">8</literal></expr></argument>, <argument pos:start="82:38" pos:end="82:38"><expr pos:start="82:38" pos:end="82:38"><literal type="number" pos:start="82:38" pos:end="82:38">1</literal></expr></argument>, <argument pos:start="82:41" pos:end="82:63"><expr pos:start="82:41" pos:end="82:63"><literal type="number" pos:start="82:41" pos:end="82:43">1.0</literal> <operator pos:start="82:45" pos:end="82:45">/</operator> <operator pos:start="82:47" pos:end="82:47">(</operator><literal type="number" pos:start="82:48" pos:end="82:54">32768.0</literal> <operator pos:start="82:56" pos:end="82:56">*</operator> <literal type="number" pos:start="82:58" pos:end="82:62">128.0</literal><operator pos:start="82:63" pos:end="82:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="84:35"><expr pos:start="84:5" pos:end="84:34"><call pos:start="84:5" pos:end="84:34"><name pos:start="84:5" pos:end="84:15">ff_fft_init</name><argument_list pos:start="84:16" pos:end="84:34">(<argument pos:start="84:17" pos:end="84:26"><expr pos:start="84:17" pos:end="84:26"><operator pos:start="84:17" pos:end="84:17">&amp;</operator><name pos:start="84:18" pos:end="84:26"><name pos:start="84:18" pos:end="84:18">c</name><operator pos:start="84:19" pos:end="84:20">-&gt;</operator><name pos:start="84:21" pos:end="84:26">fft128</name></name></expr></argument>,  <argument pos:start="84:30" pos:end="84:30"><expr pos:start="84:30" pos:end="84:30"><literal type="number" pos:start="84:30" pos:end="84:30">6</literal></expr></argument>, <argument pos:start="84:33" pos:end="84:33"><expr pos:start="84:33" pos:end="84:33"><literal type="number" pos:start="84:33" pos:end="84:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="86:5" pos:end="86:35"><expr pos:start="86:5" pos:end="86:34"><call pos:start="86:5" pos:end="86:34"><name pos:start="86:5" pos:end="86:15">ff_fft_init</name><argument_list pos:start="86:16" pos:end="86:34">(<argument pos:start="86:17" pos:end="86:26"><expr pos:start="86:17" pos:end="86:26"><operator pos:start="86:17" pos:end="86:17">&amp;</operator><name pos:start="86:18" pos:end="86:26"><name pos:start="86:18" pos:end="86:18">c</name><operator pos:start="86:19" pos:end="86:20">-&gt;</operator><name pos:start="86:21" pos:end="86:26">fft256</name></name></expr></argument>,  <argument pos:start="86:30" pos:end="86:30"><expr pos:start="86:30" pos:end="86:30"><literal type="number" pos:start="86:30" pos:end="86:30">7</literal></expr></argument>, <argument pos:start="86:33" pos:end="86:33"><expr pos:start="86:33" pos:end="86:33"><literal type="number" pos:start="86:33" pos:end="86:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="88:5" pos:end="88:35"><expr pos:start="88:5" pos:end="88:34"><call pos:start="88:5" pos:end="88:34"><name pos:start="88:5" pos:end="88:15">ff_fft_init</name><argument_list pos:start="88:16" pos:end="88:34">(<argument pos:start="88:17" pos:end="88:26"><expr pos:start="88:17" pos:end="88:26"><operator pos:start="88:17" pos:end="88:17">&amp;</operator><name pos:start="88:18" pos:end="88:26"><name pos:start="88:18" pos:end="88:18">c</name><operator pos:start="88:19" pos:end="88:20">-&gt;</operator><name pos:start="88:21" pos:end="88:26">fft512</name></name></expr></argument>,  <argument pos:start="88:30" pos:end="88:30"><expr pos:start="88:30" pos:end="88:30"><literal type="number" pos:start="88:30" pos:end="88:30">8</literal></expr></argument>, <argument pos:start="88:33" pos:end="88:33"><expr pos:start="88:33" pos:end="88:33"><literal type="number" pos:start="88:33" pos:end="88:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="90:5" pos:end="90:35"><expr pos:start="90:5" pos:end="90:34"><call pos:start="90:5" pos:end="90:34"><name pos:start="90:5" pos:end="90:15">ff_fft_init</name><argument_list pos:start="90:16" pos:end="90:34">(<argument pos:start="90:17" pos:end="90:27"><expr pos:start="90:17" pos:end="90:27"><operator pos:start="90:17" pos:end="90:17">&amp;</operator><name pos:start="90:18" pos:end="90:27"><name pos:start="90:18" pos:end="90:18">c</name><operator pos:start="90:19" pos:end="90:20">-&gt;</operator><name pos:start="90:21" pos:end="90:27">fft1024</name></name></expr></argument>, <argument pos:start="90:30" pos:end="90:30"><expr pos:start="90:30" pos:end="90:30"><literal type="number" pos:start="90:30" pos:end="90:30">9</literal></expr></argument>, <argument pos:start="90:33" pos:end="90:33"><expr pos:start="90:33" pos:end="90:33"><literal type="number" pos:start="90:33" pos:end="90:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="92:72"><expr pos:start="92:5" pos:end="92:71"><call pos:start="92:5" pos:end="92:71"><name pos:start="92:5" pos:end="92:25">avpriv_float_dsp_init</name><argument_list pos:start="92:26" pos:end="92:71">(<argument pos:start="92:27" pos:end="92:34"><expr pos:start="92:27" pos:end="92:34"><operator pos:start="92:27" pos:end="92:27">&amp;</operator><name pos:start="92:28" pos:end="92:34"><name pos:start="92:28" pos:end="92:28">c</name><operator pos:start="92:29" pos:end="92:30">-&gt;</operator><name pos:start="92:31" pos:end="92:34">fdsp</name></name></expr></argument>, <argument pos:start="92:37" pos:end="92:70"><expr pos:start="92:37" pos:end="92:70"><name pos:start="92:37" pos:end="92:48"><name pos:start="92:37" pos:end="92:41">avctx</name><operator pos:start="92:42" pos:end="92:43">-&gt;</operator><name pos:start="92:44" pos:end="92:48">flags</name></name> <operator pos:start="92:50" pos:end="92:50">&amp;</operator> <name pos:start="92:52" pos:end="92:70">CODEC_FLAG_BITEXACT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="96:5" pos:end="149:13"><if pos:start="96:5" pos:end="149:13">if <condition pos:start="96:8" pos:end="100:54">(<expr pos:start="96:9" pos:end="100:53"><call pos:start="96:9" pos:end="100:53"><name pos:start="96:9" pos:end="96:16">init_vlc</name><argument_list pos:start="96:17" pos:end="100:53">(<argument pos:start="96:18" pos:end="96:31"><expr pos:start="96:18" pos:end="96:31"><operator pos:start="96:18" pos:end="96:18">&amp;</operator><name pos:start="96:19" pos:end="96:31"><name pos:start="96:19" pos:end="96:19">c</name><operator pos:start="96:20" pos:end="96:21">-&gt;</operator><name pos:start="96:22" pos:end="96:31">scale_diff</name></name></expr></argument>, <argument pos:start="96:34" pos:end="96:34"><expr pos:start="96:34" pos:end="96:34"><literal type="number" pos:start="96:34" pos:end="96:34">9</literal></expr></argument>, <argument pos:start="96:37" pos:end="96:54"><expr pos:start="96:37" pos:end="96:54"><name pos:start="96:37" pos:end="96:54">ON2AVC_SCALE_DIFFS</name></expr></argument>,

                 <argument pos:start="98:18" pos:end="98:42"><expr pos:start="98:18" pos:end="98:42"><name pos:start="98:18" pos:end="98:42">ff_on2avc_scale_diff_bits</name></expr></argument>,  <argument pos:start="98:46" pos:end="98:46"><expr pos:start="98:46" pos:end="98:46"><literal type="number" pos:start="98:46" pos:end="98:46">1</literal></expr></argument>, <argument pos:start="98:49" pos:end="98:49"><expr pos:start="98:49" pos:end="98:49"><literal type="number" pos:start="98:49" pos:end="98:49">1</literal></expr></argument>,

                 <argument pos:start="100:18" pos:end="100:43"><expr pos:start="100:18" pos:end="100:43"><name pos:start="100:18" pos:end="100:43">ff_on2avc_scale_diff_codes</name></expr></argument>, <argument pos:start="100:46" pos:end="100:46"><expr pos:start="100:46" pos:end="100:46"><literal type="number" pos:start="100:46" pos:end="100:46">4</literal></expr></argument>, <argument pos:start="100:49" pos:end="100:49"><expr pos:start="100:49" pos:end="100:49"><literal type="number" pos:start="100:49" pos:end="100:49">4</literal></expr></argument>, <argument pos:start="100:52" pos:end="100:52"><expr pos:start="100:52" pos:end="100:52"><literal type="number" pos:start="100:52" pos:end="100:52">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="100:56" pos:end="149:13">{<block_content pos:start="102:9" pos:end="149:13">

        <expr_stmt pos:start="102:9" pos:end="102:57"><expr pos:start="102:9" pos:end="102:56"><call pos:start="102:9" pos:end="102:56"><name pos:start="102:9" pos:end="102:14">av_log</name><argument_list pos:start="102:15" pos:end="102:56">(<argument pos:start="102:16" pos:end="102:20"><expr pos:start="102:16" pos:end="102:20"><name pos:start="102:16" pos:end="102:20">avctx</name></expr></argument>, <argument pos:start="102:23" pos:end="102:34"><expr pos:start="102:23" pos:end="102:34"><name pos:start="102:23" pos:end="102:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="102:37" pos:end="102:55"><expr pos:start="102:37" pos:end="102:55"><literal type="string" pos:start="102:37" pos:end="102:55">"Cannot init VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="104:9" pos:end="104:31">return <expr pos:start="104:16" pos:end="104:30"><call pos:start="104:16" pos:end="104:30"><name pos:start="104:16" pos:end="104:22">AVERROR</name><argument_list pos:start="104:23" pos:end="104:30">(<argument pos:start="104:24" pos:end="104:29"><expr pos:start="104:24" pos:end="104:29"><name pos:start="104:24" pos:end="104:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>


    <for pos:start="107:5" pos:end="149:13">for <control pos:start="107:9" pos:end="107:27">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">1</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:22"><expr pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <literal type="number" pos:start="107:21" pos:end="107:21">9</literal></expr>;</condition> <incr pos:start="107:24" pos:end="107:26"><expr pos:start="107:24" pos:end="107:26"><name pos:start="107:24" pos:end="107:24">i</name><operator pos:start="107:25" pos:end="107:26">++</operator></expr></incr>)</control> <block pos:start="107:29" pos:end="149:13">{<block_content pos:start="109:9" pos:end="149:13">

        <decl_stmt pos:start="109:9" pos:end="109:24"><decl pos:start="109:9" pos:end="109:23"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:15">idx</name> <init pos:start="109:17" pos:end="109:23">= <expr pos:start="109:19" pos:end="109:23"><name pos:start="109:19" pos:end="109:19">i</name> <operator pos:start="109:21" pos:end="109:21">-</operator> <literal type="number" pos:start="109:23" pos:end="109:23">1</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="111:9" pos:end="149:13"><if pos:start="111:9" pos:end="149:13">if <condition pos:start="111:12" pos:end="117:70">(<expr pos:start="111:13" pos:end="117:69"><call pos:start="111:13" pos:end="117:69"><name pos:start="111:13" pos:end="111:30">ff_init_vlc_sparse</name><argument_list pos:start="111:31" pos:end="117:69">(<argument pos:start="111:32" pos:end="111:44"><expr pos:start="111:32" pos:end="111:44"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:44"><name pos:start="111:33" pos:end="111:33">c</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:41">cb_vlc</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><name pos:start="111:43" pos:end="111:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="111:47" pos:end="111:47"><expr pos:start="111:47" pos:end="111:47"><literal type="number" pos:start="111:47" pos:end="111:47">9</literal></expr></argument>, <argument pos:start="111:50" pos:end="111:77"><expr pos:start="111:50" pos:end="111:77"><name pos:start="111:50" pos:end="111:77"><name pos:start="111:50" pos:end="111:72">ff_on2avc_quad_cb_elems</name><index pos:start="111:73" pos:end="111:77">[<expr pos:start="111:74" pos:end="111:76"><name pos:start="111:74" pos:end="111:76">idx</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="113:32" pos:end="113:58"><expr pos:start="113:32" pos:end="113:58"><name pos:start="113:32" pos:end="113:58"><name pos:start="113:32" pos:end="113:53">ff_on2avc_quad_cb_bits</name><index pos:start="113:54" pos:end="113:58">[<expr pos:start="113:55" pos:end="113:57"><name pos:start="113:55" pos:end="113:57">idx</name></expr>]</index></name></expr></argument>,  <argument pos:start="113:62" pos:end="113:62"><expr pos:start="113:62" pos:end="113:62"><literal type="number" pos:start="113:62" pos:end="113:62">1</literal></expr></argument>, <argument pos:start="113:65" pos:end="113:65"><expr pos:start="113:65" pos:end="113:65"><literal type="number" pos:start="113:65" pos:end="113:65">1</literal></expr></argument>,

                               <argument pos:start="115:32" pos:end="115:59"><expr pos:start="115:32" pos:end="115:59"><name pos:start="115:32" pos:end="115:59"><name pos:start="115:32" pos:end="115:54">ff_on2avc_quad_cb_codes</name><index pos:start="115:55" pos:end="115:59">[<expr pos:start="115:56" pos:end="115:58"><name pos:start="115:56" pos:end="115:58">idx</name></expr>]</index></name></expr></argument>, <argument pos:start="115:62" pos:end="115:62"><expr pos:start="115:62" pos:end="115:62"><literal type="number" pos:start="115:62" pos:end="115:62">4</literal></expr></argument>, <argument pos:start="115:65" pos:end="115:65"><expr pos:start="115:65" pos:end="115:65"><literal type="number" pos:start="115:65" pos:end="115:65">4</literal></expr></argument>,

                               <argument pos:start="117:32" pos:end="117:58"><expr pos:start="117:32" pos:end="117:58"><name pos:start="117:32" pos:end="117:58"><name pos:start="117:32" pos:end="117:53">ff_on2avc_quad_cb_syms</name><index pos:start="117:54" pos:end="117:58">[<expr pos:start="117:55" pos:end="117:57"><name pos:start="117:55" pos:end="117:57">idx</name></expr>]</index></name></expr></argument>,  <argument pos:start="117:62" pos:end="117:62"><expr pos:start="117:62" pos:end="117:62"><literal type="number" pos:start="117:62" pos:end="117:62">2</literal></expr></argument>, <argument pos:start="117:65" pos:end="117:65"><expr pos:start="117:65" pos:end="117:65"><literal type="number" pos:start="117:65" pos:end="117:65">2</literal></expr></argument>, <argument pos:start="117:68" pos:end="117:68"><expr pos:start="117:68" pos:end="117:68"><literal type="number" pos:start="117:68" pos:end="117:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:72" pos:end="149:13">{<block_content pos:start="119:13" pos:end="149:13">

            <expr_stmt pos:start="119:13" pos:end="119:61"><expr pos:start="119:13" pos:end="119:60"><call pos:start="119:13" pos:end="119:60"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:60">(<argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:24">avctx</name></expr></argument>, <argument pos:start="119:27" pos:end="119:38"><expr pos:start="119:27" pos:end="119:38"><name pos:start="119:27" pos:end="119:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:41" pos:end="119:59"><expr pos:start="119:41" pos:end="119:59"><literal type="string" pos:start="119:41" pos:end="119:59">"Cannot init VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:32"><expr pos:start="121:13" pos:end="121:31"><call pos:start="121:13" pos:end="121:31"><name pos:start="121:13" pos:end="121:28">on2avc_free_vlcs</name><argument_list pos:start="121:29" pos:end="121:31">(<argument pos:start="121:30" pos:end="121:30"><expr pos:start="121:30" pos:end="121:30"><name pos:start="121:30" pos:end="121:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:35">return <expr pos:start="123:20" pos:end="123:34"><call pos:start="123:20" pos:end="123:34"><name pos:start="123:20" pos:end="123:26">AVERROR</name><argument_list pos:start="123:27" pos:end="123:34">(<argument pos:start="123:28" pos:end="123:33"><expr pos:start="123:28" pos:end="123:33"><name pos:start="123:28" pos:end="123:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>



    <for pos:start="127:5" pos:end="149:13">for <control pos:start="127:9" pos:end="127:28">(<init pos:start="127:10" pos:end="127:15"><expr pos:start="127:10" pos:end="127:14"><name pos:start="127:10" pos:end="127:10">i</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <literal type="number" pos:start="127:14" pos:end="127:14">9</literal></expr>;</init> <condition pos:start="127:17" pos:end="127:23"><expr pos:start="127:17" pos:end="127:22"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <literal type="number" pos:start="127:21" pos:end="127:22">16</literal></expr>;</condition> <incr pos:start="127:25" pos:end="127:27"><expr pos:start="127:25" pos:end="127:27"><name pos:start="127:25" pos:end="127:25">i</name><operator pos:start="127:26" pos:end="127:27">++</operator></expr></incr>)</control> <block pos:start="127:30" pos:end="149:13">{<block_content pos:start="129:9" pos:end="149:13">

        <decl_stmt pos:start="129:9" pos:end="129:24"><decl pos:start="129:9" pos:end="129:23"><type pos:start="129:9" pos:end="129:11"><name pos:start="129:9" pos:end="129:11">int</name></type> <name pos:start="129:13" pos:end="129:15">idx</name> <init pos:start="129:17" pos:end="129:23">= <expr pos:start="129:19" pos:end="129:23"><name pos:start="129:19" pos:end="129:19">i</name> <operator pos:start="129:21" pos:end="129:21">-</operator> <literal type="number" pos:start="129:23" pos:end="129:23">9</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="131:9" pos:end="149:13"><if pos:start="131:9" pos:end="149:13">if <condition pos:start="131:12" pos:end="137:70">(<expr pos:start="131:13" pos:end="137:69"><call pos:start="131:13" pos:end="137:69"><name pos:start="131:13" pos:end="131:30">ff_init_vlc_sparse</name><argument_list pos:start="131:31" pos:end="137:69">(<argument pos:start="131:32" pos:end="131:44"><expr pos:start="131:32" pos:end="131:44"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:44"><name pos:start="131:33" pos:end="131:33">c</name><operator pos:start="131:34" pos:end="131:35">-&gt;</operator><name pos:start="131:36" pos:end="131:41">cb_vlc</name><index pos:start="131:42" pos:end="131:44">[<expr pos:start="131:43" pos:end="131:43"><name pos:start="131:43" pos:end="131:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="131:47" pos:end="131:47"><expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">9</literal></expr></argument>, <argument pos:start="131:50" pos:end="131:77"><expr pos:start="131:50" pos:end="131:77"><name pos:start="131:50" pos:end="131:77"><name pos:start="131:50" pos:end="131:72">ff_on2avc_pair_cb_elems</name><index pos:start="131:73" pos:end="131:77">[<expr pos:start="131:74" pos:end="131:76"><name pos:start="131:74" pos:end="131:76">idx</name></expr>]</index></name></expr></argument>,

                               <argument pos:start="133:32" pos:end="133:58"><expr pos:start="133:32" pos:end="133:58"><name pos:start="133:32" pos:end="133:58"><name pos:start="133:32" pos:end="133:53">ff_on2avc_pair_cb_bits</name><index pos:start="133:54" pos:end="133:58">[<expr pos:start="133:55" pos:end="133:57"><name pos:start="133:55" pos:end="133:57">idx</name></expr>]</index></name></expr></argument>,  <argument pos:start="133:62" pos:end="133:62"><expr pos:start="133:62" pos:end="133:62"><literal type="number" pos:start="133:62" pos:end="133:62">1</literal></expr></argument>, <argument pos:start="133:65" pos:end="133:65"><expr pos:start="133:65" pos:end="133:65"><literal type="number" pos:start="133:65" pos:end="133:65">1</literal></expr></argument>,

                               <argument pos:start="135:32" pos:end="135:59"><expr pos:start="135:32" pos:end="135:59"><name pos:start="135:32" pos:end="135:59"><name pos:start="135:32" pos:end="135:54">ff_on2avc_pair_cb_codes</name><index pos:start="135:55" pos:end="135:59">[<expr pos:start="135:56" pos:end="135:58"><name pos:start="135:56" pos:end="135:58">idx</name></expr>]</index></name></expr></argument>, <argument pos:start="135:62" pos:end="135:62"><expr pos:start="135:62" pos:end="135:62"><literal type="number" pos:start="135:62" pos:end="135:62">2</literal></expr></argument>, <argument pos:start="135:65" pos:end="135:65"><expr pos:start="135:65" pos:end="135:65"><literal type="number" pos:start="135:65" pos:end="135:65">2</literal></expr></argument>,

                               <argument pos:start="137:32" pos:end="137:58"><expr pos:start="137:32" pos:end="137:58"><name pos:start="137:32" pos:end="137:58"><name pos:start="137:32" pos:end="137:53">ff_on2avc_pair_cb_syms</name><index pos:start="137:54" pos:end="137:58">[<expr pos:start="137:55" pos:end="137:57"><name pos:start="137:55" pos:end="137:57">idx</name></expr>]</index></name></expr></argument>,  <argument pos:start="137:62" pos:end="137:62"><expr pos:start="137:62" pos:end="137:62"><literal type="number" pos:start="137:62" pos:end="137:62">2</literal></expr></argument>, <argument pos:start="137:65" pos:end="137:65"><expr pos:start="137:65" pos:end="137:65"><literal type="number" pos:start="137:65" pos:end="137:65">2</literal></expr></argument>, <argument pos:start="137:68" pos:end="137:68"><expr pos:start="137:68" pos:end="137:68"><literal type="number" pos:start="137:68" pos:end="137:68">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:72" pos:end="149:13">{<block_content pos:start="139:13" pos:end="149:13">

            <expr_stmt pos:start="139:13" pos:end="139:61"><expr pos:start="139:13" pos:end="139:60"><call pos:start="139:13" pos:end="139:60"><name pos:start="139:13" pos:end="139:18">av_log</name><argument_list pos:start="139:19" pos:end="139:60">(<argument pos:start="139:20" pos:end="139:24"><expr pos:start="139:20" pos:end="139:24"><name pos:start="139:20" pos:end="139:24">avctx</name></expr></argument>, <argument pos:start="139:27" pos:end="139:38"><expr pos:start="139:27" pos:end="139:38"><name pos:start="139:27" pos:end="139:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:41" pos:end="139:59"><expr pos:start="139:41" pos:end="139:59"><literal type="string" pos:start="139:41" pos:end="139:59">"Cannot init VLC\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:32"><expr pos:start="141:13" pos:end="141:31"><call pos:start="141:13" pos:end="141:31"><name pos:start="141:13" pos:end="141:28">on2avc_free_vlcs</name><argument_list pos:start="141:29" pos:end="141:31">(<argument pos:start="141:30" pos:end="141:30"><expr pos:start="141:30" pos:end="141:30"><name pos:start="141:30" pos:end="141:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="143:13" pos:end="143:35">return <expr pos:start="143:20" pos:end="143:34"><call pos:start="143:20" pos:end="143:34"><name pos:start="143:20" pos:end="143:26">AVERROR</name><argument_list pos:start="143:27" pos:end="143:34">(<argument pos:start="143:28" pos:end="143:33"><expr pos:start="143:28" pos:end="143:33"><name pos:start="143:28" pos:end="143:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>





    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
