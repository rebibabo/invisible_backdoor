<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10099.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">http_proxy_open</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">URLContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">uri</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:17">hostname</name><index pos:start="7:18" pos:end="7:23">[<expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:26" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:32">hoststr</name><index pos:start="7:33" pos:end="7:38">[<expr pos:start="7:34" pos:end="7:37"><literal type="number" pos:start="7:34" pos:end="7:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:13">auth</name><index pos:start="9:14" pos:end="9:19">[<expr pos:start="9:15" pos:end="9:18"><literal type="number" pos:start="9:15" pos:end="9:18">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:22" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:22" pos:end="9:34"><name pos:start="9:22" pos:end="9:28">pathbuf</name><index pos:start="9:29" pos:end="9:34">[<expr pos:start="9:30" pos:end="9:33"><literal type="number" pos:start="9:30" pos:end="9:33">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:37" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:37" pos:end="9:37">*</modifier></type><name pos:start="9:38" pos:end="9:41">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:13">line</name><index pos:start="11:14" pos:end="11:19">[<expr pos:start="11:15" pos:end="11:18"><literal type="number" pos:start="11:15" pos:end="11:18">1024</literal></expr>]</index></name></decl>, <decl pos:start="11:22" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:8"/><name pos:start="11:22" pos:end="11:35"><name pos:start="11:22" pos:end="11:30">lower_url</name><index pos:start="11:31" pos:end="11:35">[<expr pos:start="11:32" pos:end="11:34"><literal type="number" pos:start="11:32" pos:end="11:34">100</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name></decl>, <decl pos:start="13:15" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">ret</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">HTTPAuthType</name></type> <name pos:start="15:18" pos:end="15:30">cur_auth_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:17">authstr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:18">is_streamed</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:48"><expr pos:start="25:5" pos:end="27:47"><call pos:start="25:5" pos:end="27:47"><name pos:start="25:5" pos:end="25:16">av_url_split</name><argument_list pos:start="25:17" pos:end="27:47">(<argument pos:start="25:18" pos:end="25:21"><expr pos:start="25:18" pos:end="25:21"><name pos:start="25:18" pos:end="25:21">NULL</name></expr></argument>, <argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><literal type="number" pos:start="25:24" pos:end="25:24">0</literal></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">auth</name></expr></argument>, <argument pos:start="25:33" pos:end="25:44"><expr pos:start="25:33" pos:end="25:44"><sizeof pos:start="25:33" pos:end="25:44">sizeof<argument_list pos:start="25:39" pos:end="25:44">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">auth</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:47" pos:end="25:54"><expr pos:start="25:47" pos:end="25:54"><name pos:start="25:47" pos:end="25:54">hostname</name></expr></argument>, <argument pos:start="25:57" pos:end="25:72"><expr pos:start="25:57" pos:end="25:72"><sizeof pos:start="25:57" pos:end="25:72">sizeof<argument_list pos:start="25:63" pos:end="25:72">(<argument pos:start="25:64" pos:end="25:71"><expr pos:start="25:64" pos:end="25:71"><name pos:start="25:64" pos:end="25:71">hostname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:75" pos:end="25:79"><expr pos:start="25:75" pos:end="25:79"><operator pos:start="25:75" pos:end="25:75">&amp;</operator><name pos:start="25:76" pos:end="25:79">port</name></expr></argument>,

                 <argument pos:start="27:18" pos:end="27:24"><expr pos:start="27:18" pos:end="27:24"><name pos:start="27:18" pos:end="27:24">pathbuf</name></expr></argument>, <argument pos:start="27:27" pos:end="27:41"><expr pos:start="27:27" pos:end="27:41"><sizeof pos:start="27:27" pos:end="27:41">sizeof<argument_list pos:start="27:33" pos:end="27:41">(<argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">pathbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><name pos:start="27:44" pos:end="27:46">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:76"><expr pos:start="29:5" pos:end="29:75"><call pos:start="29:5" pos:end="29:75"><name pos:start="29:5" pos:end="29:15">ff_url_join</name><argument_list pos:start="29:16" pos:end="29:75">(<argument pos:start="29:17" pos:end="29:23"><expr pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:23">hoststr</name></expr></argument>, <argument pos:start="29:26" pos:end="29:40"><expr pos:start="29:26" pos:end="29:40"><sizeof pos:start="29:26" pos:end="29:40">sizeof<argument_list pos:start="29:32" pos:end="29:40">(<argument pos:start="29:33" pos:end="29:39"><expr pos:start="29:33" pos:end="29:39"><name pos:start="29:33" pos:end="29:39">hoststr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:43" pos:end="29:46"><expr pos:start="29:43" pos:end="29:46"><name pos:start="29:43" pos:end="29:46">NULL</name></expr></argument>, <argument pos:start="29:49" pos:end="29:52"><expr pos:start="29:49" pos:end="29:52"><name pos:start="29:49" pos:end="29:52">NULL</name></expr></argument>, <argument pos:start="29:55" pos:end="29:62"><expr pos:start="29:55" pos:end="29:62"><name pos:start="29:55" pos:end="29:62">hostname</name></expr></argument>, <argument pos:start="29:65" pos:end="29:68"><expr pos:start="29:65" pos:end="29:68"><name pos:start="29:65" pos:end="29:68">port</name></expr></argument>, <argument pos:start="29:71" pos:end="29:74"><expr pos:start="29:71" pos:end="29:74"><name pos:start="29:71" pos:end="29:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:8">path</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:18">pathbuf</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:15"><if pos:start="33:5" pos:end="35:15">if <condition pos:start="33:8" pos:end="33:21">(<expr pos:start="33:9" pos:end="33:20"><operator pos:start="33:9" pos:end="33:9">*</operator><name pos:start="33:10" pos:end="33:13">path</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <literal type="char" pos:start="33:18" pos:end="33:20">'/'</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:15"><block_content pos:start="35:9" pos:end="35:15">

        <expr_stmt pos:start="35:9" pos:end="35:15"><expr pos:start="35:9" pos:end="35:14"><name pos:start="35:9" pos:end="35:12">path</name><operator pos:start="35:13" pos:end="35:14">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:22"><expr pos:start="39:5" pos:end="41:21"><call pos:start="39:5" pos:end="41:21"><name pos:start="39:5" pos:end="39:15">ff_url_join</name><argument_list pos:start="39:16" pos:end="41:21">(<argument pos:start="39:17" pos:end="39:25"><expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:25">lower_url</name></expr></argument>, <argument pos:start="39:28" pos:end="39:44"><expr pos:start="39:28" pos:end="39:44"><sizeof pos:start="39:28" pos:end="39:44">sizeof<argument_list pos:start="39:34" pos:end="39:44">(<argument pos:start="39:35" pos:end="39:43"><expr pos:start="39:35" pos:end="39:43"><name pos:start="39:35" pos:end="39:43">lower_url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="39:47" pos:end="39:51"><expr pos:start="39:47" pos:end="39:51"><literal type="string" pos:start="39:47" pos:end="39:51">"tcp"</literal></expr></argument>, <argument pos:start="39:54" pos:end="39:57"><expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">NULL</name></expr></argument>, <argument pos:start="39:60" pos:end="39:67"><expr pos:start="39:60" pos:end="39:67"><name pos:start="39:60" pos:end="39:67">hostname</name></expr></argument>, <argument pos:start="39:70" pos:end="39:73"><expr pos:start="39:70" pos:end="39:73"><name pos:start="39:70" pos:end="39:73">port</name></expr></argument>,

                <argument pos:start="41:17" pos:end="41:20"><expr pos:start="41:17" pos:end="41:20"><name pos:start="41:17" pos:end="41:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="43:1" pos:end="43:5"><name pos:start="43:1" pos:end="43:4">redo</name>:</label>

    <expr_stmt pos:start="45:5" pos:end="47:51"><expr pos:start="45:5" pos:end="47:50"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="47:50"><name pos:start="45:11" pos:end="45:20">ffurl_open</name><argument_list pos:start="45:21" pos:end="47:50">(<argument pos:start="45:22" pos:end="45:27"><expr pos:start="45:22" pos:end="45:27"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:27"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:27">hd</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:38"><expr pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:38">lower_url</name></expr></argument>, <argument pos:start="45:41" pos:end="45:60"><expr pos:start="45:41" pos:end="45:60"><name pos:start="45:41" pos:end="45:60">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                     <argument pos:start="47:22" pos:end="47:43"><expr pos:start="47:22" pos:end="47:43"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:43"><name pos:start="47:23" pos:end="47:23">h</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:43">interrupt_callback</name></name></expr></argument>, <argument pos:start="47:46" pos:end="47:49"><expr pos:start="47:46" pos:end="47:49"><name pos:start="47:46" pos:end="47:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:19"><if pos:start="49:5" pos:end="51:19">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:19"><block_content pos:start="51:9" pos:end="51:19">

        <return pos:start="51:9" pos:end="51:19">return <expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:60"><expr pos:start="55:5" pos:end="57:59"><name pos:start="55:5" pos:end="55:11">authstr</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="57:59"><name pos:start="55:15" pos:end="55:42">ff_http_auth_create_response</name><argument_list pos:start="55:43" pos:end="57:59">(<argument pos:start="55:44" pos:end="55:63"><expr pos:start="55:44" pos:end="55:63"><operator pos:start="55:44" pos:end="55:44">&amp;</operator><name pos:start="55:45" pos:end="55:63"><name pos:start="55:45" pos:end="55:45">s</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:63">proxy_auth_state</name></name></expr></argument>, <argument pos:start="55:66" pos:end="55:69"><expr pos:start="55:66" pos:end="55:69"><name pos:start="55:66" pos:end="55:69">auth</name></expr></argument>,

                                           <argument pos:start="57:44" pos:end="57:47"><expr pos:start="57:44" pos:end="57:47"><name pos:start="57:44" pos:end="57:47">path</name></expr></argument>, <argument pos:start="57:50" pos:end="57:58"><expr pos:start="57:50" pos:end="57:58"><literal type="string" pos:start="57:50" pos:end="57:58">"CONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="75:62"><expr pos:start="59:5" pos:end="75:61"><call pos:start="59:5" pos:end="75:61"><name pos:start="59:5" pos:end="59:12">snprintf</name><argument_list pos:start="59:13" pos:end="75:61">(<argument pos:start="59:14" pos:end="59:22"><expr pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:22"><name pos:start="59:14" pos:end="59:14">s</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">buffer</name></name></expr></argument>, <argument pos:start="59:25" pos:end="59:41"><expr pos:start="59:25" pos:end="59:41"><sizeof pos:start="59:25" pos:end="59:41">sizeof<argument_list pos:start="59:31" pos:end="59:41">(<argument pos:start="59:32" pos:end="59:40"><expr pos:start="59:32" pos:end="59:40"><name pos:start="59:32" pos:end="59:40"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:40">buffer</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="61:14" pos:end="69:19"><expr pos:start="61:14" pos:end="69:19"><literal type="string" pos:start="61:14" pos:end="61:38">"CONNECT %s HTTP/1.1\r\n"</literal>

             <literal type="string" pos:start="63:14" pos:end="63:27">"Host: %s\r\n"</literal>

             <literal type="string" pos:start="65:14" pos:end="65:36">"Connection: close\r\n"</literal>

             <literal type="string" pos:start="67:14" pos:end="67:19">"%s%s"</literal>

             <literal type="string" pos:start="69:14" pos:end="69:19">"\r\n"</literal></expr></argument>,

             <argument pos:start="71:14" pos:end="71:17"><expr pos:start="71:14" pos:end="71:17"><name pos:start="71:14" pos:end="71:17">path</name></expr></argument>,

             <argument pos:start="73:14" pos:end="73:20"><expr pos:start="73:14" pos:end="73:20"><name pos:start="73:14" pos:end="73:20">hoststr</name></expr></argument>,

             <argument pos:start="75:14" pos:end="75:36"><expr pos:start="75:14" pos:end="75:36"><ternary pos:start="75:14" pos:end="75:36"><condition pos:start="75:14" pos:end="75:22"><expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">authstr</name></expr> ?</condition><then pos:start="75:24" pos:end="75:31"> <expr pos:start="75:24" pos:end="75:31"><literal type="string" pos:start="75:24" pos:end="75:31">"Proxy-"</literal></expr> </then><else pos:start="75:33" pos:end="75:36">: <expr pos:start="75:35" pos:end="75:36"><literal type="string" pos:start="75:35" pos:end="75:36">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="75:39" pos:end="75:60"><expr pos:start="75:39" pos:end="75:60"><ternary pos:start="75:39" pos:end="75:60"><condition pos:start="75:39" pos:end="75:47"><expr pos:start="75:39" pos:end="75:45"><name pos:start="75:39" pos:end="75:45">authstr</name></expr> ?</condition><then pos:start="75:49" pos:end="75:55"> <expr pos:start="75:49" pos:end="75:55"><name pos:start="75:49" pos:end="75:55">authstr</name></expr> </then><else pos:start="75:57" pos:end="75:60">: <expr pos:start="75:59" pos:end="75:60"><literal type="string" pos:start="75:59" pos:end="75:60">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:12">av_freep</name><argument_list pos:start="77:13" pos:end="77:22">(<argument pos:start="77:14" pos:end="77:21"><expr pos:start="77:14" pos:end="77:21"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:21">authstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="83:18"><if pos:start="81:5" pos:end="83:18">if <condition pos:start="81:8" pos:end="81:69">(<expr pos:start="81:9" pos:end="81:68"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:12">ret</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <call pos:start="81:16" pos:end="81:63"><name pos:start="81:16" pos:end="81:26">ffurl_write</name><argument_list pos:start="81:27" pos:end="81:63">(<argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:28">s</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:32">hd</name></name></expr></argument>, <argument pos:start="81:35" pos:end="81:43"><expr pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:35">s</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:43">buffer</name></name></expr></argument>, <argument pos:start="81:46" pos:end="81:62"><expr pos:start="81:46" pos:end="81:62"><call pos:start="81:46" pos:end="81:62"><name pos:start="81:46" pos:end="81:51">strlen</name><argument_list pos:start="81:52" pos:end="81:62">(<argument pos:start="81:53" pos:end="81:61"><expr pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:61"><name pos:start="81:53" pos:end="81:53">s</name><operator pos:start="81:54" pos:end="81:55">-&gt;</operator><name pos:start="81:56" pos:end="81:61">buffer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="81:64" pos:end="81:64">)</operator> <operator pos:start="81:66" pos:end="81:66">&lt;</operator> <literal type="number" pos:start="81:68" pos:end="81:68">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:18"><block_content pos:start="83:9" pos:end="83:18">

        <goto pos:start="83:9" pos:end="83:18">goto <name pos:start="83:14" pos:end="83:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:27"><expr pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:14"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:14">buf_ptr</name></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <name pos:start="87:18" pos:end="87:26"><name pos:start="87:18" pos:end="87:18">s</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:26">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:14"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:14">buf_end</name></name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:18">s</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:26">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:22"><expr pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:17">line_count</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <literal type="number" pos:start="91:21" pos:end="91:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:21"><expr pos:start="93:5" pos:end="93:20"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:15">filesize</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <operator pos:start="93:19" pos:end="93:19">-</operator><literal type="number" pos:start="93:20" pos:end="93:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:50"><expr pos:start="95:5" pos:end="95:49"><name pos:start="95:5" pos:end="95:17">cur_auth_type</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <name pos:start="95:21" pos:end="95:49"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:39">proxy_auth_state</name><operator pos:start="95:40" pos:end="95:40">.</operator><name pos:start="95:41" pos:end="95:49">auth_type</name></name></expr>;</expr_stmt>



    <for pos:start="99:5" pos:end="145:5">for <control pos:start="99:9" pos:end="99:12">(<init pos:start="99:10" pos:end="99:10">;</init><condition pos:start="99:11" pos:end="99:11">;</condition><incr/>)</control> <block pos:start="99:14" pos:end="145:5">{<block_content pos:start="101:9" pos:end="143:24">

        <decl_stmt pos:start="101:9" pos:end="101:20"><decl pos:start="101:9" pos:end="101:19"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:19">new_loc</name></decl>;</decl_stmt>

        <comment type="line" pos:start="103:9" pos:end="103:71">// Note: This uses buffering, potentially reading more than the</comment>

        <comment type="line" pos:start="105:9" pos:end="105:71">// HTTP header. If tunneling a protocol where the server starts</comment>

        <comment type="line" pos:start="107:9" pos:end="107:68">// the conversation, we might buffer part of that here, too.</comment>

        <comment type="line" pos:start="109:9" pos:end="109:71">// Reading that requires using the proper ffurl_read() function</comment>

        <comment type="line" pos:start="111:9" pos:end="111:68">// on this URLContext, not using the fd directly (as the tls</comment>

        <comment type="line" pos:start="113:9" pos:end="113:69">// protocol does). This shouldn't be an issue for tls though,</comment>

        <comment type="line" pos:start="115:9" pos:end="115:67">// since the client starts the conversation there, so there</comment>

        <comment type="line" pos:start="117:9" pos:end="117:57">// is no extra data that we might buffer up here.</comment>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:53">(<expr pos:start="119:13" pos:end="119:52"><call pos:start="119:13" pos:end="119:48"><name pos:start="119:13" pos:end="119:25">http_get_line</name><argument_list pos:start="119:26" pos:end="119:48">(<argument pos:start="119:27" pos:end="119:27"><expr pos:start="119:27" pos:end="119:27"><name pos:start="119:27" pos:end="119:27">s</name></expr></argument>, <argument pos:start="119:30" pos:end="119:33"><expr pos:start="119:30" pos:end="119:33"><name pos:start="119:30" pos:end="119:33">line</name></expr></argument>, <argument pos:start="119:36" pos:end="119:47"><expr pos:start="119:36" pos:end="119:47"><sizeof pos:start="119:36" pos:end="119:47">sizeof<argument_list pos:start="119:42" pos:end="119:47">(<argument pos:start="119:43" pos:end="119:46"><expr pos:start="119:43" pos:end="119:46"><name pos:start="119:43" pos:end="119:46">line</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="119:50" pos:end="119:50">&lt;</operator> <literal type="number" pos:start="119:52" pos:end="119:52">0</literal></expr>)</condition> <block pos:start="119:55" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:31"><expr pos:start="121:13" pos:end="121:30"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:30"><name pos:start="121:19" pos:end="121:25">AVERROR</name><argument_list pos:start="121:26" pos:end="121:30">(<argument pos:start="121:27" pos:end="121:29"><expr pos:start="121:27" pos:end="121:29"><name pos:start="121:27" pos:end="121:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="123:13" pos:end="123:22">goto <name pos:start="123:18" pos:end="123:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:42"><expr pos:start="129:9" pos:end="129:41"><call pos:start="129:9" pos:end="129:41"><name pos:start="129:9" pos:end="129:15">av_dlog</name><argument_list pos:start="129:16" pos:end="129:41">(<argument pos:start="129:17" pos:end="129:17"><expr pos:start="129:17" pos:end="129:17"><name pos:start="129:17" pos:end="129:17">h</name></expr></argument>, <argument pos:start="129:20" pos:end="129:34"><expr pos:start="129:20" pos:end="129:34"><literal type="string" pos:start="129:20" pos:end="129:34">"header='%s'\n"</literal></expr></argument>, <argument pos:start="129:37" pos:end="129:40"><expr pos:start="129:37" pos:end="129:40"><name pos:start="129:37" pos:end="129:40">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:61"><expr pos:start="133:9" pos:end="133:60"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:60"><name pos:start="133:15" pos:end="133:26">process_line</name><argument_list pos:start="133:27" pos:end="133:60">(<argument pos:start="133:28" pos:end="133:28"><expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">h</name></expr></argument>, <argument pos:start="133:31" pos:end="133:34"><expr pos:start="133:31" pos:end="133:34"><name pos:start="133:31" pos:end="133:34">line</name></expr></argument>, <argument pos:start="133:37" pos:end="133:49"><expr pos:start="133:37" pos:end="133:49"><name pos:start="133:37" pos:end="133:49"><name pos:start="133:37" pos:end="133:37">s</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:49">line_count</name></name></expr></argument>, <argument pos:start="133:52" pos:end="133:59"><expr pos:start="133:52" pos:end="133:59"><operator pos:start="133:52" pos:end="133:52">&amp;</operator><name pos:start="133:53" pos:end="133:59">new_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="137:22"><if pos:start="135:9" pos:end="137:22">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">&lt;</operator> <literal type="number" pos:start="135:19" pos:end="135:19">0</literal></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:22"><block_content pos:start="137:13" pos:end="137:22">

            <goto pos:start="137:13" pos:end="137:22">goto <name pos:start="137:18" pos:end="137:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="139:9" pos:end="141:18"><if pos:start="139:9" pos:end="141:18">if <condition pos:start="139:12" pos:end="139:21">(<expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:18">==</operator> <literal type="number" pos:start="139:20" pos:end="139:20">0</literal></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:18"><block_content pos:start="141:13" pos:end="141:18">

            <break pos:start="141:13" pos:end="141:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:24"><expr pos:start="143:9" pos:end="143:23"><name pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:21">line_count</name></name><operator pos:start="143:22" pos:end="143:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="147:5" pos:end="157:5"><if pos:start="147:5" pos:end="157:5">if <condition pos:start="147:8" pos:end="149:56">(<expr pos:start="147:9" pos:end="149:55"><name pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:20">http_code</name></name> <operator pos:start="147:22" pos:end="147:23">==</operator> <literal type="number" pos:start="147:25" pos:end="147:27">407</literal> <operator pos:start="147:29" pos:end="147:30">&amp;&amp;</operator> <name pos:start="147:32" pos:end="147:44">cur_auth_type</name> <operator pos:start="147:46" pos:end="147:47">==</operator> <name pos:start="147:49" pos:end="147:62">HTTP_AUTH_NONE</name> <operator pos:start="147:64" pos:end="147:65">&amp;&amp;</operator>

        <name pos:start="149:9" pos:end="149:37"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:27">proxy_auth_state</name><operator pos:start="149:28" pos:end="149:28">.</operator><name pos:start="149:29" pos:end="149:37">auth_type</name></name> <operator pos:start="149:39" pos:end="149:40">!=</operator> <name pos:start="149:42" pos:end="149:55">HTTP_AUTH_NONE</name></expr>)</condition> <block pos:start="149:58" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:18">

        <expr_stmt pos:start="151:9" pos:end="151:27"><expr pos:start="151:9" pos:end="151:26"><call pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:19">ffurl_close</name><argument_list pos:start="151:20" pos:end="151:26">(<argument pos:start="151:21" pos:end="151:25"><expr pos:start="151:21" pos:end="151:25"><name pos:start="151:21" pos:end="151:25"><name pos:start="151:21" pos:end="151:21">s</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:25">hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:21"><expr pos:start="153:9" pos:end="153:20"><name pos:start="153:9" pos:end="153:13"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:13">hd</name></name> <operator pos:start="153:15" pos:end="153:15">=</operator> <name pos:start="153:17" pos:end="153:20">NULL</name></expr>;</expr_stmt>

        <goto pos:start="155:9" pos:end="155:18">goto <name pos:start="155:14" pos:end="155:17">redo</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="163:17"><if pos:start="161:5" pos:end="163:17">if <condition pos:start="161:8" pos:end="161:27">(<expr pos:start="161:9" pos:end="161:26"><name pos:start="161:9" pos:end="161:20"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:20">http_code</name></name> <operator pos:start="161:22" pos:end="161:22">&lt;</operator> <literal type="number" pos:start="161:24" pos:end="161:26">400</literal></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:17"><block_content pos:start="163:9" pos:end="163:17">

        <return pos:start="163:9" pos:end="163:17">return <expr pos:start="163:16" pos:end="163:16"><literal type="number" pos:start="163:16" pos:end="163:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:23"><expr pos:start="165:5" pos:end="165:22"><name pos:start="165:5" pos:end="165:7">ret</name> <operator pos:start="165:9" pos:end="165:9">=</operator> <call pos:start="165:11" pos:end="165:22"><name pos:start="165:11" pos:end="165:17">AVERROR</name><argument_list pos:start="165:18" pos:end="165:22">(<argument pos:start="165:19" pos:end="165:21"><expr pos:start="165:19" pos:end="165:21"><name pos:start="165:19" pos:end="165:21">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="169:1" pos:end="169:5"><name pos:start="169:1" pos:end="169:4">fail</name>:</label>

    <expr_stmt pos:start="171:5" pos:end="171:24"><expr pos:start="171:5" pos:end="171:23"><call pos:start="171:5" pos:end="171:23"><name pos:start="171:5" pos:end="171:20">http_proxy_close</name><argument_list pos:start="171:21" pos:end="171:23">(<argument pos:start="171:22" pos:end="171:22"><expr pos:start="171:22" pos:end="171:22"><name pos:start="171:22" pos:end="171:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="173:5" pos:end="173:15">return <expr pos:start="173:12" pos:end="173:14"><name pos:start="173:12" pos:end="173:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
