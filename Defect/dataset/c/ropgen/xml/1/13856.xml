<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13856.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">nvenc_upload_frame</name><parameter_list pos:start="1:30" pos:end="3:64">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:66">AVFrame</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">frame</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:63"><decl pos:start="3:39" pos:end="3:63"><type pos:start="3:39" pos:end="3:63"><name pos:start="3:39" pos:end="3:50">NvencSurface</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:63">nvenc_frame</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:5">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">NvencContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">ctx</name> <init pos:start="7:23" pos:end="7:40">= <expr pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:40"><name pos:start="7:25" pos:end="7:29">avctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:25">NvencDynLoadFunctions</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:32">dl_fn</name> <init pos:start="9:34" pos:end="9:58">= <expr pos:start="9:36" pos:end="9:58"><operator pos:start="9:36" pos:end="9:36">&amp;</operator><name pos:start="9:37" pos:end="9:58"><name pos:start="9:37" pos:end="9:39">ctx</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:58">nvenc_dload_funcs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:63"><decl pos:start="11:5" pos:end="11:62"><type pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:31">NV_ENCODE_API_FUNCTION_LIST</name> <modifier pos:start="11:33" pos:end="11:33">*</modifier></type><name pos:start="11:34" pos:end="11:40">p_nvenc</name> <init pos:start="11:42" pos:end="11:62">= <expr pos:start="11:44" pos:end="11:62"><operator pos:start="11:44" pos:end="11:44">&amp;</operator><name pos:start="11:45" pos:end="11:62"><name pos:start="11:45" pos:end="11:49">dl_fn</name><operator pos:start="11:50" pos:end="11:51">-&gt;</operator><name pos:start="11:52" pos:end="11:62">nvenc_funcs</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:15">NVENCSTATUS</name></type> <name pos:start="17:17" pos:end="17:25">nv_status</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="111:5"><if pos:start="21:5" pos:end="71:5">if <condition pos:start="21:8" pos:end="21:80">(<expr pos:start="21:9" pos:end="21:79"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:22">pix_fmt</name></name> <operator pos:start="21:24" pos:end="21:25">==</operator> <name pos:start="21:27" pos:end="21:41">AV_PIX_FMT_CUDA</name> <operator pos:start="21:43" pos:end="21:44">||</operator> <name pos:start="21:46" pos:end="21:59"><name pos:start="21:46" pos:end="21:50">avctx</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:59">pix_fmt</name></name> <operator pos:start="21:61" pos:end="21:62">==</operator> <name pos:start="21:64" pos:end="21:79">AV_PIX_FMT_D3D11</name></expr>)</condition> <block pos:start="21:82" pos:end="71:5">{<block_content pos:start="23:9" pos:end="69:17">

        <decl_stmt pos:start="23:9" pos:end="23:57"><decl pos:start="23:9" pos:end="23:56"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:19">reg_idx</name> <init pos:start="23:21" pos:end="23:56">= <expr pos:start="23:23" pos:end="23:56"><call pos:start="23:23" pos:end="23:56"><name pos:start="23:23" pos:end="23:42">nvenc_register_frame</name><argument_list pos:start="23:43" pos:end="23:56">(<argument pos:start="23:44" pos:end="23:48"><expr pos:start="23:44" pos:end="23:48"><name pos:start="23:44" pos:end="23:48">avctx</name></expr></argument>, <argument pos:start="23:51" pos:end="23:55"><expr pos:start="23:51" pos:end="23:55"><name pos:start="23:51" pos:end="23:55">frame</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:19">reg_idx</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>)</condition> <block pos:start="25:26" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:27">

            <expr_stmt pos:start="27:13" pos:end="27:82"><expr pos:start="27:13" pos:end="27:81"><call pos:start="27:13" pos:end="27:81"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:81">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><name pos:start="27:20" pos:end="27:24">avctx</name></expr></argument>, <argument pos:start="27:27" pos:end="27:38"><expr pos:start="27:27" pos:end="27:38"><name pos:start="27:27" pos:end="27:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:41" pos:end="27:80"><expr pos:start="27:41" pos:end="27:80"><literal type="string" pos:start="27:41" pos:end="27:80">"Could not register an input HW frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:27">return <expr pos:start="29:20" pos:end="29:26"><name pos:start="29:20" pos:end="29:26">reg_idx</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:55"><expr pos:start="35:9" pos:end="35:54"><name pos:start="35:9" pos:end="35:11">res</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:54"><name pos:start="35:15" pos:end="35:26">av_frame_ref</name><argument_list pos:start="35:27" pos:end="35:54">(<argument pos:start="35:28" pos:end="35:46"><expr pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:46"><name pos:start="35:28" pos:end="35:38">nvenc_frame</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:46">in_ref</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:53"><expr pos:start="35:49" pos:end="35:53"><name pos:start="35:49" pos:end="35:53">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="39:23"><if pos:start="37:9" pos:end="39:23">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">res</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:23"><block_content pos:start="39:13" pos:end="39:23">

            <return pos:start="39:13" pos:end="39:23">return <expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">res</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:68"><expr pos:start="43:9" pos:end="43:67"><name pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:19">nvenc_frame</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:27">in_map</name><operator pos:start="43:28" pos:end="43:28">.</operator><name pos:start="43:29" pos:end="43:35">version</name></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <name pos:start="43:39" pos:end="43:67">NV_ENC_MAP_INPUT_RESOURCE_VER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:88"><expr pos:start="45:9" pos:end="45:87"><name pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:19">nvenc_frame</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:27">in_map</name><operator pos:start="45:28" pos:end="45:28">.</operator><name pos:start="45:29" pos:end="45:46">registeredResource</name></name> <operator pos:start="45:48" pos:end="45:48">=</operator> <name pos:start="45:50" pos:end="45:80"><name pos:start="45:50" pos:end="45:52">ctx</name><operator pos:start="45:53" pos:end="45:54">-&gt;</operator><name pos:start="45:55" pos:end="45:71">registered_frames</name><index pos:start="45:72" pos:end="45:80">[<expr pos:start="45:73" pos:end="45:79"><name pos:start="45:73" pos:end="45:79">reg_idx</name></expr>]</index></name><operator pos:start="45:81" pos:end="45:81">.</operator><name pos:start="45:82" pos:end="45:87">regptr</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:89"><expr pos:start="47:9" pos:end="47:88"><name pos:start="47:9" pos:end="47:17">nv_status</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <call pos:start="47:21" pos:end="47:88"><name pos:start="47:21" pos:end="47:50"><name pos:start="47:21" pos:end="47:27">p_nvenc</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:50">nvEncMapInputResource</name></name><argument_list pos:start="47:51" pos:end="47:88">(<argument pos:start="47:52" pos:end="47:65"><expr pos:start="47:52" pos:end="47:65"><name pos:start="47:52" pos:end="47:65"><name pos:start="47:52" pos:end="47:54">ctx</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:65">nvencoder</name></name></expr></argument>, <argument pos:start="47:68" pos:end="47:87"><expr pos:start="47:68" pos:end="47:87"><operator pos:start="47:68" pos:end="47:68">&amp;</operator><name pos:start="47:69" pos:end="47:87"><name pos:start="47:69" pos:end="47:79">nvenc_frame</name><operator pos:start="47:80" pos:end="47:81">-&gt;</operator><name pos:start="47:82" pos:end="47:87">in_map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:40">(<expr pos:start="49:13" pos:end="49:39"><name pos:start="49:13" pos:end="49:21">nv_status</name> <operator pos:start="49:23" pos:end="49:24">!=</operator> <name pos:start="49:26" pos:end="49:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="49:42" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:90">

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><call pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:26">av_frame_unref</name><argument_list pos:start="51:27" pos:end="51:47">(<argument pos:start="51:28" pos:end="51:46"><expr pos:start="51:28" pos:end="51:46"><name pos:start="51:28" pos:end="51:46"><name pos:start="51:28" pos:end="51:38">nvenc_frame</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:46">in_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:90">return <expr pos:start="53:20" pos:end="53:89"><call pos:start="53:20" pos:end="53:89"><name pos:start="53:20" pos:end="53:36">nvenc_print_error</name><argument_list pos:start="53:37" pos:end="53:89">(<argument pos:start="53:38" pos:end="53:42"><expr pos:start="53:38" pos:end="53:42"><name pos:start="53:38" pos:end="53:42">avctx</name></expr></argument>, <argument pos:start="53:45" pos:end="53:53"><expr pos:start="53:45" pos:end="53:53"><name pos:start="53:45" pos:end="53:53">nv_status</name></expr></argument>, <argument pos:start="53:56" pos:end="53:88"><expr pos:start="53:56" pos:end="53:88"><literal type="string" pos:start="53:56" pos:end="53:88">"Error mapping an input resource"</literal></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><name pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:11">ctx</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:30">registered_frames</name><index pos:start="59:31" pos:end="59:39">[<expr pos:start="59:32" pos:end="59:38"><name pos:start="59:32" pos:end="59:38">reg_idx</name></expr>]</index></name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:46">mapped</name> <operator pos:start="59:48" pos:end="59:48">=</operator> <literal type="number" pos:start="59:50" pos:end="59:50">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:57"><expr pos:start="61:9" pos:end="61:56"><name pos:start="61:9" pos:end="61:28"><name pos:start="61:9" pos:end="61:19">nvenc_frame</name><operator pos:start="61:20" pos:end="61:21">-&gt;</operator><name pos:start="61:22" pos:end="61:28">reg_idx</name></name>                   <operator pos:start="61:48" pos:end="61:48">=</operator> <name pos:start="61:50" pos:end="61:56">reg_idx</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:84"><expr pos:start="63:9" pos:end="63:83"><name pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:19">nvenc_frame</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:34">input_surface</name></name>             <operator pos:start="63:48" pos:end="63:48">=</operator> <name pos:start="63:50" pos:end="63:83"><name pos:start="63:50" pos:end="63:60">nvenc_frame</name><operator pos:start="63:61" pos:end="63:62">-&gt;</operator><name pos:start="63:63" pos:end="63:68">in_map</name><operator pos:start="63:69" pos:end="63:69">.</operator><name pos:start="63:70" pos:end="63:83">mappedResource</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:85"><expr pos:start="65:9" pos:end="65:84"><name pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:19">nvenc_frame</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:27">format</name></name>                    <operator pos:start="65:48" pos:end="65:48">=</operator> <name pos:start="65:50" pos:end="65:84"><name pos:start="65:50" pos:end="65:60">nvenc_frame</name><operator pos:start="65:61" pos:end="65:62">-&gt;</operator><name pos:start="65:63" pos:end="65:68">in_map</name><operator pos:start="65:69" pos:end="65:69">.</operator><name pos:start="65:70" pos:end="65:84">mappedBufferFmt</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:68"><expr pos:start="67:9" pos:end="67:67"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:19">nvenc_frame</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:26">pitch</name></name>                     <operator pos:start="67:48" pos:end="67:48">=</operator> <name pos:start="67:50" pos:end="67:67"><name pos:start="67:50" pos:end="67:54">frame</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:64">linesize</name><index pos:start="67:65" pos:end="67:67">[<expr pos:start="67:66" pos:end="67:66"><literal type="number" pos:start="67:66" pos:end="67:66">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:17">return <expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="111:5">else <block pos:start="71:12" pos:end="111:5">{<block_content pos:start="73:9" pos:end="109:19">

        <decl_stmt pos:start="73:9" pos:end="73:58"><decl pos:start="73:9" pos:end="73:57"><type pos:start="73:9" pos:end="73:32"><name pos:start="73:9" pos:end="73:32">NV_ENC_LOCK_INPUT_BUFFER</name></type> <name pos:start="73:34" pos:end="73:49">lockBufferParams</name> <init pos:start="73:51" pos:end="73:57">= <expr pos:start="73:53" pos:end="73:57"><block pos:start="73:53" pos:end="73:57">{ <expr pos:start="73:55" pos:end="73:55"><literal type="number" pos:start="73:55" pos:end="73:55">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:64"><expr pos:start="77:9" pos:end="77:63"><name pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:24">lockBufferParams</name><operator pos:start="77:25" pos:end="77:25">.</operator><name pos:start="77:26" pos:end="77:32">version</name></name> <operator pos:start="77:34" pos:end="77:34">=</operator> <name pos:start="77:36" pos:end="77:63">NV_ENC_LOCK_INPUT_BUFFER_VER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:66"><expr pos:start="79:9" pos:end="79:65"><name pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:24">lockBufferParams</name><operator pos:start="79:25" pos:end="79:25">.</operator><name pos:start="79:26" pos:end="79:36">inputBuffer</name></name> <operator pos:start="79:38" pos:end="79:38">=</operator> <name pos:start="79:40" pos:end="79:65"><name pos:start="79:40" pos:end="79:50">nvenc_frame</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:65">input_surface</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:85"><expr pos:start="83:9" pos:end="83:84"><name pos:start="83:9" pos:end="83:17">nv_status</name> <operator pos:start="83:19" pos:end="83:19">=</operator> <call pos:start="83:21" pos:end="83:84"><name pos:start="83:21" pos:end="83:49"><name pos:start="83:21" pos:end="83:27">p_nvenc</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:49">nvEncLockInputBuffer</name></name><argument_list pos:start="83:50" pos:end="83:84">(<argument pos:start="83:51" pos:end="83:64"><expr pos:start="83:51" pos:end="83:64"><name pos:start="83:51" pos:end="83:64"><name pos:start="83:51" pos:end="83:53">ctx</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:64">nvencoder</name></name></expr></argument>, <argument pos:start="83:67" pos:end="83:83"><expr pos:start="83:67" pos:end="83:83"><operator pos:start="83:67" pos:end="83:67">&amp;</operator><name pos:start="83:68" pos:end="83:83">lockBufferParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:40">(<expr pos:start="85:13" pos:end="85:39"><name pos:start="85:13" pos:end="85:21">nv_status</name> <operator pos:start="85:23" pos:end="85:24">!=</operator> <name pos:start="85:26" pos:end="85:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="85:42" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:92">

            <return pos:start="87:13" pos:end="87:92">return <expr pos:start="87:20" pos:end="87:91"><call pos:start="87:20" pos:end="87:91"><name pos:start="87:20" pos:end="87:36">nvenc_print_error</name><argument_list pos:start="87:37" pos:end="87:91">(<argument pos:start="87:38" pos:end="87:42"><expr pos:start="87:38" pos:end="87:42"><name pos:start="87:38" pos:end="87:42">avctx</name></expr></argument>, <argument pos:start="87:45" pos:end="87:53"><expr pos:start="87:45" pos:end="87:53"><name pos:start="87:45" pos:end="87:53">nv_status</name></expr></argument>, <argument pos:start="87:56" pos:end="87:90"><expr pos:start="87:56" pos:end="87:90"><literal type="string" pos:start="87:56" pos:end="87:90">"Failed locking nvenc input buffer"</literal></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:52"><expr pos:start="93:9" pos:end="93:51"><name pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:19">nvenc_frame</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:26">pitch</name></name> <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:51"><name pos:start="93:30" pos:end="93:45">lockBufferParams</name><operator pos:start="93:46" pos:end="93:46">.</operator><name pos:start="93:47" pos:end="93:51">pitch</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:77"><expr pos:start="95:9" pos:end="95:76"><name pos:start="95:9" pos:end="95:11">res</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:76"><name pos:start="95:15" pos:end="95:30">nvenc_copy_frame</name><argument_list pos:start="95:31" pos:end="95:76">(<argument pos:start="95:32" pos:end="95:36"><expr pos:start="95:32" pos:end="95:36"><name pos:start="95:32" pos:end="95:36">avctx</name></expr></argument>, <argument pos:start="95:39" pos:end="95:49"><expr pos:start="95:39" pos:end="95:49"><name pos:start="95:39" pos:end="95:49">nvenc_frame</name></expr></argument>, <argument pos:start="95:52" pos:end="95:68"><expr pos:start="95:52" pos:end="95:68"><operator pos:start="95:52" pos:end="95:52">&amp;</operator><name pos:start="95:53" pos:end="95:68">lockBufferParams</name></expr></argument>, <argument pos:start="95:71" pos:end="95:75"><expr pos:start="95:71" pos:end="95:75"><name pos:start="95:71" pos:end="95:75">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:96"><expr pos:start="99:9" pos:end="99:95"><name pos:start="99:9" pos:end="99:17">nv_status</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <call pos:start="99:21" pos:end="99:95"><name pos:start="99:21" pos:end="99:51"><name pos:start="99:21" pos:end="99:27">p_nvenc</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:51">nvEncUnlockInputBuffer</name></name><argument_list pos:start="99:52" pos:end="99:95">(<argument pos:start="99:53" pos:end="99:66"><expr pos:start="99:53" pos:end="99:66"><name pos:start="99:53" pos:end="99:66"><name pos:start="99:53" pos:end="99:55">ctx</name><operator pos:start="99:56" pos:end="99:57">-&gt;</operator><name pos:start="99:58" pos:end="99:66">nvencoder</name></name></expr></argument>, <argument pos:start="99:69" pos:end="99:94"><expr pos:start="99:69" pos:end="99:94"><name pos:start="99:69" pos:end="99:94"><name pos:start="99:69" pos:end="99:79">nvenc_frame</name><operator pos:start="99:80" pos:end="99:81">-&gt;</operator><name pos:start="99:82" pos:end="99:94">input_surface</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="105:9"><if pos:start="101:9" pos:end="105:9">if <condition pos:start="101:12" pos:end="101:40">(<expr pos:start="101:13" pos:end="101:39"><name pos:start="101:13" pos:end="101:21">nv_status</name> <operator pos:start="101:23" pos:end="101:24">!=</operator> <name pos:start="101:26" pos:end="101:39">NV_ENC_SUCCESS</name></expr>)</condition> <block pos:start="101:42" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:89">

            <return pos:start="103:13" pos:end="103:89">return <expr pos:start="103:20" pos:end="103:88"><call pos:start="103:20" pos:end="103:88"><name pos:start="103:20" pos:end="103:36">nvenc_print_error</name><argument_list pos:start="103:37" pos:end="103:88">(<argument pos:start="103:38" pos:end="103:42"><expr pos:start="103:38" pos:end="103:42"><name pos:start="103:38" pos:end="103:42">avctx</name></expr></argument>, <argument pos:start="103:45" pos:end="103:53"><expr pos:start="103:45" pos:end="103:53"><name pos:start="103:45" pos:end="103:53">nv_status</name></expr></argument>, <argument pos:start="103:56" pos:end="103:87"><expr pos:start="103:56" pos:end="103:87"><literal type="string" pos:start="103:56" pos:end="103:87">"Failed unlocking input buffer!"</literal></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <return pos:start="109:9" pos:end="109:19">return <expr pos:start="109:16" pos:end="109:18"><name pos:start="109:16" pos:end="109:18">res</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
