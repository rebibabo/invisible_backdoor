<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6276.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">av_dump_format</name><parameter_list pos:start="1:20" pos:end="7:34">(<parameter pos:start="1:21" pos:end="1:39"><decl pos:start="1:21" pos:end="1:39"><type pos:start="1:21" pos:end="1:39"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">ic</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">index</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:35"><decl pos:start="5:21" pos:end="5:35"><type pos:start="5:21" pos:end="5:35"><specifier pos:start="5:21" pos:end="5:25">const</specifier> <name pos:start="5:27" pos:end="5:30">char</name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:35">url</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:33"><decl pos:start="7:21" pos:end="7:33"><type pos:start="7:21" pos:end="7:33"><name pos:start="7:21" pos:end="7:23">int</name></type> <name pos:start="7:25" pos:end="7:33">is_output</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="155:1">{<block_content pos:start="11:5" pos:end="153:21">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">printed</name> <init pos:start="13:22" pos:end="13:49">= <expr pos:start="13:24" pos:end="13:49"><call pos:start="13:24" pos:end="13:49"><name pos:start="13:24" pos:end="13:33">av_mallocz</name><argument_list pos:start="13:34" pos:end="13:49">(<argument pos:start="13:35" pos:end="13:48"><expr pos:start="13:35" pos:end="13:48"><name pos:start="13:35" pos:end="13:48"><name pos:start="13:35" pos:end="13:36">ic</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:48">nb_streams</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:10">ic</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:22">nb_streams</name></name> <operator pos:start="15:24" pos:end="15:25">&amp;&amp;</operator> <operator pos:start="15:27" pos:end="15:27">!</operator><name pos:start="15:28" pos:end="15:34">printed</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="29:44"><expr pos:start="21:5" pos:end="29:43"><call pos:start="21:5" pos:end="29:43"><name pos:start="21:5" pos:end="21:10">av_log</name><argument_list pos:start="21:11" pos:end="29:43">(<argument pos:start="21:12" pos:end="21:15"><expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">NULL</name></expr></argument>, <argument pos:start="21:18" pos:end="21:28"><expr pos:start="21:18" pos:end="21:28"><name pos:start="21:18" pos:end="21:28">AV_LOG_INFO</name></expr></argument>, <argument pos:start="21:31" pos:end="21:54"><expr pos:start="21:31" pos:end="21:54"><literal type="string" pos:start="21:31" pos:end="21:54">"%s #%d, %s, %s '%s':\n"</literal></expr></argument>,

            <argument pos:start="23:13" pos:end="23:42"><expr pos:start="23:13" pos:end="23:42"><ternary pos:start="23:13" pos:end="23:42"><condition pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:21">is_output</name></expr> ?</condition><then pos:start="23:25" pos:end="23:32"> <expr pos:start="23:25" pos:end="23:32"><literal type="string" pos:start="23:25" pos:end="23:32">"Output"</literal></expr> </then><else pos:start="23:34" pos:end="23:42">: <expr pos:start="23:36" pos:end="23:42"><literal type="string" pos:start="23:36" pos:end="23:42">"Input"</literal></expr></else></ternary></expr></argument>,

            <argument pos:start="25:13" pos:end="25:17"><expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">index</name></expr></argument>,

            <argument pos:start="27:13" pos:end="27:61"><expr pos:start="27:13" pos:end="27:61"><ternary pos:start="27:13" pos:end="27:61"><condition pos:start="27:13" pos:end="27:23"><expr pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:21">is_output</name></expr> ?</condition><then pos:start="27:25" pos:end="27:41"> <expr pos:start="27:25" pos:end="27:41"><name pos:start="27:25" pos:end="27:41"><name pos:start="27:25" pos:end="27:26">ic</name><operator pos:start="27:27" pos:end="27:28">-&gt;</operator><name pos:start="27:29" pos:end="27:35">oformat</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:41">name</name></name></expr> </then><else pos:start="27:43" pos:end="27:61">: <expr pos:start="27:45" pos:end="27:61"><name pos:start="27:45" pos:end="27:61"><name pos:start="27:45" pos:end="27:46">ic</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:55">iformat</name><operator pos:start="27:56" pos:end="27:57">-&gt;</operator><name pos:start="27:58" pos:end="27:61">name</name></name></expr></else></ternary></expr></argument>,

            <argument pos:start="29:13" pos:end="29:37"><expr pos:start="29:13" pos:end="29:37"><ternary pos:start="29:13" pos:end="29:37"><condition pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:21">is_output</name></expr> ?</condition><then pos:start="29:25" pos:end="29:28"> <expr pos:start="29:25" pos:end="29:28"><literal type="string" pos:start="29:25" pos:end="29:28">"to"</literal></expr> </then><else pos:start="29:30" pos:end="29:37">: <expr pos:start="29:32" pos:end="29:37"><literal type="string" pos:start="29:32" pos:end="29:37">"from"</literal></expr></else></ternary></expr></argument>, <argument pos:start="29:40" pos:end="29:42"><expr pos:start="29:40" pos:end="29:42"><name pos:start="29:40" pos:end="29:42">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><call pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:17">dump_metadata</name><argument_list pos:start="31:18" pos:end="31:43">(<argument pos:start="31:19" pos:end="31:22"><expr pos:start="31:19" pos:end="31:22"><name pos:start="31:19" pos:end="31:22">NULL</name></expr></argument>, <argument pos:start="31:25" pos:end="31:36"><expr pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:36"><name pos:start="31:25" pos:end="31:26">ic</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:36">metadata</name></name></expr></argument>, <argument pos:start="31:39" pos:end="31:42"><expr pos:start="31:39" pos:end="31:42"><literal type="string" pos:start="31:39" pos:end="31:42">"  "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="93:5"><if pos:start="33:5" pos:end="93:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:18">is_output</name></expr>)</condition> <block pos:start="33:21" pos:end="93:5">{<block_content pos:start="35:9" pos:end="91:40">

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="35:49">(<argument pos:start="35:16" pos:end="35:19"><expr pos:start="35:16" pos:end="35:19"><name pos:start="35:16" pos:end="35:19">NULL</name></expr></argument>, <argument pos:start="35:22" pos:end="35:32"><expr pos:start="35:22" pos:end="35:32"><name pos:start="35:22" pos:end="35:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="35:35" pos:end="35:48"><expr pos:start="35:35" pos:end="35:48"><literal type="string" pos:start="35:35" pos:end="35:48">"  Duration: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="61:9"><if pos:start="37:9" pos:end="57:9">if <condition pos:start="37:12" pos:end="37:43">(<expr pos:start="37:13" pos:end="37:42"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:14">ic</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:24">duration</name></name> <operator pos:start="37:26" pos:end="37:27">!=</operator> <name pos:start="37:29" pos:end="37:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="37:45" pos:end="57:9">{<block_content pos:start="39:13" pos:end="55:46">

            <decl_stmt pos:start="39:13" pos:end="39:38"><decl pos:start="39:13" pos:end="39:21"><type pos:start="39:13" pos:end="39:15"><name pos:start="39:13" pos:end="39:15">int</name></type> <name pos:start="39:17" pos:end="39:21">hours</name></decl>, <decl pos:start="39:24" pos:end="39:27"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:24" pos:end="39:27">mins</name></decl>, <decl pos:start="39:30" pos:end="39:33"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:30" pos:end="39:33">secs</name></decl>, <decl pos:start="39:36" pos:end="39:37"><type ref="prev" pos:start="39:13" pos:end="39:15"/><name pos:start="39:36" pos:end="39:37">us</name></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:47"><expr pos:start="41:13" pos:end="41:46"><name pos:start="41:13" pos:end="41:16">secs</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:21">ic</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:31">duration</name></name> <operator pos:start="41:33" pos:end="41:33">/</operator> <name pos:start="41:35" pos:end="41:46">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:45"><expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:14">us</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:29"><name pos:start="43:18" pos:end="43:19">ic</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:29">duration</name></name> <operator pos:start="43:31" pos:end="43:31">%</operator> <name pos:start="43:33" pos:end="43:44">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:29"><expr pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:16">mins</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:23">secs</name> <operator pos:start="45:25" pos:end="45:25">/</operator> <literal type="number" pos:start="45:27" pos:end="45:28">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:23"><expr pos:start="47:13" pos:end="47:22"><name pos:start="47:13" pos:end="47:16">secs</name> <operator pos:start="47:18" pos:end="47:19">%=</operator> <literal type="number" pos:start="47:21" pos:end="47:22">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:30"><expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:17">hours</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:24">mins</name> <operator pos:start="49:26" pos:end="49:26">/</operator> <literal type="number" pos:start="49:28" pos:end="49:29">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:23"><expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:16">mins</name> <operator pos:start="51:18" pos:end="51:19">%=</operator> <literal type="number" pos:start="51:21" pos:end="51:22">60</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="55:46"><expr pos:start="53:13" pos:end="55:45"><call pos:start="53:13" pos:end="55:45"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="55:45">(<argument pos:start="53:20" pos:end="53:23"><expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">NULL</name></expr></argument>, <argument pos:start="53:26" pos:end="53:36"><expr pos:start="53:26" pos:end="53:36"><name pos:start="53:26" pos:end="53:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="53:39" pos:end="53:59"><expr pos:start="53:39" pos:end="53:59"><literal type="string" pos:start="53:39" pos:end="53:59">"%02d:%02d:%02d.%02d"</literal></expr></argument>, <argument pos:start="53:62" pos:end="53:66"><expr pos:start="53:62" pos:end="53:66"><name pos:start="53:62" pos:end="53:66">hours</name></expr></argument>, <argument pos:start="53:69" pos:end="53:72"><expr pos:start="53:69" pos:end="53:72"><name pos:start="53:69" pos:end="53:72">mins</name></expr></argument>, <argument pos:start="53:75" pos:end="53:78"><expr pos:start="53:75" pos:end="53:78"><name pos:start="53:75" pos:end="53:78">secs</name></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:44"><expr pos:start="55:20" pos:end="55:44"><operator pos:start="55:20" pos:end="55:20">(</operator><literal type="number" pos:start="55:21" pos:end="55:23">100</literal> <operator pos:start="55:25" pos:end="55:25">*</operator> <name pos:start="55:27" pos:end="55:28">us</name><operator pos:start="55:29" pos:end="55:29">)</operator> <operator pos:start="55:31" pos:end="55:31">/</operator> <name pos:start="55:33" pos:end="55:44">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:45">

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><call pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:44">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">NULL</name></expr></argument>, <argument pos:start="59:26" pos:end="59:36"><expr pos:start="59:26" pos:end="59:36"><name pos:start="59:26" pos:end="59:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="59:39" pos:end="59:43"><expr pos:start="59:39" pos:end="59:43"><literal type="string" pos:start="59:39" pos:end="59:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="77:9"><if pos:start="63:9" pos:end="77:9">if <condition pos:start="63:12" pos:end="63:45">(<expr pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:14">ic</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:26">start_time</name></name> <operator pos:start="63:28" pos:end="63:29">!=</operator> <name pos:start="63:31" pos:end="63:44">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="63:47" pos:end="77:9">{<block_content pos:start="65:13" pos:end="75:69">

            <decl_stmt pos:start="65:13" pos:end="65:25"><decl pos:start="65:13" pos:end="65:20"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:20">secs</name></decl>, <decl pos:start="65:23" pos:end="65:24"><type ref="prev" pos:start="65:13" pos:end="65:15"/><name pos:start="65:23" pos:end="65:24">us</name></decl>;</decl_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:51"><expr pos:start="67:13" pos:end="67:50"><call pos:start="67:13" pos:end="67:50"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:50">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">NULL</name></expr></argument>, <argument pos:start="67:26" pos:end="67:36"><expr pos:start="67:26" pos:end="67:36"><name pos:start="67:26" pos:end="67:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="67:39" pos:end="67:49"><expr pos:start="67:39" pos:end="67:49"><literal type="string" pos:start="67:39" pos:end="67:49">", start: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:49"><expr pos:start="69:13" pos:end="69:48"><name pos:start="69:13" pos:end="69:16">secs</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:33"><name pos:start="69:20" pos:end="69:21">ic</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:33">start_time</name></name> <operator pos:start="69:35" pos:end="69:35">/</operator> <name pos:start="69:37" pos:end="69:48">AV_TIME_BASE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:52"><expr pos:start="71:13" pos:end="71:51"><name pos:start="71:13" pos:end="71:14">us</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:51"><name pos:start="71:18" pos:end="71:20">abs</name><argument_list pos:start="71:21" pos:end="71:51">(<argument pos:start="71:22" pos:end="71:50"><expr pos:start="71:22" pos:end="71:50"><name pos:start="71:22" pos:end="71:35"><name pos:start="71:22" pos:end="71:23">ic</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">start_time</name></name> <operator pos:start="71:37" pos:end="71:37">%</operator> <name pos:start="71:39" pos:end="71:50">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:69"><expr pos:start="73:13" pos:end="75:68"><call pos:start="73:13" pos:end="75:68"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="75:68">(<argument pos:start="73:20" pos:end="73:23"><expr pos:start="73:20" pos:end="73:23"><name pos:start="73:20" pos:end="73:23">NULL</name></expr></argument>, <argument pos:start="73:26" pos:end="73:36"><expr pos:start="73:26" pos:end="73:36"><name pos:start="73:26" pos:end="73:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="73:39" pos:end="73:47"><expr pos:start="73:39" pos:end="73:47"><literal type="string" pos:start="73:39" pos:end="73:47">"%d.%06d"</literal></expr></argument>,

                   <argument pos:start="75:20" pos:end="75:23"><expr pos:start="75:20" pos:end="75:23"><name pos:start="75:20" pos:end="75:23">secs</name></expr></argument>, <argument pos:start="75:26" pos:end="75:67"><expr pos:start="75:26" pos:end="75:67"><operator pos:start="75:26" pos:end="75:26">(</operator><name pos:start="75:27" pos:end="75:29">int</name><operator pos:start="75:30" pos:end="75:30">)</operator><call pos:start="75:31" pos:end="75:67"><name pos:start="75:31" pos:end="75:40">av_rescale</name><argument_list pos:start="75:41" pos:end="75:67">(<argument pos:start="75:42" pos:end="75:43"><expr pos:start="75:42" pos:end="75:43"><name pos:start="75:42" pos:end="75:43">us</name></expr></argument>, <argument pos:start="75:46" pos:end="75:52"><expr pos:start="75:46" pos:end="75:52"><literal type="number" pos:start="75:46" pos:end="75:52">1000000</literal></expr></argument>, <argument pos:start="75:55" pos:end="75:66"><expr pos:start="75:55" pos:end="75:66"><name pos:start="75:55" pos:end="75:66">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:49"><expr pos:start="79:9" pos:end="79:48"><call pos:start="79:9" pos:end="79:48"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:48">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">NULL</name></expr></argument>, <argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="79:35" pos:end="79:47"><expr pos:start="79:35" pos:end="79:47"><literal type="string" pos:start="79:35" pos:end="79:47">", bitrate: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:25">(<expr pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:24"><name pos:start="81:13" pos:end="81:14">ic</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:24">bit_rate</name></name></expr>)</condition> <block pos:start="81:27" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:69">

            <expr_stmt pos:start="83:13" pos:end="83:69"><expr pos:start="83:13" pos:end="83:68"><call pos:start="83:13" pos:end="83:68"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="83:68">(<argument pos:start="83:20" pos:end="83:23"><expr pos:start="83:20" pos:end="83:23"><name pos:start="83:20" pos:end="83:23">NULL</name></expr></argument>, <argument pos:start="83:26" pos:end="83:36"><expr pos:start="83:26" pos:end="83:36"><name pos:start="83:26" pos:end="83:36">AV_LOG_INFO</name></expr></argument>,<argument pos:start="83:38" pos:end="83:46"><expr pos:start="83:38" pos:end="83:46"><literal type="string" pos:start="83:38" pos:end="83:46">"%d kb/s"</literal></expr></argument>, <argument pos:start="83:49" pos:end="83:67"><expr pos:start="83:49" pos:end="83:67"><name pos:start="83:49" pos:end="83:60"><name pos:start="83:49" pos:end="83:50">ic</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:60">bit_rate</name></name> <operator pos:start="83:62" pos:end="83:62">/</operator> <literal type="number" pos:start="83:64" pos:end="83:67">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:45">

            <expr_stmt pos:start="87:13" pos:end="87:45"><expr pos:start="87:13" pos:end="87:44"><call pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:44">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">NULL</name></expr></argument>, <argument pos:start="87:26" pos:end="87:36"><expr pos:start="87:26" pos:end="87:36"><name pos:start="87:26" pos:end="87:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="87:39" pos:end="87:43"><expr pos:start="87:39" pos:end="87:43"><literal type="string" pos:start="87:39" pos:end="87:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><call pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:39">(<argument pos:start="91:16" pos:end="91:19"><expr pos:start="91:16" pos:end="91:19"><name pos:start="91:16" pos:end="91:19">NULL</name></expr></argument>, <argument pos:start="91:22" pos:end="91:32"><expr pos:start="91:22" pos:end="91:32"><name pos:start="91:22" pos:end="91:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="91:35" pos:end="91:38"><expr pos:start="91:35" pos:end="91:38"><literal type="string" pos:start="91:35" pos:end="91:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="95:5" pos:end="109:5">for <control pos:start="95:9" pos:end="95:41">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:36"><expr pos:start="95:17" pos:end="95:35"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:22">ic</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:35">nb_chapters</name></name></expr>;</condition> <incr pos:start="95:38" pos:end="95:40"><expr pos:start="95:38" pos:end="95:40"><name pos:start="95:38" pos:end="95:38">i</name><operator pos:start="95:39" pos:end="95:40">++</operator></expr></incr>)</control> <block pos:start="95:43" pos:end="109:5">{<block_content pos:start="97:9" pos:end="107:50">

        <decl_stmt pos:start="97:9" pos:end="97:40"><decl pos:start="97:9" pos:end="97:39"><type pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:17">AVChapter</name> <modifier pos:start="97:19" pos:end="97:19">*</modifier></type><name pos:start="97:20" pos:end="97:21">ch</name> <init pos:start="97:23" pos:end="97:39">= <expr pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:39"><name pos:start="97:25" pos:end="97:26">ic</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:36">chapters</name><index pos:start="97:37" pos:end="97:39">[<expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:68"><expr pos:start="99:9" pos:end="99:67"><call pos:start="99:9" pos:end="99:67"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:67">(<argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">NULL</name></expr></argument>, <argument pos:start="99:22" pos:end="99:32"><expr pos:start="99:22" pos:end="99:32"><name pos:start="99:22" pos:end="99:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="99:35" pos:end="99:56"><expr pos:start="99:35" pos:end="99:56"><literal type="string" pos:start="99:35" pos:end="99:56">"    Chapter #%d.%d: "</literal></expr></argument>, <argument pos:start="99:59" pos:end="99:63"><expr pos:start="99:59" pos:end="99:63"><name pos:start="99:59" pos:end="99:63">index</name></expr></argument>, <argument pos:start="99:66" pos:end="99:66"><expr pos:start="99:66" pos:end="99:66"><name pos:start="99:66" pos:end="99:66">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:83"><expr pos:start="101:9" pos:end="101:82"><call pos:start="101:9" pos:end="101:82"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:82">(<argument pos:start="101:16" pos:end="101:19"><expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">NULL</name></expr></argument>, <argument pos:start="101:22" pos:end="101:32"><expr pos:start="101:22" pos:end="101:32"><name pos:start="101:22" pos:end="101:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="101:35" pos:end="101:46"><expr pos:start="101:35" pos:end="101:46"><literal type="string" pos:start="101:35" pos:end="101:46">"start %f, "</literal></expr></argument>, <argument pos:start="101:49" pos:end="101:81"><expr pos:start="101:49" pos:end="101:81"><name pos:start="101:49" pos:end="101:57"><name pos:start="101:49" pos:end="101:50">ch</name><operator pos:start="101:51" pos:end="101:52">-&gt;</operator><name pos:start="101:53" pos:end="101:57">start</name></name> <operator pos:start="101:59" pos:end="101:59">*</operator> <call pos:start="101:61" pos:end="101:81"><name pos:start="101:61" pos:end="101:66">av_q2d</name><argument_list pos:start="101:67" pos:end="101:81">(<argument pos:start="101:68" pos:end="101:80"><expr pos:start="101:68" pos:end="101:80"><name pos:start="101:68" pos:end="101:80"><name pos:start="101:68" pos:end="101:69">ch</name><operator pos:start="101:70" pos:end="101:71">-&gt;</operator><name pos:start="101:72" pos:end="101:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:83"><expr pos:start="103:9" pos:end="103:82"><call pos:start="103:9" pos:end="103:82"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="103:82">(<argument pos:start="103:16" pos:end="103:19"><expr pos:start="103:16" pos:end="103:19"><name pos:start="103:16" pos:end="103:19">NULL</name></expr></argument>, <argument pos:start="103:22" pos:end="103:32"><expr pos:start="103:22" pos:end="103:32"><name pos:start="103:22" pos:end="103:32">AV_LOG_INFO</name></expr></argument>, <argument pos:start="103:35" pos:end="103:44"><expr pos:start="103:35" pos:end="103:44"><literal type="string" pos:start="103:35" pos:end="103:44">"end %f\n"</literal></expr></argument>,   <argument pos:start="103:49" pos:end="103:81"><expr pos:start="103:49" pos:end="103:81"><name pos:start="103:49" pos:end="103:55"><name pos:start="103:49" pos:end="103:50">ch</name><operator pos:start="103:51" pos:end="103:52">-&gt;</operator><name pos:start="103:53" pos:end="103:55">end</name></name>   <operator pos:start="103:59" pos:end="103:59">*</operator> <call pos:start="103:61" pos:end="103:81"><name pos:start="103:61" pos:end="103:66">av_q2d</name><argument_list pos:start="103:67" pos:end="103:81">(<argument pos:start="103:68" pos:end="103:80"><expr pos:start="103:68" pos:end="103:80"><name pos:start="103:68" pos:end="103:80"><name pos:start="103:68" pos:end="103:69">ch</name><operator pos:start="103:70" pos:end="103:71">-&gt;</operator><name pos:start="103:72" pos:end="103:80">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:50"><expr pos:start="107:9" pos:end="107:49"><call pos:start="107:9" pos:end="107:49"><name pos:start="107:9" pos:end="107:21">dump_metadata</name><argument_list pos:start="107:22" pos:end="107:49">(<argument pos:start="107:23" pos:end="107:26"><expr pos:start="107:23" pos:end="107:26"><name pos:start="107:23" pos:end="107:26">NULL</name></expr></argument>, <argument pos:start="107:29" pos:end="107:40"><expr pos:start="107:29" pos:end="107:40"><name pos:start="107:29" pos:end="107:40"><name pos:start="107:29" pos:end="107:30">ch</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:40">metadata</name></name></expr></argument>, <argument pos:start="107:43" pos:end="107:48"><expr pos:start="107:43" pos:end="107:48"><literal type="string" pos:start="107:43" pos:end="107:48">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="111:5" pos:end="143:5"><if pos:start="111:5" pos:end="143:5">if<condition pos:start="111:7" pos:end="111:23">(<expr pos:start="111:8" pos:end="111:22"><name pos:start="111:8" pos:end="111:22"><name pos:start="111:8" pos:end="111:9">ic</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">nb_programs</name></name></expr>)</condition> <block pos:start="111:25" pos:end="143:5">{<block_content pos:start="113:9" pos:end="141:56">

        <decl_stmt pos:start="113:9" pos:end="113:28"><decl pos:start="113:9" pos:end="113:13"><type pos:start="113:9" pos:end="113:11"><name pos:start="113:9" pos:end="113:11">int</name></type> <name pos:start="113:13" pos:end="113:13">j</name></decl>, <decl pos:start="113:16" pos:end="113:16"><type ref="prev" pos:start="113:9" pos:end="113:11"/><name pos:start="113:16" pos:end="113:16">k</name></decl>, <decl pos:start="113:19" pos:end="113:27"><type ref="prev" pos:start="113:9" pos:end="113:11"/><name pos:start="113:19" pos:end="113:23">total</name> <init pos:start="113:25" pos:end="113:27">= <expr pos:start="113:27" pos:end="113:27"><literal type="number" pos:start="113:27" pos:end="113:27">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="115:9" pos:end="137:9">for<control pos:start="115:12" pos:end="115:40">(<init pos:start="115:13" pos:end="115:16"><expr pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:13">j</name><operator pos:start="115:14" pos:end="115:14">=</operator><literal type="number" pos:start="115:15" pos:end="115:15">0</literal></expr>;</init> <condition pos:start="115:18" pos:end="115:35"><expr pos:start="115:18" pos:end="115:34"><name pos:start="115:18" pos:end="115:18">j</name><operator pos:start="115:19" pos:end="115:19">&lt;</operator><name pos:start="115:20" pos:end="115:34"><name pos:start="115:20" pos:end="115:21">ic</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:34">nb_programs</name></name></expr>;</condition> <incr pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:37">j</name><operator pos:start="115:38" pos:end="115:39">++</operator></expr></incr>)</control> <block pos:start="115:42" pos:end="137:9">{<block_content pos:start="117:13" pos:end="135:56">

            <decl_stmt pos:start="117:13" pos:end="119:67"><decl pos:start="117:13" pos:end="119:66"><type pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:29">AVDictionaryEntry</name> <modifier pos:start="117:31" pos:end="117:31">*</modifier></type><name pos:start="117:32" pos:end="117:35">name</name> <init pos:start="117:37" pos:end="119:66">= <expr pos:start="117:39" pos:end="119:66"><call pos:start="117:39" pos:end="119:66"><name pos:start="117:39" pos:end="117:49">av_dict_get</name><argument_list pos:start="117:50" pos:end="119:66">(<argument pos:start="117:51" pos:end="117:75"><expr pos:start="117:51" pos:end="117:75"><name pos:start="117:51" pos:end="117:65"><name pos:start="117:51" pos:end="117:52">ic</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:62">programs</name><index pos:start="117:63" pos:end="117:65">[<expr pos:start="117:64" pos:end="117:64"><name pos:start="117:64" pos:end="117:64">j</name></expr>]</index></name><operator pos:start="117:66" pos:end="117:67">-&gt;</operator><name pos:start="117:68" pos:end="117:75">metadata</name></expr></argument>,

                                                  <argument pos:start="119:51" pos:end="119:56"><expr pos:start="119:51" pos:end="119:56"><literal type="string" pos:start="119:51" pos:end="119:56">"name"</literal></expr></argument>, <argument pos:start="119:59" pos:end="119:62"><expr pos:start="119:59" pos:end="119:62"><name pos:start="119:59" pos:end="119:62">NULL</name></expr></argument>, <argument pos:start="119:65" pos:end="119:65"><expr pos:start="119:65" pos:end="119:65"><literal type="number" pos:start="119:65" pos:end="119:65">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="121:13" pos:end="123:44"><expr pos:start="121:13" pos:end="123:43"><call pos:start="121:13" pos:end="123:43"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="123:43">(<argument pos:start="121:20" pos:end="121:23"><expr pos:start="121:20" pos:end="121:23"><name pos:start="121:20" pos:end="121:23">NULL</name></expr></argument>, <argument pos:start="121:26" pos:end="121:36"><expr pos:start="121:26" pos:end="121:36"><name pos:start="121:26" pos:end="121:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="121:39" pos:end="121:57"><expr pos:start="121:39" pos:end="121:57"><literal type="string" pos:start="121:39" pos:end="121:57">"  Program %d %s\n"</literal></expr></argument>, <argument pos:start="121:60" pos:end="121:78"><expr pos:start="121:60" pos:end="121:78"><name pos:start="121:60" pos:end="121:74"><name pos:start="121:60" pos:end="121:61">ic</name><operator pos:start="121:62" pos:end="121:63">-&gt;</operator><name pos:start="121:64" pos:end="121:71">programs</name><index pos:start="121:72" pos:end="121:74">[<expr pos:start="121:73" pos:end="121:73"><name pos:start="121:73" pos:end="121:73">j</name></expr>]</index></name><operator pos:start="121:75" pos:end="121:76">-&gt;</operator><name pos:start="121:77" pos:end="121:78">id</name></expr></argument>,

                   <argument pos:start="123:20" pos:end="123:42"><expr pos:start="123:20" pos:end="123:42"><ternary pos:start="123:20" pos:end="123:42"><condition pos:start="123:20" pos:end="123:25"><expr pos:start="123:20" pos:end="123:23"><name pos:start="123:20" pos:end="123:23">name</name></expr> ?</condition><then pos:start="123:27" pos:end="123:37"> <expr pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:37"><name pos:start="123:27" pos:end="123:30">name</name><operator pos:start="123:31" pos:end="123:32">-&gt;</operator><name pos:start="123:33" pos:end="123:37">value</name></name></expr> </then><else pos:start="123:39" pos:end="123:42">: <expr pos:start="123:41" pos:end="123:42"><literal type="string" pos:start="123:41" pos:end="123:42">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:67"><expr pos:start="125:13" pos:end="125:66"><call pos:start="125:13" pos:end="125:66"><name pos:start="125:13" pos:end="125:25">dump_metadata</name><argument_list pos:start="125:26" pos:end="125:66">(<argument pos:start="125:27" pos:end="125:30"><expr pos:start="125:27" pos:end="125:30"><name pos:start="125:27" pos:end="125:30">NULL</name></expr></argument>, <argument pos:start="125:33" pos:end="125:57"><expr pos:start="125:33" pos:end="125:57"><name pos:start="125:33" pos:end="125:47"><name pos:start="125:33" pos:end="125:34">ic</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:44">programs</name><index pos:start="125:45" pos:end="125:47">[<expr pos:start="125:46" pos:end="125:46"><name pos:start="125:46" pos:end="125:46">j</name></expr>]</index></name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:57">metadata</name></expr></argument>, <argument pos:start="125:60" pos:end="125:65"><expr pos:start="125:60" pos:end="125:65"><literal type="string" pos:start="125:60" pos:end="125:65">"    "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="127:13" pos:end="133:13">for<control pos:start="127:16" pos:end="127:63">(<init pos:start="127:17" pos:end="127:20"><expr pos:start="127:17" pos:end="127:19"><name pos:start="127:17" pos:end="127:17">k</name><operator pos:start="127:18" pos:end="127:18">=</operator><literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr>;</init> <condition pos:start="127:22" pos:end="127:58"><expr pos:start="127:22" pos:end="127:57"><name pos:start="127:22" pos:end="127:22">k</name><operator pos:start="127:23" pos:end="127:23">&lt;</operator><name pos:start="127:24" pos:end="127:38"><name pos:start="127:24" pos:end="127:25">ic</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:35">programs</name><index pos:start="127:36" pos:end="127:38">[<expr pos:start="127:37" pos:end="127:37"><name pos:start="127:37" pos:end="127:37">j</name></expr>]</index></name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:57">nb_stream_indexes</name></expr>;</condition> <incr pos:start="127:60" pos:end="127:62"><expr pos:start="127:60" pos:end="127:62"><name pos:start="127:60" pos:end="127:60">k</name><operator pos:start="127:61" pos:end="127:62">++</operator></expr></incr>)</control> <block pos:start="127:65" pos:end="133:13">{<block_content pos:start="129:17" pos:end="131:62">

                <expr_stmt pos:start="129:17" pos:end="129:91"><expr pos:start="129:17" pos:end="129:90"><call pos:start="129:17" pos:end="129:90"><name pos:start="129:17" pos:end="129:34">dump_stream_format</name><argument_list pos:start="129:35" pos:end="129:90">(<argument pos:start="129:36" pos:end="129:37"><expr pos:start="129:36" pos:end="129:37"><name pos:start="129:36" pos:end="129:37">ic</name></expr></argument>, <argument pos:start="129:40" pos:end="129:71"><expr pos:start="129:40" pos:end="129:71"><name pos:start="129:40" pos:end="129:54"><name pos:start="129:40" pos:end="129:41">ic</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:51">programs</name><index pos:start="129:52" pos:end="129:54">[<expr pos:start="129:53" pos:end="129:53"><name pos:start="129:53" pos:end="129:53">j</name></expr>]</index></name><operator pos:start="129:55" pos:end="129:56">-&gt;</operator><name pos:start="129:57" pos:end="129:71"><name pos:start="129:57" pos:end="129:68">stream_index</name><index pos:start="129:69" pos:end="129:71">[<expr pos:start="129:70" pos:end="129:70"><name pos:start="129:70" pos:end="129:70">k</name></expr>]</index></name></expr></argument>, <argument pos:start="129:74" pos:end="129:78"><expr pos:start="129:74" pos:end="129:78"><name pos:start="129:74" pos:end="129:78">index</name></expr></argument>, <argument pos:start="129:81" pos:end="129:89"><expr pos:start="129:81" pos:end="129:89"><name pos:start="129:81" pos:end="129:89">is_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:62"><expr pos:start="131:17" pos:end="131:61"><name pos:start="131:17" pos:end="131:57"><name pos:start="131:17" pos:end="131:23">printed</name><index pos:start="131:24" pos:end="131:57">[<expr pos:start="131:25" pos:end="131:56"><name pos:start="131:25" pos:end="131:39"><name pos:start="131:25" pos:end="131:26">ic</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:36">programs</name><index pos:start="131:37" pos:end="131:39">[<expr pos:start="131:38" pos:end="131:38"><name pos:start="131:38" pos:end="131:38">j</name></expr>]</index></name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:56"><name pos:start="131:42" pos:end="131:53">stream_index</name><index pos:start="131:54" pos:end="131:56">[<expr pos:start="131:55" pos:end="131:55"><name pos:start="131:55" pos:end="131:55">k</name></expr>]</index></name></expr>]</index></name> <operator pos:start="131:59" pos:end="131:59">=</operator> <literal type="number" pos:start="131:61" pos:end="131:61">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="135:13" pos:end="135:56"><expr pos:start="135:13" pos:end="135:55"><name pos:start="135:13" pos:end="135:17">total</name> <operator pos:start="135:19" pos:end="135:20">+=</operator> <name pos:start="135:22" pos:end="135:36"><name pos:start="135:22" pos:end="135:23">ic</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:33">programs</name><index pos:start="135:34" pos:end="135:36">[<expr pos:start="135:35" pos:end="135:35"><name pos:start="135:35" pos:end="135:35">j</name></expr>]</index></name><operator pos:start="135:37" pos:end="135:38">-&gt;</operator><name pos:start="135:39" pos:end="135:55">nb_stream_indexes</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="139:9" pos:end="141:56"><if pos:start="139:9" pos:end="141:56">if <condition pos:start="139:12" pos:end="139:35">(<expr pos:start="139:13" pos:end="139:34"><name pos:start="139:13" pos:end="139:17">total</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:34"><name pos:start="139:21" pos:end="139:22">ic</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:34">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="141:13" pos:end="141:56"><block_content pos:start="141:13" pos:end="141:56">

            <expr_stmt pos:start="141:13" pos:end="141:56"><expr pos:start="141:13" pos:end="141:55"><call pos:start="141:13" pos:end="141:55"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="141:55">(<argument pos:start="141:20" pos:end="141:23"><expr pos:start="141:20" pos:end="141:23"><name pos:start="141:20" pos:end="141:23">NULL</name></expr></argument>, <argument pos:start="141:26" pos:end="141:36"><expr pos:start="141:26" pos:end="141:36"><name pos:start="141:26" pos:end="141:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="141:39" pos:end="141:54"><expr pos:start="141:39" pos:end="141:54"><literal type="string" pos:start="141:39" pos:end="141:54">"  No Program\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="145:5" pos:end="149:56">for<control pos:start="145:8" pos:end="145:33">(<init pos:start="145:9" pos:end="145:12"><expr pos:start="145:9" pos:end="145:11"><name pos:start="145:9" pos:end="145:9">i</name><operator pos:start="145:10" pos:end="145:10">=</operator><literal type="number" pos:start="145:11" pos:end="145:11">0</literal></expr>;</init><condition pos:start="145:13" pos:end="145:29"><expr pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:13">i</name><operator pos:start="145:14" pos:end="145:14">&lt;</operator><name pos:start="145:15" pos:end="145:28"><name pos:start="145:15" pos:end="145:16">ic</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:28">nb_streams</name></name></expr>;</condition><incr pos:start="145:30" pos:end="145:32"><expr pos:start="145:30" pos:end="145:32"><name pos:start="145:30" pos:end="145:30">i</name><operator pos:start="145:31" pos:end="145:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="147:9" pos:end="149:56"><block_content pos:start="147:9" pos:end="149:56">

        <if_stmt pos:start="147:9" pos:end="149:56"><if pos:start="147:9" pos:end="149:56">if <condition pos:start="147:12" pos:end="147:24">(<expr pos:start="147:13" pos:end="147:23"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:23"><name pos:start="147:14" pos:end="147:20">printed</name><index pos:start="147:21" pos:end="147:23">[<expr pos:start="147:22" pos:end="147:22"><name pos:start="147:22" pos:end="147:22">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:56"><block_content pos:start="149:13" pos:end="149:56">

            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><call pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:30">dump_stream_format</name><argument_list pos:start="149:31" pos:end="149:55">(<argument pos:start="149:32" pos:end="149:33"><expr pos:start="149:32" pos:end="149:33"><name pos:start="149:32" pos:end="149:33">ic</name></expr></argument>, <argument pos:start="149:36" pos:end="149:36"><expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">i</name></expr></argument>, <argument pos:start="149:39" pos:end="149:43"><expr pos:start="149:39" pos:end="149:43"><name pos:start="149:39" pos:end="149:43">index</name></expr></argument>, <argument pos:start="149:46" pos:end="149:54"><expr pos:start="149:46" pos:end="149:54"><name pos:start="149:46" pos:end="149:54">is_output</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="153:5" pos:end="153:21"><expr pos:start="153:5" pos:end="153:20"><call pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:11">av_free</name><argument_list pos:start="153:12" pos:end="153:20">(<argument pos:start="153:13" pos:end="153:19"><expr pos:start="153:13" pos:end="153:19"><name pos:start="153:13" pos:end="153:19">printed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
