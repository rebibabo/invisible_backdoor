<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7606.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">scsi_convert_sense</name><parameter_list pos:start="1:23" pos:end="3:57">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:38"><name pos:start="1:24" pos:end="1:30">uint8_t</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">in_buf</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:50">in_len</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:35"><decl pos:start="3:24" pos:end="3:35"><type pos:start="3:24" pos:end="3:35"><name pos:start="3:24" pos:end="3:30">uint8_t</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:35">buf</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:44"><decl pos:start="3:38" pos:end="3:44"><type pos:start="3:38" pos:end="3:44"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:44">len</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:56"><decl pos:start="3:47" pos:end="3:56"><type pos:start="3:47" pos:end="3:56"><name pos:start="3:47" pos:end="3:50">bool</name></type> <name pos:start="3:52" pos:end="3:56">fixed</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:56">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">SCSISense</name></type> <name pos:start="7:15" pos:end="7:19">sense</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:17">fixed_in</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:36"><expr pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:12">fixed_in</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <operator pos:start="13:16" pos:end="13:16">(</operator><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:22">in_buf</name><index pos:start="13:23" pos:end="13:25">[<expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr>]</index></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <literal type="number" pos:start="13:29" pos:end="13:29">2</literal><operator pos:start="13:30" pos:end="13:30">)</operator> <operator pos:start="13:32" pos:end="13:33">==</operator> <literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:36">(<expr pos:start="15:9" pos:end="15:35"><name pos:start="15:9" pos:end="15:14">in_len</name> <operator pos:start="15:16" pos:end="15:17">&amp;&amp;</operator> <name pos:start="15:19" pos:end="15:23">fixed</name> <operator pos:start="15:25" pos:end="15:26">==</operator> <name pos:start="15:28" pos:end="15:35">fixed_in</name></expr>)</condition> <block pos:start="15:38" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:32">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:14">memcpy</name><argument_list pos:start="17:15" pos:end="17:45">(<argument pos:start="17:16" pos:end="17:18"><expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">buf</name></expr></argument>, <argument pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:26">in_buf</name></expr></argument>, <argument pos:start="17:29" pos:end="17:44"><expr pos:start="17:29" pos:end="17:44"><call pos:start="17:29" pos:end="17:44"><name pos:start="17:29" pos:end="17:31">MIN</name><argument_list pos:start="17:32" pos:end="17:44">(<argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><name pos:start="17:33" pos:end="17:35">len</name></expr></argument>, <argument pos:start="17:38" pos:end="17:43"><expr pos:start="17:38" pos:end="17:43"><name pos:start="17:38" pos:end="17:43">in_len</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:32">return <expr pos:start="19:16" pos:end="19:31"><call pos:start="19:16" pos:end="19:31"><name pos:start="19:16" pos:end="19:18">MIN</name><argument_list pos:start="19:19" pos:end="19:31">(<argument pos:start="19:20" pos:end="19:22"><expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">len</name></expr></argument>, <argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">in_len</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:20">(<expr pos:start="25:9" pos:end="25:19"><name pos:start="25:9" pos:end="25:14">in_len</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:37">

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:13">sense</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:36"><name pos:start="27:17" pos:end="27:26">SENSE_CODE</name><argument_list pos:start="27:27" pos:end="27:36">(<argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:35">NO_SENSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:53">

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:13">sense</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:36">scsi_parse_sense_buf</name><argument_list pos:start="31:37" pos:end="31:52">(<argument pos:start="31:38" pos:end="31:43"><expr pos:start="31:38" pos:end="31:43"><name pos:start="31:38" pos:end="31:43">in_buf</name></expr></argument>, <argument pos:start="31:46" pos:end="31:51"><expr pos:start="31:46" pos:end="31:51"><name pos:start="31:46" pos:end="31:51">in_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="35:5" pos:end="35:56">return <expr pos:start="35:12" pos:end="35:55"><call pos:start="35:12" pos:end="35:55"><name pos:start="35:12" pos:end="35:31">scsi_build_sense_buf</name><argument_list pos:start="35:32" pos:end="35:55">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">buf</name></expr></argument>, <argument pos:start="35:38" pos:end="35:40"><expr pos:start="35:38" pos:end="35:40"><name pos:start="35:38" pos:end="35:40">len</name></expr></argument>, <argument pos:start="35:43" pos:end="35:47"><expr pos:start="35:43" pos:end="35:47"><name pos:start="35:43" pos:end="35:47">sense</name></expr></argument>, <argument pos:start="35:50" pos:end="35:54"><expr pos:start="35:50" pos:end="35:54"><name pos:start="35:50" pos:end="35:54">fixed</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
