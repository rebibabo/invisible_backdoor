<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4779.c" pos:tabs="8"><function pos:start="1:1" pos:end="337:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rtsp_fetch_packet</name><parameter_list pos:start="1:25" pos:end="1:59">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="337:1">{<block_content pos:start="5:5" pos:end="335:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">RTSPState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">rt</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">RTSPStream</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:23">rtsp_st</name></decl>, <decl pos:start="9:26" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:16"><modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:40">first_queue_st</name> <init pos:start="9:42" pos:end="9:47">= <expr pos:start="9:44" pos:end="9:47"><name pos:start="9:44" pos:end="9:47">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">wait_end</name> <init pos:start="11:22" pos:end="11:24">= <expr pos:start="11:24" pos:end="11:24"><literal type="number" pos:start="11:24" pos:end="11:24">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:43">(<expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:10">rt</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:19">nb_byes</name></name> <operator pos:start="15:21" pos:end="15:22">==</operator> <name pos:start="15:24" pos:end="15:42"><name pos:start="15:24" pos:end="15:25">rt</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:42">nb_rtsp_streams</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <return pos:start="17:9" pos:end="17:27">return <expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:50">/* get next frames from the same RTP packet */</comment>

    <if_stmt pos:start="23:5" pos:end="63:5"><if pos:start="23:5" pos:end="63:5">if <condition pos:start="23:8" pos:end="23:31">(<expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:10">rt</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:30">cur_transport_priv</name></name></expr>)</condition> <block pos:start="23:33" pos:end="63:5">{<block_content pos:start="25:9" pos:end="61:42">

        <if_stmt pos:start="25:9" pos:end="47:21"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:48">(<expr pos:start="25:13" pos:end="25:47"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:14">rt</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">transport</name></name> <operator pos:start="25:27" pos:end="25:28">==</operator> <name pos:start="25:30" pos:end="25:47">RTSP_TRANSPORT_RDT</name></expr>)</condition> <block pos:start="25:50" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:76">

            <expr_stmt pos:start="27:13" pos:end="27:76"><expr pos:start="27:13" pos:end="27:75"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:75"><name pos:start="27:19" pos:end="27:37">ff_rdt_parse_packet</name><argument_list pos:start="27:38" pos:end="27:75">(<argument pos:start="27:39" pos:end="27:60"><expr pos:start="27:39" pos:end="27:60"><name pos:start="27:39" pos:end="27:60"><name pos:start="27:39" pos:end="27:40">rt</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:60">cur_transport_priv</name></name></expr></argument>, <argument pos:start="27:63" pos:end="27:65"><expr pos:start="27:63" pos:end="27:65"><name pos:start="27:63" pos:end="27:65">pkt</name></expr></argument>, <argument pos:start="27:68" pos:end="27:71"><expr pos:start="27:68" pos:end="27:71"><name pos:start="27:68" pos:end="27:71">NULL</name></expr></argument>, <argument pos:start="27:74" pos:end="27:74"><expr pos:start="27:74" pos:end="27:74"><literal type="number" pos:start="27:74" pos:end="27:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="33:9">else if <condition pos:start="29:19" pos:end="29:55">(<expr pos:start="29:20" pos:end="29:54"><name pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:21">rt</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:32">transport</name></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <name pos:start="29:37" pos:end="29:54">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="29:57" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:76">

            <expr_stmt pos:start="31:13" pos:end="31:76"><expr pos:start="31:13" pos:end="31:75"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:75"><name pos:start="31:19" pos:end="31:37">ff_rtp_parse_packet</name><argument_list pos:start="31:38" pos:end="31:75">(<argument pos:start="31:39" pos:end="31:60"><expr pos:start="31:39" pos:end="31:60"><name pos:start="31:39" pos:end="31:60"><name pos:start="31:39" pos:end="31:40">rt</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:60">cur_transport_priv</name></name></expr></argument>, <argument pos:start="31:63" pos:end="31:65"><expr pos:start="31:63" pos:end="31:65"><name pos:start="31:63" pos:end="31:65">pkt</name></expr></argument>, <argument pos:start="31:68" pos:end="31:71"><expr pos:start="31:68" pos:end="31:71"><name pos:start="31:68" pos:end="31:71">NULL</name></expr></argument>, <argument pos:start="31:74" pos:end="31:74"><expr pos:start="31:74" pos:end="31:74"><literal type="number" pos:start="31:74" pos:end="31:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="45:9">else if <condition pos:start="33:19" pos:end="33:43">(<expr pos:start="33:20" pos:end="33:42"><name pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:21">rt</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:25">ts</name></name> <operator pos:start="33:27" pos:end="33:28">&amp;&amp;</operator> <name pos:start="33:30" pos:end="33:42">CONFIG_RTPDEC</name></expr>)</condition> <block pos:start="33:45" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:13">

            <expr_stmt pos:start="35:13" pos:end="35:120"><expr pos:start="35:13" pos:end="35:119"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:119"><name pos:start="35:19" pos:end="35:40">ff_mpegts_parse_packet</name><argument_list pos:start="35:41" pos:end="35:119">(<argument pos:start="35:42" pos:end="35:47"><expr pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:47"><name pos:start="35:42" pos:end="35:43">rt</name><operator pos:start="35:44" pos:end="35:45">-&gt;</operator><name pos:start="35:46" pos:end="35:47">ts</name></name></expr></argument>, <argument pos:start="35:50" pos:end="35:52"><expr pos:start="35:50" pos:end="35:52"><name pos:start="35:50" pos:end="35:52">pkt</name></expr></argument>, <argument pos:start="35:55" pos:end="35:83"><expr pos:start="35:55" pos:end="35:83"><name pos:start="35:55" pos:end="35:65"><name pos:start="35:55" pos:end="35:56">rt</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:65">recvbuf</name></name> <operator pos:start="35:67" pos:end="35:67">+</operator> <name pos:start="35:69" pos:end="35:83"><name pos:start="35:69" pos:end="35:70">rt</name><operator pos:start="35:71" pos:end="35:72">-&gt;</operator><name pos:start="35:73" pos:end="35:83">recvbuf_pos</name></name></expr></argument>, <argument pos:start="35:86" pos:end="35:118"><expr pos:start="35:86" pos:end="35:118"><name pos:start="35:86" pos:end="35:100"><name pos:start="35:86" pos:end="35:87">rt</name><operator pos:start="35:88" pos:end="35:89">-&gt;</operator><name pos:start="35:90" pos:end="35:100">recvbuf_len</name></name> <operator pos:start="35:102" pos:end="35:102">-</operator> <name pos:start="35:104" pos:end="35:118"><name pos:start="35:104" pos:end="35:105">rt</name><operator pos:start="35:106" pos:end="35:107">-&gt;</operator><name pos:start="35:108" pos:end="35:118">recvbuf_pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:22">&gt;=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>)</condition> <block pos:start="37:27" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:56">

                <expr_stmt pos:start="39:17" pos:end="39:39"><expr pos:start="39:17" pos:end="39:38"><name pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:18">rt</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:31">recvbuf_pos</name></name> <operator pos:start="39:33" pos:end="39:34">+=</operator> <name pos:start="39:36" pos:end="39:38">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:56"><expr pos:start="41:17" pos:end="41:55"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:24">rt</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:37">recvbuf_pos</name></name> <operator pos:start="41:39" pos:end="41:39">&lt;</operator> <name pos:start="41:41" pos:end="41:55"><name pos:start="41:41" pos:end="41:42">rt</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:55">recvbuf_len</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="45:11" pos:end="47:21">else<block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <operator pos:start="47:19" pos:end="47:19">-</operator><literal type="number" pos:start="47:20" pos:end="47:20">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="49:9" pos:end="61:42"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>)</condition> <block pos:start="49:23" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:21">

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:14">rt</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:34">cur_transport_priv</name></name> <operator pos:start="51:36" pos:end="51:36">=</operator> <name pos:start="51:38" pos:end="51:41">NULL</name></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:21">return <expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="59:9">else if <condition pos:start="55:19" pos:end="55:28">(<expr pos:start="55:20" pos:end="55:27"><name pos:start="55:20" pos:end="55:22">ret</name> <operator pos:start="55:24" pos:end="55:25">==</operator> <literal type="number" pos:start="55:27" pos:end="55:27">1</literal></expr>)</condition> <block pos:start="55:30" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:21">

            <return pos:start="57:13" pos:end="57:21">return <expr pos:start="57:20" pos:end="57:20"><literal type="number" pos:start="57:20" pos:end="57:20">0</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="61:42">else<block type="pseudo" pos:start="61:13" pos:end="61:42"><block_content pos:start="61:13" pos:end="61:42">

            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:14">rt</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:34">cur_transport_priv</name></name> <operator pos:start="61:36" pos:end="61:36">=</operator> <name pos:start="61:38" pos:end="61:41">NULL</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">redo</name>:</label>

    <if_stmt pos:start="69:5" pos:end="111:5"><if pos:start="69:5" pos:end="111:5">if <condition pos:start="69:8" pos:end="69:44">(<expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:10">rt</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:21">transport</name></name> <operator pos:start="69:23" pos:end="69:24">==</operator> <name pos:start="69:26" pos:end="69:43">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="69:46" pos:end="111:5">{<block_content pos:start="71:9" pos:end="109:9">

        <decl_stmt pos:start="71:9" pos:end="71:14"><decl pos:start="71:9" pos:end="71:13"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="73:9" pos:end="73:37"><decl pos:start="73:9" pos:end="73:36"><type pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:15">int64_t</name></type> <name pos:start="73:17" pos:end="73:32">first_queue_time</name> <init pos:start="73:34" pos:end="73:36">= <expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="75:9" pos:end="97:9">for <control pos:start="75:13" pos:end="75:49">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:44"><expr pos:start="75:21" pos:end="75:43"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:43"><name pos:start="75:25" pos:end="75:26">rt</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:43">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:46">i</name><operator pos:start="75:47" pos:end="75:48">++</operator></expr></incr>)</control> <block pos:start="75:51" pos:end="97:9">{<block_content pos:start="77:13" pos:end="95:13">

            <decl_stmt pos:start="77:13" pos:end="77:74"><decl pos:start="77:13" pos:end="77:73"><type pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:27">RTPDemuxContext</name> <modifier pos:start="77:29" pos:end="77:29">*</modifier></type><name pos:start="77:30" pos:end="77:35">rtpctx</name> <init pos:start="77:37" pos:end="77:73">= <expr pos:start="77:39" pos:end="77:73"><name pos:start="77:39" pos:end="77:57"><name pos:start="77:39" pos:end="77:40">rt</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:54">rtsp_streams</name><index pos:start="77:55" pos:end="77:57">[<expr pos:start="77:56" pos:end="77:56"><name pos:start="77:56" pos:end="77:56">i</name></expr>]</index></name><operator pos:start="77:58" pos:end="77:59">-&gt;</operator><name pos:start="77:60" pos:end="77:73">transport_priv</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:31"><decl pos:start="79:13" pos:end="79:30"><type pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:19">int64_t</name></type> <name pos:start="79:21" pos:end="79:30">queue_time</name></decl>;</decl_stmt>

            <if_stmt pos:start="81:13" pos:end="83:25"><if pos:start="81:13" pos:end="83:25">if <condition pos:start="81:16" pos:end="81:24">(<expr pos:start="81:17" pos:end="81:23"><operator pos:start="81:17" pos:end="81:17">!</operator><name pos:start="81:18" pos:end="81:23">rtpctx</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:25"><block_content pos:start="83:17" pos:end="83:25">

                <continue pos:start="83:17" pos:end="83:25">continue;</continue></block_content></block></if></if_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:59"><expr pos:start="85:13" pos:end="85:58"><name pos:start="85:13" pos:end="85:22">queue_time</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <call pos:start="85:26" pos:end="85:58"><name pos:start="85:26" pos:end="85:50">ff_rtp_queued_packet_time</name><argument_list pos:start="85:51" pos:end="85:58">(<argument pos:start="85:52" pos:end="85:57"><expr pos:start="85:52" pos:end="85:57"><name pos:start="85:52" pos:end="85:57">rtpctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="95:13"><if pos:start="87:13" pos:end="95:13">if <condition pos:start="87:16" pos:end="89:50">(<expr pos:start="87:17" pos:end="89:49"><name pos:start="87:17" pos:end="87:26">queue_time</name> <operator pos:start="87:28" pos:end="87:29">&amp;&amp;</operator> <operator pos:start="87:31" pos:end="87:31">(</operator><name pos:start="87:32" pos:end="87:41">queue_time</name> <operator pos:start="87:43" pos:end="87:43">-</operator> <name pos:start="87:45" pos:end="87:60">first_queue_time</name> <operator pos:start="87:62" pos:end="87:62">&lt;</operator> <literal type="number" pos:start="87:64" pos:end="87:64">0</literal> <operator pos:start="87:66" pos:end="87:67">||</operator>

                               <operator pos:start="89:32" pos:end="89:32">!</operator><name pos:start="89:33" pos:end="89:48">first_queue_time</name><operator pos:start="89:49" pos:end="89:49">)</operator></expr>)</condition> <block pos:start="89:52" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:55">

                <expr_stmt pos:start="91:17" pos:end="91:46"><expr pos:start="91:17" pos:end="91:45"><name pos:start="91:17" pos:end="91:32">first_queue_time</name> <operator pos:start="91:34" pos:end="91:34">=</operator> <name pos:start="91:36" pos:end="91:45">queue_time</name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:55"><expr pos:start="93:17" pos:end="93:54"><name pos:start="93:17" pos:end="93:30">first_queue_st</name>   <operator pos:start="93:34" pos:end="93:34">=</operator> <name pos:start="93:36" pos:end="93:54"><name pos:start="93:36" pos:end="93:37">rt</name><operator pos:start="93:38" pos:end="93:39">-&gt;</operator><name pos:start="93:40" pos:end="93:51">rtsp_streams</name><index pos:start="93:52" pos:end="93:54">[<expr pos:start="93:53" pos:end="93:53"><name pos:start="93:53" pos:end="93:53">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="99:9" pos:end="109:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:29">(<expr pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:28">first_queue_time</name></expr>)</condition> <block pos:start="99:31" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:55">

            <expr_stmt pos:start="101:13" pos:end="101:55"><expr pos:start="101:13" pos:end="101:54"><name pos:start="101:13" pos:end="101:20">wait_end</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:39">first_queue_time</name> <operator pos:start="101:41" pos:end="101:41">+</operator> <name pos:start="101:43" pos:end="101:54"><name pos:start="101:43" pos:end="101:43">s</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:54">max_delay</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="109:9">else <block pos:start="103:16" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:34">

            <expr_stmt pos:start="105:13" pos:end="105:25"><expr pos:start="105:13" pos:end="105:24"><name pos:start="105:13" pos:end="105:20">wait_end</name> <operator pos:start="105:22" pos:end="105:22">=</operator> <literal type="number" pos:start="105:24" pos:end="105:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:34"><expr pos:start="107:13" pos:end="107:33"><name pos:start="107:13" pos:end="107:26">first_queue_st</name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:33">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:30">/* read next RTP packet */</comment>

    <if_stmt pos:start="117:5" pos:end="125:5"><if pos:start="117:5" pos:end="125:5">if <condition pos:start="117:8" pos:end="117:21">(<expr pos:start="117:9" pos:end="117:20"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:20"><name pos:start="117:10" pos:end="117:11">rt</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:20">recvbuf</name></name></expr>)</condition> <block pos:start="117:23" pos:end="125:5">{<block_content pos:start="119:9" pos:end="123:35">

        <expr_stmt pos:start="119:9" pos:end="119:46"><expr pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:19"><name pos:start="119:9" pos:end="119:10">rt</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:19">recvbuf</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:45"><name pos:start="119:23" pos:end="119:31">av_malloc</name><argument_list pos:start="119:32" pos:end="119:45">(<argument pos:start="119:33" pos:end="119:44"><expr pos:start="119:33" pos:end="119:44"><name pos:start="119:33" pos:end="119:44">RECVBUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:35"><if pos:start="121:9" pos:end="123:35">if <condition pos:start="121:12" pos:end="121:25">(<expr pos:start="121:13" pos:end="121:24"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:24"><name pos:start="121:14" pos:end="121:15">rt</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:24">recvbuf</name></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:35"><block_content pos:start="123:13" pos:end="123:35">

            <return pos:start="123:13" pos:end="123:35">return <expr pos:start="123:20" pos:end="123:34"><call pos:start="123:20" pos:end="123:34"><name pos:start="123:20" pos:end="123:26">AVERROR</name><argument_list pos:start="123:27" pos:end="123:34">(<argument pos:start="123:28" pos:end="123:33"><expr pos:start="123:28" pos:end="123:33"><name pos:start="123:28" pos:end="123:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="129:5" pos:end="175:5">switch<condition pos:start="129:11" pos:end="129:31">(<expr pos:start="129:12" pos:end="129:30"><name pos:start="129:12" pos:end="129:30"><name pos:start="129:12" pos:end="129:13">rt</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:30">lower_transport</name></name></expr>)</condition> <block pos:start="129:33" pos:end="175:5">{<block_content pos:start="131:5" pos:end="173:14">

    <default pos:start="131:5" pos:end="134:0">default:</default>

<cpp:if pos:start="133:1" pos:end="133:23">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:23"><name pos:start="133:5" pos:end="133:23">CONFIG_RTSP_DEMUXER</name></expr></cpp:if>

    <case pos:start="135:5" pos:end="135:34">case <expr pos:start="135:10" pos:end="135:33"><name pos:start="135:10" pos:end="135:33">RTSP_LOWER_TRANSPORT_TCP</name></expr>:</case>

        <expr_stmt pos:start="137:9" pos:end="137:78"><expr pos:start="137:9" pos:end="137:77"><name pos:start="137:9" pos:end="137:11">len</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <call pos:start="137:15" pos:end="137:77"><name pos:start="137:15" pos:end="137:37">ff_rtsp_tcp_read_packet</name><argument_list pos:start="137:38" pos:end="137:77">(<argument pos:start="137:39" pos:end="137:39"><expr pos:start="137:39" pos:end="137:39"><name pos:start="137:39" pos:end="137:39">s</name></expr></argument>, <argument pos:start="137:42" pos:end="137:49"><expr pos:start="137:42" pos:end="137:49"><operator pos:start="137:42" pos:end="137:42">&amp;</operator><name pos:start="137:43" pos:end="137:49">rtsp_st</name></expr></argument>, <argument pos:start="137:52" pos:end="137:62"><expr pos:start="137:52" pos:end="137:62"><name pos:start="137:52" pos:end="137:62"><name pos:start="137:52" pos:end="137:53">rt</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:62">recvbuf</name></name></expr></argument>, <argument pos:start="137:65" pos:end="137:76"><expr pos:start="137:65" pos:end="137:76"><name pos:start="137:65" pos:end="137:76">RECVBUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="139:9" pos:end="142:0">break;</break>

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

    <case pos:start="143:5" pos:end="143:34">case <expr pos:start="143:10" pos:end="143:33"><name pos:start="143:10" pos:end="143:33">RTSP_LOWER_TRANSPORT_UDP</name></expr>:</case>

    <case pos:start="145:5" pos:end="145:44">case <expr pos:start="145:10" pos:end="145:43"><name pos:start="145:10" pos:end="145:43">RTSP_LOWER_TRANSPORT_UDP_MULTICAST</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="147:80"><expr pos:start="147:9" pos:end="147:79"><name pos:start="147:9" pos:end="147:11">len</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <call pos:start="147:15" pos:end="147:79"><name pos:start="147:15" pos:end="147:29">udp_read_packet</name><argument_list pos:start="147:30" pos:end="147:79">(<argument pos:start="147:31" pos:end="147:31"><expr pos:start="147:31" pos:end="147:31"><name pos:start="147:31" pos:end="147:31">s</name></expr></argument>, <argument pos:start="147:34" pos:end="147:41"><expr pos:start="147:34" pos:end="147:41"><operator pos:start="147:34" pos:end="147:34">&amp;</operator><name pos:start="147:35" pos:end="147:41">rtsp_st</name></expr></argument>, <argument pos:start="147:44" pos:end="147:54"><expr pos:start="147:44" pos:end="147:54"><name pos:start="147:44" pos:end="147:54"><name pos:start="147:44" pos:end="147:45">rt</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:54">recvbuf</name></name></expr></argument>, <argument pos:start="147:57" pos:end="147:68"><expr pos:start="147:57" pos:end="147:68"><name pos:start="147:57" pos:end="147:68">RECVBUF_SIZE</name></expr></argument>, <argument pos:start="147:71" pos:end="147:78"><expr pos:start="147:71" pos:end="147:78"><name pos:start="147:71" pos:end="147:78">wait_end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:99"><if pos:start="149:9" pos:end="151:99">if <condition pos:start="149:12" pos:end="149:86">(<expr pos:start="149:13" pos:end="149:85"><name pos:start="149:13" pos:end="149:15">len</name> <operator pos:start="149:17" pos:end="149:17">&gt;</operator> <literal type="number" pos:start="149:19" pos:end="149:19">0</literal> <operator pos:start="149:21" pos:end="149:22">&amp;&amp;</operator> <name pos:start="149:24" pos:end="149:46"><name pos:start="149:24" pos:end="149:30">rtsp_st</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:46">transport_priv</name></name> <operator pos:start="149:48" pos:end="149:49">&amp;&amp;</operator> <name pos:start="149:51" pos:end="149:63"><name pos:start="149:51" pos:end="149:52">rt</name><operator pos:start="149:53" pos:end="149:54">-&gt;</operator><name pos:start="149:55" pos:end="149:63">transport</name></name> <operator pos:start="149:65" pos:end="149:66">==</operator> <name pos:start="149:68" pos:end="149:85">RTSP_TRANSPORT_RTP</name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:99"><block_content pos:start="151:13" pos:end="151:99">

            <expr_stmt pos:start="151:13" pos:end="151:99"><expr pos:start="151:13" pos:end="151:98"><call pos:start="151:13" pos:end="151:98"><name pos:start="151:13" pos:end="151:41">ff_rtp_check_and_send_back_rr</name><argument_list pos:start="151:42" pos:end="151:98">(<argument pos:start="151:43" pos:end="151:65"><expr pos:start="151:43" pos:end="151:65"><name pos:start="151:43" pos:end="151:65"><name pos:start="151:43" pos:end="151:49">rtsp_st</name><operator pos:start="151:50" pos:end="151:51">-&gt;</operator><name pos:start="151:52" pos:end="151:65">transport_priv</name></name></expr></argument>, <argument pos:start="151:68" pos:end="151:86"><expr pos:start="151:68" pos:end="151:86"><name pos:start="151:68" pos:end="151:86"><name pos:start="151:68" pos:end="151:74">rtsp_st</name><operator pos:start="151:75" pos:end="151:76">-&gt;</operator><name pos:start="151:77" pos:end="151:86">rtp_handle</name></name></expr></argument>, <argument pos:start="151:89" pos:end="151:92"><expr pos:start="151:89" pos:end="151:92"><name pos:start="151:89" pos:end="151:92">NULL</name></expr></argument>, <argument pos:start="151:95" pos:end="151:97"><expr pos:start="151:95" pos:end="151:97"><name pos:start="151:95" pos:end="151:97">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:37">case <expr pos:start="155:10" pos:end="155:36"><name pos:start="155:10" pos:end="155:36">RTSP_LOWER_TRANSPORT_CUSTOM</name></expr>:</case>

        <if_stmt pos:start="157:9" pos:end="165:70"><if pos:start="157:9" pos:end="161:34">if <condition pos:start="157:12" pos:end="159:57">(<expr pos:start="157:13" pos:end="159:56"><name pos:start="157:13" pos:end="157:26">first_queue_st</name> <operator pos:start="157:28" pos:end="157:29">&amp;&amp;</operator> <name pos:start="157:31" pos:end="157:43"><name pos:start="157:31" pos:end="157:32">rt</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:43">transport</name></name> <operator pos:start="157:45" pos:end="157:46">==</operator> <name pos:start="157:48" pos:end="157:65">RTSP_TRANSPORT_RTP</name> <operator pos:start="157:67" pos:end="157:68">&amp;&amp;</operator>

            <name pos:start="159:13" pos:end="159:20">wait_end</name> <operator pos:start="159:22" pos:end="159:23">&amp;&amp;</operator> <name pos:start="159:25" pos:end="159:32">wait_end</name> <operator pos:start="159:34" pos:end="159:34">&lt;</operator> <call pos:start="159:36" pos:end="159:56"><name pos:start="159:36" pos:end="159:54">av_gettime_relative</name><argument_list pos:start="159:55" pos:end="159:56">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="161:13" pos:end="161:34"><block_content pos:start="161:13" pos:end="161:34">

            <expr_stmt pos:start="161:13" pos:end="161:34"><expr pos:start="161:13" pos:end="161:33"><name pos:start="161:13" pos:end="161:15">len</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <call pos:start="161:19" pos:end="161:33"><name pos:start="161:19" pos:end="161:25">AVERROR</name><argument_list pos:start="161:26" pos:end="161:33">(<argument pos:start="161:27" pos:end="161:32"><expr pos:start="161:27" pos:end="161:32"><name pos:start="161:27" pos:end="161:32">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="163:9" pos:end="165:70">else<block type="pseudo" pos:start="165:13" pos:end="165:70"><block_content pos:start="165:13" pos:end="165:70">

            <expr_stmt pos:start="165:13" pos:end="165:70"><expr pos:start="165:13" pos:end="165:69"><name pos:start="165:13" pos:end="165:15">len</name> <operator pos:start="165:17" pos:end="165:17">=</operator> <call pos:start="165:19" pos:end="165:69"><name pos:start="165:19" pos:end="165:35">ffio_read_partial</name><argument_list pos:start="165:36" pos:end="165:69">(<argument pos:start="165:37" pos:end="165:41"><expr pos:start="165:37" pos:end="165:41"><name pos:start="165:37" pos:end="165:41"><name pos:start="165:37" pos:end="165:37">s</name><operator pos:start="165:38" pos:end="165:39">-&gt;</operator><name pos:start="165:40" pos:end="165:41">pb</name></name></expr></argument>, <argument pos:start="165:44" pos:end="165:54"><expr pos:start="165:44" pos:end="165:54"><name pos:start="165:44" pos:end="165:54"><name pos:start="165:44" pos:end="165:45">rt</name><operator pos:start="165:46" pos:end="165:47">-&gt;</operator><name pos:start="165:48" pos:end="165:54">recvbuf</name></name></expr></argument>, <argument pos:start="165:57" pos:end="165:68"><expr pos:start="165:57" pos:end="165:68"><name pos:start="165:57" pos:end="165:68">RECVBUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:57"><expr pos:start="167:9" pos:end="167:56"><name pos:start="167:9" pos:end="167:11">len</name> <operator pos:start="167:13" pos:end="167:13">=</operator> <call pos:start="167:15" pos:end="167:56"><name pos:start="167:15" pos:end="167:25">pick_stream</name><argument_list pos:start="167:26" pos:end="167:56">(<argument pos:start="167:27" pos:end="167:27"><expr pos:start="167:27" pos:end="167:27"><name pos:start="167:27" pos:end="167:27">s</name></expr></argument>, <argument pos:start="167:30" pos:end="167:37"><expr pos:start="167:30" pos:end="167:37"><operator pos:start="167:30" pos:end="167:30">&amp;</operator><name pos:start="167:31" pos:end="167:37">rtsp_st</name></expr></argument>, <argument pos:start="167:40" pos:end="167:50"><expr pos:start="167:40" pos:end="167:50"><name pos:start="167:40" pos:end="167:50"><name pos:start="167:40" pos:end="167:41">rt</name><operator pos:start="167:42" pos:end="167:43">-&gt;</operator><name pos:start="167:44" pos:end="167:50">recvbuf</name></name></expr></argument>, <argument pos:start="167:53" pos:end="167:55"><expr pos:start="167:53" pos:end="167:55"><name pos:start="167:53" pos:end="167:55">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="171:85"><if pos:start="169:9" pos:end="171:85">if <condition pos:start="169:12" pos:end="169:86">(<expr pos:start="169:13" pos:end="169:85"><name pos:start="169:13" pos:end="169:15">len</name> <operator pos:start="169:17" pos:end="169:17">&gt;</operator> <literal type="number" pos:start="169:19" pos:end="169:19">0</literal> <operator pos:start="169:21" pos:end="169:22">&amp;&amp;</operator> <name pos:start="169:24" pos:end="169:46"><name pos:start="169:24" pos:end="169:30">rtsp_st</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:46">transport_priv</name></name> <operator pos:start="169:48" pos:end="169:49">&amp;&amp;</operator> <name pos:start="169:51" pos:end="169:63"><name pos:start="169:51" pos:end="169:52">rt</name><operator pos:start="169:53" pos:end="169:54">-&gt;</operator><name pos:start="169:55" pos:end="169:63">transport</name></name> <operator pos:start="169:65" pos:end="169:66">==</operator> <name pos:start="169:68" pos:end="169:85">RTSP_TRANSPORT_RTP</name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:85"><block_content pos:start="171:13" pos:end="171:85">

            <expr_stmt pos:start="171:13" pos:end="171:85"><expr pos:start="171:13" pos:end="171:84"><call pos:start="171:13" pos:end="171:84"><name pos:start="171:13" pos:end="171:41">ff_rtp_check_and_send_back_rr</name><argument_list pos:start="171:42" pos:end="171:84">(<argument pos:start="171:43" pos:end="171:65"><expr pos:start="171:43" pos:end="171:65"><name pos:start="171:43" pos:end="171:65"><name pos:start="171:43" pos:end="171:49">rtsp_st</name><operator pos:start="171:50" pos:end="171:51">-&gt;</operator><name pos:start="171:52" pos:end="171:65">transport_priv</name></name></expr></argument>, <argument pos:start="171:68" pos:end="171:71"><expr pos:start="171:68" pos:end="171:71"><name pos:start="171:68" pos:end="171:71">NULL</name></expr></argument>, <argument pos:start="171:74" pos:end="171:78"><expr pos:start="171:74" pos:end="171:78"><name pos:start="171:74" pos:end="171:78"><name pos:start="171:74" pos:end="171:74">s</name><operator pos:start="171:75" pos:end="171:76">-&gt;</operator><name pos:start="171:77" pos:end="171:78">pb</name></name></expr></argument>, <argument pos:start="171:81" pos:end="171:83"><expr pos:start="171:81" pos:end="171:83"><name pos:start="171:81" pos:end="171:83">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="177:5" pos:end="187:5"><if pos:start="177:5" pos:end="187:5">if <condition pos:start="177:8" pos:end="179:44">(<expr pos:start="177:9" pos:end="179:43"><name pos:start="177:9" pos:end="177:11">len</name> <operator pos:start="177:13" pos:end="177:14">==</operator> <call pos:start="177:16" pos:end="177:30"><name pos:start="177:16" pos:end="177:22">AVERROR</name><argument_list pos:start="177:23" pos:end="177:30">(<argument pos:start="177:24" pos:end="177:29"><expr pos:start="177:24" pos:end="177:29"><name pos:start="177:24" pos:end="177:29">EAGAIN</name></expr></argument>)</argument_list></call> <operator pos:start="177:32" pos:end="177:33">&amp;&amp;</operator> <name pos:start="177:35" pos:end="177:48">first_queue_st</name> <operator pos:start="177:50" pos:end="177:51">&amp;&amp;</operator>

        <name pos:start="179:9" pos:end="179:21"><name pos:start="179:9" pos:end="179:10">rt</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:21">transport</name></name> <operator pos:start="179:23" pos:end="179:24">==</operator> <name pos:start="179:26" pos:end="179:43">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="179:46" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:17">

        <expr_stmt pos:start="181:9" pos:end="181:33"><expr pos:start="181:9" pos:end="181:32"><name pos:start="181:9" pos:end="181:15">rtsp_st</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <name pos:start="181:19" pos:end="181:32">first_queue_st</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:73"><expr pos:start="183:9" pos:end="183:72"><name pos:start="183:9" pos:end="183:11">ret</name> <operator pos:start="183:13" pos:end="183:13">=</operator> <call pos:start="183:15" pos:end="183:72"><name pos:start="183:15" pos:end="183:33">ff_rtp_parse_packet</name><argument_list pos:start="183:34" pos:end="183:72">(<argument pos:start="183:35" pos:end="183:57"><expr pos:start="183:35" pos:end="183:57"><name pos:start="183:35" pos:end="183:57"><name pos:start="183:35" pos:end="183:41">rtsp_st</name><operator pos:start="183:42" pos:end="183:43">-&gt;</operator><name pos:start="183:44" pos:end="183:57">transport_priv</name></name></expr></argument>, <argument pos:start="183:60" pos:end="183:62"><expr pos:start="183:60" pos:end="183:62"><name pos:start="183:60" pos:end="183:62">pkt</name></expr></argument>, <argument pos:start="183:65" pos:end="183:68"><expr pos:start="183:65" pos:end="183:68"><name pos:start="183:65" pos:end="183:68">NULL</name></expr></argument>, <argument pos:start="183:71" pos:end="183:71"><expr pos:start="183:71" pos:end="183:71"><literal type="number" pos:start="183:71" pos:end="183:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="185:9" pos:end="185:17">goto <name pos:start="185:14" pos:end="185:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="189:5" pos:end="191:19"><if pos:start="189:5" pos:end="191:19">if <condition pos:start="189:8" pos:end="189:16">(<expr pos:start="189:9" pos:end="189:15"><name pos:start="189:9" pos:end="189:11">len</name> <operator pos:start="189:13" pos:end="189:13">&lt;</operator> <literal type="number" pos:start="189:15" pos:end="189:15">0</literal></expr>)</condition><block type="pseudo" pos:start="191:9" pos:end="191:19"><block_content pos:start="191:9" pos:end="191:19">

        <return pos:start="191:9" pos:end="191:19">return <expr pos:start="191:16" pos:end="191:18"><name pos:start="191:16" pos:end="191:18">len</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="193:5" pos:end="195:27"><if pos:start="193:5" pos:end="195:27">if <condition pos:start="193:8" pos:end="193:17">(<expr pos:start="193:9" pos:end="193:16"><name pos:start="193:9" pos:end="193:11">len</name> <operator pos:start="193:13" pos:end="193:14">==</operator> <literal type="number" pos:start="193:16" pos:end="193:16">0</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:27"><block_content pos:start="195:9" pos:end="195:27">

        <return pos:start="195:9" pos:end="195:27">return <expr pos:start="195:16" pos:end="195:26"><name pos:start="195:16" pos:end="195:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="197:5" pos:end="319:5"><if pos:start="197:5" pos:end="201:5">if <condition pos:start="197:8" pos:end="197:44">(<expr pos:start="197:9" pos:end="197:43"><name pos:start="197:9" pos:end="197:21"><name pos:start="197:9" pos:end="197:10">rt</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:21">transport</name></name> <operator pos:start="197:23" pos:end="197:24">==</operator> <name pos:start="197:26" pos:end="197:43">RTSP_TRANSPORT_RDT</name></expr>)</condition> <block pos:start="197:46" pos:end="201:5">{<block_content pos:start="199:9" pos:end="199:83">

        <expr_stmt pos:start="199:9" pos:end="199:83"><expr pos:start="199:9" pos:end="199:82"><name pos:start="199:9" pos:end="199:11">ret</name> <operator pos:start="199:13" pos:end="199:13">=</operator> <call pos:start="199:15" pos:end="199:82"><name pos:start="199:15" pos:end="199:33">ff_rdt_parse_packet</name><argument_list pos:start="199:34" pos:end="199:82">(<argument pos:start="199:35" pos:end="199:57"><expr pos:start="199:35" pos:end="199:57"><name pos:start="199:35" pos:end="199:57"><name pos:start="199:35" pos:end="199:41">rtsp_st</name><operator pos:start="199:42" pos:end="199:43">-&gt;</operator><name pos:start="199:44" pos:end="199:57">transport_priv</name></name></expr></argument>, <argument pos:start="199:60" pos:end="199:62"><expr pos:start="199:60" pos:end="199:62"><name pos:start="199:60" pos:end="199:62">pkt</name></expr></argument>, <argument pos:start="199:65" pos:end="199:76"><expr pos:start="199:65" pos:end="199:76"><operator pos:start="199:65" pos:end="199:65">&amp;</operator><name pos:start="199:66" pos:end="199:76"><name pos:start="199:66" pos:end="199:67">rt</name><operator pos:start="199:68" pos:end="199:69">-&gt;</operator><name pos:start="199:70" pos:end="199:76">recvbuf</name></name></expr></argument>, <argument pos:start="199:79" pos:end="199:81"><expr pos:start="199:79" pos:end="199:81"><name pos:start="199:79" pos:end="199:81">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="201:7" pos:end="291:5">else if <condition pos:start="201:15" pos:end="201:51">(<expr pos:start="201:16" pos:end="201:50"><name pos:start="201:16" pos:end="201:28"><name pos:start="201:16" pos:end="201:17">rt</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:28">transport</name></name> <operator pos:start="201:30" pos:end="201:31">==</operator> <name pos:start="201:33" pos:end="201:50">RTSP_TRANSPORT_RTP</name></expr>)</condition> <block pos:start="201:53" pos:end="291:5">{<block_content pos:start="203:9" pos:end="289:9">

        <expr_stmt pos:start="203:9" pos:end="203:83"><expr pos:start="203:9" pos:end="203:82"><name pos:start="203:9" pos:end="203:11">ret</name> <operator pos:start="203:13" pos:end="203:13">=</operator> <call pos:start="203:15" pos:end="203:82"><name pos:start="203:15" pos:end="203:33">ff_rtp_parse_packet</name><argument_list pos:start="203:34" pos:end="203:82">(<argument pos:start="203:35" pos:end="203:57"><expr pos:start="203:35" pos:end="203:57"><name pos:start="203:35" pos:end="203:57"><name pos:start="203:35" pos:end="203:41">rtsp_st</name><operator pos:start="203:42" pos:end="203:43">-&gt;</operator><name pos:start="203:44" pos:end="203:57">transport_priv</name></name></expr></argument>, <argument pos:start="203:60" pos:end="203:62"><expr pos:start="203:60" pos:end="203:62"><name pos:start="203:60" pos:end="203:62">pkt</name></expr></argument>, <argument pos:start="203:65" pos:end="203:76"><expr pos:start="203:65" pos:end="203:76"><operator pos:start="203:65" pos:end="203:65">&amp;</operator><name pos:start="203:66" pos:end="203:76"><name pos:start="203:66" pos:end="203:67">rt</name><operator pos:start="203:68" pos:end="203:69">-&gt;</operator><name pos:start="203:70" pos:end="203:76">recvbuf</name></name></expr></argument>, <argument pos:start="203:79" pos:end="203:81"><expr pos:start="203:79" pos:end="203:81"><name pos:start="203:79" pos:end="203:81">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="205:9" pos:end="215:9"><if pos:start="205:9" pos:end="215:9">if <condition pos:start="205:12" pos:end="205:30">(<expr pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:19">rtsp_st</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:29">feedback</name></name></expr>)</condition> <block pos:start="205:32" pos:end="215:9">{<block_content pos:start="207:13" pos:end="213:88">

            <decl_stmt pos:start="207:13" pos:end="207:35"><decl pos:start="207:13" pos:end="207:34"><type pos:start="207:13" pos:end="207:25"><name pos:start="207:13" pos:end="207:23">AVIOContext</name> <modifier pos:start="207:25" pos:end="207:25">*</modifier></type><name pos:start="207:26" pos:end="207:27">pb</name> <init pos:start="207:29" pos:end="207:34">= <expr pos:start="207:31" pos:end="207:34"><name pos:start="207:31" pos:end="207:34">NULL</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="209:13" pos:end="211:27"><if pos:start="209:13" pos:end="211:27">if <condition pos:start="209:16" pos:end="209:67">(<expr pos:start="209:17" pos:end="209:66"><name pos:start="209:17" pos:end="209:35"><name pos:start="209:17" pos:end="209:18">rt</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:35">lower_transport</name></name> <operator pos:start="209:37" pos:end="209:38">==</operator> <name pos:start="209:40" pos:end="209:66">RTSP_LOWER_TRANSPORT_CUSTOM</name></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:27"><block_content pos:start="211:17" pos:end="211:27">

                <expr_stmt pos:start="211:17" pos:end="211:27"><expr pos:start="211:17" pos:end="211:26"><name pos:start="211:17" pos:end="211:18">pb</name> <operator pos:start="211:20" pos:end="211:20">=</operator> <name pos:start="211:22" pos:end="211:26"><name pos:start="211:22" pos:end="211:22">s</name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:26">pb</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:88"><expr pos:start="213:13" pos:end="213:87"><call pos:start="213:13" pos:end="213:87"><name pos:start="213:13" pos:end="213:37">ff_rtp_send_rtcp_feedback</name><argument_list pos:start="213:38" pos:end="213:87">(<argument pos:start="213:39" pos:end="213:61"><expr pos:start="213:39" pos:end="213:61"><name pos:start="213:39" pos:end="213:61"><name pos:start="213:39" pos:end="213:45">rtsp_st</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:61">transport_priv</name></name></expr></argument>, <argument pos:start="213:64" pos:end="213:82"><expr pos:start="213:64" pos:end="213:82"><name pos:start="213:64" pos:end="213:82"><name pos:start="213:64" pos:end="213:70">rtsp_st</name><operator pos:start="213:71" pos:end="213:72">-&gt;</operator><name pos:start="213:73" pos:end="213:82">rtp_handle</name></name></expr></argument>, <argument pos:start="213:85" pos:end="213:86"><expr pos:start="213:85" pos:end="213:86"><name pos:start="213:85" pos:end="213:86">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="289:9"><if pos:start="217:9" pos:end="289:9">if <condition pos:start="217:12" pos:end="217:20">(<expr pos:start="217:13" pos:end="217:19"><name pos:start="217:13" pos:end="217:15">ret</name> <operator pos:start="217:17" pos:end="217:17">&lt;</operator> <literal type="number" pos:start="217:19" pos:end="217:19">0</literal></expr>)</condition> <block pos:start="217:22" pos:end="289:9">{<block_content pos:start="223:13" pos:end="287:13">

            <comment type="block" pos:start="219:13" pos:end="221:60">/* Either bad packet, or a RTCP packet. Check if the

             * first_rtcp_ntp_time field was initialized. */</comment>

            <decl_stmt pos:start="223:13" pos:end="223:62"><decl pos:start="223:13" pos:end="223:61"><type pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:27">RTPDemuxContext</name> <modifier pos:start="223:29" pos:end="223:29">*</modifier></type><name pos:start="223:30" pos:end="223:35">rtpctx</name> <init pos:start="223:37" pos:end="223:61">= <expr pos:start="223:39" pos:end="223:61"><name pos:start="223:39" pos:end="223:61"><name pos:start="223:39" pos:end="223:45">rtsp_st</name><operator pos:start="223:46" pos:end="223:47">-&gt;</operator><name pos:start="223:48" pos:end="223:61">transport_priv</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="225:13" pos:end="269:13"><if pos:start="225:13" pos:end="269:13">if <condition pos:start="225:16" pos:end="225:62">(<expr pos:start="225:17" pos:end="225:61"><name pos:start="225:17" pos:end="225:43"><name pos:start="225:17" pos:end="225:22">rtpctx</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:43">first_rtcp_ntp_time</name></name> <operator pos:start="225:45" pos:end="225:46">!=</operator> <name pos:start="225:48" pos:end="225:61">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="225:64" pos:end="269:13">{<block_content pos:start="235:17" pos:end="267:17">

                <comment type="block" pos:start="227:17" pos:end="233:34">/* first_rtcp_ntp_time has been initialized for this stream,

                 * copy the same value to all other uninitialized streams,

                 * in order to map their timestamp origin to the same ntp time

                 * as this one. */</comment>

                <decl_stmt pos:start="235:17" pos:end="235:22"><decl pos:start="235:17" pos:end="235:21"><type pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">int</name></type> <name pos:start="235:21" pos:end="235:21">i</name></decl>;</decl_stmt>

                <decl_stmt pos:start="237:17" pos:end="237:36"><decl pos:start="237:17" pos:end="237:35"><type pos:start="237:17" pos:end="237:26"><name pos:start="237:17" pos:end="237:24">AVStream</name> <modifier pos:start="237:26" pos:end="237:26">*</modifier></type><name pos:start="237:27" pos:end="237:28">st</name> <init pos:start="237:30" pos:end="237:35">= <expr pos:start="237:32" pos:end="237:35"><name pos:start="237:32" pos:end="237:35">NULL</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="239:17" pos:end="241:59"><if pos:start="239:17" pos:end="241:59">if <condition pos:start="239:20" pos:end="239:47">(<expr pos:start="239:21" pos:end="239:46"><name pos:start="239:21" pos:end="239:41"><name pos:start="239:21" pos:end="239:27">rtsp_st</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:41">stream_index</name></name> <operator pos:start="239:43" pos:end="239:44">&gt;=</operator> <literal type="number" pos:start="239:46" pos:end="239:46">0</literal></expr>)</condition><block type="pseudo" pos:start="241:21" pos:end="241:59"><block_content pos:start="241:21" pos:end="241:59">

                    <expr_stmt pos:start="241:21" pos:end="241:59"><expr pos:start="241:21" pos:end="241:58"><name pos:start="241:21" pos:end="241:22">st</name> <operator pos:start="241:24" pos:end="241:24">=</operator> <name pos:start="241:26" pos:end="241:58"><name pos:start="241:26" pos:end="241:26">s</name><operator pos:start="241:27" pos:end="241:28">-&gt;</operator><name pos:start="241:29" pos:end="241:35">streams</name><index pos:start="241:36" pos:end="241:58">[<expr pos:start="241:37" pos:end="241:57"><name pos:start="241:37" pos:end="241:57"><name pos:start="241:37" pos:end="241:43">rtsp_st</name><operator pos:start="241:44" pos:end="241:45">-&gt;</operator><name pos:start="241:46" pos:end="241:57">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <for pos:start="243:17" pos:end="267:17">for <control pos:start="243:21" pos:end="243:57">(<init pos:start="243:22" pos:end="243:27"><expr pos:start="243:22" pos:end="243:26"><name pos:start="243:22" pos:end="243:22">i</name> <operator pos:start="243:24" pos:end="243:24">=</operator> <literal type="number" pos:start="243:26" pos:end="243:26">0</literal></expr>;</init> <condition pos:start="243:29" pos:end="243:52"><expr pos:start="243:29" pos:end="243:51"><name pos:start="243:29" pos:end="243:29">i</name> <operator pos:start="243:31" pos:end="243:31">&lt;</operator> <name pos:start="243:33" pos:end="243:51"><name pos:start="243:33" pos:end="243:34">rt</name><operator pos:start="243:35" pos:end="243:36">-&gt;</operator><name pos:start="243:37" pos:end="243:51">nb_rtsp_streams</name></name></expr>;</condition> <incr pos:start="243:54" pos:end="243:56"><expr pos:start="243:54" pos:end="243:56"><name pos:start="243:54" pos:end="243:54">i</name><operator pos:start="243:55" pos:end="243:56">++</operator></expr></incr>)</control> <block pos:start="243:59" pos:end="267:17">{<block_content pos:start="245:21" pos:end="265:21">

                    <decl_stmt pos:start="245:21" pos:end="245:83"><decl pos:start="245:21" pos:end="245:82"><type pos:start="245:21" pos:end="245:37"><name pos:start="245:21" pos:end="245:35">RTPDemuxContext</name> <modifier pos:start="245:37" pos:end="245:37">*</modifier></type><name pos:start="245:38" pos:end="245:44">rtpctx2</name> <init pos:start="245:46" pos:end="245:82">= <expr pos:start="245:48" pos:end="245:82"><name pos:start="245:48" pos:end="245:66"><name pos:start="245:48" pos:end="245:49">rt</name><operator pos:start="245:50" pos:end="245:51">-&gt;</operator><name pos:start="245:52" pos:end="245:63">rtsp_streams</name><index pos:start="245:64" pos:end="245:66">[<expr pos:start="245:65" pos:end="245:65"><name pos:start="245:65" pos:end="245:65">i</name></expr>]</index></name><operator pos:start="245:67" pos:end="245:68">-&gt;</operator><name pos:start="245:69" pos:end="245:82">transport_priv</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="247:21" pos:end="247:41"><decl pos:start="247:21" pos:end="247:40"><type pos:start="247:21" pos:end="247:30"><name pos:start="247:21" pos:end="247:28">AVStream</name> <modifier pos:start="247:30" pos:end="247:30">*</modifier></type><name pos:start="247:31" pos:end="247:33">st2</name> <init pos:start="247:35" pos:end="247:40">= <expr pos:start="247:37" pos:end="247:40"><name pos:start="247:37" pos:end="247:40">NULL</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="249:21" pos:end="251:76"><if pos:start="249:21" pos:end="251:76">if <condition pos:start="249:24" pos:end="249:63">(<expr pos:start="249:25" pos:end="249:62"><name pos:start="249:25" pos:end="249:43"><name pos:start="249:25" pos:end="249:26">rt</name><operator pos:start="249:27" pos:end="249:28">-&gt;</operator><name pos:start="249:29" pos:end="249:40">rtsp_streams</name><index pos:start="249:41" pos:end="249:43">[<expr pos:start="249:42" pos:end="249:42"><name pos:start="249:42" pos:end="249:42">i</name></expr>]</index></name><operator pos:start="249:44" pos:end="249:45">-&gt;</operator><name pos:start="249:46" pos:end="249:57">stream_index</name> <operator pos:start="249:59" pos:end="249:60">&gt;=</operator> <literal type="number" pos:start="249:62" pos:end="249:62">0</literal></expr>)</condition><block type="pseudo" pos:start="251:25" pos:end="251:76"><block_content pos:start="251:25" pos:end="251:76">

                        <expr_stmt pos:start="251:25" pos:end="251:76"><expr pos:start="251:25" pos:end="251:75"><name pos:start="251:25" pos:end="251:27">st2</name> <operator pos:start="251:29" pos:end="251:29">=</operator> <name pos:start="251:31" pos:end="251:75"><name pos:start="251:31" pos:end="251:31">s</name><operator pos:start="251:32" pos:end="251:33">-&gt;</operator><name pos:start="251:34" pos:end="251:40">streams</name><index pos:start="251:41" pos:end="251:75">[<expr pos:start="251:42" pos:end="251:74"><name pos:start="251:42" pos:end="251:60"><name pos:start="251:42" pos:end="251:43">rt</name><operator pos:start="251:44" pos:end="251:45">-&gt;</operator><name pos:start="251:46" pos:end="251:57">rtsp_streams</name><index pos:start="251:58" pos:end="251:60">[<expr pos:start="251:59" pos:end="251:59"><name pos:start="251:59" pos:end="251:59">i</name></expr>]</index></name><operator pos:start="251:61" pos:end="251:62">-&gt;</operator><name pos:start="251:63" pos:end="251:74">stream_index</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="253:21" pos:end="265:21"><if pos:start="253:21" pos:end="265:21">if <condition pos:start="253:24" pos:end="255:71">(<expr pos:start="253:25" pos:end="255:70"><name pos:start="253:25" pos:end="253:31">rtpctx2</name> <operator pos:start="253:33" pos:end="253:34">&amp;&amp;</operator> <name pos:start="253:36" pos:end="253:37">st</name> <operator pos:start="253:39" pos:end="253:40">&amp;&amp;</operator> <name pos:start="253:42" pos:end="253:44">st2</name> <operator pos:start="253:46" pos:end="253:47">&amp;&amp;</operator>

                        <name pos:start="255:25" pos:end="255:52"><name pos:start="255:25" pos:end="255:31">rtpctx2</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:52">first_rtcp_ntp_time</name></name> <operator pos:start="255:54" pos:end="255:55">==</operator> <name pos:start="255:57" pos:end="255:70">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="255:73" pos:end="265:21">{<block_content pos:start="257:25" pos:end="263:44">

                        <expr_stmt pos:start="257:25" pos:end="257:83"><expr pos:start="257:25" pos:end="257:82"><name pos:start="257:25" pos:end="257:52"><name pos:start="257:25" pos:end="257:31">rtpctx2</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:52">first_rtcp_ntp_time</name></name> <operator pos:start="257:54" pos:end="257:54">=</operator> <name pos:start="257:56" pos:end="257:82"><name pos:start="257:56" pos:end="257:61">rtpctx</name><operator pos:start="257:62" pos:end="257:63">-&gt;</operator><name pos:start="257:64" pos:end="257:82">first_rtcp_ntp_time</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="259:25" pos:end="263:44"><expr pos:start="259:25" pos:end="263:43"><name pos:start="259:25" pos:end="259:47"><name pos:start="259:25" pos:end="259:31">rtpctx2</name><operator pos:start="259:32" pos:end="259:33">-&gt;</operator><name pos:start="259:34" pos:end="259:47">rtcp_ts_offset</name></name> <operator pos:start="259:49" pos:end="259:49">=</operator> <call pos:start="259:51" pos:end="263:43"><name pos:start="259:51" pos:end="259:62">av_rescale_q</name><argument_list pos:start="259:63" pos:end="263:43">(

                            <argument pos:start="261:29" pos:end="261:50"><expr pos:start="261:29" pos:end="261:50"><name pos:start="261:29" pos:end="261:50"><name pos:start="261:29" pos:end="261:34">rtpctx</name><operator pos:start="261:35" pos:end="261:36">-&gt;</operator><name pos:start="261:37" pos:end="261:50">rtcp_ts_offset</name></name></expr></argument>, <argument pos:start="261:53" pos:end="261:65"><expr pos:start="261:53" pos:end="261:65"><name pos:start="261:53" pos:end="261:65"><name pos:start="261:53" pos:end="261:54">st</name><operator pos:start="261:55" pos:end="261:56">-&gt;</operator><name pos:start="261:57" pos:end="261:65">time_base</name></name></expr></argument>,

                            <argument pos:start="263:29" pos:end="263:42"><expr pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:31">st2</name><operator pos:start="263:32" pos:end="263:33">-&gt;</operator><name pos:start="263:34" pos:end="263:42">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="271:13" pos:end="287:13"><if pos:start="271:13" pos:end="287:13">if <condition pos:start="271:16" pos:end="271:33">(<expr pos:start="271:17" pos:end="271:32"><name pos:start="271:17" pos:end="271:19">ret</name> <operator pos:start="271:21" pos:end="271:22">==</operator> <operator pos:start="271:24" pos:end="271:24">-</operator><name pos:start="271:25" pos:end="271:32">RTCP_BYE</name></expr>)</condition> <block pos:start="271:35" pos:end="287:13">{<block_content pos:start="273:17" pos:end="285:39">

                <expr_stmt pos:start="273:17" pos:end="273:30"><expr pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:27"><name pos:start="273:17" pos:end="273:18">rt</name><operator pos:start="273:19" pos:end="273:20">-&gt;</operator><name pos:start="273:21" pos:end="273:27">nb_byes</name></name><operator pos:start="273:28" pos:end="273:29">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="277:17" pos:end="279:80"><expr pos:start="277:17" pos:end="279:79"><call pos:start="277:17" pos:end="279:79"><name pos:start="277:17" pos:end="277:22">av_log</name><argument_list pos:start="277:23" pos:end="279:79">(<argument pos:start="277:24" pos:end="277:24"><expr pos:start="277:24" pos:end="277:24"><name pos:start="277:24" pos:end="277:24">s</name></expr></argument>, <argument pos:start="277:27" pos:end="277:38"><expr pos:start="277:27" pos:end="277:38"><name pos:start="277:27" pos:end="277:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="277:41" pos:end="277:78"><expr pos:start="277:41" pos:end="277:78"><literal type="string" pos:start="277:41" pos:end="277:78">"Received BYE for stream %d (%d/%d)\n"</literal></expr></argument>,

                       <argument pos:start="279:24" pos:end="279:44"><expr pos:start="279:24" pos:end="279:44"><name pos:start="279:24" pos:end="279:44"><name pos:start="279:24" pos:end="279:30">rtsp_st</name><operator pos:start="279:31" pos:end="279:32">-&gt;</operator><name pos:start="279:33" pos:end="279:44">stream_index</name></name></expr></argument>, <argument pos:start="279:47" pos:end="279:57"><expr pos:start="279:47" pos:end="279:57"><name pos:start="279:47" pos:end="279:57"><name pos:start="279:47" pos:end="279:48">rt</name><operator pos:start="279:49" pos:end="279:50">-&gt;</operator><name pos:start="279:51" pos:end="279:57">nb_byes</name></name></expr></argument>, <argument pos:start="279:60" pos:end="279:78"><expr pos:start="279:60" pos:end="279:78"><name pos:start="279:60" pos:end="279:78"><name pos:start="279:60" pos:end="279:61">rt</name><operator pos:start="279:62" pos:end="279:63">-&gt;</operator><name pos:start="279:64" pos:end="279:78">nb_rtsp_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="283:17" pos:end="285:39"><if pos:start="283:17" pos:end="285:39">if <condition pos:start="283:20" pos:end="283:55">(<expr pos:start="283:21" pos:end="283:54"><name pos:start="283:21" pos:end="283:31"><name pos:start="283:21" pos:end="283:22">rt</name><operator pos:start="283:23" pos:end="283:24">-&gt;</operator><name pos:start="283:25" pos:end="283:31">nb_byes</name></name> <operator pos:start="283:33" pos:end="283:34">==</operator> <name pos:start="283:36" pos:end="283:54"><name pos:start="283:36" pos:end="283:37">rt</name><operator pos:start="283:38" pos:end="283:39">-&gt;</operator><name pos:start="283:40" pos:end="283:54">nb_rtsp_streams</name></name></expr>)</condition><block type="pseudo" pos:start="285:21" pos:end="285:39"><block_content pos:start="285:21" pos:end="285:39">

                    <return pos:start="285:21" pos:end="285:39">return <expr pos:start="285:28" pos:end="285:38"><name pos:start="285:28" pos:end="285:38">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="291:7" pos:end="315:5">else if <condition pos:start="291:15" pos:end="291:39">(<expr pos:start="291:16" pos:end="291:38"><name pos:start="291:16" pos:end="291:21"><name pos:start="291:16" pos:end="291:17">rt</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:21">ts</name></name> <operator pos:start="291:23" pos:end="291:24">&amp;&amp;</operator> <name pos:start="291:26" pos:end="291:38">CONFIG_RTPDEC</name></expr>)</condition> <block pos:start="291:41" pos:end="315:5">{<block_content pos:start="293:9" pos:end="313:9">

        <expr_stmt pos:start="293:9" pos:end="293:68"><expr pos:start="293:9" pos:end="293:67"><name pos:start="293:9" pos:end="293:11">ret</name> <operator pos:start="293:13" pos:end="293:13">=</operator> <call pos:start="293:15" pos:end="293:67"><name pos:start="293:15" pos:end="293:36">ff_mpegts_parse_packet</name><argument_list pos:start="293:37" pos:end="293:67">(<argument pos:start="293:38" pos:end="293:43"><expr pos:start="293:38" pos:end="293:43"><name pos:start="293:38" pos:end="293:43"><name pos:start="293:38" pos:end="293:39">rt</name><operator pos:start="293:40" pos:end="293:41">-&gt;</operator><name pos:start="293:42" pos:end="293:43">ts</name></name></expr></argument>, <argument pos:start="293:46" pos:end="293:48"><expr pos:start="293:46" pos:end="293:48"><name pos:start="293:46" pos:end="293:48">pkt</name></expr></argument>, <argument pos:start="293:51" pos:end="293:61"><expr pos:start="293:51" pos:end="293:61"><name pos:start="293:51" pos:end="293:61"><name pos:start="293:51" pos:end="293:52">rt</name><operator pos:start="293:53" pos:end="293:54">-&gt;</operator><name pos:start="293:55" pos:end="293:61">recvbuf</name></name></expr></argument>, <argument pos:start="293:64" pos:end="293:66"><expr pos:start="293:64" pos:end="293:66"><name pos:start="293:64" pos:end="293:66">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="313:9"><if pos:start="295:9" pos:end="313:9">if <condition pos:start="295:12" pos:end="295:21">(<expr pos:start="295:13" pos:end="295:20"><name pos:start="295:13" pos:end="295:15">ret</name> <operator pos:start="295:17" pos:end="295:18">&gt;=</operator> <literal type="number" pos:start="295:20" pos:end="295:20">0</literal></expr>)</condition> <block pos:start="295:23" pos:end="313:9">{<block_content pos:start="297:13" pos:end="311:13">

            <if_stmt pos:start="297:13" pos:end="311:13"><if pos:start="297:13" pos:end="307:13">if <condition pos:start="297:16" pos:end="297:26">(<expr pos:start="297:17" pos:end="297:25"><name pos:start="297:17" pos:end="297:19">ret</name> <operator pos:start="297:21" pos:end="297:21">&lt;</operator> <name pos:start="297:23" pos:end="297:25">len</name></expr>)</condition> <block pos:start="297:28" pos:end="307:13">{<block_content pos:start="299:17" pos:end="305:25">

                <expr_stmt pos:start="299:17" pos:end="299:38"><expr pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:31"><name pos:start="299:17" pos:end="299:18">rt</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:31">recvbuf_len</name></name> <operator pos:start="299:33" pos:end="299:33">=</operator> <name pos:start="299:35" pos:end="299:37">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:38"><expr pos:start="301:17" pos:end="301:37"><name pos:start="301:17" pos:end="301:31"><name pos:start="301:17" pos:end="301:18">rt</name><operator pos:start="301:19" pos:end="301:20">-&gt;</operator><name pos:start="301:21" pos:end="301:31">recvbuf_pos</name></name> <operator pos:start="301:33" pos:end="301:33">=</operator> <name pos:start="301:35" pos:end="301:37">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="303:48"><expr pos:start="303:17" pos:end="303:47"><name pos:start="303:17" pos:end="303:38"><name pos:start="303:17" pos:end="303:18">rt</name><operator pos:start="303:19" pos:end="303:20">-&gt;</operator><name pos:start="303:21" pos:end="303:38">cur_transport_priv</name></name> <operator pos:start="303:40" pos:end="303:40">=</operator> <name pos:start="303:42" pos:end="303:47"><name pos:start="303:42" pos:end="303:43">rt</name><operator pos:start="303:44" pos:end="303:45">-&gt;</operator><name pos:start="303:46" pos:end="303:47">ts</name></name></expr>;</expr_stmt>

                <return pos:start="305:17" pos:end="305:25">return <expr pos:start="305:24" pos:end="305:24"><literal type="number" pos:start="305:24" pos:end="305:24">1</literal></expr>;</return>

            </block_content>}</block></if> <else pos:start="307:15" pos:end="311:13">else <block pos:start="307:20" pos:end="311:13">{<block_content pos:start="309:17" pos:end="309:24">

                <expr_stmt pos:start="309:17" pos:end="309:24"><expr pos:start="309:17" pos:end="309:23"><name pos:start="309:17" pos:end="309:19">ret</name> <operator pos:start="309:21" pos:end="309:21">=</operator> <literal type="number" pos:start="309:23" pos:end="309:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="315:7" pos:end="319:5">else <block pos:start="315:12" pos:end="319:5">{<block_content pos:start="317:9" pos:end="317:35">

        <return pos:start="317:9" pos:end="317:35">return <expr pos:start="317:16" pos:end="317:34"><name pos:start="317:16" pos:end="317:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

<label pos:start="321:1" pos:end="321:4"><name pos:start="321:1" pos:end="321:3">end</name>:</label>

    <if_stmt pos:start="323:5" pos:end="325:18"><if pos:start="323:5" pos:end="325:18">if <condition pos:start="323:8" pos:end="323:16">(<expr pos:start="323:9" pos:end="323:15"><name pos:start="323:9" pos:end="323:11">ret</name> <operator pos:start="323:13" pos:end="323:13">&lt;</operator> <literal type="number" pos:start="323:15" pos:end="323:15">0</literal></expr>)</condition><block type="pseudo" pos:start="325:9" pos:end="325:18"><block_content pos:start="325:9" pos:end="325:18">

        <goto pos:start="325:9" pos:end="325:18">goto <name pos:start="325:14" pos:end="325:17">redo</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="327:5" pos:end="331:57"><if pos:start="327:5" pos:end="331:57">if <condition pos:start="327:8" pos:end="327:17">(<expr pos:start="327:9" pos:end="327:16"><name pos:start="327:9" pos:end="327:11">ret</name> <operator pos:start="327:13" pos:end="327:14">==</operator> <literal type="number" pos:start="327:16" pos:end="327:16">1</literal></expr>)</condition><block type="pseudo" pos:start="331:9" pos:end="331:57"><block_content pos:start="331:9" pos:end="331:57">

        <comment type="block" pos:start="329:9" pos:end="329:65">/* more packets may follow, so we save the RTP context */</comment>

        <expr_stmt pos:start="331:9" pos:end="331:57"><expr pos:start="331:9" pos:end="331:56"><name pos:start="331:9" pos:end="331:30"><name pos:start="331:9" pos:end="331:10">rt</name><operator pos:start="331:11" pos:end="331:12">-&gt;</operator><name pos:start="331:13" pos:end="331:30">cur_transport_priv</name></name> <operator pos:start="331:32" pos:end="331:32">=</operator> <name pos:start="331:34" pos:end="331:56"><name pos:start="331:34" pos:end="331:40">rtsp_st</name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:56">transport_priv</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="335:5" pos:end="335:15">return <expr pos:start="335:12" pos:end="335:14"><name pos:start="335:12" pos:end="335:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
