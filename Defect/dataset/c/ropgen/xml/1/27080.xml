<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27080.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">bool</name></type> <name pos:start="1:20" pos:end="1:46">regime_translation_disabled</name><parameter_list pos:start="1:47" pos:end="3:65">(<parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:58">CPUARMState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">env</name></decl></parameter>,

                                               <parameter pos:start="3:48" pos:end="3:64"><decl pos:start="3:48" pos:end="3:64"><type pos:start="3:48" pos:end="3:64"><name pos:start="3:48" pos:end="3:56">ARMMMUIdx</name></type> <name pos:start="3:58" pos:end="3:64">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:55">

    <if_stmt pos:start="7:5" pos:end="41:5"><if pos:start="7:5" pos:end="41:5">if <condition pos:start="7:8" pos:end="7:40">(<expr pos:start="7:9" pos:end="7:39"><call pos:start="7:9" pos:end="7:39"><name pos:start="7:9" pos:end="7:19">arm_feature</name><argument_list pos:start="7:20" pos:end="7:39">(<argument pos:start="7:21" pos:end="7:23"><expr pos:start="7:21" pos:end="7:23"><name pos:start="7:21" pos:end="7:23">env</name></expr></argument>, <argument pos:start="7:26" pos:end="7:38"><expr pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:38">ARM_FEATURE_M</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:42" pos:end="41:5">{<block_content pos:start="9:9" pos:end="39:9">

        <switch pos:start="9:9" pos:end="39:9">switch <condition pos:start="9:16" pos:end="11:76">(<expr pos:start="9:17" pos:end="11:75"><name pos:start="9:17" pos:end="9:65"><name pos:start="9:17" pos:end="9:19">env</name><operator pos:start="9:20" pos:end="9:21">-&gt;</operator><name pos:start="9:22" pos:end="9:24">v7m</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:33">mpu_ctrl</name><index pos:start="9:34" pos:end="9:65">[<expr pos:start="9:35" pos:end="9:64"><call pos:start="9:35" pos:end="9:64"><name pos:start="9:35" pos:end="9:50">regime_is_secure</name><argument_list pos:start="9:51" pos:end="9:64">(<argument pos:start="9:52" pos:end="9:54"><expr pos:start="9:52" pos:end="9:54"><name pos:start="9:52" pos:end="9:54">env</name></expr></argument>, <argument pos:start="9:57" pos:end="9:63"><expr pos:start="9:57" pos:end="9:63"><name pos:start="9:57" pos:end="9:63">mmu_idx</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="9:67" pos:end="9:67">&amp;</operator>

                <operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:43">R_V7M_MPU_CTRL_ENABLE_MASK</name> <operator pos:start="11:45" pos:end="11:45">|</operator> <name pos:start="11:47" pos:end="11:74">R_V7M_MPU_CTRL_HFNMIENA_MASK</name><operator pos:start="11:75" pos:end="11:75">)</operator></expr>)</condition> <block pos:start="11:78" pos:end="39:9">{<block_content pos:start="13:9" pos:end="37:24">

        <case pos:start="13:9" pos:end="13:40">case <expr pos:start="13:14" pos:end="13:39"><name pos:start="13:14" pos:end="13:39">R_V7M_MPU_CTRL_ENABLE_MASK</name></expr>:</case>

            <comment type="block" pos:start="15:13" pos:end="15:56">/* Enabled, but not for HardFault and NMI */</comment>

            <return pos:start="17:13" pos:end="19:46">return <expr pos:start="17:20" pos:end="19:45"><name pos:start="17:20" pos:end="17:26">mmu_idx</name> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:47">ARMMMUIdx_MNegPri</name> <operator pos:start="17:49" pos:end="17:50">||</operator>

                <name pos:start="19:17" pos:end="19:23">mmu_idx</name> <operator pos:start="19:25" pos:end="19:26">==</operator> <name pos:start="19:28" pos:end="19:45">ARMMMUIdx_MSNegPri</name></expr>;</return>

        <case pos:start="21:9" pos:end="21:71">case <expr pos:start="21:14" pos:end="21:70"><name pos:start="21:14" pos:end="21:39">R_V7M_MPU_CTRL_ENABLE_MASK</name> <operator pos:start="21:41" pos:end="21:41">|</operator> <name pos:start="21:43" pos:end="21:70">R_V7M_MPU_CTRL_HFNMIENA_MASK</name></expr>:</case>

            <comment type="block" pos:start="23:13" pos:end="23:39">/* Enabled for all cases */</comment>

            <return pos:start="25:13" pos:end="25:25">return <expr pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:24">false</name></expr>;</return>

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>:</case>

        <default pos:start="29:9" pos:end="29:16">default:</default>

            <comment type="block" pos:start="31:13" pos:end="35:15">/* HFNMIENA set and ENABLE clear is UNPREDICTABLE, but

             * we warned about that in armv7m_nvic.c when the guest set it.

             */</comment>

            <return pos:start="37:13" pos:end="37:24">return <expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">true</name></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:34">(<expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:15">mmu_idx</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <name pos:start="45:20" pos:end="45:33">ARMMMUIdx_S2NS</name></expr>)</condition> <block pos:start="45:36" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:49">

        <return pos:start="47:9" pos:end="47:49">return <expr pos:start="47:16" pos:end="47:48"><operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:19">env</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:25">cp15</name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:33">hcr_el2</name></name> <operator pos:start="47:35" pos:end="47:35">&amp;</operator> <name pos:start="47:37" pos:end="47:42">HCR_VM</name><operator pos:start="47:43" pos:end="47:43">)</operator> <operator pos:start="47:45" pos:end="47:46">==</operator> <literal type="number" pos:start="47:48" pos:end="47:48">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="51:5" pos:end="51:55">return <expr pos:start="51:12" pos:end="51:54"><operator pos:start="51:12" pos:end="51:12">(</operator><call pos:start="51:13" pos:end="51:38"><name pos:start="51:13" pos:end="51:24">regime_sctlr</name><argument_list pos:start="51:25" pos:end="51:38">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">env</name></expr></argument>, <argument pos:start="51:31" pos:end="51:37"><expr pos:start="51:31" pos:end="51:37"><name pos:start="51:31" pos:end="51:37">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="51:40" pos:end="51:40">&amp;</operator> <name pos:start="51:42" pos:end="51:48">SCTLR_M</name><operator pos:start="51:49" pos:end="51:49">)</operator> <operator pos:start="51:51" pos:end="51:52">==</operator> <literal type="number" pos:start="51:54" pos:end="51:54">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
