<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7136.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">test_aio_external_client</name><parameter_list pos:start="1:37" pos:end="1:42">(<parameter pos:start="1:38" pos:end="1:41"><decl pos:start="1:38" pos:end="1:41"><type pos:start="1:38" pos:end="1:41"><name pos:start="1:38" pos:end="1:41">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="44:1">{<block_content pos:start="5:5" pos:end="42:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">j</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="42:5">for <control pos:start="9:9" pos:end="9:27">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">1</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:22"><expr pos:start="9:17" pos:end="9:21"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <literal type="number" pos:start="9:21" pos:end="9:21">3</literal></expr>;</condition> <incr pos:start="9:24" pos:end="9:26"><expr pos:start="9:24" pos:end="9:26"><name pos:start="9:24" pos:end="9:24">i</name><operator pos:start="9:25" pos:end="9:26">++</operator></expr></incr>)</control> <block pos:start="9:29" pos:end="42:5">{<block_content pos:start="11:9" pos:end="40:40">

        <decl_stmt pos:start="11:9" pos:end="11:80"><decl pos:start="11:9" pos:end="11:79"><type pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:29">EventNotifierTestData</name></type> <name pos:start="11:31" pos:end="11:34">data</name> <init pos:start="11:36" pos:end="11:79">= <expr pos:start="11:38" pos:end="11:79"><block pos:start="11:38" pos:end="11:79">{ <expr pos:start="11:40" pos:end="11:45"><operator pos:start="11:40" pos:end="11:40">.</operator><name pos:start="11:41" pos:end="11:41">n</name> <operator pos:start="11:43" pos:end="11:43">=</operator> <literal type="number" pos:start="11:45" pos:end="11:45">0</literal></expr>, <expr pos:start="11:48" pos:end="11:59"><operator pos:start="11:48" pos:end="11:48">.</operator><name pos:start="11:49" pos:end="11:54">active</name> <operator pos:start="11:56" pos:end="11:56">=</operator> <literal type="number" pos:start="11:58" pos:end="11:59">10</literal></expr>, <expr pos:start="11:62" pos:end="11:77"><operator pos:start="11:62" pos:end="11:62">.</operator><name pos:start="11:63" pos:end="11:70">auto_set</name> <operator pos:start="11:72" pos:end="11:72">=</operator> <name pos:start="11:74" pos:end="11:77">true</name></expr> }</block></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:44"><expr pos:start="13:9" pos:end="13:43"><call pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:27">event_notifier_init</name><argument_list pos:start="13:28" pos:end="13:43">(<argument pos:start="13:29" pos:end="13:35"><expr pos:start="13:29" pos:end="13:35"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:35"><name pos:start="13:30" pos:end="13:33">data</name><operator pos:start="13:34" pos:end="13:34">.</operator><name pos:start="13:35" pos:end="13:35">e</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:42"><expr pos:start="13:38" pos:end="13:42"><name pos:start="13:38" pos:end="13:42">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:67"><expr pos:start="15:9" pos:end="15:66"><call pos:start="15:9" pos:end="15:66"><name pos:start="15:9" pos:end="15:30">aio_set_event_notifier</name><argument_list pos:start="15:31" pos:end="15:66">(<argument pos:start="15:32" pos:end="15:34"><expr pos:start="15:32" pos:end="15:34"><name pos:start="15:32" pos:end="15:34">ctx</name></expr></argument>, <argument pos:start="15:37" pos:end="15:43"><expr pos:start="15:37" pos:end="15:43"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:41">data</name><operator pos:start="15:42" pos:end="15:42">.</operator><name pos:start="15:43" pos:end="15:43">e</name></name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">true</name></expr></argument>, <argument pos:start="15:52" pos:end="15:65"><expr pos:start="15:52" pos:end="15:65"><name pos:start="15:52" pos:end="15:65">event_ready_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:36"><expr pos:start="17:9" pos:end="17:35"><call pos:start="17:9" pos:end="17:35"><name pos:start="17:9" pos:end="17:26">event_notifier_set</name><argument_list pos:start="17:27" pos:end="17:35">(<argument pos:start="17:28" pos:end="17:34"><expr pos:start="17:28" pos:end="17:34"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:34"><name pos:start="17:29" pos:end="17:32">data</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:34">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="19:9" pos:end="23:9">for <control pos:start="19:13" pos:end="19:31">(<init pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:18"><name pos:start="19:14" pos:end="19:14">j</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr>;</init> <condition pos:start="19:21" pos:end="19:26"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">j</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:25">i</name></expr>;</condition> <incr pos:start="19:28" pos:end="19:30"><expr pos:start="19:28" pos:end="19:30"><name pos:start="19:28" pos:end="19:28">j</name><operator pos:start="19:29" pos:end="19:30">++</operator></expr></incr>)</control> <block pos:start="19:33" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:38">

            <expr_stmt pos:start="21:13" pos:end="21:38"><expr pos:start="21:13" pos:end="21:37"><call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:32">aio_disable_external</name><argument_list pos:start="21:33" pos:end="21:37">(<argument pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><name pos:start="21:34" pos:end="21:36">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="25:9" pos:end="35:9">for <control pos:start="25:13" pos:end="25:31">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">j</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:21">j</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:25">i</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">j</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="35:9">{<block_content pos:start="27:13" pos:end="33:37">

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:18">assert</name><argument_list pos:start="27:19" pos:end="27:41">(<argument pos:start="27:20" pos:end="27:40"><expr pos:start="27:20" pos:end="27:40"><operator pos:start="27:20" pos:end="27:20">!</operator><call pos:start="27:21" pos:end="27:40"><name pos:start="27:21" pos:end="27:28">aio_poll</name><argument_list pos:start="27:29" pos:end="27:40">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">ctx</name></expr></argument>, <argument pos:start="27:35" pos:end="27:39"><expr pos:start="27:35" pos:end="27:39"><name pos:start="27:35" pos:end="27:39">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:59"><expr pos:start="29:13" pos:end="29:58"><call pos:start="29:13" pos:end="29:58"><name pos:start="29:13" pos:end="29:18">assert</name><argument_list pos:start="29:19" pos:end="29:58">(<argument pos:start="29:20" pos:end="29:57"><expr pos:start="29:20" pos:end="29:57"><call pos:start="29:20" pos:end="29:57"><name pos:start="29:20" pos:end="29:48">event_notifier_test_and_clear</name><argument_list pos:start="29:49" pos:end="29:57">(<argument pos:start="29:50" pos:end="29:56"><expr pos:start="29:50" pos:end="29:56"><operator pos:start="29:50" pos:end="29:50">&amp;</operator><name pos:start="29:51" pos:end="29:56"><name pos:start="29:51" pos:end="29:54">data</name><operator pos:start="29:55" pos:end="29:55">.</operator><name pos:start="29:56" pos:end="29:56">e</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:40"><expr pos:start="31:13" pos:end="31:39"><call pos:start="31:13" pos:end="31:39"><name pos:start="31:13" pos:end="31:30">event_notifier_set</name><argument_list pos:start="31:31" pos:end="31:39">(<argument pos:start="31:32" pos:end="31:38"><expr pos:start="31:32" pos:end="31:38"><operator pos:start="31:32" pos:end="31:32">&amp;</operator><name pos:start="31:33" pos:end="31:38"><name pos:start="31:33" pos:end="31:36">data</name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:38">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><call pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:31">aio_enable_external</name><argument_list pos:start="33:32" pos:end="33:36">(<argument pos:start="33:33" pos:end="33:35"><expr pos:start="33:33" pos:end="33:35"><name pos:start="33:33" pos:end="33:35">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:14">assert</name><argument_list pos:start="37:15" pos:end="37:36">(<argument pos:start="37:16" pos:end="37:35"><expr pos:start="37:16" pos:end="37:35"><call pos:start="37:16" pos:end="37:35"><name pos:start="37:16" pos:end="37:23">aio_poll</name><argument_list pos:start="37:24" pos:end="37:35">(<argument pos:start="37:25" pos:end="37:27"><expr pos:start="37:25" pos:end="37:27"><name pos:start="37:25" pos:end="37:27">ctx</name></expr></argument>, <argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:34">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="40:9" pos:end="40:40"><expr pos:start="40:9" pos:end="40:39"><call pos:start="40:9" pos:end="40:39"><name pos:start="40:9" pos:end="40:30">event_notifier_cleanup</name><argument_list pos:start="40:31" pos:end="40:39">(<argument pos:start="40:32" pos:end="40:38"><expr pos:start="40:32" pos:end="40:38"><operator pos:start="40:32" pos:end="40:32">&amp;</operator><name pos:start="40:33" pos:end="40:38"><name pos:start="40:33" pos:end="40:36">data</name><operator pos:start="40:37" pos:end="40:37">.</operator><name pos:start="40:38" pos:end="40:38">e</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
