<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20607.c" pos:tabs="8"><function pos:start="1:1" pos:end="347:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">convert_coeffs</name><parameter_list pos:start="1:26" pos:end="1:69">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:41">AVFilterContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">ctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:60">AVFilterLink</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">inlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="347:1">{<block_content pos:start="5:5" pos:end="345:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:27">HeadphoneContext</name></name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:30">s</name> <init pos:start="5:32" pos:end="5:42">= <expr pos:start="5:34" pos:end="5:42"><name pos:start="5:34" pos:end="5:42"><name pos:start="5:34" pos:end="5:36">ctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:42">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:20">ir_len</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:24">s</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:32">ir_len</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">nb_irs</name> <init pos:start="9:16" pos:end="9:26">= <expr pos:start="9:18" pos:end="9:26"><name pos:start="9:18" pos:end="9:26"><name pos:start="9:18" pos:end="9:18">s</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:26">nb_irs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:25">nb_input_channels</name> <init pos:start="11:27" pos:end="11:52">= <expr pos:start="11:29" pos:end="11:52"><name pos:start="11:29" pos:end="11:42"><name pos:start="11:29" pos:end="11:31">ctx</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:39">inputs</name><index pos:start="11:40" pos:end="11:42">[<expr pos:start="11:41" pos:end="11:41"><literal type="number" pos:start="11:41" pos:end="11:41">0</literal></expr>]</index></name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:52">channels</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:74"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:18">gain_lin</name> <init pos:start="13:20" pos:end="13:74">= <expr pos:start="13:22" pos:end="13:74"><call pos:start="13:22" pos:end="13:74"><name pos:start="13:22" pos:end="13:25">expf</name><argument_list pos:start="13:26" pos:end="13:74">(<argument pos:start="13:27" pos:end="13:73"><expr pos:start="13:27" pos:end="13:73"><operator pos:start="13:27" pos:end="13:27">(</operator><name pos:start="13:28" pos:end="13:34"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:34">gain</name></name> <operator pos:start="13:36" pos:end="13:36">-</operator> <literal type="number" pos:start="13:38" pos:end="13:38">3</literal> <operator pos:start="13:40" pos:end="13:40">*</operator> <name pos:start="13:42" pos:end="13:58">nb_input_channels</name><operator pos:start="13:59" pos:end="13:59">)</operator> <operator pos:start="13:61" pos:end="13:61">/</operator> <literal type="number" pos:start="13:63" pos:end="13:64">20</literal> <operator pos:start="13:66" pos:end="13:66">*</operator> <name pos:start="13:68" pos:end="13:73">M_LN10</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">FFTComplex</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:27">data_hrtf_l</name> <init pos:start="15:29" pos:end="15:34">= <expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">FFTComplex</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:27">data_hrtf_r</name> <init pos:start="17:29" pos:end="17:34">= <expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">FFTComplex</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:24">fft_in_l</name> <init pos:start="19:26" pos:end="19:31">= <expr pos:start="19:28" pos:end="19:31"><name pos:start="19:28" pos:end="19:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:14">FFTComplex</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier></type><name pos:start="21:17" pos:end="21:24">fft_in_r</name> <init pos:start="21:26" pos:end="21:31">= <expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:27"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">float</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:20">data_ir_l</name> <init pos:start="23:22" pos:end="23:27">= <expr pos:start="23:24" pos:end="23:27"><name pos:start="23:24" pos:end="23:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:9">float</name> <modifier pos:start="25:11" pos:end="25:11">*</modifier></type><name pos:start="25:12" pos:end="25:20">data_ir_r</name> <init pos:start="25:22" pos:end="25:27">= <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:19"><decl pos:start="27:5" pos:end="27:18"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:14">offset</name> <init pos:start="27:16" pos:end="27:18">= <expr pos:start="27:18" pos:end="27:18"><literal type="number" pos:start="27:18" pos:end="27:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:14"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">n_fft</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:13"><decl pos:start="31:5" pos:end="31:9"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:9">i</name></decl>, <decl pos:start="31:12" pos:end="31:12"><type ref="prev" pos:start="31:5" pos:end="31:7"/><name pos:start="31:12" pos:end="31:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:20">buffer_length</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <literal type="number" pos:start="35:24" pos:end="35:24">1</literal> <operator pos:start="35:26" pos:end="35:27">&lt;&lt;</operator> <operator pos:start="35:29" pos:end="35:29">(</operator><literal type="number" pos:start="35:30" pos:end="35:33">32</literal> <operator pos:start="35:33" pos:end="35:33">-</operator> <call pos:start="35:35" pos:end="35:51"><name pos:start="35:35" pos:end="35:40">ff_clz</name><argument_list pos:start="35:41" pos:end="35:51">(<argument pos:start="35:42" pos:end="35:50"><expr pos:start="35:42" pos:end="35:50"><name pos:start="35:42" pos:end="35:50"><name pos:start="35:42" pos:end="35:42">s</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:50">ir_len</name></name></expr></argument>)</argument_list></call><operator pos:start="35:52" pos:end="35:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:75"><expr pos:start="37:5" pos:end="37:74"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">n_fft</name></name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:20">n_fft</name> <operator pos:start="37:22" pos:end="37:22">=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal> <operator pos:start="37:26" pos:end="37:27">&lt;&lt;</operator> <operator pos:start="37:29" pos:end="37:29">(</operator><literal type="number" pos:start="37:30" pos:end="37:33">32</literal> <operator pos:start="37:33" pos:end="37:33">-</operator> <call pos:start="37:35" pos:end="37:73"><name pos:start="37:35" pos:end="37:40">ff_clz</name><argument_list pos:start="37:41" pos:end="37:73">(<argument pos:start="37:42" pos:end="37:72"><expr pos:start="37:42" pos:end="37:72"><name pos:start="37:42" pos:end="37:50"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:50">ir_len</name></name> <operator pos:start="37:52" pos:end="37:52">+</operator> <name pos:start="37:54" pos:end="37:72"><name pos:start="37:54" pos:end="37:59">inlink</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:72">sample_rate</name></name></expr></argument>)</argument_list></call><operator pos:start="37:74" pos:end="37:74">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="81:5"><if pos:start="41:5" pos:end="81:5">if <condition pos:start="41:8" pos:end="41:36">(<expr pos:start="41:9" pos:end="41:35"><name pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:15">type</name></name> <operator pos:start="41:17" pos:end="41:18">==</operator> <name pos:start="41:20" pos:end="41:35">FREQUENCY_DOMAIN</name></expr>)</condition> <block pos:start="41:38" pos:end="81:5">{<block_content pos:start="43:9" pos:end="79:9">

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:16">fft_in_l</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:54"><name pos:start="43:20" pos:end="43:28">av_calloc</name><argument_list pos:start="43:29" pos:end="43:54">(<argument pos:start="43:30" pos:end="43:34"><expr pos:start="43:30" pos:end="43:34"><name pos:start="43:30" pos:end="43:34">n_fft</name></expr></argument>, <argument pos:start="43:37" pos:end="43:53"><expr pos:start="43:37" pos:end="43:53"><sizeof pos:start="43:37" pos:end="43:53">sizeof<argument_list pos:start="43:43" pos:end="43:53">(<argument pos:start="43:44" pos:end="43:52"><expr pos:start="43:44" pos:end="43:52"><operator pos:start="43:44" pos:end="43:44">*</operator><name pos:start="43:45" pos:end="43:52">fft_in_l</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:55"><expr pos:start="45:9" pos:end="45:54"><name pos:start="45:9" pos:end="45:16">fft_in_r</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:54"><name pos:start="45:20" pos:end="45:28">av_calloc</name><argument_list pos:start="45:29" pos:end="45:54">(<argument pos:start="45:30" pos:end="45:34"><expr pos:start="45:30" pos:end="45:34"><name pos:start="45:30" pos:end="45:34">n_fft</name></expr></argument>, <argument pos:start="45:37" pos:end="45:53"><expr pos:start="45:37" pos:end="45:53"><sizeof pos:start="45:37" pos:end="45:53">sizeof<argument_list pos:start="45:43" pos:end="45:53">(<argument pos:start="45:44" pos:end="45:52"><expr pos:start="45:44" pos:end="45:52"><operator pos:start="45:44" pos:end="45:44">*</operator><name pos:start="45:45" pos:end="45:52">fft_in_r</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="51:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:35">(<expr pos:start="47:13" pos:end="47:34"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:21">fft_in_l</name> <operator pos:start="47:23" pos:end="47:24">||</operator> <operator pos:start="47:26" pos:end="47:26">!</operator><name pos:start="47:27" pos:end="47:34">fft_in_r</name></expr>)</condition> <block pos:start="47:37" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:35">

            <return pos:start="49:13" pos:end="49:35">return <expr pos:start="49:20" pos:end="49:34"><call pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:26">AVERROR</name><argument_list pos:start="49:27" pos:end="49:34">(<argument pos:start="49:28" pos:end="49:33"><expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><call pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:18">av_fft_end</name><argument_list pos:start="55:19" pos:end="55:29">(<argument pos:start="55:20" pos:end="55:28"><expr pos:start="55:20" pos:end="55:28"><name pos:start="55:20" pos:end="55:28"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:25">fft</name><index pos:start="55:26" pos:end="55:28">[<expr pos:start="55:27" pos:end="55:27"><literal type="number" pos:start="55:27" pos:end="55:27">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><call pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:18">av_fft_end</name><argument_list pos:start="57:19" pos:end="57:29">(<argument pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:28"><name pos:start="57:20" pos:end="57:20">s</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:25">fft</name><index pos:start="57:26" pos:end="57:28">[<expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:51"><expr pos:start="59:9" pos:end="59:50"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:14">fft</name><index pos:start="59:15" pos:end="59:17">[<expr pos:start="59:16" pos:end="59:16"><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>]</index></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:50"><name pos:start="59:21" pos:end="59:31">av_fft_init</name><argument_list pos:start="59:32" pos:end="59:50">(<argument pos:start="59:33" pos:end="59:46"><expr pos:start="59:33" pos:end="59:46"><call pos:start="59:33" pos:end="59:46"><name pos:start="59:33" pos:end="59:36">log2</name><argument_list pos:start="59:37" pos:end="59:46">(<argument pos:start="59:38" pos:end="59:45"><expr pos:start="59:38" pos:end="59:45"><name pos:start="59:38" pos:end="59:45"><name pos:start="59:38" pos:end="59:38">s</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:45">n_fft</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:49" pos:end="59:49"><expr pos:start="59:49" pos:end="59:49"><literal type="number" pos:start="59:49" pos:end="59:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:51"><expr pos:start="61:9" pos:end="61:50"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:9">s</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:14">fft</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">1</literal></expr>]</index></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:50"><name pos:start="61:21" pos:end="61:31">av_fft_init</name><argument_list pos:start="61:32" pos:end="61:50">(<argument pos:start="61:33" pos:end="61:46"><expr pos:start="61:33" pos:end="61:46"><call pos:start="61:33" pos:end="61:46"><name pos:start="61:33" pos:end="61:36">log2</name><argument_list pos:start="61:37" pos:end="61:46">(<argument pos:start="61:38" pos:end="61:45"><expr pos:start="61:38" pos:end="61:45"><name pos:start="61:38" pos:end="61:45"><name pos:start="61:38" pos:end="61:38">s</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:45">n_fft</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:18">av_fft_end</name><argument_list pos:start="63:19" pos:end="63:30">(<argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:26">ifft</name><index pos:start="63:27" pos:end="63:29">[<expr pos:start="63:28" pos:end="63:28"><literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:18">av_fft_end</name><argument_list pos:start="65:19" pos:end="65:30">(<argument pos:start="65:20" pos:end="65:29"><expr pos:start="65:20" pos:end="65:29"><name pos:start="65:20" pos:end="65:29"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:26">ifft</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:52"><expr pos:start="67:9" pos:end="67:51"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">ifft</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><literal type="number" pos:start="67:17" pos:end="67:17">0</literal></expr>]</index></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:51"><name pos:start="67:22" pos:end="67:32">av_fft_init</name><argument_list pos:start="67:33" pos:end="67:51">(<argument pos:start="67:34" pos:end="67:47"><expr pos:start="67:34" pos:end="67:47"><call pos:start="67:34" pos:end="67:47"><name pos:start="67:34" pos:end="67:37">log2</name><argument_list pos:start="67:38" pos:end="67:47">(<argument pos:start="67:39" pos:end="67:46"><expr pos:start="67:39" pos:end="67:46"><name pos:start="67:39" pos:end="67:46"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:46">n_fft</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:52"><expr pos:start="69:9" pos:end="69:51"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:15">ifft</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:51"><name pos:start="69:22" pos:end="69:32">av_fft_init</name><argument_list pos:start="69:33" pos:end="69:51">(<argument pos:start="69:34" pos:end="69:47"><expr pos:start="69:34" pos:end="69:47"><call pos:start="69:34" pos:end="69:47"><name pos:start="69:34" pos:end="69:37">log2</name><argument_list pos:start="69:38" pos:end="69:47">(<argument pos:start="69:39" pos:end="69:46"><expr pos:start="69:39" pos:end="69:46"><name pos:start="69:39" pos:end="69:46"><name pos:start="69:39" pos:end="69:39">s</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:46">n_fft</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:50" pos:end="69:50"><expr pos:start="69:50" pos:end="69:50"><literal type="number" pos:start="69:50" pos:end="69:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="73:9" pos:end="79:9"><if pos:start="73:9" pos:end="79:9">if <condition pos:start="73:12" pos:end="73:67">(<expr pos:start="73:13" pos:end="73:66"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:22"><name pos:start="73:14" pos:end="73:14">s</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:19">fft</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>]</index></name> <operator pos:start="73:24" pos:end="73:25">||</operator> <operator pos:start="73:27" pos:end="73:27">!</operator><name pos:start="73:28" pos:end="73:36"><name pos:start="73:28" pos:end="73:28">s</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:33">fft</name><index pos:start="73:34" pos:end="73:36">[<expr pos:start="73:35" pos:end="73:35"><literal type="number" pos:start="73:35" pos:end="73:35">1</literal></expr>]</index></name> <operator pos:start="73:38" pos:end="73:39">||</operator> <operator pos:start="73:41" pos:end="73:41">!</operator><name pos:start="73:42" pos:end="73:51"><name pos:start="73:42" pos:end="73:42">s</name><operator pos:start="73:43" pos:end="73:44">-&gt;</operator><name pos:start="73:45" pos:end="73:48">ifft</name><index pos:start="73:49" pos:end="73:51">[<expr pos:start="73:50" pos:end="73:50"><literal type="number" pos:start="73:50" pos:end="73:50">0</literal></expr>]</index></name> <operator pos:start="73:53" pos:end="73:54">||</operator> <operator pos:start="73:56" pos:end="73:56">!</operator><name pos:start="73:57" pos:end="73:66"><name pos:start="73:57" pos:end="73:57">s</name><operator pos:start="73:58" pos:end="73:59">-&gt;</operator><name pos:start="73:60" pos:end="73:63">ifft</name><index pos:start="73:64" pos:end="73:66">[<expr pos:start="73:65" pos:end="73:65"><literal type="number" pos:start="73:65" pos:end="73:65">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="73:69" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:35">

            <expr_stmt pos:start="75:13" pos:end="75:95"><expr pos:start="75:13" pos:end="75:94"><call pos:start="75:13" pos:end="75:94"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="75:94">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ctx</name></expr></argument>, <argument pos:start="75:25" pos:end="75:36"><expr pos:start="75:25" pos:end="75:36"><name pos:start="75:25" pos:end="75:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:39" pos:end="75:83"><expr pos:start="75:39" pos:end="75:83"><literal type="string" pos:start="75:39" pos:end="75:83">"Unable to create FFT contexts of size %d.\n"</literal></expr></argument>, <argument pos:start="75:86" pos:end="75:93"><expr pos:start="75:86" pos:end="75:93"><name pos:start="75:86" pos:end="75:93"><name pos:start="75:86" pos:end="75:86">s</name><operator pos:start="75:87" pos:end="75:88">-&gt;</operator><name pos:start="75:89" pos:end="75:93">n_fft</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="77:13" pos:end="77:35">return <expr pos:start="77:20" pos:end="77:34"><call pos:start="77:20" pos:end="77:34"><name pos:start="77:20" pos:end="77:26">AVERROR</name><argument_list pos:start="77:27" pos:end="77:34">(<argument pos:start="77:28" pos:end="77:33"><expr pos:start="77:28" pos:end="77:33"><name pos:start="77:28" pos:end="77:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:81"><expr pos:start="85:5" pos:end="85:80"><name pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:14">data_ir</name><index pos:start="85:15" pos:end="85:17">[<expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>]</index></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <call pos:start="85:21" pos:end="85:80"><name pos:start="85:21" pos:end="85:29">av_calloc</name><argument_list pos:start="85:30" pos:end="85:80">(<argument pos:start="85:31" pos:end="85:52"><expr pos:start="85:31" pos:end="85:52"><call pos:start="85:31" pos:end="85:52"><name pos:start="85:31" pos:end="85:37">FFALIGN</name><argument_list pos:start="85:38" pos:end="85:52">(<argument pos:start="85:39" pos:end="85:47"><expr pos:start="85:39" pos:end="85:47"><name pos:start="85:39" pos:end="85:47"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:47">ir_len</name></name></expr></argument>, <argument pos:start="85:50" pos:end="85:51"><expr pos:start="85:50" pos:end="85:51"><literal type="number" pos:start="85:50" pos:end="85:51">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:55" pos:end="85:79"><expr pos:start="85:55" pos:end="85:79"><sizeof pos:start="85:55" pos:end="85:67">sizeof<argument_list pos:start="85:61" pos:end="85:67">(<argument pos:start="85:62" pos:end="85:66"><expr pos:start="85:62" pos:end="85:66"><name pos:start="85:62" pos:end="85:66">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="85:69" pos:end="85:69">*</operator> <name pos:start="85:71" pos:end="85:79"><name pos:start="85:71" pos:end="85:71">s</name><operator pos:start="85:72" pos:end="85:73">-&gt;</operator><name pos:start="85:74" pos:end="85:79">nb_irs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:81"><expr pos:start="87:5" pos:end="87:80"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:14">data_ir</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">1</literal></expr>]</index></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:80"><name pos:start="87:21" pos:end="87:29">av_calloc</name><argument_list pos:start="87:30" pos:end="87:80">(<argument pos:start="87:31" pos:end="87:52"><expr pos:start="87:31" pos:end="87:52"><call pos:start="87:31" pos:end="87:52"><name pos:start="87:31" pos:end="87:37">FFALIGN</name><argument_list pos:start="87:38" pos:end="87:52">(<argument pos:start="87:39" pos:end="87:47"><expr pos:start="87:39" pos:end="87:47"><name pos:start="87:39" pos:end="87:47"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:47">ir_len</name></name></expr></argument>, <argument pos:start="87:50" pos:end="87:51"><expr pos:start="87:50" pos:end="87:51"><literal type="number" pos:start="87:50" pos:end="87:51">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:55" pos:end="87:79"><expr pos:start="87:55" pos:end="87:79"><sizeof pos:start="87:55" pos:end="87:67">sizeof<argument_list pos:start="87:61" pos:end="87:67">(<argument pos:start="87:62" pos:end="87:66"><expr pos:start="87:62" pos:end="87:66"><name pos:start="87:62" pos:end="87:66">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="87:69" pos:end="87:69">*</operator> <name pos:start="87:71" pos:end="87:79"><name pos:start="87:71" pos:end="87:71">s</name><operator pos:start="87:72" pos:end="87:73">-&gt;</operator><name pos:start="87:74" pos:end="87:79">nb_irs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:60"><expr pos:start="89:5" pos:end="89:59"><name pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:12">delay</name><index pos:start="89:13" pos:end="89:15">[<expr pos:start="89:14" pos:end="89:14"><literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>]</index></name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:59"><name pos:start="89:19" pos:end="89:33">av_malloc_array</name><argument_list pos:start="89:34" pos:end="89:59">(<argument pos:start="89:35" pos:end="89:43"><expr pos:start="89:35" pos:end="89:43"><name pos:start="89:35" pos:end="89:43"><name pos:start="89:35" pos:end="89:35">s</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:43">nb_irs</name></name></expr></argument>, <argument pos:start="89:46" pos:end="89:58"><expr pos:start="89:46" pos:end="89:58"><sizeof pos:start="89:46" pos:end="89:58">sizeof<argument_list pos:start="89:52" pos:end="89:58">(<argument pos:start="89:53" pos:end="89:57"><expr pos:start="89:53" pos:end="89:57"><name pos:start="89:53" pos:end="89:57">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:60"><expr pos:start="91:5" pos:end="91:59"><name pos:start="91:5" pos:end="91:15"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:12">delay</name><index pos:start="91:13" pos:end="91:15">[<expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr>]</index></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="91:59"><name pos:start="91:19" pos:end="91:33">av_malloc_array</name><argument_list pos:start="91:34" pos:end="91:59">(<argument pos:start="91:35" pos:end="91:43"><expr pos:start="91:35" pos:end="91:43"><name pos:start="91:35" pos:end="91:43"><name pos:start="91:35" pos:end="91:35">s</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:43">nb_irs</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:58"><expr pos:start="91:46" pos:end="91:58"><sizeof pos:start="91:46" pos:end="91:58">sizeof<argument_list pos:start="91:52" pos:end="91:58">(<argument pos:start="91:53" pos:end="91:57"><expr pos:start="91:53" pos:end="91:57"><name pos:start="91:53" pos:end="91:57">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="115:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:31">(<expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:15">type</name></name> <operator pos:start="95:17" pos:end="95:18">==</operator> <name pos:start="95:20" pos:end="95:30">TIME_DOMAIN</name></expr>)</condition> <block pos:start="95:33" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:90">

        <expr_stmt pos:start="97:9" pos:end="97:90"><expr pos:start="97:9" pos:end="97:89"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:21">ringbuffer</name><index pos:start="97:22" pos:end="97:24">[<expr pos:start="97:23" pos:end="97:23"><literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>]</index></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <call pos:start="97:28" pos:end="97:89"><name pos:start="97:28" pos:end="97:36">av_calloc</name><argument_list pos:start="97:37" pos:end="97:89">(<argument pos:start="97:38" pos:end="97:53"><expr pos:start="97:38" pos:end="97:53"><name pos:start="97:38" pos:end="97:53"><name pos:start="97:38" pos:end="97:38">s</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:53">buffer_length</name></name></expr></argument>, <argument pos:start="97:56" pos:end="97:88"><expr pos:start="97:56" pos:end="97:88"><sizeof pos:start="97:56" pos:end="97:68">sizeof<argument_list pos:start="97:62" pos:end="97:68">(<argument pos:start="97:63" pos:end="97:67"><expr pos:start="97:63" pos:end="97:67"><name pos:start="97:63" pos:end="97:67">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="97:70" pos:end="97:70">*</operator> <name pos:start="97:72" pos:end="97:88">nb_input_channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:90"><expr pos:start="99:9" pos:end="99:89"><name pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:21">ringbuffer</name><index pos:start="99:22" pos:end="99:24">[<expr pos:start="99:23" pos:end="99:23"><literal type="number" pos:start="99:23" pos:end="99:23">1</literal></expr>]</index></name> <operator pos:start="99:26" pos:end="99:26">=</operator> <call pos:start="99:28" pos:end="99:89"><name pos:start="99:28" pos:end="99:36">av_calloc</name><argument_list pos:start="99:37" pos:end="99:89">(<argument pos:start="99:38" pos:end="99:53"><expr pos:start="99:38" pos:end="99:53"><name pos:start="99:38" pos:end="99:53"><name pos:start="99:38" pos:end="99:38">s</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:53">buffer_length</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:88"><expr pos:start="99:56" pos:end="99:88"><sizeof pos:start="99:56" pos:end="99:68">sizeof<argument_list pos:start="99:62" pos:end="99:68">(<argument pos:start="99:63" pos:end="99:67"><expr pos:start="99:63" pos:end="99:67"><name pos:start="99:63" pos:end="99:67">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="99:70" pos:end="99:70">*</operator> <name pos:start="99:72" pos:end="99:88">nb_input_channels</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="115:5">else <block pos:start="101:12" pos:end="115:5">{<block_content pos:start="103:9" pos:end="113:35">

        <expr_stmt pos:start="103:9" pos:end="103:70"><expr pos:start="103:9" pos:end="103:69"><name pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:21">ringbuffer</name><index pos:start="103:22" pos:end="103:24">[<expr pos:start="103:23" pos:end="103:23"><literal type="number" pos:start="103:23" pos:end="103:23">0</literal></expr>]</index></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:69"><name pos:start="103:28" pos:end="103:36">av_calloc</name><argument_list pos:start="103:37" pos:end="103:69">(<argument pos:start="103:38" pos:end="103:53"><expr pos:start="103:38" pos:end="103:53"><name pos:start="103:38" pos:end="103:53"><name pos:start="103:38" pos:end="103:38">s</name><operator pos:start="103:39" pos:end="103:40">-&gt;</operator><name pos:start="103:41" pos:end="103:53">buffer_length</name></name></expr></argument>, <argument pos:start="103:56" pos:end="103:68"><expr pos:start="103:56" pos:end="103:68"><sizeof pos:start="103:56" pos:end="103:68">sizeof<argument_list pos:start="103:62" pos:end="103:68">(<argument pos:start="103:63" pos:end="103:67"><expr pos:start="103:63" pos:end="103:67"><name pos:start="103:63" pos:end="103:67">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:70"><expr pos:start="105:9" pos:end="105:69"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:21">ringbuffer</name><index pos:start="105:22" pos:end="105:24">[<expr pos:start="105:23" pos:end="105:23"><literal type="number" pos:start="105:23" pos:end="105:23">1</literal></expr>]</index></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:69"><name pos:start="105:28" pos:end="105:36">av_calloc</name><argument_list pos:start="105:37" pos:end="105:69">(<argument pos:start="105:38" pos:end="105:53"><expr pos:start="105:38" pos:end="105:53"><name pos:start="105:38" pos:end="105:53"><name pos:start="105:38" pos:end="105:38">s</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:53">buffer_length</name></name></expr></argument>, <argument pos:start="105:56" pos:end="105:68"><expr pos:start="105:56" pos:end="105:68"><sizeof pos:start="105:56" pos:end="105:68">sizeof<argument_list pos:start="105:62" pos:end="105:68">(<argument pos:start="105:63" pos:end="105:67"><expr pos:start="105:63" pos:end="105:67"><name pos:start="105:63" pos:end="105:67">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:71"><expr pos:start="107:9" pos:end="107:70"><name pos:start="107:9" pos:end="107:22"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:19">temp_fft</name><index pos:start="107:20" pos:end="107:22">[<expr pos:start="107:21" pos:end="107:21"><literal type="number" pos:start="107:21" pos:end="107:21">0</literal></expr>]</index></name> <operator pos:start="107:24" pos:end="107:24">=</operator> <call pos:start="107:26" pos:end="107:70"><name pos:start="107:26" pos:end="107:40">av_malloc_array</name><argument_list pos:start="107:41" pos:end="107:70">(<argument pos:start="107:42" pos:end="107:49"><expr pos:start="107:42" pos:end="107:49"><name pos:start="107:42" pos:end="107:49"><name pos:start="107:42" pos:end="107:42">s</name><operator pos:start="107:43" pos:end="107:44">-&gt;</operator><name pos:start="107:45" pos:end="107:49">n_fft</name></name></expr></argument>, <argument pos:start="107:52" pos:end="107:69"><expr pos:start="107:52" pos:end="107:69"><sizeof pos:start="107:52" pos:end="107:69">sizeof<argument_list pos:start="107:58" pos:end="107:69">(<argument pos:start="107:59" pos:end="107:68"><expr pos:start="107:59" pos:end="107:68"><name pos:start="107:59" pos:end="107:68">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:71"><expr pos:start="109:9" pos:end="109:70"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:19">temp_fft</name><index pos:start="109:20" pos:end="109:22">[<expr pos:start="109:21" pos:end="109:21"><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>]</index></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <call pos:start="109:26" pos:end="109:70"><name pos:start="109:26" pos:end="109:40">av_malloc_array</name><argument_list pos:start="109:41" pos:end="109:70">(<argument pos:start="109:42" pos:end="109:49"><expr pos:start="109:42" pos:end="109:49"><name pos:start="109:42" pos:end="109:49"><name pos:start="109:42" pos:end="109:42">s</name><operator pos:start="109:43" pos:end="109:44">-&gt;</operator><name pos:start="109:45" pos:end="109:49">n_fft</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:69"><expr pos:start="109:52" pos:end="109:69"><sizeof pos:start="109:52" pos:end="109:69">sizeof<argument_list pos:start="109:58" pos:end="109:69">(<argument pos:start="109:59" pos:end="109:68"><expr pos:start="109:59" pos:end="109:68"><name pos:start="109:59" pos:end="109:68">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:35"><if pos:start="111:9" pos:end="113:35">if <condition pos:start="111:12" pos:end="111:47">(<expr pos:start="111:13" pos:end="111:46"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:27"><name pos:start="111:14" pos:end="111:14">s</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:24">temp_fft</name><index pos:start="111:25" pos:end="111:27">[<expr pos:start="111:26" pos:end="111:26"><literal type="number" pos:start="111:26" pos:end="111:26">0</literal></expr>]</index></name> <operator pos:start="111:29" pos:end="111:30">||</operator> <operator pos:start="111:32" pos:end="111:32">!</operator><name pos:start="111:33" pos:end="111:46"><name pos:start="111:33" pos:end="111:33">s</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:43">temp_fft</name><index pos:start="111:44" pos:end="111:46">[<expr pos:start="111:45" pos:end="111:45"><literal type="number" pos:start="111:45" pos:end="111:45">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:35"><block_content pos:start="113:13" pos:end="113:35">

            <return pos:start="113:13" pos:end="113:35">return <expr pos:start="113:20" pos:end="113:34"><call pos:start="113:20" pos:end="113:34"><name pos:start="113:20" pos:end="113:26">AVERROR</name><argument_list pos:start="113:27" pos:end="113:34">(<argument pos:start="113:28" pos:end="113:33"><expr pos:start="113:28" pos:end="113:33"><name pos:start="113:28" pos:end="113:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="119:5" pos:end="123:31"><if pos:start="119:5" pos:end="123:31">if <condition pos:start="119:8" pos:end="121:47">(<expr pos:start="119:9" pos:end="121:46"><operator pos:start="119:9" pos:end="119:9">!</operator><name pos:start="119:10" pos:end="119:22"><name pos:start="119:10" pos:end="119:10">s</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:19">data_ir</name><index pos:start="119:20" pos:end="119:22">[<expr pos:start="119:21" pos:end="119:21"><literal type="number" pos:start="119:21" pos:end="119:21">0</literal></expr>]</index></name> <operator pos:start="119:24" pos:end="119:25">||</operator> <operator pos:start="119:27" pos:end="119:27">!</operator><name pos:start="119:28" pos:end="119:40"><name pos:start="119:28" pos:end="119:28">s</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:37">data_ir</name><index pos:start="119:38" pos:end="119:40">[<expr pos:start="119:39" pos:end="119:39"><literal type="number" pos:start="119:39" pos:end="119:39">1</literal></expr>]</index></name> <operator pos:start="119:42" pos:end="119:43">||</operator>

        <operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:25"><name pos:start="121:10" pos:end="121:10">s</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:22">ringbuffer</name><index pos:start="121:23" pos:end="121:25">[<expr pos:start="121:24" pos:end="121:24"><literal type="number" pos:start="121:24" pos:end="121:24">0</literal></expr>]</index></name> <operator pos:start="121:27" pos:end="121:28">||</operator> <operator pos:start="121:30" pos:end="121:30">!</operator><name pos:start="121:31" pos:end="121:46"><name pos:start="121:31" pos:end="121:31">s</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:43">ringbuffer</name><index pos:start="121:44" pos:end="121:46">[<expr pos:start="121:45" pos:end="121:45"><literal type="number" pos:start="121:45" pos:end="121:45">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:31"><block_content pos:start="123:9" pos:end="123:31">

        <return pos:start="123:9" pos:end="123:31">return <expr pos:start="123:16" pos:end="123:30"><call pos:start="123:16" pos:end="123:30"><name pos:start="123:16" pos:end="123:22">AVERROR</name><argument_list pos:start="123:23" pos:end="123:30">(<argument pos:start="123:24" pos:end="123:29"><expr pos:start="123:24" pos:end="123:29"><name pos:start="123:24" pos:end="123:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:66"><expr pos:start="127:5" pos:end="127:65"><name pos:start="127:5" pos:end="127:12"><name pos:start="127:5" pos:end="127:5">s</name><operator pos:start="127:6" pos:end="127:7">-&gt;</operator><name pos:start="127:8" pos:end="127:9">in</name><index pos:start="127:10" pos:end="127:12">[<expr pos:start="127:11" pos:end="127:11"><literal type="number" pos:start="127:11" pos:end="127:11">0</literal></expr>]</index></name><operator pos:start="127:13" pos:end="127:13">.</operator><name pos:start="127:14" pos:end="127:18">frame</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <call pos:start="127:22" pos:end="127:65"><name pos:start="127:22" pos:end="127:40">ff_get_audio_buffer</name><argument_list pos:start="127:41" pos:end="127:65">(<argument pos:start="127:42" pos:end="127:55"><expr pos:start="127:42" pos:end="127:55"><name pos:start="127:42" pos:end="127:55"><name pos:start="127:42" pos:end="127:44">ctx</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:52">inputs</name><index pos:start="127:53" pos:end="127:55">[<expr pos:start="127:54" pos:end="127:54"><literal type="number" pos:start="127:54" pos:end="127:54">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:58" pos:end="127:64"><expr pos:start="127:58" pos:end="127:64"><name pos:start="127:58" pos:end="127:64"><name pos:start="127:58" pos:end="127:58">s</name><operator pos:start="127:59" pos:end="127:60">-&gt;</operator><name pos:start="127:61" pos:end="127:64">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:31"><if pos:start="129:5" pos:end="131:31">if <condition pos:start="129:8" pos:end="129:24">(<expr pos:start="129:9" pos:end="129:23"><operator pos:start="129:9" pos:end="129:9">!</operator><name pos:start="129:10" pos:end="129:17"><name pos:start="129:10" pos:end="129:10">s</name><operator pos:start="129:11" pos:end="129:12">-&gt;</operator><name pos:start="129:13" pos:end="129:14">in</name><index pos:start="129:15" pos:end="129:17">[<expr pos:start="129:16" pos:end="129:16"><literal type="number" pos:start="129:16" pos:end="129:16">0</literal></expr>]</index></name><operator pos:start="129:18" pos:end="129:18">.</operator><name pos:start="129:19" pos:end="129:23">frame</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:31"><block_content pos:start="131:9" pos:end="131:31">

        <return pos:start="131:9" pos:end="131:31">return <expr pos:start="131:16" pos:end="131:30"><call pos:start="131:16" pos:end="131:30"><name pos:start="131:16" pos:end="131:22">AVERROR</name><argument_list pos:start="131:23" pos:end="131:30">(<argument pos:start="131:24" pos:end="131:29"><expr pos:start="131:24" pos:end="131:29"><name pos:start="131:24" pos:end="131:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="133:5" pos:end="141:5">for <control pos:start="133:9" pos:end="133:35">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:30"><expr pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:17">i</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <name pos:start="133:21" pos:end="133:29"><name pos:start="133:21" pos:end="133:21">s</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:29">nb_irs</name></name></expr>;</condition> <incr pos:start="133:32" pos:end="133:34"><expr pos:start="133:32" pos:end="133:34"><name pos:start="133:32" pos:end="133:32">i</name><operator pos:start="133:33" pos:end="133:34">++</operator></expr></incr>)</control> <block pos:start="133:37" pos:end="141:5">{<block_content pos:start="135:9" pos:end="139:35">

        <expr_stmt pos:start="135:9" pos:end="135:80"><expr pos:start="135:9" pos:end="135:79"><name pos:start="135:9" pos:end="135:20"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:13">in</name><index pos:start="135:14" pos:end="135:20">[<expr pos:start="135:15" pos:end="135:19"><name pos:start="135:15" pos:end="135:15">i</name> <operator pos:start="135:17" pos:end="135:17">+</operator> <literal type="number" pos:start="135:19" pos:end="135:19">1</literal></expr>]</index></name><operator pos:start="135:21" pos:end="135:21">.</operator><name pos:start="135:22" pos:end="135:26">frame</name> <operator pos:start="135:28" pos:end="135:28">=</operator> <call pos:start="135:30" pos:end="135:79"><name pos:start="135:30" pos:end="135:48">ff_get_audio_buffer</name><argument_list pos:start="135:49" pos:end="135:79">(<argument pos:start="135:50" pos:end="135:67"><expr pos:start="135:50" pos:end="135:67"><name pos:start="135:50" pos:end="135:67"><name pos:start="135:50" pos:end="135:52">ctx</name><operator pos:start="135:53" pos:end="135:54">-&gt;</operator><name pos:start="135:55" pos:end="135:60">inputs</name><index pos:start="135:61" pos:end="135:67">[<expr pos:start="135:62" pos:end="135:66"><name pos:start="135:62" pos:end="135:62">i</name> <operator pos:start="135:64" pos:end="135:64">+</operator> <literal type="number" pos:start="135:66" pos:end="135:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="135:70" pos:end="135:78"><expr pos:start="135:70" pos:end="135:78"><name pos:start="135:70" pos:end="135:78"><name pos:start="135:70" pos:end="135:70">s</name><operator pos:start="135:71" pos:end="135:72">-&gt;</operator><name pos:start="135:73" pos:end="135:78">ir_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="139:35"><if pos:start="137:9" pos:end="139:35">if <condition pos:start="137:12" pos:end="137:32">(<expr pos:start="137:13" pos:end="137:31"><operator pos:start="137:13" pos:end="137:13">!</operator><name pos:start="137:14" pos:end="137:25"><name pos:start="137:14" pos:end="137:14">s</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:18">in</name><index pos:start="137:19" pos:end="137:25">[<expr pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:20">i</name> <operator pos:start="137:22" pos:end="137:22">+</operator> <literal type="number" pos:start="137:24" pos:end="137:24">1</literal></expr>]</index></name><operator pos:start="137:26" pos:end="137:26">.</operator><name pos:start="137:27" pos:end="137:31">frame</name></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:35"><block_content pos:start="139:13" pos:end="139:35">

            <return pos:start="139:13" pos:end="139:35">return <expr pos:start="139:20" pos:end="139:34"><call pos:start="139:20" pos:end="139:34"><name pos:start="139:20" pos:end="139:26">AVERROR</name><argument_list pos:start="139:27" pos:end="139:34">(<argument pos:start="139:28" pos:end="139:33"><expr pos:start="139:28" pos:end="139:33"><name pos:start="139:28" pos:end="139:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="145:5" pos:end="183:5"><if pos:start="145:5" pos:end="167:5">if <condition pos:start="145:8" pos:end="145:31">(<expr pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:15">type</name></name> <operator pos:start="145:17" pos:end="145:18">==</operator> <name pos:start="145:20" pos:end="145:30">TIME_DOMAIN</name></expr>)</condition> <block pos:start="145:33" pos:end="167:5">{<block_content pos:start="147:9" pos:end="165:9">

        <expr_stmt pos:start="147:9" pos:end="147:71"><expr pos:start="147:9" pos:end="147:70"><name pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:19">temp_src</name><index pos:start="147:20" pos:end="147:22">[<expr pos:start="147:21" pos:end="147:21"><literal type="number" pos:start="147:21" pos:end="147:21">0</literal></expr>]</index></name> <operator pos:start="147:24" pos:end="147:24">=</operator> <call pos:start="147:26" pos:end="147:70"><name pos:start="147:26" pos:end="147:34">av_calloc</name><argument_list pos:start="147:35" pos:end="147:70">(<argument pos:start="147:36" pos:end="147:54"><expr pos:start="147:36" pos:end="147:54"><call pos:start="147:36" pos:end="147:54"><name pos:start="147:36" pos:end="147:42">FFALIGN</name><argument_list pos:start="147:43" pos:end="147:54">(<argument pos:start="147:44" pos:end="147:49"><expr pos:start="147:44" pos:end="147:49"><name pos:start="147:44" pos:end="147:49">ir_len</name></expr></argument>, <argument pos:start="147:52" pos:end="147:53"><expr pos:start="147:52" pos:end="147:53"><literal type="number" pos:start="147:52" pos:end="147:53">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:57" pos:end="147:69"><expr pos:start="147:57" pos:end="147:69"><sizeof pos:start="147:57" pos:end="147:69">sizeof<argument_list pos:start="147:63" pos:end="147:69">(<argument pos:start="147:64" pos:end="147:68"><expr pos:start="147:64" pos:end="147:68"><name pos:start="147:64" pos:end="147:68">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:71"><expr pos:start="149:9" pos:end="149:70"><name pos:start="149:9" pos:end="149:22"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:19">temp_src</name><index pos:start="149:20" pos:end="149:22">[<expr pos:start="149:21" pos:end="149:21"><literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>]</index></name> <operator pos:start="149:24" pos:end="149:24">=</operator> <call pos:start="149:26" pos:end="149:70"><name pos:start="149:26" pos:end="149:34">av_calloc</name><argument_list pos:start="149:35" pos:end="149:70">(<argument pos:start="149:36" pos:end="149:54"><expr pos:start="149:36" pos:end="149:54"><call pos:start="149:36" pos:end="149:54"><name pos:start="149:36" pos:end="149:42">FFALIGN</name><argument_list pos:start="149:43" pos:end="149:54">(<argument pos:start="149:44" pos:end="149:49"><expr pos:start="149:44" pos:end="149:49"><name pos:start="149:44" pos:end="149:49">ir_len</name></expr></argument>, <argument pos:start="149:52" pos:end="149:53"><expr pos:start="149:52" pos:end="149:53"><literal type="number" pos:start="149:52" pos:end="149:53">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="149:57" pos:end="149:69"><expr pos:start="149:57" pos:end="149:69"><sizeof pos:start="149:57" pos:end="149:69">sizeof<argument_list pos:start="149:63" pos:end="149:69">(<argument pos:start="149:64" pos:end="149:68"><expr pos:start="149:64" pos:end="149:68"><name pos:start="149:64" pos:end="149:68">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="153:9" pos:end="153:80"><expr pos:start="153:9" pos:end="153:79"><name pos:start="153:9" pos:end="153:17">data_ir_l</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="153:79"><name pos:start="153:21" pos:end="153:29">av_calloc</name><argument_list pos:start="153:30" pos:end="153:79">(<argument pos:start="153:31" pos:end="153:58"><expr pos:start="153:31" pos:end="153:58"><name pos:start="153:31" pos:end="153:36">nb_irs</name> <operator pos:start="153:38" pos:end="153:38">*</operator> <call pos:start="153:40" pos:end="153:58"><name pos:start="153:40" pos:end="153:46">FFALIGN</name><argument_list pos:start="153:47" pos:end="153:58">(<argument pos:start="153:48" pos:end="153:53"><expr pos:start="153:48" pos:end="153:53"><name pos:start="153:48" pos:end="153:53">ir_len</name></expr></argument>, <argument pos:start="153:56" pos:end="153:57"><expr pos:start="153:56" pos:end="153:57"><literal type="number" pos:start="153:56" pos:end="153:57">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="153:61" pos:end="153:78"><expr pos:start="153:61" pos:end="153:78"><sizeof pos:start="153:61" pos:end="153:78">sizeof<argument_list pos:start="153:67" pos:end="153:78">(<argument pos:start="153:68" pos:end="153:77"><expr pos:start="153:68" pos:end="153:77"><operator pos:start="153:68" pos:end="153:68">*</operator><name pos:start="153:69" pos:end="153:77">data_ir_l</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:80"><expr pos:start="155:9" pos:end="155:79"><name pos:start="155:9" pos:end="155:17">data_ir_r</name> <operator pos:start="155:19" pos:end="155:19">=</operator> <call pos:start="155:21" pos:end="155:79"><name pos:start="155:21" pos:end="155:29">av_calloc</name><argument_list pos:start="155:30" pos:end="155:79">(<argument pos:start="155:31" pos:end="155:58"><expr pos:start="155:31" pos:end="155:58"><name pos:start="155:31" pos:end="155:36">nb_irs</name> <operator pos:start="155:38" pos:end="155:38">*</operator> <call pos:start="155:40" pos:end="155:58"><name pos:start="155:40" pos:end="155:46">FFALIGN</name><argument_list pos:start="155:47" pos:end="155:58">(<argument pos:start="155:48" pos:end="155:53"><expr pos:start="155:48" pos:end="155:53"><name pos:start="155:48" pos:end="155:53">ir_len</name></expr></argument>, <argument pos:start="155:56" pos:end="155:57"><expr pos:start="155:56" pos:end="155:57"><literal type="number" pos:start="155:56" pos:end="155:57">16</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="155:61" pos:end="155:78"><expr pos:start="155:61" pos:end="155:78"><sizeof pos:start="155:61" pos:end="155:78">sizeof<argument_list pos:start="155:67" pos:end="155:78">(<argument pos:start="155:68" pos:end="155:77"><expr pos:start="155:68" pos:end="155:77"><operator pos:start="155:68" pos:end="155:68">*</operator><name pos:start="155:69" pos:end="155:77">data_ir_r</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="165:9"><if pos:start="157:9" pos:end="165:9">if <condition pos:start="157:12" pos:end="157:75">(<expr pos:start="157:13" pos:end="157:74"><operator pos:start="157:13" pos:end="157:13">!</operator><name pos:start="157:14" pos:end="157:22">data_ir_r</name> <operator pos:start="157:24" pos:end="157:25">||</operator> <operator pos:start="157:27" pos:end="157:27">!</operator><name pos:start="157:28" pos:end="157:36">data_ir_l</name> <operator pos:start="157:38" pos:end="157:39">||</operator> <operator pos:start="157:41" pos:end="157:41">!</operator><name pos:start="157:42" pos:end="157:55"><name pos:start="157:42" pos:end="157:42">s</name><operator pos:start="157:43" pos:end="157:44">-&gt;</operator><name pos:start="157:45" pos:end="157:52">temp_src</name><index pos:start="157:53" pos:end="157:55">[<expr pos:start="157:54" pos:end="157:54"><literal type="number" pos:start="157:54" pos:end="157:54">0</literal></expr>]</index></name> <operator pos:start="157:57" pos:end="157:58">||</operator> <operator pos:start="157:60" pos:end="157:60">!</operator><name pos:start="157:61" pos:end="157:74"><name pos:start="157:61" pos:end="157:61">s</name><operator pos:start="157:62" pos:end="157:63">-&gt;</operator><name pos:start="157:64" pos:end="157:71">temp_src</name><index pos:start="157:72" pos:end="157:74">[<expr pos:start="157:73" pos:end="157:73"><literal type="number" pos:start="157:73" pos:end="157:73">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="157:77" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:35">

            <expr_stmt pos:start="159:13" pos:end="159:31"><expr pos:start="159:13" pos:end="159:30"><call pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:19">av_free</name><argument_list pos:start="159:20" pos:end="159:30">(<argument pos:start="159:21" pos:end="159:29"><expr pos:start="159:21" pos:end="159:29"><name pos:start="159:21" pos:end="159:29">data_ir_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><call pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:19">av_free</name><argument_list pos:start="161:20" pos:end="161:30">(<argument pos:start="161:21" pos:end="161:29"><expr pos:start="161:21" pos:end="161:29"><name pos:start="161:21" pos:end="161:29">data_ir_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="163:13" pos:end="163:35">return <expr pos:start="163:20" pos:end="163:34"><call pos:start="163:20" pos:end="163:34"><name pos:start="163:20" pos:end="163:26">AVERROR</name><argument_list pos:start="163:27" pos:end="163:34">(<argument pos:start="163:28" pos:end="163:33"><expr pos:start="163:28" pos:end="163:33"><name pos:start="163:28" pos:end="163:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="183:5">else <block pos:start="167:12" pos:end="183:5">{<block_content pos:start="169:9" pos:end="181:9">

        <expr_stmt pos:start="169:9" pos:end="169:76"><expr pos:start="169:9" pos:end="169:75"><name pos:start="169:9" pos:end="169:19">data_hrtf_l</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:75"><name pos:start="169:23" pos:end="169:37">av_malloc_array</name><argument_list pos:start="169:38" pos:end="169:75">(<argument pos:start="169:39" pos:end="169:43"><expr pos:start="169:39" pos:end="169:43"><name pos:start="169:39" pos:end="169:43">n_fft</name></expr></argument>, <argument pos:start="169:46" pos:end="169:74"><expr pos:start="169:46" pos:end="169:74"><sizeof pos:start="169:46" pos:end="169:65">sizeof<argument_list pos:start="169:52" pos:end="169:65">(<argument pos:start="169:53" pos:end="169:64"><expr pos:start="169:53" pos:end="169:64"><operator pos:start="169:53" pos:end="169:53">*</operator><name pos:start="169:54" pos:end="169:64">data_hrtf_l</name></expr></argument>)</argument_list></sizeof> <operator pos:start="169:67" pos:end="169:67">*</operator> <name pos:start="169:69" pos:end="169:74">nb_irs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:76"><expr pos:start="171:9" pos:end="171:75"><name pos:start="171:9" pos:end="171:19">data_hrtf_r</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <call pos:start="171:23" pos:end="171:75"><name pos:start="171:23" pos:end="171:37">av_malloc_array</name><argument_list pos:start="171:38" pos:end="171:75">(<argument pos:start="171:39" pos:end="171:43"><expr pos:start="171:39" pos:end="171:43"><name pos:start="171:39" pos:end="171:43">n_fft</name></expr></argument>, <argument pos:start="171:46" pos:end="171:74"><expr pos:start="171:46" pos:end="171:74"><sizeof pos:start="171:46" pos:end="171:65">sizeof<argument_list pos:start="171:52" pos:end="171:65">(<argument pos:start="171:53" pos:end="171:64"><expr pos:start="171:53" pos:end="171:64"><operator pos:start="171:53" pos:end="171:53">*</operator><name pos:start="171:54" pos:end="171:64">data_hrtf_r</name></expr></argument>)</argument_list></sizeof> <operator pos:start="171:67" pos:end="171:67">*</operator> <name pos:start="171:69" pos:end="171:74">nb_irs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="181:9">if <condition pos:start="173:12" pos:end="173:41">(<expr pos:start="173:13" pos:end="173:40"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:24">data_hrtf_r</name> <operator pos:start="173:26" pos:end="173:27">||</operator> <operator pos:start="173:29" pos:end="173:29">!</operator><name pos:start="173:30" pos:end="173:40">data_hrtf_l</name></expr>)</condition> <block pos:start="173:43" pos:end="181:9">{<block_content pos:start="175:13" pos:end="179:35">

            <expr_stmt pos:start="175:13" pos:end="175:33"><expr pos:start="175:13" pos:end="175:32"><call pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:19">av_free</name><argument_list pos:start="175:20" pos:end="175:32">(<argument pos:start="175:21" pos:end="175:31"><expr pos:start="175:21" pos:end="175:31"><name pos:start="175:21" pos:end="175:31">data_hrtf_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:33"><expr pos:start="177:13" pos:end="177:32"><call pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:19">av_free</name><argument_list pos:start="177:20" pos:end="177:32">(<argument pos:start="177:21" pos:end="177:31"><expr pos:start="177:21" pos:end="177:31"><name pos:start="177:21" pos:end="177:31">data_hrtf_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="179:13" pos:end="179:35">return <expr pos:start="179:20" pos:end="179:34"><call pos:start="179:20" pos:end="179:34"><name pos:start="179:20" pos:end="179:26">AVERROR</name><argument_list pos:start="179:27" pos:end="179:34">(<argument pos:start="179:28" pos:end="179:33"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="187:5" pos:end="279:5">for <control pos:start="187:9" pos:end="187:35">(<init pos:start="187:10" pos:end="187:15"><expr pos:start="187:10" pos:end="187:14"><name pos:start="187:10" pos:end="187:10">i</name> <operator pos:start="187:12" pos:end="187:12">=</operator> <literal type="number" pos:start="187:14" pos:end="187:14">0</literal></expr>;</init> <condition pos:start="187:17" pos:end="187:30"><expr pos:start="187:17" pos:end="187:29"><name pos:start="187:17" pos:end="187:17">i</name> <operator pos:start="187:19" pos:end="187:19">&lt;</operator> <name pos:start="187:21" pos:end="187:29"><name pos:start="187:21" pos:end="187:21">s</name><operator pos:start="187:22" pos:end="187:23">-&gt;</operator><name pos:start="187:24" pos:end="187:29">nb_irs</name></name></expr>;</condition> <incr pos:start="187:32" pos:end="187:34"><expr pos:start="187:32" pos:end="187:34"><name pos:start="187:32" pos:end="187:32">i</name><operator pos:start="187:33" pos:end="187:34">++</operator></expr></incr>)</control> <block pos:start="187:37" pos:end="279:5">{<block_content pos:start="189:9" pos:end="277:9">

        <decl_stmt pos:start="189:9" pos:end="189:38"><decl pos:start="189:9" pos:end="189:37"><type pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:11">int</name></type> <name pos:start="189:13" pos:end="189:15">len</name> <init pos:start="189:17" pos:end="189:37">= <expr pos:start="189:19" pos:end="189:37"><name pos:start="189:19" pos:end="189:30"><name pos:start="189:19" pos:end="189:19">s</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:23">in</name><index pos:start="189:24" pos:end="189:30">[<expr pos:start="189:25" pos:end="189:29"><name pos:start="189:25" pos:end="189:25">i</name> <operator pos:start="189:27" pos:end="189:27">+</operator> <literal type="number" pos:start="189:29" pos:end="189:29">1</literal></expr>]</index></name><operator pos:start="189:31" pos:end="189:31">.</operator><name pos:start="189:32" pos:end="189:37">ir_len</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="191:9" pos:end="191:43"><decl pos:start="191:9" pos:end="191:42"><type pos:start="191:9" pos:end="191:11"><name pos:start="191:9" pos:end="191:11">int</name></type> <name pos:start="191:13" pos:end="191:19">delay_l</name> <init pos:start="191:21" pos:end="191:42">= <expr pos:start="191:23" pos:end="191:42"><name pos:start="191:23" pos:end="191:34"><name pos:start="191:23" pos:end="191:23">s</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:27">in</name><index pos:start="191:28" pos:end="191:34">[<expr pos:start="191:29" pos:end="191:33"><name pos:start="191:29" pos:end="191:29">i</name> <operator pos:start="191:31" pos:end="191:31">+</operator> <literal type="number" pos:start="191:33" pos:end="191:33">1</literal></expr>]</index></name><operator pos:start="191:35" pos:end="191:35">.</operator><name pos:start="191:36" pos:end="191:42">delay_l</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:43"><decl pos:start="193:9" pos:end="193:42"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:19">delay_r</name> <init pos:start="193:21" pos:end="193:42">= <expr pos:start="193:23" pos:end="193:42"><name pos:start="193:23" pos:end="193:34"><name pos:start="193:23" pos:end="193:23">s</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:27">in</name><index pos:start="193:28" pos:end="193:34">[<expr pos:start="193:29" pos:end="193:33"><name pos:start="193:29" pos:end="193:29">i</name> <operator pos:start="193:31" pos:end="193:31">+</operator> <literal type="number" pos:start="193:33" pos:end="193:33">1</literal></expr>]</index></name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:42">delay_r</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="195:9" pos:end="195:21"><decl pos:start="195:9" pos:end="195:20"><type pos:start="195:9" pos:end="195:11"><name pos:start="195:9" pos:end="195:11">int</name></type> <name pos:start="195:13" pos:end="195:15">idx</name> <init pos:start="195:17" pos:end="195:20">= <expr pos:start="195:19" pos:end="195:20"><operator pos:start="195:19" pos:end="195:19">-</operator><literal type="number" pos:start="195:20" pos:end="195:20">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="197:9" pos:end="197:19"><decl pos:start="197:9" pos:end="197:18"><type pos:start="197:9" pos:end="197:15"><name pos:start="197:9" pos:end="197:13">float</name> <modifier pos:start="197:15" pos:end="197:15">*</modifier></type><name pos:start="197:16" pos:end="197:18">ptr</name></decl>;</decl_stmt>



        <for pos:start="201:9" pos:end="219:9">for <control pos:start="201:13" pos:end="201:46">(<init pos:start="201:14" pos:end="201:19"><expr pos:start="201:14" pos:end="201:18"><name pos:start="201:14" pos:end="201:14">j</name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</init> <condition pos:start="201:21" pos:end="201:41"><expr pos:start="201:21" pos:end="201:40"><name pos:start="201:21" pos:end="201:21">j</name> <operator pos:start="201:23" pos:end="201:23">&lt;</operator> <name pos:start="201:25" pos:end="201:40"><name pos:start="201:25" pos:end="201:30">inlink</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:40">channels</name></name></expr>;</condition> <incr pos:start="201:43" pos:end="201:45"><expr pos:start="201:43" pos:end="201:45"><name pos:start="201:43" pos:end="201:43">j</name><operator pos:start="201:44" pos:end="201:45">++</operator></expr></incr>)</control> <block pos:start="201:48" pos:end="219:9">{<block_content pos:start="203:13" pos:end="217:13">

            <if_stmt pos:start="203:13" pos:end="207:13"><if pos:start="203:13" pos:end="207:13">if <condition pos:start="203:16" pos:end="203:34">(<expr pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:29"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:26">mapping</name><index pos:start="203:27" pos:end="203:29">[<expr pos:start="203:28" pos:end="203:28"><name pos:start="203:28" pos:end="203:28">i</name></expr>]</index></name> <operator pos:start="203:31" pos:end="203:31">&lt;</operator> <literal type="number" pos:start="203:33" pos:end="203:33">0</literal></expr>)</condition> <block pos:start="203:36" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:25">

                <continue pos:start="205:17" pos:end="205:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="211:13" pos:end="217:13"><if pos:start="211:13" pos:end="217:13">if <condition pos:start="211:16" pos:end="211:105">(<expr pos:start="211:17" pos:end="211:104"><operator pos:start="211:17" pos:end="211:17">(</operator><call pos:start="211:18" pos:end="211:77"><name pos:start="211:18" pos:end="211:50">av_channel_layout_extract_channel</name><argument_list pos:start="211:51" pos:end="211:77">(<argument pos:start="211:52" pos:end="211:73"><expr pos:start="211:52" pos:end="211:73"><name pos:start="211:52" pos:end="211:73"><name pos:start="211:52" pos:end="211:57">inlink</name><operator pos:start="211:58" pos:end="211:59">-&gt;</operator><name pos:start="211:60" pos:end="211:73">channel_layout</name></name></expr></argument>, <argument pos:start="211:76" pos:end="211:76"><expr pos:start="211:76" pos:end="211:76"><name pos:start="211:76" pos:end="211:76">j</name></expr></argument>)</argument_list></call><operator pos:start="211:78" pos:end="211:78">)</operator> <operator pos:start="211:80" pos:end="211:81">==</operator> <operator pos:start="211:83" pos:end="211:83">(</operator><literal type="number" pos:start="211:84" pos:end="211:86">1LL</literal> <operator pos:start="211:88" pos:end="211:89">&lt;&lt;</operator> <name pos:start="211:91" pos:end="211:103"><name pos:start="211:91" pos:end="211:91">s</name><operator pos:start="211:92" pos:end="211:93">-&gt;</operator><name pos:start="211:94" pos:end="211:100">mapping</name><index pos:start="211:101" pos:end="211:103">[<expr pos:start="211:102" pos:end="211:102"><name pos:start="211:102" pos:end="211:102">i</name></expr>]</index></name><operator pos:start="211:104" pos:end="211:104">)</operator></expr>)</condition> <block pos:start="211:107" pos:end="217:13">{<block_content pos:start="213:17" pos:end="215:22">

                <expr_stmt pos:start="213:17" pos:end="213:24"><expr pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:19">idx</name> <operator pos:start="213:21" pos:end="213:21">=</operator> <name pos:start="213:23" pos:end="213:23">j</name></expr>;</expr_stmt>

                <break pos:start="215:17" pos:end="215:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="221:9" pos:end="223:21"><if pos:start="221:9" pos:end="223:21">if <condition pos:start="221:12" pos:end="221:22">(<expr pos:start="221:13" pos:end="221:21"><name pos:start="221:13" pos:end="221:15">idx</name> <operator pos:start="221:17" pos:end="221:18">==</operator> <operator pos:start="221:20" pos:end="221:20">-</operator><literal type="number" pos:start="221:21" pos:end="221:21">1</literal></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:21"><block_content pos:start="223:13" pos:end="223:21">

            <continue pos:start="223:13" pos:end="223:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:95"><expr pos:start="227:9" pos:end="227:94"><call pos:start="227:9" pos:end="227:94"><name pos:start="227:9" pos:end="227:26">av_audio_fifo_read</name><argument_list pos:start="227:27" pos:end="227:94">(<argument pos:start="227:28" pos:end="227:44"><expr pos:start="227:28" pos:end="227:44"><name pos:start="227:28" pos:end="227:39"><name pos:start="227:28" pos:end="227:28">s</name><operator pos:start="227:29" pos:end="227:30">-&gt;</operator><name pos:start="227:31" pos:end="227:32">in</name><index pos:start="227:33" pos:end="227:39">[<expr pos:start="227:34" pos:end="227:38"><name pos:start="227:34" pos:end="227:34">i</name> <operator pos:start="227:36" pos:end="227:36">+</operator> <literal type="number" pos:start="227:38" pos:end="227:38">1</literal></expr>]</index></name><operator pos:start="227:40" pos:end="227:40">.</operator><name pos:start="227:41" pos:end="227:44">fifo</name></expr></argument>, <argument pos:start="227:47" pos:end="227:88"><expr pos:start="227:47" pos:end="227:88"><operator pos:start="227:47" pos:end="227:47">(</operator><name pos:start="227:48" pos:end="227:51">void</name> <operator pos:start="227:53" pos:end="227:53">*</operator><operator pos:start="227:54" pos:end="227:54">*</operator><operator pos:start="227:55" pos:end="227:55">)</operator><name pos:start="227:56" pos:end="227:67"><name pos:start="227:56" pos:end="227:56">s</name><operator pos:start="227:57" pos:end="227:58">-&gt;</operator><name pos:start="227:59" pos:end="227:60">in</name><index pos:start="227:61" pos:end="227:67">[<expr pos:start="227:62" pos:end="227:66"><name pos:start="227:62" pos:end="227:62">i</name> <operator pos:start="227:64" pos:end="227:64">+</operator> <literal type="number" pos:start="227:66" pos:end="227:66">1</literal></expr>]</index></name><operator pos:start="227:68" pos:end="227:68">.</operator><name pos:start="227:69" pos:end="227:88"><name pos:start="227:69" pos:end="227:73">frame</name><operator pos:start="227:74" pos:end="227:75">-&gt;</operator><name pos:start="227:76" pos:end="227:88">extended_data</name></name></expr></argument>, <argument pos:start="227:91" pos:end="227:93"><expr pos:start="227:91" pos:end="227:93"><name pos:start="227:91" pos:end="227:93">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:60"><expr pos:start="229:9" pos:end="229:59"><name pos:start="229:9" pos:end="229:11">ptr</name> <operator pos:start="229:13" pos:end="229:13">=</operator> <operator pos:start="229:15" pos:end="229:15">(</operator><name pos:start="229:16" pos:end="229:20">float</name> <operator pos:start="229:22" pos:end="229:22">*</operator><operator pos:start="229:23" pos:end="229:23">)</operator><name pos:start="229:24" pos:end="229:35"><name pos:start="229:24" pos:end="229:24">s</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:28">in</name><index pos:start="229:29" pos:end="229:35">[<expr pos:start="229:30" pos:end="229:34"><name pos:start="229:30" pos:end="229:30">i</name> <operator pos:start="229:32" pos:end="229:32">+</operator> <literal type="number" pos:start="229:34" pos:end="229:34">1</literal></expr>]</index></name><operator pos:start="229:36" pos:end="229:36">.</operator><name pos:start="229:37" pos:end="229:59"><name pos:start="229:37" pos:end="229:41">frame</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:56">extended_data</name><index pos:start="229:57" pos:end="229:59">[<expr pos:start="229:58" pos:end="229:58"><literal type="number" pos:start="229:58" pos:end="229:58">0</literal></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="233:9" pos:end="277:9"><if pos:start="233:9" pos:end="245:9">if <condition pos:start="233:12" pos:end="233:35">(<expr pos:start="233:13" pos:end="233:34"><name pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:13">s</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:19">type</name></name> <operator pos:start="233:21" pos:end="233:22">==</operator> <name pos:start="233:24" pos:end="233:34">TIME_DOMAIN</name></expr>)</condition> <block pos:start="233:37" pos:end="245:9">{<block_content pos:start="235:13" pos:end="243:13">

            <expr_stmt pos:start="235:13" pos:end="235:44"><expr pos:start="235:13" pos:end="235:43"><name pos:start="235:13" pos:end="235:18">offset</name> <operator pos:start="235:20" pos:end="235:20">=</operator> <name pos:start="235:22" pos:end="235:24">idx</name> <operator pos:start="235:26" pos:end="235:26">*</operator> <call pos:start="235:28" pos:end="235:43"><name pos:start="235:28" pos:end="235:34">FFALIGN</name><argument_list pos:start="235:35" pos:end="235:43">(<argument pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:38">len</name></expr></argument>, <argument pos:start="235:41" pos:end="235:42"><expr pos:start="235:41" pos:end="235:42"><literal type="number" pos:start="235:41" pos:end="235:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="237:13" pos:end="243:13">for <control pos:start="237:17" pos:end="237:37">(<init pos:start="237:18" pos:end="237:23"><expr pos:start="237:18" pos:end="237:22"><name pos:start="237:18" pos:end="237:18">j</name> <operator pos:start="237:20" pos:end="237:20">=</operator> <literal type="number" pos:start="237:22" pos:end="237:22">0</literal></expr>;</init> <condition pos:start="237:25" pos:end="237:32"><expr pos:start="237:25" pos:end="237:31"><name pos:start="237:25" pos:end="237:25">j</name> <operator pos:start="237:27" pos:end="237:27">&lt;</operator> <name pos:start="237:29" pos:end="237:31">len</name></expr>;</condition> <incr pos:start="237:34" pos:end="237:36"><expr pos:start="237:34" pos:end="237:36"><name pos:start="237:34" pos:end="237:34">j</name><operator pos:start="237:35" pos:end="237:36">++</operator></expr></incr>)</control> <block pos:start="237:39" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:76">

                <expr_stmt pos:start="239:17" pos:end="239:76"><expr pos:start="239:17" pos:end="239:75"><name pos:start="239:17" pos:end="239:37"><name pos:start="239:17" pos:end="239:25">data_ir_l</name><index pos:start="239:26" pos:end="239:37">[<expr pos:start="239:27" pos:end="239:36"><name pos:start="239:27" pos:end="239:32">offset</name> <operator pos:start="239:34" pos:end="239:34">+</operator> <name pos:start="239:36" pos:end="239:36">j</name></expr>]</index></name> <operator pos:start="239:39" pos:end="239:39">=</operator> <name pos:start="239:41" pos:end="239:64"><name pos:start="239:41" pos:end="239:43">ptr</name><index pos:start="239:44" pos:end="239:64">[<expr pos:start="239:45" pos:end="239:63"><name pos:start="239:45" pos:end="239:47">len</name> <operator pos:start="239:49" pos:end="239:49">*</operator> <literal type="number" pos:start="239:51" pos:end="239:53">2</literal> <operator pos:start="239:53" pos:end="239:53">-</operator> <name pos:start="239:55" pos:end="239:55">j</name> <operator pos:start="239:57" pos:end="239:57">*</operator> <literal type="number" pos:start="239:59" pos:end="239:61">2</literal> <operator pos:start="239:61" pos:end="239:61">-</operator> <literal type="number" pos:start="239:63" pos:end="239:63">2</literal></expr>]</index></name> <operator pos:start="239:66" pos:end="239:66">*</operator> <name pos:start="239:68" pos:end="239:75">gain_lin</name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:76"><expr pos:start="241:17" pos:end="241:75"><name pos:start="241:17" pos:end="241:37"><name pos:start="241:17" pos:end="241:25">data_ir_r</name><index pos:start="241:26" pos:end="241:37">[<expr pos:start="241:27" pos:end="241:36"><name pos:start="241:27" pos:end="241:32">offset</name> <operator pos:start="241:34" pos:end="241:34">+</operator> <name pos:start="241:36" pos:end="241:36">j</name></expr>]</index></name> <operator pos:start="241:39" pos:end="241:39">=</operator> <name pos:start="241:41" pos:end="241:64"><name pos:start="241:41" pos:end="241:43">ptr</name><index pos:start="241:44" pos:end="241:64">[<expr pos:start="241:45" pos:end="241:63"><name pos:start="241:45" pos:end="241:47">len</name> <operator pos:start="241:49" pos:end="241:49">*</operator> <literal type="number" pos:start="241:51" pos:end="241:53">2</literal> <operator pos:start="241:53" pos:end="241:53">-</operator> <name pos:start="241:55" pos:end="241:55">j</name> <operator pos:start="241:57" pos:end="241:57">*</operator> <literal type="number" pos:start="241:59" pos:end="241:61">2</literal> <operator pos:start="241:61" pos:end="241:61">-</operator> <literal type="number" pos:start="241:63" pos:end="241:63">1</literal></expr>]</index></name> <operator pos:start="241:66" pos:end="241:66">*</operator> <name pos:start="241:68" pos:end="241:75">gain_lin</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="245:11" pos:end="277:9">else <block pos:start="245:16" pos:end="277:9">{<block_content pos:start="247:13" pos:end="275:78">

            <expr_stmt pos:start="247:13" pos:end="247:59"><expr pos:start="247:13" pos:end="247:58"><call pos:start="247:13" pos:end="247:58"><name pos:start="247:13" pos:end="247:18">memset</name><argument_list pos:start="247:19" pos:end="247:58">(<argument pos:start="247:20" pos:end="247:27"><expr pos:start="247:20" pos:end="247:27"><name pos:start="247:20" pos:end="247:27">fft_in_l</name></expr></argument>, <argument pos:start="247:30" pos:end="247:30"><expr pos:start="247:30" pos:end="247:30"><literal type="number" pos:start="247:30" pos:end="247:30">0</literal></expr></argument>, <argument pos:start="247:33" pos:end="247:57"><expr pos:start="247:33" pos:end="247:57"><name pos:start="247:33" pos:end="247:37">n_fft</name> <operator pos:start="247:39" pos:end="247:39">*</operator> <sizeof pos:start="247:41" pos:end="247:57">sizeof<argument_list pos:start="247:47" pos:end="247:57">(<argument pos:start="247:48" pos:end="247:56"><expr pos:start="247:48" pos:end="247:56"><operator pos:start="247:48" pos:end="247:48">*</operator><name pos:start="247:49" pos:end="247:56">fft_in_l</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:59"><expr pos:start="249:13" pos:end="249:58"><call pos:start="249:13" pos:end="249:58"><name pos:start="249:13" pos:end="249:18">memset</name><argument_list pos:start="249:19" pos:end="249:58">(<argument pos:start="249:20" pos:end="249:27"><expr pos:start="249:20" pos:end="249:27"><name pos:start="249:20" pos:end="249:27">fft_in_r</name></expr></argument>, <argument pos:start="249:30" pos:end="249:30"><expr pos:start="249:30" pos:end="249:30"><literal type="number" pos:start="249:30" pos:end="249:30">0</literal></expr></argument>, <argument pos:start="249:33" pos:end="249:57"><expr pos:start="249:33" pos:end="249:57"><name pos:start="249:33" pos:end="249:37">n_fft</name> <operator pos:start="249:39" pos:end="249:39">*</operator> <sizeof pos:start="249:41" pos:end="249:57">sizeof<argument_list pos:start="249:47" pos:end="249:57">(<argument pos:start="249:48" pos:end="249:56"><expr pos:start="249:48" pos:end="249:56"><operator pos:start="249:48" pos:end="249:48">*</operator><name pos:start="249:49" pos:end="249:56">fft_in_r</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="253:13" pos:end="253:33"><expr pos:start="253:13" pos:end="253:32"><name pos:start="253:13" pos:end="253:18">offset</name> <operator pos:start="253:20" pos:end="253:20">=</operator> <name pos:start="253:22" pos:end="253:24">idx</name> <operator pos:start="253:26" pos:end="253:26">*</operator> <name pos:start="253:28" pos:end="253:32">n_fft</name></expr>;</expr_stmt>

            <for pos:start="255:13" pos:end="261:13">for <control pos:start="255:17" pos:end="255:37">(<init pos:start="255:18" pos:end="255:23"><expr pos:start="255:18" pos:end="255:22"><name pos:start="255:18" pos:end="255:18">j</name> <operator pos:start="255:20" pos:end="255:20">=</operator> <literal type="number" pos:start="255:22" pos:end="255:22">0</literal></expr>;</init> <condition pos:start="255:25" pos:end="255:32"><expr pos:start="255:25" pos:end="255:31"><name pos:start="255:25" pos:end="255:25">j</name> <operator pos:start="255:27" pos:end="255:27">&lt;</operator> <name pos:start="255:29" pos:end="255:31">len</name></expr>;</condition> <incr pos:start="255:34" pos:end="255:36"><expr pos:start="255:34" pos:end="255:36"><name pos:start="255:34" pos:end="255:34">j</name><operator pos:start="255:35" pos:end="255:36">++</operator></expr></incr>)</control> <block pos:start="255:39" pos:end="261:13">{<block_content pos:start="257:17" pos:end="259:69">

                <expr_stmt pos:start="257:17" pos:end="257:69"><expr pos:start="257:17" pos:end="257:68"><name pos:start="257:17" pos:end="257:37"><name pos:start="257:17" pos:end="257:24">fft_in_l</name><index pos:start="257:25" pos:end="257:37">[<expr pos:start="257:26" pos:end="257:36"><name pos:start="257:26" pos:end="257:32">delay_l</name> <operator pos:start="257:34" pos:end="257:34">+</operator> <name pos:start="257:36" pos:end="257:36">j</name></expr>]</index></name><operator pos:start="257:38" pos:end="257:38">.</operator><name pos:start="257:39" pos:end="257:40">re</name> <operator pos:start="257:42" pos:end="257:42">=</operator> <name pos:start="257:44" pos:end="257:57"><name pos:start="257:44" pos:end="257:46">ptr</name><index pos:start="257:47" pos:end="257:57">[<expr pos:start="257:48" pos:end="257:52"><name pos:start="257:48" pos:end="257:48">j</name> <operator pos:start="257:50" pos:end="257:50">*</operator> <literal type="number" pos:start="257:52" pos:end="257:52">2</literal></expr>    ]</index></name> <operator pos:start="257:59" pos:end="257:59">*</operator> <name pos:start="257:61" pos:end="257:68">gain_lin</name></expr>;</expr_stmt>

                <expr_stmt pos:start="259:17" pos:end="259:69"><expr pos:start="259:17" pos:end="259:68"><name pos:start="259:17" pos:end="259:37"><name pos:start="259:17" pos:end="259:24">fft_in_r</name><index pos:start="259:25" pos:end="259:37">[<expr pos:start="259:26" pos:end="259:36"><name pos:start="259:26" pos:end="259:32">delay_r</name> <operator pos:start="259:34" pos:end="259:34">+</operator> <name pos:start="259:36" pos:end="259:36">j</name></expr>]</index></name><operator pos:start="259:38" pos:end="259:38">.</operator><name pos:start="259:39" pos:end="259:40">re</name> <operator pos:start="259:42" pos:end="259:42">=</operator> <name pos:start="259:44" pos:end="259:57"><name pos:start="259:44" pos:end="259:46">ptr</name><index pos:start="259:47" pos:end="259:57">[<expr pos:start="259:48" pos:end="259:56"><name pos:start="259:48" pos:end="259:48">j</name> <operator pos:start="259:50" pos:end="259:50">*</operator> <literal type="number" pos:start="259:52" pos:end="259:54">2</literal> <operator pos:start="259:54" pos:end="259:54">+</operator> <literal type="number" pos:start="259:56" pos:end="259:56">1</literal></expr>]</index></name> <operator pos:start="259:59" pos:end="259:59">*</operator> <name pos:start="259:61" pos:end="259:68">gain_lin</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="265:13" pos:end="265:48"><expr pos:start="265:13" pos:end="265:47"><call pos:start="265:13" pos:end="265:47"><name pos:start="265:13" pos:end="265:26">av_fft_permute</name><argument_list pos:start="265:27" pos:end="265:47">(<argument pos:start="265:28" pos:end="265:36"><expr pos:start="265:28" pos:end="265:36"><name pos:start="265:28" pos:end="265:36"><name pos:start="265:28" pos:end="265:28">s</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:33">fft</name><index pos:start="265:34" pos:end="265:36">[<expr pos:start="265:35" pos:end="265:35"><literal type="number" pos:start="265:35" pos:end="265:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="265:39" pos:end="265:46"><expr pos:start="265:39" pos:end="265:46"><name pos:start="265:39" pos:end="265:46">fft_in_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:45"><expr pos:start="267:13" pos:end="267:44"><call pos:start="267:13" pos:end="267:44"><name pos:start="267:13" pos:end="267:23">av_fft_calc</name><argument_list pos:start="267:24" pos:end="267:44">(<argument pos:start="267:25" pos:end="267:33"><expr pos:start="267:25" pos:end="267:33"><name pos:start="267:25" pos:end="267:33"><name pos:start="267:25" pos:end="267:25">s</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:30">fft</name><index pos:start="267:31" pos:end="267:33">[<expr pos:start="267:32" pos:end="267:32"><literal type="number" pos:start="267:32" pos:end="267:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="267:36" pos:end="267:43"><expr pos:start="267:36" pos:end="267:43"><name pos:start="267:36" pos:end="267:43">fft_in_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:78"><expr pos:start="269:13" pos:end="269:77"><call pos:start="269:13" pos:end="269:77"><name pos:start="269:13" pos:end="269:18">memcpy</name><argument_list pos:start="269:19" pos:end="269:77">(<argument pos:start="269:20" pos:end="269:39"><expr pos:start="269:20" pos:end="269:39"><name pos:start="269:20" pos:end="269:30">data_hrtf_l</name> <operator pos:start="269:32" pos:end="269:32">+</operator> <name pos:start="269:34" pos:end="269:39">offset</name></expr></argument>, <argument pos:start="269:42" pos:end="269:49"><expr pos:start="269:42" pos:end="269:49"><name pos:start="269:42" pos:end="269:49">fft_in_l</name></expr></argument>, <argument pos:start="269:52" pos:end="269:76"><expr pos:start="269:52" pos:end="269:76"><name pos:start="269:52" pos:end="269:56">n_fft</name> <operator pos:start="269:58" pos:end="269:58">*</operator> <sizeof pos:start="269:60" pos:end="269:76">sizeof<argument_list pos:start="269:66" pos:end="269:76">(<argument pos:start="269:67" pos:end="269:75"><expr pos:start="269:67" pos:end="269:75"><operator pos:start="269:67" pos:end="269:67">*</operator><name pos:start="269:68" pos:end="269:75">fft_in_l</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:48"><expr pos:start="271:13" pos:end="271:47"><call pos:start="271:13" pos:end="271:47"><name pos:start="271:13" pos:end="271:26">av_fft_permute</name><argument_list pos:start="271:27" pos:end="271:47">(<argument pos:start="271:28" pos:end="271:36"><expr pos:start="271:28" pos:end="271:36"><name pos:start="271:28" pos:end="271:36"><name pos:start="271:28" pos:end="271:28">s</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:33">fft</name><index pos:start="271:34" pos:end="271:36">[<expr pos:start="271:35" pos:end="271:35"><literal type="number" pos:start="271:35" pos:end="271:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="271:39" pos:end="271:46"><expr pos:start="271:39" pos:end="271:46"><name pos:start="271:39" pos:end="271:46">fft_in_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:45"><expr pos:start="273:13" pos:end="273:44"><call pos:start="273:13" pos:end="273:44"><name pos:start="273:13" pos:end="273:23">av_fft_calc</name><argument_list pos:start="273:24" pos:end="273:44">(<argument pos:start="273:25" pos:end="273:33"><expr pos:start="273:25" pos:end="273:33"><name pos:start="273:25" pos:end="273:33"><name pos:start="273:25" pos:end="273:25">s</name><operator pos:start="273:26" pos:end="273:27">-&gt;</operator><name pos:start="273:28" pos:end="273:30">fft</name><index pos:start="273:31" pos:end="273:33">[<expr pos:start="273:32" pos:end="273:32"><literal type="number" pos:start="273:32" pos:end="273:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="273:36" pos:end="273:43"><expr pos:start="273:36" pos:end="273:43"><name pos:start="273:36" pos:end="273:43">fft_in_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:78"><expr pos:start="275:13" pos:end="275:77"><call pos:start="275:13" pos:end="275:77"><name pos:start="275:13" pos:end="275:18">memcpy</name><argument_list pos:start="275:19" pos:end="275:77">(<argument pos:start="275:20" pos:end="275:39"><expr pos:start="275:20" pos:end="275:39"><name pos:start="275:20" pos:end="275:30">data_hrtf_r</name> <operator pos:start="275:32" pos:end="275:32">+</operator> <name pos:start="275:34" pos:end="275:39">offset</name></expr></argument>, <argument pos:start="275:42" pos:end="275:49"><expr pos:start="275:42" pos:end="275:49"><name pos:start="275:42" pos:end="275:49">fft_in_r</name></expr></argument>, <argument pos:start="275:52" pos:end="275:76"><expr pos:start="275:52" pos:end="275:76"><name pos:start="275:52" pos:end="275:56">n_fft</name> <operator pos:start="275:58" pos:end="275:58">*</operator> <sizeof pos:start="275:60" pos:end="275:76">sizeof<argument_list pos:start="275:66" pos:end="275:76">(<argument pos:start="275:67" pos:end="275:75"><expr pos:start="275:67" pos:end="275:75"><operator pos:start="275:67" pos:end="275:67">*</operator><name pos:start="275:68" pos:end="275:75">fft_in_r</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="283:5" pos:end="337:5"><if pos:start="283:5" pos:end="295:5">if <condition pos:start="283:8" pos:end="283:31">(<expr pos:start="283:9" pos:end="283:30"><name pos:start="283:9" pos:end="283:15"><name pos:start="283:9" pos:end="283:9">s</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:15">type</name></name> <operator pos:start="283:17" pos:end="283:18">==</operator> <name pos:start="283:20" pos:end="283:30">TIME_DOMAIN</name></expr>)</condition> <block pos:start="283:33" pos:end="295:5">{<block_content pos:start="285:9" pos:end="293:29">

        <expr_stmt pos:start="285:9" pos:end="285:87"><expr pos:start="285:9" pos:end="285:86"><call pos:start="285:9" pos:end="285:86"><name pos:start="285:9" pos:end="285:14">memcpy</name><argument_list pos:start="285:15" pos:end="285:86">(<argument pos:start="285:16" pos:end="285:28"><expr pos:start="285:16" pos:end="285:28"><name pos:start="285:16" pos:end="285:28"><name pos:start="285:16" pos:end="285:16">s</name><operator pos:start="285:17" pos:end="285:18">-&gt;</operator><name pos:start="285:19" pos:end="285:25">data_ir</name><index pos:start="285:26" pos:end="285:28">[<expr pos:start="285:27" pos:end="285:27"><literal type="number" pos:start="285:27" pos:end="285:27">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="285:31" pos:end="285:39"><expr pos:start="285:31" pos:end="285:39"><name pos:start="285:31" pos:end="285:39">data_ir_l</name></expr></argument>, <argument pos:start="285:42" pos:end="285:85"><expr pos:start="285:42" pos:end="285:85"><sizeof pos:start="285:42" pos:end="285:54">sizeof<argument_list pos:start="285:48" pos:end="285:54">(<argument pos:start="285:49" pos:end="285:53"><expr pos:start="285:49" pos:end="285:53"><name pos:start="285:49" pos:end="285:53">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="285:56" pos:end="285:56">*</operator> <name pos:start="285:58" pos:end="285:63">nb_irs</name> <operator pos:start="285:65" pos:end="285:65">*</operator> <call pos:start="285:67" pos:end="285:85"><name pos:start="285:67" pos:end="285:73">FFALIGN</name><argument_list pos:start="285:74" pos:end="285:85">(<argument pos:start="285:75" pos:end="285:80"><expr pos:start="285:75" pos:end="285:80"><name pos:start="285:75" pos:end="285:80">ir_len</name></expr></argument>, <argument pos:start="285:83" pos:end="285:84"><expr pos:start="285:83" pos:end="285:84"><literal type="number" pos:start="285:83" pos:end="285:84">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:87"><expr pos:start="287:9" pos:end="287:86"><call pos:start="287:9" pos:end="287:86"><name pos:start="287:9" pos:end="287:14">memcpy</name><argument_list pos:start="287:15" pos:end="287:86">(<argument pos:start="287:16" pos:end="287:28"><expr pos:start="287:16" pos:end="287:28"><name pos:start="287:16" pos:end="287:28"><name pos:start="287:16" pos:end="287:16">s</name><operator pos:start="287:17" pos:end="287:18">-&gt;</operator><name pos:start="287:19" pos:end="287:25">data_ir</name><index pos:start="287:26" pos:end="287:28">[<expr pos:start="287:27" pos:end="287:27"><literal type="number" pos:start="287:27" pos:end="287:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="287:31" pos:end="287:39"><expr pos:start="287:31" pos:end="287:39"><name pos:start="287:31" pos:end="287:39">data_ir_r</name></expr></argument>, <argument pos:start="287:42" pos:end="287:85"><expr pos:start="287:42" pos:end="287:85"><sizeof pos:start="287:42" pos:end="287:54">sizeof<argument_list pos:start="287:48" pos:end="287:54">(<argument pos:start="287:49" pos:end="287:53"><expr pos:start="287:49" pos:end="287:53"><name pos:start="287:49" pos:end="287:53">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="287:56" pos:end="287:56">*</operator> <name pos:start="287:58" pos:end="287:63">nb_irs</name> <operator pos:start="287:65" pos:end="287:65">*</operator> <call pos:start="287:67" pos:end="287:85"><name pos:start="287:67" pos:end="287:73">FFALIGN</name><argument_list pos:start="287:74" pos:end="287:85">(<argument pos:start="287:75" pos:end="287:80"><expr pos:start="287:75" pos:end="287:80"><name pos:start="287:75" pos:end="287:80">ir_len</name></expr></argument>, <argument pos:start="287:83" pos:end="287:84"><expr pos:start="287:83" pos:end="287:84"><literal type="number" pos:start="287:83" pos:end="287:84">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="291:9" pos:end="291:29"><expr pos:start="291:9" pos:end="291:28"><call pos:start="291:9" pos:end="291:28"><name pos:start="291:9" pos:end="291:16">av_freep</name><argument_list pos:start="291:17" pos:end="291:28">(<argument pos:start="291:18" pos:end="291:27"><expr pos:start="291:18" pos:end="291:27"><operator pos:start="291:18" pos:end="291:18">&amp;</operator><name pos:start="291:19" pos:end="291:27">data_ir_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:29"><expr pos:start="293:9" pos:end="293:28"><call pos:start="293:9" pos:end="293:28"><name pos:start="293:9" pos:end="293:16">av_freep</name><argument_list pos:start="293:17" pos:end="293:28">(<argument pos:start="293:18" pos:end="293:27"><expr pos:start="293:18" pos:end="293:27"><operator pos:start="293:18" pos:end="293:18">&amp;</operator><name pos:start="293:19" pos:end="293:27">data_ir_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="295:7" pos:end="337:5">else <block pos:start="295:12" pos:end="337:5">{<block_content pos:start="297:9" pos:end="335:28">

        <expr_stmt pos:start="297:9" pos:end="297:81"><expr pos:start="297:9" pos:end="297:80"><name pos:start="297:9" pos:end="297:23"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:20">data_hrtf</name><index pos:start="297:21" pos:end="297:23">[<expr pos:start="297:22" pos:end="297:22"><literal type="number" pos:start="297:22" pos:end="297:22">0</literal></expr>]</index></name> <operator pos:start="297:25" pos:end="297:25">=</operator> <call pos:start="297:27" pos:end="297:80"><name pos:start="297:27" pos:end="297:41">av_malloc_array</name><argument_list pos:start="297:42" pos:end="297:80">(<argument pos:start="297:43" pos:end="297:59"><expr pos:start="297:43" pos:end="297:59"><name pos:start="297:43" pos:end="297:47">n_fft</name> <operator pos:start="297:49" pos:end="297:49">*</operator> <name pos:start="297:51" pos:end="297:59"><name pos:start="297:51" pos:end="297:51">s</name><operator pos:start="297:52" pos:end="297:53">-&gt;</operator><name pos:start="297:54" pos:end="297:59">nb_irs</name></name></expr></argument>, <argument pos:start="297:62" pos:end="297:79"><expr pos:start="297:62" pos:end="297:79"><sizeof pos:start="297:62" pos:end="297:79">sizeof<argument_list pos:start="297:68" pos:end="297:79">(<argument pos:start="297:69" pos:end="297:78"><expr pos:start="297:69" pos:end="297:78"><name pos:start="297:69" pos:end="297:78">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:81"><expr pos:start="299:9" pos:end="299:80"><name pos:start="299:9" pos:end="299:23"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:20">data_hrtf</name><index pos:start="299:21" pos:end="299:23">[<expr pos:start="299:22" pos:end="299:22"><literal type="number" pos:start="299:22" pos:end="299:22">1</literal></expr>]</index></name> <operator pos:start="299:25" pos:end="299:25">=</operator> <call pos:start="299:27" pos:end="299:80"><name pos:start="299:27" pos:end="299:41">av_malloc_array</name><argument_list pos:start="299:42" pos:end="299:80">(<argument pos:start="299:43" pos:end="299:59"><expr pos:start="299:43" pos:end="299:59"><name pos:start="299:43" pos:end="299:47">n_fft</name> <operator pos:start="299:49" pos:end="299:49">*</operator> <name pos:start="299:51" pos:end="299:59"><name pos:start="299:51" pos:end="299:51">s</name><operator pos:start="299:52" pos:end="299:53">-&gt;</operator><name pos:start="299:54" pos:end="299:59">nb_irs</name></name></expr></argument>, <argument pos:start="299:62" pos:end="299:79"><expr pos:start="299:62" pos:end="299:79"><sizeof pos:start="299:62" pos:end="299:79">sizeof<argument_list pos:start="299:68" pos:end="299:79">(<argument pos:start="299:69" pos:end="299:78"><expr pos:start="299:69" pos:end="299:78"><name pos:start="299:69" pos:end="299:78">FFTComplex</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="313:9"><if pos:start="301:9" pos:end="313:9">if <condition pos:start="301:12" pos:end="301:49">(<expr pos:start="301:13" pos:end="301:48"><operator pos:start="301:13" pos:end="301:13">!</operator><name pos:start="301:14" pos:end="301:28"><name pos:start="301:14" pos:end="301:14">s</name><operator pos:start="301:15" pos:end="301:16">-&gt;</operator><name pos:start="301:17" pos:end="301:25">data_hrtf</name><index pos:start="301:26" pos:end="301:28">[<expr pos:start="301:27" pos:end="301:27"><literal type="number" pos:start="301:27" pos:end="301:27">0</literal></expr>]</index></name> <operator pos:start="301:30" pos:end="301:31">||</operator> <operator pos:start="301:33" pos:end="301:33">!</operator><name pos:start="301:34" pos:end="301:48"><name pos:start="301:34" pos:end="301:34">s</name><operator pos:start="301:35" pos:end="301:36">-&gt;</operator><name pos:start="301:37" pos:end="301:45">data_hrtf</name><index pos:start="301:46" pos:end="301:48">[<expr pos:start="301:47" pos:end="301:47"><literal type="number" pos:start="301:47" pos:end="301:47">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="301:51" pos:end="313:9">{<block_content pos:start="303:13" pos:end="311:35">

            <expr_stmt pos:start="303:13" pos:end="303:35"><expr pos:start="303:13" pos:end="303:34"><call pos:start="303:13" pos:end="303:34"><name pos:start="303:13" pos:end="303:20">av_freep</name><argument_list pos:start="303:21" pos:end="303:34">(<argument pos:start="303:22" pos:end="303:33"><expr pos:start="303:22" pos:end="303:33"><operator pos:start="303:22" pos:end="303:22">&amp;</operator><name pos:start="303:23" pos:end="303:33">data_hrtf_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:35"><expr pos:start="305:13" pos:end="305:34"><call pos:start="305:13" pos:end="305:34"><name pos:start="305:13" pos:end="305:20">av_freep</name><argument_list pos:start="305:21" pos:end="305:34">(<argument pos:start="305:22" pos:end="305:33"><expr pos:start="305:22" pos:end="305:33"><operator pos:start="305:22" pos:end="305:22">&amp;</operator><name pos:start="305:23" pos:end="305:33">data_hrtf_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:32"><expr pos:start="307:13" pos:end="307:31"><call pos:start="307:13" pos:end="307:31"><name pos:start="307:13" pos:end="307:20">av_freep</name><argument_list pos:start="307:21" pos:end="307:31">(<argument pos:start="307:22" pos:end="307:30"><expr pos:start="307:22" pos:end="307:30"><operator pos:start="307:22" pos:end="307:22">&amp;</operator><name pos:start="307:23" pos:end="307:30">fft_in_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:32"><expr pos:start="309:13" pos:end="309:31"><call pos:start="309:13" pos:end="309:31"><name pos:start="309:13" pos:end="309:20">av_freep</name><argument_list pos:start="309:21" pos:end="309:31">(<argument pos:start="309:22" pos:end="309:30"><expr pos:start="309:22" pos:end="309:30"><operator pos:start="309:22" pos:end="309:22">&amp;</operator><name pos:start="309:23" pos:end="309:30">fft_in_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="311:13" pos:end="311:35">return <expr pos:start="311:20" pos:end="311:34"><call pos:start="311:20" pos:end="311:34"><name pos:start="311:20" pos:end="311:26">AVERROR</name><argument_list pos:start="311:27" pos:end="311:34">(<argument pos:start="311:28" pos:end="311:33"><expr pos:start="311:28" pos:end="311:33"><name pos:start="311:28" pos:end="311:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="317:9" pos:end="319:49"><expr pos:start="317:9" pos:end="319:48"><call pos:start="317:9" pos:end="319:48"><name pos:start="317:9" pos:end="317:14">memcpy</name><argument_list pos:start="317:15" pos:end="319:48">(<argument pos:start="317:16" pos:end="317:30"><expr pos:start="317:16" pos:end="317:30"><name pos:start="317:16" pos:end="317:30"><name pos:start="317:16" pos:end="317:16">s</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:27">data_hrtf</name><index pos:start="317:28" pos:end="317:30">[<expr pos:start="317:29" pos:end="317:29"><literal type="number" pos:start="317:29" pos:end="317:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="317:33" pos:end="317:43"><expr pos:start="317:33" pos:end="317:43"><name pos:start="317:33" pos:end="317:43">data_hrtf_l</name></expr></argument>,

            <argument pos:start="319:13" pos:end="319:47"><expr pos:start="319:13" pos:end="319:47"><sizeof pos:start="319:13" pos:end="319:30">sizeof<argument_list pos:start="319:19" pos:end="319:30">(<argument pos:start="319:20" pos:end="319:29"><expr pos:start="319:20" pos:end="319:29"><name pos:start="319:20" pos:end="319:29">FFTComplex</name></expr></argument>)</argument_list></sizeof> <operator pos:start="319:32" pos:end="319:32">*</operator> <name pos:start="319:34" pos:end="319:39">nb_irs</name> <operator pos:start="319:41" pos:end="319:41">*</operator> <name pos:start="319:43" pos:end="319:47">n_fft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="323:49"><expr pos:start="321:9" pos:end="323:48"><call pos:start="321:9" pos:end="323:48"><name pos:start="321:9" pos:end="321:14">memcpy</name><argument_list pos:start="321:15" pos:end="323:48">(<argument pos:start="321:16" pos:end="321:30"><expr pos:start="321:16" pos:end="321:30"><name pos:start="321:16" pos:end="321:30"><name pos:start="321:16" pos:end="321:16">s</name><operator pos:start="321:17" pos:end="321:18">-&gt;</operator><name pos:start="321:19" pos:end="321:27">data_hrtf</name><index pos:start="321:28" pos:end="321:30">[<expr pos:start="321:29" pos:end="321:29"><literal type="number" pos:start="321:29" pos:end="321:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="321:33" pos:end="321:43"><expr pos:start="321:33" pos:end="321:43"><name pos:start="321:33" pos:end="321:43">data_hrtf_r</name></expr></argument>,

            <argument pos:start="323:13" pos:end="323:47"><expr pos:start="323:13" pos:end="323:47"><sizeof pos:start="323:13" pos:end="323:30">sizeof<argument_list pos:start="323:19" pos:end="323:30">(<argument pos:start="323:20" pos:end="323:29"><expr pos:start="323:20" pos:end="323:29"><name pos:start="323:20" pos:end="323:29">FFTComplex</name></expr></argument>)</argument_list></sizeof> <operator pos:start="323:32" pos:end="323:32">*</operator> <name pos:start="323:34" pos:end="323:39">nb_irs</name> <operator pos:start="323:41" pos:end="323:41">*</operator> <name pos:start="323:43" pos:end="323:47">n_fft</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="327:9" pos:end="327:31"><expr pos:start="327:9" pos:end="327:30"><call pos:start="327:9" pos:end="327:30"><name pos:start="327:9" pos:end="327:16">av_freep</name><argument_list pos:start="327:17" pos:end="327:30">(<argument pos:start="327:18" pos:end="327:29"><expr pos:start="327:18" pos:end="327:29"><operator pos:start="327:18" pos:end="327:18">&amp;</operator><name pos:start="327:19" pos:end="327:29">data_hrtf_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:31"><expr pos:start="329:9" pos:end="329:30"><call pos:start="329:9" pos:end="329:30"><name pos:start="329:9" pos:end="329:16">av_freep</name><argument_list pos:start="329:17" pos:end="329:30">(<argument pos:start="329:18" pos:end="329:29"><expr pos:start="329:18" pos:end="329:29"><operator pos:start="329:18" pos:end="329:18">&amp;</operator><name pos:start="329:19" pos:end="329:29">data_hrtf_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="333:9" pos:end="333:28"><expr pos:start="333:9" pos:end="333:27"><call pos:start="333:9" pos:end="333:27"><name pos:start="333:9" pos:end="333:16">av_freep</name><argument_list pos:start="333:17" pos:end="333:27">(<argument pos:start="333:18" pos:end="333:26"><expr pos:start="333:18" pos:end="333:26"><operator pos:start="333:18" pos:end="333:18">&amp;</operator><name pos:start="333:19" pos:end="333:26">fft_in_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:28"><expr pos:start="335:9" pos:end="335:27"><call pos:start="335:9" pos:end="335:27"><name pos:start="335:9" pos:end="335:16">av_freep</name><argument_list pos:start="335:17" pos:end="335:27">(<argument pos:start="335:18" pos:end="335:26"><expr pos:start="335:18" pos:end="335:26"><operator pos:start="335:18" pos:end="335:18">&amp;</operator><name pos:start="335:19" pos:end="335:26">fft_in_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="341:5" pos:end="341:22"><expr pos:start="341:5" pos:end="341:21"><name pos:start="341:5" pos:end="341:17"><name pos:start="341:5" pos:end="341:5">s</name><operator pos:start="341:6" pos:end="341:7">-&gt;</operator><name pos:start="341:8" pos:end="341:17">have_hrirs</name></name> <operator pos:start="341:19" pos:end="341:19">=</operator> <literal type="number" pos:start="341:21" pos:end="341:21">1</literal></expr>;</expr_stmt>



    <return pos:start="345:5" pos:end="345:13">return <expr pos:start="345:12" pos:end="345:12"><literal type="number" pos:start="345:12" pos:end="345:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
