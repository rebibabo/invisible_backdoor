<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25186.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">inet_nonblocking_connect</name><parameter_list pos:start="1:29" pos:end="3:42">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">str</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:50">bool</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:63">in_progress</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:34">Error</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:16">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">QemuOpts</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">sock</name> <init pos:start="9:14" pos:end="9:17">= <expr pos:start="9:16" pos:end="9:17"><operator pos:start="9:16" pos:end="9:16">-</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:8">opts</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:55"><name pos:start="13:12" pos:end="13:27">qemu_opts_create</name><argument_list pos:start="13:28" pos:end="13:55">(<argument pos:start="13:29" pos:end="13:39"><expr pos:start="13:29" pos:end="13:39"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:39">dummy_opts</name></expr></argument>, <argument pos:start="13:42" pos:end="13:45"><expr pos:start="13:42" pos:end="13:45"><name pos:start="13:42" pos:end="13:45">NULL</name></expr></argument>, <argument pos:start="13:48" pos:end="13:48"><expr pos:start="13:48" pos:end="13:48"><literal type="number" pos:start="13:48" pos:end="13:48">0</literal></expr></argument>, <argument pos:start="13:51" pos:end="13:54"><expr pos:start="13:51" pos:end="13:54"><name pos:start="13:51" pos:end="13:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:18">inet_parse</name><argument_list pos:start="15:19" pos:end="15:29">(<argument pos:start="15:20" pos:end="15:23"><expr pos:start="15:20" pos:end="15:23"><name pos:start="15:20" pos:end="15:23">opts</name></expr></argument>, <argument pos:start="15:26" pos:end="15:28"><expr pos:start="15:26" pos:end="15:28"><name pos:start="15:26" pos:end="15:28">str</name></expr></argument>)</argument_list></call> <operator pos:start="15:31" pos:end="15:32">==</operator> <literal type="number" pos:start="15:34" pos:end="15:34">0</literal></expr>)</condition> <block pos:start="15:37" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:65">

        <expr_stmt pos:start="17:9" pos:end="17:65"><expr pos:start="17:9" pos:end="17:64"><name pos:start="17:9" pos:end="17:12">sock</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:64"><name pos:start="17:16" pos:end="17:32">inet_connect_opts</name><argument_list pos:start="17:33" pos:end="17:64">(<argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">opts</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">false</name></expr></argument>, <argument pos:start="17:47" pos:end="17:57"><expr pos:start="17:47" pos:end="17:57"><name pos:start="17:47" pos:end="17:57">in_progress</name></expr></argument>, <argument pos:start="17:60" pos:end="17:63"><expr pos:start="17:60" pos:end="17:63"><name pos:start="17:60" pos:end="17:63">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:51">

        <expr_stmt pos:start="21:9" pos:end="21:51"><expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:17">error_set</name><argument_list pos:start="21:18" pos:end="21:50">(<argument pos:start="21:19" pos:end="21:22"><expr pos:start="21:19" pos:end="21:22"><name pos:start="21:19" pos:end="21:22">errp</name></expr></argument>, <argument pos:start="21:25" pos:end="21:49"><expr pos:start="21:25" pos:end="21:49"><name pos:start="21:25" pos:end="21:49">QERR_SOCKET_CREATE_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><call pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:17">qemu_opts_del</name><argument_list pos:start="25:18" pos:end="25:23">(<argument pos:start="25:19" pos:end="25:22"><expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="27:5" pos:end="27:16">return <expr pos:start="27:12" pos:end="27:15"><name pos:start="27:12" pos:end="27:15">sock</name></expr>;</return>

</block_content>}</block></function>
</unit>
