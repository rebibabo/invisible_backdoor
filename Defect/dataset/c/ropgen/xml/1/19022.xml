<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19022.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vmdk_add_extent</name><parameter_list pos:start="1:27" pos:end="11:51">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:43">BlockDriverState</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">file</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:60"><decl pos:start="3:52" pos:end="3:60"><type pos:start="3:52" pos:end="3:60"><name pos:start="3:52" pos:end="3:55">bool</name></type> <name pos:start="3:57" pos:end="3:60">flat</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:77"><decl pos:start="3:63" pos:end="3:77"><type pos:start="3:63" pos:end="3:77"><name pos:start="3:63" pos:end="3:69">int64_t</name></type> <name pos:start="3:71" pos:end="3:77">sectors</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:44"><decl pos:start="5:28" pos:end="5:44"><type pos:start="5:28" pos:end="5:44"><name pos:start="5:28" pos:end="5:34">int64_t</name></type> <name pos:start="5:36" pos:end="5:44">l1_offset</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:70"><decl pos:start="5:47" pos:end="5:70"><type pos:start="5:47" pos:end="5:70"><name pos:start="5:47" pos:end="5:53">int64_t</name></type> <name pos:start="5:55" pos:end="5:70">l1_backup_offset</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:43"><decl pos:start="7:28" pos:end="7:43"><type pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:35">uint32_t</name></type> <name pos:start="7:37" pos:end="7:43">l1_size</name></decl></parameter>,

                           <parameter pos:start="9:28" pos:end="9:38"><decl pos:start="9:28" pos:end="9:38"><type pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:30">int</name></type> <name pos:start="9:32" pos:end="9:38">l2_size</name></decl></parameter>, <parameter pos:start="9:41" pos:end="9:64"><decl pos:start="9:41" pos:end="9:64"><type pos:start="9:41" pos:end="9:64"><name pos:start="9:41" pos:end="9:48">uint64_t</name></type> <name pos:start="9:50" pos:end="9:64">cluster_sectors</name></decl></parameter>,

                           <parameter pos:start="11:28" pos:end="11:50"><decl pos:start="11:28" pos:end="11:50"><type pos:start="11:28" pos:end="11:50"><name pos:start="11:28" pos:end="11:37">VmdkExtent</name> <modifier pos:start="11:39" pos:end="11:39">*</modifier><modifier pos:start="11:40" pos:end="11:40">*</modifier></type><name pos:start="11:41" pos:end="11:50">new_extent</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="101:1">{<block_content pos:start="15:5" pos:end="99:13">

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">VmdkExtent</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:22">extent</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">BDRVVmdkState</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:20">s</name> <init pos:start="17:22" pos:end="17:33">= <expr pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:25">bs</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:33">opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:23">cluster_sectors</name> <operator pos:start="21:25" pos:end="21:25">&gt;</operator> <literal type="number" pos:start="21:27" pos:end="21:34">0x200000</literal></expr>)</condition> <block pos:start="21:37" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:23">

        <comment type="block" pos:start="23:9" pos:end="23:70">/* 0x200000 * 512Bytes = 1GB for one cluster is unrealistic */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:66"><expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:65"><name pos:start="25:9" pos:end="25:20">error_report</name><argument_list pos:start="25:21" pos:end="25:65">(<argument pos:start="25:22" pos:end="25:64"><expr pos:start="25:22" pos:end="25:64"><literal type="string" pos:start="25:22" pos:end="25:64">"invalid granularity, image may be corrupt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:23">return <expr pos:start="27:16" pos:end="27:22"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:36">(<expr pos:start="31:9" pos:end="31:35"><name pos:start="31:9" pos:end="31:15">l1_size</name> <operator pos:start="31:17" pos:end="31:17">&gt;</operator> <literal type="number" pos:start="31:19" pos:end="31:21">512</literal> <operator pos:start="31:23" pos:end="31:23">*</operator> <literal type="number" pos:start="31:25" pos:end="31:28">1024</literal> <operator pos:start="31:30" pos:end="31:30">*</operator> <literal type="number" pos:start="31:32" pos:end="31:35">1024</literal></expr>)</condition> <block pos:start="31:38" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:22">

        <comment type="block" pos:start="33:9" pos:end="39:18">/* Although with big capacity and small l1_entry_sectors, we can get a

         * big l1_size, we don't want unbounded value to allocate the table.

         * Limit it to 512M, which is 16PB for default cluster and L2 table

         * size */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:20">error_report</name><argument_list pos:start="41:21" pos:end="41:39">(<argument pos:start="41:22" pos:end="41:38"><expr pos:start="41:22" pos:end="41:38"><literal type="string" pos:start="41:22" pos:end="41:38">"L1 size too big"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:22">return <expr pos:start="43:16" pos:end="43:21"><operator pos:start="43:16" pos:end="43:16">-</operator><name pos:start="43:17" pos:end="43:21">EFBIG</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:73"><expr pos:start="49:5" pos:end="51:72"><name pos:start="49:5" pos:end="49:14"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:14">extents</name></name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="51:72"><name pos:start="49:18" pos:end="49:26">g_realloc</name><argument_list pos:start="49:27" pos:end="51:72">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:37">extents</name></name></expr></argument>,

                              <argument pos:start="51:31" pos:end="51:71"><expr pos:start="51:31" pos:end="51:71"><operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:45"><name pos:start="51:32" pos:end="51:32">s</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:45">num_extents</name></name> <operator pos:start="51:47" pos:end="51:47">+</operator> <literal type="number" pos:start="51:49" pos:end="51:49">1</literal><operator pos:start="51:50" pos:end="51:50">)</operator> <operator pos:start="51:52" pos:end="51:52">*</operator> <sizeof pos:start="51:54" pos:end="51:71">sizeof<argument_list pos:start="51:60" pos:end="51:71">(<argument pos:start="51:61" pos:end="51:70"><expr pos:start="51:61" pos:end="51:70"><name pos:start="51:61" pos:end="51:70">VmdkExtent</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:10">extent</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <operator pos:start="53:14" pos:end="53:14">&amp;</operator><name pos:start="53:15" pos:end="53:40"><name pos:start="53:15" pos:end="53:15">s</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:24">extents</name><index pos:start="53:25" pos:end="53:40">[<expr pos:start="53:26" pos:end="53:39"><name pos:start="53:26" pos:end="53:39"><name pos:start="53:26" pos:end="53:26">s</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:39">num_extents</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:18">num_extents</name></name><operator pos:start="55:19" pos:end="55:20">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><call pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:41">(<argument pos:start="59:12" pos:end="59:17"><expr pos:start="59:12" pos:end="59:17"><name pos:start="59:12" pos:end="59:17">extent</name></expr></argument>, <argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr></argument>, <argument pos:start="59:23" pos:end="59:40"><expr pos:start="59:23" pos:end="59:40"><sizeof pos:start="59:23" pos:end="59:40">sizeof<argument_list pos:start="59:29" pos:end="59:40">(<argument pos:start="59:30" pos:end="59:39"><expr pos:start="59:30" pos:end="59:39"><name pos:start="59:30" pos:end="59:39">VmdkExtent</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:16"><name pos:start="61:5" pos:end="61:10">extent</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:16">file</name></name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:23">file</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:24"><expr pos:start="63:5" pos:end="63:23"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:10">extent</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:16">flat</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:23">flat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:30"><expr pos:start="65:5" pos:end="65:29"><name pos:start="65:5" pos:end="65:19"><name pos:start="65:5" pos:end="65:10">extent</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:19">sectors</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:29">sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:10">extent</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:27">l1_table_offset</name></name> <operator pos:start="67:29" pos:end="67:29">=</operator> <name pos:start="67:31" pos:end="67:39">l1_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:54"><expr pos:start="69:5" pos:end="69:53"><name pos:start="69:5" pos:end="69:34"><name pos:start="69:5" pos:end="69:10">extent</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:34">l1_backup_table_offset</name></name> <operator pos:start="69:36" pos:end="69:36">=</operator> <name pos:start="69:38" pos:end="69:53">l1_backup_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:30"><expr pos:start="71:5" pos:end="71:29"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:10">extent</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:19">l1_size</name></name> <operator pos:start="71:21" pos:end="71:21">=</operator> <name pos:start="71:23" pos:end="71:29">l1_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:57"><expr pos:start="73:5" pos:end="73:56"><name pos:start="73:5" pos:end="73:28"><name pos:start="73:5" pos:end="73:10">extent</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:28">l1_entry_sectors</name></name> <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:38">l2_size</name> <operator pos:start="73:40" pos:end="73:40">*</operator> <name pos:start="73:42" pos:end="73:56">cluster_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:10">extent</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:19">l2_size</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:29">l2_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:46"><expr pos:start="77:5" pos:end="77:45"><name pos:start="77:5" pos:end="77:27"><name pos:start="77:5" pos:end="77:10">extent</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:27">cluster_sectors</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:45">cluster_sectors</name></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:27">(<expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:22">num_extents</name></name> <operator pos:start="81:24" pos:end="81:24">&gt;</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr>)</condition> <block pos:start="81:29" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:74">

        <expr_stmt pos:start="83:9" pos:end="83:74"><expr pos:start="83:9" pos:end="83:73"><name pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:14">extent</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:26">end_sector</name></name> <operator pos:start="83:28" pos:end="83:28">=</operator> <operator pos:start="83:30" pos:end="83:30">(</operator><operator pos:start="83:31" pos:end="83:31">*</operator><operator pos:start="83:32" pos:end="83:32">(</operator><name pos:start="83:33" pos:end="83:38">extent</name> <operator pos:start="83:40" pos:end="83:40">-</operator> <literal type="number" pos:start="83:42" pos:end="83:42">1</literal><operator pos:start="83:43" pos:end="83:43">)</operator><operator pos:start="83:44" pos:end="83:44">)</operator><operator pos:start="83:45" pos:end="83:45">.</operator><name pos:start="83:46" pos:end="83:55">end_sector</name> <operator pos:start="83:57" pos:end="83:57">+</operator> <name pos:start="83:59" pos:end="83:73"><name pos:start="83:59" pos:end="83:64">extent</name><operator pos:start="83:65" pos:end="83:66">-&gt;</operator><name pos:start="83:67" pos:end="83:73">sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="89:5">else <block pos:start="85:12" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:45">

        <expr_stmt pos:start="87:9" pos:end="87:45"><expr pos:start="87:9" pos:end="87:44"><name pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:14">extent</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:26">end_sector</name></name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:35">extent</name><operator pos:start="87:36" pos:end="87:37">-&gt;</operator><name pos:start="87:38" pos:end="87:44">sectors</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:43"><expr pos:start="91:5" pos:end="91:42"><name pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:6">bs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:21">total_sectors</name></name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:42"><name pos:start="91:25" pos:end="91:30">extent</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:42">end_sector</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:19">(<expr pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:18">new_extent</name></expr>)</condition> <block pos:start="93:21" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:29">

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><operator pos:start="95:9" pos:end="95:9">*</operator><name pos:start="95:10" pos:end="95:19">new_extent</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:28">extent</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
