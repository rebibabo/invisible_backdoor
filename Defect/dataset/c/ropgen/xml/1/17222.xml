<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17222.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">TranslationBlock</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:29">tb_gen_code</name><parameter_list pos:start="1:30" pos:end="5:52">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">cpu</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:42">target_ulong</name></type> <name pos:start="3:44" pos:end="3:45">pc</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:67"><decl pos:start="3:48" pos:end="3:67"><type pos:start="3:48" pos:end="3:67"><name pos:start="3:48" pos:end="3:59">target_ulong</name></type> <name pos:start="3:61" pos:end="3:67">cs_base</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:39"><decl pos:start="5:31" pos:end="5:39"><type pos:start="5:31" pos:end="5:39"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:39">flags</name></decl></parameter>, <parameter pos:start="5:42" pos:end="5:51"><decl pos:start="5:42" pos:end="5:51"><type pos:start="5:42" pos:end="5:51"><name pos:start="5:42" pos:end="5:44">int</name></type> <name pos:start="5:46" pos:end="5:51">cflags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="191:1">{<block_content pos:start="9:5" pos:end="189:14">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">CPUArchState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">env</name> <init pos:start="9:23" pos:end="9:36">= <expr pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:36"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:36">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">TranslationBlock</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">tb_page_addr_t</name></type> <name pos:start="13:20" pos:end="13:26">phys_pc</name></decl>, <decl pos:start="13:29" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:18"/><name pos:start="13:29" pos:end="13:38">phys_page2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:27">virt_page2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:17">tcg_insn_unit</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:31">gen_code_buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="22:0"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">gen_code_size</name></decl>, <decl pos:start="19:24" pos:end="19:34"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:34">search_size</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="21:1" pos:end="21:22">#<cpp:directive pos:start="21:2" pos:end="21:6">ifdef</cpp:directive> <name pos:start="21:8" pos:end="21:22">CONFIG_PROFILER</name></cpp:ifdef>

    <decl_stmt pos:start="23:5" pos:end="26:0"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">int64_t</name></type> <name pos:start="23:13" pos:end="23:14">ti</name></decl>;</decl_stmt>

<cpp:endif pos:start="25:1" pos:end="25:6">#<cpp:directive pos:start="25:2" pos:end="25:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:11">phys_pc</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:41"><name pos:start="29:15" pos:end="29:32">get_page_addr_code</name><argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">env</name></expr></argument>, <argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:19">(<expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:18">use_icount</name></expr>)</condition> <block pos:start="31:21" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:32">

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:14">cflags</name> <operator pos:start="33:16" pos:end="33:17">|=</operator> <name pos:start="33:19" pos:end="33:31">CF_USE_ICOUNT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:22"><expr pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:6">tb</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <call pos:start="37:10" pos:end="37:21"><name pos:start="37:10" pos:end="37:17">tb_alloc</name><argument_list pos:start="37:18" pos:end="37:21">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="53:5"><if pos:start="39:5" pos:end="53:5">if <condition pos:start="39:8" pos:end="39:12">(<expr pos:start="39:9" pos:end="39:11"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:11">tb</name></expr>)</condition> <block pos:start="39:14" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:47">

        <comment type="block" pos:start="41:9" pos:end="41:32">/* flush must be done */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><call pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:16">tb_flush</name><argument_list pos:start="43:17" pos:end="43:21">(<argument pos:start="43:18" pos:end="43:20"><expr pos:start="43:18" pos:end="43:20"><name pos:start="43:18" pos:end="43:20">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:39">/* cannot fail at this point */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:10">tb</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:25"><name pos:start="47:14" pos:end="47:21">tb_alloc</name><argument_list pos:start="47:22" pos:end="47:25">(<argument pos:start="47:23" pos:end="47:24"><expr pos:start="47:23" pos:end="47:24"><name pos:start="47:23" pos:end="47:24">pc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:59">/* Don't forget to invalidate previous TB info.  */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:15">tcg_ctx</name><operator pos:start="51:16" pos:end="51:16">.</operator><name pos:start="51:17" pos:end="51:22">tb_ctx</name><operator pos:start="51:23" pos:end="51:23">.</operator><name pos:start="51:24" pos:end="51:42">tb_invalidated_flag</name></name> <operator pos:start="51:44" pos:end="51:44">=</operator> <literal type="number" pos:start="51:46" pos:end="51:46">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:16">gen_code_buf</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:39"><name pos:start="57:20" pos:end="57:26">tcg_ctx</name><operator pos:start="57:27" pos:end="57:27">.</operator><name pos:start="57:28" pos:end="57:39">code_gen_ptr</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:6">tb</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:14">tc_ptr</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:29">gen_code_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:26"><expr pos:start="61:5" pos:end="61:25"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:6">tb</name><operator pos:start="61:7" pos:end="61:8">-&gt;</operator><name pos:start="61:9" pos:end="61:15">cs_base</name></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:25">cs_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:6">tb</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:13">flags</name></name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:21">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="70:0"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:14"><name pos:start="65:5" pos:end="65:6">tb</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:14">cflags</name></name> <operator pos:start="65:16" pos:end="65:16">=</operator> <name pos:start="65:18" pos:end="65:23">cflags</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="69:1" pos:end="69:22">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="71:5" pos:end="71:24"><expr pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:11">tcg_ctx</name><operator pos:start="71:12" pos:end="71:12">.</operator><name pos:start="71:13" pos:end="71:21">tb_count1</name></name><operator pos:start="71:22" pos:end="71:23">++</operator></expr>;</expr_stmt> <comment type="block" pos:start="71:26" pos:end="73:36">/* includes aborted translations because of

                       exceptions */</comment>

    <expr_stmt pos:start="75:5" pos:end="78:0"><expr pos:start="75:5" pos:end="75:27"><name pos:start="75:5" pos:end="75:6">ti</name> <operator pos:start="75:8" pos:end="75:8">=</operator> <call pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:25">profile_getclock</name><argument_list pos:start="75:26" pos:end="75:27">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:18">tcg_func_start</name><argument_list pos:start="81:19" pos:end="81:28">(<argument pos:start="81:20" pos:end="81:27"><expr pos:start="81:20" pos:end="81:27"><operator pos:start="81:20" pos:end="81:20">&amp;</operator><name pos:start="81:21" pos:end="81:27">tcg_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:35"><expr pos:start="85:5" pos:end="85:34"><call pos:start="85:5" pos:end="85:34"><name pos:start="85:5" pos:end="85:25">gen_intermediate_code</name><argument_list pos:start="85:26" pos:end="85:34">(<argument pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:29">env</name></expr></argument>, <argument pos:start="85:32" pos:end="85:33"><expr pos:start="85:32" pos:end="85:33"><name pos:start="85:32" pos:end="85:33">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:50"><expr pos:start="89:5" pos:end="89:49"><call pos:start="89:5" pos:end="89:49"><name pos:start="89:5" pos:end="89:25">trace_translate_block</name><argument_list pos:start="89:26" pos:end="89:49">(<argument pos:start="89:27" pos:end="89:28"><expr pos:start="89:27" pos:end="89:28"><name pos:start="89:27" pos:end="89:28">tb</name></expr></argument>, <argument pos:start="89:31" pos:end="89:36"><expr pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:36"><name pos:start="89:31" pos:end="89:32">tb</name><operator pos:start="89:33" pos:end="89:34">-&gt;</operator><name pos:start="89:35" pos:end="89:36">pc</name></name></expr></argument>, <argument pos:start="89:39" pos:end="89:48"><expr pos:start="89:39" pos:end="89:48"><name pos:start="89:39" pos:end="89:48"><name pos:start="89:39" pos:end="89:40">tb</name><operator pos:start="89:41" pos:end="89:42">-&gt;</operator><name pos:start="89:43" pos:end="89:48">tc_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:31">/* generate machine code */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:35"><expr pos:start="95:5" pos:end="95:34"><name pos:start="95:5" pos:end="95:25"><name pos:start="95:5" pos:end="95:6">tb</name><operator pos:start="95:7" pos:end="95:8">-&gt;</operator><name pos:start="95:9" pos:end="95:22">tb_next_offset</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>]</index></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <literal type="number" pos:start="95:29" pos:end="95:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:6">tb</name><operator pos:start="97:7" pos:end="97:8">-&gt;</operator><name pos:start="97:9" pos:end="97:22">tb_next_offset</name><index pos:start="97:23" pos:end="97:25">[<expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">1</literal></expr>]</index></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:34">0xffff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="102:0"><expr pos:start="99:5" pos:end="99:47"><name pos:start="99:5" pos:end="99:26"><name pos:start="99:5" pos:end="99:11">tcg_ctx</name><operator pos:start="99:12" pos:end="99:12">.</operator><name pos:start="99:13" pos:end="99:26">tb_next_offset</name></name> <operator pos:start="99:28" pos:end="99:28">=</operator> <name pos:start="99:30" pos:end="99:47"><name pos:start="99:30" pos:end="99:31">tb</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:47">tb_next_offset</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="101:1" pos:end="101:22">#<cpp:directive pos:start="101:2" pos:end="101:6">ifdef</cpp:directive> <name pos:start="101:8" pos:end="101:22">USE_DIRECT_JUMP</name></cpp:ifdef>

    <expr_stmt pos:start="103:5" pos:end="103:46"><expr pos:start="103:5" pos:end="103:45"><name pos:start="103:5" pos:end="103:25"><name pos:start="103:5" pos:end="103:11">tcg_ctx</name><operator pos:start="103:12" pos:end="103:12">.</operator><name pos:start="103:13" pos:end="103:25">tb_jmp_offset</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:45"><name pos:start="103:29" pos:end="103:30">tb</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:45">tb_jmp_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="108:0"><expr pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:11">tcg_ctx</name><operator pos:start="105:12" pos:end="105:12">.</operator><name pos:start="105:13" pos:end="105:19">tb_next</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:26">NULL</name></expr>;</expr_stmt>

<cpp:else pos:start="107:1" pos:end="107:5">#<cpp:directive pos:start="107:2" pos:end="107:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:25"><name pos:start="109:5" pos:end="109:11">tcg_ctx</name><operator pos:start="109:12" pos:end="109:12">.</operator><name pos:start="109:13" pos:end="109:25">tb_jmp_offset</name></name> <operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:32">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="118:0"><expr pos:start="111:5" pos:end="111:33"><name pos:start="111:5" pos:end="111:19"><name pos:start="111:5" pos:end="111:11">tcg_ctx</name><operator pos:start="111:12" pos:end="111:12">.</operator><name pos:start="111:13" pos:end="111:19">tb_next</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:33"><name pos:start="111:23" pos:end="111:24">tb</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:33">tb_next</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="113:1" pos:end="113:6">#<cpp:directive pos:start="113:2" pos:end="113:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="117:1" pos:end="117:22">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="119:5" pos:end="119:23"><expr pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:11">tcg_ctx</name><operator pos:start="119:12" pos:end="119:12">.</operator><name pos:start="119:13" pos:end="119:20">tb_count</name></name><operator pos:start="119:21" pos:end="119:22">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:51"><expr pos:start="121:5" pos:end="121:50"><name pos:start="121:5" pos:end="121:23"><name pos:start="121:5" pos:end="121:11">tcg_ctx</name><operator pos:start="121:12" pos:end="121:12">.</operator><name pos:start="121:13" pos:end="121:23">interm_time</name></name> <operator pos:start="121:25" pos:end="121:26">+=</operator> <call pos:start="121:28" pos:end="121:45"><name pos:start="121:28" pos:end="121:43">profile_getclock</name><argument_list pos:start="121:44" pos:end="121:45">()</argument_list></call> <operator pos:start="121:47" pos:end="121:47">-</operator> <name pos:start="121:49" pos:end="121:50">ti</name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="126:0"><expr pos:start="123:5" pos:end="123:43"><name pos:start="123:5" pos:end="123:21"><name pos:start="123:5" pos:end="123:11">tcg_ctx</name><operator pos:start="123:12" pos:end="123:12">.</operator><name pos:start="123:13" pos:end="123:21">code_time</name></name> <operator pos:start="123:23" pos:end="123:24">-=</operator> <call pos:start="123:26" pos:end="123:43"><name pos:start="123:26" pos:end="123:41">profile_getclock</name><argument_list pos:start="123:42" pos:end="123:43">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:17">gen_code_size</name> <operator pos:start="129:19" pos:end="129:19">=</operator> <call pos:start="129:21" pos:end="129:56"><name pos:start="129:21" pos:end="129:32">tcg_gen_code</name><argument_list pos:start="129:33" pos:end="129:56">(<argument pos:start="129:34" pos:end="129:41"><expr pos:start="129:34" pos:end="129:41"><operator pos:start="129:34" pos:end="129:34">&amp;</operator><name pos:start="129:35" pos:end="129:41">tcg_ctx</name></expr></argument>, <argument pos:start="129:44" pos:end="129:55"><expr pos:start="129:44" pos:end="129:55"><name pos:start="129:44" pos:end="129:55">gen_code_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="136:0"><expr pos:start="131:5" pos:end="131:73"><name pos:start="131:5" pos:end="131:15">search_size</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:73"><name pos:start="131:19" pos:end="131:31">encode_search</name><argument_list pos:start="131:32" pos:end="131:73">(<argument pos:start="131:33" pos:end="131:34"><expr pos:start="131:33" pos:end="131:34"><name pos:start="131:33" pos:end="131:34">tb</name></expr></argument>, <argument pos:start="131:37" pos:end="131:72"><expr pos:start="131:37" pos:end="131:72"><operator pos:start="131:37" pos:end="131:37">(</operator><name pos:start="131:38" pos:end="131:41">void</name> <operator pos:start="131:43" pos:end="131:43">*</operator><operator pos:start="131:44" pos:end="131:44">)</operator><name pos:start="131:45" pos:end="131:56">gen_code_buf</name> <operator pos:start="131:58" pos:end="131:58">+</operator> <name pos:start="131:60" pos:end="131:72">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="135:1" pos:end="135:22">#<cpp:directive pos:start="135:2" pos:end="135:6">ifdef</cpp:directive> <name pos:start="135:8" pos:end="135:22">CONFIG_PROFILER</name></cpp:ifdef>

    <expr_stmt pos:start="137:5" pos:end="137:44"><expr pos:start="137:5" pos:end="137:43"><name pos:start="137:5" pos:end="137:21"><name pos:start="137:5" pos:end="137:11">tcg_ctx</name><operator pos:start="137:12" pos:end="137:12">.</operator><name pos:start="137:13" pos:end="137:21">code_time</name></name> <operator pos:start="137:23" pos:end="137:24">+=</operator> <call pos:start="137:26" pos:end="137:43"><name pos:start="137:26" pos:end="137:41">profile_getclock</name><argument_list pos:start="137:42" pos:end="137:43">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:36"><expr pos:start="139:5" pos:end="139:35"><name pos:start="139:5" pos:end="139:23"><name pos:start="139:5" pos:end="139:11">tcg_ctx</name><operator pos:start="139:12" pos:end="139:12">.</operator><name pos:start="139:13" pos:end="139:23">code_in_len</name></name> <operator pos:start="139:25" pos:end="139:26">+=</operator> <name pos:start="139:28" pos:end="139:35"><name pos:start="139:28" pos:end="139:29">tb</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:35">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:42"><expr pos:start="141:5" pos:end="141:41"><name pos:start="141:5" pos:end="141:24"><name pos:start="141:5" pos:end="141:11">tcg_ctx</name><operator pos:start="141:12" pos:end="141:12">.</operator><name pos:start="141:13" pos:end="141:24">code_out_len</name></name> <operator pos:start="141:26" pos:end="141:27">+=</operator> <name pos:start="141:29" pos:end="141:41">gen_code_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="150:0"><expr pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:26"><name pos:start="143:5" pos:end="143:11">tcg_ctx</name><operator pos:start="143:12" pos:end="143:12">.</operator><name pos:start="143:13" pos:end="143:26">search_out_len</name></name> <operator pos:start="143:28" pos:end="143:29">+=</operator> <name pos:start="143:31" pos:end="143:41">search_size</name></expr>;</expr_stmt>

<cpp:endif pos:start="145:1" pos:end="145:6">#<cpp:directive pos:start="145:2" pos:end="145:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="149:1" pos:end="149:18">#<cpp:directive pos:start="149:2" pos:end="149:6">ifdef</cpp:directive> <name pos:start="149:8" pos:end="149:18">DEBUG_DISAS</name></cpp:ifdef>

    <if_stmt pos:start="151:5" pos:end="164:0"><if pos:start="151:5" pos:end="164:0">if <condition pos:start="151:8" pos:end="151:47">(<expr pos:start="151:9" pos:end="151:46"><call pos:start="151:9" pos:end="151:46"><name pos:start="151:9" pos:end="151:26">qemu_loglevel_mask</name><argument_list pos:start="151:27" pos:end="151:46">(<argument pos:start="151:28" pos:end="151:45"><expr pos:start="151:28" pos:end="151:45"><name pos:start="151:28" pos:end="151:45">CPU_LOG_TB_OUT_ASM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:49" pos:end="164:0">{<block_content pos:start="153:9" pos:end="159:25">

        <expr_stmt pos:start="153:9" pos:end="153:52"><expr pos:start="153:9" pos:end="153:51"><call pos:start="153:9" pos:end="153:51"><name pos:start="153:9" pos:end="153:16">qemu_log</name><argument_list pos:start="153:17" pos:end="153:51">(<argument pos:start="153:18" pos:end="153:35"><expr pos:start="153:18" pos:end="153:35"><literal type="string" pos:start="153:18" pos:end="153:35">"OUT: [size=%d]\n"</literal></expr></argument>, <argument pos:start="153:38" pos:end="153:50"><expr pos:start="153:38" pos:end="153:50"><name pos:start="153:38" pos:end="153:50">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:45"><expr pos:start="155:9" pos:end="155:44"><call pos:start="155:9" pos:end="155:44"><name pos:start="155:9" pos:end="155:17">log_disas</name><argument_list pos:start="155:18" pos:end="155:44">(<argument pos:start="155:19" pos:end="155:28"><expr pos:start="155:19" pos:end="155:28"><name pos:start="155:19" pos:end="155:28"><name pos:start="155:19" pos:end="155:20">tb</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:28">tc_ptr</name></name></expr></argument>, <argument pos:start="155:31" pos:end="155:43"><expr pos:start="155:31" pos:end="155:43"><name pos:start="155:31" pos:end="155:43">gen_code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:23"><expr pos:start="157:9" pos:end="157:22"><call pos:start="157:9" pos:end="157:22"><name pos:start="157:9" pos:end="157:16">qemu_log</name><argument_list pos:start="157:17" pos:end="157:22">(<argument pos:start="157:18" pos:end="157:21"><expr pos:start="157:18" pos:end="157:21"><literal type="string" pos:start="157:18" pos:end="157:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:25"><expr pos:start="159:9" pos:end="159:24"><call pos:start="159:9" pos:end="159:24"><name pos:start="159:9" pos:end="159:22">qemu_log_flush</name><argument_list pos:start="159:23" pos:end="159:24">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="167:5" pos:end="171:33"><expr pos:start="167:5" pos:end="171:32"><name pos:start="167:5" pos:end="167:24"><name pos:start="167:5" pos:end="167:11">tcg_ctx</name><operator pos:start="167:12" pos:end="167:12">.</operator><name pos:start="167:13" pos:end="167:24">code_gen_ptr</name></name> <operator pos:start="167:26" pos:end="167:26">=</operator> <operator pos:start="167:28" pos:end="167:28">(</operator><name pos:start="167:29" pos:end="167:32">void</name> <operator pos:start="167:34" pos:end="167:34">*</operator><operator pos:start="167:35" pos:end="167:35">)</operator>

        <call pos:start="169:9" pos:end="171:32"><name pos:start="169:9" pos:end="169:16">ROUND_UP</name><argument_list pos:start="169:17" pos:end="171:32">(<argument pos:start="169:18" pos:end="169:70"><expr pos:start="169:18" pos:end="169:70"><operator pos:start="169:18" pos:end="169:18">(</operator><name pos:start="169:19" pos:end="169:27">uintptr_t</name><operator pos:start="169:28" pos:end="169:28">)</operator><name pos:start="169:29" pos:end="169:40">gen_code_buf</name> <operator pos:start="169:42" pos:end="169:42">+</operator> <name pos:start="169:44" pos:end="169:56">gen_code_size</name> <operator pos:start="169:58" pos:end="169:58">+</operator> <name pos:start="169:60" pos:end="169:70">search_size</name></expr></argument>,

                 <argument pos:start="171:18" pos:end="171:31"><expr pos:start="171:18" pos:end="171:31"><name pos:start="171:18" pos:end="171:31">CODE_GEN_ALIGN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="175:5" pos:end="175:35">/* check next page if needed */</comment>

    <expr_stmt pos:start="177:5" pos:end="177:56"><expr pos:start="177:5" pos:end="177:55"><name pos:start="177:5" pos:end="177:14">virt_page2</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <operator pos:start="177:18" pos:end="177:18">(</operator><name pos:start="177:19" pos:end="177:20">pc</name> <operator pos:start="177:22" pos:end="177:22">+</operator> <name pos:start="177:24" pos:end="177:31"><name pos:start="177:24" pos:end="177:25">tb</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:31">size</name></name> <operator pos:start="177:33" pos:end="177:33">-</operator> <literal type="number" pos:start="177:35" pos:end="177:35">1</literal><operator pos:start="177:36" pos:end="177:36">)</operator> <operator pos:start="177:38" pos:end="177:38">&amp;</operator> <name pos:start="177:40" pos:end="177:55">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:20"><expr pos:start="179:5" pos:end="179:19"><name pos:start="179:5" pos:end="179:14">phys_page2</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <operator pos:start="179:18" pos:end="179:18">-</operator><literal type="number" pos:start="179:19" pos:end="179:19">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="181:5" pos:end="185:5"><if pos:start="181:5" pos:end="185:5">if <condition pos:start="181:8" pos:end="181:46">(<expr pos:start="181:9" pos:end="181:45"><operator pos:start="181:9" pos:end="181:9">(</operator><name pos:start="181:10" pos:end="181:11">pc</name> <operator pos:start="181:13" pos:end="181:13">&amp;</operator> <name pos:start="181:15" pos:end="181:30">TARGET_PAGE_MASK</name><operator pos:start="181:31" pos:end="181:31">)</operator> <operator pos:start="181:33" pos:end="181:34">!=</operator> <name pos:start="181:36" pos:end="181:45">virt_page2</name></expr>)</condition> <block pos:start="181:48" pos:end="185:5">{<block_content pos:start="183:9" pos:end="183:57">

        <expr_stmt pos:start="183:9" pos:end="183:57"><expr pos:start="183:9" pos:end="183:56"><name pos:start="183:9" pos:end="183:18">phys_page2</name> <operator pos:start="183:20" pos:end="183:20">=</operator> <call pos:start="183:22" pos:end="183:56"><name pos:start="183:22" pos:end="183:39">get_page_addr_code</name><argument_list pos:start="183:40" pos:end="183:56">(<argument pos:start="183:41" pos:end="183:43"><expr pos:start="183:41" pos:end="183:43"><name pos:start="183:41" pos:end="183:43">env</name></expr></argument>, <argument pos:start="183:46" pos:end="183:55"><expr pos:start="183:46" pos:end="183:55"><name pos:start="183:46" pos:end="183:55">virt_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:42"><expr pos:start="187:5" pos:end="187:41"><call pos:start="187:5" pos:end="187:41"><name pos:start="187:5" pos:end="187:16">tb_link_page</name><argument_list pos:start="187:17" pos:end="187:41">(<argument pos:start="187:18" pos:end="187:19"><expr pos:start="187:18" pos:end="187:19"><name pos:start="187:18" pos:end="187:19">tb</name></expr></argument>, <argument pos:start="187:22" pos:end="187:28"><expr pos:start="187:22" pos:end="187:28"><name pos:start="187:22" pos:end="187:28">phys_pc</name></expr></argument>, <argument pos:start="187:31" pos:end="187:40"><expr pos:start="187:31" pos:end="187:40"><name pos:start="187:31" pos:end="187:40">phys_page2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="189:5" pos:end="189:14">return <expr pos:start="189:12" pos:end="189:13"><name pos:start="189:12" pos:end="189:13">tb</name></expr>;</return>

</block_content>}</block></function>
</unit>
