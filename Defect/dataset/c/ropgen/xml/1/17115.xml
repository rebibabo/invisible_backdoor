<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17115.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">openpic_reset</name> <parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:27">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">openpic_t</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:18">opp</name> <init pos:start="5:20" pos:end="5:40">= <expr pos:start="5:22" pos:end="5:40"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:31">openpic_t</name> <operator pos:start="5:33" pos:end="5:33">*</operator><operator pos:start="5:34" pos:end="5:34">)</operator><name pos:start="5:35" pos:end="5:40">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">opp</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:13">glbc</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <literal type="number" pos:start="11:17" pos:end="11:26">0x80000000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:41">/* Initialise controller registers */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:75"><expr pos:start="15:5" pos:end="15:74"><name pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:7">opp</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:13">frep</name></name> <operator pos:start="15:15" pos:end="15:15">=</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><operator pos:start="15:18" pos:end="15:18">(</operator><name pos:start="15:19" pos:end="15:33">OPENPIC_EXT_IRQ</name> <operator pos:start="15:35" pos:end="15:35">-</operator> <literal type="number" pos:start="15:37" pos:end="15:37">1</literal><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:41">&lt;&lt;</operator> <literal type="number" pos:start="15:43" pos:end="15:44">16</literal><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:47">|</operator> <operator pos:start="15:49" pos:end="15:49">(</operator><operator pos:start="15:50" pos:end="15:50">(</operator><name pos:start="15:51" pos:end="15:57">MAX_CPU</name> <operator pos:start="15:59" pos:end="15:59">-</operator> <literal type="number" pos:start="15:61" pos:end="15:61">1</literal><operator pos:start="15:62" pos:end="15:62">)</operator> <operator pos:start="15:64" pos:end="15:65">&lt;&lt;</operator> <literal type="number" pos:start="15:67" pos:end="15:67">8</literal><operator pos:start="15:68" pos:end="15:68">)</operator> <operator pos:start="15:70" pos:end="15:70">|</operator> <name pos:start="15:72" pos:end="15:74">VID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:7">opp</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:13">veni</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:20">VENI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:7">opp</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:13">pint</name></name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:26">0x00000000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">opp</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">spve</name></name> <operator pos:start="21:15" pos:end="21:15">=</operator> <literal type="number" pos:start="21:17" pos:end="21:26">0x000000FF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:27"><expr pos:start="23:5" pos:end="23:26"><name pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:7">opp</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:13">tifr</name></name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:26">0x003F7A00</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:11">/* ? */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:7">opp</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:13">micr</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:26">0x00000000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:32">/* Initialise IRQ sources */</comment>

    <for pos:start="31:5" pos:end="37:5">for <control pos:start="31:9" pos:end="31:38">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:33"><expr pos:start="31:17" pos:end="31:32"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:32"><name pos:start="31:21" pos:end="31:23">opp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:32">max_irq</name></name></expr>;</condition> <incr pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:35">i</name><operator pos:start="31:36" pos:end="31:37">++</operator></expr></incr>)</control> <block pos:start="31:40" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:38">

	<expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:11">opp</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:16">src</name><index pos:start="33:17" pos:end="33:19">[<expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">i</name></expr>]</index></name><operator pos:start="33:20" pos:end="33:20">.</operator><name pos:start="33:21" pos:end="33:24">ipvp</name> <operator pos:start="33:26" pos:end="33:26">=</operator> <literal type="number" pos:start="33:28" pos:end="33:37">0xA0000000</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:11">opp</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">src</name><index pos:start="35:17" pos:end="35:19">[<expr pos:start="35:18" pos:end="35:18"><name pos:start="35:18" pos:end="35:18">i</name></expr>]</index></name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:23">ide</name>  <operator pos:start="35:26" pos:end="35:26">=</operator> <literal type="number" pos:start="35:28" pos:end="35:37">0x00000000</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="39:5" pos:end="39:37">/* Initialise IRQ destinations */</comment>

    <for pos:start="41:5" pos:end="53:5">for <control pos:start="41:9" pos:end="41:33">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:28"><expr pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:27">MAX_CPU</name></expr>;</condition> <incr pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:30">i</name><operator pos:start="41:31" pos:end="41:32">++</operator></expr></incr>)</control> <block pos:start="41:35" pos:end="53:5">{<block_content pos:start="43:9" pos:end="50:63">

	<expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:11">opp</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">dst</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">i</name></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:24">pctp</name>      <operator pos:start="43:31" pos:end="43:31">=</operator> <literal type="number" pos:start="43:33" pos:end="43:42">0x0000000F</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:11">opp</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">dst</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><name pos:start="45:18" pos:end="45:18">i</name></expr>]</index></name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:24">pcsr</name>      <operator pos:start="45:31" pos:end="45:31">=</operator> <literal type="number" pos:start="45:33" pos:end="45:42">0x00000000</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><call pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:14">memset</name><argument_list pos:start="47:15" pos:end="47:59">(<argument pos:start="47:16" pos:end="47:34"><expr pos:start="47:16" pos:end="47:34"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:19">opp</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:24">dst</name><index pos:start="47:25" pos:end="47:27">[<expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">i</name></expr>]</index></name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:34">raised</name></expr></argument>, <argument pos:start="47:37" pos:end="47:37"><expr pos:start="47:37" pos:end="47:37"><literal type="number" pos:start="47:37" pos:end="47:37">0</literal></expr></argument>, <argument pos:start="47:40" pos:end="47:58"><expr pos:start="47:40" pos:end="47:58"><sizeof pos:start="47:40" pos:end="47:58">sizeof<argument_list pos:start="47:46" pos:end="47:58">(<argument pos:start="47:47" pos:end="47:57"><expr pos:start="47:47" pos:end="47:57"><name pos:start="47:47" pos:end="47:57">IRQ_queue_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<expr_stmt pos:start="50:9" pos:end="50:63"><expr pos:start="50:9" pos:end="50:62"><call pos:start="50:9" pos:end="50:62"><name pos:start="50:9" pos:end="50:14">memset</name><argument_list pos:start="50:15" pos:end="50:62">(<argument pos:start="50:16" pos:end="50:37"><expr pos:start="50:16" pos:end="50:37"><operator pos:start="50:16" pos:end="50:16">&amp;</operator><name pos:start="50:17" pos:end="50:27"><name pos:start="50:17" pos:end="50:19">opp</name><operator pos:start="50:20" pos:end="50:21">-&gt;</operator><name pos:start="50:22" pos:end="50:24">dst</name><index pos:start="50:25" pos:end="50:27">[<expr pos:start="50:26" pos:end="50:26"><name pos:start="50:26" pos:end="50:26">i</name></expr>]</index></name><operator pos:start="50:28" pos:end="50:28">.</operator><name pos:start="50:29" pos:end="50:37">servicing</name></expr></argument>, <argument pos:start="50:40" pos:end="50:40"><expr pos:start="50:40" pos:end="50:40"><literal type="number" pos:start="50:40" pos:end="50:40">0</literal></expr></argument>, <argument pos:start="50:43" pos:end="50:61"><expr pos:start="50:43" pos:end="50:61"><sizeof pos:start="50:43" pos:end="50:61">sizeof<argument_list pos:start="50:49" pos:end="50:61">(<argument pos:start="50:50" pos:end="50:60"><expr pos:start="50:50" pos:end="50:60"><name pos:start="50:50" pos:end="50:60">IRQ_queue_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></for>

    <comment type="block" pos:start="55:5" pos:end="55:27">/* Initialise timers */</comment>

    <for pos:start="57:5" pos:end="68:0">for <control pos:start="57:9" pos:end="57:33">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:28"><expr pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <name pos:start="57:21" pos:end="57:27">MAX_TMR</name></expr>;</condition> <incr pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:30">i</name><operator pos:start="57:31" pos:end="57:32">++</operator></expr></incr>)</control> <block pos:start="57:35" pos:end="68:0">{<block_content pos:start="59:9" pos:end="61:41">

	<expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:11">opp</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:19">timers</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">i</name></expr>]</index></name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:27">ticc</name> <operator pos:start="59:29" pos:end="59:29">=</operator> <literal type="number" pos:start="59:31" pos:end="59:40">0x00000000</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:11">opp</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:19">timers</name><index pos:start="61:20" pos:end="61:22">[<expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">i</name></expr>]</index></name><operator pos:start="61:23" pos:end="61:23">.</operator><name pos:start="61:24" pos:end="61:27">tibc</name> <operator pos:start="61:29" pos:end="61:29">=</operator> <literal type="number" pos:start="61:31" pos:end="61:40">0x80000000</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="65:5" pos:end="65:30">/* Initialise doorbells */</comment>

<cpp:if pos:start="67:1" pos:end="67:15">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:11">MAX_DBL</name> <operator pos:start="67:13" pos:end="67:13">&gt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr></cpp:if>

    <expr_stmt pos:start="69:5" pos:end="69:26"><expr pos:start="69:5" pos:end="69:25"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:7">opp</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:12">dar</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <literal type="number" pos:start="69:16" pos:end="69:25">0x00000000</literal></expr>;</expr_stmt>

    <for pos:start="71:5" pos:end="82:0">for <control pos:start="71:9" pos:end="71:33">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:28"><expr pos:start="71:17" pos:end="71:27"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:27">MAX_DBL</name></expr>;</condition> <incr pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:30">i</name><operator pos:start="71:31" pos:end="71:32">++</operator></expr></incr>)</control> <block pos:start="71:35" pos:end="82:0">{<block_content pos:start="73:9" pos:end="73:44">

	<expr_stmt pos:start="73:9" pos:end="73:44"><expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:11">opp</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:22">doorbells</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">i</name></expr>]</index></name><operator pos:start="73:26" pos:end="73:26">.</operator><name pos:start="73:27" pos:end="73:29">dmr</name>  <operator pos:start="73:32" pos:end="73:32">=</operator> <literal type="number" pos:start="73:34" pos:end="73:43">0x00000000</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="79:5" pos:end="79:30">/* Initialise mailboxes */</comment>

<cpp:if pos:start="81:1" pos:end="81:15">#<cpp:directive pos:start="81:2" pos:end="81:3">if</cpp:directive> <expr pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:11">MAX_MBX</name> <operator pos:start="81:13" pos:end="81:13">&gt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr></cpp:if>

    <for pos:start="83:5" pos:end="90:0">for <control pos:start="83:9" pos:end="83:33">(<init pos:start="83:10" pos:end="83:15"><expr pos:start="83:10" pos:end="83:14"><name pos:start="83:10" pos:end="83:10">i</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <literal type="number" pos:start="83:14" pos:end="83:14">0</literal></expr>;</init> <condition pos:start="83:17" pos:end="83:28"><expr pos:start="83:17" pos:end="83:27"><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">&lt;</operator> <name pos:start="83:21" pos:end="83:27">MAX_MBX</name></expr>;</condition> <incr pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:30">i</name><operator pos:start="83:31" pos:end="83:32">++</operator></expr></incr>)</control> <block pos:start="83:35" pos:end="90:0">{<block_content pos:start="85:9" pos:end="85:45"> <comment type="block" pos:start="83:37" pos:end="83:43">/* ? */</comment>

	<expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:11">opp</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">mailboxes</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><name pos:start="85:24" pos:end="85:24">i</name></expr>]</index></name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:29">mbr</name>   <operator pos:start="85:33" pos:end="85:33">=</operator> <literal type="number" pos:start="85:35" pos:end="85:44">0x00000000</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

    <comment type="block" pos:start="91:5" pos:end="91:31">/* Go out of RESET state */</comment>

    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:13"><name pos:start="93:5" pos:end="93:7">opp</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:13">glbc</name></name> <operator pos:start="93:15" pos:end="93:15">=</operator> <literal type="number" pos:start="93:17" pos:end="93:26">0x00000000</literal></expr>;</expr_stmt>

</block_content>}</block></function></unit>
