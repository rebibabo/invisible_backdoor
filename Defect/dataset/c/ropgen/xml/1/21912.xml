<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21912.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">test_visitor_in_alternate_number</name><parameter_list pos:start="1:45" pos:end="3:64">(<parameter pos:start="1:46" pos:end="1:71"><decl pos:start="1:46" pos:end="1:71"><type pos:start="1:46" pos:end="1:71"><name pos:start="1:46" pos:end="1:65">TestInputVisitorData</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">data</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:63"><decl pos:start="3:46" pos:end="3:63"><type pos:start="3:46" pos:end="3:63"><specifier pos:start="3:46" pos:end="3:50">const</specifier> <name pos:start="3:52" pos:end="3:55">void</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:63">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="175:1">{<block_content pos:start="7:5" pos:end="173:29">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Visitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">AltStrBool</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">asb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AltStrNum</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:18">asn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AltNumStr</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:18">ans</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">AltStrInt</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:18">asi</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">AltIntNum</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:18">ain</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:19"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:13">AltNumInt</name> <modifier pos:start="21:15" pos:end="21:15">*</modifier></type><name pos:start="21:16" pos:end="21:18">ani</name></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:24">/* Parsing an int */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:44"><expr pos:start="29:5" pos:end="29:43"><name pos:start="29:5" pos:end="29:5">v</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:31">visitor_input_test_init</name><argument_list pos:start="29:32" pos:end="29:43">(<argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">data</name></expr></argument>, <argument pos:start="29:39" pos:end="29:42"><expr pos:start="29:39" pos:end="29:42"><literal type="string" pos:start="29:39" pos:end="29:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><call pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:25">visit_type_AltStrBool</name><argument_list pos:start="31:26" pos:end="31:46">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">v</name></expr></argument>, <argument pos:start="31:30" pos:end="31:33"><expr pos:start="31:30" pos:end="31:33"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:33">asb</name></expr></argument>, <argument pos:start="31:36" pos:end="31:39"><expr pos:start="31:36" pos:end="31:39"><name pos:start="31:36" pos:end="31:39">NULL</name></expr></argument>, <argument pos:start="31:42" pos:end="31:45"><expr pos:start="31:42" pos:end="31:45"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><call pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:23">error_free_or_abort</name><argument_list pos:start="33:24" pos:end="33:29">(<argument pos:start="33:25" pos:end="33:28"><expr pos:start="33:25" pos:end="33:28"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:24">qapi_free_AltStrBool</name><argument_list pos:start="35:25" pos:end="35:29">(<argument pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:28">asb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="41:31">/* FIXME: Order of alternate should not affect semantics; asn should

     * parse the same as ans */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:44"><expr pos:start="43:5" pos:end="43:43"><name pos:start="43:5" pos:end="43:5">v</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:31">visitor_input_test_init</name><argument_list pos:start="43:32" pos:end="43:43">(<argument pos:start="43:33" pos:end="43:36"><expr pos:start="43:33" pos:end="43:36"><name pos:start="43:33" pos:end="43:36">data</name></expr></argument>, <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><literal type="string" pos:start="43:39" pos:end="43:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><call pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:24">visit_type_AltStrNum</name><argument_list pos:start="45:25" pos:end="45:45">(<argument pos:start="45:26" pos:end="45:26"><expr pos:start="45:26" pos:end="45:26"><name pos:start="45:26" pos:end="45:26">v</name></expr></argument>, <argument pos:start="45:29" pos:end="45:32"><expr pos:start="45:29" pos:end="45:32"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:32">asn</name></expr></argument>, <argument pos:start="45:35" pos:end="45:38"><expr pos:start="45:35" pos:end="45:38"><name pos:start="45:35" pos:end="45:38">NULL</name></expr></argument>, <argument pos:start="45:41" pos:end="45:44"><expr pos:start="45:41" pos:end="45:44"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:66">/* FIXME g_assert_cmpint(asn-&gt;type, == ALT_STR_NUM_KIND_N); */</comment>

    <comment type="block" pos:start="49:5" pos:end="49:52">/* FIXME g_assert_cmpfloat(asn-&gt;u.n, ==, 42); */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><call pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:23">error_free_or_abort</name><argument_list pos:start="51:24" pos:end="51:29">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:23">qapi_free_AltStrNum</name><argument_list pos:start="53:24" pos:end="53:28">(<argument pos:start="53:25" pos:end="53:27"><expr pos:start="53:25" pos:end="53:27"><name pos:start="53:25" pos:end="53:27">asn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:44"><expr pos:start="57:5" pos:end="57:43"><name pos:start="57:5" pos:end="57:5">v</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <call pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:31">visitor_input_test_init</name><argument_list pos:start="57:32" pos:end="57:43">(<argument pos:start="57:33" pos:end="57:36"><expr pos:start="57:33" pos:end="57:36"><name pos:start="57:33" pos:end="57:36">data</name></expr></argument>, <argument pos:start="57:39" pos:end="57:42"><expr pos:start="57:39" pos:end="57:42"><literal type="string" pos:start="57:39" pos:end="57:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:54"><expr pos:start="59:5" pos:end="59:53"><call pos:start="59:5" pos:end="59:53"><name pos:start="59:5" pos:end="59:24">visit_type_AltNumStr</name><argument_list pos:start="59:25" pos:end="59:53">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">v</name></expr></argument>, <argument pos:start="59:29" pos:end="59:32"><expr pos:start="59:29" pos:end="59:32"><operator pos:start="59:29" pos:end="59:29">&amp;</operator><name pos:start="59:30" pos:end="59:32">ans</name></expr></argument>, <argument pos:start="59:35" pos:end="59:38"><expr pos:start="59:35" pos:end="59:38"><name pos:start="59:35" pos:end="59:38">NULL</name></expr></argument>, <argument pos:start="59:41" pos:end="59:52"><expr pos:start="59:41" pos:end="59:52"><operator pos:start="59:41" pos:end="59:41">&amp;</operator><name pos:start="59:42" pos:end="59:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:55"><expr pos:start="61:5" pos:end="61:54"><call pos:start="61:5" pos:end="61:54"><name pos:start="61:5" pos:end="61:19">g_assert_cmpint</name><argument_list pos:start="61:20" pos:end="61:54">(<argument pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:23">ans</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:29">type</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:33"><expr pos:start="61:32" pos:end="61:33"><operator pos:start="61:32" pos:end="61:33">==</operator></expr></argument>, <argument pos:start="61:36" pos:end="61:53"><expr pos:start="61:36" pos:end="61:53"><name pos:start="61:36" pos:end="61:53">ALT_NUM_STR_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><call pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:21">g_assert_cmpfloat</name><argument_list pos:start="63:22" pos:end="63:39">(<argument pos:start="63:23" pos:end="63:30"><expr pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:30"><name pos:start="63:23" pos:end="63:25">ans</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:28">u</name><operator pos:start="63:29" pos:end="63:29">.</operator><name pos:start="63:30" pos:end="63:30">n</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:34"><expr pos:start="63:33" pos:end="63:34"><operator pos:start="63:33" pos:end="63:34">==</operator></expr></argument>, <argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><literal type="number" pos:start="63:37" pos:end="63:38">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><call pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:23">qapi_free_AltNumStr</name><argument_list pos:start="65:24" pos:end="65:28">(<argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:44"><expr pos:start="69:5" pos:end="69:43"><name pos:start="69:5" pos:end="69:5">v</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:31">visitor_input_test_init</name><argument_list pos:start="69:32" pos:end="69:43">(<argument pos:start="69:33" pos:end="69:36"><expr pos:start="69:33" pos:end="69:36"><name pos:start="69:33" pos:end="69:36">data</name></expr></argument>, <argument pos:start="69:39" pos:end="69:42"><expr pos:start="69:39" pos:end="69:42"><literal type="string" pos:start="69:39" pos:end="69:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><call pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:24">visit_type_AltStrInt</name><argument_list pos:start="71:25" pos:end="71:53">(<argument pos:start="71:26" pos:end="71:26"><expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">v</name></expr></argument>, <argument pos:start="71:29" pos:end="71:32"><expr pos:start="71:29" pos:end="71:32"><operator pos:start="71:29" pos:end="71:29">&amp;</operator><name pos:start="71:30" pos:end="71:32">asi</name></expr></argument>, <argument pos:start="71:35" pos:end="71:38"><expr pos:start="71:35" pos:end="71:38"><name pos:start="71:35" pos:end="71:38">NULL</name></expr></argument>, <argument pos:start="71:41" pos:end="71:52"><expr pos:start="71:41" pos:end="71:52"><operator pos:start="71:41" pos:end="71:41">&amp;</operator><name pos:start="71:42" pos:end="71:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:55"><expr pos:start="73:5" pos:end="73:54"><call pos:start="73:5" pos:end="73:54"><name pos:start="73:5" pos:end="73:19">g_assert_cmpint</name><argument_list pos:start="73:20" pos:end="73:54">(<argument pos:start="73:21" pos:end="73:29"><expr pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:29"><name pos:start="73:21" pos:end="73:23">asi</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:29">type</name></name></expr></argument>, <argument pos:start="73:32" pos:end="73:33"><expr pos:start="73:32" pos:end="73:33"><operator pos:start="73:32" pos:end="73:33">==</operator></expr></argument>, <argument pos:start="73:36" pos:end="73:53"><expr pos:start="73:36" pos:end="73:53"><name pos:start="73:36" pos:end="73:53">ALT_STR_INT_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:38"><expr pos:start="75:5" pos:end="75:37"><call pos:start="75:5" pos:end="75:37"><name pos:start="75:5" pos:end="75:19">g_assert_cmpint</name><argument_list pos:start="75:20" pos:end="75:37">(<argument pos:start="75:21" pos:end="75:28"><expr pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:28"><name pos:start="75:21" pos:end="75:23">asi</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:26">u</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:28">i</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:32"><expr pos:start="75:31" pos:end="75:32"><operator pos:start="75:31" pos:end="75:32">==</operator></expr></argument>, <argument pos:start="75:35" pos:end="75:36"><expr pos:start="75:35" pos:end="75:36"><literal type="number" pos:start="75:35" pos:end="75:36">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:29"><expr pos:start="77:5" pos:end="77:28"><call pos:start="77:5" pos:end="77:28"><name pos:start="77:5" pos:end="77:23">qapi_free_AltStrInt</name><argument_list pos:start="77:24" pos:end="77:28">(<argument pos:start="77:25" pos:end="77:27"><expr pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:44"><expr pos:start="81:5" pos:end="81:43"><name pos:start="81:5" pos:end="81:5">v</name> <operator pos:start="81:7" pos:end="81:7">=</operator> <call pos:start="81:9" pos:end="81:43"><name pos:start="81:9" pos:end="81:31">visitor_input_test_init</name><argument_list pos:start="81:32" pos:end="81:43">(<argument pos:start="81:33" pos:end="81:36"><expr pos:start="81:33" pos:end="81:36"><name pos:start="81:33" pos:end="81:36">data</name></expr></argument>, <argument pos:start="81:39" pos:end="81:42"><expr pos:start="81:39" pos:end="81:42"><literal type="string" pos:start="81:39" pos:end="81:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><call pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:24">visit_type_AltIntNum</name><argument_list pos:start="83:25" pos:end="83:53">(<argument pos:start="83:26" pos:end="83:26"><expr pos:start="83:26" pos:end="83:26"><name pos:start="83:26" pos:end="83:26">v</name></expr></argument>, <argument pos:start="83:29" pos:end="83:32"><expr pos:start="83:29" pos:end="83:32"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:32">ain</name></expr></argument>, <argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><name pos:start="83:35" pos:end="83:38">NULL</name></expr></argument>, <argument pos:start="83:41" pos:end="83:52"><expr pos:start="83:41" pos:end="83:52"><operator pos:start="83:41" pos:end="83:41">&amp;</operator><name pos:start="83:42" pos:end="83:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:55"><expr pos:start="85:5" pos:end="85:54"><call pos:start="85:5" pos:end="85:54"><name pos:start="85:5" pos:end="85:19">g_assert_cmpint</name><argument_list pos:start="85:20" pos:end="85:54">(<argument pos:start="85:21" pos:end="85:29"><expr pos:start="85:21" pos:end="85:29"><name pos:start="85:21" pos:end="85:29"><name pos:start="85:21" pos:end="85:23">ain</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:29">type</name></name></expr></argument>, <argument pos:start="85:32" pos:end="85:33"><expr pos:start="85:32" pos:end="85:33"><operator pos:start="85:32" pos:end="85:33">==</operator></expr></argument>, <argument pos:start="85:36" pos:end="85:53"><expr pos:start="85:36" pos:end="85:53"><name pos:start="85:36" pos:end="85:53">ALT_INT_NUM_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><call pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:19">g_assert_cmpint</name><argument_list pos:start="87:20" pos:end="87:37">(<argument pos:start="87:21" pos:end="87:28"><expr pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:28"><name pos:start="87:21" pos:end="87:23">ain</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:26">u</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:28">i</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:32"><expr pos:start="87:31" pos:end="87:32"><operator pos:start="87:31" pos:end="87:32">==</operator></expr></argument>, <argument pos:start="87:35" pos:end="87:36"><expr pos:start="87:35" pos:end="87:36"><literal type="number" pos:start="87:35" pos:end="87:36">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:29"><expr pos:start="89:5" pos:end="89:28"><call pos:start="89:5" pos:end="89:28"><name pos:start="89:5" pos:end="89:23">qapi_free_AltIntNum</name><argument_list pos:start="89:24" pos:end="89:28">(<argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">ain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:44"><expr pos:start="93:5" pos:end="93:43"><name pos:start="93:5" pos:end="93:5">v</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <call pos:start="93:9" pos:end="93:43"><name pos:start="93:9" pos:end="93:31">visitor_input_test_init</name><argument_list pos:start="93:32" pos:end="93:43">(<argument pos:start="93:33" pos:end="93:36"><expr pos:start="93:33" pos:end="93:36"><name pos:start="93:33" pos:end="93:36">data</name></expr></argument>, <argument pos:start="93:39" pos:end="93:42"><expr pos:start="93:39" pos:end="93:42"><literal type="string" pos:start="93:39" pos:end="93:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:54"><expr pos:start="95:5" pos:end="95:53"><call pos:start="95:5" pos:end="95:53"><name pos:start="95:5" pos:end="95:24">visit_type_AltNumInt</name><argument_list pos:start="95:25" pos:end="95:53">(<argument pos:start="95:26" pos:end="95:26"><expr pos:start="95:26" pos:end="95:26"><name pos:start="95:26" pos:end="95:26">v</name></expr></argument>, <argument pos:start="95:29" pos:end="95:32"><expr pos:start="95:29" pos:end="95:32"><operator pos:start="95:29" pos:end="95:29">&amp;</operator><name pos:start="95:30" pos:end="95:32">ani</name></expr></argument>, <argument pos:start="95:35" pos:end="95:38"><expr pos:start="95:35" pos:end="95:38"><name pos:start="95:35" pos:end="95:38">NULL</name></expr></argument>, <argument pos:start="95:41" pos:end="95:52"><expr pos:start="95:41" pos:end="95:52"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:55"><expr pos:start="97:5" pos:end="97:54"><call pos:start="97:5" pos:end="97:54"><name pos:start="97:5" pos:end="97:19">g_assert_cmpint</name><argument_list pos:start="97:20" pos:end="97:54">(<argument pos:start="97:21" pos:end="97:29"><expr pos:start="97:21" pos:end="97:29"><name pos:start="97:21" pos:end="97:29"><name pos:start="97:21" pos:end="97:23">ani</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:29">type</name></name></expr></argument>, <argument pos:start="97:32" pos:end="97:33"><expr pos:start="97:32" pos:end="97:33"><operator pos:start="97:32" pos:end="97:33">==</operator></expr></argument>, <argument pos:start="97:36" pos:end="97:53"><expr pos:start="97:36" pos:end="97:53"><name pos:start="97:36" pos:end="97:53">ALT_NUM_INT_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:38"><expr pos:start="99:5" pos:end="99:37"><call pos:start="99:5" pos:end="99:37"><name pos:start="99:5" pos:end="99:19">g_assert_cmpint</name><argument_list pos:start="99:20" pos:end="99:37">(<argument pos:start="99:21" pos:end="99:28"><expr pos:start="99:21" pos:end="99:28"><name pos:start="99:21" pos:end="99:28"><name pos:start="99:21" pos:end="99:23">ani</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:26">u</name><operator pos:start="99:27" pos:end="99:27">.</operator><name pos:start="99:28" pos:end="99:28">i</name></name></expr></argument>, <argument pos:start="99:31" pos:end="99:32"><expr pos:start="99:31" pos:end="99:32"><operator pos:start="99:31" pos:end="99:32">==</operator></expr></argument>, <argument pos:start="99:35" pos:end="99:36"><expr pos:start="99:35" pos:end="99:36"><literal type="number" pos:start="99:35" pos:end="99:36">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:29"><expr pos:start="101:5" pos:end="101:28"><call pos:start="101:5" pos:end="101:28"><name pos:start="101:5" pos:end="101:23">qapi_free_AltNumInt</name><argument_list pos:start="101:24" pos:end="101:28">(<argument pos:start="101:25" pos:end="101:27"><expr pos:start="101:25" pos:end="101:27"><name pos:start="101:25" pos:end="101:27">ani</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:26">/* Parsing a double */</comment>



    <expr_stmt pos:start="109:5" pos:end="109:46"><expr pos:start="109:5" pos:end="109:45"><name pos:start="109:5" pos:end="109:5">v</name> <operator pos:start="109:7" pos:end="109:7">=</operator> <call pos:start="109:9" pos:end="109:45"><name pos:start="109:9" pos:end="109:31">visitor_input_test_init</name><argument_list pos:start="109:32" pos:end="109:45">(<argument pos:start="109:33" pos:end="109:36"><expr pos:start="109:33" pos:end="109:36"><name pos:start="109:33" pos:end="109:36">data</name></expr></argument>, <argument pos:start="109:39" pos:end="109:44"><expr pos:start="109:39" pos:end="109:44"><literal type="string" pos:start="109:39" pos:end="109:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:47"><expr pos:start="111:5" pos:end="111:46"><call pos:start="111:5" pos:end="111:46"><name pos:start="111:5" pos:end="111:25">visit_type_AltStrBool</name><argument_list pos:start="111:26" pos:end="111:46">(<argument pos:start="111:27" pos:end="111:27"><expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">v</name></expr></argument>, <argument pos:start="111:30" pos:end="111:33"><expr pos:start="111:30" pos:end="111:33"><operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:33">asb</name></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">NULL</name></expr></argument>, <argument pos:start="111:42" pos:end="111:45"><expr pos:start="111:42" pos:end="111:45"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:45">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:30"><expr pos:start="113:5" pos:end="113:29"><call pos:start="113:5" pos:end="113:29"><name pos:start="113:5" pos:end="113:23">error_free_or_abort</name><argument_list pos:start="113:24" pos:end="113:29">(<argument pos:start="113:25" pos:end="113:28"><expr pos:start="113:25" pos:end="113:28"><operator pos:start="113:25" pos:end="113:25">&amp;</operator><name pos:start="113:26" pos:end="113:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:30"><expr pos:start="115:5" pos:end="115:29"><call pos:start="115:5" pos:end="115:29"><name pos:start="115:5" pos:end="115:24">qapi_free_AltStrBool</name><argument_list pos:start="115:25" pos:end="115:29">(<argument pos:start="115:26" pos:end="115:28"><expr pos:start="115:26" pos:end="115:28"><name pos:start="115:26" pos:end="115:28">asb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:46"><expr pos:start="119:5" pos:end="119:45"><name pos:start="119:5" pos:end="119:5">v</name> <operator pos:start="119:7" pos:end="119:7">=</operator> <call pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:31">visitor_input_test_init</name><argument_list pos:start="119:32" pos:end="119:45">(<argument pos:start="119:33" pos:end="119:36"><expr pos:start="119:33" pos:end="119:36"><name pos:start="119:33" pos:end="119:36">data</name></expr></argument>, <argument pos:start="119:39" pos:end="119:44"><expr pos:start="119:39" pos:end="119:44"><literal type="string" pos:start="119:39" pos:end="119:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:54"><expr pos:start="121:5" pos:end="121:53"><call pos:start="121:5" pos:end="121:53"><name pos:start="121:5" pos:end="121:24">visit_type_AltStrNum</name><argument_list pos:start="121:25" pos:end="121:53">(<argument pos:start="121:26" pos:end="121:26"><expr pos:start="121:26" pos:end="121:26"><name pos:start="121:26" pos:end="121:26">v</name></expr></argument>, <argument pos:start="121:29" pos:end="121:32"><expr pos:start="121:29" pos:end="121:32"><operator pos:start="121:29" pos:end="121:29">&amp;</operator><name pos:start="121:30" pos:end="121:32">asn</name></expr></argument>, <argument pos:start="121:35" pos:end="121:38"><expr pos:start="121:35" pos:end="121:38"><name pos:start="121:35" pos:end="121:38">NULL</name></expr></argument>, <argument pos:start="121:41" pos:end="121:52"><expr pos:start="121:41" pos:end="121:52"><operator pos:start="121:41" pos:end="121:41">&amp;</operator><name pos:start="121:42" pos:end="121:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:55"><expr pos:start="123:5" pos:end="123:54"><call pos:start="123:5" pos:end="123:54"><name pos:start="123:5" pos:end="123:19">g_assert_cmpint</name><argument_list pos:start="123:20" pos:end="123:54">(<argument pos:start="123:21" pos:end="123:29"><expr pos:start="123:21" pos:end="123:29"><name pos:start="123:21" pos:end="123:29"><name pos:start="123:21" pos:end="123:23">asn</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:29">type</name></name></expr></argument>, <argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><operator pos:start="123:32" pos:end="123:33">==</operator></expr></argument>, <argument pos:start="123:36" pos:end="123:53"><expr pos:start="123:36" pos:end="123:53"><name pos:start="123:36" pos:end="123:53">ALT_STR_NUM_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:42"><expr pos:start="125:5" pos:end="125:41"><call pos:start="125:5" pos:end="125:41"><name pos:start="125:5" pos:end="125:21">g_assert_cmpfloat</name><argument_list pos:start="125:22" pos:end="125:41">(<argument pos:start="125:23" pos:end="125:30"><expr pos:start="125:23" pos:end="125:30"><name pos:start="125:23" pos:end="125:30"><name pos:start="125:23" pos:end="125:25">asn</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:28">u</name><operator pos:start="125:29" pos:end="125:29">.</operator><name pos:start="125:30" pos:end="125:30">n</name></name></expr></argument>, <argument pos:start="125:33" pos:end="125:34"><expr pos:start="125:33" pos:end="125:34"><operator pos:start="125:33" pos:end="125:34">==</operator></expr></argument>, <argument pos:start="125:37" pos:end="125:40"><expr pos:start="125:37" pos:end="125:40"><literal type="number" pos:start="125:37" pos:end="125:40">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:29"><expr pos:start="127:5" pos:end="127:28"><call pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:23">qapi_free_AltStrNum</name><argument_list pos:start="127:24" pos:end="127:28">(<argument pos:start="127:25" pos:end="127:27"><expr pos:start="127:25" pos:end="127:27"><name pos:start="127:25" pos:end="127:27">asn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:46"><expr pos:start="131:5" pos:end="131:45"><name pos:start="131:5" pos:end="131:5">v</name> <operator pos:start="131:7" pos:end="131:7">=</operator> <call pos:start="131:9" pos:end="131:45"><name pos:start="131:9" pos:end="131:31">visitor_input_test_init</name><argument_list pos:start="131:32" pos:end="131:45">(<argument pos:start="131:33" pos:end="131:36"><expr pos:start="131:33" pos:end="131:36"><name pos:start="131:33" pos:end="131:36">data</name></expr></argument>, <argument pos:start="131:39" pos:end="131:44"><expr pos:start="131:39" pos:end="131:44"><literal type="string" pos:start="131:39" pos:end="131:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:54"><expr pos:start="133:5" pos:end="133:53"><call pos:start="133:5" pos:end="133:53"><name pos:start="133:5" pos:end="133:24">visit_type_AltNumStr</name><argument_list pos:start="133:25" pos:end="133:53">(<argument pos:start="133:26" pos:end="133:26"><expr pos:start="133:26" pos:end="133:26"><name pos:start="133:26" pos:end="133:26">v</name></expr></argument>, <argument pos:start="133:29" pos:end="133:32"><expr pos:start="133:29" pos:end="133:32"><operator pos:start="133:29" pos:end="133:29">&amp;</operator><name pos:start="133:30" pos:end="133:32">ans</name></expr></argument>, <argument pos:start="133:35" pos:end="133:38"><expr pos:start="133:35" pos:end="133:38"><name pos:start="133:35" pos:end="133:38">NULL</name></expr></argument>, <argument pos:start="133:41" pos:end="133:52"><expr pos:start="133:41" pos:end="133:52"><operator pos:start="133:41" pos:end="133:41">&amp;</operator><name pos:start="133:42" pos:end="133:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:55"><expr pos:start="135:5" pos:end="135:54"><call pos:start="135:5" pos:end="135:54"><name pos:start="135:5" pos:end="135:19">g_assert_cmpint</name><argument_list pos:start="135:20" pos:end="135:54">(<argument pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:29"><name pos:start="135:21" pos:end="135:29"><name pos:start="135:21" pos:end="135:23">ans</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:29">type</name></name></expr></argument>, <argument pos:start="135:32" pos:end="135:33"><expr pos:start="135:32" pos:end="135:33"><operator pos:start="135:32" pos:end="135:33">==</operator></expr></argument>, <argument pos:start="135:36" pos:end="135:53"><expr pos:start="135:36" pos:end="135:53"><name pos:start="135:36" pos:end="135:53">ALT_NUM_STR_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:42"><expr pos:start="137:5" pos:end="137:41"><call pos:start="137:5" pos:end="137:41"><name pos:start="137:5" pos:end="137:21">g_assert_cmpfloat</name><argument_list pos:start="137:22" pos:end="137:41">(<argument pos:start="137:23" pos:end="137:30"><expr pos:start="137:23" pos:end="137:30"><name pos:start="137:23" pos:end="137:30"><name pos:start="137:23" pos:end="137:25">ans</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:28">u</name><operator pos:start="137:29" pos:end="137:29">.</operator><name pos:start="137:30" pos:end="137:30">n</name></name></expr></argument>, <argument pos:start="137:33" pos:end="137:34"><expr pos:start="137:33" pos:end="137:34"><operator pos:start="137:33" pos:end="137:34">==</operator></expr></argument>, <argument pos:start="137:37" pos:end="137:40"><expr pos:start="137:37" pos:end="137:40"><literal type="number" pos:start="137:37" pos:end="137:40">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:29"><expr pos:start="139:5" pos:end="139:28"><call pos:start="139:5" pos:end="139:28"><name pos:start="139:5" pos:end="139:23">qapi_free_AltNumStr</name><argument_list pos:start="139:24" pos:end="139:28">(<argument pos:start="139:25" pos:end="139:27"><expr pos:start="139:25" pos:end="139:27"><name pos:start="139:25" pos:end="139:27">ans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:46"><expr pos:start="143:5" pos:end="143:45"><name pos:start="143:5" pos:end="143:5">v</name> <operator pos:start="143:7" pos:end="143:7">=</operator> <call pos:start="143:9" pos:end="143:45"><name pos:start="143:9" pos:end="143:31">visitor_input_test_init</name><argument_list pos:start="143:32" pos:end="143:45">(<argument pos:start="143:33" pos:end="143:36"><expr pos:start="143:33" pos:end="143:36"><name pos:start="143:33" pos:end="143:36">data</name></expr></argument>, <argument pos:start="143:39" pos:end="143:44"><expr pos:start="143:39" pos:end="143:44"><literal type="string" pos:start="143:39" pos:end="143:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:46"><expr pos:start="145:5" pos:end="145:45"><call pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:24">visit_type_AltStrInt</name><argument_list pos:start="145:25" pos:end="145:45">(<argument pos:start="145:26" pos:end="145:26"><expr pos:start="145:26" pos:end="145:26"><name pos:start="145:26" pos:end="145:26">v</name></expr></argument>, <argument pos:start="145:29" pos:end="145:32"><expr pos:start="145:29" pos:end="145:32"><operator pos:start="145:29" pos:end="145:29">&amp;</operator><name pos:start="145:30" pos:end="145:32">asi</name></expr></argument>, <argument pos:start="145:35" pos:end="145:38"><expr pos:start="145:35" pos:end="145:38"><name pos:start="145:35" pos:end="145:38">NULL</name></expr></argument>, <argument pos:start="145:41" pos:end="145:44"><expr pos:start="145:41" pos:end="145:44"><operator pos:start="145:41" pos:end="145:41">&amp;</operator><name pos:start="145:42" pos:end="145:44">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:30"><expr pos:start="147:5" pos:end="147:29"><call pos:start="147:5" pos:end="147:29"><name pos:start="147:5" pos:end="147:23">error_free_or_abort</name><argument_list pos:start="147:24" pos:end="147:29">(<argument pos:start="147:25" pos:end="147:28"><expr pos:start="147:25" pos:end="147:28"><operator pos:start="147:25" pos:end="147:25">&amp;</operator><name pos:start="147:26" pos:end="147:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:29"><expr pos:start="149:5" pos:end="149:28"><call pos:start="149:5" pos:end="149:28"><name pos:start="149:5" pos:end="149:23">qapi_free_AltStrInt</name><argument_list pos:start="149:24" pos:end="149:28">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">asi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="153:5" pos:end="153:46"><expr pos:start="153:5" pos:end="153:45"><name pos:start="153:5" pos:end="153:5">v</name> <operator pos:start="153:7" pos:end="153:7">=</operator> <call pos:start="153:9" pos:end="153:45"><name pos:start="153:9" pos:end="153:31">visitor_input_test_init</name><argument_list pos:start="153:32" pos:end="153:45">(<argument pos:start="153:33" pos:end="153:36"><expr pos:start="153:33" pos:end="153:36"><name pos:start="153:33" pos:end="153:36">data</name></expr></argument>, <argument pos:start="153:39" pos:end="153:44"><expr pos:start="153:39" pos:end="153:44"><literal type="string" pos:start="153:39" pos:end="153:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:54"><expr pos:start="155:5" pos:end="155:53"><call pos:start="155:5" pos:end="155:53"><name pos:start="155:5" pos:end="155:24">visit_type_AltIntNum</name><argument_list pos:start="155:25" pos:end="155:53">(<argument pos:start="155:26" pos:end="155:26"><expr pos:start="155:26" pos:end="155:26"><name pos:start="155:26" pos:end="155:26">v</name></expr></argument>, <argument pos:start="155:29" pos:end="155:32"><expr pos:start="155:29" pos:end="155:32"><operator pos:start="155:29" pos:end="155:29">&amp;</operator><name pos:start="155:30" pos:end="155:32">ain</name></expr></argument>, <argument pos:start="155:35" pos:end="155:38"><expr pos:start="155:35" pos:end="155:38"><name pos:start="155:35" pos:end="155:38">NULL</name></expr></argument>, <argument pos:start="155:41" pos:end="155:52"><expr pos:start="155:41" pos:end="155:52"><operator pos:start="155:41" pos:end="155:41">&amp;</operator><name pos:start="155:42" pos:end="155:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:55"><expr pos:start="157:5" pos:end="157:54"><call pos:start="157:5" pos:end="157:54"><name pos:start="157:5" pos:end="157:19">g_assert_cmpint</name><argument_list pos:start="157:20" pos:end="157:54">(<argument pos:start="157:21" pos:end="157:29"><expr pos:start="157:21" pos:end="157:29"><name pos:start="157:21" pos:end="157:29"><name pos:start="157:21" pos:end="157:23">ain</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:29">type</name></name></expr></argument>, <argument pos:start="157:32" pos:end="157:33"><expr pos:start="157:32" pos:end="157:33"><operator pos:start="157:32" pos:end="157:33">==</operator></expr></argument>, <argument pos:start="157:36" pos:end="157:53"><expr pos:start="157:36" pos:end="157:53"><name pos:start="157:36" pos:end="157:53">ALT_INT_NUM_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><call pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:21">g_assert_cmpfloat</name><argument_list pos:start="159:22" pos:end="159:41">(<argument pos:start="159:23" pos:end="159:30"><expr pos:start="159:23" pos:end="159:30"><name pos:start="159:23" pos:end="159:30"><name pos:start="159:23" pos:end="159:25">ain</name><operator pos:start="159:26" pos:end="159:27">-&gt;</operator><name pos:start="159:28" pos:end="159:28">u</name><operator pos:start="159:29" pos:end="159:29">.</operator><name pos:start="159:30" pos:end="159:30">n</name></name></expr></argument>, <argument pos:start="159:33" pos:end="159:34"><expr pos:start="159:33" pos:end="159:34"><operator pos:start="159:33" pos:end="159:34">==</operator></expr></argument>, <argument pos:start="159:37" pos:end="159:40"><expr pos:start="159:37" pos:end="159:40"><literal type="number" pos:start="159:37" pos:end="159:40">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:29"><expr pos:start="161:5" pos:end="161:28"><call pos:start="161:5" pos:end="161:28"><name pos:start="161:5" pos:end="161:23">qapi_free_AltIntNum</name><argument_list pos:start="161:24" pos:end="161:28">(<argument pos:start="161:25" pos:end="161:27"><expr pos:start="161:25" pos:end="161:27"><name pos:start="161:25" pos:end="161:27">ain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:46"><expr pos:start="165:5" pos:end="165:45"><name pos:start="165:5" pos:end="165:5">v</name> <operator pos:start="165:7" pos:end="165:7">=</operator> <call pos:start="165:9" pos:end="165:45"><name pos:start="165:9" pos:end="165:31">visitor_input_test_init</name><argument_list pos:start="165:32" pos:end="165:45">(<argument pos:start="165:33" pos:end="165:36"><expr pos:start="165:33" pos:end="165:36"><name pos:start="165:33" pos:end="165:36">data</name></expr></argument>, <argument pos:start="165:39" pos:end="165:44"><expr pos:start="165:39" pos:end="165:44"><literal type="string" pos:start="165:39" pos:end="165:44">"42.5"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:54"><expr pos:start="167:5" pos:end="167:53"><call pos:start="167:5" pos:end="167:53"><name pos:start="167:5" pos:end="167:24">visit_type_AltNumInt</name><argument_list pos:start="167:25" pos:end="167:53">(<argument pos:start="167:26" pos:end="167:26"><expr pos:start="167:26" pos:end="167:26"><name pos:start="167:26" pos:end="167:26">v</name></expr></argument>, <argument pos:start="167:29" pos:end="167:32"><expr pos:start="167:29" pos:end="167:32"><operator pos:start="167:29" pos:end="167:29">&amp;</operator><name pos:start="167:30" pos:end="167:32">ani</name></expr></argument>, <argument pos:start="167:35" pos:end="167:38"><expr pos:start="167:35" pos:end="167:38"><name pos:start="167:35" pos:end="167:38">NULL</name></expr></argument>, <argument pos:start="167:41" pos:end="167:52"><expr pos:start="167:41" pos:end="167:52"><operator pos:start="167:41" pos:end="167:41">&amp;</operator><name pos:start="167:42" pos:end="167:52">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:55"><expr pos:start="169:5" pos:end="169:54"><call pos:start="169:5" pos:end="169:54"><name pos:start="169:5" pos:end="169:19">g_assert_cmpint</name><argument_list pos:start="169:20" pos:end="169:54">(<argument pos:start="169:21" pos:end="169:29"><expr pos:start="169:21" pos:end="169:29"><name pos:start="169:21" pos:end="169:29"><name pos:start="169:21" pos:end="169:23">ani</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:29">type</name></name></expr></argument>, <argument pos:start="169:32" pos:end="169:33"><expr pos:start="169:32" pos:end="169:33"><operator pos:start="169:32" pos:end="169:33">==</operator></expr></argument>, <argument pos:start="169:36" pos:end="169:53"><expr pos:start="169:36" pos:end="169:53"><name pos:start="169:36" pos:end="169:53">ALT_NUM_INT_KIND_N</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="171:42"><expr pos:start="171:5" pos:end="171:41"><call pos:start="171:5" pos:end="171:41"><name pos:start="171:5" pos:end="171:21">g_assert_cmpfloat</name><argument_list pos:start="171:22" pos:end="171:41">(<argument pos:start="171:23" pos:end="171:30"><expr pos:start="171:23" pos:end="171:30"><name pos:start="171:23" pos:end="171:30"><name pos:start="171:23" pos:end="171:25">ani</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:28">u</name><operator pos:start="171:29" pos:end="171:29">.</operator><name pos:start="171:30" pos:end="171:30">n</name></name></expr></argument>, <argument pos:start="171:33" pos:end="171:34"><expr pos:start="171:33" pos:end="171:34"><operator pos:start="171:33" pos:end="171:34">==</operator></expr></argument>, <argument pos:start="171:37" pos:end="171:40"><expr pos:start="171:37" pos:end="171:40"><literal type="number" pos:start="171:37" pos:end="171:40">42.5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:29"><expr pos:start="173:5" pos:end="173:28"><call pos:start="173:5" pos:end="173:28"><name pos:start="173:5" pos:end="173:23">qapi_free_AltNumInt</name><argument_list pos:start="173:24" pos:end="173:28">(<argument pos:start="173:25" pos:end="173:27"><expr pos:start="173:25" pos:end="173:27"><name pos:start="173:25" pos:end="173:27">ani</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
