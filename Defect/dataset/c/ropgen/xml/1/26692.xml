<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26692.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">ff_dxva2_commit_buffer</name><parameter_list pos:start="1:27" pos:end="9:45">(<parameter pos:start="1:28" pos:end="1:48"><decl pos:start="1:28" pos:end="1:48"><type pos:start="1:28" pos:end="1:48"><name pos:start="1:28" pos:end="1:41">AVCodecContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:45"><decl pos:start="3:28" pos:end="3:45"><type pos:start="3:28" pos:end="3:45"><name pos:start="3:28" pos:end="3:40">AVDXVAContext</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:45">ctx</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:51"><decl pos:start="5:28" pos:end="5:51"><type pos:start="5:28" pos:end="5:51"><name pos:start="5:28" pos:end="5:46">DECODER_BUFFER_DESC</name> <modifier pos:start="5:48" pos:end="5:48">*</modifier></type><name pos:start="5:49" pos:end="5:51">dsc</name></decl></parameter>,

                           <parameter pos:start="7:28" pos:end="7:40"><decl pos:start="7:28" pos:end="7:40"><type pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:35">unsigned</name></type> <name pos:start="7:37" pos:end="7:40">type</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:58"><decl pos:start="7:43" pos:end="7:58"><type pos:start="7:43" pos:end="7:58"><specifier pos:start="7:43" pos:end="7:47">const</specifier> <name pos:start="7:49" pos:end="7:52">void</name> <modifier pos:start="7:54" pos:end="7:54">*</modifier></type><name pos:start="7:55" pos:end="7:58">data</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:73"><decl pos:start="7:61" pos:end="7:73"><type pos:start="7:61" pos:end="7:73"><name pos:start="7:61" pos:end="7:68">unsigned</name></type> <name pos:start="7:70" pos:end="7:73">size</name></decl></parameter>,

                           <parameter pos:start="9:28" pos:end="9:44"><decl pos:start="9:28" pos:end="9:44"><type pos:start="9:28" pos:end="9:44"><name pos:start="9:28" pos:end="9:35">unsigned</name></type> <name pos:start="9:37" pos:end="9:44">mb_count</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="143:1">{<block_content pos:start="13:5" pos:end="141:18">

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:8">void</name>     <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:23">dxva_data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:22">dxva_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>      <name pos:start="17:14" pos:end="17:19">result</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="24:0"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">HRESULT</name></type> <name pos:start="19:13" pos:end="19:14">hr</name></decl>;</decl_stmt>



<cpp:if pos:start="23:1" pos:end="23:18">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="25:5" pos:end="38:0"><if pos:start="25:5" pos:end="38:0">if <condition pos:start="25:8" pos:end="25:49">(<expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:22">pix_fmt</name></name> <operator pos:start="25:24" pos:end="25:25">==</operator> <name pos:start="25:27" pos:end="25:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="38:0"><block_content pos:start="27:9" pos:end="38:0">

        <expr_stmt pos:start="27:9" pos:end="38:0"><expr pos:start="27:9" pos:end="33:72"><name pos:start="27:9" pos:end="27:10">hr</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="33:72"><name pos:start="27:14" pos:end="27:48">ID3D11VideoContext_GetDecoderBuffer</name><argument_list pos:start="27:49" pos:end="33:72">(<argument pos:start="27:50" pos:end="27:84"><expr pos:start="27:50" pos:end="27:84"><call pos:start="27:50" pos:end="27:69"><name pos:start="27:50" pos:end="27:64">D3D11VA_CONTEXT</name><argument_list pos:start="27:65" pos:end="27:69">(<argument pos:start="27:66" pos:end="27:68"><expr pos:start="27:66" pos:end="27:68"><name pos:start="27:66" pos:end="27:68">ctx</name></expr></argument>)</argument_list></call><operator pos:start="27:70" pos:end="27:71">-&gt;</operator><name pos:start="27:72" pos:end="27:84">video_context</name></expr></argument>,

                                                 <argument pos:start="29:50" pos:end="29:78"><expr pos:start="29:50" pos:end="29:78"><call pos:start="29:50" pos:end="29:69"><name pos:start="29:50" pos:end="29:64">D3D11VA_CONTEXT</name><argument_list pos:start="29:65" pos:end="29:69">(<argument pos:start="29:66" pos:end="29:68"><expr pos:start="29:66" pos:end="29:68"><name pos:start="29:66" pos:end="29:68">ctx</name></expr></argument>)</argument_list></call><operator pos:start="29:70" pos:end="29:71">-&gt;</operator><name pos:start="29:72" pos:end="29:78">decoder</name></expr></argument>,

                                                 <argument pos:start="31:50" pos:end="31:53"><expr pos:start="31:50" pos:end="31:53"><name pos:start="31:50" pos:end="31:53">type</name></expr></argument>,

                                                 <argument pos:start="33:50" pos:end="33:59"><expr pos:start="33:50" pos:end="33:59"><operator pos:start="33:50" pos:end="33:50">&amp;</operator><name pos:start="33:51" pos:end="33:59">dxva_size</name></expr></argument>, <argument pos:start="33:62" pos:end="33:71"><expr pos:start="33:62" pos:end="33:71"><operator pos:start="33:62" pos:end="33:62">&amp;</operator><name pos:start="33:63" pos:end="33:71">dxva_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="37:1" pos:end="37:16">#<cpp:directive pos:start="37:2" pos:end="37:3">if</cpp:directive> <expr pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="39:5" pos:end="46:0"><if pos:start="39:5" pos:end="46:0">if <condition pos:start="39:8" pos:end="39:47">(<expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:13">avctx</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">pix_fmt</name></name> <operator pos:start="39:24" pos:end="39:25">==</operator> <name pos:start="39:27" pos:end="39:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="46:0"><block_content pos:start="41:9" pos:end="46:0">

        <expr_stmt pos:start="41:9" pos:end="46:0"><expr pos:start="41:9" pos:end="43:67"><name pos:start="41:9" pos:end="41:10">hr</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="43:67"><name pos:start="41:14" pos:end="41:43">IDirectXVideoDecoder_GetBuffer</name><argument_list pos:start="41:44" pos:end="43:67">(<argument pos:start="41:45" pos:end="41:71"><expr pos:start="41:45" pos:end="41:71"><call pos:start="41:45" pos:end="41:62"><name pos:start="41:45" pos:end="41:57">DXVA2_CONTEXT</name><argument_list pos:start="41:58" pos:end="41:62">(<argument pos:start="41:59" pos:end="41:61"><expr pos:start="41:59" pos:end="41:61"><name pos:start="41:59" pos:end="41:61">ctx</name></expr></argument>)</argument_list></call><operator pos:start="41:63" pos:end="41:64">-&gt;</operator><name pos:start="41:65" pos:end="41:71">decoder</name></expr></argument>, <argument pos:start="41:74" pos:end="41:77"><expr pos:start="41:74" pos:end="41:77"><name pos:start="41:74" pos:end="41:77">type</name></expr></argument>,

                                            <argument pos:start="43:45" pos:end="43:54"><expr pos:start="43:45" pos:end="43:54"><operator pos:start="43:45" pos:end="43:45">&amp;</operator><name pos:start="43:46" pos:end="43:54">dxva_data</name></expr></argument>, <argument pos:start="43:57" pos:end="43:66"><expr pos:start="43:57" pos:end="43:66"><operator pos:start="43:57" pos:end="43:57">&amp;</operator><name pos:start="43:58" pos:end="43:66">dxva_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><call pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:14">FAILED</name><argument_list pos:start="47:15" pos:end="47:18">(<argument pos:start="47:16" pos:end="47:17"><expr pos:start="47:16" pos:end="47:17"><name pos:start="47:16" pos:end="47:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:21" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="51:25"><expr pos:start="49:9" pos:end="51:24"><call pos:start="49:9" pos:end="51:24"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:24">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:37" pos:end="49:76"><expr pos:start="49:37" pos:end="49:76"><literal type="string" pos:start="49:37" pos:end="49:76">"Failed to get a buffer for %u: 0x%lx\n"</literal></expr></argument>,

               <argument pos:start="51:16" pos:end="51:19"><expr pos:start="51:16" pos:end="51:19"><name pos:start="51:16" pos:end="51:19">type</name></expr></argument>, <argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="114:0"><if pos:start="57:5" pos:end="103:5">if <condition pos:start="57:8" pos:end="57:26">(<expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:15">&lt;=</operator> <name pos:start="57:17" pos:end="57:25">dxva_size</name></expr>)</condition> <block pos:start="57:28" pos:end="103:5">{<block_content pos:start="59:9" pos:end="101:19">

        <expr_stmt pos:start="59:9" pos:end="64:0"><expr pos:start="59:9" pos:end="59:37"><call pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:14">memcpy</name><argument_list pos:start="59:15" pos:end="59:37">(<argument pos:start="59:16" pos:end="59:24"><expr pos:start="59:16" pos:end="59:24"><name pos:start="59:16" pos:end="59:24">dxva_data</name></expr></argument>, <argument pos:start="59:27" pos:end="59:30"><expr pos:start="59:27" pos:end="59:30"><name pos:start="59:27" pos:end="59:30">data</name></expr></argument>, <argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="63:1" pos:end="63:18">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:18">CONFIG_D3D11VA</name></expr></cpp:if>

        <if_stmt pos:start="65:9" pos:end="82:0"><if pos:start="65:9" pos:end="82:0">if <condition pos:start="65:12" pos:end="65:53">(<expr pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:26"><name pos:start="65:13" pos:end="65:17">avctx</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:26">pix_fmt</name></name> <operator pos:start="65:28" pos:end="65:29">==</operator> <name pos:start="65:31" pos:end="65:52">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition> <block pos:start="65:55" pos:end="82:0">{<block_content pos:start="67:13" pos:end="75:51">

            <decl_stmt pos:start="67:13" pos:end="67:57"><decl pos:start="67:13" pos:end="67:56"><type pos:start="67:13" pos:end="67:45"><name pos:start="67:13" pos:end="67:43">D3D11_VIDEO_DECODER_BUFFER_DESC</name> <modifier pos:start="67:45" pos:end="67:45">*</modifier></type><name pos:start="67:46" pos:end="67:50">dsc11</name> <init pos:start="67:52" pos:end="67:56">= <expr pos:start="67:54" pos:end="67:56"><name pos:start="67:54" pos:end="67:56">dsc</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:45"><expr pos:start="69:13" pos:end="69:44"><call pos:start="69:13" pos:end="69:44"><name pos:start="69:13" pos:end="69:18">memset</name><argument_list pos:start="69:19" pos:end="69:44">(<argument pos:start="69:20" pos:end="69:24"><expr pos:start="69:20" pos:end="69:24"><name pos:start="69:20" pos:end="69:24">dsc11</name></expr></argument>, <argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><literal type="number" pos:start="69:27" pos:end="69:27">0</literal></expr></argument>, <argument pos:start="69:30" pos:end="69:43"><expr pos:start="69:30" pos:end="69:43"><sizeof pos:start="69:30" pos:end="69:43">sizeof<argument_list pos:start="69:36" pos:end="69:43">(<argument pos:start="69:37" pos:end="69:42"><expr pos:start="69:37" pos:end="69:42"><operator pos:start="69:37" pos:end="69:37">*</operator><name pos:start="69:38" pos:end="69:42">dsc11</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:47"><expr pos:start="71:13" pos:end="71:46"><name pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:17">dsc11</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:29">BufferType</name></name>           <operator pos:start="71:41" pos:end="71:41">=</operator> <name pos:start="71:43" pos:end="71:46">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:17">dsc11</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:27">DataSize</name></name>             <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:46">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:17">dsc11</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:33">NumMBsInBuffer</name></name>       <operator pos:start="75:41" pos:end="75:41">=</operator> <name pos:start="75:43" pos:end="75:50">mb_count</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="79:1" pos:end="79:6">#<cpp:directive pos:start="79:2" pos:end="79:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="81:1" pos:end="81:16">#<cpp:directive pos:start="81:2" pos:end="81:3">if</cpp:directive> <expr pos:start="81:5" pos:end="81:16"><name pos:start="81:5" pos:end="81:16">CONFIG_DXVA2</name></expr></cpp:if>

        <if_stmt pos:start="83:9" pos:end="98:0"><if pos:start="83:9" pos:end="98:0">if <condition pos:start="83:12" pos:end="83:51">(<expr pos:start="83:13" pos:end="83:50"><name pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:17">avctx</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:26">pix_fmt</name></name> <operator pos:start="83:28" pos:end="83:29">==</operator> <name pos:start="83:31" pos:end="83:50">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition> <block pos:start="83:53" pos:end="98:0">{<block_content pos:start="85:13" pos:end="93:50">

            <decl_stmt pos:start="85:13" pos:end="85:47"><decl pos:start="85:13" pos:end="85:46"><type pos:start="85:13" pos:end="85:36"><name pos:start="85:13" pos:end="85:34">DXVA2_DecodeBufferDesc</name> <modifier pos:start="85:36" pos:end="85:36">*</modifier></type><name pos:start="85:37" pos:end="85:40">dsc2</name> <init pos:start="85:42" pos:end="85:46">= <expr pos:start="85:44" pos:end="85:46"><name pos:start="85:44" pos:end="85:46">dsc</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:43"><expr pos:start="87:13" pos:end="87:42"><call pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:18">memset</name><argument_list pos:start="87:19" pos:end="87:42">(<argument pos:start="87:20" pos:end="87:23"><expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">dsc2</name></expr></argument>, <argument pos:start="87:26" pos:end="87:26"><expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr></argument>, <argument pos:start="87:29" pos:end="87:41"><expr pos:start="87:29" pos:end="87:41"><sizeof pos:start="87:29" pos:end="87:41">sizeof<argument_list pos:start="87:35" pos:end="87:41">(<argument pos:start="87:36" pos:end="87:40"><expr pos:start="87:36" pos:end="87:40"><operator pos:start="87:36" pos:end="87:36">*</operator><name pos:start="87:37" pos:end="87:40">dsc2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:46"><expr pos:start="89:13" pos:end="89:45"><name pos:start="89:13" pos:end="89:38"><name pos:start="89:13" pos:end="89:16">dsc2</name><operator pos:start="89:17" pos:end="89:18">-&gt;</operator><name pos:start="89:19" pos:end="89:38">CompressedBufferType</name></name> <operator pos:start="89:40" pos:end="89:40">=</operator> <name pos:start="89:42" pos:end="89:45">type</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:16">dsc2</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:26">DataSize</name></name>             <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:45">size</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:50"><expr pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:16">dsc2</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:32">NumMBsInBuffer</name></name>       <operator pos:start="93:40" pos:end="93:40">=</operator> <name pos:start="93:42" pos:end="93:49">mb_count</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>



        <expr_stmt pos:start="101:9" pos:end="101:19"><expr pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:14">result</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="114:0">else <block pos:start="103:12" pos:end="114:0">{<block_content pos:start="105:9" pos:end="107:20">

        <expr_stmt pos:start="105:9" pos:end="105:80"><expr pos:start="105:9" pos:end="105:79"><call pos:start="105:9" pos:end="105:79"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:79">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:37" pos:end="105:72"><expr pos:start="105:37" pos:end="105:72"><literal type="string" pos:start="105:37" pos:end="105:72">"Buffer for type %u was too small\n"</literal></expr></argument>, <argument pos:start="105:75" pos:end="105:78"><expr pos:start="105:75" pos:end="105:78"><name pos:start="105:75" pos:end="105:78">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:20"><expr pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:14">result</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <operator pos:start="107:18" pos:end="107:18">-</operator><literal type="number" pos:start="107:19" pos:end="107:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="113:1" pos:end="113:18">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:18">CONFIG_D3D11VA</name></expr></cpp:if>

    <if_stmt pos:start="115:5" pos:end="122:0"><if pos:start="115:5" pos:end="122:0">if <condition pos:start="115:8" pos:end="115:49">(<expr pos:start="115:9" pos:end="115:48"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:13">avctx</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:22">pix_fmt</name></name> <operator pos:start="115:24" pos:end="115:25">==</operator> <name pos:start="115:27" pos:end="115:48">AV_PIX_FMT_D3D11VA_VLD</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="122:0"><block_content pos:start="117:9" pos:end="122:0">

        <expr_stmt pos:start="117:9" pos:end="122:0"><expr pos:start="117:9" pos:end="117:126"><name pos:start="117:9" pos:end="117:10">hr</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <call pos:start="117:14" pos:end="117:126"><name pos:start="117:14" pos:end="117:52">ID3D11VideoContext_ReleaseDecoderBuffer</name><argument_list pos:start="117:53" pos:end="117:126">(<argument pos:start="117:54" pos:end="117:88"><expr pos:start="117:54" pos:end="117:88"><call pos:start="117:54" pos:end="117:73"><name pos:start="117:54" pos:end="117:68">D3D11VA_CONTEXT</name><argument_list pos:start="117:69" pos:end="117:73">(<argument pos:start="117:70" pos:end="117:72"><expr pos:start="117:70" pos:end="117:72"><name pos:start="117:70" pos:end="117:72">ctx</name></expr></argument>)</argument_list></call><operator pos:start="117:74" pos:end="117:75">-&gt;</operator><name pos:start="117:76" pos:end="117:88">video_context</name></expr></argument>, <argument pos:start="117:91" pos:end="117:119"><expr pos:start="117:91" pos:end="117:119"><call pos:start="117:91" pos:end="117:110"><name pos:start="117:91" pos:end="117:105">D3D11VA_CONTEXT</name><argument_list pos:start="117:106" pos:end="117:110">(<argument pos:start="117:107" pos:end="117:109"><expr pos:start="117:107" pos:end="117:109"><name pos:start="117:107" pos:end="117:109">ctx</name></expr></argument>)</argument_list></call><operator pos:start="117:111" pos:end="117:112">-&gt;</operator><name pos:start="117:113" pos:end="117:119">decoder</name></expr></argument>, <argument pos:start="117:122" pos:end="117:125"><expr pos:start="117:122" pos:end="117:125"><name pos:start="117:122" pos:end="117:125">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="121:1" pos:end="121:16">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:16"><name pos:start="121:5" pos:end="121:16">CONFIG_DXVA2</name></expr></cpp:if>

    <if_stmt pos:start="123:5" pos:end="128:0"><if pos:start="123:5" pos:end="128:0">if <condition pos:start="123:8" pos:end="123:47">(<expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:13">avctx</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:22">pix_fmt</name></name> <operator pos:start="123:24" pos:end="123:25">==</operator> <name pos:start="123:27" pos:end="123:46">AV_PIX_FMT_DXVA2_VLD</name></expr>)</condition><block type="pseudo" pos:start="125:9" pos:end="128:0"><block_content pos:start="125:9" pos:end="128:0">

        <expr_stmt pos:start="125:9" pos:end="128:0"><expr pos:start="125:9" pos:end="125:82"><name pos:start="125:9" pos:end="125:10">hr</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <call pos:start="125:14" pos:end="125:82"><name pos:start="125:14" pos:end="125:47">IDirectXVideoDecoder_ReleaseBuffer</name><argument_list pos:start="125:48" pos:end="125:82">(<argument pos:start="125:49" pos:end="125:75"><expr pos:start="125:49" pos:end="125:75"><call pos:start="125:49" pos:end="125:66"><name pos:start="125:49" pos:end="125:61">DXVA2_CONTEXT</name><argument_list pos:start="125:62" pos:end="125:66">(<argument pos:start="125:63" pos:end="125:65"><expr pos:start="125:63" pos:end="125:65"><name pos:start="125:63" pos:end="125:65">ctx</name></expr></argument>)</argument_list></call><operator pos:start="125:67" pos:end="125:68">-&gt;</operator><name pos:start="125:69" pos:end="125:75">decoder</name></expr></argument>, <argument pos:start="125:78" pos:end="125:81"><expr pos:start="125:78" pos:end="125:81"><name pos:start="125:78" pos:end="125:81">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="129:19">(<expr pos:start="129:9" pos:end="129:18"><call pos:start="129:9" pos:end="129:18"><name pos:start="129:9" pos:end="129:14">FAILED</name><argument_list pos:start="129:15" pos:end="129:18">(<argument pos:start="129:16" pos:end="129:17"><expr pos:start="129:16" pos:end="129:17"><name pos:start="129:16" pos:end="129:17">hr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:21" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:20">

        <expr_stmt pos:start="131:9" pos:end="135:25"><expr pos:start="131:9" pos:end="135:24"><call pos:start="131:9" pos:end="135:24"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="135:24">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20">avctx</name></expr></argument>, <argument pos:start="131:23" pos:end="131:34"><expr pos:start="131:23" pos:end="131:34"><name pos:start="131:23" pos:end="131:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="133:16" pos:end="133:58"><expr pos:start="133:16" pos:end="133:58"><literal type="string" pos:start="133:16" pos:end="133:58">"Failed to release buffer type %u: 0x%lx\n"</literal></expr></argument>,

               <argument pos:start="135:16" pos:end="135:19"><expr pos:start="135:16" pos:end="135:19"><name pos:start="135:16" pos:end="135:19">type</name></expr></argument>, <argument pos:start="135:22" pos:end="135:23"><expr pos:start="135:22" pos:end="135:23"><name pos:start="135:22" pos:end="135:23">hr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:20"><expr pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:14">result</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <operator pos:start="137:18" pos:end="137:18">-</operator><literal type="number" pos:start="137:19" pos:end="137:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="141:5" pos:end="141:18">return <expr pos:start="141:12" pos:end="141:17"><name pos:start="141:12" pos:end="141:17">result</name></expr>;</return>

</block_content>}</block></function>
</unit>
