<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16376.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">sd_parse_uri</name><parameter_list pos:start="1:24" pos:end="3:63">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:41">BDRVSheepdogState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:66">filename</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:33"><decl pos:start="3:25" pos:end="3:33"><type pos:start="3:25" pos:end="3:33"><name pos:start="3:25" pos:end="3:28">char</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:33">vdi</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><name pos:start="3:36" pos:end="3:43">uint32_t</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:51">snapid</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:62"><decl pos:start="3:54" pos:end="3:62"><type pos:start="3:54" pos:end="3:62"><name pos:start="3:54" pos:end="3:57">char</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">tag</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:15">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">URI</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:12">uri</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">QueryParams</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">qp</name> <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:30"><expr pos:start="15:5" pos:end="15:29"><name pos:start="15:5" pos:end="15:7">uri</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:29"><name pos:start="15:11" pos:end="15:19">uri_parse</name><argument_list pos:start="15:20" pos:end="15:29">(<argument pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:28">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">uri</name></expr>)</condition> <block pos:start="17:15" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:23">

        <return pos:start="19:9" pos:end="19:23">return <expr pos:start="19:16" pos:end="19:22"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:19">/* transport */</comment>

    <if_stmt pos:start="27:5" pos:end="45:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:41">(<expr pos:start="27:9" pos:end="27:40"><operator pos:start="27:9" pos:end="27:9">!</operator><call pos:start="27:10" pos:end="27:40"><name pos:start="27:10" pos:end="27:15">strcmp</name><argument_list pos:start="27:16" pos:end="27:40">(<argument pos:start="27:17" pos:end="27:27"><expr pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:27"><name pos:start="27:17" pos:end="27:19">uri</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">scheme</name></name></expr></argument>, <argument pos:start="27:30" pos:end="27:39"><expr pos:start="27:30" pos:end="27:39"><literal type="string" pos:start="27:30" pos:end="27:39">"sheepdog"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:43" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:27">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">is_unix</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:26">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="35:5">else if <condition pos:start="31:15" pos:end="31:52">(<expr pos:start="31:16" pos:end="31:51"><operator pos:start="31:16" pos:end="31:16">!</operator><call pos:start="31:17" pos:end="31:51"><name pos:start="31:17" pos:end="31:22">strcmp</name><argument_list pos:start="31:23" pos:end="31:51">(<argument pos:start="31:24" pos:end="31:34"><expr pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:34"><name pos:start="31:24" pos:end="31:26">uri</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:34">scheme</name></name></expr></argument>, <argument pos:start="31:37" pos:end="31:50"><expr pos:start="31:37" pos:end="31:50"><literal type="string" pos:start="31:37" pos:end="31:50">"sheepdog+tcp"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:54" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:27">

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:18">is_unix</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:26">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:53">(<expr pos:start="35:16" pos:end="35:52"><operator pos:start="35:16" pos:end="35:16">!</operator><call pos:start="35:17" pos:end="35:52"><name pos:start="35:17" pos:end="35:22">strcmp</name><argument_list pos:start="35:23" pos:end="35:52">(<argument pos:start="35:24" pos:end="35:34"><expr pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:34"><name pos:start="35:24" pos:end="35:26">uri</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:34">scheme</name></name></expr></argument>, <argument pos:start="35:37" pos:end="35:51"><expr pos:start="35:37" pos:end="35:51"><literal type="string" pos:start="35:37" pos:end="35:51">"sheepdog+unix"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:55" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:26">

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:18">is_unix</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:25">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:17">

        <expr_stmt pos:start="41:9" pos:end="41:22"><expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:17">goto <name pos:start="43:14" pos:end="43:16">out</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:53">(<expr pos:start="49:9" pos:end="49:52"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:11">uri</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:17">path</name></name> <operator pos:start="49:19" pos:end="49:20">==</operator> <name pos:start="49:22" pos:end="49:25">NULL</name> <operator pos:start="49:27" pos:end="49:28">||</operator> <operator pos:start="49:30" pos:end="49:30">!</operator><call pos:start="49:31" pos:end="49:52"><name pos:start="49:31" pos:end="49:36">strcmp</name><argument_list pos:start="49:37" pos:end="49:52">(<argument pos:start="49:38" pos:end="49:46"><expr pos:start="49:38" pos:end="49:46"><name pos:start="49:38" pos:end="49:46"><name pos:start="49:38" pos:end="49:40">uri</name><operator pos:start="49:41" pos:end="49:42">-&gt;</operator><name pos:start="49:43" pos:end="49:46">path</name></name></expr></argument>, <argument pos:start="49:49" pos:end="49:51"><expr pos:start="49:49" pos:end="49:51"><literal type="string" pos:start="49:49" pos:end="49:51">"/"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:55" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:17">

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">-</operator><name pos:start="51:16" pos:end="51:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:72">(<expr pos:start="57:9" pos:end="57:71"><call pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:17">g_strlcpy</name><argument_list pos:start="57:18" pos:end="57:53">(<argument pos:start="57:19" pos:end="57:21"><expr pos:start="57:19" pos:end="57:21"><name pos:start="57:19" pos:end="57:21">vdi</name></expr></argument>, <argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:32"><name pos:start="57:24" pos:end="57:26">uri</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">path</name></name> <operator pos:start="57:34" pos:end="57:34">+</operator> <literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr></argument>, <argument pos:start="57:39" pos:end="57:52"><expr pos:start="57:39" pos:end="57:52"><name pos:start="57:39" pos:end="57:52">SD_MAX_VDI_LEN</name></expr></argument>)</argument_list></call> <operator pos:start="57:55" pos:end="57:56">&gt;=</operator> <name pos:start="57:58" pos:end="57:71">SD_MAX_VDI_LEN</name></expr>)</condition> <block pos:start="57:74" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:17">

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:40"><expr pos:start="67:5" pos:end="67:39"><name pos:start="67:5" pos:end="67:6">qp</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <call pos:start="67:10" pos:end="67:39"><name pos:start="67:10" pos:end="67:27">query_params_parse</name><argument_list pos:start="67:28" pos:end="67:39">(<argument pos:start="67:29" pos:end="67:38"><expr pos:start="67:29" pos:end="67:38"><name pos:start="67:29" pos:end="67:38"><name pos:start="67:29" pos:end="67:31">uri</name><operator pos:start="67:32" pos:end="67:33">-&gt;</operator><name pos:start="67:34" pos:end="67:38">query</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:70">(<expr pos:start="69:9" pos:end="69:69"><name pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:10">qp</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:13">n</name></name> <operator pos:start="69:15" pos:end="69:15">&gt;</operator> <literal type="number" pos:start="69:17" pos:end="69:17">1</literal> <operator pos:start="69:19" pos:end="69:20">||</operator> <operator pos:start="69:22" pos:end="69:22">(</operator><name pos:start="69:23" pos:end="69:32"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:32">is_unix</name></name> <operator pos:start="69:34" pos:end="69:35">&amp;&amp;</operator> <operator pos:start="69:37" pos:end="69:37">!</operator><name pos:start="69:38" pos:end="69:42"><name pos:start="69:38" pos:end="69:39">qp</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:42">n</name></name><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:46">||</operator> <operator pos:start="69:48" pos:end="69:48">(</operator><operator pos:start="69:49" pos:end="69:49">!</operator><name pos:start="69:50" pos:end="69:59"><name pos:start="69:50" pos:end="69:50">s</name><operator pos:start="69:51" pos:end="69:52">-&gt;</operator><name pos:start="69:53" pos:end="69:59">is_unix</name></name> <operator pos:start="69:61" pos:end="69:62">&amp;&amp;</operator> <name pos:start="69:64" pos:end="69:68"><name pos:start="69:64" pos:end="69:65">qp</name><operator pos:start="69:66" pos:end="69:67">-&gt;</operator><name pos:start="69:68" pos:end="69:68">n</name></name><operator pos:start="69:69" pos:end="69:69">)</operator></expr>)</condition> <block pos:start="69:72" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <operator pos:start="71:15" pos:end="71:15">-</operator><name pos:start="71:16" pos:end="71:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="101:5"><if pos:start="79:5" pos:end="93:5">if <condition pos:start="79:8" pos:end="79:19">(<expr pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">is_unix</name></name></expr>)</condition> <block pos:start="79:21" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:48">

        <comment type="block" pos:start="81:9" pos:end="81:50">/* sheepdog+unix:///vdiname?socket=path */</comment>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:72">(<expr pos:start="83:13" pos:end="83:71"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">uri</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:23">server</name></name> <operator pos:start="83:25" pos:end="83:26">||</operator> <name pos:start="83:28" pos:end="83:36"><name pos:start="83:28" pos:end="83:30">uri</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:36">port</name></name> <operator pos:start="83:38" pos:end="83:39">||</operator> <call pos:start="83:41" pos:end="83:71"><name pos:start="83:41" pos:end="83:46">strcmp</name><argument_list pos:start="83:47" pos:end="83:71">(<argument pos:start="83:48" pos:end="83:60"><expr pos:start="83:48" pos:end="83:60"><name pos:start="83:48" pos:end="83:55"><name pos:start="83:48" pos:end="83:49">qp</name><operator pos:start="83:50" pos:end="83:51">-&gt;</operator><name pos:start="83:52" pos:end="83:52">p</name><index pos:start="83:53" pos:end="83:55">[<expr pos:start="83:54" pos:end="83:54"><literal type="number" pos:start="83:54" pos:end="83:54">0</literal></expr>]</index></name><operator pos:start="83:56" pos:end="83:56">.</operator><name pos:start="83:57" pos:end="83:60">name</name></expr></argument>, <argument pos:start="83:63" pos:end="83:70"><expr pos:start="83:63" pos:end="83:70"><literal type="string" pos:start="83:63" pos:end="83:70">"socket"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:74" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:21">

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:15">ret</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <operator pos:start="85:19" pos:end="85:19">-</operator><name pos:start="85:20" pos:end="85:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="87:13" pos:end="87:21">goto <name pos:start="87:18" pos:end="87:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">host_spec</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:47"><name pos:start="91:24" pos:end="91:31">g_strdup</name><argument_list pos:start="91:32" pos:end="91:47">(<argument pos:start="91:33" pos:end="91:46"><expr pos:start="91:33" pos:end="91:46"><name pos:start="91:33" pos:end="91:40"><name pos:start="91:33" pos:end="91:34">qp</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:37">p</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><literal type="number" pos:start="91:39" pos:end="91:39">0</literal></expr>]</index></name><operator pos:start="91:41" pos:end="91:41">.</operator><name pos:start="91:42" pos:end="91:46">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="101:5">else <block pos:start="93:12" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:69">

        <comment type="block" pos:start="95:9" pos:end="95:50">/* sheepdog[+tcp]://[host:port]/vdiname */</comment>

        <expr_stmt pos:start="97:9" pos:end="99:69"><expr pos:start="97:9" pos:end="99:68"><name pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:20">host_spec</name></name> <operator pos:start="97:22" pos:end="97:22">=</operator> <call pos:start="97:24" pos:end="99:68"><name pos:start="97:24" pos:end="97:38">g_strdup_printf</name><argument_list pos:start="97:39" pos:end="99:68">(<argument pos:start="97:40" pos:end="97:46"><expr pos:start="97:40" pos:end="97:46"><literal type="string" pos:start="97:40" pos:end="97:46">"%s:%d"</literal></expr></argument>, <argument pos:start="97:49" pos:end="97:78"><expr pos:start="97:49" pos:end="97:78"><ternary pos:start="97:49" pos:end="97:78"><condition pos:start="97:49" pos:end="97:61"><expr pos:start="97:49" pos:end="97:59"><name pos:start="97:49" pos:end="97:59"><name pos:start="97:49" pos:end="97:51">uri</name><operator pos:start="97:52" pos:end="97:53">-&gt;</operator><name pos:start="97:54" pos:end="97:59">server</name></name></expr> ?</condition><then/><else pos:start="97:62" pos:end="97:78">: <expr pos:start="97:64" pos:end="97:78"><name pos:start="97:64" pos:end="97:78">SD_DEFAULT_ADDR</name></expr></else></ternary></expr></argument>,

                                       <argument pos:start="99:40" pos:end="99:67"><expr pos:start="99:40" pos:end="99:67"><ternary pos:start="99:40" pos:end="99:67"><condition pos:start="99:40" pos:end="99:50"><expr pos:start="99:40" pos:end="99:48"><name pos:start="99:40" pos:end="99:48"><name pos:start="99:40" pos:end="99:42">uri</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:48">port</name></name></expr> ?</condition><then/><else pos:start="99:51" pos:end="99:67">: <expr pos:start="99:53" pos:end="99:67"><name pos:start="99:53" pos:end="99:67">SD_DEFAULT_PORT</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:22">/* snapshot tag */</comment>

    <if_stmt pos:start="107:5" pos:end="121:5"><if pos:start="107:5" pos:end="117:5">if <condition pos:start="107:8" pos:end="107:22">(<expr pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:21"><name pos:start="107:9" pos:end="107:11">uri</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:21">fragment</name></name></expr>)</condition> <block pos:start="107:24" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:9">

        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:64">(<expr pos:start="109:13" pos:end="109:63"><operator pos:start="109:13" pos:end="109:13">!</operator><call pos:start="109:14" pos:end="109:63"><name pos:start="109:14" pos:end="109:35">sd_parse_snapid_or_tag</name><argument_list pos:start="109:36" pos:end="109:63">(<argument pos:start="109:37" pos:end="109:49"><expr pos:start="109:37" pos:end="109:49"><name pos:start="109:37" pos:end="109:49"><name pos:start="109:37" pos:end="109:39">uri</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:49">fragment</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:57"><expr pos:start="109:52" pos:end="109:57"><name pos:start="109:52" pos:end="109:57">snapid</name></expr></argument>, <argument pos:start="109:60" pos:end="109:62"><expr pos:start="109:60" pos:end="109:62"><name pos:start="109:60" pos:end="109:62">tag</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:66" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:21">

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:15">ret</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <operator pos:start="111:19" pos:end="111:19">-</operator><name pos:start="111:20" pos:end="111:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="113:13" pos:end="113:21">goto <name pos:start="113:18" pos:end="113:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="121:5">else <block pos:start="117:12" pos:end="121:5">{<block_content pos:start="119:9" pos:end="119:33">

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><operator pos:start="119:9" pos:end="119:9">*</operator><name pos:start="119:10" pos:end="119:15">snapid</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:32">CURRENT_VDI_ID</name></expr>;</expr_stmt> <comment type="block" pos:start="119:35" pos:end="119:58">/* search current vdi */</comment>

    </block_content>}</block></else></if_stmt>



<label pos:start="125:1" pos:end="125:4"><name pos:start="125:1" pos:end="125:3">out</name>:</label>

    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:11">(<expr pos:start="127:9" pos:end="127:10"><name pos:start="127:9" pos:end="127:10">qp</name></expr>)</condition> <block pos:start="127:13" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:30">

        <expr_stmt pos:start="129:9" pos:end="129:30"><expr pos:start="129:9" pos:end="129:29"><call pos:start="129:9" pos:end="129:29"><name pos:start="129:9" pos:end="129:25">query_params_free</name><argument_list pos:start="129:26" pos:end="129:29">(<argument pos:start="129:27" pos:end="129:28"><expr pos:start="129:27" pos:end="129:28"><name pos:start="129:27" pos:end="129:28">qp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:18"><expr pos:start="133:5" pos:end="133:17"><call pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:12">uri_free</name><argument_list pos:start="133:13" pos:end="133:17">(<argument pos:start="133:14" pos:end="133:16"><expr pos:start="133:14" pos:end="133:16"><name pos:start="133:14" pos:end="133:16">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:15">return <expr pos:start="135:12" pos:end="135:14"><name pos:start="135:12" pos:end="135:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
