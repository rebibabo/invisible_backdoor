<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2777.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">stm32f2xx_usart_write</name><parameter_list pos:start="1:34" pos:end="3:68">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:59"><decl pos:start="1:49" pos:end="1:59"><type pos:start="1:49" pos:end="1:59"><name pos:start="1:49" pos:end="1:54">hwaddr</name></type> <name pos:start="1:56" pos:end="1:59">addr</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:42">uint64_t</name></type> <name pos:start="3:44" pos:end="3:48">val64</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:67"><decl pos:start="3:51" pos:end="3:67"><type pos:start="3:51" pos:end="3:67"><name pos:start="3:51" pos:end="3:58">unsigned</name> <name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:67">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">STM32F2XXUsartState</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:35">= <expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">value</name> <init pos:start="9:20" pos:end="9:26">= <expr pos:start="9:22" pos:end="9:26"><name pos:start="9:22" pos:end="9:26">val64</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:20">ch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:69"><expr pos:start="15:5" pos:end="15:68"><call pos:start="15:5" pos:end="15:68"><name pos:start="15:5" pos:end="15:12">DB_PRINT</name><argument_list pos:start="15:13" pos:end="15:68">(<argument pos:start="15:14" pos:end="15:54"><expr pos:start="15:14" pos:end="15:54"><literal type="string" pos:start="15:14" pos:end="15:24">"Write 0x%"</literal> <name pos:start="15:26" pos:end="15:31">PRIx32</name> <literal type="string" pos:start="15:33" pos:end="15:39">", 0x%"</literal><name pos:start="15:40" pos:end="15:50">HWADDR_PRIx</name><literal type="string" pos:start="15:51" pos:end="15:54">"\n"</literal></expr></argument>, <argument pos:start="15:57" pos:end="15:61"><expr pos:start="15:57" pos:end="15:61"><name pos:start="15:57" pos:end="15:61">value</name></expr></argument>, <argument pos:start="15:64" pos:end="15:67"><expr pos:start="15:64" pos:end="15:67"><name pos:start="15:64" pos:end="15:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="107:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="107:5">{<block_content pos:start="21:5" pos:end="105:75">

    <case pos:start="21:5" pos:end="21:18">case <expr pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:17">USART_SR</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:27">(<expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:17">value</name> <operator pos:start="23:19" pos:end="23:20">&lt;=</operator> <literal type="number" pos:start="23:22" pos:end="23:26">0x3FF</literal></expr>)</condition> <block pos:start="23:29" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:32">

            <expr_stmt pos:start="25:13" pos:end="25:32"><expr pos:start="25:13" pos:end="25:31"><name pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:23">usart_sr</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:31">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="31:9">else <block pos:start="27:16" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:33">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:23">usart_sr</name></name> <operator pos:start="29:25" pos:end="29:26">&amp;=</operator> <name pos:start="29:28" pos:end="29:32">value</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:43">(<expr pos:start="33:13" pos:end="33:42"><operator pos:start="33:13" pos:end="33:13">!</operator><operator pos:start="33:14" pos:end="33:14">(</operator><name pos:start="33:15" pos:end="33:25"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:25">usart_sr</name></name> <operator pos:start="33:27" pos:end="33:27">&amp;</operator> <name pos:start="33:29" pos:end="33:41">USART_SR_RXNE</name><operator pos:start="33:42" pos:end="33:42">)</operator></expr>)</condition> <block pos:start="33:45" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:36">

            <expr_stmt pos:start="35:13" pos:end="35:36"><expr pos:start="35:13" pos:end="35:35"><call pos:start="35:13" pos:end="35:35"><name pos:start="35:13" pos:end="35:24">qemu_set_irq</name><argument_list pos:start="35:25" pos:end="35:35">(<argument pos:start="35:26" pos:end="35:31"><expr pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:31"><name pos:start="35:26" pos:end="35:26">s</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:31">irq</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:34"><expr pos:start="35:34" pos:end="35:34"><literal type="number" pos:start="35:34" pos:end="35:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    <case pos:start="41:5" pos:end="41:18">case <expr pos:start="41:10" pos:end="41:17"><name pos:start="41:10" pos:end="41:17">USART_DR</name></expr>:</case>

        <if_stmt pos:start="43:9" pos:end="59:9"><if pos:start="43:9" pos:end="59:9">if <condition pos:start="43:12" pos:end="43:27">(<expr pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:17">value</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <literal type="number" pos:start="43:21" pos:end="43:26">0xF000</literal></expr>)</condition> <block pos:start="43:29" pos:end="59:9">{<block_content pos:start="45:13" pos:end="57:41">

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:14">ch</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:22">value</name></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:23">(<expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:22">chr</name></name></expr>)</condition> <block pos:start="47:25" pos:end="53:13">{<block_content pos:start="51:17" pos:end="51:54">



                <expr_stmt pos:start="51:17" pos:end="51:54"><expr pos:start="51:17" pos:end="51:53"><call pos:start="51:17" pos:end="51:53"><name pos:start="51:17" pos:end="51:37">qemu_chr_fe_write_all</name><argument_list pos:start="51:38" pos:end="51:53">(<argument pos:start="51:39" pos:end="51:44"><expr pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:44"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:44">chr</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:49"><expr pos:start="51:47" pos:end="51:49"><operator pos:start="51:47" pos:end="51:47">&amp;</operator><name pos:start="51:48" pos:end="51:49">ch</name></expr></argument>, <argument pos:start="51:52" pos:end="51:52"><expr pos:start="51:52" pos:end="51:52"><literal type="number" pos:start="51:52" pos:end="51:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:39"><expr pos:start="55:13" pos:end="55:38"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">usart_sr</name></name> <operator pos:start="55:25" pos:end="55:26">|=</operator> <name pos:start="55:28" pos:end="55:38">USART_SR_TC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:41"><expr pos:start="57:13" pos:end="57:40"><name pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:23">usart_sr</name></name> <operator pos:start="57:25" pos:end="57:26">&amp;=</operator> <operator pos:start="57:28" pos:end="57:28">~</operator><name pos:start="57:29" pos:end="57:40">USART_SR_TXE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    <case pos:start="63:5" pos:end="63:19">case <expr pos:start="63:10" pos:end="63:18"><name pos:start="63:10" pos:end="63:18">USART_BRR</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:20">usart_brr</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:28">value</name></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:15">return;</return>

    <case pos:start="69:5" pos:end="69:19">case <expr pos:start="69:10" pos:end="69:18"><name pos:start="69:10" pos:end="69:18">USART_CR1</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:20">usart_cr1</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:28">value</name></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="75:44">(<expr pos:start="73:17" pos:end="75:43"><name pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:28">usart_cr1</name></name> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <name pos:start="73:32" pos:end="73:47">USART_CR1_RXNEIE</name> <operator pos:start="73:49" pos:end="73:50">&amp;&amp;</operator>

                <name pos:start="75:17" pos:end="75:27"><name pos:start="75:17" pos:end="75:17">s</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:27">usart_sr</name></name> <operator pos:start="75:29" pos:end="75:29">&amp;</operator> <name pos:start="75:31" pos:end="75:43">USART_SR_RXNE</name></expr>)</condition> <block pos:start="75:46" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:40">

                <expr_stmt pos:start="77:17" pos:end="77:40"><expr pos:start="77:17" pos:end="77:39"><call pos:start="77:17" pos:end="77:39"><name pos:start="77:17" pos:end="77:28">qemu_set_irq</name><argument_list pos:start="77:29" pos:end="77:39">(<argument pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:35"><name pos:start="77:30" pos:end="77:35"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:35">irq</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:38"><expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        <return pos:start="81:9" pos:end="81:15">return;</return>

    <case pos:start="83:5" pos:end="83:19">case <expr pos:start="83:10" pos:end="83:18"><name pos:start="83:10" pos:end="83:18">USART_CR2</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:20"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:20">usart_cr2</name></name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:28">value</name></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:15">return;</return>

    <case pos:start="89:5" pos:end="89:19">case <expr pos:start="89:10" pos:end="89:18"><name pos:start="89:10" pos:end="89:18">USART_CR3</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">usart_cr3</name></name> <operator pos:start="91:22" pos:end="91:22">=</operator> <name pos:start="91:24" pos:end="91:28">value</name></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:15">return;</return>

    <case pos:start="95:5" pos:end="95:20">case <expr pos:start="95:10" pos:end="95:19"><name pos:start="95:10" pos:end="95:19">USART_GTPR</name></expr>:</case>

        <expr_stmt pos:start="97:9" pos:end="97:30"><expr pos:start="97:9" pos:end="97:29"><name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:21">usart_gtpr</name></name> <operator pos:start="97:23" pos:end="97:23">=</operator> <name pos:start="97:25" pos:end="97:29">value</name></expr>;</expr_stmt>

        <return pos:start="99:9" pos:end="99:15">return;</return>

    <default pos:start="101:5" pos:end="101:12">default:</default>

        <expr_stmt pos:start="103:9" pos:end="105:75"><expr pos:start="103:9" pos:end="105:74"><call pos:start="103:9" pos:end="105:74"><name pos:start="103:9" pos:end="103:21">qemu_log_mask</name><argument_list pos:start="103:22" pos:end="105:74">(<argument pos:start="103:23" pos:end="103:37"><expr pos:start="103:23" pos:end="103:37"><name pos:start="103:23" pos:end="103:37">LOG_GUEST_ERROR</name></expr></argument>,

                      <argument pos:start="105:23" pos:end="105:57"><expr pos:start="105:23" pos:end="105:57"><literal type="string" pos:start="105:23" pos:end="105:42">"%s: Bad offset 0x%"</literal><name pos:start="105:43" pos:end="105:53">HWADDR_PRIx</name><literal type="string" pos:start="105:54" pos:end="105:57">"\n"</literal></expr></argument>, <argument pos:start="105:60" pos:end="105:67"><expr pos:start="105:60" pos:end="105:67"><name pos:start="105:60" pos:end="105:67">__func__</name></expr></argument>, <argument pos:start="105:70" pos:end="105:73"><expr pos:start="105:70" pos:end="105:73"><name pos:start="105:70" pos:end="105:73">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function></unit>
