<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/358.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">qmp_guest_shutdown</name><parameter_list pos:start="1:24" pos:end="1:69">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:28">bool</name></type> <name pos:start="1:30" pos:end="1:37">has_mode</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">mode</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:62">Error</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier><modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">err</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">UINT</name></type> <name pos:start="5:10" pos:end="5:22">shutdown_flag</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34">EWX_FORCE</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:50"><expr pos:start="9:5" pos:end="9:49"><call pos:start="9:5" pos:end="9:49"><name pos:start="9:5" pos:end="9:8">slog</name><argument_list pos:start="9:9" pos:end="9:49">(<argument pos:start="9:10" pos:end="9:42"><expr pos:start="9:10" pos:end="9:42"><literal type="string" pos:start="9:10" pos:end="9:42">"guest-shutdown called, mode: %s"</literal></expr></argument>, <argument pos:start="9:45" pos:end="9:48"><expr pos:start="9:45" pos:end="9:48"><name pos:start="9:45" pos:end="9:48">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="33:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:52">(<expr pos:start="13:9" pos:end="13:51"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17">has_mode</name> <operator pos:start="13:19" pos:end="13:20">||</operator> <call pos:start="13:22" pos:end="13:46"><name pos:start="13:22" pos:end="13:27">strcmp</name><argument_list pos:start="13:28" pos:end="13:46">(<argument pos:start="13:29" pos:end="13:32"><expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">mode</name></expr></argument>, <argument pos:start="13:35" pos:end="13:45"><expr pos:start="13:35" pos:end="13:45"><literal type="string" pos:start="13:35" pos:end="13:45">"powerdown"</literal></expr></argument>)</argument_list></call> <operator pos:start="13:48" pos:end="13:49">==</operator> <literal type="number" pos:start="13:51" pos:end="13:51">0</literal></expr>)</condition> <block pos:start="13:54" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:38">

        <expr_stmt pos:start="15:9" pos:end="15:38"><expr pos:start="15:9" pos:end="15:37"><name pos:start="15:9" pos:end="15:21">shutdown_flag</name> <operator pos:start="15:23" pos:end="15:24">|=</operator> <name pos:start="15:26" pos:end="15:37">EWX_POWEROFF</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="21:5">else if <condition pos:start="17:15" pos:end="17:41">(<expr pos:start="17:16" pos:end="17:40"><call pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:21">strcmp</name><argument_list pos:start="17:22" pos:end="17:35">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">mode</name></expr></argument>, <argument pos:start="17:29" pos:end="17:34"><expr pos:start="17:29" pos:end="17:34"><literal type="string" pos:start="17:29" pos:end="17:34">"halt"</literal></expr></argument>)</argument_list></call> <operator pos:start="17:37" pos:end="17:38">==</operator> <literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr>)</condition> <block pos:start="17:43" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:38">

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:21">shutdown_flag</name> <operator pos:start="19:23" pos:end="19:24">|=</operator> <name pos:start="19:26" pos:end="19:37">EWX_SHUTDOWN</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="25:5">else if <condition pos:start="21:15" pos:end="21:43">(<expr pos:start="21:16" pos:end="21:42"><call pos:start="21:16" pos:end="21:37"><name pos:start="21:16" pos:end="21:21">strcmp</name><argument_list pos:start="21:22" pos:end="21:37">(<argument pos:start="21:23" pos:end="21:26"><expr pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:26">mode</name></expr></argument>, <argument pos:start="21:29" pos:end="21:36"><expr pos:start="21:29" pos:end="21:36"><literal type="string" pos:start="21:29" pos:end="21:36">"reboot"</literal></expr></argument>)</argument_list></call> <operator pos:start="21:39" pos:end="21:40">==</operator> <literal type="number" pos:start="21:42" pos:end="21:42">0</literal></expr>)</condition> <block pos:start="21:45" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:36">

        <expr_stmt pos:start="23:9" pos:end="23:36"><expr pos:start="23:9" pos:end="23:35"><name pos:start="23:9" pos:end="23:21">shutdown_flag</name> <operator pos:start="23:23" pos:end="23:24">|=</operator> <name pos:start="23:26" pos:end="23:35">EWX_REBOOT</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="33:5">else <block pos:start="25:12" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:15">

        <expr_stmt pos:start="27:9" pos:end="29:43"><expr pos:start="27:9" pos:end="29:42"><call pos:start="27:9" pos:end="29:42"><name pos:start="27:9" pos:end="27:17">error_set</name><argument_list pos:start="27:18" pos:end="29:42">(<argument pos:start="27:19" pos:end="27:21"><expr pos:start="27:19" pos:end="27:21"><name pos:start="27:19" pos:end="27:21">err</name></expr></argument>, <argument pos:start="27:24" pos:end="27:51"><expr pos:start="27:24" pos:end="27:51"><name pos:start="27:24" pos:end="27:51">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="27:54" pos:end="27:59"><expr pos:start="27:54" pos:end="27:59"><literal type="string" pos:start="27:54" pos:end="27:59">"mode"</literal></expr></argument>,

                  <argument pos:start="29:19" pos:end="29:41"><expr pos:start="29:19" pos:end="29:41"><literal type="string" pos:start="29:19" pos:end="29:41">"halt|powerdown|reboot"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:15">return;</return>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="39:17">/* Request a shutdown privilege, but try to shut down the system

       anyway. */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><call pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:21">acquire_privilege</name><argument_list pos:start="41:22" pos:end="41:44">(<argument pos:start="41:23" pos:end="41:38"><expr pos:start="41:23" pos:end="41:38"><name pos:start="41:23" pos:end="41:38">SE_SHUTDOWN_NAME</name></expr></argument>, <argument pos:start="41:41" pos:end="41:43"><expr pos:start="41:41" pos:end="41:43"><name pos:start="41:41" pos:end="41:43">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:26">(<expr pos:start="43:9" pos:end="43:25"><call pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:20">error_is_set</name><argument_list pos:start="43:21" pos:end="43:25">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:28" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:15">

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:65">(<expr pos:start="51:9" pos:end="51:64"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:64"><name pos:start="51:10" pos:end="51:22">ExitWindowsEx</name><argument_list pos:start="51:23" pos:end="51:64">(<argument pos:start="51:24" pos:end="51:36"><expr pos:start="51:24" pos:end="51:36"><name pos:start="51:24" pos:end="51:36">shutdown_flag</name></expr></argument>, <argument pos:start="51:39" pos:end="51:63"><expr pos:start="51:39" pos:end="51:63"><name pos:start="51:39" pos:end="51:63">SHTDN_REASON_FLAG_PLANNED</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:67" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:45">

        <expr_stmt pos:start="53:9" pos:end="53:58"><expr pos:start="53:9" pos:end="53:57"><call pos:start="53:9" pos:end="53:57"><name pos:start="53:9" pos:end="53:12">slog</name><argument_list pos:start="53:13" pos:end="53:57">(<argument pos:start="53:14" pos:end="53:40"><expr pos:start="53:14" pos:end="53:40"><literal type="string" pos:start="53:14" pos:end="53:40">"guest-shutdown failed: %d"</literal></expr></argument>, <argument pos:start="53:43" pos:end="53:56"><expr pos:start="53:43" pos:end="53:56"><call pos:start="53:43" pos:end="53:56"><name pos:start="53:43" pos:end="53:54">GetLastError</name><argument_list pos:start="53:55" pos:end="53:56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><call pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:17">error_set</name><argument_list pos:start="55:18" pos:end="55:44">(<argument pos:start="55:19" pos:end="55:21"><expr pos:start="55:19" pos:end="55:21"><name pos:start="55:19" pos:end="55:21">err</name></expr></argument>, <argument pos:start="55:24" pos:end="55:43"><expr pos:start="55:24" pos:end="55:43"><name pos:start="55:24" pos:end="55:43">QERR_UNDEFINED_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
