<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24614.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">pci_ich9_ahci_init</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:23">AHCIPCIState</name></name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">d</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:50"><expr pos:start="7:5" pos:end="7:49"><name pos:start="7:5" pos:end="7:5">d</name> <operator pos:start="7:7" pos:end="7:7">=</operator> <call pos:start="7:9" pos:end="7:49"><name pos:start="7:9" pos:end="7:17">DO_UPCAST</name><argument_list pos:start="7:18" pos:end="7:49">(<argument pos:start="7:19" pos:end="7:37"><expr pos:start="7:19" pos:end="7:37">struct <name pos:start="7:26" pos:end="7:37">AHCIPCIState</name></expr></argument>, <argument pos:start="7:40" pos:end="7:43"><expr pos:start="7:40" pos:end="7:43"><name pos:start="7:40" pos:end="7:43">card</name></expr></argument>, <argument pos:start="7:46" pos:end="7:48"><expr pos:start="7:46" pos:end="7:48"><name pos:start="7:46" pos:end="7:48">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:66"><expr pos:start="11:5" pos:end="11:65"><call pos:start="11:5" pos:end="11:65"><name pos:start="11:5" pos:end="11:28">pci_config_set_vendor_id</name><argument_list pos:start="11:29" pos:end="11:65">(<argument pos:start="11:30" pos:end="11:43"><expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:30">d</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:36">card</name><operator pos:start="11:37" pos:end="11:37">.</operator><name pos:start="11:38" pos:end="11:43">config</name></name></expr></argument>, <argument pos:start="11:46" pos:end="11:64"><expr pos:start="11:46" pos:end="11:64"><name pos:start="11:46" pos:end="11:64">PCI_VENDOR_ID_INTEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:74"><expr pos:start="13:5" pos:end="13:73"><call pos:start="13:5" pos:end="13:73"><name pos:start="13:5" pos:end="13:28">pci_config_set_device_id</name><argument_list pos:start="13:29" pos:end="13:73">(<argument pos:start="13:30" pos:end="13:43"><expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:30">d</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:36">card</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:43">config</name></name></expr></argument>, <argument pos:start="13:46" pos:end="13:72"><expr pos:start="13:46" pos:end="13:72"><name pos:start="13:46" pos:end="13:72">PCI_DEVICE_ID_INTEL_82801IR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:65"><expr pos:start="17:5" pos:end="17:64"><call pos:start="17:5" pos:end="17:64"><name pos:start="17:5" pos:end="17:24">pci_config_set_class</name><argument_list pos:start="17:25" pos:end="17:64">(<argument pos:start="17:26" pos:end="17:39"><expr pos:start="17:26" pos:end="17:39"><name pos:start="17:26" pos:end="17:39"><name pos:start="17:26" pos:end="17:26">d</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:32">card</name><operator pos:start="17:33" pos:end="17:33">.</operator><name pos:start="17:34" pos:end="17:39">config</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:63"><expr pos:start="17:42" pos:end="17:63"><name pos:start="17:42" pos:end="17:63">PCI_CLASS_STORAGE_SATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><call pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:27">pci_config_set_revision</name><argument_list pos:start="19:28" pos:end="19:49">(<argument pos:start="19:29" pos:end="19:42"><expr pos:start="19:29" pos:end="19:42"><name pos:start="19:29" pos:end="19:42"><name pos:start="19:29" pos:end="19:29">d</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:35">card</name><operator pos:start="19:36" pos:end="19:36">.</operator><name pos:start="19:37" pos:end="19:42">config</name></name></expr></argument>, <argument pos:start="19:45" pos:end="19:48"><expr pos:start="19:45" pos:end="19:48"><literal type="number" pos:start="19:45" pos:end="19:48">0x02</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:77"><expr pos:start="21:5" pos:end="21:76"><call pos:start="21:5" pos:end="21:76"><name pos:start="21:5" pos:end="21:33">pci_config_set_prog_interface</name><argument_list pos:start="21:34" pos:end="21:76">(<argument pos:start="21:35" pos:end="21:48"><expr pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:48"><name pos:start="21:35" pos:end="21:35">d</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:41">card</name><operator pos:start="21:42" pos:end="21:42">.</operator><name pos:start="21:43" pos:end="21:48">config</name></name></expr></argument>, <argument pos:start="21:51" pos:end="21:75"><expr pos:start="21:51" pos:end="21:75"><name pos:start="21:51" pos:end="21:75">AHCI_PROGMODE_MAJOR_REV_1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:47"><expr pos:start="25:5" pos:end="25:46"><name pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:5">d</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:11">card</name><operator pos:start="25:12" pos:end="25:12">.</operator><name pos:start="25:13" pos:end="25:18">config</name><index pos:start="25:19" pos:end="25:39">[<expr pos:start="25:20" pos:end="25:38"><name pos:start="25:20" pos:end="25:38">PCI_CACHE_LINE_SIZE</name></expr>]</index></name> <operator pos:start="25:41" pos:end="25:41">=</operator> <literal type="number" pos:start="25:43" pos:end="25:46">0x08</literal></expr>;</expr_stmt>  <comment type="block" pos:start="25:50" pos:end="25:70">/* Cache line size */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:5">d</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:11">card</name><operator pos:start="27:12" pos:end="27:12">.</operator><name pos:start="27:13" pos:end="27:18">config</name><index pos:start="27:19" pos:end="27:37">[<expr pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:36">PCI_LATENCY_TIMER</name></expr>]</index></name>   <operator pos:start="27:41" pos:end="27:41">=</operator> <literal type="number" pos:start="27:43" pos:end="27:46">0x00</literal></expr>;</expr_stmt>  <comment type="block" pos:start="27:50" pos:end="27:68">/* Latency timer */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><call pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:32">pci_config_set_interrupt_pin</name><argument_list pos:start="29:33" pos:end="29:51">(<argument pos:start="29:34" pos:end="29:47"><expr pos:start="29:34" pos:end="29:47"><name pos:start="29:34" pos:end="29:47"><name pos:start="29:34" pos:end="29:34">d</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:40">card</name><operator pos:start="29:41" pos:end="29:41">.</operator><name pos:start="29:42" pos:end="29:47">config</name></name></expr></argument>, <argument pos:start="29:50" pos:end="29:50"><expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:51">/* XXX Software should program this register */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:5">d</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">card</name><operator pos:start="35:12" pos:end="35:12">.</operator><name pos:start="35:13" pos:end="35:18">config</name><index pos:start="35:19" pos:end="35:24">[<expr pos:start="35:20" pos:end="35:23"><literal type="number" pos:start="35:20" pos:end="35:23">0x90</literal></expr>]</index></name>   <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:30">1</literal> <operator pos:start="35:32" pos:end="35:33">&lt;&lt;</operator> <literal type="number" pos:start="35:35" pos:end="35:35">6</literal></expr>;</expr_stmt> <comment type="block" pos:start="35:38" pos:end="35:75">/* Address Map Register - AHCI mode */</comment>



    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:23">qemu_register_reset</name><argument_list pos:start="39:24" pos:end="39:38">(<argument pos:start="39:25" pos:end="39:34"><expr pos:start="39:25" pos:end="39:34"><name pos:start="39:25" pos:end="39:34">ahci_reset</name></expr></argument>, <argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:78">/* XXX BAR size should be 1k, but that breaks, so bump it to 4k for now */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:65"><expr pos:start="45:5" pos:end="45:64"><call pos:start="45:5" pos:end="45:64"><name pos:start="45:5" pos:end="45:27">pci_register_bar_simple</name><argument_list pos:start="45:28" pos:end="45:64">(<argument pos:start="45:29" pos:end="45:36"><expr pos:start="45:29" pos:end="45:36"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:36"><name pos:start="45:30" pos:end="45:30">d</name><operator pos:start="45:31" pos:end="45:32">-&gt;</operator><name pos:start="45:33" pos:end="45:36">card</name></name></expr></argument>, <argument pos:start="45:39" pos:end="45:39"><expr pos:start="45:39" pos:end="45:39"><literal type="number" pos:start="45:39" pos:end="45:39">5</literal></expr></argument>, <argument pos:start="45:42" pos:end="45:47"><expr pos:start="45:42" pos:end="45:47"><literal type="number" pos:start="45:42" pos:end="45:47">0x1000</literal></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:63"><expr pos:start="45:53" pos:end="45:63"><name pos:start="45:53" pos:end="45:63"><name pos:start="45:53" pos:end="45:53">d</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:59">ahci</name><operator pos:start="45:60" pos:end="45:60">.</operator><name pos:start="45:61" pos:end="45:63">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:40"><expr pos:start="49:5" pos:end="49:39"><call pos:start="49:5" pos:end="49:39"><name pos:start="49:5" pos:end="49:12">msi_init</name><argument_list pos:start="49:13" pos:end="49:39">(<argument pos:start="49:14" pos:end="49:16"><expr pos:start="49:14" pos:end="49:16"><name pos:start="49:14" pos:end="49:16">dev</name></expr></argument>, <argument pos:start="49:19" pos:end="49:22"><expr pos:start="49:19" pos:end="49:22"><literal type="number" pos:start="49:19" pos:end="49:22">0x50</literal></expr></argument>, <argument pos:start="49:25" pos:end="49:25"><expr pos:start="49:25" pos:end="49:25"><literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr></argument>, <argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><name pos:start="49:28" pos:end="49:31">true</name></expr></argument>, <argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><call pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:13">ahci_init</name><argument_list pos:start="53:14" pos:end="53:38">(<argument pos:start="53:15" pos:end="53:22"><expr pos:start="53:15" pos:end="53:22"><operator pos:start="53:15" pos:end="53:15">&amp;</operator><name pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:16">d</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:22">ahci</name></name></expr></argument>, <argument pos:start="53:25" pos:end="53:34"><expr pos:start="53:25" pos:end="53:34"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:34"><name pos:start="53:26" pos:end="53:28">dev</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">qdev</name></name></expr></argument>, <argument pos:start="53:37" pos:end="53:37"><expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:5">d</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:11">ahci</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:15">irq</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:32"><name pos:start="55:19" pos:end="55:19">d</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">card</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:29">irq</name><index pos:start="55:30" pos:end="55:32">[<expr pos:start="55:31" pos:end="55:31"><literal type="number" pos:start="55:31" pos:end="55:31">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
