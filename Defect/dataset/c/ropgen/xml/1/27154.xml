<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27154.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">filter</name><parameter_list pos:start="1:19" pos:end="1:40">(<parameter pos:start="1:20" pos:end="1:39"><decl pos:start="1:20" pos:end="1:39"><type pos:start="1:20" pos:end="1:36"><name pos:start="1:20" pos:end="1:34">AVFilterContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:110">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">IDETContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">idet</name> <init pos:start="5:23" pos:end="5:33">= <expr pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:33"><name pos:start="5:25" pos:end="5:27">ctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:33">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">y</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:20"><name pos:start="9:13" pos:end="9:17">alpha</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">2</literal></expr>]</index></name><init pos:start="9:21" pos:end="9:24">=<expr pos:start="9:22" pos:end="9:24"><block pos:start="9:22" pos:end="9:24">{<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:17">delta</name><init pos:start="11:18" pos:end="11:19">=<expr pos:start="11:19" pos:end="11:19"><literal type="number" pos:start="11:19" pos:end="11:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">Type</name></type> <name pos:start="13:10" pos:end="13:13">type</name></decl>, <decl pos:start="13:16" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:8"/><name pos:start="13:16" pos:end="13:24">best_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">match</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="55:5">for <control pos:start="19:9" pos:end="19:50">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:45"><expr pos:start="19:17" pos:end="19:44"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:44"><name pos:start="19:21" pos:end="19:24">idet</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:29">csp</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:44">nb_components</name></name></expr>;</condition> <incr pos:start="19:47" pos:end="19:49"><expr pos:start="19:47" pos:end="19:49"><name pos:start="19:47" pos:end="19:47">i</name><operator pos:start="19:48" pos:end="19:49">++</operator></expr></incr>)</control> <block pos:start="19:52" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:9">

        <decl_stmt pos:start="21:9" pos:end="21:36"><decl pos:start="21:9" pos:end="21:35"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:13">w</name> <init pos:start="21:15" pos:end="21:35">= <expr pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:35"><name pos:start="21:17" pos:end="21:20">idet</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:25">cur</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:32">video</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:35">w</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:36"><decl pos:start="23:9" pos:end="23:35"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:13">h</name> <init pos:start="23:15" pos:end="23:35">= <expr pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:20">idet</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:25">cur</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:32">video</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:35">h</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:42"><decl pos:start="25:9" pos:end="25:41"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">refs</name> <init pos:start="25:18" pos:end="25:41">= <expr pos:start="25:20" pos:end="25:41"><name pos:start="25:20" pos:end="25:41"><name pos:start="25:20" pos:end="25:23">idet</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:28">cur</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:38">linesize</name><index pos:start="25:39" pos:end="25:41">[<expr pos:start="25:40" pos:end="25:40"><name pos:start="25:40" pos:end="25:40">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:13">i</name> <operator pos:start="29:15" pos:end="29:16">&amp;&amp;</operator> <name pos:start="29:18" pos:end="29:18">i</name><operator pos:start="29:19" pos:end="29:19">&lt;</operator><literal type="number" pos:start="29:20" pos:end="29:20">3</literal></expr>)</condition> <block pos:start="29:23" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:13">w</name> <operator pos:start="31:15" pos:end="31:17">&gt;&gt;=</operator> <name pos:start="31:19" pos:end="31:42"><name pos:start="31:19" pos:end="31:22">idet</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">csp</name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:42">log2_chroma_w</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:13">h</name> <operator pos:start="33:15" pos:end="33:17">&gt;&gt;=</operator> <name pos:start="33:19" pos:end="33:42"><name pos:start="33:19" pos:end="33:22">idet</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:27">csp</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:42">log2_chroma_h</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="39:9" pos:end="53:9">for <control pos:start="39:13" pos:end="39:35">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">y</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">2</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:30"><expr pos:start="39:21" pos:end="39:29"><name pos:start="39:21" pos:end="39:21">y</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:25">h</name> <operator pos:start="39:27" pos:end="39:27">-</operator> <literal type="number" pos:start="39:29" pos:end="39:29">2</literal></expr>;</condition> <incr pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:32">y</name><operator pos:start="39:33" pos:end="39:34">++</operator></expr></incr>)</control> <block pos:start="39:37" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:77">

            <decl_stmt pos:start="41:13" pos:end="41:57"><decl pos:start="41:13" pos:end="41:56"><type pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:19">uint8_t</name> <modifier pos:start="41:21" pos:end="41:21">*</modifier></type><name pos:start="41:22" pos:end="41:25">prev</name> <init pos:start="41:27" pos:end="41:56">= <expr pos:start="41:29" pos:end="41:56"><operator pos:start="41:29" pos:end="41:29">&amp;</operator><name pos:start="41:30" pos:end="41:56"><name pos:start="41:30" pos:end="41:33">idet</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:39">prev</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:45">data</name><index pos:start="41:46" pos:end="41:48">[<expr pos:start="41:47" pos:end="41:47"><name pos:start="41:47" pos:end="41:47">i</name></expr>]</index><index pos:start="41:49" pos:end="41:56">[<expr pos:start="41:50" pos:end="41:55"><name pos:start="41:50" pos:end="41:50">y</name><operator pos:start="41:51" pos:end="41:51">*</operator><name pos:start="41:52" pos:end="41:55">refs</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:57"><decl pos:start="43:13" pos:end="43:56"><type pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:19">uint8_t</name> <modifier pos:start="43:21" pos:end="43:21">*</modifier></type><name pos:start="43:22" pos:end="43:24">cur</name>  <init pos:start="43:27" pos:end="43:56">= <expr pos:start="43:29" pos:end="43:56"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:56"><name pos:start="43:30" pos:end="43:33">idet</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:38">cur</name> <operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:45">data</name><index pos:start="43:46" pos:end="43:48">[<expr pos:start="43:47" pos:end="43:47"><name pos:start="43:47" pos:end="43:47">i</name></expr>]</index><index pos:start="43:49" pos:end="43:56">[<expr pos:start="43:50" pos:end="43:55"><name pos:start="43:50" pos:end="43:50">y</name><operator pos:start="43:51" pos:end="43:51">*</operator><name pos:start="43:52" pos:end="43:55">refs</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="45:13" pos:end="45:57"><decl pos:start="45:13" pos:end="45:56"><type pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:19">uint8_t</name> <modifier pos:start="45:21" pos:end="45:21">*</modifier></type><name pos:start="45:22" pos:end="45:25">next</name> <init pos:start="45:27" pos:end="45:56">= <expr pos:start="45:29" pos:end="45:56"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:56"><name pos:start="45:30" pos:end="45:33">idet</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:39">next</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:45">data</name><index pos:start="45:46" pos:end="45:48">[<expr pos:start="45:47" pos:end="45:47"><name pos:start="45:47" pos:end="45:47">i</name></expr>]</index><index pos:start="45:49" pos:end="45:56">[<expr pos:start="45:50" pos:end="45:55"><name pos:start="45:50" pos:end="45:50">y</name><operator pos:start="45:51" pos:end="45:51">*</operator><name pos:start="45:52" pos:end="45:55">refs</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:77"><expr pos:start="47:13" pos:end="47:76"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:17">alpha</name><index pos:start="47:18" pos:end="47:26">[ <expr pos:start="47:20" pos:end="47:25"><name pos:start="47:20" pos:end="47:20">y</name>   <operator pos:start="47:24" pos:end="47:24">&amp;</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>]</index></name> <operator pos:start="47:28" pos:end="47:29">+=</operator> <call pos:start="47:31" pos:end="47:76"><name pos:start="47:31" pos:end="47:47"><name pos:start="47:31" pos:end="47:34">idet</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:47">filter_line</name></name><argument_list pos:start="47:48" pos:end="47:76">(<argument pos:start="47:49" pos:end="47:56"><expr pos:start="47:49" pos:end="47:56"><name pos:start="47:49" pos:end="47:51">cur</name><operator pos:start="47:52" pos:end="47:52">-</operator><name pos:start="47:53" pos:end="47:56">refs</name></expr></argument>, <argument pos:start="47:59" pos:end="47:62"><expr pos:start="47:59" pos:end="47:62"><name pos:start="47:59" pos:end="47:62">prev</name></expr></argument>, <argument pos:start="47:65" pos:end="47:72"><expr pos:start="47:65" pos:end="47:72"><name pos:start="47:65" pos:end="47:67">cur</name><operator pos:start="47:68" pos:end="47:68">+</operator><name pos:start="47:69" pos:end="47:72">refs</name></expr></argument>, <argument pos:start="47:75" pos:end="47:75"><expr pos:start="47:75" pos:end="47:75"><name pos:start="47:75" pos:end="47:75">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:77"><expr pos:start="49:13" pos:end="49:76"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:17">alpha</name><index pos:start="49:18" pos:end="49:26">[<expr pos:start="49:19" pos:end="49:25"><operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:20">y</name><operator pos:start="49:21" pos:end="49:21">^</operator><literal type="number" pos:start="49:22" pos:end="49:22">1</literal><operator pos:start="49:23" pos:end="49:23">)</operator><operator pos:start="49:24" pos:end="49:24">&amp;</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>]</index></name> <operator pos:start="49:28" pos:end="49:29">+=</operator> <call pos:start="49:31" pos:end="49:76"><name pos:start="49:31" pos:end="49:47"><name pos:start="49:31" pos:end="49:34">idet</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:47">filter_line</name></name><argument_list pos:start="49:48" pos:end="49:76">(<argument pos:start="49:49" pos:end="49:56"><expr pos:start="49:49" pos:end="49:56"><name pos:start="49:49" pos:end="49:51">cur</name><operator pos:start="49:52" pos:end="49:52">-</operator><name pos:start="49:53" pos:end="49:56">refs</name></expr></argument>, <argument pos:start="49:59" pos:end="49:62"><expr pos:start="49:59" pos:end="49:62"><name pos:start="49:59" pos:end="49:62">next</name></expr></argument>, <argument pos:start="49:65" pos:end="49:72"><expr pos:start="49:65" pos:end="49:72"><name pos:start="49:65" pos:end="49:67">cur</name><operator pos:start="49:68" pos:end="49:68">+</operator><name pos:start="49:69" pos:end="49:72">refs</name></expr></argument>, <argument pos:start="49:75" pos:end="49:75"><expr pos:start="49:75" pos:end="49:75"><name pos:start="49:75" pos:end="49:75">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:77"><expr pos:start="51:13" pos:end="51:76"><name pos:start="51:13" pos:end="51:17">delta</name>          <operator pos:start="51:28" pos:end="51:29">+=</operator> <call pos:start="51:31" pos:end="51:76"><name pos:start="51:31" pos:end="51:47"><name pos:start="51:31" pos:end="51:34">idet</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:47">filter_line</name></name><argument_list pos:start="51:48" pos:end="51:76">(<argument pos:start="51:49" pos:end="51:56"><expr pos:start="51:49" pos:end="51:56"><name pos:start="51:49" pos:end="51:51">cur</name><operator pos:start="51:52" pos:end="51:52">-</operator><name pos:start="51:53" pos:end="51:56">refs</name></expr></argument>,  <argument pos:start="51:60" pos:end="51:62"><expr pos:start="51:60" pos:end="51:62"><name pos:start="51:60" pos:end="51:62">cur</name></expr></argument>, <argument pos:start="51:65" pos:end="51:72"><expr pos:start="51:65" pos:end="51:72"><name pos:start="51:65" pos:end="51:67">cur</name><operator pos:start="51:68" pos:end="51:68">+</operator><name pos:start="51:69" pos:end="51:72">refs</name></expr></argument>, <argument pos:start="51:75" pos:end="51:75"><expr pos:start="51:75" pos:end="51:75"><name pos:start="51:75" pos:end="51:75">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="75:5"><if pos:start="59:5" pos:end="63:5">if      <condition pos:start="59:13" pos:end="59:68">(<expr pos:start="59:14" pos:end="59:67"><name pos:start="59:14" pos:end="59:21"><name pos:start="59:14" pos:end="59:18">alpha</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>]</index></name> <operator pos:start="59:23" pos:end="59:23">/</operator> <operator pos:start="59:25" pos:end="59:25">(</operator><name pos:start="59:26" pos:end="59:30">float</name><operator pos:start="59:31" pos:end="59:31">)</operator><name pos:start="59:32" pos:end="59:39"><name pos:start="59:32" pos:end="59:36">alpha</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">1</literal></expr>]</index></name> <operator pos:start="59:41" pos:end="59:41">&gt;</operator> <name pos:start="59:43" pos:end="59:67"><name pos:start="59:43" pos:end="59:46">idet</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:67">interlace_threshold</name></name></expr>)</condition><block pos:start="59:69" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:19">

        <expr_stmt pos:start="61:9" pos:end="61:19"><expr pos:start="61:9" pos:end="61:18"><name pos:start="61:9" pos:end="61:12">type</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:18">TFF</name></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="63:6" pos:end="67:5">else if<condition pos:start="63:13" pos:end="63:68">(<expr pos:start="63:14" pos:end="63:67"><name pos:start="63:14" pos:end="63:21"><name pos:start="63:14" pos:end="63:18">alpha</name><index pos:start="63:19" pos:end="63:21">[<expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>]</index></name> <operator pos:start="63:23" pos:end="63:23">/</operator> <operator pos:start="63:25" pos:end="63:25">(</operator><name pos:start="63:26" pos:end="63:30">float</name><operator pos:start="63:31" pos:end="63:31">)</operator><name pos:start="63:32" pos:end="63:39"><name pos:start="63:32" pos:end="63:36">alpha</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><literal type="number" pos:start="63:38" pos:end="63:38">0</literal></expr>]</index></name> <operator pos:start="63:41" pos:end="63:41">&gt;</operator> <name pos:start="63:43" pos:end="63:67"><name pos:start="63:43" pos:end="63:46">idet</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:67">interlace_threshold</name></name></expr>)</condition><block pos:start="63:69" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:19">

        <expr_stmt pos:start="65:9" pos:end="65:19"><expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:12">type</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <name pos:start="65:16" pos:end="65:18">BFF</name></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="67:6" pos:end="71:5">else if<condition pos:start="67:13" pos:end="67:70">(<expr pos:start="67:14" pos:end="67:69"><name pos:start="67:14" pos:end="67:21"><name pos:start="67:14" pos:end="67:18">alpha</name><index pos:start="67:19" pos:end="67:21">[<expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">1</literal></expr>]</index></name> <operator pos:start="67:23" pos:end="67:23">/</operator> <operator pos:start="67:25" pos:end="67:25">(</operator><name pos:start="67:26" pos:end="67:30">float</name><operator pos:start="67:31" pos:end="67:31">)</operator><name pos:start="67:32" pos:end="67:36">delta</name>    <operator pos:start="67:41" pos:end="67:41">&gt;</operator> <name pos:start="67:43" pos:end="67:69"><name pos:start="67:43" pos:end="67:46">idet</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:69">progressive_threshold</name></name></expr>)</condition><block pos:start="67:71" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:26">

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:12">type</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <name pos:start="69:16" pos:end="69:25">PROGRSSIVE</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="71:6" pos:end="75:5">else<block pos:start="71:10" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:28">

        <expr_stmt pos:start="73:9" pos:end="73:28"><expr pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:12">type</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <name pos:start="73:16" pos:end="73:27">UNDETERMINED</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:57"><expr pos:start="79:5" pos:end="79:56"><call pos:start="79:5" pos:end="79:56"><name pos:start="79:5" pos:end="79:11">memmove</name><argument_list pos:start="79:12" pos:end="79:56">(<argument pos:start="79:13" pos:end="79:27"><expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:16">idet</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:25">history</name></name><operator pos:start="79:26" pos:end="79:26">+</operator><literal type="number" pos:start="79:27" pos:end="79:27">1</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:42"><expr pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:42"><name pos:start="79:30" pos:end="79:33">idet</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:42">history</name></name></expr></argument>, <argument pos:start="79:45" pos:end="79:55"><expr pos:start="79:45" pos:end="79:55"><name pos:start="79:45" pos:end="79:53">HIST_SIZE</name><operator pos:start="79:54" pos:end="79:54">-</operator><literal type="number" pos:start="79:55" pos:end="79:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:20"><name pos:start="81:5" pos:end="81:8">idet</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:17">history</name><index pos:start="81:18" pos:end="81:20">[<expr pos:start="81:19" pos:end="81:19"><literal type="number" pos:start="81:19" pos:end="81:19">0</literal></expr>]</index></name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:27">type</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:29"><expr pos:start="83:5" pos:end="83:28"><name pos:start="83:5" pos:end="83:13">best_type</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:28">UNDETERMINED</name></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="109:5">for<control pos:start="85:8" pos:end="85:30">(<init pos:start="85:9" pos:end="85:12"><expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:9">i</name><operator pos:start="85:10" pos:end="85:10">=</operator><literal type="number" pos:start="85:11" pos:end="85:11">0</literal></expr>;</init> <condition pos:start="85:14" pos:end="85:25"><expr pos:start="85:14" pos:end="85:24"><name pos:start="85:14" pos:end="85:14">i</name><operator pos:start="85:15" pos:end="85:15">&lt;</operator><name pos:start="85:16" pos:end="85:24">HIST_SIZE</name></expr>;</condition> <incr pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:27">i</name><operator pos:start="85:28" pos:end="85:29">++</operator></expr></incr>)</control><block pos:start="85:31" pos:end="109:5">{<block_content pos:start="87:9" pos:end="107:9">

        <if_stmt pos:start="87:9" pos:end="107:9"><if pos:start="87:9" pos:end="107:9">if<condition pos:start="87:11" pos:end="87:44">(<expr pos:start="87:12" pos:end="87:43"><name pos:start="87:12" pos:end="87:27"><name pos:start="87:12" pos:end="87:15">idet</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:24">history</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><name pos:start="87:26" pos:end="87:26">i</name></expr>]</index></name> <operator pos:start="87:29" pos:end="87:30">!=</operator> <name pos:start="87:32" pos:end="87:43">UNDETERMINED</name></expr>)</condition><block pos:start="87:45" pos:end="107:9">{<block_content pos:start="89:13" pos:end="105:13">

            <if_stmt pos:start="89:13" pos:end="91:45"><if pos:start="89:13" pos:end="91:45">if<condition pos:start="89:15" pos:end="89:41">(<expr pos:start="89:16" pos:end="89:40"><name pos:start="89:16" pos:end="89:24">best_type</name> <operator pos:start="89:26" pos:end="89:27">==</operator> <name pos:start="89:29" pos:end="89:40">UNDETERMINED</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:45"><block_content pos:start="91:17" pos:end="91:45">

                <expr_stmt pos:start="91:17" pos:end="91:45"><expr pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:25">best_type</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <name pos:start="91:29" pos:end="91:44"><name pos:start="91:29" pos:end="91:32">idet</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:41">history</name><index pos:start="91:42" pos:end="91:44">[<expr pos:start="91:43" pos:end="91:43"><name pos:start="91:43" pos:end="91:43">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="95:13" pos:end="105:13"><if pos:start="95:13" pos:end="99:13">if<condition pos:start="95:15" pos:end="95:45">(<expr pos:start="95:16" pos:end="95:44"><name pos:start="95:16" pos:end="95:31"><name pos:start="95:16" pos:end="95:19">idet</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:28">history</name><index pos:start="95:29" pos:end="95:31">[<expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">i</name></expr>]</index></name> <operator pos:start="95:33" pos:end="95:34">==</operator> <name pos:start="95:36" pos:end="95:44">best_type</name></expr>)</condition> <block pos:start="95:47" pos:end="99:13">{<block_content pos:start="97:17" pos:end="97:24">

                <expr_stmt pos:start="97:17" pos:end="97:24"><expr pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:21">match</name><operator pos:start="97:22" pos:end="97:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="99:14" pos:end="105:13">else<block pos:start="99:18" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:22">

                <expr_stmt pos:start="101:17" pos:end="101:24"><expr pos:start="101:17" pos:end="101:23"><name pos:start="101:17" pos:end="101:21">match</name><operator pos:start="101:22" pos:end="101:22">=</operator><literal type="number" pos:start="101:23" pos:end="101:23">0</literal></expr>;</expr_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="115:5">if<condition pos:start="111:7" pos:end="111:39">(<expr pos:start="111:8" pos:end="111:38"><name pos:start="111:8" pos:end="111:22"><name pos:start="111:8" pos:end="111:11">idet</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:22">last_type</name></name> <operator pos:start="111:24" pos:end="111:25">==</operator> <name pos:start="111:27" pos:end="111:38">UNDETERMINED</name></expr>)</condition><block pos:start="111:40" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:48">

        <if_stmt pos:start="113:9" pos:end="113:48"><if pos:start="113:9" pos:end="113:48">if<condition pos:start="113:11" pos:end="113:19">(<expr pos:start="113:12" pos:end="113:16"><name pos:start="113:12" pos:end="113:16">match</name></expr>  )</condition><block type="pseudo" pos:start="113:21" pos:end="113:48"><block_content pos:start="113:21" pos:end="113:48"> <expr_stmt pos:start="113:21" pos:end="113:48"><expr pos:start="113:21" pos:end="113:47"><name pos:start="113:21" pos:end="113:35"><name pos:start="113:21" pos:end="113:24">idet</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:35">last_type</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:47">best_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if><else pos:start="115:6" pos:end="119:5">else<block pos:start="115:10" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:48">

        <if_stmt pos:start="117:9" pos:end="117:48"><if pos:start="117:9" pos:end="117:48">if<condition pos:start="117:11" pos:end="117:19">(<expr pos:start="117:12" pos:end="117:18"><name pos:start="117:12" pos:end="117:16">match</name><operator pos:start="117:17" pos:end="117:17">&gt;</operator><literal type="number" pos:start="117:18" pos:end="117:18">2</literal></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:48"><block_content pos:start="117:21" pos:end="117:48"> <expr_stmt pos:start="117:21" pos:end="117:48"><expr pos:start="117:21" pos:end="117:47"><name pos:start="117:21" pos:end="117:35"><name pos:start="117:21" pos:end="117:24">idet</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:35">last_type</name></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:47">best_type</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="123:5" pos:end="139:5"><if pos:start="123:5" pos:end="129:5">if      <condition pos:start="123:13" pos:end="123:36">(<expr pos:start="123:14" pos:end="123:35"><name pos:start="123:14" pos:end="123:28"><name pos:start="123:14" pos:end="123:17">idet</name><operator pos:start="123:18" pos:end="123:19">-&gt;</operator><name pos:start="123:20" pos:end="123:28">last_type</name></name> <operator pos:start="123:30" pos:end="123:31">==</operator> <name pos:start="123:33" pos:end="123:35">TFF</name></expr>)</condition><block pos:start="123:37" pos:end="129:5">{<block_content pos:start="125:9" pos:end="127:41">

        <expr_stmt pos:start="125:9" pos:end="125:46"><expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:41"><name pos:start="125:9" pos:end="125:12">idet</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:17">cur</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:24">video</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:41">top_field_first</name></name> <operator pos:start="125:43" pos:end="125:43">=</operator> <literal type="number" pos:start="125:45" pos:end="125:45">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:36"><name pos:start="127:9" pos:end="127:12">idet</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:17">cur</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:24">video</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:36">interlaced</name></name> <operator pos:start="127:38" pos:end="127:38">=</operator> <literal type="number" pos:start="127:40" pos:end="127:40">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="129:6" pos:end="135:5">else if<condition pos:start="129:13" pos:end="129:36">(<expr pos:start="129:14" pos:end="129:35"><name pos:start="129:14" pos:end="129:28"><name pos:start="129:14" pos:end="129:17">idet</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:28">last_type</name></name> <operator pos:start="129:30" pos:end="129:31">==</operator> <name pos:start="129:33" pos:end="129:35">BFF</name></expr>)</condition><block pos:start="129:37" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:41">

        <expr_stmt pos:start="131:9" pos:end="131:46"><expr pos:start="131:9" pos:end="131:45"><name pos:start="131:9" pos:end="131:41"><name pos:start="131:9" pos:end="131:12">idet</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:17">cur</name><operator pos:start="131:18" pos:end="131:19">-&gt;</operator><name pos:start="131:20" pos:end="131:24">video</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:41">top_field_first</name></name> <operator pos:start="131:43" pos:end="131:43">=</operator> <literal type="number" pos:start="131:45" pos:end="131:45">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:41"><expr pos:start="133:9" pos:end="133:40"><name pos:start="133:9" pos:end="133:36"><name pos:start="133:9" pos:end="133:12">idet</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:17">cur</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:24">video</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:36">interlaced</name></name> <operator pos:start="133:38" pos:end="133:38">=</operator> <literal type="number" pos:start="133:40" pos:end="133:40">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="135:6" pos:end="139:5">else if<condition pos:start="135:13" pos:end="135:43">(<expr pos:start="135:14" pos:end="135:42"><name pos:start="135:14" pos:end="135:28"><name pos:start="135:14" pos:end="135:17">idet</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:28">last_type</name></name> <operator pos:start="135:30" pos:end="135:31">==</operator> <name pos:start="135:33" pos:end="135:42">PROGRSSIVE</name></expr>)</condition><block pos:start="135:44" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:41">

        <expr_stmt pos:start="137:9" pos:end="137:41"><expr pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:36"><name pos:start="137:9" pos:end="137:12">idet</name><operator pos:start="137:13" pos:end="137:14">-&gt;</operator><name pos:start="137:15" pos:end="137:17">cur</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:24">video</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:36">interlaced</name></name> <operator pos:start="137:38" pos:end="137:38">=</operator> <literal type="number" pos:start="137:40" pos:end="137:40">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:39"><expr pos:start="143:5" pos:end="143:38"><name pos:start="143:5" pos:end="143:35"><name pos:start="143:5" pos:end="143:8">idet</name><operator pos:start="143:9" pos:end="143:10">-&gt;</operator><name pos:start="143:11" pos:end="143:17">prestat</name> <index pos:start="143:19" pos:end="143:35">[           <expr pos:start="143:31" pos:end="143:34"><name pos:start="143:31" pos:end="143:34">type</name></expr>]</index></name> <operator pos:start="143:37" pos:end="143:38">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:39"><expr pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:35"><name pos:start="145:5" pos:end="145:8">idet</name><operator pos:start="145:9" pos:end="145:10">-&gt;</operator><name pos:start="145:11" pos:end="145:18">poststat</name><index pos:start="145:19" pos:end="145:35">[<expr pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:23">idet</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:34">last_type</name></name></expr>]</index></name> <operator pos:start="145:37" pos:end="145:38">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:110"><expr pos:start="147:5" pos:end="147:109"><call pos:start="147:5" pos:end="147:109"><name pos:start="147:5" pos:end="147:10">av_log</name><argument_list pos:start="147:11" pos:end="147:109">(<argument pos:start="147:12" pos:end="147:14"><expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">ctx</name></expr></argument>, <argument pos:start="147:17" pos:end="147:28"><expr pos:start="147:17" pos:end="147:28"><name pos:start="147:17" pos:end="147:28">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="147:31" pos:end="147:65"><expr pos:start="147:31" pos:end="147:65"><literal type="string" pos:start="147:31" pos:end="147:65">"Single frame:%s, Multi frame:%s\n"</literal></expr></argument>, <argument pos:start="147:68" pos:end="147:81"><expr pos:start="147:68" pos:end="147:81"><call pos:start="147:68" pos:end="147:81"><name pos:start="147:68" pos:end="147:75">type2str</name><argument_list pos:start="147:76" pos:end="147:81">(<argument pos:start="147:77" pos:end="147:80"><expr pos:start="147:77" pos:end="147:80"><name pos:start="147:77" pos:end="147:80">type</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:84" pos:end="147:108"><expr pos:start="147:84" pos:end="147:108"><call pos:start="147:84" pos:end="147:108"><name pos:start="147:84" pos:end="147:91">type2str</name><argument_list pos:start="147:92" pos:end="147:108">(<argument pos:start="147:93" pos:end="147:107"><expr pos:start="147:93" pos:end="147:107"><name pos:start="147:93" pos:end="147:107"><name pos:start="147:93" pos:end="147:96">idet</name><operator pos:start="147:97" pos:end="147:98">-&gt;</operator><name pos:start="147:99" pos:end="147:107">last_type</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
