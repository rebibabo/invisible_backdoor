<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/694.c" pos:tabs="8"><function pos:start="1:1" pos:end="309:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">amf_parse_object</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:56">AVStream</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">astream</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:36">AVStream</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:45">vstream</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:57">char</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">key</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:35">int64_t</name></type> <name pos:start="5:37" pos:end="5:43">max_pos</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:54"><decl pos:start="5:46" pos:end="5:54"><type pos:start="5:46" pos:end="5:54"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:54">depth</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="309:1">{<block_content pos:start="9:5" pos:end="307:13">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">acodec</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:35">vcodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">FLVContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">flv</name> <init pos:start="11:21" pos:end="11:34">= <expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">ioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">AMFDataType</name></type> <name pos:start="15:17" pos:end="15:24">amf_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:16">str_val</name><index pos:start="17:17" pos:end="17:21">[<expr pos:start="17:18" pos:end="17:20"><literal type="number" pos:start="17:18" pos:end="17:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:18">num_val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">num_val</name>  <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">ioc</name>      <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:20">pb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:12">amf_type</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:22">avio_r8</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="31:5" pos:end="149:5">switch <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">amf_type</name></expr>)</condition> <block pos:start="31:23" pos:end="149:5">{<block_content pos:start="33:5" pos:end="147:18">

    <case pos:start="33:5" pos:end="33:30">case <expr pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:29">AMF_DATA_TYPE_NUMBER</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:15">num_val</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:47"><name pos:start="35:19" pos:end="35:31">av_int2double</name><argument_list pos:start="35:32" pos:end="35:47">(<argument pos:start="35:33" pos:end="35:46"><expr pos:start="35:33" pos:end="35:46"><call pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:41">avio_rb64</name><argument_list pos:start="35:42" pos:end="35:46">(<argument pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><name pos:start="35:43" pos:end="35:45">ioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:28">case <expr pos:start="39:10" pos:end="39:27"><name pos:start="39:10" pos:end="39:27">AMF_DATA_TYPE_BOOL</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:15">num_val</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:25">avio_r8</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:30">case <expr pos:start="45:10" pos:end="45:29"><name pos:start="45:10" pos:end="45:29">AMF_DATA_TYPE_STRING</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:62">(<expr pos:start="47:13" pos:end="47:61"><call pos:start="47:13" pos:end="47:57"><name pos:start="47:13" pos:end="47:26">amf_get_string</name><argument_list pos:start="47:27" pos:end="47:57">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">ioc</name></expr></argument>, <argument pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:39">str_val</name></expr></argument>, <argument pos:start="47:42" pos:end="47:56"><expr pos:start="47:42" pos:end="47:56"><sizeof pos:start="47:42" pos:end="47:56">sizeof<argument_list pos:start="47:48" pos:end="47:56">(<argument pos:start="47:49" pos:end="47:55"><expr pos:start="47:49" pos:end="47:55"><name pos:start="47:49" pos:end="47:55">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="47:59" pos:end="47:59">&lt;</operator> <literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:30">case <expr pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:29">AMF_DATA_TYPE_OBJECT</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="65:75"><if pos:start="55:9" pos:end="65:75">if <condition pos:start="55:12" pos:end="59:54">(<expr pos:start="55:13" pos:end="59:53"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:20">vstream</name> <operator pos:start="55:22" pos:end="55:23">||</operator> <name pos:start="55:25" pos:end="55:31">astream</name><operator pos:start="55:32" pos:end="55:32">)</operator> <operator pos:start="55:34" pos:end="55:35">&amp;&amp;</operator> <name pos:start="55:37" pos:end="55:39">key</name> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator>

            <name pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:15">ioc</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:25">seekable</name></name> <operator pos:start="57:27" pos:end="57:28">&amp;&amp;</operator>

            <operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:39"><name pos:start="59:14" pos:end="59:19">strcmp</name><argument_list pos:start="59:20" pos:end="59:39">(<argument pos:start="59:21" pos:end="59:33"><expr pos:start="59:21" pos:end="59:33"><name pos:start="59:21" pos:end="59:33">KEYFRAMES_TAG</name></expr></argument>, <argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:38">key</name></expr></argument>)</argument_list></call> <operator pos:start="59:41" pos:end="59:42">&amp;&amp;</operator> <name pos:start="59:44" pos:end="59:48">depth</name> <operator pos:start="59:50" pos:end="59:51">==</operator> <literal type="number" pos:start="59:53" pos:end="59:53">1</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="65:75"><block_content pos:start="61:13" pos:end="65:75">

            <if_stmt pos:start="61:13" pos:end="65:75"><if pos:start="61:13" pos:end="65:75">if <condition pos:start="61:16" pos:end="63:51">(<expr pos:start="61:17" pos:end="63:50"><call pos:start="61:17" pos:end="63:46"><name pos:start="61:17" pos:end="61:37">parse_keyframes_index</name><argument_list pos:start="61:38" pos:end="63:46">(<argument pos:start="61:39" pos:end="61:39"><expr pos:start="61:39" pos:end="61:39"><name pos:start="61:39" pos:end="61:39">s</name></expr></argument>, <argument pos:start="61:42" pos:end="61:44"><expr pos:start="61:42" pos:end="61:44"><name pos:start="61:42" pos:end="61:44">ioc</name></expr></argument>, <argument pos:start="61:47" pos:end="61:73"><expr pos:start="61:47" pos:end="61:73"><ternary pos:start="61:47" pos:end="61:73"><condition pos:start="61:47" pos:end="61:55"><expr pos:start="61:47" pos:end="61:53"><name pos:start="61:47" pos:end="61:53">vstream</name></expr> ?</condition><then pos:start="61:57" pos:end="61:63"> <expr pos:start="61:57" pos:end="61:63"><name pos:start="61:57" pos:end="61:63">vstream</name></expr> </then><else pos:start="61:65" pos:end="61:73">: <expr pos:start="61:67" pos:end="61:73"><name pos:start="61:67" pos:end="61:73">astream</name></expr></else></ternary></expr></argument>,

                                      <argument pos:start="63:39" pos:end="63:45"><expr pos:start="63:39" pos:end="63:45"><name pos:start="63:39" pos:end="63:45">max_pos</name></expr></argument>)</argument_list></call> <operator pos:start="63:48" pos:end="63:48">&lt;</operator> <literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:75"><block_content pos:start="65:17" pos:end="65:75">

                <expr_stmt pos:start="65:17" pos:end="65:75"><expr pos:start="65:17" pos:end="65:74"><call pos:start="65:17" pos:end="65:74"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:74">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>, <argument pos:start="65:27" pos:end="65:38"><expr pos:start="65:27" pos:end="65:38"><name pos:start="65:27" pos:end="65:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:41" pos:end="65:73"><expr pos:start="65:41" pos:end="65:73"><literal type="string" pos:start="65:41" pos:end="65:73">"Keyframe index parsing failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



        <while pos:start="69:9" pos:end="77:26">while <condition pos:start="69:15" pos:end="71:65">(<expr pos:start="69:16" pos:end="71:64"><call pos:start="69:16" pos:end="69:29"><name pos:start="69:16" pos:end="69:24">avio_tell</name><argument_list pos:start="69:25" pos:end="69:29">(<argument pos:start="69:26" pos:end="69:28"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:28">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="69:31" pos:end="69:31">&lt;</operator> <name pos:start="69:33" pos:end="69:39">max_pos</name> <operator pos:start="69:41" pos:end="69:41">-</operator> <literal type="number" pos:start="69:43" pos:end="69:43">2</literal> <operator pos:start="69:45" pos:end="69:46">&amp;&amp;</operator>

               <call pos:start="71:16" pos:end="71:60"><name pos:start="71:16" pos:end="71:29">amf_get_string</name><argument_list pos:start="71:30" pos:end="71:60">(<argument pos:start="71:31" pos:end="71:33"><expr pos:start="71:31" pos:end="71:33"><name pos:start="71:31" pos:end="71:33">ioc</name></expr></argument>, <argument pos:start="71:36" pos:end="71:42"><expr pos:start="71:36" pos:end="71:42"><name pos:start="71:36" pos:end="71:42">str_val</name></expr></argument>, <argument pos:start="71:45" pos:end="71:59"><expr pos:start="71:45" pos:end="71:59"><sizeof pos:start="71:45" pos:end="71:59">sizeof<argument_list pos:start="71:51" pos:end="71:59">(<argument pos:start="71:52" pos:end="71:58"><expr pos:start="71:52" pos:end="71:58"><name pos:start="71:52" pos:end="71:58">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="71:62" pos:end="71:62">&gt;</operator> <literal type="number" pos:start="71:64" pos:end="71:64">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="77:26"><block_content pos:start="73:13" pos:end="77:26">

            <if_stmt pos:start="73:13" pos:end="77:26"><if pos:start="73:13" pos:end="77:26">if <condition pos:start="73:16" pos:end="75:48">(<expr pos:start="73:17" pos:end="75:47"><call pos:start="73:17" pos:end="75:43"><name pos:start="73:17" pos:end="73:32">amf_parse_object</name><argument_list pos:start="73:33" pos:end="75:43">(<argument pos:start="73:34" pos:end="73:34"><expr pos:start="73:34" pos:end="73:34"><name pos:start="73:34" pos:end="73:34">s</name></expr></argument>, <argument pos:start="73:37" pos:end="73:43"><expr pos:start="73:37" pos:end="73:43"><name pos:start="73:37" pos:end="73:43">astream</name></expr></argument>, <argument pos:start="73:46" pos:end="73:52"><expr pos:start="73:46" pos:end="73:52"><name pos:start="73:46" pos:end="73:52">vstream</name></expr></argument>, <argument pos:start="73:55" pos:end="73:61"><expr pos:start="73:55" pos:end="73:61"><name pos:start="73:55" pos:end="73:61">str_val</name></expr></argument>, <argument pos:start="73:64" pos:end="73:70"><expr pos:start="73:64" pos:end="73:70"><name pos:start="73:64" pos:end="73:70">max_pos</name></expr></argument>,

                                 <argument pos:start="75:34" pos:end="75:42"><expr pos:start="75:34" pos:end="75:42"><name pos:start="75:34" pos:end="75:38">depth</name> <operator pos:start="75:40" pos:end="75:40">+</operator> <literal type="number" pos:start="75:42" pos:end="75:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="75:45" pos:end="75:45">&lt;</operator> <literal type="number" pos:start="75:47" pos:end="75:47">0</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:26"><block_content pos:start="77:17" pos:end="77:26">

                <return pos:start="77:17" pos:end="77:26">return <expr pos:start="77:24" pos:end="77:25"><operator pos:start="77:24" pos:end="77:24">-</operator><literal type="number" pos:start="77:25" pos:end="77:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></while>     <comment type="line" pos:start="77:32" pos:end="77:64">// if we couldn't skip, bomb out.</comment>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:46">(<expr pos:start="79:13" pos:end="79:45"><call pos:start="79:13" pos:end="79:24"><name pos:start="79:13" pos:end="79:19">avio_r8</name><argument_list pos:start="79:20" pos:end="79:24">(<argument pos:start="79:21" pos:end="79:23"><expr pos:start="79:21" pos:end="79:23"><name pos:start="79:21" pos:end="79:23">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="79:26" pos:end="79:27">!=</operator> <name pos:start="79:29" pos:end="79:45">AMF_END_OF_OBJECT</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:28">case <expr pos:start="85:10" pos:end="85:27"><name pos:start="85:10" pos:end="85:27">AMF_DATA_TYPE_NULL</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:33">case <expr pos:start="87:10" pos:end="87:32"><name pos:start="87:10" pos:end="87:32">AMF_DATA_TYPE_UNDEFINED</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:35">case <expr pos:start="89:10" pos:end="89:34"><name pos:start="89:10" pos:end="89:34">AMF_DATA_TYPE_UNSUPPORTED</name></expr>:</case>

        <break pos:start="91:9" pos:end="91:14">break;</break>     <comment type="line" pos:start="91:20" pos:end="91:55">// these take up no additional space</comment>

    <case pos:start="93:5" pos:end="93:34">case <expr pos:start="93:10" pos:end="93:33"><name pos:start="93:10" pos:end="93:33">AMF_DATA_TYPE_MIXEDARRAY</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><call pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:17">avio_skip</name><argument_list pos:start="95:18" pos:end="95:25">(<argument pos:start="95:19" pos:end="95:21"><expr pos:start="95:19" pos:end="95:21"><name pos:start="95:19" pos:end="95:21">ioc</name></expr></argument>, <argument pos:start="95:24" pos:end="95:24"><expr pos:start="95:24" pos:end="95:24"><literal type="number" pos:start="95:24" pos:end="95:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="95:32" pos:end="95:61">// skip 32-bit max array index</comment>

        <while pos:start="97:9" pos:end="109:26">while <condition pos:start="97:15" pos:end="99:65">(<expr pos:start="97:16" pos:end="99:64"><call pos:start="97:16" pos:end="97:29"><name pos:start="97:16" pos:end="97:24">avio_tell</name><argument_list pos:start="97:25" pos:end="97:29">(<argument pos:start="97:26" pos:end="97:28"><expr pos:start="97:26" pos:end="97:28"><name pos:start="97:26" pos:end="97:28">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="97:31" pos:end="97:31">&lt;</operator> <name pos:start="97:33" pos:end="97:39">max_pos</name> <operator pos:start="97:41" pos:end="97:41">-</operator> <literal type="number" pos:start="97:43" pos:end="97:43">2</literal> <operator pos:start="97:45" pos:end="97:46">&amp;&amp;</operator>

               <call pos:start="99:16" pos:end="99:60"><name pos:start="99:16" pos:end="99:29">amf_get_string</name><argument_list pos:start="99:30" pos:end="99:60">(<argument pos:start="99:31" pos:end="99:33"><expr pos:start="99:31" pos:end="99:33"><name pos:start="99:31" pos:end="99:33">ioc</name></expr></argument>, <argument pos:start="99:36" pos:end="99:42"><expr pos:start="99:36" pos:end="99:42"><name pos:start="99:36" pos:end="99:42">str_val</name></expr></argument>, <argument pos:start="99:45" pos:end="99:59"><expr pos:start="99:45" pos:end="99:59"><sizeof pos:start="99:45" pos:end="99:59">sizeof<argument_list pos:start="99:51" pos:end="99:59">(<argument pos:start="99:52" pos:end="99:58"><expr pos:start="99:52" pos:end="99:58"><name pos:start="99:52" pos:end="99:58">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="99:62" pos:end="99:62">&gt;</operator> <literal type="number" pos:start="99:64" pos:end="99:64">0</literal></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="109:26"><block_content pos:start="105:13" pos:end="109:26">

            <comment type="line" pos:start="101:13" pos:end="101:68">// this is the only case in which we would want a nested</comment>

            <comment type="line" pos:start="103:13" pos:end="103:48">// parse to not skip over the object</comment>

            <if_stmt pos:start="105:13" pos:end="109:26"><if pos:start="105:13" pos:end="109:26">if <condition pos:start="105:16" pos:end="107:48">(<expr pos:start="105:17" pos:end="107:47"><call pos:start="105:17" pos:end="107:43"><name pos:start="105:17" pos:end="105:32">amf_parse_object</name><argument_list pos:start="105:33" pos:end="107:43">(<argument pos:start="105:34" pos:end="105:34"><expr pos:start="105:34" pos:end="105:34"><name pos:start="105:34" pos:end="105:34">s</name></expr></argument>, <argument pos:start="105:37" pos:end="105:43"><expr pos:start="105:37" pos:end="105:43"><name pos:start="105:37" pos:end="105:43">astream</name></expr></argument>, <argument pos:start="105:46" pos:end="105:52"><expr pos:start="105:46" pos:end="105:52"><name pos:start="105:46" pos:end="105:52">vstream</name></expr></argument>, <argument pos:start="105:55" pos:end="105:61"><expr pos:start="105:55" pos:end="105:61"><name pos:start="105:55" pos:end="105:61">str_val</name></expr></argument>, <argument pos:start="105:64" pos:end="105:70"><expr pos:start="105:64" pos:end="105:70"><name pos:start="105:64" pos:end="105:70">max_pos</name></expr></argument>,

                                 <argument pos:start="107:34" pos:end="107:42"><expr pos:start="107:34" pos:end="107:42"><name pos:start="107:34" pos:end="107:38">depth</name> <operator pos:start="107:40" pos:end="107:40">+</operator> <literal type="number" pos:start="107:42" pos:end="107:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="107:45" pos:end="107:45">&lt;</operator> <literal type="number" pos:start="107:47" pos:end="107:47">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:26"><block_content pos:start="109:17" pos:end="109:26">

                <return pos:start="109:17" pos:end="109:26">return <expr pos:start="109:24" pos:end="109:25"><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></while>

        <if_stmt pos:start="111:9" pos:end="113:22"><if pos:start="111:9" pos:end="113:22">if <condition pos:start="111:12" pos:end="111:46">(<expr pos:start="111:13" pos:end="111:45"><call pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:19">avio_r8</name><argument_list pos:start="111:20" pos:end="111:24">(<argument pos:start="111:21" pos:end="111:23"><expr pos:start="111:21" pos:end="111:23"><name pos:start="111:21" pos:end="111:23">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="111:26" pos:end="111:27">!=</operator> <name pos:start="111:29" pos:end="111:45">AMF_END_OF_OBJECT</name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:22"><block_content pos:start="113:13" pos:end="113:22">

            <return pos:start="113:13" pos:end="113:22">return <expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">-</operator><literal type="number" pos:start="113:21" pos:end="113:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:29">case <expr pos:start="117:10" pos:end="117:28"><name pos:start="117:10" pos:end="117:28">AMF_DATA_TYPE_ARRAY</name></expr>:</case>

    <block pos:start="119:5" pos:end="135:5">{<block_content pos:start="121:9" pos:end="133:26">

        <decl_stmt pos:start="121:9" pos:end="121:33"><decl pos:start="121:9" pos:end="121:29"><type pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:16">unsigned</name> <name pos:start="121:18" pos:end="121:20">int</name></type> <name pos:start="121:22" pos:end="121:29">arraylen</name></decl>, <decl pos:start="121:32" pos:end="121:32"><type ref="prev" pos:start="121:9" pos:end="121:20"/><name pos:start="121:32" pos:end="121:32">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:34"><expr pos:start="125:9" pos:end="125:33"><name pos:start="125:9" pos:end="125:16">arraylen</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <call pos:start="125:20" pos:end="125:33"><name pos:start="125:20" pos:end="125:28">avio_rb32</name><argument_list pos:start="125:29" pos:end="125:33">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="127:9" pos:end="133:26">for <control pos:start="127:13" pos:end="127:70">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:65"><expr pos:start="127:21" pos:end="127:64"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:32">arraylen</name> <operator pos:start="127:34" pos:end="127:35">&amp;&amp;</operator> <call pos:start="127:37" pos:end="127:50"><name pos:start="127:37" pos:end="127:45">avio_tell</name><argument_list pos:start="127:46" pos:end="127:50">(<argument pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:49">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="127:52" pos:end="127:52">&lt;</operator> <name pos:start="127:54" pos:end="127:60">max_pos</name> <operator pos:start="127:62" pos:end="127:62">-</operator> <literal type="number" pos:start="127:64" pos:end="127:64">1</literal></expr>;</condition> <incr pos:start="127:67" pos:end="127:69"><expr pos:start="127:67" pos:end="127:69"><name pos:start="127:67" pos:end="127:67">i</name><operator pos:start="127:68" pos:end="127:69">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="133:26"><block_content pos:start="129:13" pos:end="133:26">

            <if_stmt pos:start="129:13" pos:end="133:26"><if pos:start="129:13" pos:end="133:26">if <condition pos:start="129:16" pos:end="131:48">(<expr pos:start="129:17" pos:end="131:47"><call pos:start="129:17" pos:end="131:43"><name pos:start="129:17" pos:end="129:32">amf_parse_object</name><argument_list pos:start="129:33" pos:end="131:43">(<argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">s</name></expr></argument>, <argument pos:start="129:37" pos:end="129:40"><expr pos:start="129:37" pos:end="129:40"><name pos:start="129:37" pos:end="129:40">NULL</name></expr></argument>, <argument pos:start="129:43" pos:end="129:46"><expr pos:start="129:43" pos:end="129:46"><name pos:start="129:43" pos:end="129:46">NULL</name></expr></argument>, <argument pos:start="129:49" pos:end="129:52"><expr pos:start="129:49" pos:end="129:52"><name pos:start="129:49" pos:end="129:52">NULL</name></expr></argument>, <argument pos:start="129:55" pos:end="129:61"><expr pos:start="129:55" pos:end="129:61"><name pos:start="129:55" pos:end="129:61">max_pos</name></expr></argument>,

                                 <argument pos:start="131:34" pos:end="131:42"><expr pos:start="131:34" pos:end="131:42"><name pos:start="131:34" pos:end="131:38">depth</name> <operator pos:start="131:40" pos:end="131:40">+</operator> <literal type="number" pos:start="131:42" pos:end="131:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:45" pos:end="131:45">&lt;</operator> <literal type="number" pos:start="131:47" pos:end="131:47">0</literal></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:26"><block_content pos:start="133:17" pos:end="133:26">

                <return pos:start="133:17" pos:end="133:26">return <expr pos:start="133:24" pos:end="133:25"><operator pos:start="133:24" pos:end="133:24">-</operator><literal type="number" pos:start="133:25" pos:end="133:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>      <comment type="line" pos:start="133:33" pos:end="133:65">// if we couldn't skip, bomb out.</comment>

    </block_content>}</block>

    <break pos:start="137:5" pos:end="137:10">break;</break>

    <case pos:start="139:5" pos:end="139:28">case <expr pos:start="139:10" pos:end="139:27"><name pos:start="139:10" pos:end="139:27">AMF_DATA_TYPE_DATE</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><call pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:17">avio_skip</name><argument_list pos:start="141:18" pos:end="141:29">(<argument pos:start="141:19" pos:end="141:21"><expr pos:start="141:19" pos:end="141:21"><name pos:start="141:19" pos:end="141:21">ioc</name></expr></argument>, <argument pos:start="141:24" pos:end="141:28"><expr pos:start="141:24" pos:end="141:28"><literal type="number" pos:start="141:24" pos:end="141:26">8</literal> <operator pos:start="141:26" pos:end="141:26">+</operator> <literal type="number" pos:start="141:28" pos:end="141:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="141:33" pos:end="141:76">// timestamp (double) and UTC offset (int16)</comment>

        <break pos:start="143:9" pos:end="143:14">break;</break>

    <default pos:start="145:5" pos:end="145:12">default:</default>                    <comment type="line" pos:start="145:33" pos:end="145:69">// unsupported type, we couldn't skip</comment>

        <return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="153:5" pos:end="303:5"><if pos:start="153:5" pos:end="303:5">if <condition pos:start="153:8" pos:end="153:12">(<expr pos:start="153:9" pos:end="153:11"><name pos:start="153:9" pos:end="153:11">key</name></expr>)</condition> <block pos:start="153:14" pos:end="303:5">{<block_content pos:start="157:9" pos:end="301:55">

        <comment type="line" pos:start="155:9" pos:end="155:68">// stream info doesn't live any deeper than the first object</comment>

        <if_stmt pos:start="157:9" pos:end="239:9"><if pos:start="157:9" pos:end="239:9">if <condition pos:start="157:12" pos:end="157:23">(<expr pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:17">depth</name> <operator pos:start="157:19" pos:end="157:20">==</operator> <literal type="number" pos:start="157:22" pos:end="157:22">1</literal></expr>)</condition> <block pos:start="157:25" pos:end="239:9">{<block_content pos:start="159:13" pos:end="237:13">

            <expr_stmt pos:start="159:13" pos:end="159:53"><expr pos:start="159:13" pos:end="159:52"><name pos:start="159:13" pos:end="159:18">acodec</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <ternary pos:start="159:22" pos:end="159:52"><condition pos:start="159:22" pos:end="159:30"><expr pos:start="159:22" pos:end="159:28"><name pos:start="159:22" pos:end="159:28">astream</name></expr> ?</condition><then pos:start="159:32" pos:end="159:45"> <expr pos:start="159:32" pos:end="159:45"><name pos:start="159:32" pos:end="159:45"><name pos:start="159:32" pos:end="159:38">astream</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:45">codec</name></name></expr> </then><else pos:start="159:47" pos:end="159:52">: <expr pos:start="159:49" pos:end="159:52"><name pos:start="159:49" pos:end="159:52">NULL</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:53"><expr pos:start="161:13" pos:end="161:52"><name pos:start="161:13" pos:end="161:18">vcodec</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <ternary pos:start="161:22" pos:end="161:52"><condition pos:start="161:22" pos:end="161:30"><expr pos:start="161:22" pos:end="161:28"><name pos:start="161:22" pos:end="161:28">vstream</name></expr> ?</condition><then pos:start="161:32" pos:end="161:45"> <expr pos:start="161:32" pos:end="161:45"><name pos:start="161:32" pos:end="161:45"><name pos:start="161:32" pos:end="161:38">vstream</name><operator pos:start="161:39" pos:end="161:40">-&gt;</operator><name pos:start="161:41" pos:end="161:45">codec</name></name></expr> </then><else pos:start="161:47" pos:end="161:52">: <expr pos:start="161:49" pos:end="161:52"><name pos:start="161:49" pos:end="161:52">NULL</name></expr></else></ternary></expr>;</expr_stmt>



            <if_stmt pos:start="165:13" pos:end="237:13"><if pos:start="165:13" pos:end="237:13">if <condition pos:start="165:16" pos:end="167:47">(<expr pos:start="165:17" pos:end="167:46"><name pos:start="165:17" pos:end="165:24">amf_type</name> <operator pos:start="165:26" pos:end="165:27">==</operator> <name pos:start="165:29" pos:end="165:48">AMF_DATA_TYPE_NUMBER</name> <operator pos:start="165:50" pos:end="165:51">||</operator>

                <name pos:start="167:17" pos:end="167:24">amf_type</name> <operator pos:start="167:26" pos:end="167:27">==</operator> <name pos:start="167:29" pos:end="167:46">AMF_DATA_TYPE_BOOL</name></expr>)</condition> <block pos:start="167:49" pos:end="237:13">{<block_content pos:start="169:17" pos:end="235:17">

                <if_stmt pos:start="169:17" pos:end="235:17"><if pos:start="169:17" pos:end="171:57">if <condition pos:start="169:20" pos:end="169:45">(<expr pos:start="169:21" pos:end="169:44"><operator pos:start="169:21" pos:end="169:21">!</operator><call pos:start="169:22" pos:end="169:44"><name pos:start="169:22" pos:end="169:27">strcmp</name><argument_list pos:start="169:28" pos:end="169:44">(<argument pos:start="169:29" pos:end="169:31"><expr pos:start="169:29" pos:end="169:31"><name pos:start="169:29" pos:end="169:31">key</name></expr></argument>, <argument pos:start="169:34" pos:end="169:43"><expr pos:start="169:34" pos:end="169:43"><literal type="string" pos:start="169:34" pos:end="169:43">"duration"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:57"><block_content pos:start="171:21" pos:end="171:57">

                    <expr_stmt pos:start="171:21" pos:end="171:57"><expr pos:start="171:21" pos:end="171:56"><name pos:start="171:21" pos:end="171:31"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:31">duration</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <name pos:start="171:35" pos:end="171:41">num_val</name> <operator pos:start="171:43" pos:end="171:43">*</operator> <name pos:start="171:45" pos:end="171:56">AV_TIME_BASE</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="173:17" pos:end="177:56">else if <condition pos:start="173:25" pos:end="175:54">(<expr pos:start="173:26" pos:end="175:53"><operator pos:start="173:26" pos:end="173:26">!</operator><call pos:start="173:27" pos:end="173:54"><name pos:start="173:27" pos:end="173:32">strcmp</name><argument_list pos:start="173:33" pos:end="173:54">(<argument pos:start="173:34" pos:end="173:36"><expr pos:start="173:34" pos:end="173:36"><name pos:start="173:34" pos:end="173:36">key</name></expr></argument>, <argument pos:start="173:39" pos:end="173:53"><expr pos:start="173:39" pos:end="173:53"><literal type="string" pos:start="173:39" pos:end="173:53">"videodatarate"</literal></expr></argument>)</argument_list></call> <operator pos:start="173:56" pos:end="173:57">&amp;&amp;</operator> <name pos:start="173:59" pos:end="173:64">vcodec</name> <operator pos:start="173:66" pos:end="173:67">&amp;&amp;</operator>

                         <literal type="number" pos:start="175:26" pos:end="175:26">0</literal> <operator pos:start="175:28" pos:end="175:29">&lt;=</operator> <operator pos:start="175:31" pos:end="175:31">(</operator><name pos:start="175:32" pos:end="175:34">int</name><operator pos:start="175:35" pos:end="175:35">)</operator><operator pos:start="175:36" pos:end="175:36">(</operator><name pos:start="175:37" pos:end="175:43">num_val</name> <operator pos:start="175:45" pos:end="175:45">*</operator> <literal type="number" pos:start="175:47" pos:end="175:52">1024.0</literal><operator pos:start="175:53" pos:end="175:53">)</operator></expr>)</condition><block type="pseudo" pos:start="177:21" pos:end="177:56"><block_content pos:start="177:21" pos:end="177:56">

                    <expr_stmt pos:start="177:21" pos:end="177:56"><expr pos:start="177:21" pos:end="177:55"><name pos:start="177:21" pos:end="177:36"><name pos:start="177:21" pos:end="177:26">vcodec</name><operator pos:start="177:27" pos:end="177:28">-&gt;</operator><name pos:start="177:29" pos:end="177:36">bit_rate</name></name> <operator pos:start="177:38" pos:end="177:38">=</operator> <name pos:start="177:40" pos:end="177:46">num_val</name> <operator pos:start="177:48" pos:end="177:48">*</operator> <literal type="number" pos:start="177:50" pos:end="177:55">1024.0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="179:17" pos:end="183:56">else if <condition pos:start="179:25" pos:end="181:54">(<expr pos:start="179:26" pos:end="181:53"><operator pos:start="179:26" pos:end="179:26">!</operator><call pos:start="179:27" pos:end="179:54"><name pos:start="179:27" pos:end="179:32">strcmp</name><argument_list pos:start="179:33" pos:end="179:54">(<argument pos:start="179:34" pos:end="179:36"><expr pos:start="179:34" pos:end="179:36"><name pos:start="179:34" pos:end="179:36">key</name></expr></argument>, <argument pos:start="179:39" pos:end="179:53"><expr pos:start="179:39" pos:end="179:53"><literal type="string" pos:start="179:39" pos:end="179:53">"audiodatarate"</literal></expr></argument>)</argument_list></call> <operator pos:start="179:56" pos:end="179:57">&amp;&amp;</operator> <name pos:start="179:59" pos:end="179:64">acodec</name> <operator pos:start="179:66" pos:end="179:67">&amp;&amp;</operator>

                         <literal type="number" pos:start="181:26" pos:end="181:26">0</literal> <operator pos:start="181:28" pos:end="181:29">&lt;=</operator> <operator pos:start="181:31" pos:end="181:31">(</operator><name pos:start="181:32" pos:end="181:34">int</name><operator pos:start="181:35" pos:end="181:35">)</operator><operator pos:start="181:36" pos:end="181:36">(</operator><name pos:start="181:37" pos:end="181:43">num_val</name> <operator pos:start="181:45" pos:end="181:45">*</operator> <literal type="number" pos:start="181:47" pos:end="181:52">1024.0</literal><operator pos:start="181:53" pos:end="181:53">)</operator></expr>)</condition><block type="pseudo" pos:start="183:21" pos:end="183:56"><block_content pos:start="183:21" pos:end="183:56">

                    <expr_stmt pos:start="183:21" pos:end="183:56"><expr pos:start="183:21" pos:end="183:55"><name pos:start="183:21" pos:end="183:36"><name pos:start="183:21" pos:end="183:26">acodec</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:36">bit_rate</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <name pos:start="183:40" pos:end="183:46">num_val</name> <operator pos:start="183:48" pos:end="183:48">*</operator> <literal type="number" pos:start="183:50" pos:end="183:55">1024.0</literal></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="185:17" pos:end="195:17">else if <condition pos:start="185:25" pos:end="185:52">(<expr pos:start="185:26" pos:end="185:51"><operator pos:start="185:26" pos:end="185:26">!</operator><call pos:start="185:27" pos:end="185:51"><name pos:start="185:27" pos:end="185:32">strcmp</name><argument_list pos:start="185:33" pos:end="185:51">(<argument pos:start="185:34" pos:end="185:36"><expr pos:start="185:34" pos:end="185:36"><name pos:start="185:34" pos:end="185:36">key</name></expr></argument>, <argument pos:start="185:39" pos:end="185:50"><expr pos:start="185:39" pos:end="185:50"><literal type="string" pos:start="185:39" pos:end="185:50">"datastream"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:54" pos:end="195:17">{<block_content pos:start="187:21" pos:end="193:59">

                    <decl_stmt pos:start="187:21" pos:end="187:71"><decl pos:start="187:21" pos:end="187:70"><type pos:start="187:21" pos:end="187:30"><name pos:start="187:21" pos:end="187:28">AVStream</name> <modifier pos:start="187:30" pos:end="187:30">*</modifier></type><name pos:start="187:31" pos:end="187:32">st</name> <init pos:start="187:34" pos:end="187:70">= <expr pos:start="187:36" pos:end="187:70"><call pos:start="187:36" pos:end="187:70"><name pos:start="187:36" pos:end="187:48">create_stream</name><argument_list pos:start="187:49" pos:end="187:70">(<argument pos:start="187:50" pos:end="187:50"><expr pos:start="187:50" pos:end="187:50"><name pos:start="187:50" pos:end="187:50">s</name></expr></argument>, <argument pos:start="187:53" pos:end="187:69"><expr pos:start="187:53" pos:end="187:69"><name pos:start="187:53" pos:end="187:69">AVMEDIA_TYPE_DATA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="189:21" pos:end="191:47"><if pos:start="189:21" pos:end="191:47">if <condition pos:start="189:24" pos:end="189:28">(<expr pos:start="189:25" pos:end="189:27"><operator pos:start="189:25" pos:end="189:25">!</operator><name pos:start="189:26" pos:end="189:27">st</name></expr>)</condition><block type="pseudo" pos:start="191:25" pos:end="191:47"><block_content pos:start="191:25" pos:end="191:47">

                        <return pos:start="191:25" pos:end="191:47">return <expr pos:start="191:32" pos:end="191:46"><call pos:start="191:32" pos:end="191:46"><name pos:start="191:32" pos:end="191:38">AVERROR</name><argument_list pos:start="191:39" pos:end="191:46">(<argument pos:start="191:40" pos:end="191:45"><expr pos:start="191:40" pos:end="191:45"><name pos:start="191:40" pos:end="191:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:59"><expr pos:start="193:21" pos:end="193:58"><name pos:start="193:21" pos:end="193:39"><name pos:start="193:21" pos:end="193:22">st</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:29">codec</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:39">codec_id</name></name> <operator pos:start="193:41" pos:end="193:41">=</operator> <name pos:start="193:43" pos:end="193:58">AV_CODEC_ID_TEXT</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="195:19" pos:end="235:17">else if <condition pos:start="195:27" pos:end="195:47">(<expr pos:start="195:28" pos:end="195:46"><name pos:start="195:28" pos:end="195:46"><name pos:start="195:28" pos:end="195:30">flv</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:46">trust_metadata</name></name></expr>)</condition> <block pos:start="195:49" pos:end="235:17">{<block_content pos:start="197:21" pos:end="233:21">

                    <if_stmt pos:start="197:21" pos:end="233:21"><if pos:start="197:21" pos:end="201:21">if <condition pos:start="197:24" pos:end="197:63">(<expr pos:start="197:25" pos:end="197:62"><operator pos:start="197:25" pos:end="197:25">!</operator><call pos:start="197:26" pos:end="197:52"><name pos:start="197:26" pos:end="197:31">strcmp</name><argument_list pos:start="197:32" pos:end="197:52">(<argument pos:start="197:33" pos:end="197:35"><expr pos:start="197:33" pos:end="197:35"><name pos:start="197:33" pos:end="197:35">key</name></expr></argument>, <argument pos:start="197:38" pos:end="197:51"><expr pos:start="197:38" pos:end="197:51"><literal type="string" pos:start="197:38" pos:end="197:51">"videocodecid"</literal></expr></argument>)</argument_list></call> <operator pos:start="197:54" pos:end="197:55">&amp;&amp;</operator> <name pos:start="197:57" pos:end="197:62">vcodec</name></expr>)</condition> <block pos:start="197:65" pos:end="201:21">{<block_content pos:start="199:25" pos:end="199:68">

                        <expr_stmt pos:start="199:25" pos:end="199:68"><expr pos:start="199:25" pos:end="199:67"><call pos:start="199:25" pos:end="199:67"><name pos:start="199:25" pos:end="199:43">flv_set_video_codec</name><argument_list pos:start="199:44" pos:end="199:67">(<argument pos:start="199:45" pos:end="199:45"><expr pos:start="199:45" pos:end="199:45"><name pos:start="199:45" pos:end="199:45">s</name></expr></argument>, <argument pos:start="199:48" pos:end="199:54"><expr pos:start="199:48" pos:end="199:54"><name pos:start="199:48" pos:end="199:54">vstream</name></expr></argument>, <argument pos:start="199:57" pos:end="199:63"><expr pos:start="199:57" pos:end="199:63"><name pos:start="199:57" pos:end="199:63">num_val</name></expr></argument>, <argument pos:start="199:66" pos:end="199:66"><expr pos:start="199:66" pos:end="199:66"><literal type="number" pos:start="199:66" pos:end="199:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="201:23" pos:end="207:21">else if <condition pos:start="201:31" pos:end="201:70">(<expr pos:start="201:32" pos:end="201:69"><operator pos:start="201:32" pos:end="201:32">!</operator><call pos:start="201:33" pos:end="201:59"><name pos:start="201:33" pos:end="201:38">strcmp</name><argument_list pos:start="201:39" pos:end="201:59">(<argument pos:start="201:40" pos:end="201:42"><expr pos:start="201:40" pos:end="201:42"><name pos:start="201:40" pos:end="201:42">key</name></expr></argument>, <argument pos:start="201:45" pos:end="201:58"><expr pos:start="201:45" pos:end="201:58"><literal type="string" pos:start="201:45" pos:end="201:58">"audiocodecid"</literal></expr></argument>)</argument_list></call> <operator pos:start="201:61" pos:end="201:62">&amp;&amp;</operator> <name pos:start="201:64" pos:end="201:69">acodec</name></expr>)</condition> <block pos:start="201:72" pos:end="207:21">{<block_content pos:start="203:25" pos:end="205:68">

                        <decl_stmt pos:start="203:25" pos:end="203:76"><decl pos:start="203:25" pos:end="203:75"><type pos:start="203:25" pos:end="203:27"><name pos:start="203:25" pos:end="203:27">int</name></type> <name pos:start="203:29" pos:end="203:30">id</name> <init pos:start="203:32" pos:end="203:75">= <expr pos:start="203:34" pos:end="203:75"><operator pos:start="203:34" pos:end="203:34">(</operator><operator pos:start="203:35" pos:end="203:35">(</operator><name pos:start="203:36" pos:end="203:38">int</name><operator pos:start="203:39" pos:end="203:39">)</operator><name pos:start="203:40" pos:end="203:46">num_val</name><operator pos:start="203:47" pos:end="203:47">)</operator> <operator pos:start="203:49" pos:end="203:50">&lt;&lt;</operator> <name pos:start="203:52" pos:end="203:75">FLV_AUDIO_CODECID_OFFSET</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="205:25" pos:end="205:68"><expr pos:start="205:25" pos:end="205:67"><call pos:start="205:25" pos:end="205:67"><name pos:start="205:25" pos:end="205:43">flv_set_audio_codec</name><argument_list pos:start="205:44" pos:end="205:67">(<argument pos:start="205:45" pos:end="205:45"><expr pos:start="205:45" pos:end="205:45"><name pos:start="205:45" pos:end="205:45">s</name></expr></argument>, <argument pos:start="205:48" pos:end="205:54"><expr pos:start="205:48" pos:end="205:54"><name pos:start="205:48" pos:end="205:54">astream</name></expr></argument>, <argument pos:start="205:57" pos:end="205:62"><expr pos:start="205:57" pos:end="205:62"><name pos:start="205:57" pos:end="205:62">acodec</name></expr></argument>, <argument pos:start="205:65" pos:end="205:66"><expr pos:start="205:65" pos:end="205:66"><name pos:start="205:65" pos:end="205:66">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="207:23" pos:end="211:21">else if <condition pos:start="207:31" pos:end="207:73">(<expr pos:start="207:32" pos:end="207:72"><operator pos:start="207:32" pos:end="207:32">!</operator><call pos:start="207:33" pos:end="207:62"><name pos:start="207:33" pos:end="207:38">strcmp</name><argument_list pos:start="207:39" pos:end="207:62">(<argument pos:start="207:40" pos:end="207:42"><expr pos:start="207:40" pos:end="207:42"><name pos:start="207:40" pos:end="207:42">key</name></expr></argument>, <argument pos:start="207:45" pos:end="207:61"><expr pos:start="207:45" pos:end="207:61"><literal type="string" pos:start="207:45" pos:end="207:61">"audiosamplerate"</literal></expr></argument>)</argument_list></call> <operator pos:start="207:64" pos:end="207:65">&amp;&amp;</operator> <name pos:start="207:67" pos:end="207:72">acodec</name></expr>)</condition> <block pos:start="207:75" pos:end="211:21">{<block_content pos:start="209:25" pos:end="209:54">

                        <expr_stmt pos:start="209:25" pos:end="209:54"><expr pos:start="209:25" pos:end="209:53"><name pos:start="209:25" pos:end="209:43"><name pos:start="209:25" pos:end="209:30">acodec</name><operator pos:start="209:31" pos:end="209:32">-&gt;</operator><name pos:start="209:33" pos:end="209:43">sample_rate</name></name> <operator pos:start="209:45" pos:end="209:45">=</operator> <name pos:start="209:47" pos:end="209:53">num_val</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="211:23" pos:end="215:21">else if <condition pos:start="211:31" pos:end="211:73">(<expr pos:start="211:32" pos:end="211:72"><operator pos:start="211:32" pos:end="211:32">!</operator><call pos:start="211:33" pos:end="211:62"><name pos:start="211:33" pos:end="211:38">strcmp</name><argument_list pos:start="211:39" pos:end="211:62">(<argument pos:start="211:40" pos:end="211:42"><expr pos:start="211:40" pos:end="211:42"><name pos:start="211:40" pos:end="211:42">key</name></expr></argument>, <argument pos:start="211:45" pos:end="211:61"><expr pos:start="211:45" pos:end="211:61"><literal type="string" pos:start="211:45" pos:end="211:61">"audiosamplesize"</literal></expr></argument>)</argument_list></call> <operator pos:start="211:64" pos:end="211:65">&amp;&amp;</operator> <name pos:start="211:67" pos:end="211:72">acodec</name></expr>)</condition> <block pos:start="211:75" pos:end="215:21">{<block_content pos:start="213:25" pos:end="213:64">

                        <expr_stmt pos:start="213:25" pos:end="213:64"><expr pos:start="213:25" pos:end="213:63"><name pos:start="213:25" pos:end="213:53"><name pos:start="213:25" pos:end="213:30">acodec</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:53">bits_per_coded_sample</name></name> <operator pos:start="213:55" pos:end="213:55">=</operator> <name pos:start="213:57" pos:end="213:63">num_val</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="215:23" pos:end="225:21">else if <condition pos:start="215:31" pos:end="215:64">(<expr pos:start="215:32" pos:end="215:63"><operator pos:start="215:32" pos:end="215:32">!</operator><call pos:start="215:33" pos:end="215:53"><name pos:start="215:33" pos:end="215:38">strcmp</name><argument_list pos:start="215:39" pos:end="215:53">(<argument pos:start="215:40" pos:end="215:42"><expr pos:start="215:40" pos:end="215:42"><name pos:start="215:40" pos:end="215:42">key</name></expr></argument>, <argument pos:start="215:45" pos:end="215:52"><expr pos:start="215:45" pos:end="215:52"><literal type="string" pos:start="215:45" pos:end="215:52">"stereo"</literal></expr></argument>)</argument_list></call> <operator pos:start="215:55" pos:end="215:56">&amp;&amp;</operator> <name pos:start="215:58" pos:end="215:63">acodec</name></expr>)</condition> <block pos:start="215:66" pos:end="225:21">{<block_content pos:start="217:25" pos:end="223:67">

                        <expr_stmt pos:start="217:25" pos:end="217:61"><expr pos:start="217:25" pos:end="217:60"><name pos:start="217:25" pos:end="217:40"><name pos:start="217:25" pos:end="217:30">acodec</name><operator pos:start="217:31" pos:end="217:32">-&gt;</operator><name pos:start="217:33" pos:end="217:40">channels</name></name>       <operator pos:start="217:48" pos:end="217:48">=</operator> <name pos:start="217:50" pos:end="217:56">num_val</name> <operator pos:start="217:58" pos:end="217:58">+</operator> <literal type="number" pos:start="217:60" pos:end="217:60">1</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="219:25" pos:end="223:67"><expr pos:start="219:25" pos:end="223:66"><name pos:start="219:25" pos:end="219:46"><name pos:start="219:25" pos:end="219:30">acodec</name><operator pos:start="219:31" pos:end="219:32">-&gt;</operator><name pos:start="219:33" pos:end="219:46">channel_layout</name></name> <operator pos:start="219:48" pos:end="219:48">=</operator> <ternary pos:start="219:50" pos:end="223:66"><condition pos:start="219:50" pos:end="219:72"><expr pos:start="219:50" pos:end="219:70"><name pos:start="219:50" pos:end="219:65"><name pos:start="219:50" pos:end="219:55">acodec</name><operator pos:start="219:56" pos:end="219:57">-&gt;</operator><name pos:start="219:58" pos:end="219:65">channels</name></name> <operator pos:start="219:67" pos:end="219:68">==</operator> <literal type="number" pos:start="219:70" pos:end="219:70">2</literal></expr> ?</condition><then pos:start="221:50" pos:end="221:68">

                                                 <expr pos:start="221:50" pos:end="221:68"><name pos:start="221:50" pos:end="221:68">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="221:70" pos:end="223:66">:

                                                 <expr pos:start="223:50" pos:end="223:66"><name pos:start="223:50" pos:end="223:66">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="225:23" pos:end="229:21">else if <condition pos:start="225:31" pos:end="225:63">(<expr pos:start="225:32" pos:end="225:62"><operator pos:start="225:32" pos:end="225:32">!</operator><call pos:start="225:33" pos:end="225:52"><name pos:start="225:33" pos:end="225:38">strcmp</name><argument_list pos:start="225:39" pos:end="225:52">(<argument pos:start="225:40" pos:end="225:42"><expr pos:start="225:40" pos:end="225:42"><name pos:start="225:40" pos:end="225:42">key</name></expr></argument>, <argument pos:start="225:45" pos:end="225:51"><expr pos:start="225:45" pos:end="225:51"><literal type="string" pos:start="225:45" pos:end="225:51">"width"</literal></expr></argument>)</argument_list></call> <operator pos:start="225:54" pos:end="225:55">&amp;&amp;</operator> <name pos:start="225:57" pos:end="225:62">vcodec</name></expr>)</condition> <block pos:start="225:65" pos:end="229:21">{<block_content pos:start="227:25" pos:end="227:48">

                        <expr_stmt pos:start="227:25" pos:end="227:48"><expr pos:start="227:25" pos:end="227:47"><name pos:start="227:25" pos:end="227:37"><name pos:start="227:25" pos:end="227:30">vcodec</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:37">width</name></name> <operator pos:start="227:39" pos:end="227:39">=</operator> <name pos:start="227:41" pos:end="227:47">num_val</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="229:23" pos:end="233:21">else if <condition pos:start="229:31" pos:end="229:64">(<expr pos:start="229:32" pos:end="229:63"><operator pos:start="229:32" pos:end="229:32">!</operator><call pos:start="229:33" pos:end="229:53"><name pos:start="229:33" pos:end="229:38">strcmp</name><argument_list pos:start="229:39" pos:end="229:53">(<argument pos:start="229:40" pos:end="229:42"><expr pos:start="229:40" pos:end="229:42"><name pos:start="229:40" pos:end="229:42">key</name></expr></argument>, <argument pos:start="229:45" pos:end="229:52"><expr pos:start="229:45" pos:end="229:52"><literal type="string" pos:start="229:45" pos:end="229:52">"height"</literal></expr></argument>)</argument_list></call> <operator pos:start="229:55" pos:end="229:56">&amp;&amp;</operator> <name pos:start="229:58" pos:end="229:63">vcodec</name></expr>)</condition> <block pos:start="229:66" pos:end="233:21">{<block_content pos:start="231:25" pos:end="231:49">

                        <expr_stmt pos:start="231:25" pos:end="231:49"><expr pos:start="231:25" pos:end="231:48"><name pos:start="231:25" pos:end="231:38"><name pos:start="231:25" pos:end="231:30">vcodec</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:38">height</name></name> <operator pos:start="231:40" pos:end="231:40">=</operator> <name pos:start="231:42" pos:end="231:48">num_val</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="243:9" pos:end="249:51"><if pos:start="243:9" pos:end="249:51">if <condition pos:start="243:12" pos:end="247:55">(<expr pos:start="243:13" pos:end="247:54"><name pos:start="243:13" pos:end="243:20">amf_type</name> <operator pos:start="243:22" pos:end="243:23">==</operator> <name pos:start="243:25" pos:end="243:44">AMF_DATA_TYPE_OBJECT</name> <operator pos:start="243:46" pos:end="243:47">&amp;&amp;</operator> <name pos:start="243:49" pos:end="243:61"><name pos:start="243:49" pos:end="243:49">s</name><operator pos:start="243:50" pos:end="243:51">-&gt;</operator><name pos:start="243:52" pos:end="243:61">nb_streams</name></name> <operator pos:start="243:63" pos:end="243:64">==</operator> <literal type="number" pos:start="243:66" pos:end="243:66">1</literal> <operator pos:start="243:68" pos:end="243:69">&amp;&amp;</operator>

           <operator pos:start="245:12" pos:end="245:12">(</operator><operator pos:start="245:13" pos:end="245:13">(</operator><operator pos:start="245:14" pos:end="245:14">!</operator><name pos:start="245:15" pos:end="245:20">acodec</name> <operator pos:start="245:22" pos:end="245:23">&amp;&amp;</operator> <operator pos:start="245:25" pos:end="245:25">!</operator><call pos:start="245:26" pos:end="245:52"><name pos:start="245:26" pos:end="245:31">strcmp</name><argument_list pos:start="245:32" pos:end="245:52">(<argument pos:start="245:33" pos:end="245:35"><expr pos:start="245:33" pos:end="245:35"><name pos:start="245:33" pos:end="245:35">key</name></expr></argument>, <argument pos:start="245:38" pos:end="245:51"><expr pos:start="245:38" pos:end="245:51"><literal type="string" pos:start="245:38" pos:end="245:51">"audiocodecid"</literal></expr></argument>)</argument_list></call><operator pos:start="245:53" pos:end="245:53">)</operator> <operator pos:start="245:55" pos:end="245:56">||</operator>

            <operator pos:start="247:13" pos:end="247:13">(</operator><operator pos:start="247:14" pos:end="247:14">!</operator><name pos:start="247:15" pos:end="247:20">vcodec</name> <operator pos:start="247:22" pos:end="247:23">&amp;&amp;</operator> <operator pos:start="247:25" pos:end="247:25">!</operator><call pos:start="247:26" pos:end="247:52"><name pos:start="247:26" pos:end="247:31">strcmp</name><argument_list pos:start="247:32" pos:end="247:52">(<argument pos:start="247:33" pos:end="247:35"><expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:35">key</name></expr></argument>, <argument pos:start="247:38" pos:end="247:51"><expr pos:start="247:38" pos:end="247:51"><literal type="string" pos:start="247:38" pos:end="247:51">"videocodecid"</literal></expr></argument>)</argument_list></call><operator pos:start="247:53" pos:end="247:53">)</operator><operator pos:start="247:54" pos:end="247:54">)</operator></expr>)</condition><block type="pseudo" pos:start="249:17" pos:end="249:51"><block_content pos:start="249:17" pos:end="249:51">

                <expr_stmt pos:start="249:17" pos:end="249:51"><expr pos:start="249:17" pos:end="249:50"><name pos:start="249:17" pos:end="249:28"><name pos:start="249:17" pos:end="249:17">s</name><operator pos:start="249:18" pos:end="249:19">-&gt;</operator><name pos:start="249:20" pos:end="249:28">ctx_flags</name></name> <operator pos:start="249:30" pos:end="249:31">&amp;=</operator> <operator pos:start="249:33" pos:end="249:33">~</operator><name pos:start="249:34" pos:end="249:50">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="249:53" pos:end="249:125">//If there is either audio/video missing, codecid will be an empty object</comment>



        <if_stmt pos:start="253:9" pos:end="279:21"><if pos:start="253:9" pos:end="279:21">if <condition pos:start="253:12" pos:end="277:39">(<expr pos:start="253:13" pos:end="277:38"><operator pos:start="253:13" pos:end="253:13">!</operator><call pos:start="253:14" pos:end="253:36"><name pos:start="253:14" pos:end="253:19">strcmp</name><argument_list pos:start="253:20" pos:end="253:36">(<argument pos:start="253:21" pos:end="253:23"><expr pos:start="253:21" pos:end="253:23"><name pos:start="253:21" pos:end="253:23">key</name></expr></argument>, <argument pos:start="253:26" pos:end="253:35"><expr pos:start="253:26" pos:end="253:35"><literal type="string" pos:start="253:26" pos:end="253:35">"duration"</literal></expr></argument>)</argument_list></call>        <operator pos:start="253:45" pos:end="253:46">||</operator>

            <operator pos:start="255:13" pos:end="255:13">!</operator><call pos:start="255:14" pos:end="255:36"><name pos:start="255:14" pos:end="255:19">strcmp</name><argument_list pos:start="255:20" pos:end="255:36">(<argument pos:start="255:21" pos:end="255:23"><expr pos:start="255:21" pos:end="255:23"><name pos:start="255:21" pos:end="255:23">key</name></expr></argument>, <argument pos:start="255:26" pos:end="255:35"><expr pos:start="255:26" pos:end="255:35"><literal type="string" pos:start="255:26" pos:end="255:35">"filesize"</literal></expr></argument>)</argument_list></call>        <operator pos:start="255:45" pos:end="255:46">||</operator>

            <operator pos:start="257:13" pos:end="257:13">!</operator><call pos:start="257:14" pos:end="257:33"><name pos:start="257:14" pos:end="257:19">strcmp</name><argument_list pos:start="257:20" pos:end="257:33">(<argument pos:start="257:21" pos:end="257:23"><expr pos:start="257:21" pos:end="257:23"><name pos:start="257:21" pos:end="257:23">key</name></expr></argument>, <argument pos:start="257:26" pos:end="257:32"><expr pos:start="257:26" pos:end="257:32"><literal type="string" pos:start="257:26" pos:end="257:32">"width"</literal></expr></argument>)</argument_list></call>           <operator pos:start="257:45" pos:end="257:46">||</operator>

            <operator pos:start="259:13" pos:end="259:13">!</operator><call pos:start="259:14" pos:end="259:34"><name pos:start="259:14" pos:end="259:19">strcmp</name><argument_list pos:start="259:20" pos:end="259:34">(<argument pos:start="259:21" pos:end="259:23"><expr pos:start="259:21" pos:end="259:23"><name pos:start="259:21" pos:end="259:23">key</name></expr></argument>, <argument pos:start="259:26" pos:end="259:33"><expr pos:start="259:26" pos:end="259:33"><literal type="string" pos:start="259:26" pos:end="259:33">"height"</literal></expr></argument>)</argument_list></call>          <operator pos:start="259:45" pos:end="259:46">||</operator>

            <operator pos:start="261:13" pos:end="261:13">!</operator><call pos:start="261:14" pos:end="261:41"><name pos:start="261:14" pos:end="261:19">strcmp</name><argument_list pos:start="261:20" pos:end="261:41">(<argument pos:start="261:21" pos:end="261:23"><expr pos:start="261:21" pos:end="261:23"><name pos:start="261:21" pos:end="261:23">key</name></expr></argument>, <argument pos:start="261:26" pos:end="261:40"><expr pos:start="261:26" pos:end="261:40"><literal type="string" pos:start="261:26" pos:end="261:40">"videodatarate"</literal></expr></argument>)</argument_list></call>   <operator pos:start="261:45" pos:end="261:46">||</operator>

            <operator pos:start="263:13" pos:end="263:13">!</operator><call pos:start="263:14" pos:end="263:37"><name pos:start="263:14" pos:end="263:19">strcmp</name><argument_list pos:start="263:20" pos:end="263:37">(<argument pos:start="263:21" pos:end="263:23"><expr pos:start="263:21" pos:end="263:23"><name pos:start="263:21" pos:end="263:23">key</name></expr></argument>, <argument pos:start="263:26" pos:end="263:36"><expr pos:start="263:26" pos:end="263:36"><literal type="string" pos:start="263:26" pos:end="263:36">"framerate"</literal></expr></argument>)</argument_list></call>       <operator pos:start="263:45" pos:end="263:46">||</operator>

            <operator pos:start="265:13" pos:end="265:13">!</operator><call pos:start="265:14" pos:end="265:40"><name pos:start="265:14" pos:end="265:19">strcmp</name><argument_list pos:start="265:20" pos:end="265:40">(<argument pos:start="265:21" pos:end="265:23"><expr pos:start="265:21" pos:end="265:23"><name pos:start="265:21" pos:end="265:23">key</name></expr></argument>, <argument pos:start="265:26" pos:end="265:39"><expr pos:start="265:26" pos:end="265:39"><literal type="string" pos:start="265:26" pos:end="265:39">"videocodecid"</literal></expr></argument>)</argument_list></call>    <operator pos:start="265:45" pos:end="265:46">||</operator>

            <operator pos:start="267:13" pos:end="267:13">!</operator><call pos:start="267:14" pos:end="267:41"><name pos:start="267:14" pos:end="267:19">strcmp</name><argument_list pos:start="267:20" pos:end="267:41">(<argument pos:start="267:21" pos:end="267:23"><expr pos:start="267:21" pos:end="267:23"><name pos:start="267:21" pos:end="267:23">key</name></expr></argument>, <argument pos:start="267:26" pos:end="267:40"><expr pos:start="267:26" pos:end="267:40"><literal type="string" pos:start="267:26" pos:end="267:40">"audiodatarate"</literal></expr></argument>)</argument_list></call>   <operator pos:start="267:45" pos:end="267:46">||</operator>

            <operator pos:start="269:13" pos:end="269:13">!</operator><call pos:start="269:14" pos:end="269:43"><name pos:start="269:14" pos:end="269:19">strcmp</name><argument_list pos:start="269:20" pos:end="269:43">(<argument pos:start="269:21" pos:end="269:23"><expr pos:start="269:21" pos:end="269:23"><name pos:start="269:21" pos:end="269:23">key</name></expr></argument>, <argument pos:start="269:26" pos:end="269:42"><expr pos:start="269:26" pos:end="269:42"><literal type="string" pos:start="269:26" pos:end="269:42">"audiosamplerate"</literal></expr></argument>)</argument_list></call> <operator pos:start="269:45" pos:end="269:46">||</operator>

            <operator pos:start="271:13" pos:end="271:13">!</operator><call pos:start="271:14" pos:end="271:43"><name pos:start="271:14" pos:end="271:19">strcmp</name><argument_list pos:start="271:20" pos:end="271:43">(<argument pos:start="271:21" pos:end="271:23"><expr pos:start="271:21" pos:end="271:23"><name pos:start="271:21" pos:end="271:23">key</name></expr></argument>, <argument pos:start="271:26" pos:end="271:42"><expr pos:start="271:26" pos:end="271:42"><literal type="string" pos:start="271:26" pos:end="271:42">"audiosamplesize"</literal></expr></argument>)</argument_list></call> <operator pos:start="271:45" pos:end="271:46">||</operator>

            <operator pos:start="273:13" pos:end="273:13">!</operator><call pos:start="273:14" pos:end="273:34"><name pos:start="273:14" pos:end="273:19">strcmp</name><argument_list pos:start="273:20" pos:end="273:34">(<argument pos:start="273:21" pos:end="273:23"><expr pos:start="273:21" pos:end="273:23"><name pos:start="273:21" pos:end="273:23">key</name></expr></argument>, <argument pos:start="273:26" pos:end="273:33"><expr pos:start="273:26" pos:end="273:33"><literal type="string" pos:start="273:26" pos:end="273:33">"stereo"</literal></expr></argument>)</argument_list></call>          <operator pos:start="273:45" pos:end="273:46">||</operator>

            <operator pos:start="275:13" pos:end="275:13">!</operator><call pos:start="275:14" pos:end="275:40"><name pos:start="275:14" pos:end="275:19">strcmp</name><argument_list pos:start="275:20" pos:end="275:40">(<argument pos:start="275:21" pos:end="275:23"><expr pos:start="275:21" pos:end="275:23"><name pos:start="275:21" pos:end="275:23">key</name></expr></argument>, <argument pos:start="275:26" pos:end="275:39"><expr pos:start="275:26" pos:end="275:39"><literal type="string" pos:start="275:26" pos:end="275:39">"audiocodecid"</literal></expr></argument>)</argument_list></call>    <operator pos:start="275:45" pos:end="275:46">||</operator>

            <operator pos:start="277:13" pos:end="277:13">!</operator><call pos:start="277:14" pos:end="277:38"><name pos:start="277:14" pos:end="277:19">strcmp</name><argument_list pos:start="277:20" pos:end="277:38">(<argument pos:start="277:21" pos:end="277:23"><expr pos:start="277:21" pos:end="277:23"><name pos:start="277:21" pos:end="277:23">key</name></expr></argument>, <argument pos:start="277:26" pos:end="277:37"><expr pos:start="277:26" pos:end="277:37"><literal type="string" pos:start="277:26" pos:end="277:37">"datastream"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:21"><block_content pos:start="279:13" pos:end="279:21">

            <return pos:start="279:13" pos:end="279:21">return <expr pos:start="279:20" pos:end="279:20"><literal type="number" pos:start="279:20" pos:end="279:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="283:9" pos:end="283:60"><expr pos:start="283:9" pos:end="283:59"><name pos:start="283:9" pos:end="283:22"><name pos:start="283:9" pos:end="283:9">s</name><operator pos:start="283:10" pos:end="283:11">-&gt;</operator><name pos:start="283:12" pos:end="283:22">event_flags</name></name> <operator pos:start="283:24" pos:end="283:25">|=</operator> <name pos:start="283:27" pos:end="283:59">AVFMT_EVENT_FLAG_METADATA_UPDATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="285:9" pos:end="301:55"><if pos:start="285:9" pos:end="293:9">if <condition pos:start="285:12" pos:end="285:43">(<expr pos:start="285:13" pos:end="285:42"><name pos:start="285:13" pos:end="285:20">amf_type</name> <operator pos:start="285:22" pos:end="285:23">==</operator> <name pos:start="285:25" pos:end="285:42">AMF_DATA_TYPE_BOOL</name></expr>)</condition> <block pos:start="285:45" pos:end="293:9">{<block_content pos:start="287:13" pos:end="291:55">

            <expr_stmt pos:start="287:13" pos:end="289:40"><expr pos:start="287:13" pos:end="289:39"><call pos:start="287:13" pos:end="289:39"><name pos:start="287:13" pos:end="287:22">av_strlcpy</name><argument_list pos:start="287:23" pos:end="289:39">(<argument pos:start="287:24" pos:end="287:30"><expr pos:start="287:24" pos:end="287:30"><name pos:start="287:24" pos:end="287:30">str_val</name></expr></argument>, <argument pos:start="287:33" pos:end="287:62"><expr pos:start="287:33" pos:end="287:62"><ternary pos:start="287:33" pos:end="287:62"><condition pos:start="287:33" pos:end="287:45"><expr pos:start="287:33" pos:end="287:43"><name pos:start="287:33" pos:end="287:39">num_val</name> <operator pos:start="287:41" pos:end="287:41">&gt;</operator> <literal type="number" pos:start="287:43" pos:end="287:43">0</literal></expr> ?</condition><then pos:start="287:47" pos:end="287:52"> <expr pos:start="287:47" pos:end="287:52"><literal type="string" pos:start="287:47" pos:end="287:52">"true"</literal></expr> </then><else pos:start="287:54" pos:end="287:62">: <expr pos:start="287:56" pos:end="287:62"><literal type="string" pos:start="287:56" pos:end="287:62">"false"</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="289:24" pos:end="289:38"><expr pos:start="289:24" pos:end="289:38"><sizeof pos:start="289:24" pos:end="289:38">sizeof<argument_list pos:start="289:30" pos:end="289:38">(<argument pos:start="289:31" pos:end="289:37"><expr pos:start="289:31" pos:end="289:37"><name pos:start="289:31" pos:end="289:37">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:55"><expr pos:start="291:13" pos:end="291:54"><call pos:start="291:13" pos:end="291:54"><name pos:start="291:13" pos:end="291:23">av_dict_set</name><argument_list pos:start="291:24" pos:end="291:54">(<argument pos:start="291:25" pos:end="291:36"><expr pos:start="291:25" pos:end="291:36"><operator pos:start="291:25" pos:end="291:25">&amp;</operator><name pos:start="291:26" pos:end="291:36"><name pos:start="291:26" pos:end="291:26">s</name><operator pos:start="291:27" pos:end="291:28">-&gt;</operator><name pos:start="291:29" pos:end="291:36">metadata</name></name></expr></argument>, <argument pos:start="291:39" pos:end="291:41"><expr pos:start="291:39" pos:end="291:41"><name pos:start="291:39" pos:end="291:41">key</name></expr></argument>, <argument pos:start="291:44" pos:end="291:50"><expr pos:start="291:44" pos:end="291:50"><name pos:start="291:44" pos:end="291:50">str_val</name></expr></argument>, <argument pos:start="291:53" pos:end="291:53"><expr pos:start="291:53" pos:end="291:53"><literal type="number" pos:start="291:53" pos:end="291:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="293:11" pos:end="299:9">else if <condition pos:start="293:19" pos:end="293:52">(<expr pos:start="293:20" pos:end="293:51"><name pos:start="293:20" pos:end="293:27">amf_type</name> <operator pos:start="293:29" pos:end="293:30">==</operator> <name pos:start="293:32" pos:end="293:51">AMF_DATA_TYPE_NUMBER</name></expr>)</condition> <block pos:start="293:54" pos:end="299:9">{<block_content pos:start="295:13" pos:end="297:55">

            <expr_stmt pos:start="295:13" pos:end="295:63"><expr pos:start="295:13" pos:end="295:62"><call pos:start="295:13" pos:end="295:62"><name pos:start="295:13" pos:end="295:20">snprintf</name><argument_list pos:start="295:21" pos:end="295:62">(<argument pos:start="295:22" pos:end="295:28"><expr pos:start="295:22" pos:end="295:28"><name pos:start="295:22" pos:end="295:28">str_val</name></expr></argument>, <argument pos:start="295:31" pos:end="295:45"><expr pos:start="295:31" pos:end="295:45"><sizeof pos:start="295:31" pos:end="295:45">sizeof<argument_list pos:start="295:37" pos:end="295:45">(<argument pos:start="295:38" pos:end="295:44"><expr pos:start="295:38" pos:end="295:44"><name pos:start="295:38" pos:end="295:44">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="295:48" pos:end="295:52"><expr pos:start="295:48" pos:end="295:52"><literal type="string" pos:start="295:48" pos:end="295:52">"%.f"</literal></expr></argument>, <argument pos:start="295:55" pos:end="295:61"><expr pos:start="295:55" pos:end="295:61"><name pos:start="295:55" pos:end="295:61">num_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:55"><expr pos:start="297:13" pos:end="297:54"><call pos:start="297:13" pos:end="297:54"><name pos:start="297:13" pos:end="297:23">av_dict_set</name><argument_list pos:start="297:24" pos:end="297:54">(<argument pos:start="297:25" pos:end="297:36"><expr pos:start="297:25" pos:end="297:36"><operator pos:start="297:25" pos:end="297:25">&amp;</operator><name pos:start="297:26" pos:end="297:36"><name pos:start="297:26" pos:end="297:26">s</name><operator pos:start="297:27" pos:end="297:28">-&gt;</operator><name pos:start="297:29" pos:end="297:36">metadata</name></name></expr></argument>, <argument pos:start="297:39" pos:end="297:41"><expr pos:start="297:39" pos:end="297:41"><name pos:start="297:39" pos:end="297:41">key</name></expr></argument>, <argument pos:start="297:44" pos:end="297:50"><expr pos:start="297:44" pos:end="297:50"><name pos:start="297:44" pos:end="297:50">str_val</name></expr></argument>, <argument pos:start="297:53" pos:end="297:53"><expr pos:start="297:53" pos:end="297:53"><literal type="number" pos:start="297:53" pos:end="297:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="299:11" pos:end="301:55">else if <condition pos:start="299:19" pos:end="299:52">(<expr pos:start="299:20" pos:end="299:51"><name pos:start="299:20" pos:end="299:27">amf_type</name> <operator pos:start="299:29" pos:end="299:30">==</operator> <name pos:start="299:32" pos:end="299:51">AMF_DATA_TYPE_STRING</name></expr>)</condition><block type="pseudo" pos:start="301:13" pos:end="301:55"><block_content pos:start="301:13" pos:end="301:55">

            <expr_stmt pos:start="301:13" pos:end="301:55"><expr pos:start="301:13" pos:end="301:54"><call pos:start="301:13" pos:end="301:54"><name pos:start="301:13" pos:end="301:23">av_dict_set</name><argument_list pos:start="301:24" pos:end="301:54">(<argument pos:start="301:25" pos:end="301:36"><expr pos:start="301:25" pos:end="301:36"><operator pos:start="301:25" pos:end="301:25">&amp;</operator><name pos:start="301:26" pos:end="301:36"><name pos:start="301:26" pos:end="301:26">s</name><operator pos:start="301:27" pos:end="301:28">-&gt;</operator><name pos:start="301:29" pos:end="301:36">metadata</name></name></expr></argument>, <argument pos:start="301:39" pos:end="301:41"><expr pos:start="301:39" pos:end="301:41"><name pos:start="301:39" pos:end="301:41">key</name></expr></argument>, <argument pos:start="301:44" pos:end="301:50"><expr pos:start="301:44" pos:end="301:50"><name pos:start="301:44" pos:end="301:50">str_val</name></expr></argument>, <argument pos:start="301:53" pos:end="301:53"><expr pos:start="301:53" pos:end="301:53"><literal type="number" pos:start="301:53" pos:end="301:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="307:5" pos:end="307:13">return <expr pos:start="307:12" pos:end="307:12"><literal type="number" pos:start="307:12" pos:end="307:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
