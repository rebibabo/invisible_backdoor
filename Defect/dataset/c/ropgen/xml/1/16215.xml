<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16215.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">kvm_cpu_exec</name><parameter_list pos:start="1:17" pos:end="1:31">(<parameter pos:start="1:18" pos:end="1:30"><decl pos:start="1:18" pos:end="1:30"><type pos:start="1:18" pos:end="1:27"><name pos:start="1:18" pos:end="1:25">CPUState</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:30">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:18">kvm_run</name></name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">run</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:29">env</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:38">kvm_run</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><call pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:11">dprintf</name><argument_list pos:start="11:12" pos:end="11:31">(<argument pos:start="11:13" pos:end="11:30"><expr pos:start="11:13" pos:end="11:30"><literal type="string" pos:start="11:13" pos:end="11:30">"kvm_cpu_exec()\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <do pos:start="15:5" pos:end="189:22">do <block pos:start="15:8" pos:end="189:5">{<block_content pos:start="19:9" pos:end="187:9">

<cpp:ifndef pos:start="17:1" pos:end="17:23">#<cpp:directive pos:start="17:2" pos:end="17:7">ifndef</cpp:directive> <name pos:start="17:9" pos:end="17:23">CONFIG_IOTHREAD</name></cpp:ifndef>

        <if_stmt pos:start="19:9" pos:end="30:0"><if pos:start="19:9" pos:end="30:0">if <condition pos:start="19:12" pos:end="19:30">(<expr pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:29"><name pos:start="19:13" pos:end="19:15">env</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:29">exit_request</name></name></expr>)</condition> <block pos:start="19:32" pos:end="30:0">{<block_content pos:start="21:13" pos:end="25:18">

            <expr_stmt pos:start="21:13" pos:end="21:50"><expr pos:start="21:13" pos:end="21:49"><call pos:start="21:13" pos:end="21:49"><name pos:start="21:13" pos:end="21:19">dprintf</name><argument_list pos:start="21:20" pos:end="21:49">(<argument pos:start="21:21" pos:end="21:48"><expr pos:start="21:21" pos:end="21:48"><literal type="string" pos:start="21:21" pos:end="21:48">"interrupt exit requested\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:20"><expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:32">(<expr pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:15">env</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:31">kvm_vcpu_dirty</name></name></expr>)</condition> <block pos:start="33:34" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:36">

            <expr_stmt pos:start="35:13" pos:end="35:40"><expr pos:start="35:13" pos:end="35:39"><call pos:start="35:13" pos:end="35:39"><name pos:start="35:13" pos:end="35:34">kvm_arch_put_registers</name><argument_list pos:start="35:35" pos:end="35:39">(<argument pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:38">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:31">kvm_vcpu_dirty</name></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <literal type="number" pos:start="37:35" pos:end="37:35">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:24">kvm_arch_pre_run</name><argument_list pos:start="43:25" pos:end="43:34">(<argument pos:start="43:26" pos:end="43:28"><expr pos:start="43:26" pos:end="43:28"><name pos:start="43:26" pos:end="43:28">env</name></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><call pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="45:35" pos:end="45:36">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:45"><name pos:start="47:15" pos:end="47:28">kvm_vcpu_ioctl</name><argument_list pos:start="47:29" pos:end="47:45">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">env</name></expr></argument>, <argument pos:start="47:35" pos:end="47:41"><expr pos:start="47:35" pos:end="47:41"><name pos:start="47:35" pos:end="47:41">KVM_RUN</name></expr></argument>, <argument pos:start="47:44" pos:end="47:44"><expr pos:start="47:44" pos:end="47:44"><literal type="number" pos:start="47:44" pos:end="47:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><call pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:32">qemu_mutex_lock_iothread</name><argument_list pos:start="49:33" pos:end="49:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><call pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:25">kvm_arch_post_run</name><argument_list pos:start="51:26" pos:end="51:35">(<argument pos:start="51:27" pos:end="51:29"><expr pos:start="51:27" pos:end="51:29"><name pos:start="51:27" pos:end="51:29">env</name></expr></argument>, <argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="55:44">(<expr pos:start="55:13" pos:end="55:43"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:18">==</operator> <operator pos:start="55:20" pos:end="55:20">-</operator><name pos:start="55:21" pos:end="55:25">EINTR</name> <operator pos:start="55:27" pos:end="55:28">||</operator> <name pos:start="55:30" pos:end="55:32">ret</name> <operator pos:start="55:34" pos:end="55:35">==</operator> <operator pos:start="55:37" pos:end="55:37">-</operator><name pos:start="55:38" pos:end="55:43">EAGAIN</name></expr>)</condition> <block pos:start="55:46" pos:end="65:9">{<block_content pos:start="57:13" pos:end="63:18">

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><call pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:20">cpu_exit</name><argument_list pos:start="57:21" pos:end="57:25">(<argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><call pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:19">dprintf</name><argument_list pos:start="59:20" pos:end="59:39">(<argument pos:start="59:21" pos:end="59:38"><expr pos:start="59:21" pos:end="59:38"><literal type="string" pos:start="59:21" pos:end="59:38">"io window exit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:20"><expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="75:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">&lt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition> <block pos:start="69:22" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:20">

            <expr_stmt pos:start="71:13" pos:end="71:59"><expr pos:start="71:13" pos:end="71:58"><call pos:start="71:13" pos:end="71:58"><name pos:start="71:13" pos:end="71:19">dprintf</name><argument_list pos:start="71:20" pos:end="71:58">(<argument pos:start="71:21" pos:end="71:41"><expr pos:start="71:21" pos:end="71:41"><literal type="string" pos:start="71:21" pos:end="71:41">"kvm run failed %s\n"</literal></expr></argument>, <argument pos:start="71:44" pos:end="71:57"><expr pos:start="71:44" pos:end="71:57"><call pos:start="71:44" pos:end="71:57"><name pos:start="71:44" pos:end="71:51">strerror</name><argument_list pos:start="71:52" pos:end="71:57">(<argument pos:start="71:53" pos:end="71:56"><expr pos:start="71:53" pos:end="71:56"><operator pos:start="71:53" pos:end="71:53">-</operator><name pos:start="71:54" pos:end="71:56">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><call pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:17">abort</name><argument_list pos:start="73:18" pos:end="73:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:39">kvm_flush_coalesced_mmio_buffer</name><argument_list pos:start="79:40" pos:end="79:41">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="83:9" pos:end="83:16"><expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <literal type="number" pos:start="83:15" pos:end="83:15">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="83:18" pos:end="83:32">/* exit loop */</comment>

        <switch pos:start="85:9" pos:end="187:9">switch <condition pos:start="85:16" pos:end="85:33">(<expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:19">run</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:32">exit_reason</name></name></expr>)</condition> <block pos:start="85:35" pos:end="187:9">{<block_content pos:start="87:9" pos:end="185:18">

        <case pos:start="87:9" pos:end="87:25">case <expr pos:start="87:14" pos:end="87:24"><name pos:start="87:14" pos:end="87:24">KVM_EXIT_IO</name></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:35"><expr pos:start="89:13" pos:end="89:34"><call pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:19">dprintf</name><argument_list pos:start="89:20" pos:end="89:34">(<argument pos:start="89:21" pos:end="89:33"><expr pos:start="89:21" pos:end="89:33"><literal type="string" pos:start="89:21" pos:end="89:33">"handle_io\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="99:47"><expr pos:start="91:13" pos:end="99:46"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">=</operator> <call pos:start="91:19" pos:end="99:46"><name pos:start="91:19" pos:end="91:31">kvm_handle_io</name><argument_list pos:start="91:32" pos:end="99:46">(<argument pos:start="91:33" pos:end="91:44"><expr pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:44"><name pos:start="91:33" pos:end="91:35">run</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:39">io</name><operator pos:start="91:40" pos:end="91:40">.</operator><name pos:start="91:41" pos:end="91:44">port</name></name></expr></argument>,

                                <argument pos:start="93:33" pos:end="93:68"><expr pos:start="93:33" pos:end="93:68"><operator pos:start="93:33" pos:end="93:33">(</operator><name pos:start="93:34" pos:end="93:40">uint8_t</name> <operator pos:start="93:42" pos:end="93:42">*</operator><operator pos:start="93:43" pos:end="93:43">)</operator><name pos:start="93:44" pos:end="93:46">run</name> <operator pos:start="93:48" pos:end="93:48">+</operator> <name pos:start="93:50" pos:end="93:68"><name pos:start="93:50" pos:end="93:52">run</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:56">io</name><operator pos:start="93:57" pos:end="93:57">.</operator><name pos:start="93:58" pos:end="93:68">data_offset</name></name></expr></argument>,

                                <argument pos:start="95:33" pos:end="95:49"><expr pos:start="95:33" pos:end="95:49"><name pos:start="95:33" pos:end="95:49"><name pos:start="95:33" pos:end="95:35">run</name><operator pos:start="95:36" pos:end="95:37">-&gt;</operator><name pos:start="95:38" pos:end="95:39">io</name><operator pos:start="95:40" pos:end="95:40">.</operator><name pos:start="95:41" pos:end="95:49">direction</name></name></expr></argument>,

                                <argument pos:start="97:33" pos:end="97:44"><expr pos:start="97:33" pos:end="97:44"><name pos:start="97:33" pos:end="97:44"><name pos:start="97:33" pos:end="97:35">run</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:39">io</name><operator pos:start="97:40" pos:end="97:40">.</operator><name pos:start="97:41" pos:end="97:44">size</name></name></expr></argument>,

                                <argument pos:start="99:33" pos:end="99:45"><expr pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:45"><name pos:start="99:33" pos:end="99:35">run</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:39">io</name><operator pos:start="99:40" pos:end="99:40">.</operator><name pos:start="99:41" pos:end="99:45">count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        <case pos:start="103:9" pos:end="103:27">case <expr pos:start="103:14" pos:end="103:26"><name pos:start="103:14" pos:end="103:26">KVM_EXIT_MMIO</name></expr>:</case>

            <expr_stmt pos:start="105:13" pos:end="105:37"><expr pos:start="105:13" pos:end="105:36"><call pos:start="105:13" pos:end="105:36"><name pos:start="105:13" pos:end="105:19">dprintf</name><argument_list pos:start="105:20" pos:end="105:36">(<argument pos:start="105:21" pos:end="105:35"><expr pos:start="105:21" pos:end="105:35"><literal type="string" pos:start="105:21" pos:end="105:35">"handle_mmio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="113:55"><expr pos:start="107:13" pos:end="113:54"><call pos:start="107:13" pos:end="113:54"><name pos:start="107:13" pos:end="107:34">cpu_physical_memory_rw</name><argument_list pos:start="107:35" pos:end="113:54">(<argument pos:start="107:36" pos:end="107:54"><expr pos:start="107:36" pos:end="107:54"><name pos:start="107:36" pos:end="107:54"><name pos:start="107:36" pos:end="107:38">run</name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:44">mmio</name><operator pos:start="107:45" pos:end="107:45">.</operator><name pos:start="107:46" pos:end="107:54">phys_addr</name></name></expr></argument>,

                                   <argument pos:start="109:36" pos:end="109:49"><expr pos:start="109:36" pos:end="109:49"><name pos:start="109:36" pos:end="109:49"><name pos:start="109:36" pos:end="109:38">run</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:44">mmio</name><operator pos:start="109:45" pos:end="109:45">.</operator><name pos:start="109:46" pos:end="109:49">data</name></name></expr></argument>,

                                   <argument pos:start="111:36" pos:end="111:48"><expr pos:start="111:36" pos:end="111:48"><name pos:start="111:36" pos:end="111:48"><name pos:start="111:36" pos:end="111:38">run</name><operator pos:start="111:39" pos:end="111:40">-&gt;</operator><name pos:start="111:41" pos:end="111:44">mmio</name><operator pos:start="111:45" pos:end="111:45">.</operator><name pos:start="111:46" pos:end="111:48">len</name></name></expr></argument>,

                                   <argument pos:start="113:36" pos:end="113:53"><expr pos:start="113:36" pos:end="113:53"><name pos:start="113:36" pos:end="113:53"><name pos:start="113:36" pos:end="113:38">run</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:44">mmio</name><operator pos:start="113:45" pos:end="113:45">.</operator><name pos:start="113:46" pos:end="113:53">is_write</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:20"><expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:15">ret</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <literal type="number" pos:start="115:19" pos:end="115:19">1</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:38">case <expr pos:start="119:14" pos:end="119:37"><name pos:start="119:14" pos:end="119:37">KVM_EXIT_IRQ_WINDOW_OPEN</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:41"><expr pos:start="121:13" pos:end="121:40"><call pos:start="121:13" pos:end="121:40"><name pos:start="121:13" pos:end="121:19">dprintf</name><argument_list pos:start="121:20" pos:end="121:40">(<argument pos:start="121:21" pos:end="121:39"><expr pos:start="121:21" pos:end="121:39"><literal type="string" pos:start="121:21" pos:end="121:39">"irq_window_open\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:31">case <expr pos:start="125:14" pos:end="125:30"><name pos:start="125:14" pos:end="125:30">KVM_EXIT_SHUTDOWN</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><call pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:19">dprintf</name><argument_list pos:start="127:20" pos:end="127:33">(<argument pos:start="127:21" pos:end="127:32"><expr pos:start="127:21" pos:end="127:32"><literal type="string" pos:start="127:21" pos:end="127:32">"shutdown\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:40"><expr pos:start="129:13" pos:end="129:39"><call pos:start="129:13" pos:end="129:39"><name pos:start="129:13" pos:end="129:37">qemu_system_reset_request</name><argument_list pos:start="129:38" pos:end="129:39">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:20"><expr pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <literal type="number" pos:start="131:19" pos:end="131:19">1</literal></expr>;</expr_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:30">case <expr pos:start="135:14" pos:end="135:29"><name pos:start="135:14" pos:end="135:29">KVM_EXIT_UNKNOWN</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:42"><expr pos:start="137:13" pos:end="137:41"><call pos:start="137:13" pos:end="137:41"><name pos:start="137:13" pos:end="137:19">dprintf</name><argument_list pos:start="137:20" pos:end="137:41">(<argument pos:start="137:21" pos:end="137:40"><expr pos:start="137:21" pos:end="137:40"><literal type="string" pos:start="137:21" pos:end="137:40">"kvm_exit_unknown\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:33">case <expr pos:start="141:14" pos:end="141:32"><name pos:start="141:14" pos:end="141:32">KVM_EXIT_FAIL_ENTRY</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:45"><expr pos:start="143:13" pos:end="143:44"><call pos:start="143:13" pos:end="143:44"><name pos:start="143:13" pos:end="143:19">dprintf</name><argument_list pos:start="143:20" pos:end="143:44">(<argument pos:start="143:21" pos:end="143:43"><expr pos:start="143:21" pos:end="143:43"><literal type="string" pos:start="143:21" pos:end="143:43">"kvm_exit_fail_entry\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="145:13" pos:end="145:18">break;</break>

        <case pos:start="147:9" pos:end="147:32">case <expr pos:start="147:14" pos:end="147:31"><name pos:start="147:14" pos:end="147:31">KVM_EXIT_EXCEPTION</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:44"><expr pos:start="149:13" pos:end="149:43"><call pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:19">dprintf</name><argument_list pos:start="149:20" pos:end="149:43">(<argument pos:start="149:21" pos:end="149:42"><expr pos:start="149:21" pos:end="149:42"><literal type="string" pos:start="149:21" pos:end="149:42">"kvm_exit_exception\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="151:13" pos:end="151:18">break;</break>

        <case pos:start="153:9" pos:end="153:28">case <expr pos:start="153:14" pos:end="153:27"><name pos:start="153:14" pos:end="153:27">KVM_EXIT_DEBUG</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="158:0"><expr pos:start="155:13" pos:end="155:39"><call pos:start="155:13" pos:end="155:39"><name pos:start="155:13" pos:end="155:19">dprintf</name><argument_list pos:start="155:20" pos:end="155:39">(<argument pos:start="155:21" pos:end="155:38"><expr pos:start="155:21" pos:end="155:38"><literal type="string" pos:start="155:21" pos:end="155:38">"kvm_exit_debug\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="157:1" pos:end="157:30">#<cpp:directive pos:start="157:2" pos:end="157:6">ifdef</cpp:directive> <name pos:start="157:8" pos:end="157:30">KVM_CAP_SET_GUEST_DEBUG</name></cpp:ifdef>

            <if_stmt pos:start="159:13" pos:end="169:13"><if pos:start="159:13" pos:end="169:13">if <condition pos:start="159:16" pos:end="159:49">(<expr pos:start="159:17" pos:end="159:48"><call pos:start="159:17" pos:end="159:48"><name pos:start="159:17" pos:end="159:30">kvm_arch_debug</name><argument_list pos:start="159:31" pos:end="159:48">(<argument pos:start="159:32" pos:end="159:47"><expr pos:start="159:32" pos:end="159:47"><operator pos:start="159:32" pos:end="159:32">&amp;</operator><name pos:start="159:33" pos:end="159:47"><name pos:start="159:33" pos:end="159:35">run</name><operator pos:start="159:36" pos:end="159:37">-&gt;</operator><name pos:start="159:38" pos:end="159:42">debug</name><operator pos:start="159:43" pos:end="159:43">.</operator><name pos:start="159:44" pos:end="159:47">arch</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:51" pos:end="169:13">{<block_content pos:start="161:17" pos:end="167:25">

                <expr_stmt pos:start="161:17" pos:end="161:38"><expr pos:start="161:17" pos:end="161:37"><call pos:start="161:17" pos:end="161:37"><name pos:start="161:17" pos:end="161:32">gdb_set_stop_cpu</name><argument_list pos:start="161:33" pos:end="161:37">(<argument pos:start="161:34" pos:end="161:36"><expr pos:start="161:34" pos:end="161:36"><name pos:start="161:34" pos:end="161:36">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:36"><expr pos:start="163:17" pos:end="163:35"><call pos:start="163:17" pos:end="163:35"><name pos:start="163:17" pos:end="163:23">vm_stop</name><argument_list pos:start="163:24" pos:end="163:35">(<argument pos:start="163:25" pos:end="163:34"><expr pos:start="163:25" pos:end="163:34"><name pos:start="163:25" pos:end="163:34">EXCP_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:50"><expr pos:start="165:17" pos:end="165:49"><name pos:start="165:17" pos:end="165:36"><name pos:start="165:17" pos:end="165:19">env</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:36">exception_index</name></name> <operator pos:start="165:38" pos:end="165:38">=</operator> <name pos:start="165:40" pos:end="165:49">EXCP_DEBUG</name></expr>;</expr_stmt>

                <return pos:start="167:17" pos:end="167:25">return <expr pos:start="167:24" pos:end="167:24"><literal type="number" pos:start="167:24" pos:end="167:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="171:13" pos:end="171:61">/* re-enter, this exception was guest-internal */</comment>

            <expr_stmt pos:start="173:13" pos:end="176:0"><expr pos:start="173:13" pos:end="173:19"><name pos:start="173:13" pos:end="173:15">ret</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <literal type="number" pos:start="173:19" pos:end="173:19">1</literal></expr>;</expr_stmt>

<cpp:endif pos:start="175:1" pos:end="175:6">#<cpp:directive pos:start="175:2" pos:end="175:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="175:8" pos:end="175:36">/* KVM_CAP_SET_GUEST_DEBUG */</comment>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        <default pos:start="179:9" pos:end="179:16">default:</default>

            <expr_stmt pos:start="181:13" pos:end="181:46"><expr pos:start="181:13" pos:end="181:45"><call pos:start="181:13" pos:end="181:45"><name pos:start="181:13" pos:end="181:19">dprintf</name><argument_list pos:start="181:20" pos:end="181:45">(<argument pos:start="181:21" pos:end="181:44"><expr pos:start="181:21" pos:end="181:44"><literal type="string" pos:start="181:21" pos:end="181:44">"kvm_arch_handle_exit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:49"><expr pos:start="183:13" pos:end="183:48"><name pos:start="183:13" pos:end="183:15">ret</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <call pos:start="183:19" pos:end="183:48"><name pos:start="183:19" pos:end="183:38">kvm_arch_handle_exit</name><argument_list pos:start="183:39" pos:end="183:48">(<argument pos:start="183:40" pos:end="183:42"><expr pos:start="183:40" pos:end="183:42"><name pos:start="183:40" pos:end="183:42">env</name></expr></argument>, <argument pos:start="183:45" pos:end="183:47"><expr pos:start="183:45" pos:end="183:47"><name pos:start="183:45" pos:end="183:47">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="185:13" pos:end="185:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block> while <condition pos:start="189:13" pos:end="189:21">(<expr pos:start="189:14" pos:end="189:20"><name pos:start="189:14" pos:end="189:16">ret</name> <operator pos:start="189:18" pos:end="189:18">&gt;</operator> <literal type="number" pos:start="189:20" pos:end="189:20">0</literal></expr>)</condition>;</do>



    <if_stmt pos:start="193:5" pos:end="199:5"><if pos:start="193:5" pos:end="199:5">if <condition pos:start="193:8" pos:end="193:26">(<expr pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:11">env</name><operator pos:start="193:12" pos:end="193:13">-&gt;</operator><name pos:start="193:14" pos:end="193:25">exit_request</name></name></expr>)</condition> <block pos:start="193:28" pos:end="199:5">{<block_content pos:start="195:9" pos:end="197:46">

        <expr_stmt pos:start="195:9" pos:end="195:30"><expr pos:start="195:9" pos:end="195:29"><name pos:start="195:9" pos:end="195:25"><name pos:start="195:9" pos:end="195:11">env</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:25">exit_request</name></name> <operator pos:start="195:27" pos:end="195:27">=</operator> <literal type="number" pos:start="195:29" pos:end="195:29">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:46"><expr pos:start="197:9" pos:end="197:45"><name pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:11">env</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:28">exception_index</name></name> <operator pos:start="197:30" pos:end="197:30">=</operator> <name pos:start="197:32" pos:end="197:45">EXCP_INTERRUPT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="203:5" pos:end="203:15">return <expr pos:start="203:12" pos:end="203:14"><name pos:start="203:12" pos:end="203:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
