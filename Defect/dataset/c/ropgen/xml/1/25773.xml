<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25773.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:38">h_put_tce_indirect</name><parameter_list pos:start="1:39" pos:end="5:79">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:49">PowerPCCPU</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">cpu</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:63"><decl pos:start="3:40" pos:end="3:63"><type pos:start="3:40" pos:end="3:63"><name pos:start="3:40" pos:end="3:56">sPAPRMachineState</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">spapr</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:58"><decl pos:start="5:40" pos:end="5:58"><type pos:start="5:40" pos:end="5:58"><name pos:start="5:40" pos:end="5:51">target_ulong</name></type> <name pos:start="5:53" pos:end="5:58">opcode</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:78"><decl pos:start="5:61" pos:end="5:78"><type pos:start="5:61" pos:end="5:78"><name pos:start="5:61" pos:end="5:72">target_ulong</name> <modifier pos:start="5:74" pos:end="5:74">*</modifier></type><name pos:start="5:75" pos:end="5:78">args</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="93:1">{<block_content pos:start="9:5" pos:end="91:15">

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:22">liobn</name> <init pos:start="11:24" pos:end="11:32">= <expr pos:start="11:26" pos:end="11:32"><name pos:start="11:26" pos:end="11:32"><name pos:start="11:26" pos:end="11:29">args</name><index pos:start="11:30" pos:end="11:32">[<expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:31"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:21">ioba</name> <init pos:start="13:23" pos:end="13:31">= <expr pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:31"><name pos:start="13:25" pos:end="13:28">args</name><index pos:start="13:29" pos:end="13:31">[<expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:22">ioba1</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">ioba</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:25">tce_list</name> <init pos:start="17:27" pos:end="17:35">= <expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:32">args</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:34"><decl pos:start="19:5" pos:end="19:33"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:23">npages</name> <init pos:start="19:25" pos:end="19:33">= <expr pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:33"><name pos:start="19:27" pos:end="19:30">args</name><index pos:start="19:31" pos:end="19:33">[<expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:44"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:16">target_ulong</name></type> <name pos:start="21:18" pos:end="21:20">ret</name> <init pos:start="21:22" pos:end="21:34">= <expr pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:34">H_PARAMETER</name></expr></init></decl>, <decl pos:start="21:37" pos:end="21:43"><type ref="prev" pos:start="21:5" pos:end="21:16"/><name pos:start="21:37" pos:end="21:39">tce</name> <init pos:start="21:41" pos:end="21:43">= <expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:57"><decl pos:start="23:5" pos:end="23:56"><type pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:17">sPAPRTCETable</name> <modifier pos:start="23:19" pos:end="23:19">*</modifier></type><name pos:start="23:20" pos:end="23:23">tcet</name> <init pos:start="23:25" pos:end="23:56">= <expr pos:start="23:27" pos:end="23:56"><call pos:start="23:27" pos:end="23:56"><name pos:start="23:27" pos:end="23:49">spapr_tce_find_by_liobn</name><argument_list pos:start="23:50" pos:end="23:56">(<argument pos:start="23:51" pos:end="23:55"><expr pos:start="23:51" pos:end="23:55"><name pos:start="23:51" pos:end="23:55">liobn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">CPUState</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:16">cs</name> <init pos:start="25:18" pos:end="25:27">= <expr pos:start="25:20" pos:end="25:27"><call pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:22">CPU</name><argument_list pos:start="25:23" pos:end="25:27">(<argument pos:start="25:24" pos:end="25:26"><expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:32"><decl pos:start="27:5" pos:end="27:20"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">hwaddr</name></type> <name pos:start="27:12" pos:end="27:20">page_mask</name></decl>, <decl pos:start="27:23" pos:end="27:31"><type ref="prev" pos:start="27:5" pos:end="27:10"/><name pos:start="27:23" pos:end="27:31">page_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:14">(<expr pos:start="31:9" pos:end="31:13"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:13">tcet</name></expr>)</condition> <block pos:start="31:16" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:27">

        <return pos:start="33:9" pos:end="33:27">return <expr pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:59">(<expr pos:start="39:9" pos:end="39:58"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:15">npages</name> <operator pos:start="39:17" pos:end="39:17">&gt;</operator> <literal type="number" pos:start="39:19" pos:end="39:21">512</literal><operator pos:start="39:22" pos:end="39:22">)</operator> <operator pos:start="39:24" pos:end="39:25">||</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><name pos:start="39:28" pos:end="39:35">tce_list</name> <operator pos:start="39:37" pos:end="39:37">&amp;</operator> <name pos:start="39:39" pos:end="39:57">SPAPR_TCE_PAGE_MASK</name><operator pos:start="39:58" pos:end="39:58">)</operator></expr>)</condition> <block pos:start="39:61" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:27">

        <return pos:start="41:9" pos:end="41:27">return <expr pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:26">H_PARAMETER</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:50"><expr pos:start="47:5" pos:end="47:49"><name pos:start="47:5" pos:end="47:13">page_mask</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:49"><name pos:start="47:17" pos:end="47:31">IOMMU_PAGE_MASK</name><argument_list pos:start="47:32" pos:end="47:49">(<argument pos:start="47:33" pos:end="47:48"><expr pos:start="47:33" pos:end="47:48"><name pos:start="47:33" pos:end="47:48"><name pos:start="47:33" pos:end="47:36">tcet</name><operator pos:start="47:37" pos:end="47:38">-&gt;</operator><name pos:start="47:39" pos:end="47:48">page_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:13">page_size</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:49"><name pos:start="49:17" pos:end="49:31">IOMMU_PAGE_SIZE</name><argument_list pos:start="49:32" pos:end="49:49">(<argument pos:start="49:33" pos:end="49:48"><expr pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:36">tcet</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:48">page_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:22"><expr pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:8">ioba</name> <operator pos:start="51:10" pos:end="51:11">&amp;=</operator> <name pos:start="51:13" pos:end="51:21">page_mask</name></expr>;</expr_stmt>



    <for pos:start="55:5" pos:end="73:5">for <control pos:start="55:9" pos:end="55:51">(<init pos:start="55:10" pos:end="55:15"><expr pos:start="55:10" pos:end="55:14"><name pos:start="55:10" pos:end="55:10">i</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>;</init> <condition pos:start="55:17" pos:end="55:27"><expr pos:start="55:17" pos:end="55:26"><name pos:start="55:17" pos:end="55:17">i</name> <operator pos:start="55:19" pos:end="55:19">&lt;</operator> <name pos:start="55:21" pos:end="55:26">npages</name></expr>;</condition> <incr pos:start="55:29" pos:end="55:50"><expr pos:start="55:29" pos:end="55:31"><operator pos:start="55:29" pos:end="55:30">++</operator><name pos:start="55:31" pos:end="55:31">i</name></expr><operator pos:start="55:32" pos:end="55:32">,</operator> <expr pos:start="55:34" pos:end="55:50"><name pos:start="55:34" pos:end="55:37">ioba</name> <operator pos:start="55:39" pos:end="55:40">+=</operator> <name pos:start="55:42" pos:end="55:50">page_size</name></expr></incr>)</control> <block pos:start="55:53" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <decl_stmt pos:start="57:9" pos:end="59:57"><decl pos:start="57:9" pos:end="59:56"><type pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:20">target_ulong</name></type> <name pos:start="57:22" pos:end="57:24">off</name> <init pos:start="57:26" pos:end="59:56">= <expr pos:start="57:28" pos:end="59:56"><operator pos:start="57:28" pos:end="57:28">(</operator><name pos:start="57:29" pos:end="57:36">tce_list</name> <operator pos:start="57:38" pos:end="57:38">&amp;</operator> <operator pos:start="57:40" pos:end="57:40">~</operator><name pos:start="57:41" pos:end="57:52">SPAPR_TCE_RW</name><operator pos:start="57:53" pos:end="57:53">)</operator> <operator pos:start="57:55" pos:end="57:55">+</operator>

                                <name pos:start="59:33" pos:end="59:33">i</name> <operator pos:start="59:35" pos:end="59:35">*</operator> <sizeof pos:start="59:37" pos:end="59:56">sizeof<argument_list pos:start="59:43" pos:end="59:56">(<argument pos:start="59:44" pos:end="59:55"><expr pos:start="59:44" pos:end="59:55"><name pos:start="59:44" pos:end="59:55">target_ulong</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:39"><expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:11">tce</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="61:38"><name pos:start="61:15" pos:end="61:25">ldq_be_phys</name><argument_list pos:start="61:26" pos:end="61:38">(<argument pos:start="61:27" pos:end="61:32"><expr pos:start="61:27" pos:end="61:32"><name pos:start="61:27" pos:end="61:32"><name pos:start="61:27" pos:end="61:28">cs</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:32">as</name></name></expr></argument>, <argument pos:start="61:35" pos:end="61:37"><expr pos:start="61:35" pos:end="61:37"><name pos:start="61:35" pos:end="61:37">off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:43"><expr pos:start="65:9" pos:end="65:42"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:42"><name pos:start="65:15" pos:end="65:25">put_tce_emu</name><argument_list pos:start="65:26" pos:end="65:42">(<argument pos:start="65:27" pos:end="65:30"><expr pos:start="65:27" pos:end="65:30"><name pos:start="65:27" pos:end="65:30">tcet</name></expr></argument>, <argument pos:start="65:33" pos:end="65:36"><expr pos:start="65:33" pos:end="65:36"><name pos:start="65:33" pos:end="65:36">ioba</name></expr></argument>, <argument pos:start="65:39" pos:end="65:41"><expr pos:start="65:39" pos:end="65:41"><name pos:start="65:39" pos:end="65:41">tce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:16">(<expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">ret</name></expr>)</condition> <block pos:start="67:18" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:18">

            <break pos:start="69:13" pos:end="69:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="77:5" pos:end="77:62">/* Trace last successful or the first problematic entry */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:5">i</name> <operator pos:start="79:7" pos:end="79:7">=</operator> <ternary pos:start="79:9" pos:end="79:23"><condition pos:start="79:9" pos:end="79:11"><expr pos:start="79:9" pos:end="79:9"><name pos:start="79:9" pos:end="79:9">i</name></expr> ?</condition><then pos:start="79:13" pos:end="79:19"> <expr pos:start="79:13" pos:end="79:19"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">-</operator> <literal type="number" pos:start="79:18" pos:end="79:18">1</literal><operator pos:start="79:19" pos:end="79:19">)</operator></expr> </then><else pos:start="79:21" pos:end="79:23">: <expr pos:start="79:23" pos:end="79:23"><literal type="number" pos:start="79:23" pos:end="79:23">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="89:5"><if pos:start="81:5" pos:end="85:5">if <condition pos:start="81:8" pos:end="81:34">(<expr pos:start="81:9" pos:end="81:33"><call pos:start="81:9" pos:end="81:33"><name pos:start="81:9" pos:end="81:26">SPAPR_IS_PCI_LIOBN</name><argument_list pos:start="81:27" pos:end="81:33">(<argument pos:start="81:28" pos:end="81:32"><expr pos:start="81:28" pos:end="81:32"><name pos:start="81:28" pos:end="81:32">liobn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:36" pos:end="85:5">{<block_content pos:start="83:9" pos:end="83:76">

        <expr_stmt pos:start="83:9" pos:end="83:76"><expr pos:start="83:9" pos:end="83:75"><call pos:start="83:9" pos:end="83:75"><name pos:start="83:9" pos:end="83:38">trace_spapr_iommu_pci_indirect</name><argument_list pos:start="83:39" pos:end="83:75">(<argument pos:start="83:40" pos:end="83:44"><expr pos:start="83:40" pos:end="83:44"><name pos:start="83:40" pos:end="83:44">liobn</name></expr></argument>, <argument pos:start="83:47" pos:end="83:51"><expr pos:start="83:47" pos:end="83:51"><name pos:start="83:47" pos:end="83:51">ioba1</name></expr></argument>, <argument pos:start="83:54" pos:end="83:61"><expr pos:start="83:54" pos:end="83:61"><name pos:start="83:54" pos:end="83:61">tce_list</name></expr></argument>, <argument pos:start="83:64" pos:end="83:64"><expr pos:start="83:64" pos:end="83:64"><name pos:start="83:64" pos:end="83:64">i</name></expr></argument>, <argument pos:start="83:67" pos:end="83:69"><expr pos:start="83:67" pos:end="83:69"><name pos:start="83:67" pos:end="83:69">tce</name></expr></argument>, <argument pos:start="83:72" pos:end="83:74"><expr pos:start="83:72" pos:end="83:74"><name pos:start="83:72" pos:end="83:74">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="89:5">else <block pos:start="85:12" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:72">

        <expr_stmt pos:start="87:9" pos:end="87:72"><expr pos:start="87:9" pos:end="87:71"><call pos:start="87:9" pos:end="87:71"><name pos:start="87:9" pos:end="87:34">trace_spapr_iommu_indirect</name><argument_list pos:start="87:35" pos:end="87:71">(<argument pos:start="87:36" pos:end="87:40"><expr pos:start="87:36" pos:end="87:40"><name pos:start="87:36" pos:end="87:40">liobn</name></expr></argument>, <argument pos:start="87:43" pos:end="87:47"><expr pos:start="87:43" pos:end="87:47"><name pos:start="87:43" pos:end="87:47">ioba1</name></expr></argument>, <argument pos:start="87:50" pos:end="87:57"><expr pos:start="87:50" pos:end="87:57"><name pos:start="87:50" pos:end="87:57">tce_list</name></expr></argument>, <argument pos:start="87:60" pos:end="87:60"><expr pos:start="87:60" pos:end="87:60"><name pos:start="87:60" pos:end="87:60">i</name></expr></argument>, <argument pos:start="87:63" pos:end="87:65"><expr pos:start="87:63" pos:end="87:65"><name pos:start="87:63" pos:end="87:65">tce</name></expr></argument>, <argument pos:start="87:68" pos:end="87:70"><expr pos:start="87:68" pos:end="87:70"><name pos:start="87:68" pos:end="87:70">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="91:5" pos:end="91:15">return <expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
