<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2413.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:5"><name pos:start="1:1" pos:end="1:5">float</name></type> <name pos:start="1:7" pos:end="1:29">ff_rate_estimate_qscale</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:60">dry_run</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="333:1">{<block_content pos:start="5:5" pos:end="331:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:9"><name pos:start="5:5" pos:end="5:9">float</name></type> <name pos:start="5:11" pos:end="5:11">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">qmin</name></decl>, <decl pos:start="7:15" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:18">qmax</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:25">br_compensation</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:15">diff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:23">short_term_q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:14">fps</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:43"><decl pos:start="17:5" pos:end="17:42"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:22">picture_number</name> <init pos:start="17:24" pos:end="17:42">= <expr pos:start="17:26" pos:end="17:42"><name pos:start="17:26" pos:end="17:42"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:42">picture_number</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:23">wanted_bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:45"><decl pos:start="21:5" pos:end="21:44"><type pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:22">RateControlContext</name> <modifier pos:start="21:24" pos:end="21:24">*</modifier></type><name pos:start="21:25" pos:end="21:27">rcc</name> <init pos:start="21:29" pos:end="21:44">= <expr pos:start="21:31" pos:end="21:44"><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:44">rc_context</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:39"><decl pos:start="23:5" pos:end="23:38"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:21">a</name>       <init pos:start="23:29" pos:end="23:38">= <expr pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:38"><name pos:start="23:31" pos:end="23:31">s</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:38">avctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:37"><decl pos:start="25:5" pos:end="25:30"><type pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:20">RateControlEntry</name></type> <name pos:start="25:22" pos:end="25:30">local_rce</name></decl>, <decl pos:start="25:33" pos:end="25:36"><type ref="prev" pos:start="25:5" pos:end="25:20"><modifier pos:start="25:33" pos:end="25:33">*</modifier></type><name pos:start="25:34" pos:end="25:36">rce</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:16"><decl pos:start="27:5" pos:end="27:15"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">double</name></type> <name pos:start="27:12" pos:end="27:15">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:10">double</name></type> <name pos:start="29:12" pos:end="29:22">rate_factor</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:12"><decl pos:start="31:5" pos:end="31:11"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:11">var</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:39"><decl pos:start="33:5" pos:end="33:38"><type pos:start="33:5" pos:end="33:13"><specifier pos:start="33:5" pos:end="33:9">const</specifier> <name pos:start="33:11" pos:end="33:13">int</name></type> <name pos:start="33:15" pos:end="33:23">pict_type</name> <init pos:start="33:25" pos:end="33:38">= <expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:38">pict_type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:46"><decl pos:start="35:5" pos:end="35:45"><type pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:11">Picture</name> <modifier pos:start="35:13" pos:end="35:13">*</modifier> <specifier pos:start="35:15" pos:end="35:19">const</specifier></type> <name pos:start="35:21" pos:end="35:23">pic</name> <init pos:start="35:25" pos:end="35:45">= <expr pos:start="35:27" pos:end="35:45"><operator pos:start="35:27" pos:end="35:27">&amp;</operator><name pos:start="35:28" pos:end="35:45"><name pos:start="35:28" pos:end="35:28">s</name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:45">current_picture</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="37:5" pos:end="42:0"><expr pos:start="37:5" pos:end="37:12"><call pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:10">emms_c</name><argument_list pos:start="37:11" pos:end="37:12">()</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="41:1" pos:end="41:18">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:18">CONFIG_LIBXVID</name></expr></cpp:if>

    <if_stmt pos:start="43:5" pos:end="50:0"><if pos:start="43:5" pos:end="50:0">if <condition pos:start="43:8" pos:end="45:53">(<expr pos:start="43:9" pos:end="45:52"><operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:17"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">flags</name></name> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <name pos:start="43:21" pos:end="43:36">CODEC_FLAG_PASS2</name><operator pos:start="43:37" pos:end="43:37">)</operator> <operator pos:start="43:39" pos:end="43:40">&amp;&amp;</operator>

        <name pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">avctx</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:29">rc_strategy</name></name> <operator pos:start="45:31" pos:end="45:32">==</operator> <name pos:start="45:34" pos:end="45:52">FF_RC_STRATEGY_XVID</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="50:0"><block_content pos:start="47:9" pos:end="50:0">

        <return pos:start="47:9" pos:end="50:0">return <expr pos:start="47:16" pos:end="47:55"><call pos:start="47:16" pos:end="47:55"><name pos:start="47:16" pos:end="47:43">ff_xvid_rate_estimate_qscale</name><argument_list pos:start="47:44" pos:end="47:55">(<argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><name pos:start="47:45" pos:end="47:45">s</name></expr></argument>, <argument pos:start="47:48" pos:end="47:54"><expr pos:start="47:48" pos:end="47:54"><name pos:start="47:48" pos:end="47:54">dry_run</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="53:5" pos:end="53:44"><expr pos:start="53:5" pos:end="53:43"><call pos:start="53:5" pos:end="53:43"><name pos:start="53:5" pos:end="53:15">get_qminmax</name><argument_list pos:start="53:16" pos:end="53:43">(<argument pos:start="53:17" pos:end="53:21"><expr pos:start="53:17" pos:end="53:21"><operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:21">qmin</name></expr></argument>, <argument pos:start="53:24" pos:end="53:28"><expr pos:start="53:24" pos:end="53:28"><operator pos:start="53:24" pos:end="53:24">&amp;</operator><name pos:start="53:25" pos:end="53:28">qmax</name></expr></argument>, <argument pos:start="53:31" pos:end="53:31"><expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">s</name></expr></argument>, <argument pos:start="53:34" pos:end="53:42"><expr pos:start="53:34" pos:end="53:42"><name pos:start="53:34" pos:end="53:42">pict_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:7">fps</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:27"><name pos:start="57:11" pos:end="57:17">get_fps</name><argument_list pos:start="57:18" pos:end="57:27">(<argument pos:start="57:19" pos:end="57:26"><expr pos:start="57:19" pos:end="57:26"><name pos:start="57:19" pos:end="57:26"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:27">/* update predictors */</comment>

    <if_stmt pos:start="61:5" pos:end="77:5"><if pos:start="61:5" pos:end="77:5">if <condition pos:start="61:8" pos:end="61:39">(<expr pos:start="61:9" pos:end="61:38"><name pos:start="61:9" pos:end="61:22">picture_number</name> <operator pos:start="61:24" pos:end="61:24">&gt;</operator> <literal type="number" pos:start="61:26" pos:end="61:26">2</literal> <operator pos:start="61:28" pos:end="61:29">&amp;&amp;</operator> <operator pos:start="61:31" pos:end="61:31">!</operator><name pos:start="61:32" pos:end="61:38">dry_run</name></expr>)</condition> <block pos:start="61:41" pos:end="77:5">{<block_content pos:start="63:9" pos:end="75:59">

        <decl_stmt pos:start="63:9" pos:end="65:94"><decl pos:start="63:9" pos:end="65:93"><type pos:start="63:9" pos:end="63:17"><specifier pos:start="63:9" pos:end="63:13">const</specifier> <name pos:start="63:15" pos:end="63:17">int</name></type> <name pos:start="63:19" pos:end="63:26">last_var</name> <init pos:start="63:28" pos:end="65:93">= <expr pos:start="63:30" pos:end="65:93"><ternary pos:start="63:30" pos:end="65:93"><condition pos:start="63:30" pos:end="63:69"><expr pos:start="63:30" pos:end="63:67"><name pos:start="63:30" pos:end="63:46"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:46">last_pict_type</name></name> <operator pos:start="63:48" pos:end="63:49">==</operator> <name pos:start="63:51" pos:end="63:67">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="63:71" pos:end="63:90"> <expr pos:start="63:71" pos:end="63:90"><name pos:start="63:71" pos:end="63:90"><name pos:start="63:71" pos:end="63:73">rcc</name><operator pos:start="63:74" pos:end="63:75">-&gt;</operator><name pos:start="63:76" pos:end="63:90">last_mb_var_sum</name></name></expr>

                                                                    </then><else pos:start="65:69" pos:end="65:93">: <expr pos:start="65:71" pos:end="65:93"><name pos:start="65:71" pos:end="65:93"><name pos:start="65:71" pos:end="65:73">rcc</name><operator pos:start="65:74" pos:end="65:75">-&gt;</operator><name pos:start="65:76" pos:end="65:93">last_mc_mb_var_sum</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:54"><expr pos:start="67:9" pos:end="67:53"><call pos:start="67:9" pos:end="67:53"><name pos:start="67:9" pos:end="67:18">av_assert1</name><argument_list pos:start="67:19" pos:end="67:53">(<argument pos:start="67:20" pos:end="67:52"><expr pos:start="67:20" pos:end="67:52"><name pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:32">frame_bits</name></name> <operator pos:start="67:34" pos:end="67:35">&gt;=</operator> <name pos:start="67:37" pos:end="67:52"><name pos:start="67:37" pos:end="67:37">s</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:52">stuffing_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="75:59"><expr pos:start="69:9" pos:end="75:58"><call pos:start="69:9" pos:end="75:58"><name pos:start="69:9" pos:end="69:24">update_predictor</name><argument_list pos:start="69:25" pos:end="75:58">(<argument pos:start="69:26" pos:end="69:54"><expr pos:start="69:26" pos:end="69:54"><operator pos:start="69:26" pos:end="69:26">&amp;</operator><name pos:start="69:27" pos:end="69:54"><name pos:start="69:27" pos:end="69:29">rcc</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:35">pred</name><index pos:start="69:36" pos:end="69:54">[<expr pos:start="69:37" pos:end="69:53"><name pos:start="69:37" pos:end="69:53"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:53">last_pict_type</name></name></expr>]</index></name></expr></argument>,

                         <argument pos:start="71:26" pos:end="71:41"><expr pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:28">rcc</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:41">last_qscale</name></name></expr></argument>,

                         <argument pos:start="73:26" pos:end="73:39"><expr pos:start="73:26" pos:end="73:39"><call pos:start="73:26" pos:end="73:39"><name pos:start="73:26" pos:end="73:29">sqrt</name><argument_list pos:start="73:30" pos:end="73:39">(<argument pos:start="73:31" pos:end="73:38"><expr pos:start="73:31" pos:end="73:38"><name pos:start="73:31" pos:end="73:38">last_var</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="75:26" pos:end="75:57"><expr pos:start="75:26" pos:end="75:57"><name pos:start="75:26" pos:end="75:38"><name pos:start="75:26" pos:end="75:26">s</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:38">frame_bits</name></name> <operator pos:start="75:40" pos:end="75:40">-</operator> <name pos:start="75:42" pos:end="75:57"><name pos:start="75:42" pos:end="75:42">s</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:57">stuffing_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="129:5"><if pos:start="81:5" pos:end="97:5">if <condition pos:start="81:8" pos:end="81:36">(<expr pos:start="81:9" pos:end="81:35"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:16">flags</name></name> <operator pos:start="81:18" pos:end="81:18">&amp;</operator> <name pos:start="81:20" pos:end="81:35">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="81:38" pos:end="97:5">{<block_content pos:start="83:9" pos:end="95:41">

        <expr_stmt pos:start="83:9" pos:end="83:36"><expr pos:start="83:9" pos:end="83:35"><call pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:14">assert</name><argument_list pos:start="83:15" pos:end="83:35">(<argument pos:start="83:16" pos:end="83:34"><expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:29">picture_number</name> <operator pos:start="83:31" pos:end="83:32">&gt;=</operator> <literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:47">(<expr pos:start="85:13" pos:end="85:46"><name pos:start="85:13" pos:end="85:26">picture_number</name> <operator pos:start="85:28" pos:end="85:29">&gt;=</operator> <name pos:start="85:31" pos:end="85:46"><name pos:start="85:31" pos:end="85:33">rcc</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:46">num_entries</name></name></expr>)</condition> <block pos:start="85:49" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:22">

            <expr_stmt pos:start="87:13" pos:end="87:78"><expr pos:start="87:13" pos:end="87:77"><call pos:start="87:13" pos:end="87:77"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:77">(<argument pos:start="87:20" pos:end="87:20"><expr pos:start="87:20" pos:end="87:20"><name pos:start="87:20" pos:end="87:20">s</name></expr></argument>, <argument pos:start="87:23" pos:end="87:34"><expr pos:start="87:23" pos:end="87:34"><name pos:start="87:23" pos:end="87:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:37" pos:end="87:76"><expr pos:start="87:37" pos:end="87:76"><literal type="string" pos:start="87:37" pos:end="87:76">"Input is longer than 2-pass log file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:50"><expr pos:start="93:9" pos:end="93:49"><name pos:start="93:9" pos:end="93:11">rce</name>         <operator pos:start="93:21" pos:end="93:21">=</operator> <operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:49"><name pos:start="93:24" pos:end="93:26">rcc</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:33">entry</name><index pos:start="93:34" pos:end="93:49">[<expr pos:start="93:35" pos:end="93:48"><name pos:start="93:35" pos:end="93:48">picture_number</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:41"><expr pos:start="95:9" pos:end="95:40"><name pos:start="95:9" pos:end="95:19">wanted_bits</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <name pos:start="95:23" pos:end="95:40"><name pos:start="95:23" pos:end="95:25">rce</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:40">expected_bits</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="129:5">else <block pos:start="97:12" pos:end="129:5">{<block_content pos:start="99:9" pos:end="127:81">

        <decl_stmt pos:start="99:9" pos:end="99:25"><decl pos:start="99:9" pos:end="99:24"><type pos:start="99:9" pos:end="99:17"><name pos:start="99:9" pos:end="99:15">Picture</name> <modifier pos:start="99:17" pos:end="99:17">*</modifier></type><name pos:start="99:18" pos:end="99:24">dts_pic</name></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:25"><expr pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:11">rce</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <operator pos:start="101:15" pos:end="101:15">&amp;</operator><name pos:start="101:16" pos:end="101:24">local_rce</name></expr>;</expr_stmt>



        <comment type="block" pos:start="105:9" pos:end="109:52">/* FIXME add a dts field to AVFrame and ensure it is set and use it

         * here instead of reordering but the reordering is simpler for now

         * until H.264 B-pyramid must be handled. */</comment>

        <if_stmt pos:start="111:9" pos:end="117:42"><if pos:start="111:9" pos:end="113:45">if <condition pos:start="111:12" pos:end="111:62">(<expr pos:start="111:13" pos:end="111:61"><name pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:24">pict_type</name></name> <operator pos:start="111:26" pos:end="111:27">==</operator> <name pos:start="111:29" pos:end="111:45">AV_PICTURE_TYPE_B</name> <operator pos:start="111:47" pos:end="111:48">||</operator> <name pos:start="111:50" pos:end="111:61"><name pos:start="111:50" pos:end="111:50">s</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:61">low_delay</name></name></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:45"><block_content pos:start="113:13" pos:end="113:45">

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:19">dts_pic</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:44"><name pos:start="113:23" pos:end="113:23">s</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:44">current_picture_ptr</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="115:9" pos:end="117:42">else<block type="pseudo" pos:start="117:13" pos:end="117:42"><block_content pos:start="117:13" pos:end="117:42">

            <expr_stmt pos:start="117:13" pos:end="117:42"><expr pos:start="117:13" pos:end="117:41"><name pos:start="117:13" pos:end="117:19">dts_pic</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:41"><name pos:start="117:23" pos:end="117:23">s</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:41">last_picture_ptr</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="121:9" pos:end="127:81"><if pos:start="121:9" pos:end="123:81">if <condition pos:start="121:12" pos:end="121:57">(<expr pos:start="121:13" pos:end="121:56"><operator pos:start="121:13" pos:end="121:13">!</operator><name pos:start="121:14" pos:end="121:20">dts_pic</name> <operator pos:start="121:22" pos:end="121:23">||</operator> <name pos:start="121:25" pos:end="121:38"><name pos:start="121:25" pos:end="121:31">dts_pic</name><operator pos:start="121:32" pos:end="121:33">-&gt;</operator><name pos:start="121:34" pos:end="121:34">f</name><operator pos:start="121:35" pos:end="121:35">.</operator><name pos:start="121:36" pos:end="121:38">pts</name></name> <operator pos:start="121:40" pos:end="121:41">==</operator> <name pos:start="121:43" pos:end="121:56">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:81"><block_content pos:start="123:13" pos:end="123:81">

            <expr_stmt pos:start="123:13" pos:end="123:81"><expr pos:start="123:13" pos:end="123:80"><name pos:start="123:13" pos:end="123:23">wanted_bits</name> <operator pos:start="123:25" pos:end="123:25">=</operator> <operator pos:start="123:27" pos:end="123:27">(</operator><name pos:start="123:28" pos:end="123:35">uint64_t</name><operator pos:start="123:36" pos:end="123:36">)</operator><operator pos:start="123:37" pos:end="123:37">(</operator><name pos:start="123:38" pos:end="123:48"><name pos:start="123:38" pos:end="123:38">s</name><operator pos:start="123:39" pos:end="123:40">-&gt;</operator><name pos:start="123:41" pos:end="123:48">bit_rate</name></name> <operator pos:start="123:50" pos:end="123:50">*</operator> <operator pos:start="123:52" pos:end="123:52">(</operator><name pos:start="123:53" pos:end="123:58">double</name><operator pos:start="123:59" pos:end="123:59">)</operator><name pos:start="123:60" pos:end="123:73">picture_number</name> <operator pos:start="123:75" pos:end="123:75">/</operator> <name pos:start="123:77" pos:end="123:79">fps</name><operator pos:start="123:80" pos:end="123:80">)</operator></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="125:9" pos:end="127:81">else<block type="pseudo" pos:start="127:13" pos:end="127:81"><block_content pos:start="127:13" pos:end="127:81">

            <expr_stmt pos:start="127:13" pos:end="127:81"><expr pos:start="127:13" pos:end="127:80"><name pos:start="127:13" pos:end="127:23">wanted_bits</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <operator pos:start="127:27" pos:end="127:27">(</operator><name pos:start="127:28" pos:end="127:35">uint64_t</name><operator pos:start="127:36" pos:end="127:36">)</operator><operator pos:start="127:37" pos:end="127:37">(</operator><name pos:start="127:38" pos:end="127:48"><name pos:start="127:38" pos:end="127:38">s</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:48">bit_rate</name></name> <operator pos:start="127:50" pos:end="127:50">*</operator> <operator pos:start="127:52" pos:end="127:52">(</operator><name pos:start="127:53" pos:end="127:58">double</name><operator pos:start="127:59" pos:end="127:59">)</operator><name pos:start="127:60" pos:end="127:73"><name pos:start="127:60" pos:end="127:66">dts_pic</name><operator pos:start="127:67" pos:end="127:68">-&gt;</operator><name pos:start="127:69" pos:end="127:69">f</name><operator pos:start="127:70" pos:end="127:70">.</operator><name pos:start="127:71" pos:end="127:73">pts</name></name> <operator pos:start="127:75" pos:end="127:75">/</operator> <name pos:start="127:77" pos:end="127:79">fps</name><operator pos:start="127:80" pos:end="127:80">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:39"><expr pos:start="133:5" pos:end="133:38"><name pos:start="133:5" pos:end="133:8">diff</name> <operator pos:start="133:10" pos:end="133:10">=</operator> <name pos:start="133:12" pos:end="133:24"><name pos:start="133:12" pos:end="133:12">s</name><operator pos:start="133:13" pos:end="133:14">-&gt;</operator><name pos:start="133:15" pos:end="133:24">total_bits</name></name> <operator pos:start="133:26" pos:end="133:26">-</operator> <name pos:start="133:28" pos:end="133:38">wanted_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:77"><expr pos:start="135:5" pos:end="135:76"><name pos:start="135:5" pos:end="135:19">br_compensation</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <operator pos:start="135:23" pos:end="135:23">(</operator><name pos:start="135:24" pos:end="135:44"><name pos:start="135:24" pos:end="135:24">a</name><operator pos:start="135:25" pos:end="135:26">-&gt;</operator><name pos:start="135:27" pos:end="135:44">bit_rate_tolerance</name></name> <operator pos:start="135:46" pos:end="135:46">-</operator> <name pos:start="135:48" pos:end="135:51">diff</name><operator pos:start="135:52" pos:end="135:52">)</operator> <operator pos:start="135:54" pos:end="135:54">/</operator> <name pos:start="135:56" pos:end="135:76"><name pos:start="135:56" pos:end="135:56">a</name><operator pos:start="135:57" pos:end="135:58">-&gt;</operator><name pos:start="135:59" pos:end="135:76">bit_rate_tolerance</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="139:32"><if pos:start="137:5" pos:end="139:32">if <condition pos:start="137:8" pos:end="137:31">(<expr pos:start="137:9" pos:end="137:30"><name pos:start="137:9" pos:end="137:23">br_compensation</name> <operator pos:start="137:25" pos:end="137:26">&lt;=</operator> <literal type="number" pos:start="137:28" pos:end="137:30">0.0</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:32"><block_content pos:start="139:9" pos:end="139:32">

        <expr_stmt pos:start="139:9" pos:end="139:32"><expr pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:23">br_compensation</name> <operator pos:start="139:25" pos:end="139:25">=</operator> <literal type="number" pos:start="139:27" pos:end="139:31">0.001</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:80"><expr pos:start="143:5" pos:end="143:79"><name pos:start="143:5" pos:end="143:7">var</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <ternary pos:start="143:11" pos:end="143:79"><condition pos:start="143:11" pos:end="143:42"><expr pos:start="143:11" pos:end="143:40"><name pos:start="143:11" pos:end="143:19">pict_type</name> <operator pos:start="143:21" pos:end="143:22">==</operator> <name pos:start="143:24" pos:end="143:40">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="143:44" pos:end="143:58"> <expr pos:start="143:44" pos:end="143:58"><name pos:start="143:44" pos:end="143:58"><name pos:start="143:44" pos:end="143:46">pic</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:58">mb_var_sum</name></name></expr> </then><else pos:start="143:60" pos:end="143:79">: <expr pos:start="143:62" pos:end="143:79"><name pos:start="143:62" pos:end="143:79"><name pos:start="143:62" pos:end="143:64">pic</name><operator pos:start="143:65" pos:end="143:66">-&gt;</operator><name pos:start="143:67" pos:end="143:79">mc_mb_var_sum</name></name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:21"><expr pos:start="147:5" pos:end="147:20"><name pos:start="147:5" pos:end="147:16">short_term_q</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <literal type="number" pos:start="147:20" pos:end="147:20">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="147:23" pos:end="147:41">/* avoid warning */</comment>

    <if_stmt pos:start="149:5" pos:end="273:5"><if pos:start="149:5" pos:end="163:5">if <condition pos:start="149:8" pos:end="149:36">(<expr pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:16"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:16">flags</name></name> <operator pos:start="149:18" pos:end="149:18">&amp;</operator> <name pos:start="149:20" pos:end="149:35">CODEC_FLAG_PASS2</name></expr>)</condition> <block pos:start="149:38" pos:end="163:5">{<block_content pos:start="151:9" pos:end="161:64">

        <if_stmt pos:start="151:9" pos:end="153:52"><if pos:start="151:9" pos:end="153:52">if <condition pos:start="151:12" pos:end="151:43">(<expr pos:start="151:13" pos:end="151:42"><name pos:start="151:13" pos:end="151:21">pict_type</name> <operator pos:start="151:23" pos:end="151:24">!=</operator> <name pos:start="151:26" pos:end="151:42">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:52"><block_content pos:start="153:13" pos:end="153:52">

            <expr_stmt pos:start="153:13" pos:end="153:52"><expr pos:start="153:13" pos:end="153:51"><call pos:start="153:13" pos:end="153:51"><name pos:start="153:13" pos:end="153:18">assert</name><argument_list pos:start="153:19" pos:end="153:51">(<argument pos:start="153:20" pos:end="153:50"><expr pos:start="153:20" pos:end="153:50"><name pos:start="153:20" pos:end="153:28">pict_type</name> <operator pos:start="153:30" pos:end="153:31">==</operator> <name pos:start="153:33" pos:end="153:50"><name pos:start="153:33" pos:end="153:35">rce</name><operator pos:start="153:36" pos:end="153:37">-&gt;</operator><name pos:start="153:38" pos:end="153:50">new_pict_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:46"><expr pos:start="157:9" pos:end="157:45"><name pos:start="157:9" pos:end="157:9">q</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:15">rce</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:27">new_qscale</name></name> <operator pos:start="157:29" pos:end="157:29">/</operator> <name pos:start="157:31" pos:end="157:45">br_compensation</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="161:64"><expr pos:start="159:9" pos:end="161:63"><call pos:start="159:9" pos:end="161:63"><name pos:start="159:9" pos:end="159:15">av_dlog</name><argument_list pos:start="159:16" pos:end="161:63">(<argument pos:start="159:17" pos:end="159:17"><expr pos:start="159:17" pos:end="159:17"><name pos:start="159:17" pos:end="159:17">s</name></expr></argument>, <argument pos:start="159:20" pos:end="159:56"><expr pos:start="159:20" pos:end="159:56"><literal type="string" pos:start="159:20" pos:end="159:56">"%f %f %f last:%d var:%d type:%d//\n"</literal></expr></argument>, <argument pos:start="159:59" pos:end="159:59"><expr pos:start="159:59" pos:end="159:59"><name pos:start="159:59" pos:end="159:59">q</name></expr></argument>, <argument pos:start="159:62" pos:end="159:76"><expr pos:start="159:62" pos:end="159:76"><name pos:start="159:62" pos:end="159:76"><name pos:start="159:62" pos:end="159:64">rce</name><operator pos:start="159:65" pos:end="159:66">-&gt;</operator><name pos:start="159:67" pos:end="159:76">new_qscale</name></name></expr></argument>,

                <argument pos:start="161:17" pos:end="161:31"><expr pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:31">br_compensation</name></expr></argument>, <argument pos:start="161:34" pos:end="161:46"><expr pos:start="161:34" pos:end="161:46"><name pos:start="161:34" pos:end="161:46"><name pos:start="161:34" pos:end="161:34">s</name><operator pos:start="161:35" pos:end="161:36">-&gt;</operator><name pos:start="161:37" pos:end="161:46">frame_bits</name></name></expr></argument>, <argument pos:start="161:49" pos:end="161:51"><expr pos:start="161:49" pos:end="161:51"><name pos:start="161:49" pos:end="161:51">var</name></expr></argument>, <argument pos:start="161:54" pos:end="161:62"><expr pos:start="161:54" pos:end="161:62"><name pos:start="161:54" pos:end="161:62">pict_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="163:7" pos:end="273:5">else <block pos:start="163:12" pos:end="273:5">{<block_content pos:start="165:9" pos:end="271:24">

        <expr_stmt pos:start="165:9" pos:end="167:39"><expr pos:start="165:9" pos:end="167:38"><name pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:11">rce</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:22">pict_type</name></name>     <operator pos:start="165:28" pos:end="165:28">=</operator>

        <name pos:start="167:9" pos:end="167:26"><name pos:start="167:9" pos:end="167:11">rce</name><operator pos:start="167:12" pos:end="167:13">-&gt;</operator><name pos:start="167:14" pos:end="167:26">new_pict_type</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:38">pict_type</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:48"><expr pos:start="169:9" pos:end="169:47"><name pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:11">rce</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:26">mc_mb_var_sum</name></name> <operator pos:start="169:28" pos:end="169:28">=</operator> <name pos:start="169:30" pos:end="169:47"><name pos:start="169:30" pos:end="169:32">pic</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:47">mc_mb_var_sum</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:45"><expr pos:start="171:9" pos:end="171:44"><name pos:start="171:9" pos:end="171:23"><name pos:start="171:9" pos:end="171:11">rce</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:23">mb_var_sum</name></name>    <operator pos:start="171:28" pos:end="171:28">=</operator> <name pos:start="171:30" pos:end="171:44"><name pos:start="171:30" pos:end="171:32">pic</name><operator pos:start="171:33" pos:end="171:34">-&gt;</operator><name pos:start="171:35" pos:end="171:44">mb_var_sum</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:46"><expr pos:start="173:9" pos:end="173:45"><name pos:start="173:9" pos:end="173:19"><name pos:start="173:9" pos:end="173:11">rce</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:19">qscale</name></name>        <operator pos:start="173:28" pos:end="173:28">=</operator> <name pos:start="173:30" pos:end="173:41">FF_QP2LAMBDA</name> <operator pos:start="173:43" pos:end="173:43">*</operator> <literal type="number" pos:start="173:45" pos:end="173:45">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:39"><expr pos:start="175:9" pos:end="175:38"><name pos:start="175:9" pos:end="175:19"><name pos:start="175:9" pos:end="175:11">rce</name><operator pos:start="175:12" pos:end="175:13">-&gt;</operator><name pos:start="175:14" pos:end="175:19">f_code</name></name>        <operator pos:start="175:28" pos:end="175:28">=</operator> <name pos:start="175:30" pos:end="175:38"><name pos:start="175:30" pos:end="175:30">s</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:38">f_code</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:39"><expr pos:start="177:9" pos:end="177:38"><name pos:start="177:9" pos:end="177:19"><name pos:start="177:9" pos:end="177:11">rce</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:19">b_code</name></name>        <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:38"><name pos:start="177:30" pos:end="177:30">s</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:38">b_code</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:31"><expr pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:22"><name pos:start="179:9" pos:end="179:11">rce</name><operator pos:start="179:12" pos:end="179:13">-&gt;</operator><name pos:start="179:14" pos:end="179:22">misc_bits</name></name>     <operator pos:start="179:28" pos:end="179:28">=</operator> <literal type="number" pos:start="179:30" pos:end="179:30">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:75"><expr pos:start="183:9" pos:end="183:74"><name pos:start="183:9" pos:end="183:12">bits</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <call pos:start="183:16" pos:end="183:74"><name pos:start="183:16" pos:end="183:27">predict_size</name><argument_list pos:start="183:28" pos:end="183:74">(<argument pos:start="183:29" pos:end="183:49"><expr pos:start="183:29" pos:end="183:49"><operator pos:start="183:29" pos:end="183:29">&amp;</operator><name pos:start="183:30" pos:end="183:49"><name pos:start="183:30" pos:end="183:32">rcc</name><operator pos:start="183:33" pos:end="183:34">-&gt;</operator><name pos:start="183:35" pos:end="183:38">pred</name><index pos:start="183:39" pos:end="183:49">[<expr pos:start="183:40" pos:end="183:48"><name pos:start="183:40" pos:end="183:48">pict_type</name></expr>]</index></name></expr></argument>, <argument pos:start="183:52" pos:end="183:62"><expr pos:start="183:52" pos:end="183:62"><name pos:start="183:52" pos:end="183:62"><name pos:start="183:52" pos:end="183:54">rce</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:62">qscale</name></name></expr></argument>, <argument pos:start="183:65" pos:end="183:73"><expr pos:start="183:65" pos:end="183:73"><call pos:start="183:65" pos:end="183:73"><name pos:start="183:65" pos:end="183:68">sqrt</name><argument_list pos:start="183:69" pos:end="183:73">(<argument pos:start="183:70" pos:end="183:72"><expr pos:start="183:70" pos:end="183:72"><name pos:start="183:70" pos:end="183:72">var</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="185:9" pos:end="205:9"><if pos:start="185:9" pos:end="195:9">if <condition pos:start="185:12" pos:end="185:43">(<expr pos:start="185:13" pos:end="185:42"><name pos:start="185:13" pos:end="185:21">pict_type</name> <operator pos:start="185:23" pos:end="185:24">==</operator> <name pos:start="185:26" pos:end="185:42">AV_PICTURE_TYPE_I</name></expr>)</condition> <block pos:start="185:45" pos:end="195:9">{<block_content pos:start="187:13" pos:end="193:32">

            <expr_stmt pos:start="187:13" pos:end="187:40"><expr pos:start="187:13" pos:end="187:39"><name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:15">rce</name><operator pos:start="187:16" pos:end="187:17">-&gt;</operator><name pos:start="187:18" pos:end="187:24">i_count</name></name>    <operator pos:start="187:29" pos:end="187:29">=</operator> <name pos:start="187:31" pos:end="187:39"><name pos:start="187:31" pos:end="187:31">s</name><operator pos:start="187:32" pos:end="187:33">-&gt;</operator><name pos:start="187:34" pos:end="187:39">mb_num</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:35"><expr pos:start="189:13" pos:end="189:34"><name pos:start="189:13" pos:end="189:27"><name pos:start="189:13" pos:end="189:15">rce</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:27">i_tex_bits</name></name> <operator pos:start="189:29" pos:end="189:29">=</operator> <name pos:start="189:31" pos:end="189:34">bits</name></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:32"><expr pos:start="191:13" pos:end="191:31"><name pos:start="191:13" pos:end="191:27"><name pos:start="191:13" pos:end="191:15">rce</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:27">p_tex_bits</name></name> <operator pos:start="191:29" pos:end="191:29">=</operator> <literal type="number" pos:start="191:31" pos:end="191:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:32"><expr pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:24"><name pos:start="193:13" pos:end="193:15">rce</name><operator pos:start="193:16" pos:end="193:17">-&gt;</operator><name pos:start="193:18" pos:end="193:24">mv_bits</name></name>    <operator pos:start="193:29" pos:end="193:29">=</operator> <literal type="number" pos:start="193:31" pos:end="193:31">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="195:11" pos:end="205:9">else <block pos:start="195:16" pos:end="205:9">{<block_content pos:start="197:13" pos:end="203:41">

            <expr_stmt pos:start="197:13" pos:end="197:32"><expr pos:start="197:13" pos:end="197:31"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:15">rce</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:24">i_count</name></name>    <operator pos:start="197:29" pos:end="197:29">=</operator> <literal type="number" pos:start="197:31" pos:end="197:31">0</literal></expr>;</expr_stmt>    <comment type="line" pos:start="197:37" pos:end="197:67">// FIXME we do know this approx</comment>

            <expr_stmt pos:start="199:13" pos:end="199:32"><expr pos:start="199:13" pos:end="199:31"><name pos:start="199:13" pos:end="199:27"><name pos:start="199:13" pos:end="199:15">rce</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:27">i_tex_bits</name></name> <operator pos:start="199:29" pos:end="199:29">=</operator> <literal type="number" pos:start="199:31" pos:end="199:31">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:41"><expr pos:start="201:13" pos:end="201:40"><name pos:start="201:13" pos:end="201:27"><name pos:start="201:13" pos:end="201:15">rce</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:27">p_tex_bits</name></name> <operator pos:start="201:29" pos:end="201:29">=</operator> <name pos:start="201:31" pos:end="201:34">bits</name> <operator pos:start="201:36" pos:end="201:36">*</operator> <literal type="number" pos:start="201:38" pos:end="201:40">0.9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:41"><expr pos:start="203:13" pos:end="203:40"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:15">rce</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:24">mv_bits</name></name>    <operator pos:start="203:29" pos:end="203:29">=</operator> <name pos:start="203:31" pos:end="203:34">bits</name> <operator pos:start="203:36" pos:end="203:36">*</operator> <literal type="number" pos:start="203:38" pos:end="203:40">0.1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:69"><expr pos:start="207:9" pos:end="207:68"><name pos:start="207:9" pos:end="207:34"><name pos:start="207:9" pos:end="207:11">rcc</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:23">i_cplx_sum</name><index pos:start="207:24" pos:end="207:34">[<expr pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:33">pict_type</name></expr>]</index></name>  <operator pos:start="207:37" pos:end="207:38">+=</operator> <name pos:start="207:40" pos:end="207:54"><name pos:start="207:40" pos:end="207:42">rce</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:54">i_tex_bits</name></name> <operator pos:start="207:56" pos:end="207:56">*</operator> <name pos:start="207:58" pos:end="207:68"><name pos:start="207:58" pos:end="207:60">rce</name><operator pos:start="207:61" pos:end="207:62">-&gt;</operator><name pos:start="207:63" pos:end="207:68">qscale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:69"><expr pos:start="209:9" pos:end="209:68"><name pos:start="209:9" pos:end="209:34"><name pos:start="209:9" pos:end="209:11">rcc</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:23">p_cplx_sum</name><index pos:start="209:24" pos:end="209:34">[<expr pos:start="209:25" pos:end="209:33"><name pos:start="209:25" pos:end="209:33">pict_type</name></expr>]</index></name>  <operator pos:start="209:37" pos:end="209:38">+=</operator> <name pos:start="209:40" pos:end="209:54"><name pos:start="209:40" pos:end="209:42">rce</name><operator pos:start="209:43" pos:end="209:44">-&gt;</operator><name pos:start="209:45" pos:end="209:54">p_tex_bits</name></name> <operator pos:start="209:56" pos:end="209:56">*</operator> <name pos:start="209:58" pos:end="209:68"><name pos:start="209:58" pos:end="209:60">rce</name><operator pos:start="209:61" pos:end="209:62">-&gt;</operator><name pos:start="209:63" pos:end="209:68">qscale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:52"><expr pos:start="211:9" pos:end="211:51"><name pos:start="211:9" pos:end="211:35"><name pos:start="211:9" pos:end="211:11">rcc</name><operator pos:start="211:12" pos:end="211:13">-&gt;</operator><name pos:start="211:14" pos:end="211:24">mv_bits_sum</name><index pos:start="211:25" pos:end="211:35">[<expr pos:start="211:26" pos:end="211:34"><name pos:start="211:26" pos:end="211:34">pict_type</name></expr>]</index></name> <operator pos:start="211:37" pos:end="211:38">+=</operator> <name pos:start="211:40" pos:end="211:51"><name pos:start="211:40" pos:end="211:42">rce</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:51">mv_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:38"><expr pos:start="213:9" pos:end="213:37"><name pos:start="213:9" pos:end="213:35"><name pos:start="213:9" pos:end="213:11">rcc</name><operator pos:start="213:12" pos:end="213:13">-&gt;</operator><name pos:start="213:14" pos:end="213:24">frame_count</name><index pos:start="213:25" pos:end="213:35">[<expr pos:start="213:26" pos:end="213:34"><name pos:start="213:26" pos:end="213:34">pict_type</name></expr>]</index></name><operator pos:start="213:36" pos:end="213:37">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:56"><expr pos:start="217:9" pos:end="217:55"><name pos:start="217:9" pos:end="217:12">bits</name>        <operator pos:start="217:21" pos:end="217:21">=</operator> <name pos:start="217:23" pos:end="217:37"><name pos:start="217:23" pos:end="217:25">rce</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:37">i_tex_bits</name></name> <operator pos:start="217:39" pos:end="217:39">+</operator> <name pos:start="217:41" pos:end="217:55"><name pos:start="217:41" pos:end="217:43">rce</name><operator pos:start="217:44" pos:end="217:45">-&gt;</operator><name pos:start="217:46" pos:end="217:55">p_tex_bits</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="221:68"><expr pos:start="219:9" pos:end="221:67"><name pos:start="219:9" pos:end="219:19">rate_factor</name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:44"><name pos:start="219:23" pos:end="219:25">rcc</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:44">pass1_wanted_bits</name></name> <operator pos:start="219:46" pos:end="219:46">/</operator>

                      <name pos:start="221:23" pos:end="221:49"><name pos:start="221:23" pos:end="221:25">rcc</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:49">pass1_rc_eq_output_sum</name></name> <operator pos:start="221:51" pos:end="221:51">*</operator> <name pos:start="221:53" pos:end="221:67">br_compensation</name></expr>;</expr_stmt>



        <expr_stmt pos:start="225:9" pos:end="225:60"><expr pos:start="225:9" pos:end="225:59"><name pos:start="225:9" pos:end="225:9">q</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <call pos:start="225:13" pos:end="225:59"><name pos:start="225:13" pos:end="225:22">get_qscale</name><argument_list pos:start="225:23" pos:end="225:59">(<argument pos:start="225:24" pos:end="225:24"><expr pos:start="225:24" pos:end="225:24"><name pos:start="225:24" pos:end="225:24">s</name></expr></argument>, <argument pos:start="225:27" pos:end="225:29"><expr pos:start="225:27" pos:end="225:29"><name pos:start="225:27" pos:end="225:29">rce</name></expr></argument>, <argument pos:start="225:32" pos:end="225:42"><expr pos:start="225:32" pos:end="225:42"><name pos:start="225:32" pos:end="225:42">rate_factor</name></expr></argument>, <argument pos:start="225:45" pos:end="225:58"><expr pos:start="225:45" pos:end="225:58"><name pos:start="225:45" pos:end="225:58">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="229:22"><if pos:start="227:9" pos:end="229:22">if <condition pos:start="227:12" pos:end="227:18">(<expr pos:start="227:13" pos:end="227:17"><name pos:start="227:13" pos:end="227:13">q</name> <operator pos:start="227:15" pos:end="227:15">&lt;</operator> <literal type="number" pos:start="227:17" pos:end="227:17">0</literal></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:22"><block_content pos:start="229:13" pos:end="229:22">

            <return pos:start="229:13" pos:end="229:22">return <expr pos:start="229:20" pos:end="229:21"><operator pos:start="229:20" pos:end="229:20">-</operator><literal type="number" pos:start="229:21" pos:end="229:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="233:9" pos:end="233:24"><expr pos:start="233:9" pos:end="233:23"><call pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:14">assert</name><argument_list pos:start="233:15" pos:end="233:23">(<argument pos:start="233:16" pos:end="233:22"><expr pos:start="233:16" pos:end="233:22"><name pos:start="233:16" pos:end="233:16">q</name> <operator pos:start="233:18" pos:end="233:18">&gt;</operator> <literal type="number" pos:start="233:20" pos:end="233:22">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:42"><expr pos:start="235:9" pos:end="235:41"><name pos:start="235:9" pos:end="235:9">q</name> <operator pos:start="235:11" pos:end="235:11">=</operator> <call pos:start="235:13" pos:end="235:41"><name pos:start="235:13" pos:end="235:30">get_diff_limited_q</name><argument_list pos:start="235:31" pos:end="235:41">(<argument pos:start="235:32" pos:end="235:32"><expr pos:start="235:32" pos:end="235:32"><name pos:start="235:32" pos:end="235:32">s</name></expr></argument>, <argument pos:start="235:35" pos:end="235:37"><expr pos:start="235:35" pos:end="235:37"><name pos:start="235:35" pos:end="235:37">rce</name></expr></argument>, <argument pos:start="235:40" pos:end="235:40"><expr pos:start="235:40" pos:end="235:40"><name pos:start="235:40" pos:end="235:40">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:24"><expr pos:start="237:9" pos:end="237:23"><call pos:start="237:9" pos:end="237:23"><name pos:start="237:9" pos:end="237:14">assert</name><argument_list pos:start="237:15" pos:end="237:23">(<argument pos:start="237:16" pos:end="237:22"><expr pos:start="237:16" pos:end="237:22"><name pos:start="237:16" pos:end="237:16">q</name> <operator pos:start="237:18" pos:end="237:18">&gt;</operator> <literal type="number" pos:start="237:20" pos:end="237:22">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="241:9" pos:end="241:51">// FIXME type dependent blur like in 2-pass</comment>

        <if_stmt pos:start="243:9" pos:end="257:9"><if pos:start="243:9" pos:end="257:9">if <condition pos:start="243:12" pos:end="243:60">(<expr pos:start="243:13" pos:end="243:59"><name pos:start="243:13" pos:end="243:21">pict_type</name> <operator pos:start="243:23" pos:end="243:24">==</operator> <name pos:start="243:26" pos:end="243:42">AV_PICTURE_TYPE_P</name> <operator pos:start="243:44" pos:end="243:45">||</operator> <name pos:start="243:47" pos:end="243:59"><name pos:start="243:47" pos:end="243:47">s</name><operator pos:start="243:48" pos:end="243:49">-&gt;</operator><name pos:start="243:50" pos:end="243:59">intra_only</name></name></expr>)</condition> <block pos:start="243:62" pos:end="257:9">{<block_content pos:start="245:13" pos:end="255:77">

            <expr_stmt pos:start="245:13" pos:end="245:47"><expr pos:start="245:13" pos:end="245:46"><name pos:start="245:13" pos:end="245:32"><name pos:start="245:13" pos:end="245:15">rcc</name><operator pos:start="245:16" pos:end="245:17">-&gt;</operator><name pos:start="245:18" pos:end="245:32">short_term_qsum</name></name>   <operator pos:start="245:36" pos:end="245:37">*=</operator> <name pos:start="245:39" pos:end="245:46"><name pos:start="245:39" pos:end="245:39">a</name><operator pos:start="245:40" pos:end="245:41">-&gt;</operator><name pos:start="245:42" pos:end="245:46">qblur</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:47"><expr pos:start="247:13" pos:end="247:46"><name pos:start="247:13" pos:end="247:34"><name pos:start="247:13" pos:end="247:15">rcc</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:34">short_term_qcount</name></name> <operator pos:start="247:36" pos:end="247:37">*=</operator> <name pos:start="247:39" pos:end="247:46"><name pos:start="247:39" pos:end="247:39">a</name><operator pos:start="247:40" pos:end="247:41">-&gt;</operator><name pos:start="247:42" pos:end="247:46">qblur</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="251:13" pos:end="251:38"><expr pos:start="251:13" pos:end="251:37"><name pos:start="251:13" pos:end="251:32"><name pos:start="251:13" pos:end="251:15">rcc</name><operator pos:start="251:16" pos:end="251:17">-&gt;</operator><name pos:start="251:18" pos:end="251:32">short_term_qsum</name></name> <operator pos:start="251:34" pos:end="251:35">+=</operator> <name pos:start="251:37" pos:end="251:37">q</name></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:37"><expr pos:start="253:13" pos:end="253:36"><name pos:start="253:13" pos:end="253:34"><name pos:start="253:13" pos:end="253:15">rcc</name><operator pos:start="253:16" pos:end="253:17">-&gt;</operator><name pos:start="253:18" pos:end="253:34">short_term_qcount</name></name><operator pos:start="253:35" pos:end="253:36">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:77"><expr pos:start="255:13" pos:end="255:76"><name pos:start="255:13" pos:end="255:13">q</name> <operator pos:start="255:15" pos:end="255:15">=</operator> <name pos:start="255:17" pos:end="255:28">short_term_q</name> <operator pos:start="255:30" pos:end="255:30">=</operator> <name pos:start="255:32" pos:end="255:51"><name pos:start="255:32" pos:end="255:34">rcc</name><operator pos:start="255:35" pos:end="255:36">-&gt;</operator><name pos:start="255:37" pos:end="255:51">short_term_qsum</name></name> <operator pos:start="255:53" pos:end="255:53">/</operator> <name pos:start="255:55" pos:end="255:76"><name pos:start="255:55" pos:end="255:57">rcc</name><operator pos:start="255:58" pos:end="255:59">-&gt;</operator><name pos:start="255:60" pos:end="255:76">short_term_qcount</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:24"><expr pos:start="259:9" pos:end="259:23"><call pos:start="259:9" pos:end="259:23"><name pos:start="259:9" pos:end="259:14">assert</name><argument_list pos:start="259:15" pos:end="259:23">(<argument pos:start="259:16" pos:end="259:22"><expr pos:start="259:16" pos:end="259:22"><name pos:start="259:16" pos:end="259:16">q</name> <operator pos:start="259:18" pos:end="259:18">&gt;</operator> <literal type="number" pos:start="259:20" pos:end="259:22">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="263:9" pos:end="263:53"><expr pos:start="263:9" pos:end="263:52"><name pos:start="263:9" pos:end="263:9">q</name> <operator pos:start="263:11" pos:end="263:11">=</operator> <call pos:start="263:13" pos:end="263:52"><name pos:start="263:13" pos:end="263:25">modify_qscale</name><argument_list pos:start="263:26" pos:end="263:52">(<argument pos:start="263:27" pos:end="263:27"><expr pos:start="263:27" pos:end="263:27"><name pos:start="263:27" pos:end="263:27">s</name></expr></argument>, <argument pos:start="263:30" pos:end="263:32"><expr pos:start="263:30" pos:end="263:32"><name pos:start="263:30" pos:end="263:32">rce</name></expr></argument>, <argument pos:start="263:35" pos:end="263:35"><expr pos:start="263:35" pos:end="263:35"><name pos:start="263:35" pos:end="263:35">q</name></expr></argument>, <argument pos:start="263:38" pos:end="263:51"><expr pos:start="263:38" pos:end="263:51"><name pos:start="263:38" pos:end="263:51">picture_number</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="267:9" pos:end="267:52"><expr pos:start="267:9" pos:end="267:51"><name pos:start="267:9" pos:end="267:30"><name pos:start="267:9" pos:end="267:11">rcc</name><operator pos:start="267:12" pos:end="267:13">-&gt;</operator><name pos:start="267:14" pos:end="267:30">pass1_wanted_bits</name></name> <operator pos:start="267:32" pos:end="267:33">+=</operator> <name pos:start="267:35" pos:end="267:45"><name pos:start="267:35" pos:end="267:35">s</name><operator pos:start="267:36" pos:end="267:37">-&gt;</operator><name pos:start="267:38" pos:end="267:45">bit_rate</name></name> <operator pos:start="267:47" pos:end="267:47">/</operator> <name pos:start="267:49" pos:end="267:51">fps</name></expr>;</expr_stmt>



        <expr_stmt pos:start="271:9" pos:end="271:24"><expr pos:start="271:9" pos:end="271:23"><call pos:start="271:9" pos:end="271:23"><name pos:start="271:9" pos:end="271:14">assert</name><argument_list pos:start="271:15" pos:end="271:23">(<argument pos:start="271:16" pos:end="271:22"><expr pos:start="271:16" pos:end="271:22"><name pos:start="271:16" pos:end="271:16">q</name> <operator pos:start="271:18" pos:end="271:18">&gt;</operator> <literal type="number" pos:start="271:20" pos:end="271:22">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="277:5" pos:end="297:5"><if pos:start="277:5" pos:end="297:5">if <condition pos:start="277:8" pos:end="277:38">(<expr pos:start="277:9" pos:end="277:37"><name pos:start="277:9" pos:end="277:23"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:16">avctx</name><operator pos:start="277:17" pos:end="277:18">-&gt;</operator><name pos:start="277:19" pos:end="277:23">debug</name></name> <operator pos:start="277:25" pos:end="277:25">&amp;</operator> <name pos:start="277:27" pos:end="277:37">FF_DEBUG_RC</name></expr>)</condition> <block pos:start="277:40" pos:end="297:5">{<block_content pos:start="279:9" pos:end="295:45">

        <expr_stmt pos:start="279:9" pos:end="295:45"><expr pos:start="279:9" pos:end="295:44"><call pos:start="279:9" pos:end="295:44"><name pos:start="279:9" pos:end="279:14">av_log</name><argument_list pos:start="279:15" pos:end="295:44">(<argument pos:start="279:16" pos:end="279:23"><expr pos:start="279:16" pos:end="279:23"><name pos:start="279:16" pos:end="279:23"><name pos:start="279:16" pos:end="279:16">s</name><operator pos:start="279:17" pos:end="279:18">-&gt;</operator><name pos:start="279:19" pos:end="279:23">avctx</name></name></expr></argument>, <argument pos:start="279:26" pos:end="279:37"><expr pos:start="279:26" pos:end="279:37"><name pos:start="279:26" pos:end="279:37">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="281:16" pos:end="283:63"><expr pos:start="281:16" pos:end="283:63"><literal type="string" pos:start="281:16" pos:end="281:74">"%c qp:%d&lt;%2.1f&lt;%d %d want:%d total:%d comp:%f st_q:%2.2f "</literal>

               <literal type="string" pos:start="283:16" pos:end="283:30">"size:%d var:%"</literal><name pos:start="283:31" pos:end="283:36">PRId64</name><literal type="string" pos:start="283:37" pos:end="283:40">"/%"</literal><name pos:start="283:41" pos:end="283:46">PRId64</name><literal type="string" pos:start="283:47" pos:end="283:63">" br:%d fps:%d\n"</literal></expr></argument>,

               <argument pos:start="285:16" pos:end="285:50"><expr pos:start="285:16" pos:end="285:50"><call pos:start="285:16" pos:end="285:50"><name pos:start="285:16" pos:end="285:39">av_get_picture_type_char</name><argument_list pos:start="285:40" pos:end="285:50">(<argument pos:start="285:41" pos:end="285:49"><expr pos:start="285:41" pos:end="285:49"><name pos:start="285:41" pos:end="285:49">pict_type</name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="287:16" pos:end="287:19"><expr pos:start="287:16" pos:end="287:19"><name pos:start="287:16" pos:end="287:19">qmin</name></expr></argument>, <argument pos:start="287:22" pos:end="287:22"><expr pos:start="287:22" pos:end="287:22"><name pos:start="287:22" pos:end="287:22">q</name></expr></argument>, <argument pos:start="287:25" pos:end="287:28"><expr pos:start="287:25" pos:end="287:28"><name pos:start="287:25" pos:end="287:28">qmax</name></expr></argument>, <argument pos:start="287:31" pos:end="287:44"><expr pos:start="287:31" pos:end="287:44"><name pos:start="287:31" pos:end="287:44">picture_number</name></expr></argument>,

               <argument pos:start="289:16" pos:end="289:38"><expr pos:start="289:16" pos:end="289:38"><operator pos:start="289:16" pos:end="289:16">(</operator><name pos:start="289:17" pos:end="289:19">int</name><operator pos:start="289:20" pos:end="289:20">)</operator><name pos:start="289:21" pos:end="289:31">wanted_bits</name> <operator pos:start="289:33" pos:end="289:33">/</operator> <literal type="number" pos:start="289:35" pos:end="289:38">1000</literal></expr></argument>, <argument pos:start="289:41" pos:end="289:65"><expr pos:start="289:41" pos:end="289:65"><operator pos:start="289:41" pos:end="289:41">(</operator><name pos:start="289:42" pos:end="289:44">int</name><operator pos:start="289:45" pos:end="289:45">)</operator><name pos:start="289:46" pos:end="289:58"><name pos:start="289:46" pos:end="289:46">s</name><operator pos:start="289:47" pos:end="289:48">-&gt;</operator><name pos:start="289:49" pos:end="289:58">total_bits</name></name> <operator pos:start="289:60" pos:end="289:60">/</operator> <literal type="number" pos:start="289:62" pos:end="289:65">1000</literal></expr></argument>,

               <argument pos:start="291:16" pos:end="291:30"><expr pos:start="291:16" pos:end="291:30"><name pos:start="291:16" pos:end="291:30">br_compensation</name></expr></argument>, <argument pos:start="291:33" pos:end="291:44"><expr pos:start="291:33" pos:end="291:44"><name pos:start="291:33" pos:end="291:44">short_term_q</name></expr></argument>, <argument pos:start="291:47" pos:end="291:59"><expr pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:47">s</name><operator pos:start="291:48" pos:end="291:49">-&gt;</operator><name pos:start="291:50" pos:end="291:59">frame_bits</name></name></expr></argument>,

               <argument pos:start="293:16" pos:end="293:30"><expr pos:start="293:16" pos:end="293:30"><name pos:start="293:16" pos:end="293:30"><name pos:start="293:16" pos:end="293:18">pic</name><operator pos:start="293:19" pos:end="293:20">-&gt;</operator><name pos:start="293:21" pos:end="293:30">mb_var_sum</name></name></expr></argument>, <argument pos:start="293:33" pos:end="293:50"><expr pos:start="293:33" pos:end="293:50"><name pos:start="293:33" pos:end="293:50"><name pos:start="293:33" pos:end="293:35">pic</name><operator pos:start="293:36" pos:end="293:37">-&gt;</operator><name pos:start="293:38" pos:end="293:50">mc_mb_var_sum</name></name></expr></argument>,

               <argument pos:start="295:16" pos:end="295:33"><expr pos:start="295:16" pos:end="295:33"><name pos:start="295:16" pos:end="295:26"><name pos:start="295:16" pos:end="295:16">s</name><operator pos:start="295:17" pos:end="295:18">-&gt;</operator><name pos:start="295:19" pos:end="295:26">bit_rate</name></name> <operator pos:start="295:28" pos:end="295:28">/</operator> <literal type="number" pos:start="295:30" pos:end="295:33">1000</literal></expr></argument>, <argument pos:start="295:36" pos:end="295:43"><expr pos:start="295:36" pos:end="295:43"><operator pos:start="295:36" pos:end="295:36">(</operator><name pos:start="295:37" pos:end="295:39">int</name><operator pos:start="295:40" pos:end="295:40">)</operator><name pos:start="295:41" pos:end="295:43">fps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="301:5" pos:end="307:17"><if pos:start="301:5" pos:end="303:17">if <condition pos:start="301:8" pos:end="301:17">(<expr pos:start="301:9" pos:end="301:16"><name pos:start="301:9" pos:end="301:9">q</name> <operator pos:start="301:11" pos:end="301:11">&lt;</operator> <name pos:start="301:13" pos:end="301:16">qmin</name></expr>)</condition><block type="pseudo" pos:start="303:9" pos:end="303:17"><block_content pos:start="303:9" pos:end="303:17">

        <expr_stmt pos:start="303:9" pos:end="303:17"><expr pos:start="303:9" pos:end="303:16"><name pos:start="303:9" pos:end="303:9">q</name> <operator pos:start="303:11" pos:end="303:11">=</operator> <name pos:start="303:13" pos:end="303:16">qmin</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="305:5" pos:end="307:17">else if <condition pos:start="305:13" pos:end="305:22">(<expr pos:start="305:14" pos:end="305:21"><name pos:start="305:14" pos:end="305:14">q</name> <operator pos:start="305:16" pos:end="305:16">&gt;</operator> <name pos:start="305:18" pos:end="305:21">qmax</name></expr>)</condition><block type="pseudo" pos:start="307:9" pos:end="307:17"><block_content pos:start="307:9" pos:end="307:17">

        <expr_stmt pos:start="307:9" pos:end="307:17"><expr pos:start="307:9" pos:end="307:16"><name pos:start="307:9" pos:end="307:9">q</name> <operator pos:start="307:11" pos:end="307:11">=</operator> <name pos:start="307:13" pos:end="307:16">qmax</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="311:5" pos:end="317:27"><if pos:start="311:5" pos:end="313:36">if <condition pos:start="311:8" pos:end="311:26">(<expr pos:start="311:9" pos:end="311:25"><name pos:start="311:9" pos:end="311:25"><name pos:start="311:9" pos:end="311:9">s</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:25">adaptive_quant</name></name></expr>)</condition><block type="pseudo" pos:start="313:9" pos:end="313:36"><block_content pos:start="313:9" pos:end="313:36">

        <expr_stmt pos:start="313:9" pos:end="313:36"><expr pos:start="313:9" pos:end="313:35"><call pos:start="313:9" pos:end="313:35"><name pos:start="313:9" pos:end="313:29">adaptive_quantization</name><argument_list pos:start="313:30" pos:end="313:35">(<argument pos:start="313:31" pos:end="313:31"><expr pos:start="313:31" pos:end="313:31"><name pos:start="313:31" pos:end="313:31">s</name></expr></argument>, <argument pos:start="313:34" pos:end="313:34"><expr pos:start="313:34" pos:end="313:34"><name pos:start="313:34" pos:end="313:34">q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="315:5" pos:end="317:27">else<block type="pseudo" pos:start="317:9" pos:end="317:27"><block_content pos:start="317:9" pos:end="317:27">

        <expr_stmt pos:start="317:9" pos:end="317:27"><expr pos:start="317:9" pos:end="317:26"><name pos:start="317:9" pos:end="317:9">q</name> <operator pos:start="317:11" pos:end="317:11">=</operator> <operator pos:start="317:13" pos:end="317:13">(</operator><name pos:start="317:14" pos:end="317:16">int</name><operator pos:start="317:17" pos:end="317:17">)</operator><operator pos:start="317:18" pos:end="317:18">(</operator><name pos:start="317:19" pos:end="317:19">q</name> <operator pos:start="317:21" pos:end="317:21">+</operator> <literal type="number" pos:start="317:23" pos:end="317:25">0.5</literal><operator pos:start="317:26" pos:end="317:26">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="321:5" pos:end="329:5"><if pos:start="321:5" pos:end="329:5">if <condition pos:start="321:8" pos:end="321:17">(<expr pos:start="321:9" pos:end="321:16"><operator pos:start="321:9" pos:end="321:9">!</operator><name pos:start="321:10" pos:end="321:16">dry_run</name></expr>)</condition> <block pos:start="321:19" pos:end="329:5">{<block_content pos:start="323:9" pos:end="327:50">

        <expr_stmt pos:start="323:9" pos:end="323:36"><expr pos:start="323:9" pos:end="323:35"><name pos:start="323:9" pos:end="323:24"><name pos:start="323:9" pos:end="323:11">rcc</name><operator pos:start="323:12" pos:end="323:13">-&gt;</operator><name pos:start="323:14" pos:end="323:24">last_qscale</name></name>        <operator pos:start="323:33" pos:end="323:33">=</operator> <name pos:start="323:35" pos:end="323:35">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="325:9" pos:end="325:53"><expr pos:start="325:9" pos:end="325:52"><name pos:start="325:9" pos:end="325:31"><name pos:start="325:9" pos:end="325:11">rcc</name><operator pos:start="325:12" pos:end="325:13">-&gt;</operator><name pos:start="325:14" pos:end="325:31">last_mc_mb_var_sum</name></name> <operator pos:start="325:33" pos:end="325:33">=</operator> <name pos:start="325:35" pos:end="325:52"><name pos:start="325:35" pos:end="325:37">pic</name><operator pos:start="325:38" pos:end="325:39">-&gt;</operator><name pos:start="325:40" pos:end="325:52">mc_mb_var_sum</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:50"><expr pos:start="327:9" pos:end="327:49"><name pos:start="327:9" pos:end="327:28"><name pos:start="327:9" pos:end="327:11">rcc</name><operator pos:start="327:12" pos:end="327:13">-&gt;</operator><name pos:start="327:14" pos:end="327:28">last_mb_var_sum</name></name>    <operator pos:start="327:33" pos:end="327:33">=</operator> <name pos:start="327:35" pos:end="327:49"><name pos:start="327:35" pos:end="327:37">pic</name><operator pos:start="327:38" pos:end="327:39">-&gt;</operator><name pos:start="327:40" pos:end="327:49">mb_var_sum</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="331:5" pos:end="331:13">return <expr pos:start="331:12" pos:end="331:12"><name pos:start="331:12" pos:end="331:12">q</name></expr>;</return>

</block_content>}</block></function>
</unit>
