<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/79.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">i2c_interface</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:41">musicpal_audio_init</name><parameter_list pos:start="1:42" pos:end="1:55">(<parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:50">qemu_irq</name></type> <name pos:start="1:52" pos:end="1:54">irq</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AudioState</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:21">audio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">musicpal_audio_state</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">i2c_interface</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">i2c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">iomemtype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:9">audio</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:22"><name pos:start="15:13" pos:end="15:20">AUD_init</name><argument_list pos:start="15:21" pos:end="15:22">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:14">audio</name></expr>)</condition> <block pos:start="17:17" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:15">AUD_log</name><argument_list pos:start="19:16" pos:end="19:47">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:26">audio_name</name></expr></argument>, <argument pos:start="19:29" pos:end="19:46"><expr pos:start="19:29" pos:end="19:46"><literal type="string" pos:start="19:29" pos:end="19:46">"No audio state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:50"><name pos:start="27:9" pos:end="27:20">qemu_mallocz</name><argument_list pos:start="27:21" pos:end="27:50">(<argument pos:start="27:22" pos:end="27:49"><expr pos:start="27:22" pos:end="27:49"><sizeof pos:start="27:22" pos:end="27:49">sizeof<argument_list pos:start="27:28" pos:end="27:49">(<argument pos:start="27:29" pos:end="27:48"><expr pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:48">musicpal_audio_state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">irq</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:16">irq</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:46"><expr pos:start="33:5" pos:end="33:45"><name pos:start="33:5" pos:end="33:7">i2c</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:45"><name pos:start="33:11" pos:end="33:22">qemu_mallocz</name><argument_list pos:start="33:23" pos:end="33:45">(<argument pos:start="33:24" pos:end="33:44"><expr pos:start="33:24" pos:end="33:44"><sizeof pos:start="33:24" pos:end="33:44">sizeof<argument_list pos:start="33:30" pos:end="33:44">(<argument pos:start="33:31" pos:end="33:43"><expr pos:start="33:31" pos:end="33:43"><name pos:start="33:31" pos:end="33:43">i2c_interface</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:7">i2c</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">bus</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:29"><name pos:start="35:16" pos:end="35:27">i2c_init_bus</name><argument_list pos:start="35:28" pos:end="35:29">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:27"><expr pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:21"><name pos:start="37:5" pos:end="37:7">i2c</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:21">current_addr</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <operator pos:start="37:25" pos:end="37:25">-</operator><literal type="number" pos:start="37:26" pos:end="37:26">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:41"><expr pos:start="41:5" pos:end="41:40"><name pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">wm</name></name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:23">wm8750_init</name><argument_list pos:start="41:24" pos:end="41:40">(<argument pos:start="41:25" pos:end="41:32"><expr pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:27">i2c</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">bus</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:39"><expr pos:start="41:35" pos:end="41:39"><name pos:start="41:35" pos:end="41:39">audio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:20"><if pos:start="43:5" pos:end="45:20">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">s</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:14">wm</name></name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:20"><block_content pos:start="45:9" pos:end="45:20">

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:25">i2c_set_slave_address</name><argument_list pos:start="47:26" pos:end="47:44">(<argument pos:start="47:27" pos:end="47:31"><expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:27">s</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:31">wm</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:43"><expr pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:43">MP_WM_ADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><call pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:23">wm8750_data_req_set</name><argument_list pos:start="49:24" pos:end="49:49">(<argument pos:start="49:25" pos:end="49:29"><expr pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:29"><name pos:start="49:25" pos:end="49:25">s</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:29">wm</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:45"><expr pos:start="49:32" pos:end="49:45"><name pos:start="49:32" pos:end="49:45">audio_callback</name></expr></argument>, <argument pos:start="49:48" pos:end="49:48"><expr pos:start="49:48" pos:end="49:48"><name pos:start="49:48" pos:end="49:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:50"><expr pos:start="53:5" pos:end="55:49"><name pos:start="53:5" pos:end="53:13">iomemtype</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="55:49"><name pos:start="53:17" pos:end="53:38">cpu_register_io_memory</name><argument_list pos:start="53:39" pos:end="55:49">(<argument pos:start="53:40" pos:end="53:40"><expr pos:start="53:40" pos:end="53:40"><literal type="number" pos:start="53:40" pos:end="53:40">0</literal></expr></argument>, <argument pos:start="53:43" pos:end="53:63"><expr pos:start="53:43" pos:end="53:63"><name pos:start="53:43" pos:end="53:63">musicpal_audio_readfn</name></expr></argument>,

                       <argument pos:start="55:24" pos:end="55:45"><expr pos:start="55:24" pos:end="55:45"><name pos:start="55:24" pos:end="55:45">musicpal_audio_writefn</name></expr></argument>, <argument pos:start="55:48" pos:end="55:48"><expr pos:start="55:48" pos:end="55:48"><name pos:start="55:48" pos:end="55:48">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:74"><expr pos:start="57:5" pos:end="57:73"><call pos:start="57:5" pos:end="57:73"><name pos:start="57:5" pos:end="57:32">cpu_register_physical_memory</name><argument_list pos:start="57:33" pos:end="57:73">(<argument pos:start="57:34" pos:end="57:46"><expr pos:start="57:34" pos:end="57:46"><name pos:start="57:34" pos:end="57:46">MP_AUDIO_BASE</name></expr></argument>, <argument pos:start="57:49" pos:end="57:61"><expr pos:start="57:49" pos:end="57:61"><name pos:start="57:49" pos:end="57:61">MP_AUDIO_SIZE</name></expr></argument>, <argument pos:start="57:64" pos:end="57:72"><expr pos:start="57:64" pos:end="57:72"><name pos:start="57:64" pos:end="57:72">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:49"><expr pos:start="61:5" pos:end="61:48"><call pos:start="61:5" pos:end="61:48"><name pos:start="61:5" pos:end="61:23">qemu_register_reset</name><argument_list pos:start="61:24" pos:end="61:48">(<argument pos:start="61:25" pos:end="61:44"><expr pos:start="61:25" pos:end="61:44"><name pos:start="61:25" pos:end="61:44">musicpal_audio_reset</name></expr></argument>, <argument pos:start="61:47" pos:end="61:47"><expr pos:start="61:47" pos:end="61:47"><name pos:start="61:47" pos:end="61:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">i2c</name></expr>;</return>

</block_content>}</block></function>
</unit>
