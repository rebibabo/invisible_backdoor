<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7297.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">hls_window</name><parameter_list pos:start="1:22" pos:end="1:51">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">last</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="291:1">{<block_content pos:start="5:5" pos:end="289:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">hls</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">HLSSegment</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">en</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:23">target_duration</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">out</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:15">AVIOContext</name> <modifier pos:start="15:17" pos:end="15:17">*</modifier></type><name pos:start="15:18" pos:end="15:24">sub_out</name> <init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:28"><name pos:start="17:10" pos:end="17:22">temp_filename</name><index pos:start="17:23" pos:end="17:28">[<expr pos:start="17:24" pos:end="17:27"><literal type="number" pos:start="17:24" pos:end="17:27">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:83"><decl pos:start="19:5" pos:end="19:82"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int64_t</name></type> <name pos:start="19:13" pos:end="19:20">sequence</name> <init pos:start="19:22" pos:end="19:82">= <expr pos:start="19:24" pos:end="19:82"><call pos:start="19:24" pos:end="19:82"><name pos:start="19:24" pos:end="19:28">FFMAX</name><argument_list pos:start="19:29" pos:end="19:82">(<argument pos:start="19:30" pos:end="19:48"><expr pos:start="19:30" pos:end="19:48"><name pos:start="19:30" pos:end="19:48"><name pos:start="19:30" pos:end="19:32">hls</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:48">start_sequence</name></name></expr></argument>, <argument pos:start="19:51" pos:end="19:81"><expr pos:start="19:51" pos:end="19:81"><name pos:start="19:51" pos:end="19:63"><name pos:start="19:51" pos:end="19:53">hls</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:63">sequence</name></name> <operator pos:start="19:65" pos:end="19:65">-</operator> <name pos:start="19:67" pos:end="19:81"><name pos:start="19:67" pos:end="19:69">hls</name><operator pos:start="19:70" pos:end="19:71">-&gt;</operator><name pos:start="19:72" pos:end="19:81">nb_entries</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">version</name> <init pos:start="21:17" pos:end="21:19">= <expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:61"><decl pos:start="23:5" pos:end="23:60"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:21">proto</name> <init pos:start="23:23" pos:end="23:60">= <expr pos:start="23:25" pos:end="23:60"><call pos:start="23:25" pos:end="23:60"><name pos:start="23:25" pos:end="23:47">avio_find_protocol_name</name><argument_list pos:start="23:48" pos:end="23:60">(<argument pos:start="23:49" pos:end="23:59"><expr pos:start="23:49" pos:end="23:59"><name pos:start="23:49" pos:end="23:59"><name pos:start="23:49" pos:end="23:49">s</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:59">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:53"><decl pos:start="25:5" pos:end="25:52"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:18">use_rename</name> <init pos:start="25:20" pos:end="25:52">= <expr pos:start="25:22" pos:end="25:52"><name pos:start="25:22" pos:end="25:26">proto</name> <operator pos:start="25:28" pos:end="25:29">&amp;&amp;</operator> <operator pos:start="25:31" pos:end="25:31">!</operator><call pos:start="25:32" pos:end="25:52"><name pos:start="25:32" pos:end="25:37">strcmp</name><argument_list pos:start="25:38" pos:end="25:52">(<argument pos:start="25:39" pos:end="25:43"><expr pos:start="25:39" pos:end="25:43"><name pos:start="25:39" pos:end="25:43">proto</name></expr></argument>, <argument pos:start="25:46" pos:end="25:51"><expr pos:start="25:46" pos:end="25:51"><literal type="string" pos:start="25:46" pos:end="25:51">"file"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:36"><decl pos:start="27:5" pos:end="27:35"><type pos:start="27:5" pos:end="27:19"><specifier pos:start="27:5" pos:end="27:10">static</specifier> <name pos:start="27:12" pos:end="27:19">unsigned</name></type> <name pos:start="27:21" pos:end="27:35">warned_non_file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:25"><decl pos:start="29:5" pos:end="29:24"><type pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:8">char</name> <modifier pos:start="29:10" pos:end="29:10">*</modifier></type><name pos:start="29:11" pos:end="29:17">key_uri</name> <init pos:start="29:19" pos:end="29:24">= <expr pos:start="29:21" pos:end="29:24"><name pos:start="29:21" pos:end="29:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:27"><decl pos:start="31:5" pos:end="31:26"><type pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:8">char</name> <modifier pos:start="31:10" pos:end="31:10">*</modifier></type><name pos:start="31:11" pos:end="31:19">iv_string</name> <init pos:start="31:21" pos:end="31:26">= <expr pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:33"><decl pos:start="33:5" pos:end="33:32"><type pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:16">AVDictionary</name> <modifier pos:start="33:18" pos:end="33:18">*</modifier></type><name pos:start="33:19" pos:end="33:25">options</name> <init pos:start="33:27" pos:end="33:32">= <expr pos:start="33:29" pos:end="33:32"><name pos:start="33:29" pos:end="33:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:56"><decl pos:start="35:5" pos:end="35:55"><type pos:start="35:5" pos:end="35:10"><name pos:start="35:5" pos:end="35:10">double</name></type> <name pos:start="35:12" pos:end="35:25">prog_date_time</name> <init pos:start="35:27" pos:end="35:55">= <expr pos:start="35:29" pos:end="35:55"><name pos:start="35:29" pos:end="35:55"><name pos:start="35:29" pos:end="35:31">hls</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:55">initial_prog_date_time</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:83"><decl pos:start="37:5" pos:end="37:82"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:22">byterange_mode</name> <init pos:start="37:24" pos:end="37:82">= <expr pos:start="37:26" pos:end="37:82"><operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:36"><name pos:start="37:27" pos:end="37:29">hls</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:36">flags</name></name> <operator pos:start="37:38" pos:end="37:38">&amp;</operator> <name pos:start="37:40" pos:end="37:54">HLS_SINGLE_FILE</name><operator pos:start="37:55" pos:end="37:55">)</operator> <operator pos:start="37:57" pos:end="37:58">||</operator> <operator pos:start="37:60" pos:end="37:60">(</operator><name pos:start="37:61" pos:end="37:77"><name pos:start="37:61" pos:end="37:63">hls</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:77">max_seg_size</name></name> <operator pos:start="37:79" pos:end="37:79">&gt;</operator> <literal type="number" pos:start="37:81" pos:end="37:81">0</literal><operator pos:start="37:82" pos:end="37:82">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:23">(<expr pos:start="41:9" pos:end="41:22"><name pos:start="41:9" pos:end="41:22">byterange_mode</name></expr>)</condition> <block pos:start="41:25" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:21">

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:15">version</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">sequence</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:47">(<expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:11">hls</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:25">segment_type</name></name> <operator pos:start="51:27" pos:end="51:28">==</operator> <name pos:start="51:30" pos:end="51:46">SEGMENT_TYPE_FMP4</name></expr>)</condition> <block pos:start="51:49" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:20">

        <expr_stmt pos:start="53:9" pos:end="53:20"><expr pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:15">version</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:19">7</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="61:128"><if pos:start="59:5" pos:end="61:128">if <condition pos:start="59:8" pos:end="59:42">(<expr pos:start="59:9" pos:end="59:41"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:19">use_rename</name> <operator pos:start="59:21" pos:end="59:22">&amp;&amp;</operator> <operator pos:start="59:24" pos:end="59:24">!</operator><name pos:start="59:25" pos:end="59:39">warned_non_file</name><operator pos:start="59:40" pos:end="59:41">++</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:128"><block_content pos:start="61:9" pos:end="61:128">

        <expr_stmt pos:start="61:9" pos:end="61:128"><expr pos:start="61:9" pos:end="61:127"><call pos:start="61:9" pos:end="61:127"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:127">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">s</name></expr></argument>, <argument pos:start="61:19" pos:end="61:30"><expr pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:33" pos:end="61:126"><expr pos:start="61:33" pos:end="61:126"><literal type="string" pos:start="61:33" pos:end="61:126">"Cannot use rename on non file protocol, this may lead to races and temporary partial files\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:39"><expr pos:start="65:5" pos:end="65:38"><call pos:start="65:5" pos:end="65:38"><name pos:start="65:5" pos:end="65:20">set_http_options</name><argument_list pos:start="65:21" pos:end="65:38">(<argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><name pos:start="65:22" pos:end="65:22">s</name></expr></argument>, <argument pos:start="65:25" pos:end="65:32"><expr pos:start="65:25" pos:end="65:32"><operator pos:start="65:25" pos:end="65:25">&amp;</operator><name pos:start="65:26" pos:end="65:32">options</name></expr></argument>, <argument pos:start="65:35" pos:end="65:37"><expr pos:start="65:35" pos:end="65:37"><name pos:start="65:35" pos:end="65:37">hls</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:94"><expr pos:start="67:5" pos:end="67:93"><call pos:start="67:5" pos:end="67:93"><name pos:start="67:5" pos:end="67:12">snprintf</name><argument_list pos:start="67:13" pos:end="67:93">(<argument pos:start="67:14" pos:end="67:26"><expr pos:start="67:14" pos:end="67:26"><name pos:start="67:14" pos:end="67:26">temp_filename</name></expr></argument>, <argument pos:start="67:29" pos:end="67:49"><expr pos:start="67:29" pos:end="67:49"><sizeof pos:start="67:29" pos:end="67:49">sizeof<argument_list pos:start="67:35" pos:end="67:49">(<argument pos:start="67:36" pos:end="67:48"><expr pos:start="67:36" pos:end="67:48"><name pos:start="67:36" pos:end="67:48">temp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:52" pos:end="67:79"><expr pos:start="67:52" pos:end="67:79"><ternary pos:start="67:52" pos:end="67:79"><condition pos:start="67:52" pos:end="67:63"><expr pos:start="67:52" pos:end="67:61"><name pos:start="67:52" pos:end="67:61">use_rename</name></expr> ?</condition><then pos:start="67:65" pos:end="67:72"> <expr pos:start="67:65" pos:end="67:72"><literal type="string" pos:start="67:65" pos:end="67:72">"%s.tmp"</literal></expr> </then><else pos:start="67:74" pos:end="67:79">: <expr pos:start="67:76" pos:end="67:79"><literal type="string" pos:start="67:76" pos:end="67:79">"%s"</literal></expr></else></ternary></expr></argument>, <argument pos:start="67:82" pos:end="67:92"><expr pos:start="67:82" pos:end="67:92"><name pos:start="67:82" pos:end="67:92"><name pos:start="67:82" pos:end="67:82">s</name><operator pos:start="67:83" pos:end="67:84">-&gt;</operator><name pos:start="67:85" pos:end="67:92">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if <condition pos:start="69:8" pos:end="69:82">(<expr pos:start="69:9" pos:end="69:81"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:12">ret</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:76"><name pos:start="69:16" pos:end="69:25"><name pos:start="69:16" pos:end="69:16">s</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:25">io_open</name></name><argument_list pos:start="69:26" pos:end="69:76">(<argument pos:start="69:27" pos:end="69:27"><expr pos:start="69:27" pos:end="69:27"><name pos:start="69:27" pos:end="69:27">s</name></expr></argument>, <argument pos:start="69:30" pos:end="69:33"><expr pos:start="69:30" pos:end="69:33"><operator pos:start="69:30" pos:end="69:30">&amp;</operator><name pos:start="69:31" pos:end="69:33">out</name></expr></argument>, <argument pos:start="69:36" pos:end="69:48"><expr pos:start="69:36" pos:end="69:48"><name pos:start="69:36" pos:end="69:48">temp_filename</name></expr></argument>, <argument pos:start="69:51" pos:end="69:65"><expr pos:start="69:51" pos:end="69:65"><name pos:start="69:51" pos:end="69:65">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="69:68" pos:end="69:75"><expr pos:start="69:68" pos:end="69:75"><operator pos:start="69:68" pos:end="69:68">&amp;</operator><name pos:start="69:69" pos:end="69:75">options</name></expr></argument>)</argument_list></call><operator pos:start="69:77" pos:end="69:77">)</operator> <operator pos:start="69:79" pos:end="69:79">&lt;</operator> <literal type="number" pos:start="69:81" pos:end="69:81">0</literal></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="75:5" pos:end="81:5">for <control pos:start="75:9" pos:end="75:47">(<init pos:start="75:10" pos:end="75:28"><expr pos:start="75:10" pos:end="75:27"><name pos:start="75:10" pos:end="75:11">en</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <name pos:start="75:15" pos:end="75:27"><name pos:start="75:15" pos:end="75:17">hls</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:27">segments</name></name></expr>;</init> <condition pos:start="75:30" pos:end="75:32"><expr pos:start="75:30" pos:end="75:31"><name pos:start="75:30" pos:end="75:31">en</name></expr>;</condition> <incr pos:start="75:34" pos:end="75:46"><expr pos:start="75:34" pos:end="75:46"><name pos:start="75:34" pos:end="75:35">en</name> <operator pos:start="75:37" pos:end="75:37">=</operator> <name pos:start="75:39" pos:end="75:46"><name pos:start="75:39" pos:end="75:40">en</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:46">next</name></name></expr></incr>)</control> <block pos:start="75:49" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:64">

        <if_stmt pos:start="77:9" pos:end="79:64"><if pos:start="77:9" pos:end="79:64">if <condition pos:start="77:12" pos:end="77:44">(<expr pos:start="77:13" pos:end="77:43"><name pos:start="77:13" pos:end="77:27">target_duration</name> <operator pos:start="77:29" pos:end="77:30">&lt;=</operator> <name pos:start="77:32" pos:end="77:43"><name pos:start="77:32" pos:end="77:33">en</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:43">duration</name></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:64"><block_content pos:start="79:13" pos:end="79:64">

            <expr_stmt pos:start="79:13" pos:end="79:64"><expr pos:start="79:13" pos:end="79:63"><name pos:start="79:13" pos:end="79:27">target_duration</name> <operator pos:start="79:29" pos:end="79:29">=</operator> <call pos:start="79:31" pos:end="79:63"><name pos:start="79:31" pos:end="79:49">get_int_from_double</name><argument_list pos:start="79:50" pos:end="79:63">(<argument pos:start="79:51" pos:end="79:62"><expr pos:start="79:51" pos:end="79:62"><name pos:start="79:51" pos:end="79:62"><name pos:start="79:51" pos:end="79:52">en</name><operator pos:start="79:53" pos:end="79:54">-&gt;</operator><name pos:start="79:55" pos:end="79:62">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><name pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:7">hls</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:26">discontinuity_set</name></name> <operator pos:start="85:28" pos:end="85:28">=</operator> <literal type="number" pos:start="85:30" pos:end="85:30">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:72"><expr pos:start="87:5" pos:end="87:71"><call pos:start="87:5" pos:end="87:71"><name pos:start="87:5" pos:end="87:25">write_m3u8_head_block</name><argument_list pos:start="87:26" pos:end="87:71">(<argument pos:start="87:27" pos:end="87:29"><expr pos:start="87:27" pos:end="87:29"><name pos:start="87:27" pos:end="87:29">hls</name></expr></argument>, <argument pos:start="87:32" pos:end="87:34"><expr pos:start="87:32" pos:end="87:34"><name pos:start="87:32" pos:end="87:34">out</name></expr></argument>, <argument pos:start="87:37" pos:end="87:43"><expr pos:start="87:37" pos:end="87:43"><name pos:start="87:37" pos:end="87:43">version</name></expr></argument>, <argument pos:start="87:46" pos:end="87:60"><expr pos:start="87:46" pos:end="87:60"><name pos:start="87:46" pos:end="87:60">target_duration</name></expr></argument>, <argument pos:start="87:63" pos:end="87:70"><expr pos:start="87:63" pos:end="87:70"><name pos:start="87:63" pos:end="87:70">sequence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="97:5"><if pos:start="89:5" pos:end="93:5">if <condition pos:start="89:8" pos:end="89:44">(<expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:11">hls</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:20">pl_type</name></name> <operator pos:start="89:22" pos:end="89:23">==</operator> <name pos:start="89:25" pos:end="89:43">PLAYLIST_TYPE_EVENT</name></expr>)</condition> <block pos:start="89:46" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:57">

        <expr_stmt pos:start="91:9" pos:end="91:57"><expr pos:start="91:9" pos:end="91:56"><call pos:start="91:9" pos:end="91:56"><name pos:start="91:9" pos:end="91:19">avio_printf</name><argument_list pos:start="91:20" pos:end="91:56">(<argument pos:start="91:21" pos:end="91:23"><expr pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">out</name></expr></argument>, <argument pos:start="91:26" pos:end="91:55"><expr pos:start="91:26" pos:end="91:55"><literal type="string" pos:start="91:26" pos:end="91:55">"#EXT-X-PLAYLIST-TYPE:EVENT\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="97:5">else if <condition pos:start="93:15" pos:end="93:49">(<expr pos:start="93:16" pos:end="93:48"><name pos:start="93:16" pos:end="93:27"><name pos:start="93:16" pos:end="93:18">hls</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:27">pl_type</name></name> <operator pos:start="93:29" pos:end="93:30">==</operator> <name pos:start="93:32" pos:end="93:48">PLAYLIST_TYPE_VOD</name></expr>)</condition> <block pos:start="93:51" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:55">

        <expr_stmt pos:start="95:9" pos:end="95:55"><expr pos:start="95:9" pos:end="95:54"><call pos:start="95:9" pos:end="95:54"><name pos:start="95:9" pos:end="95:19">avio_printf</name><argument_list pos:start="95:20" pos:end="95:54">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">out</name></expr></argument>, <argument pos:start="95:26" pos:end="95:53"><expr pos:start="95:26" pos:end="95:53"><literal type="string" pos:start="95:26" pos:end="95:53">"#EXT-X-PLAYLIST-TYPE:VOD\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if<condition pos:start="101:7" pos:end="101:103">(<expr pos:start="101:8" pos:end="101:101"><operator pos:start="101:8" pos:end="101:8">(</operator><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:11">hls</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:18">flags</name></name> <operator pos:start="101:20" pos:end="101:20">&amp;</operator> <name pos:start="101:22" pos:end="101:38">HLS_DISCONT_START</name><operator pos:start="101:39" pos:end="101:39">)</operator> <operator pos:start="101:41" pos:end="101:42">&amp;&amp;</operator> <name pos:start="101:44" pos:end="101:51">sequence</name><operator pos:start="101:52" pos:end="101:53">==</operator><name pos:start="101:54" pos:end="101:72"><name pos:start="101:54" pos:end="101:56">hls</name><operator pos:start="101:57" pos:end="101:58">-&gt;</operator><name pos:start="101:59" pos:end="101:72">start_sequence</name></name> <operator pos:start="101:74" pos:end="101:75">&amp;&amp;</operator> <name pos:start="101:77" pos:end="101:98"><name pos:start="101:77" pos:end="101:79">hls</name><operator pos:start="101:80" pos:end="101:81">-&gt;</operator><name pos:start="101:82" pos:end="101:98">discontinuity_set</name></name><operator pos:start="101:99" pos:end="101:100">==</operator><literal type="number" pos:start="101:101" pos:end="101:101">0</literal></expr> )</condition><block pos:start="101:104" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:35">

        <expr_stmt pos:start="103:9" pos:end="103:51"><expr pos:start="103:9" pos:end="103:50"><call pos:start="103:9" pos:end="103:50"><name pos:start="103:9" pos:end="103:19">avio_printf</name><argument_list pos:start="103:20" pos:end="103:50">(<argument pos:start="103:21" pos:end="103:23"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">out</name></expr></argument>, <argument pos:start="103:26" pos:end="103:49"><expr pos:start="103:26" pos:end="103:49"><literal type="string" pos:start="103:26" pos:end="103:49">"#EXT-X-DISCONTINUITY\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:35"><expr pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:11">hls</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:30">discontinuity_set</name></name> <operator pos:start="105:32" pos:end="105:32">=</operator> <literal type="number" pos:start="105:34" pos:end="105:34">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <for pos:start="109:5" pos:end="227:5">for <control pos:start="109:9" pos:end="109:47">(<init pos:start="109:10" pos:end="109:28"><expr pos:start="109:10" pos:end="109:27"><name pos:start="109:10" pos:end="109:11">en</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <name pos:start="109:15" pos:end="109:27"><name pos:start="109:15" pos:end="109:17">hls</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:27">segments</name></name></expr>;</init> <condition pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:31"><name pos:start="109:30" pos:end="109:31">en</name></expr>;</condition> <incr pos:start="109:34" pos:end="109:46"><expr pos:start="109:34" pos:end="109:46"><name pos:start="109:34" pos:end="109:35">en</name> <operator pos:start="109:37" pos:end="109:37">=</operator> <name pos:start="109:39" pos:end="109:46"><name pos:start="109:39" pos:end="109:40">en</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:46">next</name></name></expr></incr>)</control> <block pos:start="109:49" pos:end="227:5">{<block_content pos:start="111:9" pos:end="225:9">

        <if_stmt pos:start="111:9" pos:end="127:9"><if pos:start="111:9" pos:end="127:9">if <condition pos:start="111:12" pos:end="113:77">(<expr pos:start="111:13" pos:end="113:76"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:25"><name pos:start="111:14" pos:end="111:16">hls</name><operator pos:start="111:17" pos:end="111:18">-&gt;</operator><name pos:start="111:19" pos:end="111:25">encrypt</name></name> <operator pos:start="111:27" pos:end="111:28">||</operator> <name pos:start="111:30" pos:end="111:47"><name pos:start="111:30" pos:end="111:32">hls</name><operator pos:start="111:33" pos:end="111:34">-&gt;</operator><name pos:start="111:35" pos:end="111:47">key_info_file</name></name><operator pos:start="111:48" pos:end="111:48">)</operator> <operator pos:start="111:50" pos:end="111:51">&amp;&amp;</operator> <operator pos:start="111:53" pos:end="111:53">(</operator><operator pos:start="111:54" pos:end="111:54">!</operator><name pos:start="111:55" pos:end="111:61">key_uri</name> <operator pos:start="111:63" pos:end="111:64">||</operator> <call pos:start="111:66" pos:end="111:93"><name pos:start="111:66" pos:end="111:71">strcmp</name><argument_list pos:start="111:72" pos:end="111:93">(<argument pos:start="111:73" pos:end="111:83"><expr pos:start="111:73" pos:end="111:83"><name pos:start="111:73" pos:end="111:83"><name pos:start="111:73" pos:end="111:74">en</name><operator pos:start="111:75" pos:end="111:76">-&gt;</operator><name pos:start="111:77" pos:end="111:83">key_uri</name></name></expr></argument>, <argument pos:start="111:86" pos:end="111:92"><expr pos:start="111:86" pos:end="111:92"><name pos:start="111:86" pos:end="111:92">key_uri</name></expr></argument>)</argument_list></call> <operator pos:start="111:95" pos:end="111:96">||</operator>

                                    <call pos:start="113:37" pos:end="113:75"><name pos:start="113:37" pos:end="113:49">av_strcasecmp</name><argument_list pos:start="113:50" pos:end="113:75">(<argument pos:start="113:51" pos:end="113:63"><expr pos:start="113:51" pos:end="113:63"><name pos:start="113:51" pos:end="113:63"><name pos:start="113:51" pos:end="113:52">en</name><operator pos:start="113:53" pos:end="113:54">-&gt;</operator><name pos:start="113:55" pos:end="113:63">iv_string</name></name></expr></argument>, <argument pos:start="113:66" pos:end="113:74"><expr pos:start="113:66" pos:end="113:74"><name pos:start="113:66" pos:end="113:74">iv_string</name></expr></argument>)</argument_list></call><operator pos:start="113:76" pos:end="113:76">)</operator></expr>)</condition> <block pos:start="113:79" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:38">

            <expr_stmt pos:start="115:13" pos:end="115:82"><expr pos:start="115:13" pos:end="115:81"><call pos:start="115:13" pos:end="115:81"><name pos:start="115:13" pos:end="115:23">avio_printf</name><argument_list pos:start="115:24" pos:end="115:81">(<argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><name pos:start="115:25" pos:end="115:27">out</name></expr></argument>, <argument pos:start="115:30" pos:end="115:67"><expr pos:start="115:30" pos:end="115:67"><literal type="string" pos:start="115:30" pos:end="115:67">"#EXT-X-KEY:METHOD=AES-128,URI=\"%s\""</literal></expr></argument>, <argument pos:start="115:70" pos:end="115:80"><expr pos:start="115:70" pos:end="115:80"><name pos:start="115:70" pos:end="115:80"><name pos:start="115:70" pos:end="115:71">en</name><operator pos:start="115:72" pos:end="115:73">-&gt;</operator><name pos:start="115:74" pos:end="115:80">key_uri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="119:60"><if pos:start="117:13" pos:end="119:60">if <condition pos:start="117:16" pos:end="117:31">(<expr pos:start="117:17" pos:end="117:30"><operator pos:start="117:17" pos:end="117:17">*</operator><name pos:start="117:18" pos:end="117:30"><name pos:start="117:18" pos:end="117:19">en</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:30">iv_string</name></name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:60"><block_content pos:start="119:17" pos:end="119:60">

                <expr_stmt pos:start="119:17" pos:end="119:60"><expr pos:start="119:17" pos:end="119:59"><call pos:start="119:17" pos:end="119:59"><name pos:start="119:17" pos:end="119:27">avio_printf</name><argument_list pos:start="119:28" pos:end="119:59">(<argument pos:start="119:29" pos:end="119:31"><expr pos:start="119:29" pos:end="119:31"><name pos:start="119:29" pos:end="119:31">out</name></expr></argument>, <argument pos:start="119:34" pos:end="119:43"><expr pos:start="119:34" pos:end="119:43"><literal type="string" pos:start="119:34" pos:end="119:43">",IV=0x%s"</literal></expr></argument>, <argument pos:start="119:46" pos:end="119:58"><expr pos:start="119:46" pos:end="119:58"><name pos:start="119:46" pos:end="119:58"><name pos:start="119:46" pos:end="119:47">en</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:58">iv_string</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:35"><expr pos:start="121:13" pos:end="121:34"><call pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:23">avio_printf</name><argument_list pos:start="121:24" pos:end="121:34">(<argument pos:start="121:25" pos:end="121:27"><expr pos:start="121:25" pos:end="121:27"><name pos:start="121:25" pos:end="121:27">out</name></expr></argument>, <argument pos:start="121:30" pos:end="121:33"><expr pos:start="121:30" pos:end="121:33"><literal type="string" pos:start="121:30" pos:end="121:33">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:19">key_uri</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <name pos:start="123:23" pos:end="123:33"><name pos:start="123:23" pos:end="123:24">en</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:33">key_uri</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:38"><expr pos:start="125:13" pos:end="125:37"><name pos:start="125:13" pos:end="125:21">iv_string</name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:37"><name pos:start="125:25" pos:end="125:26">en</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:37">iv_string</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="131:9" pos:end="135:9"><if pos:start="131:9" pos:end="135:9">if <condition pos:start="131:12" pos:end="131:24">(<expr pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:14">en</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:23">discont</name></name></expr>)</condition> <block pos:start="131:26" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:55">

            <expr_stmt pos:start="133:13" pos:end="133:55"><expr pos:start="133:13" pos:end="133:54"><call pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:23">avio_printf</name><argument_list pos:start="133:24" pos:end="133:54">(<argument pos:start="133:25" pos:end="133:27"><expr pos:start="133:25" pos:end="133:27"><name pos:start="133:25" pos:end="133:27">out</name></expr></argument>, <argument pos:start="133:30" pos:end="133:53"><expr pos:start="133:30" pos:end="133:53"><literal type="string" pos:start="133:30" pos:end="133:53">"#EXT-X-DISCONTINUITY\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="167:9"><if pos:start="139:9" pos:end="151:9">if <condition pos:start="139:12" pos:end="139:78">(<expr pos:start="139:13" pos:end="139:77"><operator pos:start="139:13" pos:end="139:13">(</operator><name pos:start="139:14" pos:end="139:30"><name pos:start="139:14" pos:end="139:16">hls</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:30">segment_type</name></name> <operator pos:start="139:32" pos:end="139:33">==</operator> <name pos:start="139:35" pos:end="139:51">SEGMENT_TYPE_FMP4</name><operator pos:start="139:52" pos:end="139:52">)</operator> <operator pos:start="139:54" pos:end="139:55">&amp;&amp;</operator> <operator pos:start="139:57" pos:end="139:57">(</operator><name pos:start="139:58" pos:end="139:59">en</name> <operator pos:start="139:61" pos:end="139:62">==</operator> <name pos:start="139:64" pos:end="139:76"><name pos:start="139:64" pos:end="139:66">hls</name><operator pos:start="139:67" pos:end="139:68">-&gt;</operator><name pos:start="139:69" pos:end="139:76">segments</name></name><operator pos:start="139:77" pos:end="139:77">)</operator></expr>)</condition> <block pos:start="139:80" pos:end="151:9">{<block_content pos:start="141:13" pos:end="149:35">

            <expr_stmt pos:start="141:13" pos:end="141:79"><expr pos:start="141:13" pos:end="141:78"><call pos:start="141:13" pos:end="141:78"><name pos:start="141:13" pos:end="141:23">avio_printf</name><argument_list pos:start="141:24" pos:end="141:78">(<argument pos:start="141:25" pos:end="141:27"><expr pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">out</name></expr></argument>, <argument pos:start="141:30" pos:end="141:52"><expr pos:start="141:30" pos:end="141:52"><literal type="string" pos:start="141:30" pos:end="141:52">"#EXT-X-MAP:URI=\"%s\""</literal></expr></argument>, <argument pos:start="141:55" pos:end="141:77"><expr pos:start="141:55" pos:end="141:77"><name pos:start="141:55" pos:end="141:77"><name pos:start="141:55" pos:end="141:57">hls</name><operator pos:start="141:58" pos:end="141:59">-&gt;</operator><name pos:start="141:60" pos:end="141:77">fmp4_init_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="147:13"><if pos:start="143:13" pos:end="147:13">if <condition pos:start="143:16" pos:end="143:45">(<expr pos:start="143:17" pos:end="143:44"><name pos:start="143:17" pos:end="143:26"><name pos:start="143:17" pos:end="143:19">hls</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:26">flags</name></name> <operator pos:start="143:28" pos:end="143:28">&amp;</operator> <name pos:start="143:30" pos:end="143:44">HLS_SINGLE_FILE</name></expr>)</condition> <block pos:start="143:47" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:90">

                <expr_stmt pos:start="145:17" pos:end="145:90"><expr pos:start="145:17" pos:end="145:89"><call pos:start="145:17" pos:end="145:89"><name pos:start="145:17" pos:end="145:27">avio_printf</name><argument_list pos:start="145:28" pos:end="145:89">(<argument pos:start="145:29" pos:end="145:31"><expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">out</name></expr></argument>, <argument pos:start="145:34" pos:end="145:69"><expr pos:start="145:34" pos:end="145:69"><literal type="string" pos:start="145:34" pos:end="145:49">",BYTERANGE=\"%"</literal><name pos:start="145:50" pos:end="145:55">PRId64</name><literal type="string" pos:start="145:56" pos:end="145:59">"@%"</literal><name pos:start="145:60" pos:end="145:65">PRId64</name><literal type="string" pos:start="145:66" pos:end="145:69">"\""</literal></expr></argument>, <argument pos:start="145:72" pos:end="145:79"><expr pos:start="145:72" pos:end="145:79"><name pos:start="145:72" pos:end="145:79"><name pos:start="145:72" pos:end="145:73">en</name><operator pos:start="145:74" pos:end="145:75">-&gt;</operator><name pos:start="145:76" pos:end="145:79">size</name></name></expr></argument>, <argument pos:start="145:82" pos:end="145:88"><expr pos:start="145:82" pos:end="145:88"><name pos:start="145:82" pos:end="145:88"><name pos:start="145:82" pos:end="145:83">en</name><operator pos:start="145:84" pos:end="145:85">-&gt;</operator><name pos:start="145:86" pos:end="145:88">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:35"><expr pos:start="149:13" pos:end="149:34"><call pos:start="149:13" pos:end="149:34"><name pos:start="149:13" pos:end="149:23">avio_printf</name><argument_list pos:start="149:24" pos:end="149:34">(<argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><name pos:start="149:25" pos:end="149:27">out</name></expr></argument>, <argument pos:start="149:30" pos:end="149:33"><expr pos:start="149:30" pos:end="149:33"><literal type="string" pos:start="149:30" pos:end="149:33">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="151:11" pos:end="167:9">else <block pos:start="151:16" pos:end="167:9">{<block_content pos:start="153:13" pos:end="165:47">

            <if_stmt pos:start="153:13" pos:end="159:64"><if pos:start="153:13" pos:end="155:73">if <condition pos:start="153:16" pos:end="153:49">(<expr pos:start="153:17" pos:end="153:48"><name pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:19">hls</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:26">flags</name></name> <operator pos:start="153:28" pos:end="153:28">&amp;</operator> <name pos:start="153:30" pos:end="153:48">HLS_ROUND_DURATIONS</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:73"><block_content pos:start="155:17" pos:end="155:73">

                <expr_stmt pos:start="155:17" pos:end="155:73"><expr pos:start="155:17" pos:end="155:72"><call pos:start="155:17" pos:end="155:72"><name pos:start="155:17" pos:end="155:27">avio_printf</name><argument_list pos:start="155:28" pos:end="155:72">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">out</name></expr></argument>, <argument pos:start="155:34" pos:end="155:49"><expr pos:start="155:34" pos:end="155:49"><literal type="string" pos:start="155:34" pos:end="155:49">"#EXTINF:%ld,\n"</literal></expr></argument>,  <argument pos:start="155:53" pos:end="155:71"><expr pos:start="155:53" pos:end="155:71"><call pos:start="155:53" pos:end="155:71"><name pos:start="155:53" pos:end="155:57">lrint</name><argument_list pos:start="155:58" pos:end="155:71">(<argument pos:start="155:59" pos:end="155:70"><expr pos:start="155:59" pos:end="155:70"><name pos:start="155:59" pos:end="155:70"><name pos:start="155:59" pos:end="155:60">en</name><operator pos:start="155:61" pos:end="155:62">-&gt;</operator><name pos:start="155:63" pos:end="155:70">duration</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="157:13" pos:end="159:64">else<block type="pseudo" pos:start="159:17" pos:end="159:64"><block_content pos:start="159:17" pos:end="159:64">

                <expr_stmt pos:start="159:17" pos:end="159:64"><expr pos:start="159:17" pos:end="159:63"><call pos:start="159:17" pos:end="159:63"><name pos:start="159:17" pos:end="159:27">avio_printf</name><argument_list pos:start="159:28" pos:end="159:63">(<argument pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">out</name></expr></argument>, <argument pos:start="159:34" pos:end="159:48"><expr pos:start="159:34" pos:end="159:48"><literal type="string" pos:start="159:34" pos:end="159:48">"#EXTINF:%f,\n"</literal></expr></argument>, <argument pos:start="159:51" pos:end="159:62"><expr pos:start="159:51" pos:end="159:62"><name pos:start="159:51" pos:end="159:62"><name pos:start="159:51" pos:end="159:52">en</name><operator pos:start="159:53" pos:end="159:54">-&gt;</operator><name pos:start="159:55" pos:end="159:62">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="161:13" pos:end="165:47"><if pos:start="161:13" pos:end="165:47">if <condition pos:start="161:16" pos:end="161:31">(<expr pos:start="161:17" pos:end="161:30"><name pos:start="161:17" pos:end="161:30">byterange_mode</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="165:47"><block_content pos:start="163:17" pos:end="165:47">

                <expr_stmt pos:start="163:17" pos:end="165:47"><expr pos:start="163:17" pos:end="165:46"><call pos:start="163:17" pos:end="165:46"><name pos:start="163:17" pos:end="163:27">avio_printf</name><argument_list pos:start="163:28" pos:end="165:46">(<argument pos:start="163:29" pos:end="163:31"><expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">out</name></expr></argument>, <argument pos:start="163:34" pos:end="163:73"><expr pos:start="163:34" pos:end="163:73"><literal type="string" pos:start="163:34" pos:end="163:53">"#EXT-X-BYTERANGE:%"</literal><name pos:start="163:54" pos:end="163:59">PRId64</name><literal type="string" pos:start="163:60" pos:end="163:63">"@%"</literal><name pos:start="163:64" pos:end="163:69">PRId64</name><literal type="string" pos:start="163:70" pos:end="163:73">"\n"</literal></expr></argument>,

                            <argument pos:start="165:29" pos:end="165:36"><expr pos:start="165:29" pos:end="165:36"><name pos:start="165:29" pos:end="165:36"><name pos:start="165:29" pos:end="165:30">en</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:36">size</name></name></expr></argument>, <argument pos:start="165:39" pos:end="165:45"><expr pos:start="165:39" pos:end="165:45"><name pos:start="165:39" pos:end="165:45"><name pos:start="165:39" pos:end="165:40">en</name><operator pos:start="165:41" pos:end="165:42">-&gt;</operator><name pos:start="165:43" pos:end="165:45">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="169:9" pos:end="215:9"><if pos:start="169:9" pos:end="215:9">if <condition pos:start="169:12" pos:end="169:47">(<expr pos:start="169:13" pos:end="169:46"><name pos:start="169:13" pos:end="169:22"><name pos:start="169:13" pos:end="169:15">hls</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:22">flags</name></name> <operator pos:start="169:24" pos:end="169:24">&amp;</operator> <name pos:start="169:26" pos:end="169:46">HLS_PROGRAM_DATE_TIME</name></expr>)</condition> <block pos:start="169:49" pos:end="215:9">{<block_content pos:start="171:13" pos:end="213:43">

            <decl_stmt pos:start="171:13" pos:end="171:33"><decl pos:start="171:13" pos:end="171:21"><type pos:start="171:13" pos:end="171:18"><name pos:start="171:13" pos:end="171:18">time_t</name></type> <name pos:start="171:20" pos:end="171:21">tt</name></decl>, <decl pos:start="171:24" pos:end="171:32"><type ref="prev" pos:start="171:13" pos:end="171:18"/><name pos:start="171:24" pos:end="171:32">wrongsecs</name></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:22"><decl pos:start="173:13" pos:end="173:21"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:21">milli</name></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:34"><decl pos:start="175:13" pos:end="175:25"><type pos:start="175:13" pos:end="175:23"><name pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:18">struct</name> <name pos:start="175:20" pos:end="175:21">tm</name></name> <modifier pos:start="175:23" pos:end="175:23">*</modifier></type><name pos:start="175:24" pos:end="175:25">tm</name></decl>, <decl pos:start="175:28" pos:end="175:33"><type ref="prev" pos:start="175:13" pos:end="175:23"/><name pos:start="175:28" pos:end="175:33">tmpbuf</name></decl>;</decl_stmt>

            <decl_stmt pos:start="177:13" pos:end="177:38"><decl pos:start="177:13" pos:end="177:26"><type pos:start="177:13" pos:end="177:16"><name pos:start="177:13" pos:end="177:16">char</name></type> <name pos:start="177:18" pos:end="177:26"><name pos:start="177:18" pos:end="177:21">buf0</name><index pos:start="177:22" pos:end="177:26">[<expr pos:start="177:23" pos:end="177:25"><literal type="number" pos:start="177:23" pos:end="177:25">128</literal></expr>]</index></name></decl>, <decl pos:start="177:29" pos:end="177:37"><type ref="prev" pos:start="177:13" pos:end="177:16"/><name pos:start="177:29" pos:end="177:37"><name pos:start="177:29" pos:end="177:32">buf1</name><index pos:start="177:33" pos:end="177:37">[<expr pos:start="177:34" pos:end="177:36"><literal type="number" pos:start="177:34" pos:end="177:36">128</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:41"><expr pos:start="179:13" pos:end="179:40"><name pos:start="179:13" pos:end="179:14">tt</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <operator pos:start="179:18" pos:end="179:18">(</operator><name pos:start="179:19" pos:end="179:25">int64_t</name><operator pos:start="179:26" pos:end="179:26">)</operator><name pos:start="179:27" pos:end="179:40">prog_date_time</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:71"><expr pos:start="181:13" pos:end="181:70"><name pos:start="181:13" pos:end="181:17">milli</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <call pos:start="181:21" pos:end="181:70"><name pos:start="181:21" pos:end="181:27">av_clip</name><argument_list pos:start="181:28" pos:end="181:70">(<argument pos:start="181:29" pos:end="181:61"><expr pos:start="181:29" pos:end="181:61"><call pos:start="181:29" pos:end="181:61"><name pos:start="181:29" pos:end="181:33">lrint</name><argument_list pos:start="181:34" pos:end="181:61">(<argument pos:start="181:35" pos:end="181:60"><expr pos:start="181:35" pos:end="181:60"><literal type="number" pos:start="181:35" pos:end="181:38">1000</literal><operator pos:start="181:39" pos:end="181:39">*</operator><operator pos:start="181:40" pos:end="181:40">(</operator><name pos:start="181:41" pos:end="181:54">prog_date_time</name> <operator pos:start="181:56" pos:end="181:56">-</operator> <name pos:start="181:58" pos:end="181:59">tt</name><operator pos:start="181:60" pos:end="181:60">)</operator></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:64" pos:end="181:64"><expr pos:start="181:64" pos:end="181:64"><literal type="number" pos:start="181:64" pos:end="181:64">0</literal></expr></argument>, <argument pos:start="181:67" pos:end="181:69"><expr pos:start="181:67" pos:end="181:69"><literal type="number" pos:start="181:67" pos:end="181:69">999</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:43"><expr pos:start="183:13" pos:end="183:42"><name pos:start="183:13" pos:end="183:14">tm</name> <operator pos:start="183:16" pos:end="183:16">=</operator> <call pos:start="183:18" pos:end="183:42"><name pos:start="183:18" pos:end="183:28">localtime_r</name><argument_list pos:start="183:29" pos:end="183:42">(<argument pos:start="183:30" pos:end="183:32"><expr pos:start="183:30" pos:end="183:32"><operator pos:start="183:30" pos:end="183:30">&amp;</operator><name pos:start="183:31" pos:end="183:32">tt</name></expr></argument>, <argument pos:start="183:35" pos:end="183:41"><expr pos:start="183:35" pos:end="183:41"><operator pos:start="183:35" pos:end="183:35">&amp;</operator><name pos:start="183:36" pos:end="183:41">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:66"><expr pos:start="185:13" pos:end="185:65"><call pos:start="185:13" pos:end="185:65"><name pos:start="185:13" pos:end="185:20">strftime</name><argument_list pos:start="185:21" pos:end="185:65">(<argument pos:start="185:22" pos:end="185:25"><expr pos:start="185:22" pos:end="185:25"><name pos:start="185:22" pos:end="185:25">buf0</name></expr></argument>, <argument pos:start="185:28" pos:end="185:39"><expr pos:start="185:28" pos:end="185:39"><sizeof pos:start="185:28" pos:end="185:39">sizeof<argument_list pos:start="185:34" pos:end="185:39">(<argument pos:start="185:35" pos:end="185:38"><expr pos:start="185:35" pos:end="185:38"><name pos:start="185:35" pos:end="185:38">buf0</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="185:42" pos:end="185:60"><expr pos:start="185:42" pos:end="185:60"><literal type="string" pos:start="185:42" pos:end="185:60">"%Y-%m-%dT%H:%M:%S"</literal></expr></argument>, <argument pos:start="185:63" pos:end="185:64"><expr pos:start="185:63" pos:end="185:64"><name pos:start="185:63" pos:end="185:64">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="209:13"><if pos:start="187:13" pos:end="209:13">if <condition pos:start="187:16" pos:end="187:85">(<expr pos:start="187:17" pos:end="187:84"><operator pos:start="187:17" pos:end="187:17">!</operator><call pos:start="187:18" pos:end="187:55"><name pos:start="187:18" pos:end="187:25">strftime</name><argument_list pos:start="187:26" pos:end="187:55">(<argument pos:start="187:27" pos:end="187:30"><expr pos:start="187:27" pos:end="187:30"><name pos:start="187:27" pos:end="187:30">buf1</name></expr></argument>, <argument pos:start="187:33" pos:end="187:44"><expr pos:start="187:33" pos:end="187:44"><sizeof pos:start="187:33" pos:end="187:44">sizeof<argument_list pos:start="187:39" pos:end="187:44">(<argument pos:start="187:40" pos:end="187:43"><expr pos:start="187:40" pos:end="187:43"><name pos:start="187:40" pos:end="187:43">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="187:47" pos:end="187:50"><expr pos:start="187:47" pos:end="187:50"><literal type="string" pos:start="187:47" pos:end="187:50">"%z"</literal></expr></argument>, <argument pos:start="187:53" pos:end="187:54"><expr pos:start="187:53" pos:end="187:54"><name pos:start="187:53" pos:end="187:54">tm</name></expr></argument>)</argument_list></call> <operator pos:start="187:57" pos:end="187:58">||</operator> <name pos:start="187:60" pos:end="187:66"><name pos:start="187:60" pos:end="187:63">buf1</name><index pos:start="187:64" pos:end="187:66">[<expr pos:start="187:65" pos:end="187:65"><literal type="number" pos:start="187:65" pos:end="187:65">1</literal></expr>]</index></name><operator pos:start="187:67" pos:end="187:67">&lt;</operator><literal type="char" pos:start="187:68" pos:end="187:70">'0'</literal> <operator pos:start="187:72" pos:end="187:73">||</operator><name pos:start="187:74" pos:end="187:80"><name pos:start="187:74" pos:end="187:77">buf1</name><index pos:start="187:78" pos:end="187:80">[<expr pos:start="187:79" pos:end="187:79"><literal type="number" pos:start="187:79" pos:end="187:79">1</literal></expr>]</index></name><operator pos:start="187:81" pos:end="187:81">&gt;</operator><literal type="char" pos:start="187:82" pos:end="187:84">'2'</literal></expr>)</condition> <block pos:start="187:87" pos:end="209:13">{<block_content pos:start="189:17" pos:end="207:38">

                <decl_stmt pos:start="189:17" pos:end="189:47"><decl pos:start="189:17" pos:end="189:26"><type pos:start="189:17" pos:end="189:19"><name pos:start="189:17" pos:end="189:19">int</name></type> <name pos:start="189:21" pos:end="189:26">tz_min</name></decl>, <decl pos:start="189:29" pos:end="189:46"><type ref="prev" pos:start="189:17" pos:end="189:19"/><name pos:start="189:29" pos:end="189:31">dst</name> <init pos:start="189:33" pos:end="189:46">= <expr pos:start="189:35" pos:end="189:46"><name pos:start="189:35" pos:end="189:46"><name pos:start="189:35" pos:end="189:36">tm</name><operator pos:start="189:37" pos:end="189:38">-&gt;</operator><name pos:start="189:39" pos:end="189:46">tm_isdst</name></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:44"><expr pos:start="191:17" pos:end="191:43"><name pos:start="191:17" pos:end="191:18">tm</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <call pos:start="191:22" pos:end="191:43"><name pos:start="191:22" pos:end="191:29">gmtime_r</name><argument_list pos:start="191:30" pos:end="191:43">(<argument pos:start="191:31" pos:end="191:33"><expr pos:start="191:31" pos:end="191:33"><operator pos:start="191:31" pos:end="191:31">&amp;</operator><name pos:start="191:32" pos:end="191:33">tt</name></expr></argument>, <argument pos:start="191:36" pos:end="191:42"><expr pos:start="191:36" pos:end="191:42"><operator pos:start="191:36" pos:end="191:36">&amp;</operator><name pos:start="191:37" pos:end="191:42">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:35"><expr pos:start="193:17" pos:end="193:34"><name pos:start="193:17" pos:end="193:28"><name pos:start="193:17" pos:end="193:18">tm</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:28">tm_isdst</name></name> <operator pos:start="193:30" pos:end="193:30">=</operator> <name pos:start="193:32" pos:end="193:34">dst</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:39"><expr pos:start="195:17" pos:end="195:38"><name pos:start="195:17" pos:end="195:25">wrongsecs</name> <operator pos:start="195:27" pos:end="195:27">=</operator> <call pos:start="195:29" pos:end="195:38"><name pos:start="195:29" pos:end="195:34">mktime</name><argument_list pos:start="195:35" pos:end="195:38">(<argument pos:start="195:36" pos:end="195:37"><expr pos:start="195:36" pos:end="195:37"><name pos:start="195:36" pos:end="195:37">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:57"><expr pos:start="197:17" pos:end="197:56"><name pos:start="197:17" pos:end="197:22">tz_min</name> <operator pos:start="197:24" pos:end="197:24">=</operator> <operator pos:start="197:26" pos:end="197:26">(</operator><call pos:start="197:27" pos:end="197:45"><name pos:start="197:27" pos:end="197:29">abs</name><argument_list pos:start="197:30" pos:end="197:45">(<argument pos:start="197:31" pos:end="197:44"><expr pos:start="197:31" pos:end="197:44"><name pos:start="197:31" pos:end="197:39">wrongsecs</name> <operator pos:start="197:41" pos:end="197:41">-</operator> <name pos:start="197:43" pos:end="197:44">tt</name></expr></argument>)</argument_list></call> <operator pos:start="197:47" pos:end="197:47">+</operator> <literal type="number" pos:start="197:49" pos:end="197:50">30</literal><operator pos:start="197:51" pos:end="197:51">)</operator> <operator pos:start="197:53" pos:end="197:53">/</operator> <literal type="number" pos:start="197:55" pos:end="197:56">60</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="207:38"><expr pos:start="199:17" pos:end="207:37"><call pos:start="199:17" pos:end="207:37"><name pos:start="199:17" pos:end="199:24">snprintf</name><argument_list pos:start="199:25" pos:end="207:37">(<argument pos:start="199:26" pos:end="199:29"><expr pos:start="199:26" pos:end="199:29"><name pos:start="199:26" pos:end="199:29">buf1</name></expr></argument>, <argument pos:start="199:32" pos:end="199:43"><expr pos:start="199:32" pos:end="199:43"><sizeof pos:start="199:32" pos:end="199:43">sizeof<argument_list pos:start="199:38" pos:end="199:43">(<argument pos:start="199:39" pos:end="199:42"><expr pos:start="199:39" pos:end="199:42"><name pos:start="199:39" pos:end="199:42">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                         <argument pos:start="201:26" pos:end="201:37"><expr pos:start="201:26" pos:end="201:37"><literal type="string" pos:start="201:26" pos:end="201:37">"%c%02d%02d"</literal></expr></argument>,

                         <argument pos:start="203:26" pos:end="203:52"><expr pos:start="203:26" pos:end="203:52"><ternary pos:start="203:26" pos:end="203:52"><condition pos:start="203:26" pos:end="203:42"><expr pos:start="203:26" pos:end="203:40"><name pos:start="203:26" pos:end="203:34">wrongsecs</name> <operator pos:start="203:36" pos:end="203:37">&lt;=</operator> <name pos:start="203:39" pos:end="203:40">tt</name></expr> ?</condition><then pos:start="203:44" pos:end="203:46"> <expr pos:start="203:44" pos:end="203:46"><literal type="char" pos:start="203:44" pos:end="203:46">'+'</literal></expr> </then><else pos:start="203:48" pos:end="203:52">: <expr pos:start="203:50" pos:end="203:52"><literal type="char" pos:start="203:50" pos:end="203:52">'-'</literal></expr></else></ternary></expr></argument>,

                         <argument pos:start="205:26" pos:end="205:36"><expr pos:start="205:26" pos:end="205:36"><name pos:start="205:26" pos:end="205:31">tz_min</name> <operator pos:start="205:33" pos:end="205:33">/</operator> <literal type="number" pos:start="205:35" pos:end="205:36">60</literal></expr></argument>,

                         <argument pos:start="207:26" pos:end="207:36"><expr pos:start="207:26" pos:end="207:36"><name pos:start="207:26" pos:end="207:31">tz_min</name> <operator pos:start="207:33" pos:end="207:33">%</operator> <literal type="number" pos:start="207:35" pos:end="207:36">60</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:88"><expr pos:start="211:13" pos:end="211:87"><call pos:start="211:13" pos:end="211:87"><name pos:start="211:13" pos:end="211:23">avio_printf</name><argument_list pos:start="211:24" pos:end="211:87">(<argument pos:start="211:25" pos:end="211:27"><expr pos:start="211:25" pos:end="211:27"><name pos:start="211:25" pos:end="211:27">out</name></expr></argument>, <argument pos:start="211:30" pos:end="211:67"><expr pos:start="211:30" pos:end="211:67"><literal type="string" pos:start="211:30" pos:end="211:67">"#EXT-X-PROGRAM-DATE-TIME:%s.%03d%s\n"</literal></expr></argument>, <argument pos:start="211:70" pos:end="211:73"><expr pos:start="211:70" pos:end="211:73"><name pos:start="211:70" pos:end="211:73">buf0</name></expr></argument>, <argument pos:start="211:76" pos:end="211:80"><expr pos:start="211:76" pos:end="211:80"><name pos:start="211:76" pos:end="211:80">milli</name></expr></argument>, <argument pos:start="211:83" pos:end="211:86"><expr pos:start="211:83" pos:end="211:86"><name pos:start="211:83" pos:end="211:86">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:43"><expr pos:start="213:13" pos:end="213:42"><name pos:start="213:13" pos:end="213:26">prog_date_time</name> <operator pos:start="213:28" pos:end="213:29">+=</operator> <name pos:start="213:31" pos:end="213:42"><name pos:start="213:31" pos:end="213:32">en</name><operator pos:start="213:33" pos:end="213:34">-&gt;</operator><name pos:start="213:35" pos:end="213:42">duration</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="217:9" pos:end="225:9"><if pos:start="217:9" pos:end="225:9">if <condition pos:start="217:12" pos:end="217:81">(<expr pos:start="217:13" pos:end="217:80"><operator pos:start="217:13" pos:end="217:13">!</operator><operator pos:start="217:14" pos:end="217:14">(</operator><operator pos:start="217:15" pos:end="217:15">(</operator><name pos:start="217:16" pos:end="217:32"><name pos:start="217:16" pos:end="217:18">hls</name><operator pos:start="217:19" pos:end="217:20">-&gt;</operator><name pos:start="217:21" pos:end="217:32">segment_type</name></name> <operator pos:start="217:34" pos:end="217:35">==</operator> <name pos:start="217:37" pos:end="217:53">SEGMENT_TYPE_FMP4</name><operator pos:start="217:54" pos:end="217:54">)</operator> <operator pos:start="217:56" pos:end="217:57">&amp;&amp;</operator> <operator pos:start="217:59" pos:end="217:59">(</operator><name pos:start="217:60" pos:end="217:61">en</name> <operator pos:start="217:63" pos:end="217:64">==</operator> <name pos:start="217:66" pos:end="217:78"><name pos:start="217:66" pos:end="217:68">hls</name><operator pos:start="217:69" pos:end="217:70">-&gt;</operator><name pos:start="217:71" pos:end="217:78">segments</name></name><operator pos:start="217:79" pos:end="217:79">)</operator><operator pos:start="217:80" pos:end="217:80">)</operator></expr>)</condition> <block pos:start="217:83" pos:end="225:9">{<block_content pos:start="219:13" pos:end="223:51">

            <if_stmt pos:start="219:13" pos:end="221:53"><if pos:start="219:13" pos:end="221:53">if <condition pos:start="219:16" pos:end="219:29">(<expr pos:start="219:17" pos:end="219:28"><name pos:start="219:17" pos:end="219:28"><name pos:start="219:17" pos:end="219:19">hls</name><operator pos:start="219:20" pos:end="219:21">-&gt;</operator><name pos:start="219:22" pos:end="219:28">baseurl</name></name></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:53"><block_content pos:start="221:17" pos:end="221:53">

                <expr_stmt pos:start="221:17" pos:end="221:53"><expr pos:start="221:17" pos:end="221:52"><call pos:start="221:17" pos:end="221:52"><name pos:start="221:17" pos:end="221:27">avio_printf</name><argument_list pos:start="221:28" pos:end="221:52">(<argument pos:start="221:29" pos:end="221:31"><expr pos:start="221:29" pos:end="221:31"><name pos:start="221:29" pos:end="221:31">out</name></expr></argument>, <argument pos:start="221:34" pos:end="221:37"><expr pos:start="221:34" pos:end="221:37"><literal type="string" pos:start="221:34" pos:end="221:37">"%s"</literal></expr></argument>, <argument pos:start="221:40" pos:end="221:51"><expr pos:start="221:40" pos:end="221:51"><name pos:start="221:40" pos:end="221:51"><name pos:start="221:40" pos:end="221:42">hls</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:51">baseurl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:51"><expr pos:start="223:13" pos:end="223:50"><call pos:start="223:13" pos:end="223:50"><name pos:start="223:13" pos:end="223:23">avio_printf</name><argument_list pos:start="223:24" pos:end="223:50">(<argument pos:start="223:25" pos:end="223:27"><expr pos:start="223:25" pos:end="223:27"><name pos:start="223:25" pos:end="223:27">out</name></expr></argument>, <argument pos:start="223:30" pos:end="223:35"><expr pos:start="223:30" pos:end="223:35"><literal type="string" pos:start="223:30" pos:end="223:35">"%s\n"</literal></expr></argument>, <argument pos:start="223:38" pos:end="223:49"><expr pos:start="223:38" pos:end="223:49"><name pos:start="223:38" pos:end="223:49"><name pos:start="223:38" pos:end="223:39">en</name><operator pos:start="223:40" pos:end="223:41">-&gt;</operator><name pos:start="223:42" pos:end="223:49">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="231:5" pos:end="233:45"><if pos:start="231:5" pos:end="233:45">if <condition pos:start="231:8" pos:end="231:51">(<expr pos:start="231:9" pos:end="231:50"><name pos:start="231:9" pos:end="231:12">last</name> <operator pos:start="231:14" pos:end="231:15">&amp;&amp;</operator> <operator pos:start="231:17" pos:end="231:17">(</operator><name pos:start="231:18" pos:end="231:27"><name pos:start="231:18" pos:end="231:20">hls</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:27">flags</name></name> <operator pos:start="231:29" pos:end="231:29">&amp;</operator> <name pos:start="231:31" pos:end="231:46">HLS_OMIT_ENDLIST</name><operator pos:start="231:47" pos:end="231:47">)</operator><operator pos:start="231:48" pos:end="231:49">==</operator><literal type="number" pos:start="231:50" pos:end="231:50">0</literal></expr>)</condition><block type="pseudo" pos:start="233:9" pos:end="233:45"><block_content pos:start="233:9" pos:end="233:45">

        <expr_stmt pos:start="233:9" pos:end="233:45"><expr pos:start="233:9" pos:end="233:44"><call pos:start="233:9" pos:end="233:44"><name pos:start="233:9" pos:end="233:19">avio_printf</name><argument_list pos:start="233:20" pos:end="233:44">(<argument pos:start="233:21" pos:end="233:23"><expr pos:start="233:21" pos:end="233:23"><name pos:start="233:21" pos:end="233:23">out</name></expr></argument>, <argument pos:start="233:26" pos:end="233:43"><expr pos:start="233:26" pos:end="233:43"><literal type="string" pos:start="233:26" pos:end="233:43">"#EXT-X-ENDLIST\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="237:5" pos:end="273:5"><if pos:start="237:5" pos:end="273:5">if<condition pos:start="237:7" pos:end="237:28">( <expr pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:26"><name pos:start="237:9" pos:end="237:11">hls</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:26">vtt_m3u8_name</name></name></expr> )</condition> <block pos:start="237:30" pos:end="273:5">{<block_content pos:start="239:9" pos:end="269:53">

        <if_stmt pos:start="239:9" pos:end="241:22"><if pos:start="239:9" pos:end="241:22">if <condition pos:start="239:12" pos:end="239:95">(<expr pos:start="239:13" pos:end="239:94"><operator pos:start="239:13" pos:end="239:13">(</operator><name pos:start="239:14" pos:end="239:16">ret</name> <operator pos:start="239:18" pos:end="239:18">=</operator> <call pos:start="239:20" pos:end="239:89"><name pos:start="239:20" pos:end="239:29"><name pos:start="239:20" pos:end="239:20">s</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:29">io_open</name></name><argument_list pos:start="239:30" pos:end="239:89">(<argument pos:start="239:31" pos:end="239:31"><expr pos:start="239:31" pos:end="239:31"><name pos:start="239:31" pos:end="239:31">s</name></expr></argument>, <argument pos:start="239:34" pos:end="239:41"><expr pos:start="239:34" pos:end="239:41"><operator pos:start="239:34" pos:end="239:34">&amp;</operator><name pos:start="239:35" pos:end="239:41">sub_out</name></expr></argument>, <argument pos:start="239:44" pos:end="239:61"><expr pos:start="239:44" pos:end="239:61"><name pos:start="239:44" pos:end="239:61"><name pos:start="239:44" pos:end="239:46">hls</name><operator pos:start="239:47" pos:end="239:48">-&gt;</operator><name pos:start="239:49" pos:end="239:61">vtt_m3u8_name</name></name></expr></argument>, <argument pos:start="239:64" pos:end="239:78"><expr pos:start="239:64" pos:end="239:78"><name pos:start="239:64" pos:end="239:78">AVIO_FLAG_WRITE</name></expr></argument>, <argument pos:start="239:81" pos:end="239:88"><expr pos:start="239:81" pos:end="239:88"><operator pos:start="239:81" pos:end="239:81">&amp;</operator><name pos:start="239:82" pos:end="239:88">options</name></expr></argument>)</argument_list></call><operator pos:start="239:90" pos:end="239:90">)</operator> <operator pos:start="239:92" pos:end="239:92">&lt;</operator> <literal type="number" pos:start="239:94" pos:end="239:94">0</literal></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:22"><block_content pos:start="241:13" pos:end="241:22">

            <goto pos:start="241:13" pos:end="241:22">goto <name pos:start="241:18" pos:end="241:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:80"><expr pos:start="243:9" pos:end="243:79"><call pos:start="243:9" pos:end="243:79"><name pos:start="243:9" pos:end="243:29">write_m3u8_head_block</name><argument_list pos:start="243:30" pos:end="243:79">(<argument pos:start="243:31" pos:end="243:33"><expr pos:start="243:31" pos:end="243:33"><name pos:start="243:31" pos:end="243:33">hls</name></expr></argument>, <argument pos:start="243:36" pos:end="243:42"><expr pos:start="243:36" pos:end="243:42"><name pos:start="243:36" pos:end="243:42">sub_out</name></expr></argument>, <argument pos:start="243:45" pos:end="243:51"><expr pos:start="243:45" pos:end="243:51"><name pos:start="243:45" pos:end="243:51">version</name></expr></argument>, <argument pos:start="243:54" pos:end="243:68"><expr pos:start="243:54" pos:end="243:68"><name pos:start="243:54" pos:end="243:68">target_duration</name></expr></argument>, <argument pos:start="243:71" pos:end="243:78"><expr pos:start="243:71" pos:end="243:78"><name pos:start="243:71" pos:end="243:78">sequence</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="247:9" pos:end="263:9">for <control pos:start="247:13" pos:end="247:51">(<init pos:start="247:14" pos:end="247:32"><expr pos:start="247:14" pos:end="247:31"><name pos:start="247:14" pos:end="247:15">en</name> <operator pos:start="247:17" pos:end="247:17">=</operator> <name pos:start="247:19" pos:end="247:31"><name pos:start="247:19" pos:end="247:21">hls</name><operator pos:start="247:22" pos:end="247:23">-&gt;</operator><name pos:start="247:24" pos:end="247:31">segments</name></name></expr>;</init> <condition pos:start="247:34" pos:end="247:36"><expr pos:start="247:34" pos:end="247:35"><name pos:start="247:34" pos:end="247:35">en</name></expr>;</condition> <incr pos:start="247:38" pos:end="247:50"><expr pos:start="247:38" pos:end="247:50"><name pos:start="247:38" pos:end="247:39">en</name> <operator pos:start="247:41" pos:end="247:41">=</operator> <name pos:start="247:43" pos:end="247:50"><name pos:start="247:43" pos:end="247:44">en</name><operator pos:start="247:45" pos:end="247:46">-&gt;</operator><name pos:start="247:47" pos:end="247:50">next</name></name></expr></incr>)</control> <block pos:start="247:53" pos:end="263:9">{<block_content pos:start="249:13" pos:end="261:59">

            <expr_stmt pos:start="249:13" pos:end="249:64"><expr pos:start="249:13" pos:end="249:63"><call pos:start="249:13" pos:end="249:63"><name pos:start="249:13" pos:end="249:23">avio_printf</name><argument_list pos:start="249:24" pos:end="249:63">(<argument pos:start="249:25" pos:end="249:31"><expr pos:start="249:25" pos:end="249:31"><name pos:start="249:25" pos:end="249:31">sub_out</name></expr></argument>, <argument pos:start="249:34" pos:end="249:48"><expr pos:start="249:34" pos:end="249:48"><literal type="string" pos:start="249:34" pos:end="249:48">"#EXTINF:%f,\n"</literal></expr></argument>, <argument pos:start="249:51" pos:end="249:62"><expr pos:start="249:51" pos:end="249:62"><name pos:start="249:51" pos:end="249:62"><name pos:start="249:51" pos:end="249:52">en</name><operator pos:start="249:53" pos:end="249:54">-&gt;</operator><name pos:start="249:55" pos:end="249:62">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="251:13" pos:end="255:44"><if pos:start="251:13" pos:end="255:44">if <condition pos:start="251:16" pos:end="251:31">(<expr pos:start="251:17" pos:end="251:30"><name pos:start="251:17" pos:end="251:30">byterange_mode</name></expr>)</condition><block type="pseudo" pos:start="253:18" pos:end="255:44"><block_content pos:start="253:18" pos:end="255:44">

                 <expr_stmt pos:start="253:18" pos:end="255:44"><expr pos:start="253:18" pos:end="255:43"><call pos:start="253:18" pos:end="255:43"><name pos:start="253:18" pos:end="253:28">avio_printf</name><argument_list pos:start="253:29" pos:end="255:43">(<argument pos:start="253:30" pos:end="253:36"><expr pos:start="253:30" pos:end="253:36"><name pos:start="253:30" pos:end="253:36">sub_out</name></expr></argument>, <argument pos:start="253:39" pos:end="253:78"><expr pos:start="253:39" pos:end="253:78"><literal type="string" pos:start="253:39" pos:end="253:58">"#EXT-X-BYTERANGE:%"</literal><name pos:start="253:59" pos:end="253:64">PRIi64</name><literal type="string" pos:start="253:65" pos:end="253:68">"@%"</literal><name pos:start="253:69" pos:end="253:74">PRIi64</name><literal type="string" pos:start="253:75" pos:end="253:78">"\n"</literal></expr></argument>,

                         <argument pos:start="255:26" pos:end="255:33"><expr pos:start="255:26" pos:end="255:33"><name pos:start="255:26" pos:end="255:33"><name pos:start="255:26" pos:end="255:27">en</name><operator pos:start="255:28" pos:end="255:29">-&gt;</operator><name pos:start="255:30" pos:end="255:33">size</name></name></expr></argument>, <argument pos:start="255:36" pos:end="255:42"><expr pos:start="255:36" pos:end="255:42"><name pos:start="255:36" pos:end="255:42"><name pos:start="255:36" pos:end="255:37">en</name><operator pos:start="255:38" pos:end="255:39">-&gt;</operator><name pos:start="255:40" pos:end="255:42">pos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="257:13" pos:end="259:57"><if pos:start="257:13" pos:end="259:57">if <condition pos:start="257:16" pos:end="257:29">(<expr pos:start="257:17" pos:end="257:28"><name pos:start="257:17" pos:end="257:28"><name pos:start="257:17" pos:end="257:19">hls</name><operator pos:start="257:20" pos:end="257:21">-&gt;</operator><name pos:start="257:22" pos:end="257:28">baseurl</name></name></expr>)</condition><block type="pseudo" pos:start="259:17" pos:end="259:57"><block_content pos:start="259:17" pos:end="259:57">

                <expr_stmt pos:start="259:17" pos:end="259:57"><expr pos:start="259:17" pos:end="259:56"><call pos:start="259:17" pos:end="259:56"><name pos:start="259:17" pos:end="259:27">avio_printf</name><argument_list pos:start="259:28" pos:end="259:56">(<argument pos:start="259:29" pos:end="259:35"><expr pos:start="259:29" pos:end="259:35"><name pos:start="259:29" pos:end="259:35">sub_out</name></expr></argument>, <argument pos:start="259:38" pos:end="259:41"><expr pos:start="259:38" pos:end="259:41"><literal type="string" pos:start="259:38" pos:end="259:41">"%s"</literal></expr></argument>, <argument pos:start="259:44" pos:end="259:55"><expr pos:start="259:44" pos:end="259:55"><name pos:start="259:44" pos:end="259:55"><name pos:start="259:44" pos:end="259:46">hls</name><operator pos:start="259:47" pos:end="259:48">-&gt;</operator><name pos:start="259:49" pos:end="259:55">baseurl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:59"><expr pos:start="261:13" pos:end="261:58"><call pos:start="261:13" pos:end="261:58"><name pos:start="261:13" pos:end="261:23">avio_printf</name><argument_list pos:start="261:24" pos:end="261:58">(<argument pos:start="261:25" pos:end="261:31"><expr pos:start="261:25" pos:end="261:31"><name pos:start="261:25" pos:end="261:31">sub_out</name></expr></argument>, <argument pos:start="261:34" pos:end="261:39"><expr pos:start="261:34" pos:end="261:39"><literal type="string" pos:start="261:34" pos:end="261:39">"%s\n"</literal></expr></argument>, <argument pos:start="261:42" pos:end="261:57"><expr pos:start="261:42" pos:end="261:57"><name pos:start="261:42" pos:end="261:57"><name pos:start="261:42" pos:end="261:43">en</name><operator pos:start="261:44" pos:end="261:45">-&gt;</operator><name pos:start="261:46" pos:end="261:57">sub_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="267:9" pos:end="269:53"><if pos:start="267:9" pos:end="269:53">if <condition pos:start="267:12" pos:end="267:17">(<expr pos:start="267:13" pos:end="267:16"><name pos:start="267:13" pos:end="267:16">last</name></expr>)</condition><block type="pseudo" pos:start="269:13" pos:end="269:53"><block_content pos:start="269:13" pos:end="269:53">

            <expr_stmt pos:start="269:13" pos:end="269:53"><expr pos:start="269:13" pos:end="269:52"><call pos:start="269:13" pos:end="269:52"><name pos:start="269:13" pos:end="269:23">avio_printf</name><argument_list pos:start="269:24" pos:end="269:52">(<argument pos:start="269:25" pos:end="269:31"><expr pos:start="269:25" pos:end="269:31"><name pos:start="269:25" pos:end="269:31">sub_out</name></expr></argument>, <argument pos:start="269:34" pos:end="269:51"><expr pos:start="269:34" pos:end="269:51"><literal type="string" pos:start="269:34" pos:end="269:51">"#EXT-X-ENDLIST\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if></if_stmt>



<label pos:start="277:1" pos:end="277:5"><name pos:start="277:1" pos:end="277:4">fail</name>:</label>

    <expr_stmt pos:start="279:5" pos:end="279:27"><expr pos:start="279:5" pos:end="279:26"><call pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:16">av_dict_free</name><argument_list pos:start="279:17" pos:end="279:26">(<argument pos:start="279:18" pos:end="279:25"><expr pos:start="279:18" pos:end="279:25"><operator pos:start="279:18" pos:end="279:18">&amp;</operator><name pos:start="279:19" pos:end="279:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:32"><expr pos:start="281:5" pos:end="281:31"><call pos:start="281:5" pos:end="281:31"><name pos:start="281:5" pos:end="281:22">ff_format_io_close</name><argument_list pos:start="281:23" pos:end="281:31">(<argument pos:start="281:24" pos:end="281:24"><expr pos:start="281:24" pos:end="281:24"><name pos:start="281:24" pos:end="281:24">s</name></expr></argument>, <argument pos:start="281:27" pos:end="281:30"><expr pos:start="281:27" pos:end="281:30"><operator pos:start="281:27" pos:end="281:27">&amp;</operator><name pos:start="281:28" pos:end="281:30">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:36"><expr pos:start="283:5" pos:end="283:35"><call pos:start="283:5" pos:end="283:35"><name pos:start="283:5" pos:end="283:22">ff_format_io_close</name><argument_list pos:start="283:23" pos:end="283:35">(<argument pos:start="283:24" pos:end="283:24"><expr pos:start="283:24" pos:end="283:24"><name pos:start="283:24" pos:end="283:24">s</name></expr></argument>, <argument pos:start="283:27" pos:end="283:34"><expr pos:start="283:27" pos:end="283:34"><operator pos:start="283:27" pos:end="283:27">&amp;</operator><name pos:start="283:28" pos:end="283:34">sub_out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="285:5" pos:end="287:49"><if pos:start="285:5" pos:end="287:49">if <condition pos:start="285:8" pos:end="285:31">(<expr pos:start="285:9" pos:end="285:30"><name pos:start="285:9" pos:end="285:11">ret</name> <operator pos:start="285:13" pos:end="285:14">&gt;=</operator> <literal type="number" pos:start="285:16" pos:end="285:16">0</literal> <operator pos:start="285:18" pos:end="285:19">&amp;&amp;</operator> <name pos:start="285:21" pos:end="285:30">use_rename</name></expr>)</condition><block type="pseudo" pos:start="287:9" pos:end="287:49"><block_content pos:start="287:9" pos:end="287:49">

        <expr_stmt pos:start="287:9" pos:end="287:49"><expr pos:start="287:9" pos:end="287:48"><call pos:start="287:9" pos:end="287:48"><name pos:start="287:9" pos:end="287:17">ff_rename</name><argument_list pos:start="287:18" pos:end="287:48">(<argument pos:start="287:19" pos:end="287:31"><expr pos:start="287:19" pos:end="287:31"><name pos:start="287:19" pos:end="287:31">temp_filename</name></expr></argument>, <argument pos:start="287:34" pos:end="287:44"><expr pos:start="287:34" pos:end="287:44"><name pos:start="287:34" pos:end="287:44"><name pos:start="287:34" pos:end="287:34">s</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:44">filename</name></name></expr></argument>, <argument pos:start="287:47" pos:end="287:47"><expr pos:start="287:47" pos:end="287:47"><name pos:start="287:47" pos:end="287:47">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="289:5" pos:end="289:15">return <expr pos:start="289:12" pos:end="289:14"><name pos:start="289:12" pos:end="289:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
