<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3204.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">calc_bit_demand</name><parameter_list pos:start="1:27" pos:end="3:44">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:40">AacPsyContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:55"><decl pos:start="1:48" pos:end="1:55"><type pos:start="1:48" pos:end="1:55"><name pos:start="1:48" pos:end="1:52">float</name></type> <name pos:start="1:54" pos:end="1:55">pe</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:65"><decl pos:start="1:58" pos:end="1:65"><type pos:start="1:58" pos:end="1:65"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:65">bits</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:75"><decl pos:start="1:68" pos:end="1:75"><type pos:start="1:68" pos:end="1:75"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:75">size</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:43"><decl pos:start="3:28" pos:end="3:43"><type pos:start="3:28" pos:end="3:43"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:43">short_window</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:78">

    <decl_stmt pos:start="7:5" pos:end="7:95"><decl pos:start="7:5" pos:end="7:94"><type pos:start="7:5" pos:end="7:15"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:15">float</name></type> <name pos:start="7:17" pos:end="7:29">bitsave_slope</name>  <init pos:start="7:32" pos:end="7:94">= <expr pos:start="7:34" pos:end="7:94"><ternary pos:start="7:34" pos:end="7:94"><condition pos:start="7:34" pos:end="7:47"><expr pos:start="7:34" pos:end="7:45"><name pos:start="7:34" pos:end="7:45">short_window</name></expr> ?</condition><then pos:start="7:49" pos:end="7:69"> <expr pos:start="7:49" pos:end="7:69"><name pos:start="7:49" pos:end="7:69">PSY_3GPP_SAVE_SLOPE_S</name></expr>  </then><else pos:start="7:72" pos:end="7:94">: <expr pos:start="7:74" pos:end="7:94"><name pos:start="7:74" pos:end="7:94">PSY_3GPP_SAVE_SLOPE_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:93"><decl pos:start="9:5" pos:end="9:92"><type pos:start="9:5" pos:end="9:15"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:15">float</name></type> <name pos:start="9:17" pos:end="9:27">bitsave_add</name>    <init pos:start="9:32" pos:end="9:92">= <expr pos:start="9:34" pos:end="9:92"><ternary pos:start="9:34" pos:end="9:92"><condition pos:start="9:34" pos:end="9:47"><expr pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:45">short_window</name></expr> ?</condition><then pos:start="9:49" pos:end="9:67"> <expr pos:start="9:49" pos:end="9:67"><name pos:start="9:49" pos:end="9:67">PSY_3GPP_SAVE_ADD_S</name></expr>    </then><else pos:start="9:72" pos:end="9:92">: <expr pos:start="9:74" pos:end="9:92"><name pos:start="9:74" pos:end="9:92">PSY_3GPP_SAVE_ADD_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:96"><decl pos:start="11:5" pos:end="11:95"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:15">float</name></type> <name pos:start="11:17" pos:end="11:30">bitspend_slope</name> <init pos:start="11:32" pos:end="11:95">= <expr pos:start="11:34" pos:end="11:95"><ternary pos:start="11:34" pos:end="11:95"><condition pos:start="11:34" pos:end="11:47"><expr pos:start="11:34" pos:end="11:45"><name pos:start="11:34" pos:end="11:45">short_window</name></expr> ?</condition><then pos:start="11:49" pos:end="11:70"> <expr pos:start="11:49" pos:end="11:70"><name pos:start="11:49" pos:end="11:70">PSY_3GPP_SPEND_SLOPE_S</name></expr> </then><else pos:start="11:72" pos:end="11:95">: <expr pos:start="11:74" pos:end="11:95"><name pos:start="11:74" pos:end="11:95">PSY_3GPP_SPEND_SLOPE_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:94"><decl pos:start="13:5" pos:end="13:93"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name></type> <name pos:start="13:17" pos:end="13:28">bitspend_add</name>   <init pos:start="13:32" pos:end="13:93">= <expr pos:start="13:34" pos:end="13:93"><ternary pos:start="13:34" pos:end="13:93"><condition pos:start="13:34" pos:end="13:47"><expr pos:start="13:34" pos:end="13:45"><name pos:start="13:34" pos:end="13:45">short_window</name></expr> ?</condition><then pos:start="13:49" pos:end="13:68"> <expr pos:start="13:49" pos:end="13:68"><name pos:start="13:49" pos:end="13:68">PSY_3GPP_SPEND_ADD_S</name></expr>   </then><else pos:start="13:72" pos:end="13:93">: <expr pos:start="13:74" pos:end="13:93"><name pos:start="13:74" pos:end="13:93">PSY_3GPP_SPEND_ADD_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:92"><decl pos:start="15:5" pos:end="15:91"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">float</name></type> <name pos:start="15:17" pos:end="15:24">clip_low</name>       <init pos:start="15:32" pos:end="15:91">= <expr pos:start="15:34" pos:end="15:91"><ternary pos:start="15:34" pos:end="15:91"><condition pos:start="15:34" pos:end="15:47"><expr pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:45">short_window</name></expr> ?</condition><then pos:start="15:49" pos:end="15:66"> <expr pos:start="15:49" pos:end="15:66"><name pos:start="15:49" pos:end="15:66">PSY_3GPP_CLIP_LO_S</name></expr>     </then><else pos:start="15:72" pos:end="15:91">: <expr pos:start="15:74" pos:end="15:91"><name pos:start="15:74" pos:end="15:91">PSY_3GPP_CLIP_LO_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:92"><decl pos:start="17:5" pos:end="17:91"><type pos:start="17:5" pos:end="17:15"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:15">float</name></type> <name pos:start="17:17" pos:end="17:25">clip_high</name>      <init pos:start="17:32" pos:end="17:91">= <expr pos:start="17:34" pos:end="17:91"><ternary pos:start="17:34" pos:end="17:91"><condition pos:start="17:34" pos:end="17:47"><expr pos:start="17:34" pos:end="17:45"><name pos:start="17:34" pos:end="17:45">short_window</name></expr> ?</condition><then pos:start="17:49" pos:end="17:66"> <expr pos:start="17:49" pos:end="17:66"><name pos:start="17:49" pos:end="17:66">PSY_3GPP_CLIP_HI_S</name></expr>     </then><else pos:start="17:72" pos:end="17:91">: <expr pos:start="17:74" pos:end="17:91"><name pos:start="17:74" pos:end="17:91">PSY_3GPP_CLIP_HI_L</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:66"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:20">clipped_pe</name></decl>, <decl pos:start="19:23" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:23" pos:end="19:30">bit_save</name></decl>, <decl pos:start="19:33" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:33" pos:end="19:41">bit_spend</name></decl>, <decl pos:start="19:44" pos:end="19:53"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:44" pos:end="19:53">bit_factor</name></decl>, <decl pos:start="19:56" pos:end="19:65"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:56" pos:end="19:65">fill_level</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:7">ctx</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:19">fill_level</name></name> <operator pos:start="23:21" pos:end="23:22">+=</operator> <name pos:start="23:24" pos:end="23:38"><name pos:start="23:24" pos:end="23:26">ctx</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:38">frame_bits</name></name> <operator pos:start="23:40" pos:end="23:40">-</operator> <name pos:start="23:42" pos:end="23:45">bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">ctx</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:19">fill_level</name></name>  <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:56"><name pos:start="25:24" pos:end="25:30">av_clip</name><argument_list pos:start="25:31" pos:end="25:56">(<argument pos:start="25:32" pos:end="25:46"><expr pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:46"><name pos:start="25:32" pos:end="25:34">ctx</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:46">fill_level</name></name></expr></argument>, <argument pos:start="25:49" pos:end="25:49"><expr pos:start="25:49" pos:end="25:49"><literal type="number" pos:start="25:49" pos:end="25:49">0</literal></expr></argument>, <argument pos:start="25:52" pos:end="25:55"><expr pos:start="25:52" pos:end="25:55"><name pos:start="25:52" pos:end="25:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:78"><expr pos:start="27:5" pos:end="27:77"><name pos:start="27:5" pos:end="27:14">fill_level</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:77"><name pos:start="27:18" pos:end="27:25">av_clipf</name><argument_list pos:start="27:26" pos:end="27:77">(<argument pos:start="27:27" pos:end="27:55"><expr pos:start="27:27" pos:end="27:55"><operator pos:start="27:27" pos:end="27:27">(</operator><name pos:start="27:28" pos:end="27:32">float</name><operator pos:start="27:33" pos:end="27:33">)</operator><name pos:start="27:34" pos:end="27:48"><name pos:start="27:34" pos:end="27:36">ctx</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:48">fill_level</name></name> <operator pos:start="27:50" pos:end="27:50">/</operator> <name pos:start="27:52" pos:end="27:55">size</name></expr></argument>, <argument pos:start="27:58" pos:end="27:65"><expr pos:start="27:58" pos:end="27:65"><name pos:start="27:58" pos:end="27:65">clip_low</name></expr></argument>, <argument pos:start="27:68" pos:end="27:76"><expr pos:start="27:68" pos:end="27:76"><name pos:start="27:68" pos:end="27:76">clip_high</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:14">clipped_pe</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:55"><name pos:start="29:18" pos:end="29:25">av_clipf</name><argument_list pos:start="29:26" pos:end="29:55">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">pe</name></expr></argument>, <argument pos:start="29:31" pos:end="29:41"><expr pos:start="29:31" pos:end="29:41"><name pos:start="29:31" pos:end="29:41"><name pos:start="29:31" pos:end="29:33">ctx</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">pe</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:41">min</name></name></expr></argument>, <argument pos:start="29:44" pos:end="29:54"><expr pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:54"><name pos:start="29:44" pos:end="29:46">ctx</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:50">pe</name><operator pos:start="29:51" pos:end="29:51">.</operator><name pos:start="29:52" pos:end="29:54">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:12">bit_save</name>   <operator pos:start="31:16" pos:end="31:16">=</operator> <operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:28">fill_level</name> <operator pos:start="31:30" pos:end="31:30">+</operator> <name pos:start="31:32" pos:end="31:42">bitsave_add</name><operator pos:start="31:43" pos:end="31:43">)</operator> <operator pos:start="31:45" pos:end="31:45">*</operator> <name pos:start="31:47" pos:end="31:59">bitsave_slope</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:57"><expr pos:start="33:5" pos:end="33:56"><call pos:start="33:5" pos:end="33:56"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:56">(<argument pos:start="33:12" pos:end="33:55"><expr pos:start="33:12" pos:end="33:55"><name pos:start="33:12" pos:end="33:19">bit_save</name> <operator pos:start="33:21" pos:end="33:22">&lt;=</operator> <literal type="number" pos:start="33:24" pos:end="33:27">0.3f</literal> <operator pos:start="33:29" pos:end="33:30">&amp;&amp;</operator> <name pos:start="33:32" pos:end="33:39">bit_save</name> <operator pos:start="33:41" pos:end="33:42">&gt;=</operator> <operator pos:start="33:44" pos:end="33:44">-</operator><literal type="number" pos:start="33:45" pos:end="33:55">0.05000001f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:13">bit_spend</name>  <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:28">fill_level</name> <operator pos:start="35:30" pos:end="35:30">+</operator> <name pos:start="35:32" pos:end="35:43">bitspend_add</name><operator pos:start="35:44" pos:end="35:44">)</operator> <operator pos:start="35:46" pos:end="35:46">*</operator> <name pos:start="35:48" pos:end="35:61">bitspend_slope</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:52"><expr pos:start="37:5" pos:end="37:51"><call pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:10">assert</name><argument_list pos:start="37:11" pos:end="37:51">(<argument pos:start="37:12" pos:end="37:50"><expr pos:start="37:12" pos:end="37:50"><name pos:start="37:12" pos:end="37:20">bit_spend</name> <operator pos:start="37:22" pos:end="37:23">&lt;=</operator> <literal type="number" pos:start="37:25" pos:end="37:28">0.5f</literal> <operator pos:start="37:30" pos:end="37:31">&amp;&amp;</operator> <name pos:start="37:33" pos:end="37:41">bit_spend</name> <operator pos:start="37:43" pos:end="37:44">&gt;=</operator> <operator pos:start="37:46" pos:end="37:46">-</operator><literal type="number" pos:start="37:47" pos:end="37:50">0.1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="49:7">/* The bit factor graph in the spec is obviously incorrect.

     *      bit_spend + ((bit_spend - bit_spend))...

     * The reference encoder subtracts everything from 1, but also seems incorrect.

     *      1 - bit_save + ((bit_spend + bit_save))...

     * Hopefully below is correct.

     */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:119"><expr pos:start="51:5" pos:end="51:118"><name pos:start="51:5" pos:end="51:14">bit_factor</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:23">1.0f</literal> <operator pos:start="51:23" pos:end="51:23">-</operator> <name pos:start="51:25" pos:end="51:32">bit_save</name> <operator pos:start="51:34" pos:end="51:34">+</operator> <operator pos:start="51:36" pos:end="51:36">(</operator><operator pos:start="51:37" pos:end="51:37">(</operator><name pos:start="51:38" pos:end="51:46">bit_spend</name> <operator pos:start="51:48" pos:end="51:48">-</operator> <name pos:start="51:50" pos:end="51:57">bit_save</name><operator pos:start="51:58" pos:end="51:58">)</operator> <operator pos:start="51:60" pos:end="51:60">/</operator> <operator pos:start="51:62" pos:end="51:62">(</operator><name pos:start="51:63" pos:end="51:73"><name pos:start="51:63" pos:end="51:65">ctx</name><operator pos:start="51:66" pos:end="51:67">-&gt;</operator><name pos:start="51:68" pos:end="51:69">pe</name><operator pos:start="51:70" pos:end="51:70">.</operator><name pos:start="51:71" pos:end="51:73">max</name></name> <operator pos:start="51:75" pos:end="51:75">-</operator> <name pos:start="51:77" pos:end="51:87"><name pos:start="51:77" pos:end="51:79">ctx</name><operator pos:start="51:80" pos:end="51:81">-&gt;</operator><name pos:start="51:82" pos:end="51:83">pe</name><operator pos:start="51:84" pos:end="51:84">.</operator><name pos:start="51:85" pos:end="51:87">min</name></name><operator pos:start="51:88" pos:end="51:88">)</operator><operator pos:start="51:89" pos:end="51:89">)</operator> <operator pos:start="51:91" pos:end="51:91">*</operator> <operator pos:start="51:93" pos:end="51:93">(</operator><name pos:start="51:94" pos:end="51:103">clipped_pe</name> <operator pos:start="51:105" pos:end="51:105">-</operator> <name pos:start="51:107" pos:end="51:117"><name pos:start="51:107" pos:end="51:109">ctx</name><operator pos:start="51:110" pos:end="51:111">-&gt;</operator><name pos:start="51:112" pos:end="51:113">pe</name><operator pos:start="51:114" pos:end="51:114">.</operator><name pos:start="51:115" pos:end="51:117">min</name></name><operator pos:start="51:118" pos:end="51:118">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:90">/* NOTE: The reference encoder attempts to center pe max/min around the current pe. */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:41"><expr pos:start="55:5" pos:end="55:40"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:7">ctx</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:11">pe</name><operator pos:start="55:12" pos:end="55:12">.</operator><name pos:start="55:13" pos:end="55:15">max</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:40"><name pos:start="55:19" pos:end="55:23">FFMAX</name><argument_list pos:start="55:24" pos:end="55:40">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pe</name></expr></argument>, <argument pos:start="55:29" pos:end="55:39"><expr pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:31">ctx</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:35">pe</name><operator pos:start="55:36" pos:end="55:36">.</operator><name pos:start="55:37" pos:end="55:39">max</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:7">ctx</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:11">pe</name><operator pos:start="57:12" pos:end="57:12">.</operator><name pos:start="57:13" pos:end="57:15">min</name></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:40"><name pos:start="57:19" pos:end="57:23">FFMIN</name><argument_list pos:start="57:24" pos:end="57:40">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">pe</name></expr></argument>, <argument pos:start="57:29" pos:end="57:39"><expr pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:39"><name pos:start="57:29" pos:end="57:31">ctx</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:35">pe</name><operator pos:start="57:36" pos:end="57:36">.</operator><name pos:start="57:37" pos:end="57:39">min</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="61:5" pos:end="61:78">return <expr pos:start="61:12" pos:end="61:77"><call pos:start="61:12" pos:end="61:77"><name pos:start="61:12" pos:end="61:16">FFMIN</name><argument_list pos:start="61:17" pos:end="61:77">(<argument pos:start="61:18" pos:end="61:45"><expr pos:start="61:18" pos:end="61:45"><name pos:start="61:18" pos:end="61:32"><name pos:start="61:18" pos:end="61:20">ctx</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:32">frame_bits</name></name> <operator pos:start="61:34" pos:end="61:34">*</operator> <name pos:start="61:36" pos:end="61:45">bit_factor</name></expr></argument>, <argument pos:start="61:48" pos:end="61:76"><expr pos:start="61:48" pos:end="61:76"><name pos:start="61:48" pos:end="61:62"><name pos:start="61:48" pos:end="61:50">ctx</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:62">frame_bits</name></name> <operator pos:start="61:64" pos:end="61:64">+</operator> <name pos:start="61:66" pos:end="61:69">size</name> <operator pos:start="61:71" pos:end="61:71">-</operator> <name pos:start="61:73" pos:end="61:76">bits</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
