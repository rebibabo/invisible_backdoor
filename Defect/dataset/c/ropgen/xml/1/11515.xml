<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11515.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">dvbsub_parse_clut_segment</name><parameter_list pos:start="1:38" pos:end="3:73">(<parameter pos:start="1:39" pos:end="1:59"><decl pos:start="1:39" pos:end="1:59"><type pos:start="1:39" pos:end="1:59"><name pos:start="1:39" pos:end="1:52">AVCodecContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">avctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:58"><decl pos:start="3:41" pos:end="3:58"><type pos:start="3:41" pos:end="3:58"><specifier pos:start="3:41" pos:end="3:45">const</specifier> <name pos:start="3:47" pos:end="3:53">uint8_t</name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:58">buf</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:72">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="177:1">{<block_content pos:start="7:5" pos:end="175:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">DVBSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:18">clut_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">version</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">DVBSubCLUT</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:20">clut</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">entry_id</name></decl>, <decl pos:start="19:19" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:23">depth</name></decl> , <decl pos:start="19:27" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:27" pos:end="19:36">full_range</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">y</name></decl>, <decl pos:start="21:12" pos:end="21:13"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:13">cr</name></decl>, <decl pos:start="21:16" pos:end="21:17"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:16" pos:end="21:17">cb</name></decl>, <decl pos:start="21:20" pos:end="21:24"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:20" pos:end="21:24">alpha</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:37"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">r</name></decl>, <decl pos:start="23:12" pos:end="23:12"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:12">g</name></decl>, <decl pos:start="23:15" pos:end="23:15"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:15" pos:end="23:15">b</name></decl>, <decl pos:start="23:18" pos:end="23:22"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:18" pos:end="23:22">r_add</name></decl>, <decl pos:start="23:25" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:25" pos:end="23:29">g_add</name></decl>, <decl pos:start="23:32" pos:end="23:36"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:32" pos:end="23:36">b_add</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:41"><expr pos:start="27:5" pos:end="27:40"><call pos:start="27:5" pos:end="27:40"><name pos:start="27:5" pos:end="27:11">av_dlog</name><argument_list pos:start="27:12" pos:end="27:40">(<argument pos:start="27:13" pos:end="27:17"><expr pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:17">avctx</name></expr></argument>, <argument pos:start="27:20" pos:end="27:39"><expr pos:start="27:20" pos:end="27:39"><literal type="string" pos:start="27:20" pos:end="27:39">"DVB clut packet:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="39:5">for <control pos:start="31:9" pos:end="31:32">(<init pos:start="31:10" pos:end="31:13"><expr pos:start="31:10" pos:end="31:12"><name pos:start="31:10" pos:end="31:10">i</name><operator pos:start="31:11" pos:end="31:11">=</operator><literal type="number" pos:start="31:12" pos:end="31:12">0</literal></expr>;</init> <condition pos:start="31:15" pos:end="31:27"><expr pos:start="31:15" pos:end="31:26"><name pos:start="31:15" pos:end="31:15">i</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <name pos:start="31:19" pos:end="31:26">buf_size</name></expr>;</condition> <incr pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:29">i</name><operator pos:start="31:30" pos:end="31:31">++</operator></expr></incr>)</control> <block pos:start="31:34" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:33">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:15">av_dlog</name><argument_list pos:start="33:16" pos:end="33:39">(<argument pos:start="33:17" pos:end="33:21"><expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">avctx</name></expr></argument>, <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><literal type="string" pos:start="33:24" pos:end="33:30">"%02x "</literal></expr></argument>, <argument pos:start="33:33" pos:end="33:38"><expr pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:38"><name pos:start="33:33" pos:end="33:35">buf</name><index pos:start="33:36" pos:end="33:38">[<expr pos:start="33:37" pos:end="33:37"><name pos:start="33:37" pos:end="33:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="37:33"><if pos:start="35:9" pos:end="37:33">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:13">i</name> <operator pos:start="35:15" pos:end="35:15">%</operator> <literal type="number" pos:start="35:17" pos:end="35:18">16</literal> <operator pos:start="35:20" pos:end="35:21">==</operator> <literal type="number" pos:start="35:23" pos:end="35:24">15</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><call pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:19">av_dlog</name><argument_list pos:start="37:20" pos:end="37:32">(<argument pos:start="37:21" pos:end="37:25"><expr pos:start="37:21" pos:end="37:25"><name pos:start="37:21" pos:end="37:25">avctx</name></expr></argument>, <argument pos:start="37:28" pos:end="37:31"><expr pos:start="37:28" pos:end="37:31"><literal type="string" pos:start="37:28" pos:end="37:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="45:29"><if pos:start="43:5" pos:end="45:29">if <condition pos:start="43:8" pos:end="43:15">(<expr pos:start="43:9" pos:end="43:14"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">%</operator> <literal type="number" pos:start="43:13" pos:end="43:14">16</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:29"><block_content pos:start="45:9" pos:end="45:29">

        <expr_stmt pos:start="45:9" pos:end="45:29"><expr pos:start="45:9" pos:end="45:28"><call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:15">av_dlog</name><argument_list pos:start="45:16" pos:end="45:28">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21">avctx</name></expr></argument>, <argument pos:start="45:24" pos:end="45:27"><expr pos:start="45:24" pos:end="45:27"><literal type="string" pos:start="45:24" pos:end="45:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:11">clut_id</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">*</operator><name pos:start="49:16" pos:end="49:18">buf</name><operator pos:start="49:19" pos:end="49:20">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:11">version</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><operator pos:start="51:16" pos:end="51:16">(</operator><operator pos:start="51:17" pos:end="51:17">*</operator><name pos:start="51:18" pos:end="51:20">buf</name><operator pos:start="51:21" pos:end="51:21">)</operator><operator pos:start="51:22" pos:end="51:23">&gt;&gt;</operator><literal type="number" pos:start="51:24" pos:end="51:24">4</literal><operator pos:start="51:25" pos:end="51:25">)</operator><operator pos:start="51:26" pos:end="51:26">&amp;</operator><literal type="number" pos:start="51:27" pos:end="51:28">15</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:13"><expr pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:7">buf</name> <operator pos:start="53:9" pos:end="53:10">+=</operator> <literal type="number" pos:start="53:12" pos:end="53:12">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:34"><expr pos:start="57:5" pos:end="57:33"><name pos:start="57:5" pos:end="57:8">clut</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <call pos:start="57:12" pos:end="57:33"><name pos:start="57:12" pos:end="57:19">get_clut</name><argument_list pos:start="57:20" pos:end="57:33">(<argument pos:start="57:21" pos:end="57:23"><expr pos:start="57:21" pos:end="57:23"><name pos:start="57:21" pos:end="57:23">ctx</name></expr></argument>, <argument pos:start="57:26" pos:end="57:32"><expr pos:start="57:26" pos:end="57:32"><name pos:start="57:26" pos:end="57:32">clut_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="81:5"><if pos:start="61:5" pos:end="81:5">if <condition pos:start="61:8" pos:end="61:14">(<expr pos:start="61:9" pos:end="61:13"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:13">clut</name></expr>)</condition> <block pos:start="61:16" pos:end="81:5">{<block_content pos:start="63:9" pos:end="79:30">

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:12">clut</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:44"><name pos:start="63:16" pos:end="63:24">av_malloc</name><argument_list pos:start="63:25" pos:end="63:44">(<argument pos:start="63:26" pos:end="63:43"><expr pos:start="63:26" pos:end="63:43"><sizeof pos:start="63:26" pos:end="63:43">sizeof<argument_list pos:start="63:32" pos:end="63:43">(<argument pos:start="63:33" pos:end="63:42"><expr pos:start="63:33" pos:end="63:42"><name pos:start="63:33" pos:end="63:42">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:56"><expr pos:start="67:9" pos:end="67:55"><call pos:start="67:9" pos:end="67:55"><name pos:start="67:9" pos:end="67:14">memcpy</name><argument_list pos:start="67:15" pos:end="67:55">(<argument pos:start="67:16" pos:end="67:19"><expr pos:start="67:16" pos:end="67:19"><name pos:start="67:16" pos:end="67:19">clut</name></expr></argument>, <argument pos:start="67:22" pos:end="67:34"><expr pos:start="67:22" pos:end="67:34"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:34">default_clut</name></expr></argument>, <argument pos:start="67:37" pos:end="67:54"><expr pos:start="67:37" pos:end="67:54"><sizeof pos:start="67:37" pos:end="67:54">sizeof<argument_list pos:start="67:43" pos:end="67:54">(<argument pos:start="67:44" pos:end="67:53"><expr pos:start="67:44" pos:end="67:53"><name pos:start="67:44" pos:end="67:53">DVBSubCLUT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:12">clut</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:16">id</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:26">clut_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:27"><expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:12">clut</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:21">version</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <operator pos:start="73:25" pos:end="73:25">-</operator><literal type="number" pos:start="73:26" pos:end="73:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:36"><expr pos:start="77:9" pos:end="77:35"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:12">clut</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:18">next</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:35"><name pos:start="77:22" pos:end="77:24">ctx</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:35">clut_list</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:30"><expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:11">ctx</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:22">clut_list</name></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:29">clut</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="175:5"><if pos:start="85:5" pos:end="175:5">if <condition pos:start="85:8" pos:end="85:33">(<expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:12">clut</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:21">version</name></name> <operator pos:start="85:23" pos:end="85:24">!=</operator> <name pos:start="85:26" pos:end="85:32">version</name></expr>)</condition> <block pos:start="85:35" pos:end="175:5">{<block_content pos:start="89:5" pos:end="173:5">



    <expr_stmt pos:start="89:5" pos:end="89:28"><expr pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:17"><name pos:start="89:5" pos:end="89:8">clut</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:17">version</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <name pos:start="89:21" pos:end="89:27">version</name></expr>;</expr_stmt>



    <while pos:start="93:5" pos:end="173:5">while <condition pos:start="93:11" pos:end="93:29">(<expr pos:start="93:12" pos:end="93:28"><name pos:start="93:12" pos:end="93:14">buf</name> <operator pos:start="93:16" pos:end="93:16">+</operator> <literal type="number" pos:start="93:18" pos:end="93:18">4</literal> <operator pos:start="93:20" pos:end="93:20">&lt;</operator> <name pos:start="93:22" pos:end="93:28">buf_end</name></expr>)</condition> <block pos:start="93:31" pos:end="173:5">{<block_content pos:start="95:9" pos:end="171:62">

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:16">entry_id</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <operator pos:start="95:20" pos:end="95:20">*</operator><name pos:start="95:21" pos:end="95:23">buf</name><operator pos:start="95:24" pos:end="95:25">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:30"><expr pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:13">depth</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <operator pos:start="99:17" pos:end="99:17">(</operator><operator pos:start="99:18" pos:end="99:18">*</operator><name pos:start="99:19" pos:end="99:21">buf</name><operator pos:start="99:22" pos:end="99:22">)</operator> <operator pos:start="99:24" pos:end="99:24">&amp;</operator> <literal type="number" pos:start="99:26" pos:end="99:29">0xe0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:23">(<expr pos:start="103:13" pos:end="103:22"><name pos:start="103:13" pos:end="103:17">depth</name> <operator pos:start="103:19" pos:end="103:20">==</operator> <literal type="number" pos:start="103:22" pos:end="103:22">0</literal></expr>)</condition> <block pos:start="103:25" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:19">

            <expr_stmt pos:start="105:13" pos:end="105:76"><expr pos:start="105:13" pos:end="105:75"><call pos:start="105:13" pos:end="105:75"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:75">(<argument pos:start="105:20" pos:end="105:24"><expr pos:start="105:20" pos:end="105:24"><name pos:start="105:20" pos:end="105:24">avctx</name></expr></argument>, <argument pos:start="105:27" pos:end="105:38"><expr pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:41" pos:end="105:68"><expr pos:start="105:41" pos:end="105:68"><literal type="string" pos:start="105:41" pos:end="105:68">"Invalid clut depth 0x%x!\n"</literal></expr></argument>, <argument pos:start="105:71" pos:end="105:74"><expr pos:start="105:71" pos:end="105:74"><operator pos:start="105:71" pos:end="105:71">*</operator><name pos:start="105:72" pos:end="105:74">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="107:13" pos:end="107:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:34"><expr pos:start="113:9" pos:end="113:33"><name pos:start="113:9" pos:end="113:18">full_range</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <operator pos:start="113:22" pos:end="113:22">(</operator><operator pos:start="113:23" pos:end="113:23">*</operator><name pos:start="113:24" pos:end="113:26">buf</name><operator pos:start="113:27" pos:end="113:28">++</operator><operator pos:start="113:29" pos:end="113:29">)</operator> <operator pos:start="113:31" pos:end="113:31">&amp;</operator> <literal type="number" pos:start="113:33" pos:end="113:33">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="117:9" pos:end="141:9"><if pos:start="117:9" pos:end="127:9">if <condition pos:start="117:12" pos:end="117:23">(<expr pos:start="117:13" pos:end="117:22"><name pos:start="117:13" pos:end="117:22">full_range</name></expr>)</condition> <block pos:start="117:25" pos:end="127:9">{<block_content pos:start="119:13" pos:end="125:27">

            <expr_stmt pos:start="119:13" pos:end="119:23"><expr pos:start="119:13" pos:end="119:22"><name pos:start="119:13" pos:end="119:13">y</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <operator pos:start="119:17" pos:end="119:17">*</operator><name pos:start="119:18" pos:end="119:20">buf</name><operator pos:start="119:21" pos:end="119:22">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:24"><expr pos:start="121:13" pos:end="121:23"><name pos:start="121:13" pos:end="121:14">cr</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <operator pos:start="121:18" pos:end="121:18">*</operator><name pos:start="121:19" pos:end="121:21">buf</name><operator pos:start="121:22" pos:end="121:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:24"><expr pos:start="123:13" pos:end="123:23"><name pos:start="123:13" pos:end="123:14">cb</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">*</operator><name pos:start="123:19" pos:end="123:21">buf</name><operator pos:start="123:22" pos:end="123:23">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:27"><expr pos:start="125:13" pos:end="125:26"><name pos:start="125:13" pos:end="125:17">alpha</name> <operator pos:start="125:19" pos:end="125:19">=</operator> <operator pos:start="125:21" pos:end="125:21">*</operator><name pos:start="125:22" pos:end="125:24">buf</name><operator pos:start="125:25" pos:end="125:26">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="141:9">else <block pos:start="127:16" pos:end="141:9">{<block_content pos:start="129:13" pos:end="139:21">

            <expr_stmt pos:start="129:13" pos:end="129:30"><expr pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:13">y</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <name pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:19">buf</name><index pos:start="129:20" pos:end="129:22">[<expr pos:start="129:21" pos:end="129:21"><literal type="number" pos:start="129:21" pos:end="129:21">0</literal></expr>]</index></name> <operator pos:start="129:24" pos:end="129:24">&amp;</operator> <literal type="number" pos:start="129:26" pos:end="129:29">0xfc</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:66"><expr pos:start="131:13" pos:end="131:65"><name pos:start="131:13" pos:end="131:14">cr</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <operator pos:start="131:18" pos:end="131:18">(</operator><operator pos:start="131:19" pos:end="131:19">(</operator><operator pos:start="131:20" pos:end="131:20">(</operator><name pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:23">buf</name><index pos:start="131:24" pos:end="131:26">[<expr pos:start="131:25" pos:end="131:25"><literal type="number" pos:start="131:25" pos:end="131:25">0</literal></expr>]</index></name> <operator pos:start="131:28" pos:end="131:28">&amp;</operator> <literal type="number" pos:start="131:30" pos:end="131:30">3</literal><operator pos:start="131:31" pos:end="131:31">)</operator> <operator pos:start="131:33" pos:end="131:34">&lt;&lt;</operator> <literal type="number" pos:start="131:36" pos:end="131:36">2</literal><operator pos:start="131:37" pos:end="131:37">)</operator> <operator pos:start="131:39" pos:end="131:39">|</operator> <operator pos:start="131:41" pos:end="131:41">(</operator><operator pos:start="131:42" pos:end="131:42">(</operator><name pos:start="131:43" pos:end="131:48"><name pos:start="131:43" pos:end="131:45">buf</name><index pos:start="131:46" pos:end="131:48">[<expr pos:start="131:47" pos:end="131:47"><literal type="number" pos:start="131:47" pos:end="131:47">1</literal></expr>]</index></name> <operator pos:start="131:50" pos:end="131:51">&gt;&gt;</operator> <literal type="number" pos:start="131:53" pos:end="131:53">6</literal><operator pos:start="131:54" pos:end="131:54">)</operator> <operator pos:start="131:56" pos:end="131:56">&amp;</operator> <literal type="number" pos:start="131:58" pos:end="131:58">3</literal><operator pos:start="131:59" pos:end="131:59">)</operator><operator pos:start="131:60" pos:end="131:60">)</operator> <operator pos:start="131:62" pos:end="131:63">&lt;&lt;</operator> <literal type="number" pos:start="131:65" pos:end="131:65">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:14">cb</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <operator pos:start="133:18" pos:end="133:18">(</operator><name pos:start="133:19" pos:end="133:24"><name pos:start="133:19" pos:end="133:21">buf</name><index pos:start="133:22" pos:end="133:24">[<expr pos:start="133:23" pos:end="133:23"><literal type="number" pos:start="133:23" pos:end="133:23">1</literal></expr>]</index></name> <operator pos:start="133:26" pos:end="133:27">&lt;&lt;</operator> <literal type="number" pos:start="133:29" pos:end="133:29">2</literal><operator pos:start="133:30" pos:end="133:30">)</operator> <operator pos:start="133:32" pos:end="133:32">&amp;</operator> <literal type="number" pos:start="133:34" pos:end="133:37">0xf0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:17">alpha</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <operator pos:start="135:21" pos:end="135:21">(</operator><name pos:start="135:22" pos:end="135:27"><name pos:start="135:22" pos:end="135:24">buf</name><index pos:start="135:25" pos:end="135:27">[<expr pos:start="135:26" pos:end="135:26"><literal type="number" pos:start="135:26" pos:end="135:26">1</literal></expr>]</index></name> <operator pos:start="135:29" pos:end="135:30">&lt;&lt;</operator> <literal type="number" pos:start="135:32" pos:end="135:32">6</literal><operator pos:start="135:33" pos:end="135:33">)</operator> <operator pos:start="135:35" pos:end="135:35">&amp;</operator> <literal type="number" pos:start="135:37" pos:end="135:40">0xc0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:21"><expr pos:start="139:13" pos:end="139:20"><name pos:start="139:13" pos:end="139:15">buf</name> <operator pos:start="139:17" pos:end="139:18">+=</operator> <literal type="number" pos:start="139:20" pos:end="139:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="145:9" pos:end="147:25"><if pos:start="145:9" pos:end="147:25">if <condition pos:start="145:12" pos:end="145:19">(<expr pos:start="145:13" pos:end="145:18"><name pos:start="145:13" pos:end="145:13">y</name> <operator pos:start="145:15" pos:end="145:16">==</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:25"><block_content pos:start="147:13" pos:end="147:25">

            <expr_stmt pos:start="147:13" pos:end="147:25"><expr pos:start="147:13" pos:end="147:24"><name pos:start="147:13" pos:end="147:17">alpha</name> <operator pos:start="147:19" pos:end="147:19">=</operator> <literal type="number" pos:start="147:21" pos:end="147:24">0xff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><call pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:24">YUV_TO_RGB1_CCIR</name><argument_list pos:start="151:25" pos:end="151:32">(<argument pos:start="151:26" pos:end="151:27"><expr pos:start="151:26" pos:end="151:27"><name pos:start="151:26" pos:end="151:27">cb</name></expr></argument>, <argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><name pos:start="151:30" pos:end="151:31">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><call pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:24">YUV_TO_RGB2_CCIR</name><argument_list pos:start="153:25" pos:end="153:36">(<argument pos:start="153:26" pos:end="153:26"><expr pos:start="153:26" pos:end="153:26"><name pos:start="153:26" pos:end="153:26">r</name></expr></argument>, <argument pos:start="153:29" pos:end="153:29"><expr pos:start="153:29" pos:end="153:29"><name pos:start="153:29" pos:end="153:29">g</name></expr></argument>, <argument pos:start="153:32" pos:end="153:32"><expr pos:start="153:32" pos:end="153:32"><name pos:start="153:32" pos:end="153:32">b</name></expr></argument>, <argument pos:start="153:35" pos:end="153:35"><expr pos:start="153:35" pos:end="153:35"><name pos:start="153:35" pos:end="153:35">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:79"><expr pos:start="157:9" pos:end="157:78"><call pos:start="157:9" pos:end="157:78"><name pos:start="157:9" pos:end="157:15">av_dlog</name><argument_list pos:start="157:16" pos:end="157:78">(<argument pos:start="157:17" pos:end="157:21"><expr pos:start="157:17" pos:end="157:21"><name pos:start="157:17" pos:end="157:21">avctx</name></expr></argument>, <argument pos:start="157:24" pos:end="157:51"><expr pos:start="157:24" pos:end="157:51"><literal type="string" pos:start="157:24" pos:end="157:51">"clut %d := (%d,%d,%d,%d)\n"</literal></expr></argument>, <argument pos:start="157:54" pos:end="157:61"><expr pos:start="157:54" pos:end="157:61"><name pos:start="157:54" pos:end="157:61">entry_id</name></expr></argument>, <argument pos:start="157:64" pos:end="157:64"><expr pos:start="157:64" pos:end="157:64"><name pos:start="157:64" pos:end="157:64">r</name></expr></argument>, <argument pos:start="157:67" pos:end="157:67"><expr pos:start="157:67" pos:end="157:67"><name pos:start="157:67" pos:end="157:67">g</name></expr></argument>, <argument pos:start="157:70" pos:end="157:70"><expr pos:start="157:70" pos:end="157:70"><name pos:start="157:70" pos:end="157:70">b</name></expr></argument>, <argument pos:start="157:73" pos:end="157:77"><expr pos:start="157:73" pos:end="157:77"><name pos:start="157:73" pos:end="157:77">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="161:9" pos:end="171:62"><if pos:start="161:9" pos:end="163:60">if <condition pos:start="161:12" pos:end="161:25">(<expr pos:start="161:13" pos:end="161:24"><name pos:start="161:13" pos:end="161:17">depth</name> <operator pos:start="161:19" pos:end="161:19">&amp;</operator> <literal type="number" pos:start="161:21" pos:end="161:24">0x80</literal></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:60"><block_content pos:start="163:13" pos:end="163:60">

            <expr_stmt pos:start="163:13" pos:end="163:60"><expr pos:start="163:13" pos:end="163:59"><name pos:start="163:13" pos:end="163:33"><name pos:start="163:13" pos:end="163:16">clut</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:23">clut4</name><index pos:start="163:24" pos:end="163:33">[<expr pos:start="163:25" pos:end="163:32"><name pos:start="163:25" pos:end="163:32">entry_id</name></expr>]</index></name> <operator pos:start="163:35" pos:end="163:35">=</operator> <call pos:start="163:37" pos:end="163:59"><name pos:start="163:37" pos:end="163:40">RGBA</name><argument_list pos:start="163:41" pos:end="163:59">(<argument pos:start="163:42" pos:end="163:42"><expr pos:start="163:42" pos:end="163:42"><name pos:start="163:42" pos:end="163:42">r</name></expr></argument>,<argument pos:start="163:44" pos:end="163:44"><expr pos:start="163:44" pos:end="163:44"><name pos:start="163:44" pos:end="163:44">g</name></expr></argument>,<argument pos:start="163:46" pos:end="163:46"><expr pos:start="163:46" pos:end="163:46"><name pos:start="163:46" pos:end="163:46">b</name></expr></argument>,<argument pos:start="163:48" pos:end="163:58"><expr pos:start="163:48" pos:end="163:58"><literal type="number" pos:start="163:48" pos:end="163:52">255</literal> <operator pos:start="163:52" pos:end="163:52">-</operator> <name pos:start="163:54" pos:end="163:58">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="165:9" pos:end="167:61">else if <condition pos:start="165:17" pos:end="165:30">(<expr pos:start="165:18" pos:end="165:29"><name pos:start="165:18" pos:end="165:22">depth</name> <operator pos:start="165:24" pos:end="165:24">&amp;</operator> <literal type="number" pos:start="165:26" pos:end="165:29">0x40</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:61"><block_content pos:start="167:13" pos:end="167:61">

            <expr_stmt pos:start="167:13" pos:end="167:61"><expr pos:start="167:13" pos:end="167:60"><name pos:start="167:13" pos:end="167:34"><name pos:start="167:13" pos:end="167:16">clut</name><operator pos:start="167:17" pos:end="167:18">-&gt;</operator><name pos:start="167:19" pos:end="167:24">clut16</name><index pos:start="167:25" pos:end="167:34">[<expr pos:start="167:26" pos:end="167:33"><name pos:start="167:26" pos:end="167:33">entry_id</name></expr>]</index></name> <operator pos:start="167:36" pos:end="167:36">=</operator> <call pos:start="167:38" pos:end="167:60"><name pos:start="167:38" pos:end="167:41">RGBA</name><argument_list pos:start="167:42" pos:end="167:60">(<argument pos:start="167:43" pos:end="167:43"><expr pos:start="167:43" pos:end="167:43"><name pos:start="167:43" pos:end="167:43">r</name></expr></argument>,<argument pos:start="167:45" pos:end="167:45"><expr pos:start="167:45" pos:end="167:45"><name pos:start="167:45" pos:end="167:45">g</name></expr></argument>,<argument pos:start="167:47" pos:end="167:47"><expr pos:start="167:47" pos:end="167:47"><name pos:start="167:47" pos:end="167:47">b</name></expr></argument>,<argument pos:start="167:49" pos:end="167:59"><expr pos:start="167:49" pos:end="167:59"><literal type="number" pos:start="167:49" pos:end="167:53">255</literal> <operator pos:start="167:53" pos:end="167:53">-</operator> <name pos:start="167:55" pos:end="167:59">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="169:9" pos:end="171:62">else if <condition pos:start="169:17" pos:end="169:30">(<expr pos:start="169:18" pos:end="169:29"><name pos:start="169:18" pos:end="169:22">depth</name> <operator pos:start="169:24" pos:end="169:24">&amp;</operator> <literal type="number" pos:start="169:26" pos:end="169:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:62"><block_content pos:start="171:13" pos:end="171:62">

            <expr_stmt pos:start="171:13" pos:end="171:62"><expr pos:start="171:13" pos:end="171:61"><name pos:start="171:13" pos:end="171:35"><name pos:start="171:13" pos:end="171:16">clut</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:25">clut256</name><index pos:start="171:26" pos:end="171:35">[<expr pos:start="171:27" pos:end="171:34"><name pos:start="171:27" pos:end="171:34">entry_id</name></expr>]</index></name> <operator pos:start="171:37" pos:end="171:37">=</operator> <call pos:start="171:39" pos:end="171:61"><name pos:start="171:39" pos:end="171:42">RGBA</name><argument_list pos:start="171:43" pos:end="171:61">(<argument pos:start="171:44" pos:end="171:44"><expr pos:start="171:44" pos:end="171:44"><name pos:start="171:44" pos:end="171:44">r</name></expr></argument>,<argument pos:start="171:46" pos:end="171:46"><expr pos:start="171:46" pos:end="171:46"><name pos:start="171:46" pos:end="171:46">g</name></expr></argument>,<argument pos:start="171:48" pos:end="171:48"><expr pos:start="171:48" pos:end="171:48"><name pos:start="171:48" pos:end="171:48">b</name></expr></argument>,<argument pos:start="171:50" pos:end="171:60"><expr pos:start="171:50" pos:end="171:60"><literal type="number" pos:start="171:50" pos:end="171:54">255</literal> <operator pos:start="171:54" pos:end="171:54">-</operator> <name pos:start="171:56" pos:end="171:60">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
