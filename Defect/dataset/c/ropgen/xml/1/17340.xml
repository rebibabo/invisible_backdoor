<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17340.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">av_read_image_line</name><parameter_list pos:start="1:24" pos:end="3:107">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:32">uint16_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">dst</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:61"><decl pos:start="1:40" pos:end="1:61"><type pos:start="1:40" pos:end="1:58"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:61"><name pos:start="1:55" pos:end="1:58">data</name><index pos:start="1:59" pos:end="1:61">[<expr pos:start="1:60" pos:end="1:60"><literal type="number" pos:start="1:60" pos:end="1:60">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:84"><decl pos:start="1:64" pos:end="1:84"><type pos:start="1:64" pos:end="1:81"><specifier pos:start="1:64" pos:end="1:68">const</specifier> <name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:84"><name pos:start="1:74" pos:end="1:81">linesize</name><index pos:start="1:82" pos:end="1:84">[<expr pos:start="1:83" pos:end="1:83"><literal type="number" pos:start="1:83" pos:end="1:83">4</literal></expr>]</index></name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:54"><decl pos:start="3:25" pos:end="3:54"><type pos:start="3:25" pos:end="3:54"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:48">AVPixFmtDescriptor</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:54">desc</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:61"><decl pos:start="3:57" pos:end="3:61"><type pos:start="3:57" pos:end="3:61"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:61">x</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:68"><decl pos:start="3:64" pos:end="3:68"><type pos:start="3:64" pos:end="3:68"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:68">y</name></decl></parameter>, <parameter pos:start="3:71" pos:end="3:75"><decl pos:start="3:71" pos:end="3:75"><type pos:start="3:71" pos:end="3:75"><name pos:start="3:71" pos:end="3:73">int</name></type> <name pos:start="3:75" pos:end="3:75">c</name></decl></parameter>, <parameter pos:start="3:78" pos:end="3:82"><decl pos:start="3:78" pos:end="3:82"><type pos:start="3:78" pos:end="3:82"><name pos:start="3:78" pos:end="3:80">int</name></type> <name pos:start="3:82" pos:end="3:82">w</name></decl></parameter>, <parameter pos:start="3:85" pos:end="3:106"><decl pos:start="3:85" pos:end="3:106"><type pos:start="3:85" pos:end="3:106"><name pos:start="3:85" pos:end="3:87">int</name></type> <name pos:start="3:89" pos:end="3:106">read_pal_component</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:5">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:25">AVComponentDescriptor</name></type> <name pos:start="7:27" pos:end="7:30">comp</name><init pos:start="7:31" pos:end="7:45">= <expr pos:start="7:33" pos:end="7:45"><name pos:start="7:33" pos:end="7:45"><name pos:start="7:33" pos:end="7:36">desc</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:42">comp</name><index pos:start="7:43" pos:end="7:45">[<expr pos:start="7:44" pos:end="7:44"><name pos:start="7:44" pos:end="7:44">c</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">plane</name><init pos:start="9:14" pos:end="9:25">= <expr pos:start="9:16" pos:end="9:25"><name pos:start="9:16" pos:end="9:25"><name pos:start="9:16" pos:end="9:19">comp</name><operator pos:start="9:20" pos:end="9:20">.</operator><name pos:start="9:21" pos:end="9:25">plane</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">depth</name><init pos:start="11:14" pos:end="11:34">= <expr pos:start="11:16" pos:end="11:34"><name pos:start="11:16" pos:end="11:32"><name pos:start="11:16" pos:end="11:19">comp</name><operator pos:start="11:20" pos:end="11:20">.</operator><name pos:start="11:21" pos:end="11:32">depth_minus1</name></name><operator pos:start="11:33" pos:end="11:33">+</operator><literal type="number" pos:start="11:34" pos:end="11:34">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">mask</name> <init pos:start="13:14" pos:end="13:27">= <expr pos:start="13:16" pos:end="13:27"><operator pos:start="13:16" pos:end="13:16">(</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal><operator pos:start="13:18" pos:end="13:19">&lt;&lt;</operator><name pos:start="13:20" pos:end="13:24">depth</name><operator pos:start="13:25" pos:end="13:25">)</operator><operator pos:start="13:26" pos:end="13:26">-</operator><literal type="number" pos:start="13:27" pos:end="13:27">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">shift</name><init pos:start="15:14" pos:end="15:25">= <expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:19">comp</name><operator pos:start="15:20" pos:end="15:20">.</operator><name pos:start="15:21" pos:end="15:25">shift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">step</name> <init pos:start="17:14" pos:end="17:33">= <expr pos:start="17:16" pos:end="17:33"><name pos:start="17:16" pos:end="17:31"><name pos:start="17:16" pos:end="17:19">comp</name><operator pos:start="17:20" pos:end="17:20">.</operator><name pos:start="17:21" pos:end="17:31">step_minus1</name></name><operator pos:start="17:32" pos:end="17:32">+</operator><literal type="number" pos:start="17:33" pos:end="17:33">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name><init pos:start="19:14" pos:end="19:26">= <expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:19">desc</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:26">flags</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="73:5"><if pos:start="23:5" pos:end="51:5">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:33">PIX_FMT_BITSTREAM</name></expr>)</condition><block pos:start="23:35" pos:end="51:5">{<block_content pos:start="25:9" pos:end="49:9">

        <decl_stmt pos:start="25:9" pos:end="25:48"><decl pos:start="25:9" pos:end="25:47"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">skip</name> <init pos:start="25:18" pos:end="25:47">= <expr pos:start="25:20" pos:end="25:47"><name pos:start="25:20" pos:end="25:20">x</name><operator pos:start="25:21" pos:end="25:21">*</operator><name pos:start="25:22" pos:end="25:25">step</name> <operator pos:start="25:27" pos:end="25:27">+</operator> <name pos:start="25:29" pos:end="25:45"><name pos:start="25:29" pos:end="25:32">comp</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:45">offset_plus1</name></name><operator pos:start="25:46" pos:end="25:46">-</operator><literal type="number" pos:start="25:47" pos:end="25:47">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:71"><decl pos:start="27:9" pos:end="27:70"><type pos:start="27:9" pos:end="27:23"><specifier pos:start="27:9" pos:end="27:13">const</specifier> <name pos:start="27:15" pos:end="27:21">uint8_t</name> <modifier pos:start="27:23" pos:end="27:23">*</modifier></type><name pos:start="27:24" pos:end="27:24">p</name> <init pos:start="27:26" pos:end="27:70">= <expr pos:start="27:28" pos:end="27:70"><name pos:start="27:28" pos:end="27:38"><name pos:start="27:28" pos:end="27:31">data</name><index pos:start="27:32" pos:end="27:38">[<expr pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:37">plane</name></expr>]</index></name> <operator pos:start="27:40" pos:end="27:40">+</operator> <name pos:start="27:42" pos:end="27:42">y</name><operator pos:start="27:43" pos:end="27:43">*</operator><name pos:start="27:44" pos:end="27:58"><name pos:start="27:44" pos:end="27:51">linesize</name><index pos:start="27:52" pos:end="27:58">[<expr pos:start="27:53" pos:end="27:57"><name pos:start="27:53" pos:end="27:57">plane</name></expr>]</index></name> <operator pos:start="27:60" pos:end="27:60">+</operator> <operator pos:start="27:62" pos:end="27:62">(</operator><name pos:start="27:63" pos:end="27:66">skip</name><operator pos:start="27:67" pos:end="27:68">&gt;&gt;</operator><literal type="number" pos:start="27:69" pos:end="27:69">3</literal><operator pos:start="27:70" pos:end="27:70">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:41"><decl pos:start="29:9" pos:end="29:40"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:17">shift</name> <init pos:start="29:19" pos:end="29:40">= <expr pos:start="29:21" pos:end="29:40"><literal type="number" pos:start="29:21" pos:end="29:23">8</literal> <operator pos:start="29:23" pos:end="29:23">-</operator> <name pos:start="29:25" pos:end="29:29">depth</name> <operator pos:start="29:31" pos:end="29:31">-</operator> <operator pos:start="29:33" pos:end="29:33">(</operator><name pos:start="29:34" pos:end="29:37">skip</name><operator pos:start="29:38" pos:end="29:38">&amp;</operator><literal type="number" pos:start="29:39" pos:end="29:39">7</literal><operator pos:start="29:40" pos:end="29:40">)</operator></expr></init></decl>;</decl_stmt>



        <while pos:start="33:9" pos:end="49:9">while<condition pos:start="33:14" pos:end="33:18">(<expr pos:start="33:15" pos:end="33:17"><name pos:start="33:15" pos:end="33:15">w</name><operator pos:start="33:16" pos:end="33:17">--</operator></expr>)</condition><block pos:start="33:19" pos:end="49:9">{<block_content pos:start="35:13" pos:end="47:24">

            <decl_stmt pos:start="35:13" pos:end="35:43"><decl pos:start="35:13" pos:end="35:42"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">val</name> <init pos:start="35:21" pos:end="35:42">= <expr pos:start="35:23" pos:end="35:42"><operator pos:start="35:23" pos:end="35:23">(</operator><operator pos:start="35:24" pos:end="35:24">*</operator><name pos:start="35:25" pos:end="35:25">p</name> <operator pos:start="35:27" pos:end="35:28">&gt;&gt;</operator> <name pos:start="35:30" pos:end="35:34">shift</name><operator pos:start="35:35" pos:end="35:35">)</operator> <operator pos:start="35:37" pos:end="35:37">&amp;</operator> <name pos:start="35:39" pos:end="35:42">mask</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="39:40"><if pos:start="37:13" pos:end="39:40">if<condition pos:start="37:15" pos:end="37:34">(<expr pos:start="37:16" pos:end="37:33"><name pos:start="37:16" pos:end="37:33">read_pal_component</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:40"><block_content pos:start="39:17" pos:end="39:40">

                <expr_stmt pos:start="39:17" pos:end="39:40"><expr pos:start="39:17" pos:end="39:39"><name pos:start="39:17" pos:end="39:19">val</name><operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:39"><name pos:start="39:22" pos:end="39:25">data</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">1</literal></expr>]</index><index pos:start="39:29" pos:end="39:39">[<expr pos:start="39:30" pos:end="39:38"><literal type="number" pos:start="39:30" pos:end="39:30">4</literal><operator pos:start="39:31" pos:end="39:31">*</operator><name pos:start="39:32" pos:end="39:34">val</name> <operator pos:start="39:36" pos:end="39:36">+</operator> <name pos:start="39:38" pos:end="39:38">c</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:26"><expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:17">shift</name> <operator pos:start="41:19" pos:end="41:20">-=</operator> <name pos:start="41:22" pos:end="41:25">step</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">p</name> <operator pos:start="43:15" pos:end="43:16">-=</operator> <name pos:start="43:18" pos:end="43:22">shift</name><operator pos:start="43:23" pos:end="43:24">&gt;&gt;</operator><literal type="number" pos:start="43:25" pos:end="43:25">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:17">shift</name> <operator pos:start="45:19" pos:end="45:20">&amp;=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:24"><expr pos:start="47:13" pos:end="47:23"><operator pos:start="47:13" pos:end="47:13">*</operator><name pos:start="47:14" pos:end="47:16">dst</name><operator pos:start="47:17" pos:end="47:18">++</operator><operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:23">val</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="73:5">else <block pos:start="51:12" pos:end="73:5">{<block_content pos:start="53:9" pos:end="71:9">

        <decl_stmt pos:start="53:9" pos:end="53:89"><decl pos:start="53:9" pos:end="53:88"><type pos:start="53:9" pos:end="53:23"><specifier pos:start="53:9" pos:end="53:13">const</specifier> <name pos:start="53:15" pos:end="53:21">uint8_t</name> <modifier pos:start="53:23" pos:end="53:23">*</modifier></type><name pos:start="53:24" pos:end="53:24">p</name> <init pos:start="53:26" pos:end="53:88">= <expr pos:start="53:28" pos:end="53:88"><name pos:start="53:28" pos:end="53:38"><name pos:start="53:28" pos:end="53:31">data</name><index pos:start="53:32" pos:end="53:38">[<expr pos:start="53:33" pos:end="53:37"><name pos:start="53:33" pos:end="53:37">plane</name></expr>]</index></name><operator pos:start="53:39" pos:end="53:39">+</operator> <name pos:start="53:41" pos:end="53:41">y</name><operator pos:start="53:42" pos:end="53:42">*</operator><name pos:start="53:43" pos:end="53:57"><name pos:start="53:43" pos:end="53:50">linesize</name><index pos:start="53:51" pos:end="53:57">[<expr pos:start="53:52" pos:end="53:56"><name pos:start="53:52" pos:end="53:56">plane</name></expr>]</index></name> <operator pos:start="53:59" pos:end="53:59">+</operator> <name pos:start="53:61" pos:end="53:61">x</name><operator pos:start="53:62" pos:end="53:62">*</operator><name pos:start="53:63" pos:end="53:66">step</name> <operator pos:start="53:68" pos:end="53:68">+</operator> <name pos:start="53:70" pos:end="53:86"><name pos:start="53:70" pos:end="53:73">comp</name><operator pos:start="53:74" pos:end="53:74">.</operator><name pos:start="53:75" pos:end="53:86">offset_plus1</name></name><operator pos:start="53:87" pos:end="53:87">-</operator><literal type="number" pos:start="53:88" pos:end="53:88">1</literal></expr></init></decl>;</decl_stmt>



        <while pos:start="57:9" pos:end="71:9">while<condition pos:start="57:14" pos:end="57:18">(<expr pos:start="57:15" pos:end="57:17"><name pos:start="57:15" pos:end="57:15">w</name><operator pos:start="57:16" pos:end="57:17">--</operator></expr>)</condition><block pos:start="57:19" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:24">

            <decl_stmt pos:start="59:13" pos:end="59:67"><decl pos:start="59:13" pos:end="59:66"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:19">val</name> <init pos:start="59:21" pos:end="59:66">= <expr pos:start="59:23" pos:end="59:66"><ternary pos:start="59:23" pos:end="59:66"><condition pos:start="59:23" pos:end="59:42"><expr pos:start="59:23" pos:end="59:40"><name pos:start="59:23" pos:end="59:27">flags</name> <operator pos:start="59:29" pos:end="59:29">&amp;</operator> <name pos:start="59:31" pos:end="59:40">PIX_FMT_BE</name></expr> ?</condition><then pos:start="59:44" pos:end="59:53"> <expr pos:start="59:44" pos:end="59:53"><call pos:start="59:44" pos:end="59:53"><name pos:start="59:44" pos:end="59:50">AV_RB16</name><argument_list pos:start="59:51" pos:end="59:53">(<argument pos:start="59:52" pos:end="59:52"><expr pos:start="59:52" pos:end="59:52"><name pos:start="59:52" pos:end="59:52">p</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="59:55" pos:end="59:66">: <expr pos:start="59:57" pos:end="59:66"><call pos:start="59:57" pos:end="59:66"><name pos:start="59:57" pos:end="59:63">AV_RL16</name><argument_list pos:start="59:64" pos:end="59:66">(<argument pos:start="59:65" pos:end="59:65"><expr pos:start="59:65" pos:end="59:65"><name pos:start="59:65" pos:end="59:65">p</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:38"><expr pos:start="61:13" pos:end="61:37"><name pos:start="61:13" pos:end="61:15">val</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <operator pos:start="61:19" pos:end="61:19">(</operator><name pos:start="61:20" pos:end="61:22">val</name><operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator><name pos:start="61:25" pos:end="61:29">shift</name><operator pos:start="61:30" pos:end="61:30">)</operator> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <name pos:start="61:34" pos:end="61:37">mask</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="65:40"><if pos:start="63:13" pos:end="65:40">if<condition pos:start="63:15" pos:end="63:34">(<expr pos:start="63:16" pos:end="63:33"><name pos:start="63:16" pos:end="63:33">read_pal_component</name></expr>)</condition><block type="pseudo" pos:start="65:17" pos:end="65:40"><block_content pos:start="65:17" pos:end="65:40">

                <expr_stmt pos:start="65:17" pos:end="65:40"><expr pos:start="65:17" pos:end="65:39"><name pos:start="65:17" pos:end="65:19">val</name><operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:39"><name pos:start="65:22" pos:end="65:25">data</name><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">1</literal></expr>]</index><index pos:start="65:29" pos:end="65:39">[<expr pos:start="65:30" pos:end="65:38"><literal type="number" pos:start="65:30" pos:end="65:30">4</literal><operator pos:start="65:31" pos:end="65:31">*</operator><name pos:start="65:32" pos:end="65:34">val</name> <operator pos:start="65:36" pos:end="65:36">+</operator> <name pos:start="65:38" pos:end="65:38">c</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:21"><expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:13">p</name><operator pos:start="67:14" pos:end="67:15">+=</operator> <name pos:start="67:17" pos:end="67:20">step</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:16">dst</name><operator pos:start="69:17" pos:end="69:18">++</operator><operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:23">val</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
