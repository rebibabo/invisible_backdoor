<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9426.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_rv34_decode_frame</name><parameter_list pos:start="1:25" pos:end="5:44">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:38"><decl pos:start="3:29" pos:end="3:38"><type pos:start="3:29" pos:end="3:38"><name pos:start="3:29" pos:end="3:32">void</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:38">data</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:54"><decl pos:start="3:41" pos:end="3:54"><type pos:start="3:41" pos:end="3:54"><name pos:start="3:41" pos:end="3:43">int</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:54">data_size</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:36">AVPacket</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="199:1">{<block_content pos:start="9:5" pos:end="197:20">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">buf</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">RV34DecContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">r</name> <init pos:start="13:23" pos:end="13:40">= <expr pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:40"><name pos:start="13:25" pos:end="13:29">avctx</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">MpegEncContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:21">s</name> <init pos:start="15:23" pos:end="15:29">= <expr pos:start="15:25" pos:end="15:29"><operator pos:start="15:25" pos:end="15:25">&amp;</operator><name pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:26">r</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:17">pict</name> <init pos:start="17:19" pos:end="17:24">= <expr pos:start="17:21" pos:end="17:24"><name pos:start="17:21" pos:end="17:24">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">SliceInfo</name></type> <name pos:start="19:15" pos:end="19:16">si</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:10"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">slice_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:37"><decl pos:start="25:5" pos:end="25:36"><type pos:start="25:5" pos:end="25:19"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:17">uint8_t</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:29">slices_hdr</name> <init pos:start="25:31" pos:end="25:36">= <expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:12">last</name> <init pos:start="27:14" pos:end="27:16">= <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:34">/* no supplementary picture */</comment>

    <if_stmt pos:start="33:5" pos:end="51:5"><if pos:start="33:5" pos:end="51:5">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:16">buf_size</name> <operator pos:start="33:18" pos:end="33:19">==</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>)</condition> <block pos:start="33:24" pos:end="51:5">{<block_content pos:start="37:9" pos:end="49:17">

        <comment type="block" pos:start="35:9" pos:end="35:43">/* special case for last picture */</comment>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:51">(<expr pos:start="37:13" pos:end="37:50"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">low_delay</name></name><operator pos:start="37:25" pos:end="37:26">==</operator><literal type="number" pos:start="37:27" pos:end="37:27">0</literal> <operator pos:start="37:29" pos:end="37:30">&amp;&amp;</operator> <name pos:start="37:32" pos:end="37:50"><name pos:start="37:32" pos:end="37:32">s</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:50">next_picture_ptr</name></name></expr>)</condition> <block pos:start="37:53" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:41">

            <expr_stmt pos:start="39:13" pos:end="39:51"><expr pos:start="39:13" pos:end="39:50"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:17">pict</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <operator pos:start="39:21" pos:end="39:21">*</operator><operator pos:start="39:22" pos:end="39:22">(</operator><name pos:start="39:23" pos:end="39:29">AVFrame</name><operator pos:start="39:30" pos:end="39:30">*</operator><operator pos:start="39:31" pos:end="39:31">)</operator><name pos:start="39:32" pos:end="39:50"><name pos:start="39:32" pos:end="39:32">s</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:50">next_picture_ptr</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:39"><expr pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:31">next_picture_ptr</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:38">NULL</name></expr>;</expr_stmt>



            <expr_stmt pos:start="45:13" pos:end="45:41"><expr pos:start="45:13" pos:end="45:40"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:22">data_size</name> <operator pos:start="45:24" pos:end="45:24">=</operator> <sizeof pos:start="45:26" pos:end="45:40">sizeof<argument_list pos:start="45:32" pos:end="45:40">(<argument pos:start="45:33" pos:end="45:39"><expr pos:start="45:33" pos:end="45:39"><name pos:start="45:33" pos:end="45:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="65:41"><if pos:start="55:5" pos:end="63:5">if<condition pos:start="55:7" pos:end="55:27">(<expr pos:start="55:8" pos:end="55:26"><operator pos:start="55:8" pos:end="55:8">!</operator><name pos:start="55:9" pos:end="55:26"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:26">slice_count</name></name></expr>)</condition><block pos:start="55:28" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:31">

        <expr_stmt pos:start="57:9" pos:end="57:35"><expr pos:start="57:9" pos:end="57:34"><name pos:start="57:9" pos:end="57:19">slice_count</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <operator pos:start="57:23" pos:end="57:23">(</operator><operator pos:start="57:24" pos:end="57:24">*</operator><name pos:start="57:25" pos:end="57:27">buf</name><operator pos:start="57:28" pos:end="57:29">++</operator><operator pos:start="57:30" pos:end="57:30">)</operator> <operator pos:start="57:32" pos:end="57:32">+</operator> <literal type="number" pos:start="57:34" pos:end="57:34">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:18">slices_hdr</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <name pos:start="59:22" pos:end="59:24">buf</name> <operator pos:start="59:26" pos:end="59:26">+</operator> <literal type="number" pos:start="59:28" pos:end="59:28">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:11">buf</name> <operator pos:start="61:13" pos:end="61:14">+=</operator> <literal type="number" pos:start="61:16" pos:end="61:16">8</literal> <operator pos:start="61:18" pos:end="61:18">*</operator> <name pos:start="61:20" pos:end="61:30">slice_count</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="63:6" pos:end="65:41">else<block type="pseudo" pos:start="65:9" pos:end="65:41"><block_content pos:start="65:9" pos:end="65:41">

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:19">slice_count</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:40"><name pos:start="65:23" pos:end="65:27">avctx</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:40">slice_count</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="line" pos:start="69:5" pos:end="69:73">//parse first slice header to check whether this frame can be decoded</comment>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if<condition pos:start="71:7" pos:end="71:57">(<expr pos:start="71:8" pos:end="71:56"><call pos:start="71:8" pos:end="71:45"><name pos:start="71:8" pos:end="71:23">get_slice_offset</name><argument_list pos:start="71:24" pos:end="71:45">(<argument pos:start="71:25" pos:end="71:29"><expr pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:29">avctx</name></expr></argument>, <argument pos:start="71:32" pos:end="71:41"><expr pos:start="71:32" pos:end="71:41"><name pos:start="71:32" pos:end="71:41">slices_hdr</name></expr></argument>, <argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">0</literal></expr></argument>)</argument_list></call> <operator pos:start="71:47" pos:end="71:47">&gt;</operator> <name pos:start="71:49" pos:end="71:56">buf_size</name></expr>)</condition><block pos:start="71:58" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:18">

        <expr_stmt pos:start="73:9" pos:end="73:81"><expr pos:start="73:9" pos:end="73:80"><call pos:start="73:9" pos:end="73:80"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:80">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:79"><expr pos:start="73:37" pos:end="73:79"><literal type="string" pos:start="73:37" pos:end="73:79">"Slice offset is greater than frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:18">return <expr pos:start="75:16" pos:end="75:17"><operator pos:start="75:16" pos:end="75:16">-</operator><literal type="number" pos:start="75:17" pos:end="75:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:123"><expr pos:start="79:5" pos:end="79:122"><call pos:start="79:5" pos:end="79:122"><name pos:start="79:5" pos:end="79:17">init_get_bits</name><argument_list pos:start="79:18" pos:end="79:122">(<argument pos:start="79:19" pos:end="79:24"><expr pos:start="79:19" pos:end="79:24"><operator pos:start="79:19" pos:end="79:19">&amp;</operator><name pos:start="79:20" pos:end="79:24"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:24">gb</name></name></expr></argument>, <argument pos:start="79:27" pos:end="79:68"><expr pos:start="79:27" pos:end="79:68"><name pos:start="79:27" pos:end="79:29">buf</name><operator pos:start="79:30" pos:end="79:30">+</operator><call pos:start="79:31" pos:end="79:68"><name pos:start="79:31" pos:end="79:46">get_slice_offset</name><argument_list pos:start="79:47" pos:end="79:68">(<argument pos:start="79:48" pos:end="79:52"><expr pos:start="79:48" pos:end="79:52"><name pos:start="79:48" pos:end="79:52">avctx</name></expr></argument>, <argument pos:start="79:55" pos:end="79:64"><expr pos:start="79:55" pos:end="79:64"><name pos:start="79:55" pos:end="79:64">slices_hdr</name></expr></argument>, <argument pos:start="79:67" pos:end="79:67"><expr pos:start="79:67" pos:end="79:67"><literal type="number" pos:start="79:67" pos:end="79:67">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:71" pos:end="79:121"><expr pos:start="79:71" pos:end="79:121"><operator pos:start="79:71" pos:end="79:71">(</operator><name pos:start="79:72" pos:end="79:79">buf_size</name><operator pos:start="79:80" pos:end="79:80">-</operator><call pos:start="79:81" pos:end="79:118"><name pos:start="79:81" pos:end="79:96">get_slice_offset</name><argument_list pos:start="79:97" pos:end="79:118">(<argument pos:start="79:98" pos:end="79:102"><expr pos:start="79:98" pos:end="79:102"><name pos:start="79:98" pos:end="79:102">avctx</name></expr></argument>, <argument pos:start="79:105" pos:end="79:114"><expr pos:start="79:105" pos:end="79:114"><name pos:start="79:105" pos:end="79:114">slices_hdr</name></expr></argument>, <argument pos:start="79:117" pos:end="79:117"><expr pos:start="79:117" pos:end="79:117"><literal type="number" pos:start="79:117" pos:end="79:117">0</literal></expr></argument>)</argument_list></call><operator pos:start="79:119" pos:end="79:119">)</operator><operator pos:start="79:120" pos:end="79:120">*</operator><literal type="number" pos:start="79:121" pos:end="79:121">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="87:5"><if pos:start="81:5" pos:end="87:5">if<condition pos:start="81:7" pos:end="81:63">(<expr pos:start="81:8" pos:end="81:62"><call pos:start="81:8" pos:end="81:46"><name pos:start="81:8" pos:end="81:28"><name pos:start="81:8" pos:end="81:8">r</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:28">parse_slice_header</name></name><argument_list pos:start="81:29" pos:end="81:46">(<argument pos:start="81:30" pos:end="81:30"><expr pos:start="81:30" pos:end="81:30"><name pos:start="81:30" pos:end="81:30">r</name></expr></argument>, <argument pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:40"><operator pos:start="81:33" pos:end="81:33">&amp;</operator><name pos:start="81:34" pos:end="81:40"><name pos:start="81:34" pos:end="81:34">r</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:37">s</name><operator pos:start="81:38" pos:end="81:38">.</operator><name pos:start="81:39" pos:end="81:40">gb</name></name></expr></argument>, <argument pos:start="81:43" pos:end="81:45"><expr pos:start="81:43" pos:end="81:45"><operator pos:start="81:43" pos:end="81:43">&amp;</operator><name pos:start="81:44" pos:end="81:45">si</name></expr></argument>)</argument_list></call> <operator pos:start="81:48" pos:end="81:48">&lt;</operator> <literal type="number" pos:start="81:50" pos:end="81:50">0</literal> <operator pos:start="81:52" pos:end="81:53">||</operator> <name pos:start="81:55" pos:end="81:62"><name pos:start="81:55" pos:end="81:56">si</name><operator pos:start="81:57" pos:end="81:57">.</operator><name pos:start="81:58" pos:end="81:62">start</name></name></expr>)</condition><block pos:start="81:64" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:18">

        <expr_stmt pos:start="83:9" pos:end="83:73"><expr pos:start="83:9" pos:end="83:72"><call pos:start="83:9" pos:end="83:72"><name pos:start="83:9" pos:end="83:14">av_log</name><argument_list pos:start="83:15" pos:end="83:72">(<argument pos:start="83:16" pos:end="83:20"><expr pos:start="83:16" pos:end="83:20"><name pos:start="83:16" pos:end="83:20">avctx</name></expr></argument>, <argument pos:start="83:23" pos:end="83:34"><expr pos:start="83:23" pos:end="83:34"><name pos:start="83:23" pos:end="83:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:37" pos:end="83:71"><expr pos:start="83:37" pos:end="83:71"><literal type="string" pos:start="83:37" pos:end="83:71">"First slice header is incorrect\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:18">return <expr pos:start="85:16" pos:end="85:17"><operator pos:start="85:16" pos:end="85:16">-</operator><literal type="number" pos:start="85:17" pos:end="85:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="89:5" pos:end="91:18"><if pos:start="89:5" pos:end="91:18">if <condition pos:start="89:8" pos:end="89:98">(<expr pos:start="89:9" pos:end="89:97"><operator pos:start="89:9" pos:end="89:9">(</operator><operator pos:start="89:10" pos:end="89:10">!</operator><name pos:start="89:11" pos:end="89:29"><name pos:start="89:11" pos:end="89:11">s</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:29">last_picture_ptr</name></name> <operator pos:start="89:31" pos:end="89:32">||</operator> <operator pos:start="89:34" pos:end="89:34">!</operator><name pos:start="89:35" pos:end="89:64"><name pos:start="89:35" pos:end="89:35">s</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:53">last_picture_ptr</name><operator pos:start="89:54" pos:end="89:55">-&gt;</operator><name pos:start="89:56" pos:end="89:56">f</name><operator pos:start="89:57" pos:end="89:57">.</operator><name pos:start="89:58" pos:end="89:61">data</name><index pos:start="89:62" pos:end="89:64">[<expr pos:start="89:63" pos:end="89:63"><literal type="number" pos:start="89:63" pos:end="89:63">0</literal></expr>]</index></name><operator pos:start="89:65" pos:end="89:65">)</operator> <operator pos:start="89:67" pos:end="89:68">&amp;&amp;</operator> <name pos:start="89:70" pos:end="89:76"><name pos:start="89:70" pos:end="89:71">si</name><operator pos:start="89:72" pos:end="89:72">.</operator><name pos:start="89:73" pos:end="89:76">type</name></name> <operator pos:start="89:78" pos:end="89:79">==</operator> <name pos:start="89:81" pos:end="89:97">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="91:9" pos:end="91:18"><block_content pos:start="91:9" pos:end="91:18">

        <return pos:start="91:9" pos:end="91:18">return <expr pos:start="91:16" pos:end="91:17"><operator pos:start="91:16" pos:end="91:16">-</operator><literal type="number" pos:start="91:17" pos:end="91:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="99:24"><if pos:start="93:5" pos:end="99:24">if<condition pos:start="93:7" pos:end="97:46">(   <expr pos:start="93:11" pos:end="97:45"><operator pos:start="93:11" pos:end="93:11">(</operator><name pos:start="93:12" pos:end="93:28"><name pos:start="93:12" pos:end="93:16">avctx</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:28">skip_frame</name></name> <operator pos:start="93:30" pos:end="93:31">&gt;=</operator> <name pos:start="93:33" pos:end="93:48">AVDISCARD_NONREF</name> <operator pos:start="93:50" pos:end="93:51">&amp;&amp;</operator> <name pos:start="93:53" pos:end="93:59"><name pos:start="93:53" pos:end="93:54">si</name><operator pos:start="93:55" pos:end="93:55">.</operator><name pos:start="93:56" pos:end="93:59">type</name></name><operator pos:start="93:60" pos:end="93:61">==</operator><name pos:start="93:62" pos:end="93:78">AV_PICTURE_TYPE_B</name><operator pos:start="93:79" pos:end="93:79">)</operator>

       <operator pos:start="95:8" pos:end="95:9">||</operator> <operator pos:start="95:11" pos:end="95:11">(</operator><name pos:start="95:12" pos:end="95:28"><name pos:start="95:12" pos:end="95:16">avctx</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:28">skip_frame</name></name> <operator pos:start="95:30" pos:end="95:31">&gt;=</operator> <name pos:start="95:33" pos:end="95:48">AVDISCARD_NONKEY</name> <operator pos:start="95:50" pos:end="95:51">&amp;&amp;</operator> <name pos:start="95:53" pos:end="95:59"><name pos:start="95:53" pos:end="95:54">si</name><operator pos:start="95:55" pos:end="95:55">.</operator><name pos:start="95:56" pos:end="95:59">type</name></name><operator pos:start="95:60" pos:end="95:61">!=</operator><name pos:start="95:62" pos:end="95:78">AV_PICTURE_TYPE_I</name><operator pos:start="95:79" pos:end="95:79">)</operator>

       <operator pos:start="97:8" pos:end="97:9">||</operator>  <name pos:start="97:12" pos:end="97:28"><name pos:start="97:12" pos:end="97:16">avctx</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:28">skip_frame</name></name> <operator pos:start="97:30" pos:end="97:31">&gt;=</operator> <name pos:start="97:33" pos:end="97:45">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:24"><block_content pos:start="99:9" pos:end="99:24">

        <return pos:start="99:9" pos:end="99:24">return <expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23">buf_size</name></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="103:5" pos:end="159:5">for<control pos:start="103:8" pos:end="103:36">(<init pos:start="103:9" pos:end="103:14"><expr pos:start="103:9" pos:end="103:13"><name pos:start="103:9" pos:end="103:9">i</name> <operator pos:start="103:11" pos:end="103:11">=</operator> <literal type="number" pos:start="103:13" pos:end="103:13">0</literal></expr>;</init> <condition pos:start="103:16" pos:end="103:31"><expr pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:16">i</name> <operator pos:start="103:18" pos:end="103:18">&lt;</operator> <name pos:start="103:20" pos:end="103:30">slice_count</name></expr>;</condition> <incr pos:start="103:33" pos:end="103:35"><expr pos:start="103:33" pos:end="103:35"><name pos:start="103:33" pos:end="103:33">i</name><operator pos:start="103:34" pos:end="103:35">++</operator></expr></incr>)</control><block pos:start="103:37" pos:end="159:5">{<block_content pos:start="105:9" pos:end="157:18">

        <decl_stmt pos:start="105:9" pos:end="105:60"><decl pos:start="105:9" pos:end="105:59"><type pos:start="105:9" pos:end="105:11"><name pos:start="105:9" pos:end="105:11">int</name></type> <name pos:start="105:13" pos:end="105:18">offset</name> <init pos:start="105:20" pos:end="105:59">= <expr pos:start="105:22" pos:end="105:59"><call pos:start="105:22" pos:end="105:59"><name pos:start="105:22" pos:end="105:37">get_slice_offset</name><argument_list pos:start="105:38" pos:end="105:59">(<argument pos:start="105:39" pos:end="105:43"><expr pos:start="105:39" pos:end="105:43"><name pos:start="105:39" pos:end="105:43">avctx</name></expr></argument>, <argument pos:start="105:46" pos:end="105:55"><expr pos:start="105:46" pos:end="105:55"><name pos:start="105:46" pos:end="105:55">slices_hdr</name></expr></argument>, <argument pos:start="105:58" pos:end="105:58"><expr pos:start="105:58" pos:end="105:58"><name pos:start="105:58" pos:end="105:58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:17"><decl pos:start="107:9" pos:end="107:16"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:16">size</name></decl>;</decl_stmt>

        <if_stmt pos:start="109:9" pos:end="115:69"><if pos:start="109:9" pos:end="111:37">if<condition pos:start="109:11" pos:end="109:30">(<expr pos:start="109:12" pos:end="109:29"><name pos:start="109:12" pos:end="109:12">i</name><operator pos:start="109:13" pos:end="109:13">+</operator><literal type="number" pos:start="109:14" pos:end="109:14">1</literal> <operator pos:start="109:16" pos:end="109:17">==</operator> <name pos:start="109:19" pos:end="109:29">slice_count</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:37"><block_content pos:start="111:13" pos:end="111:37">

            <expr_stmt pos:start="111:13" pos:end="111:37"><expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:16">size</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <name pos:start="111:20" pos:end="111:27">buf_size</name> <operator pos:start="111:29" pos:end="111:29">-</operator> <name pos:start="111:31" pos:end="111:36">offset</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="113:9" pos:end="115:69">else<block type="pseudo" pos:start="115:13" pos:end="115:69"><block_content pos:start="115:13" pos:end="115:69">

            <expr_stmt pos:start="115:13" pos:end="115:69"><expr pos:start="115:13" pos:end="115:68"><name pos:start="115:13" pos:end="115:16">size</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:59"><name pos:start="115:20" pos:end="115:35">get_slice_offset</name><argument_list pos:start="115:36" pos:end="115:59">(<argument pos:start="115:37" pos:end="115:41"><expr pos:start="115:37" pos:end="115:41"><name pos:start="115:37" pos:end="115:41">avctx</name></expr></argument>, <argument pos:start="115:44" pos:end="115:53"><expr pos:start="115:44" pos:end="115:53"><name pos:start="115:44" pos:end="115:53">slices_hdr</name></expr></argument>, <argument pos:start="115:56" pos:end="115:58"><expr pos:start="115:56" pos:end="115:58"><name pos:start="115:56" pos:end="115:56">i</name><operator pos:start="115:57" pos:end="115:57">+</operator><literal type="number" pos:start="115:58" pos:end="115:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="115:61" pos:end="115:61">-</operator> <name pos:start="115:63" pos:end="115:68">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if<condition pos:start="119:11" pos:end="119:29">(<expr pos:start="119:12" pos:end="119:28"><name pos:start="119:12" pos:end="119:17">offset</name> <operator pos:start="119:19" pos:end="119:19">&gt;</operator> <name pos:start="119:21" pos:end="119:28">buf_size</name></expr>)</condition><block pos:start="119:30" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:18">

            <expr_stmt pos:start="121:13" pos:end="121:85"><expr pos:start="121:13" pos:end="121:84"><call pos:start="121:13" pos:end="121:84"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="121:84">(<argument pos:start="121:20" pos:end="121:24"><expr pos:start="121:20" pos:end="121:24"><name pos:start="121:20" pos:end="121:24">avctx</name></expr></argument>, <argument pos:start="121:27" pos:end="121:38"><expr pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:41" pos:end="121:83"><expr pos:start="121:41" pos:end="121:83"><literal type="string" pos:start="121:41" pos:end="121:83">"Slice offset is greater than frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:47"><expr pos:start="129:9" pos:end="129:46"><name pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:9">r</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:13">si</name><operator pos:start="129:14" pos:end="129:14">.</operator><name pos:start="129:15" pos:end="129:17">end</name></name> <operator pos:start="129:19" pos:end="129:19">=</operator> <name pos:start="129:21" pos:end="129:31"><name pos:start="129:21" pos:end="129:21">s</name><operator pos:start="129:22" pos:end="129:23">-&gt;</operator><name pos:start="129:24" pos:end="129:31">mb_width</name></name> <operator pos:start="129:33" pos:end="129:33">*</operator> <name pos:start="129:35" pos:end="129:46"><name pos:start="129:35" pos:end="129:35">s</name><operator pos:start="129:36" pos:end="129:37">-&gt;</operator><name pos:start="129:38" pos:end="129:46">mb_height</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="149:9"><if pos:start="131:9" pos:end="149:9">if<condition pos:start="131:11" pos:end="131:29">(<expr pos:start="131:12" pos:end="131:28"><name pos:start="131:12" pos:end="131:12">i</name><operator pos:start="131:13" pos:end="131:13">+</operator><literal type="number" pos:start="131:14" pos:end="131:14">1</literal> <operator pos:start="131:16" pos:end="131:16">&lt;</operator> <name pos:start="131:18" pos:end="131:28">slice_count</name></expr>)</condition><block pos:start="131:30" pos:end="149:9">{<block_content pos:start="133:13" pos:end="147:37">

            <expr_stmt pos:start="133:13" pos:end="133:135"><expr pos:start="133:13" pos:end="133:134"><call pos:start="133:13" pos:end="133:134"><name pos:start="133:13" pos:end="133:25">init_get_bits</name><argument_list pos:start="133:26" pos:end="133:134">(<argument pos:start="133:27" pos:end="133:32"><expr pos:start="133:27" pos:end="133:32"><operator pos:start="133:27" pos:end="133:27">&amp;</operator><name pos:start="133:28" pos:end="133:32"><name pos:start="133:28" pos:end="133:28">s</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:32">gb</name></name></expr></argument>, <argument pos:start="133:35" pos:end="133:78"><expr pos:start="133:35" pos:end="133:78"><name pos:start="133:35" pos:end="133:37">buf</name><operator pos:start="133:38" pos:end="133:38">+</operator><call pos:start="133:39" pos:end="133:78"><name pos:start="133:39" pos:end="133:54">get_slice_offset</name><argument_list pos:start="133:55" pos:end="133:78">(<argument pos:start="133:56" pos:end="133:60"><expr pos:start="133:56" pos:end="133:60"><name pos:start="133:56" pos:end="133:60">avctx</name></expr></argument>, <argument pos:start="133:63" pos:end="133:72"><expr pos:start="133:63" pos:end="133:72"><name pos:start="133:63" pos:end="133:72">slices_hdr</name></expr></argument>, <argument pos:start="133:75" pos:end="133:77"><expr pos:start="133:75" pos:end="133:77"><name pos:start="133:75" pos:end="133:75">i</name><operator pos:start="133:76" pos:end="133:76">+</operator><literal type="number" pos:start="133:77" pos:end="133:77">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="133:81" pos:end="133:133"><expr pos:start="133:81" pos:end="133:133"><operator pos:start="133:81" pos:end="133:81">(</operator><name pos:start="133:82" pos:end="133:89">buf_size</name><operator pos:start="133:90" pos:end="133:90">-</operator><call pos:start="133:91" pos:end="133:130"><name pos:start="133:91" pos:end="133:106">get_slice_offset</name><argument_list pos:start="133:107" pos:end="133:130">(<argument pos:start="133:108" pos:end="133:112"><expr pos:start="133:108" pos:end="133:112"><name pos:start="133:108" pos:end="133:112">avctx</name></expr></argument>, <argument pos:start="133:115" pos:end="133:124"><expr pos:start="133:115" pos:end="133:124"><name pos:start="133:115" pos:end="133:124">slices_hdr</name></expr></argument>, <argument pos:start="133:127" pos:end="133:129"><expr pos:start="133:127" pos:end="133:129"><name pos:start="133:127" pos:end="133:127">i</name><operator pos:start="133:128" pos:end="133:128">+</operator><literal type="number" pos:start="133:129" pos:end="133:129">1</literal></expr></argument>)</argument_list></call><operator pos:start="133:131" pos:end="133:131">)</operator><operator pos:start="133:132" pos:end="133:132">*</operator><literal type="number" pos:start="133:133" pos:end="133:133">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="135:13" pos:end="147:37"><if pos:start="135:13" pos:end="145:13">if<condition pos:start="135:15" pos:end="135:59">(<expr pos:start="135:16" pos:end="135:58"><call pos:start="135:16" pos:end="135:54"><name pos:start="135:16" pos:end="135:36"><name pos:start="135:16" pos:end="135:16">r</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:36">parse_slice_header</name></name><argument_list pos:start="135:37" pos:end="135:54">(<argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">r</name></expr></argument>, <argument pos:start="135:41" pos:end="135:48"><expr pos:start="135:41" pos:end="135:48"><operator pos:start="135:41" pos:end="135:41">&amp;</operator><name pos:start="135:42" pos:end="135:48"><name pos:start="135:42" pos:end="135:42">r</name><operator pos:start="135:43" pos:end="135:44">-&gt;</operator><name pos:start="135:45" pos:end="135:45">s</name><operator pos:start="135:46" pos:end="135:46">.</operator><name pos:start="135:47" pos:end="135:48">gb</name></name></expr></argument>, <argument pos:start="135:51" pos:end="135:53"><expr pos:start="135:51" pos:end="135:53"><operator pos:start="135:51" pos:end="135:51">&amp;</operator><name pos:start="135:52" pos:end="135:53">si</name></expr></argument>)</argument_list></call> <operator pos:start="135:56" pos:end="135:56">&lt;</operator> <literal type="number" pos:start="135:58" pos:end="135:58">0</literal></expr>)</condition><block pos:start="135:60" pos:end="145:13">{<block_content pos:start="137:17" pos:end="143:45">

                <if_stmt pos:start="137:17" pos:end="143:45"><if pos:start="137:17" pos:end="139:77">if<condition pos:start="137:19" pos:end="137:37">(<expr pos:start="137:20" pos:end="137:36"><name pos:start="137:20" pos:end="137:20">i</name><operator pos:start="137:21" pos:end="137:21">+</operator><literal type="number" pos:start="137:22" pos:end="137:22">2</literal> <operator pos:start="137:24" pos:end="137:24">&lt;</operator> <name pos:start="137:26" pos:end="137:36">slice_count</name></expr>)</condition><block type="pseudo" pos:start="139:21" pos:end="139:77"><block_content pos:start="139:21" pos:end="139:77">

                    <expr_stmt pos:start="139:21" pos:end="139:77"><expr pos:start="139:21" pos:end="139:76"><name pos:start="139:21" pos:end="139:24">size</name> <operator pos:start="139:26" pos:end="139:26">=</operator> <call pos:start="139:28" pos:end="139:67"><name pos:start="139:28" pos:end="139:43">get_slice_offset</name><argument_list pos:start="139:44" pos:end="139:67">(<argument pos:start="139:45" pos:end="139:49"><expr pos:start="139:45" pos:end="139:49"><name pos:start="139:45" pos:end="139:49">avctx</name></expr></argument>, <argument pos:start="139:52" pos:end="139:61"><expr pos:start="139:52" pos:end="139:61"><name pos:start="139:52" pos:end="139:61">slices_hdr</name></expr></argument>, <argument pos:start="139:64" pos:end="139:66"><expr pos:start="139:64" pos:end="139:66"><name pos:start="139:64" pos:end="139:64">i</name><operator pos:start="139:65" pos:end="139:65">+</operator><literal type="number" pos:start="139:66" pos:end="139:66">2</literal></expr></argument>)</argument_list></call> <operator pos:start="139:69" pos:end="139:69">-</operator> <name pos:start="139:71" pos:end="139:76">offset</name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="141:17" pos:end="143:45">else<block type="pseudo" pos:start="143:21" pos:end="143:45"><block_content pos:start="143:21" pos:end="143:45">

                    <expr_stmt pos:start="143:21" pos:end="143:45"><expr pos:start="143:21" pos:end="143:44"><name pos:start="143:21" pos:end="143:24">size</name> <operator pos:start="143:26" pos:end="143:26">=</operator> <name pos:start="143:28" pos:end="143:35">buf_size</name> <operator pos:start="143:37" pos:end="143:37">-</operator> <name pos:start="143:39" pos:end="143:44">offset</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if><else pos:start="145:14" pos:end="147:37">else<block type="pseudo" pos:start="147:17" pos:end="147:37"><block_content pos:start="147:17" pos:end="147:37">

                <expr_stmt pos:start="147:17" pos:end="147:37"><expr pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:25"><name pos:start="147:17" pos:end="147:17">r</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:21">si</name><operator pos:start="147:22" pos:end="147:22">.</operator><name pos:start="147:23" pos:end="147:25">end</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:36"><name pos:start="147:29" pos:end="147:30">si</name><operator pos:start="147:31" pos:end="147:31">.</operator><name pos:start="147:32" pos:end="147:36">start</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:67"><expr pos:start="151:9" pos:end="151:66"><name pos:start="151:9" pos:end="151:12">last</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:66"><name pos:start="151:16" pos:end="151:32">rv34_decode_slice</name><argument_list pos:start="151:33" pos:end="151:66">(<argument pos:start="151:34" pos:end="151:34"><expr pos:start="151:34" pos:end="151:34"><name pos:start="151:34" pos:end="151:34">r</name></expr></argument>, <argument pos:start="151:37" pos:end="151:45"><expr pos:start="151:37" pos:end="151:45"><name pos:start="151:37" pos:end="151:45"><name pos:start="151:37" pos:end="151:37">r</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:41">si</name><operator pos:start="151:42" pos:end="151:42">.</operator><name pos:start="151:43" pos:end="151:45">end</name></name></expr></argument>, <argument pos:start="151:48" pos:end="151:59"><expr pos:start="151:48" pos:end="151:59"><name pos:start="151:48" pos:end="151:50">buf</name> <operator pos:start="151:52" pos:end="151:52">+</operator> <name pos:start="151:54" pos:end="151:59">offset</name></expr></argument>, <argument pos:start="151:62" pos:end="151:65"><expr pos:start="151:62" pos:end="151:65"><name pos:start="151:62" pos:end="151:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:75"><expr pos:start="153:9" pos:end="153:74"><name pos:start="153:9" pos:end="153:22"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:22">mb_num_left</name></name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:34"><name pos:start="153:26" pos:end="153:26">r</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:29">s</name><operator pos:start="153:30" pos:end="153:30">.</operator><name pos:start="153:31" pos:end="153:34">mb_x</name></name> <operator pos:start="153:36" pos:end="153:36">+</operator> <name pos:start="153:38" pos:end="153:46"><name pos:start="153:38" pos:end="153:38">r</name><operator pos:start="153:39" pos:end="153:40">-&gt;</operator><name pos:start="153:41" pos:end="153:41">s</name><operator pos:start="153:42" pos:end="153:42">.</operator><name pos:start="153:43" pos:end="153:46">mb_y</name></name><operator pos:start="153:47" pos:end="153:47">*</operator><name pos:start="153:48" pos:end="153:60"><name pos:start="153:48" pos:end="153:48">r</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:51">s</name><operator pos:start="153:52" pos:end="153:52">.</operator><name pos:start="153:53" pos:end="153:60">mb_width</name></name> <operator pos:start="153:62" pos:end="153:62">-</operator> <name pos:start="153:64" pos:end="153:74"><name pos:start="153:64" pos:end="153:64">r</name><operator pos:start="153:65" pos:end="153:66">-&gt;</operator><name pos:start="153:67" pos:end="153:68">si</name><operator pos:start="153:69" pos:end="153:69">.</operator><name pos:start="153:70" pos:end="153:74">start</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:18"><if pos:start="155:9" pos:end="157:18">if<condition pos:start="155:11" pos:end="155:16">(<expr pos:start="155:12" pos:end="155:15"><name pos:start="155:12" pos:end="155:15">last</name></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:18"><block_content pos:start="157:13" pos:end="157:18">

            <break pos:start="157:13" pos:end="157:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="163:5" pos:end="195:5"><if pos:start="163:5" pos:end="195:5">if<condition pos:start="163:7" pos:end="163:38">(<expr pos:start="163:8" pos:end="163:37"><name pos:start="163:8" pos:end="163:11">last</name> <operator pos:start="163:13" pos:end="163:14">&amp;&amp;</operator> <name pos:start="163:16" pos:end="163:37"><name pos:start="163:16" pos:end="163:16">s</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:37">current_picture_ptr</name></name></expr>)</condition><block pos:start="163:39" pos:end="195:5">{<block_content pos:start="165:9" pos:end="193:38">

        <if_stmt pos:start="165:9" pos:end="167:48"><if pos:start="165:9" pos:end="167:48">if<condition pos:start="165:11" pos:end="165:26">(<expr pos:start="165:12" pos:end="165:25"><name pos:start="165:12" pos:end="165:25"><name pos:start="165:12" pos:end="165:12">r</name><operator pos:start="165:13" pos:end="165:14">-&gt;</operator><name pos:start="165:15" pos:end="165:25">loop_filter</name></name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:48"><block_content pos:start="167:13" pos:end="167:48">

            <expr_stmt pos:start="167:13" pos:end="167:48"><expr pos:start="167:13" pos:end="167:47"><call pos:start="167:13" pos:end="167:47"><name pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:13">r</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:26">loop_filter</name></name><argument_list pos:start="167:27" pos:end="167:47">(<argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><name pos:start="167:28" pos:end="167:28">r</name></expr></argument>, <argument pos:start="167:31" pos:end="167:46"><expr pos:start="167:31" pos:end="167:46"><name pos:start="167:31" pos:end="167:42"><name pos:start="167:31" pos:end="167:31">s</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:42">mb_height</name></name> <operator pos:start="167:44" pos:end="167:44">-</operator> <literal type="number" pos:start="167:46" pos:end="167:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:27"><expr pos:start="169:9" pos:end="169:26"><call pos:start="169:9" pos:end="169:26"><name pos:start="169:9" pos:end="169:23">ff_er_frame_end</name><argument_list pos:start="169:24" pos:end="169:26">(<argument pos:start="169:25" pos:end="169:25"><expr pos:start="169:25" pos:end="169:25"><name pos:start="169:25" pos:end="169:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:25"><expr pos:start="171:9" pos:end="171:24"><call pos:start="171:9" pos:end="171:24"><name pos:start="171:9" pos:end="171:21">MPV_frame_end</name><argument_list pos:start="171:22" pos:end="171:24">(<argument pos:start="171:23" pos:end="171:23"><expr pos:start="171:23" pos:end="171:23"><name pos:start="171:23" pos:end="171:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:62">(<expr pos:start="173:13" pos:end="173:61"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:24">pict_type</name></name> <operator pos:start="173:26" pos:end="173:27">==</operator> <name pos:start="173:29" pos:end="173:45">AV_PICTURE_TYPE_B</name> <operator pos:start="173:47" pos:end="173:48">||</operator> <name pos:start="173:50" pos:end="173:61"><name pos:start="173:50" pos:end="173:50">s</name><operator pos:start="173:51" pos:end="173:52">-&gt;</operator><name pos:start="173:53" pos:end="173:61">low_delay</name></name></expr>)</condition> <block pos:start="173:64" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:54">

            <expr_stmt pos:start="175:13" pos:end="175:54"><expr pos:start="175:13" pos:end="175:53"><operator pos:start="175:13" pos:end="175:13">*</operator><name pos:start="175:14" pos:end="175:17">pict</name> <operator pos:start="175:19" pos:end="175:19">=</operator> <operator pos:start="175:21" pos:end="175:21">*</operator><operator pos:start="175:22" pos:end="175:22">(</operator><name pos:start="175:23" pos:end="175:29">AVFrame</name><operator pos:start="175:30" pos:end="175:30">*</operator><operator pos:start="175:31" pos:end="175:31">)</operator><name pos:start="175:32" pos:end="175:53"><name pos:start="175:32" pos:end="175:32">s</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:53">current_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="177:11" pos:end="181:9">else if <condition pos:start="177:19" pos:end="177:47">(<expr pos:start="177:20" pos:end="177:46"><name pos:start="177:20" pos:end="177:38"><name pos:start="177:20" pos:end="177:20">s</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:38">last_picture_ptr</name></name> <operator pos:start="177:40" pos:end="177:41">!=</operator> <name pos:start="177:43" pos:end="177:46">NULL</name></expr>)</condition> <block pos:start="177:49" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:51">

            <expr_stmt pos:start="179:13" pos:end="179:51"><expr pos:start="179:13" pos:end="179:50"><operator pos:start="179:13" pos:end="179:13">*</operator><name pos:start="179:14" pos:end="179:17">pict</name> <operator pos:start="179:19" pos:end="179:19">=</operator> <operator pos:start="179:21" pos:end="179:21">*</operator><operator pos:start="179:22" pos:end="179:22">(</operator><name pos:start="179:23" pos:end="179:29">AVFrame</name><operator pos:start="179:30" pos:end="179:30">*</operator><operator pos:start="179:31" pos:end="179:31">)</operator><name pos:start="179:32" pos:end="179:50"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:50">last_picture_ptr</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="185:9" pos:end="191:9"><if pos:start="185:9" pos:end="191:9">if<condition pos:start="185:11" pos:end="185:47">(<expr pos:start="185:12" pos:end="185:46"><name pos:start="185:12" pos:end="185:30"><name pos:start="185:12" pos:end="185:12">s</name><operator pos:start="185:13" pos:end="185:14">-&gt;</operator><name pos:start="185:15" pos:end="185:30">last_picture_ptr</name></name> <operator pos:start="185:32" pos:end="185:33">||</operator> <name pos:start="185:35" pos:end="185:46"><name pos:start="185:35" pos:end="185:35">s</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:46">low_delay</name></name></expr>)</condition><block pos:start="185:48" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:41">

            <expr_stmt pos:start="187:13" pos:end="187:41"><expr pos:start="187:13" pos:end="187:40"><operator pos:start="187:13" pos:end="187:13">*</operator><name pos:start="187:14" pos:end="187:22">data_size</name> <operator pos:start="187:24" pos:end="187:24">=</operator> <sizeof pos:start="187:26" pos:end="187:40">sizeof<argument_list pos:start="187:32" pos:end="187:40">(<argument pos:start="187:33" pos:end="187:39"><expr pos:start="187:33" pos:end="187:39"><name pos:start="187:33" pos:end="187:39">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:41"><expr pos:start="189:13" pos:end="189:40"><call pos:start="189:13" pos:end="189:40"><name pos:start="189:13" pos:end="189:31">ff_print_debug_info</name><argument_list pos:start="189:32" pos:end="189:40">(<argument pos:start="189:33" pos:end="189:33"><expr pos:start="189:33" pos:end="189:33"><name pos:start="189:33" pos:end="189:33">s</name></expr></argument>, <argument pos:start="189:36" pos:end="189:39"><expr pos:start="189:36" pos:end="189:39"><name pos:start="189:36" pos:end="189:39">pict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:38"><expr pos:start="193:9" pos:end="193:37"><name pos:start="193:9" pos:end="193:30"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:30">current_picture_ptr</name></name> <operator pos:start="193:32" pos:end="193:32">=</operator> <name pos:start="193:34" pos:end="193:37">NULL</name></expr>;</expr_stmt> <comment type="line" pos:start="193:40" pos:end="193:113">//so we can detect if frame_end wasnt called (find some nicer solution...)</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="197:5" pos:end="197:20">return <expr pos:start="197:12" pos:end="197:19"><name pos:start="197:12" pos:end="197:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
