<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3080.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">spapr_fixup_cpu_smt_dt</name><parameter_list pos:start="1:34" pos:end="3:50">(<parameter pos:start="1:35" pos:end="1:43"><decl pos:start="1:35" pos:end="1:43"><type pos:start="1:35" pos:end="1:43"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">fdt</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:55">offset</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:67">PowerPCCPU</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">cpu</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:49"><decl pos:start="3:35" pos:end="3:49"><type pos:start="3:35" pos:end="3:49"><name pos:start="3:35" pos:end="3:37">int</name></type> <name pos:start="3:39" pos:end="3:49">smt_threads</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:15">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:38"><name pos:start="9:14" pos:end="9:25">servers_prop</name><index pos:start="9:26" pos:end="9:38">[<expr pos:start="9:27" pos:end="9:37"><name pos:start="9:27" pos:end="9:37">smt_threads</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:43"><name pos:start="11:14" pos:end="11:26">gservers_prop</name><index pos:start="11:27" pos:end="11:43">[<expr pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:38">smt_threads</name> <operator pos:start="11:40" pos:end="11:40">*</operator> <literal type="number" pos:start="11:42" pos:end="11:42">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">index</name> <init pos:start="13:15" pos:end="13:39">= <expr pos:start="13:17" pos:end="13:39"><call pos:start="13:17" pos:end="13:39"><name pos:start="13:17" pos:end="13:34">ppc_get_vcpu_dt_id</name><argument_list pos:start="13:35" pos:end="13:39">(<argument pos:start="13:36" pos:end="13:38"><expr pos:start="13:36" pos:end="13:38"><name pos:start="13:36" pos:end="13:38">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:11">cpu</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:24">cpu_version</name></name></expr>)</condition> <block pos:start="17:27" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:9">

        <expr_stmt pos:start="19:9" pos:end="21:71"><expr pos:start="19:9" pos:end="21:70"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="21:70"><name pos:start="19:15" pos:end="19:25">fdt_setprop</name><argument_list pos:start="19:26" pos:end="21:70">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">fdt</name></expr></argument>, <argument pos:start="19:32" pos:end="19:37"><expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37">offset</name></expr></argument>, <argument pos:start="19:40" pos:end="19:52"><expr pos:start="19:40" pos:end="19:52"><literal type="string" pos:start="19:40" pos:end="19:52">"cpu-version"</literal></expr></argument>,

                          <argument pos:start="21:27" pos:end="21:43"><expr pos:start="21:27" pos:end="21:43"><operator pos:start="21:27" pos:end="21:27">&amp;</operator><name pos:start="21:28" pos:end="21:43"><name pos:start="21:28" pos:end="21:30">cpu</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:43">cpu_version</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:69"><expr pos:start="21:46" pos:end="21:69"><sizeof pos:start="21:46" pos:end="21:69">sizeof<argument_list pos:start="21:52" pos:end="21:69">(<argument pos:start="21:53" pos:end="21:68"><expr pos:start="21:53" pos:end="21:68"><name pos:start="21:53" pos:end="21:68"><name pos:start="21:53" pos:end="21:55">cpu</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:68">cpu_version</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:20">(<expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">&lt;</operator> <literal type="number" pos:start="23:19" pos:end="23:19">0</literal></expr>)</condition> <block pos:start="23:22" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:57">/* Build interrupt servers and gservers properties */</comment>

    <for pos:start="35:5" pos:end="45:5">for <control pos:start="35:9" pos:end="35:37">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:32"><expr pos:start="35:17" pos:end="35:31"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:31">smt_threads</name></expr>;</condition> <incr pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:34">i</name><operator pos:start="35:35" pos:end="35:36">++</operator></expr></incr>)</control> <block pos:start="35:39" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:35">

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:20">servers_prop</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><name pos:start="37:22" pos:end="37:22">i</name></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:48"><name pos:start="37:27" pos:end="37:37">cpu_to_be32</name><argument_list pos:start="37:38" pos:end="37:48">(<argument pos:start="37:39" pos:end="37:47"><expr pos:start="37:39" pos:end="37:47"><name pos:start="37:39" pos:end="37:43">index</name> <operator pos:start="37:45" pos:end="37:45">+</operator> <name pos:start="37:47" pos:end="37:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:57">/* Hack, direct the group queues back to cpu 0 */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:52"><expr pos:start="41:9" pos:end="41:51"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:21">gservers_prop</name><index pos:start="41:22" pos:end="41:26">[<expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:24">*</operator><literal type="number" pos:start="41:25" pos:end="41:25">2</literal></expr>]</index></name> <operator pos:start="41:28" pos:end="41:28">=</operator> <call pos:start="41:30" pos:end="41:51"><name pos:start="41:30" pos:end="41:40">cpu_to_be32</name><argument_list pos:start="41:41" pos:end="41:51">(<argument pos:start="41:42" pos:end="41:50"><expr pos:start="41:42" pos:end="41:50"><name pos:start="41:42" pos:end="41:46">index</name> <operator pos:start="41:48" pos:end="41:48">+</operator> <name pos:start="41:50" pos:end="41:50">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:21">gservers_prop</name><index pos:start="43:22" pos:end="43:30">[<expr pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:23">i</name><operator pos:start="43:24" pos:end="43:24">*</operator><literal type="number" pos:start="43:25" pos:end="43:25">2</literal> <operator pos:start="43:27" pos:end="43:27">+</operator> <literal type="number" pos:start="43:29" pos:end="43:29">1</literal></expr>]</index></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="47:5" pos:end="49:58"><expr pos:start="47:5" pos:end="49:57"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="49:57"><name pos:start="47:11" pos:end="47:21">fdt_setprop</name><argument_list pos:start="47:22" pos:end="49:57">(<argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:25">fdt</name></expr></argument>, <argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">offset</name></expr></argument>, <argument pos:start="47:36" pos:end="47:63"><expr pos:start="47:36" pos:end="47:63"><literal type="string" pos:start="47:36" pos:end="47:63">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,

                      <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">servers_prop</name></expr></argument>, <argument pos:start="49:37" pos:end="49:56"><expr pos:start="49:37" pos:end="49:56"><sizeof pos:start="49:37" pos:end="49:56">sizeof<argument_list pos:start="49:43" pos:end="49:56">(<argument pos:start="49:44" pos:end="49:55"><expr pos:start="49:44" pos:end="49:55"><name pos:start="49:44" pos:end="49:55">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition> <block pos:start="51:18" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="59:60"><expr pos:start="57:5" pos:end="59:59"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="59:59"><name pos:start="57:11" pos:end="57:21">fdt_setprop</name><argument_list pos:start="57:22" pos:end="59:59">(<argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">fdt</name></expr></argument>, <argument pos:start="57:28" pos:end="57:33"><expr pos:start="57:28" pos:end="57:33"><name pos:start="57:28" pos:end="57:33">offset</name></expr></argument>, <argument pos:start="57:36" pos:end="57:64"><expr pos:start="57:36" pos:end="57:64"><literal type="string" pos:start="57:36" pos:end="57:64">"ibm,ppc-interrupt-gserver#s"</literal></expr></argument>,

                      <argument pos:start="59:23" pos:end="59:35"><expr pos:start="59:23" pos:end="59:35"><name pos:start="59:23" pos:end="59:35">gservers_prop</name></expr></argument>, <argument pos:start="59:38" pos:end="59:58"><expr pos:start="59:38" pos:end="59:58"><sizeof pos:start="59:38" pos:end="59:58">sizeof<argument_list pos:start="59:44" pos:end="59:58">(<argument pos:start="59:45" pos:end="59:57"><expr pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:57">gservers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
