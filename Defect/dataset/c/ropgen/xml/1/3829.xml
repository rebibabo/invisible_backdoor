<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3829.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">dirac_decode_picture_header</name><parameter_list pos:start="1:39" pos:end="1:55">(<parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:53"><name pos:start="1:40" pos:end="1:51">DiracContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:19">retire</name></decl>, <decl pos:start="5:22" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:22" pos:end="5:27">picnum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">refdist</name></decl>, <decl pos:start="9:22" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:22" pos:end="9:27">refnum</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">GetBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">gb</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">gb</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:73">/* [DIRAC_STD] 11.1.1 Picture Header. picture_header() PICTURE_NUM */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:89"><expr pos:start="17:5" pos:end="17:88"><name pos:start="17:5" pos:end="17:10">picnum</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:64"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:31">current_picture</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:40">avframe</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:64">display_picture_number</name></name> <operator pos:start="17:66" pos:end="17:66">=</operator> <call pos:start="17:68" pos:end="17:88"><name pos:start="17:68" pos:end="17:80">get_bits_long</name><argument_list pos:start="17:81" pos:end="17:88">(<argument pos:start="17:82" pos:end="17:83"><expr pos:start="17:82" pos:end="17:83"><name pos:start="17:82" pos:end="17:83">gb</name></expr></argument>, <argument pos:start="17:86" pos:end="17:87"><expr pos:start="17:86" pos:end="17:87"><literal type="number" pos:start="17:86" pos:end="17:87">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><call pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:10">av_log</name><argument_list pos:start="23:11" pos:end="23:60">(<argument pos:start="23:12" pos:end="23:19"><expr pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:19"><name pos:start="23:12" pos:end="23:12">s</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:19">avctx</name></name></expr></argument>,<argument pos:start="23:21" pos:end="23:32"><expr pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:32">AV_LOG_DEBUG</name></expr></argument>,<argument pos:start="23:34" pos:end="23:52"><expr pos:start="23:34" pos:end="23:52"><literal type="string" pos:start="23:34" pos:end="23:52">"PICTURE_NUM: %d\n"</literal></expr></argument>,<argument pos:start="23:54" pos:end="23:59"><expr pos:start="23:54" pos:end="23:59"><name pos:start="23:54" pos:end="23:59">picnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="29:30">/* if this is the first keyframe after a sequence header, start our

       reordering from here */</comment>

    <if_stmt pos:start="31:5" pos:end="33:33"><if pos:start="31:5" pos:end="33:33">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:23">frame_number</name></name> <operator pos:start="31:25" pos:end="31:25">&lt;</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:33"><block_content pos:start="33:9" pos:end="33:33">

        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:23">frame_number</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:32">picnum</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">ref_pics</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:35"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">ref_pics</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">1</literal></expr>]</index></name> <operator pos:start="37:37" pos:end="37:37">=</operator> <name pos:start="37:39" pos:end="37:42">NULL</name></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="99:5">for <control pos:start="39:9" pos:end="39:37">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:32"><expr pos:start="39:17" pos:end="39:31"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:31">num_refs</name></name></expr>;</condition> <incr pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:34">i</name><operator pos:start="39:35" pos:end="39:36">++</operator></expr></incr>)</control> <block pos:start="39:39" pos:end="99:5">{<block_content pos:start="41:9" pos:end="95:9">

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:14">refnum</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:24">picnum</name> <operator pos:start="41:26" pos:end="41:26">+</operator> <call pos:start="41:28" pos:end="41:50"><name pos:start="41:28" pos:end="41:46">dirac_get_se_golomb</name><argument_list pos:start="41:47" pos:end="41:50">(<argument pos:start="41:48" pos:end="41:49"><expr pos:start="41:48" pos:end="41:49"><name pos:start="41:48" pos:end="41:49">gb</name></expr></argument>)</argument_list></call><operator pos:start="41:51" pos:end="41:51">)</operator> <operator pos:start="41:53" pos:end="41:53">&amp;</operator> <literal type="number" pos:start="41:55" pos:end="41:64">0xFFFFFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:15">refdist</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:27">INT64_MAX</name></expr>;</expr_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:59">/* find the closest reference to the one we want */</comment>

        <comment type="block" pos:start="49:9" pos:end="49:80">/* Jordi: this is needed if the referenced picture hasn't yet arrived */</comment>

        <for pos:start="51:9" pos:end="61:13">for <control pos:start="51:13" pos:end="51:61">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">j</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">0</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:56"><expr pos:start="51:21" pos:end="51:55"><name pos:start="51:21" pos:end="51:21">j</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <name pos:start="51:25" pos:end="51:44">MAX_REFERENCE_FRAMES</name> <operator pos:start="51:46" pos:end="51:47">&amp;&amp;</operator> <name pos:start="51:49" pos:end="51:55">refdist</name></expr>;</condition> <incr pos:start="51:58" pos:end="51:60"><expr pos:start="51:58" pos:end="51:60"><name pos:start="51:58" pos:end="51:58">j</name><operator pos:start="51:59" pos:end="51:60">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="61:13"><block_content pos:start="53:13" pos:end="61:13">

            <if_stmt pos:start="53:13" pos:end="61:13"><if pos:start="53:13" pos:end="61:13">if <condition pos:start="53:16" pos:end="55:95">(<expr pos:start="53:17" pos:end="55:94"><name pos:start="53:17" pos:end="53:32"><name pos:start="53:17" pos:end="53:17">s</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:29">ref_frames</name><index pos:start="53:30" pos:end="53:32">[<expr pos:start="53:31" pos:end="53:31"><name pos:start="53:31" pos:end="53:31">j</name></expr>]</index></name>

                <operator pos:start="55:17" pos:end="55:18">&amp;&amp;</operator> <call pos:start="55:20" pos:end="55:84"><name pos:start="55:20" pos:end="55:24">FFABS</name><argument_list pos:start="55:25" pos:end="55:84">(<argument pos:start="55:26" pos:end="55:83"><expr pos:start="55:26" pos:end="55:83"><name pos:start="55:26" pos:end="55:41"><name pos:start="55:26" pos:end="55:26">s</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:38">ref_frames</name><index pos:start="55:39" pos:end="55:41">[<expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">j</name></expr>]</index></name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:74"><name pos:start="55:44" pos:end="55:50">avframe</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:74">display_picture_number</name></name> <operator pos:start="55:76" pos:end="55:76">-</operator> <name pos:start="55:78" pos:end="55:83">refnum</name></expr></argument>)</argument_list></call> <operator pos:start="55:86" pos:end="55:86">&lt;</operator> <name pos:start="55:88" pos:end="55:94">refdist</name></expr>)</condition> <block pos:start="55:97" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:92">

                <expr_stmt pos:start="57:17" pos:end="57:50"><expr pos:start="57:17" pos:end="57:49"><name pos:start="57:17" pos:end="57:30"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">ref_pics</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><name pos:start="57:29" pos:end="57:29">i</name></expr>]</index></name> <operator pos:start="57:32" pos:end="57:32">=</operator> <name pos:start="57:34" pos:end="57:49"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:46">ref_frames</name><index pos:start="57:47" pos:end="57:49">[<expr pos:start="57:48" pos:end="57:48"><name pos:start="57:48" pos:end="57:48">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:92"><expr pos:start="59:17" pos:end="59:91"><name pos:start="59:17" pos:end="59:23">refdist</name> <operator pos:start="59:25" pos:end="59:25">=</operator> <call pos:start="59:27" pos:end="59:91"><name pos:start="59:27" pos:end="59:31">FFABS</name><argument_list pos:start="59:32" pos:end="59:91">(<argument pos:start="59:33" pos:end="59:90"><expr pos:start="59:33" pos:end="59:90"><name pos:start="59:33" pos:end="59:48"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:45">ref_frames</name><index pos:start="59:46" pos:end="59:48">[<expr pos:start="59:47" pos:end="59:47"><name pos:start="59:47" pos:end="59:47">j</name></expr>]</index></name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:81"><name pos:start="59:51" pos:end="59:57">avframe</name><operator pos:start="59:58" pos:end="59:59">-&gt;</operator><name pos:start="59:60" pos:end="59:81">display_picture_number</name></name> <operator pos:start="59:83" pos:end="59:83">-</operator> <name pos:start="59:85" pos:end="59:90">refnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt></block_content></block></for>



        <if_stmt pos:start="65:9" pos:end="67:68"><if pos:start="65:9" pos:end="67:68">if <condition pos:start="65:12" pos:end="65:39">(<expr pos:start="65:13" pos:end="65:38"><operator pos:start="65:13" pos:end="65:13">!</operator><name pos:start="65:14" pos:end="65:27"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:24">ref_pics</name><index pos:start="65:25" pos:end="65:27">[<expr pos:start="65:26" pos:end="65:26"><name pos:start="65:26" pos:end="65:26">i</name></expr>]</index></name> <operator pos:start="65:29" pos:end="65:30">||</operator> <name pos:start="65:32" pos:end="65:38">refdist</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:68"><block_content pos:start="67:13" pos:end="67:68">

            <expr_stmt pos:start="67:13" pos:end="67:68"><expr pos:start="67:13" pos:end="67:67"><call pos:start="67:13" pos:end="67:67"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="67:67">(<argument pos:start="67:20" pos:end="67:27"><expr pos:start="67:20" pos:end="67:27"><name pos:start="67:20" pos:end="67:27"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:27">avctx</name></name></expr></argument>, <argument pos:start="67:30" pos:end="67:41"><expr pos:start="67:30" pos:end="67:41"><name pos:start="67:30" pos:end="67:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:44" pos:end="67:66"><expr pos:start="67:44" pos:end="67:66"><literal type="string" pos:start="67:44" pos:end="67:66">"Reference not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="71:9" pos:end="71:62">/* if there were no references at all, allocate one */</comment>

        <if_stmt pos:start="73:9" pos:end="85:17"><if pos:start="73:9" pos:end="85:17">if <condition pos:start="73:12" pos:end="73:28">(<expr pos:start="73:13" pos:end="73:27"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:27"><name pos:start="73:14" pos:end="73:14">s</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:24">ref_pics</name><index pos:start="73:25" pos:end="73:27">[<expr pos:start="73:26" pos:end="73:26"><name pos:start="73:26" pos:end="73:26">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="85:17"><block_content pos:start="75:13" pos:end="85:17">

            <for pos:start="75:13" pos:end="85:17">for <control pos:start="75:17" pos:end="75:44">(<init pos:start="75:18" pos:end="75:23"><expr pos:start="75:18" pos:end="75:22"><name pos:start="75:18" pos:end="75:18">j</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</init> <condition pos:start="75:25" pos:end="75:39"><expr pos:start="75:25" pos:end="75:38"><name pos:start="75:25" pos:end="75:25">j</name> <operator pos:start="75:27" pos:end="75:27">&lt;</operator> <name pos:start="75:29" pos:end="75:38">MAX_FRAMES</name></expr>;</condition> <incr pos:start="75:41" pos:end="75:43"><expr pos:start="75:41" pos:end="75:43"><name pos:start="75:41" pos:end="75:41">j</name><operator pos:start="75:42" pos:end="75:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:17" pos:end="85:17"><block_content pos:start="77:17" pos:end="85:17">

                <if_stmt pos:start="77:17" pos:end="85:17"><if pos:start="77:17" pos:end="85:17">if <condition pos:start="77:20" pos:end="77:55">(<expr pos:start="77:21" pos:end="77:54"><operator pos:start="77:21" pos:end="77:21">!</operator><name pos:start="77:22" pos:end="77:37"><name pos:start="77:22" pos:end="77:22">s</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:34">all_frames</name><index pos:start="77:35" pos:end="77:37">[<expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">j</name></expr>]</index></name><operator pos:start="77:38" pos:end="77:38">.</operator><name pos:start="77:39" pos:end="77:54"><name pos:start="77:39" pos:end="77:45">avframe</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:51">data</name><index pos:start="77:52" pos:end="77:54">[<expr pos:start="77:53" pos:end="77:53"><literal type="number" pos:start="77:53" pos:end="77:53">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="77:57" pos:end="85:17">{<block_content pos:start="79:21" pos:end="83:26">

                    <expr_stmt pos:start="79:21" pos:end="79:55"><expr pos:start="79:21" pos:end="79:54"><name pos:start="79:21" pos:end="79:34"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:31">ref_pics</name><index pos:start="79:32" pos:end="79:34">[<expr pos:start="79:33" pos:end="79:33"><name pos:start="79:33" pos:end="79:33">i</name></expr>]</index></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:54"><name pos:start="79:39" pos:end="79:39">s</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:51">all_frames</name><index pos:start="79:52" pos:end="79:54">[<expr pos:start="79:53" pos:end="79:53"><name pos:start="79:53" pos:end="79:53">j</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:100"><expr pos:start="81:21" pos:end="81:99"><call pos:start="81:21" pos:end="81:99"><name pos:start="81:21" pos:end="81:40">get_buffer_with_edge</name><argument_list pos:start="81:41" pos:end="81:99">(<argument pos:start="81:42" pos:end="81:49"><expr pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">avctx</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:74"><expr pos:start="81:52" pos:end="81:74"><name pos:start="81:52" pos:end="81:65"><name pos:start="81:52" pos:end="81:52">s</name><operator pos:start="81:53" pos:end="81:54">-&gt;</operator><name pos:start="81:55" pos:end="81:62">ref_pics</name><index pos:start="81:63" pos:end="81:65">[<expr pos:start="81:64" pos:end="81:64"><name pos:start="81:64" pos:end="81:64">i</name></expr>]</index></name><operator pos:start="81:66" pos:end="81:67">-&gt;</operator><name pos:start="81:68" pos:end="81:74">avframe</name></expr></argument>, <argument pos:start="81:77" pos:end="81:98"><expr pos:start="81:77" pos:end="81:98"><name pos:start="81:77" pos:end="81:98">AV_GET_BUFFER_FLAG_REF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="83:21" pos:end="83:26">break;</break>

                </block_content>}</block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><operator pos:start="89:13" pos:end="89:13">!</operator><name pos:start="89:14" pos:end="89:27"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:24">ref_pics</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">i</name></expr>]</index></name></expr>)</condition> <block pos:start="89:30" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:39">

            <expr_stmt pos:start="91:13" pos:end="91:81"><expr pos:start="91:13" pos:end="91:80"><call pos:start="91:13" pos:end="91:80"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:80">(<argument pos:start="91:20" pos:end="91:27"><expr pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:20">s</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">avctx</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:41"><expr pos:start="91:30" pos:end="91:41"><name pos:start="91:30" pos:end="91:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:44" pos:end="91:79"><expr pos:start="91:44" pos:end="91:79"><literal type="string" pos:start="91:44" pos:end="91:79">"Reference could not be allocated\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:39">return <expr pos:start="93:20" pos:end="93:38"><name pos:start="93:20" pos:end="93:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



    </block_content>}</block></for>



    <comment type="block" pos:start="103:5" pos:end="103:63">/* retire the reference frames that are not used anymore */</comment>

    <if_stmt pos:start="105:5" pos:end="137:5"><if pos:start="105:5" pos:end="137:5">if <condition pos:start="105:8" pos:end="105:38">(<expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:26">current_picture</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:37">reference</name></name></expr>)</condition> <block pos:start="105:40" pos:end="137:5">{<block_content pos:start="107:9" pos:end="135:9">

        <expr_stmt pos:start="107:9" pos:end="107:65"><expr pos:start="107:9" pos:end="107:64"><name pos:start="107:9" pos:end="107:14">retire</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:24">picnum</name> <operator pos:start="107:26" pos:end="107:26">+</operator> <call pos:start="107:28" pos:end="107:50"><name pos:start="107:28" pos:end="107:46">dirac_get_se_golomb</name><argument_list pos:start="107:47" pos:end="107:50">(<argument pos:start="107:48" pos:end="107:49"><expr pos:start="107:48" pos:end="107:49"><name pos:start="107:48" pos:end="107:49">gb</name></expr></argument>)</argument_list></call><operator pos:start="107:51" pos:end="107:51">)</operator> <operator pos:start="107:53" pos:end="107:53">&amp;</operator> <literal type="number" pos:start="107:55" pos:end="107:64">0xFFFFFFFF</literal></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="123:9"><if pos:start="109:9" pos:end="123:9">if <condition pos:start="109:12" pos:end="109:29">(<expr pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:18">retire</name> <operator pos:start="109:20" pos:end="109:21">!=</operator> <name pos:start="109:23" pos:end="109:28">picnum</name></expr>)</condition> <block pos:start="109:31" pos:end="123:9">{<block_content pos:start="111:13" pos:end="121:78">

            <decl_stmt pos:start="111:13" pos:end="111:73"><decl pos:start="111:13" pos:end="111:72"><type pos:start="111:13" pos:end="111:24"><name pos:start="111:13" pos:end="111:22">DiracFrame</name> <modifier pos:start="111:24" pos:end="111:24">*</modifier></type><name pos:start="111:25" pos:end="111:34">retire_pic</name> <init pos:start="111:36" pos:end="111:72">= <expr pos:start="111:38" pos:end="111:72"><call pos:start="111:38" pos:end="111:72"><name pos:start="111:38" pos:end="111:49">remove_frame</name><argument_list pos:start="111:50" pos:end="111:72">(<argument pos:start="111:51" pos:end="111:63"><expr pos:start="111:51" pos:end="111:63"><name pos:start="111:51" pos:end="111:63"><name pos:start="111:51" pos:end="111:51">s</name><operator pos:start="111:52" pos:end="111:53">-&gt;</operator><name pos:start="111:54" pos:end="111:63">ref_frames</name></name></expr></argument>, <argument pos:start="111:66" pos:end="111:71"><expr pos:start="111:66" pos:end="111:71"><name pos:start="111:66" pos:end="111:71">retire</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="115:13" pos:end="121:78"><if pos:start="115:13" pos:end="117:57">if <condition pos:start="115:16" pos:end="115:27">(<expr pos:start="115:17" pos:end="115:26"><name pos:start="115:17" pos:end="115:26">retire_pic</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:57"><block_content pos:start="117:17" pos:end="117:57">

                <expr_stmt pos:start="117:17" pos:end="117:57"><expr pos:start="117:17" pos:end="117:56"><name pos:start="117:17" pos:end="117:37"><name pos:start="117:17" pos:end="117:26">retire_pic</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:37">reference</name></name> <operator pos:start="117:39" pos:end="117:40">&amp;=</operator> <name pos:start="117:42" pos:end="117:56">DELAYED_PIC_REF</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="119:13" pos:end="121:78">else<block type="pseudo" pos:start="121:17" pos:end="121:78"><block_content pos:start="121:17" pos:end="121:78">

                <expr_stmt pos:start="121:17" pos:end="121:78"><expr pos:start="121:17" pos:end="121:77"><call pos:start="121:17" pos:end="121:77"><name pos:start="121:17" pos:end="121:22">av_log</name><argument_list pos:start="121:23" pos:end="121:77">(<argument pos:start="121:24" pos:end="121:31"><expr pos:start="121:24" pos:end="121:31"><name pos:start="121:24" pos:end="121:31"><name pos:start="121:24" pos:end="121:24">s</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">avctx</name></name></expr></argument>, <argument pos:start="121:34" pos:end="121:45"><expr pos:start="121:34" pos:end="121:45"><name pos:start="121:34" pos:end="121:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:48" pos:end="121:76"><expr pos:start="121:48" pos:end="121:76"><literal type="string" pos:start="121:48" pos:end="121:76">"Frame to retire not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="127:9" pos:end="127:75">/* if reference array is full, remove the oldest as per the spec */</comment>

        <while pos:start="129:9" pos:end="135:9">while <condition pos:start="129:15" pos:end="129:82">(<expr pos:start="129:16" pos:end="129:81"><call pos:start="129:16" pos:end="129:81"><name pos:start="129:16" pos:end="129:24">add_frame</name><argument_list pos:start="129:25" pos:end="129:81">(<argument pos:start="129:26" pos:end="129:38"><expr pos:start="129:26" pos:end="129:38"><name pos:start="129:26" pos:end="129:38"><name pos:start="129:26" pos:end="129:26">s</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:38">ref_frames</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:60"><expr pos:start="129:41" pos:end="129:60"><name pos:start="129:41" pos:end="129:60">MAX_REFERENCE_FRAMES</name></expr></argument>, <argument pos:start="129:63" pos:end="129:80"><expr pos:start="129:63" pos:end="129:80"><name pos:start="129:63" pos:end="129:80"><name pos:start="129:63" pos:end="129:63">s</name><operator pos:start="129:64" pos:end="129:65">-&gt;</operator><name pos:start="129:66" pos:end="129:80">current_picture</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:84" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:121">

            <expr_stmt pos:start="131:13" pos:end="131:73"><expr pos:start="131:13" pos:end="131:72"><call pos:start="131:13" pos:end="131:72"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:72">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">avctx</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:41"><expr pos:start="131:30" pos:end="131:41"><name pos:start="131:30" pos:end="131:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:44" pos:end="131:71"><expr pos:start="131:44" pos:end="131:71"><literal type="string" pos:start="131:44" pos:end="131:71">"Reference frame overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:121"><expr pos:start="133:13" pos:end="133:120"><call pos:start="133:13" pos:end="133:90"><name pos:start="133:13" pos:end="133:24">remove_frame</name><argument_list pos:start="133:25" pos:end="133:90">(<argument pos:start="133:26" pos:end="133:38"><expr pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:26">s</name><operator pos:start="133:27" pos:end="133:28">-&gt;</operator><name pos:start="133:29" pos:end="133:38">ref_frames</name></name></expr></argument>, <argument pos:start="133:41" pos:end="133:89"><expr pos:start="133:41" pos:end="133:89"><name pos:start="133:41" pos:end="133:56"><name pos:start="133:41" pos:end="133:41">s</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:53">ref_frames</name><index pos:start="133:54" pos:end="133:56">[<expr pos:start="133:55" pos:end="133:55"><literal type="number" pos:start="133:55" pos:end="133:55">0</literal></expr>]</index></name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:89"><name pos:start="133:59" pos:end="133:65">avframe</name><operator pos:start="133:66" pos:end="133:67">-&gt;</operator><name pos:start="133:68" pos:end="133:89">display_picture_number</name></name></expr></argument>)</argument_list></call><operator pos:start="133:91" pos:end="133:92">-&gt;</operator><name pos:start="133:93" pos:end="133:101">reference</name> <operator pos:start="133:103" pos:end="133:104">&amp;=</operator> <name pos:start="133:106" pos:end="133:120">DELAYED_PIC_REF</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="155:5"><if pos:start="141:5" pos:end="155:5">if <condition pos:start="141:8" pos:end="141:20">(<expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:19">num_refs</name></name></expr>)</condition> <block pos:start="141:22" pos:end="155:5">{<block_content pos:start="143:9" pos:end="153:23">

        <expr_stmt pos:start="143:9" pos:end="143:52"><expr pos:start="143:9" pos:end="143:51"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <call pos:start="143:15" pos:end="143:51"><name pos:start="143:15" pos:end="143:48">dirac_unpack_prediction_parameters</name><argument_list pos:start="143:49" pos:end="143:51">(<argument pos:start="143:50" pos:end="143:50"><expr pos:start="143:50" pos:end="143:50"><name pos:start="143:50" pos:end="143:50">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="143:55" pos:end="143:122">/* [DIRAC_STD] 11.2 Picture Prediction Data. picture_prediction() */</comment>

        <if_stmt pos:start="145:9" pos:end="147:23"><if pos:start="145:9" pos:end="147:23">if <condition pos:start="145:12" pos:end="145:20">(<expr pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:15">ret</name> <operator pos:start="145:17" pos:end="145:17">&lt;</operator> <literal type="number" pos:start="145:19" pos:end="145:19">0</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:23"><block_content pos:start="147:13" pos:end="147:23">

            <return pos:start="147:13" pos:end="147:23">return <expr pos:start="147:20" pos:end="147:22"><name pos:start="147:20" pos:end="147:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:48"><expr pos:start="149:9" pos:end="149:47"><name pos:start="149:9" pos:end="149:11">ret</name> <operator pos:start="149:13" pos:end="149:13">=</operator> <call pos:start="149:15" pos:end="149:47"><name pos:start="149:15" pos:end="149:44">dirac_unpack_block_motion_data</name><argument_list pos:start="149:45" pos:end="149:47">(<argument pos:start="149:46" pos:end="149:46"><expr pos:start="149:46" pos:end="149:46"><name pos:start="149:46" pos:end="149:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <comment type="block" pos:start="149:55" pos:end="149:122">/* [DIRAC_STD] 12. Block motion data syntax                       */</comment>

        <if_stmt pos:start="151:9" pos:end="153:23"><if pos:start="151:9" pos:end="153:23">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">&lt;</operator> <literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:23"><block_content pos:start="153:13" pos:end="153:23">

            <return pos:start="153:13" pos:end="153:23">return <expr pos:start="153:20" pos:end="153:22"><name pos:start="153:20" pos:end="153:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:38"><expr pos:start="157:5" pos:end="157:37"><name pos:start="157:5" pos:end="157:7">ret</name> <operator pos:start="157:9" pos:end="157:9">=</operator> <call pos:start="157:11" pos:end="157:37"><name pos:start="157:11" pos:end="157:34">dirac_unpack_idwt_params</name><argument_list pos:start="157:35" pos:end="157:37">(<argument pos:start="157:36" pos:end="157:36"><expr pos:start="157:36" pos:end="157:36"><name pos:start="157:36" pos:end="157:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                <comment type="block" pos:start="157:55" pos:end="157:122">/* [DIRAC_STD] 11.3 Wavelet transform data                        */</comment>

    <if_stmt pos:start="159:5" pos:end="161:19"><if pos:start="159:5" pos:end="161:19">if <condition pos:start="159:8" pos:end="159:16">(<expr pos:start="159:9" pos:end="159:15"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">&lt;</operator> <literal type="number" pos:start="159:15" pos:end="159:15">0</literal></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:19"><block_content pos:start="161:9" pos:end="161:19">

        <return pos:start="161:9" pos:end="161:19">return <expr pos:start="161:16" pos:end="161:18"><name pos:start="161:16" pos:end="161:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:19"><expr pos:start="165:5" pos:end="165:18"><call pos:start="165:5" pos:end="165:18"><name pos:start="165:5" pos:end="165:15">init_planes</name><argument_list pos:start="165:16" pos:end="165:18">(<argument pos:start="165:17" pos:end="165:17"><expr pos:start="165:17" pos:end="165:17"><name pos:start="165:17" pos:end="165:17">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
