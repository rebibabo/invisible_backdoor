<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2154.c" pos:tabs="8"><function pos:start="1:1" pos:end="361:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">curl_open</name><parameter_list pos:start="1:21" pos:end="3:34">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:48">QDict</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:57">options</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:33"><decl pos:start="3:22" pos:end="3:33"><type pos:start="3:22" pos:end="3:33"><name pos:start="3:22" pos:end="3:26">Error</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier><modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:33">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="361:1">{<block_content pos:start="7:5" pos:end="359:19">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVCURLState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">CURLState</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:20">state</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">QemuOpts</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:20">local_err</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:22">cookie</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:29"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:29">cookie_secret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:13"><decl pos:start="21:5" pos:end="21:12"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">double</name></type> <name pos:start="21:12" pos:end="21:12">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:24">secretid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:35"><decl pos:start="25:5" pos:end="25:34"><type pos:start="25:5" pos:end="25:16"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:14">char</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:34">protocol_delimiter</name></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:26"><decl pos:start="29:5" pos:end="29:25"><type pos:start="29:5" pos:end="29:14"><specifier pos:start="29:5" pos:end="29:10">static</specifier> <name pos:start="29:12" pos:end="29:14">int</name></type> <name pos:start="29:16" pos:end="29:21">inited</name> <init pos:start="29:23" pos:end="29:25">= <expr pos:start="29:25" pos:end="29:25"><literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:28">(<expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:13">flags</name> <operator pos:start="33:15" pos:end="33:15">&amp;</operator> <name pos:start="33:17" pos:end="33:27">BDRV_O_RDWR</name></expr>)</condition> <block pos:start="33:30" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:22">

        <expr_stmt pos:start="35:9" pos:end="35:70"><expr pos:start="35:9" pos:end="35:69"><call pos:start="35:9" pos:end="35:69"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:69">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:68"><expr pos:start="35:26" pos:end="35:68"><literal type="string" pos:start="35:26" pos:end="35:68">"curl block device does not support writes"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:22">return <expr pos:start="37:16" pos:end="37:21"><operator pos:start="37:16" pos:end="37:16">-</operator><name pos:start="37:17" pos:end="37:21">EROFS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><call pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:19">qemu_mutex_init</name><argument_list pos:start="43:20" pos:end="43:30">(<argument pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:29"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:29"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:29">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:66"><expr pos:start="45:5" pos:end="45:65"><name pos:start="45:5" pos:end="45:8">opts</name> <operator pos:start="45:10" pos:end="45:10">=</operator> <call pos:start="45:12" pos:end="45:65"><name pos:start="45:12" pos:end="45:27">qemu_opts_create</name><argument_list pos:start="45:28" pos:end="45:65">(<argument pos:start="45:29" pos:end="45:41"><expr pos:start="45:29" pos:end="45:41"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:41">runtime_opts</name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">NULL</name></expr></argument>, <argument pos:start="45:50" pos:end="45:50"><expr pos:start="45:50" pos:end="45:50"><literal type="number" pos:start="45:50" pos:end="45:50">0</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:64"><expr pos:start="45:53" pos:end="45:64"><operator pos:start="45:53" pos:end="45:53">&amp;</operator><name pos:start="45:54" pos:end="45:64">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><call pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:26">qemu_opts_absorb_qdict</name><argument_list pos:start="47:27" pos:end="47:53">(<argument pos:start="47:28" pos:end="47:31"><expr pos:start="47:28" pos:end="47:31"><name pos:start="47:28" pos:end="47:31">opts</name></expr></argument>, <argument pos:start="47:34" pos:end="47:40"><expr pos:start="47:34" pos:end="47:40"><name pos:start="47:34" pos:end="47:40">options</name></expr></argument>, <argument pos:start="47:43" pos:end="47:52"><expr pos:start="47:43" pos:end="47:52"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:52">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:18">(<expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:17">local_err</name></expr>)</condition> <block pos:start="49:20" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:25">

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><call pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:23">error_propagate</name><argument_list pos:start="51:24" pos:end="51:40">(<argument pos:start="51:25" pos:end="51:28"><expr pos:start="51:25" pos:end="51:28"><name pos:start="51:25" pos:end="51:28">errp</name></expr></argument>, <argument pos:start="51:31" pos:end="51:39"><expr pos:start="51:31" pos:end="51:39"><name pos:start="51:31" pos:end="51:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:25">goto <name pos:start="53:14" pos:end="53:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:62"><expr pos:start="59:5" pos:end="61:61"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:21">readahead_size</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <call pos:start="59:25" pos:end="61:61"><name pos:start="59:25" pos:end="59:41">qemu_opt_get_size</name><argument_list pos:start="59:42" pos:end="61:61">(<argument pos:start="59:43" pos:end="59:46"><expr pos:start="59:43" pos:end="59:46"><name pos:start="59:43" pos:end="59:46">opts</name></expr></argument>, <argument pos:start="59:49" pos:end="59:72"><expr pos:start="59:49" pos:end="59:72"><name pos:start="59:49" pos:end="59:72">CURL_BLOCK_OPT_READAHEAD</name></expr></argument>,

                                          <argument pos:start="61:43" pos:end="61:60"><expr pos:start="61:43" pos:end="61:60"><name pos:start="61:43" pos:end="61:60">READ_AHEAD_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:41">(<expr pos:start="63:9" pos:end="63:40"><operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:26"><name pos:start="63:10" pos:end="63:10">s</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:26">readahead_size</name></name> <operator pos:start="63:28" pos:end="63:28">&amp;</operator> <literal type="number" pos:start="63:30" pos:end="63:34">0x1ff</literal><operator pos:start="63:35" pos:end="63:35">)</operator> <operator pos:start="63:37" pos:end="63:38">!=</operator> <literal type="number" pos:start="63:40" pos:end="63:40">0</literal></expr>)</condition> <block pos:start="63:43" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:25">

        <expr_stmt pos:start="65:9" pos:end="67:38"><expr pos:start="65:9" pos:end="67:37"><call pos:start="65:9" pos:end="67:37"><name pos:start="65:9" pos:end="65:18">error_setg</name><argument_list pos:start="65:19" pos:end="67:37">(<argument pos:start="65:20" pos:end="65:23"><expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">errp</name></expr></argument>, <argument pos:start="65:26" pos:end="65:75"><expr pos:start="65:26" pos:end="65:75"><literal type="string" pos:start="65:26" pos:end="65:75">"HTTP_READAHEAD_SIZE %zd is not a multiple of 512"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:36"><expr pos:start="67:20" pos:end="67:36"><name pos:start="67:20" pos:end="67:36"><name pos:start="67:20" pos:end="67:20">s</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:36">readahead_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:25">goto <name pos:start="69:14" pos:end="69:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:59"><expr pos:start="75:5" pos:end="77:58"><name pos:start="75:5" pos:end="75:14"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:14">timeout</name></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <call pos:start="75:18" pos:end="77:58"><name pos:start="75:18" pos:end="75:36">qemu_opt_get_number</name><argument_list pos:start="75:37" pos:end="77:58">(<argument pos:start="75:38" pos:end="75:41"><expr pos:start="75:38" pos:end="75:41"><name pos:start="75:38" pos:end="75:41">opts</name></expr></argument>, <argument pos:start="75:44" pos:end="75:65"><expr pos:start="75:44" pos:end="75:65"><name pos:start="75:44" pos:end="75:65">CURL_BLOCK_OPT_TIMEOUT</name></expr></argument>,

                                     <argument pos:start="77:38" pos:end="77:57"><expr pos:start="77:38" pos:end="77:57"><name pos:start="77:38" pos:end="77:57">CURL_TIMEOUT_DEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:38">(<expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:18">timeout</name></name> <operator pos:start="79:20" pos:end="79:20">&gt;</operator> <name pos:start="79:22" pos:end="79:37">CURL_TIMEOUT_MAX</name></expr>)</condition> <block pos:start="79:40" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:25">

        <expr_stmt pos:start="81:9" pos:end="81:71"><expr pos:start="81:9" pos:end="81:70"><call pos:start="81:9" pos:end="81:70"><name pos:start="81:9" pos:end="81:18">error_setg</name><argument_list pos:start="81:19" pos:end="81:70">(<argument pos:start="81:20" pos:end="81:23"><expr pos:start="81:20" pos:end="81:23"><name pos:start="81:20" pos:end="81:23">errp</name></expr></argument>, <argument pos:start="81:26" pos:end="81:69"><expr pos:start="81:26" pos:end="81:69"><literal type="string" pos:start="81:26" pos:end="81:69">"timeout parameter is too large or negative"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:25">goto <name pos:start="83:14" pos:end="83:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:75"><expr pos:start="89:5" pos:end="89:74"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:16">sslverify</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:74"><name pos:start="89:20" pos:end="89:36">qemu_opt_get_bool</name><argument_list pos:start="89:37" pos:end="89:74">(<argument pos:start="89:38" pos:end="89:41"><expr pos:start="89:38" pos:end="89:41"><name pos:start="89:38" pos:end="89:41">opts</name></expr></argument>, <argument pos:start="89:44" pos:end="89:67"><expr pos:start="89:44" pos:end="89:67"><name pos:start="89:44" pos:end="89:67">CURL_BLOCK_OPT_SSLVERIFY</name></expr></argument>, <argument pos:start="89:70" pos:end="89:73"><expr pos:start="89:70" pos:end="89:73"><name pos:start="89:70" pos:end="89:73">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:55"><expr pos:start="93:5" pos:end="93:54"><name pos:start="93:5" pos:end="93:10">cookie</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <call pos:start="93:14" pos:end="93:54"><name pos:start="93:14" pos:end="93:25">qemu_opt_get</name><argument_list pos:start="93:26" pos:end="93:54">(<argument pos:start="93:27" pos:end="93:30"><expr pos:start="93:27" pos:end="93:30"><name pos:start="93:27" pos:end="93:30">opts</name></expr></argument>, <argument pos:start="93:33" pos:end="93:53"><expr pos:start="93:33" pos:end="93:53"><name pos:start="93:33" pos:end="93:53">CURL_BLOCK_OPT_COOKIE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:69"><expr pos:start="95:5" pos:end="95:68"><name pos:start="95:5" pos:end="95:17">cookie_secret</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <call pos:start="95:21" pos:end="95:68"><name pos:start="95:21" pos:end="95:32">qemu_opt_get</name><argument_list pos:start="95:33" pos:end="95:68">(<argument pos:start="95:34" pos:end="95:37"><expr pos:start="95:34" pos:end="95:37"><name pos:start="95:34" pos:end="95:37">opts</name></expr></argument>, <argument pos:start="95:40" pos:end="95:67"><expr pos:start="95:40" pos:end="95:67"><name pos:start="95:40" pos:end="95:67">CURL_BLOCK_OPT_COOKIE_SECRET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:32">(<expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:14">cookie</name> <operator pos:start="99:16" pos:end="99:17">&amp;&amp;</operator> <name pos:start="99:19" pos:end="99:31">cookie_secret</name></expr>)</condition> <block pos:start="99:34" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:25">

        <expr_stmt pos:start="101:9" pos:end="103:78"><expr pos:start="101:9" pos:end="103:77"><call pos:start="101:9" pos:end="103:77"><name pos:start="101:9" pos:end="101:18">error_setg</name><argument_list pos:start="101:19" pos:end="103:77">(<argument pos:start="101:20" pos:end="101:23"><expr pos:start="101:20" pos:end="101:23"><name pos:start="101:20" pos:end="101:23">errp</name></expr></argument>,

                   <argument pos:start="103:20" pos:end="103:76"><expr pos:start="103:20" pos:end="103:76"><literal type="string" pos:start="103:20" pos:end="103:76">"curl driver cannot handle both cookie and cookie secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:25">goto <name pos:start="105:14" pos:end="105:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="125:5"><if pos:start="111:5" pos:end="121:5">if <condition pos:start="111:8" pos:end="111:22">(<expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:21">cookie_secret</name></expr>)</condition> <block pos:start="111:24" pos:end="121:5">{<block_content pos:start="113:9" pos:end="119:9">

        <expr_stmt pos:start="113:9" pos:end="113:71"><expr pos:start="113:9" pos:end="113:70"><name pos:start="113:9" pos:end="113:17"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:17">cookie</name></name> <operator pos:start="113:19" pos:end="113:19">=</operator> <call pos:start="113:21" pos:end="113:70"><name pos:start="113:21" pos:end="113:49">qcrypto_secret_lookup_as_utf8</name><argument_list pos:start="113:50" pos:end="113:70">(<argument pos:start="113:51" pos:end="113:63"><expr pos:start="113:51" pos:end="113:63"><name pos:start="113:51" pos:end="113:63">cookie_secret</name></expr></argument>, <argument pos:start="113:66" pos:end="113:69"><expr pos:start="113:66" pos:end="113:69"><name pos:start="113:66" pos:end="113:69">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="119:9"><if pos:start="115:9" pos:end="119:9">if <condition pos:start="115:12" pos:end="115:23">(<expr pos:start="115:13" pos:end="115:22"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:22"><name pos:start="115:14" pos:end="115:14">s</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:22">cookie</name></name></expr>)</condition> <block pos:start="115:25" pos:end="119:9">{<block_content pos:start="117:13" pos:end="117:29">

            <goto pos:start="117:13" pos:end="117:29">goto <name pos:start="117:18" pos:end="117:28">out_noclean</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="125:5">else <block pos:start="121:12" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:37">

        <expr_stmt pos:start="123:9" pos:end="123:37"><expr pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:17"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:17">cookie</name></name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:28">g_strdup</name><argument_list pos:start="123:29" pos:end="123:36">(<argument pos:start="123:30" pos:end="123:35"><expr pos:start="123:30" pos:end="123:35"><name pos:start="123:30" pos:end="123:35">cookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:50"><expr pos:start="129:5" pos:end="129:49"><name pos:start="129:5" pos:end="129:8">file</name> <operator pos:start="129:10" pos:end="129:10">=</operator> <call pos:start="129:12" pos:end="129:49"><name pos:start="129:12" pos:end="129:23">qemu_opt_get</name><argument_list pos:start="129:24" pos:end="129:49">(<argument pos:start="129:25" pos:end="129:28"><expr pos:start="129:25" pos:end="129:28"><name pos:start="129:25" pos:end="129:28">opts</name></expr></argument>, <argument pos:start="129:31" pos:end="129:48"><expr pos:start="129:31" pos:end="129:48"><name pos:start="129:31" pos:end="129:48">CURL_BLOCK_OPT_URL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:21">(<expr pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:12">file</name> <operator pos:start="131:14" pos:end="131:15">==</operator> <name pos:start="131:17" pos:end="131:20">NULL</name></expr>)</condition> <block pos:start="131:23" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:25">

        <expr_stmt pos:start="133:9" pos:end="133:71"><expr pos:start="133:9" pos:end="133:70"><call pos:start="133:9" pos:end="133:70"><name pos:start="133:9" pos:end="133:18">error_setg</name><argument_list pos:start="133:19" pos:end="133:70">(<argument pos:start="133:20" pos:end="133:23"><expr pos:start="133:20" pos:end="133:23"><name pos:start="133:20" pos:end="133:23">errp</name></expr></argument>, <argument pos:start="133:26" pos:end="133:69"><expr pos:start="133:26" pos:end="133:69"><literal type="string" pos:start="133:26" pos:end="133:69">"curl block driver requires an 'url' option"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:25">goto <name pos:start="135:14" pos:end="135:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="155:5"><if pos:start="141:5" pos:end="155:5">if <condition pos:start="141:8" pos:end="143:51">(<expr pos:start="141:9" pos:end="143:50"><operator pos:start="141:9" pos:end="141:9">!</operator><call pos:start="141:10" pos:end="141:68"><name pos:start="141:10" pos:end="141:17">strstart</name><argument_list pos:start="141:18" pos:end="141:68">(<argument pos:start="141:19" pos:end="141:22"><expr pos:start="141:19" pos:end="141:22"><name pos:start="141:19" pos:end="141:22">file</name></expr></argument>, <argument pos:start="141:25" pos:end="141:46"><expr pos:start="141:25" pos:end="141:46"><name pos:start="141:25" pos:end="141:46"><name pos:start="141:25" pos:end="141:26">bs</name><operator pos:start="141:27" pos:end="141:28">-&gt;</operator><name pos:start="141:29" pos:end="141:31">drv</name><operator pos:start="141:32" pos:end="141:33">-&gt;</operator><name pos:start="141:34" pos:end="141:46">protocol_name</name></name></expr></argument>, <argument pos:start="141:49" pos:end="141:67"><expr pos:start="141:49" pos:end="141:67"><operator pos:start="141:49" pos:end="141:49">&amp;</operator><name pos:start="141:50" pos:end="141:67">protocol_delimiter</name></expr></argument>)</argument_list></call> <operator pos:start="141:70" pos:end="141:71">||</operator>

        <operator pos:start="143:9" pos:end="143:9">!</operator><call pos:start="143:10" pos:end="143:50"><name pos:start="143:10" pos:end="143:17">strstart</name><argument_list pos:start="143:18" pos:end="143:50">(<argument pos:start="143:19" pos:end="143:36"><expr pos:start="143:19" pos:end="143:36"><name pos:start="143:19" pos:end="143:36">protocol_delimiter</name></expr></argument>, <argument pos:start="143:39" pos:end="143:43"><expr pos:start="143:39" pos:end="143:43"><literal type="string" pos:start="143:39" pos:end="143:43">"://"</literal></expr></argument>, <argument pos:start="143:46" pos:end="143:49"><expr pos:start="143:46" pos:end="143:49"><name pos:start="143:46" pos:end="143:49">NULL</name></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="145:5" pos:end="155:5">{<block_content pos:start="147:9" pos:end="153:25">

        <expr_stmt pos:start="147:9" pos:end="151:43"><expr pos:start="147:9" pos:end="151:42"><call pos:start="147:9" pos:end="151:42"><name pos:start="147:9" pos:end="147:18">error_setg</name><argument_list pos:start="147:19" pos:end="151:42">(<argument pos:start="147:20" pos:end="147:23"><expr pos:start="147:20" pos:end="147:23"><name pos:start="147:20" pos:end="147:23">errp</name></expr></argument>, <argument pos:start="147:26" pos:end="149:40"><expr pos:start="147:26" pos:end="149:40"><literal type="string" pos:start="147:26" pos:end="147:79">"%s curl driver cannot handle the URL '%s' (does not "</literal>

                   <literal type="string" pos:start="149:20" pos:end="149:40">"start with '%s://')"</literal></expr></argument>, <argument pos:start="149:43" pos:end="149:64"><expr pos:start="149:43" pos:end="149:64"><name pos:start="149:43" pos:end="149:64"><name pos:start="149:43" pos:end="149:44">bs</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:49">drv</name><operator pos:start="149:50" pos:end="149:51">-&gt;</operator><name pos:start="149:52" pos:end="149:64">protocol_name</name></name></expr></argument>, <argument pos:start="149:67" pos:end="149:70"><expr pos:start="149:67" pos:end="149:70"><name pos:start="149:67" pos:end="149:70">file</name></expr></argument>,

                   <argument pos:start="151:20" pos:end="151:41"><expr pos:start="151:20" pos:end="151:41"><name pos:start="151:20" pos:end="151:41"><name pos:start="151:20" pos:end="151:21">bs</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:26">drv</name><operator pos:start="151:27" pos:end="151:28">-&gt;</operator><name pos:start="151:29" pos:end="151:41">protocol_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="153:9" pos:end="153:25">goto <name pos:start="153:14" pos:end="153:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:72"><expr pos:start="159:5" pos:end="159:71"><name pos:start="159:5" pos:end="159:15"><name pos:start="159:5" pos:end="159:5">s</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:15">username</name></name> <operator pos:start="159:17" pos:end="159:17">=</operator> <call pos:start="159:19" pos:end="159:71"><name pos:start="159:19" pos:end="159:26">g_strdup</name><argument_list pos:start="159:27" pos:end="159:71">(<argument pos:start="159:28" pos:end="159:70"><expr pos:start="159:28" pos:end="159:70"><call pos:start="159:28" pos:end="159:70"><name pos:start="159:28" pos:end="159:39">qemu_opt_get</name><argument_list pos:start="159:40" pos:end="159:70">(<argument pos:start="159:41" pos:end="159:44"><expr pos:start="159:41" pos:end="159:44"><name pos:start="159:41" pos:end="159:44">opts</name></expr></argument>, <argument pos:start="159:47" pos:end="159:69"><expr pos:start="159:47" pos:end="159:69"><name pos:start="159:47" pos:end="159:69">CURL_BLOCK_OPT_USERNAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:66"><expr pos:start="161:5" pos:end="161:65"><name pos:start="161:5" pos:end="161:12">secretid</name> <operator pos:start="161:14" pos:end="161:14">=</operator> <call pos:start="161:16" pos:end="161:65"><name pos:start="161:16" pos:end="161:27">qemu_opt_get</name><argument_list pos:start="161:28" pos:end="161:65">(<argument pos:start="161:29" pos:end="161:32"><expr pos:start="161:29" pos:end="161:32"><name pos:start="161:29" pos:end="161:32">opts</name></expr></argument>, <argument pos:start="161:35" pos:end="161:64"><expr pos:start="161:35" pos:end="161:64"><name pos:start="161:35" pos:end="161:64">CURL_BLOCK_OPT_PASSWORD_SECRET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="165:5" pos:end="175:5"><if pos:start="165:5" pos:end="175:5">if <condition pos:start="165:8" pos:end="165:17">(<expr pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:16">secretid</name></expr>)</condition> <block pos:start="165:19" pos:end="175:5">{<block_content pos:start="167:9" pos:end="173:9">

        <expr_stmt pos:start="167:9" pos:end="167:68"><expr pos:start="167:9" pos:end="167:67"><name pos:start="167:9" pos:end="167:19"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:19">password</name></name> <operator pos:start="167:21" pos:end="167:21">=</operator> <call pos:start="167:23" pos:end="167:67"><name pos:start="167:23" pos:end="167:51">qcrypto_secret_lookup_as_utf8</name><argument_list pos:start="167:52" pos:end="167:67">(<argument pos:start="167:53" pos:end="167:60"><expr pos:start="167:53" pos:end="167:60"><name pos:start="167:53" pos:end="167:60">secretid</name></expr></argument>, <argument pos:start="167:63" pos:end="167:66"><expr pos:start="167:63" pos:end="167:66"><name pos:start="167:63" pos:end="167:66">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="173:9"><if pos:start="169:9" pos:end="173:9">if <condition pos:start="169:12" pos:end="169:25">(<expr pos:start="169:13" pos:end="169:24"><operator pos:start="169:13" pos:end="169:13">!</operator><name pos:start="169:14" pos:end="169:24"><name pos:start="169:14" pos:end="169:14">s</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:24">password</name></name></expr>)</condition> <block pos:start="169:27" pos:end="173:9">{<block_content pos:start="171:13" pos:end="171:29">

            <goto pos:start="171:13" pos:end="171:29">goto <name pos:start="171:18" pos:end="171:28">out_noclean</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="179:5" pos:end="181:59"><expr pos:start="179:5" pos:end="181:58"><name pos:start="179:5" pos:end="179:20"><name pos:start="179:5" pos:end="179:5">s</name><operator pos:start="179:6" pos:end="179:7">-&gt;</operator><name pos:start="179:8" pos:end="179:20">proxyusername</name></name> <operator pos:start="179:22" pos:end="179:22">=</operator> <call pos:start="179:24" pos:end="181:58"><name pos:start="179:24" pos:end="179:31">g_strdup</name><argument_list pos:start="179:32" pos:end="181:58">(

        <argument pos:start="181:9" pos:end="181:57"><expr pos:start="181:9" pos:end="181:57"><call pos:start="181:9" pos:end="181:57"><name pos:start="181:9" pos:end="181:20">qemu_opt_get</name><argument_list pos:start="181:21" pos:end="181:57">(<argument pos:start="181:22" pos:end="181:25"><expr pos:start="181:22" pos:end="181:25"><name pos:start="181:22" pos:end="181:25">opts</name></expr></argument>, <argument pos:start="181:28" pos:end="181:56"><expr pos:start="181:28" pos:end="181:56"><name pos:start="181:28" pos:end="181:56">CURL_BLOCK_OPT_PROXY_USERNAME</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:72"><expr pos:start="183:5" pos:end="183:71"><name pos:start="183:5" pos:end="183:12">secretid</name> <operator pos:start="183:14" pos:end="183:14">=</operator> <call pos:start="183:16" pos:end="183:71"><name pos:start="183:16" pos:end="183:27">qemu_opt_get</name><argument_list pos:start="183:28" pos:end="183:71">(<argument pos:start="183:29" pos:end="183:32"><expr pos:start="183:29" pos:end="183:32"><name pos:start="183:29" pos:end="183:32">opts</name></expr></argument>, <argument pos:start="183:35" pos:end="183:70"><expr pos:start="183:35" pos:end="183:70"><name pos:start="183:35" pos:end="183:70">CURL_BLOCK_OPT_PROXY_PASSWORD_SECRET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="195:5"><if pos:start="185:5" pos:end="195:5">if <condition pos:start="185:8" pos:end="185:17">(<expr pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:16">secretid</name></expr>)</condition> <block pos:start="185:19" pos:end="195:5">{<block_content pos:start="187:9" pos:end="193:9">

        <expr_stmt pos:start="187:9" pos:end="187:73"><expr pos:start="187:9" pos:end="187:72"><name pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:24">proxypassword</name></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:72"><name pos:start="187:28" pos:end="187:56">qcrypto_secret_lookup_as_utf8</name><argument_list pos:start="187:57" pos:end="187:72">(<argument pos:start="187:58" pos:end="187:65"><expr pos:start="187:58" pos:end="187:65"><name pos:start="187:58" pos:end="187:65">secretid</name></expr></argument>, <argument pos:start="187:68" pos:end="187:71"><expr pos:start="187:68" pos:end="187:71"><name pos:start="187:68" pos:end="187:71">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="189:9" pos:end="193:9"><if pos:start="189:9" pos:end="193:9">if <condition pos:start="189:12" pos:end="189:30">(<expr pos:start="189:13" pos:end="189:29"><operator pos:start="189:13" pos:end="189:13">!</operator><name pos:start="189:14" pos:end="189:29"><name pos:start="189:14" pos:end="189:14">s</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:29">proxypassword</name></name></expr>)</condition> <block pos:start="189:32" pos:end="193:9">{<block_content pos:start="191:13" pos:end="191:29">

            <goto pos:start="191:13" pos:end="191:29">goto <name pos:start="191:18" pos:end="191:28">out_noclean</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="199:5" pos:end="205:5"><if pos:start="199:5" pos:end="205:5">if <condition pos:start="199:8" pos:end="199:16">(<expr pos:start="199:9" pos:end="199:15"><operator pos:start="199:9" pos:end="199:9">!</operator><name pos:start="199:10" pos:end="199:15">inited</name></expr>)</condition> <block pos:start="199:18" pos:end="205:5">{<block_content pos:start="201:9" pos:end="203:19">

        <expr_stmt pos:start="201:9" pos:end="201:42"><expr pos:start="201:9" pos:end="201:41"><call pos:start="201:9" pos:end="201:41"><name pos:start="201:9" pos:end="201:24">curl_global_init</name><argument_list pos:start="201:25" pos:end="201:41">(<argument pos:start="201:26" pos:end="201:40"><expr pos:start="201:26" pos:end="201:40"><name pos:start="201:26" pos:end="201:40">CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:19"><expr pos:start="203:9" pos:end="203:18"><name pos:start="203:9" pos:end="203:14">inited</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <literal type="number" pos:start="203:18" pos:end="203:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:40"><expr pos:start="209:5" pos:end="209:39"><call pos:start="209:5" pos:end="209:39"><name pos:start="209:5" pos:end="209:11">DPRINTF</name><argument_list pos:start="209:12" pos:end="209:39">(<argument pos:start="209:13" pos:end="209:32"><expr pos:start="209:13" pos:end="209:32"><literal type="string" pos:start="209:13" pos:end="209:32">"CURL: Opening %s\n"</literal></expr></argument>, <argument pos:start="209:35" pos:end="209:38"><expr pos:start="209:35" pos:end="209:38"><name pos:start="209:35" pos:end="209:38">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:40"><expr pos:start="211:5" pos:end="211:39"><call pos:start="211:5" pos:end="211:39"><name pos:start="211:5" pos:end="211:17">QSIMPLEQ_INIT</name><argument_list pos:start="211:18" pos:end="211:39">(<argument pos:start="211:19" pos:end="211:38"><expr pos:start="211:19" pos:end="211:38"><operator pos:start="211:19" pos:end="211:19">&amp;</operator><name pos:start="211:20" pos:end="211:38"><name pos:start="211:20" pos:end="211:20">s</name><operator pos:start="211:21" pos:end="211:22">-&gt;</operator><name pos:start="211:23" pos:end="211:38">free_state_waitq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:46"><expr pos:start="213:5" pos:end="213:45"><name pos:start="213:5" pos:end="213:18"><name pos:start="213:5" pos:end="213:5">s</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:18">aio_context</name></name> <operator pos:start="213:20" pos:end="213:20">=</operator> <call pos:start="213:22" pos:end="213:45"><name pos:start="213:22" pos:end="213:41">bdrv_get_aio_context</name><argument_list pos:start="213:42" pos:end="213:45">(<argument pos:start="213:43" pos:end="213:44"><expr pos:start="213:43" pos:end="213:44"><name pos:start="213:43" pos:end="213:44">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="215:5" pos:end="215:28"><expr pos:start="215:5" pos:end="215:27"><name pos:start="215:5" pos:end="215:10"><name pos:start="215:5" pos:end="215:5">s</name><operator pos:start="215:6" pos:end="215:7">-&gt;</operator><name pos:start="215:8" pos:end="215:10">url</name></name> <operator pos:start="215:12" pos:end="215:12">=</operator> <call pos:start="215:14" pos:end="215:27"><name pos:start="215:14" pos:end="215:21">g_strdup</name><argument_list pos:start="215:22" pos:end="215:27">(<argument pos:start="215:23" pos:end="215:26"><expr pos:start="215:23" pos:end="215:26"><name pos:start="215:23" pos:end="215:26">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:31"><expr pos:start="217:5" pos:end="217:30"><call pos:start="217:5" pos:end="217:30"><name pos:start="217:5" pos:end="217:19">qemu_mutex_lock</name><argument_list pos:start="217:20" pos:end="217:30">(<argument pos:start="217:21" pos:end="217:29"><expr pos:start="217:21" pos:end="217:29"><operator pos:start="217:21" pos:end="217:21">&amp;</operator><name pos:start="217:22" pos:end="217:29"><name pos:start="217:22" pos:end="217:22">s</name><operator pos:start="217:23" pos:end="217:24">-&gt;</operator><name pos:start="217:25" pos:end="217:29">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:31"><expr pos:start="219:5" pos:end="219:30"><name pos:start="219:5" pos:end="219:9">state</name> <operator pos:start="219:11" pos:end="219:11">=</operator> <call pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:27">curl_find_state</name><argument_list pos:start="219:28" pos:end="219:30">(<argument pos:start="219:29" pos:end="219:29"><expr pos:start="219:29" pos:end="219:29"><name pos:start="219:29" pos:end="219:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:33"><expr pos:start="221:5" pos:end="221:32"><call pos:start="221:5" pos:end="221:32"><name pos:start="221:5" pos:end="221:21">qemu_mutex_unlock</name><argument_list pos:start="221:22" pos:end="221:32">(<argument pos:start="221:23" pos:end="221:31"><expr pos:start="221:23" pos:end="221:31"><operator pos:start="221:23" pos:end="221:23">&amp;</operator><name pos:start="221:24" pos:end="221:31"><name pos:start="221:24" pos:end="221:24">s</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:31">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:15">(<expr pos:start="223:9" pos:end="223:14"><operator pos:start="223:9" pos:end="223:9">!</operator><name pos:start="223:10" pos:end="223:14">state</name></expr>)</condition> <block pos:start="223:17" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:25">

        <goto pos:start="225:9" pos:end="225:25">goto <name pos:start="225:14" pos:end="225:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="231:5" pos:end="231:20">// Get file size</comment>



    <if_stmt pos:start="235:5" pos:end="239:5"><if pos:start="235:5" pos:end="239:5">if <condition pos:start="235:8" pos:end="235:38">(<expr pos:start="235:9" pos:end="235:37"><call pos:start="235:9" pos:end="235:33"><name pos:start="235:9" pos:end="235:23">curl_init_state</name><argument_list pos:start="235:24" pos:end="235:33">(<argument pos:start="235:25" pos:end="235:25"><expr pos:start="235:25" pos:end="235:25"><name pos:start="235:25" pos:end="235:25">s</name></expr></argument>, <argument pos:start="235:28" pos:end="235:32"><expr pos:start="235:28" pos:end="235:32"><name pos:start="235:28" pos:end="235:32">state</name></expr></argument>)</argument_list></call> <operator pos:start="235:35" pos:end="235:35">&lt;</operator> <literal type="number" pos:start="235:37" pos:end="235:37">0</literal></expr>)</condition> <block pos:start="235:40" pos:end="239:5">{<block_content pos:start="237:9" pos:end="237:17">

        <goto pos:start="237:9" pos:end="237:17">goto <name pos:start="237:14" pos:end="237:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="243:28"><expr pos:start="243:5" pos:end="243:27"><name pos:start="243:5" pos:end="243:19"><name pos:start="243:5" pos:end="243:5">s</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:19">accept_range</name></name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:27">false</name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:53"><expr pos:start="245:5" pos:end="245:52"><call pos:start="245:5" pos:end="245:52"><name pos:start="245:5" pos:end="245:20">curl_easy_setopt</name><argument_list pos:start="245:21" pos:end="245:52">(<argument pos:start="245:22" pos:end="245:32"><expr pos:start="245:22" pos:end="245:32"><name pos:start="245:22" pos:end="245:32"><name pos:start="245:22" pos:end="245:26">state</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:32">curl</name></name></expr></argument>, <argument pos:start="245:35" pos:end="245:48"><expr pos:start="245:35" pos:end="245:48"><name pos:start="245:35" pos:end="245:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="245:51" pos:end="245:51"><expr pos:start="245:51" pos:end="245:51"><literal type="number" pos:start="245:51" pos:end="245:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="249:37"><expr pos:start="247:5" pos:end="249:36"><call pos:start="247:5" pos:end="249:36"><name pos:start="247:5" pos:end="247:20">curl_easy_setopt</name><argument_list pos:start="247:21" pos:end="249:36">(<argument pos:start="247:22" pos:end="247:32"><expr pos:start="247:22" pos:end="247:32"><name pos:start="247:22" pos:end="247:32"><name pos:start="247:22" pos:end="247:26">state</name><operator pos:start="247:27" pos:end="247:28">-&gt;</operator><name pos:start="247:29" pos:end="247:32">curl</name></name></expr></argument>, <argument pos:start="247:35" pos:end="247:56"><expr pos:start="247:35" pos:end="247:56"><name pos:start="247:35" pos:end="247:56">CURLOPT_HEADERFUNCTION</name></expr></argument>,

                     <argument pos:start="249:22" pos:end="249:35"><expr pos:start="249:22" pos:end="249:35"><name pos:start="249:22" pos:end="249:35">curl_header_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:57"><expr pos:start="251:5" pos:end="251:56"><call pos:start="251:5" pos:end="251:56"><name pos:start="251:5" pos:end="251:20">curl_easy_setopt</name><argument_list pos:start="251:21" pos:end="251:56">(<argument pos:start="251:22" pos:end="251:32"><expr pos:start="251:22" pos:end="251:32"><name pos:start="251:22" pos:end="251:32"><name pos:start="251:22" pos:end="251:26">state</name><operator pos:start="251:27" pos:end="251:28">-&gt;</operator><name pos:start="251:29" pos:end="251:32">curl</name></name></expr></argument>, <argument pos:start="251:35" pos:end="251:52"><expr pos:start="251:35" pos:end="251:52"><name pos:start="251:35" pos:end="251:52">CURLOPT_HEADERDATA</name></expr></argument>, <argument pos:start="251:55" pos:end="251:55"><expr pos:start="251:55" pos:end="251:55"><name pos:start="251:55" pos:end="251:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="253:5" pos:end="255:17"><if pos:start="253:5" pos:end="255:17">if <condition pos:start="253:8" pos:end="253:39">(<expr pos:start="253:9" pos:end="253:38"><call pos:start="253:9" pos:end="253:38"><name pos:start="253:9" pos:end="253:25">curl_easy_perform</name><argument_list pos:start="253:26" pos:end="253:38">(<argument pos:start="253:27" pos:end="253:37"><expr pos:start="253:27" pos:end="253:37"><name pos:start="253:27" pos:end="253:37"><name pos:start="253:27" pos:end="253:31">state</name><operator pos:start="253:32" pos:end="253:33">-&gt;</operator><name pos:start="253:34" pos:end="253:37">curl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="255:9" pos:end="255:17"><block_content pos:start="255:9" pos:end="255:17">

        <goto pos:start="255:9" pos:end="255:17">goto <name pos:start="255:14" pos:end="255:16">out</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="257:5" pos:end="270:0"><if pos:start="257:5" pos:end="270:0">if <condition pos:start="257:8" pos:end="257:77">(<expr pos:start="257:9" pos:end="257:76"><call pos:start="257:9" pos:end="257:76"><name pos:start="257:9" pos:end="257:25">curl_easy_getinfo</name><argument_list pos:start="257:26" pos:end="257:76">(<argument pos:start="257:27" pos:end="257:37"><expr pos:start="257:27" pos:end="257:37"><name pos:start="257:27" pos:end="257:37"><name pos:start="257:27" pos:end="257:31">state</name><operator pos:start="257:32" pos:end="257:33">-&gt;</operator><name pos:start="257:34" pos:end="257:37">curl</name></name></expr></argument>, <argument pos:start="257:40" pos:end="257:71"><expr pos:start="257:40" pos:end="257:71"><name pos:start="257:40" pos:end="257:71">CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr></argument>, <argument pos:start="257:74" pos:end="257:75"><expr pos:start="257:74" pos:end="257:75"><operator pos:start="257:74" pos:end="257:74">&amp;</operator><name pos:start="257:75" pos:end="257:75">d</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="257:79" pos:end="270:0">{<block_content pos:start="259:9" pos:end="259:17">

        <goto pos:start="259:9" pos:end="259:17">goto <name pos:start="259:14" pos:end="259:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="263:5" pos:end="267:57">/* Prior CURL 7.19.4 return value of 0 could mean that the file size is not

     * know or the size is zero. From 7.19.4 CURL returns -1 if size is not

     * known and zero if it is realy zero-length file. */</comment>

<cpp:if pos:start="269:1" pos:end="269:35">#<cpp:directive pos:start="269:2" pos:end="269:3">if</cpp:directive> <expr pos:start="269:5" pos:end="269:35"><name pos:start="269:5" pos:end="269:23">LIBCURL_VERSION_NUM</name> <operator pos:start="269:25" pos:end="269:26">&gt;=</operator> <literal type="number" pos:start="269:28" pos:end="269:35">0x071304</literal></expr></cpp:if>

    <if_stmt pos:start="271:5" pos:end="282:0"><if pos:start="271:5" pos:end="282:0">if <condition pos:start="271:8" pos:end="271:14">(<expr pos:start="271:9" pos:end="271:13"><name pos:start="271:9" pos:end="271:9">d</name> <operator pos:start="271:11" pos:end="271:11">&lt;</operator> <literal type="number" pos:start="271:13" pos:end="271:13">0</literal></expr>)</condition> <block pos:start="271:16" pos:end="282:0">{<block_content pos:start="273:9" pos:end="277:17">

        <expr_stmt pos:start="273:9" pos:end="275:51"><expr pos:start="273:9" pos:end="275:50"><call pos:start="273:9" pos:end="275:50"><name pos:start="273:9" pos:end="273:15">pstrcpy</name><argument_list pos:start="273:16" pos:end="275:50">(<argument pos:start="273:17" pos:end="273:29"><expr pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:21">state</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:29">errmsg</name></name></expr></argument>, <argument pos:start="273:32" pos:end="273:46"><expr pos:start="273:32" pos:end="273:46"><name pos:start="273:32" pos:end="273:46">CURL_ERROR_SIZE</name></expr></argument>,

                <argument pos:start="275:17" pos:end="275:49"><expr pos:start="275:17" pos:end="275:49"><literal type="string" pos:start="275:17" pos:end="275:49">"Server didn't report file size."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="277:9" pos:end="277:17">goto <name pos:start="277:14" pos:end="277:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

<cpp:else pos:start="281:1" pos:end="281:5">#<cpp:directive pos:start="281:2" pos:end="281:5">else</cpp:directive></cpp:else>

    <if_stmt pos:start="283:5" pos:end="294:0"><if pos:start="283:5" pos:end="294:0">if <condition pos:start="283:8" pos:end="283:15">(<expr pos:start="283:9" pos:end="283:14"><name pos:start="283:9" pos:end="283:9">d</name> <operator pos:start="283:11" pos:end="283:12">&lt;=</operator> <literal type="number" pos:start="283:14" pos:end="283:14">0</literal></expr>)</condition> <block pos:start="283:17" pos:end="294:0">{<block_content pos:start="285:9" pos:end="289:17">

        <expr_stmt pos:start="285:9" pos:end="287:58"><expr pos:start="285:9" pos:end="287:57"><call pos:start="285:9" pos:end="287:57"><name pos:start="285:9" pos:end="285:15">pstrcpy</name><argument_list pos:start="285:16" pos:end="287:57">(<argument pos:start="285:17" pos:end="285:29"><expr pos:start="285:17" pos:end="285:29"><name pos:start="285:17" pos:end="285:29"><name pos:start="285:17" pos:end="285:21">state</name><operator pos:start="285:22" pos:end="285:23">-&gt;</operator><name pos:start="285:24" pos:end="285:29">errmsg</name></name></expr></argument>, <argument pos:start="285:32" pos:end="285:46"><expr pos:start="285:32" pos:end="285:46"><name pos:start="285:32" pos:end="285:46">CURL_ERROR_SIZE</name></expr></argument>,

                <argument pos:start="287:17" pos:end="287:56"><expr pos:start="287:17" pos:end="287:56"><literal type="string" pos:start="287:17" pos:end="287:56">"Unknown file size or zero-length file."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="289:9" pos:end="289:17">goto <name pos:start="289:14" pos:end="289:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="297:5" pos:end="297:15"><expr pos:start="297:5" pos:end="297:14"><name pos:start="297:5" pos:end="297:10"><name pos:start="297:5" pos:end="297:5">s</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:10">len</name></name> <operator pos:start="297:12" pos:end="297:12">=</operator> <name pos:start="297:14" pos:end="297:14">d</name></expr>;</expr_stmt>



    <if_stmt pos:start="301:5" pos:end="313:5"><if pos:start="301:5" pos:end="313:5">if <condition pos:start="301:8" pos:end="305:28">(<expr pos:start="301:9" pos:end="305:27"><operator pos:start="301:9" pos:end="301:9">(</operator><operator pos:start="301:10" pos:end="301:10">!</operator><call pos:start="301:11" pos:end="301:59"><name pos:start="301:11" pos:end="301:21">strncasecmp</name><argument_list pos:start="301:22" pos:end="301:59">(<argument pos:start="301:23" pos:end="301:28"><expr pos:start="301:23" pos:end="301:28"><name pos:start="301:23" pos:end="301:28"><name pos:start="301:23" pos:end="301:23">s</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:28">url</name></name></expr></argument>, <argument pos:start="301:31" pos:end="301:39"><expr pos:start="301:31" pos:end="301:39"><literal type="string" pos:start="301:31" pos:end="301:39">"http://"</literal></expr></argument>, <argument pos:start="301:42" pos:end="301:58"><expr pos:start="301:42" pos:end="301:58"><call pos:start="301:42" pos:end="301:58"><name pos:start="301:42" pos:end="301:47">strlen</name><argument_list pos:start="301:48" pos:end="301:58">(<argument pos:start="301:49" pos:end="301:57"><expr pos:start="301:49" pos:end="301:57"><literal type="string" pos:start="301:49" pos:end="301:57">"http://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>

        <operator pos:start="303:9" pos:end="303:10">||</operator> <operator pos:start="303:12" pos:end="303:12">!</operator><call pos:start="303:13" pos:end="303:63"><name pos:start="303:13" pos:end="303:23">strncasecmp</name><argument_list pos:start="303:24" pos:end="303:63">(<argument pos:start="303:25" pos:end="303:30"><expr pos:start="303:25" pos:end="303:30"><name pos:start="303:25" pos:end="303:30"><name pos:start="303:25" pos:end="303:25">s</name><operator pos:start="303:26" pos:end="303:27">-&gt;</operator><name pos:start="303:28" pos:end="303:30">url</name></name></expr></argument>, <argument pos:start="303:33" pos:end="303:42"><expr pos:start="303:33" pos:end="303:42"><literal type="string" pos:start="303:33" pos:end="303:42">"https://"</literal></expr></argument>, <argument pos:start="303:45" pos:end="303:62"><expr pos:start="303:45" pos:end="303:62"><call pos:start="303:45" pos:end="303:62"><name pos:start="303:45" pos:end="303:50">strlen</name><argument_list pos:start="303:51" pos:end="303:62">(<argument pos:start="303:52" pos:end="303:61"><expr pos:start="303:52" pos:end="303:61"><literal type="string" pos:start="303:52" pos:end="303:61">"https://"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="303:64" pos:end="303:64">)</operator>

        <operator pos:start="305:9" pos:end="305:10">&amp;&amp;</operator> <operator pos:start="305:12" pos:end="305:12">!</operator><name pos:start="305:13" pos:end="305:27"><name pos:start="305:13" pos:end="305:13">s</name><operator pos:start="305:14" pos:end="305:15">-&gt;</operator><name pos:start="305:16" pos:end="305:27">accept_range</name></name></expr>)</condition> <block pos:start="305:30" pos:end="313:5">{<block_content pos:start="307:9" pos:end="311:17">

        <expr_stmt pos:start="307:9" pos:end="309:66"><expr pos:start="307:9" pos:end="309:65"><call pos:start="307:9" pos:end="309:65"><name pos:start="307:9" pos:end="307:15">pstrcpy</name><argument_list pos:start="307:16" pos:end="309:65">(<argument pos:start="307:17" pos:end="307:29"><expr pos:start="307:17" pos:end="307:29"><name pos:start="307:17" pos:end="307:29"><name pos:start="307:17" pos:end="307:21">state</name><operator pos:start="307:22" pos:end="307:23">-&gt;</operator><name pos:start="307:24" pos:end="307:29">errmsg</name></name></expr></argument>, <argument pos:start="307:32" pos:end="307:46"><expr pos:start="307:32" pos:end="307:46"><name pos:start="307:32" pos:end="307:46">CURL_ERROR_SIZE</name></expr></argument>,

                <argument pos:start="309:17" pos:end="309:64"><expr pos:start="309:17" pos:end="309:64"><literal type="string" pos:start="309:17" pos:end="309:64">"Server does not support 'range' (byte ranges)."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="311:9" pos:end="311:17">goto <name pos:start="311:14" pos:end="311:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:50"><expr pos:start="315:5" pos:end="315:49"><call pos:start="315:5" pos:end="315:49"><name pos:start="315:5" pos:end="315:11">DPRINTF</name><argument_list pos:start="315:12" pos:end="315:49">(<argument pos:start="315:13" pos:end="315:40"><expr pos:start="315:13" pos:end="315:40"><literal type="string" pos:start="315:13" pos:end="315:28">"CURL: Size = %"</literal> <name pos:start="315:30" pos:end="315:35">PRIu64</name> <literal type="string" pos:start="315:37" pos:end="315:40">"\n"</literal></expr></argument>, <argument pos:start="315:43" pos:end="315:48"><expr pos:start="315:43" pos:end="315:48"><name pos:start="315:43" pos:end="315:48"><name pos:start="315:43" pos:end="315:43">s</name><operator pos:start="315:44" pos:end="315:45">-&gt;</operator><name pos:start="315:46" pos:end="315:48">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="319:5" pos:end="319:31"><expr pos:start="319:5" pos:end="319:30"><call pos:start="319:5" pos:end="319:30"><name pos:start="319:5" pos:end="319:19">qemu_mutex_lock</name><argument_list pos:start="319:20" pos:end="319:30">(<argument pos:start="319:21" pos:end="319:29"><expr pos:start="319:21" pos:end="319:29"><operator pos:start="319:21" pos:end="319:21">&amp;</operator><name pos:start="319:22" pos:end="319:29"><name pos:start="319:22" pos:end="319:22">s</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:29">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:28"><expr pos:start="321:5" pos:end="321:27"><call pos:start="321:5" pos:end="321:27"><name pos:start="321:5" pos:end="321:20">curl_clean_state</name><argument_list pos:start="321:21" pos:end="321:27">(<argument pos:start="321:22" pos:end="321:26"><expr pos:start="321:22" pos:end="321:26"><name pos:start="321:22" pos:end="321:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:33"><expr pos:start="323:5" pos:end="323:32"><call pos:start="323:5" pos:end="323:32"><name pos:start="323:5" pos:end="323:21">qemu_mutex_unlock</name><argument_list pos:start="323:22" pos:end="323:32">(<argument pos:start="323:23" pos:end="323:31"><expr pos:start="323:23" pos:end="323:31"><operator pos:start="323:23" pos:end="323:23">&amp;</operator><name pos:start="323:24" pos:end="323:31"><name pos:start="323:24" pos:end="323:24">s</name><operator pos:start="323:25" pos:end="323:26">-&gt;</operator><name pos:start="323:27" pos:end="323:31">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:35"><expr pos:start="325:5" pos:end="325:34"><call pos:start="325:5" pos:end="325:34"><name pos:start="325:5" pos:end="325:21">curl_easy_cleanup</name><argument_list pos:start="325:22" pos:end="325:34">(<argument pos:start="325:23" pos:end="325:33"><expr pos:start="325:23" pos:end="325:33"><name pos:start="325:23" pos:end="325:33"><name pos:start="325:23" pos:end="325:27">state</name><operator pos:start="325:28" pos:end="325:29">-&gt;</operator><name pos:start="325:30" pos:end="325:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:23"><expr pos:start="327:5" pos:end="327:22"><name pos:start="327:5" pos:end="327:15"><name pos:start="327:5" pos:end="327:9">state</name><operator pos:start="327:10" pos:end="327:11">-&gt;</operator><name pos:start="327:12" pos:end="327:15">curl</name></name> <operator pos:start="327:17" pos:end="327:17">=</operator> <name pos:start="327:19" pos:end="327:22">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="331:5" pos:end="331:58"><expr pos:start="331:5" pos:end="331:57"><call pos:start="331:5" pos:end="331:57"><name pos:start="331:5" pos:end="331:27">curl_attach_aio_context</name><argument_list pos:start="331:28" pos:end="331:57">(<argument pos:start="331:29" pos:end="331:30"><expr pos:start="331:29" pos:end="331:30"><name pos:start="331:29" pos:end="331:30">bs</name></expr></argument>, <argument pos:start="331:33" pos:end="331:56"><expr pos:start="331:33" pos:end="331:56"><call pos:start="331:33" pos:end="331:56"><name pos:start="331:33" pos:end="331:52">bdrv_get_aio_context</name><argument_list pos:start="331:53" pos:end="331:56">(<argument pos:start="331:54" pos:end="331:55"><expr pos:start="331:54" pos:end="331:55"><name pos:start="331:54" pos:end="331:55">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="335:5" pos:end="335:24"><expr pos:start="335:5" pos:end="335:23"><call pos:start="335:5" pos:end="335:23"><name pos:start="335:5" pos:end="335:17">qemu_opts_del</name><argument_list pos:start="335:18" pos:end="335:23">(<argument pos:start="335:19" pos:end="335:22"><expr pos:start="335:19" pos:end="335:22"><name pos:start="335:19" pos:end="335:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="337:5" pos:end="337:13">return <expr pos:start="337:12" pos:end="337:12"><literal type="number" pos:start="337:12" pos:end="337:12">0</literal></expr>;</return>



<label pos:start="341:1" pos:end="341:4"><name pos:start="341:1" pos:end="341:3">out</name>:</label>

    <expr_stmt pos:start="343:5" pos:end="343:68"><expr pos:start="343:5" pos:end="343:67"><call pos:start="343:5" pos:end="343:67"><name pos:start="343:5" pos:end="343:14">error_setg</name><argument_list pos:start="343:15" pos:end="343:67">(<argument pos:start="343:16" pos:end="343:19"><expr pos:start="343:16" pos:end="343:19"><name pos:start="343:16" pos:end="343:19">errp</name></expr></argument>, <argument pos:start="343:22" pos:end="343:51"><expr pos:start="343:22" pos:end="343:51"><literal type="string" pos:start="343:22" pos:end="343:51">"CURL: Error opening file: %s"</literal></expr></argument>, <argument pos:start="343:54" pos:end="343:66"><expr pos:start="343:54" pos:end="343:66"><name pos:start="343:54" pos:end="343:66"><name pos:start="343:54" pos:end="343:58">state</name><operator pos:start="343:59" pos:end="343:60">-&gt;</operator><name pos:start="343:61" pos:end="343:66">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="345:5" pos:end="345:35"><expr pos:start="345:5" pos:end="345:34"><call pos:start="345:5" pos:end="345:34"><name pos:start="345:5" pos:end="345:21">curl_easy_cleanup</name><argument_list pos:start="345:22" pos:end="345:34">(<argument pos:start="345:23" pos:end="345:33"><expr pos:start="345:23" pos:end="345:33"><name pos:start="345:23" pos:end="345:33"><name pos:start="345:23" pos:end="345:27">state</name><operator pos:start="345:28" pos:end="345:29">-&gt;</operator><name pos:start="345:30" pos:end="345:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="347:5" pos:end="347:23"><expr pos:start="347:5" pos:end="347:22"><name pos:start="347:5" pos:end="347:15"><name pos:start="347:5" pos:end="347:9">state</name><operator pos:start="347:10" pos:end="347:11">-&gt;</operator><name pos:start="347:12" pos:end="347:15">curl</name></name> <operator pos:start="347:17" pos:end="347:17">=</operator> <name pos:start="347:19" pos:end="347:22">NULL</name></expr>;</expr_stmt>

<label pos:start="349:1" pos:end="349:12"><name pos:start="349:1" pos:end="349:11">out_noclean</name>:</label>

    <expr_stmt pos:start="351:5" pos:end="351:34"><expr pos:start="351:5" pos:end="351:33"><call pos:start="351:5" pos:end="351:33"><name pos:start="351:5" pos:end="351:22">qemu_mutex_destroy</name><argument_list pos:start="351:23" pos:end="351:33">(<argument pos:start="351:24" pos:end="351:32"><expr pos:start="351:24" pos:end="351:32"><operator pos:start="351:24" pos:end="351:24">&amp;</operator><name pos:start="351:25" pos:end="351:32"><name pos:start="351:25" pos:end="351:25">s</name><operator pos:start="351:26" pos:end="351:27">-&gt;</operator><name pos:start="351:28" pos:end="351:32">mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="353:5" pos:end="353:22"><expr pos:start="353:5" pos:end="353:21"><call pos:start="353:5" pos:end="353:21"><name pos:start="353:5" pos:end="353:10">g_free</name><argument_list pos:start="353:11" pos:end="353:21">(<argument pos:start="353:12" pos:end="353:20"><expr pos:start="353:12" pos:end="353:20"><name pos:start="353:12" pos:end="353:20"><name pos:start="353:12" pos:end="353:12">s</name><operator pos:start="353:13" pos:end="353:14">-&gt;</operator><name pos:start="353:15" pos:end="353:20">cookie</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:19"><expr pos:start="355:5" pos:end="355:18"><call pos:start="355:5" pos:end="355:18"><name pos:start="355:5" pos:end="355:10">g_free</name><argument_list pos:start="355:11" pos:end="355:18">(<argument pos:start="355:12" pos:end="355:17"><expr pos:start="355:12" pos:end="355:17"><name pos:start="355:12" pos:end="355:17"><name pos:start="355:12" pos:end="355:12">s</name><operator pos:start="355:13" pos:end="355:14">-&gt;</operator><name pos:start="355:15" pos:end="355:17">url</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="357:5" pos:end="357:24"><expr pos:start="357:5" pos:end="357:23"><call pos:start="357:5" pos:end="357:23"><name pos:start="357:5" pos:end="357:17">qemu_opts_del</name><argument_list pos:start="357:18" pos:end="357:23">(<argument pos:start="357:19" pos:end="357:22"><expr pos:start="357:19" pos:end="357:22"><name pos:start="357:19" pos:end="357:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="359:5" pos:end="359:19">return <expr pos:start="359:12" pos:end="359:18"><operator pos:start="359:12" pos:end="359:12">-</operator><name pos:start="359:13" pos:end="359:18">EINVAL</name></expr>;</return>

</block_content>}</block></function>
</unit>
