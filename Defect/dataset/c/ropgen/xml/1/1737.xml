<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1737.c" pos:tabs="8"><function pos:start="1:1" pos:end="2383:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">decode_opc</name> <parameter_list pos:start="1:24" pos:end="1:77">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:36">CPUMIPSState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:55">DisasContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">ctx</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76">is_branch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2383:1">{<block_content pos:start="5:5" pos:end="2381:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:18">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rs</name></decl>, <decl pos:start="7:13" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">rt</name></decl>, <decl pos:start="7:17" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:17" pos:end="7:18">rd</name></decl>, <decl pos:start="7:21" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:22">sa</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:15">op</name></decl>, <decl pos:start="9:18" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:18" pos:end="9:20">op1</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:23" pos:end="9:25">op2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int16_t</name></type> <name pos:start="11:13" pos:end="11:15">imm</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:55">/* make sure instructions are on a word boundary */</comment>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ctx</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:15">pc</name></name> <operator pos:start="17:17" pos:end="17:17">&amp;</operator> <literal type="number" pos:start="17:19" pos:end="17:21">0x3</literal></expr>)</condition> <block pos:start="17:24" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:15">

        <expr_stmt pos:start="19:9" pos:end="19:36"><expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:25">CP0_BadVAddr</name></name> <operator pos:start="19:27" pos:end="19:27">=</operator> <name pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:31">ctx</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:35">pc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:43"><expr pos:start="21:9" pos:end="21:42"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:26">generate_exception</name><argument_list pos:start="21:27" pos:end="21:42">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">ctx</name></expr></argument>, <argument pos:start="21:33" pos:end="21:41"><expr pos:start="21:33" pos:end="21:41"><name pos:start="21:33" pos:end="21:41">EXCP_AdEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:39">/* Handle blikely not taken case */</comment>

    <if_stmt pos:start="31:5" pos:end="47:5"><if pos:start="31:5" pos:end="47:5">if <condition pos:start="31:8" pos:end="31:63">(<expr pos:start="31:9" pos:end="31:62"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:20"><name pos:start="31:10" pos:end="31:12">ctx</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:20">hflags</name></name> <operator pos:start="31:22" pos:end="31:22">&amp;</operator> <name pos:start="31:24" pos:end="31:44">MIPS_HFLAG_BMASK_BASE</name><operator pos:start="31:45" pos:end="31:45">)</operator> <operator pos:start="31:47" pos:end="31:48">==</operator> <name pos:start="31:50" pos:end="31:62">MIPS_HFLAG_BL</name></expr>)</condition> <block pos:start="31:65" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:26">

        <decl_stmt pos:start="33:9" pos:end="33:33"><decl pos:start="33:9" pos:end="33:32"><type pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:11">int</name></type> <name pos:start="33:13" pos:end="33:14">l1</name> <init pos:start="33:16" pos:end="33:32">= <expr pos:start="33:18" pos:end="33:32"><call pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:30">gen_new_label</name><argument_list pos:start="33:31" pos:end="33:32">()</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:73"><expr pos:start="37:9" pos:end="37:72"><call pos:start="37:9" pos:end="37:72"><name pos:start="37:9" pos:end="37:18">MIPS_DEBUG</name><argument_list pos:start="37:19" pos:end="37:72">(<argument pos:start="37:20" pos:end="37:58"><expr pos:start="37:20" pos:end="37:58"><literal type="string" pos:start="37:20" pos:end="37:40">"blikely condition ("</literal> <name pos:start="37:42" pos:end="37:54">TARGET_FMT_lx</name> <literal type="string" pos:start="37:56" pos:end="37:58">")"</literal></expr></argument>, <argument pos:start="37:61" pos:end="37:71"><expr pos:start="37:61" pos:end="37:71"><name pos:start="37:61" pos:end="37:67"><name pos:start="37:61" pos:end="37:63">ctx</name><operator pos:start="37:64" pos:end="37:65">-&gt;</operator><name pos:start="37:66" pos:end="37:67">pc</name></name> <operator pos:start="37:69" pos:end="37:69">+</operator> <literal type="number" pos:start="37:71" pos:end="37:71">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:54"><expr pos:start="39:9" pos:end="39:53"><call pos:start="39:9" pos:end="39:53"><name pos:start="39:9" pos:end="39:26">tcg_gen_brcondi_tl</name><argument_list pos:start="39:27" pos:end="39:53">(<argument pos:start="39:28" pos:end="39:38"><expr pos:start="39:28" pos:end="39:38"><name pos:start="39:28" pos:end="39:38">TCG_COND_NE</name></expr></argument>, <argument pos:start="39:41" pos:end="39:45"><expr pos:start="39:41" pos:end="39:45"><name pos:start="39:41" pos:end="39:45">bcond</name></expr></argument>, <argument pos:start="39:48" pos:end="39:48"><expr pos:start="39:48" pos:end="39:48"><literal type="number" pos:start="39:48" pos:end="39:48">0</literal></expr></argument>, <argument pos:start="39:51" pos:end="39:52"><expr pos:start="39:51" pos:end="39:52"><name pos:start="39:51" pos:end="39:52">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><call pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:24">tcg_gen_movi_i32</name><argument_list pos:start="41:25" pos:end="41:65">(<argument pos:start="41:26" pos:end="41:31"><expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:31">hflags</name></expr></argument>, <argument pos:start="41:34" pos:end="41:64"><expr pos:start="41:34" pos:end="41:64"><name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:36">ctx</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:44">hflags</name></name> <operator pos:start="41:46" pos:end="41:46">&amp;</operator> <operator pos:start="41:48" pos:end="41:48">~</operator><name pos:start="41:49" pos:end="41:64">MIPS_HFLAG_BMASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:19">gen_goto_tb</name><argument_list pos:start="43:20" pos:end="43:40">(<argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">ctx</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr></argument>, <argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:31">ctx</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:35">pc</name></name> <operator pos:start="43:37" pos:end="43:37">+</operator> <literal type="number" pos:start="43:39" pos:end="43:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:26"><expr pos:start="45:9" pos:end="45:25"><call pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:21">gen_set_label</name><argument_list pos:start="45:22" pos:end="45:25">(<argument pos:start="45:23" pos:end="45:24"><expr pos:start="45:23" pos:end="45:24"><name pos:start="45:23" pos:end="45:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:72">(<expr pos:start="51:9" pos:end="51:71"><call pos:start="51:9" pos:end="51:71"><name pos:start="51:9" pos:end="51:16">unlikely</name><argument_list pos:start="51:17" pos:end="51:71">(<argument pos:start="51:18" pos:end="51:70"><expr pos:start="51:18" pos:end="51:70"><call pos:start="51:18" pos:end="51:70"><name pos:start="51:18" pos:end="51:35">qemu_loglevel_mask</name><argument_list pos:start="51:36" pos:end="51:70">(<argument pos:start="51:37" pos:end="51:69"><expr pos:start="51:37" pos:end="51:69"><name pos:start="51:37" pos:end="51:49">CPU_LOG_TB_OP</name> <operator pos:start="51:51" pos:end="51:51">|</operator> <name pos:start="51:53" pos:end="51:69">CPU_LOG_TB_OP_OPT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:74" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:42">

        <expr_stmt pos:start="53:9" pos:end="53:42"><expr pos:start="53:9" pos:end="53:41"><call pos:start="53:9" pos:end="53:41"><name pos:start="53:9" pos:end="53:32">tcg_gen_debug_insn_start</name><argument_list pos:start="53:33" pos:end="53:41">(<argument pos:start="53:34" pos:end="53:40"><expr pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:40"><name pos:start="53:34" pos:end="53:36">ctx</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:6">op</name> <operator pos:start="59:8" pos:end="59:8">=</operator> <call pos:start="59:10" pos:end="59:35"><name pos:start="59:10" pos:end="59:22">MASK_OP_MAJOR</name><argument_list pos:start="59:23" pos:end="59:35">(<argument pos:start="59:24" pos:end="59:34"><expr pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:34"><name pos:start="59:24" pos:end="59:26">ctx</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:6">rs</name> <operator pos:start="61:8" pos:end="61:8">=</operator> <operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:21"><name pos:start="61:11" pos:end="61:13">ctx</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:21">opcode</name></name> <operator pos:start="61:23" pos:end="61:24">&gt;&gt;</operator> <literal type="number" pos:start="61:26" pos:end="61:27">21</literal><operator pos:start="61:28" pos:end="61:28">)</operator> <operator pos:start="61:30" pos:end="61:30">&amp;</operator> <literal type="number" pos:start="61:32" pos:end="61:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:36"><expr pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:6">rt</name> <operator pos:start="63:8" pos:end="63:8">=</operator> <operator pos:start="63:10" pos:end="63:10">(</operator><name pos:start="63:11" pos:end="63:21"><name pos:start="63:11" pos:end="63:13">ctx</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:21">opcode</name></name> <operator pos:start="63:23" pos:end="63:24">&gt;&gt;</operator> <literal type="number" pos:start="63:26" pos:end="63:27">16</literal><operator pos:start="63:28" pos:end="63:28">)</operator> <operator pos:start="63:30" pos:end="63:30">&amp;</operator> <literal type="number" pos:start="63:32" pos:end="63:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:36"><expr pos:start="65:5" pos:end="65:35"><name pos:start="65:5" pos:end="65:6">rd</name> <operator pos:start="65:8" pos:end="65:8">=</operator> <operator pos:start="65:10" pos:end="65:10">(</operator><name pos:start="65:11" pos:end="65:21"><name pos:start="65:11" pos:end="65:13">ctx</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:21">opcode</name></name> <operator pos:start="65:23" pos:end="65:24">&gt;&gt;</operator> <literal type="number" pos:start="65:26" pos:end="65:27">11</literal><operator pos:start="65:28" pos:end="65:28">)</operator> <operator pos:start="65:30" pos:end="65:30">&amp;</operator> <literal type="number" pos:start="65:32" pos:end="65:35">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:6">sa</name> <operator pos:start="67:8" pos:end="67:8">=</operator> <operator pos:start="67:10" pos:end="67:10">(</operator><name pos:start="67:11" pos:end="67:21"><name pos:start="67:11" pos:end="67:13">ctx</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:21">opcode</name></name> <operator pos:start="67:23" pos:end="67:24">&gt;&gt;</operator> <literal type="number" pos:start="67:26" pos:end="67:26">6</literal><operator pos:start="67:27" pos:end="67:27">)</operator> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <literal type="number" pos:start="67:31" pos:end="67:34">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:7">imm</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <operator pos:start="69:11" pos:end="69:11">(</operator><name pos:start="69:12" pos:end="69:18">int16_t</name><operator pos:start="69:19" pos:end="69:19">)</operator><name pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:22">ctx</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:30">opcode</name></name></expr>;</expr_stmt>

    <switch pos:start="71:5" pos:end="2381:5">switch <condition pos:start="71:12" pos:end="71:15">(<expr pos:start="71:13" pos:end="71:14"><name pos:start="71:13" pos:end="71:14">op</name></expr>)</condition> <block pos:start="71:17" pos:end="2381:5">{<block_content pos:start="73:5" pos:end="2379:14">

    <case pos:start="73:5" pos:end="73:21">case <expr pos:start="73:10" pos:end="73:20"><name pos:start="73:10" pos:end="73:20">OPC_SPECIAL</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:40"><expr pos:start="75:9" pos:end="75:39"><name pos:start="75:9" pos:end="75:11">op1</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:39"><name pos:start="75:15" pos:end="75:26">MASK_SPECIAL</name><argument_list pos:start="75:27" pos:end="75:39">(<argument pos:start="75:28" pos:end="75:38"><expr pos:start="75:28" pos:end="75:38"><name pos:start="75:28" pos:end="75:38"><name pos:start="75:28" pos:end="75:30">ctx</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="77:9" pos:end="507:9">switch <condition pos:start="77:16" pos:end="77:20">(<expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">op1</name></expr>)</condition> <block pos:start="77:22" pos:end="507:9">{<block_content pos:start="79:9" pos:end="505:18">

        <case pos:start="79:9" pos:end="79:21">case <expr pos:start="79:14" pos:end="79:20"><name pos:start="79:14" pos:end="79:20">OPC_SLL</name></expr>:</case>          <comment type="block" pos:start="79:32" pos:end="79:57">/* Shift with immediate */</comment>

        <case pos:start="81:9" pos:end="81:21">case <expr pos:start="81:14" pos:end="81:20"><name pos:start="81:14" pos:end="81:20">OPC_SRA</name></expr>:</case>

            <expr_stmt pos:start="83:13" pos:end="83:48"><expr pos:start="83:13" pos:end="83:47"><call pos:start="83:13" pos:end="83:47"><name pos:start="83:13" pos:end="83:25">gen_shift_imm</name><argument_list pos:start="83:26" pos:end="83:47">(<argument pos:start="83:27" pos:end="83:29"><expr pos:start="83:27" pos:end="83:29"><name pos:start="83:27" pos:end="83:29">ctx</name></expr></argument>, <argument pos:start="83:32" pos:end="83:34"><expr pos:start="83:32" pos:end="83:34"><name pos:start="83:32" pos:end="83:34">op1</name></expr></argument>, <argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><name pos:start="83:37" pos:end="83:38">rd</name></expr></argument>, <argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">rt</name></expr></argument>, <argument pos:start="83:45" pos:end="83:46"><expr pos:start="83:45" pos:end="83:46"><name pos:start="83:45" pos:end="83:46">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:21">case <expr pos:start="87:14" pos:end="87:20"><name pos:start="87:14" pos:end="87:20">OPC_SRL</name></expr>:</case>

            <switch pos:start="89:13" pos:end="115:13">switch <condition pos:start="89:20" pos:end="89:47">(<expr pos:start="89:21" pos:end="89:46"><operator pos:start="89:21" pos:end="89:21">(</operator><name pos:start="89:22" pos:end="89:32"><name pos:start="89:22" pos:end="89:24">ctx</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:32">opcode</name></name> <operator pos:start="89:34" pos:end="89:35">&gt;&gt;</operator> <literal type="number" pos:start="89:37" pos:end="89:38">21</literal><operator pos:start="89:39" pos:end="89:39">)</operator> <operator pos:start="89:41" pos:end="89:41">&amp;</operator> <literal type="number" pos:start="89:43" pos:end="89:46">0x1f</literal></expr>)</condition> <block pos:start="89:49" pos:end="115:13">{<block_content pos:start="91:13" pos:end="113:22">

            <case pos:start="91:13" pos:end="91:19">case <expr pos:start="91:18" pos:end="91:18"><literal type="number" pos:start="91:18" pos:end="91:18">1</literal></expr>:</case>

                <comment type="block" pos:start="93:17" pos:end="93:59">/* rotr is decoded as srl on non-R2 CPUs */</comment>

                <if_stmt pos:start="95:17" pos:end="99:17"><if pos:start="95:17" pos:end="99:17">if <condition pos:start="95:20" pos:end="95:51">(<expr pos:start="95:21" pos:end="95:50"><name pos:start="95:21" pos:end="95:35"><name pos:start="95:21" pos:end="95:23">ctx</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:35">insn_flags</name></name> <operator pos:start="95:37" pos:end="95:37">&amp;</operator> <name pos:start="95:39" pos:end="95:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="95:53" pos:end="99:17">{<block_content pos:start="97:21" pos:end="97:35">

                    <expr_stmt pos:start="97:21" pos:end="97:35"><expr pos:start="97:21" pos:end="97:34"><name pos:start="97:21" pos:end="97:23">op1</name> <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:34">OPC_ROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="101:17" pos:end="101:33">/* Fallthrough */</comment>

            <case pos:start="103:13" pos:end="103:19">case <expr pos:start="103:18" pos:end="103:18"><literal type="number" pos:start="103:18" pos:end="103:18">0</literal></expr>:</case>

                <expr_stmt pos:start="105:17" pos:end="105:52"><expr pos:start="105:17" pos:end="105:51"><call pos:start="105:17" pos:end="105:51"><name pos:start="105:17" pos:end="105:29">gen_shift_imm</name><argument_list pos:start="105:30" pos:end="105:51">(<argument pos:start="105:31" pos:end="105:33"><expr pos:start="105:31" pos:end="105:33"><name pos:start="105:31" pos:end="105:33">ctx</name></expr></argument>, <argument pos:start="105:36" pos:end="105:38"><expr pos:start="105:36" pos:end="105:38"><name pos:start="105:36" pos:end="105:38">op1</name></expr></argument>, <argument pos:start="105:41" pos:end="105:42"><expr pos:start="105:41" pos:end="105:42"><name pos:start="105:41" pos:end="105:42">rd</name></expr></argument>, <argument pos:start="105:45" pos:end="105:46"><expr pos:start="105:45" pos:end="105:46"><name pos:start="105:45" pos:end="105:46">rt</name></expr></argument>, <argument pos:start="105:49" pos:end="105:50"><expr pos:start="105:49" pos:end="105:50"><name pos:start="105:49" pos:end="105:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="107:17" pos:end="107:22">break;</break>

            <default pos:start="109:13" pos:end="109:20">default:</default>

                <expr_stmt pos:start="111:17" pos:end="111:49"><expr pos:start="111:17" pos:end="111:48"><call pos:start="111:17" pos:end="111:48"><name pos:start="111:17" pos:end="111:34">generate_exception</name><argument_list pos:start="111:35" pos:end="111:48">(<argument pos:start="111:36" pos:end="111:38"><expr pos:start="111:36" pos:end="111:38"><name pos:start="111:36" pos:end="111:38">ctx</name></expr></argument>, <argument pos:start="111:41" pos:end="111:47"><expr pos:start="111:41" pos:end="111:47"><name pos:start="111:41" pos:end="111:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="113:17" pos:end="113:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:22">case <expr pos:start="119:14" pos:end="119:21"><name pos:start="119:14" pos:end="119:21">OPC_MOVN</name></expr>:</case>         <comment type="block" pos:start="119:32" pos:end="119:53">/* Conditional move */</comment>

        <case pos:start="121:9" pos:end="121:22">case <expr pos:start="121:14" pos:end="121:21"><name pos:start="121:14" pos:end="121:21">OPC_MOVZ</name></expr>:</case>

            <expr_stmt pos:start="123:13" pos:end="125:68"><expr pos:start="123:13" pos:end="125:67"><call pos:start="123:13" pos:end="125:67"><name pos:start="123:13" pos:end="123:22">check_insn</name><argument_list pos:start="123:23" pos:end="125:67">(<argument pos:start="123:24" pos:end="123:26"><expr pos:start="123:24" pos:end="123:26"><name pos:start="123:24" pos:end="123:26">ctx</name></expr></argument>, <argument pos:start="123:29" pos:end="125:66"><expr pos:start="123:29" pos:end="125:66"><name pos:start="123:29" pos:end="123:37">ISA_MIPS4</name> <operator pos:start="123:39" pos:end="123:39">|</operator> <name pos:start="123:41" pos:end="123:50">ISA_MIPS32</name> <operator pos:start="123:52" pos:end="123:52">|</operator>

                                 <name pos:start="125:34" pos:end="125:48">INSN_LOONGSON2E</name> <operator pos:start="125:50" pos:end="125:50">|</operator> <name pos:start="125:52" pos:end="125:66">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><call pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:25">gen_cond_move</name><argument_list pos:start="127:26" pos:end="127:47">(<argument pos:start="127:27" pos:end="127:29"><expr pos:start="127:27" pos:end="127:29"><name pos:start="127:27" pos:end="127:29">ctx</name></expr></argument>, <argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><name pos:start="127:32" pos:end="127:34">op1</name></expr></argument>, <argument pos:start="127:37" pos:end="127:38"><expr pos:start="127:37" pos:end="127:38"><name pos:start="127:37" pos:end="127:38">rd</name></expr></argument>, <argument pos:start="127:41" pos:end="127:42"><expr pos:start="127:41" pos:end="127:42"><name pos:start="127:41" pos:end="127:42">rs</name></expr></argument>, <argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:34">case <expr pos:start="131:14" pos:end="131:33"><name pos:start="131:14" pos:end="131:20">OPC_ADD</name> <operator pos:start="131:22" pos:end="131:24">...</operator> <name pos:start="131:26" pos:end="131:33">OPC_SUBU</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:44"><expr pos:start="133:13" pos:end="133:43"><call pos:start="133:13" pos:end="133:43"><name pos:start="133:13" pos:end="133:21">gen_arith</name><argument_list pos:start="133:22" pos:end="133:43">(<argument pos:start="133:23" pos:end="133:25"><expr pos:start="133:23" pos:end="133:25"><name pos:start="133:23" pos:end="133:25">ctx</name></expr></argument>, <argument pos:start="133:28" pos:end="133:30"><expr pos:start="133:28" pos:end="133:30"><name pos:start="133:28" pos:end="133:30">op1</name></expr></argument>, <argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">rd</name></expr></argument>, <argument pos:start="133:37" pos:end="133:38"><expr pos:start="133:37" pos:end="133:38"><name pos:start="133:37" pos:end="133:38">rs</name></expr></argument>, <argument pos:start="133:41" pos:end="133:42"><expr pos:start="133:41" pos:end="133:42"><name pos:start="133:41" pos:end="133:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:22">case <expr pos:start="137:14" pos:end="137:21"><name pos:start="137:14" pos:end="137:21">OPC_SLLV</name></expr>:</case>         <comment type="block" pos:start="137:32" pos:end="137:43">/* Shifts */</comment>

        <case pos:start="139:9" pos:end="139:22">case <expr pos:start="139:14" pos:end="139:21"><name pos:start="139:14" pos:end="139:21">OPC_SRAV</name></expr>:</case>

            <expr_stmt pos:start="141:13" pos:end="141:44"><expr pos:start="141:13" pos:end="141:43"><call pos:start="141:13" pos:end="141:43"><name pos:start="141:13" pos:end="141:21">gen_shift</name><argument_list pos:start="141:22" pos:end="141:43">(<argument pos:start="141:23" pos:end="141:25"><expr pos:start="141:23" pos:end="141:25"><name pos:start="141:23" pos:end="141:25">ctx</name></expr></argument>, <argument pos:start="141:28" pos:end="141:30"><expr pos:start="141:28" pos:end="141:30"><name pos:start="141:28" pos:end="141:30">op1</name></expr></argument>, <argument pos:start="141:33" pos:end="141:34"><expr pos:start="141:33" pos:end="141:34"><name pos:start="141:33" pos:end="141:34">rd</name></expr></argument>, <argument pos:start="141:37" pos:end="141:38"><expr pos:start="141:37" pos:end="141:38"><name pos:start="141:37" pos:end="141:38">rs</name></expr></argument>, <argument pos:start="141:41" pos:end="141:42"><expr pos:start="141:41" pos:end="141:42"><name pos:start="141:41" pos:end="141:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>

        <case pos:start="145:9" pos:end="145:22">case <expr pos:start="145:14" pos:end="145:21"><name pos:start="145:14" pos:end="145:21">OPC_SRLV</name></expr>:</case>

            <switch pos:start="147:13" pos:end="173:13">switch <condition pos:start="147:20" pos:end="147:46">(<expr pos:start="147:21" pos:end="147:45"><operator pos:start="147:21" pos:end="147:21">(</operator><name pos:start="147:22" pos:end="147:32"><name pos:start="147:22" pos:end="147:24">ctx</name><operator pos:start="147:25" pos:end="147:26">-&gt;</operator><name pos:start="147:27" pos:end="147:32">opcode</name></name> <operator pos:start="147:34" pos:end="147:35">&gt;&gt;</operator> <literal type="number" pos:start="147:37" pos:end="147:37">6</literal><operator pos:start="147:38" pos:end="147:38">)</operator> <operator pos:start="147:40" pos:end="147:40">&amp;</operator> <literal type="number" pos:start="147:42" pos:end="147:45">0x1f</literal></expr>)</condition> <block pos:start="147:48" pos:end="173:13">{<block_content pos:start="149:13" pos:end="171:22">

            <case pos:start="149:13" pos:end="149:19">case <expr pos:start="149:18" pos:end="149:18"><literal type="number" pos:start="149:18" pos:end="149:18">1</literal></expr>:</case>

                <comment type="block" pos:start="151:17" pos:end="151:61">/* rotrv is decoded as srlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="153:17" pos:end="157:17"><if pos:start="153:17" pos:end="157:17">if <condition pos:start="153:20" pos:end="153:51">(<expr pos:start="153:21" pos:end="153:50"><name pos:start="153:21" pos:end="153:35"><name pos:start="153:21" pos:end="153:23">ctx</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:35">insn_flags</name></name> <operator pos:start="153:37" pos:end="153:37">&amp;</operator> <name pos:start="153:39" pos:end="153:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="153:53" pos:end="157:17">{<block_content pos:start="155:21" pos:end="155:36">

                    <expr_stmt pos:start="155:21" pos:end="155:36"><expr pos:start="155:21" pos:end="155:35"><name pos:start="155:21" pos:end="155:23">op1</name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:35">OPC_ROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="159:17" pos:end="159:33">/* Fallthrough */</comment>

            <case pos:start="161:13" pos:end="161:19">case <expr pos:start="161:18" pos:end="161:18"><literal type="number" pos:start="161:18" pos:end="161:18">0</literal></expr>:</case>

                <expr_stmt pos:start="163:17" pos:end="163:48"><expr pos:start="163:17" pos:end="163:47"><call pos:start="163:17" pos:end="163:47"><name pos:start="163:17" pos:end="163:25">gen_shift</name><argument_list pos:start="163:26" pos:end="163:47">(<argument pos:start="163:27" pos:end="163:29"><expr pos:start="163:27" pos:end="163:29"><name pos:start="163:27" pos:end="163:29">ctx</name></expr></argument>, <argument pos:start="163:32" pos:end="163:34"><expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:34">op1</name></expr></argument>, <argument pos:start="163:37" pos:end="163:38"><expr pos:start="163:37" pos:end="163:38"><name pos:start="163:37" pos:end="163:38">rd</name></expr></argument>, <argument pos:start="163:41" pos:end="163:42"><expr pos:start="163:41" pos:end="163:42"><name pos:start="163:41" pos:end="163:42">rs</name></expr></argument>, <argument pos:start="163:45" pos:end="163:46"><expr pos:start="163:45" pos:end="163:46"><name pos:start="163:45" pos:end="163:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <default pos:start="167:13" pos:end="167:20">default:</default>

                <expr_stmt pos:start="169:17" pos:end="169:49"><expr pos:start="169:17" pos:end="169:48"><call pos:start="169:17" pos:end="169:48"><name pos:start="169:17" pos:end="169:34">generate_exception</name><argument_list pos:start="169:35" pos:end="169:48">(<argument pos:start="169:36" pos:end="169:38"><expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:38">ctx</name></expr></argument>, <argument pos:start="169:41" pos:end="169:47"><expr pos:start="169:41" pos:end="169:47"><name pos:start="169:41" pos:end="169:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:21">case <expr pos:start="177:14" pos:end="177:20"><name pos:start="177:14" pos:end="177:20">OPC_SLT</name></expr>:</case>          <comment type="block" pos:start="177:32" pos:end="177:53">/* Set on less than */</comment>

        <case pos:start="179:9" pos:end="179:22">case <expr pos:start="179:14" pos:end="179:21"><name pos:start="179:14" pos:end="179:21">OPC_SLTU</name></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><call pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:19">gen_slt</name><argument_list pos:start="181:20" pos:end="181:41">(<argument pos:start="181:21" pos:end="181:23"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:23">ctx</name></expr></argument>, <argument pos:start="181:26" pos:end="181:28"><expr pos:start="181:26" pos:end="181:28"><name pos:start="181:26" pos:end="181:28">op1</name></expr></argument>, <argument pos:start="181:31" pos:end="181:32"><expr pos:start="181:31" pos:end="181:32"><name pos:start="181:31" pos:end="181:32">rd</name></expr></argument>, <argument pos:start="181:35" pos:end="181:36"><expr pos:start="181:35" pos:end="181:36"><name pos:start="181:35" pos:end="181:36">rs</name></expr></argument>, <argument pos:start="181:39" pos:end="181:40"><expr pos:start="181:39" pos:end="181:40"><name pos:start="181:39" pos:end="181:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:21">case <expr pos:start="185:14" pos:end="185:20"><name pos:start="185:14" pos:end="185:20">OPC_AND</name></expr>:</case>          <comment type="block" pos:start="185:32" pos:end="185:41">/* Logic*/</comment>

        <case pos:start="187:9" pos:end="187:20">case <expr pos:start="187:14" pos:end="187:19"><name pos:start="187:14" pos:end="187:19">OPC_OR</name></expr>:</case>

        <case pos:start="189:9" pos:end="189:21">case <expr pos:start="189:14" pos:end="189:20"><name pos:start="189:14" pos:end="189:20">OPC_NOR</name></expr>:</case>

        <case pos:start="191:9" pos:end="191:21">case <expr pos:start="191:14" pos:end="191:20"><name pos:start="191:14" pos:end="191:20">OPC_XOR</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:44"><expr pos:start="193:13" pos:end="193:43"><call pos:start="193:13" pos:end="193:43"><name pos:start="193:13" pos:end="193:21">gen_logic</name><argument_list pos:start="193:22" pos:end="193:43">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">ctx</name></expr></argument>, <argument pos:start="193:28" pos:end="193:30"><expr pos:start="193:28" pos:end="193:30"><name pos:start="193:28" pos:end="193:30">op1</name></expr></argument>, <argument pos:start="193:33" pos:end="193:34"><expr pos:start="193:33" pos:end="193:34"><name pos:start="193:33" pos:end="193:34">rd</name></expr></argument>, <argument pos:start="193:37" pos:end="193:38"><expr pos:start="193:37" pos:end="193:38"><name pos:start="193:37" pos:end="193:38">rs</name></expr></argument>, <argument pos:start="193:41" pos:end="193:42"><expr pos:start="193:41" pos:end="193:42"><name pos:start="193:41" pos:end="193:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:22">case <expr pos:start="197:14" pos:end="197:21"><name pos:start="197:14" pos:end="197:21">OPC_MULT</name></expr>:</case>

        <case pos:start="199:9" pos:end="199:23">case <expr pos:start="199:14" pos:end="199:22"><name pos:start="199:14" pos:end="199:22">OPC_MULTU</name></expr>:</case>

            <if_stmt pos:start="201:13" pos:end="213:13"><if pos:start="201:13" pos:end="209:13">if <condition pos:start="201:16" pos:end="201:19">(<expr pos:start="201:17" pos:end="201:18"><name pos:start="201:17" pos:end="201:18">sa</name></expr>)</condition> <block pos:start="201:21" pos:end="209:13">{<block_content pos:start="203:17" pos:end="207:53">

                <expr_stmt pos:start="203:17" pos:end="203:45"><expr pos:start="203:17" pos:end="203:44"><call pos:start="203:17" pos:end="203:44"><name pos:start="203:17" pos:end="203:26">check_insn</name><argument_list pos:start="203:27" pos:end="203:44">(<argument pos:start="203:28" pos:end="203:30"><expr pos:start="203:28" pos:end="203:30"><name pos:start="203:28" pos:end="203:30">ctx</name></expr></argument>, <argument pos:start="203:33" pos:end="203:43"><expr pos:start="203:33" pos:end="203:43"><name pos:start="203:33" pos:end="203:43">INSN_VR54XX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:51"><expr pos:start="205:17" pos:end="205:50"><name pos:start="205:17" pos:end="205:19">op1</name> <operator pos:start="205:21" pos:end="205:21">=</operator> <call pos:start="205:23" pos:end="205:50"><name pos:start="205:23" pos:end="205:37">MASK_MUL_VR54XX</name><argument_list pos:start="205:38" pos:end="205:50">(<argument pos:start="205:39" pos:end="205:49"><expr pos:start="205:39" pos:end="205:49"><name pos:start="205:39" pos:end="205:49"><name pos:start="205:39" pos:end="205:41">ctx</name><operator pos:start="205:42" pos:end="205:43">-&gt;</operator><name pos:start="205:44" pos:end="205:49">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:53"><expr pos:start="207:17" pos:end="207:52"><call pos:start="207:17" pos:end="207:52"><name pos:start="207:17" pos:end="207:30">gen_mul_vr54xx</name><argument_list pos:start="207:31" pos:end="207:52">(<argument pos:start="207:32" pos:end="207:34"><expr pos:start="207:32" pos:end="207:34"><name pos:start="207:32" pos:end="207:34">ctx</name></expr></argument>, <argument pos:start="207:37" pos:end="207:39"><expr pos:start="207:37" pos:end="207:39"><name pos:start="207:37" pos:end="207:39">op1</name></expr></argument>, <argument pos:start="207:42" pos:end="207:43"><expr pos:start="207:42" pos:end="207:43"><name pos:start="207:42" pos:end="207:43">rd</name></expr></argument>, <argument pos:start="207:46" pos:end="207:47"><expr pos:start="207:46" pos:end="207:47"><name pos:start="207:46" pos:end="207:47">rs</name></expr></argument>, <argument pos:start="207:50" pos:end="207:51"><expr pos:start="207:50" pos:end="207:51"><name pos:start="207:50" pos:end="207:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="209:15" pos:end="213:13">else <block pos:start="209:20" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:53">

                <expr_stmt pos:start="211:17" pos:end="211:53"><expr pos:start="211:17" pos:end="211:52"><call pos:start="211:17" pos:end="211:52"><name pos:start="211:17" pos:end="211:26">gen_muldiv</name><argument_list pos:start="211:27" pos:end="211:52">(<argument pos:start="211:28" pos:end="211:30"><expr pos:start="211:28" pos:end="211:30"><name pos:start="211:28" pos:end="211:30">ctx</name></expr></argument>, <argument pos:start="211:33" pos:end="211:35"><expr pos:start="211:33" pos:end="211:35"><name pos:start="211:33" pos:end="211:35">op1</name></expr></argument>, <argument pos:start="211:38" pos:end="211:43"><expr pos:start="211:38" pos:end="211:43"><name pos:start="211:38" pos:end="211:39">rd</name> <operator pos:start="211:41" pos:end="211:41">&amp;</operator> <literal type="number" pos:start="211:43" pos:end="211:43">3</literal></expr></argument>, <argument pos:start="211:46" pos:end="211:47"><expr pos:start="211:46" pos:end="211:47"><name pos:start="211:46" pos:end="211:47">rs</name></expr></argument>, <argument pos:start="211:50" pos:end="211:51"><expr pos:start="211:50" pos:end="211:51"><name pos:start="211:50" pos:end="211:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        <case pos:start="217:9" pos:end="217:21">case <expr pos:start="217:14" pos:end="217:20"><name pos:start="217:14" pos:end="217:20">OPC_DIV</name></expr>:</case>

        <case pos:start="219:9" pos:end="219:22">case <expr pos:start="219:14" pos:end="219:21"><name pos:start="219:14" pos:end="219:21">OPC_DIVU</name></expr>:</case>

            <expr_stmt pos:start="221:13" pos:end="221:44"><expr pos:start="221:13" pos:end="221:43"><call pos:start="221:13" pos:end="221:43"><name pos:start="221:13" pos:end="221:22">gen_muldiv</name><argument_list pos:start="221:23" pos:end="221:43">(<argument pos:start="221:24" pos:end="221:26"><expr pos:start="221:24" pos:end="221:26"><name pos:start="221:24" pos:end="221:26">ctx</name></expr></argument>, <argument pos:start="221:29" pos:end="221:31"><expr pos:start="221:29" pos:end="221:31"><name pos:start="221:29" pos:end="221:31">op1</name></expr></argument>, <argument pos:start="221:34" pos:end="221:34"><expr pos:start="221:34" pos:end="221:34"><literal type="number" pos:start="221:34" pos:end="221:34">0</literal></expr></argument>, <argument pos:start="221:37" pos:end="221:38"><expr pos:start="221:37" pos:end="221:38"><name pos:start="221:37" pos:end="221:38">rs</name></expr></argument>, <argument pos:start="221:41" pos:end="221:42"><expr pos:start="221:41" pos:end="221:42"><name pos:start="221:41" pos:end="221:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        <case pos:start="225:9" pos:end="225:33">case <expr pos:start="225:14" pos:end="225:32"><name pos:start="225:14" pos:end="225:19">OPC_JR</name> <operator pos:start="225:21" pos:end="225:23">...</operator> <name pos:start="225:25" pos:end="225:32">OPC_JALR</name></expr>:</case>

            <expr_stmt pos:start="227:13" pos:end="227:56"><expr pos:start="227:13" pos:end="227:55"><call pos:start="227:13" pos:end="227:55"><name pos:start="227:13" pos:end="227:30">gen_compute_branch</name><argument_list pos:start="227:31" pos:end="227:55">(<argument pos:start="227:32" pos:end="227:34"><expr pos:start="227:32" pos:end="227:34"><name pos:start="227:32" pos:end="227:34">ctx</name></expr></argument>, <argument pos:start="227:37" pos:end="227:39"><expr pos:start="227:37" pos:end="227:39"><name pos:start="227:37" pos:end="227:39">op1</name></expr></argument>, <argument pos:start="227:42" pos:end="227:42"><expr pos:start="227:42" pos:end="227:42"><literal type="number" pos:start="227:42" pos:end="227:42">4</literal></expr></argument>, <argument pos:start="227:45" pos:end="227:46"><expr pos:start="227:45" pos:end="227:46"><name pos:start="227:45" pos:end="227:46">rs</name></expr></argument>, <argument pos:start="227:49" pos:end="227:50"><expr pos:start="227:49" pos:end="227:50"><name pos:start="227:49" pos:end="227:50">rd</name></expr></argument>, <argument pos:start="227:53" pos:end="227:54"><expr pos:start="227:53" pos:end="227:54"><name pos:start="227:53" pos:end="227:54">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:27"><expr pos:start="229:13" pos:end="229:26"><operator pos:start="229:13" pos:end="229:13">*</operator><name pos:start="229:14" pos:end="229:22">is_branch</name> <operator pos:start="229:24" pos:end="229:24">=</operator> <literal type="number" pos:start="229:26" pos:end="229:26">1</literal></expr>;</expr_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

        <case pos:start="233:9" pos:end="233:33">case <expr pos:start="233:14" pos:end="233:32"><name pos:start="233:14" pos:end="233:20">OPC_TGE</name> <operator pos:start="233:22" pos:end="233:24">...</operator> <name pos:start="233:26" pos:end="233:32">OPC_TEQ</name></expr>:</case> <comment type="block" pos:start="233:35" pos:end="233:45">/* Traps */</comment>

        <case pos:start="235:9" pos:end="235:21">case <expr pos:start="235:14" pos:end="235:20"><name pos:start="235:14" pos:end="235:20">OPC_TNE</name></expr>:</case>

            <expr_stmt pos:start="237:13" pos:end="237:43"><expr pos:start="237:13" pos:end="237:42"><call pos:start="237:13" pos:end="237:42"><name pos:start="237:13" pos:end="237:20">gen_trap</name><argument_list pos:start="237:21" pos:end="237:42">(<argument pos:start="237:22" pos:end="237:24"><expr pos:start="237:22" pos:end="237:24"><name pos:start="237:22" pos:end="237:24">ctx</name></expr></argument>, <argument pos:start="237:27" pos:end="237:29"><expr pos:start="237:27" pos:end="237:29"><name pos:start="237:27" pos:end="237:29">op1</name></expr></argument>, <argument pos:start="237:32" pos:end="237:33"><expr pos:start="237:32" pos:end="237:33"><name pos:start="237:32" pos:end="237:33">rs</name></expr></argument>, <argument pos:start="237:36" pos:end="237:37"><expr pos:start="237:36" pos:end="237:37"><name pos:start="237:36" pos:end="237:37">rt</name></expr></argument>, <argument pos:start="237:40" pos:end="237:41"><expr pos:start="237:40" pos:end="237:41"><operator pos:start="237:40" pos:end="237:40">-</operator><literal type="number" pos:start="237:41" pos:end="237:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="239:13" pos:end="239:18">break;</break>

        <case pos:start="241:9" pos:end="241:22">case <expr pos:start="241:14" pos:end="241:21"><name pos:start="241:14" pos:end="241:21">OPC_MFHI</name></expr>:</case>          <comment type="block" pos:start="241:33" pos:end="241:53">/* Move from HI/LO */</comment>

        <case pos:start="243:9" pos:end="243:22">case <expr pos:start="243:14" pos:end="243:21"><name pos:start="243:14" pos:end="243:21">OPC_MFLO</name></expr>:</case>

            <expr_stmt pos:start="245:13" pos:end="245:43"><expr pos:start="245:13" pos:end="245:42"><call pos:start="245:13" pos:end="245:42"><name pos:start="245:13" pos:end="245:20">gen_HILO</name><argument_list pos:start="245:21" pos:end="245:42">(<argument pos:start="245:22" pos:end="245:24"><expr pos:start="245:22" pos:end="245:24"><name pos:start="245:22" pos:end="245:24">ctx</name></expr></argument>, <argument pos:start="245:27" pos:end="245:29"><expr pos:start="245:27" pos:end="245:29"><name pos:start="245:27" pos:end="245:29">op1</name></expr></argument>, <argument pos:start="245:32" pos:end="245:37"><expr pos:start="245:32" pos:end="245:37"><name pos:start="245:32" pos:end="245:33">rs</name> <operator pos:start="245:35" pos:end="245:35">&amp;</operator> <literal type="number" pos:start="245:37" pos:end="245:37">3</literal></expr></argument>, <argument pos:start="245:40" pos:end="245:41"><expr pos:start="245:40" pos:end="245:41"><name pos:start="245:40" pos:end="245:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="247:13" pos:end="247:18">break;</break>

        <case pos:start="249:9" pos:end="249:22">case <expr pos:start="249:14" pos:end="249:21"><name pos:start="249:14" pos:end="249:21">OPC_MTHI</name></expr>:</case>

        <case pos:start="251:9" pos:end="251:22">case <expr pos:start="251:14" pos:end="251:21"><name pos:start="251:14" pos:end="251:21">OPC_MTLO</name></expr>:</case>          <comment type="block" pos:start="251:33" pos:end="251:51">/* Move to HI/LO */</comment>

            <expr_stmt pos:start="253:13" pos:end="253:43"><expr pos:start="253:13" pos:end="253:42"><call pos:start="253:13" pos:end="253:42"><name pos:start="253:13" pos:end="253:20">gen_HILO</name><argument_list pos:start="253:21" pos:end="253:42">(<argument pos:start="253:22" pos:end="253:24"><expr pos:start="253:22" pos:end="253:24"><name pos:start="253:22" pos:end="253:24">ctx</name></expr></argument>, <argument pos:start="253:27" pos:end="253:29"><expr pos:start="253:27" pos:end="253:29"><name pos:start="253:27" pos:end="253:29">op1</name></expr></argument>, <argument pos:start="253:32" pos:end="253:37"><expr pos:start="253:32" pos:end="253:37"><name pos:start="253:32" pos:end="253:33">rd</name> <operator pos:start="253:35" pos:end="253:35">&amp;</operator> <literal type="number" pos:start="253:37" pos:end="253:37">3</literal></expr></argument>, <argument pos:start="253:40" pos:end="253:41"><expr pos:start="253:40" pos:end="253:41"><name pos:start="253:40" pos:end="253:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        <case pos:start="257:9" pos:end="260:0">case <expr pos:start="257:14" pos:end="257:21"><name pos:start="257:14" pos:end="257:21">OPC_PMON</name></expr>:</case>          <comment type="block" pos:start="257:33" pos:end="257:72">/* Pmon entry point, also R4010 selsl */</comment>

<cpp:ifdef pos:start="259:1" pos:end="259:27">#<cpp:directive pos:start="259:2" pos:end="259:6">ifdef</cpp:directive> <name pos:start="259:8" pos:end="259:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="261:13" pos:end="261:39"><expr pos:start="261:13" pos:end="261:38"><call pos:start="261:13" pos:end="261:38"><name pos:start="261:13" pos:end="261:22">MIPS_INVAL</name><argument_list pos:start="261:23" pos:end="261:38">(<argument pos:start="261:24" pos:end="261:37"><expr pos:start="261:24" pos:end="261:37"><literal type="string" pos:start="261:24" pos:end="261:37">"PMON / selsl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="263:13" pos:end="266:0"><expr pos:start="263:13" pos:end="263:44"><call pos:start="263:13" pos:end="263:44"><name pos:start="263:13" pos:end="263:30">generate_exception</name><argument_list pos:start="263:31" pos:end="263:44">(<argument pos:start="263:32" pos:end="263:34"><expr pos:start="263:32" pos:end="263:34"><name pos:start="263:32" pos:end="263:34">ctx</name></expr></argument>, <argument pos:start="263:37" pos:end="263:43"><expr pos:start="263:37" pos:end="263:43"><name pos:start="263:37" pos:end="263:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="265:1" pos:end="265:5">#<cpp:directive pos:start="265:2" pos:end="265:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="267:13" pos:end="270:0"><expr pos:start="267:13" pos:end="267:37"><call pos:start="267:13" pos:end="267:37"><name pos:start="267:13" pos:end="267:27">gen_helper_0e0i</name><argument_list pos:start="267:28" pos:end="267:37">(<argument pos:start="267:29" pos:end="267:32"><expr pos:start="267:29" pos:end="267:32"><name pos:start="267:29" pos:end="267:32">pmon</name></expr></argument>, <argument pos:start="267:35" pos:end="267:36"><expr pos:start="267:35" pos:end="267:36"><name pos:start="267:35" pos:end="267:36">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="269:1" pos:end="269:6">#<cpp:directive pos:start="269:2" pos:end="269:6">endif</cpp:directive></cpp:endif>

            <break pos:start="271:13" pos:end="271:18">break;</break>

        <case pos:start="273:9" pos:end="273:25">case <expr pos:start="273:14" pos:end="273:24"><name pos:start="273:14" pos:end="273:24">OPC_SYSCALL</name></expr>:</case>

            <expr_stmt pos:start="275:13" pos:end="275:50"><expr pos:start="275:13" pos:end="275:49"><call pos:start="275:13" pos:end="275:49"><name pos:start="275:13" pos:end="275:30">generate_exception</name><argument_list pos:start="275:31" pos:end="275:49">(<argument pos:start="275:32" pos:end="275:34"><expr pos:start="275:32" pos:end="275:34"><name pos:start="275:32" pos:end="275:34">ctx</name></expr></argument>, <argument pos:start="275:37" pos:end="275:48"><expr pos:start="275:37" pos:end="275:48"><name pos:start="275:37" pos:end="275:48">EXCP_SYSCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:34"><expr pos:start="277:13" pos:end="277:33"><name pos:start="277:13" pos:end="277:23"><name pos:start="277:13" pos:end="277:15">ctx</name><operator pos:start="277:16" pos:end="277:17">-&gt;</operator><name pos:start="277:18" pos:end="277:23">bstate</name></name> <operator pos:start="277:25" pos:end="277:25">=</operator> <name pos:start="277:27" pos:end="277:33">BS_STOP</name></expr>;</expr_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <case pos:start="281:9" pos:end="281:23">case <expr pos:start="281:14" pos:end="281:22"><name pos:start="281:14" pos:end="281:22">OPC_BREAK</name></expr>:</case>

            <expr_stmt pos:start="283:13" pos:end="283:48"><expr pos:start="283:13" pos:end="283:47"><call pos:start="283:13" pos:end="283:47"><name pos:start="283:13" pos:end="283:30">generate_exception</name><argument_list pos:start="283:31" pos:end="283:47">(<argument pos:start="283:32" pos:end="283:34"><expr pos:start="283:32" pos:end="283:34"><name pos:start="283:32" pos:end="283:34">ctx</name></expr></argument>, <argument pos:start="283:37" pos:end="283:46"><expr pos:start="283:37" pos:end="283:46"><name pos:start="283:37" pos:end="283:46">EXCP_BREAK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="285:13" pos:end="285:18">break;</break>

        <case pos:start="287:9" pos:end="290:0">case <expr pos:start="287:14" pos:end="287:21"><name pos:start="287:14" pos:end="287:21">OPC_SPIM</name></expr>:</case>

<cpp:ifdef pos:start="289:1" pos:end="289:27">#<cpp:directive pos:start="289:2" pos:end="289:6">ifdef</cpp:directive> <name pos:start="289:8" pos:end="289:27">MIPS_STRICT_STANDARD</name></cpp:ifdef>

            <expr_stmt pos:start="291:13" pos:end="291:31"><expr pos:start="291:13" pos:end="291:30"><call pos:start="291:13" pos:end="291:30"><name pos:start="291:13" pos:end="291:22">MIPS_INVAL</name><argument_list pos:start="291:23" pos:end="291:30">(<argument pos:start="291:24" pos:end="291:29"><expr pos:start="291:24" pos:end="291:29"><literal type="string" pos:start="291:24" pos:end="291:29">"SPIM"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="296:0"><expr pos:start="293:13" pos:end="293:44"><call pos:start="293:13" pos:end="293:44"><name pos:start="293:13" pos:end="293:30">generate_exception</name><argument_list pos:start="293:31" pos:end="293:44">(<argument pos:start="293:32" pos:end="293:34"><expr pos:start="293:32" pos:end="293:34"><name pos:start="293:32" pos:end="293:34">ctx</name></expr></argument>, <argument pos:start="293:37" pos:end="293:43"><expr pos:start="293:37" pos:end="293:43"><name pos:start="293:37" pos:end="293:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="295:1" pos:end="295:5">#<cpp:directive pos:start="295:2" pos:end="295:5">else</cpp:directive></cpp:else>

           <comment type="block" pos:start="297:12" pos:end="297:53">/* Implemented as RI exception for now. */</comment>

            <expr_stmt pos:start="299:13" pos:end="299:44"><expr pos:start="299:13" pos:end="299:43"><call pos:start="299:13" pos:end="299:43"><name pos:start="299:13" pos:end="299:22">MIPS_INVAL</name><argument_list pos:start="299:23" pos:end="299:43">(<argument pos:start="299:24" pos:end="299:42"><expr pos:start="299:24" pos:end="299:42"><literal type="string" pos:start="299:24" pos:end="299:42">"spim (unofficial)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="304:0"><expr pos:start="301:13" pos:end="301:44"><call pos:start="301:13" pos:end="301:44"><name pos:start="301:13" pos:end="301:30">generate_exception</name><argument_list pos:start="301:31" pos:end="301:44">(<argument pos:start="301:32" pos:end="301:34"><expr pos:start="301:32" pos:end="301:34"><name pos:start="301:32" pos:end="301:34">ctx</name></expr></argument>, <argument pos:start="301:37" pos:end="301:43"><expr pos:start="301:37" pos:end="301:43"><name pos:start="301:37" pos:end="301:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="303:1" pos:end="303:6">#<cpp:directive pos:start="303:2" pos:end="303:6">endif</cpp:directive></cpp:endif>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        <case pos:start="307:9" pos:end="307:22">case <expr pos:start="307:14" pos:end="307:21"><name pos:start="307:14" pos:end="307:21">OPC_SYNC</name></expr>:</case>

            <comment type="block" pos:start="309:13" pos:end="309:31">/* Treat as NOP. */</comment>

            <break pos:start="311:13" pos:end="311:18">break;</break>



        <case pos:start="315:9" pos:end="315:23">case <expr pos:start="315:14" pos:end="315:22"><name pos:start="315:14" pos:end="315:22">OPC_MOVCI</name></expr>:</case>

            <expr_stmt pos:start="317:13" pos:end="317:52"><expr pos:start="317:13" pos:end="317:51"><call pos:start="317:13" pos:end="317:51"><name pos:start="317:13" pos:end="317:22">check_insn</name><argument_list pos:start="317:23" pos:end="317:51">(<argument pos:start="317:24" pos:end="317:26"><expr pos:start="317:24" pos:end="317:26"><name pos:start="317:24" pos:end="317:26">ctx</name></expr></argument>, <argument pos:start="317:29" pos:end="317:50"><expr pos:start="317:29" pos:end="317:50"><name pos:start="317:29" pos:end="317:37">ISA_MIPS4</name> <operator pos:start="317:39" pos:end="317:39">|</operator> <name pos:start="317:41" pos:end="317:50">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="319:13" pos:end="331:13"><if pos:start="319:13" pos:end="327:13">if <condition pos:start="319:16" pos:end="319:51">(<expr pos:start="319:17" pos:end="319:50"><name pos:start="319:17" pos:end="319:32"><name pos:start="319:17" pos:end="319:19">env</name><operator pos:start="319:20" pos:end="319:21">-&gt;</operator><name pos:start="319:22" pos:end="319:32">CP0_Config1</name></name> <operator pos:start="319:34" pos:end="319:34">&amp;</operator> <operator pos:start="319:36" pos:end="319:36">(</operator><literal type="number" pos:start="319:37" pos:end="319:37">1</literal> <operator pos:start="319:39" pos:end="319:40">&lt;&lt;</operator> <name pos:start="319:42" pos:end="319:49">CP0C1_FP</name><operator pos:start="319:50" pos:end="319:50">)</operator></expr>)</condition> <block pos:start="319:53" pos:end="327:13">{<block_content pos:start="321:17" pos:end="325:51">

                <expr_stmt pos:start="321:17" pos:end="321:39"><expr pos:start="321:17" pos:end="321:38"><call pos:start="321:17" pos:end="321:38"><name pos:start="321:17" pos:end="321:33">check_cp1_enabled</name><argument_list pos:start="321:34" pos:end="321:38">(<argument pos:start="321:35" pos:end="321:37"><expr pos:start="321:35" pos:end="321:37"><name pos:start="321:35" pos:end="321:37">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="325:51"><expr pos:start="323:17" pos:end="325:50"><call pos:start="323:17" pos:end="325:50"><name pos:start="323:17" pos:end="323:25">gen_movci</name><argument_list pos:start="323:26" pos:end="325:50">(<argument pos:start="323:27" pos:end="323:29"><expr pos:start="323:27" pos:end="323:29"><name pos:start="323:27" pos:end="323:29">ctx</name></expr></argument>, <argument pos:start="323:32" pos:end="323:33"><expr pos:start="323:32" pos:end="323:33"><name pos:start="323:32" pos:end="323:33">rd</name></expr></argument>, <argument pos:start="323:36" pos:end="323:37"><expr pos:start="323:36" pos:end="323:37"><name pos:start="323:36" pos:end="323:37">rs</name></expr></argument>, <argument pos:start="323:40" pos:end="323:64"><expr pos:start="323:40" pos:end="323:64"><operator pos:start="323:40" pos:end="323:40">(</operator><name pos:start="323:41" pos:end="323:51"><name pos:start="323:41" pos:end="323:43">ctx</name><operator pos:start="323:44" pos:end="323:45">-&gt;</operator><name pos:start="323:46" pos:end="323:51">opcode</name></name> <operator pos:start="323:53" pos:end="323:54">&gt;&gt;</operator> <literal type="number" pos:start="323:56" pos:end="323:57">18</literal><operator pos:start="323:58" pos:end="323:58">)</operator> <operator pos:start="323:60" pos:end="323:60">&amp;</operator> <literal type="number" pos:start="323:62" pos:end="323:64">0x7</literal></expr></argument>,

                          <argument pos:start="325:27" pos:end="325:49"><expr pos:start="325:27" pos:end="325:49"><operator pos:start="325:27" pos:end="325:27">(</operator><name pos:start="325:28" pos:end="325:38"><name pos:start="325:28" pos:end="325:30">ctx</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:38">opcode</name></name> <operator pos:start="325:40" pos:end="325:41">&gt;&gt;</operator> <literal type="number" pos:start="325:43" pos:end="325:44">16</literal><operator pos:start="325:45" pos:end="325:45">)</operator> <operator pos:start="325:47" pos:end="325:47">&amp;</operator> <literal type="number" pos:start="325:49" pos:end="325:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="327:15" pos:end="331:13">else <block pos:start="327:20" pos:end="331:13">{<block_content pos:start="329:17" pos:end="329:57">

                <expr_stmt pos:start="329:17" pos:end="329:57"><expr pos:start="329:17" pos:end="329:56"><call pos:start="329:17" pos:end="329:56"><name pos:start="329:17" pos:end="329:38">generate_exception_err</name><argument_list pos:start="329:39" pos:end="329:56">(<argument pos:start="329:40" pos:end="329:42"><expr pos:start="329:40" pos:end="329:42"><name pos:start="329:40" pos:end="329:42">ctx</name></expr></argument>, <argument pos:start="329:45" pos:end="329:52"><expr pos:start="329:45" pos:end="329:52"><name pos:start="329:45" pos:end="329:52">EXCP_CpU</name></expr></argument>, <argument pos:start="329:55" pos:end="329:55"><expr pos:start="329:55" pos:end="329:55"><literal type="number" pos:start="329:55" pos:end="329:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="333:13" pos:end="338:0">break;</break>



<cpp:if pos:start="337:1" pos:end="337:26">#<cpp:directive pos:start="337:2" pos:end="337:3">if</cpp:directive> <expr pos:start="337:5" pos:end="337:26"><call pos:start="337:5" pos:end="337:26"><name pos:start="337:5" pos:end="337:11">defined</name><argument_list pos:start="337:12" pos:end="337:26">(<argument pos:start="337:13" pos:end="337:25"><expr pos:start="337:13" pos:end="337:25"><name pos:start="337:13" pos:end="337:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

       <comment type="block" pos:start="339:8" pos:end="339:36">/* MIPS64 specific opcodes */</comment>

        <case pos:start="341:9" pos:end="341:22">case <expr pos:start="341:14" pos:end="341:21"><name pos:start="341:14" pos:end="341:21">OPC_DSLL</name></expr>:</case>

        <case pos:start="343:9" pos:end="343:22">case <expr pos:start="343:14" pos:end="343:21"><name pos:start="343:14" pos:end="343:21">OPC_DSRA</name></expr>:</case>

        <case pos:start="345:9" pos:end="345:24">case <expr pos:start="345:14" pos:end="345:23"><name pos:start="345:14" pos:end="345:23">OPC_DSLL32</name></expr>:</case>

        <case pos:start="347:9" pos:end="347:24">case <expr pos:start="347:14" pos:end="347:23"><name pos:start="347:14" pos:end="347:23">OPC_DSRA32</name></expr>:</case>

            <expr_stmt pos:start="349:13" pos:end="349:39"><expr pos:start="349:13" pos:end="349:38"><call pos:start="349:13" pos:end="349:38"><name pos:start="349:13" pos:end="349:22">check_insn</name><argument_list pos:start="349:23" pos:end="349:38">(<argument pos:start="349:24" pos:end="349:26"><expr pos:start="349:24" pos:end="349:26"><name pos:start="349:24" pos:end="349:26">ctx</name></expr></argument>, <argument pos:start="349:29" pos:end="349:37"><expr pos:start="349:29" pos:end="349:37"><name pos:start="349:29" pos:end="349:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:31"><expr pos:start="351:13" pos:end="351:30"><call pos:start="351:13" pos:end="351:30"><name pos:start="351:13" pos:end="351:25">check_mips_64</name><argument_list pos:start="351:26" pos:end="351:30">(<argument pos:start="351:27" pos:end="351:29"><expr pos:start="351:27" pos:end="351:29"><name pos:start="351:27" pos:end="351:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="353:13" pos:end="353:48"><expr pos:start="353:13" pos:end="353:47"><call pos:start="353:13" pos:end="353:47"><name pos:start="353:13" pos:end="353:25">gen_shift_imm</name><argument_list pos:start="353:26" pos:end="353:47">(<argument pos:start="353:27" pos:end="353:29"><expr pos:start="353:27" pos:end="353:29"><name pos:start="353:27" pos:end="353:29">ctx</name></expr></argument>, <argument pos:start="353:32" pos:end="353:34"><expr pos:start="353:32" pos:end="353:34"><name pos:start="353:32" pos:end="353:34">op1</name></expr></argument>, <argument pos:start="353:37" pos:end="353:38"><expr pos:start="353:37" pos:end="353:38"><name pos:start="353:37" pos:end="353:38">rd</name></expr></argument>, <argument pos:start="353:41" pos:end="353:42"><expr pos:start="353:41" pos:end="353:42"><name pos:start="353:41" pos:end="353:42">rt</name></expr></argument>, <argument pos:start="353:45" pos:end="353:46"><expr pos:start="353:45" pos:end="353:46"><name pos:start="353:45" pos:end="353:46">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="355:13" pos:end="355:18">break;</break>

        <case pos:start="357:9" pos:end="357:22">case <expr pos:start="357:14" pos:end="357:21"><name pos:start="357:14" pos:end="357:21">OPC_DSRL</name></expr>:</case>

            <switch pos:start="359:13" pos:end="389:13">switch <condition pos:start="359:20" pos:end="359:47">(<expr pos:start="359:21" pos:end="359:46"><operator pos:start="359:21" pos:end="359:21">(</operator><name pos:start="359:22" pos:end="359:32"><name pos:start="359:22" pos:end="359:24">ctx</name><operator pos:start="359:25" pos:end="359:26">-&gt;</operator><name pos:start="359:27" pos:end="359:32">opcode</name></name> <operator pos:start="359:34" pos:end="359:35">&gt;&gt;</operator> <literal type="number" pos:start="359:37" pos:end="359:38">21</literal><operator pos:start="359:39" pos:end="359:39">)</operator> <operator pos:start="359:41" pos:end="359:41">&amp;</operator> <literal type="number" pos:start="359:43" pos:end="359:46">0x1f</literal></expr>)</condition> <block pos:start="359:49" pos:end="389:13">{<block_content pos:start="361:13" pos:end="387:22">

            <case pos:start="361:13" pos:end="361:19">case <expr pos:start="361:18" pos:end="361:18"><literal type="number" pos:start="361:18" pos:end="361:18">1</literal></expr>:</case>

                <comment type="block" pos:start="363:17" pos:end="363:61">/* drotr is decoded as dsrl on non-R2 CPUs */</comment>

                <if_stmt pos:start="365:17" pos:end="369:17"><if pos:start="365:17" pos:end="369:17">if <condition pos:start="365:20" pos:end="365:51">(<expr pos:start="365:21" pos:end="365:50"><name pos:start="365:21" pos:end="365:35"><name pos:start="365:21" pos:end="365:23">ctx</name><operator pos:start="365:24" pos:end="365:25">-&gt;</operator><name pos:start="365:26" pos:end="365:35">insn_flags</name></name> <operator pos:start="365:37" pos:end="365:37">&amp;</operator> <name pos:start="365:39" pos:end="365:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="365:53" pos:end="369:17">{<block_content pos:start="367:21" pos:end="367:36">

                    <expr_stmt pos:start="367:21" pos:end="367:36"><expr pos:start="367:21" pos:end="367:35"><name pos:start="367:21" pos:end="367:23">op1</name> <operator pos:start="367:25" pos:end="367:25">=</operator> <name pos:start="367:27" pos:end="367:35">OPC_DROTR</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="371:17" pos:end="371:33">/* Fallthrough */</comment>

            <case pos:start="373:13" pos:end="373:19">case <expr pos:start="373:18" pos:end="373:18"><literal type="number" pos:start="373:18" pos:end="373:18">0</literal></expr>:</case>

                <expr_stmt pos:start="375:17" pos:end="375:43"><expr pos:start="375:17" pos:end="375:42"><call pos:start="375:17" pos:end="375:42"><name pos:start="375:17" pos:end="375:26">check_insn</name><argument_list pos:start="375:27" pos:end="375:42">(<argument pos:start="375:28" pos:end="375:30"><expr pos:start="375:28" pos:end="375:30"><name pos:start="375:28" pos:end="375:30">ctx</name></expr></argument>, <argument pos:start="375:33" pos:end="375:41"><expr pos:start="375:33" pos:end="375:41"><name pos:start="375:33" pos:end="375:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:35"><expr pos:start="377:17" pos:end="377:34"><call pos:start="377:17" pos:end="377:34"><name pos:start="377:17" pos:end="377:29">check_mips_64</name><argument_list pos:start="377:30" pos:end="377:34">(<argument pos:start="377:31" pos:end="377:33"><expr pos:start="377:31" pos:end="377:33"><name pos:start="377:31" pos:end="377:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="379:17" pos:end="379:52"><expr pos:start="379:17" pos:end="379:51"><call pos:start="379:17" pos:end="379:51"><name pos:start="379:17" pos:end="379:29">gen_shift_imm</name><argument_list pos:start="379:30" pos:end="379:51">(<argument pos:start="379:31" pos:end="379:33"><expr pos:start="379:31" pos:end="379:33"><name pos:start="379:31" pos:end="379:33">ctx</name></expr></argument>, <argument pos:start="379:36" pos:end="379:38"><expr pos:start="379:36" pos:end="379:38"><name pos:start="379:36" pos:end="379:38">op1</name></expr></argument>, <argument pos:start="379:41" pos:end="379:42"><expr pos:start="379:41" pos:end="379:42"><name pos:start="379:41" pos:end="379:42">rd</name></expr></argument>, <argument pos:start="379:45" pos:end="379:46"><expr pos:start="379:45" pos:end="379:46"><name pos:start="379:45" pos:end="379:46">rt</name></expr></argument>, <argument pos:start="379:49" pos:end="379:50"><expr pos:start="379:49" pos:end="379:50"><name pos:start="379:49" pos:end="379:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="381:17" pos:end="381:22">break;</break>

            <default pos:start="383:13" pos:end="383:20">default:</default>

                <expr_stmt pos:start="385:17" pos:end="385:49"><expr pos:start="385:17" pos:end="385:48"><call pos:start="385:17" pos:end="385:48"><name pos:start="385:17" pos:end="385:34">generate_exception</name><argument_list pos:start="385:35" pos:end="385:48">(<argument pos:start="385:36" pos:end="385:38"><expr pos:start="385:36" pos:end="385:38"><name pos:start="385:36" pos:end="385:38">ctx</name></expr></argument>, <argument pos:start="385:41" pos:end="385:47"><expr pos:start="385:41" pos:end="385:47"><name pos:start="385:41" pos:end="385:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="387:17" pos:end="387:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="391:13" pos:end="391:18">break;</break>

        <case pos:start="393:9" pos:end="393:24">case <expr pos:start="393:14" pos:end="393:23"><name pos:start="393:14" pos:end="393:23">OPC_DSRL32</name></expr>:</case>

            <switch pos:start="395:13" pos:end="425:13">switch <condition pos:start="395:20" pos:end="395:47">(<expr pos:start="395:21" pos:end="395:46"><operator pos:start="395:21" pos:end="395:21">(</operator><name pos:start="395:22" pos:end="395:32"><name pos:start="395:22" pos:end="395:24">ctx</name><operator pos:start="395:25" pos:end="395:26">-&gt;</operator><name pos:start="395:27" pos:end="395:32">opcode</name></name> <operator pos:start="395:34" pos:end="395:35">&gt;&gt;</operator> <literal type="number" pos:start="395:37" pos:end="395:38">21</literal><operator pos:start="395:39" pos:end="395:39">)</operator> <operator pos:start="395:41" pos:end="395:41">&amp;</operator> <literal type="number" pos:start="395:43" pos:end="395:46">0x1f</literal></expr>)</condition> <block pos:start="395:49" pos:end="425:13">{<block_content pos:start="397:13" pos:end="423:22">

            <case pos:start="397:13" pos:end="397:19">case <expr pos:start="397:18" pos:end="397:18"><literal type="number" pos:start="397:18" pos:end="397:18">1</literal></expr>:</case>

                <comment type="block" pos:start="399:17" pos:end="399:65">/* drotr32 is decoded as dsrl32 on non-R2 CPUs */</comment>

                <if_stmt pos:start="401:17" pos:end="405:17"><if pos:start="401:17" pos:end="405:17">if <condition pos:start="401:20" pos:end="401:51">(<expr pos:start="401:21" pos:end="401:50"><name pos:start="401:21" pos:end="401:35"><name pos:start="401:21" pos:end="401:23">ctx</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:35">insn_flags</name></name> <operator pos:start="401:37" pos:end="401:37">&amp;</operator> <name pos:start="401:39" pos:end="401:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="401:53" pos:end="405:17">{<block_content pos:start="403:21" pos:end="403:38">

                    <expr_stmt pos:start="403:21" pos:end="403:38"><expr pos:start="403:21" pos:end="403:37"><name pos:start="403:21" pos:end="403:23">op1</name> <operator pos:start="403:25" pos:end="403:25">=</operator> <name pos:start="403:27" pos:end="403:37">OPC_DROTR32</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="407:17" pos:end="407:33">/* Fallthrough */</comment>

            <case pos:start="409:13" pos:end="409:19">case <expr pos:start="409:18" pos:end="409:18"><literal type="number" pos:start="409:18" pos:end="409:18">0</literal></expr>:</case>

                <expr_stmt pos:start="411:17" pos:end="411:43"><expr pos:start="411:17" pos:end="411:42"><call pos:start="411:17" pos:end="411:42"><name pos:start="411:17" pos:end="411:26">check_insn</name><argument_list pos:start="411:27" pos:end="411:42">(<argument pos:start="411:28" pos:end="411:30"><expr pos:start="411:28" pos:end="411:30"><name pos:start="411:28" pos:end="411:30">ctx</name></expr></argument>, <argument pos:start="411:33" pos:end="411:41"><expr pos:start="411:33" pos:end="411:41"><name pos:start="411:33" pos:end="411:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:35"><expr pos:start="413:17" pos:end="413:34"><call pos:start="413:17" pos:end="413:34"><name pos:start="413:17" pos:end="413:29">check_mips_64</name><argument_list pos:start="413:30" pos:end="413:34">(<argument pos:start="413:31" pos:end="413:33"><expr pos:start="413:31" pos:end="413:33"><name pos:start="413:31" pos:end="413:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:52"><expr pos:start="415:17" pos:end="415:51"><call pos:start="415:17" pos:end="415:51"><name pos:start="415:17" pos:end="415:29">gen_shift_imm</name><argument_list pos:start="415:30" pos:end="415:51">(<argument pos:start="415:31" pos:end="415:33"><expr pos:start="415:31" pos:end="415:33"><name pos:start="415:31" pos:end="415:33">ctx</name></expr></argument>, <argument pos:start="415:36" pos:end="415:38"><expr pos:start="415:36" pos:end="415:38"><name pos:start="415:36" pos:end="415:38">op1</name></expr></argument>, <argument pos:start="415:41" pos:end="415:42"><expr pos:start="415:41" pos:end="415:42"><name pos:start="415:41" pos:end="415:42">rd</name></expr></argument>, <argument pos:start="415:45" pos:end="415:46"><expr pos:start="415:45" pos:end="415:46"><name pos:start="415:45" pos:end="415:46">rt</name></expr></argument>, <argument pos:start="415:49" pos:end="415:50"><expr pos:start="415:49" pos:end="415:50"><name pos:start="415:49" pos:end="415:50">sa</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="417:17" pos:end="417:22">break;</break>

            <default pos:start="419:13" pos:end="419:20">default:</default>

                <expr_stmt pos:start="421:17" pos:end="421:49"><expr pos:start="421:17" pos:end="421:48"><call pos:start="421:17" pos:end="421:48"><name pos:start="421:17" pos:end="421:34">generate_exception</name><argument_list pos:start="421:35" pos:end="421:48">(<argument pos:start="421:36" pos:end="421:38"><expr pos:start="421:36" pos:end="421:38"><name pos:start="421:36" pos:end="421:38">ctx</name></expr></argument>, <argument pos:start="421:41" pos:end="421:47"><expr pos:start="421:41" pos:end="421:47"><name pos:start="421:41" pos:end="421:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="423:17" pos:end="423:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="427:13" pos:end="427:18">break;</break>

        <case pos:start="429:9" pos:end="429:36">case <expr pos:start="429:14" pos:end="429:35"><name pos:start="429:14" pos:end="429:21">OPC_DADD</name> <operator pos:start="429:23" pos:end="429:25">...</operator> <name pos:start="429:27" pos:end="429:35">OPC_DSUBU</name></expr>:</case>

            <expr_stmt pos:start="431:13" pos:end="431:39"><expr pos:start="431:13" pos:end="431:38"><call pos:start="431:13" pos:end="431:38"><name pos:start="431:13" pos:end="431:22">check_insn</name><argument_list pos:start="431:23" pos:end="431:38">(<argument pos:start="431:24" pos:end="431:26"><expr pos:start="431:24" pos:end="431:26"><name pos:start="431:24" pos:end="431:26">ctx</name></expr></argument>, <argument pos:start="431:29" pos:end="431:37"><expr pos:start="431:29" pos:end="431:37"><name pos:start="431:29" pos:end="431:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="433:13" pos:end="433:31"><expr pos:start="433:13" pos:end="433:30"><call pos:start="433:13" pos:end="433:30"><name pos:start="433:13" pos:end="433:25">check_mips_64</name><argument_list pos:start="433:26" pos:end="433:30">(<argument pos:start="433:27" pos:end="433:29"><expr pos:start="433:27" pos:end="433:29"><name pos:start="433:27" pos:end="433:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:44"><expr pos:start="435:13" pos:end="435:43"><call pos:start="435:13" pos:end="435:43"><name pos:start="435:13" pos:end="435:21">gen_arith</name><argument_list pos:start="435:22" pos:end="435:43">(<argument pos:start="435:23" pos:end="435:25"><expr pos:start="435:23" pos:end="435:25"><name pos:start="435:23" pos:end="435:25">ctx</name></expr></argument>, <argument pos:start="435:28" pos:end="435:30"><expr pos:start="435:28" pos:end="435:30"><name pos:start="435:28" pos:end="435:30">op1</name></expr></argument>, <argument pos:start="435:33" pos:end="435:34"><expr pos:start="435:33" pos:end="435:34"><name pos:start="435:33" pos:end="435:34">rd</name></expr></argument>, <argument pos:start="435:37" pos:end="435:38"><expr pos:start="435:37" pos:end="435:38"><name pos:start="435:37" pos:end="435:38">rs</name></expr></argument>, <argument pos:start="435:41" pos:end="435:42"><expr pos:start="435:41" pos:end="435:42"><name pos:start="435:41" pos:end="435:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="437:13" pos:end="437:18">break;</break>

        <case pos:start="439:9" pos:end="439:23">case <expr pos:start="439:14" pos:end="439:22"><name pos:start="439:14" pos:end="439:22">OPC_DSLLV</name></expr>:</case>

        <case pos:start="441:9" pos:end="441:23">case <expr pos:start="441:14" pos:end="441:22"><name pos:start="441:14" pos:end="441:22">OPC_DSRAV</name></expr>:</case>

            <expr_stmt pos:start="443:13" pos:end="443:39"><expr pos:start="443:13" pos:end="443:38"><call pos:start="443:13" pos:end="443:38"><name pos:start="443:13" pos:end="443:22">check_insn</name><argument_list pos:start="443:23" pos:end="443:38">(<argument pos:start="443:24" pos:end="443:26"><expr pos:start="443:24" pos:end="443:26"><name pos:start="443:24" pos:end="443:26">ctx</name></expr></argument>, <argument pos:start="443:29" pos:end="443:37"><expr pos:start="443:29" pos:end="443:37"><name pos:start="443:29" pos:end="443:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="445:13" pos:end="445:31"><expr pos:start="445:13" pos:end="445:30"><call pos:start="445:13" pos:end="445:30"><name pos:start="445:13" pos:end="445:25">check_mips_64</name><argument_list pos:start="445:26" pos:end="445:30">(<argument pos:start="445:27" pos:end="445:29"><expr pos:start="445:27" pos:end="445:29"><name pos:start="445:27" pos:end="445:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="447:13" pos:end="447:44"><expr pos:start="447:13" pos:end="447:43"><call pos:start="447:13" pos:end="447:43"><name pos:start="447:13" pos:end="447:21">gen_shift</name><argument_list pos:start="447:22" pos:end="447:43">(<argument pos:start="447:23" pos:end="447:25"><expr pos:start="447:23" pos:end="447:25"><name pos:start="447:23" pos:end="447:25">ctx</name></expr></argument>, <argument pos:start="447:28" pos:end="447:30"><expr pos:start="447:28" pos:end="447:30"><name pos:start="447:28" pos:end="447:30">op1</name></expr></argument>, <argument pos:start="447:33" pos:end="447:34"><expr pos:start="447:33" pos:end="447:34"><name pos:start="447:33" pos:end="447:34">rd</name></expr></argument>, <argument pos:start="447:37" pos:end="447:38"><expr pos:start="447:37" pos:end="447:38"><name pos:start="447:37" pos:end="447:38">rs</name></expr></argument>, <argument pos:start="447:41" pos:end="447:42"><expr pos:start="447:41" pos:end="447:42"><name pos:start="447:41" pos:end="447:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <case pos:start="451:9" pos:end="451:23">case <expr pos:start="451:14" pos:end="451:22"><name pos:start="451:14" pos:end="451:22">OPC_DSRLV</name></expr>:</case>

            <switch pos:start="453:13" pos:end="483:13">switch <condition pos:start="453:20" pos:end="453:46">(<expr pos:start="453:21" pos:end="453:45"><operator pos:start="453:21" pos:end="453:21">(</operator><name pos:start="453:22" pos:end="453:32"><name pos:start="453:22" pos:end="453:24">ctx</name><operator pos:start="453:25" pos:end="453:26">-&gt;</operator><name pos:start="453:27" pos:end="453:32">opcode</name></name> <operator pos:start="453:34" pos:end="453:35">&gt;&gt;</operator> <literal type="number" pos:start="453:37" pos:end="453:37">6</literal><operator pos:start="453:38" pos:end="453:38">)</operator> <operator pos:start="453:40" pos:end="453:40">&amp;</operator> <literal type="number" pos:start="453:42" pos:end="453:45">0x1f</literal></expr>)</condition> <block pos:start="453:48" pos:end="483:13">{<block_content pos:start="455:13" pos:end="481:22">

            <case pos:start="455:13" pos:end="455:19">case <expr pos:start="455:18" pos:end="455:18"><literal type="number" pos:start="455:18" pos:end="455:18">1</literal></expr>:</case>

                <comment type="block" pos:start="457:17" pos:end="457:63">/* drotrv is decoded as dsrlv on non-R2 CPUs */</comment>

                <if_stmt pos:start="459:17" pos:end="463:17"><if pos:start="459:17" pos:end="463:17">if <condition pos:start="459:20" pos:end="459:51">(<expr pos:start="459:21" pos:end="459:50"><name pos:start="459:21" pos:end="459:35"><name pos:start="459:21" pos:end="459:23">ctx</name><operator pos:start="459:24" pos:end="459:25">-&gt;</operator><name pos:start="459:26" pos:end="459:35">insn_flags</name></name> <operator pos:start="459:37" pos:end="459:37">&amp;</operator> <name pos:start="459:39" pos:end="459:50">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="459:53" pos:end="463:17">{<block_content pos:start="461:21" pos:end="461:37">

                    <expr_stmt pos:start="461:21" pos:end="461:37"><expr pos:start="461:21" pos:end="461:36"><name pos:start="461:21" pos:end="461:23">op1</name> <operator pos:start="461:25" pos:end="461:25">=</operator> <name pos:start="461:27" pos:end="461:36">OPC_DROTRV</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="465:17" pos:end="465:33">/* Fallthrough */</comment>

            <case pos:start="467:13" pos:end="467:19">case <expr pos:start="467:18" pos:end="467:18"><literal type="number" pos:start="467:18" pos:end="467:18">0</literal></expr>:</case>

                <expr_stmt pos:start="469:17" pos:end="469:43"><expr pos:start="469:17" pos:end="469:42"><call pos:start="469:17" pos:end="469:42"><name pos:start="469:17" pos:end="469:26">check_insn</name><argument_list pos:start="469:27" pos:end="469:42">(<argument pos:start="469:28" pos:end="469:30"><expr pos:start="469:28" pos:end="469:30"><name pos:start="469:28" pos:end="469:30">ctx</name></expr></argument>, <argument pos:start="469:33" pos:end="469:41"><expr pos:start="469:33" pos:end="469:41"><name pos:start="469:33" pos:end="469:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:35"><expr pos:start="471:17" pos:end="471:34"><call pos:start="471:17" pos:end="471:34"><name pos:start="471:17" pos:end="471:29">check_mips_64</name><argument_list pos:start="471:30" pos:end="471:34">(<argument pos:start="471:31" pos:end="471:33"><expr pos:start="471:31" pos:end="471:33"><name pos:start="471:31" pos:end="471:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:48"><expr pos:start="473:17" pos:end="473:47"><call pos:start="473:17" pos:end="473:47"><name pos:start="473:17" pos:end="473:25">gen_shift</name><argument_list pos:start="473:26" pos:end="473:47">(<argument pos:start="473:27" pos:end="473:29"><expr pos:start="473:27" pos:end="473:29"><name pos:start="473:27" pos:end="473:29">ctx</name></expr></argument>, <argument pos:start="473:32" pos:end="473:34"><expr pos:start="473:32" pos:end="473:34"><name pos:start="473:32" pos:end="473:34">op1</name></expr></argument>, <argument pos:start="473:37" pos:end="473:38"><expr pos:start="473:37" pos:end="473:38"><name pos:start="473:37" pos:end="473:38">rd</name></expr></argument>, <argument pos:start="473:41" pos:end="473:42"><expr pos:start="473:41" pos:end="473:42"><name pos:start="473:41" pos:end="473:42">rs</name></expr></argument>, <argument pos:start="473:45" pos:end="473:46"><expr pos:start="473:45" pos:end="473:46"><name pos:start="473:45" pos:end="473:46">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="475:17" pos:end="475:22">break;</break>

            <default pos:start="477:13" pos:end="477:20">default:</default>

                <expr_stmt pos:start="479:17" pos:end="479:49"><expr pos:start="479:17" pos:end="479:48"><call pos:start="479:17" pos:end="479:48"><name pos:start="479:17" pos:end="479:34">generate_exception</name><argument_list pos:start="479:35" pos:end="479:48">(<argument pos:start="479:36" pos:end="479:38"><expr pos:start="479:36" pos:end="479:38"><name pos:start="479:36" pos:end="479:38">ctx</name></expr></argument>, <argument pos:start="479:41" pos:end="479:47"><expr pos:start="479:41" pos:end="479:47"><name pos:start="479:41" pos:end="479:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="481:17" pos:end="481:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="485:13" pos:end="485:18">break;</break>

        <case pos:start="487:9" pos:end="487:37">case <expr pos:start="487:14" pos:end="487:36"><name pos:start="487:14" pos:end="487:22">OPC_DMULT</name> <operator pos:start="487:24" pos:end="487:26">...</operator> <name pos:start="487:28" pos:end="487:36">OPC_DDIVU</name></expr>:</case>

            <expr_stmt pos:start="489:13" pos:end="489:39"><expr pos:start="489:13" pos:end="489:38"><call pos:start="489:13" pos:end="489:38"><name pos:start="489:13" pos:end="489:22">check_insn</name><argument_list pos:start="489:23" pos:end="489:38">(<argument pos:start="489:24" pos:end="489:26"><expr pos:start="489:24" pos:end="489:26"><name pos:start="489:24" pos:end="489:26">ctx</name></expr></argument>, <argument pos:start="489:29" pos:end="489:37"><expr pos:start="489:29" pos:end="489:37"><name pos:start="489:29" pos:end="489:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:31"><expr pos:start="491:13" pos:end="491:30"><call pos:start="491:13" pos:end="491:30"><name pos:start="491:13" pos:end="491:25">check_mips_64</name><argument_list pos:start="491:26" pos:end="491:30">(<argument pos:start="491:27" pos:end="491:29"><expr pos:start="491:27" pos:end="491:29"><name pos:start="491:27" pos:end="491:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:44"><expr pos:start="493:13" pos:end="493:43"><call pos:start="493:13" pos:end="493:43"><name pos:start="493:13" pos:end="493:22">gen_muldiv</name><argument_list pos:start="493:23" pos:end="493:43">(<argument pos:start="493:24" pos:end="493:26"><expr pos:start="493:24" pos:end="493:26"><name pos:start="493:24" pos:end="493:26">ctx</name></expr></argument>, <argument pos:start="493:29" pos:end="493:31"><expr pos:start="493:29" pos:end="493:31"><name pos:start="493:29" pos:end="493:31">op1</name></expr></argument>, <argument pos:start="493:34" pos:end="493:34"><expr pos:start="493:34" pos:end="493:34"><literal type="number" pos:start="493:34" pos:end="493:34">0</literal></expr></argument>, <argument pos:start="493:37" pos:end="493:38"><expr pos:start="493:37" pos:end="493:38"><name pos:start="493:37" pos:end="493:38">rs</name></expr></argument>, <argument pos:start="493:41" pos:end="493:42"><expr pos:start="493:41" pos:end="493:42"><name pos:start="493:41" pos:end="493:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="495:13" pos:end="498:0">break;</break>

<cpp:endif pos:start="497:1" pos:end="497:6">#<cpp:directive pos:start="497:2" pos:end="497:6">endif</cpp:directive></cpp:endif>

        <default pos:start="499:9" pos:end="499:16">default:</default>            <comment type="block" pos:start="499:29" pos:end="499:41">/* Invalid */</comment>

            <expr_stmt pos:start="501:13" pos:end="501:34"><expr pos:start="501:13" pos:end="501:33"><call pos:start="501:13" pos:end="501:33"><name pos:start="501:13" pos:end="501:22">MIPS_INVAL</name><argument_list pos:start="501:23" pos:end="501:33">(<argument pos:start="501:24" pos:end="501:32"><expr pos:start="501:24" pos:end="501:32"><literal type="string" pos:start="501:24" pos:end="501:32">"special"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:45"><expr pos:start="503:13" pos:end="503:44"><call pos:start="503:13" pos:end="503:44"><name pos:start="503:13" pos:end="503:30">generate_exception</name><argument_list pos:start="503:31" pos:end="503:44">(<argument pos:start="503:32" pos:end="503:34"><expr pos:start="503:32" pos:end="503:34"><name pos:start="503:32" pos:end="503:34">ctx</name></expr></argument>, <argument pos:start="503:37" pos:end="503:43"><expr pos:start="503:37" pos:end="503:43"><name pos:start="503:37" pos:end="503:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="505:13" pos:end="505:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="509:9" pos:end="509:14">break;</break>

    <case pos:start="511:5" pos:end="511:22">case <expr pos:start="511:10" pos:end="511:21"><name pos:start="511:10" pos:end="511:21">OPC_SPECIAL2</name></expr>:</case>

        <expr_stmt pos:start="513:9" pos:end="513:41"><expr pos:start="513:9" pos:end="513:40"><name pos:start="513:9" pos:end="513:11">op1</name> <operator pos:start="513:13" pos:end="513:13">=</operator> <call pos:start="513:15" pos:end="513:40"><name pos:start="513:15" pos:end="513:27">MASK_SPECIAL2</name><argument_list pos:start="513:28" pos:end="513:40">(<argument pos:start="513:29" pos:end="513:39"><expr pos:start="513:29" pos:end="513:39"><name pos:start="513:29" pos:end="513:39"><name pos:start="513:29" pos:end="513:31">ctx</name><operator pos:start="513:32" pos:end="513:33">-&gt;</operator><name pos:start="513:34" pos:end="513:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="515:9" pos:end="627:9">switch <condition pos:start="515:16" pos:end="515:20">(<expr pos:start="515:17" pos:end="515:19"><name pos:start="515:17" pos:end="515:19">op1</name></expr>)</condition> <block pos:start="515:22" pos:end="627:9">{<block_content pos:start="517:9" pos:end="625:18">

        <case pos:start="517:9" pos:end="517:36">case <expr pos:start="517:14" pos:end="517:35"><name pos:start="517:14" pos:end="517:21">OPC_MADD</name> <operator pos:start="517:23" pos:end="517:25">...</operator> <name pos:start="517:27" pos:end="517:35">OPC_MADDU</name></expr>:</case> <comment type="block" pos:start="517:38" pos:end="517:63">/* Multiply and add/sub */</comment>

        <case pos:start="519:9" pos:end="519:36">case <expr pos:start="519:14" pos:end="519:35"><name pos:start="519:14" pos:end="519:21">OPC_MSUB</name> <operator pos:start="519:23" pos:end="519:25">...</operator> <name pos:start="519:27" pos:end="519:35">OPC_MSUBU</name></expr>:</case>

            <expr_stmt pos:start="521:13" pos:end="521:40"><expr pos:start="521:13" pos:end="521:39"><call pos:start="521:13" pos:end="521:39"><name pos:start="521:13" pos:end="521:22">check_insn</name><argument_list pos:start="521:23" pos:end="521:39">(<argument pos:start="521:24" pos:end="521:26"><expr pos:start="521:24" pos:end="521:26"><name pos:start="521:24" pos:end="521:26">ctx</name></expr></argument>, <argument pos:start="521:29" pos:end="521:38"><expr pos:start="521:29" pos:end="521:38"><name pos:start="521:29" pos:end="521:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:49"><expr pos:start="523:13" pos:end="523:48"><call pos:start="523:13" pos:end="523:48"><name pos:start="523:13" pos:end="523:22">gen_muldiv</name><argument_list pos:start="523:23" pos:end="523:48">(<argument pos:start="523:24" pos:end="523:26"><expr pos:start="523:24" pos:end="523:26"><name pos:start="523:24" pos:end="523:26">ctx</name></expr></argument>, <argument pos:start="523:29" pos:end="523:31"><expr pos:start="523:29" pos:end="523:31"><name pos:start="523:29" pos:end="523:31">op1</name></expr></argument>, <argument pos:start="523:34" pos:end="523:39"><expr pos:start="523:34" pos:end="523:39"><name pos:start="523:34" pos:end="523:35">rd</name> <operator pos:start="523:37" pos:end="523:37">&amp;</operator> <literal type="number" pos:start="523:39" pos:end="523:39">3</literal></expr></argument>, <argument pos:start="523:42" pos:end="523:43"><expr pos:start="523:42" pos:end="523:43"><name pos:start="523:42" pos:end="523:43">rs</name></expr></argument>, <argument pos:start="523:46" pos:end="523:47"><expr pos:start="523:46" pos:end="523:47"><name pos:start="523:46" pos:end="523:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="525:13" pos:end="525:18">break;</break>

        <case pos:start="527:9" pos:end="527:21">case <expr pos:start="527:14" pos:end="527:20"><name pos:start="527:14" pos:end="527:20">OPC_MUL</name></expr>:</case>

            <expr_stmt pos:start="529:13" pos:end="529:44"><expr pos:start="529:13" pos:end="529:43"><call pos:start="529:13" pos:end="529:43"><name pos:start="529:13" pos:end="529:21">gen_arith</name><argument_list pos:start="529:22" pos:end="529:43">(<argument pos:start="529:23" pos:end="529:25"><expr pos:start="529:23" pos:end="529:25"><name pos:start="529:23" pos:end="529:25">ctx</name></expr></argument>, <argument pos:start="529:28" pos:end="529:30"><expr pos:start="529:28" pos:end="529:30"><name pos:start="529:28" pos:end="529:30">op1</name></expr></argument>, <argument pos:start="529:33" pos:end="529:34"><expr pos:start="529:33" pos:end="529:34"><name pos:start="529:33" pos:end="529:34">rd</name></expr></argument>, <argument pos:start="529:37" pos:end="529:38"><expr pos:start="529:37" pos:end="529:38"><name pos:start="529:37" pos:end="529:38">rs</name></expr></argument>, <argument pos:start="529:41" pos:end="529:42"><expr pos:start="529:41" pos:end="529:42"><name pos:start="529:41" pos:end="529:42">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="531:13" pos:end="531:18">break;</break>

        <case pos:start="533:9" pos:end="533:21">case <expr pos:start="533:14" pos:end="533:20"><name pos:start="533:14" pos:end="533:20">OPC_CLO</name></expr>:</case>

        <case pos:start="535:9" pos:end="535:21">case <expr pos:start="535:14" pos:end="535:20"><name pos:start="535:14" pos:end="535:20">OPC_CLZ</name></expr>:</case>

            <expr_stmt pos:start="537:13" pos:end="537:40"><expr pos:start="537:13" pos:end="537:39"><call pos:start="537:13" pos:end="537:39"><name pos:start="537:13" pos:end="537:22">check_insn</name><argument_list pos:start="537:23" pos:end="537:39">(<argument pos:start="537:24" pos:end="537:26"><expr pos:start="537:24" pos:end="537:26"><name pos:start="537:24" pos:end="537:26">ctx</name></expr></argument>, <argument pos:start="537:29" pos:end="537:38"><expr pos:start="537:29" pos:end="537:38"><name pos:start="537:29" pos:end="537:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="539:13" pos:end="539:37"><expr pos:start="539:13" pos:end="539:36"><call pos:start="539:13" pos:end="539:36"><name pos:start="539:13" pos:end="539:18">gen_cl</name><argument_list pos:start="539:19" pos:end="539:36">(<argument pos:start="539:20" pos:end="539:22"><expr pos:start="539:20" pos:end="539:22"><name pos:start="539:20" pos:end="539:22">ctx</name></expr></argument>, <argument pos:start="539:25" pos:end="539:27"><expr pos:start="539:25" pos:end="539:27"><name pos:start="539:25" pos:end="539:27">op1</name></expr></argument>, <argument pos:start="539:30" pos:end="539:31"><expr pos:start="539:30" pos:end="539:31"><name pos:start="539:30" pos:end="539:31">rd</name></expr></argument>, <argument pos:start="539:34" pos:end="539:35"><expr pos:start="539:34" pos:end="539:35"><name pos:start="539:34" pos:end="539:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="541:13" pos:end="541:18">break;</break>

        <case pos:start="543:9" pos:end="543:23">case <expr pos:start="543:14" pos:end="543:22"><name pos:start="543:14" pos:end="543:22">OPC_SDBBP</name></expr>:</case>

            <comment type="block" pos:start="545:13" pos:end="549:15">/* XXX: not clear which exception should be raised

             *      when in debug mode...

             */</comment>

            <expr_stmt pos:start="551:13" pos:end="551:40"><expr pos:start="551:13" pos:end="551:39"><call pos:start="551:13" pos:end="551:39"><name pos:start="551:13" pos:end="551:22">check_insn</name><argument_list pos:start="551:23" pos:end="551:39">(<argument pos:start="551:24" pos:end="551:26"><expr pos:start="551:24" pos:end="551:26"><name pos:start="551:24" pos:end="551:26">ctx</name></expr></argument>, <argument pos:start="551:29" pos:end="551:38"><expr pos:start="551:29" pos:end="551:38"><name pos:start="551:29" pos:end="551:38">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="553:13" pos:end="561:13"><if pos:start="553:13" pos:end="557:13">if <condition pos:start="553:16" pos:end="553:47">(<expr pos:start="553:17" pos:end="553:46"><operator pos:start="553:17" pos:end="553:17">!</operator><operator pos:start="553:18" pos:end="553:18">(</operator><name pos:start="553:19" pos:end="553:29"><name pos:start="553:19" pos:end="553:21">ctx</name><operator pos:start="553:22" pos:end="553:23">-&gt;</operator><name pos:start="553:24" pos:end="553:29">hflags</name></name> <operator pos:start="553:31" pos:end="553:31">&amp;</operator> <name pos:start="553:33" pos:end="553:45">MIPS_HFLAG_DM</name><operator pos:start="553:46" pos:end="553:46">)</operator></expr>)</condition> <block pos:start="553:49" pos:end="557:13">{<block_content pos:start="555:17" pos:end="555:50">

                <expr_stmt pos:start="555:17" pos:end="555:50"><expr pos:start="555:17" pos:end="555:49"><call pos:start="555:17" pos:end="555:49"><name pos:start="555:17" pos:end="555:34">generate_exception</name><argument_list pos:start="555:35" pos:end="555:49">(<argument pos:start="555:36" pos:end="555:38"><expr pos:start="555:36" pos:end="555:38"><name pos:start="555:36" pos:end="555:38">ctx</name></expr></argument>, <argument pos:start="555:41" pos:end="555:48"><expr pos:start="555:41" pos:end="555:48"><name pos:start="555:41" pos:end="555:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="557:15" pos:end="561:13">else <block pos:start="557:20" pos:end="561:13">{<block_content pos:start="559:17" pos:end="559:50">

                <expr_stmt pos:start="559:17" pos:end="559:50"><expr pos:start="559:17" pos:end="559:49"><call pos:start="559:17" pos:end="559:49"><name pos:start="559:17" pos:end="559:34">generate_exception</name><argument_list pos:start="559:35" pos:end="559:49">(<argument pos:start="559:36" pos:end="559:38"><expr pos:start="559:36" pos:end="559:38"><name pos:start="559:36" pos:end="559:38">ctx</name></expr></argument>, <argument pos:start="559:41" pos:end="559:48"><expr pos:start="559:41" pos:end="559:48"><name pos:start="559:41" pos:end="559:48">EXCP_DBp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="563:13" pos:end="563:31">/* Treat as NOP. */</comment>

            <break pos:start="565:13" pos:end="565:18">break;</break>

        <case pos:start="567:9" pos:end="567:26">case <expr pos:start="567:14" pos:end="567:25"><name pos:start="567:14" pos:end="567:25">OPC_DIV_G_2F</name></expr>:</case>

        <case pos:start="569:9" pos:end="569:27">case <expr pos:start="569:14" pos:end="569:26"><name pos:start="569:14" pos:end="569:26">OPC_DIVU_G_2F</name></expr>:</case>

        <case pos:start="571:9" pos:end="571:27">case <expr pos:start="571:14" pos:end="571:26"><name pos:start="571:14" pos:end="571:26">OPC_MULT_G_2F</name></expr>:</case>

        <case pos:start="573:9" pos:end="573:28">case <expr pos:start="573:14" pos:end="573:27"><name pos:start="573:14" pos:end="573:27">OPC_MULTU_G_2F</name></expr>:</case>

        <case pos:start="575:9" pos:end="575:26">case <expr pos:start="575:14" pos:end="575:25"><name pos:start="575:14" pos:end="575:25">OPC_MOD_G_2F</name></expr>:</case>

        <case pos:start="577:9" pos:end="577:27">case <expr pos:start="577:14" pos:end="577:26"><name pos:start="577:14" pos:end="577:26">OPC_MODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="579:13" pos:end="579:45"><expr pos:start="579:13" pos:end="579:44"><call pos:start="579:13" pos:end="579:44"><name pos:start="579:13" pos:end="579:22">check_insn</name><argument_list pos:start="579:23" pos:end="579:44">(<argument pos:start="579:24" pos:end="579:26"><expr pos:start="579:24" pos:end="579:26"><name pos:start="579:24" pos:end="579:26">ctx</name></expr></argument>, <argument pos:start="579:29" pos:end="579:43"><expr pos:start="579:29" pos:end="579:43"><name pos:start="579:29" pos:end="579:43">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="581:13" pos:end="581:55"><expr pos:start="581:13" pos:end="581:54"><call pos:start="581:13" pos:end="581:54"><name pos:start="581:13" pos:end="581:32">gen_loongson_integer</name><argument_list pos:start="581:33" pos:end="581:54">(<argument pos:start="581:34" pos:end="581:36"><expr pos:start="581:34" pos:end="581:36"><name pos:start="581:34" pos:end="581:36">ctx</name></expr></argument>, <argument pos:start="581:39" pos:end="581:41"><expr pos:start="581:39" pos:end="581:41"><name pos:start="581:39" pos:end="581:41">op1</name></expr></argument>, <argument pos:start="581:44" pos:end="581:45"><expr pos:start="581:44" pos:end="581:45"><name pos:start="581:44" pos:end="581:45">rd</name></expr></argument>, <argument pos:start="581:48" pos:end="581:49"><expr pos:start="581:48" pos:end="581:49"><name pos:start="581:48" pos:end="581:49">rs</name></expr></argument>, <argument pos:start="581:52" pos:end="581:53"><expr pos:start="581:52" pos:end="581:53"><name pos:start="581:52" pos:end="581:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="583:13" pos:end="586:0">break;</break>

<cpp:if pos:start="585:1" pos:end="585:26">#<cpp:directive pos:start="585:2" pos:end="585:3">if</cpp:directive> <expr pos:start="585:5" pos:end="585:26"><call pos:start="585:5" pos:end="585:26"><name pos:start="585:5" pos:end="585:11">defined</name><argument_list pos:start="585:12" pos:end="585:26">(<argument pos:start="585:13" pos:end="585:25"><expr pos:start="585:13" pos:end="585:25"><name pos:start="585:13" pos:end="585:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="587:9" pos:end="587:22">case <expr pos:start="587:14" pos:end="587:21"><name pos:start="587:14" pos:end="587:21">OPC_DCLO</name></expr>:</case>

        <case pos:start="589:9" pos:end="589:22">case <expr pos:start="589:14" pos:end="589:21"><name pos:start="589:14" pos:end="589:21">OPC_DCLZ</name></expr>:</case>

            <expr_stmt pos:start="591:13" pos:end="591:40"><expr pos:start="591:13" pos:end="591:39"><call pos:start="591:13" pos:end="591:39"><name pos:start="591:13" pos:end="591:22">check_insn</name><argument_list pos:start="591:23" pos:end="591:39">(<argument pos:start="591:24" pos:end="591:26"><expr pos:start="591:24" pos:end="591:26"><name pos:start="591:24" pos:end="591:26">ctx</name></expr></argument>, <argument pos:start="591:29" pos:end="591:38"><expr pos:start="591:29" pos:end="591:38"><name pos:start="591:29" pos:end="591:38">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:31"><expr pos:start="593:13" pos:end="593:30"><call pos:start="593:13" pos:end="593:30"><name pos:start="593:13" pos:end="593:25">check_mips_64</name><argument_list pos:start="593:26" pos:end="593:30">(<argument pos:start="593:27" pos:end="593:29"><expr pos:start="593:27" pos:end="593:29"><name pos:start="593:27" pos:end="593:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:37"><expr pos:start="595:13" pos:end="595:36"><call pos:start="595:13" pos:end="595:36"><name pos:start="595:13" pos:end="595:18">gen_cl</name><argument_list pos:start="595:19" pos:end="595:36">(<argument pos:start="595:20" pos:end="595:22"><expr pos:start="595:20" pos:end="595:22"><name pos:start="595:20" pos:end="595:22">ctx</name></expr></argument>, <argument pos:start="595:25" pos:end="595:27"><expr pos:start="595:25" pos:end="595:27"><name pos:start="595:25" pos:end="595:27">op1</name></expr></argument>, <argument pos:start="595:30" pos:end="595:31"><expr pos:start="595:30" pos:end="595:31"><name pos:start="595:30" pos:end="595:31">rd</name></expr></argument>, <argument pos:start="595:34" pos:end="595:35"><expr pos:start="595:34" pos:end="595:35"><name pos:start="595:34" pos:end="595:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="597:13" pos:end="597:18">break;</break>

        <case pos:start="599:9" pos:end="599:28">case <expr pos:start="599:14" pos:end="599:27"><name pos:start="599:14" pos:end="599:27">OPC_DMULT_G_2F</name></expr>:</case>

        <case pos:start="601:9" pos:end="601:29">case <expr pos:start="601:14" pos:end="601:28"><name pos:start="601:14" pos:end="601:28">OPC_DMULTU_G_2F</name></expr>:</case>

        <case pos:start="603:9" pos:end="603:27">case <expr pos:start="603:14" pos:end="603:26"><name pos:start="603:14" pos:end="603:26">OPC_DDIV_G_2F</name></expr>:</case>

        <case pos:start="605:9" pos:end="605:28">case <expr pos:start="605:14" pos:end="605:27"><name pos:start="605:14" pos:end="605:27">OPC_DDIVU_G_2F</name></expr>:</case>

        <case pos:start="607:9" pos:end="607:27">case <expr pos:start="607:14" pos:end="607:26"><name pos:start="607:14" pos:end="607:26">OPC_DMOD_G_2F</name></expr>:</case>

        <case pos:start="609:9" pos:end="609:28">case <expr pos:start="609:14" pos:end="609:27"><name pos:start="609:14" pos:end="609:27">OPC_DMODU_G_2F</name></expr>:</case>

            <expr_stmt pos:start="611:13" pos:end="611:45"><expr pos:start="611:13" pos:end="611:44"><call pos:start="611:13" pos:end="611:44"><name pos:start="611:13" pos:end="611:22">check_insn</name><argument_list pos:start="611:23" pos:end="611:44">(<argument pos:start="611:24" pos:end="611:26"><expr pos:start="611:24" pos:end="611:26"><name pos:start="611:24" pos:end="611:26">ctx</name></expr></argument>, <argument pos:start="611:29" pos:end="611:43"><expr pos:start="611:29" pos:end="611:43"><name pos:start="611:29" pos:end="611:43">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:55"><expr pos:start="613:13" pos:end="613:54"><call pos:start="613:13" pos:end="613:54"><name pos:start="613:13" pos:end="613:32">gen_loongson_integer</name><argument_list pos:start="613:33" pos:end="613:54">(<argument pos:start="613:34" pos:end="613:36"><expr pos:start="613:34" pos:end="613:36"><name pos:start="613:34" pos:end="613:36">ctx</name></expr></argument>, <argument pos:start="613:39" pos:end="613:41"><expr pos:start="613:39" pos:end="613:41"><name pos:start="613:39" pos:end="613:41">op1</name></expr></argument>, <argument pos:start="613:44" pos:end="613:45"><expr pos:start="613:44" pos:end="613:45"><name pos:start="613:44" pos:end="613:45">rd</name></expr></argument>, <argument pos:start="613:48" pos:end="613:49"><expr pos:start="613:48" pos:end="613:49"><name pos:start="613:48" pos:end="613:49">rs</name></expr></argument>, <argument pos:start="613:52" pos:end="613:53"><expr pos:start="613:52" pos:end="613:53"><name pos:start="613:52" pos:end="613:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="615:13" pos:end="618:0">break;</break>

<cpp:endif pos:start="617:1" pos:end="617:6">#<cpp:directive pos:start="617:2" pos:end="617:6">endif</cpp:directive></cpp:endif>

        <default pos:start="619:9" pos:end="619:16">default:</default>            <comment type="block" pos:start="619:29" pos:end="619:41">/* Invalid */</comment>

            <expr_stmt pos:start="621:13" pos:end="621:35"><expr pos:start="621:13" pos:end="621:34"><call pos:start="621:13" pos:end="621:34"><name pos:start="621:13" pos:end="621:22">MIPS_INVAL</name><argument_list pos:start="621:23" pos:end="621:34">(<argument pos:start="621:24" pos:end="621:33"><expr pos:start="621:24" pos:end="621:33"><literal type="string" pos:start="621:24" pos:end="621:33">"special2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="623:45"><expr pos:start="623:13" pos:end="623:44"><call pos:start="623:13" pos:end="623:44"><name pos:start="623:13" pos:end="623:30">generate_exception</name><argument_list pos:start="623:31" pos:end="623:44">(<argument pos:start="623:32" pos:end="623:34"><expr pos:start="623:32" pos:end="623:34"><name pos:start="623:32" pos:end="623:34">ctx</name></expr></argument>, <argument pos:start="623:37" pos:end="623:43"><expr pos:start="623:37" pos:end="623:43"><name pos:start="623:37" pos:end="623:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="625:13" pos:end="625:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="629:9" pos:end="629:14">break;</break>

    <case pos:start="631:5" pos:end="631:22">case <expr pos:start="631:10" pos:end="631:21"><name pos:start="631:10" pos:end="631:21">OPC_SPECIAL3</name></expr>:</case>

        <expr_stmt pos:start="633:9" pos:end="633:41"><expr pos:start="633:9" pos:end="633:40"><name pos:start="633:9" pos:end="633:11">op1</name> <operator pos:start="633:13" pos:end="633:13">=</operator> <call pos:start="633:15" pos:end="633:40"><name pos:start="633:15" pos:end="633:27">MASK_SPECIAL3</name><argument_list pos:start="633:28" pos:end="633:40">(<argument pos:start="633:29" pos:end="633:39"><expr pos:start="633:29" pos:end="633:39"><name pos:start="633:29" pos:end="633:39"><name pos:start="633:29" pos:end="633:31">ctx</name><operator pos:start="633:32" pos:end="633:33">-&gt;</operator><name pos:start="633:34" pos:end="633:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="635:9" pos:end="1747:9">switch <condition pos:start="635:16" pos:end="635:20">(<expr pos:start="635:17" pos:end="635:19"><name pos:start="635:17" pos:end="635:19">op1</name></expr>)</condition> <block pos:start="635:22" pos:end="1747:9">{<block_content pos:start="637:9" pos:end="1745:18">

        <case pos:start="637:9" pos:end="637:21">case <expr pos:start="637:14" pos:end="637:20"><name pos:start="637:14" pos:end="637:20">OPC_EXT</name></expr>:</case>

        <case pos:start="639:9" pos:end="639:21">case <expr pos:start="639:14" pos:end="639:20"><name pos:start="639:14" pos:end="639:20">OPC_INS</name></expr>:</case>

            <expr_stmt pos:start="641:13" pos:end="641:42"><expr pos:start="641:13" pos:end="641:41"><call pos:start="641:13" pos:end="641:41"><name pos:start="641:13" pos:end="641:22">check_insn</name><argument_list pos:start="641:23" pos:end="641:41">(<argument pos:start="641:24" pos:end="641:26"><expr pos:start="641:24" pos:end="641:26"><name pos:start="641:24" pos:end="641:26">ctx</name></expr></argument>, <argument pos:start="641:29" pos:end="641:40"><expr pos:start="641:29" pos:end="641:40"><name pos:start="641:29" pos:end="641:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="643:13" pos:end="643:49"><expr pos:start="643:13" pos:end="643:48"><call pos:start="643:13" pos:end="643:48"><name pos:start="643:13" pos:end="643:22">gen_bitops</name><argument_list pos:start="643:23" pos:end="643:48">(<argument pos:start="643:24" pos:end="643:26"><expr pos:start="643:24" pos:end="643:26"><name pos:start="643:24" pos:end="643:26">ctx</name></expr></argument>, <argument pos:start="643:29" pos:end="643:31"><expr pos:start="643:29" pos:end="643:31"><name pos:start="643:29" pos:end="643:31">op1</name></expr></argument>, <argument pos:start="643:34" pos:end="643:35"><expr pos:start="643:34" pos:end="643:35"><name pos:start="643:34" pos:end="643:35">rt</name></expr></argument>, <argument pos:start="643:38" pos:end="643:39"><expr pos:start="643:38" pos:end="643:39"><name pos:start="643:38" pos:end="643:39">rs</name></expr></argument>, <argument pos:start="643:42" pos:end="643:43"><expr pos:start="643:42" pos:end="643:43"><name pos:start="643:42" pos:end="643:43">sa</name></expr></argument>, <argument pos:start="643:46" pos:end="643:47"><expr pos:start="643:46" pos:end="643:47"><name pos:start="643:46" pos:end="643:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="645:13" pos:end="645:18">break;</break>

        <case pos:start="647:9" pos:end="647:23">case <expr pos:start="647:14" pos:end="647:22"><name pos:start="647:14" pos:end="647:22">OPC_BSHFL</name></expr>:</case>

            <expr_stmt pos:start="649:13" pos:end="649:42"><expr pos:start="649:13" pos:end="649:41"><call pos:start="649:13" pos:end="649:41"><name pos:start="649:13" pos:end="649:22">check_insn</name><argument_list pos:start="649:23" pos:end="649:41">(<argument pos:start="649:24" pos:end="649:26"><expr pos:start="649:24" pos:end="649:26"><name pos:start="649:24" pos:end="649:26">ctx</name></expr></argument>, <argument pos:start="649:29" pos:end="649:40"><expr pos:start="649:29" pos:end="649:40"><name pos:start="649:29" pos:end="649:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="651:13" pos:end="651:42"><expr pos:start="651:13" pos:end="651:41"><name pos:start="651:13" pos:end="651:15">op2</name> <operator pos:start="651:17" pos:end="651:17">=</operator> <call pos:start="651:19" pos:end="651:41"><name pos:start="651:19" pos:end="651:28">MASK_BSHFL</name><argument_list pos:start="651:29" pos:end="651:41">(<argument pos:start="651:30" pos:end="651:40"><expr pos:start="651:30" pos:end="651:40"><name pos:start="651:30" pos:end="651:40"><name pos:start="651:30" pos:end="651:32">ctx</name><operator pos:start="651:33" pos:end="651:34">-&gt;</operator><name pos:start="651:35" pos:end="651:40">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:40"><expr pos:start="653:13" pos:end="653:39"><call pos:start="653:13" pos:end="653:39"><name pos:start="653:13" pos:end="653:21">gen_bshfl</name><argument_list pos:start="653:22" pos:end="653:39">(<argument pos:start="653:23" pos:end="653:25"><expr pos:start="653:23" pos:end="653:25"><name pos:start="653:23" pos:end="653:25">ctx</name></expr></argument>, <argument pos:start="653:28" pos:end="653:30"><expr pos:start="653:28" pos:end="653:30"><name pos:start="653:28" pos:end="653:30">op2</name></expr></argument>, <argument pos:start="653:33" pos:end="653:34"><expr pos:start="653:33" pos:end="653:34"><name pos:start="653:33" pos:end="653:34">rt</name></expr></argument>, <argument pos:start="653:37" pos:end="653:38"><expr pos:start="653:37" pos:end="653:38"><name pos:start="653:37" pos:end="653:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="655:13" pos:end="655:18">break;</break>

        <case pos:start="657:9" pos:end="657:23">case <expr pos:start="657:14" pos:end="657:22"><name pos:start="657:14" pos:end="657:22">OPC_RDHWR</name></expr>:</case>

            <expr_stmt pos:start="659:13" pos:end="659:35"><expr pos:start="659:13" pos:end="659:34"><call pos:start="659:13" pos:end="659:34"><name pos:start="659:13" pos:end="659:21">gen_rdhwr</name><argument_list pos:start="659:22" pos:end="659:34">(<argument pos:start="659:23" pos:end="659:25"><expr pos:start="659:23" pos:end="659:25"><name pos:start="659:23" pos:end="659:25">ctx</name></expr></argument>, <argument pos:start="659:28" pos:end="659:29"><expr pos:start="659:28" pos:end="659:29"><name pos:start="659:28" pos:end="659:29">rt</name></expr></argument>, <argument pos:start="659:32" pos:end="659:33"><expr pos:start="659:32" pos:end="659:33"><name pos:start="659:32" pos:end="659:33">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="661:13" pos:end="661:18">break;</break>

        <case pos:start="663:9" pos:end="663:22">case <expr pos:start="663:14" pos:end="663:21"><name pos:start="663:14" pos:end="663:21">OPC_FORK</name></expr>:</case>

            <expr_stmt pos:start="665:13" pos:end="665:36"><expr pos:start="665:13" pos:end="665:35"><call pos:start="665:13" pos:end="665:35"><name pos:start="665:13" pos:end="665:22">check_insn</name><argument_list pos:start="665:23" pos:end="665:35">(<argument pos:start="665:24" pos:end="665:26"><expr pos:start="665:24" pos:end="665:26"><name pos:start="665:24" pos:end="665:26">ctx</name></expr></argument>, <argument pos:start="665:29" pos:end="665:34"><expr pos:start="665:29" pos:end="665:34"><name pos:start="665:29" pos:end="665:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="667:13" pos:end="685:13">{<block_content pos:start="669:17" pos:end="683:34">

                <decl_stmt pos:start="669:17" pos:end="669:41"><decl pos:start="669:17" pos:end="669:40"><type pos:start="669:17" pos:end="669:20"><name pos:start="669:17" pos:end="669:20">TCGv</name></type> <name pos:start="669:22" pos:end="669:23">t0</name> <init pos:start="669:25" pos:end="669:40">= <expr pos:start="669:27" pos:end="669:40"><call pos:start="669:27" pos:end="669:40"><name pos:start="669:27" pos:end="669:38">tcg_temp_new</name><argument_list pos:start="669:39" pos:end="669:40">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="671:17" pos:end="671:41"><decl pos:start="671:17" pos:end="671:40"><type pos:start="671:17" pos:end="671:20"><name pos:start="671:17" pos:end="671:20">TCGv</name></type> <name pos:start="671:22" pos:end="671:23">t1</name> <init pos:start="671:25" pos:end="671:40">= <expr pos:start="671:27" pos:end="671:40"><call pos:start="671:27" pos:end="671:40"><name pos:start="671:27" pos:end="671:38">tcg_temp_new</name><argument_list pos:start="671:39" pos:end="671:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="675:17" pos:end="675:37"><expr pos:start="675:17" pos:end="675:36"><call pos:start="675:17" pos:end="675:36"><name pos:start="675:17" pos:end="675:28">gen_load_gpr</name><argument_list pos:start="675:29" pos:end="675:36">(<argument pos:start="675:30" pos:end="675:31"><expr pos:start="675:30" pos:end="675:31"><name pos:start="675:30" pos:end="675:31">t0</name></expr></argument>, <argument pos:start="675:34" pos:end="675:35"><expr pos:start="675:34" pos:end="675:35"><name pos:start="675:34" pos:end="675:35">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="677:17" pos:end="677:37"><expr pos:start="677:17" pos:end="677:36"><call pos:start="677:17" pos:end="677:36"><name pos:start="677:17" pos:end="677:28">gen_load_gpr</name><argument_list pos:start="677:29" pos:end="677:36">(<argument pos:start="677:30" pos:end="677:31"><expr pos:start="677:30" pos:end="677:31"><name pos:start="677:30" pos:end="677:31">t1</name></expr></argument>, <argument pos:start="677:34" pos:end="677:35"><expr pos:start="677:34" pos:end="677:35"><name pos:start="677:34" pos:end="677:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="679:17" pos:end="679:40"><expr pos:start="679:17" pos:end="679:39"><call pos:start="679:17" pos:end="679:39"><name pos:start="679:17" pos:end="679:31">gen_helper_fork</name><argument_list pos:start="679:32" pos:end="679:39">(<argument pos:start="679:33" pos:end="679:34"><expr pos:start="679:33" pos:end="679:34"><name pos:start="679:33" pos:end="679:34">t0</name></expr></argument>, <argument pos:start="679:37" pos:end="679:38"><expr pos:start="679:37" pos:end="679:38"><name pos:start="679:37" pos:end="679:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="681:17" pos:end="681:34"><expr pos:start="681:17" pos:end="681:33"><call pos:start="681:17" pos:end="681:33"><name pos:start="681:17" pos:end="681:29">tcg_temp_free</name><argument_list pos:start="681:30" pos:end="681:33">(<argument pos:start="681:31" pos:end="681:32"><expr pos:start="681:31" pos:end="681:32"><name pos:start="681:31" pos:end="681:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="683:17" pos:end="683:34"><expr pos:start="683:17" pos:end="683:33"><call pos:start="683:17" pos:end="683:33"><name pos:start="683:17" pos:end="683:29">tcg_temp_free</name><argument_list pos:start="683:30" pos:end="683:33">(<argument pos:start="683:31" pos:end="683:32"><expr pos:start="683:31" pos:end="683:32"><name pos:start="683:31" pos:end="683:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="687:13" pos:end="687:18">break;</break>

        <case pos:start="689:9" pos:end="689:23">case <expr pos:start="689:14" pos:end="689:22"><name pos:start="689:14" pos:end="689:22">OPC_YIELD</name></expr>:</case>

            <expr_stmt pos:start="691:13" pos:end="691:36"><expr pos:start="691:13" pos:end="691:35"><call pos:start="691:13" pos:end="691:35"><name pos:start="691:13" pos:end="691:22">check_insn</name><argument_list pos:start="691:23" pos:end="691:35">(<argument pos:start="691:24" pos:end="691:26"><expr pos:start="691:24" pos:end="691:26"><name pos:start="691:24" pos:end="691:26">ctx</name></expr></argument>, <argument pos:start="691:29" pos:end="691:34"><expr pos:start="691:29" pos:end="691:34"><name pos:start="691:29" pos:end="691:34">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="693:13" pos:end="709:13">{<block_content pos:start="695:17" pos:end="707:34">

                <decl_stmt pos:start="695:17" pos:end="695:41"><decl pos:start="695:17" pos:end="695:40"><type pos:start="695:17" pos:end="695:20"><name pos:start="695:17" pos:end="695:20">TCGv</name></type> <name pos:start="695:22" pos:end="695:23">t0</name> <init pos:start="695:25" pos:end="695:40">= <expr pos:start="695:27" pos:end="695:40"><call pos:start="695:27" pos:end="695:40"><name pos:start="695:27" pos:end="695:38">tcg_temp_new</name><argument_list pos:start="695:39" pos:end="695:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="699:17" pos:end="699:39"><expr pos:start="699:17" pos:end="699:38"><call pos:start="699:17" pos:end="699:38"><name pos:start="699:17" pos:end="699:30">save_cpu_state</name><argument_list pos:start="699:31" pos:end="699:38">(<argument pos:start="699:32" pos:end="699:34"><expr pos:start="699:32" pos:end="699:34"><name pos:start="699:32" pos:end="699:34">ctx</name></expr></argument>, <argument pos:start="699:37" pos:end="699:37"><expr pos:start="699:37" pos:end="699:37"><literal type="number" pos:start="699:37" pos:end="699:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="701:17" pos:end="701:37"><expr pos:start="701:17" pos:end="701:36"><call pos:start="701:17" pos:end="701:36"><name pos:start="701:17" pos:end="701:28">gen_load_gpr</name><argument_list pos:start="701:29" pos:end="701:36">(<argument pos:start="701:30" pos:end="701:31"><expr pos:start="701:30" pos:end="701:31"><name pos:start="701:30" pos:end="701:31">t0</name></expr></argument>, <argument pos:start="701:34" pos:end="701:35"><expr pos:start="701:34" pos:end="701:35"><name pos:start="701:34" pos:end="701:35">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="703:17" pos:end="703:50"><expr pos:start="703:17" pos:end="703:49"><call pos:start="703:17" pos:end="703:49"><name pos:start="703:17" pos:end="703:32">gen_helper_yield</name><argument_list pos:start="703:33" pos:end="703:49">(<argument pos:start="703:34" pos:end="703:35"><expr pos:start="703:34" pos:end="703:35"><name pos:start="703:34" pos:end="703:35">t0</name></expr></argument>, <argument pos:start="703:38" pos:end="703:44"><expr pos:start="703:38" pos:end="703:44"><name pos:start="703:38" pos:end="703:44">cpu_env</name></expr></argument>, <argument pos:start="703:47" pos:end="703:48"><expr pos:start="703:47" pos:end="703:48"><name pos:start="703:47" pos:end="703:48">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="705:17" pos:end="705:38"><expr pos:start="705:17" pos:end="705:37"><call pos:start="705:17" pos:end="705:37"><name pos:start="705:17" pos:end="705:29">gen_store_gpr</name><argument_list pos:start="705:30" pos:end="705:37">(<argument pos:start="705:31" pos:end="705:32"><expr pos:start="705:31" pos:end="705:32"><name pos:start="705:31" pos:end="705:32">t0</name></expr></argument>, <argument pos:start="705:35" pos:end="705:36"><expr pos:start="705:35" pos:end="705:36"><name pos:start="705:35" pos:end="705:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="707:17" pos:end="707:34"><expr pos:start="707:17" pos:end="707:33"><call pos:start="707:17" pos:end="707:33"><name pos:start="707:17" pos:end="707:29">tcg_temp_free</name><argument_list pos:start="707:30" pos:end="707:33">(<argument pos:start="707:31" pos:end="707:32"><expr pos:start="707:31" pos:end="707:32"><name pos:start="707:31" pos:end="707:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="711:13" pos:end="711:18">break;</break>

        <case pos:start="713:9" pos:end="713:44">case <expr pos:start="713:14" pos:end="713:43"><name pos:start="713:14" pos:end="713:25">OPC_DIV_G_2E</name> <operator pos:start="713:27" pos:end="713:29">...</operator> <name pos:start="713:31" pos:end="713:43">OPC_DIVU_G_2E</name></expr>:</case>

        <case pos:start="715:9" pos:end="715:44">case <expr pos:start="715:14" pos:end="715:43"><name pos:start="715:14" pos:end="715:25">OPC_MOD_G_2E</name> <operator pos:start="715:27" pos:end="715:29">...</operator> <name pos:start="715:31" pos:end="715:43">OPC_MODU_G_2E</name></expr>:</case>

        <case pos:start="717:9" pos:end="717:46">case <expr pos:start="717:14" pos:end="717:45"><name pos:start="717:14" pos:end="717:26">OPC_MULT_G_2E</name> <operator pos:start="717:28" pos:end="717:30">...</operator> <name pos:start="717:32" pos:end="717:45">OPC_MULTU_G_2E</name></expr>:</case>

        <comment type="block" pos:start="719:9" pos:end="721:36">/* OPC_MULT_G_2E, OPC_ADDUH_QB_DSP, OPC_MUL_PH_DSP have

         * the same mask and op1. */</comment>

            <if_stmt pos:start="723:13" pos:end="787:13"><if pos:start="723:13" pos:end="779:13">if <condition pos:start="723:16" pos:end="723:72">(<expr pos:start="723:17" pos:end="723:71"><operator pos:start="723:17" pos:end="723:17">(</operator><name pos:start="723:18" pos:end="723:32"><name pos:start="723:18" pos:end="723:20">ctx</name><operator pos:start="723:21" pos:end="723:22">-&gt;</operator><name pos:start="723:23" pos:end="723:32">insn_flags</name></name> <operator pos:start="723:34" pos:end="723:34">&amp;</operator> <name pos:start="723:36" pos:end="723:44">ASE_DSPR2</name><operator pos:start="723:45" pos:end="723:45">)</operator> <operator pos:start="723:47" pos:end="723:48">&amp;&amp;</operator> <operator pos:start="723:50" pos:end="723:50">(</operator><name pos:start="723:51" pos:end="723:53">op1</name> <operator pos:start="723:55" pos:end="723:56">==</operator> <name pos:start="723:58" pos:end="723:70">OPC_MULT_G_2E</name><operator pos:start="723:71" pos:end="723:71">)</operator></expr>)</condition> <block pos:start="723:74" pos:end="779:13">{<block_content pos:start="725:17" pos:end="777:17">

                <expr_stmt pos:start="725:17" pos:end="725:49"><expr pos:start="725:17" pos:end="725:48"><name pos:start="725:17" pos:end="725:19">op2</name> <operator pos:start="725:21" pos:end="725:21">=</operator> <call pos:start="725:23" pos:end="725:48"><name pos:start="725:23" pos:end="725:35">MASK_ADDUH_QB</name><argument_list pos:start="725:36" pos:end="725:48">(<argument pos:start="725:37" pos:end="725:47"><expr pos:start="725:37" pos:end="725:47"><name pos:start="725:37" pos:end="725:47"><name pos:start="725:37" pos:end="725:39">ctx</name><operator pos:start="725:40" pos:end="725:41">-&gt;</operator><name pos:start="725:42" pos:end="725:47">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="727:17" pos:end="777:17">switch <condition pos:start="727:24" pos:end="727:28">(<expr pos:start="727:25" pos:end="727:27"><name pos:start="727:25" pos:end="727:27">op2</name></expr>)</condition> <block pos:start="727:30" pos:end="777:17">{<block_content pos:start="729:17" pos:end="775:26">

                <case pos:start="729:17" pos:end="729:34">case <expr pos:start="729:22" pos:end="729:33"><name pos:start="729:22" pos:end="729:33">OPC_ADDUH_QB</name></expr>:</case>

                <case pos:start="731:17" pos:end="731:36">case <expr pos:start="731:22" pos:end="731:35"><name pos:start="731:22" pos:end="731:35">OPC_ADDUH_R_QB</name></expr>:</case>

                <case pos:start="733:17" pos:end="733:34">case <expr pos:start="733:22" pos:end="733:33"><name pos:start="733:22" pos:end="733:33">OPC_ADDQH_PH</name></expr>:</case>

                <case pos:start="735:17" pos:end="735:36">case <expr pos:start="735:22" pos:end="735:35"><name pos:start="735:22" pos:end="735:35">OPC_ADDQH_R_PH</name></expr>:</case>

                <case pos:start="737:17" pos:end="737:33">case <expr pos:start="737:22" pos:end="737:32"><name pos:start="737:22" pos:end="737:32">OPC_ADDQH_W</name></expr>:</case>

                <case pos:start="739:17" pos:end="739:35">case <expr pos:start="739:22" pos:end="739:34"><name pos:start="739:22" pos:end="739:34">OPC_ADDQH_R_W</name></expr>:</case>

                <case pos:start="741:17" pos:end="741:34">case <expr pos:start="741:22" pos:end="741:33"><name pos:start="741:22" pos:end="741:33">OPC_SUBUH_QB</name></expr>:</case>

                <case pos:start="743:17" pos:end="743:36">case <expr pos:start="743:22" pos:end="743:35"><name pos:start="743:22" pos:end="743:35">OPC_SUBUH_R_QB</name></expr>:</case>

                <case pos:start="745:17" pos:end="745:34">case <expr pos:start="745:22" pos:end="745:33"><name pos:start="745:22" pos:end="745:33">OPC_SUBQH_PH</name></expr>:</case>

                <case pos:start="747:17" pos:end="747:36">case <expr pos:start="747:22" pos:end="747:35"><name pos:start="747:22" pos:end="747:35">OPC_SUBQH_R_PH</name></expr>:</case>

                <case pos:start="749:17" pos:end="749:33">case <expr pos:start="749:22" pos:end="749:32"><name pos:start="749:22" pos:end="749:32">OPC_SUBQH_W</name></expr>:</case>

                <case pos:start="751:17" pos:end="751:35">case <expr pos:start="751:22" pos:end="751:34"><name pos:start="751:22" pos:end="751:34">OPC_SUBQH_R_W</name></expr>:</case>

                    <expr_stmt pos:start="753:21" pos:end="753:65"><expr pos:start="753:21" pos:end="753:64"><call pos:start="753:21" pos:end="753:64"><name pos:start="753:21" pos:end="753:37">gen_mipsdsp_arith</name><argument_list pos:start="753:38" pos:end="753:64">(<argument pos:start="753:39" pos:end="753:41"><expr pos:start="753:39" pos:end="753:41"><name pos:start="753:39" pos:end="753:41">ctx</name></expr></argument>, <argument pos:start="753:44" pos:end="753:46"><expr pos:start="753:44" pos:end="753:46"><name pos:start="753:44" pos:end="753:46">op1</name></expr></argument>, <argument pos:start="753:49" pos:end="753:51"><expr pos:start="753:49" pos:end="753:51"><name pos:start="753:49" pos:end="753:51">op2</name></expr></argument>, <argument pos:start="753:54" pos:end="753:55"><expr pos:start="753:54" pos:end="753:55"><name pos:start="753:54" pos:end="753:55">rd</name></expr></argument>, <argument pos:start="753:58" pos:end="753:59"><expr pos:start="753:58" pos:end="753:59"><name pos:start="753:58" pos:end="753:59">rs</name></expr></argument>, <argument pos:start="753:62" pos:end="753:63"><expr pos:start="753:62" pos:end="753:63"><name pos:start="753:62" pos:end="753:63">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="755:21" pos:end="755:26">break;</break>

                <case pos:start="757:17" pos:end="757:32">case <expr pos:start="757:22" pos:end="757:31"><name pos:start="757:22" pos:end="757:31">OPC_MUL_PH</name></expr>:</case>

                <case pos:start="759:17" pos:end="759:34">case <expr pos:start="759:22" pos:end="759:33"><name pos:start="759:22" pos:end="759:33">OPC_MUL_S_PH</name></expr>:</case>

                <case pos:start="761:17" pos:end="761:34">case <expr pos:start="761:22" pos:end="761:33"><name pos:start="761:22" pos:end="761:33">OPC_MULQ_S_W</name></expr>:</case>

                <case pos:start="763:17" pos:end="763:35">case <expr pos:start="763:22" pos:end="763:34"><name pos:start="763:22" pos:end="763:34">OPC_MULQ_RS_W</name></expr>:</case>

                    <expr_stmt pos:start="765:21" pos:end="765:71"><expr pos:start="765:21" pos:end="765:70"><call pos:start="765:21" pos:end="765:70"><name pos:start="765:21" pos:end="765:40">gen_mipsdsp_multiply</name><argument_list pos:start="765:41" pos:end="765:70">(<argument pos:start="765:42" pos:end="765:44"><expr pos:start="765:42" pos:end="765:44"><name pos:start="765:42" pos:end="765:44">ctx</name></expr></argument>, <argument pos:start="765:47" pos:end="765:49"><expr pos:start="765:47" pos:end="765:49"><name pos:start="765:47" pos:end="765:49">op1</name></expr></argument>, <argument pos:start="765:52" pos:end="765:54"><expr pos:start="765:52" pos:end="765:54"><name pos:start="765:52" pos:end="765:54">op2</name></expr></argument>, <argument pos:start="765:57" pos:end="765:58"><expr pos:start="765:57" pos:end="765:58"><name pos:start="765:57" pos:end="765:58">rd</name></expr></argument>, <argument pos:start="765:61" pos:end="765:62"><expr pos:start="765:61" pos:end="765:62"><name pos:start="765:61" pos:end="765:62">rs</name></expr></argument>, <argument pos:start="765:65" pos:end="765:66"><expr pos:start="765:65" pos:end="765:66"><name pos:start="765:65" pos:end="765:66">rt</name></expr></argument>, <argument pos:start="765:69" pos:end="765:69"><expr pos:start="765:69" pos:end="765:69"><literal type="number" pos:start="765:69" pos:end="765:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="767:21" pos:end="767:26">break;</break>

                <default pos:start="769:17" pos:end="769:24">default:</default>

                    <expr_stmt pos:start="771:21" pos:end="771:48"><expr pos:start="771:21" pos:end="771:47"><call pos:start="771:21" pos:end="771:47"><name pos:start="771:21" pos:end="771:30">MIPS_INVAL</name><argument_list pos:start="771:31" pos:end="771:47">(<argument pos:start="771:32" pos:end="771:46"><expr pos:start="771:32" pos:end="771:46"><literal type="string" pos:start="771:32" pos:end="771:46">"MASK ADDUH.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="773:21" pos:end="773:53"><expr pos:start="773:21" pos:end="773:52"><call pos:start="773:21" pos:end="773:52"><name pos:start="773:21" pos:end="773:38">generate_exception</name><argument_list pos:start="773:39" pos:end="773:52">(<argument pos:start="773:40" pos:end="773:42"><expr pos:start="773:40" pos:end="773:42"><name pos:start="773:40" pos:end="773:42">ctx</name></expr></argument>, <argument pos:start="773:45" pos:end="773:51"><expr pos:start="773:45" pos:end="773:51"><name pos:start="773:45" pos:end="773:51">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="775:21" pos:end="775:26">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></if> <if type="elseif" pos:start="779:15" pos:end="783:13">else if <condition pos:start="779:23" pos:end="779:57">(<expr pos:start="779:24" pos:end="779:56"><name pos:start="779:24" pos:end="779:38"><name pos:start="779:24" pos:end="779:26">ctx</name><operator pos:start="779:27" pos:end="779:28">-&gt;</operator><name pos:start="779:29" pos:end="779:38">insn_flags</name></name> <operator pos:start="779:40" pos:end="779:40">&amp;</operator> <name pos:start="779:42" pos:end="779:56">INSN_LOONGSON2E</name></expr>)</condition> <block pos:start="779:59" pos:end="783:13">{<block_content pos:start="781:17" pos:end="781:59">

                <expr_stmt pos:start="781:17" pos:end="781:59"><expr pos:start="781:17" pos:end="781:58"><call pos:start="781:17" pos:end="781:58"><name pos:start="781:17" pos:end="781:36">gen_loongson_integer</name><argument_list pos:start="781:37" pos:end="781:58">(<argument pos:start="781:38" pos:end="781:40"><expr pos:start="781:38" pos:end="781:40"><name pos:start="781:38" pos:end="781:40">ctx</name></expr></argument>, <argument pos:start="781:43" pos:end="781:45"><expr pos:start="781:43" pos:end="781:45"><name pos:start="781:43" pos:end="781:45">op1</name></expr></argument>, <argument pos:start="781:48" pos:end="781:49"><expr pos:start="781:48" pos:end="781:49"><name pos:start="781:48" pos:end="781:49">rd</name></expr></argument>, <argument pos:start="781:52" pos:end="781:53"><expr pos:start="781:52" pos:end="781:53"><name pos:start="781:52" pos:end="781:53">rs</name></expr></argument>, <argument pos:start="781:56" pos:end="781:57"><expr pos:start="781:56" pos:end="781:57"><name pos:start="781:56" pos:end="781:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="783:15" pos:end="787:13">else <block pos:start="783:20" pos:end="787:13">{<block_content pos:start="785:17" pos:end="785:49">

                <expr_stmt pos:start="785:17" pos:end="785:49"><expr pos:start="785:17" pos:end="785:48"><call pos:start="785:17" pos:end="785:48"><name pos:start="785:17" pos:end="785:34">generate_exception</name><argument_list pos:start="785:35" pos:end="785:48">(<argument pos:start="785:36" pos:end="785:38"><expr pos:start="785:36" pos:end="785:38"><name pos:start="785:36" pos:end="785:38">ctx</name></expr></argument>, <argument pos:start="785:41" pos:end="785:47"><expr pos:start="785:41" pos:end="785:47"><name pos:start="785:41" pos:end="785:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="789:13" pos:end="789:18">break;</break>

        <case pos:start="791:9" pos:end="791:24">case <expr pos:start="791:14" pos:end="791:23"><name pos:start="791:14" pos:end="791:23">OPC_LX_DSP</name></expr>:</case>

            <expr_stmt pos:start="793:13" pos:end="793:39"><expr pos:start="793:13" pos:end="793:38"><name pos:start="793:13" pos:end="793:15">op2</name> <operator pos:start="793:17" pos:end="793:17">=</operator> <call pos:start="793:19" pos:end="793:38"><name pos:start="793:19" pos:end="793:25">MASK_LX</name><argument_list pos:start="793:26" pos:end="793:38">(<argument pos:start="793:27" pos:end="793:37"><expr pos:start="793:27" pos:end="793:37"><name pos:start="793:27" pos:end="793:37"><name pos:start="793:27" pos:end="793:29">ctx</name><operator pos:start="793:30" pos:end="793:31">-&gt;</operator><name pos:start="793:32" pos:end="793:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="795:13" pos:end="821:13">switch <condition pos:start="795:20" pos:end="795:24">(<expr pos:start="795:21" pos:end="795:23"><name pos:start="795:21" pos:end="795:23">op2</name></expr>)</condition> <block pos:start="795:26" pos:end="821:13">{<block_content pos:start="799:13" pos:end="819:22">

<cpp:if pos:start="797:1" pos:end="797:26">#<cpp:directive pos:start="797:2" pos:end="797:3">if</cpp:directive> <expr pos:start="797:5" pos:end="797:26"><call pos:start="797:5" pos:end="797:26"><name pos:start="797:5" pos:end="797:11">defined</name><argument_list pos:start="797:12" pos:end="797:26">(<argument pos:start="797:13" pos:end="797:25"><expr pos:start="797:13" pos:end="797:25"><name pos:start="797:13" pos:end="797:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="799:13" pos:end="802:0">case <expr pos:start="799:18" pos:end="799:24"><name pos:start="799:18" pos:end="799:24">OPC_LDX</name></expr>:</case>

<cpp:endif pos:start="801:1" pos:end="801:6">#<cpp:directive pos:start="801:2" pos:end="801:6">endif</cpp:directive></cpp:endif>

            <case pos:start="803:13" pos:end="803:26">case <expr pos:start="803:18" pos:end="803:25"><name pos:start="803:18" pos:end="803:25">OPC_LBUX</name></expr>:</case>

            <case pos:start="805:13" pos:end="805:25">case <expr pos:start="805:18" pos:end="805:24"><name pos:start="805:18" pos:end="805:24">OPC_LHX</name></expr>:</case>

            <case pos:start="807:13" pos:end="807:25">case <expr pos:start="807:18" pos:end="807:24"><name pos:start="807:18" pos:end="807:24">OPC_LWX</name></expr>:</case>

                <expr_stmt pos:start="809:17" pos:end="809:53"><expr pos:start="809:17" pos:end="809:52"><call pos:start="809:17" pos:end="809:52"><name pos:start="809:17" pos:end="809:30">gen_mipsdsp_ld</name><argument_list pos:start="809:31" pos:end="809:52">(<argument pos:start="809:32" pos:end="809:34"><expr pos:start="809:32" pos:end="809:34"><name pos:start="809:32" pos:end="809:34">ctx</name></expr></argument>, <argument pos:start="809:37" pos:end="809:39"><expr pos:start="809:37" pos:end="809:39"><name pos:start="809:37" pos:end="809:39">op2</name></expr></argument>, <argument pos:start="809:42" pos:end="809:43"><expr pos:start="809:42" pos:end="809:43"><name pos:start="809:42" pos:end="809:43">rd</name></expr></argument>, <argument pos:start="809:46" pos:end="809:47"><expr pos:start="809:46" pos:end="809:47"><name pos:start="809:46" pos:end="809:47">rs</name></expr></argument>, <argument pos:start="809:50" pos:end="809:51"><expr pos:start="809:50" pos:end="809:51"><name pos:start="809:50" pos:end="809:51">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="811:17" pos:end="811:22">break;</break>

            <default pos:start="813:13" pos:end="813:20">default:</default>            <comment type="block" pos:start="813:33" pos:end="813:45">/* Invalid */</comment>

                <expr_stmt pos:start="815:17" pos:end="815:38"><expr pos:start="815:17" pos:end="815:37"><call pos:start="815:17" pos:end="815:37"><name pos:start="815:17" pos:end="815:26">MIPS_INVAL</name><argument_list pos:start="815:27" pos:end="815:37">(<argument pos:start="815:28" pos:end="815:36"><expr pos:start="815:28" pos:end="815:36"><literal type="string" pos:start="815:28" pos:end="815:36">"MASK LX"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="817:17" pos:end="817:49"><expr pos:start="817:17" pos:end="817:48"><call pos:start="817:17" pos:end="817:48"><name pos:start="817:17" pos:end="817:34">generate_exception</name><argument_list pos:start="817:35" pos:end="817:48">(<argument pos:start="817:36" pos:end="817:38"><expr pos:start="817:36" pos:end="817:38"><name pos:start="817:36" pos:end="817:38">ctx</name></expr></argument>, <argument pos:start="817:41" pos:end="817:47"><expr pos:start="817:41" pos:end="817:47"><name pos:start="817:41" pos:end="817:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="819:17" pos:end="819:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="823:13" pos:end="823:18">break;</break>

        <case pos:start="825:9" pos:end="825:31">case <expr pos:start="825:14" pos:end="825:30"><name pos:start="825:14" pos:end="825:30">OPC_ABSQ_S_PH_DSP</name></expr>:</case>

            <expr_stmt pos:start="827:13" pos:end="827:46"><expr pos:start="827:13" pos:end="827:45"><name pos:start="827:13" pos:end="827:15">op2</name> <operator pos:start="827:17" pos:end="827:17">=</operator> <call pos:start="827:19" pos:end="827:45"><name pos:start="827:19" pos:end="827:32">MASK_ABSQ_S_PH</name><argument_list pos:start="827:33" pos:end="827:45">(<argument pos:start="827:34" pos:end="827:44"><expr pos:start="827:34" pos:end="827:44"><name pos:start="827:34" pos:end="827:44"><name pos:start="827:34" pos:end="827:36">ctx</name><operator pos:start="827:37" pos:end="827:38">-&gt;</operator><name pos:start="827:39" pos:end="827:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="829:13" pos:end="883:13">switch <condition pos:start="829:20" pos:end="829:24">(<expr pos:start="829:21" pos:end="829:23"><name pos:start="829:21" pos:end="829:23">op2</name></expr>)</condition> <block pos:start="829:26" pos:end="883:13">{<block_content pos:start="831:13" pos:end="881:22">

            <case pos:start="831:13" pos:end="831:31">case <expr pos:start="831:18" pos:end="831:30"><name pos:start="831:18" pos:end="831:30">OPC_ABSQ_S_QB</name></expr>:</case>

            <case pos:start="833:13" pos:end="833:31">case <expr pos:start="833:18" pos:end="833:30"><name pos:start="833:18" pos:end="833:30">OPC_ABSQ_S_PH</name></expr>:</case>

            <case pos:start="835:13" pos:end="835:30">case <expr pos:start="835:18" pos:end="835:29"><name pos:start="835:18" pos:end="835:29">OPC_ABSQ_S_W</name></expr>:</case>

            <case pos:start="837:13" pos:end="837:34">case <expr pos:start="837:18" pos:end="837:33"><name pos:start="837:18" pos:end="837:33">OPC_PRECEQ_W_PHL</name></expr>:</case>

            <case pos:start="839:13" pos:end="839:34">case <expr pos:start="839:18" pos:end="839:33"><name pos:start="839:18" pos:end="839:33">OPC_PRECEQ_W_PHR</name></expr>:</case>

            <case pos:start="841:13" pos:end="841:36">case <expr pos:start="841:18" pos:end="841:35"><name pos:start="841:18" pos:end="841:35">OPC_PRECEQU_PH_QBL</name></expr>:</case>

            <case pos:start="843:13" pos:end="843:36">case <expr pos:start="843:18" pos:end="843:35"><name pos:start="843:18" pos:end="843:35">OPC_PRECEQU_PH_QBR</name></expr>:</case>

            <case pos:start="845:13" pos:end="845:37">case <expr pos:start="845:18" pos:end="845:36"><name pos:start="845:18" pos:end="845:36">OPC_PRECEQU_PH_QBLA</name></expr>:</case>

            <case pos:start="847:13" pos:end="847:37">case <expr pos:start="847:18" pos:end="847:36"><name pos:start="847:18" pos:end="847:36">OPC_PRECEQU_PH_QBRA</name></expr>:</case>

            <case pos:start="849:13" pos:end="849:35">case <expr pos:start="849:18" pos:end="849:34"><name pos:start="849:18" pos:end="849:34">OPC_PRECEU_PH_QBL</name></expr>:</case>

            <case pos:start="851:13" pos:end="851:35">case <expr pos:start="851:18" pos:end="851:34"><name pos:start="851:18" pos:end="851:34">OPC_PRECEU_PH_QBR</name></expr>:</case>

            <case pos:start="853:13" pos:end="853:36">case <expr pos:start="853:18" pos:end="853:35"><name pos:start="853:18" pos:end="853:35">OPC_PRECEU_PH_QBLA</name></expr>:</case>

            <case pos:start="855:13" pos:end="855:36">case <expr pos:start="855:18" pos:end="855:35"><name pos:start="855:18" pos:end="855:35">OPC_PRECEU_PH_QBRA</name></expr>:</case>

                <expr_stmt pos:start="857:17" pos:end="857:61"><expr pos:start="857:17" pos:end="857:60"><call pos:start="857:17" pos:end="857:60"><name pos:start="857:17" pos:end="857:33">gen_mipsdsp_arith</name><argument_list pos:start="857:34" pos:end="857:60">(<argument pos:start="857:35" pos:end="857:37"><expr pos:start="857:35" pos:end="857:37"><name pos:start="857:35" pos:end="857:37">ctx</name></expr></argument>, <argument pos:start="857:40" pos:end="857:42"><expr pos:start="857:40" pos:end="857:42"><name pos:start="857:40" pos:end="857:42">op1</name></expr></argument>, <argument pos:start="857:45" pos:end="857:47"><expr pos:start="857:45" pos:end="857:47"><name pos:start="857:45" pos:end="857:47">op2</name></expr></argument>, <argument pos:start="857:50" pos:end="857:51"><expr pos:start="857:50" pos:end="857:51"><name pos:start="857:50" pos:end="857:51">rd</name></expr></argument>, <argument pos:start="857:54" pos:end="857:55"><expr pos:start="857:54" pos:end="857:55"><name pos:start="857:54" pos:end="857:55">rs</name></expr></argument>, <argument pos:start="857:58" pos:end="857:59"><expr pos:start="857:58" pos:end="857:59"><name pos:start="857:58" pos:end="857:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="859:17" pos:end="859:22">break;</break>

            <case pos:start="861:13" pos:end="861:28">case <expr pos:start="861:18" pos:end="861:27"><name pos:start="861:18" pos:end="861:27">OPC_BITREV</name></expr>:</case>

            <case pos:start="863:13" pos:end="863:29">case <expr pos:start="863:18" pos:end="863:28"><name pos:start="863:18" pos:end="863:28">OPC_REPL_QB</name></expr>:</case>

            <case pos:start="865:13" pos:end="865:30">case <expr pos:start="865:18" pos:end="865:29"><name pos:start="865:18" pos:end="865:29">OPC_REPLV_QB</name></expr>:</case>

            <case pos:start="867:13" pos:end="867:29">case <expr pos:start="867:18" pos:end="867:28"><name pos:start="867:18" pos:end="867:28">OPC_REPL_PH</name></expr>:</case>

            <case pos:start="869:13" pos:end="869:30">case <expr pos:start="869:18" pos:end="869:29"><name pos:start="869:18" pos:end="869:29">OPC_REPLV_PH</name></expr>:</case>

                <expr_stmt pos:start="871:17" pos:end="871:59"><expr pos:start="871:17" pos:end="871:58"><call pos:start="871:17" pos:end="871:58"><name pos:start="871:17" pos:end="871:35">gen_mipsdsp_bitinsn</name><argument_list pos:start="871:36" pos:end="871:58">(<argument pos:start="871:37" pos:end="871:39"><expr pos:start="871:37" pos:end="871:39"><name pos:start="871:37" pos:end="871:39">ctx</name></expr></argument>, <argument pos:start="871:42" pos:end="871:44"><expr pos:start="871:42" pos:end="871:44"><name pos:start="871:42" pos:end="871:44">op1</name></expr></argument>, <argument pos:start="871:47" pos:end="871:49"><expr pos:start="871:47" pos:end="871:49"><name pos:start="871:47" pos:end="871:49">op2</name></expr></argument>, <argument pos:start="871:52" pos:end="871:53"><expr pos:start="871:52" pos:end="871:53"><name pos:start="871:52" pos:end="871:53">rd</name></expr></argument>, <argument pos:start="871:56" pos:end="871:57"><expr pos:start="871:56" pos:end="871:57"><name pos:start="871:56" pos:end="871:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="873:17" pos:end="873:22">break;</break>

            <default pos:start="875:13" pos:end="875:20">default:</default>

                <expr_stmt pos:start="877:17" pos:end="877:45"><expr pos:start="877:17" pos:end="877:44"><call pos:start="877:17" pos:end="877:44"><name pos:start="877:17" pos:end="877:26">MIPS_INVAL</name><argument_list pos:start="877:27" pos:end="877:44">(<argument pos:start="877:28" pos:end="877:43"><expr pos:start="877:28" pos:end="877:43"><literal type="string" pos:start="877:28" pos:end="877:43">"MASK ABSQ_S.PH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="879:17" pos:end="879:49"><expr pos:start="879:17" pos:end="879:48"><call pos:start="879:17" pos:end="879:48"><name pos:start="879:17" pos:end="879:34">generate_exception</name><argument_list pos:start="879:35" pos:end="879:48">(<argument pos:start="879:36" pos:end="879:38"><expr pos:start="879:36" pos:end="879:38"><name pos:start="879:36" pos:end="879:38">ctx</name></expr></argument>, <argument pos:start="879:41" pos:end="879:47"><expr pos:start="879:41" pos:end="879:47"><name pos:start="879:41" pos:end="879:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="881:17" pos:end="881:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="885:13" pos:end="885:18">break;</break>

        <case pos:start="887:9" pos:end="887:29">case <expr pos:start="887:14" pos:end="887:28"><name pos:start="887:14" pos:end="887:28">OPC_ADDU_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="889:13" pos:end="889:44"><expr pos:start="889:13" pos:end="889:43"><name pos:start="889:13" pos:end="889:15">op2</name> <operator pos:start="889:17" pos:end="889:17">=</operator> <call pos:start="889:19" pos:end="889:43"><name pos:start="889:19" pos:end="889:30">MASK_ADDU_QB</name><argument_list pos:start="889:31" pos:end="889:43">(<argument pos:start="889:32" pos:end="889:42"><expr pos:start="889:32" pos:end="889:42"><name pos:start="889:32" pos:end="889:42"><name pos:start="889:32" pos:end="889:34">ctx</name><operator pos:start="889:35" pos:end="889:36">-&gt;</operator><name pos:start="889:37" pos:end="889:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="891:13" pos:end="959:13">switch <condition pos:start="891:20" pos:end="891:24">(<expr pos:start="891:21" pos:end="891:23"><name pos:start="891:21" pos:end="891:23">op2</name></expr>)</condition> <block pos:start="891:26" pos:end="959:13">{<block_content pos:start="893:13" pos:end="955:22">

            <case pos:start="893:13" pos:end="893:29">case <expr pos:start="893:18" pos:end="893:28"><name pos:start="893:18" pos:end="893:28">OPC_ADDQ_PH</name></expr>:</case>

            <case pos:start="895:13" pos:end="895:31">case <expr pos:start="895:18" pos:end="895:30"><name pos:start="895:18" pos:end="895:30">OPC_ADDQ_S_PH</name></expr>:</case>

            <case pos:start="897:13" pos:end="897:30">case <expr pos:start="897:18" pos:end="897:29"><name pos:start="897:18" pos:end="897:29">OPC_ADDQ_S_W</name></expr>:</case>

            <case pos:start="899:13" pos:end="899:29">case <expr pos:start="899:18" pos:end="899:28"><name pos:start="899:18" pos:end="899:28">OPC_ADDU_QB</name></expr>:</case>

            <case pos:start="901:13" pos:end="901:31">case <expr pos:start="901:18" pos:end="901:30"><name pos:start="901:18" pos:end="901:30">OPC_ADDU_S_QB</name></expr>:</case>

            <case pos:start="903:13" pos:end="903:29">case <expr pos:start="903:18" pos:end="903:28"><name pos:start="903:18" pos:end="903:28">OPC_ADDU_PH</name></expr>:</case>

            <case pos:start="905:13" pos:end="905:31">case <expr pos:start="905:18" pos:end="905:30"><name pos:start="905:18" pos:end="905:30">OPC_ADDU_S_PH</name></expr>:</case>

            <case pos:start="907:13" pos:end="907:29">case <expr pos:start="907:18" pos:end="907:28"><name pos:start="907:18" pos:end="907:28">OPC_SUBQ_PH</name></expr>:</case>

            <case pos:start="909:13" pos:end="909:31">case <expr pos:start="909:18" pos:end="909:30"><name pos:start="909:18" pos:end="909:30">OPC_SUBQ_S_PH</name></expr>:</case>

            <case pos:start="911:13" pos:end="911:30">case <expr pos:start="911:18" pos:end="911:29"><name pos:start="911:18" pos:end="911:29">OPC_SUBQ_S_W</name></expr>:</case>

            <case pos:start="913:13" pos:end="913:29">case <expr pos:start="913:18" pos:end="913:28"><name pos:start="913:18" pos:end="913:28">OPC_SUBU_QB</name></expr>:</case>

            <case pos:start="915:13" pos:end="915:31">case <expr pos:start="915:18" pos:end="915:30"><name pos:start="915:18" pos:end="915:30">OPC_SUBU_S_QB</name></expr>:</case>

            <case pos:start="917:13" pos:end="917:29">case <expr pos:start="917:18" pos:end="917:28"><name pos:start="917:18" pos:end="917:28">OPC_SUBU_PH</name></expr>:</case>

            <case pos:start="919:13" pos:end="919:31">case <expr pos:start="919:18" pos:end="919:30"><name pos:start="919:18" pos:end="919:30">OPC_SUBU_S_PH</name></expr>:</case>

            <case pos:start="921:13" pos:end="921:27">case <expr pos:start="921:18" pos:end="921:26"><name pos:start="921:18" pos:end="921:26">OPC_ADDSC</name></expr>:</case>

            <case pos:start="923:13" pos:end="923:27">case <expr pos:start="923:18" pos:end="923:26"><name pos:start="923:18" pos:end="923:26">OPC_ADDWC</name></expr>:</case>

            <case pos:start="925:13" pos:end="925:28">case <expr pos:start="925:18" pos:end="925:27"><name pos:start="925:18" pos:end="925:27">OPC_MODSUB</name></expr>:</case>

            <case pos:start="927:13" pos:end="927:32">case <expr pos:start="927:18" pos:end="927:31"><name pos:start="927:18" pos:end="927:31">OPC_RADDU_W_QB</name></expr>:</case>

                <expr_stmt pos:start="929:17" pos:end="929:61"><expr pos:start="929:17" pos:end="929:60"><call pos:start="929:17" pos:end="929:60"><name pos:start="929:17" pos:end="929:33">gen_mipsdsp_arith</name><argument_list pos:start="929:34" pos:end="929:60">(<argument pos:start="929:35" pos:end="929:37"><expr pos:start="929:35" pos:end="929:37"><name pos:start="929:35" pos:end="929:37">ctx</name></expr></argument>, <argument pos:start="929:40" pos:end="929:42"><expr pos:start="929:40" pos:end="929:42"><name pos:start="929:40" pos:end="929:42">op1</name></expr></argument>, <argument pos:start="929:45" pos:end="929:47"><expr pos:start="929:45" pos:end="929:47"><name pos:start="929:45" pos:end="929:47">op2</name></expr></argument>, <argument pos:start="929:50" pos:end="929:51"><expr pos:start="929:50" pos:end="929:51"><name pos:start="929:50" pos:end="929:51">rd</name></expr></argument>, <argument pos:start="929:54" pos:end="929:55"><expr pos:start="929:54" pos:end="929:55"><name pos:start="929:54" pos:end="929:55">rs</name></expr></argument>, <argument pos:start="929:58" pos:end="929:59"><expr pos:start="929:58" pos:end="929:59"><name pos:start="929:58" pos:end="929:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="931:17" pos:end="931:22">break;</break>

            <case pos:start="933:13" pos:end="933:36">case <expr pos:start="933:18" pos:end="933:35"><name pos:start="933:18" pos:end="933:35">OPC_MULEU_S_PH_QBL</name></expr>:</case>

            <case pos:start="935:13" pos:end="935:36">case <expr pos:start="935:18" pos:end="935:35"><name pos:start="935:18" pos:end="935:35">OPC_MULEU_S_PH_QBR</name></expr>:</case>

            <case pos:start="937:13" pos:end="937:32">case <expr pos:start="937:18" pos:end="937:31"><name pos:start="937:18" pos:end="937:31">OPC_MULQ_RS_PH</name></expr>:</case>

            <case pos:start="939:13" pos:end="939:35">case <expr pos:start="939:18" pos:end="939:34"><name pos:start="939:18" pos:end="939:34">OPC_MULEQ_S_W_PHL</name></expr>:</case>

            <case pos:start="941:13" pos:end="941:35">case <expr pos:start="941:18" pos:end="941:34"><name pos:start="941:18" pos:end="941:34">OPC_MULEQ_S_W_PHR</name></expr>:</case>

            <case pos:start="943:13" pos:end="943:31">case <expr pos:start="943:18" pos:end="943:30"><name pos:start="943:18" pos:end="943:30">OPC_MULQ_S_PH</name></expr>:</case>

                <expr_stmt pos:start="945:17" pos:end="945:67"><expr pos:start="945:17" pos:end="945:66"><call pos:start="945:17" pos:end="945:66"><name pos:start="945:17" pos:end="945:36">gen_mipsdsp_multiply</name><argument_list pos:start="945:37" pos:end="945:66">(<argument pos:start="945:38" pos:end="945:40"><expr pos:start="945:38" pos:end="945:40"><name pos:start="945:38" pos:end="945:40">ctx</name></expr></argument>, <argument pos:start="945:43" pos:end="945:45"><expr pos:start="945:43" pos:end="945:45"><name pos:start="945:43" pos:end="945:45">op1</name></expr></argument>, <argument pos:start="945:48" pos:end="945:50"><expr pos:start="945:48" pos:end="945:50"><name pos:start="945:48" pos:end="945:50">op2</name></expr></argument>, <argument pos:start="945:53" pos:end="945:54"><expr pos:start="945:53" pos:end="945:54"><name pos:start="945:53" pos:end="945:54">rd</name></expr></argument>, <argument pos:start="945:57" pos:end="945:58"><expr pos:start="945:57" pos:end="945:58"><name pos:start="945:57" pos:end="945:58">rs</name></expr></argument>, <argument pos:start="945:61" pos:end="945:62"><expr pos:start="945:61" pos:end="945:62"><name pos:start="945:61" pos:end="945:62">rt</name></expr></argument>, <argument pos:start="945:65" pos:end="945:65"><expr pos:start="945:65" pos:end="945:65"><literal type="number" pos:start="945:65" pos:end="945:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="947:17" pos:end="947:22">break;</break>

            <default pos:start="949:13" pos:end="949:20">default:</default>            <comment type="block" pos:start="949:33" pos:end="949:45">/* Invalid */</comment>

                <expr_stmt pos:start="951:17" pos:end="951:43"><expr pos:start="951:17" pos:end="951:42"><call pos:start="951:17" pos:end="951:42"><name pos:start="951:17" pos:end="951:26">MIPS_INVAL</name><argument_list pos:start="951:27" pos:end="951:42">(<argument pos:start="951:28" pos:end="951:41"><expr pos:start="951:28" pos:end="951:41"><literal type="string" pos:start="951:28" pos:end="951:41">"MASK ADDU.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="953:17" pos:end="953:49"><expr pos:start="953:17" pos:end="953:48"><call pos:start="953:17" pos:end="953:48"><name pos:start="953:17" pos:end="953:34">generate_exception</name><argument_list pos:start="953:35" pos:end="953:48">(<argument pos:start="953:36" pos:end="953:38"><expr pos:start="953:36" pos:end="953:38"><name pos:start="953:36" pos:end="953:38">ctx</name></expr></argument>, <argument pos:start="953:41" pos:end="953:47"><expr pos:start="953:41" pos:end="953:47"><name pos:start="953:41" pos:end="953:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="955:17" pos:end="955:22">break;</break>



            </block_content>}</block></switch>

            <break pos:start="961:13" pos:end="961:18">break;</break>

        <case pos:start="963:9" pos:end="963:32">case <expr pos:start="963:14" pos:end="963:31"><name pos:start="963:14" pos:end="963:31">OPC_CMPU_EQ_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="965:13" pos:end="965:47"><expr pos:start="965:13" pos:end="965:46"><name pos:start="965:13" pos:end="965:15">op2</name> <operator pos:start="965:17" pos:end="965:17">=</operator> <call pos:start="965:19" pos:end="965:46"><name pos:start="965:19" pos:end="965:33">MASK_CMPU_EQ_QB</name><argument_list pos:start="965:34" pos:end="965:46">(<argument pos:start="965:35" pos:end="965:45"><expr pos:start="965:35" pos:end="965:45"><name pos:start="965:35" pos:end="965:45"><name pos:start="965:35" pos:end="965:37">ctx</name><operator pos:start="965:38" pos:end="965:39">-&gt;</operator><name pos:start="965:40" pos:end="965:45">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="967:13" pos:end="1037:13">switch <condition pos:start="967:20" pos:end="967:24">(<expr pos:start="967:21" pos:end="967:23"><name pos:start="967:21" pos:end="967:23">op2</name></expr>)</condition> <block pos:start="967:26" pos:end="1037:13">{<block_content pos:start="969:13" pos:end="1035:22">

            <case pos:start="969:13" pos:end="969:36">case <expr pos:start="969:18" pos:end="969:35"><name pos:start="969:18" pos:end="969:35">OPC_PRECR_SRA_PH_W</name></expr>:</case>

            <case pos:start="971:13" pos:end="971:38">case <expr pos:start="971:18" pos:end="971:37"><name pos:start="971:18" pos:end="971:37">OPC_PRECR_SRA_R_PH_W</name></expr>:</case>

                <expr_stmt pos:start="973:17" pos:end="973:61"><expr pos:start="973:17" pos:end="973:60"><call pos:start="973:17" pos:end="973:60"><name pos:start="973:17" pos:end="973:33">gen_mipsdsp_arith</name><argument_list pos:start="973:34" pos:end="973:60">(<argument pos:start="973:35" pos:end="973:37"><expr pos:start="973:35" pos:end="973:37"><name pos:start="973:35" pos:end="973:37">ctx</name></expr></argument>, <argument pos:start="973:40" pos:end="973:42"><expr pos:start="973:40" pos:end="973:42"><name pos:start="973:40" pos:end="973:42">op1</name></expr></argument>, <argument pos:start="973:45" pos:end="973:47"><expr pos:start="973:45" pos:end="973:47"><name pos:start="973:45" pos:end="973:47">op2</name></expr></argument>, <argument pos:start="973:50" pos:end="973:51"><expr pos:start="973:50" pos:end="973:51"><name pos:start="973:50" pos:end="973:51">rt</name></expr></argument>, <argument pos:start="973:54" pos:end="973:55"><expr pos:start="973:54" pos:end="973:55"><name pos:start="973:54" pos:end="973:55">rs</name></expr></argument>, <argument pos:start="973:58" pos:end="973:59"><expr pos:start="973:58" pos:end="973:59"><name pos:start="973:58" pos:end="973:59">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="975:17" pos:end="975:22">break;</break>

            <case pos:start="977:13" pos:end="977:33">case <expr pos:start="977:18" pos:end="977:32"><name pos:start="977:18" pos:end="977:32">OPC_PRECR_QB_PH</name></expr>:</case>

            <case pos:start="979:13" pos:end="979:34">case <expr pos:start="979:18" pos:end="979:33"><name pos:start="979:18" pos:end="979:33">OPC_PRECRQ_QB_PH</name></expr>:</case>

            <case pos:start="981:13" pos:end="981:33">case <expr pos:start="981:18" pos:end="981:32"><name pos:start="981:18" pos:end="981:32">OPC_PRECRQ_PH_W</name></expr>:</case>

            <case pos:start="983:13" pos:end="983:36">case <expr pos:start="983:18" pos:end="983:35"><name pos:start="983:18" pos:end="983:35">OPC_PRECRQ_RS_PH_W</name></expr>:</case>

            <case pos:start="985:13" pos:end="985:37">case <expr pos:start="985:18" pos:end="985:36"><name pos:start="985:18" pos:end="985:36">OPC_PRECRQU_S_QB_PH</name></expr>:</case>

                <expr_stmt pos:start="987:17" pos:end="987:61"><expr pos:start="987:17" pos:end="987:60"><call pos:start="987:17" pos:end="987:60"><name pos:start="987:17" pos:end="987:33">gen_mipsdsp_arith</name><argument_list pos:start="987:34" pos:end="987:60">(<argument pos:start="987:35" pos:end="987:37"><expr pos:start="987:35" pos:end="987:37"><name pos:start="987:35" pos:end="987:37">ctx</name></expr></argument>, <argument pos:start="987:40" pos:end="987:42"><expr pos:start="987:40" pos:end="987:42"><name pos:start="987:40" pos:end="987:42">op1</name></expr></argument>, <argument pos:start="987:45" pos:end="987:47"><expr pos:start="987:45" pos:end="987:47"><name pos:start="987:45" pos:end="987:47">op2</name></expr></argument>, <argument pos:start="987:50" pos:end="987:51"><expr pos:start="987:50" pos:end="987:51"><name pos:start="987:50" pos:end="987:51">rd</name></expr></argument>, <argument pos:start="987:54" pos:end="987:55"><expr pos:start="987:54" pos:end="987:55"><name pos:start="987:54" pos:end="987:55">rs</name></expr></argument>, <argument pos:start="987:58" pos:end="987:59"><expr pos:start="987:58" pos:end="987:59"><name pos:start="987:58" pos:end="987:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="989:17" pos:end="989:22">break;</break>

            <case pos:start="991:13" pos:end="991:32">case <expr pos:start="991:18" pos:end="991:31"><name pos:start="991:18" pos:end="991:31">OPC_CMPU_EQ_QB</name></expr>:</case>

            <case pos:start="993:13" pos:end="993:32">case <expr pos:start="993:18" pos:end="993:31"><name pos:start="993:18" pos:end="993:31">OPC_CMPU_LT_QB</name></expr>:</case>

            <case pos:start="995:13" pos:end="995:32">case <expr pos:start="995:18" pos:end="995:31"><name pos:start="995:18" pos:end="995:31">OPC_CMPU_LE_QB</name></expr>:</case>

            <case pos:start="997:13" pos:end="997:31">case <expr pos:start="997:18" pos:end="997:30"><name pos:start="997:18" pos:end="997:30">OPC_CMP_EQ_PH</name></expr>:</case>

            <case pos:start="999:13" pos:end="999:31">case <expr pos:start="999:18" pos:end="999:30"><name pos:start="999:18" pos:end="999:30">OPC_CMP_LT_PH</name></expr>:</case>

            <case pos:start="1001:13" pos:end="1001:31">case <expr pos:start="1001:18" pos:end="1001:30"><name pos:start="1001:18" pos:end="1001:30">OPC_CMP_LE_PH</name></expr>:</case>

                <expr_stmt pos:start="1003:17" pos:end="1003:71"><expr pos:start="1003:17" pos:end="1003:70"><call pos:start="1003:17" pos:end="1003:70"><name pos:start="1003:17" pos:end="1003:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1003:41" pos:end="1003:70">(<argument pos:start="1003:42" pos:end="1003:44"><expr pos:start="1003:42" pos:end="1003:44"><name pos:start="1003:42" pos:end="1003:44">ctx</name></expr></argument>, <argument pos:start="1003:47" pos:end="1003:49"><expr pos:start="1003:47" pos:end="1003:49"><name pos:start="1003:47" pos:end="1003:49">op1</name></expr></argument>, <argument pos:start="1003:52" pos:end="1003:54"><expr pos:start="1003:52" pos:end="1003:54"><name pos:start="1003:52" pos:end="1003:54">op2</name></expr></argument>, <argument pos:start="1003:57" pos:end="1003:58"><expr pos:start="1003:57" pos:end="1003:58"><name pos:start="1003:57" pos:end="1003:58">rd</name></expr></argument>, <argument pos:start="1003:61" pos:end="1003:62"><expr pos:start="1003:61" pos:end="1003:62"><name pos:start="1003:61" pos:end="1003:62">rs</name></expr></argument>, <argument pos:start="1003:65" pos:end="1003:66"><expr pos:start="1003:65" pos:end="1003:66"><name pos:start="1003:65" pos:end="1003:66">rt</name></expr></argument>, <argument pos:start="1003:69" pos:end="1003:69"><expr pos:start="1003:69" pos:end="1003:69"><literal type="number" pos:start="1003:69" pos:end="1003:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1005:17" pos:end="1005:22">break;</break>

            <case pos:start="1007:13" pos:end="1007:33">case <expr pos:start="1007:18" pos:end="1007:32"><name pos:start="1007:18" pos:end="1007:32">OPC_CMPGU_EQ_QB</name></expr>:</case>

            <case pos:start="1009:13" pos:end="1009:33">case <expr pos:start="1009:18" pos:end="1009:32"><name pos:start="1009:18" pos:end="1009:32">OPC_CMPGU_LT_QB</name></expr>:</case>

            <case pos:start="1011:13" pos:end="1011:33">case <expr pos:start="1011:18" pos:end="1011:32"><name pos:start="1011:18" pos:end="1011:32">OPC_CMPGU_LE_QB</name></expr>:</case>

            <case pos:start="1013:13" pos:end="1013:34">case <expr pos:start="1013:18" pos:end="1013:33"><name pos:start="1013:18" pos:end="1013:33">OPC_CMPGDU_EQ_QB</name></expr>:</case>

            <case pos:start="1015:13" pos:end="1015:34">case <expr pos:start="1015:18" pos:end="1015:33"><name pos:start="1015:18" pos:end="1015:33">OPC_CMPGDU_LT_QB</name></expr>:</case>

            <case pos:start="1017:13" pos:end="1017:34">case <expr pos:start="1017:18" pos:end="1017:33"><name pos:start="1017:18" pos:end="1017:33">OPC_CMPGDU_LE_QB</name></expr>:</case>

            <case pos:start="1019:13" pos:end="1019:29">case <expr pos:start="1019:18" pos:end="1019:28"><name pos:start="1019:18" pos:end="1019:28">OPC_PICK_QB</name></expr>:</case>

            <case pos:start="1021:13" pos:end="1021:29">case <expr pos:start="1021:18" pos:end="1021:28"><name pos:start="1021:18" pos:end="1021:28">OPC_PICK_PH</name></expr>:</case>

            <case pos:start="1023:13" pos:end="1023:31">case <expr pos:start="1023:18" pos:end="1023:30"><name pos:start="1023:18" pos:end="1023:30">OPC_PACKRL_PH</name></expr>:</case>

                <expr_stmt pos:start="1025:17" pos:end="1025:71"><expr pos:start="1025:17" pos:end="1025:70"><call pos:start="1025:17" pos:end="1025:70"><name pos:start="1025:17" pos:end="1025:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1025:41" pos:end="1025:70">(<argument pos:start="1025:42" pos:end="1025:44"><expr pos:start="1025:42" pos:end="1025:44"><name pos:start="1025:42" pos:end="1025:44">ctx</name></expr></argument>, <argument pos:start="1025:47" pos:end="1025:49"><expr pos:start="1025:47" pos:end="1025:49"><name pos:start="1025:47" pos:end="1025:49">op1</name></expr></argument>, <argument pos:start="1025:52" pos:end="1025:54"><expr pos:start="1025:52" pos:end="1025:54"><name pos:start="1025:52" pos:end="1025:54">op2</name></expr></argument>, <argument pos:start="1025:57" pos:end="1025:58"><expr pos:start="1025:57" pos:end="1025:58"><name pos:start="1025:57" pos:end="1025:58">rd</name></expr></argument>, <argument pos:start="1025:61" pos:end="1025:62"><expr pos:start="1025:61" pos:end="1025:62"><name pos:start="1025:61" pos:end="1025:62">rs</name></expr></argument>, <argument pos:start="1025:65" pos:end="1025:66"><expr pos:start="1025:65" pos:end="1025:66"><name pos:start="1025:65" pos:end="1025:66">rt</name></expr></argument>, <argument pos:start="1025:69" pos:end="1025:69"><expr pos:start="1025:69" pos:end="1025:69"><literal type="number" pos:start="1025:69" pos:end="1025:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1027:17" pos:end="1027:22">break;</break>

            <default pos:start="1029:13" pos:end="1029:20">default:</default>            <comment type="block" pos:start="1029:33" pos:end="1029:45">/* Invalid */</comment>

                <expr_stmt pos:start="1031:17" pos:end="1031:46"><expr pos:start="1031:17" pos:end="1031:45"><call pos:start="1031:17" pos:end="1031:45"><name pos:start="1031:17" pos:end="1031:26">MIPS_INVAL</name><argument_list pos:start="1031:27" pos:end="1031:45">(<argument pos:start="1031:28" pos:end="1031:44"><expr pos:start="1031:28" pos:end="1031:44"><literal type="string" pos:start="1031:28" pos:end="1031:44">"MASK CMPU.EQ.QB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1033:17" pos:end="1033:49"><expr pos:start="1033:17" pos:end="1033:48"><call pos:start="1033:17" pos:end="1033:48"><name pos:start="1033:17" pos:end="1033:34">generate_exception</name><argument_list pos:start="1033:35" pos:end="1033:48">(<argument pos:start="1033:36" pos:end="1033:38"><expr pos:start="1033:36" pos:end="1033:38"><name pos:start="1033:36" pos:end="1033:38">ctx</name></expr></argument>, <argument pos:start="1033:41" pos:end="1033:47"><expr pos:start="1033:41" pos:end="1033:47"><name pos:start="1033:41" pos:end="1033:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1035:17" pos:end="1035:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1039:13" pos:end="1039:18">break;</break>

        <case pos:start="1041:9" pos:end="1041:29">case <expr pos:start="1041:14" pos:end="1041:28"><name pos:start="1041:14" pos:end="1041:28">OPC_SHLL_QB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1043:13" pos:end="1043:52"><expr pos:start="1043:13" pos:end="1043:51"><call pos:start="1043:13" pos:end="1043:51"><name pos:start="1043:13" pos:end="1043:29">gen_mipsdsp_shift</name><argument_list pos:start="1043:30" pos:end="1043:51">(<argument pos:start="1043:31" pos:end="1043:33"><expr pos:start="1043:31" pos:end="1043:33"><name pos:start="1043:31" pos:end="1043:33">ctx</name></expr></argument>, <argument pos:start="1043:36" pos:end="1043:38"><expr pos:start="1043:36" pos:end="1043:38"><name pos:start="1043:36" pos:end="1043:38">op1</name></expr></argument>, <argument pos:start="1043:41" pos:end="1043:42"><expr pos:start="1043:41" pos:end="1043:42"><name pos:start="1043:41" pos:end="1043:42">rd</name></expr></argument>, <argument pos:start="1043:45" pos:end="1043:46"><expr pos:start="1043:45" pos:end="1043:46"><name pos:start="1043:45" pos:end="1043:46">rs</name></expr></argument>, <argument pos:start="1043:49" pos:end="1043:50"><expr pos:start="1043:49" pos:end="1043:50"><name pos:start="1043:49" pos:end="1043:50">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1045:13" pos:end="1045:18">break;</break>

        <case pos:start="1047:9" pos:end="1047:30">case <expr pos:start="1047:14" pos:end="1047:29"><name pos:start="1047:14" pos:end="1047:29">OPC_DPA_W_PH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1049:13" pos:end="1049:45"><expr pos:start="1049:13" pos:end="1049:44"><name pos:start="1049:13" pos:end="1049:15">op2</name> <operator pos:start="1049:17" pos:end="1049:17">=</operator> <call pos:start="1049:19" pos:end="1049:44"><name pos:start="1049:19" pos:end="1049:31">MASK_DPA_W_PH</name><argument_list pos:start="1049:32" pos:end="1049:44">(<argument pos:start="1049:33" pos:end="1049:43"><expr pos:start="1049:33" pos:end="1049:43"><name pos:start="1049:33" pos:end="1049:43"><name pos:start="1049:33" pos:end="1049:35">ctx</name><operator pos:start="1049:36" pos:end="1049:37">-&gt;</operator><name pos:start="1049:38" pos:end="1049:43">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1051:13" pos:end="1109:13">switch <condition pos:start="1051:20" pos:end="1051:24">(<expr pos:start="1051:21" pos:end="1051:23"><name pos:start="1051:21" pos:end="1051:23">op2</name></expr>)</condition> <block pos:start="1051:26" pos:end="1109:13">{<block_content pos:start="1053:13" pos:end="1107:22">

            <case pos:start="1053:13" pos:end="1053:32">case <expr pos:start="1053:18" pos:end="1053:31"><name pos:start="1053:18" pos:end="1053:31">OPC_DPAU_H_QBL</name></expr>:</case>

            <case pos:start="1055:13" pos:end="1055:32">case <expr pos:start="1055:18" pos:end="1055:31"><name pos:start="1055:18" pos:end="1055:31">OPC_DPAU_H_QBR</name></expr>:</case>

            <case pos:start="1057:13" pos:end="1057:32">case <expr pos:start="1057:18" pos:end="1057:31"><name pos:start="1057:18" pos:end="1057:31">OPC_DPSU_H_QBL</name></expr>:</case>

            <case pos:start="1059:13" pos:end="1059:32">case <expr pos:start="1059:18" pos:end="1059:31"><name pos:start="1059:18" pos:end="1059:31">OPC_DPSU_H_QBR</name></expr>:</case>

            <case pos:start="1061:13" pos:end="1061:30">case <expr pos:start="1061:18" pos:end="1061:29"><name pos:start="1061:18" pos:end="1061:29">OPC_DPA_W_PH</name></expr>:</case>

            <case pos:start="1063:13" pos:end="1063:31">case <expr pos:start="1063:18" pos:end="1063:30"><name pos:start="1063:18" pos:end="1063:30">OPC_DPAX_W_PH</name></expr>:</case>

            <case pos:start="1065:13" pos:end="1065:33">case <expr pos:start="1065:18" pos:end="1065:32"><name pos:start="1065:18" pos:end="1065:32">OPC_DPAQ_S_W_PH</name></expr>:</case>

            <case pos:start="1067:13" pos:end="1067:34">case <expr pos:start="1067:18" pos:end="1067:33"><name pos:start="1067:18" pos:end="1067:33">OPC_DPAQX_S_W_PH</name></expr>:</case>

            <case pos:start="1069:13" pos:end="1069:35">case <expr pos:start="1069:18" pos:end="1069:34"><name pos:start="1069:18" pos:end="1069:34">OPC_DPAQX_SA_W_PH</name></expr>:</case>

            <case pos:start="1071:13" pos:end="1071:30">case <expr pos:start="1071:18" pos:end="1071:29"><name pos:start="1071:18" pos:end="1071:29">OPC_DPS_W_PH</name></expr>:</case>

            <case pos:start="1073:13" pos:end="1073:31">case <expr pos:start="1073:18" pos:end="1073:30"><name pos:start="1073:18" pos:end="1073:30">OPC_DPSX_W_PH</name></expr>:</case>

            <case pos:start="1075:13" pos:end="1075:33">case <expr pos:start="1075:18" pos:end="1075:32"><name pos:start="1075:18" pos:end="1075:32">OPC_DPSQ_S_W_PH</name></expr>:</case>

            <case pos:start="1077:13" pos:end="1077:34">case <expr pos:start="1077:18" pos:end="1077:33"><name pos:start="1077:18" pos:end="1077:33">OPC_DPSQX_S_W_PH</name></expr>:</case>

            <case pos:start="1079:13" pos:end="1079:35">case <expr pos:start="1079:18" pos:end="1079:34"><name pos:start="1079:18" pos:end="1079:34">OPC_DPSQX_SA_W_PH</name></expr>:</case>

            <case pos:start="1081:13" pos:end="1081:35">case <expr pos:start="1081:18" pos:end="1081:34"><name pos:start="1081:18" pos:end="1081:34">OPC_MULSAQ_S_W_PH</name></expr>:</case>

            <case pos:start="1083:13" pos:end="1083:33">case <expr pos:start="1083:18" pos:end="1083:32"><name pos:start="1083:18" pos:end="1083:32">OPC_DPAQ_SA_L_W</name></expr>:</case>

            <case pos:start="1085:13" pos:end="1085:33">case <expr pos:start="1085:18" pos:end="1085:32"><name pos:start="1085:18" pos:end="1085:32">OPC_DPSQ_SA_L_W</name></expr>:</case>

            <case pos:start="1087:13" pos:end="1087:33">case <expr pos:start="1087:18" pos:end="1087:32"><name pos:start="1087:18" pos:end="1087:32">OPC_MAQ_S_W_PHL</name></expr>:</case>

            <case pos:start="1089:13" pos:end="1089:33">case <expr pos:start="1089:18" pos:end="1089:32"><name pos:start="1089:18" pos:end="1089:32">OPC_MAQ_S_W_PHR</name></expr>:</case>

            <case pos:start="1091:13" pos:end="1091:34">case <expr pos:start="1091:18" pos:end="1091:33"><name pos:start="1091:18" pos:end="1091:33">OPC_MAQ_SA_W_PHL</name></expr>:</case>

            <case pos:start="1093:13" pos:end="1093:34">case <expr pos:start="1093:18" pos:end="1093:33"><name pos:start="1093:18" pos:end="1093:33">OPC_MAQ_SA_W_PHR</name></expr>:</case>

            <case pos:start="1095:13" pos:end="1095:32">case <expr pos:start="1095:18" pos:end="1095:31"><name pos:start="1095:18" pos:end="1095:31">OPC_MULSA_W_PH</name></expr>:</case>

                <expr_stmt pos:start="1097:17" pos:end="1097:67"><expr pos:start="1097:17" pos:end="1097:66"><call pos:start="1097:17" pos:end="1097:66"><name pos:start="1097:17" pos:end="1097:36">gen_mipsdsp_multiply</name><argument_list pos:start="1097:37" pos:end="1097:66">(<argument pos:start="1097:38" pos:end="1097:40"><expr pos:start="1097:38" pos:end="1097:40"><name pos:start="1097:38" pos:end="1097:40">ctx</name></expr></argument>, <argument pos:start="1097:43" pos:end="1097:45"><expr pos:start="1097:43" pos:end="1097:45"><name pos:start="1097:43" pos:end="1097:45">op1</name></expr></argument>, <argument pos:start="1097:48" pos:end="1097:50"><expr pos:start="1097:48" pos:end="1097:50"><name pos:start="1097:48" pos:end="1097:50">op2</name></expr></argument>, <argument pos:start="1097:53" pos:end="1097:54"><expr pos:start="1097:53" pos:end="1097:54"><name pos:start="1097:53" pos:end="1097:54">rd</name></expr></argument>, <argument pos:start="1097:57" pos:end="1097:58"><expr pos:start="1097:57" pos:end="1097:58"><name pos:start="1097:57" pos:end="1097:58">rs</name></expr></argument>, <argument pos:start="1097:61" pos:end="1097:62"><expr pos:start="1097:61" pos:end="1097:62"><name pos:start="1097:61" pos:end="1097:62">rt</name></expr></argument>, <argument pos:start="1097:65" pos:end="1097:65"><expr pos:start="1097:65" pos:end="1097:65"><literal type="number" pos:start="1097:65" pos:end="1097:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1099:17" pos:end="1099:22">break;</break>

            <default pos:start="1101:13" pos:end="1101:20">default:</default>            <comment type="block" pos:start="1101:33" pos:end="1101:45">/* Invalid */</comment>

                <expr_stmt pos:start="1103:17" pos:end="1103:43"><expr pos:start="1103:17" pos:end="1103:42"><call pos:start="1103:17" pos:end="1103:42"><name pos:start="1103:17" pos:end="1103:26">MIPS_INVAL</name><argument_list pos:start="1103:27" pos:end="1103:42">(<argument pos:start="1103:28" pos:end="1103:41"><expr pos:start="1103:28" pos:end="1103:41"><literal type="string" pos:start="1103:28" pos:end="1103:41">"MASK DPAW.PH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1105:17" pos:end="1105:49"><expr pos:start="1105:17" pos:end="1105:48"><call pos:start="1105:17" pos:end="1105:48"><name pos:start="1105:17" pos:end="1105:34">generate_exception</name><argument_list pos:start="1105:35" pos:end="1105:48">(<argument pos:start="1105:36" pos:end="1105:38"><expr pos:start="1105:36" pos:end="1105:38"><name pos:start="1105:36" pos:end="1105:38">ctx</name></expr></argument>, <argument pos:start="1105:41" pos:end="1105:47"><expr pos:start="1105:41" pos:end="1105:47"><name pos:start="1105:41" pos:end="1105:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1107:17" pos:end="1107:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1111:13" pos:end="1111:18">break;</break>

        <case pos:start="1113:9" pos:end="1113:26">case <expr pos:start="1113:14" pos:end="1113:25"><name pos:start="1113:14" pos:end="1113:25">OPC_INSV_DSP</name></expr>:</case>

            <expr_stmt pos:start="1115:13" pos:end="1115:41"><expr pos:start="1115:13" pos:end="1115:40"><name pos:start="1115:13" pos:end="1115:15">op2</name> <operator pos:start="1115:17" pos:end="1115:17">=</operator> <call pos:start="1115:19" pos:end="1115:40"><name pos:start="1115:19" pos:end="1115:27">MASK_INSV</name><argument_list pos:start="1115:28" pos:end="1115:40">(<argument pos:start="1115:29" pos:end="1115:39"><expr pos:start="1115:29" pos:end="1115:39"><name pos:start="1115:29" pos:end="1115:39"><name pos:start="1115:29" pos:end="1115:31">ctx</name><operator pos:start="1115:32" pos:end="1115:33">-&gt;</operator><name pos:start="1115:34" pos:end="1115:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1117:13" pos:end="1171:13">switch <condition pos:start="1117:20" pos:end="1117:24">(<expr pos:start="1117:21" pos:end="1117:23"><name pos:start="1117:21" pos:end="1117:23">op2</name></expr>)</condition> <block pos:start="1117:26" pos:end="1171:13">{<block_content pos:start="1119:13" pos:end="1169:22">

            <case pos:start="1119:13" pos:end="1119:26">case <expr pos:start="1119:18" pos:end="1119:25"><name pos:start="1119:18" pos:end="1119:25">OPC_INSV</name></expr>:</case>

                <expr_stmt pos:start="1121:17" pos:end="1121:31"><expr pos:start="1121:17" pos:end="1121:30"><call pos:start="1121:17" pos:end="1121:30"><name pos:start="1121:17" pos:end="1121:25">check_dsp</name><argument_list pos:start="1121:26" pos:end="1121:30">(<argument pos:start="1121:27" pos:end="1121:29"><expr pos:start="1121:27" pos:end="1121:29"><name pos:start="1121:27" pos:end="1121:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="1123:17" pos:end="1161:17">{<block_content pos:start="1125:21" pos:end="1159:26">

                    <decl_stmt pos:start="1125:21" pos:end="1125:32"><decl pos:start="1125:21" pos:end="1125:27"><type pos:start="1125:21" pos:end="1125:24"><name pos:start="1125:21" pos:end="1125:24">TCGv</name></type> <name pos:start="1125:26" pos:end="1125:27">t0</name></decl>, <decl pos:start="1125:30" pos:end="1125:31"><type ref="prev" pos:start="1125:21" pos:end="1125:24"/><name pos:start="1125:30" pos:end="1125:31">t1</name></decl>;</decl_stmt>



                    <if_stmt pos:start="1129:21" pos:end="1135:21"><if pos:start="1129:21" pos:end="1135:21">if <condition pos:start="1129:24" pos:end="1129:32">(<expr pos:start="1129:25" pos:end="1129:31"><name pos:start="1129:25" pos:end="1129:26">rt</name> <operator pos:start="1129:28" pos:end="1129:29">==</operator> <literal type="number" pos:start="1129:31" pos:end="1129:31">0</literal></expr>)</condition> <block pos:start="1129:34" pos:end="1135:21">{<block_content pos:start="1131:25" pos:end="1133:30">

                        <expr_stmt pos:start="1131:25" pos:end="1131:42"><expr pos:start="1131:25" pos:end="1131:41"><call pos:start="1131:25" pos:end="1131:41"><name pos:start="1131:25" pos:end="1131:34">MIPS_DEBUG</name><argument_list pos:start="1131:35" pos:end="1131:41">(<argument pos:start="1131:36" pos:end="1131:40"><expr pos:start="1131:36" pos:end="1131:40"><literal type="string" pos:start="1131:36" pos:end="1131:40">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1133:25" pos:end="1133:30">break;</break>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="1139:21" pos:end="1139:40"><expr pos:start="1139:21" pos:end="1139:39"><name pos:start="1139:21" pos:end="1139:22">t0</name> <operator pos:start="1139:24" pos:end="1139:24">=</operator> <call pos:start="1139:26" pos:end="1139:39"><name pos:start="1139:26" pos:end="1139:37">tcg_temp_new</name><argument_list pos:start="1139:38" pos:end="1139:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1141:21" pos:end="1141:40"><expr pos:start="1141:21" pos:end="1141:39"><name pos:start="1141:21" pos:end="1141:22">t1</name> <operator pos:start="1141:24" pos:end="1141:24">=</operator> <call pos:start="1141:26" pos:end="1141:39"><name pos:start="1141:26" pos:end="1141:37">tcg_temp_new</name><argument_list pos:start="1141:38" pos:end="1141:39">()</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1145:21" pos:end="1145:41"><expr pos:start="1145:21" pos:end="1145:40"><call pos:start="1145:21" pos:end="1145:40"><name pos:start="1145:21" pos:end="1145:32">gen_load_gpr</name><argument_list pos:start="1145:33" pos:end="1145:40">(<argument pos:start="1145:34" pos:end="1145:35"><expr pos:start="1145:34" pos:end="1145:35"><name pos:start="1145:34" pos:end="1145:35">t0</name></expr></argument>, <argument pos:start="1145:38" pos:end="1145:39"><expr pos:start="1145:38" pos:end="1145:39"><name pos:start="1145:38" pos:end="1145:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1147:21" pos:end="1147:41"><expr pos:start="1147:21" pos:end="1147:40"><call pos:start="1147:21" pos:end="1147:40"><name pos:start="1147:21" pos:end="1147:32">gen_load_gpr</name><argument_list pos:start="1147:33" pos:end="1147:40">(<argument pos:start="1147:34" pos:end="1147:35"><expr pos:start="1147:34" pos:end="1147:35"><name pos:start="1147:34" pos:end="1147:35">t1</name></expr></argument>, <argument pos:start="1147:38" pos:end="1147:39"><expr pos:start="1147:38" pos:end="1147:39"><name pos:start="1147:38" pos:end="1147:39">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1151:21" pos:end="1151:66"><expr pos:start="1151:21" pos:end="1151:65"><call pos:start="1151:21" pos:end="1151:65"><name pos:start="1151:21" pos:end="1151:35">gen_helper_insv</name><argument_list pos:start="1151:36" pos:end="1151:65">(<argument pos:start="1151:37" pos:end="1151:47"><expr pos:start="1151:37" pos:end="1151:47"><name pos:start="1151:37" pos:end="1151:47"><name pos:start="1151:37" pos:end="1151:43">cpu_gpr</name><index pos:start="1151:44" pos:end="1151:47">[<expr pos:start="1151:45" pos:end="1151:46"><name pos:start="1151:45" pos:end="1151:46">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="1151:50" pos:end="1151:56"><expr pos:start="1151:50" pos:end="1151:56"><name pos:start="1151:50" pos:end="1151:56">cpu_env</name></expr></argument>, <argument pos:start="1151:59" pos:end="1151:60"><expr pos:start="1151:59" pos:end="1151:60"><name pos:start="1151:59" pos:end="1151:60">t1</name></expr></argument>, <argument pos:start="1151:63" pos:end="1151:64"><expr pos:start="1151:63" pos:end="1151:64"><name pos:start="1151:63" pos:end="1151:64">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1155:21" pos:end="1155:38"><expr pos:start="1155:21" pos:end="1155:37"><call pos:start="1155:21" pos:end="1155:37"><name pos:start="1155:21" pos:end="1155:33">tcg_temp_free</name><argument_list pos:start="1155:34" pos:end="1155:37">(<argument pos:start="1155:35" pos:end="1155:36"><expr pos:start="1155:35" pos:end="1155:36"><name pos:start="1155:35" pos:end="1155:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1157:21" pos:end="1157:38"><expr pos:start="1157:21" pos:end="1157:37"><call pos:start="1157:21" pos:end="1157:37"><name pos:start="1157:21" pos:end="1157:33">tcg_temp_free</name><argument_list pos:start="1157:34" pos:end="1157:37">(<argument pos:start="1157:35" pos:end="1157:36"><expr pos:start="1157:35" pos:end="1157:36"><name pos:start="1157:35" pos:end="1157:36">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1159:21" pos:end="1159:26">break;</break>

                </block_content>}</block>

            <default pos:start="1163:13" pos:end="1163:20">default:</default>            <comment type="block" pos:start="1163:33" pos:end="1163:45">/* Invalid */</comment>

                <expr_stmt pos:start="1165:17" pos:end="1165:40"><expr pos:start="1165:17" pos:end="1165:39"><call pos:start="1165:17" pos:end="1165:39"><name pos:start="1165:17" pos:end="1165:26">MIPS_INVAL</name><argument_list pos:start="1165:27" pos:end="1165:39">(<argument pos:start="1165:28" pos:end="1165:38"><expr pos:start="1165:28" pos:end="1165:38"><literal type="string" pos:start="1165:28" pos:end="1165:38">"MASK INSV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1167:17" pos:end="1167:49"><expr pos:start="1167:17" pos:end="1167:48"><call pos:start="1167:17" pos:end="1167:48"><name pos:start="1167:17" pos:end="1167:34">generate_exception</name><argument_list pos:start="1167:35" pos:end="1167:48">(<argument pos:start="1167:36" pos:end="1167:38"><expr pos:start="1167:36" pos:end="1167:38"><name pos:start="1167:36" pos:end="1167:38">ctx</name></expr></argument>, <argument pos:start="1167:41" pos:end="1167:47"><expr pos:start="1167:41" pos:end="1167:47"><name pos:start="1167:41" pos:end="1167:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1169:17" pos:end="1169:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1173:13" pos:end="1173:18">break;</break>

        <case pos:start="1175:9" pos:end="1175:28">case <expr pos:start="1175:14" pos:end="1175:27"><name pos:start="1175:14" pos:end="1175:27">OPC_APPEND_DSP</name></expr>:</case>

            <expr_stmt pos:start="1177:13" pos:end="1177:58"><expr pos:start="1177:13" pos:end="1177:57"><call pos:start="1177:13" pos:end="1177:57"><name pos:start="1177:13" pos:end="1177:30">gen_mipsdsp_append</name><argument_list pos:start="1177:31" pos:end="1177:57">(<argument pos:start="1177:32" pos:end="1177:34"><expr pos:start="1177:32" pos:end="1177:34"><name pos:start="1177:32" pos:end="1177:34">env</name></expr></argument>, <argument pos:start="1177:37" pos:end="1177:39"><expr pos:start="1177:37" pos:end="1177:39"><name pos:start="1177:37" pos:end="1177:39">ctx</name></expr></argument>, <argument pos:start="1177:42" pos:end="1177:44"><expr pos:start="1177:42" pos:end="1177:44"><name pos:start="1177:42" pos:end="1177:44">op1</name></expr></argument>, <argument pos:start="1177:47" pos:end="1177:48"><expr pos:start="1177:47" pos:end="1177:48"><name pos:start="1177:47" pos:end="1177:48">rt</name></expr></argument>, <argument pos:start="1177:51" pos:end="1177:52"><expr pos:start="1177:51" pos:end="1177:52"><name pos:start="1177:51" pos:end="1177:52">rs</name></expr></argument>, <argument pos:start="1177:55" pos:end="1177:56"><expr pos:start="1177:55" pos:end="1177:56"><name pos:start="1177:55" pos:end="1177:56">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1179:13" pos:end="1179:18">break;</break>

        <case pos:start="1181:9" pos:end="1181:28">case <expr pos:start="1181:14" pos:end="1181:27"><name pos:start="1181:14" pos:end="1181:27">OPC_EXTR_W_DSP</name></expr>:</case>

            <expr_stmt pos:start="1183:13" pos:end="1183:43"><expr pos:start="1183:13" pos:end="1183:42"><name pos:start="1183:13" pos:end="1183:15">op2</name> <operator pos:start="1183:17" pos:end="1183:17">=</operator> <call pos:start="1183:19" pos:end="1183:42"><name pos:start="1183:19" pos:end="1183:29">MASK_EXTR_W</name><argument_list pos:start="1183:30" pos:end="1183:42">(<argument pos:start="1183:31" pos:end="1183:41"><expr pos:start="1183:31" pos:end="1183:41"><name pos:start="1183:31" pos:end="1183:41"><name pos:start="1183:31" pos:end="1183:33">ctx</name><operator pos:start="1183:34" pos:end="1183:35">-&gt;</operator><name pos:start="1183:36" pos:end="1183:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1185:13" pos:end="1241:13">switch <condition pos:start="1185:20" pos:end="1185:24">(<expr pos:start="1185:21" pos:end="1185:23"><name pos:start="1185:21" pos:end="1185:23">op2</name></expr>)</condition> <block pos:start="1185:26" pos:end="1241:13">{<block_content pos:start="1187:13" pos:end="1239:22">

            <case pos:start="1187:13" pos:end="1187:28">case <expr pos:start="1187:18" pos:end="1187:27"><name pos:start="1187:18" pos:end="1187:27">OPC_EXTR_W</name></expr>:</case>

            <case pos:start="1189:13" pos:end="1189:30">case <expr pos:start="1189:18" pos:end="1189:29"><name pos:start="1189:18" pos:end="1189:29">OPC_EXTR_R_W</name></expr>:</case>

            <case pos:start="1191:13" pos:end="1191:31">case <expr pos:start="1191:18" pos:end="1191:30"><name pos:start="1191:18" pos:end="1191:30">OPC_EXTR_RS_W</name></expr>:</case>

            <case pos:start="1193:13" pos:end="1193:30">case <expr pos:start="1193:18" pos:end="1193:29"><name pos:start="1193:18" pos:end="1193:29">OPC_EXTR_S_H</name></expr>:</case>

            <case pos:start="1195:13" pos:end="1195:31">case <expr pos:start="1195:18" pos:end="1195:30"><name pos:start="1195:18" pos:end="1195:30">OPC_EXTRV_S_H</name></expr>:</case>

            <case pos:start="1197:13" pos:end="1197:29">case <expr pos:start="1197:18" pos:end="1197:28"><name pos:start="1197:18" pos:end="1197:28">OPC_EXTRV_W</name></expr>:</case>

            <case pos:start="1199:13" pos:end="1199:31">case <expr pos:start="1199:18" pos:end="1199:30"><name pos:start="1199:18" pos:end="1199:30">OPC_EXTRV_R_W</name></expr>:</case>

            <case pos:start="1201:13" pos:end="1201:32">case <expr pos:start="1201:18" pos:end="1201:31"><name pos:start="1201:18" pos:end="1201:31">OPC_EXTRV_RS_W</name></expr>:</case>

            <case pos:start="1203:13" pos:end="1203:26">case <expr pos:start="1203:18" pos:end="1203:25"><name pos:start="1203:18" pos:end="1203:25">OPC_EXTP</name></expr>:</case>

            <case pos:start="1205:13" pos:end="1205:27">case <expr pos:start="1205:18" pos:end="1205:26"><name pos:start="1205:18" pos:end="1205:26">OPC_EXTPV</name></expr>:</case>

            <case pos:start="1207:13" pos:end="1207:28">case <expr pos:start="1207:18" pos:end="1207:27"><name pos:start="1207:18" pos:end="1207:27">OPC_EXTPDP</name></expr>:</case>

            <case pos:start="1209:13" pos:end="1209:29">case <expr pos:start="1209:18" pos:end="1209:28"><name pos:start="1209:18" pos:end="1209:28">OPC_EXTPDPV</name></expr>:</case>

                <expr_stmt pos:start="1211:17" pos:end="1211:66"><expr pos:start="1211:17" pos:end="1211:65"><call pos:start="1211:17" pos:end="1211:65"><name pos:start="1211:17" pos:end="1211:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1211:36" pos:end="1211:65">(<argument pos:start="1211:37" pos:end="1211:39"><expr pos:start="1211:37" pos:end="1211:39"><name pos:start="1211:37" pos:end="1211:39">ctx</name></expr></argument>, <argument pos:start="1211:42" pos:end="1211:44"><expr pos:start="1211:42" pos:end="1211:44"><name pos:start="1211:42" pos:end="1211:44">op1</name></expr></argument>, <argument pos:start="1211:47" pos:end="1211:49"><expr pos:start="1211:47" pos:end="1211:49"><name pos:start="1211:47" pos:end="1211:49">op2</name></expr></argument>, <argument pos:start="1211:52" pos:end="1211:53"><expr pos:start="1211:52" pos:end="1211:53"><name pos:start="1211:52" pos:end="1211:53">rt</name></expr></argument>, <argument pos:start="1211:56" pos:end="1211:57"><expr pos:start="1211:56" pos:end="1211:57"><name pos:start="1211:56" pos:end="1211:57">rs</name></expr></argument>, <argument pos:start="1211:60" pos:end="1211:61"><expr pos:start="1211:60" pos:end="1211:61"><name pos:start="1211:60" pos:end="1211:61">rd</name></expr></argument>, <argument pos:start="1211:64" pos:end="1211:64"><expr pos:start="1211:64" pos:end="1211:64"><literal type="number" pos:start="1211:64" pos:end="1211:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1213:17" pos:end="1213:22">break;</break>

            <case pos:start="1215:13" pos:end="1215:27">case <expr pos:start="1215:18" pos:end="1215:26"><name pos:start="1215:18" pos:end="1215:26">OPC_RDDSP</name></expr>:</case>

                <expr_stmt pos:start="1217:17" pos:end="1217:66"><expr pos:start="1217:17" pos:end="1217:65"><call pos:start="1217:17" pos:end="1217:65"><name pos:start="1217:17" pos:end="1217:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1217:36" pos:end="1217:65">(<argument pos:start="1217:37" pos:end="1217:39"><expr pos:start="1217:37" pos:end="1217:39"><name pos:start="1217:37" pos:end="1217:39">ctx</name></expr></argument>, <argument pos:start="1217:42" pos:end="1217:44"><expr pos:start="1217:42" pos:end="1217:44"><name pos:start="1217:42" pos:end="1217:44">op1</name></expr></argument>, <argument pos:start="1217:47" pos:end="1217:49"><expr pos:start="1217:47" pos:end="1217:49"><name pos:start="1217:47" pos:end="1217:49">op2</name></expr></argument>, <argument pos:start="1217:52" pos:end="1217:53"><expr pos:start="1217:52" pos:end="1217:53"><name pos:start="1217:52" pos:end="1217:53">rd</name></expr></argument>, <argument pos:start="1217:56" pos:end="1217:57"><expr pos:start="1217:56" pos:end="1217:57"><name pos:start="1217:56" pos:end="1217:57">rs</name></expr></argument>, <argument pos:start="1217:60" pos:end="1217:61"><expr pos:start="1217:60" pos:end="1217:61"><name pos:start="1217:60" pos:end="1217:61">rt</name></expr></argument>, <argument pos:start="1217:64" pos:end="1217:64"><expr pos:start="1217:64" pos:end="1217:64"><literal type="number" pos:start="1217:64" pos:end="1217:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1219:17" pos:end="1219:22">break;</break>

            <case pos:start="1221:13" pos:end="1221:27">case <expr pos:start="1221:18" pos:end="1221:26"><name pos:start="1221:18" pos:end="1221:26">OPC_SHILO</name></expr>:</case>

            <case pos:start="1223:13" pos:end="1223:28">case <expr pos:start="1223:18" pos:end="1223:27"><name pos:start="1223:18" pos:end="1223:27">OPC_SHILOV</name></expr>:</case>

            <case pos:start="1225:13" pos:end="1225:28">case <expr pos:start="1225:18" pos:end="1225:27"><name pos:start="1225:18" pos:end="1225:27">OPC_MTHLIP</name></expr>:</case>

            <case pos:start="1227:13" pos:end="1227:27">case <expr pos:start="1227:18" pos:end="1227:26"><name pos:start="1227:18" pos:end="1227:26">OPC_WRDSP</name></expr>:</case>

                <expr_stmt pos:start="1229:17" pos:end="1229:66"><expr pos:start="1229:17" pos:end="1229:65"><call pos:start="1229:17" pos:end="1229:65"><name pos:start="1229:17" pos:end="1229:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1229:36" pos:end="1229:65">(<argument pos:start="1229:37" pos:end="1229:39"><expr pos:start="1229:37" pos:end="1229:39"><name pos:start="1229:37" pos:end="1229:39">ctx</name></expr></argument>, <argument pos:start="1229:42" pos:end="1229:44"><expr pos:start="1229:42" pos:end="1229:44"><name pos:start="1229:42" pos:end="1229:44">op1</name></expr></argument>, <argument pos:start="1229:47" pos:end="1229:49"><expr pos:start="1229:47" pos:end="1229:49"><name pos:start="1229:47" pos:end="1229:49">op2</name></expr></argument>, <argument pos:start="1229:52" pos:end="1229:53"><expr pos:start="1229:52" pos:end="1229:53"><name pos:start="1229:52" pos:end="1229:53">rd</name></expr></argument>, <argument pos:start="1229:56" pos:end="1229:57"><expr pos:start="1229:56" pos:end="1229:57"><name pos:start="1229:56" pos:end="1229:57">rs</name></expr></argument>, <argument pos:start="1229:60" pos:end="1229:61"><expr pos:start="1229:60" pos:end="1229:61"><name pos:start="1229:60" pos:end="1229:61">rt</name></expr></argument>, <argument pos:start="1229:64" pos:end="1229:64"><expr pos:start="1229:64" pos:end="1229:64"><literal type="number" pos:start="1229:64" pos:end="1229:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1231:17" pos:end="1231:22">break;</break>

            <default pos:start="1233:13" pos:end="1233:20">default:</default>            <comment type="block" pos:start="1233:33" pos:end="1233:45">/* Invalid */</comment>

                <expr_stmt pos:start="1235:17" pos:end="1235:42"><expr pos:start="1235:17" pos:end="1235:41"><call pos:start="1235:17" pos:end="1235:41"><name pos:start="1235:17" pos:end="1235:26">MIPS_INVAL</name><argument_list pos:start="1235:27" pos:end="1235:41">(<argument pos:start="1235:28" pos:end="1235:40"><expr pos:start="1235:28" pos:end="1235:40"><literal type="string" pos:start="1235:28" pos:end="1235:40">"MASK EXTR.W"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1237:17" pos:end="1237:49"><expr pos:start="1237:17" pos:end="1237:48"><call pos:start="1237:17" pos:end="1237:48"><name pos:start="1237:17" pos:end="1237:34">generate_exception</name><argument_list pos:start="1237:35" pos:end="1237:48">(<argument pos:start="1237:36" pos:end="1237:38"><expr pos:start="1237:36" pos:end="1237:38"><name pos:start="1237:36" pos:end="1237:38">ctx</name></expr></argument>, <argument pos:start="1237:41" pos:end="1237:47"><expr pos:start="1237:41" pos:end="1237:47"><name pos:start="1237:41" pos:end="1237:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1239:17" pos:end="1239:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1243:13" pos:end="1246:0">break;</break>

<cpp:if pos:start="1245:1" pos:end="1245:26">#<cpp:directive pos:start="1245:2" pos:end="1245:3">if</cpp:directive> <expr pos:start="1245:5" pos:end="1245:26"><call pos:start="1245:5" pos:end="1245:26"><name pos:start="1245:5" pos:end="1245:11">defined</name><argument_list pos:start="1245:12" pos:end="1245:26">(<argument pos:start="1245:13" pos:end="1245:25"><expr pos:start="1245:13" pos:end="1245:25"><name pos:start="1245:13" pos:end="1245:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1247:9" pos:end="1247:36">case <expr pos:start="1247:14" pos:end="1247:35"><name pos:start="1247:14" pos:end="1247:22">OPC_DEXTM</name> <operator pos:start="1247:24" pos:end="1247:26">...</operator> <name pos:start="1247:28" pos:end="1247:35">OPC_DEXT</name></expr>:</case>

        <case pos:start="1249:9" pos:end="1249:36">case <expr pos:start="1249:14" pos:end="1249:35"><name pos:start="1249:14" pos:end="1249:22">OPC_DINSM</name> <operator pos:start="1249:24" pos:end="1249:26">...</operator> <name pos:start="1249:28" pos:end="1249:35">OPC_DINS</name></expr>:</case>

            <expr_stmt pos:start="1251:13" pos:end="1251:42"><expr pos:start="1251:13" pos:end="1251:41"><call pos:start="1251:13" pos:end="1251:41"><name pos:start="1251:13" pos:end="1251:22">check_insn</name><argument_list pos:start="1251:23" pos:end="1251:41">(<argument pos:start="1251:24" pos:end="1251:26"><expr pos:start="1251:24" pos:end="1251:26"><name pos:start="1251:24" pos:end="1251:26">ctx</name></expr></argument>, <argument pos:start="1251:29" pos:end="1251:40"><expr pos:start="1251:29" pos:end="1251:40"><name pos:start="1251:29" pos:end="1251:40">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1253:13" pos:end="1253:31"><expr pos:start="1253:13" pos:end="1253:30"><call pos:start="1253:13" pos:end="1253:30"><name pos:start="1253:13" pos:end="1253:25">check_mips_64</name><argument_list pos:start="1253:26" pos:end="1253:30">(<argument pos:start="1253:27" pos:end="1253:29"><expr pos:start="1253:27" pos:end="1253:29"><name pos:start="1253:27" pos:end="1253:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1255:13" pos:end="1255:49"><expr pos:start="1255:13" pos:end="1255:48"><call pos:start="1255:13" pos:end="1255:48"><name pos:start="1255:13" pos:end="1255:22">gen_bitops</name><argument_list pos:start="1255:23" pos:end="1255:48">(<argument pos:start="1255:24" pos:end="1255:26"><expr pos:start="1255:24" pos:end="1255:26"><name pos:start="1255:24" pos:end="1255:26">ctx</name></expr></argument>, <argument pos:start="1255:29" pos:end="1255:31"><expr pos:start="1255:29" pos:end="1255:31"><name pos:start="1255:29" pos:end="1255:31">op1</name></expr></argument>, <argument pos:start="1255:34" pos:end="1255:35"><expr pos:start="1255:34" pos:end="1255:35"><name pos:start="1255:34" pos:end="1255:35">rt</name></expr></argument>, <argument pos:start="1255:38" pos:end="1255:39"><expr pos:start="1255:38" pos:end="1255:39"><name pos:start="1255:38" pos:end="1255:39">rs</name></expr></argument>, <argument pos:start="1255:42" pos:end="1255:43"><expr pos:start="1255:42" pos:end="1255:43"><name pos:start="1255:42" pos:end="1255:43">sa</name></expr></argument>, <argument pos:start="1255:46" pos:end="1255:47"><expr pos:start="1255:46" pos:end="1255:47"><name pos:start="1255:46" pos:end="1255:47">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1257:13" pos:end="1257:18">break;</break>

        <case pos:start="1259:9" pos:end="1259:24">case <expr pos:start="1259:14" pos:end="1259:23"><name pos:start="1259:14" pos:end="1259:23">OPC_DBSHFL</name></expr>:</case>

            <expr_stmt pos:start="1261:13" pos:end="1261:42"><expr pos:start="1261:13" pos:end="1261:41"><call pos:start="1261:13" pos:end="1261:41"><name pos:start="1261:13" pos:end="1261:22">check_insn</name><argument_list pos:start="1261:23" pos:end="1261:41">(<argument pos:start="1261:24" pos:end="1261:26"><expr pos:start="1261:24" pos:end="1261:26"><name pos:start="1261:24" pos:end="1261:26">ctx</name></expr></argument>, <argument pos:start="1261:29" pos:end="1261:40"><expr pos:start="1261:29" pos:end="1261:40"><name pos:start="1261:29" pos:end="1261:40">ISA_MIPS64R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1263:13" pos:end="1263:31"><expr pos:start="1263:13" pos:end="1263:30"><call pos:start="1263:13" pos:end="1263:30"><name pos:start="1263:13" pos:end="1263:25">check_mips_64</name><argument_list pos:start="1263:26" pos:end="1263:30">(<argument pos:start="1263:27" pos:end="1263:29"><expr pos:start="1263:27" pos:end="1263:29"><name pos:start="1263:27" pos:end="1263:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1265:13" pos:end="1265:43"><expr pos:start="1265:13" pos:end="1265:42"><name pos:start="1265:13" pos:end="1265:15">op2</name> <operator pos:start="1265:17" pos:end="1265:17">=</operator> <call pos:start="1265:19" pos:end="1265:42"><name pos:start="1265:19" pos:end="1265:29">MASK_DBSHFL</name><argument_list pos:start="1265:30" pos:end="1265:42">(<argument pos:start="1265:31" pos:end="1265:41"><expr pos:start="1265:31" pos:end="1265:41"><name pos:start="1265:31" pos:end="1265:41"><name pos:start="1265:31" pos:end="1265:33">ctx</name><operator pos:start="1265:34" pos:end="1265:35">-&gt;</operator><name pos:start="1265:36" pos:end="1265:41">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1267:13" pos:end="1267:40"><expr pos:start="1267:13" pos:end="1267:39"><call pos:start="1267:13" pos:end="1267:39"><name pos:start="1267:13" pos:end="1267:21">gen_bshfl</name><argument_list pos:start="1267:22" pos:end="1267:39">(<argument pos:start="1267:23" pos:end="1267:25"><expr pos:start="1267:23" pos:end="1267:25"><name pos:start="1267:23" pos:end="1267:25">ctx</name></expr></argument>, <argument pos:start="1267:28" pos:end="1267:30"><expr pos:start="1267:28" pos:end="1267:30"><name pos:start="1267:28" pos:end="1267:30">op2</name></expr></argument>, <argument pos:start="1267:33" pos:end="1267:34"><expr pos:start="1267:33" pos:end="1267:34"><name pos:start="1267:33" pos:end="1267:34">rt</name></expr></argument>, <argument pos:start="1267:37" pos:end="1267:38"><expr pos:start="1267:37" pos:end="1267:38"><name pos:start="1267:37" pos:end="1267:38">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1269:13" pos:end="1269:18">break;</break>

        <case pos:start="1271:9" pos:end="1271:46">case <expr pos:start="1271:14" pos:end="1271:45"><name pos:start="1271:14" pos:end="1271:26">OPC_DDIV_G_2E</name> <operator pos:start="1271:28" pos:end="1271:30">...</operator> <name pos:start="1271:32" pos:end="1271:45">OPC_DDIVU_G_2E</name></expr>:</case>

        <case pos:start="1273:9" pos:end="1273:48">case <expr pos:start="1273:14" pos:end="1273:47"><name pos:start="1273:14" pos:end="1273:27">OPC_DMULT_G_2E</name> <operator pos:start="1273:29" pos:end="1273:31">...</operator> <name pos:start="1273:33" pos:end="1273:47">OPC_DMULTU_G_2E</name></expr>:</case>

        <case pos:start="1275:9" pos:end="1275:46">case <expr pos:start="1275:14" pos:end="1275:45"><name pos:start="1275:14" pos:end="1275:26">OPC_DMOD_G_2E</name> <operator pos:start="1275:28" pos:end="1275:30">...</operator> <name pos:start="1275:32" pos:end="1275:45">OPC_DMODU_G_2E</name></expr>:</case>

            <expr_stmt pos:start="1277:13" pos:end="1277:45"><expr pos:start="1277:13" pos:end="1277:44"><call pos:start="1277:13" pos:end="1277:44"><name pos:start="1277:13" pos:end="1277:22">check_insn</name><argument_list pos:start="1277:23" pos:end="1277:44">(<argument pos:start="1277:24" pos:end="1277:26"><expr pos:start="1277:24" pos:end="1277:26"><name pos:start="1277:24" pos:end="1277:26">ctx</name></expr></argument>, <argument pos:start="1277:29" pos:end="1277:43"><expr pos:start="1277:29" pos:end="1277:43"><name pos:start="1277:29" pos:end="1277:43">INSN_LOONGSON2E</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1279:13" pos:end="1279:55"><expr pos:start="1279:13" pos:end="1279:54"><call pos:start="1279:13" pos:end="1279:54"><name pos:start="1279:13" pos:end="1279:32">gen_loongson_integer</name><argument_list pos:start="1279:33" pos:end="1279:54">(<argument pos:start="1279:34" pos:end="1279:36"><expr pos:start="1279:34" pos:end="1279:36"><name pos:start="1279:34" pos:end="1279:36">ctx</name></expr></argument>, <argument pos:start="1279:39" pos:end="1279:41"><expr pos:start="1279:39" pos:end="1279:41"><name pos:start="1279:39" pos:end="1279:41">op1</name></expr></argument>, <argument pos:start="1279:44" pos:end="1279:45"><expr pos:start="1279:44" pos:end="1279:45"><name pos:start="1279:44" pos:end="1279:45">rd</name></expr></argument>, <argument pos:start="1279:48" pos:end="1279:49"><expr pos:start="1279:48" pos:end="1279:49"><name pos:start="1279:48" pos:end="1279:49">rs</name></expr></argument>, <argument pos:start="1279:52" pos:end="1279:53"><expr pos:start="1279:52" pos:end="1279:53"><name pos:start="1279:52" pos:end="1279:53">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1281:13" pos:end="1281:18">break;</break>

        <case pos:start="1283:9" pos:end="1283:31">case <expr pos:start="1283:14" pos:end="1283:30"><name pos:start="1283:14" pos:end="1283:30">OPC_ABSQ_S_QH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1285:13" pos:end="1285:46"><expr pos:start="1285:13" pos:end="1285:45"><name pos:start="1285:13" pos:end="1285:15">op2</name> <operator pos:start="1285:17" pos:end="1285:17">=</operator> <call pos:start="1285:19" pos:end="1285:45"><name pos:start="1285:19" pos:end="1285:32">MASK_ABSQ_S_QH</name><argument_list pos:start="1285:33" pos:end="1285:45">(<argument pos:start="1285:34" pos:end="1285:44"><expr pos:start="1285:34" pos:end="1285:44"><name pos:start="1285:34" pos:end="1285:44"><name pos:start="1285:34" pos:end="1285:36">ctx</name><operator pos:start="1285:37" pos:end="1285:38">-&gt;</operator><name pos:start="1285:39" pos:end="1285:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1287:13" pos:end="1351:13">switch <condition pos:start="1287:20" pos:end="1287:24">(<expr pos:start="1287:21" pos:end="1287:23"><name pos:start="1287:21" pos:end="1287:23">op2</name></expr>)</condition> <block pos:start="1287:26" pos:end="1351:13">{<block_content pos:start="1289:13" pos:end="1349:22">

            <case pos:start="1289:13" pos:end="1289:34">case <expr pos:start="1289:18" pos:end="1289:33"><name pos:start="1289:18" pos:end="1289:33">OPC_PRECEQ_L_PWL</name></expr>:</case>

            <case pos:start="1291:13" pos:end="1291:34">case <expr pos:start="1291:18" pos:end="1291:33"><name pos:start="1291:18" pos:end="1291:33">OPC_PRECEQ_L_PWR</name></expr>:</case>

            <case pos:start="1293:13" pos:end="1293:35">case <expr pos:start="1293:18" pos:end="1293:34"><name pos:start="1293:18" pos:end="1293:34">OPC_PRECEQ_PW_QHL</name></expr>:</case>

            <case pos:start="1295:13" pos:end="1295:35">case <expr pos:start="1295:18" pos:end="1295:34"><name pos:start="1295:18" pos:end="1295:34">OPC_PRECEQ_PW_QHR</name></expr>:</case>

            <case pos:start="1297:13" pos:end="1297:36">case <expr pos:start="1297:18" pos:end="1297:35"><name pos:start="1297:18" pos:end="1297:35">OPC_PRECEQ_PW_QHLA</name></expr>:</case>

            <case pos:start="1299:13" pos:end="1299:36">case <expr pos:start="1299:18" pos:end="1299:35"><name pos:start="1299:18" pos:end="1299:35">OPC_PRECEQ_PW_QHRA</name></expr>:</case>

            <case pos:start="1301:13" pos:end="1301:36">case <expr pos:start="1301:18" pos:end="1301:35"><name pos:start="1301:18" pos:end="1301:35">OPC_PRECEQU_QH_OBL</name></expr>:</case>

            <case pos:start="1303:13" pos:end="1303:36">case <expr pos:start="1303:18" pos:end="1303:35"><name pos:start="1303:18" pos:end="1303:35">OPC_PRECEQU_QH_OBR</name></expr>:</case>

            <case pos:start="1305:13" pos:end="1305:37">case <expr pos:start="1305:18" pos:end="1305:36"><name pos:start="1305:18" pos:end="1305:36">OPC_PRECEQU_QH_OBLA</name></expr>:</case>

            <case pos:start="1307:13" pos:end="1307:37">case <expr pos:start="1307:18" pos:end="1307:36"><name pos:start="1307:18" pos:end="1307:36">OPC_PRECEQU_QH_OBRA</name></expr>:</case>

            <case pos:start="1309:13" pos:end="1309:35">case <expr pos:start="1309:18" pos:end="1309:34"><name pos:start="1309:18" pos:end="1309:34">OPC_PRECEU_QH_OBL</name></expr>:</case>

            <case pos:start="1311:13" pos:end="1311:35">case <expr pos:start="1311:18" pos:end="1311:34"><name pos:start="1311:18" pos:end="1311:34">OPC_PRECEU_QH_OBR</name></expr>:</case>

            <case pos:start="1313:13" pos:end="1313:36">case <expr pos:start="1313:18" pos:end="1313:35"><name pos:start="1313:18" pos:end="1313:35">OPC_PRECEU_QH_OBLA</name></expr>:</case>

            <case pos:start="1315:13" pos:end="1315:36">case <expr pos:start="1315:18" pos:end="1315:35"><name pos:start="1315:18" pos:end="1315:35">OPC_PRECEU_QH_OBRA</name></expr>:</case>

            <case pos:start="1317:13" pos:end="1317:31">case <expr pos:start="1317:18" pos:end="1317:30"><name pos:start="1317:18" pos:end="1317:30">OPC_ABSQ_S_OB</name></expr>:</case>

            <case pos:start="1319:13" pos:end="1319:31">case <expr pos:start="1319:18" pos:end="1319:30"><name pos:start="1319:18" pos:end="1319:30">OPC_ABSQ_S_PW</name></expr>:</case>

            <case pos:start="1321:13" pos:end="1321:31">case <expr pos:start="1321:18" pos:end="1321:30"><name pos:start="1321:18" pos:end="1321:30">OPC_ABSQ_S_QH</name></expr>:</case>

                <expr_stmt pos:start="1323:17" pos:end="1323:61"><expr pos:start="1323:17" pos:end="1323:60"><call pos:start="1323:17" pos:end="1323:60"><name pos:start="1323:17" pos:end="1323:33">gen_mipsdsp_arith</name><argument_list pos:start="1323:34" pos:end="1323:60">(<argument pos:start="1323:35" pos:end="1323:37"><expr pos:start="1323:35" pos:end="1323:37"><name pos:start="1323:35" pos:end="1323:37">ctx</name></expr></argument>, <argument pos:start="1323:40" pos:end="1323:42"><expr pos:start="1323:40" pos:end="1323:42"><name pos:start="1323:40" pos:end="1323:42">op1</name></expr></argument>, <argument pos:start="1323:45" pos:end="1323:47"><expr pos:start="1323:45" pos:end="1323:47"><name pos:start="1323:45" pos:end="1323:47">op2</name></expr></argument>, <argument pos:start="1323:50" pos:end="1323:51"><expr pos:start="1323:50" pos:end="1323:51"><name pos:start="1323:50" pos:end="1323:51">rd</name></expr></argument>, <argument pos:start="1323:54" pos:end="1323:55"><expr pos:start="1323:54" pos:end="1323:55"><name pos:start="1323:54" pos:end="1323:55">rs</name></expr></argument>, <argument pos:start="1323:58" pos:end="1323:59"><expr pos:start="1323:58" pos:end="1323:59"><name pos:start="1323:58" pos:end="1323:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1325:17" pos:end="1325:22">break;</break>

            <case pos:start="1327:13" pos:end="1327:29">case <expr pos:start="1327:18" pos:end="1327:28"><name pos:start="1327:18" pos:end="1327:28">OPC_REPL_OB</name></expr>:</case>

            <case pos:start="1329:13" pos:end="1329:29">case <expr pos:start="1329:18" pos:end="1329:28"><name pos:start="1329:18" pos:end="1329:28">OPC_REPL_PW</name></expr>:</case>

            <case pos:start="1331:13" pos:end="1331:29">case <expr pos:start="1331:18" pos:end="1331:28"><name pos:start="1331:18" pos:end="1331:28">OPC_REPL_QH</name></expr>:</case>

            <case pos:start="1333:13" pos:end="1333:30">case <expr pos:start="1333:18" pos:end="1333:29"><name pos:start="1333:18" pos:end="1333:29">OPC_REPLV_OB</name></expr>:</case>

            <case pos:start="1335:13" pos:end="1335:30">case <expr pos:start="1335:18" pos:end="1335:29"><name pos:start="1335:18" pos:end="1335:29">OPC_REPLV_PW</name></expr>:</case>

            <case pos:start="1337:13" pos:end="1337:30">case <expr pos:start="1337:18" pos:end="1337:29"><name pos:start="1337:18" pos:end="1337:29">OPC_REPLV_QH</name></expr>:</case>

                <expr_stmt pos:start="1339:17" pos:end="1339:59"><expr pos:start="1339:17" pos:end="1339:58"><call pos:start="1339:17" pos:end="1339:58"><name pos:start="1339:17" pos:end="1339:35">gen_mipsdsp_bitinsn</name><argument_list pos:start="1339:36" pos:end="1339:58">(<argument pos:start="1339:37" pos:end="1339:39"><expr pos:start="1339:37" pos:end="1339:39"><name pos:start="1339:37" pos:end="1339:39">ctx</name></expr></argument>, <argument pos:start="1339:42" pos:end="1339:44"><expr pos:start="1339:42" pos:end="1339:44"><name pos:start="1339:42" pos:end="1339:44">op1</name></expr></argument>, <argument pos:start="1339:47" pos:end="1339:49"><expr pos:start="1339:47" pos:end="1339:49"><name pos:start="1339:47" pos:end="1339:49">op2</name></expr></argument>, <argument pos:start="1339:52" pos:end="1339:53"><expr pos:start="1339:52" pos:end="1339:53"><name pos:start="1339:52" pos:end="1339:53">rd</name></expr></argument>, <argument pos:start="1339:56" pos:end="1339:57"><expr pos:start="1339:56" pos:end="1339:57"><name pos:start="1339:56" pos:end="1339:57">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1341:17" pos:end="1341:22">break;</break>

            <default pos:start="1343:13" pos:end="1343:20">default:</default>            <comment type="block" pos:start="1343:33" pos:end="1343:45">/* Invalid */</comment>

                <expr_stmt pos:start="1345:17" pos:end="1345:45"><expr pos:start="1345:17" pos:end="1345:44"><call pos:start="1345:17" pos:end="1345:44"><name pos:start="1345:17" pos:end="1345:26">MIPS_INVAL</name><argument_list pos:start="1345:27" pos:end="1345:44">(<argument pos:start="1345:28" pos:end="1345:43"><expr pos:start="1345:28" pos:end="1345:43"><literal type="string" pos:start="1345:28" pos:end="1345:43">"MASK ABSQ_S.QH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1347:17" pos:end="1347:49"><expr pos:start="1347:17" pos:end="1347:48"><call pos:start="1347:17" pos:end="1347:48"><name pos:start="1347:17" pos:end="1347:34">generate_exception</name><argument_list pos:start="1347:35" pos:end="1347:48">(<argument pos:start="1347:36" pos:end="1347:38"><expr pos:start="1347:36" pos:end="1347:38"><name pos:start="1347:36" pos:end="1347:38">ctx</name></expr></argument>, <argument pos:start="1347:41" pos:end="1347:47"><expr pos:start="1347:41" pos:end="1347:47"><name pos:start="1347:41" pos:end="1347:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1349:17" pos:end="1349:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1353:13" pos:end="1353:18">break;</break>

        <case pos:start="1355:9" pos:end="1355:29">case <expr pos:start="1355:14" pos:end="1355:28"><name pos:start="1355:14" pos:end="1355:28">OPC_ADDU_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1357:13" pos:end="1357:44"><expr pos:start="1357:13" pos:end="1357:43"><name pos:start="1357:13" pos:end="1357:15">op2</name> <operator pos:start="1357:17" pos:end="1357:17">=</operator> <call pos:start="1357:19" pos:end="1357:43"><name pos:start="1357:19" pos:end="1357:30">MASK_ADDU_OB</name><argument_list pos:start="1357:31" pos:end="1357:43">(<argument pos:start="1357:32" pos:end="1357:42"><expr pos:start="1357:32" pos:end="1357:42"><name pos:start="1357:32" pos:end="1357:42"><name pos:start="1357:32" pos:end="1357:34">ctx</name><operator pos:start="1357:35" pos:end="1357:36">-&gt;</operator><name pos:start="1357:37" pos:end="1357:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1359:13" pos:end="1429:13">switch <condition pos:start="1359:20" pos:end="1359:24">(<expr pos:start="1359:21" pos:end="1359:23"><name pos:start="1359:21" pos:end="1359:23">op2</name></expr>)</condition> <block pos:start="1359:26" pos:end="1429:13">{<block_content pos:start="1361:13" pos:end="1427:22">

            <case pos:start="1361:13" pos:end="1361:32">case <expr pos:start="1361:18" pos:end="1361:31"><name pos:start="1361:18" pos:end="1361:31">OPC_RADDU_L_OB</name></expr>:</case>

            <case pos:start="1363:13" pos:end="1363:29">case <expr pos:start="1363:18" pos:end="1363:28"><name pos:start="1363:18" pos:end="1363:28">OPC_SUBQ_PW</name></expr>:</case>

            <case pos:start="1365:13" pos:end="1365:31">case <expr pos:start="1365:18" pos:end="1365:30"><name pos:start="1365:18" pos:end="1365:30">OPC_SUBQ_S_PW</name></expr>:</case>

            <case pos:start="1367:13" pos:end="1367:29">case <expr pos:start="1367:18" pos:end="1367:28"><name pos:start="1367:18" pos:end="1367:28">OPC_SUBQ_QH</name></expr>:</case>

            <case pos:start="1369:13" pos:end="1369:31">case <expr pos:start="1369:18" pos:end="1369:30"><name pos:start="1369:18" pos:end="1369:30">OPC_SUBQ_S_QH</name></expr>:</case>

            <case pos:start="1371:13" pos:end="1371:29">case <expr pos:start="1371:18" pos:end="1371:28"><name pos:start="1371:18" pos:end="1371:28">OPC_SUBU_OB</name></expr>:</case>

            <case pos:start="1373:13" pos:end="1373:31">case <expr pos:start="1373:18" pos:end="1373:30"><name pos:start="1373:18" pos:end="1373:30">OPC_SUBU_S_OB</name></expr>:</case>

            <case pos:start="1375:13" pos:end="1375:29">case <expr pos:start="1375:18" pos:end="1375:28"><name pos:start="1375:18" pos:end="1375:28">OPC_SUBU_QH</name></expr>:</case>

            <case pos:start="1377:13" pos:end="1377:31">case <expr pos:start="1377:18" pos:end="1377:30"><name pos:start="1377:18" pos:end="1377:30">OPC_SUBU_S_QH</name></expr>:</case>

            <case pos:start="1379:13" pos:end="1379:30">case <expr pos:start="1379:18" pos:end="1379:29"><name pos:start="1379:18" pos:end="1379:29">OPC_SUBUH_OB</name></expr>:</case>

            <case pos:start="1381:13" pos:end="1381:32">case <expr pos:start="1381:18" pos:end="1381:31"><name pos:start="1381:18" pos:end="1381:31">OPC_SUBUH_R_OB</name></expr>:</case>

            <case pos:start="1383:13" pos:end="1383:29">case <expr pos:start="1383:18" pos:end="1383:28"><name pos:start="1383:18" pos:end="1383:28">OPC_ADDQ_PW</name></expr>:</case>

            <case pos:start="1385:13" pos:end="1385:31">case <expr pos:start="1385:18" pos:end="1385:30"><name pos:start="1385:18" pos:end="1385:30">OPC_ADDQ_S_PW</name></expr>:</case>

            <case pos:start="1387:13" pos:end="1387:29">case <expr pos:start="1387:18" pos:end="1387:28"><name pos:start="1387:18" pos:end="1387:28">OPC_ADDQ_QH</name></expr>:</case>

            <case pos:start="1389:13" pos:end="1389:31">case <expr pos:start="1389:18" pos:end="1389:30"><name pos:start="1389:18" pos:end="1389:30">OPC_ADDQ_S_QH</name></expr>:</case>

            <case pos:start="1391:13" pos:end="1391:29">case <expr pos:start="1391:18" pos:end="1391:28"><name pos:start="1391:18" pos:end="1391:28">OPC_ADDU_OB</name></expr>:</case>

            <case pos:start="1393:13" pos:end="1393:31">case <expr pos:start="1393:18" pos:end="1393:30"><name pos:start="1393:18" pos:end="1393:30">OPC_ADDU_S_OB</name></expr>:</case>

            <case pos:start="1395:13" pos:end="1395:29">case <expr pos:start="1395:18" pos:end="1395:28"><name pos:start="1395:18" pos:end="1395:28">OPC_ADDU_QH</name></expr>:</case>

            <case pos:start="1397:13" pos:end="1397:31">case <expr pos:start="1397:18" pos:end="1397:30"><name pos:start="1397:18" pos:end="1397:30">OPC_ADDU_S_QH</name></expr>:</case>

            <case pos:start="1399:13" pos:end="1399:30">case <expr pos:start="1399:18" pos:end="1399:29"><name pos:start="1399:18" pos:end="1399:29">OPC_ADDUH_OB</name></expr>:</case>

            <case pos:start="1401:13" pos:end="1401:32">case <expr pos:start="1401:18" pos:end="1401:31"><name pos:start="1401:18" pos:end="1401:31">OPC_ADDUH_R_OB</name></expr>:</case>

                <expr_stmt pos:start="1403:17" pos:end="1403:61"><expr pos:start="1403:17" pos:end="1403:60"><call pos:start="1403:17" pos:end="1403:60"><name pos:start="1403:17" pos:end="1403:33">gen_mipsdsp_arith</name><argument_list pos:start="1403:34" pos:end="1403:60">(<argument pos:start="1403:35" pos:end="1403:37"><expr pos:start="1403:35" pos:end="1403:37"><name pos:start="1403:35" pos:end="1403:37">ctx</name></expr></argument>, <argument pos:start="1403:40" pos:end="1403:42"><expr pos:start="1403:40" pos:end="1403:42"><name pos:start="1403:40" pos:end="1403:42">op1</name></expr></argument>, <argument pos:start="1403:45" pos:end="1403:47"><expr pos:start="1403:45" pos:end="1403:47"><name pos:start="1403:45" pos:end="1403:47">op2</name></expr></argument>, <argument pos:start="1403:50" pos:end="1403:51"><expr pos:start="1403:50" pos:end="1403:51"><name pos:start="1403:50" pos:end="1403:51">rd</name></expr></argument>, <argument pos:start="1403:54" pos:end="1403:55"><expr pos:start="1403:54" pos:end="1403:55"><name pos:start="1403:54" pos:end="1403:55">rs</name></expr></argument>, <argument pos:start="1403:58" pos:end="1403:59"><expr pos:start="1403:58" pos:end="1403:59"><name pos:start="1403:58" pos:end="1403:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1405:17" pos:end="1405:22">break;</break>

            <case pos:start="1407:13" pos:end="1407:36">case <expr pos:start="1407:18" pos:end="1407:35"><name pos:start="1407:18" pos:end="1407:35">OPC_MULEQ_S_PW_QHL</name></expr>:</case>

            <case pos:start="1409:13" pos:end="1409:36">case <expr pos:start="1409:18" pos:end="1409:35"><name pos:start="1409:18" pos:end="1409:35">OPC_MULEQ_S_PW_QHR</name></expr>:</case>

            <case pos:start="1411:13" pos:end="1411:36">case <expr pos:start="1411:18" pos:end="1411:35"><name pos:start="1411:18" pos:end="1411:35">OPC_MULEU_S_QH_OBL</name></expr>:</case>

            <case pos:start="1413:13" pos:end="1413:36">case <expr pos:start="1413:18" pos:end="1413:35"><name pos:start="1413:18" pos:end="1413:35">OPC_MULEU_S_QH_OBR</name></expr>:</case>

            <case pos:start="1415:13" pos:end="1415:32">case <expr pos:start="1415:18" pos:end="1415:31"><name pos:start="1415:18" pos:end="1415:31">OPC_MULQ_RS_QH</name></expr>:</case>

                <expr_stmt pos:start="1417:17" pos:end="1417:67"><expr pos:start="1417:17" pos:end="1417:66"><call pos:start="1417:17" pos:end="1417:66"><name pos:start="1417:17" pos:end="1417:36">gen_mipsdsp_multiply</name><argument_list pos:start="1417:37" pos:end="1417:66">(<argument pos:start="1417:38" pos:end="1417:40"><expr pos:start="1417:38" pos:end="1417:40"><name pos:start="1417:38" pos:end="1417:40">ctx</name></expr></argument>, <argument pos:start="1417:43" pos:end="1417:45"><expr pos:start="1417:43" pos:end="1417:45"><name pos:start="1417:43" pos:end="1417:45">op1</name></expr></argument>, <argument pos:start="1417:48" pos:end="1417:50"><expr pos:start="1417:48" pos:end="1417:50"><name pos:start="1417:48" pos:end="1417:50">op2</name></expr></argument>, <argument pos:start="1417:53" pos:end="1417:54"><expr pos:start="1417:53" pos:end="1417:54"><name pos:start="1417:53" pos:end="1417:54">rd</name></expr></argument>, <argument pos:start="1417:57" pos:end="1417:58"><expr pos:start="1417:57" pos:end="1417:58"><name pos:start="1417:57" pos:end="1417:58">rs</name></expr></argument>, <argument pos:start="1417:61" pos:end="1417:62"><expr pos:start="1417:61" pos:end="1417:62"><name pos:start="1417:61" pos:end="1417:62">rt</name></expr></argument>, <argument pos:start="1417:65" pos:end="1417:65"><expr pos:start="1417:65" pos:end="1417:65"><literal type="number" pos:start="1417:65" pos:end="1417:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1419:17" pos:end="1419:22">break;</break>

            <default pos:start="1421:13" pos:end="1421:20">default:</default>            <comment type="block" pos:start="1421:33" pos:end="1421:45">/* Invalid */</comment>

                <expr_stmt pos:start="1423:17" pos:end="1423:43"><expr pos:start="1423:17" pos:end="1423:42"><call pos:start="1423:17" pos:end="1423:42"><name pos:start="1423:17" pos:end="1423:26">MIPS_INVAL</name><argument_list pos:start="1423:27" pos:end="1423:42">(<argument pos:start="1423:28" pos:end="1423:41"><expr pos:start="1423:28" pos:end="1423:41"><literal type="string" pos:start="1423:28" pos:end="1423:41">"MASK ADDU.OB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1425:17" pos:end="1425:49"><expr pos:start="1425:17" pos:end="1425:48"><call pos:start="1425:17" pos:end="1425:48"><name pos:start="1425:17" pos:end="1425:34">generate_exception</name><argument_list pos:start="1425:35" pos:end="1425:48">(<argument pos:start="1425:36" pos:end="1425:38"><expr pos:start="1425:36" pos:end="1425:38"><name pos:start="1425:36" pos:end="1425:38">ctx</name></expr></argument>, <argument pos:start="1425:41" pos:end="1425:47"><expr pos:start="1425:41" pos:end="1425:47"><name pos:start="1425:41" pos:end="1425:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1427:17" pos:end="1427:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1431:13" pos:end="1431:18">break;</break>

        <case pos:start="1433:9" pos:end="1433:32">case <expr pos:start="1433:14" pos:end="1433:31"><name pos:start="1433:14" pos:end="1433:31">OPC_CMPU_EQ_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1435:13" pos:end="1435:47"><expr pos:start="1435:13" pos:end="1435:46"><name pos:start="1435:13" pos:end="1435:15">op2</name> <operator pos:start="1435:17" pos:end="1435:17">=</operator> <call pos:start="1435:19" pos:end="1435:46"><name pos:start="1435:19" pos:end="1435:33">MASK_CMPU_EQ_OB</name><argument_list pos:start="1435:34" pos:end="1435:46">(<argument pos:start="1435:35" pos:end="1435:45"><expr pos:start="1435:35" pos:end="1435:45"><name pos:start="1435:35" pos:end="1435:45"><name pos:start="1435:35" pos:end="1435:37">ctx</name><operator pos:start="1435:38" pos:end="1435:39">-&gt;</operator><name pos:start="1435:40" pos:end="1435:45">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1437:13" pos:end="1519:13">switch <condition pos:start="1437:20" pos:end="1437:24">(<expr pos:start="1437:21" pos:end="1437:23"><name pos:start="1437:21" pos:end="1437:23">op2</name></expr>)</condition> <block pos:start="1437:26" pos:end="1519:13">{<block_content pos:start="1439:13" pos:end="1517:22">

            <case pos:start="1439:13" pos:end="1439:37">case <expr pos:start="1439:18" pos:end="1439:36"><name pos:start="1439:18" pos:end="1439:36">OPC_PRECR_SRA_QH_PW</name></expr>:</case>

            <case pos:start="1441:13" pos:end="1441:39">case <expr pos:start="1441:18" pos:end="1441:38"><name pos:start="1441:18" pos:end="1441:38">OPC_PRECR_SRA_R_QH_PW</name></expr>:</case>

                <comment type="block" pos:start="1443:17" pos:end="1443:41">/* Return value is rt. */</comment>

                <expr_stmt pos:start="1445:17" pos:end="1445:61"><expr pos:start="1445:17" pos:end="1445:60"><call pos:start="1445:17" pos:end="1445:60"><name pos:start="1445:17" pos:end="1445:33">gen_mipsdsp_arith</name><argument_list pos:start="1445:34" pos:end="1445:60">(<argument pos:start="1445:35" pos:end="1445:37"><expr pos:start="1445:35" pos:end="1445:37"><name pos:start="1445:35" pos:end="1445:37">ctx</name></expr></argument>, <argument pos:start="1445:40" pos:end="1445:42"><expr pos:start="1445:40" pos:end="1445:42"><name pos:start="1445:40" pos:end="1445:42">op1</name></expr></argument>, <argument pos:start="1445:45" pos:end="1445:47"><expr pos:start="1445:45" pos:end="1445:47"><name pos:start="1445:45" pos:end="1445:47">op2</name></expr></argument>, <argument pos:start="1445:50" pos:end="1445:51"><expr pos:start="1445:50" pos:end="1445:51"><name pos:start="1445:50" pos:end="1445:51">rt</name></expr></argument>, <argument pos:start="1445:54" pos:end="1445:55"><expr pos:start="1445:54" pos:end="1445:55"><name pos:start="1445:54" pos:end="1445:55">rs</name></expr></argument>, <argument pos:start="1445:58" pos:end="1445:59"><expr pos:start="1445:58" pos:end="1445:59"><name pos:start="1445:58" pos:end="1445:59">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1447:17" pos:end="1447:22">break;</break>

            <case pos:start="1449:13" pos:end="1449:33">case <expr pos:start="1449:18" pos:end="1449:32"><name pos:start="1449:18" pos:end="1449:32">OPC_PRECR_OB_QH</name></expr>:</case>

            <case pos:start="1451:13" pos:end="1451:34">case <expr pos:start="1451:18" pos:end="1451:33"><name pos:start="1451:18" pos:end="1451:33">OPC_PRECRQ_OB_QH</name></expr>:</case>

            <case pos:start="1453:13" pos:end="1453:33">case <expr pos:start="1453:18" pos:end="1453:32"><name pos:start="1453:18" pos:end="1453:32">OPC_PRECRQ_PW_L</name></expr>:</case>

            <case pos:start="1455:13" pos:end="1455:34">case <expr pos:start="1455:18" pos:end="1455:33"><name pos:start="1455:18" pos:end="1455:33">OPC_PRECRQ_QH_PW</name></expr>:</case>

            <case pos:start="1457:13" pos:end="1457:37">case <expr pos:start="1457:18" pos:end="1457:36"><name pos:start="1457:18" pos:end="1457:36">OPC_PRECRQ_RS_QH_PW</name></expr>:</case>

            <case pos:start="1459:13" pos:end="1459:37">case <expr pos:start="1459:18" pos:end="1459:36"><name pos:start="1459:18" pos:end="1459:36">OPC_PRECRQU_S_OB_QH</name></expr>:</case>

                <expr_stmt pos:start="1461:17" pos:end="1461:61"><expr pos:start="1461:17" pos:end="1461:60"><call pos:start="1461:17" pos:end="1461:60"><name pos:start="1461:17" pos:end="1461:33">gen_mipsdsp_arith</name><argument_list pos:start="1461:34" pos:end="1461:60">(<argument pos:start="1461:35" pos:end="1461:37"><expr pos:start="1461:35" pos:end="1461:37"><name pos:start="1461:35" pos:end="1461:37">ctx</name></expr></argument>, <argument pos:start="1461:40" pos:end="1461:42"><expr pos:start="1461:40" pos:end="1461:42"><name pos:start="1461:40" pos:end="1461:42">op1</name></expr></argument>, <argument pos:start="1461:45" pos:end="1461:47"><expr pos:start="1461:45" pos:end="1461:47"><name pos:start="1461:45" pos:end="1461:47">op2</name></expr></argument>, <argument pos:start="1461:50" pos:end="1461:51"><expr pos:start="1461:50" pos:end="1461:51"><name pos:start="1461:50" pos:end="1461:51">rd</name></expr></argument>, <argument pos:start="1461:54" pos:end="1461:55"><expr pos:start="1461:54" pos:end="1461:55"><name pos:start="1461:54" pos:end="1461:55">rs</name></expr></argument>, <argument pos:start="1461:58" pos:end="1461:59"><expr pos:start="1461:58" pos:end="1461:59"><name pos:start="1461:58" pos:end="1461:59">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1463:17" pos:end="1463:22">break;</break>

            <case pos:start="1465:13" pos:end="1465:32">case <expr pos:start="1465:18" pos:end="1465:31"><name pos:start="1465:18" pos:end="1465:31">OPC_CMPU_EQ_OB</name></expr>:</case>

            <case pos:start="1467:13" pos:end="1467:32">case <expr pos:start="1467:18" pos:end="1467:31"><name pos:start="1467:18" pos:end="1467:31">OPC_CMPU_LT_OB</name></expr>:</case>

            <case pos:start="1469:13" pos:end="1469:32">case <expr pos:start="1469:18" pos:end="1469:31"><name pos:start="1469:18" pos:end="1469:31">OPC_CMPU_LE_OB</name></expr>:</case>

            <case pos:start="1471:13" pos:end="1471:31">case <expr pos:start="1471:18" pos:end="1471:30"><name pos:start="1471:18" pos:end="1471:30">OPC_CMP_EQ_QH</name></expr>:</case>

            <case pos:start="1473:13" pos:end="1473:31">case <expr pos:start="1473:18" pos:end="1473:30"><name pos:start="1473:18" pos:end="1473:30">OPC_CMP_LT_QH</name></expr>:</case>

            <case pos:start="1475:13" pos:end="1475:31">case <expr pos:start="1475:18" pos:end="1475:30"><name pos:start="1475:18" pos:end="1475:30">OPC_CMP_LE_QH</name></expr>:</case>

            <case pos:start="1477:13" pos:end="1477:31">case <expr pos:start="1477:18" pos:end="1477:30"><name pos:start="1477:18" pos:end="1477:30">OPC_CMP_EQ_PW</name></expr>:</case>

            <case pos:start="1479:13" pos:end="1479:31">case <expr pos:start="1479:18" pos:end="1479:30"><name pos:start="1479:18" pos:end="1479:30">OPC_CMP_LT_PW</name></expr>:</case>

            <case pos:start="1481:13" pos:end="1481:31">case <expr pos:start="1481:18" pos:end="1481:30"><name pos:start="1481:18" pos:end="1481:30">OPC_CMP_LE_PW</name></expr>:</case>

                <expr_stmt pos:start="1483:17" pos:end="1483:71"><expr pos:start="1483:17" pos:end="1483:70"><call pos:start="1483:17" pos:end="1483:70"><name pos:start="1483:17" pos:end="1483:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1483:41" pos:end="1483:70">(<argument pos:start="1483:42" pos:end="1483:44"><expr pos:start="1483:42" pos:end="1483:44"><name pos:start="1483:42" pos:end="1483:44">ctx</name></expr></argument>, <argument pos:start="1483:47" pos:end="1483:49"><expr pos:start="1483:47" pos:end="1483:49"><name pos:start="1483:47" pos:end="1483:49">op1</name></expr></argument>, <argument pos:start="1483:52" pos:end="1483:54"><expr pos:start="1483:52" pos:end="1483:54"><name pos:start="1483:52" pos:end="1483:54">op2</name></expr></argument>, <argument pos:start="1483:57" pos:end="1483:58"><expr pos:start="1483:57" pos:end="1483:58"><name pos:start="1483:57" pos:end="1483:58">rd</name></expr></argument>, <argument pos:start="1483:61" pos:end="1483:62"><expr pos:start="1483:61" pos:end="1483:62"><name pos:start="1483:61" pos:end="1483:62">rs</name></expr></argument>, <argument pos:start="1483:65" pos:end="1483:66"><expr pos:start="1483:65" pos:end="1483:66"><name pos:start="1483:65" pos:end="1483:66">rt</name></expr></argument>, <argument pos:start="1483:69" pos:end="1483:69"><expr pos:start="1483:69" pos:end="1483:69"><literal type="number" pos:start="1483:69" pos:end="1483:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1485:17" pos:end="1485:22">break;</break>

            <case pos:start="1487:13" pos:end="1487:34">case <expr pos:start="1487:18" pos:end="1487:33"><name pos:start="1487:18" pos:end="1487:33">OPC_CMPGDU_EQ_OB</name></expr>:</case>

            <case pos:start="1489:13" pos:end="1489:34">case <expr pos:start="1489:18" pos:end="1489:33"><name pos:start="1489:18" pos:end="1489:33">OPC_CMPGDU_LT_OB</name></expr>:</case>

            <case pos:start="1491:13" pos:end="1491:34">case <expr pos:start="1491:18" pos:end="1491:33"><name pos:start="1491:18" pos:end="1491:33">OPC_CMPGDU_LE_OB</name></expr>:</case>

            <case pos:start="1493:13" pos:end="1493:33">case <expr pos:start="1493:18" pos:end="1493:32"><name pos:start="1493:18" pos:end="1493:32">OPC_CMPGU_EQ_OB</name></expr>:</case>

            <case pos:start="1495:13" pos:end="1495:33">case <expr pos:start="1495:18" pos:end="1495:32"><name pos:start="1495:18" pos:end="1495:32">OPC_CMPGU_LT_OB</name></expr>:</case>

            <case pos:start="1497:13" pos:end="1497:33">case <expr pos:start="1497:18" pos:end="1497:32"><name pos:start="1497:18" pos:end="1497:32">OPC_CMPGU_LE_OB</name></expr>:</case>

            <case pos:start="1499:13" pos:end="1499:31">case <expr pos:start="1499:18" pos:end="1499:30"><name pos:start="1499:18" pos:end="1499:30">OPC_PACKRL_PW</name></expr>:</case>

            <case pos:start="1501:13" pos:end="1501:29">case <expr pos:start="1501:18" pos:end="1501:28"><name pos:start="1501:18" pos:end="1501:28">OPC_PICK_OB</name></expr>:</case>

            <case pos:start="1503:13" pos:end="1503:29">case <expr pos:start="1503:18" pos:end="1503:28"><name pos:start="1503:18" pos:end="1503:28">OPC_PICK_PW</name></expr>:</case>

            <case pos:start="1505:13" pos:end="1505:29">case <expr pos:start="1505:18" pos:end="1505:28"><name pos:start="1505:18" pos:end="1505:28">OPC_PICK_QH</name></expr>:</case>

                <expr_stmt pos:start="1507:17" pos:end="1507:71"><expr pos:start="1507:17" pos:end="1507:70"><call pos:start="1507:17" pos:end="1507:70"><name pos:start="1507:17" pos:end="1507:40">gen_mipsdsp_add_cmp_pick</name><argument_list pos:start="1507:41" pos:end="1507:70">(<argument pos:start="1507:42" pos:end="1507:44"><expr pos:start="1507:42" pos:end="1507:44"><name pos:start="1507:42" pos:end="1507:44">ctx</name></expr></argument>, <argument pos:start="1507:47" pos:end="1507:49"><expr pos:start="1507:47" pos:end="1507:49"><name pos:start="1507:47" pos:end="1507:49">op1</name></expr></argument>, <argument pos:start="1507:52" pos:end="1507:54"><expr pos:start="1507:52" pos:end="1507:54"><name pos:start="1507:52" pos:end="1507:54">op2</name></expr></argument>, <argument pos:start="1507:57" pos:end="1507:58"><expr pos:start="1507:57" pos:end="1507:58"><name pos:start="1507:57" pos:end="1507:58">rd</name></expr></argument>, <argument pos:start="1507:61" pos:end="1507:62"><expr pos:start="1507:61" pos:end="1507:62"><name pos:start="1507:61" pos:end="1507:62">rs</name></expr></argument>, <argument pos:start="1507:65" pos:end="1507:66"><expr pos:start="1507:65" pos:end="1507:66"><name pos:start="1507:65" pos:end="1507:66">rt</name></expr></argument>, <argument pos:start="1507:69" pos:end="1507:69"><expr pos:start="1507:69" pos:end="1507:69"><literal type="number" pos:start="1507:69" pos:end="1507:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1509:17" pos:end="1509:22">break;</break>

            <default pos:start="1511:13" pos:end="1511:20">default:</default>            <comment type="block" pos:start="1511:33" pos:end="1511:45">/* Invalid */</comment>

                <expr_stmt pos:start="1513:17" pos:end="1513:46"><expr pos:start="1513:17" pos:end="1513:45"><call pos:start="1513:17" pos:end="1513:45"><name pos:start="1513:17" pos:end="1513:26">MIPS_INVAL</name><argument_list pos:start="1513:27" pos:end="1513:45">(<argument pos:start="1513:28" pos:end="1513:44"><expr pos:start="1513:28" pos:end="1513:44"><literal type="string" pos:start="1513:28" pos:end="1513:44">"MASK CMPU_EQ.OB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1515:17" pos:end="1515:49"><expr pos:start="1515:17" pos:end="1515:48"><call pos:start="1515:17" pos:end="1515:48"><name pos:start="1515:17" pos:end="1515:34">generate_exception</name><argument_list pos:start="1515:35" pos:end="1515:48">(<argument pos:start="1515:36" pos:end="1515:38"><expr pos:start="1515:36" pos:end="1515:38"><name pos:start="1515:36" pos:end="1515:38">ctx</name></expr></argument>, <argument pos:start="1515:41" pos:end="1515:47"><expr pos:start="1515:41" pos:end="1515:47"><name pos:start="1515:41" pos:end="1515:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1517:17" pos:end="1517:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1521:13" pos:end="1521:18">break;</break>

        <case pos:start="1523:9" pos:end="1523:29">case <expr pos:start="1523:14" pos:end="1523:28"><name pos:start="1523:14" pos:end="1523:28">OPC_DAPPEND_DSP</name></expr>:</case>

            <expr_stmt pos:start="1525:13" pos:end="1525:58"><expr pos:start="1525:13" pos:end="1525:57"><call pos:start="1525:13" pos:end="1525:57"><name pos:start="1525:13" pos:end="1525:30">gen_mipsdsp_append</name><argument_list pos:start="1525:31" pos:end="1525:57">(<argument pos:start="1525:32" pos:end="1525:34"><expr pos:start="1525:32" pos:end="1525:34"><name pos:start="1525:32" pos:end="1525:34">env</name></expr></argument>, <argument pos:start="1525:37" pos:end="1525:39"><expr pos:start="1525:37" pos:end="1525:39"><name pos:start="1525:37" pos:end="1525:39">ctx</name></expr></argument>, <argument pos:start="1525:42" pos:end="1525:44"><expr pos:start="1525:42" pos:end="1525:44"><name pos:start="1525:42" pos:end="1525:44">op1</name></expr></argument>, <argument pos:start="1525:47" pos:end="1525:48"><expr pos:start="1525:47" pos:end="1525:48"><name pos:start="1525:47" pos:end="1525:48">rt</name></expr></argument>, <argument pos:start="1525:51" pos:end="1525:52"><expr pos:start="1525:51" pos:end="1525:52"><name pos:start="1525:51" pos:end="1525:52">rs</name></expr></argument>, <argument pos:start="1525:55" pos:end="1525:56"><expr pos:start="1525:55" pos:end="1525:56"><name pos:start="1525:55" pos:end="1525:56">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1527:13" pos:end="1527:18">break;</break>

        <case pos:start="1529:9" pos:end="1529:29">case <expr pos:start="1529:14" pos:end="1529:28"><name pos:start="1529:14" pos:end="1529:28">OPC_DEXTR_W_DSP</name></expr>:</case>

            <expr_stmt pos:start="1531:13" pos:end="1531:44"><expr pos:start="1531:13" pos:end="1531:43"><name pos:start="1531:13" pos:end="1531:15">op2</name> <operator pos:start="1531:17" pos:end="1531:17">=</operator> <call pos:start="1531:19" pos:end="1531:43"><name pos:start="1531:19" pos:end="1531:30">MASK_DEXTR_W</name><argument_list pos:start="1531:31" pos:end="1531:43">(<argument pos:start="1531:32" pos:end="1531:42"><expr pos:start="1531:32" pos:end="1531:42"><name pos:start="1531:32" pos:end="1531:42"><name pos:start="1531:32" pos:end="1531:34">ctx</name><operator pos:start="1531:35" pos:end="1531:36">-&gt;</operator><name pos:start="1531:37" pos:end="1531:42">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1533:13" pos:end="1593:13">switch <condition pos:start="1533:20" pos:end="1533:24">(<expr pos:start="1533:21" pos:end="1533:23"><name pos:start="1533:21" pos:end="1533:23">op2</name></expr>)</condition> <block pos:start="1533:26" pos:end="1593:13">{<block_content pos:start="1535:13" pos:end="1591:22">

            <case pos:start="1535:13" pos:end="1535:27">case <expr pos:start="1535:18" pos:end="1535:26"><name pos:start="1535:18" pos:end="1535:26">OPC_DEXTP</name></expr>:</case>

            <case pos:start="1537:13" pos:end="1537:29">case <expr pos:start="1537:18" pos:end="1537:28"><name pos:start="1537:18" pos:end="1537:28">OPC_DEXTPDP</name></expr>:</case>

            <case pos:start="1539:13" pos:end="1539:30">case <expr pos:start="1539:18" pos:end="1539:29"><name pos:start="1539:18" pos:end="1539:29">OPC_DEXTPDPV</name></expr>:</case>

            <case pos:start="1541:13" pos:end="1541:28">case <expr pos:start="1541:18" pos:end="1541:27"><name pos:start="1541:18" pos:end="1541:27">OPC_DEXTPV</name></expr>:</case>

            <case pos:start="1543:13" pos:end="1543:29">case <expr pos:start="1543:18" pos:end="1543:28"><name pos:start="1543:18" pos:end="1543:28">OPC_DEXTR_L</name></expr>:</case>

            <case pos:start="1545:13" pos:end="1545:31">case <expr pos:start="1545:18" pos:end="1545:30"><name pos:start="1545:18" pos:end="1545:30">OPC_DEXTR_R_L</name></expr>:</case>

            <case pos:start="1547:13" pos:end="1547:32">case <expr pos:start="1547:18" pos:end="1547:31"><name pos:start="1547:18" pos:end="1547:31">OPC_DEXTR_RS_L</name></expr>:</case>

            <case pos:start="1549:13" pos:end="1549:29">case <expr pos:start="1549:18" pos:end="1549:28"><name pos:start="1549:18" pos:end="1549:28">OPC_DEXTR_W</name></expr>:</case>

            <case pos:start="1551:13" pos:end="1551:31">case <expr pos:start="1551:18" pos:end="1551:30"><name pos:start="1551:18" pos:end="1551:30">OPC_DEXTR_R_W</name></expr>:</case>

            <case pos:start="1553:13" pos:end="1553:32">case <expr pos:start="1553:18" pos:end="1553:31"><name pos:start="1553:18" pos:end="1553:31">OPC_DEXTR_RS_W</name></expr>:</case>

            <case pos:start="1555:13" pos:end="1555:31">case <expr pos:start="1555:18" pos:end="1555:30"><name pos:start="1555:18" pos:end="1555:30">OPC_DEXTR_S_H</name></expr>:</case>

            <case pos:start="1557:13" pos:end="1557:30">case <expr pos:start="1557:18" pos:end="1557:29"><name pos:start="1557:18" pos:end="1557:29">OPC_DEXTRV_L</name></expr>:</case>

            <case pos:start="1559:13" pos:end="1559:32">case <expr pos:start="1559:18" pos:end="1559:31"><name pos:start="1559:18" pos:end="1559:31">OPC_DEXTRV_R_L</name></expr>:</case>

            <case pos:start="1561:13" pos:end="1561:33">case <expr pos:start="1561:18" pos:end="1561:32"><name pos:start="1561:18" pos:end="1561:32">OPC_DEXTRV_RS_L</name></expr>:</case>

            <case pos:start="1563:13" pos:end="1563:32">case <expr pos:start="1563:18" pos:end="1563:31"><name pos:start="1563:18" pos:end="1563:31">OPC_DEXTRV_S_H</name></expr>:</case>

            <case pos:start="1565:13" pos:end="1565:30">case <expr pos:start="1565:18" pos:end="1565:29"><name pos:start="1565:18" pos:end="1565:29">OPC_DEXTRV_W</name></expr>:</case>

            <case pos:start="1567:13" pos:end="1567:32">case <expr pos:start="1567:18" pos:end="1567:31"><name pos:start="1567:18" pos:end="1567:31">OPC_DEXTRV_R_W</name></expr>:</case>

            <case pos:start="1569:13" pos:end="1569:33">case <expr pos:start="1569:18" pos:end="1569:32"><name pos:start="1569:18" pos:end="1569:32">OPC_DEXTRV_RS_W</name></expr>:</case>

                <expr_stmt pos:start="1571:17" pos:end="1571:66"><expr pos:start="1571:17" pos:end="1571:65"><call pos:start="1571:17" pos:end="1571:65"><name pos:start="1571:17" pos:end="1571:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1571:36" pos:end="1571:65">(<argument pos:start="1571:37" pos:end="1571:39"><expr pos:start="1571:37" pos:end="1571:39"><name pos:start="1571:37" pos:end="1571:39">ctx</name></expr></argument>, <argument pos:start="1571:42" pos:end="1571:44"><expr pos:start="1571:42" pos:end="1571:44"><name pos:start="1571:42" pos:end="1571:44">op1</name></expr></argument>, <argument pos:start="1571:47" pos:end="1571:49"><expr pos:start="1571:47" pos:end="1571:49"><name pos:start="1571:47" pos:end="1571:49">op2</name></expr></argument>, <argument pos:start="1571:52" pos:end="1571:53"><expr pos:start="1571:52" pos:end="1571:53"><name pos:start="1571:52" pos:end="1571:53">rt</name></expr></argument>, <argument pos:start="1571:56" pos:end="1571:57"><expr pos:start="1571:56" pos:end="1571:57"><name pos:start="1571:56" pos:end="1571:57">rs</name></expr></argument>, <argument pos:start="1571:60" pos:end="1571:61"><expr pos:start="1571:60" pos:end="1571:61"><name pos:start="1571:60" pos:end="1571:61">rd</name></expr></argument>, <argument pos:start="1571:64" pos:end="1571:64"><expr pos:start="1571:64" pos:end="1571:64"><literal type="number" pos:start="1571:64" pos:end="1571:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1573:17" pos:end="1573:22">break;</break>

            <case pos:start="1575:13" pos:end="1575:29">case <expr pos:start="1575:18" pos:end="1575:28"><name pos:start="1575:18" pos:end="1575:28">OPC_DMTHLIP</name></expr>:</case>

            <case pos:start="1577:13" pos:end="1577:28">case <expr pos:start="1577:18" pos:end="1577:27"><name pos:start="1577:18" pos:end="1577:27">OPC_DSHILO</name></expr>:</case>

            <case pos:start="1579:13" pos:end="1579:29">case <expr pos:start="1579:18" pos:end="1579:28"><name pos:start="1579:18" pos:end="1579:28">OPC_DSHILOV</name></expr>:</case>

                <expr_stmt pos:start="1581:17" pos:end="1581:66"><expr pos:start="1581:17" pos:end="1581:65"><call pos:start="1581:17" pos:end="1581:65"><name pos:start="1581:17" pos:end="1581:35">gen_mipsdsp_accinsn</name><argument_list pos:start="1581:36" pos:end="1581:65">(<argument pos:start="1581:37" pos:end="1581:39"><expr pos:start="1581:37" pos:end="1581:39"><name pos:start="1581:37" pos:end="1581:39">ctx</name></expr></argument>, <argument pos:start="1581:42" pos:end="1581:44"><expr pos:start="1581:42" pos:end="1581:44"><name pos:start="1581:42" pos:end="1581:44">op1</name></expr></argument>, <argument pos:start="1581:47" pos:end="1581:49"><expr pos:start="1581:47" pos:end="1581:49"><name pos:start="1581:47" pos:end="1581:49">op2</name></expr></argument>, <argument pos:start="1581:52" pos:end="1581:53"><expr pos:start="1581:52" pos:end="1581:53"><name pos:start="1581:52" pos:end="1581:53">rd</name></expr></argument>, <argument pos:start="1581:56" pos:end="1581:57"><expr pos:start="1581:56" pos:end="1581:57"><name pos:start="1581:56" pos:end="1581:57">rs</name></expr></argument>, <argument pos:start="1581:60" pos:end="1581:61"><expr pos:start="1581:60" pos:end="1581:61"><name pos:start="1581:60" pos:end="1581:61">rt</name></expr></argument>, <argument pos:start="1581:64" pos:end="1581:64"><expr pos:start="1581:64" pos:end="1581:64"><literal type="number" pos:start="1581:64" pos:end="1581:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1583:17" pos:end="1583:22">break;</break>

            <default pos:start="1585:13" pos:end="1585:20">default:</default>            <comment type="block" pos:start="1585:33" pos:end="1585:45">/* Invalid */</comment>

                <expr_stmt pos:start="1587:17" pos:end="1587:42"><expr pos:start="1587:17" pos:end="1587:41"><call pos:start="1587:17" pos:end="1587:41"><name pos:start="1587:17" pos:end="1587:26">MIPS_INVAL</name><argument_list pos:start="1587:27" pos:end="1587:41">(<argument pos:start="1587:28" pos:end="1587:40"><expr pos:start="1587:28" pos:end="1587:40"><literal type="string" pos:start="1587:28" pos:end="1587:40">"MASK EXTR.W"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1589:17" pos:end="1589:49"><expr pos:start="1589:17" pos:end="1589:48"><call pos:start="1589:17" pos:end="1589:48"><name pos:start="1589:17" pos:end="1589:34">generate_exception</name><argument_list pos:start="1589:35" pos:end="1589:48">(<argument pos:start="1589:36" pos:end="1589:38"><expr pos:start="1589:36" pos:end="1589:38"><name pos:start="1589:36" pos:end="1589:38">ctx</name></expr></argument>, <argument pos:start="1589:41" pos:end="1589:47"><expr pos:start="1589:41" pos:end="1589:47"><name pos:start="1589:41" pos:end="1589:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1591:17" pos:end="1591:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1595:13" pos:end="1595:18">break;</break>

        <case pos:start="1597:9" pos:end="1597:31">case <expr pos:start="1597:14" pos:end="1597:30"><name pos:start="1597:14" pos:end="1597:30">OPC_DPAQ_W_QH_DSP</name></expr>:</case>

            <expr_stmt pos:start="1599:13" pos:end="1599:46"><expr pos:start="1599:13" pos:end="1599:45"><name pos:start="1599:13" pos:end="1599:15">op2</name> <operator pos:start="1599:17" pos:end="1599:17">=</operator> <call pos:start="1599:19" pos:end="1599:45"><name pos:start="1599:19" pos:end="1599:32">MASK_DPAQ_W_QH</name><argument_list pos:start="1599:33" pos:end="1599:45">(<argument pos:start="1599:34" pos:end="1599:44"><expr pos:start="1599:34" pos:end="1599:44"><name pos:start="1599:34" pos:end="1599:44"><name pos:start="1599:34" pos:end="1599:36">ctx</name><operator pos:start="1599:37" pos:end="1599:38">-&gt;</operator><name pos:start="1599:39" pos:end="1599:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1601:13" pos:end="1671:13">switch <condition pos:start="1601:20" pos:end="1601:24">(<expr pos:start="1601:21" pos:end="1601:23"><name pos:start="1601:21" pos:end="1601:23">op2</name></expr>)</condition> <block pos:start="1601:26" pos:end="1671:13">{<block_content pos:start="1603:13" pos:end="1669:22">

            <case pos:start="1603:13" pos:end="1603:32">case <expr pos:start="1603:18" pos:end="1603:31"><name pos:start="1603:18" pos:end="1603:31">OPC_DPAU_H_OBL</name></expr>:</case>

            <case pos:start="1605:13" pos:end="1605:32">case <expr pos:start="1605:18" pos:end="1605:31"><name pos:start="1605:18" pos:end="1605:31">OPC_DPAU_H_OBR</name></expr>:</case>

            <case pos:start="1607:13" pos:end="1607:32">case <expr pos:start="1607:18" pos:end="1607:31"><name pos:start="1607:18" pos:end="1607:31">OPC_DPSU_H_OBL</name></expr>:</case>

            <case pos:start="1609:13" pos:end="1609:32">case <expr pos:start="1609:18" pos:end="1609:31"><name pos:start="1609:18" pos:end="1609:31">OPC_DPSU_H_OBR</name></expr>:</case>

            <case pos:start="1611:13" pos:end="1611:30">case <expr pos:start="1611:18" pos:end="1611:29"><name pos:start="1611:18" pos:end="1611:29">OPC_DPA_W_QH</name></expr>:</case>

            <case pos:start="1613:13" pos:end="1613:33">case <expr pos:start="1613:18" pos:end="1613:32"><name pos:start="1613:18" pos:end="1613:32">OPC_DPAQ_S_W_QH</name></expr>:</case>

            <case pos:start="1615:13" pos:end="1615:30">case <expr pos:start="1615:18" pos:end="1615:29"><name pos:start="1615:18" pos:end="1615:29">OPC_DPS_W_QH</name></expr>:</case>

            <case pos:start="1617:13" pos:end="1617:33">case <expr pos:start="1617:18" pos:end="1617:32"><name pos:start="1617:18" pos:end="1617:32">OPC_DPSQ_S_W_QH</name></expr>:</case>

            <case pos:start="1619:13" pos:end="1619:35">case <expr pos:start="1619:18" pos:end="1619:34"><name pos:start="1619:18" pos:end="1619:34">OPC_MULSAQ_S_W_QH</name></expr>:</case>

            <case pos:start="1621:13" pos:end="1621:34">case <expr pos:start="1621:18" pos:end="1621:33"><name pos:start="1621:18" pos:end="1621:33">OPC_DPAQ_SA_L_PW</name></expr>:</case>

            <case pos:start="1623:13" pos:end="1623:34">case <expr pos:start="1623:18" pos:end="1623:33"><name pos:start="1623:18" pos:end="1623:33">OPC_DPSQ_SA_L_PW</name></expr>:</case>

            <case pos:start="1625:13" pos:end="1625:35">case <expr pos:start="1625:18" pos:end="1625:34"><name pos:start="1625:18" pos:end="1625:34">OPC_MULSAQ_S_L_PW</name></expr>:</case>

                <expr_stmt pos:start="1627:17" pos:end="1627:67"><expr pos:start="1627:17" pos:end="1627:66"><call pos:start="1627:17" pos:end="1627:66"><name pos:start="1627:17" pos:end="1627:36">gen_mipsdsp_multiply</name><argument_list pos:start="1627:37" pos:end="1627:66">(<argument pos:start="1627:38" pos:end="1627:40"><expr pos:start="1627:38" pos:end="1627:40"><name pos:start="1627:38" pos:end="1627:40">ctx</name></expr></argument>, <argument pos:start="1627:43" pos:end="1627:45"><expr pos:start="1627:43" pos:end="1627:45"><name pos:start="1627:43" pos:end="1627:45">op1</name></expr></argument>, <argument pos:start="1627:48" pos:end="1627:50"><expr pos:start="1627:48" pos:end="1627:50"><name pos:start="1627:48" pos:end="1627:50">op2</name></expr></argument>, <argument pos:start="1627:53" pos:end="1627:54"><expr pos:start="1627:53" pos:end="1627:54"><name pos:start="1627:53" pos:end="1627:54">rd</name></expr></argument>, <argument pos:start="1627:57" pos:end="1627:58"><expr pos:start="1627:57" pos:end="1627:58"><name pos:start="1627:57" pos:end="1627:58">rs</name></expr></argument>, <argument pos:start="1627:61" pos:end="1627:62"><expr pos:start="1627:61" pos:end="1627:62"><name pos:start="1627:61" pos:end="1627:62">rt</name></expr></argument>, <argument pos:start="1627:65" pos:end="1627:65"><expr pos:start="1627:65" pos:end="1627:65"><literal type="number" pos:start="1627:65" pos:end="1627:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1629:17" pos:end="1629:22">break;</break>

            <case pos:start="1631:13" pos:end="1631:34">case <expr pos:start="1631:18" pos:end="1631:33"><name pos:start="1631:18" pos:end="1631:33">OPC_MAQ_S_W_QHLL</name></expr>:</case>

            <case pos:start="1633:13" pos:end="1633:34">case <expr pos:start="1633:18" pos:end="1633:33"><name pos:start="1633:18" pos:end="1633:33">OPC_MAQ_S_W_QHLR</name></expr>:</case>

            <case pos:start="1635:13" pos:end="1635:34">case <expr pos:start="1635:18" pos:end="1635:33"><name pos:start="1635:18" pos:end="1635:33">OPC_MAQ_S_W_QHRL</name></expr>:</case>

            <case pos:start="1637:13" pos:end="1637:34">case <expr pos:start="1637:18" pos:end="1637:33"><name pos:start="1637:18" pos:end="1637:33">OPC_MAQ_S_W_QHRR</name></expr>:</case>

            <case pos:start="1639:13" pos:end="1639:35">case <expr pos:start="1639:18" pos:end="1639:34"><name pos:start="1639:18" pos:end="1639:34">OPC_MAQ_SA_W_QHLL</name></expr>:</case>

            <case pos:start="1641:13" pos:end="1641:35">case <expr pos:start="1641:18" pos:end="1641:34"><name pos:start="1641:18" pos:end="1641:34">OPC_MAQ_SA_W_QHLR</name></expr>:</case>

            <case pos:start="1643:13" pos:end="1643:35">case <expr pos:start="1643:18" pos:end="1643:34"><name pos:start="1643:18" pos:end="1643:34">OPC_MAQ_SA_W_QHRL</name></expr>:</case>

            <case pos:start="1645:13" pos:end="1645:35">case <expr pos:start="1645:18" pos:end="1645:34"><name pos:start="1645:18" pos:end="1645:34">OPC_MAQ_SA_W_QHRR</name></expr>:</case>

            <case pos:start="1647:13" pos:end="1647:33">case <expr pos:start="1647:18" pos:end="1647:32"><name pos:start="1647:18" pos:end="1647:32">OPC_MAQ_S_L_PWL</name></expr>:</case>

            <case pos:start="1649:13" pos:end="1649:33">case <expr pos:start="1649:18" pos:end="1649:32"><name pos:start="1649:18" pos:end="1649:32">OPC_MAQ_S_L_PWR</name></expr>:</case>

            <case pos:start="1651:13" pos:end="1651:27">case <expr pos:start="1651:18" pos:end="1651:26"><name pos:start="1651:18" pos:end="1651:26">OPC_DMADD</name></expr>:</case>

            <case pos:start="1653:13" pos:end="1653:28">case <expr pos:start="1653:18" pos:end="1653:27"><name pos:start="1653:18" pos:end="1653:27">OPC_DMADDU</name></expr>:</case>

            <case pos:start="1655:13" pos:end="1655:27">case <expr pos:start="1655:18" pos:end="1655:26"><name pos:start="1655:18" pos:end="1655:26">OPC_DMSUB</name></expr>:</case>

            <case pos:start="1657:13" pos:end="1657:28">case <expr pos:start="1657:18" pos:end="1657:27"><name pos:start="1657:18" pos:end="1657:27">OPC_DMSUBU</name></expr>:</case>

                <expr_stmt pos:start="1659:17" pos:end="1659:67"><expr pos:start="1659:17" pos:end="1659:66"><call pos:start="1659:17" pos:end="1659:66"><name pos:start="1659:17" pos:end="1659:36">gen_mipsdsp_multiply</name><argument_list pos:start="1659:37" pos:end="1659:66">(<argument pos:start="1659:38" pos:end="1659:40"><expr pos:start="1659:38" pos:end="1659:40"><name pos:start="1659:38" pos:end="1659:40">ctx</name></expr></argument>, <argument pos:start="1659:43" pos:end="1659:45"><expr pos:start="1659:43" pos:end="1659:45"><name pos:start="1659:43" pos:end="1659:45">op1</name></expr></argument>, <argument pos:start="1659:48" pos:end="1659:50"><expr pos:start="1659:48" pos:end="1659:50"><name pos:start="1659:48" pos:end="1659:50">op2</name></expr></argument>, <argument pos:start="1659:53" pos:end="1659:54"><expr pos:start="1659:53" pos:end="1659:54"><name pos:start="1659:53" pos:end="1659:54">rd</name></expr></argument>, <argument pos:start="1659:57" pos:end="1659:58"><expr pos:start="1659:57" pos:end="1659:58"><name pos:start="1659:57" pos:end="1659:58">rs</name></expr></argument>, <argument pos:start="1659:61" pos:end="1659:62"><expr pos:start="1659:61" pos:end="1659:62"><name pos:start="1659:61" pos:end="1659:62">rt</name></expr></argument>, <argument pos:start="1659:65" pos:end="1659:65"><expr pos:start="1659:65" pos:end="1659:65"><literal type="number" pos:start="1659:65" pos:end="1659:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1661:17" pos:end="1661:22">break;</break>

            <default pos:start="1663:13" pos:end="1663:20">default:</default>            <comment type="block" pos:start="1663:33" pos:end="1663:45">/* Invalid */</comment>

                <expr_stmt pos:start="1665:17" pos:end="1665:45"><expr pos:start="1665:17" pos:end="1665:44"><call pos:start="1665:17" pos:end="1665:44"><name pos:start="1665:17" pos:end="1665:26">MIPS_INVAL</name><argument_list pos:start="1665:27" pos:end="1665:44">(<argument pos:start="1665:28" pos:end="1665:43"><expr pos:start="1665:28" pos:end="1665:43"><literal type="string" pos:start="1665:28" pos:end="1665:43">"MASK DPAQ.W.QH"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1667:17" pos:end="1667:49"><expr pos:start="1667:17" pos:end="1667:48"><call pos:start="1667:17" pos:end="1667:48"><name pos:start="1667:17" pos:end="1667:34">generate_exception</name><argument_list pos:start="1667:35" pos:end="1667:48">(<argument pos:start="1667:36" pos:end="1667:38"><expr pos:start="1667:36" pos:end="1667:38"><name pos:start="1667:36" pos:end="1667:38">ctx</name></expr></argument>, <argument pos:start="1667:41" pos:end="1667:47"><expr pos:start="1667:41" pos:end="1667:47"><name pos:start="1667:41" pos:end="1667:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1669:17" pos:end="1669:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1673:13" pos:end="1673:18">break;</break>

        <case pos:start="1675:9" pos:end="1675:27">case <expr pos:start="1675:14" pos:end="1675:26"><name pos:start="1675:14" pos:end="1675:26">OPC_DINSV_DSP</name></expr>:</case>

            <expr_stmt pos:start="1677:13" pos:end="1677:41"><expr pos:start="1677:13" pos:end="1677:40"><name pos:start="1677:13" pos:end="1677:15">op2</name> <operator pos:start="1677:17" pos:end="1677:17">=</operator> <call pos:start="1677:19" pos:end="1677:40"><name pos:start="1677:19" pos:end="1677:27">MASK_INSV</name><argument_list pos:start="1677:28" pos:end="1677:40">(<argument pos:start="1677:29" pos:end="1677:39"><expr pos:start="1677:29" pos:end="1677:39"><name pos:start="1677:29" pos:end="1677:39"><name pos:start="1677:29" pos:end="1677:31">ctx</name><operator pos:start="1677:32" pos:end="1677:33">-&gt;</operator><name pos:start="1677:34" pos:end="1677:39">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="1679:13" pos:end="1727:13">switch <condition pos:start="1679:20" pos:end="1679:24">(<expr pos:start="1679:21" pos:end="1679:23"><name pos:start="1679:21" pos:end="1679:23">op2</name></expr>)</condition> <block pos:start="1679:26" pos:end="1727:13">{<block_content pos:start="1681:13" pos:end="1725:22">

            <case pos:start="1681:13" pos:end="1681:27">case <expr pos:start="1681:18" pos:end="1681:26"><name pos:start="1681:18" pos:end="1681:26">OPC_DINSV</name></expr>:</case>

                <block pos:start="1683:17" pos:end="1717:17">{<block_content pos:start="1685:21" pos:end="1715:26">

                    <decl_stmt pos:start="1685:21" pos:end="1685:32"><decl pos:start="1685:21" pos:end="1685:27"><type pos:start="1685:21" pos:end="1685:24"><name pos:start="1685:21" pos:end="1685:24">TCGv</name></type> <name pos:start="1685:26" pos:end="1685:27">t0</name></decl>, <decl pos:start="1685:30" pos:end="1685:31"><type ref="prev" pos:start="1685:21" pos:end="1685:24"/><name pos:start="1685:30" pos:end="1685:31">t1</name></decl>;</decl_stmt>



                    <if_stmt pos:start="1689:21" pos:end="1695:21"><if pos:start="1689:21" pos:end="1695:21">if <condition pos:start="1689:24" pos:end="1689:32">(<expr pos:start="1689:25" pos:end="1689:31"><name pos:start="1689:25" pos:end="1689:26">rt</name> <operator pos:start="1689:28" pos:end="1689:29">==</operator> <literal type="number" pos:start="1689:31" pos:end="1689:31">0</literal></expr>)</condition> <block pos:start="1689:34" pos:end="1695:21">{<block_content pos:start="1691:25" pos:end="1693:30">

                        <expr_stmt pos:start="1691:25" pos:end="1691:42"><expr pos:start="1691:25" pos:end="1691:41"><call pos:start="1691:25" pos:end="1691:41"><name pos:start="1691:25" pos:end="1691:34">MIPS_DEBUG</name><argument_list pos:start="1691:35" pos:end="1691:41">(<argument pos:start="1691:36" pos:end="1691:40"><expr pos:start="1691:36" pos:end="1691:40"><literal type="string" pos:start="1691:36" pos:end="1691:40">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1693:25" pos:end="1693:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="1697:21" pos:end="1697:35"><expr pos:start="1697:21" pos:end="1697:34"><call pos:start="1697:21" pos:end="1697:34"><name pos:start="1697:21" pos:end="1697:29">check_dsp</name><argument_list pos:start="1697:30" pos:end="1697:34">(<argument pos:start="1697:31" pos:end="1697:33"><expr pos:start="1697:31" pos:end="1697:33"><name pos:start="1697:31" pos:end="1697:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1701:21" pos:end="1701:40"><expr pos:start="1701:21" pos:end="1701:39"><name pos:start="1701:21" pos:end="1701:22">t0</name> <operator pos:start="1701:24" pos:end="1701:24">=</operator> <call pos:start="1701:26" pos:end="1701:39"><name pos:start="1701:26" pos:end="1701:37">tcg_temp_new</name><argument_list pos:start="1701:38" pos:end="1701:39">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1703:21" pos:end="1703:40"><expr pos:start="1703:21" pos:end="1703:39"><name pos:start="1703:21" pos:end="1703:22">t1</name> <operator pos:start="1703:24" pos:end="1703:24">=</operator> <call pos:start="1703:26" pos:end="1703:39"><name pos:start="1703:26" pos:end="1703:37">tcg_temp_new</name><argument_list pos:start="1703:38" pos:end="1703:39">()</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1707:21" pos:end="1707:41"><expr pos:start="1707:21" pos:end="1707:40"><call pos:start="1707:21" pos:end="1707:40"><name pos:start="1707:21" pos:end="1707:32">gen_load_gpr</name><argument_list pos:start="1707:33" pos:end="1707:40">(<argument pos:start="1707:34" pos:end="1707:35"><expr pos:start="1707:34" pos:end="1707:35"><name pos:start="1707:34" pos:end="1707:35">t0</name></expr></argument>, <argument pos:start="1707:38" pos:end="1707:39"><expr pos:start="1707:38" pos:end="1707:39"><name pos:start="1707:38" pos:end="1707:39">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1709:21" pos:end="1709:41"><expr pos:start="1709:21" pos:end="1709:40"><call pos:start="1709:21" pos:end="1709:40"><name pos:start="1709:21" pos:end="1709:32">gen_load_gpr</name><argument_list pos:start="1709:33" pos:end="1709:40">(<argument pos:start="1709:34" pos:end="1709:35"><expr pos:start="1709:34" pos:end="1709:35"><name pos:start="1709:34" pos:end="1709:35">t1</name></expr></argument>, <argument pos:start="1709:38" pos:end="1709:39"><expr pos:start="1709:38" pos:end="1709:39"><name pos:start="1709:38" pos:end="1709:39">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="1713:21" pos:end="1713:67"><expr pos:start="1713:21" pos:end="1713:66"><call pos:start="1713:21" pos:end="1713:66"><name pos:start="1713:21" pos:end="1713:36">gen_helper_dinsv</name><argument_list pos:start="1713:37" pos:end="1713:66">(<argument pos:start="1713:38" pos:end="1713:48"><expr pos:start="1713:38" pos:end="1713:48"><name pos:start="1713:38" pos:end="1713:48"><name pos:start="1713:38" pos:end="1713:44">cpu_gpr</name><index pos:start="1713:45" pos:end="1713:48">[<expr pos:start="1713:46" pos:end="1713:47"><name pos:start="1713:46" pos:end="1713:47">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="1713:51" pos:end="1713:57"><expr pos:start="1713:51" pos:end="1713:57"><name pos:start="1713:51" pos:end="1713:57">cpu_env</name></expr></argument>, <argument pos:start="1713:60" pos:end="1713:61"><expr pos:start="1713:60" pos:end="1713:61"><name pos:start="1713:60" pos:end="1713:61">t1</name></expr></argument>, <argument pos:start="1713:64" pos:end="1713:65"><expr pos:start="1713:64" pos:end="1713:65"><name pos:start="1713:64" pos:end="1713:65">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1715:21" pos:end="1715:26">break;</break>

                </block_content>}</block>

            <default pos:start="1719:13" pos:end="1719:20">default:</default>            <comment type="block" pos:start="1719:33" pos:end="1719:45">/* Invalid */</comment>

                <expr_stmt pos:start="1721:17" pos:end="1721:41"><expr pos:start="1721:17" pos:end="1721:40"><call pos:start="1721:17" pos:end="1721:40"><name pos:start="1721:17" pos:end="1721:26">MIPS_INVAL</name><argument_list pos:start="1721:27" pos:end="1721:40">(<argument pos:start="1721:28" pos:end="1721:39"><expr pos:start="1721:28" pos:end="1721:39"><literal type="string" pos:start="1721:28" pos:end="1721:39">"MASK DINSV"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1723:17" pos:end="1723:49"><expr pos:start="1723:17" pos:end="1723:48"><call pos:start="1723:17" pos:end="1723:48"><name pos:start="1723:17" pos:end="1723:34">generate_exception</name><argument_list pos:start="1723:35" pos:end="1723:48">(<argument pos:start="1723:36" pos:end="1723:38"><expr pos:start="1723:36" pos:end="1723:38"><name pos:start="1723:36" pos:end="1723:38">ctx</name></expr></argument>, <argument pos:start="1723:41" pos:end="1723:47"><expr pos:start="1723:41" pos:end="1723:47"><name pos:start="1723:41" pos:end="1723:47">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1725:17" pos:end="1725:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="1729:13" pos:end="1729:18">break;</break>

        <case pos:start="1731:9" pos:end="1731:29">case <expr pos:start="1731:14" pos:end="1731:28"><name pos:start="1731:14" pos:end="1731:28">OPC_SHLL_OB_DSP</name></expr>:</case>

            <expr_stmt pos:start="1733:13" pos:end="1733:52"><expr pos:start="1733:13" pos:end="1733:51"><call pos:start="1733:13" pos:end="1733:51"><name pos:start="1733:13" pos:end="1733:29">gen_mipsdsp_shift</name><argument_list pos:start="1733:30" pos:end="1733:51">(<argument pos:start="1733:31" pos:end="1733:33"><expr pos:start="1733:31" pos:end="1733:33"><name pos:start="1733:31" pos:end="1733:33">ctx</name></expr></argument>, <argument pos:start="1733:36" pos:end="1733:38"><expr pos:start="1733:36" pos:end="1733:38"><name pos:start="1733:36" pos:end="1733:38">op1</name></expr></argument>, <argument pos:start="1733:41" pos:end="1733:42"><expr pos:start="1733:41" pos:end="1733:42"><name pos:start="1733:41" pos:end="1733:42">rd</name></expr></argument>, <argument pos:start="1733:45" pos:end="1733:46"><expr pos:start="1733:45" pos:end="1733:46"><name pos:start="1733:45" pos:end="1733:46">rs</name></expr></argument>, <argument pos:start="1733:49" pos:end="1733:50"><expr pos:start="1733:49" pos:end="1733:50"><name pos:start="1733:49" pos:end="1733:50">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1735:13" pos:end="1738:0">break;</break>

<cpp:endif pos:start="1737:1" pos:end="1737:6">#<cpp:directive pos:start="1737:2" pos:end="1737:6">endif</cpp:directive></cpp:endif>

        <default pos:start="1739:9" pos:end="1739:16">default:</default>            <comment type="block" pos:start="1739:29" pos:end="1739:41">/* Invalid */</comment>

            <expr_stmt pos:start="1741:13" pos:end="1741:35"><expr pos:start="1741:13" pos:end="1741:34"><call pos:start="1741:13" pos:end="1741:34"><name pos:start="1741:13" pos:end="1741:22">MIPS_INVAL</name><argument_list pos:start="1741:23" pos:end="1741:34">(<argument pos:start="1741:24" pos:end="1741:33"><expr pos:start="1741:24" pos:end="1741:33"><literal type="string" pos:start="1741:24" pos:end="1741:33">"special3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1743:13" pos:end="1743:45"><expr pos:start="1743:13" pos:end="1743:44"><call pos:start="1743:13" pos:end="1743:44"><name pos:start="1743:13" pos:end="1743:30">generate_exception</name><argument_list pos:start="1743:31" pos:end="1743:44">(<argument pos:start="1743:32" pos:end="1743:34"><expr pos:start="1743:32" pos:end="1743:34"><name pos:start="1743:32" pos:end="1743:34">ctx</name></expr></argument>, <argument pos:start="1743:37" pos:end="1743:43"><expr pos:start="1743:37" pos:end="1743:43"><name pos:start="1743:37" pos:end="1743:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1745:13" pos:end="1745:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1749:9" pos:end="1749:14">break;</break>

    <case pos:start="1751:5" pos:end="1751:20">case <expr pos:start="1751:10" pos:end="1751:19"><name pos:start="1751:10" pos:end="1751:19">OPC_REGIMM</name></expr>:</case>

        <expr_stmt pos:start="1753:9" pos:end="1753:39"><expr pos:start="1753:9" pos:end="1753:38"><name pos:start="1753:9" pos:end="1753:11">op1</name> <operator pos:start="1753:13" pos:end="1753:13">=</operator> <call pos:start="1753:15" pos:end="1753:38"><name pos:start="1753:15" pos:end="1753:25">MASK_REGIMM</name><argument_list pos:start="1753:26" pos:end="1753:38">(<argument pos:start="1753:27" pos:end="1753:37"><expr pos:start="1753:27" pos:end="1753:37"><name pos:start="1753:27" pos:end="1753:37"><name pos:start="1753:27" pos:end="1753:29">ctx</name><operator pos:start="1753:30" pos:end="1753:31">-&gt;</operator><name pos:start="1753:32" pos:end="1753:37">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1755:9" pos:end="1807:9">switch <condition pos:start="1755:16" pos:end="1755:20">(<expr pos:start="1755:17" pos:end="1755:19"><name pos:start="1755:17" pos:end="1755:19">op1</name></expr>)</condition> <block pos:start="1755:22" pos:end="1807:9">{<block_content pos:start="1757:9" pos:end="1805:18">

        <case pos:start="1757:9" pos:end="1757:36">case <expr pos:start="1757:14" pos:end="1757:35"><name pos:start="1757:14" pos:end="1757:21">OPC_BLTZ</name> <operator pos:start="1757:23" pos:end="1757:25">...</operator> <name pos:start="1757:27" pos:end="1757:35">OPC_BGEZL</name></expr>:</case> <comment type="block" pos:start="1757:38" pos:end="1757:58">/* REGIMM branches */</comment>

        <case pos:start="1759:9" pos:end="1759:40">case <expr pos:start="1759:14" pos:end="1759:39"><name pos:start="1759:14" pos:end="1759:23">OPC_BLTZAL</name> <operator pos:start="1759:25" pos:end="1759:27">...</operator> <name pos:start="1759:29" pos:end="1759:39">OPC_BGEZALL</name></expr>:</case>

            <expr_stmt pos:start="1761:13" pos:end="1761:62"><expr pos:start="1761:13" pos:end="1761:61"><call pos:start="1761:13" pos:end="1761:61"><name pos:start="1761:13" pos:end="1761:30">gen_compute_branch</name><argument_list pos:start="1761:31" pos:end="1761:61">(<argument pos:start="1761:32" pos:end="1761:34"><expr pos:start="1761:32" pos:end="1761:34"><name pos:start="1761:32" pos:end="1761:34">ctx</name></expr></argument>, <argument pos:start="1761:37" pos:end="1761:39"><expr pos:start="1761:37" pos:end="1761:39"><name pos:start="1761:37" pos:end="1761:39">op1</name></expr></argument>, <argument pos:start="1761:42" pos:end="1761:42"><expr pos:start="1761:42" pos:end="1761:42"><literal type="number" pos:start="1761:42" pos:end="1761:42">4</literal></expr></argument>, <argument pos:start="1761:45" pos:end="1761:46"><expr pos:start="1761:45" pos:end="1761:46"><name pos:start="1761:45" pos:end="1761:46">rs</name></expr></argument>, <argument pos:start="1761:49" pos:end="1761:50"><expr pos:start="1761:49" pos:end="1761:50"><operator pos:start="1761:49" pos:end="1761:49">-</operator><literal type="number" pos:start="1761:50" pos:end="1761:50">1</literal></expr></argument>, <argument pos:start="1761:53" pos:end="1761:60"><expr pos:start="1761:53" pos:end="1761:60"><name pos:start="1761:53" pos:end="1761:55">imm</name> <operator pos:start="1761:57" pos:end="1761:58">&lt;&lt;</operator> <literal type="number" pos:start="1761:60" pos:end="1761:60">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1763:13" pos:end="1763:27"><expr pos:start="1763:13" pos:end="1763:26"><operator pos:start="1763:13" pos:end="1763:13">*</operator><name pos:start="1763:14" pos:end="1763:22">is_branch</name> <operator pos:start="1763:24" pos:end="1763:24">=</operator> <literal type="number" pos:start="1763:26" pos:end="1763:26">1</literal></expr>;</expr_stmt>

            <break pos:start="1765:13" pos:end="1765:18">break;</break>

        <case pos:start="1767:9" pos:end="1767:35">case <expr pos:start="1767:14" pos:end="1767:34"><name pos:start="1767:14" pos:end="1767:21">OPC_TGEI</name> <operator pos:start="1767:23" pos:end="1767:25">...</operator> <name pos:start="1767:27" pos:end="1767:34">OPC_TEQI</name></expr>:</case> <comment type="block" pos:start="1767:37" pos:end="1767:54">/* REGIMM traps */</comment>

        <case pos:start="1769:9" pos:end="1769:22">case <expr pos:start="1769:14" pos:end="1769:21"><name pos:start="1769:14" pos:end="1769:21">OPC_TNEI</name></expr>:</case>

            <expr_stmt pos:start="1771:13" pos:end="1771:44"><expr pos:start="1771:13" pos:end="1771:43"><call pos:start="1771:13" pos:end="1771:43"><name pos:start="1771:13" pos:end="1771:20">gen_trap</name><argument_list pos:start="1771:21" pos:end="1771:43">(<argument pos:start="1771:22" pos:end="1771:24"><expr pos:start="1771:22" pos:end="1771:24"><name pos:start="1771:22" pos:end="1771:24">ctx</name></expr></argument>, <argument pos:start="1771:27" pos:end="1771:29"><expr pos:start="1771:27" pos:end="1771:29"><name pos:start="1771:27" pos:end="1771:29">op1</name></expr></argument>, <argument pos:start="1771:32" pos:end="1771:33"><expr pos:start="1771:32" pos:end="1771:33"><name pos:start="1771:32" pos:end="1771:33">rs</name></expr></argument>, <argument pos:start="1771:36" pos:end="1771:37"><expr pos:start="1771:36" pos:end="1771:37"><operator pos:start="1771:36" pos:end="1771:36">-</operator><literal type="number" pos:start="1771:37" pos:end="1771:37">1</literal></expr></argument>, <argument pos:start="1771:40" pos:end="1771:42"><expr pos:start="1771:40" pos:end="1771:42"><name pos:start="1771:40" pos:end="1771:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1773:13" pos:end="1773:18">break;</break>

        <case pos:start="1775:9" pos:end="1775:23">case <expr pos:start="1775:14" pos:end="1775:22"><name pos:start="1775:14" pos:end="1775:22">OPC_SYNCI</name></expr>:</case>

            <expr_stmt pos:start="1777:13" pos:end="1777:42"><expr pos:start="1777:13" pos:end="1777:41"><call pos:start="1777:13" pos:end="1777:41"><name pos:start="1777:13" pos:end="1777:22">check_insn</name><argument_list pos:start="1777:23" pos:end="1777:41">(<argument pos:start="1777:24" pos:end="1777:26"><expr pos:start="1777:24" pos:end="1777:26"><name pos:start="1777:24" pos:end="1777:26">ctx</name></expr></argument>, <argument pos:start="1777:29" pos:end="1777:40"><expr pos:start="1777:29" pos:end="1777:40"><name pos:start="1777:29" pos:end="1777:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1779:13" pos:end="1779:31">/* Treat as NOP. */</comment>

            <break pos:start="1781:13" pos:end="1781:18">break;</break>

        <case pos:start="1783:9" pos:end="1786:0">case <expr pos:start="1783:14" pos:end="1783:25"><name pos:start="1783:14" pos:end="1783:25">OPC_BPOSGE32</name></expr>:</case>    <comment type="block" pos:start="1783:31" pos:end="1783:51">/* MIPS DSP branch */</comment>

<cpp:if pos:start="1785:1" pos:end="1785:26">#<cpp:directive pos:start="1785:2" pos:end="1785:3">if</cpp:directive> <expr pos:start="1785:5" pos:end="1785:26"><call pos:start="1785:5" pos:end="1785:26"><name pos:start="1785:5" pos:end="1785:11">defined</name><argument_list pos:start="1785:12" pos:end="1785:26">(<argument pos:start="1785:13" pos:end="1785:25"><expr pos:start="1785:13" pos:end="1785:25"><name pos:start="1785:13" pos:end="1785:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1787:9" pos:end="1790:0">case <expr pos:start="1787:14" pos:end="1787:25"><name pos:start="1787:14" pos:end="1787:25">OPC_BPOSGE64</name></expr>:</case>

<cpp:endif pos:start="1789:1" pos:end="1789:6">#<cpp:directive pos:start="1789:2" pos:end="1789:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="1791:13" pos:end="1791:27"><expr pos:start="1791:13" pos:end="1791:26"><call pos:start="1791:13" pos:end="1791:26"><name pos:start="1791:13" pos:end="1791:21">check_dsp</name><argument_list pos:start="1791:22" pos:end="1791:26">(<argument pos:start="1791:23" pos:end="1791:25"><expr pos:start="1791:23" pos:end="1791:25"><name pos:start="1791:23" pos:end="1791:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1793:13" pos:end="1793:71"><expr pos:start="1793:13" pos:end="1793:70"><call pos:start="1793:13" pos:end="1793:70"><name pos:start="1793:13" pos:end="1793:30">gen_compute_branch</name><argument_list pos:start="1793:31" pos:end="1793:70">(<argument pos:start="1793:32" pos:end="1793:34"><expr pos:start="1793:32" pos:end="1793:34"><name pos:start="1793:32" pos:end="1793:34">ctx</name></expr></argument>, <argument pos:start="1793:37" pos:end="1793:39"><expr pos:start="1793:37" pos:end="1793:39"><name pos:start="1793:37" pos:end="1793:39">op1</name></expr></argument>, <argument pos:start="1793:42" pos:end="1793:42"><expr pos:start="1793:42" pos:end="1793:42"><literal type="number" pos:start="1793:42" pos:end="1793:42">4</literal></expr></argument>, <argument pos:start="1793:45" pos:end="1793:46"><expr pos:start="1793:45" pos:end="1793:46"><operator pos:start="1793:45" pos:end="1793:45">-</operator><literal type="number" pos:start="1793:46" pos:end="1793:46">1</literal></expr></argument>, <argument pos:start="1793:49" pos:end="1793:50"><expr pos:start="1793:49" pos:end="1793:50"><operator pos:start="1793:49" pos:end="1793:49">-</operator><literal type="number" pos:start="1793:50" pos:end="1793:50">2</literal></expr></argument>, <argument pos:start="1793:53" pos:end="1793:69"><expr pos:start="1793:53" pos:end="1793:69"><operator pos:start="1793:53" pos:end="1793:53">(</operator><name pos:start="1793:54" pos:end="1793:60">int32_t</name><operator pos:start="1793:61" pos:end="1793:61">)</operator><name pos:start="1793:62" pos:end="1793:64">imm</name> <operator pos:start="1793:66" pos:end="1793:67">&lt;&lt;</operator> <literal type="number" pos:start="1793:69" pos:end="1793:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1795:13" pos:end="1795:27"><expr pos:start="1795:13" pos:end="1795:26"><operator pos:start="1795:13" pos:end="1795:13">*</operator><name pos:start="1795:14" pos:end="1795:22">is_branch</name> <operator pos:start="1795:24" pos:end="1795:24">=</operator> <literal type="number" pos:start="1795:26" pos:end="1795:26">1</literal></expr>;</expr_stmt>

            <break pos:start="1797:13" pos:end="1797:18">break;</break>

        <default pos:start="1799:9" pos:end="1799:16">default:</default>            <comment type="block" pos:start="1799:29" pos:end="1799:41">/* Invalid */</comment>

            <expr_stmt pos:start="1801:13" pos:end="1801:33"><expr pos:start="1801:13" pos:end="1801:32"><call pos:start="1801:13" pos:end="1801:32"><name pos:start="1801:13" pos:end="1801:22">MIPS_INVAL</name><argument_list pos:start="1801:23" pos:end="1801:32">(<argument pos:start="1801:24" pos:end="1801:31"><expr pos:start="1801:24" pos:end="1801:31"><literal type="string" pos:start="1801:24" pos:end="1801:31">"regimm"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1803:13" pos:end="1803:45"><expr pos:start="1803:13" pos:end="1803:44"><call pos:start="1803:13" pos:end="1803:44"><name pos:start="1803:13" pos:end="1803:30">generate_exception</name><argument_list pos:start="1803:31" pos:end="1803:44">(<argument pos:start="1803:32" pos:end="1803:34"><expr pos:start="1803:32" pos:end="1803:34"><name pos:start="1803:32" pos:end="1803:34">ctx</name></expr></argument>, <argument pos:start="1803:37" pos:end="1803:43"><expr pos:start="1803:37" pos:end="1803:43"><name pos:start="1803:37" pos:end="1803:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1805:13" pos:end="1805:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1809:9" pos:end="1809:14">break;</break>

    <case pos:start="1811:5" pos:end="1811:17">case <expr pos:start="1811:10" pos:end="1811:16"><name pos:start="1811:10" pos:end="1811:16">OPC_CP0</name></expr>:</case>

        <expr_stmt pos:start="1813:9" pos:end="1813:31"><expr pos:start="1813:9" pos:end="1813:30"><call pos:start="1813:9" pos:end="1813:30"><name pos:start="1813:9" pos:end="1813:25">check_cp0_enabled</name><argument_list pos:start="1813:26" pos:end="1813:30">(<argument pos:start="1813:27" pos:end="1813:29"><expr pos:start="1813:27" pos:end="1813:29"><name pos:start="1813:27" pos:end="1813:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1815:9" pos:end="1815:36"><expr pos:start="1815:9" pos:end="1815:35"><name pos:start="1815:9" pos:end="1815:11">op1</name> <operator pos:start="1815:13" pos:end="1815:13">=</operator> <call pos:start="1815:15" pos:end="1815:35"><name pos:start="1815:15" pos:end="1815:22">MASK_CP0</name><argument_list pos:start="1815:23" pos:end="1815:35">(<argument pos:start="1815:24" pos:end="1815:34"><expr pos:start="1815:24" pos:end="1815:34"><name pos:start="1815:24" pos:end="1815:34"><name pos:start="1815:24" pos:end="1815:26">ctx</name><operator pos:start="1815:27" pos:end="1815:28">-&gt;</operator><name pos:start="1815:29" pos:end="1815:34">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="1817:9" pos:end="1981:9">switch <condition pos:start="1817:16" pos:end="1817:20">(<expr pos:start="1817:17" pos:end="1817:19"><name pos:start="1817:17" pos:end="1817:19">op1</name></expr>)</condition> <block pos:start="1817:22" pos:end="1981:9">{<block_content pos:start="1819:9" pos:end="1979:18">

        <case pos:start="1819:9" pos:end="1819:22">case <expr pos:start="1819:14" pos:end="1819:21"><name pos:start="1819:14" pos:end="1819:21">OPC_MFC0</name></expr>:</case>

        <case pos:start="1821:9" pos:end="1821:22">case <expr pos:start="1821:14" pos:end="1821:21"><name pos:start="1821:14" pos:end="1821:21">OPC_MTC0</name></expr>:</case>

        <case pos:start="1823:9" pos:end="1823:22">case <expr pos:start="1823:14" pos:end="1823:21"><name pos:start="1823:14" pos:end="1823:21">OPC_MFTR</name></expr>:</case>

        <case pos:start="1825:9" pos:end="1828:0">case <expr pos:start="1825:14" pos:end="1825:21"><name pos:start="1825:14" pos:end="1825:21">OPC_MTTR</name></expr>:</case>

<cpp:if pos:start="1827:1" pos:end="1827:26">#<cpp:directive pos:start="1827:2" pos:end="1827:3">if</cpp:directive> <expr pos:start="1827:5" pos:end="1827:26"><call pos:start="1827:5" pos:end="1827:26"><name pos:start="1827:5" pos:end="1827:11">defined</name><argument_list pos:start="1827:12" pos:end="1827:26">(<argument pos:start="1827:13" pos:end="1827:25"><expr pos:start="1827:13" pos:end="1827:25"><name pos:start="1827:13" pos:end="1827:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <case pos:start="1829:9" pos:end="1829:23">case <expr pos:start="1829:14" pos:end="1829:22"><name pos:start="1829:14" pos:end="1829:22">OPC_DMFC0</name></expr>:</case>

        <case pos:start="1831:9" pos:end="1836:0">case <expr pos:start="1831:14" pos:end="1831:22"><name pos:start="1831:14" pos:end="1831:22">OPC_DMTC0</name></expr>:</case>

<cpp:endif pos:start="1833:1" pos:end="1833:6">#<cpp:directive pos:start="1833:2" pos:end="1833:6">endif</cpp:directive></cpp:endif>

<cpp:ifndef pos:start="1835:1" pos:end="1835:24">#<cpp:directive pos:start="1835:2" pos:end="1835:7">ifndef</cpp:directive> <name pos:start="1835:9" pos:end="1835:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="1837:13" pos:end="1840:0"><expr pos:start="1837:13" pos:end="1837:42"><call pos:start="1837:13" pos:end="1837:42"><name pos:start="1837:13" pos:end="1837:19">gen_cp0</name><argument_list pos:start="1837:20" pos:end="1837:42">(<argument pos:start="1837:21" pos:end="1837:23"><expr pos:start="1837:21" pos:end="1837:23"><name pos:start="1837:21" pos:end="1837:23">env</name></expr></argument>, <argument pos:start="1837:26" pos:end="1837:28"><expr pos:start="1837:26" pos:end="1837:28"><name pos:start="1837:26" pos:end="1837:28">ctx</name></expr></argument>, <argument pos:start="1837:31" pos:end="1837:33"><expr pos:start="1837:31" pos:end="1837:33"><name pos:start="1837:31" pos:end="1837:33">op1</name></expr></argument>, <argument pos:start="1837:36" pos:end="1837:37"><expr pos:start="1837:36" pos:end="1837:37"><name pos:start="1837:36" pos:end="1837:37">rt</name></expr></argument>, <argument pos:start="1837:40" pos:end="1837:41"><expr pos:start="1837:40" pos:end="1837:41"><name pos:start="1837:40" pos:end="1837:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1839:1" pos:end="1839:6">#<cpp:directive pos:start="1839:2" pos:end="1839:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1839:8" pos:end="1839:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1841:13" pos:end="1841:18">break;</break>

        <case pos:start="1843:9" pos:end="1846:0">case <expr pos:start="1843:14" pos:end="1843:41"><name pos:start="1843:14" pos:end="1843:25">OPC_C0_FIRST</name> <operator pos:start="1843:27" pos:end="1843:29">...</operator> <name pos:start="1843:31" pos:end="1843:41">OPC_C0_LAST</name></expr>:</case>

<cpp:ifndef pos:start="1845:1" pos:end="1845:24">#<cpp:directive pos:start="1845:2" pos:end="1845:7">ifndef</cpp:directive> <name pos:start="1845:9" pos:end="1845:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <expr_stmt pos:start="1847:13" pos:end="1850:0"><expr pos:start="1847:13" pos:end="1847:59"><call pos:start="1847:13" pos:end="1847:59"><name pos:start="1847:13" pos:end="1847:19">gen_cp0</name><argument_list pos:start="1847:20" pos:end="1847:59">(<argument pos:start="1847:21" pos:end="1847:23"><expr pos:start="1847:21" pos:end="1847:23"><name pos:start="1847:21" pos:end="1847:23">env</name></expr></argument>, <argument pos:start="1847:26" pos:end="1847:28"><expr pos:start="1847:26" pos:end="1847:28"><name pos:start="1847:26" pos:end="1847:28">ctx</name></expr></argument>, <argument pos:start="1847:31" pos:end="1847:50"><expr pos:start="1847:31" pos:end="1847:50"><call pos:start="1847:31" pos:end="1847:50"><name pos:start="1847:31" pos:end="1847:37">MASK_C0</name><argument_list pos:start="1847:38" pos:end="1847:50">(<argument pos:start="1847:39" pos:end="1847:49"><expr pos:start="1847:39" pos:end="1847:49"><name pos:start="1847:39" pos:end="1847:49"><name pos:start="1847:39" pos:end="1847:41">ctx</name><operator pos:start="1847:42" pos:end="1847:43">-&gt;</operator><name pos:start="1847:44" pos:end="1847:49">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="1847:53" pos:end="1847:54"><expr pos:start="1847:53" pos:end="1847:54"><name pos:start="1847:53" pos:end="1847:54">rt</name></expr></argument>, <argument pos:start="1847:57" pos:end="1847:58"><expr pos:start="1847:57" pos:end="1847:58"><name pos:start="1847:57" pos:end="1847:58">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="1849:1" pos:end="1849:6">#<cpp:directive pos:start="1849:2" pos:end="1849:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1849:8" pos:end="1849:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1851:13" pos:end="1851:18">break;</break>

        <case pos:start="1853:9" pos:end="1856:0">case <expr pos:start="1853:14" pos:end="1853:22"><name pos:start="1853:14" pos:end="1853:22">OPC_MFMC0</name></expr>:</case>

<cpp:ifndef pos:start="1855:1" pos:end="1855:24">#<cpp:directive pos:start="1855:2" pos:end="1855:7">ifndef</cpp:directive> <name pos:start="1855:9" pos:end="1855:24">CONFIG_USER_ONLY</name></cpp:ifndef>

            <block pos:start="1857:13" pos:end="1954:0">{<block_content pos:start="1859:17" pos:end="1949:34">

                <decl_stmt pos:start="1859:17" pos:end="1859:41"><decl pos:start="1859:17" pos:end="1859:40"><type pos:start="1859:17" pos:end="1859:20"><name pos:start="1859:17" pos:end="1859:20">TCGv</name></type> <name pos:start="1859:22" pos:end="1859:23">t0</name> <init pos:start="1859:25" pos:end="1859:40">= <expr pos:start="1859:27" pos:end="1859:40"><call pos:start="1859:27" pos:end="1859:40"><name pos:start="1859:27" pos:end="1859:38">tcg_temp_new</name><argument_list pos:start="1859:39" pos:end="1859:40">()</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="1863:17" pos:end="1863:46"><expr pos:start="1863:17" pos:end="1863:45"><name pos:start="1863:17" pos:end="1863:19">op2</name> <operator pos:start="1863:21" pos:end="1863:21">=</operator> <call pos:start="1863:23" pos:end="1863:45"><name pos:start="1863:23" pos:end="1863:32">MASK_MFMC0</name><argument_list pos:start="1863:33" pos:end="1863:45">(<argument pos:start="1863:34" pos:end="1863:44"><expr pos:start="1863:34" pos:end="1863:44"><name pos:start="1863:34" pos:end="1863:44"><name pos:start="1863:34" pos:end="1863:36">ctx</name><operator pos:start="1863:37" pos:end="1863:38">-&gt;</operator><name pos:start="1863:39" pos:end="1863:44">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="1865:17" pos:end="1947:17">switch <condition pos:start="1865:24" pos:end="1865:28">(<expr pos:start="1865:25" pos:end="1865:27"><name pos:start="1865:25" pos:end="1865:27">op2</name></expr>)</condition> <block pos:start="1865:30" pos:end="1947:17">{<block_content pos:start="1867:17" pos:end="1945:26">

                <case pos:start="1867:17" pos:end="1867:29">case <expr pos:start="1867:22" pos:end="1867:28"><name pos:start="1867:22" pos:end="1867:28">OPC_DMT</name></expr>:</case>

                    <expr_stmt pos:start="1869:21" pos:end="1869:44"><expr pos:start="1869:21" pos:end="1869:43"><call pos:start="1869:21" pos:end="1869:43"><name pos:start="1869:21" pos:end="1869:30">check_insn</name><argument_list pos:start="1869:31" pos:end="1869:43">(<argument pos:start="1869:32" pos:end="1869:34"><expr pos:start="1869:32" pos:end="1869:34"><name pos:start="1869:32" pos:end="1869:34">ctx</name></expr></argument>, <argument pos:start="1869:37" pos:end="1869:42"><expr pos:start="1869:37" pos:end="1869:42"><name pos:start="1869:37" pos:end="1869:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1871:21" pos:end="1871:39"><expr pos:start="1871:21" pos:end="1871:38"><call pos:start="1871:21" pos:end="1871:38"><name pos:start="1871:21" pos:end="1871:34">gen_helper_dmt</name><argument_list pos:start="1871:35" pos:end="1871:38">(<argument pos:start="1871:36" pos:end="1871:37"><expr pos:start="1871:36" pos:end="1871:37"><name pos:start="1871:36" pos:end="1871:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1873:21" pos:end="1873:42"><expr pos:start="1873:21" pos:end="1873:41"><call pos:start="1873:21" pos:end="1873:41"><name pos:start="1873:21" pos:end="1873:33">gen_store_gpr</name><argument_list pos:start="1873:34" pos:end="1873:41">(<argument pos:start="1873:35" pos:end="1873:36"><expr pos:start="1873:35" pos:end="1873:36"><name pos:start="1873:35" pos:end="1873:36">t0</name></expr></argument>, <argument pos:start="1873:39" pos:end="1873:40"><expr pos:start="1873:39" pos:end="1873:40"><name pos:start="1873:39" pos:end="1873:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1875:21" pos:end="1875:26">break;</break>

                <case pos:start="1877:17" pos:end="1877:29">case <expr pos:start="1877:22" pos:end="1877:28"><name pos:start="1877:22" pos:end="1877:28">OPC_EMT</name></expr>:</case>

                    <expr_stmt pos:start="1879:21" pos:end="1879:44"><expr pos:start="1879:21" pos:end="1879:43"><call pos:start="1879:21" pos:end="1879:43"><name pos:start="1879:21" pos:end="1879:30">check_insn</name><argument_list pos:start="1879:31" pos:end="1879:43">(<argument pos:start="1879:32" pos:end="1879:34"><expr pos:start="1879:32" pos:end="1879:34"><name pos:start="1879:32" pos:end="1879:34">ctx</name></expr></argument>, <argument pos:start="1879:37" pos:end="1879:42"><expr pos:start="1879:37" pos:end="1879:42"><name pos:start="1879:37" pos:end="1879:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1881:21" pos:end="1881:39"><expr pos:start="1881:21" pos:end="1881:38"><call pos:start="1881:21" pos:end="1881:38"><name pos:start="1881:21" pos:end="1881:34">gen_helper_emt</name><argument_list pos:start="1881:35" pos:end="1881:38">(<argument pos:start="1881:36" pos:end="1881:37"><expr pos:start="1881:36" pos:end="1881:37"><name pos:start="1881:36" pos:end="1881:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1883:21" pos:end="1883:42"><expr pos:start="1883:21" pos:end="1883:41"><call pos:start="1883:21" pos:end="1883:41"><name pos:start="1883:21" pos:end="1883:33">gen_store_gpr</name><argument_list pos:start="1883:34" pos:end="1883:41">(<argument pos:start="1883:35" pos:end="1883:36"><expr pos:start="1883:35" pos:end="1883:36"><name pos:start="1883:35" pos:end="1883:36">t0</name></expr></argument>, <argument pos:start="1883:39" pos:end="1883:40"><expr pos:start="1883:39" pos:end="1883:40"><name pos:start="1883:39" pos:end="1883:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1885:21" pos:end="1885:26">break;</break>

                <case pos:start="1887:17" pos:end="1887:30">case <expr pos:start="1887:22" pos:end="1887:29"><name pos:start="1887:22" pos:end="1887:29">OPC_DVPE</name></expr>:</case>

                    <expr_stmt pos:start="1889:21" pos:end="1889:44"><expr pos:start="1889:21" pos:end="1889:43"><call pos:start="1889:21" pos:end="1889:43"><name pos:start="1889:21" pos:end="1889:30">check_insn</name><argument_list pos:start="1889:31" pos:end="1889:43">(<argument pos:start="1889:32" pos:end="1889:34"><expr pos:start="1889:32" pos:end="1889:34"><name pos:start="1889:32" pos:end="1889:34">ctx</name></expr></argument>, <argument pos:start="1889:37" pos:end="1889:42"><expr pos:start="1889:37" pos:end="1889:42"><name pos:start="1889:37" pos:end="1889:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1891:21" pos:end="1891:49"><expr pos:start="1891:21" pos:end="1891:48"><call pos:start="1891:21" pos:end="1891:48"><name pos:start="1891:21" pos:end="1891:35">gen_helper_dvpe</name><argument_list pos:start="1891:36" pos:end="1891:48">(<argument pos:start="1891:37" pos:end="1891:38"><expr pos:start="1891:37" pos:end="1891:38"><name pos:start="1891:37" pos:end="1891:38">t0</name></expr></argument>, <argument pos:start="1891:41" pos:end="1891:47"><expr pos:start="1891:41" pos:end="1891:47"><name pos:start="1891:41" pos:end="1891:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1893:21" pos:end="1893:42"><expr pos:start="1893:21" pos:end="1893:41"><call pos:start="1893:21" pos:end="1893:41"><name pos:start="1893:21" pos:end="1893:33">gen_store_gpr</name><argument_list pos:start="1893:34" pos:end="1893:41">(<argument pos:start="1893:35" pos:end="1893:36"><expr pos:start="1893:35" pos:end="1893:36"><name pos:start="1893:35" pos:end="1893:36">t0</name></expr></argument>, <argument pos:start="1893:39" pos:end="1893:40"><expr pos:start="1893:39" pos:end="1893:40"><name pos:start="1893:39" pos:end="1893:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1895:21" pos:end="1895:26">break;</break>

                <case pos:start="1897:17" pos:end="1897:30">case <expr pos:start="1897:22" pos:end="1897:29"><name pos:start="1897:22" pos:end="1897:29">OPC_EVPE</name></expr>:</case>

                    <expr_stmt pos:start="1899:21" pos:end="1899:44"><expr pos:start="1899:21" pos:end="1899:43"><call pos:start="1899:21" pos:end="1899:43"><name pos:start="1899:21" pos:end="1899:30">check_insn</name><argument_list pos:start="1899:31" pos:end="1899:43">(<argument pos:start="1899:32" pos:end="1899:34"><expr pos:start="1899:32" pos:end="1899:34"><name pos:start="1899:32" pos:end="1899:34">ctx</name></expr></argument>, <argument pos:start="1899:37" pos:end="1899:42"><expr pos:start="1899:37" pos:end="1899:42"><name pos:start="1899:37" pos:end="1899:42">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1901:21" pos:end="1901:49"><expr pos:start="1901:21" pos:end="1901:48"><call pos:start="1901:21" pos:end="1901:48"><name pos:start="1901:21" pos:end="1901:35">gen_helper_evpe</name><argument_list pos:start="1901:36" pos:end="1901:48">(<argument pos:start="1901:37" pos:end="1901:38"><expr pos:start="1901:37" pos:end="1901:38"><name pos:start="1901:37" pos:end="1901:38">t0</name></expr></argument>, <argument pos:start="1901:41" pos:end="1901:47"><expr pos:start="1901:41" pos:end="1901:47"><name pos:start="1901:41" pos:end="1901:47">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1903:21" pos:end="1903:42"><expr pos:start="1903:21" pos:end="1903:41"><call pos:start="1903:21" pos:end="1903:41"><name pos:start="1903:21" pos:end="1903:33">gen_store_gpr</name><argument_list pos:start="1903:34" pos:end="1903:41">(<argument pos:start="1903:35" pos:end="1903:36"><expr pos:start="1903:35" pos:end="1903:36"><name pos:start="1903:35" pos:end="1903:36">t0</name></expr></argument>, <argument pos:start="1903:39" pos:end="1903:40"><expr pos:start="1903:39" pos:end="1903:40"><name pos:start="1903:39" pos:end="1903:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1905:21" pos:end="1905:26">break;</break>

                <case pos:start="1907:17" pos:end="1907:28">case <expr pos:start="1907:22" pos:end="1907:27"><name pos:start="1907:22" pos:end="1907:27">OPC_DI</name></expr>:</case>

                    <expr_stmt pos:start="1909:21" pos:end="1909:50"><expr pos:start="1909:21" pos:end="1909:49"><call pos:start="1909:21" pos:end="1909:49"><name pos:start="1909:21" pos:end="1909:30">check_insn</name><argument_list pos:start="1909:31" pos:end="1909:49">(<argument pos:start="1909:32" pos:end="1909:34"><expr pos:start="1909:32" pos:end="1909:34"><name pos:start="1909:32" pos:end="1909:34">ctx</name></expr></argument>, <argument pos:start="1909:37" pos:end="1909:48"><expr pos:start="1909:37" pos:end="1909:48"><name pos:start="1909:37" pos:end="1909:48">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1911:21" pos:end="1911:43"><expr pos:start="1911:21" pos:end="1911:42"><call pos:start="1911:21" pos:end="1911:42"><name pos:start="1911:21" pos:end="1911:34">save_cpu_state</name><argument_list pos:start="1911:35" pos:end="1911:42">(<argument pos:start="1911:36" pos:end="1911:38"><expr pos:start="1911:36" pos:end="1911:38"><name pos:start="1911:36" pos:end="1911:38">ctx</name></expr></argument>, <argument pos:start="1911:41" pos:end="1911:41"><expr pos:start="1911:41" pos:end="1911:41"><literal type="number" pos:start="1911:41" pos:end="1911:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1913:21" pos:end="1913:47"><expr pos:start="1913:21" pos:end="1913:46"><call pos:start="1913:21" pos:end="1913:46"><name pos:start="1913:21" pos:end="1913:33">gen_helper_di</name><argument_list pos:start="1913:34" pos:end="1913:46">(<argument pos:start="1913:35" pos:end="1913:36"><expr pos:start="1913:35" pos:end="1913:36"><name pos:start="1913:35" pos:end="1913:36">t0</name></expr></argument>, <argument pos:start="1913:39" pos:end="1913:45"><expr pos:start="1913:39" pos:end="1913:45"><name pos:start="1913:39" pos:end="1913:45">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1915:21" pos:end="1915:42"><expr pos:start="1915:21" pos:end="1915:41"><call pos:start="1915:21" pos:end="1915:41"><name pos:start="1915:21" pos:end="1915:33">gen_store_gpr</name><argument_list pos:start="1915:34" pos:end="1915:41">(<argument pos:start="1915:35" pos:end="1915:36"><expr pos:start="1915:35" pos:end="1915:36"><name pos:start="1915:35" pos:end="1915:36">t0</name></expr></argument>, <argument pos:start="1915:39" pos:end="1915:40"><expr pos:start="1915:39" pos:end="1915:40"><name pos:start="1915:39" pos:end="1915:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1917:21" pos:end="1917:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="1919:21" pos:end="1919:42"><expr pos:start="1919:21" pos:end="1919:41"><name pos:start="1919:21" pos:end="1919:31"><name pos:start="1919:21" pos:end="1919:23">ctx</name><operator pos:start="1919:24" pos:end="1919:25">-&gt;</operator><name pos:start="1919:26" pos:end="1919:31">bstate</name></name> <operator pos:start="1919:33" pos:end="1919:33">=</operator> <name pos:start="1919:35" pos:end="1919:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="1921:21" pos:end="1921:26">break;</break>

                <case pos:start="1923:17" pos:end="1923:28">case <expr pos:start="1923:22" pos:end="1923:27"><name pos:start="1923:22" pos:end="1923:27">OPC_EI</name></expr>:</case>

                    <expr_stmt pos:start="1925:21" pos:end="1925:50"><expr pos:start="1925:21" pos:end="1925:49"><call pos:start="1925:21" pos:end="1925:49"><name pos:start="1925:21" pos:end="1925:30">check_insn</name><argument_list pos:start="1925:31" pos:end="1925:49">(<argument pos:start="1925:32" pos:end="1925:34"><expr pos:start="1925:32" pos:end="1925:34"><name pos:start="1925:32" pos:end="1925:34">ctx</name></expr></argument>, <argument pos:start="1925:37" pos:end="1925:48"><expr pos:start="1925:37" pos:end="1925:48"><name pos:start="1925:37" pos:end="1925:48">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1927:21" pos:end="1927:43"><expr pos:start="1927:21" pos:end="1927:42"><call pos:start="1927:21" pos:end="1927:42"><name pos:start="1927:21" pos:end="1927:34">save_cpu_state</name><argument_list pos:start="1927:35" pos:end="1927:42">(<argument pos:start="1927:36" pos:end="1927:38"><expr pos:start="1927:36" pos:end="1927:38"><name pos:start="1927:36" pos:end="1927:38">ctx</name></expr></argument>, <argument pos:start="1927:41" pos:end="1927:41"><expr pos:start="1927:41" pos:end="1927:41"><literal type="number" pos:start="1927:41" pos:end="1927:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1929:21" pos:end="1929:47"><expr pos:start="1929:21" pos:end="1929:46"><call pos:start="1929:21" pos:end="1929:46"><name pos:start="1929:21" pos:end="1929:33">gen_helper_ei</name><argument_list pos:start="1929:34" pos:end="1929:46">(<argument pos:start="1929:35" pos:end="1929:36"><expr pos:start="1929:35" pos:end="1929:36"><name pos:start="1929:35" pos:end="1929:36">t0</name></expr></argument>, <argument pos:start="1929:39" pos:end="1929:45"><expr pos:start="1929:39" pos:end="1929:45"><name pos:start="1929:39" pos:end="1929:45">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1931:21" pos:end="1931:42"><expr pos:start="1931:21" pos:end="1931:41"><call pos:start="1931:21" pos:end="1931:41"><name pos:start="1931:21" pos:end="1931:33">gen_store_gpr</name><argument_list pos:start="1931:34" pos:end="1931:41">(<argument pos:start="1931:35" pos:end="1931:36"><expr pos:start="1931:35" pos:end="1931:36"><name pos:start="1931:35" pos:end="1931:36">t0</name></expr></argument>, <argument pos:start="1931:39" pos:end="1931:40"><expr pos:start="1931:39" pos:end="1931:40"><name pos:start="1931:39" pos:end="1931:40">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1933:21" pos:end="1933:85">/* Stop translation as we may have switched the execution mode */</comment>

                    <expr_stmt pos:start="1935:21" pos:end="1935:42"><expr pos:start="1935:21" pos:end="1935:41"><name pos:start="1935:21" pos:end="1935:31"><name pos:start="1935:21" pos:end="1935:23">ctx</name><operator pos:start="1935:24" pos:end="1935:25">-&gt;</operator><name pos:start="1935:26" pos:end="1935:31">bstate</name></name> <operator pos:start="1935:33" pos:end="1935:33">=</operator> <name pos:start="1935:35" pos:end="1935:41">BS_STOP</name></expr>;</expr_stmt>

                    <break pos:start="1937:21" pos:end="1937:26">break;</break>

                <default pos:start="1939:17" pos:end="1939:24">default:</default>            <comment type="block" pos:start="1939:37" pos:end="1939:49">/* Invalid */</comment>

                    <expr_stmt pos:start="1941:21" pos:end="1941:40"><expr pos:start="1941:21" pos:end="1941:39"><call pos:start="1941:21" pos:end="1941:39"><name pos:start="1941:21" pos:end="1941:30">MIPS_INVAL</name><argument_list pos:start="1941:31" pos:end="1941:39">(<argument pos:start="1941:32" pos:end="1941:38"><expr pos:start="1941:32" pos:end="1941:38"><literal type="string" pos:start="1941:32" pos:end="1941:38">"mfmc0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1943:21" pos:end="1943:53"><expr pos:start="1943:21" pos:end="1943:52"><call pos:start="1943:21" pos:end="1943:52"><name pos:start="1943:21" pos:end="1943:38">generate_exception</name><argument_list pos:start="1943:39" pos:end="1943:52">(<argument pos:start="1943:40" pos:end="1943:42"><expr pos:start="1943:40" pos:end="1943:42"><name pos:start="1943:40" pos:end="1943:42">ctx</name></expr></argument>, <argument pos:start="1943:45" pos:end="1943:51"><expr pos:start="1943:45" pos:end="1943:51"><name pos:start="1943:45" pos:end="1943:51">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1945:21" pos:end="1945:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1949:17" pos:end="1949:34"><expr pos:start="1949:17" pos:end="1949:33"><call pos:start="1949:17" pos:end="1949:33"><name pos:start="1949:17" pos:end="1949:29">tcg_temp_free</name><argument_list pos:start="1949:30" pos:end="1949:33">(<argument pos:start="1949:31" pos:end="1949:32"><expr pos:start="1949:31" pos:end="1949:32"><name pos:start="1949:31" pos:end="1949:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="1953:1" pos:end="1953:6">#<cpp:directive pos:start="1953:2" pos:end="1953:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="1953:8" pos:end="1953:30">/* !CONFIG_USER_ONLY */</comment>

            <break pos:start="1955:13" pos:end="1955:18">break;</break>

        <case pos:start="1957:9" pos:end="1957:24">case <expr pos:start="1957:14" pos:end="1957:23"><name pos:start="1957:14" pos:end="1957:23">OPC_RDPGPR</name></expr>:</case>

            <expr_stmt pos:start="1959:13" pos:end="1959:42"><expr pos:start="1959:13" pos:end="1959:41"><call pos:start="1959:13" pos:end="1959:41"><name pos:start="1959:13" pos:end="1959:22">check_insn</name><argument_list pos:start="1959:23" pos:end="1959:41">(<argument pos:start="1959:24" pos:end="1959:26"><expr pos:start="1959:24" pos:end="1959:26"><name pos:start="1959:24" pos:end="1959:26">ctx</name></expr></argument>, <argument pos:start="1959:29" pos:end="1959:40"><expr pos:start="1959:29" pos:end="1959:40"><name pos:start="1959:29" pos:end="1959:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1961:13" pos:end="1961:36"><expr pos:start="1961:13" pos:end="1961:35"><call pos:start="1961:13" pos:end="1961:35"><name pos:start="1961:13" pos:end="1961:27">gen_load_srsgpr</name><argument_list pos:start="1961:28" pos:end="1961:35">(<argument pos:start="1961:29" pos:end="1961:30"><expr pos:start="1961:29" pos:end="1961:30"><name pos:start="1961:29" pos:end="1961:30">rt</name></expr></argument>, <argument pos:start="1961:33" pos:end="1961:34"><expr pos:start="1961:33" pos:end="1961:34"><name pos:start="1961:33" pos:end="1961:34">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1963:13" pos:end="1963:18">break;</break>

        <case pos:start="1965:9" pos:end="1965:24">case <expr pos:start="1965:14" pos:end="1965:23"><name pos:start="1965:14" pos:end="1965:23">OPC_WRPGPR</name></expr>:</case>

            <expr_stmt pos:start="1967:13" pos:end="1967:42"><expr pos:start="1967:13" pos:end="1967:41"><call pos:start="1967:13" pos:end="1967:41"><name pos:start="1967:13" pos:end="1967:22">check_insn</name><argument_list pos:start="1967:23" pos:end="1967:41">(<argument pos:start="1967:24" pos:end="1967:26"><expr pos:start="1967:24" pos:end="1967:26"><name pos:start="1967:24" pos:end="1967:26">ctx</name></expr></argument>, <argument pos:start="1967:29" pos:end="1967:40"><expr pos:start="1967:29" pos:end="1967:40"><name pos:start="1967:29" pos:end="1967:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1969:13" pos:end="1969:37"><expr pos:start="1969:13" pos:end="1969:36"><call pos:start="1969:13" pos:end="1969:36"><name pos:start="1969:13" pos:end="1969:28">gen_store_srsgpr</name><argument_list pos:start="1969:29" pos:end="1969:36">(<argument pos:start="1969:30" pos:end="1969:31"><expr pos:start="1969:30" pos:end="1969:31"><name pos:start="1969:30" pos:end="1969:31">rt</name></expr></argument>, <argument pos:start="1969:34" pos:end="1969:35"><expr pos:start="1969:34" pos:end="1969:35"><name pos:start="1969:34" pos:end="1969:35">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1971:13" pos:end="1971:18">break;</break>

        <default pos:start="1973:9" pos:end="1973:16">default:</default>

            <expr_stmt pos:start="1975:13" pos:end="1975:30"><expr pos:start="1975:13" pos:end="1975:29"><call pos:start="1975:13" pos:end="1975:29"><name pos:start="1975:13" pos:end="1975:22">MIPS_INVAL</name><argument_list pos:start="1975:23" pos:end="1975:29">(<argument pos:start="1975:24" pos:end="1975:28"><expr pos:start="1975:24" pos:end="1975:28"><literal type="string" pos:start="1975:24" pos:end="1975:28">"cp0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1977:13" pos:end="1977:45"><expr pos:start="1977:13" pos:end="1977:44"><call pos:start="1977:13" pos:end="1977:44"><name pos:start="1977:13" pos:end="1977:30">generate_exception</name><argument_list pos:start="1977:31" pos:end="1977:44">(<argument pos:start="1977:32" pos:end="1977:34"><expr pos:start="1977:32" pos:end="1977:34"><name pos:start="1977:32" pos:end="1977:34">ctx</name></expr></argument>, <argument pos:start="1977:37" pos:end="1977:43"><expr pos:start="1977:37" pos:end="1977:43"><name pos:start="1977:37" pos:end="1977:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1979:13" pos:end="1979:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1983:9" pos:end="1983:14">break;</break>

    <case pos:start="1985:5" pos:end="1985:18">case <expr pos:start="1985:10" pos:end="1985:17"><name pos:start="1985:10" pos:end="1985:17">OPC_ADDI</name></expr>:</case> <comment type="block" pos:start="1985:20" pos:end="1985:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="1987:5" pos:end="1987:19">case <expr pos:start="1987:10" pos:end="1987:18"><name pos:start="1987:10" pos:end="1987:18">OPC_ADDIU</name></expr>:</case>

         <expr_stmt pos:start="1989:10" pos:end="1989:45"><expr pos:start="1989:10" pos:end="1989:44"><call pos:start="1989:10" pos:end="1989:44"><name pos:start="1989:10" pos:end="1989:22">gen_arith_imm</name><argument_list pos:start="1989:23" pos:end="1989:44">(<argument pos:start="1989:24" pos:end="1989:26"><expr pos:start="1989:24" pos:end="1989:26"><name pos:start="1989:24" pos:end="1989:26">ctx</name></expr></argument>, <argument pos:start="1989:29" pos:end="1989:30"><expr pos:start="1989:29" pos:end="1989:30"><name pos:start="1989:29" pos:end="1989:30">op</name></expr></argument>, <argument pos:start="1989:33" pos:end="1989:34"><expr pos:start="1989:33" pos:end="1989:34"><name pos:start="1989:33" pos:end="1989:34">rt</name></expr></argument>, <argument pos:start="1989:37" pos:end="1989:38"><expr pos:start="1989:37" pos:end="1989:38"><name pos:start="1989:37" pos:end="1989:38">rs</name></expr></argument>, <argument pos:start="1989:41" pos:end="1989:43"><expr pos:start="1989:41" pos:end="1989:43"><name pos:start="1989:41" pos:end="1989:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1991:10" pos:end="1991:15">break;</break>

    <case pos:start="1993:5" pos:end="1993:18">case <expr pos:start="1993:10" pos:end="1993:17"><name pos:start="1993:10" pos:end="1993:17">OPC_SLTI</name></expr>:</case> <comment type="block" pos:start="1993:20" pos:end="1993:63">/* Set on less than with immediate opcode */</comment>

    <case pos:start="1995:5" pos:end="1995:19">case <expr pos:start="1995:10" pos:end="1995:18"><name pos:start="1995:10" pos:end="1995:18">OPC_SLTIU</name></expr>:</case>

         <expr_stmt pos:start="1997:10" pos:end="1997:43"><expr pos:start="1997:10" pos:end="1997:42"><call pos:start="1997:10" pos:end="1997:42"><name pos:start="1997:10" pos:end="1997:20">gen_slt_imm</name><argument_list pos:start="1997:21" pos:end="1997:42">(<argument pos:start="1997:22" pos:end="1997:24"><expr pos:start="1997:22" pos:end="1997:24"><name pos:start="1997:22" pos:end="1997:24">ctx</name></expr></argument>, <argument pos:start="1997:27" pos:end="1997:28"><expr pos:start="1997:27" pos:end="1997:28"><name pos:start="1997:27" pos:end="1997:28">op</name></expr></argument>, <argument pos:start="1997:31" pos:end="1997:32"><expr pos:start="1997:31" pos:end="1997:32"><name pos:start="1997:31" pos:end="1997:32">rt</name></expr></argument>, <argument pos:start="1997:35" pos:end="1997:36"><expr pos:start="1997:35" pos:end="1997:36"><name pos:start="1997:35" pos:end="1997:36">rs</name></expr></argument>, <argument pos:start="1997:39" pos:end="1997:41"><expr pos:start="1997:39" pos:end="1997:41"><name pos:start="1997:39" pos:end="1997:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="1999:10" pos:end="1999:15">break;</break>

    <case pos:start="2001:5" pos:end="2001:18">case <expr pos:start="2001:10" pos:end="2001:17"><name pos:start="2001:10" pos:end="2001:17">OPC_ANDI</name></expr>:</case> <comment type="block" pos:start="2001:20" pos:end="2001:57">/* Arithmetic with immediate opcode */</comment>

    <case pos:start="2003:5" pos:end="2003:17">case <expr pos:start="2003:10" pos:end="2003:16"><name pos:start="2003:10" pos:end="2003:16">OPC_LUI</name></expr>:</case>

    <case pos:start="2005:5" pos:end="2005:17">case <expr pos:start="2005:10" pos:end="2005:16"><name pos:start="2005:10" pos:end="2005:16">OPC_ORI</name></expr>:</case>

    <case pos:start="2007:5" pos:end="2007:18">case <expr pos:start="2007:10" pos:end="2007:17"><name pos:start="2007:10" pos:end="2007:17">OPC_XORI</name></expr>:</case>

         <expr_stmt pos:start="2009:10" pos:end="2009:45"><expr pos:start="2009:10" pos:end="2009:44"><call pos:start="2009:10" pos:end="2009:44"><name pos:start="2009:10" pos:end="2009:22">gen_logic_imm</name><argument_list pos:start="2009:23" pos:end="2009:44">(<argument pos:start="2009:24" pos:end="2009:26"><expr pos:start="2009:24" pos:end="2009:26"><name pos:start="2009:24" pos:end="2009:26">ctx</name></expr></argument>, <argument pos:start="2009:29" pos:end="2009:30"><expr pos:start="2009:29" pos:end="2009:30"><name pos:start="2009:29" pos:end="2009:30">op</name></expr></argument>, <argument pos:start="2009:33" pos:end="2009:34"><expr pos:start="2009:33" pos:end="2009:34"><name pos:start="2009:33" pos:end="2009:34">rt</name></expr></argument>, <argument pos:start="2009:37" pos:end="2009:38"><expr pos:start="2009:37" pos:end="2009:38"><name pos:start="2009:37" pos:end="2009:38">rs</name></expr></argument>, <argument pos:start="2009:41" pos:end="2009:43"><expr pos:start="2009:41" pos:end="2009:43"><name pos:start="2009:41" pos:end="2009:43">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2011:10" pos:end="2011:15">break;</break>

    <case pos:start="2013:5" pos:end="2013:27">case <expr pos:start="2013:10" pos:end="2013:26"><name pos:start="2013:10" pos:end="2013:14">OPC_J</name> <operator pos:start="2013:16" pos:end="2013:18">...</operator> <name pos:start="2013:20" pos:end="2013:26">OPC_JAL</name></expr>:</case> <comment type="block" pos:start="2013:29" pos:end="2013:38">/* Jump */</comment>

         <expr_stmt pos:start="2015:10" pos:end="2015:58"><expr pos:start="2015:10" pos:end="2015:57"><name pos:start="2015:10" pos:end="2015:15">offset</name> <operator pos:start="2015:17" pos:end="2015:17">=</operator> <operator pos:start="2015:19" pos:end="2015:19">(</operator><name pos:start="2015:20" pos:end="2015:26">int32_t</name><operator pos:start="2015:27" pos:end="2015:27">)</operator><operator pos:start="2015:28" pos:end="2015:28">(</operator><name pos:start="2015:29" pos:end="2015:39"><name pos:start="2015:29" pos:end="2015:31">ctx</name><operator pos:start="2015:32" pos:end="2015:33">-&gt;</operator><name pos:start="2015:34" pos:end="2015:39">opcode</name></name> <operator pos:start="2015:41" pos:end="2015:41">&amp;</operator> <literal type="number" pos:start="2015:43" pos:end="2015:51">0x3FFFFFF</literal><operator pos:start="2015:52" pos:end="2015:52">)</operator> <operator pos:start="2015:54" pos:end="2015:55">&lt;&lt;</operator> <literal type="number" pos:start="2015:57" pos:end="2015:57">2</literal></expr>;</expr_stmt>

         <expr_stmt pos:start="2017:10" pos:end="2017:56"><expr pos:start="2017:10" pos:end="2017:55"><call pos:start="2017:10" pos:end="2017:55"><name pos:start="2017:10" pos:end="2017:27">gen_compute_branch</name><argument_list pos:start="2017:28" pos:end="2017:55">(<argument pos:start="2017:29" pos:end="2017:31"><expr pos:start="2017:29" pos:end="2017:31"><name pos:start="2017:29" pos:end="2017:31">ctx</name></expr></argument>, <argument pos:start="2017:34" pos:end="2017:35"><expr pos:start="2017:34" pos:end="2017:35"><name pos:start="2017:34" pos:end="2017:35">op</name></expr></argument>, <argument pos:start="2017:38" pos:end="2017:38"><expr pos:start="2017:38" pos:end="2017:38"><literal type="number" pos:start="2017:38" pos:end="2017:38">4</literal></expr></argument>, <argument pos:start="2017:41" pos:end="2017:42"><expr pos:start="2017:41" pos:end="2017:42"><name pos:start="2017:41" pos:end="2017:42">rs</name></expr></argument>, <argument pos:start="2017:45" pos:end="2017:46"><expr pos:start="2017:45" pos:end="2017:46"><name pos:start="2017:45" pos:end="2017:46">rt</name></expr></argument>, <argument pos:start="2017:49" pos:end="2017:54"><expr pos:start="2017:49" pos:end="2017:54"><name pos:start="2017:49" pos:end="2017:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="2019:10" pos:end="2019:24"><expr pos:start="2019:10" pos:end="2019:23"><operator pos:start="2019:10" pos:end="2019:10">*</operator><name pos:start="2019:11" pos:end="2019:19">is_branch</name> <operator pos:start="2019:21" pos:end="2019:21">=</operator> <literal type="number" pos:start="2019:23" pos:end="2019:23">1</literal></expr>;</expr_stmt>

         <break pos:start="2021:10" pos:end="2021:15">break;</break>

    <case pos:start="2023:5" pos:end="2023:30">case <expr pos:start="2023:10" pos:end="2023:29"><name pos:start="2023:10" pos:end="2023:16">OPC_BEQ</name> <operator pos:start="2023:18" pos:end="2023:20">...</operator> <name pos:start="2023:22" pos:end="2023:29">OPC_BGTZ</name></expr>:</case> <comment type="block" pos:start="2023:32" pos:end="2023:43">/* Branch */</comment>

    <case pos:start="2025:5" pos:end="2025:32">case <expr pos:start="2025:10" pos:end="2025:31"><name pos:start="2025:10" pos:end="2025:17">OPC_BEQL</name> <operator pos:start="2025:19" pos:end="2025:21">...</operator> <name pos:start="2025:23" pos:end="2025:31">OPC_BGTZL</name></expr>:</case>

         <expr_stmt pos:start="2027:10" pos:end="2027:58"><expr pos:start="2027:10" pos:end="2027:57"><call pos:start="2027:10" pos:end="2027:57"><name pos:start="2027:10" pos:end="2027:27">gen_compute_branch</name><argument_list pos:start="2027:28" pos:end="2027:57">(<argument pos:start="2027:29" pos:end="2027:31"><expr pos:start="2027:29" pos:end="2027:31"><name pos:start="2027:29" pos:end="2027:31">ctx</name></expr></argument>, <argument pos:start="2027:34" pos:end="2027:35"><expr pos:start="2027:34" pos:end="2027:35"><name pos:start="2027:34" pos:end="2027:35">op</name></expr></argument>, <argument pos:start="2027:38" pos:end="2027:38"><expr pos:start="2027:38" pos:end="2027:38"><literal type="number" pos:start="2027:38" pos:end="2027:38">4</literal></expr></argument>, <argument pos:start="2027:41" pos:end="2027:42"><expr pos:start="2027:41" pos:end="2027:42"><name pos:start="2027:41" pos:end="2027:42">rs</name></expr></argument>, <argument pos:start="2027:45" pos:end="2027:46"><expr pos:start="2027:45" pos:end="2027:46"><name pos:start="2027:45" pos:end="2027:46">rt</name></expr></argument>, <argument pos:start="2027:49" pos:end="2027:56"><expr pos:start="2027:49" pos:end="2027:56"><name pos:start="2027:49" pos:end="2027:51">imm</name> <operator pos:start="2027:53" pos:end="2027:54">&lt;&lt;</operator> <literal type="number" pos:start="2027:56" pos:end="2027:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="2029:10" pos:end="2029:24"><expr pos:start="2029:10" pos:end="2029:23"><operator pos:start="2029:10" pos:end="2029:10">*</operator><name pos:start="2029:11" pos:end="2029:19">is_branch</name> <operator pos:start="2029:21" pos:end="2029:21">=</operator> <literal type="number" pos:start="2029:23" pos:end="2029:23">1</literal></expr>;</expr_stmt>

         <break pos:start="2031:10" pos:end="2031:15">break;</break>

    <case pos:start="2033:5" pos:end="2033:28">case <expr pos:start="2033:10" pos:end="2033:27"><name pos:start="2033:10" pos:end="2033:15">OPC_LB</name> <operator pos:start="2033:17" pos:end="2033:19">...</operator> <name pos:start="2033:21" pos:end="2033:27">OPC_LWR</name></expr>:</case> <comment type="block" pos:start="2033:30" pos:end="2033:50">/* Load and stores */</comment>

    <case pos:start="2035:5" pos:end="2035:16">case <expr pos:start="2035:10" pos:end="2035:15"><name pos:start="2035:10" pos:end="2035:15">OPC_LL</name></expr>:</case>

         <expr_stmt pos:start="2037:10" pos:end="2037:38"><expr pos:start="2037:10" pos:end="2037:37"><call pos:start="2037:10" pos:end="2037:37"><name pos:start="2037:10" pos:end="2037:15">gen_ld</name><argument_list pos:start="2037:16" pos:end="2037:37">(<argument pos:start="2037:17" pos:end="2037:19"><expr pos:start="2037:17" pos:end="2037:19"><name pos:start="2037:17" pos:end="2037:19">ctx</name></expr></argument>, <argument pos:start="2037:22" pos:end="2037:23"><expr pos:start="2037:22" pos:end="2037:23"><name pos:start="2037:22" pos:end="2037:23">op</name></expr></argument>, <argument pos:start="2037:26" pos:end="2037:27"><expr pos:start="2037:26" pos:end="2037:27"><name pos:start="2037:26" pos:end="2037:27">rt</name></expr></argument>, <argument pos:start="2037:30" pos:end="2037:31"><expr pos:start="2037:30" pos:end="2037:31"><name pos:start="2037:30" pos:end="2037:31">rs</name></expr></argument>, <argument pos:start="2037:34" pos:end="2037:36"><expr pos:start="2037:34" pos:end="2037:36"><name pos:start="2037:34" pos:end="2037:36">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2039:10" pos:end="2039:15">break;</break>

    <case pos:start="2041:5" pos:end="2041:27">case <expr pos:start="2041:10" pos:end="2041:26"><name pos:start="2041:10" pos:end="2041:15">OPC_SB</name> <operator pos:start="2041:17" pos:end="2041:19">...</operator> <name pos:start="2041:21" pos:end="2041:26">OPC_SW</name></expr>:</case>

    <case pos:start="2043:5" pos:end="2043:17">case <expr pos:start="2043:10" pos:end="2043:16"><name pos:start="2043:10" pos:end="2043:16">OPC_SWR</name></expr>:</case>

         <expr_stmt pos:start="2045:10" pos:end="2045:38"><expr pos:start="2045:10" pos:end="2045:37"><call pos:start="2045:10" pos:end="2045:37"><name pos:start="2045:10" pos:end="2045:15">gen_st</name><argument_list pos:start="2045:16" pos:end="2045:37">(<argument pos:start="2045:17" pos:end="2045:19"><expr pos:start="2045:17" pos:end="2045:19"><name pos:start="2045:17" pos:end="2045:19">ctx</name></expr></argument>, <argument pos:start="2045:22" pos:end="2045:23"><expr pos:start="2045:22" pos:end="2045:23"><name pos:start="2045:22" pos:end="2045:23">op</name></expr></argument>, <argument pos:start="2045:26" pos:end="2045:27"><expr pos:start="2045:26" pos:end="2045:27"><name pos:start="2045:26" pos:end="2045:27">rt</name></expr></argument>, <argument pos:start="2045:30" pos:end="2045:31"><expr pos:start="2045:30" pos:end="2045:31"><name pos:start="2045:30" pos:end="2045:31">rs</name></expr></argument>, <argument pos:start="2045:34" pos:end="2045:36"><expr pos:start="2045:34" pos:end="2045:36"><name pos:start="2045:34" pos:end="2045:36">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2047:10" pos:end="2047:15">break;</break>

    <case pos:start="2049:5" pos:end="2049:16">case <expr pos:start="2049:10" pos:end="2049:15"><name pos:start="2049:10" pos:end="2049:15">OPC_SC</name></expr>:</case>

         <expr_stmt pos:start="2051:10" pos:end="2051:43"><expr pos:start="2051:10" pos:end="2051:42"><call pos:start="2051:10" pos:end="2051:42"><name pos:start="2051:10" pos:end="2051:20">gen_st_cond</name><argument_list pos:start="2051:21" pos:end="2051:42">(<argument pos:start="2051:22" pos:end="2051:24"><expr pos:start="2051:22" pos:end="2051:24"><name pos:start="2051:22" pos:end="2051:24">ctx</name></expr></argument>, <argument pos:start="2051:27" pos:end="2051:28"><expr pos:start="2051:27" pos:end="2051:28"><name pos:start="2051:27" pos:end="2051:28">op</name></expr></argument>, <argument pos:start="2051:31" pos:end="2051:32"><expr pos:start="2051:31" pos:end="2051:32"><name pos:start="2051:31" pos:end="2051:32">rt</name></expr></argument>, <argument pos:start="2051:35" pos:end="2051:36"><expr pos:start="2051:35" pos:end="2051:36"><name pos:start="2051:35" pos:end="2051:36">rs</name></expr></argument>, <argument pos:start="2051:39" pos:end="2051:41"><expr pos:start="2051:39" pos:end="2051:41"><name pos:start="2051:39" pos:end="2051:41">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="2053:10" pos:end="2053:15">break;</break>

    <case pos:start="2055:5" pos:end="2055:19">case <expr pos:start="2055:10" pos:end="2055:18"><name pos:start="2055:10" pos:end="2055:18">OPC_CACHE</name></expr>:</case>

        <expr_stmt pos:start="2057:9" pos:end="2057:31"><expr pos:start="2057:9" pos:end="2057:30"><call pos:start="2057:9" pos:end="2057:30"><name pos:start="2057:9" pos:end="2057:25">check_cp0_enabled</name><argument_list pos:start="2057:26" pos:end="2057:30">(<argument pos:start="2057:27" pos:end="2057:29"><expr pos:start="2057:27" pos:end="2057:29"><name pos:start="2057:27" pos:end="2057:29">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2059:9" pos:end="2059:48"><expr pos:start="2059:9" pos:end="2059:47"><call pos:start="2059:9" pos:end="2059:47"><name pos:start="2059:9" pos:end="2059:18">check_insn</name><argument_list pos:start="2059:19" pos:end="2059:47">(<argument pos:start="2059:20" pos:end="2059:22"><expr pos:start="2059:20" pos:end="2059:22"><name pos:start="2059:20" pos:end="2059:22">ctx</name></expr></argument>, <argument pos:start="2059:25" pos:end="2059:46"><expr pos:start="2059:25" pos:end="2059:46"><name pos:start="2059:25" pos:end="2059:33">ISA_MIPS3</name> <operator pos:start="2059:35" pos:end="2059:35">|</operator> <name pos:start="2059:37" pos:end="2059:46">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2061:9" pos:end="2061:27">/* Treat as NOP. */</comment>

        <break pos:start="2063:9" pos:end="2063:14">break;</break>

    <case pos:start="2065:5" pos:end="2065:18">case <expr pos:start="2065:10" pos:end="2065:17"><name pos:start="2065:10" pos:end="2065:17">OPC_PREF</name></expr>:</case>

        <expr_stmt pos:start="2067:9" pos:end="2067:48"><expr pos:start="2067:9" pos:end="2067:47"><call pos:start="2067:9" pos:end="2067:47"><name pos:start="2067:9" pos:end="2067:18">check_insn</name><argument_list pos:start="2067:19" pos:end="2067:47">(<argument pos:start="2067:20" pos:end="2067:22"><expr pos:start="2067:20" pos:end="2067:22"><name pos:start="2067:20" pos:end="2067:22">ctx</name></expr></argument>, <argument pos:start="2067:25" pos:end="2067:46"><expr pos:start="2067:25" pos:end="2067:46"><name pos:start="2067:25" pos:end="2067:33">ISA_MIPS4</name> <operator pos:start="2067:35" pos:end="2067:35">|</operator> <name pos:start="2067:37" pos:end="2067:46">ISA_MIPS32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2069:9" pos:end="2069:27">/* Treat as NOP. */</comment>

        <break pos:start="2071:9" pos:end="2071:14">break;</break>



    <comment type="block" pos:start="2075:5" pos:end="2075:32">/* Floating point (COP1). */</comment>

    <case pos:start="2077:5" pos:end="2077:18">case <expr pos:start="2077:10" pos:end="2077:17"><name pos:start="2077:10" pos:end="2077:17">OPC_LWC1</name></expr>:</case>

    <case pos:start="2079:5" pos:end="2079:18">case <expr pos:start="2079:10" pos:end="2079:17"><name pos:start="2079:10" pos:end="2079:17">OPC_LDC1</name></expr>:</case>

    <case pos:start="2081:5" pos:end="2081:18">case <expr pos:start="2081:10" pos:end="2081:17"><name pos:start="2081:10" pos:end="2081:17">OPC_SWC1</name></expr>:</case>

    <case pos:start="2083:5" pos:end="2083:18">case <expr pos:start="2083:10" pos:end="2083:17"><name pos:start="2083:10" pos:end="2083:17">OPC_SDC1</name></expr>:</case>

        <expr_stmt pos:start="2085:9" pos:end="2085:49"><expr pos:start="2085:9" pos:end="2085:48"><call pos:start="2085:9" pos:end="2085:48"><name pos:start="2085:9" pos:end="2085:21">gen_cop1_ldst</name><argument_list pos:start="2085:22" pos:end="2085:48">(<argument pos:start="2085:23" pos:end="2085:25"><expr pos:start="2085:23" pos:end="2085:25"><name pos:start="2085:23" pos:end="2085:25">env</name></expr></argument>, <argument pos:start="2085:28" pos:end="2085:30"><expr pos:start="2085:28" pos:end="2085:30"><name pos:start="2085:28" pos:end="2085:30">ctx</name></expr></argument>, <argument pos:start="2085:33" pos:end="2085:34"><expr pos:start="2085:33" pos:end="2085:34"><name pos:start="2085:33" pos:end="2085:34">op</name></expr></argument>, <argument pos:start="2085:37" pos:end="2085:38"><expr pos:start="2085:37" pos:end="2085:38"><name pos:start="2085:37" pos:end="2085:38">rt</name></expr></argument>, <argument pos:start="2085:41" pos:end="2085:42"><expr pos:start="2085:41" pos:end="2085:42"><name pos:start="2085:41" pos:end="2085:42">rs</name></expr></argument>, <argument pos:start="2085:45" pos:end="2085:47"><expr pos:start="2085:45" pos:end="2085:47"><name pos:start="2085:45" pos:end="2085:47">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2087:9" pos:end="2087:14">break;</break>



    <case pos:start="2091:5" pos:end="2091:17">case <expr pos:start="2091:10" pos:end="2091:16"><name pos:start="2091:10" pos:end="2091:16">OPC_CP1</name></expr>:</case>

        <if_stmt pos:start="2093:9" pos:end="2183:9"><if pos:start="2093:9" pos:end="2179:9">if <condition pos:start="2093:12" pos:end="2093:47">(<expr pos:start="2093:13" pos:end="2093:46"><name pos:start="2093:13" pos:end="2093:28"><name pos:start="2093:13" pos:end="2093:15">env</name><operator pos:start="2093:16" pos:end="2093:17">-&gt;</operator><name pos:start="2093:18" pos:end="2093:28">CP0_Config1</name></name> <operator pos:start="2093:30" pos:end="2093:30">&amp;</operator> <operator pos:start="2093:32" pos:end="2093:32">(</operator><literal type="number" pos:start="2093:33" pos:end="2093:33">1</literal> <operator pos:start="2093:35" pos:end="2093:36">&lt;&lt;</operator> <name pos:start="2093:38" pos:end="2093:45">CP0C1_FP</name><operator pos:start="2093:46" pos:end="2093:46">)</operator></expr>)</condition> <block pos:start="2093:49" pos:end="2179:9">{<block_content pos:start="2095:13" pos:end="2177:13">

            <expr_stmt pos:start="2095:13" pos:end="2095:35"><expr pos:start="2095:13" pos:end="2095:34"><call pos:start="2095:13" pos:end="2095:34"><name pos:start="2095:13" pos:end="2095:29">check_cp1_enabled</name><argument_list pos:start="2095:30" pos:end="2095:34">(<argument pos:start="2095:31" pos:end="2095:33"><expr pos:start="2095:31" pos:end="2095:33"><name pos:start="2095:31" pos:end="2095:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2097:13" pos:end="2097:40"><expr pos:start="2097:13" pos:end="2097:39"><name pos:start="2097:13" pos:end="2097:15">op1</name> <operator pos:start="2097:17" pos:end="2097:17">=</operator> <call pos:start="2097:19" pos:end="2097:39"><name pos:start="2097:19" pos:end="2097:26">MASK_CP1</name><argument_list pos:start="2097:27" pos:end="2097:39">(<argument pos:start="2097:28" pos:end="2097:38"><expr pos:start="2097:28" pos:end="2097:38"><name pos:start="2097:28" pos:end="2097:38"><name pos:start="2097:28" pos:end="2097:30">ctx</name><operator pos:start="2097:31" pos:end="2097:32">-&gt;</operator><name pos:start="2097:33" pos:end="2097:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2099:13" pos:end="2177:13">switch <condition pos:start="2099:20" pos:end="2099:24">(<expr pos:start="2099:21" pos:end="2099:23"><name pos:start="2099:21" pos:end="2099:23">op1</name></expr>)</condition> <block pos:start="2099:26" pos:end="2177:13">{<block_content pos:start="2101:13" pos:end="2175:22">

            <case pos:start="2101:13" pos:end="2101:27">case <expr pos:start="2101:18" pos:end="2101:26"><name pos:start="2101:18" pos:end="2101:26">OPC_MFHC1</name></expr>:</case>

            <case pos:start="2103:13" pos:end="2103:27">case <expr pos:start="2103:18" pos:end="2103:26"><name pos:start="2103:18" pos:end="2103:26">OPC_MTHC1</name></expr>:</case>

                <expr_stmt pos:start="2105:17" pos:end="2105:46"><expr pos:start="2105:17" pos:end="2105:45"><call pos:start="2105:17" pos:end="2105:45"><name pos:start="2105:17" pos:end="2105:26">check_insn</name><argument_list pos:start="2105:27" pos:end="2105:45">(<argument pos:start="2105:28" pos:end="2105:30"><expr pos:start="2105:28" pos:end="2105:30"><name pos:start="2105:28" pos:end="2105:30">ctx</name></expr></argument>, <argument pos:start="2105:33" pos:end="2105:44"><expr pos:start="2105:33" pos:end="2105:44"><name pos:start="2105:33" pos:end="2105:44">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <case pos:start="2107:13" pos:end="2107:26">case <expr pos:start="2107:18" pos:end="2107:25"><name pos:start="2107:18" pos:end="2107:25">OPC_MFC1</name></expr>:</case>

            <case pos:start="2109:13" pos:end="2109:26">case <expr pos:start="2109:18" pos:end="2109:25"><name pos:start="2109:18" pos:end="2109:25">OPC_CFC1</name></expr>:</case>

            <case pos:start="2111:13" pos:end="2111:26">case <expr pos:start="2111:18" pos:end="2111:25"><name pos:start="2111:18" pos:end="2111:25">OPC_MTC1</name></expr>:</case>

            <case pos:start="2113:13" pos:end="2113:26">case <expr pos:start="2113:18" pos:end="2113:25"><name pos:start="2113:18" pos:end="2113:25">OPC_CTC1</name></expr>:</case>

                <expr_stmt pos:start="2115:17" pos:end="2115:42"><expr pos:start="2115:17" pos:end="2115:41"><call pos:start="2115:17" pos:end="2115:41"><name pos:start="2115:17" pos:end="2115:23">gen_cp1</name><argument_list pos:start="2115:24" pos:end="2115:41">(<argument pos:start="2115:25" pos:end="2115:27"><expr pos:start="2115:25" pos:end="2115:27"><name pos:start="2115:25" pos:end="2115:27">ctx</name></expr></argument>, <argument pos:start="2115:30" pos:end="2115:32"><expr pos:start="2115:30" pos:end="2115:32"><name pos:start="2115:30" pos:end="2115:32">op1</name></expr></argument>, <argument pos:start="2115:35" pos:end="2115:36"><expr pos:start="2115:35" pos:end="2115:36"><name pos:start="2115:35" pos:end="2115:36">rt</name></expr></argument>, <argument pos:start="2115:39" pos:end="2115:40"><expr pos:start="2115:39" pos:end="2115:40"><name pos:start="2115:39" pos:end="2115:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2117:17" pos:end="2120:0">break;</break>

<cpp:if pos:start="2119:1" pos:end="2119:26">#<cpp:directive pos:start="2119:2" pos:end="2119:3">if</cpp:directive> <expr pos:start="2119:5" pos:end="2119:26"><call pos:start="2119:5" pos:end="2119:26"><name pos:start="2119:5" pos:end="2119:11">defined</name><argument_list pos:start="2119:12" pos:end="2119:26">(<argument pos:start="2119:13" pos:end="2119:25"><expr pos:start="2119:13" pos:end="2119:25"><name pos:start="2119:13" pos:end="2119:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="2121:13" pos:end="2121:27">case <expr pos:start="2121:18" pos:end="2121:26"><name pos:start="2121:18" pos:end="2121:26">OPC_DMFC1</name></expr>:</case>

            <case pos:start="2123:13" pos:end="2123:27">case <expr pos:start="2123:18" pos:end="2123:26"><name pos:start="2123:18" pos:end="2123:26">OPC_DMTC1</name></expr>:</case>

                <expr_stmt pos:start="2125:17" pos:end="2125:43"><expr pos:start="2125:17" pos:end="2125:42"><call pos:start="2125:17" pos:end="2125:42"><name pos:start="2125:17" pos:end="2125:26">check_insn</name><argument_list pos:start="2125:27" pos:end="2125:42">(<argument pos:start="2125:28" pos:end="2125:30"><expr pos:start="2125:28" pos:end="2125:30"><name pos:start="2125:28" pos:end="2125:30">ctx</name></expr></argument>, <argument pos:start="2125:33" pos:end="2125:41"><expr pos:start="2125:33" pos:end="2125:41"><name pos:start="2125:33" pos:end="2125:41">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2127:17" pos:end="2127:42"><expr pos:start="2127:17" pos:end="2127:41"><call pos:start="2127:17" pos:end="2127:41"><name pos:start="2127:17" pos:end="2127:23">gen_cp1</name><argument_list pos:start="2127:24" pos:end="2127:41">(<argument pos:start="2127:25" pos:end="2127:27"><expr pos:start="2127:25" pos:end="2127:27"><name pos:start="2127:25" pos:end="2127:27">ctx</name></expr></argument>, <argument pos:start="2127:30" pos:end="2127:32"><expr pos:start="2127:30" pos:end="2127:32"><name pos:start="2127:30" pos:end="2127:32">op1</name></expr></argument>, <argument pos:start="2127:35" pos:end="2127:36"><expr pos:start="2127:35" pos:end="2127:36"><name pos:start="2127:35" pos:end="2127:36">rt</name></expr></argument>, <argument pos:start="2127:39" pos:end="2127:40"><expr pos:start="2127:39" pos:end="2127:40"><name pos:start="2127:39" pos:end="2127:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2129:17" pos:end="2132:0">break;</break>

<cpp:endif pos:start="2131:1" pos:end="2131:6">#<cpp:directive pos:start="2131:2" pos:end="2131:6">endif</cpp:directive></cpp:endif>

            <case pos:start="2133:13" pos:end="2133:29">case <expr pos:start="2133:18" pos:end="2133:28"><name pos:start="2133:18" pos:end="2133:28">OPC_BC1ANY2</name></expr>:</case>

            <case pos:start="2135:13" pos:end="2135:29">case <expr pos:start="2135:18" pos:end="2135:28"><name pos:start="2135:18" pos:end="2135:28">OPC_BC1ANY4</name></expr>:</case>

                <expr_stmt pos:start="2137:17" pos:end="2137:33"><expr pos:start="2137:17" pos:end="2137:32"><call pos:start="2137:17" pos:end="2137:32"><name pos:start="2137:17" pos:end="2137:27">check_cop1x</name><argument_list pos:start="2137:28" pos:end="2137:32">(<argument pos:start="2137:29" pos:end="2137:31"><expr pos:start="2137:29" pos:end="2137:31"><name pos:start="2137:29" pos:end="2137:31">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2139:17" pos:end="2139:44"><expr pos:start="2139:17" pos:end="2139:43"><call pos:start="2139:17" pos:end="2139:43"><name pos:start="2139:17" pos:end="2139:26">check_insn</name><argument_list pos:start="2139:27" pos:end="2139:43">(<argument pos:start="2139:28" pos:end="2139:30"><expr pos:start="2139:28" pos:end="2139:30"><name pos:start="2139:28" pos:end="2139:30">ctx</name></expr></argument>, <argument pos:start="2139:33" pos:end="2139:42"><expr pos:start="2139:33" pos:end="2139:42"><name pos:start="2139:33" pos:end="2139:42">ASE_MIPS3D</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="2141:17" pos:end="2141:34">/* fall through */</comment>

            <case pos:start="2143:13" pos:end="2143:25">case <expr pos:start="2143:18" pos:end="2143:24"><name pos:start="2143:18" pos:end="2143:24">OPC_BC1</name></expr>:</case>

                <expr_stmt pos:start="2145:17" pos:end="2147:63"><expr pos:start="2145:17" pos:end="2147:62"><call pos:start="2145:17" pos:end="2147:62"><name pos:start="2145:17" pos:end="2145:35">gen_compute_branch1</name><argument_list pos:start="2145:36" pos:end="2147:62">(<argument pos:start="2145:37" pos:end="2145:39"><expr pos:start="2145:37" pos:end="2145:39"><name pos:start="2145:37" pos:end="2145:39">ctx</name></expr></argument>, <argument pos:start="2145:42" pos:end="2145:62"><expr pos:start="2145:42" pos:end="2145:62"><call pos:start="2145:42" pos:end="2145:62"><name pos:start="2145:42" pos:end="2145:49">MASK_BC1</name><argument_list pos:start="2145:50" pos:end="2145:62">(<argument pos:start="2145:51" pos:end="2145:61"><expr pos:start="2145:51" pos:end="2145:61"><name pos:start="2145:51" pos:end="2145:61"><name pos:start="2145:51" pos:end="2145:53">ctx</name><operator pos:start="2145:54" pos:end="2145:55">-&gt;</operator><name pos:start="2145:56" pos:end="2145:61">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="2147:37" pos:end="2147:51"><expr pos:start="2147:37" pos:end="2147:51"><operator pos:start="2147:37" pos:end="2147:37">(</operator><name pos:start="2147:38" pos:end="2147:39">rt</name> <operator pos:start="2147:41" pos:end="2147:42">&gt;&gt;</operator> <literal type="number" pos:start="2147:44" pos:end="2147:44">2</literal><operator pos:start="2147:45" pos:end="2147:45">)</operator> <operator pos:start="2147:47" pos:end="2147:47">&amp;</operator> <literal type="number" pos:start="2147:49" pos:end="2147:51">0x7</literal></expr></argument>, <argument pos:start="2147:54" pos:end="2147:61"><expr pos:start="2147:54" pos:end="2147:61"><name pos:start="2147:54" pos:end="2147:56">imm</name> <operator pos:start="2147:58" pos:end="2147:59">&lt;&lt;</operator> <literal type="number" pos:start="2147:61" pos:end="2147:61">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2149:17" pos:end="2149:31"><expr pos:start="2149:17" pos:end="2149:30"><operator pos:start="2149:17" pos:end="2149:17">*</operator><name pos:start="2149:18" pos:end="2149:26">is_branch</name> <operator pos:start="2149:28" pos:end="2149:28">=</operator> <literal type="number" pos:start="2149:30" pos:end="2149:30">1</literal></expr>;</expr_stmt>

                <break pos:start="2151:17" pos:end="2151:22">break;</break>

            <case pos:start="2153:13" pos:end="2153:27">case <expr pos:start="2153:18" pos:end="2153:26"><name pos:start="2153:18" pos:end="2153:26">OPC_S_FMT</name></expr>:</case>

            <case pos:start="2155:13" pos:end="2155:27">case <expr pos:start="2155:18" pos:end="2155:26"><name pos:start="2155:18" pos:end="2155:26">OPC_D_FMT</name></expr>:</case>

            <case pos:start="2157:13" pos:end="2157:27">case <expr pos:start="2157:18" pos:end="2157:26"><name pos:start="2157:18" pos:end="2157:26">OPC_W_FMT</name></expr>:</case>

            <case pos:start="2159:13" pos:end="2159:27">case <expr pos:start="2159:18" pos:end="2159:26"><name pos:start="2159:18" pos:end="2159:26">OPC_L_FMT</name></expr>:</case>

            <case pos:start="2161:13" pos:end="2161:28">case <expr pos:start="2161:18" pos:end="2161:27"><name pos:start="2161:18" pos:end="2161:27">OPC_PS_FMT</name></expr>:</case>

                <expr_stmt pos:start="2163:17" pos:end="2165:45"><expr pos:start="2163:17" pos:end="2165:44"><call pos:start="2163:17" pos:end="2165:44"><name pos:start="2163:17" pos:end="2163:26">gen_farith</name><argument_list pos:start="2163:27" pos:end="2165:44">(<argument pos:start="2163:28" pos:end="2163:30"><expr pos:start="2163:28" pos:end="2163:30"><name pos:start="2163:28" pos:end="2163:30">ctx</name></expr></argument>, <argument pos:start="2163:33" pos:end="2163:61"><expr pos:start="2163:33" pos:end="2163:61"><name pos:start="2163:33" pos:end="2163:43"><name pos:start="2163:33" pos:end="2163:35">ctx</name><operator pos:start="2163:36" pos:end="2163:37">-&gt;</operator><name pos:start="2163:38" pos:end="2163:43">opcode</name></name> <operator pos:start="2163:45" pos:end="2163:45">&amp;</operator> <call pos:start="2163:47" pos:end="2163:61"><name pos:start="2163:47" pos:end="2163:49">FOP</name><argument_list pos:start="2163:50" pos:end="2163:61">(<argument pos:start="2163:51" pos:end="2163:54"><expr pos:start="2163:51" pos:end="2163:54"><literal type="number" pos:start="2163:51" pos:end="2163:54">0x3f</literal></expr></argument>, <argument pos:start="2163:57" pos:end="2163:60"><expr pos:start="2163:57" pos:end="2163:60"><literal type="number" pos:start="2163:57" pos:end="2163:60">0x1f</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="2163:64" pos:end="2163:65"><expr pos:start="2163:64" pos:end="2163:65"><name pos:start="2163:64" pos:end="2163:65">rt</name></expr></argument>, <argument pos:start="2163:68" pos:end="2163:69"><expr pos:start="2163:68" pos:end="2163:69"><name pos:start="2163:68" pos:end="2163:69">rd</name></expr></argument>, <argument pos:start="2163:72" pos:end="2163:73"><expr pos:start="2163:72" pos:end="2163:73"><name pos:start="2163:72" pos:end="2163:73">sa</name></expr></argument>,

                           <argument pos:start="2165:28" pos:end="2165:43"><expr pos:start="2165:28" pos:end="2165:43"><operator pos:start="2165:28" pos:end="2165:28">(</operator><name pos:start="2165:29" pos:end="2165:31">imm</name> <operator pos:start="2165:33" pos:end="2165:34">&gt;&gt;</operator> <literal type="number" pos:start="2165:36" pos:end="2165:36">8</literal><operator pos:start="2165:37" pos:end="2165:37">)</operator> <operator pos:start="2165:39" pos:end="2165:39">&amp;</operator> <literal type="number" pos:start="2165:41" pos:end="2165:43">0x7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2167:17" pos:end="2167:22">break;</break>

            <default pos:start="2169:13" pos:end="2169:20">default:</default>

                <expr_stmt pos:start="2171:17" pos:end="2171:34"><expr pos:start="2171:17" pos:end="2171:33"><call pos:start="2171:17" pos:end="2171:33"><name pos:start="2171:17" pos:end="2171:26">MIPS_INVAL</name><argument_list pos:start="2171:27" pos:end="2171:33">(<argument pos:start="2171:28" pos:end="2171:32"><expr pos:start="2171:28" pos:end="2171:32"><literal type="string" pos:start="2171:28" pos:end="2171:32">"cp1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2173:17" pos:end="2173:50"><expr pos:start="2173:17" pos:end="2173:49"><call pos:start="2173:17" pos:end="2173:49"><name pos:start="2173:17" pos:end="2173:34">generate_exception</name> <argument_list pos:start="2173:36" pos:end="2173:49">(<argument pos:start="2173:37" pos:end="2173:39"><expr pos:start="2173:37" pos:end="2173:39"><name pos:start="2173:37" pos:end="2173:39">ctx</name></expr></argument>, <argument pos:start="2173:42" pos:end="2173:48"><expr pos:start="2173:42" pos:end="2173:48"><name pos:start="2173:42" pos:end="2173:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2175:17" pos:end="2175:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="2179:11" pos:end="2183:9">else <block pos:start="2179:16" pos:end="2183:9">{<block_content pos:start="2181:13" pos:end="2181:53">

            <expr_stmt pos:start="2181:13" pos:end="2181:53"><expr pos:start="2181:13" pos:end="2181:52"><call pos:start="2181:13" pos:end="2181:52"><name pos:start="2181:13" pos:end="2181:34">generate_exception_err</name><argument_list pos:start="2181:35" pos:end="2181:52">(<argument pos:start="2181:36" pos:end="2181:38"><expr pos:start="2181:36" pos:end="2181:38"><name pos:start="2181:36" pos:end="2181:38">ctx</name></expr></argument>, <argument pos:start="2181:41" pos:end="2181:48"><expr pos:start="2181:41" pos:end="2181:48"><name pos:start="2181:41" pos:end="2181:48">EXCP_CpU</name></expr></argument>, <argument pos:start="2181:51" pos:end="2181:51"><expr pos:start="2181:51" pos:end="2181:51"><literal type="number" pos:start="2181:51" pos:end="2181:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2185:9" pos:end="2185:14">break;</break>



    <comment type="block" pos:start="2189:5" pos:end="2189:16">/* COP2.  */</comment>

    <case pos:start="2191:5" pos:end="2191:18">case <expr pos:start="2191:10" pos:end="2191:17"><name pos:start="2191:10" pos:end="2191:17">OPC_LWC2</name></expr>:</case>

    <case pos:start="2193:5" pos:end="2193:18">case <expr pos:start="2193:10" pos:end="2193:17"><name pos:start="2193:10" pos:end="2193:17">OPC_LDC2</name></expr>:</case>

    <case pos:start="2195:5" pos:end="2195:18">case <expr pos:start="2195:10" pos:end="2195:17"><name pos:start="2195:10" pos:end="2195:17">OPC_SWC2</name></expr>:</case>

    <case pos:start="2197:5" pos:end="2197:18">case <expr pos:start="2197:10" pos:end="2197:17"><name pos:start="2197:10" pos:end="2197:17">OPC_SDC2</name></expr>:</case>

        <comment type="block" pos:start="2199:9" pos:end="2199:36">/* COP2: Not implemented. */</comment>

        <expr_stmt pos:start="2201:9" pos:end="2201:49"><expr pos:start="2201:9" pos:end="2201:48"><call pos:start="2201:9" pos:end="2201:48"><name pos:start="2201:9" pos:end="2201:30">generate_exception_err</name><argument_list pos:start="2201:31" pos:end="2201:48">(<argument pos:start="2201:32" pos:end="2201:34"><expr pos:start="2201:32" pos:end="2201:34"><name pos:start="2201:32" pos:end="2201:34">ctx</name></expr></argument>, <argument pos:start="2201:37" pos:end="2201:44"><expr pos:start="2201:37" pos:end="2201:44"><name pos:start="2201:37" pos:end="2201:44">EXCP_CpU</name></expr></argument>, <argument pos:start="2201:47" pos:end="2201:47"><expr pos:start="2201:47" pos:end="2201:47"><literal type="number" pos:start="2201:47" pos:end="2201:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2203:9" pos:end="2203:14">break;</break>

    <case pos:start="2205:5" pos:end="2205:17">case <expr pos:start="2205:10" pos:end="2205:16"><name pos:start="2205:10" pos:end="2205:16">OPC_CP2</name></expr>:</case>

        <expr_stmt pos:start="2207:9" pos:end="2207:41"><expr pos:start="2207:9" pos:end="2207:40"><call pos:start="2207:9" pos:end="2207:40"><name pos:start="2207:9" pos:end="2207:18">check_insn</name><argument_list pos:start="2207:19" pos:end="2207:40">(<argument pos:start="2207:20" pos:end="2207:22"><expr pos:start="2207:20" pos:end="2207:22"><name pos:start="2207:20" pos:end="2207:22">ctx</name></expr></argument>, <argument pos:start="2207:25" pos:end="2207:39"><expr pos:start="2207:25" pos:end="2207:39"><name pos:start="2207:25" pos:end="2207:39">INSN_LOONGSON2F</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2209:9" pos:end="2209:65">/* Note that these instructions use different fields.  */</comment>

        <expr_stmt pos:start="2211:9" pos:end="2211:49"><expr pos:start="2211:9" pos:end="2211:48"><call pos:start="2211:9" pos:end="2211:48"><name pos:start="2211:9" pos:end="2211:31">gen_loongson_multimedia</name><argument_list pos:start="2211:32" pos:end="2211:48">(<argument pos:start="2211:33" pos:end="2211:35"><expr pos:start="2211:33" pos:end="2211:35"><name pos:start="2211:33" pos:end="2211:35">ctx</name></expr></argument>, <argument pos:start="2211:38" pos:end="2211:39"><expr pos:start="2211:38" pos:end="2211:39"><name pos:start="2211:38" pos:end="2211:39">sa</name></expr></argument>, <argument pos:start="2211:42" pos:end="2211:43"><expr pos:start="2211:42" pos:end="2211:43"><name pos:start="2211:42" pos:end="2211:43">rd</name></expr></argument>, <argument pos:start="2211:46" pos:end="2211:47"><expr pos:start="2211:46" pos:end="2211:47"><name pos:start="2211:46" pos:end="2211:47">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2213:9" pos:end="2213:14">break;</break>



    <case pos:start="2217:5" pos:end="2217:17">case <expr pos:start="2217:10" pos:end="2217:16"><name pos:start="2217:10" pos:end="2217:16">OPC_CP3</name></expr>:</case>

        <if_stmt pos:start="2219:9" pos:end="2293:9"><if pos:start="2219:9" pos:end="2289:9">if <condition pos:start="2219:12" pos:end="2219:47">(<expr pos:start="2219:13" pos:end="2219:46"><name pos:start="2219:13" pos:end="2219:28"><name pos:start="2219:13" pos:end="2219:15">env</name><operator pos:start="2219:16" pos:end="2219:17">-&gt;</operator><name pos:start="2219:18" pos:end="2219:28">CP0_Config1</name></name> <operator pos:start="2219:30" pos:end="2219:30">&amp;</operator> <operator pos:start="2219:32" pos:end="2219:32">(</operator><literal type="number" pos:start="2219:33" pos:end="2219:33">1</literal> <operator pos:start="2219:35" pos:end="2219:36">&lt;&lt;</operator> <name pos:start="2219:38" pos:end="2219:45">CP0C1_FP</name><operator pos:start="2219:46" pos:end="2219:46">)</operator></expr>)</condition> <block pos:start="2219:49" pos:end="2289:9">{<block_content pos:start="2221:13" pos:end="2287:13">

            <expr_stmt pos:start="2221:13" pos:end="2221:35"><expr pos:start="2221:13" pos:end="2221:34"><call pos:start="2221:13" pos:end="2221:34"><name pos:start="2221:13" pos:end="2221:29">check_cp1_enabled</name><argument_list pos:start="2221:30" pos:end="2221:34">(<argument pos:start="2221:31" pos:end="2221:33"><expr pos:start="2221:31" pos:end="2221:33"><name pos:start="2221:31" pos:end="2221:33">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2223:13" pos:end="2223:40"><expr pos:start="2223:13" pos:end="2223:39"><name pos:start="2223:13" pos:end="2223:15">op1</name> <operator pos:start="2223:17" pos:end="2223:17">=</operator> <call pos:start="2223:19" pos:end="2223:39"><name pos:start="2223:19" pos:end="2223:26">MASK_CP3</name><argument_list pos:start="2223:27" pos:end="2223:39">(<argument pos:start="2223:28" pos:end="2223:38"><expr pos:start="2223:28" pos:end="2223:38"><name pos:start="2223:28" pos:end="2223:38"><name pos:start="2223:28" pos:end="2223:30">ctx</name><operator pos:start="2223:31" pos:end="2223:32">-&gt;</operator><name pos:start="2223:33" pos:end="2223:38">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2225:13" pos:end="2287:13">switch <condition pos:start="2225:20" pos:end="2225:24">(<expr pos:start="2225:21" pos:end="2225:23"><name pos:start="2225:21" pos:end="2225:23">op1</name></expr>)</condition> <block pos:start="2225:26" pos:end="2287:13">{<block_content pos:start="2227:13" pos:end="2285:22">

            <case pos:start="2227:13" pos:end="2227:27">case <expr pos:start="2227:18" pos:end="2227:26"><name pos:start="2227:18" pos:end="2227:26">OPC_LWXC1</name></expr>:</case>

            <case pos:start="2229:13" pos:end="2229:27">case <expr pos:start="2229:18" pos:end="2229:26"><name pos:start="2229:18" pos:end="2229:26">OPC_LDXC1</name></expr>:</case>

            <case pos:start="2231:13" pos:end="2231:27">case <expr pos:start="2231:18" pos:end="2231:26"><name pos:start="2231:18" pos:end="2231:26">OPC_LUXC1</name></expr>:</case>

            <case pos:start="2233:13" pos:end="2233:27">case <expr pos:start="2233:18" pos:end="2233:26"><name pos:start="2233:18" pos:end="2233:26">OPC_SWXC1</name></expr>:</case>

            <case pos:start="2235:13" pos:end="2235:27">case <expr pos:start="2235:18" pos:end="2235:26"><name pos:start="2235:18" pos:end="2235:26">OPC_SDXC1</name></expr>:</case>

            <case pos:start="2237:13" pos:end="2237:27">case <expr pos:start="2237:18" pos:end="2237:26"><name pos:start="2237:18" pos:end="2237:26">OPC_SUXC1</name></expr>:</case>

                <expr_stmt pos:start="2239:17" pos:end="2239:56"><expr pos:start="2239:17" pos:end="2239:55"><call pos:start="2239:17" pos:end="2239:55"><name pos:start="2239:17" pos:end="2239:29">gen_flt3_ldst</name><argument_list pos:start="2239:30" pos:end="2239:55">(<argument pos:start="2239:31" pos:end="2239:33"><expr pos:start="2239:31" pos:end="2239:33"><name pos:start="2239:31" pos:end="2239:33">ctx</name></expr></argument>, <argument pos:start="2239:36" pos:end="2239:38"><expr pos:start="2239:36" pos:end="2239:38"><name pos:start="2239:36" pos:end="2239:38">op1</name></expr></argument>, <argument pos:start="2239:41" pos:end="2239:42"><expr pos:start="2239:41" pos:end="2239:42"><name pos:start="2239:41" pos:end="2239:42">sa</name></expr></argument>, <argument pos:start="2239:45" pos:end="2239:46"><expr pos:start="2239:45" pos:end="2239:46"><name pos:start="2239:45" pos:end="2239:46">rd</name></expr></argument>, <argument pos:start="2239:49" pos:end="2239:50"><expr pos:start="2239:49" pos:end="2239:50"><name pos:start="2239:49" pos:end="2239:50">rs</name></expr></argument>, <argument pos:start="2239:53" pos:end="2239:54"><expr pos:start="2239:53" pos:end="2239:54"><name pos:start="2239:53" pos:end="2239:54">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2241:17" pos:end="2241:22">break;</break>

            <case pos:start="2243:13" pos:end="2243:27">case <expr pos:start="2243:18" pos:end="2243:26"><name pos:start="2243:18" pos:end="2243:26">OPC_PREFX</name></expr>:</case>

                <comment type="block" pos:start="2245:17" pos:end="2245:35">/* Treat as NOP. */</comment>

                <break pos:start="2247:17" pos:end="2247:22">break;</break>

            <case pos:start="2249:13" pos:end="2249:29">case <expr pos:start="2249:18" pos:end="2249:28"><name pos:start="2249:18" pos:end="2249:28">OPC_ALNV_PS</name></expr>:</case>

            <case pos:start="2251:13" pos:end="2251:28">case <expr pos:start="2251:18" pos:end="2251:27"><name pos:start="2251:18" pos:end="2251:27">OPC_MADD_S</name></expr>:</case>

            <case pos:start="2253:13" pos:end="2253:28">case <expr pos:start="2253:18" pos:end="2253:27"><name pos:start="2253:18" pos:end="2253:27">OPC_MADD_D</name></expr>:</case>

            <case pos:start="2255:13" pos:end="2255:29">case <expr pos:start="2255:18" pos:end="2255:28"><name pos:start="2255:18" pos:end="2255:28">OPC_MADD_PS</name></expr>:</case>

            <case pos:start="2257:13" pos:end="2257:28">case <expr pos:start="2257:18" pos:end="2257:27"><name pos:start="2257:18" pos:end="2257:27">OPC_MSUB_S</name></expr>:</case>

            <case pos:start="2259:13" pos:end="2259:28">case <expr pos:start="2259:18" pos:end="2259:27"><name pos:start="2259:18" pos:end="2259:27">OPC_MSUB_D</name></expr>:</case>

            <case pos:start="2261:13" pos:end="2261:29">case <expr pos:start="2261:18" pos:end="2261:28"><name pos:start="2261:18" pos:end="2261:28">OPC_MSUB_PS</name></expr>:</case>

            <case pos:start="2263:13" pos:end="2263:29">case <expr pos:start="2263:18" pos:end="2263:28"><name pos:start="2263:18" pos:end="2263:28">OPC_NMADD_S</name></expr>:</case>

            <case pos:start="2265:13" pos:end="2265:29">case <expr pos:start="2265:18" pos:end="2265:28"><name pos:start="2265:18" pos:end="2265:28">OPC_NMADD_D</name></expr>:</case>

            <case pos:start="2267:13" pos:end="2267:30">case <expr pos:start="2267:18" pos:end="2267:29"><name pos:start="2267:18" pos:end="2267:29">OPC_NMADD_PS</name></expr>:</case>

            <case pos:start="2269:13" pos:end="2269:29">case <expr pos:start="2269:18" pos:end="2269:28"><name pos:start="2269:18" pos:end="2269:28">OPC_NMSUB_S</name></expr>:</case>

            <case pos:start="2271:13" pos:end="2271:29">case <expr pos:start="2271:18" pos:end="2271:28"><name pos:start="2271:18" pos:end="2271:28">OPC_NMSUB_D</name></expr>:</case>

            <case pos:start="2273:13" pos:end="2273:30">case <expr pos:start="2273:18" pos:end="2273:29"><name pos:start="2273:18" pos:end="2273:29">OPC_NMSUB_PS</name></expr>:</case>

                <expr_stmt pos:start="2275:17" pos:end="2275:57"><expr pos:start="2275:17" pos:end="2275:56"><call pos:start="2275:17" pos:end="2275:56"><name pos:start="2275:17" pos:end="2275:30">gen_flt3_arith</name><argument_list pos:start="2275:31" pos:end="2275:56">(<argument pos:start="2275:32" pos:end="2275:34"><expr pos:start="2275:32" pos:end="2275:34"><name pos:start="2275:32" pos:end="2275:34">ctx</name></expr></argument>, <argument pos:start="2275:37" pos:end="2275:39"><expr pos:start="2275:37" pos:end="2275:39"><name pos:start="2275:37" pos:end="2275:39">op1</name></expr></argument>, <argument pos:start="2275:42" pos:end="2275:43"><expr pos:start="2275:42" pos:end="2275:43"><name pos:start="2275:42" pos:end="2275:43">sa</name></expr></argument>, <argument pos:start="2275:46" pos:end="2275:47"><expr pos:start="2275:46" pos:end="2275:47"><name pos:start="2275:46" pos:end="2275:47">rs</name></expr></argument>, <argument pos:start="2275:50" pos:end="2275:51"><expr pos:start="2275:50" pos:end="2275:51"><name pos:start="2275:50" pos:end="2275:51">rd</name></expr></argument>, <argument pos:start="2275:54" pos:end="2275:55"><expr pos:start="2275:54" pos:end="2275:55"><name pos:start="2275:54" pos:end="2275:55">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2277:17" pos:end="2277:22">break;</break>

            <default pos:start="2279:13" pos:end="2279:20">default:</default>

                <expr_stmt pos:start="2281:17" pos:end="2281:34"><expr pos:start="2281:17" pos:end="2281:33"><call pos:start="2281:17" pos:end="2281:33"><name pos:start="2281:17" pos:end="2281:26">MIPS_INVAL</name><argument_list pos:start="2281:27" pos:end="2281:33">(<argument pos:start="2281:28" pos:end="2281:32"><expr pos:start="2281:28" pos:end="2281:32"><literal type="string" pos:start="2281:28" pos:end="2281:32">"cp3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2283:17" pos:end="2283:50"><expr pos:start="2283:17" pos:end="2283:49"><call pos:start="2283:17" pos:end="2283:49"><name pos:start="2283:17" pos:end="2283:34">generate_exception</name> <argument_list pos:start="2283:36" pos:end="2283:49">(<argument pos:start="2283:37" pos:end="2283:39"><expr pos:start="2283:37" pos:end="2283:39"><name pos:start="2283:37" pos:end="2283:39">ctx</name></expr></argument>, <argument pos:start="2283:42" pos:end="2283:48"><expr pos:start="2283:42" pos:end="2283:48"><name pos:start="2283:42" pos:end="2283:48">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2285:17" pos:end="2285:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="2289:11" pos:end="2293:9">else <block pos:start="2289:16" pos:end="2293:9">{<block_content pos:start="2291:13" pos:end="2291:53">

            <expr_stmt pos:start="2291:13" pos:end="2291:53"><expr pos:start="2291:13" pos:end="2291:52"><call pos:start="2291:13" pos:end="2291:52"><name pos:start="2291:13" pos:end="2291:34">generate_exception_err</name><argument_list pos:start="2291:35" pos:end="2291:52">(<argument pos:start="2291:36" pos:end="2291:38"><expr pos:start="2291:36" pos:end="2291:38"><name pos:start="2291:36" pos:end="2291:38">ctx</name></expr></argument>, <argument pos:start="2291:41" pos:end="2291:48"><expr pos:start="2291:41" pos:end="2291:48"><name pos:start="2291:41" pos:end="2291:48">EXCP_CpU</name></expr></argument>, <argument pos:start="2291:51" pos:end="2291:51"><expr pos:start="2291:51" pos:end="2291:51"><literal type="number" pos:start="2291:51" pos:end="2291:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2295:9" pos:end="2300:0">break;</break>



<cpp:if pos:start="2299:1" pos:end="2299:26">#<cpp:directive pos:start="2299:2" pos:end="2299:3">if</cpp:directive> <expr pos:start="2299:5" pos:end="2299:26"><call pos:start="2299:5" pos:end="2299:26"><name pos:start="2299:5" pos:end="2299:11">defined</name><argument_list pos:start="2299:12" pos:end="2299:26">(<argument pos:start="2299:13" pos:end="2299:25"><expr pos:start="2299:13" pos:end="2299:25"><name pos:start="2299:13" pos:end="2299:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="2301:5" pos:end="2301:24">/* MIPS64 opcodes */</comment>

    <case pos:start="2303:5" pos:end="2303:17">case <expr pos:start="2303:10" pos:end="2303:16"><name pos:start="2303:10" pos:end="2303:16">OPC_LWU</name></expr>:</case>

    <case pos:start="2305:5" pos:end="2305:29">case <expr pos:start="2305:10" pos:end="2305:28"><name pos:start="2305:10" pos:end="2305:16">OPC_LDL</name> <operator pos:start="2305:18" pos:end="2305:20">...</operator> <name pos:start="2305:22" pos:end="2305:28">OPC_LDR</name></expr>:</case>

    <case pos:start="2307:5" pos:end="2307:17">case <expr pos:start="2307:10" pos:end="2307:16"><name pos:start="2307:10" pos:end="2307:16">OPC_LLD</name></expr>:</case>

    <case pos:start="2309:5" pos:end="2309:16">case <expr pos:start="2309:10" pos:end="2309:15"><name pos:start="2309:10" pos:end="2309:15">OPC_LD</name></expr>:</case>

        <expr_stmt pos:start="2311:9" pos:end="2311:35"><expr pos:start="2311:9" pos:end="2311:34"><call pos:start="2311:9" pos:end="2311:34"><name pos:start="2311:9" pos:end="2311:18">check_insn</name><argument_list pos:start="2311:19" pos:end="2311:34">(<argument pos:start="2311:20" pos:end="2311:22"><expr pos:start="2311:20" pos:end="2311:22"><name pos:start="2311:20" pos:end="2311:22">ctx</name></expr></argument>, <argument pos:start="2311:25" pos:end="2311:33"><expr pos:start="2311:25" pos:end="2311:33"><name pos:start="2311:25" pos:end="2311:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2313:9" pos:end="2313:27"><expr pos:start="2313:9" pos:end="2313:26"><call pos:start="2313:9" pos:end="2313:26"><name pos:start="2313:9" pos:end="2313:21">check_mips_64</name><argument_list pos:start="2313:22" pos:end="2313:26">(<argument pos:start="2313:23" pos:end="2313:25"><expr pos:start="2313:23" pos:end="2313:25"><name pos:start="2313:23" pos:end="2313:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2315:9" pos:end="2315:37"><expr pos:start="2315:9" pos:end="2315:36"><call pos:start="2315:9" pos:end="2315:36"><name pos:start="2315:9" pos:end="2315:14">gen_ld</name><argument_list pos:start="2315:15" pos:end="2315:36">(<argument pos:start="2315:16" pos:end="2315:18"><expr pos:start="2315:16" pos:end="2315:18"><name pos:start="2315:16" pos:end="2315:18">ctx</name></expr></argument>, <argument pos:start="2315:21" pos:end="2315:22"><expr pos:start="2315:21" pos:end="2315:22"><name pos:start="2315:21" pos:end="2315:22">op</name></expr></argument>, <argument pos:start="2315:25" pos:end="2315:26"><expr pos:start="2315:25" pos:end="2315:26"><name pos:start="2315:25" pos:end="2315:26">rt</name></expr></argument>, <argument pos:start="2315:29" pos:end="2315:30"><expr pos:start="2315:29" pos:end="2315:30"><name pos:start="2315:29" pos:end="2315:30">rs</name></expr></argument>, <argument pos:start="2315:33" pos:end="2315:35"><expr pos:start="2315:33" pos:end="2315:35"><name pos:start="2315:33" pos:end="2315:35">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2317:9" pos:end="2317:14">break;</break>

    <case pos:start="2319:5" pos:end="2319:29">case <expr pos:start="2319:10" pos:end="2319:28"><name pos:start="2319:10" pos:end="2319:16">OPC_SDL</name> <operator pos:start="2319:18" pos:end="2319:20">...</operator> <name pos:start="2319:22" pos:end="2319:28">OPC_SDR</name></expr>:</case>

    <case pos:start="2321:5" pos:end="2321:16">case <expr pos:start="2321:10" pos:end="2321:15"><name pos:start="2321:10" pos:end="2321:15">OPC_SD</name></expr>:</case>

        <expr_stmt pos:start="2323:9" pos:end="2323:35"><expr pos:start="2323:9" pos:end="2323:34"><call pos:start="2323:9" pos:end="2323:34"><name pos:start="2323:9" pos:end="2323:18">check_insn</name><argument_list pos:start="2323:19" pos:end="2323:34">(<argument pos:start="2323:20" pos:end="2323:22"><expr pos:start="2323:20" pos:end="2323:22"><name pos:start="2323:20" pos:end="2323:22">ctx</name></expr></argument>, <argument pos:start="2323:25" pos:end="2323:33"><expr pos:start="2323:25" pos:end="2323:33"><name pos:start="2323:25" pos:end="2323:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2325:9" pos:end="2325:27"><expr pos:start="2325:9" pos:end="2325:26"><call pos:start="2325:9" pos:end="2325:26"><name pos:start="2325:9" pos:end="2325:21">check_mips_64</name><argument_list pos:start="2325:22" pos:end="2325:26">(<argument pos:start="2325:23" pos:end="2325:25"><expr pos:start="2325:23" pos:end="2325:25"><name pos:start="2325:23" pos:end="2325:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2327:9" pos:end="2327:37"><expr pos:start="2327:9" pos:end="2327:36"><call pos:start="2327:9" pos:end="2327:36"><name pos:start="2327:9" pos:end="2327:14">gen_st</name><argument_list pos:start="2327:15" pos:end="2327:36">(<argument pos:start="2327:16" pos:end="2327:18"><expr pos:start="2327:16" pos:end="2327:18"><name pos:start="2327:16" pos:end="2327:18">ctx</name></expr></argument>, <argument pos:start="2327:21" pos:end="2327:22"><expr pos:start="2327:21" pos:end="2327:22"><name pos:start="2327:21" pos:end="2327:22">op</name></expr></argument>, <argument pos:start="2327:25" pos:end="2327:26"><expr pos:start="2327:25" pos:end="2327:26"><name pos:start="2327:25" pos:end="2327:26">rt</name></expr></argument>, <argument pos:start="2327:29" pos:end="2327:30"><expr pos:start="2327:29" pos:end="2327:30"><name pos:start="2327:29" pos:end="2327:30">rs</name></expr></argument>, <argument pos:start="2327:33" pos:end="2327:35"><expr pos:start="2327:33" pos:end="2327:35"><name pos:start="2327:33" pos:end="2327:35">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2329:9" pos:end="2329:14">break;</break>

    <case pos:start="2331:5" pos:end="2331:17">case <expr pos:start="2331:10" pos:end="2331:16"><name pos:start="2331:10" pos:end="2331:16">OPC_SCD</name></expr>:</case>

        <expr_stmt pos:start="2333:9" pos:end="2333:35"><expr pos:start="2333:9" pos:end="2333:34"><call pos:start="2333:9" pos:end="2333:34"><name pos:start="2333:9" pos:end="2333:18">check_insn</name><argument_list pos:start="2333:19" pos:end="2333:34">(<argument pos:start="2333:20" pos:end="2333:22"><expr pos:start="2333:20" pos:end="2333:22"><name pos:start="2333:20" pos:end="2333:22">ctx</name></expr></argument>, <argument pos:start="2333:25" pos:end="2333:33"><expr pos:start="2333:25" pos:end="2333:33"><name pos:start="2333:25" pos:end="2333:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2335:9" pos:end="2335:27"><expr pos:start="2335:9" pos:end="2335:26"><call pos:start="2335:9" pos:end="2335:26"><name pos:start="2335:9" pos:end="2335:21">check_mips_64</name><argument_list pos:start="2335:22" pos:end="2335:26">(<argument pos:start="2335:23" pos:end="2335:25"><expr pos:start="2335:23" pos:end="2335:25"><name pos:start="2335:23" pos:end="2335:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2337:9" pos:end="2337:42"><expr pos:start="2337:9" pos:end="2337:41"><call pos:start="2337:9" pos:end="2337:41"><name pos:start="2337:9" pos:end="2337:19">gen_st_cond</name><argument_list pos:start="2337:20" pos:end="2337:41">(<argument pos:start="2337:21" pos:end="2337:23"><expr pos:start="2337:21" pos:end="2337:23"><name pos:start="2337:21" pos:end="2337:23">ctx</name></expr></argument>, <argument pos:start="2337:26" pos:end="2337:27"><expr pos:start="2337:26" pos:end="2337:27"><name pos:start="2337:26" pos:end="2337:27">op</name></expr></argument>, <argument pos:start="2337:30" pos:end="2337:31"><expr pos:start="2337:30" pos:end="2337:31"><name pos:start="2337:30" pos:end="2337:31">rt</name></expr></argument>, <argument pos:start="2337:34" pos:end="2337:35"><expr pos:start="2337:34" pos:end="2337:35"><name pos:start="2337:34" pos:end="2337:35">rs</name></expr></argument>, <argument pos:start="2337:38" pos:end="2337:40"><expr pos:start="2337:38" pos:end="2337:40"><name pos:start="2337:38" pos:end="2337:40">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2339:9" pos:end="2339:14">break;</break>

    <case pos:start="2341:5" pos:end="2341:19">case <expr pos:start="2341:10" pos:end="2341:18"><name pos:start="2341:10" pos:end="2341:18">OPC_DADDI</name></expr>:</case>

    <case pos:start="2343:5" pos:end="2343:20">case <expr pos:start="2343:10" pos:end="2343:19"><name pos:start="2343:10" pos:end="2343:19">OPC_DADDIU</name></expr>:</case>

        <expr_stmt pos:start="2345:9" pos:end="2345:35"><expr pos:start="2345:9" pos:end="2345:34"><call pos:start="2345:9" pos:end="2345:34"><name pos:start="2345:9" pos:end="2345:18">check_insn</name><argument_list pos:start="2345:19" pos:end="2345:34">(<argument pos:start="2345:20" pos:end="2345:22"><expr pos:start="2345:20" pos:end="2345:22"><name pos:start="2345:20" pos:end="2345:22">ctx</name></expr></argument>, <argument pos:start="2345:25" pos:end="2345:33"><expr pos:start="2345:25" pos:end="2345:33"><name pos:start="2345:25" pos:end="2345:33">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2347:9" pos:end="2347:27"><expr pos:start="2347:9" pos:end="2347:26"><call pos:start="2347:9" pos:end="2347:26"><name pos:start="2347:9" pos:end="2347:21">check_mips_64</name><argument_list pos:start="2347:22" pos:end="2347:26">(<argument pos:start="2347:23" pos:end="2347:25"><expr pos:start="2347:23" pos:end="2347:25"><name pos:start="2347:23" pos:end="2347:25">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2349:9" pos:end="2349:44"><expr pos:start="2349:9" pos:end="2349:43"><call pos:start="2349:9" pos:end="2349:43"><name pos:start="2349:9" pos:end="2349:21">gen_arith_imm</name><argument_list pos:start="2349:22" pos:end="2349:43">(<argument pos:start="2349:23" pos:end="2349:25"><expr pos:start="2349:23" pos:end="2349:25"><name pos:start="2349:23" pos:end="2349:25">ctx</name></expr></argument>, <argument pos:start="2349:28" pos:end="2349:29"><expr pos:start="2349:28" pos:end="2349:29"><name pos:start="2349:28" pos:end="2349:29">op</name></expr></argument>, <argument pos:start="2349:32" pos:end="2349:33"><expr pos:start="2349:32" pos:end="2349:33"><name pos:start="2349:32" pos:end="2349:33">rt</name></expr></argument>, <argument pos:start="2349:36" pos:end="2349:37"><expr pos:start="2349:36" pos:end="2349:37"><name pos:start="2349:36" pos:end="2349:37">rs</name></expr></argument>, <argument pos:start="2349:40" pos:end="2349:42"><expr pos:start="2349:40" pos:end="2349:42"><name pos:start="2349:40" pos:end="2349:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2351:9" pos:end="2354:0">break;</break>

<cpp:endif pos:start="2353:1" pos:end="2353:6">#<cpp:directive pos:start="2353:2" pos:end="2353:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2355:5" pos:end="2355:18">case <expr pos:start="2355:10" pos:end="2355:17"><name pos:start="2355:10" pos:end="2355:17">OPC_JALX</name></expr>:</case>

        <expr_stmt pos:start="2357:9" pos:end="2357:52"><expr pos:start="2357:9" pos:end="2357:51"><call pos:start="2357:9" pos:end="2357:51"><name pos:start="2357:9" pos:end="2357:18">check_insn</name><argument_list pos:start="2357:19" pos:end="2357:51">(<argument pos:start="2357:20" pos:end="2357:22"><expr pos:start="2357:20" pos:end="2357:22"><name pos:start="2357:20" pos:end="2357:22">ctx</name></expr></argument>, <argument pos:start="2357:25" pos:end="2357:50"><expr pos:start="2357:25" pos:end="2357:50"><name pos:start="2357:25" pos:end="2357:34">ASE_MIPS16</name> <operator pos:start="2357:36" pos:end="2357:36">|</operator> <name pos:start="2357:38" pos:end="2357:50">ASE_MICROMIPS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2359:9" pos:end="2359:57"><expr pos:start="2359:9" pos:end="2359:56"><name pos:start="2359:9" pos:end="2359:14">offset</name> <operator pos:start="2359:16" pos:end="2359:16">=</operator> <operator pos:start="2359:18" pos:end="2359:18">(</operator><name pos:start="2359:19" pos:end="2359:25">int32_t</name><operator pos:start="2359:26" pos:end="2359:26">)</operator><operator pos:start="2359:27" pos:end="2359:27">(</operator><name pos:start="2359:28" pos:end="2359:38"><name pos:start="2359:28" pos:end="2359:30">ctx</name><operator pos:start="2359:31" pos:end="2359:32">-&gt;</operator><name pos:start="2359:33" pos:end="2359:38">opcode</name></name> <operator pos:start="2359:40" pos:end="2359:40">&amp;</operator> <literal type="number" pos:start="2359:42" pos:end="2359:50">0x3FFFFFF</literal><operator pos:start="2359:51" pos:end="2359:51">)</operator> <operator pos:start="2359:53" pos:end="2359:54">&lt;&lt;</operator> <literal type="number" pos:start="2359:56" pos:end="2359:56">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="2361:9" pos:end="2361:55"><expr pos:start="2361:9" pos:end="2361:54"><call pos:start="2361:9" pos:end="2361:54"><name pos:start="2361:9" pos:end="2361:26">gen_compute_branch</name><argument_list pos:start="2361:27" pos:end="2361:54">(<argument pos:start="2361:28" pos:end="2361:30"><expr pos:start="2361:28" pos:end="2361:30"><name pos:start="2361:28" pos:end="2361:30">ctx</name></expr></argument>, <argument pos:start="2361:33" pos:end="2361:34"><expr pos:start="2361:33" pos:end="2361:34"><name pos:start="2361:33" pos:end="2361:34">op</name></expr></argument>, <argument pos:start="2361:37" pos:end="2361:37"><expr pos:start="2361:37" pos:end="2361:37"><literal type="number" pos:start="2361:37" pos:end="2361:37">4</literal></expr></argument>, <argument pos:start="2361:40" pos:end="2361:41"><expr pos:start="2361:40" pos:end="2361:41"><name pos:start="2361:40" pos:end="2361:41">rs</name></expr></argument>, <argument pos:start="2361:44" pos:end="2361:45"><expr pos:start="2361:44" pos:end="2361:45"><name pos:start="2361:44" pos:end="2361:45">rt</name></expr></argument>, <argument pos:start="2361:48" pos:end="2361:53"><expr pos:start="2361:48" pos:end="2361:53"><name pos:start="2361:48" pos:end="2361:53">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2363:9" pos:end="2363:23"><expr pos:start="2363:9" pos:end="2363:22"><operator pos:start="2363:9" pos:end="2363:9">*</operator><name pos:start="2363:10" pos:end="2363:18">is_branch</name> <operator pos:start="2363:20" pos:end="2363:20">=</operator> <literal type="number" pos:start="2363:22" pos:end="2363:22">1</literal></expr>;</expr_stmt>

        <break pos:start="2365:9" pos:end="2365:14">break;</break>

    <case pos:start="2367:5" pos:end="2367:18">case <expr pos:start="2367:10" pos:end="2367:17"><name pos:start="2367:10" pos:end="2367:17">OPC_MDMX</name></expr>:</case>

        <expr_stmt pos:start="2369:9" pos:end="2369:34"><expr pos:start="2369:9" pos:end="2369:33"><call pos:start="2369:9" pos:end="2369:33"><name pos:start="2369:9" pos:end="2369:18">check_insn</name><argument_list pos:start="2369:19" pos:end="2369:33">(<argument pos:start="2369:20" pos:end="2369:22"><expr pos:start="2369:20" pos:end="2369:22"><name pos:start="2369:20" pos:end="2369:22">ctx</name></expr></argument>, <argument pos:start="2369:25" pos:end="2369:32"><expr pos:start="2369:25" pos:end="2369:32"><name pos:start="2369:25" pos:end="2369:32">ASE_MDMX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="2371:9" pos:end="2371:36">/* MDMX: Not implemented. */</comment>

    <default pos:start="2373:5" pos:end="2373:12">default:</default>            <comment type="block" pos:start="2373:25" pos:end="2373:37">/* Invalid */</comment>

        <expr_stmt pos:start="2375:9" pos:end="2375:35"><expr pos:start="2375:9" pos:end="2375:34"><call pos:start="2375:9" pos:end="2375:34"><name pos:start="2375:9" pos:end="2375:18">MIPS_INVAL</name><argument_list pos:start="2375:19" pos:end="2375:34">(<argument pos:start="2375:20" pos:end="2375:33"><expr pos:start="2375:20" pos:end="2375:33"><literal type="string" pos:start="2375:20" pos:end="2375:33">"major opcode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="2377:9" pos:end="2377:41"><expr pos:start="2377:9" pos:end="2377:40"><call pos:start="2377:9" pos:end="2377:40"><name pos:start="2377:9" pos:end="2377:26">generate_exception</name><argument_list pos:start="2377:27" pos:end="2377:40">(<argument pos:start="2377:28" pos:end="2377:30"><expr pos:start="2377:28" pos:end="2377:30"><name pos:start="2377:28" pos:end="2377:30">ctx</name></expr></argument>, <argument pos:start="2377:33" pos:end="2377:39"><expr pos:start="2377:33" pos:end="2377:39"><name pos:start="2377:33" pos:end="2377:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="2379:9" pos:end="2379:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
