<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6974.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">check_watchpoint</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:39"><decl pos:start="1:30" pos:end="1:39"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:39">offset</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:48"><decl pos:start="1:42" pos:end="1:48"><type pos:start="1:42" pos:end="1:48"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:48">len</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:59"><decl pos:start="1:51" pos:end="1:59"><type pos:start="1:51" pos:end="1:59"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:59">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="85:1">{<block_content pos:start="5:5" pos:end="83:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:17">cpu</name> <init pos:start="5:19" pos:end="5:31">= <expr pos:start="5:21" pos:end="5:31"><name pos:start="5:21" pos:end="5:31">current_cpu</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUArchState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:36">env_ptr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:19">pc</name></decl>, <decl pos:start="9:22" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:22" pos:end="9:28">cs_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">target_ulong</name></type> <name pos:start="11:18" pos:end="11:22">vaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">CPUWatchpoint</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">wp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">cpu_flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:11">cpu</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:27">watchpoint_hit</name></name></expr>)</condition> <block pos:start="19:30" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:15">

        <comment type="block" pos:start="21:9" pos:end="25:34">/* We re-entered the check after replacing the TB. Now raise

         * the debug interrupt so that is will trigger after the

         * current instruction. */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:21">cpu_interrupt</name><argument_list pos:start="27:22" pos:end="27:47">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">cpu</name></expr></argument>, <argument pos:start="27:28" pos:end="27:46"><expr pos:start="27:28" pos:end="27:46"><name pos:start="27:28" pos:end="27:46">CPU_INTERRUPT_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:9">vaddr</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:30"><name pos:start="33:14" pos:end="33:16">cpu</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:30">mem_io_vaddr</name></name> <operator pos:start="33:32" pos:end="33:32">&amp;</operator> <name pos:start="33:34" pos:end="33:49">TARGET_PAGE_MASK</name><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:52">+</operator> <name pos:start="33:54" pos:end="33:59">offset</name></expr>;</expr_stmt>

    <macro pos:start="35:5" pos:end="35:48"><name pos:start="35:5" pos:end="35:18">QTAILQ_FOREACH</name><argument_list pos:start="35:19" pos:end="35:48">(<argument pos:start="35:20" pos:end="35:21">wp</argument>, <argument pos:start="35:24" pos:end="35:40">&amp;cpu-&gt;watchpoints</argument>, <argument pos:start="35:43" pos:end="35:47">entry</argument>)</argument_list></macro> <block pos:start="35:50" pos:end="83:5">{<block_content pos:start="37:9" pos:end="81:9">

        <if_stmt pos:start="37:9" pos:end="81:9"><if pos:start="37:9" pos:end="77:9">if <condition pos:start="37:12" pos:end="39:35">(<expr pos:start="37:13" pos:end="39:34"><call pos:start="37:13" pos:end="37:58"><name pos:start="37:13" pos:end="37:42">cpu_watchpoint_address_matches</name><argument_list pos:start="37:43" pos:end="37:58">(<argument pos:start="37:44" pos:end="37:45"><expr pos:start="37:44" pos:end="37:45"><name pos:start="37:44" pos:end="37:45">wp</name></expr></argument>, <argument pos:start="37:48" pos:end="37:52"><expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">vaddr</name></expr></argument>, <argument pos:start="37:55" pos:end="37:57"><expr pos:start="37:55" pos:end="37:57"><name pos:start="37:55" pos:end="37:57">len</name></expr></argument>)</argument_list></call>

            <operator pos:start="39:13" pos:end="39:14">&amp;&amp;</operator> <operator pos:start="39:16" pos:end="39:16">(</operator><name pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:18">wp</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:25">flags</name></name> <operator pos:start="39:27" pos:end="39:27">&amp;</operator> <name pos:start="39:29" pos:end="39:33">flags</name><operator pos:start="39:34" pos:end="39:34">)</operator></expr>)</condition> <block pos:start="39:37" pos:end="77:9">{<block_content pos:start="41:13" pos:end="75:13">

            <if_stmt pos:start="41:13" pos:end="49:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:37">(<expr pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:21">flags</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <name pos:start="41:26" pos:end="41:36">BP_MEM_READ</name></expr>)</condition> <block pos:start="41:39" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:52">

                <expr_stmt pos:start="43:17" pos:end="43:52"><expr pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:25"><name pos:start="43:17" pos:end="43:18">wp</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:25">flags</name></name> <operator pos:start="43:27" pos:end="43:28">|=</operator> <name pos:start="43:30" pos:end="43:51">BP_WATCHPOINT_HIT_READ</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="49:13">else <block pos:start="45:20" pos:end="49:13">{<block_content pos:start="47:17" pos:end="47:53">

                <expr_stmt pos:start="47:17" pos:end="47:53"><expr pos:start="47:17" pos:end="47:52"><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:18">wp</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:25">flags</name></name> <operator pos:start="47:27" pos:end="47:28">|=</operator> <name pos:start="47:30" pos:end="47:52">BP_WATCHPOINT_HIT_WRITE</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:32"><expr pos:start="51:13" pos:end="51:31"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:14">wp</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">hitaddr</name></name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:31">vaddr</name></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="75:13"><if pos:start="53:13" pos:end="75:13">if <condition pos:start="53:16" pos:end="53:37">(<expr pos:start="53:17" pos:end="53:36"><operator pos:start="53:17" pos:end="53:17">!</operator><name pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:20">cpu</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:36">watchpoint_hit</name></name></expr>)</condition> <block pos:start="53:39" pos:end="75:13">{<block_content pos:start="55:17" pos:end="73:17">

                <expr_stmt pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:35"><name pos:start="55:17" pos:end="55:19">cpu</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:35">watchpoint_hit</name></name> <operator pos:start="55:37" pos:end="55:37">=</operator> <name pos:start="55:39" pos:end="55:40">wp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:41"><expr pos:start="57:17" pos:end="57:40"><call pos:start="57:17" pos:end="57:40"><name pos:start="57:17" pos:end="57:35">tb_check_watchpoint</name><argument_list pos:start="57:36" pos:end="57:40">(<argument pos:start="57:37" pos:end="57:39"><expr pos:start="57:37" pos:end="57:39"><name pos:start="57:37" pos:end="57:39">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="73:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:54">(<expr pos:start="59:21" pos:end="59:53"><name pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:22">wp</name><operator pos:start="59:23" pos:end="59:24">-&gt;</operator><name pos:start="59:25" pos:end="59:29">flags</name></name> <operator pos:start="59:31" pos:end="59:31">&amp;</operator> <name pos:start="59:33" pos:end="59:53">BP_STOP_BEFORE_ACCESS</name></expr>)</condition> <block pos:start="59:56" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:39">

                    <expr_stmt pos:start="61:21" pos:end="61:54"><expr pos:start="61:21" pos:end="61:53"><name pos:start="61:21" pos:end="61:40"><name pos:start="61:21" pos:end="61:23">cpu</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:40">exception_index</name></name> <operator pos:start="61:42" pos:end="61:42">=</operator> <name pos:start="61:44" pos:end="61:53">EXCP_DEBUG</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:39"><expr pos:start="63:21" pos:end="63:38"><call pos:start="63:21" pos:end="63:38"><name pos:start="63:21" pos:end="63:33">cpu_loop_exit</name><argument_list pos:start="63:34" pos:end="63:38">(<argument pos:start="63:35" pos:end="63:37"><expr pos:start="63:35" pos:end="63:37"><name pos:start="63:35" pos:end="63:37">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="65:19" pos:end="73:17">else <block pos:start="65:24" pos:end="73:17">{<block_content pos:start="67:21" pos:end="71:54">

                    <expr_stmt pos:start="67:21" pos:end="67:73"><expr pos:start="67:21" pos:end="67:72"><call pos:start="67:21" pos:end="67:72"><name pos:start="67:21" pos:end="67:40">cpu_get_tb_cpu_state</name><argument_list pos:start="67:41" pos:end="67:72">(<argument pos:start="67:42" pos:end="67:44"><expr pos:start="67:42" pos:end="67:44"><name pos:start="67:42" pos:end="67:44">env</name></expr></argument>, <argument pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><operator pos:start="67:47" pos:end="67:47">&amp;</operator><name pos:start="67:48" pos:end="67:49">pc</name></expr></argument>, <argument pos:start="67:52" pos:end="67:59"><expr pos:start="67:52" pos:end="67:59"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:59">cs_base</name></expr></argument>, <argument pos:start="67:62" pos:end="67:71"><expr pos:start="67:62" pos:end="67:71"><operator pos:start="67:62" pos:end="67:62">&amp;</operator><name pos:start="67:63" pos:end="67:71">cpu_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="69:21" pos:end="69:64"><expr pos:start="69:21" pos:end="69:63"><call pos:start="69:21" pos:end="69:63"><name pos:start="69:21" pos:end="69:31">tb_gen_code</name><argument_list pos:start="69:32" pos:end="69:63">(<argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">cpu</name></expr></argument>, <argument pos:start="69:38" pos:end="69:39"><expr pos:start="69:38" pos:end="69:39"><name pos:start="69:38" pos:end="69:39">pc</name></expr></argument>, <argument pos:start="69:42" pos:end="69:48"><expr pos:start="69:42" pos:end="69:48"><name pos:start="69:42" pos:end="69:48">cs_base</name></expr></argument>, <argument pos:start="69:51" pos:end="69:59"><expr pos:start="69:51" pos:end="69:59"><name pos:start="69:51" pos:end="69:59">cpu_flags</name></expr></argument>, <argument pos:start="69:62" pos:end="69:62"><expr pos:start="69:62" pos:end="69:62"><literal type="number" pos:start="69:62" pos:end="69:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:54"><expr pos:start="71:21" pos:end="71:53"><call pos:start="71:21" pos:end="71:53"><name pos:start="71:21" pos:end="71:42">cpu_resume_from_signal</name><argument_list pos:start="71:43" pos:end="71:53">(<argument pos:start="71:44" pos:end="71:46"><expr pos:start="71:44" pos:end="71:46"><name pos:start="71:44" pos:end="71:46">cpu</name></expr></argument>, <argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="77:11" pos:end="81:9">else <block pos:start="77:16" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:44">

            <expr_stmt pos:start="79:13" pos:end="79:44"><expr pos:start="79:13" pos:end="79:43"><name pos:start="79:13" pos:end="79:21"><name pos:start="79:13" pos:end="79:14">wp</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:21">flags</name></name> <operator pos:start="79:23" pos:end="79:24">&amp;=</operator> <operator pos:start="79:26" pos:end="79:26">~</operator><name pos:start="79:27" pos:end="79:43">BP_WATCHPOINT_HIT</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
