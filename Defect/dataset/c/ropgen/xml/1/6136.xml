<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6136.c" pos:tabs="8"><function pos:start="1:1" pos:end="481:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">show_stream</name><parameter_list pos:start="1:23" pos:end="1:116">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:36">WriterContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">w</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:65"><decl pos:start="1:42" pos:end="1:65"><type pos:start="1:42" pos:end="1:65"><name pos:start="1:42" pos:end="1:56">AVFormatContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">fmt_ctx</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:81"><decl pos:start="1:68" pos:end="1:81"><type pos:start="1:68" pos:end="1:81"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:81">stream_idx</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:99"><decl pos:start="1:84" pos:end="1:99"><type pos:start="1:84" pos:end="1:99"><name pos:start="1:84" pos:end="1:94">InputStream</name> <modifier pos:start="1:96" pos:end="1:96">*</modifier></type><name pos:start="1:97" pos:end="1:99">ist</name></decl></parameter>, <parameter pos:start="1:102" pos:end="1:115"><decl pos:start="1:102" pos:end="1:115"><type pos:start="1:102" pos:end="1:115"><name pos:start="1:102" pos:end="1:104">int</name></type> <name pos:start="1:106" pos:end="1:115">in_program</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="481:1">{<block_content pos:start="5:5" pos:end="479:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">stream</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:26">ist</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">st</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVCodecParameters</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:26">par</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">dec_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:16">val_str</name><index pos:start="11:17" pos:end="11:21">[<expr pos:start="11:18" pos:end="11:20"><literal type="number" pos:start="11:18" pos:end="11:20">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:14">AVRational</name></type> <name pos:start="15:16" pos:end="15:18">sar</name></decl>, <decl pos:start="15:21" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:14"/><name pos:start="15:21" pos:end="15:23">dar</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">AVBPrint</name></type> <name pos:start="17:14" pos:end="17:17">pbuf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:32"><decl pos:start="19:5" pos:end="19:31"><type pos:start="19:5" pos:end="19:29"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:27">AVCodecDescriptor</name> <modifier pos:start="19:29" pos:end="19:29">*</modifier></type><name pos:start="19:30" pos:end="19:31">cd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:30"><type pos:start="23:5" pos:end="23:16"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:23">profile</name> <init pos:start="23:25" pos:end="23:30">= <expr pos:start="23:27" pos:end="23:30"><name pos:start="23:27" pos:end="23:30">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><call pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:18">av_bprint_init</name><argument_list pos:start="27:19" pos:end="27:54">(<argument pos:start="27:20" pos:end="27:24"><expr pos:start="27:20" pos:end="27:24"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:24">pbuf</name></expr></argument>, <argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><literal type="number" pos:start="27:27" pos:end="27:27">1</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:53"><expr pos:start="27:30" pos:end="27:53"><name pos:start="27:30" pos:end="27:53">AV_BPRINT_SIZE_UNLIMITED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:95"><expr pos:start="31:5" pos:end="31:94"><call pos:start="31:5" pos:end="31:94"><name pos:start="31:5" pos:end="31:31">writer_print_section_header</name><argument_list pos:start="31:32" pos:end="31:94">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">w</name></expr></argument>, <argument pos:start="31:36" pos:end="31:93"><expr pos:start="31:36" pos:end="31:93"><ternary pos:start="31:36" pos:end="31:93"><condition pos:start="31:36" pos:end="31:47"><expr pos:start="31:36" pos:end="31:45"><name pos:start="31:36" pos:end="31:45">in_program</name></expr> ?</condition><then pos:start="31:49" pos:end="31:73"> <expr pos:start="31:49" pos:end="31:73"><name pos:start="31:49" pos:end="31:73">SECTION_ID_PROGRAM_STREAM</name></expr> </then><else pos:start="31:75" pos:end="31:93">: <expr pos:start="31:77" pos:end="31:93"><name pos:start="31:77" pos:end="31:93">SECTION_ID_STREAM</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><call pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:13">print_int</name><argument_list pos:start="35:14" pos:end="35:37">(<argument pos:start="35:15" pos:end="35:21"><expr pos:start="35:15" pos:end="35:21"><literal type="string" pos:start="35:15" pos:end="35:21">"index"</literal></expr></argument>, <argument pos:start="35:24" pos:end="35:36"><expr pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:29">stream</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:36">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:7">par</name>     <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:30"><name pos:start="39:15" pos:end="39:20">stream</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:30">codecpar</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:11">dec_ctx</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:26"><name pos:start="41:15" pos:end="41:17">ist</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:26">dec_ctx</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:51">(<expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:10">cd</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <call pos:start="43:14" pos:end="43:50"><name pos:start="43:14" pos:end="43:35">avcodec_descriptor_get</name><argument_list pos:start="43:36" pos:end="43:50">(<argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:39">par</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:49">codec_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:53" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:9">

        <expr_stmt pos:start="45:9" pos:end="45:42"><expr pos:start="45:9" pos:end="45:41"><call pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:17">print_str</name><argument_list pos:start="45:18" pos:end="45:41">(<argument pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:30"><literal type="string" pos:start="45:19" pos:end="45:30">"codec_name"</literal></expr></argument>, <argument pos:start="45:33" pos:end="45:40"><expr pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:40"><name pos:start="45:33" pos:end="45:34">cd</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="53:9"><if pos:start="47:9" pos:end="53:9">if <condition pos:start="47:12" pos:end="47:25">(<expr pos:start="47:13" pos:end="47:24"><operator pos:start="47:13" pos:end="47:13">!</operator><name pos:start="47:14" pos:end="47:24">do_bitexact</name></expr>)</condition> <block pos:start="47:27" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:65">

            <expr_stmt pos:start="49:13" pos:end="51:65"><expr pos:start="49:13" pos:end="51:64"><call pos:start="49:13" pos:end="51:64"><name pos:start="49:13" pos:end="49:21">print_str</name><argument_list pos:start="49:22" pos:end="51:64">(<argument pos:start="49:23" pos:end="49:39"><expr pos:start="49:23" pos:end="49:39"><literal type="string" pos:start="49:23" pos:end="49:39">"codec_long_name"</literal></expr></argument>,

                      <argument pos:start="51:23" pos:end="51:63"><expr pos:start="51:23" pos:end="51:63"><ternary pos:start="51:23" pos:end="51:63"><condition pos:start="51:23" pos:end="51:37"><expr pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:35"><name pos:start="51:23" pos:end="51:24">cd</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:35">long_name</name></name></expr> ?</condition><then pos:start="51:39" pos:end="51:51"> <expr pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:51"><name pos:start="51:39" pos:end="51:40">cd</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:51">long_name</name></name></expr> </then><else pos:start="51:53" pos:end="51:63">: <expr pos:start="51:55" pos:end="51:63"><literal type="string" pos:start="51:55" pos:end="51:63">"unknown"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="65:5">else <block pos:start="55:12" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:9">

        <expr_stmt pos:start="57:9" pos:end="57:47"><expr pos:start="57:9" pos:end="57:46"><call pos:start="57:9" pos:end="57:46"><name pos:start="57:9" pos:end="57:21">print_str_opt</name><argument_list pos:start="57:22" pos:end="57:46">(<argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><literal type="string" pos:start="57:23" pos:end="57:34">"codec_name"</literal></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><literal type="string" pos:start="57:37" pos:end="57:45">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:25">(<expr pos:start="59:13" pos:end="59:24"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:24">do_bitexact</name></expr>)</condition> <block pos:start="59:27" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:56">

            <expr_stmt pos:start="61:13" pos:end="61:56"><expr pos:start="61:13" pos:end="61:55"><call pos:start="61:13" pos:end="61:55"><name pos:start="61:13" pos:end="61:25">print_str_opt</name><argument_list pos:start="61:26" pos:end="61:55">(<argument pos:start="61:27" pos:end="61:43"><expr pos:start="61:27" pos:end="61:43"><literal type="string" pos:start="61:27" pos:end="61:43">"codec_long_name"</literal></expr></argument>, <argument pos:start="61:46" pos:end="61:54"><expr pos:start="61:46" pos:end="61:54"><literal type="string" pos:start="61:46" pos:end="61:54">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="69:5" pos:end="87:5"><if pos:start="69:5" pos:end="71:38">if <condition pos:start="69:8" pos:end="69:86">(<expr pos:start="69:9" pos:end="69:85"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:20">do_bitexact</name> <operator pos:start="69:22" pos:end="69:23">&amp;&amp;</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:32">profile</name> <operator pos:start="69:34" pos:end="69:34">=</operator> <call pos:start="69:36" pos:end="69:84"><name pos:start="69:36" pos:end="69:55">avcodec_profile_name</name><argument_list pos:start="69:56" pos:end="69:84">(<argument pos:start="69:57" pos:end="69:69"><expr pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:69"><name pos:start="69:57" pos:end="69:59">par</name><operator pos:start="69:60" pos:end="69:61">-&gt;</operator><name pos:start="69:62" pos:end="69:69">codec_id</name></name></expr></argument>, <argument pos:start="69:72" pos:end="69:83"><expr pos:start="69:72" pos:end="69:83"><name pos:start="69:72" pos:end="69:83"><name pos:start="69:72" pos:end="69:74">par</name><operator pos:start="69:75" pos:end="69:76">-&gt;</operator><name pos:start="69:77" pos:end="69:83">profile</name></name></expr></argument>)</argument_list></call><operator pos:start="69:85" pos:end="69:85">)</operator></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:38"><block_content pos:start="71:9" pos:end="71:38">

        <expr_stmt pos:start="71:9" pos:end="71:38"><expr pos:start="71:9" pos:end="71:37"><call pos:start="71:9" pos:end="71:37"><name pos:start="71:9" pos:end="71:17">print_str</name><argument_list pos:start="71:18" pos:end="71:37">(<argument pos:start="71:19" pos:end="71:27"><expr pos:start="71:19" pos:end="71:27"><literal type="string" pos:start="71:19" pos:end="71:27">"profile"</literal></expr></argument>, <argument pos:start="71:30" pos:end="71:36"><expr pos:start="71:30" pos:end="71:36"><name pos:start="71:30" pos:end="71:36">profile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="73:5" pos:end="87:5">else <block pos:start="73:10" pos:end="87:5">{<block_content pos:start="75:9" pos:end="85:48">

        <if_stmt pos:start="75:9" pos:end="85:48"><if pos:start="75:9" pos:end="83:9">if <condition pos:start="75:12" pos:end="75:47">(<expr pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:24"><name pos:start="75:13" pos:end="75:15">par</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:24">profile</name></name> <operator pos:start="75:26" pos:end="75:27">!=</operator> <name pos:start="75:29" pos:end="75:46">FF_PROFILE_UNKNOWN</name></expr>)</condition> <block pos:start="75:49" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:46">

            <decl_stmt pos:start="77:13" pos:end="77:33"><decl pos:start="77:13" pos:end="77:32"><type pos:start="77:13" pos:end="77:16"><name pos:start="77:13" pos:end="77:16">char</name></type> <name pos:start="77:18" pos:end="77:32"><name pos:start="77:18" pos:end="77:28">profile_num</name><index pos:start="77:29" pos:end="77:32">[<expr pos:start="77:30" pos:end="77:31"><literal type="number" pos:start="77:30" pos:end="77:31">12</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:75"><expr pos:start="79:13" pos:end="79:74"><call pos:start="79:13" pos:end="79:74"><name pos:start="79:13" pos:end="79:20">snprintf</name><argument_list pos:start="79:21" pos:end="79:74">(<argument pos:start="79:22" pos:end="79:32"><expr pos:start="79:22" pos:end="79:32"><name pos:start="79:22" pos:end="79:32">profile_num</name></expr></argument>, <argument pos:start="79:35" pos:end="79:53"><expr pos:start="79:35" pos:end="79:53"><sizeof pos:start="79:35" pos:end="79:53">sizeof<argument_list pos:start="79:41" pos:end="79:53">(<argument pos:start="79:42" pos:end="79:52"><expr pos:start="79:42" pos:end="79:52"><name pos:start="79:42" pos:end="79:52">profile_num</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:56" pos:end="79:59"><expr pos:start="79:56" pos:end="79:59"><literal type="string" pos:start="79:56" pos:end="79:59">"%d"</literal></expr></argument>, <argument pos:start="79:62" pos:end="79:73"><expr pos:start="79:62" pos:end="79:73"><name pos:start="79:62" pos:end="79:73"><name pos:start="79:62" pos:end="79:64">par</name><operator pos:start="79:65" pos:end="79:66">-&gt;</operator><name pos:start="79:67" pos:end="79:73">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><call pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:21">print_str</name><argument_list pos:start="81:22" pos:end="81:45">(<argument pos:start="81:23" pos:end="81:31"><expr pos:start="81:23" pos:end="81:31"><literal type="string" pos:start="81:23" pos:end="81:31">"profile"</literal></expr></argument>, <argument pos:start="81:34" pos:end="81:44"><expr pos:start="81:34" pos:end="81:44"><name pos:start="81:34" pos:end="81:44">profile_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="83:11" pos:end="85:48">else<block type="pseudo" pos:start="85:13" pos:end="85:48"><block_content pos:start="85:13" pos:end="85:48">

            <expr_stmt pos:start="85:13" pos:end="85:48"><expr pos:start="85:13" pos:end="85:47"><call pos:start="85:13" pos:end="85:47"><name pos:start="85:13" pos:end="85:25">print_str_opt</name><argument_list pos:start="85:26" pos:end="85:47">(<argument pos:start="85:27" pos:end="85:35"><expr pos:start="85:27" pos:end="85:35"><literal type="string" pos:start="85:27" pos:end="85:35">"profile"</literal></expr></argument>, <argument pos:start="85:38" pos:end="85:46"><expr pos:start="85:38" pos:end="85:46"><literal type="string" pos:start="85:38" pos:end="85:46">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:50"><expr pos:start="91:5" pos:end="91:49"><name pos:start="91:5" pos:end="91:5">s</name> <operator pos:start="91:7" pos:end="91:7">=</operator> <call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:32">av_get_media_type_string</name><argument_list pos:start="91:33" pos:end="91:49">(<argument pos:start="91:34" pos:end="91:48"><expr pos:start="91:34" pos:end="91:48"><name pos:start="91:34" pos:end="91:48"><name pos:start="91:34" pos:end="91:36">par</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:48">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="98:0"><if pos:start="93:5" pos:end="93:42">if <condition pos:start="93:8" pos:end="93:10">(<expr pos:start="93:9" pos:end="93:9"><name pos:start="93:9" pos:end="93:9">s</name></expr>)</condition><block type="pseudo" pos:start="93:12" pos:end="93:42"><block_content pos:start="93:12" pos:end="93:42"> <expr_stmt pos:start="93:12" pos:end="93:42"><expr pos:start="93:12" pos:end="93:41"><call pos:start="93:12" pos:end="93:41"><name pos:start="93:12" pos:end="93:20">print_str</name>    <argument_list pos:start="93:25" pos:end="93:41">(<argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><literal type="string" pos:start="93:26" pos:end="93:37">"codec_type"</literal></expr></argument>, <argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="95:5" pos:end="98:0">else<block type="pseudo" pos:start="95:12" pos:end="98:0"><block_content pos:start="95:12" pos:end="98:0">   <expr_stmt pos:start="95:12" pos:end="98:0"><expr pos:start="95:12" pos:end="95:49"><call pos:start="95:12" pos:end="95:49"><name pos:start="95:12" pos:end="95:24">print_str_opt</name><argument_list pos:start="95:25" pos:end="95:49">(<argument pos:start="95:26" pos:end="95:37"><expr pos:start="95:26" pos:end="95:37"><literal type="string" pos:start="95:26" pos:end="95:37">"codec_type"</literal></expr></argument>, <argument pos:start="95:40" pos:end="95:48"><expr pos:start="95:40" pos:end="95:48"><literal type="string" pos:start="95:40" pos:end="95:48">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if pos:start="97:1" pos:end="97:21">#<cpp:directive pos:start="97:2" pos:end="97:3">if</cpp:directive> <expr pos:start="97:5" pos:end="97:21"><name pos:start="97:5" pos:end="97:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

    <if_stmt pos:start="99:5" pos:end="104:0"><if pos:start="99:5" pos:end="104:0">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:15">dec_ctx</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="104:0"><block_content pos:start="101:9" pos:end="104:0">

        <expr_stmt pos:start="101:9" pos:end="104:0"><expr pos:start="101:9" pos:end="101:59"><call pos:start="101:9" pos:end="101:59"><name pos:start="101:9" pos:end="101:15">print_q</name><argument_list pos:start="101:16" pos:end="101:59">(<argument pos:start="101:17" pos:end="101:33"><expr pos:start="101:17" pos:end="101:33"><literal type="string" pos:start="101:17" pos:end="101:33">"codec_time_base"</literal></expr></argument>, <argument pos:start="101:36" pos:end="101:53"><expr pos:start="101:36" pos:end="101:53"><name pos:start="101:36" pos:end="101:53"><name pos:start="101:36" pos:end="101:42">dec_ctx</name><operator pos:start="101:43" pos:end="101:44">-&gt;</operator><name pos:start="101:45" pos:end="101:53">time_base</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:58"><expr pos:start="101:56" pos:end="101:58"><literal type="char" pos:start="101:56" pos:end="101:58">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="103:1" pos:end="103:6">#<cpp:directive pos:start="103:2" pos:end="103:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="107:5" pos:end="107:30">/* print AVI/FourCC tag */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:68"><expr pos:start="109:5" pos:end="109:67"><call pos:start="109:5" pos:end="109:67"><name pos:start="109:5" pos:end="109:13">print_str</name><argument_list pos:start="109:14" pos:end="109:67">(<argument pos:start="109:15" pos:end="109:32"><expr pos:start="109:15" pos:end="109:32"><literal type="string" pos:start="109:15" pos:end="109:32">"codec_tag_string"</literal></expr></argument>,    <argument pos:start="109:38" pos:end="109:66"><expr pos:start="109:38" pos:end="109:66"><call pos:start="109:38" pos:end="109:66"><name pos:start="109:38" pos:end="109:50">av_fourcc2str</name><argument_list pos:start="109:51" pos:end="109:66">(<argument pos:start="109:52" pos:end="109:65"><expr pos:start="109:52" pos:end="109:65"><name pos:start="109:52" pos:end="109:65"><name pos:start="109:52" pos:end="109:54">par</name><operator pos:start="109:55" pos:end="109:56">-&gt;</operator><name pos:start="109:57" pos:end="109:65">codec_tag</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:58"><expr pos:start="111:5" pos:end="111:57"><call pos:start="111:5" pos:end="111:57"><name pos:start="111:5" pos:end="111:13">print_fmt</name><argument_list pos:start="111:14" pos:end="111:57">(<argument pos:start="111:15" pos:end="111:25"><expr pos:start="111:15" pos:end="111:25"><literal type="string" pos:start="111:15" pos:end="111:25">"codec_tag"</literal></expr></argument>, <argument pos:start="111:28" pos:end="111:40"><expr pos:start="111:28" pos:end="111:40"><literal type="string" pos:start="111:28" pos:end="111:34">"0x%04"</literal><name pos:start="111:35" pos:end="111:40">PRIx32</name></expr></argument>, <argument pos:start="111:43" pos:end="111:56"><expr pos:start="111:43" pos:end="111:56"><name pos:start="111:43" pos:end="111:56"><name pos:start="111:43" pos:end="111:45">par</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:56">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="115:5" pos:end="323:5">switch <condition pos:start="115:12" pos:end="115:28">(<expr pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:15">par</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:27">codec_type</name></name></expr>)</condition> <block pos:start="115:30" pos:end="323:5">{<block_content pos:start="117:5" pos:end="321:14">

    <case pos:start="117:5" pos:end="117:28">case <expr pos:start="117:10" pos:end="117:27"><name pos:start="117:10" pos:end="117:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:46"><expr pos:start="119:9" pos:end="119:45"><call pos:start="119:9" pos:end="119:45"><name pos:start="119:9" pos:end="119:17">print_int</name><argument_list pos:start="119:18" pos:end="119:45">(<argument pos:start="119:19" pos:end="119:25"><expr pos:start="119:19" pos:end="119:25"><literal type="string" pos:start="119:19" pos:end="119:25">"width"</literal></expr></argument>,        <argument pos:start="119:35" pos:end="119:44"><expr pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:44"><name pos:start="119:35" pos:end="119:37">par</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:44">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:47"><expr pos:start="121:9" pos:end="121:46"><call pos:start="121:9" pos:end="121:46"><name pos:start="121:9" pos:end="121:17">print_int</name><argument_list pos:start="121:18" pos:end="121:46">(<argument pos:start="121:19" pos:end="121:26"><expr pos:start="121:19" pos:end="121:26"><literal type="string" pos:start="121:19" pos:end="121:26">"height"</literal></expr></argument>,       <argument pos:start="121:35" pos:end="121:45"><expr pos:start="121:35" pos:end="121:45"><name pos:start="121:35" pos:end="121:45"><name pos:start="121:35" pos:end="121:37">par</name><operator pos:start="121:38" pos:end="121:39">-&gt;</operator><name pos:start="121:40" pos:end="121:45">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:19">dec_ctx</name></expr>)</condition> <block pos:start="123:22" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:61">

            <expr_stmt pos:start="125:13" pos:end="125:60"><expr pos:start="125:13" pos:end="125:59"><call pos:start="125:13" pos:end="125:59"><name pos:start="125:13" pos:end="125:21">print_int</name><argument_list pos:start="125:22" pos:end="125:59">(<argument pos:start="125:23" pos:end="125:35"><expr pos:start="125:23" pos:end="125:35"><literal type="string" pos:start="125:23" pos:end="125:35">"coded_width"</literal></expr></argument>,  <argument pos:start="125:39" pos:end="125:58"><expr pos:start="125:39" pos:end="125:58"><name pos:start="125:39" pos:end="125:58"><name pos:start="125:39" pos:end="125:45">dec_ctx</name><operator pos:start="125:46" pos:end="125:47">-&gt;</operator><name pos:start="125:48" pos:end="125:58">coded_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:61"><expr pos:start="127:13" pos:end="127:60"><call pos:start="127:13" pos:end="127:60"><name pos:start="127:13" pos:end="127:21">print_int</name><argument_list pos:start="127:22" pos:end="127:60">(<argument pos:start="127:23" pos:end="127:36"><expr pos:start="127:23" pos:end="127:36"><literal type="string" pos:start="127:23" pos:end="127:36">"coded_height"</literal></expr></argument>, <argument pos:start="127:39" pos:end="127:59"><expr pos:start="127:39" pos:end="127:59"><name pos:start="127:39" pos:end="127:59"><name pos:start="127:39" pos:end="127:45">dec_ctx</name><operator pos:start="127:46" pos:end="127:47">-&gt;</operator><name pos:start="127:48" pos:end="127:59">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:52"><expr pos:start="131:9" pos:end="131:51"><call pos:start="131:9" pos:end="131:51"><name pos:start="131:9" pos:end="131:17">print_int</name><argument_list pos:start="131:18" pos:end="131:51">(<argument pos:start="131:19" pos:end="131:32"><expr pos:start="131:19" pos:end="131:32"><literal type="string" pos:start="131:19" pos:end="131:32">"has_b_frames"</literal></expr></argument>, <argument pos:start="131:35" pos:end="131:50"><expr pos:start="131:35" pos:end="131:50"><name pos:start="131:35" pos:end="131:50"><name pos:start="131:35" pos:end="131:37">par</name><operator pos:start="131:38" pos:end="131:39">-&gt;</operator><name pos:start="131:40" pos:end="131:50">video_delay</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:66"><expr pos:start="133:9" pos:end="133:65"><name pos:start="133:9" pos:end="133:11">sar</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <call pos:start="133:15" pos:end="133:65"><name pos:start="133:15" pos:end="133:42">av_guess_sample_aspect_ratio</name><argument_list pos:start="133:43" pos:end="133:65">(<argument pos:start="133:44" pos:end="133:50"><expr pos:start="133:44" pos:end="133:50"><name pos:start="133:44" pos:end="133:50">fmt_ctx</name></expr></argument>, <argument pos:start="133:53" pos:end="133:58"><expr pos:start="133:53" pos:end="133:58"><name pos:start="133:53" pos:end="133:58">stream</name></expr></argument>, <argument pos:start="133:61" pos:end="133:64"><expr pos:start="133:61" pos:end="133:64"><name pos:start="133:61" pos:end="133:64">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="155:9"><if pos:start="135:9" pos:end="149:9">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">sar</name><operator pos:start="135:16" pos:end="135:16">.</operator><name pos:start="135:17" pos:end="135:19">den</name></name></expr>)</condition> <block pos:start="135:22" pos:end="149:9">{<block_content pos:start="137:13" pos:end="147:54">

            <expr_stmt pos:start="137:13" pos:end="137:53"><expr pos:start="137:13" pos:end="137:52"><call pos:start="137:13" pos:end="137:52"><name pos:start="137:13" pos:end="137:19">print_q</name><argument_list pos:start="137:20" pos:end="137:52">(<argument pos:start="137:21" pos:end="137:41"><expr pos:start="137:21" pos:end="137:41"><literal type="string" pos:start="137:21" pos:end="137:41">"sample_aspect_ratio"</literal></expr></argument>, <argument pos:start="137:44" pos:end="137:46"><expr pos:start="137:44" pos:end="137:46"><name pos:start="137:44" pos:end="137:46">sar</name></expr></argument>, <argument pos:start="137:49" pos:end="137:51"><expr pos:start="137:49" pos:end="137:51"><literal type="char" pos:start="137:49" pos:end="137:51">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="145:33"><expr pos:start="139:13" pos:end="145:32"><call pos:start="139:13" pos:end="145:32"><name pos:start="139:13" pos:end="139:21">av_reduce</name><argument_list pos:start="139:22" pos:end="145:32">(<argument pos:start="139:23" pos:end="139:30"><expr pos:start="139:23" pos:end="139:30"><operator pos:start="139:23" pos:end="139:23">&amp;</operator><name pos:start="139:24" pos:end="139:30"><name pos:start="139:24" pos:end="139:26">dar</name><operator pos:start="139:27" pos:end="139:27">.</operator><name pos:start="139:28" pos:end="139:30">num</name></name></expr></argument>, <argument pos:start="139:33" pos:end="139:40"><expr pos:start="139:33" pos:end="139:40"><operator pos:start="139:33" pos:end="139:33">&amp;</operator><name pos:start="139:34" pos:end="139:40"><name pos:start="139:34" pos:end="139:36">dar</name><operator pos:start="139:37" pos:end="139:37">.</operator><name pos:start="139:38" pos:end="139:40">den</name></name></expr></argument>,

                      <argument pos:start="141:23" pos:end="141:43"><expr pos:start="141:23" pos:end="141:43"><name pos:start="141:23" pos:end="141:32"><name pos:start="141:23" pos:end="141:25">par</name><operator pos:start="141:26" pos:end="141:27">-&gt;</operator><name pos:start="141:28" pos:end="141:32">width</name></name>  <operator pos:start="141:35" pos:end="141:35">*</operator> <name pos:start="141:37" pos:end="141:43"><name pos:start="141:37" pos:end="141:39">sar</name><operator pos:start="141:40" pos:end="141:40">.</operator><name pos:start="141:41" pos:end="141:43">num</name></name></expr></argument>,

                      <argument pos:start="143:23" pos:end="143:43"><expr pos:start="143:23" pos:end="143:43"><name pos:start="143:23" pos:end="143:33"><name pos:start="143:23" pos:end="143:25">par</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:33">height</name></name> <operator pos:start="143:35" pos:end="143:35">*</operator> <name pos:start="143:37" pos:end="143:43"><name pos:start="143:37" pos:end="143:39">sar</name><operator pos:start="143:40" pos:end="143:40">.</operator><name pos:start="143:41" pos:end="143:43">den</name></name></expr></argument>,

                      <argument pos:start="145:23" pos:end="145:31"><expr pos:start="145:23" pos:end="145:31"><literal type="number" pos:start="145:23" pos:end="145:26">1024</literal><operator pos:start="145:27" pos:end="145:27">*</operator><literal type="number" pos:start="145:28" pos:end="145:31">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:54"><expr pos:start="147:13" pos:end="147:53"><call pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:19">print_q</name><argument_list pos:start="147:20" pos:end="147:53">(<argument pos:start="147:21" pos:end="147:42"><expr pos:start="147:21" pos:end="147:42"><literal type="string" pos:start="147:21" pos:end="147:42">"display_aspect_ratio"</literal></expr></argument>, <argument pos:start="147:45" pos:end="147:47"><expr pos:start="147:45" pos:end="147:47"><name pos:start="147:45" pos:end="147:47">dar</name></expr></argument>, <argument pos:start="147:50" pos:end="147:52"><expr pos:start="147:50" pos:end="147:52"><literal type="char" pos:start="147:50" pos:end="147:52">':'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="149:11" pos:end="155:9">else <block pos:start="149:16" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:57">

            <expr_stmt pos:start="151:13" pos:end="151:56"><expr pos:start="151:13" pos:end="151:55"><call pos:start="151:13" pos:end="151:55"><name pos:start="151:13" pos:end="151:25">print_str_opt</name><argument_list pos:start="151:26" pos:end="151:55">(<argument pos:start="151:27" pos:end="151:47"><expr pos:start="151:27" pos:end="151:47"><literal type="string" pos:start="151:27" pos:end="151:47">"sample_aspect_ratio"</literal></expr></argument>, <argument pos:start="151:50" pos:end="151:54"><expr pos:start="151:50" pos:end="151:54"><literal type="string" pos:start="151:50" pos:end="151:54">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:57"><expr pos:start="153:13" pos:end="153:56"><call pos:start="153:13" pos:end="153:56"><name pos:start="153:13" pos:end="153:25">print_str_opt</name><argument_list pos:start="153:26" pos:end="153:56">(<argument pos:start="153:27" pos:end="153:48"><expr pos:start="153:27" pos:end="153:48"><literal type="string" pos:start="153:27" pos:end="153:48">"display_aspect_ratio"</literal></expr></argument>, <argument pos:start="153:51" pos:end="153:55"><expr pos:start="153:51" pos:end="153:55"><literal type="string" pos:start="153:51" pos:end="153:55">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:45"><expr pos:start="157:9" pos:end="157:44"><name pos:start="157:9" pos:end="157:9">s</name> <operator pos:start="157:11" pos:end="157:11">=</operator> <call pos:start="157:13" pos:end="157:44"><name pos:start="157:13" pos:end="157:31">av_get_pix_fmt_name</name><argument_list pos:start="157:32" pos:end="157:44">(<argument pos:start="157:33" pos:end="157:43"><expr pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:43"><name pos:start="157:33" pos:end="157:35">par</name><operator pos:start="157:36" pos:end="157:37">-&gt;</operator><name pos:start="157:38" pos:end="157:43">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="161:51"><if pos:start="159:9" pos:end="159:43">if <condition pos:start="159:12" pos:end="159:14">(<expr pos:start="159:13" pos:end="159:13"><name pos:start="159:13" pos:end="159:13">s</name></expr>)</condition><block type="pseudo" pos:start="159:16" pos:end="159:43"><block_content pos:start="159:16" pos:end="159:43"> <expr_stmt pos:start="159:16" pos:end="159:43"><expr pos:start="159:16" pos:end="159:42"><call pos:start="159:16" pos:end="159:42"><name pos:start="159:16" pos:end="159:24">print_str</name>    <argument_list pos:start="159:29" pos:end="159:42">(<argument pos:start="159:30" pos:end="159:38"><expr pos:start="159:30" pos:end="159:38"><literal type="string" pos:start="159:30" pos:end="159:38">"pix_fmt"</literal></expr></argument>, <argument pos:start="159:41" pos:end="159:41"><expr pos:start="159:41" pos:end="159:41"><name pos:start="159:41" pos:end="159:41">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="161:9" pos:end="161:51">else<block type="pseudo" pos:start="161:16" pos:end="161:51"><block_content pos:start="161:16" pos:end="161:51">   <expr_stmt pos:start="161:16" pos:end="161:51"><expr pos:start="161:16" pos:end="161:50"><call pos:start="161:16" pos:end="161:50"><name pos:start="161:16" pos:end="161:28">print_str_opt</name><argument_list pos:start="161:29" pos:end="161:50">(<argument pos:start="161:30" pos:end="161:38"><expr pos:start="161:30" pos:end="161:38"><literal type="string" pos:start="161:30" pos:end="161:38">"pix_fmt"</literal></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><literal type="string" pos:start="161:41" pos:end="161:49">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:41"><expr pos:start="163:9" pos:end="163:40"><call pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:17">print_int</name><argument_list pos:start="163:18" pos:end="163:40">(<argument pos:start="163:19" pos:end="163:25"><expr pos:start="163:19" pos:end="163:25"><literal type="string" pos:start="163:19" pos:end="163:25">"level"</literal></expr></argument>,   <argument pos:start="163:30" pos:end="163:39"><expr pos:start="163:30" pos:end="163:39"><name pos:start="163:30" pos:end="163:39"><name pos:start="163:30" pos:end="163:32">par</name><operator pos:start="163:33" pos:end="163:34">-&gt;</operator><name pos:start="163:35" pos:end="163:39">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:48"><if pos:start="165:9" pos:end="167:80">if <condition pos:start="165:12" pos:end="165:56">(<expr pos:start="165:13" pos:end="165:55"><name pos:start="165:13" pos:end="165:28"><name pos:start="165:13" pos:end="165:15">par</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:28">color_range</name></name> <operator pos:start="165:30" pos:end="165:31">!=</operator> <name pos:start="165:33" pos:end="165:55">AVCOL_RANGE_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:80"><block_content pos:start="167:13" pos:end="167:80">

            <expr_stmt pos:start="167:13" pos:end="167:80"><expr pos:start="167:13" pos:end="167:79"><call pos:start="167:13" pos:end="167:79"><name pos:start="167:13" pos:end="167:21">print_str</name>    <argument_list pos:start="167:26" pos:end="167:79">(<argument pos:start="167:27" pos:end="167:39"><expr pos:start="167:27" pos:end="167:39"><literal type="string" pos:start="167:27" pos:end="167:39">"color_range"</literal></expr></argument>, <argument pos:start="167:42" pos:end="167:78"><expr pos:start="167:42" pos:end="167:78"><call pos:start="167:42" pos:end="167:78"><name pos:start="167:42" pos:end="167:60">av_color_range_name</name><argument_list pos:start="167:61" pos:end="167:78">(<argument pos:start="167:62" pos:end="167:77"><expr pos:start="167:62" pos:end="167:77"><name pos:start="167:62" pos:end="167:77"><name pos:start="167:62" pos:end="167:64">par</name><operator pos:start="167:65" pos:end="167:66">-&gt;</operator><name pos:start="167:67" pos:end="167:77">color_range</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="169:9" pos:end="171:48">else<block type="pseudo" pos:start="171:13" pos:end="171:48"><block_content pos:start="171:13" pos:end="171:48">

            <expr_stmt pos:start="171:13" pos:end="171:48"><expr pos:start="171:13" pos:end="171:47"><call pos:start="171:13" pos:end="171:47"><name pos:start="171:13" pos:end="171:25">print_str_opt</name><argument_list pos:start="171:26" pos:end="171:47">(<argument pos:start="171:27" pos:end="171:39"><expr pos:start="171:27" pos:end="171:39"><literal type="string" pos:start="171:27" pos:end="171:39">"color_range"</literal></expr></argument>, <argument pos:start="171:42" pos:end="171:46"><expr pos:start="171:42" pos:end="171:46"><literal type="string" pos:start="171:42" pos:end="171:46">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="175:9" pos:end="181:80"><if pos:start="175:9" pos:end="177:76">if <condition pos:start="175:12" pos:end="175:54">(<expr pos:start="175:13" pos:end="175:53"><name pos:start="175:13" pos:end="175:28"><name pos:start="175:13" pos:end="175:15">par</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:28">color_space</name></name> <operator pos:start="175:30" pos:end="175:31">!=</operator> <name pos:start="175:33" pos:end="175:53">AVCOL_SPC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="177:13" pos:end="177:76"><block_content pos:start="177:13" pos:end="177:76">

            <expr_stmt pos:start="177:13" pos:end="177:76"><expr pos:start="177:13" pos:end="177:75"><call pos:start="177:13" pos:end="177:75"><name pos:start="177:13" pos:end="177:21">print_str</name><argument_list pos:start="177:22" pos:end="177:75">(<argument pos:start="177:23" pos:end="177:35"><expr pos:start="177:23" pos:end="177:35"><literal type="string" pos:start="177:23" pos:end="177:35">"color_space"</literal></expr></argument>, <argument pos:start="177:38" pos:end="177:74"><expr pos:start="177:38" pos:end="177:74"><call pos:start="177:38" pos:end="177:74"><name pos:start="177:38" pos:end="177:56">av_color_space_name</name><argument_list pos:start="177:57" pos:end="177:74">(<argument pos:start="177:58" pos:end="177:73"><expr pos:start="177:58" pos:end="177:73"><name pos:start="177:58" pos:end="177:73"><name pos:start="177:58" pos:end="177:60">par</name><operator pos:start="177:61" pos:end="177:62">-&gt;</operator><name pos:start="177:63" pos:end="177:73">color_space</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="179:9" pos:end="181:80">else<block type="pseudo" pos:start="181:13" pos:end="181:80"><block_content pos:start="181:13" pos:end="181:80">

            <expr_stmt pos:start="181:13" pos:end="181:80"><expr pos:start="181:13" pos:end="181:79"><call pos:start="181:13" pos:end="181:79"><name pos:start="181:13" pos:end="181:25">print_str_opt</name><argument_list pos:start="181:26" pos:end="181:79">(<argument pos:start="181:27" pos:end="181:39"><expr pos:start="181:27" pos:end="181:39"><literal type="string" pos:start="181:27" pos:end="181:39">"color_space"</literal></expr></argument>, <argument pos:start="181:42" pos:end="181:78"><expr pos:start="181:42" pos:end="181:78"><call pos:start="181:42" pos:end="181:78"><name pos:start="181:42" pos:end="181:60">av_color_space_name</name><argument_list pos:start="181:61" pos:end="181:78">(<argument pos:start="181:62" pos:end="181:77"><expr pos:start="181:62" pos:end="181:77"><name pos:start="181:62" pos:end="181:77"><name pos:start="181:62" pos:end="181:64">par</name><operator pos:start="181:65" pos:end="181:66">-&gt;</operator><name pos:start="181:67" pos:end="181:77">color_space</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="185:9" pos:end="191:84"><if pos:start="185:9" pos:end="187:80">if <condition pos:start="185:12" pos:end="185:52">(<expr pos:start="185:13" pos:end="185:51"><name pos:start="185:13" pos:end="185:26"><name pos:start="185:13" pos:end="185:15">par</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:26">color_trc</name></name> <operator pos:start="185:28" pos:end="185:29">!=</operator> <name pos:start="185:31" pos:end="185:51">AVCOL_TRC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:80"><block_content pos:start="187:13" pos:end="187:80">

            <expr_stmt pos:start="187:13" pos:end="187:80"><expr pos:start="187:13" pos:end="187:79"><call pos:start="187:13" pos:end="187:79"><name pos:start="187:13" pos:end="187:21">print_str</name><argument_list pos:start="187:22" pos:end="187:79">(<argument pos:start="187:23" pos:end="187:38"><expr pos:start="187:23" pos:end="187:38"><literal type="string" pos:start="187:23" pos:end="187:38">"color_transfer"</literal></expr></argument>, <argument pos:start="187:41" pos:end="187:78"><expr pos:start="187:41" pos:end="187:78"><call pos:start="187:41" pos:end="187:78"><name pos:start="187:41" pos:end="187:62">av_color_transfer_name</name><argument_list pos:start="187:63" pos:end="187:78">(<argument pos:start="187:64" pos:end="187:77"><expr pos:start="187:64" pos:end="187:77"><name pos:start="187:64" pos:end="187:77"><name pos:start="187:64" pos:end="187:66">par</name><operator pos:start="187:67" pos:end="187:68">-&gt;</operator><name pos:start="187:69" pos:end="187:77">color_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="189:9" pos:end="191:84">else<block type="pseudo" pos:start="191:13" pos:end="191:84"><block_content pos:start="191:13" pos:end="191:84">

            <expr_stmt pos:start="191:13" pos:end="191:84"><expr pos:start="191:13" pos:end="191:83"><call pos:start="191:13" pos:end="191:83"><name pos:start="191:13" pos:end="191:25">print_str_opt</name><argument_list pos:start="191:26" pos:end="191:83">(<argument pos:start="191:27" pos:end="191:42"><expr pos:start="191:27" pos:end="191:42"><literal type="string" pos:start="191:27" pos:end="191:42">"color_transfer"</literal></expr></argument>, <argument pos:start="191:45" pos:end="191:82"><expr pos:start="191:45" pos:end="191:82"><call pos:start="191:45" pos:end="191:82"><name pos:start="191:45" pos:end="191:66">av_color_transfer_name</name><argument_list pos:start="191:67" pos:end="191:82">(<argument pos:start="191:68" pos:end="191:81"><expr pos:start="191:68" pos:end="191:81"><name pos:start="191:68" pos:end="191:81"><name pos:start="191:68" pos:end="191:70">par</name><operator pos:start="191:71" pos:end="191:72">-&gt;</operator><name pos:start="191:73" pos:end="191:81">color_trc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="195:9" pos:end="201:92"><if pos:start="195:9" pos:end="197:88">if <condition pos:start="195:12" pos:end="195:58">(<expr pos:start="195:13" pos:end="195:57"><name pos:start="195:13" pos:end="195:32"><name pos:start="195:13" pos:end="195:15">par</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:32">color_primaries</name></name> <operator pos:start="195:34" pos:end="195:35">!=</operator> <name pos:start="195:37" pos:end="195:57">AVCOL_PRI_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="197:13" pos:end="197:88"><block_content pos:start="197:13" pos:end="197:88">

            <expr_stmt pos:start="197:13" pos:end="197:88"><expr pos:start="197:13" pos:end="197:87"><call pos:start="197:13" pos:end="197:87"><name pos:start="197:13" pos:end="197:21">print_str</name><argument_list pos:start="197:22" pos:end="197:87">(<argument pos:start="197:23" pos:end="197:39"><expr pos:start="197:23" pos:end="197:39"><literal type="string" pos:start="197:23" pos:end="197:39">"color_primaries"</literal></expr></argument>, <argument pos:start="197:42" pos:end="197:86"><expr pos:start="197:42" pos:end="197:86"><call pos:start="197:42" pos:end="197:86"><name pos:start="197:42" pos:end="197:64">av_color_primaries_name</name><argument_list pos:start="197:65" pos:end="197:86">(<argument pos:start="197:66" pos:end="197:85"><expr pos:start="197:66" pos:end="197:85"><name pos:start="197:66" pos:end="197:85"><name pos:start="197:66" pos:end="197:68">par</name><operator pos:start="197:69" pos:end="197:70">-&gt;</operator><name pos:start="197:71" pos:end="197:85">color_primaries</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="199:9" pos:end="201:92">else<block type="pseudo" pos:start="201:13" pos:end="201:92"><block_content pos:start="201:13" pos:end="201:92">

            <expr_stmt pos:start="201:13" pos:end="201:92"><expr pos:start="201:13" pos:end="201:91"><call pos:start="201:13" pos:end="201:91"><name pos:start="201:13" pos:end="201:25">print_str_opt</name><argument_list pos:start="201:26" pos:end="201:91">(<argument pos:start="201:27" pos:end="201:43"><expr pos:start="201:27" pos:end="201:43"><literal type="string" pos:start="201:27" pos:end="201:43">"color_primaries"</literal></expr></argument>, <argument pos:start="201:46" pos:end="201:90"><expr pos:start="201:46" pos:end="201:90"><call pos:start="201:46" pos:end="201:90"><name pos:start="201:46" pos:end="201:68">av_color_primaries_name</name><argument_list pos:start="201:69" pos:end="201:90">(<argument pos:start="201:70" pos:end="201:89"><expr pos:start="201:70" pos:end="201:89"><name pos:start="201:70" pos:end="201:89"><name pos:start="201:70" pos:end="201:72">par</name><operator pos:start="201:73" pos:end="201:74">-&gt;</operator><name pos:start="201:75" pos:end="201:89">color_primaries</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="205:9" pos:end="211:92"><if pos:start="205:9" pos:end="207:88">if <condition pos:start="205:12" pos:end="205:61">(<expr pos:start="205:13" pos:end="205:60"><name pos:start="205:13" pos:end="205:32"><name pos:start="205:13" pos:end="205:15">par</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:32">chroma_location</name></name> <operator pos:start="205:34" pos:end="205:35">!=</operator> <name pos:start="205:37" pos:end="205:60">AVCHROMA_LOC_UNSPECIFIED</name></expr>)</condition><block type="pseudo" pos:start="207:13" pos:end="207:88"><block_content pos:start="207:13" pos:end="207:88">

            <expr_stmt pos:start="207:13" pos:end="207:88"><expr pos:start="207:13" pos:end="207:87"><call pos:start="207:13" pos:end="207:87"><name pos:start="207:13" pos:end="207:21">print_str</name><argument_list pos:start="207:22" pos:end="207:87">(<argument pos:start="207:23" pos:end="207:39"><expr pos:start="207:23" pos:end="207:39"><literal type="string" pos:start="207:23" pos:end="207:39">"chroma_location"</literal></expr></argument>, <argument pos:start="207:42" pos:end="207:86"><expr pos:start="207:42" pos:end="207:86"><call pos:start="207:42" pos:end="207:86"><name pos:start="207:42" pos:end="207:64">av_chroma_location_name</name><argument_list pos:start="207:65" pos:end="207:86">(<argument pos:start="207:66" pos:end="207:85"><expr pos:start="207:66" pos:end="207:85"><name pos:start="207:66" pos:end="207:85"><name pos:start="207:66" pos:end="207:68">par</name><operator pos:start="207:69" pos:end="207:70">-&gt;</operator><name pos:start="207:71" pos:end="207:85">chroma_location</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="209:9" pos:end="211:92">else<block type="pseudo" pos:start="211:13" pos:end="211:92"><block_content pos:start="211:13" pos:end="211:92">

            <expr_stmt pos:start="211:13" pos:end="211:92"><expr pos:start="211:13" pos:end="211:91"><call pos:start="211:13" pos:end="211:91"><name pos:start="211:13" pos:end="211:25">print_str_opt</name><argument_list pos:start="211:26" pos:end="211:91">(<argument pos:start="211:27" pos:end="211:43"><expr pos:start="211:27" pos:end="211:43"><literal type="string" pos:start="211:27" pos:end="211:43">"chroma_location"</literal></expr></argument>, <argument pos:start="211:46" pos:end="211:90"><expr pos:start="211:46" pos:end="211:90"><call pos:start="211:46" pos:end="211:90"><name pos:start="211:46" pos:end="211:68">av_chroma_location_name</name><argument_list pos:start="211:69" pos:end="211:90">(<argument pos:start="211:70" pos:end="211:89"><expr pos:start="211:70" pos:end="211:89"><name pos:start="211:70" pos:end="211:89"><name pos:start="211:70" pos:end="211:72">par</name><operator pos:start="211:73" pos:end="211:74">-&gt;</operator><name pos:start="211:75" pos:end="211:89">chroma_location</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="215:9" pos:end="242:0"><if pos:start="215:9" pos:end="217:52">if <condition pos:start="215:12" pos:end="215:53">(<expr pos:start="215:13" pos:end="215:52"><name pos:start="215:13" pos:end="215:28"><name pos:start="215:13" pos:end="215:15">par</name><operator pos:start="215:16" pos:end="215:17">-&gt;</operator><name pos:start="215:18" pos:end="215:28">field_order</name></name> <operator pos:start="215:30" pos:end="215:31">==</operator> <name pos:start="215:33" pos:end="215:52">AV_FIELD_PROGRESSIVE</name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="217:52"><block_content pos:start="217:13" pos:end="217:52">

            <expr_stmt pos:start="217:13" pos:end="217:52"><expr pos:start="217:13" pos:end="217:51"><call pos:start="217:13" pos:end="217:51"><name pos:start="217:13" pos:end="217:21">print_str</name><argument_list pos:start="217:22" pos:end="217:51">(<argument pos:start="217:23" pos:end="217:35"><expr pos:start="217:23" pos:end="217:35"><literal type="string" pos:start="217:23" pos:end="217:35">"field_order"</literal></expr></argument>, <argument pos:start="217:38" pos:end="217:50"><expr pos:start="217:38" pos:end="217:50"><literal type="string" pos:start="217:38" pos:end="217:50">"progressive"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="219:9" pos:end="221:43">else if <condition pos:start="219:17" pos:end="219:49">(<expr pos:start="219:18" pos:end="219:48"><name pos:start="219:18" pos:end="219:33"><name pos:start="219:18" pos:end="219:20">par</name><operator pos:start="219:21" pos:end="219:22">-&gt;</operator><name pos:start="219:23" pos:end="219:33">field_order</name></name> <operator pos:start="219:35" pos:end="219:36">==</operator> <name pos:start="219:38" pos:end="219:48">AV_FIELD_TT</name></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:43"><block_content pos:start="221:13" pos:end="221:43">

            <expr_stmt pos:start="221:13" pos:end="221:43"><expr pos:start="221:13" pos:end="221:42"><call pos:start="221:13" pos:end="221:42"><name pos:start="221:13" pos:end="221:21">print_str</name><argument_list pos:start="221:22" pos:end="221:42">(<argument pos:start="221:23" pos:end="221:35"><expr pos:start="221:23" pos:end="221:35"><literal type="string" pos:start="221:23" pos:end="221:35">"field_order"</literal></expr></argument>, <argument pos:start="221:38" pos:end="221:41"><expr pos:start="221:38" pos:end="221:41"><literal type="string" pos:start="221:38" pos:end="221:41">"tt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="223:9" pos:end="225:43">else if <condition pos:start="223:17" pos:end="223:49">(<expr pos:start="223:18" pos:end="223:48"><name pos:start="223:18" pos:end="223:33"><name pos:start="223:18" pos:end="223:20">par</name><operator pos:start="223:21" pos:end="223:22">-&gt;</operator><name pos:start="223:23" pos:end="223:33">field_order</name></name> <operator pos:start="223:35" pos:end="223:36">==</operator> <name pos:start="223:38" pos:end="223:48">AV_FIELD_BB</name></expr>)</condition><block type="pseudo" pos:start="225:13" pos:end="225:43"><block_content pos:start="225:13" pos:end="225:43">

            <expr_stmt pos:start="225:13" pos:end="225:43"><expr pos:start="225:13" pos:end="225:42"><call pos:start="225:13" pos:end="225:42"><name pos:start="225:13" pos:end="225:21">print_str</name><argument_list pos:start="225:22" pos:end="225:42">(<argument pos:start="225:23" pos:end="225:35"><expr pos:start="225:23" pos:end="225:35"><literal type="string" pos:start="225:23" pos:end="225:35">"field_order"</literal></expr></argument>, <argument pos:start="225:38" pos:end="225:41"><expr pos:start="225:38" pos:end="225:41"><literal type="string" pos:start="225:38" pos:end="225:41">"bb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="227:9" pos:end="229:43">else if <condition pos:start="227:17" pos:end="227:49">(<expr pos:start="227:18" pos:end="227:48"><name pos:start="227:18" pos:end="227:33"><name pos:start="227:18" pos:end="227:20">par</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:33">field_order</name></name> <operator pos:start="227:35" pos:end="227:36">==</operator> <name pos:start="227:38" pos:end="227:48">AV_FIELD_TB</name></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:43"><block_content pos:start="229:13" pos:end="229:43">

            <expr_stmt pos:start="229:13" pos:end="229:43"><expr pos:start="229:13" pos:end="229:42"><call pos:start="229:13" pos:end="229:42"><name pos:start="229:13" pos:end="229:21">print_str</name><argument_list pos:start="229:22" pos:end="229:42">(<argument pos:start="229:23" pos:end="229:35"><expr pos:start="229:23" pos:end="229:35"><literal type="string" pos:start="229:23" pos:end="229:35">"field_order"</literal></expr></argument>, <argument pos:start="229:38" pos:end="229:41"><expr pos:start="229:38" pos:end="229:41"><literal type="string" pos:start="229:38" pos:end="229:41">"tb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="231:9" pos:end="233:43">else if <condition pos:start="231:17" pos:end="231:49">(<expr pos:start="231:18" pos:end="231:48"><name pos:start="231:18" pos:end="231:33"><name pos:start="231:18" pos:end="231:20">par</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:33">field_order</name></name> <operator pos:start="231:35" pos:end="231:36">==</operator> <name pos:start="231:38" pos:end="231:48">AV_FIELD_BT</name></expr>)</condition><block type="pseudo" pos:start="233:13" pos:end="233:43"><block_content pos:start="233:13" pos:end="233:43">

            <expr_stmt pos:start="233:13" pos:end="233:43"><expr pos:start="233:13" pos:end="233:42"><call pos:start="233:13" pos:end="233:42"><name pos:start="233:13" pos:end="233:21">print_str</name><argument_list pos:start="233:22" pos:end="233:42">(<argument pos:start="233:23" pos:end="233:35"><expr pos:start="233:23" pos:end="233:35"><literal type="string" pos:start="233:23" pos:end="233:35">"field_order"</literal></expr></argument>, <argument pos:start="233:38" pos:end="233:41"><expr pos:start="233:38" pos:end="233:41"><literal type="string" pos:start="233:38" pos:end="233:41">"bt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="235:9" pos:end="242:0">else<block type="pseudo" pos:start="237:13" pos:end="242:0"><block_content pos:start="237:13" pos:end="242:0">

            <expr_stmt pos:start="237:13" pos:end="242:0"><expr pos:start="237:13" pos:end="237:51"><call pos:start="237:13" pos:end="237:51"><name pos:start="237:13" pos:end="237:25">print_str_opt</name><argument_list pos:start="237:26" pos:end="237:51">(<argument pos:start="237:27" pos:end="237:39"><expr pos:start="237:27" pos:end="237:39"><literal type="string" pos:start="237:27" pos:end="237:39">"field_order"</literal></expr></argument>, <argument pos:start="237:42" pos:end="237:50"><expr pos:start="237:42" pos:end="237:50"><literal type="string" pos:start="237:42" pos:end="237:50">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



<cpp:if pos:start="241:1" pos:end="241:22">#<cpp:directive pos:start="241:2" pos:end="241:3">if</cpp:directive> <expr pos:start="241:5" pos:end="241:22"><name pos:start="241:5" pos:end="241:22">FF_API_PRIVATE_OPT</name></expr></cpp:if>

        <if_stmt pos:start="243:9" pos:end="258:0"><if pos:start="243:9" pos:end="251:9">if <condition pos:start="243:12" pos:end="243:58">(<expr pos:start="243:13" pos:end="243:57"><name pos:start="243:13" pos:end="243:19">dec_ctx</name> <operator pos:start="243:21" pos:end="243:22">&amp;&amp;</operator> <name pos:start="243:24" pos:end="243:52"><name pos:start="243:24" pos:end="243:30">dec_ctx</name><operator pos:start="243:31" pos:end="243:32">-&gt;</operator><name pos:start="243:33" pos:end="243:52">timecode_frame_start</name></name> <operator pos:start="243:54" pos:end="243:55">&gt;=</operator> <literal type="number" pos:start="243:57" pos:end="243:57">0</literal></expr>)</condition> <block pos:start="243:60" pos:end="251:9">{<block_content pos:start="245:13" pos:end="249:41">

            <decl_stmt pos:start="245:13" pos:end="245:45"><decl pos:start="245:13" pos:end="245:44"><type pos:start="245:13" pos:end="245:16"><name pos:start="245:13" pos:end="245:16">char</name></type> <name pos:start="245:18" pos:end="245:44"><name pos:start="245:18" pos:end="245:22">tcbuf</name><index pos:start="245:23" pos:end="245:44">[<expr pos:start="245:24" pos:end="245:43"><name pos:start="245:24" pos:end="245:43">AV_TIMECODE_STR_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:82"><expr pos:start="247:13" pos:end="247:81"><call pos:start="247:13" pos:end="247:81"><name pos:start="247:13" pos:end="247:43">av_timecode_make_mpeg_tc_string</name><argument_list pos:start="247:44" pos:end="247:81">(<argument pos:start="247:45" pos:end="247:49"><expr pos:start="247:45" pos:end="247:49"><name pos:start="247:45" pos:end="247:49">tcbuf</name></expr></argument>, <argument pos:start="247:52" pos:end="247:80"><expr pos:start="247:52" pos:end="247:80"><name pos:start="247:52" pos:end="247:80"><name pos:start="247:52" pos:end="247:58">dec_ctx</name><operator pos:start="247:59" pos:end="247:60">-&gt;</operator><name pos:start="247:61" pos:end="247:80">timecode_frame_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:41"><expr pos:start="249:13" pos:end="249:40"><call pos:start="249:13" pos:end="249:40"><name pos:start="249:13" pos:end="249:21">print_str</name><argument_list pos:start="249:22" pos:end="249:40">(<argument pos:start="249:23" pos:end="249:32"><expr pos:start="249:23" pos:end="249:32"><literal type="string" pos:start="249:23" pos:end="249:32">"timecode"</literal></expr></argument>, <argument pos:start="249:35" pos:end="249:39"><expr pos:start="249:35" pos:end="249:39"><name pos:start="249:35" pos:end="249:39">tcbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="251:11" pos:end="258:0">else <block pos:start="251:16" pos:end="258:0">{<block_content pos:start="253:13" pos:end="253:45">

            <expr_stmt pos:start="253:13" pos:end="253:45"><expr pos:start="253:13" pos:end="253:44"><call pos:start="253:13" pos:end="253:44"><name pos:start="253:13" pos:end="253:25">print_str_opt</name><argument_list pos:start="253:26" pos:end="253:44">(<argument pos:start="253:27" pos:end="253:36"><expr pos:start="253:27" pos:end="253:36"><literal type="string" pos:start="253:27" pos:end="253:36">"timecode"</literal></expr></argument>, <argument pos:start="253:39" pos:end="253:43"><expr pos:start="253:39" pos:end="253:43"><literal type="string" pos:start="253:39" pos:end="253:43">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="257:1" pos:end="257:6">#<cpp:directive pos:start="257:2" pos:end="257:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="259:9" pos:end="261:45"><if pos:start="259:9" pos:end="261:45">if <condition pos:start="259:12" pos:end="259:20">(<expr pos:start="259:13" pos:end="259:19"><name pos:start="259:13" pos:end="259:19">dec_ctx</name></expr>)</condition><block type="pseudo" pos:start="261:13" pos:end="261:45"><block_content pos:start="261:13" pos:end="261:45">

            <expr_stmt pos:start="261:13" pos:end="261:45"><expr pos:start="261:13" pos:end="261:44"><call pos:start="261:13" pos:end="261:44"><name pos:start="261:13" pos:end="261:21">print_int</name><argument_list pos:start="261:22" pos:end="261:44">(<argument pos:start="261:23" pos:end="261:28"><expr pos:start="261:23" pos:end="261:28"><literal type="string" pos:start="261:23" pos:end="261:28">"refs"</literal></expr></argument>, <argument pos:start="261:31" pos:end="261:43"><expr pos:start="261:31" pos:end="261:43"><name pos:start="261:31" pos:end="261:43"><name pos:start="261:31" pos:end="261:37">dec_ctx</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:43">refs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="263:9" pos:end="263:14">break;</break>



    <case pos:start="267:5" pos:end="267:28">case <expr pos:start="267:10" pos:end="267:27"><name pos:start="267:10" pos:end="267:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="269:9" pos:end="269:48"><expr pos:start="269:9" pos:end="269:47"><name pos:start="269:9" pos:end="269:9">s</name> <operator pos:start="269:11" pos:end="269:11">=</operator> <call pos:start="269:13" pos:end="269:47"><name pos:start="269:13" pos:end="269:34">av_get_sample_fmt_name</name><argument_list pos:start="269:35" pos:end="269:47">(<argument pos:start="269:36" pos:end="269:46"><expr pos:start="269:36" pos:end="269:46"><name pos:start="269:36" pos:end="269:46"><name pos:start="269:36" pos:end="269:38">par</name><operator pos:start="269:39" pos:end="269:40">-&gt;</operator><name pos:start="269:41" pos:end="269:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="273:54"><if pos:start="271:9" pos:end="271:46">if <condition pos:start="271:12" pos:end="271:14">(<expr pos:start="271:13" pos:end="271:13"><name pos:start="271:13" pos:end="271:13">s</name></expr>)</condition><block type="pseudo" pos:start="271:16" pos:end="271:46"><block_content pos:start="271:16" pos:end="271:46"> <expr_stmt pos:start="271:16" pos:end="271:46"><expr pos:start="271:16" pos:end="271:45"><call pos:start="271:16" pos:end="271:45"><name pos:start="271:16" pos:end="271:24">print_str</name>    <argument_list pos:start="271:29" pos:end="271:45">(<argument pos:start="271:30" pos:end="271:41"><expr pos:start="271:30" pos:end="271:41"><literal type="string" pos:start="271:30" pos:end="271:41">"sample_fmt"</literal></expr></argument>, <argument pos:start="271:44" pos:end="271:44"><expr pos:start="271:44" pos:end="271:44"><name pos:start="271:44" pos:end="271:44">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="273:9" pos:end="273:54">else<block type="pseudo" pos:start="273:16" pos:end="273:54"><block_content pos:start="273:16" pos:end="273:54">   <expr_stmt pos:start="273:16" pos:end="273:54"><expr pos:start="273:16" pos:end="273:53"><call pos:start="273:16" pos:end="273:53"><name pos:start="273:16" pos:end="273:28">print_str_opt</name><argument_list pos:start="273:29" pos:end="273:53">(<argument pos:start="273:30" pos:end="273:41"><expr pos:start="273:30" pos:end="273:41"><literal type="string" pos:start="273:30" pos:end="273:41">"sample_fmt"</literal></expr></argument>, <argument pos:start="273:44" pos:end="273:52"><expr pos:start="273:44" pos:end="273:52"><literal type="string" pos:start="273:44" pos:end="273:52">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:71"><expr pos:start="275:9" pos:end="275:70"><call pos:start="275:9" pos:end="275:70"><name pos:start="275:9" pos:end="275:17">print_val</name><argument_list pos:start="275:18" pos:end="275:70">(<argument pos:start="275:19" pos:end="275:31"><expr pos:start="275:19" pos:end="275:31"><literal type="string" pos:start="275:19" pos:end="275:31">"sample_rate"</literal></expr></argument>,     <argument pos:start="275:38" pos:end="275:53"><expr pos:start="275:38" pos:end="275:53"><name pos:start="275:38" pos:end="275:53"><name pos:start="275:38" pos:end="275:40">par</name><operator pos:start="275:41" pos:end="275:42">-&gt;</operator><name pos:start="275:43" pos:end="275:53">sample_rate</name></name></expr></argument>, <argument pos:start="275:56" pos:end="275:69"><expr pos:start="275:56" pos:end="275:69"><name pos:start="275:56" pos:end="275:69">unit_hertz_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:52"><expr pos:start="277:9" pos:end="277:51"><call pos:start="277:9" pos:end="277:51"><name pos:start="277:9" pos:end="277:17">print_int</name><argument_list pos:start="277:18" pos:end="277:51">(<argument pos:start="277:19" pos:end="277:28"><expr pos:start="277:19" pos:end="277:28"><literal type="string" pos:start="277:19" pos:end="277:28">"channels"</literal></expr></argument>,        <argument pos:start="277:38" pos:end="277:50"><expr pos:start="277:38" pos:end="277:50"><name pos:start="277:38" pos:end="277:50"><name pos:start="277:38" pos:end="277:40">par</name><operator pos:start="277:41" pos:end="277:42">-&gt;</operator><name pos:start="277:43" pos:end="277:50">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="281:9" pos:end="293:9"><if pos:start="281:9" pos:end="289:9">if <condition pos:start="281:12" pos:end="281:32">(<expr pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:15">par</name><operator pos:start="281:16" pos:end="281:17">-&gt;</operator><name pos:start="281:18" pos:end="281:31">channel_layout</name></name></expr>)</condition> <block pos:start="281:34" pos:end="289:9">{<block_content pos:start="283:13" pos:end="287:54">

            <expr_stmt pos:start="283:13" pos:end="283:35"><expr pos:start="283:13" pos:end="283:34"><call pos:start="283:13" pos:end="283:34"><name pos:start="283:13" pos:end="283:27">av_bprint_clear</name><argument_list pos:start="283:28" pos:end="283:34">(<argument pos:start="283:29" pos:end="283:33"><expr pos:start="283:29" pos:end="283:33"><operator pos:start="283:29" pos:end="283:29">&amp;</operator><name pos:start="283:30" pos:end="283:33">pbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="285:13" pos:end="285:80"><expr pos:start="285:13" pos:end="285:79"><call pos:start="285:13" pos:end="285:79"><name pos:start="285:13" pos:end="285:36">av_bprint_channel_layout</name><argument_list pos:start="285:37" pos:end="285:79">(<argument pos:start="285:38" pos:end="285:42"><expr pos:start="285:38" pos:end="285:42"><operator pos:start="285:38" pos:end="285:38">&amp;</operator><name pos:start="285:39" pos:end="285:42">pbuf</name></expr></argument>, <argument pos:start="285:45" pos:end="285:57"><expr pos:start="285:45" pos:end="285:57"><name pos:start="285:45" pos:end="285:57"><name pos:start="285:45" pos:end="285:47">par</name><operator pos:start="285:48" pos:end="285:49">-&gt;</operator><name pos:start="285:50" pos:end="285:57">channels</name></name></expr></argument>, <argument pos:start="285:60" pos:end="285:78"><expr pos:start="285:60" pos:end="285:78"><name pos:start="285:60" pos:end="285:78"><name pos:start="285:60" pos:end="285:62">par</name><operator pos:start="285:63" pos:end="285:64">-&gt;</operator><name pos:start="285:65" pos:end="285:78">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:54"><expr pos:start="287:13" pos:end="287:53"><call pos:start="287:13" pos:end="287:53"><name pos:start="287:13" pos:end="287:21">print_str</name>    <argument_list pos:start="287:26" pos:end="287:53">(<argument pos:start="287:27" pos:end="287:42"><expr pos:start="287:27" pos:end="287:42"><literal type="string" pos:start="287:27" pos:end="287:42">"channel_layout"</literal></expr></argument>, <argument pos:start="287:45" pos:end="287:52"><expr pos:start="287:45" pos:end="287:52"><name pos:start="287:45" pos:end="287:52"><name pos:start="287:45" pos:end="287:48">pbuf</name><operator pos:start="287:49" pos:end="287:49">.</operator><name pos:start="287:50" pos:end="287:52">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="293:9">else <block pos:start="289:16" pos:end="293:9">{<block_content pos:start="291:13" pos:end="291:55">

            <expr_stmt pos:start="291:13" pos:end="291:55"><expr pos:start="291:13" pos:end="291:54"><call pos:start="291:13" pos:end="291:54"><name pos:start="291:13" pos:end="291:25">print_str_opt</name><argument_list pos:start="291:26" pos:end="291:54">(<argument pos:start="291:27" pos:end="291:42"><expr pos:start="291:27" pos:end="291:42"><literal type="string" pos:start="291:27" pos:end="291:42">"channel_layout"</literal></expr></argument>, <argument pos:start="291:45" pos:end="291:53"><expr pos:start="291:45" pos:end="291:53"><literal type="string" pos:start="291:45" pos:end="291:53">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="297:9" pos:end="297:76"><expr pos:start="297:9" pos:end="297:75"><call pos:start="297:9" pos:end="297:75"><name pos:start="297:9" pos:end="297:17">print_int</name><argument_list pos:start="297:18" pos:end="297:75">(<argument pos:start="297:19" pos:end="297:35"><expr pos:start="297:19" pos:end="297:35"><literal type="string" pos:start="297:19" pos:end="297:35">"bits_per_sample"</literal></expr></argument>, <argument pos:start="297:38" pos:end="297:74"><expr pos:start="297:38" pos:end="297:74"><call pos:start="297:38" pos:end="297:74"><name pos:start="297:38" pos:end="297:59">av_get_bits_per_sample</name><argument_list pos:start="297:60" pos:end="297:74">(<argument pos:start="297:61" pos:end="297:73"><expr pos:start="297:61" pos:end="297:73"><name pos:start="297:61" pos:end="297:73"><name pos:start="297:61" pos:end="297:63">par</name><operator pos:start="297:64" pos:end="297:65">-&gt;</operator><name pos:start="297:66" pos:end="297:73">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="299:9" pos:end="299:14">break;</break>



    <case pos:start="303:5" pos:end="303:31">case <expr pos:start="303:10" pos:end="303:30"><name pos:start="303:10" pos:end="303:30">AVMEDIA_TYPE_SUBTITLE</name></expr>:</case>

        <if_stmt pos:start="305:9" pos:end="311:44"><if pos:start="305:9" pos:end="307:49">if <condition pos:start="305:12" pos:end="305:23">(<expr pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:15">par</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:22">width</name></name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="307:49"><block_content pos:start="307:13" pos:end="307:49">

            <expr_stmt pos:start="307:13" pos:end="307:49"><expr pos:start="307:13" pos:end="307:48"><call pos:start="307:13" pos:end="307:48"><name pos:start="307:13" pos:end="307:21">print_int</name><argument_list pos:start="307:22" pos:end="307:48">(<argument pos:start="307:23" pos:end="307:29"><expr pos:start="307:23" pos:end="307:29"><literal type="string" pos:start="307:23" pos:end="307:29">"width"</literal></expr></argument>,       <argument pos:start="307:38" pos:end="307:47"><expr pos:start="307:38" pos:end="307:47"><name pos:start="307:38" pos:end="307:47"><name pos:start="307:38" pos:end="307:40">par</name><operator pos:start="307:41" pos:end="307:42">-&gt;</operator><name pos:start="307:43" pos:end="307:47">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="309:9" pos:end="311:44">else<block type="pseudo" pos:start="311:13" pos:end="311:44"><block_content pos:start="311:13" pos:end="311:44">

            <expr_stmt pos:start="311:13" pos:end="311:44"><expr pos:start="311:13" pos:end="311:43"><call pos:start="311:13" pos:end="311:43"><name pos:start="311:13" pos:end="311:25">print_str_opt</name><argument_list pos:start="311:26" pos:end="311:43">(<argument pos:start="311:27" pos:end="311:33"><expr pos:start="311:27" pos:end="311:33"><literal type="string" pos:start="311:27" pos:end="311:33">"width"</literal></expr></argument>,   <argument pos:start="311:38" pos:end="311:42"><expr pos:start="311:38" pos:end="311:42"><literal type="string" pos:start="311:38" pos:end="311:42">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="313:9" pos:end="319:44"><if pos:start="313:9" pos:end="315:50">if <condition pos:start="313:12" pos:end="313:24">(<expr pos:start="313:13" pos:end="313:23"><name pos:start="313:13" pos:end="313:23"><name pos:start="313:13" pos:end="313:15">par</name><operator pos:start="313:16" pos:end="313:17">-&gt;</operator><name pos:start="313:18" pos:end="313:23">height</name></name></expr>)</condition><block type="pseudo" pos:start="315:13" pos:end="315:50"><block_content pos:start="315:13" pos:end="315:50">

            <expr_stmt pos:start="315:13" pos:end="315:50"><expr pos:start="315:13" pos:end="315:49"><call pos:start="315:13" pos:end="315:49"><name pos:start="315:13" pos:end="315:21">print_int</name><argument_list pos:start="315:22" pos:end="315:49">(<argument pos:start="315:23" pos:end="315:30"><expr pos:start="315:23" pos:end="315:30"><literal type="string" pos:start="315:23" pos:end="315:30">"height"</literal></expr></argument>,      <argument pos:start="315:38" pos:end="315:48"><expr pos:start="315:38" pos:end="315:48"><name pos:start="315:38" pos:end="315:48"><name pos:start="315:38" pos:end="315:40">par</name><operator pos:start="315:41" pos:end="315:42">-&gt;</operator><name pos:start="315:43" pos:end="315:48">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="317:9" pos:end="319:44">else<block type="pseudo" pos:start="319:13" pos:end="319:44"><block_content pos:start="319:13" pos:end="319:44">

            <expr_stmt pos:start="319:13" pos:end="319:44"><expr pos:start="319:13" pos:end="319:43"><call pos:start="319:13" pos:end="319:43"><name pos:start="319:13" pos:end="319:25">print_str_opt</name><argument_list pos:start="319:26" pos:end="319:43">(<argument pos:start="319:27" pos:end="319:34"><expr pos:start="319:27" pos:end="319:34"><literal type="string" pos:start="319:27" pos:end="319:34">"height"</literal></expr></argument>,  <argument pos:start="319:38" pos:end="319:42"><expr pos:start="319:38" pos:end="319:42"><literal type="string" pos:start="319:38" pos:end="319:42">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="321:9" pos:end="321:14">break;</break>

    </block_content>}</block></switch>



    <if_stmt pos:start="327:5" pos:end="347:5"><if pos:start="327:5" pos:end="347:5">if <condition pos:start="327:8" pos:end="327:85">(<expr pos:start="327:9" pos:end="327:84"><name pos:start="327:9" pos:end="327:15">dec_ctx</name> <operator pos:start="327:17" pos:end="327:18">&amp;&amp;</operator> <name pos:start="327:20" pos:end="327:33"><name pos:start="327:20" pos:end="327:26">dec_ctx</name><operator pos:start="327:27" pos:end="327:28">-&gt;</operator><name pos:start="327:29" pos:end="327:33">codec</name></name> <operator pos:start="327:35" pos:end="327:36">&amp;&amp;</operator> <name pos:start="327:38" pos:end="327:63"><name pos:start="327:38" pos:end="327:44">dec_ctx</name><operator pos:start="327:45" pos:end="327:46">-&gt;</operator><name pos:start="327:47" pos:end="327:51">codec</name><operator pos:start="327:52" pos:end="327:53">-&gt;</operator><name pos:start="327:54" pos:end="327:63">priv_class</name></name> <operator pos:start="327:65" pos:end="327:66">&amp;&amp;</operator> <name pos:start="327:68" pos:end="327:84">show_private_data</name></expr>)</condition> <block pos:start="327:87" pos:end="347:5">{<block_content pos:start="329:9" pos:end="345:9">

        <decl_stmt pos:start="329:9" pos:end="329:35"><decl pos:start="329:9" pos:end="329:34"><type pos:start="329:9" pos:end="329:24"><specifier pos:start="329:9" pos:end="329:13">const</specifier> <name pos:start="329:15" pos:end="329:22">AVOption</name> <modifier pos:start="329:24" pos:end="329:24">*</modifier></type><name pos:start="329:25" pos:end="329:27">opt</name> <init pos:start="329:29" pos:end="329:34">= <expr pos:start="329:31" pos:end="329:34"><name pos:start="329:31" pos:end="329:34">NULL</name></expr></init></decl>;</decl_stmt>

        <while pos:start="331:9" pos:end="345:9">while <condition pos:start="331:15" pos:end="331:57">(<expr pos:start="331:16" pos:end="331:56"><name pos:start="331:16" pos:end="331:18">opt</name> <operator pos:start="331:20" pos:end="331:20">=</operator> <call pos:start="331:22" pos:end="331:56"><name pos:start="331:22" pos:end="331:32">av_opt_next</name><argument_list pos:start="331:33" pos:end="331:56">(<argument pos:start="331:34" pos:end="331:51"><expr pos:start="331:34" pos:end="331:51"><name pos:start="331:34" pos:end="331:51"><name pos:start="331:34" pos:end="331:40">dec_ctx</name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:51">priv_data</name></name></expr></argument>,<argument pos:start="331:53" pos:end="331:55"><expr pos:start="331:53" pos:end="331:55"><name pos:start="331:53" pos:end="331:55">opt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:59" pos:end="345:9">{<block_content pos:start="333:13" pos:end="343:13">

            <decl_stmt pos:start="333:13" pos:end="333:25"><decl pos:start="333:13" pos:end="333:24"><type pos:start="333:13" pos:end="333:21"><name pos:start="333:13" pos:end="333:19">uint8_t</name> <modifier pos:start="333:21" pos:end="333:21">*</modifier></type><name pos:start="333:22" pos:end="333:24">str</name></decl>;</decl_stmt>

            <if_stmt pos:start="335:13" pos:end="335:37"><if pos:start="335:13" pos:end="335:37">if <condition pos:start="335:16" pos:end="335:27">(<expr pos:start="335:17" pos:end="335:26"><name pos:start="335:17" pos:end="335:26"><name pos:start="335:17" pos:end="335:19">opt</name><operator pos:start="335:20" pos:end="335:21">-&gt;</operator><name pos:start="335:22" pos:end="335:26">flags</name></name></expr>)</condition><block type="pseudo" pos:start="335:29" pos:end="335:37"><block_content pos:start="335:29" pos:end="335:37"> <continue pos:start="335:29" pos:end="335:37">continue;</continue></block_content></block></if></if_stmt>

            <if_stmt pos:start="337:13" pos:end="343:13"><if pos:start="337:13" pos:end="343:13">if <condition pos:start="337:16" pos:end="337:72">(<expr pos:start="337:17" pos:end="337:71"><call pos:start="337:17" pos:end="337:66"><name pos:start="337:17" pos:end="337:26">av_opt_get</name><argument_list pos:start="337:27" pos:end="337:66">(<argument pos:start="337:28" pos:end="337:45"><expr pos:start="337:28" pos:end="337:45"><name pos:start="337:28" pos:end="337:45"><name pos:start="337:28" pos:end="337:34">dec_ctx</name><operator pos:start="337:35" pos:end="337:36">-&gt;</operator><name pos:start="337:37" pos:end="337:45">priv_data</name></name></expr></argument>, <argument pos:start="337:48" pos:end="337:56"><expr pos:start="337:48" pos:end="337:56"><name pos:start="337:48" pos:end="337:56"><name pos:start="337:48" pos:end="337:50">opt</name><operator pos:start="337:51" pos:end="337:52">-&gt;</operator><name pos:start="337:53" pos:end="337:56">name</name></name></expr></argument>, <argument pos:start="337:59" pos:end="337:59"><expr pos:start="337:59" pos:end="337:59"><literal type="number" pos:start="337:59" pos:end="337:59">0</literal></expr></argument>, <argument pos:start="337:62" pos:end="337:65"><expr pos:start="337:62" pos:end="337:65"><operator pos:start="337:62" pos:end="337:62">&amp;</operator><name pos:start="337:63" pos:end="337:65">str</name></expr></argument>)</argument_list></call> <operator pos:start="337:68" pos:end="337:69">&gt;=</operator> <literal type="number" pos:start="337:71" pos:end="337:71">0</literal></expr>)</condition> <block pos:start="337:74" pos:end="343:13">{<block_content pos:start="339:17" pos:end="341:29">

                <expr_stmt pos:start="339:17" pos:end="339:42"><expr pos:start="339:17" pos:end="339:41"><call pos:start="339:17" pos:end="339:41"><name pos:start="339:17" pos:end="339:25">print_str</name><argument_list pos:start="339:26" pos:end="339:41">(<argument pos:start="339:27" pos:end="339:35"><expr pos:start="339:27" pos:end="339:35"><name pos:start="339:27" pos:end="339:35"><name pos:start="339:27" pos:end="339:29">opt</name><operator pos:start="339:30" pos:end="339:31">-&gt;</operator><name pos:start="339:32" pos:end="339:35">name</name></name></expr></argument>, <argument pos:start="339:38" pos:end="339:40"><expr pos:start="339:38" pos:end="339:40"><name pos:start="339:38" pos:end="339:40">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:29"><expr pos:start="341:17" pos:end="341:28"><call pos:start="341:17" pos:end="341:28"><name pos:start="341:17" pos:end="341:23">av_free</name><argument_list pos:start="341:24" pos:end="341:28">(<argument pos:start="341:25" pos:end="341:27"><expr pos:start="341:25" pos:end="341:27"><name pos:start="341:25" pos:end="341:27">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="351:5" pos:end="353:77"><if pos:start="351:5" pos:end="351:90">if <condition pos:start="351:8" pos:end="351:49">(<expr pos:start="351:9" pos:end="351:48"><name pos:start="351:9" pos:end="351:31"><name pos:start="351:9" pos:end="351:15">fmt_ctx</name><operator pos:start="351:16" pos:end="351:17">-&gt;</operator><name pos:start="351:18" pos:end="351:24">iformat</name><operator pos:start="351:25" pos:end="351:26">-&gt;</operator><name pos:start="351:27" pos:end="351:31">flags</name></name> <operator pos:start="351:33" pos:end="351:33">&amp;</operator> <name pos:start="351:35" pos:end="351:48">AVFMT_SHOW_IDS</name></expr>)</condition><block type="pseudo" pos:start="351:51" pos:end="351:90"><block_content pos:start="351:51" pos:end="351:90"> <expr_stmt pos:start="351:51" pos:end="351:90"><expr pos:start="351:51" pos:end="351:89"><call pos:start="351:51" pos:end="351:89"><name pos:start="351:51" pos:end="351:59">print_fmt</name>    <argument_list pos:start="351:64" pos:end="351:89">(<argument pos:start="351:65" pos:end="351:68"><expr pos:start="351:65" pos:end="351:68"><literal type="string" pos:start="351:65" pos:end="351:68">"id"</literal></expr></argument>, <argument pos:start="351:71" pos:end="351:76"><expr pos:start="351:71" pos:end="351:76"><literal type="string" pos:start="351:71" pos:end="351:76">"0x%x"</literal></expr></argument>, <argument pos:start="351:79" pos:end="351:88"><expr pos:start="351:79" pos:end="351:88"><name pos:start="351:79" pos:end="351:88"><name pos:start="351:79" pos:end="351:84">stream</name><operator pos:start="351:85" pos:end="351:86">-&gt;</operator><name pos:start="351:87" pos:end="351:88">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="353:5" pos:end="353:77">else<block type="pseudo" pos:start="353:51" pos:end="353:77"><block_content pos:start="353:51" pos:end="353:77">                                          <expr_stmt pos:start="353:51" pos:end="353:77"><expr pos:start="353:51" pos:end="353:76"><call pos:start="353:51" pos:end="353:76"><name pos:start="353:51" pos:end="353:63">print_str_opt</name><argument_list pos:start="353:64" pos:end="353:76">(<argument pos:start="353:65" pos:end="353:68"><expr pos:start="353:65" pos:end="353:68"><literal type="string" pos:start="353:65" pos:end="353:68">"id"</literal></expr></argument>, <argument pos:start="353:71" pos:end="353:75"><expr pos:start="353:71" pos:end="353:75"><literal type="string" pos:start="353:71" pos:end="353:75">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="355:5" pos:end="355:59"><expr pos:start="355:5" pos:end="355:58"><call pos:start="355:5" pos:end="355:58"><name pos:start="355:5" pos:end="355:11">print_q</name><argument_list pos:start="355:12" pos:end="355:58">(<argument pos:start="355:13" pos:end="355:26"><expr pos:start="355:13" pos:end="355:26"><literal type="string" pos:start="355:13" pos:end="355:26">"r_frame_rate"</literal></expr></argument>,   <argument pos:start="355:31" pos:end="355:50"><expr pos:start="355:31" pos:end="355:50"><name pos:start="355:31" pos:end="355:50"><name pos:start="355:31" pos:end="355:36">stream</name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:50">r_frame_rate</name></name></expr></argument>,   <argument pos:start="355:55" pos:end="355:57"><expr pos:start="355:55" pos:end="355:57"><literal type="char" pos:start="355:55" pos:end="355:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="357:5" pos:end="357:59"><expr pos:start="357:5" pos:end="357:58"><call pos:start="357:5" pos:end="357:58"><name pos:start="357:5" pos:end="357:11">print_q</name><argument_list pos:start="357:12" pos:end="357:58">(<argument pos:start="357:13" pos:end="357:28"><expr pos:start="357:13" pos:end="357:28"><literal type="string" pos:start="357:13" pos:end="357:28">"avg_frame_rate"</literal></expr></argument>, <argument pos:start="357:31" pos:end="357:52"><expr pos:start="357:31" pos:end="357:52"><name pos:start="357:31" pos:end="357:52"><name pos:start="357:31" pos:end="357:36">stream</name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:52">avg_frame_rate</name></name></expr></argument>, <argument pos:start="357:55" pos:end="357:57"><expr pos:start="357:55" pos:end="357:57"><literal type="char" pos:start="357:55" pos:end="357:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="359:5" pos:end="359:59"><expr pos:start="359:5" pos:end="359:58"><call pos:start="359:5" pos:end="359:58"><name pos:start="359:5" pos:end="359:11">print_q</name><argument_list pos:start="359:12" pos:end="359:58">(<argument pos:start="359:13" pos:end="359:23"><expr pos:start="359:13" pos:end="359:23"><literal type="string" pos:start="359:13" pos:end="359:23">"time_base"</literal></expr></argument>,      <argument pos:start="359:31" pos:end="359:47"><expr pos:start="359:31" pos:end="359:47"><name pos:start="359:31" pos:end="359:47"><name pos:start="359:31" pos:end="359:36">stream</name><operator pos:start="359:37" pos:end="359:38">-&gt;</operator><name pos:start="359:39" pos:end="359:47">time_base</name></name></expr></argument>,      <argument pos:start="359:55" pos:end="359:57"><expr pos:start="359:55" pos:end="359:57"><literal type="char" pos:start="359:55" pos:end="359:57">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="361:5" pos:end="361:50"><expr pos:start="361:5" pos:end="361:49"><call pos:start="361:5" pos:end="361:49"><name pos:start="361:5" pos:end="361:12">print_ts</name>  <argument_list pos:start="361:15" pos:end="361:49">(<argument pos:start="361:16" pos:end="361:26"><expr pos:start="361:16" pos:end="361:26"><literal type="string" pos:start="361:16" pos:end="361:26">"start_pts"</literal></expr></argument>,   <argument pos:start="361:31" pos:end="361:48"><expr pos:start="361:31" pos:end="361:48"><name pos:start="361:31" pos:end="361:48"><name pos:start="361:31" pos:end="361:36">stream</name><operator pos:start="361:37" pos:end="361:38">-&gt;</operator><name pos:start="361:39" pos:end="361:48">start_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="363:5" pos:end="363:70"><expr pos:start="363:5" pos:end="363:69"><call pos:start="363:5" pos:end="363:69"><name pos:start="363:5" pos:end="363:14">print_time</name><argument_list pos:start="363:15" pos:end="363:69">(<argument pos:start="363:16" pos:end="363:27"><expr pos:start="363:16" pos:end="363:27"><literal type="string" pos:start="363:16" pos:end="363:27">"start_time"</literal></expr></argument>,  <argument pos:start="363:31" pos:end="363:48"><expr pos:start="363:31" pos:end="363:48"><name pos:start="363:31" pos:end="363:48"><name pos:start="363:31" pos:end="363:36">stream</name><operator pos:start="363:37" pos:end="363:38">-&gt;</operator><name pos:start="363:39" pos:end="363:48">start_time</name></name></expr></argument>, <argument pos:start="363:51" pos:end="363:68"><expr pos:start="363:51" pos:end="363:68"><operator pos:start="363:51" pos:end="363:51">&amp;</operator><name pos:start="363:52" pos:end="363:68"><name pos:start="363:52" pos:end="363:57">stream</name><operator pos:start="363:58" pos:end="363:59">-&gt;</operator><name pos:start="363:60" pos:end="363:68">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="365:5" pos:end="365:48"><expr pos:start="365:5" pos:end="365:47"><call pos:start="365:5" pos:end="365:47"><name pos:start="365:5" pos:end="365:12">print_ts</name>  <argument_list pos:start="365:15" pos:end="365:47">(<argument pos:start="365:16" pos:end="365:28"><expr pos:start="365:16" pos:end="365:28"><literal type="string" pos:start="365:16" pos:end="365:28">"duration_ts"</literal></expr></argument>, <argument pos:start="365:31" pos:end="365:46"><expr pos:start="365:31" pos:end="365:46"><name pos:start="365:31" pos:end="365:46"><name pos:start="365:31" pos:end="365:36">stream</name><operator pos:start="365:37" pos:end="365:38">-&gt;</operator><name pos:start="365:39" pos:end="365:46">duration</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="367:5" pos:end="367:68"><expr pos:start="367:5" pos:end="367:67"><call pos:start="367:5" pos:end="367:67"><name pos:start="367:5" pos:end="367:14">print_time</name><argument_list pos:start="367:15" pos:end="367:67">(<argument pos:start="367:16" pos:end="367:25"><expr pos:start="367:16" pos:end="367:25"><literal type="string" pos:start="367:16" pos:end="367:25">"duration"</literal></expr></argument>,    <argument pos:start="367:31" pos:end="367:46"><expr pos:start="367:31" pos:end="367:46"><name pos:start="367:31" pos:end="367:46"><name pos:start="367:31" pos:end="367:36">stream</name><operator pos:start="367:37" pos:end="367:38">-&gt;</operator><name pos:start="367:39" pos:end="367:46">duration</name></name></expr></argument>, <argument pos:start="367:49" pos:end="367:66"><expr pos:start="367:49" pos:end="367:66"><operator pos:start="367:49" pos:end="367:49">&amp;</operator><name pos:start="367:50" pos:end="367:66"><name pos:start="367:50" pos:end="367:55">stream</name><operator pos:start="367:56" pos:end="367:57">-&gt;</operator><name pos:start="367:58" pos:end="367:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="369:5" pos:end="374:0"><if pos:start="369:5" pos:end="369:97">if <condition pos:start="369:8" pos:end="369:26">(<expr pos:start="369:9" pos:end="369:25"><name pos:start="369:9" pos:end="369:21"><name pos:start="369:9" pos:end="369:11">par</name><operator pos:start="369:12" pos:end="369:13">-&gt;</operator><name pos:start="369:14" pos:end="369:21">bit_rate</name></name> <operator pos:start="369:23" pos:end="369:23">&gt;</operator> <literal type="number" pos:start="369:25" pos:end="369:25">0</literal></expr>)</condition><block type="pseudo" pos:start="369:32" pos:end="369:97"><block_content pos:start="369:32" pos:end="369:97">     <expr_stmt pos:start="369:32" pos:end="369:97"><expr pos:start="369:32" pos:end="369:96"><call pos:start="369:32" pos:end="369:96"><name pos:start="369:32" pos:end="369:40">print_val</name>    <argument_list pos:start="369:45" pos:end="369:96">(<argument pos:start="369:46" pos:end="369:55"><expr pos:start="369:46" pos:end="369:55"><literal type="string" pos:start="369:46" pos:end="369:55">"bit_rate"</literal></expr></argument>, <argument pos:start="369:58" pos:end="369:70"><expr pos:start="369:58" pos:end="369:70"><name pos:start="369:58" pos:end="369:70"><name pos:start="369:58" pos:end="369:60">par</name><operator pos:start="369:61" pos:end="369:62">-&gt;</operator><name pos:start="369:63" pos:end="369:70">bit_rate</name></name></expr></argument>, <argument pos:start="369:73" pos:end="369:95"><expr pos:start="369:73" pos:end="369:95"><name pos:start="369:73" pos:end="369:95">unit_bit_per_second_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="371:5" pos:end="374:0">else<block type="pseudo" pos:start="371:32" pos:end="374:0"><block_content pos:start="371:32" pos:end="374:0">                       <expr_stmt pos:start="371:32" pos:end="374:0"><expr pos:start="371:32" pos:end="371:63"><call pos:start="371:32" pos:end="371:63"><name pos:start="371:32" pos:end="371:44">print_str_opt</name><argument_list pos:start="371:45" pos:end="371:63">(<argument pos:start="371:46" pos:end="371:55"><expr pos:start="371:46" pos:end="371:55"><literal type="string" pos:start="371:46" pos:end="371:55">"bit_rate"</literal></expr></argument>, <argument pos:start="371:58" pos:end="371:62"><expr pos:start="371:58" pos:end="371:62"><literal type="string" pos:start="371:58" pos:end="371:62">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:if pos:start="373:1" pos:end="373:21">#<cpp:directive pos:start="373:2" pos:end="373:3">if</cpp:directive> <expr pos:start="373:5" pos:end="373:21"><name pos:start="373:5" pos:end="373:21">FF_API_LAVF_AVCTX</name></expr></cpp:if>

    <if_stmt pos:start="375:5" pos:end="380:0"><if pos:start="375:5" pos:end="375:120">if <condition pos:start="375:8" pos:end="375:39">(<expr pos:start="375:9" pos:end="375:38"><name pos:start="375:9" pos:end="375:34"><name pos:start="375:9" pos:end="375:14">stream</name><operator pos:start="375:15" pos:end="375:16">-&gt;</operator><name pos:start="375:17" pos:end="375:21">codec</name><operator pos:start="375:22" pos:end="375:23">-&gt;</operator><name pos:start="375:24" pos:end="375:34">rc_max_rate</name></name> <operator pos:start="375:36" pos:end="375:36">&gt;</operator> <literal type="number" pos:start="375:38" pos:end="375:38">0</literal></expr>)</condition><block type="pseudo" pos:start="375:41" pos:end="375:120"><block_content pos:start="375:41" pos:end="375:120"> <expr_stmt pos:start="375:41" pos:end="375:120"><expr pos:start="375:41" pos:end="375:119"><call pos:start="375:41" pos:end="375:119"><name pos:start="375:41" pos:end="375:49">print_val</name> <argument_list pos:start="375:51" pos:end="375:119">(<argument pos:start="375:52" pos:end="375:65"><expr pos:start="375:52" pos:end="375:65"><literal type="string" pos:start="375:52" pos:end="375:65">"max_bit_rate"</literal></expr></argument>, <argument pos:start="375:68" pos:end="375:93"><expr pos:start="375:68" pos:end="375:93"><name pos:start="375:68" pos:end="375:93"><name pos:start="375:68" pos:end="375:73">stream</name><operator pos:start="375:74" pos:end="375:75">-&gt;</operator><name pos:start="375:76" pos:end="375:80">codec</name><operator pos:start="375:81" pos:end="375:82">-&gt;</operator><name pos:start="375:83" pos:end="375:93">rc_max_rate</name></name></expr></argument>, <argument pos:start="375:96" pos:end="375:118"><expr pos:start="375:96" pos:end="375:118"><name pos:start="375:96" pos:end="375:118">unit_bit_per_second_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="377:5" pos:end="380:0">else<block type="pseudo" pos:start="377:41" pos:end="380:0"><block_content pos:start="377:41" pos:end="380:0">                                <expr_stmt pos:start="377:41" pos:end="380:0"><expr pos:start="377:41" pos:end="377:76"><call pos:start="377:41" pos:end="377:76"><name pos:start="377:41" pos:end="377:53">print_str_opt</name><argument_list pos:start="377:54" pos:end="377:76">(<argument pos:start="377:55" pos:end="377:68"><expr pos:start="377:55" pos:end="377:68"><literal type="string" pos:start="377:55" pos:end="377:68">"max_bit_rate"</literal></expr></argument>, <argument pos:start="377:71" pos:end="377:75"><expr pos:start="377:71" pos:end="377:75"><literal type="string" pos:start="377:71" pos:end="377:75">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="379:1" pos:end="379:6">#<cpp:directive pos:start="379:2" pos:end="379:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="381:5" pos:end="383:97"><if pos:start="381:5" pos:end="381:122">if <condition pos:start="381:8" pos:end="381:52">(<expr pos:start="381:9" pos:end="381:51"><name pos:start="381:9" pos:end="381:15">dec_ctx</name> <operator pos:start="381:17" pos:end="381:18">&amp;&amp;</operator> <name pos:start="381:20" pos:end="381:47"><name pos:start="381:20" pos:end="381:26">dec_ctx</name><operator pos:start="381:27" pos:end="381:28">-&gt;</operator><name pos:start="381:29" pos:end="381:47">bits_per_raw_sample</name></name> <operator pos:start="381:49" pos:end="381:49">&gt;</operator> <literal type="number" pos:start="381:51" pos:end="381:51">0</literal></expr>)</condition><block type="pseudo" pos:start="381:54" pos:end="381:122"><block_content pos:start="381:54" pos:end="381:122"> <expr_stmt pos:start="381:54" pos:end="381:122"><expr pos:start="381:54" pos:end="381:121"><call pos:start="381:54" pos:end="381:121"><name pos:start="381:54" pos:end="381:62">print_fmt</name><argument_list pos:start="381:63" pos:end="381:121">(<argument pos:start="381:64" pos:end="381:84"><expr pos:start="381:64" pos:end="381:84"><literal type="string" pos:start="381:64" pos:end="381:84">"bits_per_raw_sample"</literal></expr></argument>, <argument pos:start="381:87" pos:end="381:90"><expr pos:start="381:87" pos:end="381:90"><literal type="string" pos:start="381:87" pos:end="381:90">"%d"</literal></expr></argument>, <argument pos:start="381:93" pos:end="381:120"><expr pos:start="381:93" pos:end="381:120"><name pos:start="381:93" pos:end="381:120"><name pos:start="381:93" pos:end="381:99">dec_ctx</name><operator pos:start="381:100" pos:end="381:101">-&gt;</operator><name pos:start="381:102" pos:end="381:120">bits_per_raw_sample</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="383:5" pos:end="383:97">else<block type="pseudo" pos:start="383:54" pos:end="383:97"><block_content pos:start="383:54" pos:end="383:97">                                             <expr_stmt pos:start="383:54" pos:end="383:97"><expr pos:start="383:54" pos:end="383:96"><call pos:start="383:54" pos:end="383:96"><name pos:start="383:54" pos:end="383:66">print_str_opt</name><argument_list pos:start="383:67" pos:end="383:96">(<argument pos:start="383:68" pos:end="383:88"><expr pos:start="383:68" pos:end="383:88"><literal type="string" pos:start="383:68" pos:end="383:88">"bits_per_raw_sample"</literal></expr></argument>, <argument pos:start="383:91" pos:end="383:95"><expr pos:start="383:91" pos:end="383:95"><literal type="string" pos:start="383:91" pos:end="383:95">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="385:5" pos:end="387:61"><if pos:start="385:5" pos:end="385:84">if <condition pos:start="385:8" pos:end="385:26">(<expr pos:start="385:9" pos:end="385:25"><name pos:start="385:9" pos:end="385:25"><name pos:start="385:9" pos:end="385:14">stream</name><operator pos:start="385:15" pos:end="385:16">-&gt;</operator><name pos:start="385:17" pos:end="385:25">nb_frames</name></name></expr>)</condition><block type="pseudo" pos:start="385:28" pos:end="385:84"><block_content pos:start="385:28" pos:end="385:84"> <expr_stmt pos:start="385:28" pos:end="385:84"><expr pos:start="385:28" pos:end="385:83"><call pos:start="385:28" pos:end="385:83"><name pos:start="385:28" pos:end="385:36">print_fmt</name>    <argument_list pos:start="385:41" pos:end="385:83">(<argument pos:start="385:42" pos:end="385:52"><expr pos:start="385:42" pos:end="385:52"><literal type="string" pos:start="385:42" pos:end="385:52">"nb_frames"</literal></expr></argument>, <argument pos:start="385:55" pos:end="385:63"><expr pos:start="385:55" pos:end="385:63"><literal type="string" pos:start="385:55" pos:end="385:57">"%"</literal><name pos:start="385:58" pos:end="385:63">PRId64</name></expr></argument>, <argument pos:start="385:66" pos:end="385:82"><expr pos:start="385:66" pos:end="385:82"><name pos:start="385:66" pos:end="385:82"><name pos:start="385:66" pos:end="385:71">stream</name><operator pos:start="385:72" pos:end="385:73">-&gt;</operator><name pos:start="385:74" pos:end="385:82">nb_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="387:5" pos:end="387:61">else<block type="pseudo" pos:start="387:28" pos:end="387:61"><block_content pos:start="387:28" pos:end="387:61">                   <expr_stmt pos:start="387:28" pos:end="387:61"><expr pos:start="387:28" pos:end="387:60"><call pos:start="387:28" pos:end="387:60"><name pos:start="387:28" pos:end="387:40">print_str_opt</name><argument_list pos:start="387:41" pos:end="387:60">(<argument pos:start="387:42" pos:end="387:52"><expr pos:start="387:42" pos:end="387:52"><literal type="string" pos:start="387:42" pos:end="387:52">"nb_frames"</literal></expr></argument>, <argument pos:start="387:55" pos:end="387:59"><expr pos:start="387:55" pos:end="387:59"><literal type="string" pos:start="387:55" pos:end="387:59">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="389:5" pos:end="391:79"><if pos:start="389:5" pos:end="389:114">if <condition pos:start="389:8" pos:end="389:38">(<expr pos:start="389:9" pos:end="389:37"><name pos:start="389:9" pos:end="389:37"><name pos:start="389:9" pos:end="389:25">nb_streams_frames</name><index pos:start="389:26" pos:end="389:37">[<expr pos:start="389:27" pos:end="389:36"><name pos:start="389:27" pos:end="389:36">stream_idx</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="389:41" pos:end="389:114"><block_content pos:start="389:41" pos:end="389:114">  <expr_stmt pos:start="389:41" pos:end="389:114"><expr pos:start="389:41" pos:end="389:113"><call pos:start="389:41" pos:end="389:113"><name pos:start="389:41" pos:end="389:49">print_fmt</name>    <argument_list pos:start="389:54" pos:end="389:113">(<argument pos:start="389:55" pos:end="389:70"><expr pos:start="389:55" pos:end="389:70"><literal type="string" pos:start="389:55" pos:end="389:70">"nb_read_frames"</literal></expr></argument>, <argument pos:start="389:73" pos:end="389:81"><expr pos:start="389:73" pos:end="389:81"><literal type="string" pos:start="389:73" pos:end="389:75">"%"</literal><name pos:start="389:76" pos:end="389:81">PRIu64</name></expr></argument>, <argument pos:start="389:84" pos:end="389:112"><expr pos:start="389:84" pos:end="389:112"><name pos:start="389:84" pos:end="389:112"><name pos:start="389:84" pos:end="389:100">nb_streams_frames</name><index pos:start="389:101" pos:end="389:112">[<expr pos:start="389:102" pos:end="389:111"><name pos:start="389:102" pos:end="389:111">stream_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="391:5" pos:end="391:79">else<block type="pseudo" pos:start="391:41" pos:end="391:79"><block_content pos:start="391:41" pos:end="391:79">                                <expr_stmt pos:start="391:41" pos:end="391:79"><expr pos:start="391:41" pos:end="391:78"><call pos:start="391:41" pos:end="391:78"><name pos:start="391:41" pos:end="391:53">print_str_opt</name><argument_list pos:start="391:54" pos:end="391:78">(<argument pos:start="391:55" pos:end="391:70"><expr pos:start="391:55" pos:end="391:70"><literal type="string" pos:start="391:55" pos:end="391:70">"nb_read_frames"</literal></expr></argument>, <argument pos:start="391:73" pos:end="391:77"><expr pos:start="391:73" pos:end="391:77"><literal type="string" pos:start="391:73" pos:end="391:77">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="393:5" pos:end="395:80"><if pos:start="393:5" pos:end="393:116">if <condition pos:start="393:8" pos:end="393:39">(<expr pos:start="393:9" pos:end="393:38"><name pos:start="393:9" pos:end="393:38"><name pos:start="393:9" pos:end="393:26">nb_streams_packets</name><index pos:start="393:27" pos:end="393:38">[<expr pos:start="393:28" pos:end="393:37"><name pos:start="393:28" pos:end="393:37">stream_idx</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="393:41" pos:end="393:116"><block_content pos:start="393:41" pos:end="393:116"> <expr_stmt pos:start="393:41" pos:end="393:116"><expr pos:start="393:41" pos:end="393:115"><call pos:start="393:41" pos:end="393:115"><name pos:start="393:41" pos:end="393:49">print_fmt</name>    <argument_list pos:start="393:54" pos:end="393:115">(<argument pos:start="393:55" pos:end="393:71"><expr pos:start="393:55" pos:end="393:71"><literal type="string" pos:start="393:55" pos:end="393:71">"nb_read_packets"</literal></expr></argument>, <argument pos:start="393:74" pos:end="393:82"><expr pos:start="393:74" pos:end="393:82"><literal type="string" pos:start="393:74" pos:end="393:76">"%"</literal><name pos:start="393:77" pos:end="393:82">PRIu64</name></expr></argument>, <argument pos:start="393:85" pos:end="393:114"><expr pos:start="393:85" pos:end="393:114"><name pos:start="393:85" pos:end="393:114"><name pos:start="393:85" pos:end="393:102">nb_streams_packets</name><index pos:start="393:103" pos:end="393:114">[<expr pos:start="393:104" pos:end="393:113"><name pos:start="393:104" pos:end="393:113">stream_idx</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="395:5" pos:end="395:80">else<block type="pseudo" pos:start="395:41" pos:end="395:80"><block_content pos:start="395:41" pos:end="395:80">                                <expr_stmt pos:start="395:41" pos:end="395:80"><expr pos:start="395:41" pos:end="395:79"><call pos:start="395:41" pos:end="395:79"><name pos:start="395:41" pos:end="395:53">print_str_opt</name><argument_list pos:start="395:54" pos:end="395:79">(<argument pos:start="395:55" pos:end="395:71"><expr pos:start="395:55" pos:end="395:71"><literal type="string" pos:start="395:55" pos:end="395:71">"nb_read_packets"</literal></expr></argument>, <argument pos:start="395:74" pos:end="395:78"><expr pos:start="395:74" pos:end="395:78"><literal type="string" pos:start="395:74" pos:end="395:78">"N/A"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="397:5" pos:end="401:63"><if pos:start="397:5" pos:end="401:63">if <condition pos:start="397:8" pos:end="397:21">(<expr pos:start="397:9" pos:end="397:20"><name pos:start="397:9" pos:end="397:20">do_show_data</name></expr>)</condition><block type="pseudo" pos:start="399:9" pos:end="401:63"><block_content pos:start="399:9" pos:end="401:63">

        <expr_stmt pos:start="399:9" pos:end="401:63"><expr pos:start="399:9" pos:end="401:62"><call pos:start="399:9" pos:end="401:62"><name pos:start="399:9" pos:end="399:25">writer_print_data</name><argument_list pos:start="399:26" pos:end="401:62">(<argument pos:start="399:27" pos:end="399:27"><expr pos:start="399:27" pos:end="399:27"><name pos:start="399:27" pos:end="399:27">w</name></expr></argument>, <argument pos:start="399:30" pos:end="399:40"><expr pos:start="399:30" pos:end="399:40"><literal type="string" pos:start="399:30" pos:end="399:40">"extradata"</literal></expr></argument>, <argument pos:start="399:43" pos:end="399:56"><expr pos:start="399:43" pos:end="399:56"><name pos:start="399:43" pos:end="399:56"><name pos:start="399:43" pos:end="399:45">par</name><operator pos:start="399:46" pos:end="399:47">-&gt;</operator><name pos:start="399:48" pos:end="399:56">extradata</name></name></expr></argument>,

                                          <argument pos:start="401:43" pos:end="401:61"><expr pos:start="401:43" pos:end="401:61"><name pos:start="401:43" pos:end="401:61"><name pos:start="401:43" pos:end="401:45">par</name><operator pos:start="401:46" pos:end="401:47">-&gt;</operator><name pos:start="401:48" pos:end="401:61">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="403:5" pos:end="416:0"><expr pos:start="403:5" pos:end="405:68"><call pos:start="403:5" pos:end="405:68"><name pos:start="403:5" pos:end="403:26">writer_print_data_hash</name><argument_list pos:start="403:27" pos:end="405:68">(<argument pos:start="403:28" pos:end="403:28"><expr pos:start="403:28" pos:end="403:28"><name pos:start="403:28" pos:end="403:28">w</name></expr></argument>, <argument pos:start="403:31" pos:end="403:46"><expr pos:start="403:31" pos:end="403:46"><literal type="string" pos:start="403:31" pos:end="403:46">"extradata_hash"</literal></expr></argument>, <argument pos:start="403:49" pos:end="403:62"><expr pos:start="403:49" pos:end="403:62"><name pos:start="403:49" pos:end="403:62"><name pos:start="403:49" pos:end="403:51">par</name><operator pos:start="403:52" pos:end="403:53">-&gt;</operator><name pos:start="403:54" pos:end="403:62">extradata</name></name></expr></argument>,

                                                <argument pos:start="405:49" pos:end="405:67"><expr pos:start="405:49" pos:end="405:67"><name pos:start="405:49" pos:end="405:67"><name pos:start="405:49" pos:end="405:51">par</name><operator pos:start="405:52" pos:end="405:53">-&gt;</operator><name pos:start="405:54" pos:end="405:67">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="409:5" pos:end="409:39">/* Print disposition information */</comment>

<cpp:define pos:start="411:1" pos:end="415:15">#<cpp:directive pos:start="411:2" pos:end="411:7">define</cpp:directive> <cpp:macro pos:start="411:9" pos:end="411:41"><name pos:start="411:9" pos:end="411:25">PRINT_DISPOSITION</name><parameter_list pos:start="411:26" pos:end="411:41">(<parameter pos:start="411:27" pos:end="411:34"><type pos:start="411:27" pos:end="411:34"><name pos:start="411:27" pos:end="411:34">flagname</name></type></parameter>, <parameter pos:start="411:37" pos:end="411:40"><type pos:start="411:37" pos:end="411:40"><name pos:start="411:37" pos:end="411:40">name</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="411:43" pos:end="415:15">do {                                \

        print_int(name, !!(stream-&gt;disposition &amp; AV_DISPOSITION_##flagname)); \

    } while (0)</cpp:value></cpp:define>



    <if_stmt pos:start="419:5" pos:end="449:5"><if pos:start="419:5" pos:end="449:5">if <condition pos:start="419:8" pos:end="419:35">(<expr pos:start="419:9" pos:end="419:34"><name pos:start="419:9" pos:end="419:34">do_show_stream_disposition</name></expr>)</condition> <block pos:start="419:37" pos:end="449:5">{<block_content pos:start="421:5" pos:end="447:35">

    <expr_stmt pos:start="421:5" pos:end="421:119"><expr pos:start="421:5" pos:end="421:118"><call pos:start="421:5" pos:end="421:118"><name pos:start="421:5" pos:end="421:31">writer_print_section_header</name><argument_list pos:start="421:32" pos:end="421:118">(<argument pos:start="421:33" pos:end="421:33"><expr pos:start="421:33" pos:end="421:33"><name pos:start="421:33" pos:end="421:33">w</name></expr></argument>, <argument pos:start="421:36" pos:end="421:117"><expr pos:start="421:36" pos:end="421:117"><ternary pos:start="421:36" pos:end="421:117"><condition pos:start="421:36" pos:end="421:47"><expr pos:start="421:36" pos:end="421:45"><name pos:start="421:36" pos:end="421:45">in_program</name></expr> ?</condition><then pos:start="421:49" pos:end="421:85"> <expr pos:start="421:49" pos:end="421:85"><name pos:start="421:49" pos:end="421:85">SECTION_ID_PROGRAM_STREAM_DISPOSITION</name></expr> </then><else pos:start="421:87" pos:end="421:117">: <expr pos:start="421:89" pos:end="421:117"><name pos:start="421:89" pos:end="421:117">SECTION_ID_STREAM_DISPOSITION</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="423:5" pos:end="423:51"><expr pos:start="423:5" pos:end="423:50"><call pos:start="423:5" pos:end="423:50"><name pos:start="423:5" pos:end="423:21">PRINT_DISPOSITION</name><argument_list pos:start="423:22" pos:end="423:50">(<argument pos:start="423:23" pos:end="423:29"><expr pos:start="423:23" pos:end="423:29"><name pos:start="423:23" pos:end="423:29">DEFAULT</name></expr></argument>,          <argument pos:start="423:41" pos:end="423:49"><expr pos:start="423:41" pos:end="423:49"><literal type="string" pos:start="423:41" pos:end="423:49">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="425:5" pos:end="425:47"><expr pos:start="425:5" pos:end="425:46"><call pos:start="425:5" pos:end="425:46"><name pos:start="425:5" pos:end="425:21">PRINT_DISPOSITION</name><argument_list pos:start="425:22" pos:end="425:46">(<argument pos:start="425:23" pos:end="425:25"><expr pos:start="425:23" pos:end="425:25"><name pos:start="425:23" pos:end="425:25">DUB</name></expr></argument>,              <argument pos:start="425:41" pos:end="425:45"><expr pos:start="425:41" pos:end="425:45"><literal type="string" pos:start="425:41" pos:end="425:45">"dub"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="427:5" pos:end="427:52"><expr pos:start="427:5" pos:end="427:51"><call pos:start="427:5" pos:end="427:51"><name pos:start="427:5" pos:end="427:21">PRINT_DISPOSITION</name><argument_list pos:start="427:22" pos:end="427:51">(<argument pos:start="427:23" pos:end="427:30"><expr pos:start="427:23" pos:end="427:30"><name pos:start="427:23" pos:end="427:30">ORIGINAL</name></expr></argument>,         <argument pos:start="427:41" pos:end="427:50"><expr pos:start="427:41" pos:end="427:50"><literal type="string" pos:start="427:41" pos:end="427:50">"original"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="429:5" pos:end="429:51"><expr pos:start="429:5" pos:end="429:50"><call pos:start="429:5" pos:end="429:50"><name pos:start="429:5" pos:end="429:21">PRINT_DISPOSITION</name><argument_list pos:start="429:22" pos:end="429:50">(<argument pos:start="429:23" pos:end="429:29"><expr pos:start="429:23" pos:end="429:29"><name pos:start="429:23" pos:end="429:29">COMMENT</name></expr></argument>,          <argument pos:start="429:41" pos:end="429:49"><expr pos:start="429:41" pos:end="429:49"><literal type="string" pos:start="429:41" pos:end="429:49">"comment"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="431:5" pos:end="431:50"><expr pos:start="431:5" pos:end="431:49"><call pos:start="431:5" pos:end="431:49"><name pos:start="431:5" pos:end="431:21">PRINT_DISPOSITION</name><argument_list pos:start="431:22" pos:end="431:49">(<argument pos:start="431:23" pos:end="431:28"><expr pos:start="431:23" pos:end="431:28"><name pos:start="431:23" pos:end="431:28">LYRICS</name></expr></argument>,           <argument pos:start="431:41" pos:end="431:48"><expr pos:start="431:41" pos:end="431:48"><literal type="string" pos:start="431:41" pos:end="431:48">"lyrics"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:51"><expr pos:start="433:5" pos:end="433:50"><call pos:start="433:5" pos:end="433:50"><name pos:start="433:5" pos:end="433:21">PRINT_DISPOSITION</name><argument_list pos:start="433:22" pos:end="433:50">(<argument pos:start="433:23" pos:end="433:29"><expr pos:start="433:23" pos:end="433:29"><name pos:start="433:23" pos:end="433:29">KARAOKE</name></expr></argument>,          <argument pos:start="433:41" pos:end="433:49"><expr pos:start="433:41" pos:end="433:49"><literal type="string" pos:start="433:41" pos:end="433:49">"karaoke"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:50"><expr pos:start="435:5" pos:end="435:49"><call pos:start="435:5" pos:end="435:49"><name pos:start="435:5" pos:end="435:21">PRINT_DISPOSITION</name><argument_list pos:start="435:22" pos:end="435:49">(<argument pos:start="435:23" pos:end="435:28"><expr pos:start="435:23" pos:end="435:28"><name pos:start="435:23" pos:end="435:28">FORCED</name></expr></argument>,           <argument pos:start="435:41" pos:end="435:48"><expr pos:start="435:41" pos:end="435:48"><literal type="string" pos:start="435:41" pos:end="435:48">"forced"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:60"><expr pos:start="437:5" pos:end="437:59"><call pos:start="437:5" pos:end="437:59"><name pos:start="437:5" pos:end="437:21">PRINT_DISPOSITION</name><argument_list pos:start="437:22" pos:end="437:59">(<argument pos:start="437:23" pos:end="437:38"><expr pos:start="437:23" pos:end="437:38"><name pos:start="437:23" pos:end="437:38">HEARING_IMPAIRED</name></expr></argument>, <argument pos:start="437:41" pos:end="437:58"><expr pos:start="437:41" pos:end="437:58"><literal type="string" pos:start="437:41" pos:end="437:58">"hearing_impaired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:59"><expr pos:start="439:5" pos:end="439:58"><call pos:start="439:5" pos:end="439:58"><name pos:start="439:5" pos:end="439:21">PRINT_DISPOSITION</name><argument_list pos:start="439:22" pos:end="439:58">(<argument pos:start="439:23" pos:end="439:37"><expr pos:start="439:23" pos:end="439:37"><name pos:start="439:23" pos:end="439:37">VISUAL_IMPAIRED</name></expr></argument>,  <argument pos:start="439:41" pos:end="439:57"><expr pos:start="439:41" pos:end="439:57"><literal type="string" pos:start="439:41" pos:end="439:57">"visual_impaired"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="441:5" pos:end="441:57"><expr pos:start="441:5" pos:end="441:56"><call pos:start="441:5" pos:end="441:56"><name pos:start="441:5" pos:end="441:21">PRINT_DISPOSITION</name><argument_list pos:start="441:22" pos:end="441:56">(<argument pos:start="441:23" pos:end="441:35"><expr pos:start="441:23" pos:end="441:35"><name pos:start="441:23" pos:end="441:35">CLEAN_EFFECTS</name></expr></argument>,    <argument pos:start="441:41" pos:end="441:55"><expr pos:start="441:41" pos:end="441:55"><literal type="string" pos:start="441:41" pos:end="441:55">"clean_effects"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="443:5" pos:end="443:56"><expr pos:start="443:5" pos:end="443:55"><call pos:start="443:5" pos:end="443:55"><name pos:start="443:5" pos:end="443:21">PRINT_DISPOSITION</name><argument_list pos:start="443:22" pos:end="443:55">(<argument pos:start="443:23" pos:end="443:34"><expr pos:start="443:23" pos:end="443:34"><name pos:start="443:23" pos:end="443:34">ATTACHED_PIC</name></expr></argument>,     <argument pos:start="443:41" pos:end="443:54"><expr pos:start="443:41" pos:end="443:54"><literal type="string" pos:start="443:41" pos:end="443:54">"attached_pic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="445:5" pos:end="445:60"><expr pos:start="445:5" pos:end="445:59"><call pos:start="445:5" pos:end="445:59"><name pos:start="445:5" pos:end="445:21">PRINT_DISPOSITION</name><argument_list pos:start="445:22" pos:end="445:59">(<argument pos:start="445:23" pos:end="445:38"><expr pos:start="445:23" pos:end="445:38"><name pos:start="445:23" pos:end="445:38">TIMED_THUMBNAILS</name></expr></argument>, <argument pos:start="445:41" pos:end="445:58"><expr pos:start="445:41" pos:end="445:58"><literal type="string" pos:start="445:41" pos:end="445:58">"timed_thumbnails"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="447:5" pos:end="447:35"><expr pos:start="447:5" pos:end="447:34"><call pos:start="447:5" pos:end="447:34"><name pos:start="447:5" pos:end="447:31">writer_print_section_footer</name><argument_list pos:start="447:32" pos:end="447:34">(<argument pos:start="447:33" pos:end="447:33"><expr pos:start="447:33" pos:end="447:33"><name pos:start="447:33" pos:end="447:33">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="453:5" pos:end="455:115"><if pos:start="453:5" pos:end="455:115">if <condition pos:start="453:8" pos:end="453:28">(<expr pos:start="453:9" pos:end="453:27"><name pos:start="453:9" pos:end="453:27">do_show_stream_tags</name></expr>)</condition><block type="pseudo" pos:start="455:9" pos:end="455:115"><block_content pos:start="455:9" pos:end="455:115">

        <expr_stmt pos:start="455:9" pos:end="455:115"><expr pos:start="455:9" pos:end="455:114"><name pos:start="455:9" pos:end="455:11">ret</name> <operator pos:start="455:13" pos:end="455:13">=</operator> <call pos:start="455:15" pos:end="455:114"><name pos:start="455:15" pos:end="455:23">show_tags</name><argument_list pos:start="455:24" pos:end="455:114">(<argument pos:start="455:25" pos:end="455:25"><expr pos:start="455:25" pos:end="455:25"><name pos:start="455:25" pos:end="455:25">w</name></expr></argument>, <argument pos:start="455:28" pos:end="455:43"><expr pos:start="455:28" pos:end="455:43"><name pos:start="455:28" pos:end="455:43"><name pos:start="455:28" pos:end="455:33">stream</name><operator pos:start="455:34" pos:end="455:35">-&gt;</operator><name pos:start="455:36" pos:end="455:43">metadata</name></name></expr></argument>, <argument pos:start="455:46" pos:end="455:113"><expr pos:start="455:46" pos:end="455:113"><ternary pos:start="455:46" pos:end="455:113"><condition pos:start="455:46" pos:end="455:57"><expr pos:start="455:46" pos:end="455:55"><name pos:start="455:46" pos:end="455:55">in_program</name></expr> ?</condition><then pos:start="455:59" pos:end="455:88"> <expr pos:start="455:59" pos:end="455:88"><name pos:start="455:59" pos:end="455:88">SECTION_ID_PROGRAM_STREAM_TAGS</name></expr> </then><else pos:start="455:90" pos:end="455:113">: <expr pos:start="455:92" pos:end="455:113"><name pos:start="455:92" pos:end="455:113">SECTION_ID_STREAM_TAGS</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="467:5"><if pos:start="459:5" pos:end="467:5">if <condition pos:start="459:8" pos:end="459:29">(<expr pos:start="459:9" pos:end="459:28"><name pos:start="459:9" pos:end="459:28"><name pos:start="459:9" pos:end="459:14">stream</name><operator pos:start="459:15" pos:end="459:16">-&gt;</operator><name pos:start="459:17" pos:end="459:28">nb_side_data</name></name></expr>)</condition> <block pos:start="459:31" pos:end="467:5">{<block_content pos:start="461:9" pos:end="465:57">

        <expr_stmt pos:start="461:9" pos:end="465:57"><expr pos:start="461:9" pos:end="465:56"><call pos:start="461:9" pos:end="465:56"><name pos:start="461:9" pos:end="461:27">print_pkt_side_data</name><argument_list pos:start="461:28" pos:end="465:56">(<argument pos:start="461:29" pos:end="461:29"><expr pos:start="461:29" pos:end="461:29"><name pos:start="461:29" pos:end="461:29">w</name></expr></argument>, <argument pos:start="461:32" pos:end="461:47"><expr pos:start="461:32" pos:end="461:47"><name pos:start="461:32" pos:end="461:47"><name pos:start="461:32" pos:end="461:37">stream</name><operator pos:start="461:38" pos:end="461:39">-&gt;</operator><name pos:start="461:40" pos:end="461:47">codecpar</name></name></expr></argument>, <argument pos:start="461:50" pos:end="461:66"><expr pos:start="461:50" pos:end="461:66"><name pos:start="461:50" pos:end="461:66"><name pos:start="461:50" pos:end="461:55">stream</name><operator pos:start="461:56" pos:end="461:57">-&gt;</operator><name pos:start="461:58" pos:end="461:66">side_data</name></name></expr></argument>, <argument pos:start="461:69" pos:end="461:88"><expr pos:start="461:69" pos:end="461:88"><name pos:start="461:69" pos:end="461:88"><name pos:start="461:69" pos:end="461:74">stream</name><operator pos:start="461:75" pos:end="461:76">-&gt;</operator><name pos:start="461:77" pos:end="461:88">nb_side_data</name></name></expr></argument>,

                            <argument pos:start="463:29" pos:end="463:60"><expr pos:start="463:29" pos:end="463:60"><name pos:start="463:29" pos:end="463:60">SECTION_ID_STREAM_SIDE_DATA_LIST</name></expr></argument>,

                            <argument pos:start="465:29" pos:end="465:55"><expr pos:start="465:29" pos:end="465:55"><name pos:start="465:29" pos:end="465:55">SECTION_ID_STREAM_SIDE_DATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="471:5" pos:end="471:35"><expr pos:start="471:5" pos:end="471:34"><call pos:start="471:5" pos:end="471:34"><name pos:start="471:5" pos:end="471:31">writer_print_section_footer</name><argument_list pos:start="471:32" pos:end="471:34">(<argument pos:start="471:33" pos:end="471:33"><expr pos:start="471:33" pos:end="471:33"><name pos:start="471:33" pos:end="471:33">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="473:5" pos:end="473:36"><expr pos:start="473:5" pos:end="473:35"><call pos:start="473:5" pos:end="473:35"><name pos:start="473:5" pos:end="473:22">av_bprint_finalize</name><argument_list pos:start="473:23" pos:end="473:35">(<argument pos:start="473:24" pos:end="473:28"><expr pos:start="473:24" pos:end="473:28"><operator pos:start="473:24" pos:end="473:24">&amp;</operator><name pos:start="473:25" pos:end="473:28">pbuf</name></expr></argument>, <argument pos:start="473:31" pos:end="473:34"><expr pos:start="473:31" pos:end="473:34"><name pos:start="473:31" pos:end="473:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="475:5" pos:end="475:19"><expr pos:start="475:5" pos:end="475:18"><call pos:start="475:5" pos:end="475:18"><name pos:start="475:5" pos:end="475:10">fflush</name><argument_list pos:start="475:11" pos:end="475:18">(<argument pos:start="475:12" pos:end="475:17"><expr pos:start="475:12" pos:end="475:17"><name pos:start="475:12" pos:end="475:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="479:5" pos:end="479:15">return <expr pos:start="479:12" pos:end="479:14"><name pos:start="479:12" pos:end="479:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
