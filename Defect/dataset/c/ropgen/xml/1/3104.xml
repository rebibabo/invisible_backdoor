<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3104.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">hyscale_fast</name>)<parameter_list pos:start="1:40" pos:end="5:49">(<parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:50">SwsContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">c</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:67"><decl pos:start="1:56" pos:end="1:67"><type pos:start="1:56" pos:end="1:67"><name pos:start="1:56" pos:end="1:62">int16_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">dst</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:44">long</name></type> <name pos:start="3:46" pos:end="3:53">dstWidth</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:73"><decl pos:start="3:56" pos:end="3:73"><type pos:start="3:56" pos:end="3:73"><specifier pos:start="3:56" pos:end="3:60">const</specifier> <name pos:start="3:62" pos:end="3:68">uint8_t</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:73">src</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:83"><decl pos:start="3:76" pos:end="3:83"><type pos:start="3:76" pos:end="3:83"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:83">srcW</name></decl></parameter>,

                                        <parameter pos:start="5:41" pos:end="5:48"><decl pos:start="5:41" pos:end="5:48"><type pos:start="5:41" pos:end="5:48"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:48">xInc</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="143:1">{<block_content pos:start="9:5" pos:end="141:33">

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">filterPos</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:26">c</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:41">hLumFilterPos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">int16_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:19">filter</name>    <init pos:start="11:24" pos:end="11:38">= <expr pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:38"><name pos:start="11:26" pos:end="11:26">c</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:38">hLumFilter</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type>     <name pos:start="13:13" pos:end="13:25">canMMX2BeUsed</name>  <init pos:start="13:28" pos:end="13:45">= <expr pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:45"><name pos:start="13:30" pos:end="13:30">c</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:45">canMMX2BeUsed</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">void</name>    <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:27">mmx2FilterCode</name><init pos:start="15:28" pos:end="15:49">= <expr pos:start="15:30" pos:end="15:49"><name pos:start="15:30" pos:end="15:49"><name pos:start="15:30" pos:end="15:30">c</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:49">lumMmx2FilterCode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="20:0"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

<cpp:if pos:start="19:1" pos:end="19:16">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:16"><call pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:11">defined</name><argument_list pos:start="19:12" pos:end="19:16">(<argument pos:start="19:13" pos:end="19:15"><expr pos:start="19:13" pos:end="19:15"><name pos:start="19:13" pos:end="19:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:19">DECLARE_ALIGNED</name><argument_list pos:start="21:20" pos:end="21:41">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">8</literal></expr></argument>, <argument pos:start="21:24" pos:end="21:31"><expr pos:start="21:24" pos:end="21:31"><name pos:start="21:24" pos:end="21:31">uint64_t</name></expr></argument>, <argument pos:start="21:34" pos:end="21:40"><expr pos:start="21:34" pos:end="21:40"><name pos:start="21:34" pos:end="21:40">ebxsave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <asm pos:start="27:5" pos:end="135:6">__asm__ <specifier pos:start="27:13" pos:end="27:20">volatile</specifier>(

<cpp:if pos:start="29:1" pos:end="29:16">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:16"><call pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:11">defined</name><argument_list pos:start="29:12" pos:end="29:16">(<argument pos:start="29:13" pos:end="29:15"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov               %%"REG_b", %5        \n\t"

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

        "pxor                  %%mm7, %%mm7     \n\t"

        "mov                      %0, %%"REG_c" \n\t"

        "mov                      %1, %%"REG_D" \n\t"

        "mov                      %2, %%"REG_d" \n\t"

        "mov                      %3, %%"REG_b" \n\t"

        "xor               %%"REG_a", %%"REG_a" \n\t" <comment type="line" pos:start="45:55" pos:end="45:58">// i</comment>

        PREFETCH"        (%%"REG_c")            \n\t"

        PREFETCH"      32(%%"REG_c")            \n\t"

        PREFETCH"      64(%%"REG_c")            \n\t"



<cpp:if pos:start="55:1" pos:end="55:15">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:15">ARCH_X86_64</name></expr></cpp:if>

<cpp:define pos:start="57:1" pos:end="73:5">#<cpp:directive pos:start="57:2" pos:end="57:7">define</cpp:directive> <cpp:macro pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:29">CALL_MMX2_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="59:9" pos:end="73:5">"movl            (%%"REG_b"), %%esi     \n\t"\

        "call                    *%4            \n\t"\

        "movl (%%"REG_b", %%"REG_a"), %%esi     \n\t"\

        "add               %%"REG_S", %%"REG_c" \n\t"\

        "add               %%"REG_a", %%"REG_D" \n\t"\

        "xor               %%"REG_a", %%"REG_a" \n\t"\



#else</cpp:value></cpp:define>

<cpp:define pos:start="75:1" pos:end="89:6">#<cpp:directive pos:start="75:2" pos:end="75:7">define</cpp:directive> <cpp:macro pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:29">CALL_MMX2_FILTER_CODE</name></cpp:macro> \

        <cpp:value pos:start="77:9" pos:end="89:6">"movl (%%"REG_b"), %%esi        \n\t"\

        "call         *%4                       \n\t"\

        "addl (%%"REG_b", %%"REG_a"), %%"REG_c" \n\t"\

        "add               %%"REG_a", %%"REG_D" \n\t"\

        "xor               %%"REG_a", %%"REG_a" \n\t"\



#endif</cpp:value></cpp:define> <comment type="block" pos:start="89:8" pos:end="89:24">/* ARCH_X86_64 */</comment>



        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE

        CALL_MMX2_FILTER_CODE



<cpp:if pos:start="111:1" pos:end="111:16">#<cpp:directive pos:start="111:2" pos:end="111:3">if</cpp:directive> <expr pos:start="111:5" pos:end="111:16"><call pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:11">defined</name><argument_list pos:start="111:12" pos:end="111:16">(<argument pos:start="111:13" pos:end="111:15"><expr pos:start="111:13" pos:end="111:15"><name pos:start="111:13" pos:end="111:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

        "mov                      %5, %%"REG_b" \n\t"

<cpp:endif pos:start="115:1" pos:end="115:6">#<cpp:directive pos:start="115:2" pos:end="115:6">endif</cpp:directive></cpp:endif>

        :: "m" (src), "m" (dst), "m" (filter), "m" (filterPos),

           "m" (mmx2FilterCode)

<cpp:if pos:start="121:1" pos:end="121:16">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:16"><call pos:start="121:5" pos:end="121:16"><name pos:start="121:5" pos:end="121:11">defined</name><argument_list pos:start="121:12" pos:end="121:16">(<argument pos:start="121:13" pos:end="121:15"><expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:15">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

          ,"m" (ebxsave)

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

        : "%"REG_a, "%"REG_c, "%"REG_d, "%"REG_S, "%"REG_D

<cpp:if pos:start="129:1" pos:end="129:17">#<cpp:directive pos:start="129:2" pos:end="129:3">if</cpp:directive> <expr pos:start="129:5" pos:end="129:17"><operator pos:start="129:5" pos:end="129:5">!</operator><call pos:start="129:6" pos:end="129:17"><name pos:start="129:6" pos:end="129:12">defined</name><argument_list pos:start="129:13" pos:end="129:17">(<argument pos:start="129:14" pos:end="129:16"><expr pos:start="129:14" pos:end="129:16"><name pos:start="129:14" pos:end="129:16">PIC</name></expr></argument>)</argument_list></call></expr></cpp:if>

         ,"%"REG_b

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

    );</asm>



    <for pos:start="139:5" pos:end="141:33">for <control pos:start="139:9" pos:end="139:50">(<init pos:start="139:10" pos:end="139:22"><expr pos:start="139:10" pos:end="139:21"><name pos:start="139:10" pos:end="139:10">i</name><operator pos:start="139:11" pos:end="139:11">=</operator><name pos:start="139:12" pos:end="139:19">dstWidth</name><operator pos:start="139:20" pos:end="139:20">-</operator><literal type="number" pos:start="139:21" pos:end="139:21">1</literal></expr>;</init> <condition pos:start="139:24" pos:end="139:45"><expr pos:start="139:24" pos:end="139:44"><operator pos:start="139:24" pos:end="139:24">(</operator><name pos:start="139:25" pos:end="139:25">i</name><operator pos:start="139:26" pos:end="139:26">*</operator><name pos:start="139:27" pos:end="139:30">xInc</name><operator pos:start="139:31" pos:end="139:31">)</operator><operator pos:start="139:32" pos:end="139:33">&gt;&gt;</operator><literal type="number" pos:start="139:34" pos:end="139:35">16</literal> <operator pos:start="139:37" pos:end="139:38">&gt;=</operator><name pos:start="139:39" pos:end="139:42">srcW</name><operator pos:start="139:43" pos:end="139:43">-</operator><literal type="number" pos:start="139:44" pos:end="139:44">1</literal></expr>;</condition> <incr pos:start="139:47" pos:end="139:49"><expr pos:start="139:47" pos:end="139:49"><name pos:start="139:47" pos:end="139:47">i</name><operator pos:start="139:48" pos:end="139:49">--</operator></expr></incr>)</control><block type="pseudo" pos:start="141:9" pos:end="141:33"><block_content pos:start="141:9" pos:end="141:33">

        <expr_stmt pos:start="141:9" pos:end="141:33"><expr pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:14"><name pos:start="141:9" pos:end="141:11">dst</name><index pos:start="141:12" pos:end="141:14">[<expr pos:start="141:13" pos:end="141:13"><name pos:start="141:13" pos:end="141:13">i</name></expr>]</index></name> <operator pos:start="141:16" pos:end="141:16">=</operator> <name pos:start="141:18" pos:end="141:28"><name pos:start="141:18" pos:end="141:20">src</name><index pos:start="141:21" pos:end="141:28">[<expr pos:start="141:22" pos:end="141:27"><name pos:start="141:22" pos:end="141:25">srcW</name><operator pos:start="141:26" pos:end="141:26">-</operator><literal type="number" pos:start="141:27" pos:end="141:27">1</literal></expr>]</index></name><operator pos:start="141:29" pos:end="141:29">*</operator><literal type="number" pos:start="141:30" pos:end="141:32">128</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
