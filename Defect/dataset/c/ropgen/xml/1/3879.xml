<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3879.c" pos:tabs="8"><function pos:start="1:1" pos:end="211:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">matroska_parse_block</name><parameter_list pos:start="1:32" pos:end="7:52">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:52">MatroskaDemuxContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:62">matroska</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:40"><decl pos:start="3:33" pos:end="3:40"><type pos:start="3:33" pos:end="3:40"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:40">size</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:53"><decl pos:start="3:43" pos:end="3:53"><type pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:49">int64_t</name></type> <name pos:start="3:51" pos:end="3:53">pos</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:76"><decl pos:start="3:56" pos:end="3:76"><type pos:start="3:56" pos:end="3:76"><name pos:start="3:56" pos:end="3:63">uint64_t</name></type> <name pos:start="3:65" pos:end="3:76">cluster_time</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:55"><decl pos:start="5:33" pos:end="5:55"><type pos:start="5:33" pos:end="5:55"><name pos:start="5:33" pos:end="5:40">uint64_t</name></type> <name pos:start="5:42" pos:end="5:55">block_duration</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:72"><decl pos:start="5:58" pos:end="5:72"><type pos:start="5:58" pos:end="5:72"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:72">is_keyframe</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:51"><decl pos:start="7:33" pos:end="7:51"><type pos:start="7:33" pos:end="7:51"><name pos:start="7:33" pos:end="7:39">int64_t</name></type> <name pos:start="7:41" pos:end="7:51">cluster_pos</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="211:1">{<block_content pos:start="11:5" pos:end="209:15">

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:21">timecode</name> <init pos:start="11:23" pos:end="11:38">= <expr pos:start="11:25" pos:end="11:38"><name pos:start="11:25" pos:end="11:38">AV_NOPTS_VALUE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">MatroskaTrack</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:24">track</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">res</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">AVStream</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">int16_t</name></type> <name pos:start="19:13" pos:end="19:22">block_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:30"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">uint32_t</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:23">lace_size</name> <init pos:start="21:25" pos:end="21:30">= <expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:28"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">n</name></decl>, <decl pos:start="23:12" pos:end="23:16"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:16">flags</name></decl>, <decl pos:start="23:19" pos:end="23:27"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:19" pos:end="23:23">laces</name> <init pos:start="23:25" pos:end="23:27">= <expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:27"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint64_t</name></type> <name pos:start="25:14" pos:end="25:16">num</name></decl>, <decl pos:start="25:19" pos:end="25:26"><type ref="prev" pos:start="25:5" pos:end="25:12"/><name pos:start="25:19" pos:end="25:26">duration</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:68">(<expr pos:start="29:9" pos:end="29:67"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:10">n</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:62"><name pos:start="29:14" pos:end="29:34">matroska_ebmlnum_uint</name><argument_list pos:start="29:35" pos:end="29:62">(<argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43">matroska</name></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">data</name></expr></argument>, <argument pos:start="29:52" pos:end="29:55"><expr pos:start="29:52" pos:end="29:55"><name pos:start="29:52" pos:end="29:55">size</name></expr></argument>, <argument pos:start="29:58" pos:end="29:61"><expr pos:start="29:58" pos:end="29:61"><operator pos:start="29:58" pos:end="29:58">&amp;</operator><name pos:start="29:59" pos:end="29:61">num</name></expr></argument>)</argument_list></call><operator pos:start="29:63" pos:end="29:63">)</operator> <operator pos:start="29:65" pos:end="29:65">&lt;</operator> <literal type="number" pos:start="29:67" pos:end="29:67">0</literal></expr>)</condition> <block pos:start="29:70" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:17">

        <expr_stmt pos:start="31:9" pos:end="31:71"><expr pos:start="31:9" pos:end="31:70"><call pos:start="31:9" pos:end="31:70"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:70">(<argument pos:start="31:16" pos:end="31:28"><expr pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:28"><name pos:start="31:16" pos:end="31:23">matroska</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:28">ctx</name></name></expr></argument>, <argument pos:start="31:31" pos:end="31:42"><expr pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:45" pos:end="31:69"><expr pos:start="31:45" pos:end="31:69"><literal type="string" pos:start="31:45" pos:end="31:69">"EBML block data error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">n</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:14"><expr pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:8">data</name> <operator pos:start="37:10" pos:end="37:11">+=</operator> <name pos:start="37:13" pos:end="37:13">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:14"><expr pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:8">size</name> <operator pos:start="39:10" pos:end="39:11">-=</operator> <name pos:start="39:13" pos:end="39:13">n</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:9">track</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:38">matroska_find_track_by_num</name><argument_list pos:start="43:39" pos:end="43:53">(<argument pos:start="43:40" pos:end="43:47"><expr pos:start="43:40" pos:end="43:47"><name pos:start="43:40" pos:end="43:47">matroska</name></expr></argument>, <argument pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:52">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="55:17"><if pos:start="45:5" pos:end="53:5">if <condition pos:start="45:8" pos:end="45:33">(<expr pos:start="45:9" pos:end="45:32"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:14">track</name> <operator pos:start="45:16" pos:end="45:17">||</operator> <operator pos:start="45:19" pos:end="45:19">!</operator><name pos:start="45:20" pos:end="45:32"><name pos:start="45:20" pos:end="45:24">track</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:32">stream</name></name></expr>)</condition> <block pos:start="45:35" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:35">

        <expr_stmt pos:start="47:9" pos:end="49:67"><expr pos:start="47:9" pos:end="49:66"><call pos:start="47:9" pos:end="49:66"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="49:66">(<argument pos:start="47:16" pos:end="47:28"><expr pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:28"><name pos:start="47:16" pos:end="47:23">matroska</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:28">ctx</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:41"><expr pos:start="47:31" pos:end="47:41"><name pos:start="47:31" pos:end="47:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="49:16" pos:end="49:54"><expr pos:start="49:16" pos:end="49:54"><literal type="string" pos:start="49:16" pos:end="49:33">"Invalid stream %"</literal><name pos:start="49:34" pos:end="49:39">PRIu64</name><literal type="string" pos:start="49:40" pos:end="49:54">" or size %u\n"</literal></expr></argument>, <argument pos:start="49:57" pos:end="49:59"><expr pos:start="49:57" pos:end="49:59"><name pos:start="49:57" pos:end="49:59">num</name></expr></argument>, <argument pos:start="49:62" pos:end="49:65"><expr pos:start="49:62" pos:end="49:65"><name pos:start="49:62" pos:end="49:65">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="55:17">else if <condition pos:start="53:15" pos:end="53:25">(<expr pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:19">size</name> <operator pos:start="53:21" pos:end="53:22">&lt;=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">3</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:17"><block_content pos:start="55:9" pos:end="55:17">

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:23"><expr pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:6">st</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <name pos:start="57:10" pos:end="57:22"><name pos:start="57:10" pos:end="57:14">track</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:22">stream</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:19"><if pos:start="59:5" pos:end="61:19">if <condition pos:start="59:8" pos:end="59:37">(<expr pos:start="59:9" pos:end="59:36"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:19">discard</name></name> <operator pos:start="59:21" pos:end="59:22">&gt;=</operator> <name pos:start="59:24" pos:end="59:36">AVDISCARD_ALL</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:19"><block_content pos:start="61:9" pos:end="61:19">

        <return pos:start="61:9" pos:end="61:19">return <expr pos:start="61:16" pos:end="61:18"><name pos:start="61:16" pos:end="61:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:31"><expr pos:start="65:5" pos:end="65:30"><name pos:start="65:5" pos:end="65:14">block_time</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:30"><name pos:start="65:18" pos:end="65:24">AV_RB16</name><argument_list pos:start="65:25" pos:end="65:30">(<argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><name pos:start="65:26" pos:end="65:29">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:14"><expr pos:start="67:5" pos:end="67:13"><name pos:start="67:5" pos:end="67:8">data</name> <operator pos:start="67:10" pos:end="67:11">+=</operator> <literal type="number" pos:start="67:13" pos:end="67:13">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:9">flags</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:17">data</name><operator pos:start="69:18" pos:end="69:19">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:14"><expr pos:start="71:5" pos:end="71:13"><name pos:start="71:5" pos:end="71:8">size</name> <operator pos:start="71:10" pos:end="71:11">-=</operator> <literal type="number" pos:start="71:13" pos:end="71:13">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:57"><if pos:start="73:5" pos:end="75:57">if <condition pos:start="73:8" pos:end="73:26">(<expr pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:19">is_keyframe</name> <operator pos:start="73:21" pos:end="73:22">==</operator> <operator pos:start="73:24" pos:end="73:24">-</operator><literal type="number" pos:start="73:25" pos:end="73:25">1</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:57"><block_content pos:start="75:9" pos:end="75:57">

        <expr_stmt pos:start="75:9" pos:end="75:57"><expr pos:start="75:9" pos:end="75:56"><name pos:start="75:9" pos:end="75:19">is_keyframe</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <ternary pos:start="75:23" pos:end="75:56"><condition pos:start="75:23" pos:end="75:36"><expr pos:start="75:23" pos:end="75:34"><name pos:start="75:23" pos:end="75:27">flags</name> <operator pos:start="75:29" pos:end="75:29">&amp;</operator> <literal type="number" pos:start="75:31" pos:end="75:34">0x80</literal></expr> ?</condition><then pos:start="75:38" pos:end="75:52"> <expr pos:start="75:38" pos:end="75:52"><name pos:start="75:38" pos:end="75:52">AV_PKT_FLAG_KEY</name></expr> </then><else pos:start="75:54" pos:end="75:56">: <expr pos:start="75:56" pos:end="75:56"><literal type="number" pos:start="75:56" pos:end="75:56">0</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="95:5"><if pos:start="79:5" pos:end="95:5">if <condition pos:start="79:8" pos:end="81:60">(<expr pos:start="79:9" pos:end="81:59"><name pos:start="79:9" pos:end="79:20">cluster_time</name> <operator pos:start="79:22" pos:end="79:23">!=</operator> <operator pos:start="79:25" pos:end="79:25">(</operator><name pos:start="79:26" pos:end="79:33">uint64_t</name><operator pos:start="79:34" pos:end="79:34">)</operator><operator pos:start="79:35" pos:end="79:35">-</operator><literal type="number" pos:start="79:36" pos:end="79:36">1</literal>

        <operator pos:start="81:9" pos:end="81:10">&amp;&amp;</operator> <operator pos:start="81:12" pos:end="81:12">(</operator><name pos:start="81:13" pos:end="81:22">block_time</name> <operator pos:start="81:24" pos:end="81:25">&gt;=</operator> <literal type="number" pos:start="81:27" pos:end="81:27">0</literal> <operator pos:start="81:29" pos:end="81:30">||</operator> <name pos:start="81:32" pos:end="81:43">cluster_time</name> <operator pos:start="81:45" pos:end="81:46">&gt;=</operator> <operator pos:start="81:48" pos:end="81:48">-</operator><name pos:start="81:49" pos:end="81:58">block_time</name><operator pos:start="81:59" pos:end="81:59">)</operator></expr>)</condition> <block pos:start="81:62" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:80">

        <expr_stmt pos:start="83:9" pos:end="83:45"><expr pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:16">timecode</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:31">cluster_time</name> <operator pos:start="83:33" pos:end="83:33">+</operator> <name pos:start="83:35" pos:end="83:44">block_time</name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:28"><if pos:start="85:9" pos:end="89:28">if <condition pos:start="85:12" pos:end="87:46">(<expr pos:start="85:13" pos:end="87:45"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:17">track</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:23">type</name></name> <operator pos:start="85:25" pos:end="85:26">==</operator> <name pos:start="85:28" pos:end="85:55">MATROSKA_TRACK_TYPE_SUBTITLE</name>

            <operator pos:start="87:13" pos:end="87:14">&amp;&amp;</operator> <name pos:start="87:16" pos:end="87:23">timecode</name> <operator pos:start="87:25" pos:end="87:25">&lt;</operator> <name pos:start="87:27" pos:end="87:45"><name pos:start="87:27" pos:end="87:31">track</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:45">end_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:28"><block_content pos:start="89:13" pos:end="89:28">

            <expr_stmt pos:start="89:13" pos:end="89:28"><expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:23">is_keyframe</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <literal type="number" pos:start="89:27" pos:end="89:27">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>  <comment type="block" pos:start="89:31" pos:end="89:75">/* overlapping subtitles are not key frame */</comment>

        <if_stmt pos:start="91:9" pos:end="93:80"><if pos:start="91:9" pos:end="93:80">if <condition pos:start="91:12" pos:end="91:24">(<expr pos:start="91:13" pos:end="91:23"><name pos:start="91:13" pos:end="91:23">is_keyframe</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:80"><block_content pos:start="93:13" pos:end="93:80">

            <expr_stmt pos:start="93:13" pos:end="93:80"><expr pos:start="93:13" pos:end="93:79"><call pos:start="93:13" pos:end="93:79"><name pos:start="93:13" pos:end="93:30">av_add_index_entry</name><argument_list pos:start="93:31" pos:end="93:79">(<argument pos:start="93:32" pos:end="93:33"><expr pos:start="93:32" pos:end="93:33"><name pos:start="93:32" pos:end="93:33">st</name></expr></argument>, <argument pos:start="93:36" pos:end="93:46"><expr pos:start="93:36" pos:end="93:46"><name pos:start="93:36" pos:end="93:46">cluster_pos</name></expr></argument>, <argument pos:start="93:49" pos:end="93:56"><expr pos:start="93:49" pos:end="93:56"><name pos:start="93:49" pos:end="93:56">timecode</name></expr></argument>, <argument pos:start="93:59" pos:end="93:59"><expr pos:start="93:59" pos:end="93:59"><literal type="number" pos:start="93:59" pos:end="93:59">0</literal></expr></argument>,<argument pos:start="93:61" pos:end="93:61"><expr pos:start="93:61" pos:end="93:61"><literal type="number" pos:start="93:61" pos:end="93:61">0</literal></expr></argument>,<argument pos:start="93:63" pos:end="93:78"><expr pos:start="93:63" pos:end="93:78"><name pos:start="93:63" pos:end="93:78">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:82">(<expr pos:start="99:9" pos:end="99:81"><name pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:16">matroska</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:34">skip_to_keyframe</name></name> <operator pos:start="99:36" pos:end="99:37">&amp;&amp;</operator> <name pos:start="99:39" pos:end="99:49"><name pos:start="99:39" pos:end="99:43">track</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:49">type</name></name> <operator pos:start="99:51" pos:end="99:52">!=</operator> <name pos:start="99:54" pos:end="99:81">MATROSKA_TRACK_TYPE_SUBTITLE</name></expr>)</condition> <block pos:start="99:84" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:39">

        <if_stmt pos:start="101:9" pos:end="103:23"><if pos:start="101:9" pos:end="103:23">if <condition pos:start="101:12" pos:end="101:66">(<expr pos:start="101:13" pos:end="101:65"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:24">is_keyframe</name> <operator pos:start="101:26" pos:end="101:27">||</operator> <name pos:start="101:29" pos:end="101:36">timecode</name> <operator pos:start="101:38" pos:end="101:38">&lt;</operator> <name pos:start="101:40" pos:end="101:65"><name pos:start="101:40" pos:end="101:47">matroska</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:65">skip_to_timecode</name></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:23"><block_content pos:start="103:13" pos:end="103:23">

            <return pos:start="103:13" pos:end="103:23">return <expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">res</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:39"><expr pos:start="105:9" pos:end="105:38"><name pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:16">matroska</name><operator pos:start="105:17" pos:end="105:18">-&gt;</operator><name pos:start="105:19" pos:end="105:34">skip_to_keyframe</name></name> <operator pos:start="105:36" pos:end="105:36">=</operator> <literal type="number" pos:start="105:38" pos:end="105:38">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="113:51"><expr pos:start="111:5" pos:end="113:50"><name pos:start="111:5" pos:end="111:7">res</name> <operator pos:start="111:9" pos:end="111:9">=</operator> <call pos:start="111:11" pos:end="113:50"><name pos:start="111:11" pos:end="111:30">matroska_parse_laces</name><argument_list pos:start="111:31" pos:end="113:50">(<argument pos:start="111:32" pos:end="111:39"><expr pos:start="111:32" pos:end="111:39"><name pos:start="111:32" pos:end="111:39">matroska</name></expr></argument>, <argument pos:start="111:42" pos:end="111:46"><expr pos:start="111:42" pos:end="111:46"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:46">data</name></expr></argument>, <argument pos:start="111:49" pos:end="111:53"><expr pos:start="111:49" pos:end="111:53"><operator pos:start="111:49" pos:end="111:49">&amp;</operator><name pos:start="111:50" pos:end="111:53">size</name></expr></argument>, <argument pos:start="111:56" pos:end="111:74"><expr pos:start="111:56" pos:end="111:74"><operator pos:start="111:56" pos:end="111:56">(</operator><name pos:start="111:57" pos:end="111:61">flags</name> <operator pos:start="111:63" pos:end="111:63">&amp;</operator> <literal type="number" pos:start="111:65" pos:end="111:68">0x06</literal><operator pos:start="111:69" pos:end="111:69">)</operator> <operator pos:start="111:71" pos:end="111:72">&gt;&gt;</operator> <literal type="number" pos:start="111:74" pos:end="111:74">1</literal></expr></argument>,

                               <argument pos:start="113:32" pos:end="113:41"><expr pos:start="113:32" pos:end="113:41"><operator pos:start="113:32" pos:end="113:32">&amp;</operator><name pos:start="113:33" pos:end="113:41">lace_size</name></expr></argument>, <argument pos:start="113:44" pos:end="113:49"><expr pos:start="113:44" pos:end="113:49"><operator pos:start="113:44" pos:end="113:44">&amp;</operator><name pos:start="113:45" pos:end="113:49">laces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="117:5" pos:end="119:17"><if pos:start="117:5" pos:end="119:17">if <condition pos:start="117:8" pos:end="117:12">(<expr pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">res</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:17"><block_content pos:start="119:9" pos:end="119:17">

        <goto pos:start="119:9" pos:end="119:17">goto <name pos:start="119:14" pos:end="119:16">end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="141:5"><if pos:start="123:5" pos:end="135:5">if <condition pos:start="123:8" pos:end="123:41">(<expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:22">block_duration</name> <operator pos:start="123:24" pos:end="123:25">!=</operator> <name pos:start="123:27" pos:end="123:40">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="123:43" pos:end="135:5">{<block_content pos:start="125:9" pos:end="133:9">

        <expr_stmt pos:start="125:9" pos:end="125:42"><expr pos:start="125:9" pos:end="125:41"><name pos:start="125:9" pos:end="125:16">duration</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:33">block_duration</name> <operator pos:start="125:35" pos:end="125:35">/</operator> <name pos:start="125:37" pos:end="125:41">laces</name></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:47">(<expr pos:start="127:13" pos:end="127:46"><name pos:start="127:13" pos:end="127:26">block_duration</name> <operator pos:start="127:28" pos:end="127:29">!=</operator> <name pos:start="127:31" pos:end="127:38">duration</name> <operator pos:start="127:40" pos:end="127:40">*</operator> <name pos:start="127:42" pos:end="127:46">laces</name></expr>)</condition> <block pos:start="127:49" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:77">

            <expr_stmt pos:start="129:13" pos:end="131:77"><expr pos:start="129:13" pos:end="131:76"><call pos:start="129:13" pos:end="131:76"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="131:76">(<argument pos:start="129:20" pos:end="129:32"><expr pos:start="129:20" pos:end="129:32"><name pos:start="129:20" pos:end="129:32"><name pos:start="129:20" pos:end="129:27">matroska</name><operator pos:start="129:28" pos:end="129:29">-&gt;</operator><name pos:start="129:30" pos:end="129:32">ctx</name></name></expr></argument>, <argument pos:start="129:35" pos:end="129:48"><expr pos:start="129:35" pos:end="129:48"><name pos:start="129:35" pos:end="129:48">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="131:20" pos:end="131:75"><expr pos:start="131:20" pos:end="131:75"><literal type="string" pos:start="131:20" pos:end="131:75">"Incorrect block_duration, possibly corrupted container"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="135:7" pos:end="141:5">else <block pos:start="135:12" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:42">

        <expr_stmt pos:start="137:9" pos:end="137:66"><expr pos:start="137:9" pos:end="137:65"><name pos:start="137:9" pos:end="137:16">duration</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:42"><name pos:start="137:20" pos:end="137:24">track</name><operator pos:start="137:25" pos:end="137:26">-&gt;</operator><name pos:start="137:27" pos:end="137:42">default_duration</name></name> <operator pos:start="137:44" pos:end="137:44">/</operator> <name pos:start="137:46" pos:end="137:65"><name pos:start="137:46" pos:end="137:53">matroska</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:65">time_scale</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:42"><expr pos:start="139:9" pos:end="139:41"><name pos:start="139:9" pos:end="139:22">block_duration</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <name pos:start="139:26" pos:end="139:33">duration</name> <operator pos:start="139:35" pos:end="139:35">*</operator> <name pos:start="139:37" pos:end="139:41">laces</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="145:5" pos:end="149:66"><if pos:start="145:5" pos:end="149:66">if <condition pos:start="145:8" pos:end="145:35">(<expr pos:start="145:9" pos:end="145:34"><name pos:start="145:9" pos:end="145:16">timecode</name> <operator pos:start="145:18" pos:end="145:19">!=</operator> <name pos:start="145:21" pos:end="145:34">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="149:66"><block_content pos:start="147:9" pos:end="149:66">

        <expr_stmt pos:start="147:9" pos:end="149:66"><expr pos:start="147:9" pos:end="149:65"><name pos:start="147:9" pos:end="147:27"><name pos:start="147:9" pos:end="147:13">track</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:27">end_timecode</name></name> <operator pos:start="147:29" pos:end="147:29">=</operator>

            <call pos:start="149:13" pos:end="149:65"><name pos:start="149:13" pos:end="149:17">FFMAX</name><argument_list pos:start="149:18" pos:end="149:65">(<argument pos:start="149:19" pos:end="149:37"><expr pos:start="149:19" pos:end="149:37"><name pos:start="149:19" pos:end="149:37"><name pos:start="149:19" pos:end="149:23">track</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:37">end_timecode</name></name></expr></argument>, <argument pos:start="149:40" pos:end="149:64"><expr pos:start="149:40" pos:end="149:64"><name pos:start="149:40" pos:end="149:47">timecode</name> <operator pos:start="149:49" pos:end="149:49">+</operator> <name pos:start="149:51" pos:end="149:64">block_duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="153:5" pos:end="201:5">for <control pos:start="153:9" pos:end="153:31">(<init pos:start="153:10" pos:end="153:15"><expr pos:start="153:10" pos:end="153:14"><name pos:start="153:10" pos:end="153:10">n</name> <operator pos:start="153:12" pos:end="153:12">=</operator> <literal type="number" pos:start="153:14" pos:end="153:14">0</literal></expr>;</init> <condition pos:start="153:17" pos:end="153:26"><expr pos:start="153:17" pos:end="153:25"><name pos:start="153:17" pos:end="153:17">n</name> <operator pos:start="153:19" pos:end="153:19">&lt;</operator> <name pos:start="153:21" pos:end="153:25">laces</name></expr>;</condition> <incr pos:start="153:28" pos:end="153:30"><expr pos:start="153:28" pos:end="153:30"><name pos:start="153:28" pos:end="153:28">n</name><operator pos:start="153:29" pos:end="153:30">++</operator></expr></incr>)</control> <block pos:start="153:33" pos:end="201:5">{<block_content pos:start="155:9" pos:end="199:29">

        <if_stmt pos:start="155:9" pos:end="189:9"><if pos:start="155:9" pos:end="177:9">if <condition pos:start="155:12" pos:end="163:68">(<expr pos:start="155:13" pos:end="163:67"><operator pos:start="155:13" pos:end="155:13">(</operator><name pos:start="155:14" pos:end="155:32"><name pos:start="155:14" pos:end="155:15">st</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:22">codec</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:32">codec_id</name></name> <operator pos:start="155:34" pos:end="155:35">==</operator> <name pos:start="155:37" pos:end="155:54">AV_CODEC_ID_RA_288</name> <operator pos:start="155:56" pos:end="155:57">||</operator>

             <name pos:start="157:14" pos:end="157:32"><name pos:start="157:14" pos:end="157:15">st</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:22">codec</name><operator pos:start="157:23" pos:end="157:24">-&gt;</operator><name pos:start="157:25" pos:end="157:32">codec_id</name></name> <operator pos:start="157:34" pos:end="157:35">==</operator> <name pos:start="157:37" pos:end="157:52">AV_CODEC_ID_COOK</name> <operator pos:start="157:54" pos:end="157:55">||</operator>

             <name pos:start="159:14" pos:end="159:32"><name pos:start="159:14" pos:end="159:15">st</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:22">codec</name><operator pos:start="159:23" pos:end="159:24">-&gt;</operator><name pos:start="159:25" pos:end="159:32">codec_id</name></name> <operator pos:start="159:34" pos:end="159:35">==</operator> <name pos:start="159:37" pos:end="159:52">AV_CODEC_ID_SIPR</name> <operator pos:start="159:54" pos:end="159:55">||</operator>

             <name pos:start="161:14" pos:end="161:32"><name pos:start="161:14" pos:end="161:15">st</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:22">codec</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:32">codec_id</name></name> <operator pos:start="161:34" pos:end="161:35">==</operator> <name pos:start="161:37" pos:end="161:54">AV_CODEC_ID_ATRAC3</name><operator pos:start="161:55" pos:end="161:55">)</operator> <operator pos:start="161:57" pos:end="161:58">&amp;&amp;</operator>

             <name pos:start="163:14" pos:end="163:35"><name pos:start="163:14" pos:end="163:15">st</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:22">codec</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:35">block_align</name></name> <operator pos:start="163:37" pos:end="163:38">&amp;&amp;</operator> <name pos:start="163:40" pos:end="163:67"><name pos:start="163:40" pos:end="163:44">track</name><operator pos:start="163:45" pos:end="163:46">-&gt;</operator><name pos:start="163:47" pos:end="163:51">audio</name><operator pos:start="163:52" pos:end="163:52">.</operator><name pos:start="163:53" pos:end="163:67">sub_packet_size</name></name></expr>)</condition> <block pos:start="163:70" pos:end="177:9">{<block_content pos:start="167:13" pos:end="173:25">



            <expr_stmt pos:start="167:13" pos:end="169:67"><expr pos:start="167:13" pos:end="169:66"><name pos:start="167:13" pos:end="167:15">res</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <call pos:start="167:19" pos:end="169:66"><name pos:start="167:19" pos:end="167:41">matroska_parse_rm_audio</name><argument_list pos:start="167:42" pos:end="169:66">(<argument pos:start="167:43" pos:end="167:50"><expr pos:start="167:43" pos:end="167:50"><name pos:start="167:43" pos:end="167:50">matroska</name></expr></argument>, <argument pos:start="167:53" pos:end="167:57"><expr pos:start="167:53" pos:end="167:57"><name pos:start="167:53" pos:end="167:57">track</name></expr></argument>, <argument pos:start="167:60" pos:end="167:61"><expr pos:start="167:60" pos:end="167:61"><name pos:start="167:60" pos:end="167:61">st</name></expr></argument>, <argument pos:start="167:64" pos:end="167:67"><expr pos:start="167:64" pos:end="167:67"><name pos:start="167:64" pos:end="167:67">data</name></expr></argument>, <argument pos:start="167:70" pos:end="167:73"><expr pos:start="167:70" pos:end="167:73"><name pos:start="167:70" pos:end="167:73">size</name></expr></argument>,

                                          <argument pos:start="169:43" pos:end="169:50"><expr pos:start="169:43" pos:end="169:50"><name pos:start="169:43" pos:end="169:50">timecode</name></expr></argument>, <argument pos:start="169:53" pos:end="169:60"><expr pos:start="169:53" pos:end="169:60"><name pos:start="169:53" pos:end="169:60">duration</name></expr></argument>, <argument pos:start="169:63" pos:end="169:65"><expr pos:start="169:63" pos:end="169:65"><name pos:start="169:63" pos:end="169:65">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="173:25"><if pos:start="171:13" pos:end="173:25">if <condition pos:start="171:16" pos:end="171:20">(<expr pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">res</name></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:25"><block_content pos:start="173:17" pos:end="173:25">

                <goto pos:start="173:17" pos:end="173:25">goto <name pos:start="173:22" pos:end="173:24">end</name>;</goto></block_content></block></if></if_stmt>



        </block_content>}</block></if> <else pos:start="177:11" pos:end="189:9">else <block pos:start="177:16" pos:end="189:9">{<block_content pos:start="179:13" pos:end="187:25">

            <expr_stmt pos:start="179:13" pos:end="183:64"><expr pos:start="179:13" pos:end="183:63"><name pos:start="179:13" pos:end="179:15">res</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <call pos:start="179:19" pos:end="183:63"><name pos:start="179:19" pos:end="179:38">matroska_parse_frame</name><argument_list pos:start="179:39" pos:end="183:63">(<argument pos:start="179:40" pos:end="179:47"><expr pos:start="179:40" pos:end="179:47"><name pos:start="179:40" pos:end="179:47">matroska</name></expr></argument>, <argument pos:start="179:50" pos:end="179:54"><expr pos:start="179:50" pos:end="179:54"><name pos:start="179:50" pos:end="179:54">track</name></expr></argument>, <argument pos:start="179:57" pos:end="179:58"><expr pos:start="179:57" pos:end="179:58"><name pos:start="179:57" pos:end="179:58">st</name></expr></argument>, <argument pos:start="179:61" pos:end="179:64"><expr pos:start="179:61" pos:end="179:64"><name pos:start="179:61" pos:end="179:64">data</name></expr></argument>, <argument pos:start="179:67" pos:end="179:78"><expr pos:start="179:67" pos:end="179:78"><name pos:start="179:67" pos:end="179:78"><name pos:start="179:67" pos:end="179:75">lace_size</name><index pos:start="179:76" pos:end="179:78">[<expr pos:start="179:77" pos:end="179:77"><name pos:start="179:77" pos:end="179:77">n</name></expr>]</index></name></expr></argument>,

                                      <argument pos:start="181:39" pos:end="181:46"><expr pos:start="181:39" pos:end="181:46"><name pos:start="181:39" pos:end="181:46">timecode</name></expr></argument>, <argument pos:start="181:49" pos:end="181:56"><expr pos:start="181:49" pos:end="181:56"><name pos:start="181:49" pos:end="181:56">duration</name></expr></argument>,

                                      <argument pos:start="183:39" pos:end="183:41"><expr pos:start="183:39" pos:end="183:41"><name pos:start="183:39" pos:end="183:41">pos</name></expr></argument>, <argument pos:start="183:44" pos:end="183:62"><expr pos:start="183:44" pos:end="183:62"><ternary pos:start="183:44" pos:end="183:62"><condition pos:start="183:44" pos:end="183:46"><expr pos:start="183:44" pos:end="183:45"><operator pos:start="183:44" pos:end="183:44">!</operator><name pos:start="183:45" pos:end="183:45">n</name></expr>?</condition><then pos:start="183:48" pos:end="183:58"> <expr pos:start="183:48" pos:end="183:58"><name pos:start="183:48" pos:end="183:58">is_keyframe</name></expr> </then><else pos:start="183:60" pos:end="183:62">: <expr pos:start="183:62" pos:end="183:62"><literal type="number" pos:start="183:62" pos:end="183:62">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="185:13" pos:end="187:25"><if pos:start="185:13" pos:end="187:25">if <condition pos:start="185:16" pos:end="185:20">(<expr pos:start="185:17" pos:end="185:19"><name pos:start="185:17" pos:end="185:19">res</name></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:25"><block_content pos:start="187:17" pos:end="187:25">

                <goto pos:start="187:17" pos:end="187:25">goto <name pos:start="187:22" pos:end="187:24">end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="193:9" pos:end="195:71"><if pos:start="193:9" pos:end="195:71">if <condition pos:start="193:12" pos:end="193:39">(<expr pos:start="193:13" pos:end="193:38"><name pos:start="193:13" pos:end="193:20">timecode</name> <operator pos:start="193:22" pos:end="193:23">!=</operator> <name pos:start="193:25" pos:end="193:38">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:71"><block_content pos:start="195:13" pos:end="195:71">

            <expr_stmt pos:start="195:13" pos:end="195:71"><expr pos:start="195:13" pos:end="195:70"><name pos:start="195:13" pos:end="195:20">timecode</name> <operator pos:start="195:22" pos:end="195:22">=</operator> <ternary pos:start="195:24" pos:end="195:70"><condition pos:start="195:24" pos:end="195:33"><expr pos:start="195:24" pos:end="195:31"><name pos:start="195:24" pos:end="195:31">duration</name></expr> ?</condition><then pos:start="195:35" pos:end="195:53"> <expr pos:start="195:35" pos:end="195:53"><name pos:start="195:35" pos:end="195:42">timecode</name> <operator pos:start="195:44" pos:end="195:44">+</operator> <name pos:start="195:46" pos:end="195:53">duration</name></expr> </then><else pos:start="195:55" pos:end="195:70">: <expr pos:start="195:57" pos:end="195:70"><name pos:start="195:57" pos:end="195:70">AV_NOPTS_VALUE</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:29"><expr pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:12">data</name> <operator pos:start="197:14" pos:end="197:15">+=</operator> <name pos:start="197:17" pos:end="197:28"><name pos:start="197:17" pos:end="197:25">lace_size</name><index pos:start="197:26" pos:end="197:28">[<expr pos:start="197:27" pos:end="197:27"><name pos:start="197:27" pos:end="197:27">n</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:29"><expr pos:start="199:9" pos:end="199:28"><name pos:start="199:9" pos:end="199:12">size</name> <operator pos:start="199:14" pos:end="199:15">-=</operator> <name pos:start="199:17" pos:end="199:28"><name pos:start="199:17" pos:end="199:25">lace_size</name><index pos:start="199:26" pos:end="199:28">[<expr pos:start="199:27" pos:end="199:27"><name pos:start="199:27" pos:end="199:27">n</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



<label pos:start="205:1" pos:end="205:4"><name pos:start="205:1" pos:end="205:3">end</name>:</label>

    <expr_stmt pos:start="207:5" pos:end="207:23"><expr pos:start="207:5" pos:end="207:22"><call pos:start="207:5" pos:end="207:22"><name pos:start="207:5" pos:end="207:11">av_free</name><argument_list pos:start="207:12" pos:end="207:22">(<argument pos:start="207:13" pos:end="207:21"><expr pos:start="207:13" pos:end="207:21"><name pos:start="207:13" pos:end="207:21">lace_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="209:5" pos:end="209:15">return <expr pos:start="209:12" pos:end="209:14"><name pos:start="209:12" pos:end="209:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
