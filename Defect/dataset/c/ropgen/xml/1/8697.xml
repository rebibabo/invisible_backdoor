<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8697.c" pos:tabs="8"><function pos:start="1:1" pos:end="144:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">get_physical_address_data</name><parameter_list pos:start="1:37" pos:end="5:79">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">CPUState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">env</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:65"><decl pos:start="3:38" pos:end="3:65"><type pos:start="3:38" pos:end="3:65"><name pos:start="3:38" pos:end="3:55">target_phys_addr_t</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:65">physical</name></decl></parameter>, <parameter pos:start="3:68" pos:end="3:76"><decl pos:start="3:68" pos:end="3:76"><type pos:start="3:68" pos:end="3:76"><name pos:start="3:68" pos:end="3:70">int</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:76">prot</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:57"><decl pos:start="5:38" pos:end="5:57"><type pos:start="5:38" pos:end="5:57"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:57">address</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:65"><decl pos:start="5:60" pos:end="5:65"><type pos:start="5:60" pos:end="5:65"><name pos:start="5:60" pos:end="5:62">int</name></type> <name pos:start="5:64" pos:end="5:65">rw</name></decl></parameter>, <parameter pos:start="5:68" pos:end="5:78"><decl pos:start="5:68" pos:end="5:78"><type pos:start="5:68" pos:end="5:78"><name pos:start="5:68" pos:end="5:70">int</name></type> <name pos:start="5:72" pos:end="5:78">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="144:1">{<block_content pos:start="9:5" pos:end="142:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:20">context</name></decl>;</decl_stmt>



    <decl_stmt pos:start="15:5" pos:end="17:54"><decl pos:start="15:5" pos:end="17:53"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">is_user</name> <init pos:start="15:17" pos:end="17:53">= <expr pos:start="15:19" pos:end="17:53"><operator pos:start="15:19" pos:end="15:19">(</operator><name pos:start="15:20" pos:end="15:26">mmu_idx</name> <operator pos:start="15:28" pos:end="15:29">==</operator> <name pos:start="15:31" pos:end="15:42">MMU_USER_IDX</name> <operator pos:start="15:44" pos:end="15:45">||</operator>

                   <name pos:start="17:20" pos:end="17:26">mmu_idx</name> <operator pos:start="17:28" pos:end="17:29">==</operator> <name pos:start="17:31" pos:end="17:52">MMU_USER_SECONDARY_IDX</name><operator pos:start="17:53" pos:end="17:53">)</operator></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:17"><name pos:start="21:10" pos:end="21:12">env</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">lsu</name></name> <operator pos:start="21:19" pos:end="21:19">&amp;</operator> <name pos:start="21:21" pos:end="21:26">DMMU_E</name><operator pos:start="21:27" pos:end="21:27">)</operator> <operator pos:start="21:29" pos:end="21:30">==</operator> <literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr>)</condition> <block pos:start="21:35" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:17"> <comment type="block" pos:start="21:37" pos:end="21:55">/* DMMU disabled */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><operator pos:start="23:9" pos:end="23:9">*</operator><name pos:start="23:10" pos:end="23:17">physical</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:57"><name pos:start="23:21" pos:end="23:48">ultrasparc_truncate_physical</name><argument_list pos:start="23:49" pos:end="23:57">(<argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:13">prot</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <name pos:start="25:17" pos:end="25:25">PAGE_READ</name> <operator pos:start="25:27" pos:end="25:27">|</operator> <name pos:start="25:29" pos:end="25:38">PAGE_WRITE</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="33:5" pos:end="58:5">switch<condition pos:start="33:11" pos:end="33:19">(<expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:18">mmu_idx</name></expr>)</condition> <block pos:start="33:21" pos:end="58:5">{<block_content pos:start="35:5" pos:end="56:14">

    <case pos:start="35:5" pos:end="35:22">case <expr pos:start="35:10" pos:end="35:21"><name pos:start="35:10" pos:end="35:21">MMU_USER_IDX</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">MMU_KERNEL_IDX</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:15">context</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:47"><name pos:start="39:19" pos:end="39:21">env</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:27">dmmu</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:47">mmu_primary_context</name></name> <operator pos:start="39:49" pos:end="39:49">&amp;</operator> <literal type="number" pos:start="39:51" pos:end="39:56">0x1fff</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:32">case <expr pos:start="43:10" pos:end="43:31"><name pos:start="43:10" pos:end="43:31">MMU_USER_SECONDARY_IDX</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:34">case <expr pos:start="45:10" pos:end="45:33"><name pos:start="45:10" pos:end="45:33">MMU_KERNEL_SECONDARY_IDX</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:15">context</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:49"><name pos:start="47:19" pos:end="47:21">env</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:27">dmmu</name><operator pos:start="47:28" pos:end="47:28">.</operator><name pos:start="47:29" pos:end="47:49">mmu_secondary_context</name></name> <operator pos:start="47:51" pos:end="47:51">&amp;</operator> <literal type="number" pos:start="47:53" pos:end="47:58">0x1fff</literal></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:25">case <expr pos:start="51:10" pos:end="51:24"><name pos:start="51:10" pos:end="51:24">MMU_NUCLEUS_IDX</name></expr>:</case>


        <expr_stmt pos:start="54:9" pos:end="54:20"><expr pos:start="54:9" pos:end="54:19"><name pos:start="54:9" pos:end="54:15">context</name> <operator pos:start="54:17" pos:end="54:17">=</operator> <literal type="number" pos:start="54:19" pos:end="54:19">0</literal></expr>;</expr_stmt>

        <break pos:start="56:9" pos:end="56:14">break;</break>

    </block_content>}</block></switch>



    <for pos:start="62:5" pos:end="133:0">for <control pos:start="62:9" pos:end="62:28">(<init pos:start="62:10" pos:end="62:15"><expr pos:start="62:10" pos:end="62:14"><name pos:start="62:10" pos:end="62:10">i</name> <operator pos:start="62:12" pos:end="62:12">=</operator> <literal type="number" pos:start="62:14" pos:end="62:14">0</literal></expr>;</init> <condition pos:start="62:17" pos:end="62:23"><expr pos:start="62:17" pos:end="62:22"><name pos:start="62:17" pos:end="62:17">i</name> <operator pos:start="62:19" pos:end="62:19">&lt;</operator> <literal type="number" pos:start="62:21" pos:end="62:22">64</literal></expr>;</condition> <incr pos:start="62:25" pos:end="62:27"><expr pos:start="62:25" pos:end="62:27"><name pos:start="62:25" pos:end="62:25">i</name><operator pos:start="62:26" pos:end="62:27">++</operator></expr></incr>)</control> <block pos:start="62:30" pos:end="133:0">{<block_content pos:start="66:9" pos:end="128:9">

        <comment type="line" pos:start="64:9" pos:end="64:41">// ctx match, vaddr match, valid?</comment>

        <if_stmt pos:start="66:9" pos:end="128:9"><if pos:start="66:9" pos:end="128:9">if <condition pos:start="66:12" pos:end="68:61">(<expr pos:start="66:13" pos:end="68:60"><call pos:start="66:13" pos:end="68:60"><name pos:start="66:13" pos:end="66:32">ultrasparc_tag_match</name><argument_list pos:start="66:33" pos:end="68:60">(<argument pos:start="66:34" pos:end="66:46"><expr pos:start="66:34" pos:end="66:46"><operator pos:start="66:34" pos:end="66:34">&amp;</operator><name pos:start="66:35" pos:end="66:46"><name pos:start="66:35" pos:end="66:37">env</name><operator pos:start="66:38" pos:end="66:39">-&gt;</operator><name pos:start="66:40" pos:end="66:43">dtlb</name><index pos:start="66:44" pos:end="66:46">[<expr pos:start="66:45" pos:end="66:45"><name pos:start="66:45" pos:end="66:45">i</name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="68:34" pos:end="68:40"><expr pos:start="68:34" pos:end="68:40"><name pos:start="68:34" pos:end="68:40">address</name></expr></argument>, <argument pos:start="68:43" pos:end="68:49"><expr pos:start="68:43" pos:end="68:49"><name pos:start="68:43" pos:end="68:49">context</name></expr></argument>, <argument pos:start="68:52" pos:end="68:59"><expr pos:start="68:52" pos:end="68:59"><name pos:start="68:52" pos:end="68:59">physical</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="68:63" pos:end="128:9">{<block_content pos:start="72:13" pos:end="126:21">

            <comment type="line" pos:start="70:13" pos:end="70:25">// access ok?</comment>

            <if_stmt pos:start="72:13" pos:end="116:13"><if pos:start="72:13" pos:end="116:13">if <condition pos:start="72:16" pos:end="74:57">(<expr pos:start="72:17" pos:end="74:56"><operator pos:start="72:17" pos:end="72:17">(</operator><operator pos:start="72:18" pos:end="72:18">(</operator><name pos:start="72:19" pos:end="72:30"><name pos:start="72:19" pos:end="72:21">env</name><operator pos:start="72:22" pos:end="72:23">-&gt;</operator><name pos:start="72:24" pos:end="72:27">dtlb</name><index pos:start="72:28" pos:end="72:30">[<expr pos:start="72:29" pos:end="72:29"><name pos:start="72:29" pos:end="72:29">i</name></expr>]</index></name><operator pos:start="72:31" pos:end="72:31">.</operator><name pos:start="72:32" pos:end="72:34">tte</name> <operator pos:start="72:36" pos:end="72:36">&amp;</operator> <literal type="number" pos:start="72:38" pos:end="72:40">0x4</literal><operator pos:start="72:41" pos:end="72:41">)</operator> <operator pos:start="72:43" pos:end="72:44">&amp;&amp;</operator> <name pos:start="72:46" pos:end="72:52">is_user</name><operator pos:start="72:53" pos:end="72:53">)</operator> <operator pos:start="72:55" pos:end="72:56">||</operator>

                <operator pos:start="74:17" pos:end="74:17">(</operator><operator pos:start="74:18" pos:end="74:18">!</operator><operator pos:start="74:19" pos:end="74:19">(</operator><name pos:start="74:20" pos:end="74:31"><name pos:start="74:20" pos:end="74:22">env</name><operator pos:start="74:23" pos:end="74:24">-&gt;</operator><name pos:start="74:25" pos:end="74:28">dtlb</name><index pos:start="74:29" pos:end="74:31">[<expr pos:start="74:30" pos:end="74:30"><name pos:start="74:30" pos:end="74:30">i</name></expr>]</index></name><operator pos:start="74:32" pos:end="74:32">.</operator><name pos:start="74:33" pos:end="74:35">tte</name> <operator pos:start="74:37" pos:end="74:37">&amp;</operator> <literal type="number" pos:start="74:39" pos:end="74:41">0x2</literal><operator pos:start="74:42" pos:end="74:42">)</operator> <operator pos:start="74:44" pos:end="74:45">&amp;&amp;</operator> <operator pos:start="74:47" pos:end="74:47">(</operator><name pos:start="74:48" pos:end="74:49">rw</name> <operator pos:start="74:51" pos:end="74:52">==</operator> <literal type="number" pos:start="74:54" pos:end="74:54">1</literal><operator pos:start="74:55" pos:end="74:55">)</operator><operator pos:start="74:56" pos:end="74:56">)</operator></expr>)</condition> <block pos:start="74:59" pos:end="116:13">{<block_content pos:start="76:17" pos:end="114:25">

                <decl_stmt pos:start="76:17" pos:end="76:39"><decl pos:start="76:17" pos:end="76:38"><type pos:start="76:17" pos:end="76:23"><name pos:start="76:17" pos:end="76:23">uint8_t</name></type> <name pos:start="76:25" pos:end="76:34">fault_type</name> <init pos:start="76:36" pos:end="76:38">= <expr pos:start="76:38" pos:end="76:38"><literal type="number" pos:start="76:38" pos:end="76:38">0</literal></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="80:17" pos:end="84:17"><if pos:start="80:17" pos:end="84:17">if <condition pos:start="80:20" pos:end="80:56">(<expr pos:start="80:21" pos:end="80:55"><operator pos:start="80:21" pos:end="80:21">(</operator><name pos:start="80:22" pos:end="80:33"><name pos:start="80:22" pos:end="80:24">env</name><operator pos:start="80:25" pos:end="80:26">-&gt;</operator><name pos:start="80:27" pos:end="80:30">dtlb</name><index pos:start="80:31" pos:end="80:33">[<expr pos:start="80:32" pos:end="80:32"><name pos:start="80:32" pos:end="80:32">i</name></expr>]</index></name><operator pos:start="80:34" pos:end="80:34">.</operator><name pos:start="80:35" pos:end="80:37">tte</name> <operator pos:start="80:39" pos:end="80:39">&amp;</operator> <literal type="number" pos:start="80:41" pos:end="80:43">0x4</literal><operator pos:start="80:44" pos:end="80:44">)</operator> <operator pos:start="80:46" pos:end="80:47">&amp;&amp;</operator> <name pos:start="80:49" pos:end="80:55">is_user</name></expr>)</condition> <block pos:start="80:58" pos:end="84:17">{<block_content pos:start="82:21" pos:end="82:36">

                    <expr_stmt pos:start="82:21" pos:end="82:36"><expr pos:start="82:21" pos:end="82:35"><name pos:start="82:21" pos:end="82:30">fault_type</name> <operator pos:start="82:32" pos:end="82:33">|=</operator> <literal type="number" pos:start="82:35" pos:end="82:35">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="82:38" pos:end="82:62">/* privilege violation */</comment>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="88:17" pos:end="90:39"><if pos:start="88:17" pos:end="90:39">if <condition pos:start="88:20" pos:end="88:39">(<expr pos:start="88:21" pos:end="88:38"><name pos:start="88:21" pos:end="88:34"><name pos:start="88:21" pos:end="88:23">env</name><operator pos:start="88:24" pos:end="88:25">-&gt;</operator><name pos:start="88:26" pos:end="88:29">dmmu</name><operator pos:start="88:30" pos:end="88:30">.</operator><name pos:start="88:31" pos:end="88:34">sfsr</name></name> <operator pos:start="88:36" pos:end="88:36">&amp;</operator> <literal type="number" pos:start="88:38" pos:end="88:38">1</literal></expr>)</condition><block type="pseudo" pos:start="90:21" pos:end="90:39"><block_content pos:start="90:21" pos:end="90:39"> <comment type="block" pos:start="88:41" pos:end="88:67">/* Fault status register */</comment>

                    <expr_stmt pos:start="90:21" pos:end="90:39"><expr pos:start="90:21" pos:end="90:38"><name pos:start="90:21" pos:end="90:34"><name pos:start="90:21" pos:end="90:23">env</name><operator pos:start="90:24" pos:end="90:25">-&gt;</operator><name pos:start="90:26" pos:end="90:29">dmmu</name><operator pos:start="90:30" pos:end="90:30">.</operator><name pos:start="90:31" pos:end="90:34">sfsr</name></name> <operator pos:start="90:36" pos:end="90:36">=</operator> <literal type="number" pos:start="90:38" pos:end="90:38">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="90:41" pos:end="92:62">/* overflow (not read before

                                             another fault) */</comment>



                <expr_stmt pos:start="96:17" pos:end="96:72"><expr pos:start="96:17" pos:end="96:71"><name pos:start="96:17" pos:end="96:30"><name pos:start="96:17" pos:end="96:19">env</name><operator pos:start="96:20" pos:end="96:21">-&gt;</operator><name pos:start="96:22" pos:end="96:25">dmmu</name><operator pos:start="96:26" pos:end="96:26">.</operator><name pos:start="96:27" pos:end="96:30">sfsr</name></name> <operator pos:start="96:32" pos:end="96:33">|=</operator> <operator pos:start="96:35" pos:end="96:35">(</operator><name pos:start="96:36" pos:end="96:42">is_user</name> <operator pos:start="96:44" pos:end="96:45">&lt;&lt;</operator> <literal type="number" pos:start="96:47" pos:end="96:47">3</literal><operator pos:start="96:48" pos:end="96:48">)</operator> <operator pos:start="96:50" pos:end="96:50">|</operator> <operator pos:start="96:52" pos:end="96:52">(</operator><operator pos:start="96:53" pos:end="96:53">(</operator><name pos:start="96:54" pos:end="96:55">rw</name> <operator pos:start="96:57" pos:end="96:58">==</operator> <literal type="number" pos:start="96:60" pos:end="96:60">1</literal><operator pos:start="96:61" pos:end="96:61">)</operator> <operator pos:start="96:63" pos:end="96:64">&lt;&lt;</operator> <literal type="number" pos:start="96:66" pos:end="96:66">2</literal><operator pos:start="96:67" pos:end="96:67">)</operator> <operator pos:start="96:69" pos:end="96:69">|</operator> <literal type="number" pos:start="96:71" pos:end="96:71">1</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="100:17" pos:end="100:52"><expr pos:start="100:17" pos:end="100:51"><name pos:start="100:17" pos:end="100:30"><name pos:start="100:17" pos:end="100:19">env</name><operator pos:start="100:20" pos:end="100:21">-&gt;</operator><name pos:start="100:22" pos:end="100:25">dmmu</name><operator pos:start="100:26" pos:end="100:26">.</operator><name pos:start="100:27" pos:end="100:30">sfsr</name></name> <operator pos:start="100:32" pos:end="100:33">|=</operator> <operator pos:start="100:35" pos:end="100:35">(</operator><name pos:start="100:36" pos:end="100:45">fault_type</name> <operator pos:start="100:47" pos:end="100:48">&lt;&lt;</operator> <literal type="number" pos:start="100:50" pos:end="100:50">7</literal><operator pos:start="100:51" pos:end="100:51">)</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="104:17" pos:end="104:41"><expr pos:start="104:17" pos:end="104:40"><name pos:start="104:17" pos:end="104:30"><name pos:start="104:17" pos:end="104:19">env</name><operator pos:start="104:20" pos:end="104:21">-&gt;</operator><name pos:start="104:22" pos:end="104:25">dmmu</name><operator pos:start="104:26" pos:end="104:26">.</operator><name pos:start="104:27" pos:end="104:30">sfar</name></name> <operator pos:start="104:32" pos:end="104:32">=</operator> <name pos:start="104:34" pos:end="104:40">address</name></expr>;</expr_stmt> <comment type="block" pos:start="104:43" pos:end="104:70">/* Fault address register */</comment>

                <expr_stmt pos:start="106:17" pos:end="109:0"><expr pos:start="106:17" pos:end="106:48"><name pos:start="106:17" pos:end="106:36"><name pos:start="106:17" pos:end="106:19">env</name><operator pos:start="106:20" pos:end="106:21">-&gt;</operator><name pos:start="106:22" pos:end="106:36">exception_index</name></name> <operator pos:start="106:38" pos:end="106:38">=</operator> <name pos:start="106:40" pos:end="106:48">TT_DFAULT</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="108:1" pos:end="108:16">#<cpp:directive pos:start="108:2" pos:end="108:6">ifdef</cpp:directive> <name pos:start="108:8" pos:end="108:16">DEBUG_MMU</name></cpp:ifdef>

                <expr_stmt pos:start="110:17" pos:end="113:0"><expr pos:start="110:17" pos:end="110:60"><call pos:start="110:17" pos:end="110:60"><name pos:start="110:17" pos:end="110:22">printf</name><argument_list pos:start="110:23" pos:end="110:60">(<argument pos:start="110:24" pos:end="110:50"><expr pos:start="110:24" pos:end="110:50"><literal type="string" pos:start="110:24" pos:end="110:38">"DFAULT at 0x%"</literal> <name pos:start="110:40" pos:end="110:45">PRIx64</name> <literal type="string" pos:start="110:47" pos:end="110:50">"\n"</literal></expr></argument>, <argument pos:start="110:53" pos:end="110:59"><expr pos:start="110:53" pos:end="110:59"><name pos:start="110:53" pos:end="110:59">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="112:1" pos:end="112:6">#<cpp:directive pos:start="112:2" pos:end="112:6">endif</cpp:directive></cpp:endif>

                <return pos:start="114:17" pos:end="114:25">return <expr pos:start="114:24" pos:end="114:24"><literal type="number" pos:start="114:24" pos:end="114:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:30"><expr pos:start="118:13" pos:end="118:29"><operator pos:start="118:13" pos:end="118:13">*</operator><name pos:start="118:14" pos:end="118:17">prot</name> <operator pos:start="118:19" pos:end="118:19">=</operator> <name pos:start="118:21" pos:end="118:29">PAGE_READ</name></expr>;</expr_stmt>

            <if_stmt pos:start="120:13" pos:end="122:36"><if pos:start="120:13" pos:end="122:36">if <condition pos:start="120:16" pos:end="120:39">(<expr pos:start="120:17" pos:end="120:38"><name pos:start="120:17" pos:end="120:28"><name pos:start="120:17" pos:end="120:19">env</name><operator pos:start="120:20" pos:end="120:21">-&gt;</operator><name pos:start="120:22" pos:end="120:25">dtlb</name><index pos:start="120:26" pos:end="120:28">[<expr pos:start="120:27" pos:end="120:27"><name pos:start="120:27" pos:end="120:27">i</name></expr>]</index></name><operator pos:start="120:29" pos:end="120:29">.</operator><name pos:start="120:30" pos:end="120:32">tte</name> <operator pos:start="120:34" pos:end="120:34">&amp;</operator> <literal type="number" pos:start="120:36" pos:end="120:38">0x2</literal></expr>)</condition><block type="pseudo" pos:start="122:17" pos:end="122:36"><block_content pos:start="122:17" pos:end="122:36">

                <expr_stmt pos:start="122:17" pos:end="122:36"><expr pos:start="122:17" pos:end="122:35"><operator pos:start="122:17" pos:end="122:17">*</operator><name pos:start="122:18" pos:end="122:21">prot</name> <operator pos:start="122:23" pos:end="122:24">|=</operator> <name pos:start="122:26" pos:end="122:35">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="124:13" pos:end="124:43"><expr pos:start="124:13" pos:end="124:42"><call pos:start="124:13" pos:end="124:42"><name pos:start="124:13" pos:end="124:24">TTE_SET_USED</name><argument_list pos:start="124:25" pos:end="124:42">(<argument pos:start="124:26" pos:end="124:41"><expr pos:start="124:26" pos:end="124:41"><name pos:start="124:26" pos:end="124:37"><name pos:start="124:26" pos:end="124:28">env</name><operator pos:start="124:29" pos:end="124:30">-&gt;</operator><name pos:start="124:31" pos:end="124:34">dtlb</name><index pos:start="124:35" pos:end="124:37">[<expr pos:start="124:36" pos:end="124:36"><name pos:start="124:36" pos:end="124:36">i</name></expr>]</index></name><operator pos:start="124:38" pos:end="124:38">.</operator><name pos:start="124:39" pos:end="124:41">tte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="126:13" pos:end="126:21">return <expr pos:start="126:20" pos:end="126:20"><literal type="number" pos:start="126:20" pos:end="126:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:ifdef pos:start="132:1" pos:end="132:16">#<cpp:directive pos:start="132:2" pos:end="132:6">ifdef</cpp:directive> <name pos:start="132:8" pos:end="132:16">DEBUG_MMU</name></cpp:ifdef>

    <expr_stmt pos:start="134:5" pos:end="137:0"><expr pos:start="134:5" pos:end="134:47"><call pos:start="134:5" pos:end="134:47"><name pos:start="134:5" pos:end="134:10">printf</name><argument_list pos:start="134:11" pos:end="134:47">(<argument pos:start="134:12" pos:end="134:37"><expr pos:start="134:12" pos:end="134:37"><literal type="string" pos:start="134:12" pos:end="134:25">"DMISS at 0x%"</literal> <name pos:start="134:27" pos:end="134:32">PRIx64</name> <literal type="string" pos:start="134:34" pos:end="134:37">"\n"</literal></expr></argument>, <argument pos:start="134:40" pos:end="134:46"><expr pos:start="134:40" pos:end="134:46"><name pos:start="134:40" pos:end="134:46">address</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="136:1" pos:end="136:6">#<cpp:directive pos:start="136:2" pos:end="136:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="138:5" pos:end="138:60"><expr pos:start="138:5" pos:end="138:59"><name pos:start="138:5" pos:end="138:24"><name pos:start="138:5" pos:end="138:7">env</name><operator pos:start="138:8" pos:end="138:9">-&gt;</operator><name pos:start="138:10" pos:end="138:13">dmmu</name><operator pos:start="138:14" pos:end="138:14">.</operator><name pos:start="138:15" pos:end="138:24">tag_access</name></name> <operator pos:start="138:26" pos:end="138:26">=</operator> <operator pos:start="138:28" pos:end="138:28">(</operator><name pos:start="138:29" pos:end="138:35">address</name> <operator pos:start="138:37" pos:end="138:37">&amp;</operator> <operator pos:start="138:39" pos:end="138:39">~</operator><literal type="number" pos:start="138:40" pos:end="138:48">0x1fffULL</literal><operator pos:start="138:49" pos:end="138:49">)</operator> <operator pos:start="138:51" pos:end="138:51">|</operator> <name pos:start="138:53" pos:end="138:59">context</name></expr>;</expr_stmt>

    <expr_stmt pos:start="140:5" pos:end="140:36"><expr pos:start="140:5" pos:end="140:35"><name pos:start="140:5" pos:end="140:24"><name pos:start="140:5" pos:end="140:7">env</name><operator pos:start="140:8" pos:end="140:9">-&gt;</operator><name pos:start="140:10" pos:end="140:24">exception_index</name></name> <operator pos:start="140:26" pos:end="140:26">=</operator> <name pos:start="140:28" pos:end="140:35">TT_DMISS</name></expr>;</expr_stmt>

    <return pos:start="142:5" pos:end="142:13">return <expr pos:start="142:12" pos:end="142:12"><literal type="number" pos:start="142:12" pos:end="142:12">1</literal></expr>;</return>

</block_content>}</block></function></unit>
