<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21032.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">cng_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:46"><decl pos:start="3:29" pos:end="3:46"><type pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:46">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:56">AVPacket</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:63">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:20">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:18">frame</name> <init pos:start="7:20" pos:end="7:25">= <expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">CNGContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">p</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">buf_size</name>  <init pos:start="11:19" pos:end="11:31">= <expr pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:31"><name pos:start="11:21" pos:end="11:25">avpkt</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">int16_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">buf_out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">float</name></type> <name pos:start="17:11" pos:end="17:11">e</name> <init pos:start="17:13" pos:end="17:17">= <expr pos:start="17:15" pos:end="17:17"><literal type="number" pos:start="17:15" pos:end="17:17">1.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:17">scaling</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="37:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:13">avpkt</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">size</name></name></expr>)</condition> <block pos:start="23:22" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <decl_stmt pos:start="25:9" pos:end="25:35"><decl pos:start="25:9" pos:end="25:34"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:16">dbov</name> <init pos:start="25:18" pos:end="25:34">= <expr pos:start="25:20" pos:end="25:34"><operator pos:start="25:20" pos:end="25:20">-</operator><name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:25">avpkt</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:31">data</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:69"><expr pos:start="27:9" pos:end="27:68"><name pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:9">p</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:24">target_energy</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <literal type="number" pos:start="27:28" pos:end="27:37">1081109975</literal> <operator pos:start="27:39" pos:end="27:39">*</operator> <call pos:start="27:41" pos:end="27:61"><name pos:start="27:41" pos:end="27:48">ff_exp10</name><argument_list pos:start="27:49" pos:end="27:61">(<argument pos:start="27:50" pos:end="27:60"><expr pos:start="27:50" pos:end="27:60"><name pos:start="27:50" pos:end="27:53">dbov</name> <operator pos:start="27:55" pos:end="27:55">/</operator> <literal type="number" pos:start="27:57" pos:end="27:60">10.0</literal></expr></argument>)</argument_list></call> <operator pos:start="27:63" pos:end="27:63">*</operator> <literal type="number" pos:start="27:65" pos:end="27:68">0.75</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:80"><expr pos:start="29:9" pos:end="29:79"><call pos:start="29:9" pos:end="29:79"><name pos:start="29:9" pos:end="29:14">memset</name><argument_list pos:start="29:15" pos:end="29:79">(<argument pos:start="29:16" pos:end="29:34"><expr pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:34"><name pos:start="29:16" pos:end="29:16">p</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:34">target_refl_coef</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:37"><expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr></argument>, <argument pos:start="29:40" pos:end="29:78"><expr pos:start="29:40" pos:end="29:78"><name pos:start="29:40" pos:end="29:47"><name pos:start="29:40" pos:end="29:40">p</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:47">order</name></name> <operator pos:start="29:49" pos:end="29:49">*</operator> <sizeof pos:start="29:51" pos:end="29:78">sizeof<argument_list pos:start="29:57" pos:end="29:78">(<argument pos:start="29:58" pos:end="29:77"><expr pos:start="29:58" pos:end="29:77"><operator pos:start="29:58" pos:end="29:58">*</operator><name pos:start="29:59" pos:end="29:77"><name pos:start="29:59" pos:end="29:59">p</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:77">target_refl_coef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="35:9">for <control pos:start="31:13" pos:end="31:62">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">i</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:57"><expr pos:start="31:21" pos:end="31:56"><name pos:start="31:21" pos:end="31:21">i</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <call pos:start="31:25" pos:end="31:56"><name pos:start="31:25" pos:end="31:29">FFMIN</name><argument_list pos:start="31:30" pos:end="31:56">(<argument pos:start="31:31" pos:end="31:45"><expr pos:start="31:31" pos:end="31:45"><name pos:start="31:31" pos:end="31:41"><name pos:start="31:31" pos:end="31:35">avpkt</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:41">size</name></name> <operator pos:start="31:43" pos:end="31:43">-</operator> <literal type="number" pos:start="31:45" pos:end="31:45">1</literal></expr></argument>, <argument pos:start="31:48" pos:end="31:55"><expr pos:start="31:48" pos:end="31:55"><name pos:start="31:48" pos:end="31:55"><name pos:start="31:48" pos:end="31:48">p</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:55">order</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="31:59" pos:end="31:61"><expr pos:start="31:59" pos:end="31:61"><name pos:start="31:59" pos:end="31:59">i</name><operator pos:start="31:60" pos:end="31:61">++</operator></expr></incr>)</control> <block pos:start="31:64" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:72">

            <expr_stmt pos:start="33:13" pos:end="33:72"><expr pos:start="33:13" pos:end="33:71"><name pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:13">p</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:31">target_refl_coef</name><index pos:start="33:32" pos:end="33:34">[<expr pos:start="33:33" pos:end="33:33"><name pos:start="33:33" pos:end="33:33">i</name></expr>]</index></name> <operator pos:start="33:36" pos:end="33:36">=</operator> <operator pos:start="33:38" pos:end="33:38">(</operator><name pos:start="33:39" pos:end="33:56"><name pos:start="33:39" pos:end="33:43">avpkt</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:49">data</name><index pos:start="33:50" pos:end="33:56">[<expr pos:start="33:51" pos:end="33:55"><literal type="number" pos:start="33:51" pos:end="33:53">1</literal> <operator pos:start="33:53" pos:end="33:53">+</operator> <name pos:start="33:55" pos:end="33:55">i</name></expr>]</index></name> <operator pos:start="33:58" pos:end="33:58">-</operator> <literal type="number" pos:start="33:60" pos:end="33:62">127</literal><operator pos:start="33:63" pos:end="33:63">)</operator> <operator pos:start="33:65" pos:end="33:65">/</operator> <literal type="number" pos:start="33:67" pos:end="33:71">128.0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:63">(<expr pos:start="41:9" pos:end="41:62"><name pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:13">avctx</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">internal</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:37">skip_samples</name></name> <operator pos:start="41:39" pos:end="41:39">&gt;</operator> <literal type="number" pos:start="41:41" pos:end="41:42">10</literal> <operator pos:start="41:44" pos:end="41:44">*</operator> <name pos:start="41:46" pos:end="41:62"><name pos:start="41:46" pos:end="41:50">avctx</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:62">frame_size</name></name></expr>)</condition> <block pos:start="41:65" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:35">

        <expr_stmt pos:start="43:9" pos:end="43:42"><expr pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:37"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">internal</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:37">skip_samples</name></name> <operator pos:start="43:39" pos:end="43:39">=</operator> <literal type="number" pos:start="43:41" pos:end="43:41">0</literal></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="67:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:18">(<expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:9">p</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:17">inited</name></name></expr>)</condition> <block pos:start="51:20" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:82">

        <expr_stmt pos:start="53:9" pos:end="53:57"><expr pos:start="53:9" pos:end="53:56"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:9">p</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">energy</name></name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:29"><name pos:start="53:21" pos:end="53:21">p</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:29">energy</name></name> <operator pos:start="53:31" pos:end="53:31">/</operator> <literal type="number" pos:start="53:33" pos:end="53:35">2</literal> <operator pos:start="53:35" pos:end="53:35">+</operator> <name pos:start="53:37" pos:end="53:52"><name pos:start="53:37" pos:end="53:37">p</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:52">target_energy</name></name> <operator pos:start="53:54" pos:end="53:54">/</operator> <literal type="number" pos:start="53:56" pos:end="53:56">2</literal></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="57:82">for <control pos:start="55:13" pos:end="55:38">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:33"><expr pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:32"><name pos:start="55:25" pos:end="55:25">p</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:32">order</name></name></expr>;</condition> <incr pos:start="55:35" pos:end="55:37"><expr pos:start="55:35" pos:end="55:37"><name pos:start="55:35" pos:end="55:35">i</name><operator pos:start="55:36" pos:end="55:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:82"><block_content pos:start="57:13" pos:end="57:82">

            <expr_stmt pos:start="57:13" pos:end="57:82"><expr pos:start="57:13" pos:end="57:81"><name pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:13">p</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:24">refl_coef</name><index pos:start="57:25" pos:end="57:27">[<expr pos:start="57:26" pos:end="57:26"><name pos:start="57:26" pos:end="57:26">i</name></expr>]</index></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <literal type="number" pos:start="57:31" pos:end="57:33">0.6</literal> <operator pos:start="57:35" pos:end="57:35">*</operator><name pos:start="57:36" pos:end="57:50"><name pos:start="57:36" pos:end="57:36">p</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:47">refl_coef</name><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">i</name></expr>]</index></name> <operator pos:start="57:52" pos:end="57:52">+</operator> <literal type="number" pos:start="57:54" pos:end="57:56">0.4</literal> <operator pos:start="57:58" pos:end="57:58">*</operator> <name pos:start="57:60" pos:end="57:81"><name pos:start="57:60" pos:end="57:60">p</name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:78">target_refl_coef</name><index pos:start="57:79" pos:end="57:81">[<expr pos:start="57:80" pos:end="57:80"><name pos:start="57:80" pos:end="57:80">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="67:5">else <block pos:start="59:12" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:22">

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:9">p</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:17">energy</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:36"><name pos:start="61:21" pos:end="61:21">p</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:36">target_energy</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:84"><expr pos:start="63:9" pos:end="63:83"><call pos:start="63:9" pos:end="63:83"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:83">(<argument pos:start="63:16" pos:end="63:27"><expr pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:16">p</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:27">refl_coef</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:48"><expr pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:30">p</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:48">target_refl_coef</name></name></expr></argument>, <argument pos:start="63:51" pos:end="63:82"><expr pos:start="63:51" pos:end="63:82"><name pos:start="63:51" pos:end="63:58"><name pos:start="63:51" pos:end="63:51">p</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:58">order</name></name> <operator pos:start="63:60" pos:end="63:60">*</operator> <sizeof pos:start="63:62" pos:end="63:82">sizeof<argument_list pos:start="63:68" pos:end="63:82">(<argument pos:start="63:69" pos:end="63:81"><expr pos:start="63:69" pos:end="63:81"><operator pos:start="63:69" pos:end="63:69">*</operator><name pos:start="63:70" pos:end="63:81"><name pos:start="63:70" pos:end="63:70">p</name><operator pos:start="63:71" pos:end="63:72">-&gt;</operator><name pos:start="63:73" pos:end="63:81">refl_coef</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:22"><expr pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:9">p</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:17">inited</name></name> <operator pos:start="65:19" pos:end="65:19">=</operator> <literal type="number" pos:start="65:21" pos:end="65:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><call pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:18">make_lpc_coefs</name><argument_list pos:start="69:19" pos:end="69:55">(<argument pos:start="69:20" pos:end="69:30"><expr pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:30"><name pos:start="69:20" pos:end="69:20">p</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:30">lpc_coef</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:44"><expr pos:start="69:33" pos:end="69:44"><name pos:start="69:33" pos:end="69:44"><name pos:start="69:33" pos:end="69:33">p</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:44">refl_coef</name></name></expr></argument>, <argument pos:start="69:47" pos:end="69:54"><expr pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:54"><name pos:start="69:47" pos:end="69:47">p</name><operator pos:start="69:48" pos:end="69:49">-&gt;</operator><name pos:start="69:50" pos:end="69:54">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="73:5" pos:end="75:51">for <control pos:start="73:9" pos:end="73:34">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:29"><expr pos:start="73:17" pos:end="73:28"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:28"><name pos:start="73:21" pos:end="73:21">p</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:28">order</name></name></expr>;</condition> <incr pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:31">i</name><operator pos:start="73:32" pos:end="73:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:9" pos:end="75:51"><block_content pos:start="75:9" pos:end="75:51">

        <expr_stmt pos:start="75:9" pos:end="75:51"><expr pos:start="75:9" pos:end="75:50"><name pos:start="75:9" pos:end="75:9">e</name> <operator pos:start="75:11" pos:end="75:12">*=</operator> <literal type="number" pos:start="75:14" pos:end="75:18">1.0</literal> <operator pos:start="75:18" pos:end="75:18">-</operator> <name pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:20">p</name><operator pos:start="75:21" pos:end="75:22">-&gt;</operator><name pos:start="75:23" pos:end="75:31">refl_coef</name><index pos:start="75:32" pos:end="75:34">[<expr pos:start="75:33" pos:end="75:33"><name pos:start="75:33" pos:end="75:33">i</name></expr>]</index></name><operator pos:start="75:35" pos:end="75:35">*</operator><name pos:start="75:36" pos:end="75:50"><name pos:start="75:36" pos:end="75:36">p</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:47">refl_coef</name><index pos:start="75:48" pos:end="75:50">[<expr pos:start="75:49" pos:end="75:49"><name pos:start="75:49" pos:end="75:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="79:5" pos:end="79:47"><expr pos:start="79:5" pos:end="79:46"><name pos:start="79:5" pos:end="79:11">scaling</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="79:46"><name pos:start="79:15" pos:end="79:18">sqrt</name><argument_list pos:start="79:19" pos:end="79:46">(<argument pos:start="79:20" pos:end="79:45"><expr pos:start="79:20" pos:end="79:45"><name pos:start="79:20" pos:end="79:20">e</name> <operator pos:start="79:22" pos:end="79:22">*</operator> <name pos:start="79:24" pos:end="79:32"><name pos:start="79:24" pos:end="79:24">p</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:32">energy</name></name> <operator pos:start="79:34" pos:end="79:34">/</operator> <literal type="number" pos:start="79:36" pos:end="79:45">1081109975</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="81:5" pos:end="87:5">for <control pos:start="81:9" pos:end="81:43">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:38"><expr pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:37"><name pos:start="81:21" pos:end="81:25">avctx</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:37">frame_size</name></name></expr>;</condition> <incr pos:start="81:40" pos:end="81:42"><expr pos:start="81:40" pos:end="81:42"><name pos:start="81:40" pos:end="81:40">i</name><operator pos:start="81:41" pos:end="81:42">++</operator></expr></incr>)</control> <block pos:start="81:45" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:39">

        <decl_stmt pos:start="83:9" pos:end="83:56"><decl pos:start="83:9" pos:end="83:55"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:13">r</name> <init pos:start="83:15" pos:end="83:55">= <expr pos:start="83:17" pos:end="83:55"><operator pos:start="83:17" pos:end="83:17">(</operator><call pos:start="83:18" pos:end="83:36"><name pos:start="83:18" pos:end="83:27">av_lfg_get</name><argument_list pos:start="83:28" pos:end="83:36">(<argument pos:start="83:29" pos:end="83:35"><expr pos:start="83:29" pos:end="83:35"><operator pos:start="83:29" pos:end="83:29">&amp;</operator><name pos:start="83:30" pos:end="83:35"><name pos:start="83:30" pos:end="83:30">p</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:35">lfg</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:38" pos:end="83:38">&amp;</operator> <literal type="number" pos:start="83:40" pos:end="83:45">0xffff</literal><operator pos:start="83:46" pos:end="83:46">)</operator> <operator pos:start="83:48" pos:end="83:48">-</operator> <literal type="number" pos:start="83:50" pos:end="83:55">0x8000</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:39"><expr pos:start="85:9" pos:end="85:38"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:9">p</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">excitation</name><index pos:start="85:22" pos:end="85:24">[<expr pos:start="85:23" pos:end="85:23"><name pos:start="85:23" pos:end="85:23">i</name></expr>]</index></name> <operator pos:start="85:26" pos:end="85:26">=</operator> <name pos:start="85:28" pos:end="85:34">scaling</name> <operator pos:start="85:36" pos:end="85:36">*</operator> <name pos:start="85:38" pos:end="85:38">r</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="89:5" pos:end="91:77"><expr pos:start="89:5" pos:end="91:76"><call pos:start="89:5" pos:end="91:76"><name pos:start="89:5" pos:end="89:32">ff_celp_lp_synthesis_filterf</name><argument_list pos:start="89:33" pos:end="91:76">(<argument pos:start="89:34" pos:end="89:57"><expr pos:start="89:34" pos:end="89:57"><name pos:start="89:34" pos:end="89:46"><name pos:start="89:34" pos:end="89:34">p</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:46">filter_out</name></name> <operator pos:start="89:48" pos:end="89:48">+</operator> <name pos:start="89:50" pos:end="89:57"><name pos:start="89:50" pos:end="89:50">p</name><operator pos:start="89:51" pos:end="89:52">-&gt;</operator><name pos:start="89:53" pos:end="89:57">order</name></name></expr></argument>, <argument pos:start="89:60" pos:end="89:70"><expr pos:start="89:60" pos:end="89:70"><name pos:start="89:60" pos:end="89:70"><name pos:start="89:60" pos:end="89:60">p</name><operator pos:start="89:61" pos:end="89:62">-&gt;</operator><name pos:start="89:63" pos:end="89:70">lpc_coef</name></name></expr></argument>,

                                 <argument pos:start="91:34" pos:end="91:46"><expr pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:46"><name pos:start="91:34" pos:end="91:34">p</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:46">excitation</name></name></expr></argument>, <argument pos:start="91:49" pos:end="91:65"><expr pos:start="91:49" pos:end="91:65"><name pos:start="91:49" pos:end="91:65"><name pos:start="91:49" pos:end="91:53">avctx</name><operator pos:start="91:54" pos:end="91:55">-&gt;</operator><name pos:start="91:56" pos:end="91:65">frame_size</name></name></expr></argument>, <argument pos:start="91:68" pos:end="91:75"><expr pos:start="91:68" pos:end="91:75"><name pos:start="91:68" pos:end="91:75"><name pos:start="91:68" pos:end="91:68">p</name><operator pos:start="91:69" pos:end="91:70">-&gt;</operator><name pos:start="91:71" pos:end="91:75">order</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:42"><expr pos:start="95:5" pos:end="95:41"><name pos:start="95:5" pos:end="95:21"><name pos:start="95:5" pos:end="95:9">frame</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:21">nb_samples</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <name pos:start="95:25" pos:end="95:41"><name pos:start="95:25" pos:end="95:29">avctx</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:41">frame_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:19"><if pos:start="97:5" pos:end="99:19">if <condition pos:start="97:8" pos:end="97:51">(<expr pos:start="97:9" pos:end="97:50"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">ret</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:45"><name pos:start="97:16" pos:end="97:28">ff_get_buffer</name><argument_list pos:start="97:29" pos:end="97:45">(<argument pos:start="97:30" pos:end="97:34"><expr pos:start="97:30" pos:end="97:34"><name pos:start="97:30" pos:end="97:34">avctx</name></expr></argument>, <argument pos:start="97:37" pos:end="97:41"><expr pos:start="97:37" pos:end="97:41"><name pos:start="97:37" pos:end="97:41">frame</name></expr></argument>, <argument pos:start="97:44" pos:end="97:44"><expr pos:start="97:44" pos:end="97:44"><literal type="number" pos:start="97:44" pos:end="97:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="97:46" pos:end="97:46">)</operator> <operator pos:start="97:48" pos:end="97:48">&lt;</operator> <literal type="number" pos:start="97:50" pos:end="97:50">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:19"><block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:40"><expr pos:start="101:5" pos:end="101:39"><name pos:start="101:5" pos:end="101:11">buf_out</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <operator pos:start="101:15" pos:end="101:15">(</operator><name pos:start="101:16" pos:end="101:22">int16_t</name> <operator pos:start="101:24" pos:end="101:24">*</operator><operator pos:start="101:25" pos:end="101:25">)</operator><name pos:start="101:26" pos:end="101:39"><name pos:start="101:26" pos:end="101:30">frame</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:36">data</name><index pos:start="101:37" pos:end="101:39">[<expr pos:start="101:38" pos:end="101:38"><literal type="number" pos:start="101:38" pos:end="101:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <for pos:start="103:5" pos:end="105:49">for <control pos:start="103:9" pos:end="103:43">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:38"><expr pos:start="103:17" pos:end="103:37"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:37"><name pos:start="103:21" pos:end="103:25">avctx</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:37">frame_size</name></name></expr>;</condition> <incr pos:start="103:40" pos:end="103:42"><expr pos:start="103:40" pos:end="103:42"><name pos:start="103:40" pos:end="103:40">i</name><operator pos:start="103:41" pos:end="103:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:9" pos:end="105:49"><block_content pos:start="105:9" pos:end="105:49">

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:18"><name pos:start="105:9" pos:end="105:15">buf_out</name><index pos:start="105:16" pos:end="105:18">[<expr pos:start="105:17" pos:end="105:17"><name pos:start="105:17" pos:end="105:17">i</name></expr>]</index></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:48"><name pos:start="105:22" pos:end="105:22">p</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:34">filter_out</name><index pos:start="105:35" pos:end="105:48">[<expr pos:start="105:36" pos:end="105:47"><name pos:start="105:36" pos:end="105:36">i</name> <operator pos:start="105:38" pos:end="105:38">+</operator> <name pos:start="105:40" pos:end="105:47"><name pos:start="105:40" pos:end="105:40">p</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:47">order</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="107:5" pos:end="109:46"><expr pos:start="107:5" pos:end="109:45"><call pos:start="107:5" pos:end="109:45"><name pos:start="107:5" pos:end="107:10">memcpy</name><argument_list pos:start="107:11" pos:end="109:45">(<argument pos:start="107:12" pos:end="107:24"><expr pos:start="107:12" pos:end="107:24"><name pos:start="107:12" pos:end="107:24"><name pos:start="107:12" pos:end="107:12">p</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:24">filter_out</name></name></expr></argument>, <argument pos:start="107:27" pos:end="107:59"><expr pos:start="107:27" pos:end="107:59"><name pos:start="107:27" pos:end="107:39"><name pos:start="107:27" pos:end="107:27">p</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:39">filter_out</name></name> <operator pos:start="107:41" pos:end="107:41">+</operator> <name pos:start="107:43" pos:end="107:59"><name pos:start="107:43" pos:end="107:47">avctx</name><operator pos:start="107:48" pos:end="107:49">-&gt;</operator><name pos:start="107:50" pos:end="107:59">frame_size</name></name></expr></argument>,

           <argument pos:start="109:12" pos:end="109:44"><expr pos:start="109:12" pos:end="109:44"><name pos:start="109:12" pos:end="109:19"><name pos:start="109:12" pos:end="109:12">p</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:19">order</name></name> <operator pos:start="109:21" pos:end="109:21">*</operator> <sizeof pos:start="109:23" pos:end="109:44">sizeof<argument_list pos:start="109:29" pos:end="109:44">(<argument pos:start="109:30" pos:end="109:43"><expr pos:start="109:30" pos:end="109:43"><operator pos:start="109:30" pos:end="109:30">*</operator><name pos:start="109:31" pos:end="109:43"><name pos:start="109:31" pos:end="109:31">p</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:43">filter_out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><operator pos:start="113:5" pos:end="113:5">*</operator><name pos:start="113:6" pos:end="113:18">got_frame_ptr</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">1</literal></expr>;</expr_stmt>



    <return pos:start="117:5" pos:end="117:20">return <expr pos:start="117:12" pos:end="117:19"><name pos:start="117:12" pos:end="117:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
