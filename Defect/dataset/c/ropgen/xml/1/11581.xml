<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11581.c" pos:tabs="8"><function pos:start="1:1" pos:end="749:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">tiff_decode_tag</name><parameter_list pos:start="1:27" pos:end="1:42">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:38">TiffContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="749:1">{<block_content pos:start="5:5" pos:end="747:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:16">tag</name></decl>, <decl pos:start="5:19" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:22">type</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:25" pos:end="5:29">count</name></decl>, <decl pos:start="5:32" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:34">off</name></decl>, <decl pos:start="5:37" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:37" pos:end="5:41">value</name> <init pos:start="5:43" pos:end="5:45">= <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">k</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">pos</name></decl>, <decl pos:start="7:23" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:27">start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint32_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">double</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:14">dp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">tag</name>   <operator pos:start="17:11" pos:end="17:11">=</operator> <call pos:start="17:13" pos:end="17:37"><name pos:start="17:13" pos:end="17:22">tget_short</name><argument_list pos:start="17:23" pos:end="17:37">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><operator pos:start="17:24" pos:end="17:24">&amp;</operator><name pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:29">gb</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:36">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:8">type</name>  <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:37"><name pos:start="19:13" pos:end="19:22">tget_short</name><argument_list pos:start="19:23" pos:end="19:37">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><operator pos:start="19:24" pos:end="19:24">&amp;</operator><name pos:start="19:25" pos:end="19:29"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:29">gb</name></name></expr></argument>, <argument pos:start="19:32" pos:end="19:36"><expr pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:36"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:36">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:9">count</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:36"><name pos:start="21:13" pos:end="21:21">tget_long</name><argument_list pos:start="21:22" pos:end="21:36">(<argument pos:start="21:23" pos:end="21:28"><expr pos:start="21:23" pos:end="21:28"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">gb</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:35"><expr pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:35"><name pos:start="21:31" pos:end="21:31">s</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:35">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:7">off</name>   <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:36"><name pos:start="23:13" pos:end="23:21">tget_long</name><argument_list pos:start="23:22" pos:end="23:36">(<argument pos:start="23:23" pos:end="23:28"><expr pos:start="23:23" pos:end="23:28"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:28"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">gb</name></name></expr></argument>, <argument pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:31">s</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:35">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:37"><expr pos:start="25:5" pos:end="25:36"><name pos:start="25:5" pos:end="25:9">start</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:36"><name pos:start="25:13" pos:end="25:28">bytestream2_tell</name><argument_list pos:start="25:29" pos:end="25:36">(<argument pos:start="25:30" pos:end="25:35"><expr pos:start="25:30" pos:end="25:35"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:35"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:56">(<expr pos:start="29:9" pos:end="29:55"><name pos:start="29:9" pos:end="29:12">type</name> <operator pos:start="29:14" pos:end="29:15">==</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal> <operator pos:start="29:19" pos:end="29:20">||</operator> <name pos:start="29:22" pos:end="29:25">type</name> <operator pos:start="29:27" pos:end="29:28">&gt;=</operator> <call pos:start="29:30" pos:end="29:55"><name pos:start="29:30" pos:end="29:43">FF_ARRAY_ELEMS</name><argument_list pos:start="29:44" pos:end="29:55">(<argument pos:start="29:45" pos:end="29:54"><expr pos:start="29:45" pos:end="29:54"><name pos:start="29:45" pos:end="29:54">type_sizes</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:58" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:17">

        <expr_stmt pos:start="31:9" pos:end="33:21"><expr pos:start="31:9" pos:end="33:20"><call pos:start="31:9" pos:end="33:20"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="33:20">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="31:40" pos:end="31:77"><expr pos:start="31:40" pos:end="31:77"><literal type="string" pos:start="31:40" pos:end="31:77">"Unknown tiff type (%u) encountered\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:19"><expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="91:5"><if pos:start="41:5" pos:end="79:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:13">count</name> <operator pos:start="41:15" pos:end="41:16">==</operator> <literal type="number" pos:start="41:18" pos:end="41:18">1</literal></expr>)</condition> <block pos:start="41:21" pos:end="79:5">{<block_content pos:start="43:9" pos:end="77:9">

        <switch pos:start="43:9" pos:end="77:9">switch <condition pos:start="43:16" pos:end="43:21">(<expr pos:start="43:17" pos:end="43:20"><name pos:start="43:17" pos:end="43:20">type</name></expr>)</condition> <block pos:start="43:23" pos:end="77:9">{<block_content pos:start="45:9" pos:end="75:52">

        <case pos:start="45:9" pos:end="45:23">case <expr pos:start="45:14" pos:end="45:22"><name pos:start="45:14" pos:end="45:22">TIFF_BYTE</name></expr>:</case>

        <case pos:start="47:9" pos:end="47:24">case <expr pos:start="47:14" pos:end="47:23"><name pos:start="47:14" pos:end="47:23">TIFF_SHORT</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><call pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:28">bytestream2_seek</name><argument_list pos:start="49:29" pos:end="49:50">(<argument pos:start="49:30" pos:end="49:35"><expr pos:start="49:30" pos:end="49:35"><operator pos:start="49:30" pos:end="49:30">&amp;</operator><name pos:start="49:31" pos:end="49:35"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">gb</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:39"><expr pos:start="49:38" pos:end="49:39"><operator pos:start="49:38" pos:end="49:38">-</operator><literal type="number" pos:start="49:39" pos:end="49:39">4</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:49"><expr pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:49">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:46"><expr pos:start="51:13" pos:end="51:45"><name pos:start="51:13" pos:end="51:17">value</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <call pos:start="51:21" pos:end="51:45"><name pos:start="51:21" pos:end="51:24">tget</name><argument_list pos:start="51:25" pos:end="51:45">(<argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><operator pos:start="51:26" pos:end="51:26">&amp;</operator><name pos:start="51:27" pos:end="51:31"><name pos:start="51:27" pos:end="51:27">s</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:31">gb</name></name></expr></argument>, <argument pos:start="51:34" pos:end="51:37"><expr pos:start="51:34" pos:end="51:37"><name pos:start="51:34" pos:end="51:37">type</name></expr></argument>, <argument pos:start="51:40" pos:end="51:44"><expr pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:23">case <expr pos:start="55:14" pos:end="55:22"><name pos:start="55:14" pos:end="55:22">TIFF_LONG</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:17">value</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:23">off</name></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <case pos:start="61:9" pos:end="61:25">case <expr pos:start="61:14" pos:end="61:24"><name pos:start="61:14" pos:end="61:24">TIFF_STRING</name></expr>:</case>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:27">(<expr pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:21">count</name> <operator pos:start="63:23" pos:end="63:24">&lt;=</operator> <literal type="number" pos:start="63:26" pos:end="63:26">4</literal></expr>)</condition> <block pos:start="63:29" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:22">

                <expr_stmt pos:start="65:17" pos:end="65:55"><expr pos:start="65:17" pos:end="65:54"><call pos:start="65:17" pos:end="65:54"><name pos:start="65:17" pos:end="65:32">bytestream2_seek</name><argument_list pos:start="65:33" pos:end="65:54">(<argument pos:start="65:34" pos:end="65:39"><expr pos:start="65:34" pos:end="65:39"><operator pos:start="65:34" pos:end="65:34">&amp;</operator><name pos:start="65:35" pos:end="65:39"><name pos:start="65:35" pos:end="65:35">s</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:39">gb</name></name></expr></argument>, <argument pos:start="65:42" pos:end="65:43"><expr pos:start="65:42" pos:end="65:43"><operator pos:start="65:42" pos:end="65:42">-</operator><literal type="number" pos:start="65:43" pos:end="65:43">4</literal></expr></argument>, <argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="67:17" pos:end="67:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <default pos:start="71:9" pos:end="71:16">default:</default>

            <expr_stmt pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:17">value</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:28">UINT_MAX</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:52"><expr pos:start="75:13" pos:end="75:51"><call pos:start="75:13" pos:end="75:51"><name pos:start="75:13" pos:end="75:28">bytestream2_seek</name><argument_list pos:start="75:29" pos:end="75:51">(<argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">gb</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:40"><expr pos:start="75:38" pos:end="75:40"><name pos:start="75:38" pos:end="75:40">off</name></expr></argument>, <argument pos:start="75:43" pos:end="75:50"><expr pos:start="75:43" pos:end="75:50"><name pos:start="75:43" pos:end="75:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="91:5">else <block pos:start="79:12" pos:end="91:5">{<block_content pos:start="81:9" pos:end="89:9">

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:56">(<expr pos:start="81:13" pos:end="81:55"><name pos:start="81:13" pos:end="81:17">count</name> <operator pos:start="81:19" pos:end="81:20">&lt;=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">4</literal> <operator pos:start="81:24" pos:end="81:25">&amp;&amp;</operator> <name pos:start="81:27" pos:end="81:42"><name pos:start="81:27" pos:end="81:36">type_sizes</name><index pos:start="81:37" pos:end="81:42">[<expr pos:start="81:38" pos:end="81:41"><name pos:start="81:38" pos:end="81:41">type</name></expr>]</index></name> <operator pos:start="81:44" pos:end="81:44">*</operator> <name pos:start="81:46" pos:end="81:50">count</name> <operator pos:start="81:52" pos:end="81:53">&lt;=</operator> <literal type="number" pos:start="81:55" pos:end="81:55">4</literal></expr>)</condition> <block pos:start="81:58" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:51">

            <expr_stmt pos:start="83:13" pos:end="83:51"><expr pos:start="83:13" pos:end="83:50"><call pos:start="83:13" pos:end="83:50"><name pos:start="83:13" pos:end="83:28">bytestream2_seek</name><argument_list pos:start="83:29" pos:end="83:50">(<argument pos:start="83:30" pos:end="83:35"><expr pos:start="83:30" pos:end="83:35"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:35"><name pos:start="83:31" pos:end="83:31">s</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:35">gb</name></name></expr></argument>, <argument pos:start="83:38" pos:end="83:39"><expr pos:start="83:38" pos:end="83:39"><operator pos:start="83:38" pos:end="83:38">-</operator><literal type="number" pos:start="83:39" pos:end="83:39">4</literal></expr></argument>, <argument pos:start="83:42" pos:end="83:49"><expr pos:start="83:42" pos:end="83:49"><name pos:start="83:42" pos:end="83:49">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:52">

            <expr_stmt pos:start="87:13" pos:end="87:52"><expr pos:start="87:13" pos:end="87:51"><call pos:start="87:13" pos:end="87:51"><name pos:start="87:13" pos:end="87:28">bytestream2_seek</name><argument_list pos:start="87:29" pos:end="87:51">(<argument pos:start="87:30" pos:end="87:35"><expr pos:start="87:30" pos:end="87:35"><operator pos:start="87:30" pos:end="87:30">&amp;</operator><name pos:start="87:31" pos:end="87:35"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:35">gb</name></name></expr></argument>, <argument pos:start="87:38" pos:end="87:40"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">off</name></expr></argument>, <argument pos:start="87:43" pos:end="87:50"><expr pos:start="87:43" pos:end="87:50"><name pos:start="87:43" pos:end="87:50">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="95:5" pos:end="743:5">switch <condition pos:start="95:12" pos:end="95:16">(<expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:15">tag</name></expr>)</condition> <block pos:start="95:18" pos:end="743:5">{<block_content pos:start="97:5" pos:end="741:25">

    <case pos:start="97:5" pos:end="97:20">case <expr pos:start="97:10" pos:end="97:19"><name pos:start="97:10" pos:end="97:19">TIFF_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:16">width</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:24">value</name></expr>;</expr_stmt>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:21">case <expr pos:start="103:10" pos:end="103:20"><name pos:start="103:10" pos:end="103:20">TIFF_HEIGHT</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:26"><expr pos:start="105:9" pos:end="105:25"><name pos:start="105:9" pos:end="105:17"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">height</name></name> <operator pos:start="105:19" pos:end="105:19">=</operator> <name pos:start="105:21" pos:end="105:25">value</name></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    <case pos:start="109:5" pos:end="109:18">case <expr pos:start="109:10" pos:end="109:17"><name pos:start="109:10" pos:end="109:17">TIFF_BPP</name></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:28"><expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:19"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:19">bppcount</name></name> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:27">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="113:9" pos:end="123:9"><if pos:start="113:9" pos:end="123:9">if <condition pos:start="113:12" pos:end="113:22">(<expr pos:start="113:13" pos:end="113:21"><name pos:start="113:13" pos:end="113:17">count</name> <operator pos:start="113:19" pos:end="113:19">&gt;</operator> <literal type="number" pos:start="113:21" pos:end="113:21">4</literal></expr>)</condition> <block pos:start="113:24" pos:end="123:9">{<block_content pos:start="115:13" pos:end="121:39">

            <expr_stmt pos:start="115:13" pos:end="119:34"><expr pos:start="115:13" pos:end="119:33"><call pos:start="115:13" pos:end="119:33"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="119:33">(<argument pos:start="115:20" pos:end="115:27"><expr pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:27"><name pos:start="115:20" pos:end="115:20">s</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">avctx</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:41"><expr pos:start="115:30" pos:end="115:41"><name pos:start="115:30" pos:end="115:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="117:20" pos:end="117:75"><expr pos:start="117:20" pos:end="117:75"><literal type="string" pos:start="117:20" pos:end="117:75">"This format is not supported (bpp=%d, %d components)\n"</literal></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:25"><expr pos:start="119:20" pos:end="119:25"><name pos:start="119:20" pos:end="119:25"><name pos:start="119:20" pos:end="119:20">s</name><operator pos:start="119:21" pos:end="119:22">-&gt;</operator><name pos:start="119:23" pos:end="119:25">bpp</name></name></expr></argument>, <argument pos:start="119:28" pos:end="119:32"><expr pos:start="119:28" pos:end="119:32"><name pos:start="119:28" pos:end="119:32">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:39">return <expr pos:start="121:20" pos:end="121:38"><name pos:start="121:20" pos:end="121:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="125:9" pos:end="163:9"><if pos:start="125:9" pos:end="127:27">if <condition pos:start="125:12" pos:end="125:23">(<expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:17">count</name> <operator pos:start="125:19" pos:end="125:20">==</operator> <literal type="number" pos:start="125:22" pos:end="125:22">1</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:27"><block_content pos:start="127:13" pos:end="127:27">

            <expr_stmt pos:start="127:13" pos:end="127:27"><expr pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:13">s</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:18">bpp</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:26">value</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="129:9" pos:end="163:9">else <block pos:start="129:14" pos:end="163:9">{<block_content pos:start="131:13" pos:end="161:13">

            <switch pos:start="131:13" pos:end="161:13">switch <condition pos:start="131:20" pos:end="131:25">(<expr pos:start="131:21" pos:end="131:24"><name pos:start="131:21" pos:end="131:24">type</name></expr>)</condition> <block pos:start="131:27" pos:end="161:13">{<block_content pos:start="133:13" pos:end="159:28">

            <case pos:start="133:13" pos:end="133:27">case <expr pos:start="133:18" pos:end="133:26"><name pos:start="133:18" pos:end="133:26">TIFF_BYTE</name></expr>:</case>

                <expr_stmt pos:start="135:17" pos:end="137:69"><expr pos:start="135:17" pos:end="137:68"><name pos:start="135:17" pos:end="135:22"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:22">bpp</name></name> <operator pos:start="135:24" pos:end="135:24">=</operator> <operator pos:start="135:26" pos:end="135:26">(</operator><name pos:start="135:27" pos:end="135:29">off</name> <operator pos:start="135:31" pos:end="135:31">&amp;</operator> <literal type="number" pos:start="135:33" pos:end="135:36">0xFF</literal><operator pos:start="135:37" pos:end="135:37">)</operator> <operator pos:start="135:39" pos:end="135:39">+</operator> <operator pos:start="135:41" pos:end="135:41">(</operator><operator pos:start="135:42" pos:end="135:42">(</operator><name pos:start="135:43" pos:end="135:45">off</name> <operator pos:start="135:47" pos:end="135:48">&gt;&gt;</operator> <literal type="number" pos:start="135:50" pos:end="135:50">8</literal><operator pos:start="135:51" pos:end="135:51">)</operator> <operator pos:start="135:53" pos:end="135:53">&amp;</operator> <literal type="number" pos:start="135:55" pos:end="135:58">0xFF</literal><operator pos:start="135:59" pos:end="135:59">)</operator> <operator pos:start="135:61" pos:end="135:61">+</operator>

                         <operator pos:start="137:26" pos:end="137:26">(</operator><operator pos:start="137:27" pos:end="137:27">(</operator><name pos:start="137:28" pos:end="137:30">off</name> <operator pos:start="137:32" pos:end="137:33">&gt;&gt;</operator> <literal type="number" pos:start="137:35" pos:end="137:36">16</literal><operator pos:start="137:37" pos:end="137:37">)</operator> <operator pos:start="137:39" pos:end="137:39">&amp;</operator> <literal type="number" pos:start="137:41" pos:end="137:44">0xFF</literal><operator pos:start="137:45" pos:end="137:45">)</operator> <operator pos:start="137:47" pos:end="137:47">+</operator> <operator pos:start="137:49" pos:end="137:49">(</operator><operator pos:start="137:50" pos:end="137:50">(</operator><name pos:start="137:51" pos:end="137:53">off</name> <operator pos:start="137:55" pos:end="137:56">&gt;&gt;</operator> <literal type="number" pos:start="137:58" pos:end="137:59">24</literal><operator pos:start="137:60" pos:end="137:60">)</operator> <operator pos:start="137:62" pos:end="137:62">&amp;</operator> <literal type="number" pos:start="137:64" pos:end="137:67">0xFF</literal><operator pos:start="137:68" pos:end="137:68">)</operator></expr>;</expr_stmt>

                <break pos:start="139:17" pos:end="139:22">break;</break>

            <case pos:start="141:13" pos:end="141:28">case <expr pos:start="141:18" pos:end="141:27"><name pos:start="141:18" pos:end="141:27">TIFF_SHORT</name></expr>:</case>

            <case pos:start="143:13" pos:end="143:27">case <expr pos:start="143:18" pos:end="143:26"><name pos:start="143:18" pos:end="143:26">TIFF_LONG</name></expr>:</case>

                <expr_stmt pos:start="145:17" pos:end="145:27"><expr pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:22"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:22">bpp</name></name> <operator pos:start="145:24" pos:end="145:24">=</operator> <literal type="number" pos:start="145:26" pos:end="145:26">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="149:47"><if pos:start="147:17" pos:end="149:47">if <condition pos:start="147:20" pos:end="147:82">(<expr pos:start="147:21" pos:end="147:81"><call pos:start="147:21" pos:end="147:54"><name pos:start="147:21" pos:end="147:46">bytestream2_get_bytes_left</name><argument_list pos:start="147:47" pos:end="147:54">(<argument pos:start="147:48" pos:end="147:53"><expr pos:start="147:48" pos:end="147:53"><operator pos:start="147:48" pos:end="147:48">&amp;</operator><name pos:start="147:49" pos:end="147:53"><name pos:start="147:49" pos:end="147:49">s</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:53">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="147:56" pos:end="147:56">&lt;</operator> <name pos:start="147:58" pos:end="147:73"><name pos:start="147:58" pos:end="147:67">type_sizes</name><index pos:start="147:68" pos:end="147:73">[<expr pos:start="147:69" pos:end="147:72"><name pos:start="147:69" pos:end="147:72">type</name></expr>]</index></name> <operator pos:start="147:75" pos:end="147:75">*</operator> <name pos:start="147:77" pos:end="147:81">count</name></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:47"><block_content pos:start="149:21" pos:end="149:47">

                    <return pos:start="149:21" pos:end="149:47">return <expr pos:start="149:28" pos:end="149:46"><name pos:start="149:28" pos:end="149:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                <for pos:start="151:17" pos:end="153:56">for <control pos:start="151:21" pos:end="151:43">(<init pos:start="151:22" pos:end="151:27"><expr pos:start="151:22" pos:end="151:26"><name pos:start="151:22" pos:end="151:22">i</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <literal type="number" pos:start="151:26" pos:end="151:26">0</literal></expr>;</init> <condition pos:start="151:29" pos:end="151:38"><expr pos:start="151:29" pos:end="151:37"><name pos:start="151:29" pos:end="151:29">i</name> <operator pos:start="151:31" pos:end="151:31">&lt;</operator> <name pos:start="151:33" pos:end="151:37">count</name></expr>;</condition> <incr pos:start="151:40" pos:end="151:42"><expr pos:start="151:40" pos:end="151:42"><name pos:start="151:40" pos:end="151:40">i</name><operator pos:start="151:41" pos:end="151:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:21" pos:end="153:56"><block_content pos:start="153:21" pos:end="153:56">

                    <expr_stmt pos:start="153:21" pos:end="153:56"><expr pos:start="153:21" pos:end="153:55"><name pos:start="153:21" pos:end="153:26"><name pos:start="153:21" pos:end="153:21">s</name><operator pos:start="153:22" pos:end="153:23">-&gt;</operator><name pos:start="153:24" pos:end="153:26">bpp</name></name> <operator pos:start="153:28" pos:end="153:29">+=</operator> <call pos:start="153:31" pos:end="153:55"><name pos:start="153:31" pos:end="153:34">tget</name><argument_list pos:start="153:35" pos:end="153:55">(<argument pos:start="153:36" pos:end="153:41"><expr pos:start="153:36" pos:end="153:41"><operator pos:start="153:36" pos:end="153:36">&amp;</operator><name pos:start="153:37" pos:end="153:41"><name pos:start="153:37" pos:end="153:37">s</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:41">gb</name></name></expr></argument>, <argument pos:start="153:44" pos:end="153:47"><expr pos:start="153:44" pos:end="153:47"><name pos:start="153:44" pos:end="153:47">type</name></expr></argument>, <argument pos:start="153:50" pos:end="153:54"><expr pos:start="153:50" pos:end="153:54"><name pos:start="153:50" pos:end="153:54"><name pos:start="153:50" pos:end="153:50">s</name><operator pos:start="153:51" pos:end="153:52">-&gt;</operator><name pos:start="153:53" pos:end="153:54">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <default pos:start="157:13" pos:end="157:20">default:</default>

                <expr_stmt pos:start="159:17" pos:end="159:28"><expr pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:22"><name pos:start="159:17" pos:end="159:17">s</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:22">bpp</name></name> <operator pos:start="159:24" pos:end="159:24">=</operator> <operator pos:start="159:26" pos:end="159:26">-</operator><literal type="number" pos:start="159:27" pos:end="159:27">1</literal></expr>;</expr_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:32">case <expr pos:start="167:10" pos:end="167:31"><name pos:start="167:10" pos:end="167:31">TIFF_SAMPLES_PER_PIXEL</name></expr>:</case>

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="177:9">if <condition pos:start="169:12" pos:end="169:23">(<expr pos:start="169:13" pos:end="169:22"><name pos:start="169:13" pos:end="169:17">count</name> <operator pos:start="169:19" pos:end="169:20">!=</operator> <literal type="number" pos:start="169:22" pos:end="169:22">1</literal></expr>)</condition> <block pos:start="169:25" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:39">

            <expr_stmt pos:start="171:13" pos:end="173:81"><expr pos:start="171:13" pos:end="173:80"><call pos:start="171:13" pos:end="173:80"><name pos:start="171:13" pos:end="171:18">av_log</name><argument_list pos:start="171:19" pos:end="173:80">(<argument pos:start="171:20" pos:end="171:27"><expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:20">s</name><operator pos:start="171:21" pos:end="171:22">-&gt;</operator><name pos:start="171:23" pos:end="171:27">avctx</name></name></expr></argument>, <argument pos:start="171:30" pos:end="171:41"><expr pos:start="171:30" pos:end="171:41"><name pos:start="171:30" pos:end="171:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:79"><expr pos:start="173:20" pos:end="173:79"><literal type="string" pos:start="173:20" pos:end="173:79">"Samples per pixel requires a single value, many provided\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:39">return <expr pos:start="175:20" pos:end="175:38"><name pos:start="175:20" pos:end="175:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if <condition pos:start="179:12" pos:end="179:23">(<expr pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:17">value</name> <operator pos:start="179:19" pos:end="179:19">&gt;</operator> <literal type="number" pos:start="179:21" pos:end="179:22">4U</literal></expr>)</condition> <block pos:start="179:25" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:39">

            <expr_stmt pos:start="181:13" pos:end="183:65"><expr pos:start="181:13" pos:end="183:64"><call pos:start="181:13" pos:end="183:64"><name pos:start="181:13" pos:end="181:18">av_log</name><argument_list pos:start="181:19" pos:end="183:64">(<argument pos:start="181:20" pos:end="181:27"><expr pos:start="181:20" pos:end="181:27"><name pos:start="181:20" pos:end="181:27"><name pos:start="181:20" pos:end="181:20">s</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:27">avctx</name></name></expr></argument>, <argument pos:start="181:30" pos:end="181:41"><expr pos:start="181:30" pos:end="181:41"><name pos:start="181:30" pos:end="181:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="183:20" pos:end="183:56"><expr pos:start="183:20" pos:end="183:56"><literal type="string" pos:start="183:20" pos:end="183:56">"Samples per pixel %d is too large\n"</literal></expr></argument>, <argument pos:start="183:59" pos:end="183:63"><expr pos:start="183:59" pos:end="183:63"><name pos:start="183:59" pos:end="183:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="185:13" pos:end="185:39">return <expr pos:start="185:20" pos:end="185:38"><name pos:start="185:20" pos:end="185:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="191:28"><if pos:start="189:9" pos:end="191:28">if <condition pos:start="189:12" pos:end="189:29">(<expr pos:start="189:13" pos:end="189:28"><name pos:start="189:13" pos:end="189:23"><name pos:start="189:13" pos:end="189:13">s</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:23">bppcount</name></name> <operator pos:start="189:25" pos:end="189:26">==</operator> <literal type="number" pos:start="189:28" pos:end="189:28">1</literal></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:28"><block_content pos:start="191:13" pos:end="191:28">

            <expr_stmt pos:start="191:13" pos:end="191:28"><expr pos:start="191:13" pos:end="191:27"><name pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:18">bpp</name></name> <operator pos:start="191:20" pos:end="191:21">*=</operator> <name pos:start="191:23" pos:end="191:27">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:28"><expr pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:19"><name pos:start="193:9" pos:end="193:9">s</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:19">bppcount</name></name> <operator pos:start="193:21" pos:end="193:21">=</operator> <name pos:start="193:23" pos:end="193:27">value</name></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:20">case <expr pos:start="197:10" pos:end="197:19"><name pos:start="197:10" pos:end="197:19">TIFF_COMPR</name></expr>:</case>

        <expr_stmt pos:start="199:9" pos:end="199:25"><expr pos:start="199:9" pos:end="199:24"><name pos:start="199:9" pos:end="199:16"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:16">compr</name></name> <operator pos:start="199:18" pos:end="199:18">=</operator> <name pos:start="199:20" pos:end="199:24">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:25"><expr pos:start="201:9" pos:end="201:24"><name pos:start="201:9" pos:end="201:20"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:20">predictor</name></name> <operator pos:start="201:22" pos:end="201:22">=</operator> <literal type="number" pos:start="201:24" pos:end="201:24">0</literal></expr>;</expr_stmt>

        <switch pos:start="203:9" pos:end="257:9">switch <condition pos:start="203:16" pos:end="203:25">(<expr pos:start="203:17" pos:end="203:24"><name pos:start="203:17" pos:end="203:24"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:24">compr</name></name></expr>)</condition> <block pos:start="203:27" pos:end="257:9">{<block_content pos:start="205:9" pos:end="255:39">

        <case pos:start="205:9" pos:end="205:22">case <expr pos:start="205:14" pos:end="205:21"><name pos:start="205:14" pos:end="205:21">TIFF_RAW</name></expr>:</case>

        <case pos:start="207:9" pos:end="207:27">case <expr pos:start="207:14" pos:end="207:26"><name pos:start="207:14" pos:end="207:26">TIFF_PACKBITS</name></expr>:</case>

        <case pos:start="209:9" pos:end="209:22">case <expr pos:start="209:14" pos:end="209:21"><name pos:start="209:14" pos:end="209:21">TIFF_LZW</name></expr>:</case>

        <case pos:start="211:9" pos:end="211:28">case <expr pos:start="211:14" pos:end="211:27"><name pos:start="211:14" pos:end="211:27">TIFF_CCITT_RLE</name></expr>:</case>

            <break pos:start="213:13" pos:end="213:18">break;</break>

        <case pos:start="215:9" pos:end="215:21">case <expr pos:start="215:14" pos:end="215:20"><name pos:start="215:14" pos:end="215:20">TIFF_G3</name></expr>:</case>

        <case pos:start="217:9" pos:end="217:21">case <expr pos:start="217:14" pos:end="217:20"><name pos:start="217:14" pos:end="217:20">TIFF_G4</name></expr>:</case>

            <expr_stmt pos:start="219:13" pos:end="219:28"><expr pos:start="219:13" pos:end="219:27"><name pos:start="219:13" pos:end="219:23"><name pos:start="219:13" pos:end="219:13">s</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:23">fax_opts</name></name> <operator pos:start="219:25" pos:end="219:25">=</operator> <literal type="number" pos:start="219:27" pos:end="219:27">0</literal></expr>;</expr_stmt>

            <break pos:start="221:13" pos:end="221:18">break;</break>

        <case pos:start="223:9" pos:end="223:26">case <expr pos:start="223:14" pos:end="223:25"><name pos:start="223:14" pos:end="223:25">TIFF_DEFLATE</name></expr>:</case>

        <case pos:start="225:9" pos:end="228:0">case <expr pos:start="225:14" pos:end="225:31"><name pos:start="225:14" pos:end="225:31">TIFF_ADOBE_DEFLATE</name></expr>:</case>

<cpp:if pos:start="227:1" pos:end="227:15">#<cpp:directive pos:start="227:2" pos:end="227:3">if</cpp:directive> <expr pos:start="227:5" pos:end="227:15"><name pos:start="227:5" pos:end="227:15">CONFIG_ZLIB</name></expr></cpp:if>

            <break pos:start="229:13" pos:end="232:0">break;</break>

<cpp:else pos:start="231:1" pos:end="231:5">#<cpp:directive pos:start="231:2" pos:end="231:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="233:13" pos:end="233:78"><expr pos:start="233:13" pos:end="233:77"><call pos:start="233:13" pos:end="233:77"><name pos:start="233:13" pos:end="233:18">av_log</name><argument_list pos:start="233:19" pos:end="233:77">(<argument pos:start="233:20" pos:end="233:27"><expr pos:start="233:20" pos:end="233:27"><name pos:start="233:20" pos:end="233:27"><name pos:start="233:20" pos:end="233:20">s</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:27">avctx</name></name></expr></argument>, <argument pos:start="233:30" pos:end="233:41"><expr pos:start="233:30" pos:end="233:41"><name pos:start="233:30" pos:end="233:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="233:44" pos:end="233:76"><expr pos:start="233:44" pos:end="233:76"><literal type="string" pos:start="233:44" pos:end="233:76">"Deflate: ZLib not compiled in\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="235:13" pos:end="238:0">return <expr pos:start="235:20" pos:end="235:34"><call pos:start="235:20" pos:end="235:34"><name pos:start="235:20" pos:end="235:26">AVERROR</name><argument_list pos:start="235:27" pos:end="235:34">(<argument pos:start="235:28" pos:end="235:33"><expr pos:start="235:28" pos:end="235:33"><name pos:start="235:28" pos:end="235:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="237:1" pos:end="237:6">#<cpp:directive pos:start="237:2" pos:end="237:6">endif</cpp:directive></cpp:endif>

        <case pos:start="239:9" pos:end="239:23">case <expr pos:start="239:14" pos:end="239:22"><name pos:start="239:14" pos:end="239:22">TIFF_JPEG</name></expr>:</case>

        <case pos:start="241:9" pos:end="241:26">case <expr pos:start="241:14" pos:end="241:25"><name pos:start="241:14" pos:end="241:25">TIFF_NEWJPEG</name></expr>:</case>

            <expr_stmt pos:start="243:13" pos:end="245:58"><expr pos:start="243:13" pos:end="245:57"><call pos:start="243:13" pos:end="245:57"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="245:57">(<argument pos:start="243:20" pos:end="243:27"><expr pos:start="243:20" pos:end="243:27"><name pos:start="243:20" pos:end="243:27"><name pos:start="243:20" pos:end="243:20">s</name><operator pos:start="243:21" pos:end="243:22">-&gt;</operator><name pos:start="243:23" pos:end="243:27">avctx</name></name></expr></argument>, <argument pos:start="243:30" pos:end="243:41"><expr pos:start="243:30" pos:end="243:41"><name pos:start="243:30" pos:end="243:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="245:20" pos:end="245:56"><expr pos:start="245:20" pos:end="245:56"><literal type="string" pos:start="245:20" pos:end="245:56">"JPEG compression is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="247:13" pos:end="247:40">return <expr pos:start="247:20" pos:end="247:39"><name pos:start="247:20" pos:end="247:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        <default pos:start="249:9" pos:end="249:16">default:</default>

            <expr_stmt pos:start="251:13" pos:end="253:29"><expr pos:start="251:13" pos:end="253:28"><call pos:start="251:13" pos:end="253:28"><name pos:start="251:13" pos:end="251:18">av_log</name><argument_list pos:start="251:19" pos:end="253:28">(<argument pos:start="251:20" pos:end="251:27"><expr pos:start="251:20" pos:end="251:27"><name pos:start="251:20" pos:end="251:27"><name pos:start="251:20" pos:end="251:20">s</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:27">avctx</name></name></expr></argument>, <argument pos:start="251:30" pos:end="251:41"><expr pos:start="251:30" pos:end="251:41"><name pos:start="251:30" pos:end="251:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="251:44" pos:end="251:76"><expr pos:start="251:44" pos:end="251:76"><literal type="string" pos:start="251:44" pos:end="251:76">"Unknown compression method %i\n"</literal></expr></argument>,

                   <argument pos:start="253:20" pos:end="253:27"><expr pos:start="253:20" pos:end="253:27"><name pos:start="253:20" pos:end="253:27"><name pos:start="253:20" pos:end="253:20">s</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:27">compr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="255:13" pos:end="255:39">return <expr pos:start="255:20" pos:end="255:38"><name pos:start="255:20" pos:end="255:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="259:9" pos:end="259:14">break;</break>

    <case pos:start="261:5" pos:end="261:27">case <expr pos:start="261:10" pos:end="261:26"><name pos:start="261:10" pos:end="261:26">TIFF_ROWSPERSTRIP</name></expr>:</case>

        <if_stmt pos:start="263:9" pos:end="265:30"><if pos:start="263:9" pos:end="265:30">if <condition pos:start="263:12" pos:end="263:51">(<expr pos:start="263:13" pos:end="263:50"><name pos:start="263:13" pos:end="263:16">type</name> <operator pos:start="263:18" pos:end="263:19">==</operator> <name pos:start="263:21" pos:end="263:29">TIFF_LONG</name> <operator pos:start="263:31" pos:end="263:32">&amp;&amp;</operator> <name pos:start="263:34" pos:end="263:38">value</name> <operator pos:start="263:40" pos:end="263:41">==</operator> <name pos:start="263:43" pos:end="263:50">UINT_MAX</name></expr>)</condition><block type="pseudo" pos:start="265:13" pos:end="265:30"><block_content pos:start="265:13" pos:end="265:30">

            <expr_stmt pos:start="265:13" pos:end="265:30"><expr pos:start="265:13" pos:end="265:29"><name pos:start="265:13" pos:end="265:17">value</name> <operator pos:start="265:19" pos:end="265:19">=</operator> <name pos:start="265:21" pos:end="265:29"><name pos:start="265:21" pos:end="265:21">s</name><operator pos:start="265:22" pos:end="265:23">-&gt;</operator><name pos:start="265:24" pos:end="265:29">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="267:9" pos:end="275:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:22">(<expr pos:start="267:13" pos:end="267:21"><name pos:start="267:13" pos:end="267:17">value</name> <operator pos:start="267:19" pos:end="267:19">&lt;</operator> <literal type="number" pos:start="267:21" pos:end="267:21">1</literal></expr>)</condition> <block pos:start="267:24" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:39">

            <expr_stmt pos:start="269:13" pos:end="271:58"><expr pos:start="269:13" pos:end="271:57"><call pos:start="269:13" pos:end="271:57"><name pos:start="269:13" pos:end="269:18">av_log</name><argument_list pos:start="269:19" pos:end="271:57">(<argument pos:start="269:20" pos:end="269:27"><expr pos:start="269:20" pos:end="269:27"><name pos:start="269:20" pos:end="269:27"><name pos:start="269:20" pos:end="269:20">s</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:27">avctx</name></name></expr></argument>, <argument pos:start="269:30" pos:end="269:41"><expr pos:start="269:30" pos:end="269:41"><name pos:start="269:30" pos:end="269:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="271:20" pos:end="271:56"><expr pos:start="271:20" pos:end="271:56"><literal type="string" pos:start="271:20" pos:end="271:56">"Incorrect value of rows per strip\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="273:13" pos:end="273:39">return <expr pos:start="273:20" pos:end="273:38"><name pos:start="273:20" pos:end="273:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:23"><expr pos:start="277:9" pos:end="277:22"><name pos:start="277:9" pos:end="277:14"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:14">rps</name></name> <operator pos:start="277:16" pos:end="277:16">=</operator> <name pos:start="277:18" pos:end="277:22">value</name></expr>;</expr_stmt>

        <break pos:start="279:9" pos:end="279:14">break;</break>

    <case pos:start="281:5" pos:end="281:25">case <expr pos:start="281:10" pos:end="281:24"><name pos:start="281:10" pos:end="281:24">TIFF_STRIP_OFFS</name></expr>:</case>

        <if_stmt pos:start="283:9" pos:end="291:30"><if pos:start="283:9" pos:end="289:9">if <condition pos:start="283:12" pos:end="283:23">(<expr pos:start="283:13" pos:end="283:22"><name pos:start="283:13" pos:end="283:17">count</name> <operator pos:start="283:19" pos:end="283:20">==</operator> <literal type="number" pos:start="283:22" pos:end="283:22">1</literal></expr>)</condition> <block pos:start="283:25" pos:end="289:9">{<block_content pos:start="285:13" pos:end="287:32">

            <expr_stmt pos:start="285:13" pos:end="285:28"><expr pos:start="285:13" pos:end="285:27"><name pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:13">s</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:23">strippos</name></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <literal type="number" pos:start="285:27" pos:end="285:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:32"><expr pos:start="287:13" pos:end="287:31"><name pos:start="287:13" pos:end="287:23"><name pos:start="287:13" pos:end="287:13">s</name><operator pos:start="287:14" pos:end="287:15">-&gt;</operator><name pos:start="287:16" pos:end="287:23">stripoff</name></name> <operator pos:start="287:25" pos:end="287:25">=</operator> <name pos:start="287:27" pos:end="287:31">value</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="289:11" pos:end="291:30">else<block type="pseudo" pos:start="291:13" pos:end="291:30"><block_content pos:start="291:13" pos:end="291:30">

            <expr_stmt pos:start="291:13" pos:end="291:30"><expr pos:start="291:13" pos:end="291:29"><name pos:start="291:13" pos:end="291:23"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:23">strippos</name></name> <operator pos:start="291:25" pos:end="291:25">=</operator> <name pos:start="291:27" pos:end="291:29">off</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:26"><expr pos:start="293:9" pos:end="293:25"><name pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:9">s</name><operator pos:start="293:10" pos:end="293:11">-&gt;</operator><name pos:start="293:12" pos:end="293:17">strips</name></name> <operator pos:start="293:19" pos:end="293:19">=</operator> <name pos:start="293:21" pos:end="293:25">count</name></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="297:31"><if pos:start="295:9" pos:end="297:31">if <condition pos:start="295:12" pos:end="295:27">(<expr pos:start="295:13" pos:end="295:26"><name pos:start="295:13" pos:end="295:21"><name pos:start="295:13" pos:end="295:13">s</name><operator pos:start="295:14" pos:end="295:15">-&gt;</operator><name pos:start="295:16" pos:end="295:21">strips</name></name> <operator pos:start="295:23" pos:end="295:24">==</operator> <literal type="number" pos:start="295:26" pos:end="295:26">1</literal></expr>)</condition><block type="pseudo" pos:start="297:13" pos:end="297:31"><block_content pos:start="297:13" pos:end="297:31">

            <expr_stmt pos:start="297:13" pos:end="297:31"><expr pos:start="297:13" pos:end="297:30"><name pos:start="297:13" pos:end="297:18"><name pos:start="297:13" pos:end="297:13">s</name><operator pos:start="297:14" pos:end="297:15">-&gt;</operator><name pos:start="297:16" pos:end="297:18">rps</name></name> <operator pos:start="297:20" pos:end="297:20">=</operator> <name pos:start="297:22" pos:end="297:30"><name pos:start="297:22" pos:end="297:22">s</name><operator pos:start="297:23" pos:end="297:24">-&gt;</operator><name pos:start="297:25" pos:end="297:30">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:22"><expr pos:start="299:9" pos:end="299:21"><name pos:start="299:9" pos:end="299:14"><name pos:start="299:9" pos:end="299:9">s</name><operator pos:start="299:10" pos:end="299:11">-&gt;</operator><name pos:start="299:12" pos:end="299:14">sot</name></name> <operator pos:start="299:16" pos:end="299:16">=</operator> <name pos:start="299:18" pos:end="299:21">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="301:9" pos:end="309:9"><if pos:start="301:9" pos:end="309:9">if <condition pos:start="301:12" pos:end="301:51">(<expr pos:start="301:13" pos:end="301:50"><name pos:start="301:13" pos:end="301:23"><name pos:start="301:13" pos:end="301:13">s</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:23">strippos</name></name> <operator pos:start="301:25" pos:end="301:25">&gt;</operator> <call pos:start="301:27" pos:end="301:50"><name pos:start="301:27" pos:end="301:42">bytestream2_size</name><argument_list pos:start="301:43" pos:end="301:50">(<argument pos:start="301:44" pos:end="301:49"><expr pos:start="301:44" pos:end="301:49"><operator pos:start="301:44" pos:end="301:44">&amp;</operator><name pos:start="301:45" pos:end="301:49"><name pos:start="301:45" pos:end="301:45">s</name><operator pos:start="301:46" pos:end="301:47">-&gt;</operator><name pos:start="301:48" pos:end="301:49">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="301:53" pos:end="309:9">{<block_content pos:start="303:13" pos:end="307:39">

            <expr_stmt pos:start="303:13" pos:end="305:67"><expr pos:start="303:13" pos:end="305:66"><call pos:start="303:13" pos:end="305:66"><name pos:start="303:13" pos:end="303:18">av_log</name><argument_list pos:start="303:19" pos:end="305:66">(<argument pos:start="303:20" pos:end="303:27"><expr pos:start="303:20" pos:end="303:27"><name pos:start="303:20" pos:end="303:27"><name pos:start="303:20" pos:end="303:20">s</name><operator pos:start="303:21" pos:end="303:22">-&gt;</operator><name pos:start="303:23" pos:end="303:27">avctx</name></name></expr></argument>, <argument pos:start="303:30" pos:end="303:41"><expr pos:start="303:30" pos:end="303:41"><name pos:start="303:30" pos:end="303:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="305:20" pos:end="305:65"><expr pos:start="305:20" pos:end="305:65"><literal type="string" pos:start="305:20" pos:end="305:65">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="307:13" pos:end="307:39">return <expr pos:start="307:20" pos:end="307:38"><name pos:start="307:20" pos:end="307:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:25">case <expr pos:start="313:10" pos:end="313:24"><name pos:start="313:10" pos:end="313:24">TIFF_STRIP_SIZE</name></expr>:</case>

        <if_stmt pos:start="315:9" pos:end="327:9"><if pos:start="315:9" pos:end="323:9">if <condition pos:start="315:12" pos:end="315:23">(<expr pos:start="315:13" pos:end="315:22"><name pos:start="315:13" pos:end="315:17">count</name> <operator pos:start="315:19" pos:end="315:20">==</operator> <literal type="number" pos:start="315:22" pos:end="315:22">1</literal></expr>)</condition> <block pos:start="315:25" pos:end="323:9">{<block_content pos:start="317:13" pos:end="321:26">

            <expr_stmt pos:start="317:13" pos:end="317:33"><expr pos:start="317:13" pos:end="317:32"><name pos:start="317:13" pos:end="317:28"><name pos:start="317:13" pos:end="317:13">s</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:28">stripsizesoff</name></name> <operator pos:start="317:30" pos:end="317:30">=</operator> <literal type="number" pos:start="317:32" pos:end="317:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:33"><expr pos:start="319:13" pos:end="319:32"><name pos:start="319:13" pos:end="319:24"><name pos:start="319:13" pos:end="319:13">s</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:24">stripsize</name></name> <operator pos:start="319:26" pos:end="319:26">=</operator> <name pos:start="319:28" pos:end="319:32">value</name></expr>;</expr_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:26"><expr pos:start="321:13" pos:end="321:25"><name pos:start="321:13" pos:end="321:21"><name pos:start="321:13" pos:end="321:13">s</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:21">strips</name></name> <operator pos:start="321:23" pos:end="321:23">=</operator> <literal type="number" pos:start="321:25" pos:end="321:25">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="323:11" pos:end="327:9">else <block pos:start="323:16" pos:end="327:9">{<block_content pos:start="325:13" pos:end="325:35">

            <expr_stmt pos:start="325:13" pos:end="325:35"><expr pos:start="325:13" pos:end="325:34"><name pos:start="325:13" pos:end="325:28"><name pos:start="325:13" pos:end="325:13">s</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:28">stripsizesoff</name></name> <operator pos:start="325:30" pos:end="325:30">=</operator> <name pos:start="325:32" pos:end="325:34">off</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:26"><expr pos:start="329:9" pos:end="329:25"><name pos:start="329:9" pos:end="329:17"><name pos:start="329:9" pos:end="329:9">s</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:17">strips</name></name> <operator pos:start="329:19" pos:end="329:19">=</operator> <name pos:start="329:21" pos:end="329:25">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="331:9" pos:end="331:25"><expr pos:start="331:9" pos:end="331:24"><name pos:start="331:9" pos:end="331:17"><name pos:start="331:9" pos:end="331:9">s</name><operator pos:start="331:10" pos:end="331:11">-&gt;</operator><name pos:start="331:12" pos:end="331:17">sstype</name></name> <operator pos:start="331:19" pos:end="331:19">=</operator> <name pos:start="331:21" pos:end="331:24">type</name></expr>;</expr_stmt>

        <if_stmt pos:start="333:9" pos:end="341:9"><if pos:start="333:9" pos:end="341:9">if <condition pos:start="333:12" pos:end="333:56">(<expr pos:start="333:13" pos:end="333:55"><name pos:start="333:13" pos:end="333:28"><name pos:start="333:13" pos:end="333:13">s</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:28">stripsizesoff</name></name> <operator pos:start="333:30" pos:end="333:30">&gt;</operator> <call pos:start="333:32" pos:end="333:55"><name pos:start="333:32" pos:end="333:47">bytestream2_size</name><argument_list pos:start="333:48" pos:end="333:55">(<argument pos:start="333:49" pos:end="333:54"><expr pos:start="333:49" pos:end="333:54"><operator pos:start="333:49" pos:end="333:49">&amp;</operator><name pos:start="333:50" pos:end="333:54"><name pos:start="333:50" pos:end="333:50">s</name><operator pos:start="333:51" pos:end="333:52">-&gt;</operator><name pos:start="333:53" pos:end="333:54">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="333:58" pos:end="341:9">{<block_content pos:start="335:13" pos:end="339:39">

            <expr_stmt pos:start="335:13" pos:end="337:67"><expr pos:start="335:13" pos:end="337:66"><call pos:start="335:13" pos:end="337:66"><name pos:start="335:13" pos:end="335:18">av_log</name><argument_list pos:start="335:19" pos:end="337:66">(<argument pos:start="335:20" pos:end="335:27"><expr pos:start="335:20" pos:end="335:27"><name pos:start="335:20" pos:end="335:27"><name pos:start="335:20" pos:end="335:20">s</name><operator pos:start="335:21" pos:end="335:22">-&gt;</operator><name pos:start="335:23" pos:end="335:27">avctx</name></name></expr></argument>, <argument pos:start="335:30" pos:end="335:41"><expr pos:start="335:30" pos:end="335:41"><name pos:start="335:30" pos:end="335:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="337:20" pos:end="337:65"><expr pos:start="337:20" pos:end="337:65"><literal type="string" pos:start="337:20" pos:end="337:65">"Tag referencing position outside the image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="339:13" pos:end="339:39">return <expr pos:start="339:20" pos:end="339:38"><name pos:start="339:20" pos:end="339:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="343:9" pos:end="343:14">break;</break>

    <case pos:start="345:5" pos:end="345:31">case <expr pos:start="345:10" pos:end="345:30"><name pos:start="345:10" pos:end="345:30">TIFF_TILE_BYTE_COUNTS</name></expr>:</case>

    <case pos:start="347:5" pos:end="347:26">case <expr pos:start="347:10" pos:end="347:25"><name pos:start="347:10" pos:end="347:25">TIFF_TILE_LENGTH</name></expr>:</case>

    <case pos:start="349:5" pos:end="349:27">case <expr pos:start="349:10" pos:end="349:26"><name pos:start="349:10" pos:end="349:26">TIFF_TILE_OFFSETS</name></expr>:</case>

    <case pos:start="351:5" pos:end="351:25">case <expr pos:start="351:10" pos:end="351:24"><name pos:start="351:10" pos:end="351:24">TIFF_TILE_WIDTH</name></expr>:</case>

        <expr_stmt pos:start="353:9" pos:end="353:75"><expr pos:start="353:9" pos:end="353:74"><call pos:start="353:9" pos:end="353:74"><name pos:start="353:9" pos:end="353:14">av_log</name><argument_list pos:start="353:15" pos:end="353:74">(<argument pos:start="353:16" pos:end="353:23"><expr pos:start="353:16" pos:end="353:23"><name pos:start="353:16" pos:end="353:23"><name pos:start="353:16" pos:end="353:16">s</name><operator pos:start="353:17" pos:end="353:18">-&gt;</operator><name pos:start="353:19" pos:end="353:23">avctx</name></name></expr></argument>, <argument pos:start="353:26" pos:end="353:37"><expr pos:start="353:26" pos:end="353:37"><name pos:start="353:26" pos:end="353:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="353:40" pos:end="353:73"><expr pos:start="353:40" pos:end="353:73"><literal type="string" pos:start="353:40" pos:end="353:73">"Tiled images are not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="355:9" pos:end="355:36">return <expr pos:start="355:16" pos:end="355:35"><name pos:start="355:16" pos:end="355:35">AVERROR_PATCHWELCOME</name></expr>;</return>

        <break pos:start="357:9" pos:end="357:14">break;</break>

    <case pos:start="359:5" pos:end="359:24">case <expr pos:start="359:10" pos:end="359:23"><name pos:start="359:10" pos:end="359:23">TIFF_PREDICTOR</name></expr>:</case>

        <expr_stmt pos:start="361:9" pos:end="361:29"><expr pos:start="361:9" pos:end="361:28"><name pos:start="361:9" pos:end="361:20"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:20">predictor</name></name> <operator pos:start="361:22" pos:end="361:22">=</operator> <name pos:start="361:24" pos:end="361:28">value</name></expr>;</expr_stmt>

        <break pos:start="363:9" pos:end="363:14">break;</break>

    <case pos:start="365:5" pos:end="365:21">case <expr pos:start="365:10" pos:end="365:20"><name pos:start="365:10" pos:end="365:20">TIFF_INVERT</name></expr>:</case>

        <switch pos:start="367:9" pos:end="395:9">switch <condition pos:start="367:16" pos:end="367:22">(<expr pos:start="367:17" pos:end="367:21"><name pos:start="367:17" pos:end="367:21">value</name></expr>)</condition> <block pos:start="367:24" pos:end="395:9">{<block_content pos:start="369:9" pos:end="393:39">

        <case pos:start="369:9" pos:end="369:15">case <expr pos:start="369:14" pos:end="369:14"><literal type="number" pos:start="369:14" pos:end="369:14">0</literal></expr>:</case>

            <expr_stmt pos:start="371:13" pos:end="371:26"><expr pos:start="371:13" pos:end="371:25"><name pos:start="371:13" pos:end="371:21"><name pos:start="371:13" pos:end="371:13">s</name><operator pos:start="371:14" pos:end="371:15">-&gt;</operator><name pos:start="371:16" pos:end="371:21">invert</name></name> <operator pos:start="371:23" pos:end="371:23">=</operator> <literal type="number" pos:start="371:25" pos:end="371:25">1</literal></expr>;</expr_stmt>

            <break pos:start="373:13" pos:end="373:18">break;</break>

        <case pos:start="375:9" pos:end="375:15">case <expr pos:start="375:14" pos:end="375:14"><literal type="number" pos:start="375:14" pos:end="375:14">1</literal></expr>:</case>

            <expr_stmt pos:start="377:13" pos:end="377:26"><expr pos:start="377:13" pos:end="377:25"><name pos:start="377:13" pos:end="377:21"><name pos:start="377:13" pos:end="377:13">s</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:21">invert</name></name> <operator pos:start="377:23" pos:end="377:23">=</operator> <literal type="number" pos:start="377:25" pos:end="377:25">0</literal></expr>;</expr_stmt>

            <break pos:start="379:13" pos:end="379:18">break;</break>

        <case pos:start="381:9" pos:end="381:15">case <expr pos:start="381:14" pos:end="381:14"><literal type="number" pos:start="381:14" pos:end="381:14">2</literal></expr>:</case>

        <case pos:start="383:9" pos:end="383:15">case <expr pos:start="383:14" pos:end="383:14"><literal type="number" pos:start="383:14" pos:end="383:14">3</literal></expr>:</case>

            <break pos:start="385:13" pos:end="385:18">break;</break>

        <default pos:start="387:9" pos:end="387:16">default:</default>

            <expr_stmt pos:start="389:13" pos:end="391:26"><expr pos:start="389:13" pos:end="391:25"><call pos:start="389:13" pos:end="391:25"><name pos:start="389:13" pos:end="389:18">av_log</name><argument_list pos:start="389:19" pos:end="391:25">(<argument pos:start="389:20" pos:end="389:27"><expr pos:start="389:20" pos:end="389:27"><name pos:start="389:20" pos:end="389:27"><name pos:start="389:20" pos:end="389:20">s</name><operator pos:start="389:21" pos:end="389:22">-&gt;</operator><name pos:start="389:23" pos:end="389:27">avctx</name></name></expr></argument>, <argument pos:start="389:30" pos:end="389:41"><expr pos:start="389:30" pos:end="389:41"><name pos:start="389:30" pos:end="389:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="389:44" pos:end="389:77"><expr pos:start="389:44" pos:end="389:77"><literal type="string" pos:start="389:44" pos:end="389:77">"Color mode %d is not supported\n"</literal></expr></argument>,

                   <argument pos:start="391:20" pos:end="391:24"><expr pos:start="391:20" pos:end="391:24"><name pos:start="391:20" pos:end="391:24">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="393:13" pos:end="393:39">return <expr pos:start="393:20" pos:end="393:38"><name pos:start="393:20" pos:end="393:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></switch>

        <break pos:start="397:9" pos:end="397:14">break;</break>

    <case pos:start="399:5" pos:end="399:25">case <expr pos:start="399:10" pos:end="399:24"><name pos:start="399:10" pos:end="399:24">TIFF_FILL_ORDER</name></expr>:</case>

        <if_stmt pos:start="401:9" pos:end="409:9"><if pos:start="401:9" pos:end="409:9">if <condition pos:start="401:12" pos:end="401:35">(<expr pos:start="401:13" pos:end="401:34"><name pos:start="401:13" pos:end="401:32"><name pos:start="401:13" pos:end="401:17">value</name> <argument_list type="generic" pos:start="401:19" pos:end="401:32">&lt; <argument pos:start="401:21" pos:end="401:30"><expr pos:start="401:21" pos:end="401:30"><literal type="number" pos:start="401:21" pos:end="401:21">1</literal> <operator pos:start="401:23" pos:end="401:24">||</operator> <name pos:start="401:26" pos:end="401:30">value</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="401:34" pos:end="401:34">2</literal></expr>)</condition> <block pos:start="401:37" pos:end="409:9">{<block_content pos:start="403:13" pos:end="407:22">

            <expr_stmt pos:start="403:13" pos:end="405:78"><expr pos:start="403:13" pos:end="405:77"><call pos:start="403:13" pos:end="405:77"><name pos:start="403:13" pos:end="403:18">av_log</name><argument_list pos:start="403:19" pos:end="405:77">(<argument pos:start="403:20" pos:end="403:27"><expr pos:start="403:20" pos:end="403:27"><name pos:start="403:20" pos:end="403:27"><name pos:start="403:20" pos:end="403:20">s</name><operator pos:start="403:21" pos:end="403:22">-&gt;</operator><name pos:start="403:23" pos:end="403:27">avctx</name></name></expr></argument>, <argument pos:start="403:30" pos:end="403:41"><expr pos:start="403:30" pos:end="403:41"><name pos:start="403:30" pos:end="403:41">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="405:20" pos:end="405:69"><expr pos:start="405:20" pos:end="405:69"><literal type="string" pos:start="405:20" pos:end="405:69">"Unknown FillOrder value %d, trying default one\n"</literal></expr></argument>, <argument pos:start="405:72" pos:end="405:76"><expr pos:start="405:72" pos:end="405:76"><name pos:start="405:72" pos:end="405:76">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:22"><expr pos:start="407:13" pos:end="407:21"><name pos:start="407:13" pos:end="407:17">value</name> <operator pos:start="407:19" pos:end="407:19">=</operator> <literal type="number" pos:start="407:21" pos:end="407:21">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:34"><expr pos:start="411:9" pos:end="411:33"><name pos:start="411:9" pos:end="411:21"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:21">fill_order</name></name> <operator pos:start="411:23" pos:end="411:23">=</operator> <name pos:start="411:25" pos:end="411:29">value</name> <operator pos:start="411:31" pos:end="411:31">-</operator> <literal type="number" pos:start="411:33" pos:end="411:33">1</literal></expr>;</expr_stmt>

        <break pos:start="413:9" pos:end="413:14">break;</break>

    <case pos:start="415:5" pos:end="415:18">case <expr pos:start="415:10" pos:end="415:17"><name pos:start="415:10" pos:end="415:17">TIFF_PAL</name></expr>:</case>

        <expr_stmt pos:start="417:9" pos:end="417:38"><expr pos:start="417:9" pos:end="417:37"><name pos:start="417:9" pos:end="417:11">pal</name> <operator pos:start="417:13" pos:end="417:13">=</operator> <operator pos:start="417:15" pos:end="417:15">(</operator><name pos:start="417:16" pos:end="417:23">uint32_t</name> <operator pos:start="417:25" pos:end="417:25">*</operator><operator pos:start="417:26" pos:end="417:26">)</operator> <name pos:start="417:28" pos:end="417:37"><name pos:start="417:28" pos:end="417:28">s</name><operator pos:start="417:29" pos:end="417:30">-&gt;</operator><name pos:start="417:31" pos:end="417:37">palette</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:31"><expr pos:start="419:9" pos:end="419:30"><name pos:start="419:9" pos:end="419:11">off</name> <operator pos:start="419:13" pos:end="419:13">=</operator> <name pos:start="419:15" pos:end="419:30"><name pos:start="419:15" pos:end="419:24">type_sizes</name><index pos:start="419:25" pos:end="419:30">[<expr pos:start="419:26" pos:end="419:29"><name pos:start="419:26" pos:end="419:29">type</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="421:9" pos:end="423:39"><if pos:start="421:9" pos:end="423:39">if <condition pos:start="421:12" pos:end="421:88">(<expr pos:start="421:13" pos:end="421:87"><name pos:start="421:13" pos:end="421:17">count</name> <operator pos:start="421:19" pos:end="421:19">/</operator> <literal type="number" pos:start="421:21" pos:end="421:21">3</literal> <operator pos:start="421:23" pos:end="421:23">&gt;</operator> <literal type="number" pos:start="421:25" pos:end="421:27">256</literal> <operator pos:start="421:29" pos:end="421:30">||</operator> <call pos:start="421:32" pos:end="421:65"><name pos:start="421:32" pos:end="421:57">bytestream2_get_bytes_left</name><argument_list pos:start="421:58" pos:end="421:65">(<argument pos:start="421:59" pos:end="421:64"><expr pos:start="421:59" pos:end="421:64"><operator pos:start="421:59" pos:end="421:59">&amp;</operator><name pos:start="421:60" pos:end="421:64"><name pos:start="421:60" pos:end="421:60">s</name><operator pos:start="421:61" pos:end="421:62">-&gt;</operator><name pos:start="421:63" pos:end="421:64">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="421:67" pos:end="421:67">&lt;</operator> <name pos:start="421:69" pos:end="421:73">count</name> <operator pos:start="421:75" pos:end="421:75">/</operator> <literal type="number" pos:start="421:77" pos:end="421:77">3</literal> <operator pos:start="421:79" pos:end="421:79">*</operator> <name pos:start="421:81" pos:end="421:83">off</name> <operator pos:start="421:85" pos:end="421:85">*</operator> <literal type="number" pos:start="421:87" pos:end="421:87">3</literal></expr>)</condition><block type="pseudo" pos:start="423:13" pos:end="423:39"><block_content pos:start="423:13" pos:end="423:39">

            <return pos:start="423:13" pos:end="423:39">return <expr pos:start="423:20" pos:end="423:38"><name pos:start="423:20" pos:end="423:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="425:9" pos:end="425:42"><expr pos:start="425:9" pos:end="425:41"><name pos:start="425:9" pos:end="425:11">off</name> <operator pos:start="425:13" pos:end="425:13">=</operator> <operator pos:start="425:15" pos:end="425:15">(</operator><name pos:start="425:16" pos:end="425:31"><name pos:start="425:16" pos:end="425:25">type_sizes</name><index pos:start="425:26" pos:end="425:31">[<expr pos:start="425:27" pos:end="425:30"><name pos:start="425:27" pos:end="425:30">type</name></expr>]</index></name> <operator pos:start="425:33" pos:end="425:33">-</operator> <literal type="number" pos:start="425:35" pos:end="425:35">1</literal><operator pos:start="425:36" pos:end="425:36">)</operator> <operator pos:start="425:38" pos:end="425:39">&lt;&lt;</operator> <literal type="number" pos:start="425:41" pos:end="425:41">3</literal></expr>;</expr_stmt>

        <for pos:start="427:9" pos:end="441:9">for <control pos:start="427:13" pos:end="427:32">(<init pos:start="427:14" pos:end="427:19"><expr pos:start="427:14" pos:end="427:18"><name pos:start="427:14" pos:end="427:14">k</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="number" pos:start="427:18" pos:end="427:18">2</literal></expr>;</init> <condition pos:start="427:21" pos:end="427:27"><expr pos:start="427:21" pos:end="427:26"><name pos:start="427:21" pos:end="427:21">k</name> <operator pos:start="427:23" pos:end="427:24">&gt;=</operator> <literal type="number" pos:start="427:26" pos:end="427:26">0</literal></expr>;</condition> <incr pos:start="427:29" pos:end="427:31"><expr pos:start="427:29" pos:end="427:31"><name pos:start="427:29" pos:end="427:29">k</name><operator pos:start="427:30" pos:end="427:31">--</operator></expr></incr>)</control> <block pos:start="427:34" pos:end="441:9">{<block_content pos:start="429:13" pos:end="439:13">

            <for pos:start="429:13" pos:end="439:13">for <control pos:start="429:17" pos:end="429:43">(<init pos:start="429:18" pos:end="429:23"><expr pos:start="429:18" pos:end="429:22"><name pos:start="429:18" pos:end="429:18">i</name> <operator pos:start="429:20" pos:end="429:20">=</operator> <literal type="number" pos:start="429:22" pos:end="429:22">0</literal></expr>;</init> <condition pos:start="429:25" pos:end="429:38"><expr pos:start="429:25" pos:end="429:37"><name pos:start="429:25" pos:end="429:25">i</name> <operator pos:start="429:27" pos:end="429:27">&lt;</operator> <name pos:start="429:29" pos:end="429:33">count</name> <operator pos:start="429:35" pos:end="429:35">/</operator> <literal type="number" pos:start="429:37" pos:end="429:37">3</literal></expr>;</condition> <incr pos:start="429:40" pos:end="429:42"><expr pos:start="429:40" pos:end="429:42"><name pos:start="429:40" pos:end="429:40">i</name><operator pos:start="429:41" pos:end="429:42">++</operator></expr></incr>)</control> <block pos:start="429:45" pos:end="439:13">{<block_content pos:start="431:17" pos:end="437:28">

                <if_stmt pos:start="431:17" pos:end="433:41"><if pos:start="431:17" pos:end="433:41">if <condition pos:start="431:20" pos:end="431:27">(<expr pos:start="431:21" pos:end="431:26"><name pos:start="431:21" pos:end="431:21">k</name> <operator pos:start="431:23" pos:end="431:24">==</operator> <literal type="number" pos:start="431:26" pos:end="431:26">2</literal></expr>)</condition><block type="pseudo" pos:start="433:21" pos:end="433:41"><block_content pos:start="433:21" pos:end="433:41">

                    <expr_stmt pos:start="433:21" pos:end="433:41"><expr pos:start="433:21" pos:end="433:40"><name pos:start="433:21" pos:end="433:26"><name pos:start="433:21" pos:end="433:23">pal</name><index pos:start="433:24" pos:end="433:26">[<expr pos:start="433:25" pos:end="433:25"><name pos:start="433:25" pos:end="433:25">i</name></expr>]</index></name> <operator pos:start="433:28" pos:end="433:28">=</operator> <literal type="number" pos:start="433:30" pos:end="433:34">0xFFU</literal> <operator pos:start="433:36" pos:end="433:37">&lt;&lt;</operator> <literal type="number" pos:start="433:39" pos:end="433:40">24</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="435:17" pos:end="435:67"><expr pos:start="435:17" pos:end="435:66"><name pos:start="435:17" pos:end="435:17">j</name> <operator pos:start="435:19" pos:end="435:19">=</operator>  <operator pos:start="435:22" pos:end="435:22">(</operator><call pos:start="435:23" pos:end="435:47"><name pos:start="435:23" pos:end="435:26">tget</name><argument_list pos:start="435:27" pos:end="435:47">(<argument pos:start="435:28" pos:end="435:33"><expr pos:start="435:28" pos:end="435:33"><operator pos:start="435:28" pos:end="435:28">&amp;</operator><name pos:start="435:29" pos:end="435:33"><name pos:start="435:29" pos:end="435:29">s</name><operator pos:start="435:30" pos:end="435:31">-&gt;</operator><name pos:start="435:32" pos:end="435:33">gb</name></name></expr></argument>, <argument pos:start="435:36" pos:end="435:39"><expr pos:start="435:36" pos:end="435:39"><name pos:start="435:36" pos:end="435:39">type</name></expr></argument>, <argument pos:start="435:42" pos:end="435:46"><expr pos:start="435:42" pos:end="435:46"><name pos:start="435:42" pos:end="435:46"><name pos:start="435:42" pos:end="435:42">s</name><operator pos:start="435:43" pos:end="435:44">-&gt;</operator><name pos:start="435:45" pos:end="435:46">le</name></name></expr></argument>)</argument_list></call> <operator pos:start="435:49" pos:end="435:50">&gt;&gt;</operator> <name pos:start="435:52" pos:end="435:54">off</name><operator pos:start="435:55" pos:end="435:55">)</operator> <operator pos:start="435:57" pos:end="435:58">&lt;&lt;</operator> <operator pos:start="435:60" pos:end="435:60">(</operator><name pos:start="435:61" pos:end="435:61">k</name> <operator pos:start="435:63" pos:end="435:63">*</operator> <literal type="number" pos:start="435:65" pos:end="435:65">8</literal><operator pos:start="435:66" pos:end="435:66">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="437:17" pos:end="437:28"><expr pos:start="437:17" pos:end="437:27"><name pos:start="437:17" pos:end="437:22"><name pos:start="437:17" pos:end="437:19">pal</name><index pos:start="437:20" pos:end="437:22">[<expr pos:start="437:21" pos:end="437:21"><name pos:start="437:21" pos:end="437:21">i</name></expr>]</index></name> <operator pos:start="437:24" pos:end="437:25">|=</operator> <name pos:start="437:27" pos:end="437:27">j</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="443:9" pos:end="443:30"><expr pos:start="443:9" pos:end="443:29"><name pos:start="443:9" pos:end="443:25"><name pos:start="443:9" pos:end="443:9">s</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:25">palette_is_set</name></name> <operator pos:start="443:27" pos:end="443:27">=</operator> <literal type="number" pos:start="443:29" pos:end="443:29">1</literal></expr>;</expr_stmt>

        <break pos:start="445:9" pos:end="445:14">break;</break>

    <case pos:start="447:5" pos:end="447:21">case <expr pos:start="447:10" pos:end="447:20"><name pos:start="447:10" pos:end="447:20">TIFF_PLANAR</name></expr>:</case>

        <if_stmt pos:start="449:9" pos:end="455:9"><if pos:start="449:9" pos:end="455:9">if <condition pos:start="449:12" pos:end="449:23">(<expr pos:start="449:13" pos:end="449:22"><name pos:start="449:13" pos:end="449:17">value</name> <operator pos:start="449:19" pos:end="449:20">==</operator> <literal type="number" pos:start="449:22" pos:end="449:22">2</literal></expr>)</condition> <block pos:start="449:25" pos:end="455:9">{<block_content pos:start="451:13" pos:end="453:40">

            <expr_stmt pos:start="451:13" pos:end="451:79"><expr pos:start="451:13" pos:end="451:78"><call pos:start="451:13" pos:end="451:78"><name pos:start="451:13" pos:end="451:18">av_log</name><argument_list pos:start="451:19" pos:end="451:78">(<argument pos:start="451:20" pos:end="451:27"><expr pos:start="451:20" pos:end="451:27"><name pos:start="451:20" pos:end="451:27"><name pos:start="451:20" pos:end="451:20">s</name><operator pos:start="451:21" pos:end="451:22">-&gt;</operator><name pos:start="451:23" pos:end="451:27">avctx</name></name></expr></argument>, <argument pos:start="451:30" pos:end="451:41"><expr pos:start="451:30" pos:end="451:41"><name pos:start="451:30" pos:end="451:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="451:44" pos:end="451:77"><expr pos:start="451:44" pos:end="451:77"><literal type="string" pos:start="451:44" pos:end="451:77">"Planar format is not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="453:13" pos:end="453:40">return <expr pos:start="453:20" pos:end="453:39"><name pos:start="453:20" pos:end="453:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:24">case <expr pos:start="459:10" pos:end="459:23"><name pos:start="459:10" pos:end="459:23">TIFF_T4OPTIONS</name></expr>:</case>

        <if_stmt pos:start="461:9" pos:end="463:32"><if pos:start="461:9" pos:end="463:32">if <condition pos:start="461:12" pos:end="461:32">(<expr pos:start="461:13" pos:end="461:31"><name pos:start="461:13" pos:end="461:20"><name pos:start="461:13" pos:end="461:13">s</name><operator pos:start="461:14" pos:end="461:15">-&gt;</operator><name pos:start="461:16" pos:end="461:20">compr</name></name> <operator pos:start="461:22" pos:end="461:23">==</operator> <name pos:start="461:25" pos:end="461:31">TIFF_G3</name></expr>)</condition><block type="pseudo" pos:start="463:13" pos:end="463:32"><block_content pos:start="463:13" pos:end="463:32">

            <expr_stmt pos:start="463:13" pos:end="463:32"><expr pos:start="463:13" pos:end="463:31"><name pos:start="463:13" pos:end="463:23"><name pos:start="463:13" pos:end="463:13">s</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:23">fax_opts</name></name> <operator pos:start="463:25" pos:end="463:25">=</operator> <name pos:start="463:27" pos:end="463:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="465:9" pos:end="465:14">break;</break>

    <case pos:start="467:5" pos:end="467:24">case <expr pos:start="467:10" pos:end="467:23"><name pos:start="467:10" pos:end="467:23">TIFF_T6OPTIONS</name></expr>:</case>

        <if_stmt pos:start="469:9" pos:end="471:32"><if pos:start="469:9" pos:end="471:32">if <condition pos:start="469:12" pos:end="469:32">(<expr pos:start="469:13" pos:end="469:31"><name pos:start="469:13" pos:end="469:20"><name pos:start="469:13" pos:end="469:13">s</name><operator pos:start="469:14" pos:end="469:15">-&gt;</operator><name pos:start="469:16" pos:end="469:20">compr</name></name> <operator pos:start="469:22" pos:end="469:23">==</operator> <name pos:start="469:25" pos:end="469:31">TIFF_G4</name></expr>)</condition><block type="pseudo" pos:start="471:13" pos:end="471:32"><block_content pos:start="471:13" pos:end="471:32">

            <expr_stmt pos:start="471:13" pos:end="471:32"><expr pos:start="471:13" pos:end="471:31"><name pos:start="471:13" pos:end="471:23"><name pos:start="471:13" pos:end="471:13">s</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:23">fax_opts</name></name> <operator pos:start="471:25" pos:end="471:25">=</operator> <name pos:start="471:27" pos:end="471:31">value</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="473:9" pos:end="484:0">break;</break>

<cpp:define pos:start="475:1" pos:end="483:5">#<cpp:directive pos:start="475:2" pos:end="475:7">define</cpp:directive> <cpp:macro pos:start="475:9" pos:end="475:38"><name pos:start="475:9" pos:end="475:20">ADD_METADATA</name><parameter_list pos:start="475:21" pos:end="475:38">(<parameter pos:start="475:22" pos:end="475:26"><type pos:start="475:22" pos:end="475:26"><name pos:start="475:22" pos:end="475:26">count</name></type></parameter>, <parameter pos:start="475:29" pos:end="475:32"><type pos:start="475:29" pos:end="475:32"><name pos:start="475:29" pos:end="475:32">name</name></type></parameter>, <parameter pos:start="475:35" pos:end="475:37"><type pos:start="475:35" pos:end="475:37"><name pos:start="475:35" pos:end="475:37">sep</name></type></parameter>)</parameter_list></cpp:macro>\

    <cpp:value pos:start="477:5" pos:end="483:5">if ((ret = add_metadata(count, type, name, sep, s)) &lt; 0) {\

        av_log(s-&gt;avctx, AV_LOG_ERROR, "Error allocating temporary buffer\n");\

        return ret;\

    }</cpp:value></cpp:define>

    <case pos:start="485:5" pos:end="485:32">case <expr pos:start="485:10" pos:end="485:31"><name pos:start="485:10" pos:end="485:31">TIFF_MODEL_PIXEL_SCALE</name></expr>:</case>

        <expr_stmt pos:start="487:9" pos:end="487:56"><expr pos:start="487:9" pos:end="487:55"><call pos:start="487:9" pos:end="487:55"><name pos:start="487:9" pos:end="487:20">ADD_METADATA</name><argument_list pos:start="487:21" pos:end="487:55">(<argument pos:start="487:22" pos:end="487:26"><expr pos:start="487:22" pos:end="487:26"><name pos:start="487:22" pos:end="487:26">count</name></expr></argument>, <argument pos:start="487:29" pos:end="487:48"><expr pos:start="487:29" pos:end="487:48"><literal type="string" pos:start="487:29" pos:end="487:48">"ModelPixelScaleTag"</literal></expr></argument>, <argument pos:start="487:51" pos:end="487:54"><expr pos:start="487:51" pos:end="487:54"><name pos:start="487:51" pos:end="487:54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="489:9" pos:end="489:14">break;</break>

    <case pos:start="491:5" pos:end="491:35">case <expr pos:start="491:10" pos:end="491:34"><name pos:start="491:10" pos:end="491:34">TIFF_MODEL_TRANSFORMATION</name></expr>:</case>

        <expr_stmt pos:start="493:9" pos:end="493:60"><expr pos:start="493:9" pos:end="493:59"><call pos:start="493:9" pos:end="493:59"><name pos:start="493:9" pos:end="493:20">ADD_METADATA</name><argument_list pos:start="493:21" pos:end="493:59">(<argument pos:start="493:22" pos:end="493:26"><expr pos:start="493:22" pos:end="493:26"><name pos:start="493:22" pos:end="493:26">count</name></expr></argument>, <argument pos:start="493:29" pos:end="493:52"><expr pos:start="493:29" pos:end="493:52"><literal type="string" pos:start="493:29" pos:end="493:52">"ModelTransformationTag"</literal></expr></argument>, <argument pos:start="493:55" pos:end="493:58"><expr pos:start="493:55" pos:end="493:58"><name pos:start="493:55" pos:end="493:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="495:9" pos:end="495:14">break;</break>

    <case pos:start="497:5" pos:end="497:29">case <expr pos:start="497:10" pos:end="497:28"><name pos:start="497:10" pos:end="497:28">TIFF_MODEL_TIEPOINT</name></expr>:</case>

        <expr_stmt pos:start="499:9" pos:end="499:54"><expr pos:start="499:9" pos:end="499:53"><call pos:start="499:9" pos:end="499:53"><name pos:start="499:9" pos:end="499:20">ADD_METADATA</name><argument_list pos:start="499:21" pos:end="499:53">(<argument pos:start="499:22" pos:end="499:26"><expr pos:start="499:22" pos:end="499:26"><name pos:start="499:22" pos:end="499:26">count</name></expr></argument>, <argument pos:start="499:29" pos:end="499:46"><expr pos:start="499:29" pos:end="499:46"><literal type="string" pos:start="499:29" pos:end="499:46">"ModelTiepointTag"</literal></expr></argument>, <argument pos:start="499:49" pos:end="499:52"><expr pos:start="499:49" pos:end="499:52"><name pos:start="499:49" pos:end="499:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="501:9" pos:end="501:14">break;</break>

    <case pos:start="503:5" pos:end="503:32">case <expr pos:start="503:10" pos:end="503:31"><name pos:start="503:10" pos:end="503:31">TIFF_GEO_KEY_DIRECTORY</name></expr>:</case>

        <expr_stmt pos:start="505:9" pos:end="505:49"><expr pos:start="505:9" pos:end="505:48"><call pos:start="505:9" pos:end="505:48"><name pos:start="505:9" pos:end="505:20">ADD_METADATA</name><argument_list pos:start="505:21" pos:end="505:48">(<argument pos:start="505:22" pos:end="505:22"><expr pos:start="505:22" pos:end="505:22"><literal type="number" pos:start="505:22" pos:end="505:22">1</literal></expr></argument>, <argument pos:start="505:25" pos:end="505:41"><expr pos:start="505:25" pos:end="505:41"><literal type="string" pos:start="505:25" pos:end="505:41">"GeoTIFF_Version"</literal></expr></argument>, <argument pos:start="505:44" pos:end="505:47"><expr pos:start="505:44" pos:end="505:47"><name pos:start="505:44" pos:end="505:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="507:9" pos:end="507:53"><expr pos:start="507:9" pos:end="507:52"><call pos:start="507:9" pos:end="507:52"><name pos:start="507:9" pos:end="507:20">ADD_METADATA</name><argument_list pos:start="507:21" pos:end="507:52">(<argument pos:start="507:22" pos:end="507:22"><expr pos:start="507:22" pos:end="507:22"><literal type="number" pos:start="507:22" pos:end="507:22">2</literal></expr></argument>, <argument pos:start="507:25" pos:end="507:46"><expr pos:start="507:25" pos:end="507:46"><literal type="string" pos:start="507:25" pos:end="507:46">"GeoTIFF_Key_Revision"</literal></expr></argument>, <argument pos:start="507:49" pos:end="507:51"><expr pos:start="507:49" pos:end="507:51"><literal type="string" pos:start="507:49" pos:end="507:51">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="509:9" pos:end="509:54"><expr pos:start="509:9" pos:end="509:53"><name pos:start="509:9" pos:end="509:23"><name pos:start="509:9" pos:end="509:9">s</name><operator pos:start="509:10" pos:end="509:11">-&gt;</operator><name pos:start="509:12" pos:end="509:23">geotag_count</name></name>   <operator pos:start="509:27" pos:end="509:27">=</operator> <call pos:start="509:29" pos:end="509:53"><name pos:start="509:29" pos:end="509:38">tget_short</name><argument_list pos:start="509:39" pos:end="509:53">(<argument pos:start="509:40" pos:end="509:45"><expr pos:start="509:40" pos:end="509:45"><operator pos:start="509:40" pos:end="509:40">&amp;</operator><name pos:start="509:41" pos:end="509:45"><name pos:start="509:41" pos:end="509:41">s</name><operator pos:start="509:42" pos:end="509:43">-&gt;</operator><name pos:start="509:44" pos:end="509:45">gb</name></name></expr></argument>, <argument pos:start="509:48" pos:end="509:52"><expr pos:start="509:48" pos:end="509:52"><name pos:start="509:48" pos:end="509:52"><name pos:start="509:48" pos:end="509:48">s</name><operator pos:start="509:49" pos:end="509:50">-&gt;</operator><name pos:start="509:51" pos:end="509:52">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="511:9" pos:end="517:9"><if pos:start="511:9" pos:end="517:9">if <condition pos:start="511:12" pos:end="511:44">(<expr pos:start="511:13" pos:end="511:43"><name pos:start="511:13" pos:end="511:27"><name pos:start="511:13" pos:end="511:13">s</name><operator pos:start="511:14" pos:end="511:15">-&gt;</operator><name pos:start="511:16" pos:end="511:27">geotag_count</name></name> <operator pos:start="511:29" pos:end="511:29">&gt;</operator> <name pos:start="511:31" pos:end="511:35">count</name> <operator pos:start="511:37" pos:end="511:37">/</operator> <literal type="number" pos:start="511:39" pos:end="511:41">4</literal> <operator pos:start="511:41" pos:end="511:41">-</operator> <literal type="number" pos:start="511:43" pos:end="511:43">1</literal></expr>)</condition> <block pos:start="511:46" pos:end="517:9">{<block_content pos:start="513:13" pos:end="515:102">

            <expr_stmt pos:start="513:13" pos:end="513:44"><expr pos:start="513:13" pos:end="513:43"><name pos:start="513:13" pos:end="513:27"><name pos:start="513:13" pos:end="513:13">s</name><operator pos:start="513:14" pos:end="513:15">-&gt;</operator><name pos:start="513:16" pos:end="513:27">geotag_count</name></name> <operator pos:start="513:29" pos:end="513:29">=</operator> <name pos:start="513:31" pos:end="513:35">count</name> <operator pos:start="513:37" pos:end="513:37">/</operator> <literal type="number" pos:start="513:39" pos:end="513:41">4</literal> <operator pos:start="513:41" pos:end="513:41">-</operator> <literal type="number" pos:start="513:43" pos:end="513:43">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="515:13" pos:end="515:102"><expr pos:start="515:13" pos:end="515:101"><call pos:start="515:13" pos:end="515:101"><name pos:start="515:13" pos:end="515:18">av_log</name><argument_list pos:start="515:19" pos:end="515:101">(<argument pos:start="515:20" pos:end="515:27"><expr pos:start="515:20" pos:end="515:27"><name pos:start="515:20" pos:end="515:27"><name pos:start="515:20" pos:end="515:20">s</name><operator pos:start="515:21" pos:end="515:22">-&gt;</operator><name pos:start="515:23" pos:end="515:27">avctx</name></name></expr></argument>, <argument pos:start="515:30" pos:end="515:43"><expr pos:start="515:30" pos:end="515:43"><name pos:start="515:30" pos:end="515:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="515:46" pos:end="515:100"><expr pos:start="515:46" pos:end="515:100"><literal type="string" pos:start="515:46" pos:end="515:100">"GeoTIFF key directory buffer shorter than specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="519:9" pos:end="525:9"><if pos:start="519:9" pos:end="525:9">if <condition pos:start="519:12" pos:end="519:87">(<expr pos:start="519:13" pos:end="519:86"><call pos:start="519:13" pos:end="519:46"><name pos:start="519:13" pos:end="519:38">bytestream2_get_bytes_left</name><argument_list pos:start="519:39" pos:end="519:46">(<argument pos:start="519:40" pos:end="519:45"><expr pos:start="519:40" pos:end="519:45"><operator pos:start="519:40" pos:end="519:40">&amp;</operator><name pos:start="519:41" pos:end="519:45"><name pos:start="519:41" pos:end="519:41">s</name><operator pos:start="519:42" pos:end="519:43">-&gt;</operator><name pos:start="519:44" pos:end="519:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="519:48" pos:end="519:48">&lt;</operator> <name pos:start="519:50" pos:end="519:64"><name pos:start="519:50" pos:end="519:50">s</name><operator pos:start="519:51" pos:end="519:52">-&gt;</operator><name pos:start="519:53" pos:end="519:64">geotag_count</name></name> <operator pos:start="519:66" pos:end="519:66">*</operator> <sizeof pos:start="519:68" pos:end="519:82">sizeof<argument_list pos:start="519:74" pos:end="519:82">(<argument pos:start="519:75" pos:end="519:81"><expr pos:start="519:75" pos:end="519:81"><name pos:start="519:75" pos:end="519:81">int16_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="519:84" pos:end="519:84">*</operator> <literal type="number" pos:start="519:86" pos:end="519:86">4</literal></expr>)</condition> <block pos:start="519:89" pos:end="525:9">{<block_content pos:start="521:13" pos:end="523:22">

            <expr_stmt pos:start="521:13" pos:end="521:32"><expr pos:start="521:13" pos:end="521:31"><name pos:start="521:13" pos:end="521:27"><name pos:start="521:13" pos:end="521:13">s</name><operator pos:start="521:14" pos:end="521:15">-&gt;</operator><name pos:start="521:16" pos:end="521:27">geotag_count</name></name> <operator pos:start="521:29" pos:end="521:29">=</operator> <literal type="number" pos:start="521:31" pos:end="521:31">0</literal></expr>;</expr_stmt>

            <return pos:start="523:13" pos:end="523:22">return <expr pos:start="523:20" pos:end="523:21"><operator pos:start="523:20" pos:end="523:20">-</operator><literal type="number" pos:start="523:21" pos:end="523:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="527:9" pos:end="527:70"><expr pos:start="527:9" pos:end="527:69"><name pos:start="527:9" pos:end="527:18"><name pos:start="527:9" pos:end="527:9">s</name><operator pos:start="527:10" pos:end="527:11">-&gt;</operator><name pos:start="527:12" pos:end="527:18">geotags</name></name> <operator pos:start="527:20" pos:end="527:20">=</operator> <call pos:start="527:22" pos:end="527:69"><name pos:start="527:22" pos:end="527:31">av_mallocz</name><argument_list pos:start="527:32" pos:end="527:69">(<argument pos:start="527:33" pos:end="527:68"><expr pos:start="527:33" pos:end="527:68"><sizeof pos:start="527:33" pos:end="527:50">sizeof<argument_list pos:start="527:39" pos:end="527:50">(<argument pos:start="527:40" pos:end="527:49"><expr pos:start="527:40" pos:end="527:49"><name pos:start="527:40" pos:end="527:49">TiffGeoTag</name></expr></argument>)</argument_list></sizeof> <operator pos:start="527:52" pos:end="527:52">*</operator> <name pos:start="527:54" pos:end="527:68"><name pos:start="527:54" pos:end="527:54">s</name><operator pos:start="527:55" pos:end="527:56">-&gt;</operator><name pos:start="527:57" pos:end="527:68">geotag_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="529:9" pos:end="537:9"><if pos:start="529:9" pos:end="537:9">if <condition pos:start="529:12" pos:end="529:24">(<expr pos:start="529:13" pos:end="529:23"><operator pos:start="529:13" pos:end="529:13">!</operator><name pos:start="529:14" pos:end="529:23"><name pos:start="529:14" pos:end="529:14">s</name><operator pos:start="529:15" pos:end="529:16">-&gt;</operator><name pos:start="529:17" pos:end="529:23">geotags</name></name></expr>)</condition> <block pos:start="529:26" pos:end="537:9">{<block_content pos:start="531:13" pos:end="535:35">

            <expr_stmt pos:start="531:13" pos:end="531:82"><expr pos:start="531:13" pos:end="531:81"><call pos:start="531:13" pos:end="531:81"><name pos:start="531:13" pos:end="531:18">av_log</name><argument_list pos:start="531:19" pos:end="531:81">(<argument pos:start="531:20" pos:end="531:27"><expr pos:start="531:20" pos:end="531:27"><name pos:start="531:20" pos:end="531:27"><name pos:start="531:20" pos:end="531:20">s</name><operator pos:start="531:21" pos:end="531:22">-&gt;</operator><name pos:start="531:23" pos:end="531:27">avctx</name></name></expr></argument>, <argument pos:start="531:30" pos:end="531:41"><expr pos:start="531:30" pos:end="531:41"><name pos:start="531:30" pos:end="531:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="531:44" pos:end="531:80"><expr pos:start="531:44" pos:end="531:80"><literal type="string" pos:start="531:44" pos:end="531:80">"Error allocating temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="533:13" pos:end="533:32"><expr pos:start="533:13" pos:end="533:31"><name pos:start="533:13" pos:end="533:27"><name pos:start="533:13" pos:end="533:13">s</name><operator pos:start="533:14" pos:end="533:15">-&gt;</operator><name pos:start="533:16" pos:end="533:27">geotag_count</name></name> <operator pos:start="533:29" pos:end="533:29">=</operator> <literal type="number" pos:start="533:31" pos:end="533:31">0</literal></expr>;</expr_stmt>

            <return pos:start="535:13" pos:end="535:35">return <expr pos:start="535:20" pos:end="535:34"><call pos:start="535:20" pos:end="535:34"><name pos:start="535:20" pos:end="535:26">AVERROR</name><argument_list pos:start="535:27" pos:end="535:34">(<argument pos:start="535:28" pos:end="535:33"><expr pos:start="535:28" pos:end="535:33"><name pos:start="535:28" pos:end="535:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="539:9" pos:end="557:9">for <control pos:start="539:13" pos:end="539:45">(<init pos:start="539:14" pos:end="539:19"><expr pos:start="539:14" pos:end="539:18"><name pos:start="539:14" pos:end="539:14">i</name> <operator pos:start="539:16" pos:end="539:16">=</operator> <literal type="number" pos:start="539:18" pos:end="539:18">0</literal></expr>;</init> <condition pos:start="539:21" pos:end="539:40"><expr pos:start="539:21" pos:end="539:39"><name pos:start="539:21" pos:end="539:21">i</name> <operator pos:start="539:23" pos:end="539:23">&lt;</operator> <name pos:start="539:25" pos:end="539:39"><name pos:start="539:25" pos:end="539:25">s</name><operator pos:start="539:26" pos:end="539:27">-&gt;</operator><name pos:start="539:28" pos:end="539:39">geotag_count</name></name></expr>;</condition> <incr pos:start="539:42" pos:end="539:44"><expr pos:start="539:42" pos:end="539:44"><name pos:start="539:42" pos:end="539:42">i</name><operator pos:start="539:43" pos:end="539:44">++</operator></expr></incr>)</control> <block pos:start="539:47" pos:end="557:9">{<block_content pos:start="541:13" pos:end="555:65">

            <expr_stmt pos:start="541:13" pos:end="541:61"><expr pos:start="541:13" pos:end="541:60"><name pos:start="541:13" pos:end="541:25"><name pos:start="541:13" pos:end="541:13">s</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:22">geotags</name><index pos:start="541:23" pos:end="541:25">[<expr pos:start="541:24" pos:end="541:24"><name pos:start="541:24" pos:end="541:24">i</name></expr>]</index></name><operator pos:start="541:26" pos:end="541:26">.</operator><name pos:start="541:27" pos:end="541:29">key</name>    <operator pos:start="541:34" pos:end="541:34">=</operator> <call pos:start="541:36" pos:end="541:60"><name pos:start="541:36" pos:end="541:45">tget_short</name><argument_list pos:start="541:46" pos:end="541:60">(<argument pos:start="541:47" pos:end="541:52"><expr pos:start="541:47" pos:end="541:52"><operator pos:start="541:47" pos:end="541:47">&amp;</operator><name pos:start="541:48" pos:end="541:52"><name pos:start="541:48" pos:end="541:48">s</name><operator pos:start="541:49" pos:end="541:50">-&gt;</operator><name pos:start="541:51" pos:end="541:52">gb</name></name></expr></argument>, <argument pos:start="541:55" pos:end="541:59"><expr pos:start="541:55" pos:end="541:59"><name pos:start="541:55" pos:end="541:59"><name pos:start="541:55" pos:end="541:55">s</name><operator pos:start="541:56" pos:end="541:57">-&gt;</operator><name pos:start="541:58" pos:end="541:59">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:61"><expr pos:start="543:13" pos:end="543:60"><name pos:start="543:13" pos:end="543:25"><name pos:start="543:13" pos:end="543:13">s</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:22">geotags</name><index pos:start="543:23" pos:end="543:25">[<expr pos:start="543:24" pos:end="543:24"><name pos:start="543:24" pos:end="543:24">i</name></expr>]</index></name><operator pos:start="543:26" pos:end="543:26">.</operator><name pos:start="543:27" pos:end="543:30">type</name>   <operator pos:start="543:34" pos:end="543:34">=</operator> <call pos:start="543:36" pos:end="543:60"><name pos:start="543:36" pos:end="543:45">tget_short</name><argument_list pos:start="543:46" pos:end="543:60">(<argument pos:start="543:47" pos:end="543:52"><expr pos:start="543:47" pos:end="543:52"><operator pos:start="543:47" pos:end="543:47">&amp;</operator><name pos:start="543:48" pos:end="543:52"><name pos:start="543:48" pos:end="543:48">s</name><operator pos:start="543:49" pos:end="543:50">-&gt;</operator><name pos:start="543:51" pos:end="543:52">gb</name></name></expr></argument>, <argument pos:start="543:55" pos:end="543:59"><expr pos:start="543:55" pos:end="543:59"><name pos:start="543:55" pos:end="543:59"><name pos:start="543:55" pos:end="543:55">s</name><operator pos:start="543:56" pos:end="543:57">-&gt;</operator><name pos:start="543:58" pos:end="543:59">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="545:13" pos:end="545:61"><expr pos:start="545:13" pos:end="545:60"><name pos:start="545:13" pos:end="545:25"><name pos:start="545:13" pos:end="545:13">s</name><operator pos:start="545:14" pos:end="545:15">-&gt;</operator><name pos:start="545:16" pos:end="545:22">geotags</name><index pos:start="545:23" pos:end="545:25">[<expr pos:start="545:24" pos:end="545:24"><name pos:start="545:24" pos:end="545:24">i</name></expr>]</index></name><operator pos:start="545:26" pos:end="545:26">.</operator><name pos:start="545:27" pos:end="545:31">count</name>  <operator pos:start="545:34" pos:end="545:34">=</operator> <call pos:start="545:36" pos:end="545:60"><name pos:start="545:36" pos:end="545:45">tget_short</name><argument_list pos:start="545:46" pos:end="545:60">(<argument pos:start="545:47" pos:end="545:52"><expr pos:start="545:47" pos:end="545:52"><operator pos:start="545:47" pos:end="545:47">&amp;</operator><name pos:start="545:48" pos:end="545:52"><name pos:start="545:48" pos:end="545:48">s</name><operator pos:start="545:49" pos:end="545:50">-&gt;</operator><name pos:start="545:51" pos:end="545:52">gb</name></name></expr></argument>, <argument pos:start="545:55" pos:end="545:59"><expr pos:start="545:55" pos:end="545:59"><name pos:start="545:55" pos:end="545:59"><name pos:start="545:55" pos:end="545:55">s</name><operator pos:start="545:56" pos:end="545:57">-&gt;</operator><name pos:start="545:58" pos:end="545:59">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="549:13" pos:end="555:65"><if pos:start="549:13" pos:end="551:98">if <condition pos:start="549:16" pos:end="549:36">(<expr pos:start="549:17" pos:end="549:35"><operator pos:start="549:17" pos:end="549:17">!</operator><name pos:start="549:18" pos:end="549:30"><name pos:start="549:18" pos:end="549:18">s</name><operator pos:start="549:19" pos:end="549:20">-&gt;</operator><name pos:start="549:21" pos:end="549:27">geotags</name><index pos:start="549:28" pos:end="549:30">[<expr pos:start="549:29" pos:end="549:29"><name pos:start="549:29" pos:end="549:29">i</name></expr>]</index></name><operator pos:start="549:31" pos:end="549:31">.</operator><name pos:start="549:32" pos:end="549:35">type</name></expr>)</condition><block type="pseudo" pos:start="551:17" pos:end="551:98"><block_content pos:start="551:17" pos:end="551:98">

                <expr_stmt pos:start="551:17" pos:end="551:98"><expr pos:start="551:17" pos:end="551:97"><name pos:start="551:17" pos:end="551:29"><name pos:start="551:17" pos:end="551:17">s</name><operator pos:start="551:18" pos:end="551:19">-&gt;</operator><name pos:start="551:20" pos:end="551:26">geotags</name><index pos:start="551:27" pos:end="551:29">[<expr pos:start="551:28" pos:end="551:28"><name pos:start="551:28" pos:end="551:28">i</name></expr>]</index></name><operator pos:start="551:30" pos:end="551:30">.</operator><name pos:start="551:31" pos:end="551:33">val</name>  <operator pos:start="551:36" pos:end="551:36">=</operator> <call pos:start="551:38" pos:end="551:97"><name pos:start="551:38" pos:end="551:51">get_geokey_val</name><argument_list pos:start="551:52" pos:end="551:97">(<argument pos:start="551:53" pos:end="551:69"><expr pos:start="551:53" pos:end="551:69"><name pos:start="551:53" pos:end="551:65"><name pos:start="551:53" pos:end="551:53">s</name><operator pos:start="551:54" pos:end="551:55">-&gt;</operator><name pos:start="551:56" pos:end="551:62">geotags</name><index pos:start="551:63" pos:end="551:65">[<expr pos:start="551:64" pos:end="551:64"><name pos:start="551:64" pos:end="551:64">i</name></expr>]</index></name><operator pos:start="551:66" pos:end="551:66">.</operator><name pos:start="551:67" pos:end="551:69">key</name></expr></argument>, <argument pos:start="551:72" pos:end="551:96"><expr pos:start="551:72" pos:end="551:96"><call pos:start="551:72" pos:end="551:96"><name pos:start="551:72" pos:end="551:81">tget_short</name><argument_list pos:start="551:82" pos:end="551:96">(<argument pos:start="551:83" pos:end="551:88"><expr pos:start="551:83" pos:end="551:88"><operator pos:start="551:83" pos:end="551:83">&amp;</operator><name pos:start="551:84" pos:end="551:88"><name pos:start="551:84" pos:end="551:84">s</name><operator pos:start="551:85" pos:end="551:86">-&gt;</operator><name pos:start="551:87" pos:end="551:88">gb</name></name></expr></argument>, <argument pos:start="551:91" pos:end="551:95"><expr pos:start="551:91" pos:end="551:95"><name pos:start="551:91" pos:end="551:95"><name pos:start="551:91" pos:end="551:91">s</name><operator pos:start="551:92" pos:end="551:93">-&gt;</operator><name pos:start="551:94" pos:end="551:95">le</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="553:13" pos:end="555:65">else<block type="pseudo" pos:start="555:17" pos:end="555:65"><block_content pos:start="555:17" pos:end="555:65">

                <expr_stmt pos:start="555:17" pos:end="555:65"><expr pos:start="555:17" pos:end="555:64"><name pos:start="555:17" pos:end="555:29"><name pos:start="555:17" pos:end="555:17">s</name><operator pos:start="555:18" pos:end="555:19">-&gt;</operator><name pos:start="555:20" pos:end="555:26">geotags</name><index pos:start="555:27" pos:end="555:29">[<expr pos:start="555:28" pos:end="555:28"><name pos:start="555:28" pos:end="555:28">i</name></expr>]</index></name><operator pos:start="555:30" pos:end="555:30">.</operator><name pos:start="555:31" pos:end="555:36">offset</name> <operator pos:start="555:38" pos:end="555:38">=</operator> <call pos:start="555:40" pos:end="555:64"><name pos:start="555:40" pos:end="555:49">tget_short</name><argument_list pos:start="555:50" pos:end="555:64">(<argument pos:start="555:51" pos:end="555:56"><expr pos:start="555:51" pos:end="555:56"><operator pos:start="555:51" pos:end="555:51">&amp;</operator><name pos:start="555:52" pos:end="555:56"><name pos:start="555:52" pos:end="555:52">s</name><operator pos:start="555:53" pos:end="555:54">-&gt;</operator><name pos:start="555:55" pos:end="555:56">gb</name></name></expr></argument>, <argument pos:start="555:59" pos:end="555:63"><expr pos:start="555:59" pos:end="555:63"><name pos:start="555:59" pos:end="555:63"><name pos:start="555:59" pos:end="555:59">s</name><operator pos:start="555:60" pos:end="555:61">-&gt;</operator><name pos:start="555:62" pos:end="555:63">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></for>

        <break pos:start="559:9" pos:end="559:14">break;</break>

    <case pos:start="561:5" pos:end="561:32">case <expr pos:start="561:10" pos:end="561:31"><name pos:start="561:10" pos:end="561:31">TIFF_GEO_DOUBLE_PARAMS</name></expr>:</case>

        <if_stmt pos:start="563:9" pos:end="565:39"><if pos:start="563:9" pos:end="565:39">if <condition pos:start="563:12" pos:end="563:47">(<expr pos:start="563:13" pos:end="563:46"><name pos:start="563:13" pos:end="563:17">count</name> <operator pos:start="563:19" pos:end="563:20">&gt;=</operator> <name pos:start="563:22" pos:end="563:28">INT_MAX</name> <operator pos:start="563:30" pos:end="563:30">/</operator> <sizeof pos:start="563:32" pos:end="563:46">sizeof<argument_list pos:start="563:38" pos:end="563:46">(<argument pos:start="563:39" pos:end="563:45"><expr pos:start="563:39" pos:end="563:45"><name pos:start="563:39" pos:end="563:45">int64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="565:13" pos:end="565:39"><block_content pos:start="565:13" pos:end="565:39">

            <return pos:start="565:13" pos:end="565:39">return <expr pos:start="565:20" pos:end="565:38"><name pos:start="565:20" pos:end="565:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="567:9" pos:end="569:39"><if pos:start="567:9" pos:end="569:39">if <condition pos:start="567:12" pos:end="567:73">(<expr pos:start="567:13" pos:end="567:72"><call pos:start="567:13" pos:end="567:46"><name pos:start="567:13" pos:end="567:38">bytestream2_get_bytes_left</name><argument_list pos:start="567:39" pos:end="567:46">(<argument pos:start="567:40" pos:end="567:45"><expr pos:start="567:40" pos:end="567:45"><operator pos:start="567:40" pos:end="567:40">&amp;</operator><name pos:start="567:41" pos:end="567:45"><name pos:start="567:41" pos:end="567:41">s</name><operator pos:start="567:42" pos:end="567:43">-&gt;</operator><name pos:start="567:44" pos:end="567:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="567:48" pos:end="567:48">&lt;</operator> <name pos:start="567:50" pos:end="567:54">count</name> <operator pos:start="567:56" pos:end="567:56">*</operator> <sizeof pos:start="567:58" pos:end="567:72">sizeof<argument_list pos:start="567:64" pos:end="567:72">(<argument pos:start="567:65" pos:end="567:71"><expr pos:start="567:65" pos:end="567:71"><name pos:start="567:65" pos:end="567:71">int64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="569:13" pos:end="569:39"><block_content pos:start="569:13" pos:end="569:39">

            <return pos:start="569:13" pos:end="569:39">return <expr pos:start="569:20" pos:end="569:38"><name pos:start="569:20" pos:end="569:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="571:9" pos:end="571:47"><expr pos:start="571:9" pos:end="571:46"><name pos:start="571:9" pos:end="571:10">dp</name> <operator pos:start="571:12" pos:end="571:12">=</operator> <call pos:start="571:14" pos:end="571:46"><name pos:start="571:14" pos:end="571:22">av_malloc</name><argument_list pos:start="571:23" pos:end="571:46">(<argument pos:start="571:24" pos:end="571:45"><expr pos:start="571:24" pos:end="571:45"><name pos:start="571:24" pos:end="571:28">count</name> <operator pos:start="571:30" pos:end="571:30">*</operator> <sizeof pos:start="571:32" pos:end="571:45">sizeof<argument_list pos:start="571:38" pos:end="571:45">(<argument pos:start="571:39" pos:end="571:44"><expr pos:start="571:39" pos:end="571:44"><name pos:start="571:39" pos:end="571:44">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="573:9" pos:end="579:9"><if pos:start="573:9" pos:end="579:9">if <condition pos:start="573:12" pos:end="573:16">(<expr pos:start="573:13" pos:end="573:15"><operator pos:start="573:13" pos:end="573:13">!</operator><name pos:start="573:14" pos:end="573:15">dp</name></expr>)</condition> <block pos:start="573:18" pos:end="579:9">{<block_content pos:start="575:13" pos:end="577:35">

            <expr_stmt pos:start="575:13" pos:end="575:82"><expr pos:start="575:13" pos:end="575:81"><call pos:start="575:13" pos:end="575:81"><name pos:start="575:13" pos:end="575:18">av_log</name><argument_list pos:start="575:19" pos:end="575:81">(<argument pos:start="575:20" pos:end="575:27"><expr pos:start="575:20" pos:end="575:27"><name pos:start="575:20" pos:end="575:27"><name pos:start="575:20" pos:end="575:20">s</name><operator pos:start="575:21" pos:end="575:22">-&gt;</operator><name pos:start="575:23" pos:end="575:27">avctx</name></name></expr></argument>, <argument pos:start="575:30" pos:end="575:41"><expr pos:start="575:30" pos:end="575:41"><name pos:start="575:30" pos:end="575:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="575:44" pos:end="575:80"><expr pos:start="575:44" pos:end="575:80"><literal type="string" pos:start="575:44" pos:end="575:80">"Error allocating temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="577:13" pos:end="577:35">return <expr pos:start="577:20" pos:end="577:34"><call pos:start="577:20" pos:end="577:34"><name pos:start="577:20" pos:end="577:26">AVERROR</name><argument_list pos:start="577:27" pos:end="577:34">(<argument pos:start="577:28" pos:end="577:33"><expr pos:start="577:28" pos:end="577:33"><name pos:start="577:28" pos:end="577:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <for pos:start="581:9" pos:end="583:47">for <control pos:start="581:13" pos:end="581:35">(<init pos:start="581:14" pos:end="581:19"><expr pos:start="581:14" pos:end="581:18"><name pos:start="581:14" pos:end="581:14">i</name> <operator pos:start="581:16" pos:end="581:16">=</operator> <literal type="number" pos:start="581:18" pos:end="581:18">0</literal></expr>;</init> <condition pos:start="581:21" pos:end="581:30"><expr pos:start="581:21" pos:end="581:29"><name pos:start="581:21" pos:end="581:21">i</name> <operator pos:start="581:23" pos:end="581:23">&lt;</operator> <name pos:start="581:25" pos:end="581:29">count</name></expr>;</condition> <incr pos:start="581:32" pos:end="581:34"><expr pos:start="581:32" pos:end="581:34"><name pos:start="581:32" pos:end="581:32">i</name><operator pos:start="581:33" pos:end="581:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="583:13" pos:end="583:47"><block_content pos:start="583:13" pos:end="583:47">

            <expr_stmt pos:start="583:13" pos:end="583:47"><expr pos:start="583:13" pos:end="583:46"><name pos:start="583:13" pos:end="583:17"><name pos:start="583:13" pos:end="583:14">dp</name><index pos:start="583:15" pos:end="583:17">[<expr pos:start="583:16" pos:end="583:16"><name pos:start="583:16" pos:end="583:16">i</name></expr>]</index></name> <operator pos:start="583:19" pos:end="583:19">=</operator> <call pos:start="583:21" pos:end="583:46"><name pos:start="583:21" pos:end="583:31">tget_double</name><argument_list pos:start="583:32" pos:end="583:46">(<argument pos:start="583:33" pos:end="583:38"><expr pos:start="583:33" pos:end="583:38"><operator pos:start="583:33" pos:end="583:33">&amp;</operator><name pos:start="583:34" pos:end="583:38"><name pos:start="583:34" pos:end="583:34">s</name><operator pos:start="583:35" pos:end="583:36">-&gt;</operator><name pos:start="583:37" pos:end="583:38">gb</name></name></expr></argument>, <argument pos:start="583:41" pos:end="583:45"><expr pos:start="583:41" pos:end="583:45"><name pos:start="583:41" pos:end="583:45"><name pos:start="583:41" pos:end="583:41">s</name><operator pos:start="583:42" pos:end="583:43">-&gt;</operator><name pos:start="583:44" pos:end="583:45">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="585:9" pos:end="615:9">for <control pos:start="585:13" pos:end="585:45">(<init pos:start="585:14" pos:end="585:19"><expr pos:start="585:14" pos:end="585:18"><name pos:start="585:14" pos:end="585:14">i</name> <operator pos:start="585:16" pos:end="585:16">=</operator> <literal type="number" pos:start="585:18" pos:end="585:18">0</literal></expr>;</init> <condition pos:start="585:21" pos:end="585:40"><expr pos:start="585:21" pos:end="585:39"><name pos:start="585:21" pos:end="585:21">i</name> <operator pos:start="585:23" pos:end="585:23">&lt;</operator> <name pos:start="585:25" pos:end="585:39"><name pos:start="585:25" pos:end="585:25">s</name><operator pos:start="585:26" pos:end="585:27">-&gt;</operator><name pos:start="585:28" pos:end="585:39">geotag_count</name></name></expr>;</condition> <incr pos:start="585:42" pos:end="585:44"><expr pos:start="585:42" pos:end="585:44"><name pos:start="585:42" pos:end="585:42">i</name><operator pos:start="585:43" pos:end="585:44">++</operator></expr></incr>)</control> <block pos:start="585:47" pos:end="615:9">{<block_content pos:start="587:13" pos:end="613:13">

            <if_stmt pos:start="587:13" pos:end="613:13"><if pos:start="587:13" pos:end="613:13">if <condition pos:start="587:16" pos:end="587:61">(<expr pos:start="587:17" pos:end="587:60"><name pos:start="587:17" pos:end="587:29"><name pos:start="587:17" pos:end="587:17">s</name><operator pos:start="587:18" pos:end="587:19">-&gt;</operator><name pos:start="587:20" pos:end="587:26">geotags</name><index pos:start="587:27" pos:end="587:29">[<expr pos:start="587:28" pos:end="587:28"><name pos:start="587:28" pos:end="587:28">i</name></expr>]</index></name><operator pos:start="587:30" pos:end="587:30">.</operator><name pos:start="587:31" pos:end="587:34">type</name> <operator pos:start="587:36" pos:end="587:37">==</operator> <name pos:start="587:39" pos:end="587:60">TIFF_GEO_DOUBLE_PARAMS</name></expr>)</condition> <block pos:start="587:63" pos:end="613:13">{<block_content pos:start="589:17" pos:end="611:17">

                <if_stmt pos:start="589:17" pos:end="611:17"><if pos:start="589:17" pos:end="595:17">if <condition pos:start="589:20" pos:end="591:74">(<expr pos:start="589:21" pos:end="591:73"><name pos:start="589:21" pos:end="589:33"><name pos:start="589:21" pos:end="589:21">s</name><operator pos:start="589:22" pos:end="589:23">-&gt;</operator><name pos:start="589:24" pos:end="589:30">geotags</name><index pos:start="589:31" pos:end="589:33">[<expr pos:start="589:32" pos:end="589:32"><name pos:start="589:32" pos:end="589:32">i</name></expr>]</index></name><operator pos:start="589:34" pos:end="589:34">.</operator><name pos:start="589:35" pos:end="589:39">count</name> <operator pos:start="589:41" pos:end="589:42">==</operator> <literal type="number" pos:start="589:44" pos:end="589:44">0</literal>

                    <operator pos:start="591:21" pos:end="591:22">||</operator> <name pos:start="591:24" pos:end="591:36"><name pos:start="591:24" pos:end="591:24">s</name><operator pos:start="591:25" pos:end="591:26">-&gt;</operator><name pos:start="591:27" pos:end="591:33">geotags</name><index pos:start="591:34" pos:end="591:36">[<expr pos:start="591:35" pos:end="591:35"><name pos:start="591:35" pos:end="591:35">i</name></expr>]</index></name><operator pos:start="591:37" pos:end="591:37">.</operator><name pos:start="591:38" pos:end="591:43">offset</name> <operator pos:start="591:45" pos:end="591:45">+</operator> <name pos:start="591:47" pos:end="591:59"><name pos:start="591:47" pos:end="591:47">s</name><operator pos:start="591:48" pos:end="591:49">-&gt;</operator><name pos:start="591:50" pos:end="591:56">geotags</name><index pos:start="591:57" pos:end="591:59">[<expr pos:start="591:58" pos:end="591:58"><name pos:start="591:58" pos:end="591:58">i</name></expr>]</index></name><operator pos:start="591:60" pos:end="591:60">.</operator><name pos:start="591:61" pos:end="591:65">count</name> <operator pos:start="591:67" pos:end="591:67">&gt;</operator> <name pos:start="591:69" pos:end="591:73">count</name></expr>)</condition> <block pos:start="591:76" pos:end="595:17">{<block_content pos:start="593:21" pos:end="593:100">

                    <expr_stmt pos:start="593:21" pos:end="593:100"><expr pos:start="593:21" pos:end="593:99"><call pos:start="593:21" pos:end="593:99"><name pos:start="593:21" pos:end="593:26">av_log</name><argument_list pos:start="593:27" pos:end="593:99">(<argument pos:start="593:28" pos:end="593:35"><expr pos:start="593:28" pos:end="593:35"><name pos:start="593:28" pos:end="593:35"><name pos:start="593:28" pos:end="593:28">s</name><operator pos:start="593:29" pos:end="593:30">-&gt;</operator><name pos:start="593:31" pos:end="593:35">avctx</name></name></expr></argument>, <argument pos:start="593:38" pos:end="593:51"><expr pos:start="593:38" pos:end="593:51"><name pos:start="593:38" pos:end="593:51">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="593:54" pos:end="593:79"><expr pos:start="593:54" pos:end="593:79"><literal type="string" pos:start="593:54" pos:end="593:79">"Invalid GeoTIFF key %d\n"</literal></expr></argument>, <argument pos:start="593:82" pos:end="593:98"><expr pos:start="593:82" pos:end="593:98"><name pos:start="593:82" pos:end="593:94"><name pos:start="593:82" pos:end="593:82">s</name><operator pos:start="593:83" pos:end="593:84">-&gt;</operator><name pos:start="593:85" pos:end="593:91">geotags</name><index pos:start="593:92" pos:end="593:94">[<expr pos:start="593:93" pos:end="593:93"><name pos:start="593:93" pos:end="593:93">i</name></expr>]</index></name><operator pos:start="593:95" pos:end="593:95">.</operator><name pos:start="593:96" pos:end="593:98">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="595:19" pos:end="611:17">else <block pos:start="595:24" pos:end="611:17">{<block_content pos:start="597:21" pos:end="609:43">

                    <decl_stmt pos:start="597:21" pos:end="597:97"><decl pos:start="597:21" pos:end="597:96"><type pos:start="597:21" pos:end="597:26"><name pos:start="597:21" pos:end="597:24">char</name> <modifier pos:start="597:26" pos:end="597:26">*</modifier></type><name pos:start="597:27" pos:end="597:28">ap</name> <init pos:start="597:30" pos:end="597:96">= <expr pos:start="597:32" pos:end="597:96"><call pos:start="597:32" pos:end="597:96"><name pos:start="597:32" pos:end="597:42">doubles2str</name><argument_list pos:start="597:43" pos:end="597:96">(<argument pos:start="597:44" pos:end="597:68"><expr pos:start="597:44" pos:end="597:68"><operator pos:start="597:44" pos:end="597:44">&amp;</operator><name pos:start="597:45" pos:end="597:68"><name pos:start="597:45" pos:end="597:46">dp</name><index pos:start="597:47" pos:end="597:68">[<expr pos:start="597:48" pos:end="597:67"><name pos:start="597:48" pos:end="597:60"><name pos:start="597:48" pos:end="597:48">s</name><operator pos:start="597:49" pos:end="597:50">-&gt;</operator><name pos:start="597:51" pos:end="597:57">geotags</name><index pos:start="597:58" pos:end="597:60">[<expr pos:start="597:59" pos:end="597:59"><name pos:start="597:59" pos:end="597:59">i</name></expr>]</index></name><operator pos:start="597:61" pos:end="597:61">.</operator><name pos:start="597:62" pos:end="597:67">offset</name></expr>]</index></name></expr></argument>, <argument pos:start="597:71" pos:end="597:89"><expr pos:start="597:71" pos:end="597:89"><name pos:start="597:71" pos:end="597:83"><name pos:start="597:71" pos:end="597:71">s</name><operator pos:start="597:72" pos:end="597:73">-&gt;</operator><name pos:start="597:74" pos:end="597:80">geotags</name><index pos:start="597:81" pos:end="597:83">[<expr pos:start="597:82" pos:end="597:82"><name pos:start="597:82" pos:end="597:82">i</name></expr>]</index></name><operator pos:start="597:84" pos:end="597:84">.</operator><name pos:start="597:85" pos:end="597:89">count</name></expr></argument>, <argument pos:start="597:92" pos:end="597:95"><expr pos:start="597:92" pos:end="597:95"><literal type="string" pos:start="597:92" pos:end="597:95">", "</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="599:21" pos:end="607:21"><if pos:start="599:21" pos:end="607:21">if <condition pos:start="599:24" pos:end="599:28">(<expr pos:start="599:25" pos:end="599:27"><operator pos:start="599:25" pos:end="599:25">!</operator><name pos:start="599:26" pos:end="599:27">ap</name></expr>)</condition> <block pos:start="599:30" pos:end="607:21">{<block_content pos:start="601:25" pos:end="605:47">

                        <expr_stmt pos:start="601:25" pos:end="601:94"><expr pos:start="601:25" pos:end="601:93"><call pos:start="601:25" pos:end="601:93"><name pos:start="601:25" pos:end="601:30">av_log</name><argument_list pos:start="601:31" pos:end="601:93">(<argument pos:start="601:32" pos:end="601:39"><expr pos:start="601:32" pos:end="601:39"><name pos:start="601:32" pos:end="601:39"><name pos:start="601:32" pos:end="601:32">s</name><operator pos:start="601:33" pos:end="601:34">-&gt;</operator><name pos:start="601:35" pos:end="601:39">avctx</name></name></expr></argument>, <argument pos:start="601:42" pos:end="601:53"><expr pos:start="601:42" pos:end="601:53"><name pos:start="601:42" pos:end="601:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="601:56" pos:end="601:92"><expr pos:start="601:56" pos:end="601:92"><literal type="string" pos:start="601:56" pos:end="601:92">"Error allocating temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="603:25" pos:end="603:38"><expr pos:start="603:25" pos:end="603:37"><call pos:start="603:25" pos:end="603:37"><name pos:start="603:25" pos:end="603:32">av_freep</name><argument_list pos:start="603:33" pos:end="603:37">(<argument pos:start="603:34" pos:end="603:36"><expr pos:start="603:34" pos:end="603:36"><operator pos:start="603:34" pos:end="603:34">&amp;</operator><name pos:start="603:35" pos:end="603:36">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="605:25" pos:end="605:47">return <expr pos:start="605:32" pos:end="605:46"><call pos:start="605:32" pos:end="605:46"><name pos:start="605:32" pos:end="605:38">AVERROR</name><argument_list pos:start="605:39" pos:end="605:46">(<argument pos:start="605:40" pos:end="605:45"><expr pos:start="605:40" pos:end="605:45"><name pos:start="605:40" pos:end="605:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="609:21" pos:end="609:43"><expr pos:start="609:21" pos:end="609:42"><name pos:start="609:21" pos:end="609:33"><name pos:start="609:21" pos:end="609:21">s</name><operator pos:start="609:22" pos:end="609:23">-&gt;</operator><name pos:start="609:24" pos:end="609:30">geotags</name><index pos:start="609:31" pos:end="609:33">[<expr pos:start="609:32" pos:end="609:32"><name pos:start="609:32" pos:end="609:32">i</name></expr>]</index></name><operator pos:start="609:34" pos:end="609:34">.</operator><name pos:start="609:35" pos:end="609:37">val</name> <operator pos:start="609:39" pos:end="609:39">=</operator> <name pos:start="609:41" pos:end="609:42">ap</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="617:9" pos:end="617:22"><expr pos:start="617:9" pos:end="617:21"><call pos:start="617:9" pos:end="617:21"><name pos:start="617:9" pos:end="617:16">av_freep</name><argument_list pos:start="617:17" pos:end="617:21">(<argument pos:start="617:18" pos:end="617:20"><expr pos:start="617:18" pos:end="617:20"><operator pos:start="617:18" pos:end="617:18">&amp;</operator><name pos:start="617:19" pos:end="617:20">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="619:9" pos:end="619:14">break;</break>

    <case pos:start="621:5" pos:end="621:31">case <expr pos:start="621:10" pos:end="621:30"><name pos:start="621:10" pos:end="621:30">TIFF_GEO_ASCII_PARAMS</name></expr>:</case>

        <expr_stmt pos:start="623:9" pos:end="623:39"><expr pos:start="623:9" pos:end="623:38"><name pos:start="623:9" pos:end="623:11">pos</name> <operator pos:start="623:13" pos:end="623:13">=</operator> <call pos:start="623:15" pos:end="623:38"><name pos:start="623:15" pos:end="623:30">bytestream2_tell</name><argument_list pos:start="623:31" pos:end="623:38">(<argument pos:start="623:32" pos:end="623:37"><expr pos:start="623:32" pos:end="623:37"><operator pos:start="623:32" pos:end="623:32">&amp;</operator><name pos:start="623:33" pos:end="623:37"><name pos:start="623:33" pos:end="623:33">s</name><operator pos:start="623:34" pos:end="623:35">-&gt;</operator><name pos:start="623:36" pos:end="623:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="625:9" pos:end="667:9">for <control pos:start="625:13" pos:end="625:45">(<init pos:start="625:14" pos:end="625:19"><expr pos:start="625:14" pos:end="625:18"><name pos:start="625:14" pos:end="625:14">i</name> <operator pos:start="625:16" pos:end="625:16">=</operator> <literal type="number" pos:start="625:18" pos:end="625:18">0</literal></expr>;</init> <condition pos:start="625:21" pos:end="625:40"><expr pos:start="625:21" pos:end="625:39"><name pos:start="625:21" pos:end="625:21">i</name> <operator pos:start="625:23" pos:end="625:23">&lt;</operator> <name pos:start="625:25" pos:end="625:39"><name pos:start="625:25" pos:end="625:25">s</name><operator pos:start="625:26" pos:end="625:27">-&gt;</operator><name pos:start="625:28" pos:end="625:39">geotag_count</name></name></expr>;</condition> <incr pos:start="625:42" pos:end="625:44"><expr pos:start="625:42" pos:end="625:44"><name pos:start="625:42" pos:end="625:42">i</name><operator pos:start="625:43" pos:end="625:44">++</operator></expr></incr>)</control> <block pos:start="625:47" pos:end="667:9">{<block_content pos:start="627:13" pos:end="665:13">

            <if_stmt pos:start="627:13" pos:end="665:13"><if pos:start="627:13" pos:end="665:13">if <condition pos:start="627:16" pos:end="627:60">(<expr pos:start="627:17" pos:end="627:59"><name pos:start="627:17" pos:end="627:29"><name pos:start="627:17" pos:end="627:17">s</name><operator pos:start="627:18" pos:end="627:19">-&gt;</operator><name pos:start="627:20" pos:end="627:26">geotags</name><index pos:start="627:27" pos:end="627:29">[<expr pos:start="627:28" pos:end="627:28"><name pos:start="627:28" pos:end="627:28">i</name></expr>]</index></name><operator pos:start="627:30" pos:end="627:30">.</operator><name pos:start="627:31" pos:end="627:34">type</name> <operator pos:start="627:36" pos:end="627:37">==</operator> <name pos:start="627:39" pos:end="627:59">TIFF_GEO_ASCII_PARAMS</name></expr>)</condition> <block pos:start="627:62" pos:end="665:13">{<block_content pos:start="629:17" pos:end="663:17">

                <if_stmt pos:start="629:17" pos:end="663:17"><if pos:start="629:17" pos:end="635:17">if <condition pos:start="629:20" pos:end="631:75">(<expr pos:start="629:21" pos:end="631:74"><name pos:start="629:21" pos:end="629:33"><name pos:start="629:21" pos:end="629:21">s</name><operator pos:start="629:22" pos:end="629:23">-&gt;</operator><name pos:start="629:24" pos:end="629:30">geotags</name><index pos:start="629:31" pos:end="629:33">[<expr pos:start="629:32" pos:end="629:32"><name pos:start="629:32" pos:end="629:32">i</name></expr>]</index></name><operator pos:start="629:34" pos:end="629:34">.</operator><name pos:start="629:35" pos:end="629:39">count</name> <operator pos:start="629:41" pos:end="629:42">==</operator> <literal type="number" pos:start="629:44" pos:end="629:44">0</literal>

                    <operator pos:start="631:21" pos:end="631:22">||</operator> <name pos:start="631:24" pos:end="631:36"><name pos:start="631:24" pos:end="631:24">s</name><operator pos:start="631:25" pos:end="631:26">-&gt;</operator><name pos:start="631:27" pos:end="631:33">geotags</name><index pos:start="631:34" pos:end="631:36">[<expr pos:start="631:35" pos:end="631:35"><name pos:start="631:35" pos:end="631:35">i</name></expr>]</index></name><operator pos:start="631:37" pos:end="631:37">.</operator><name pos:start="631:38" pos:end="631:43">offset</name> <operator pos:start="631:45" pos:end="631:45">+</operator>  <name pos:start="631:48" pos:end="631:60"><name pos:start="631:48" pos:end="631:48">s</name><operator pos:start="631:49" pos:end="631:50">-&gt;</operator><name pos:start="631:51" pos:end="631:57">geotags</name><index pos:start="631:58" pos:end="631:60">[<expr pos:start="631:59" pos:end="631:59"><name pos:start="631:59" pos:end="631:59">i</name></expr>]</index></name><operator pos:start="631:61" pos:end="631:61">.</operator><name pos:start="631:62" pos:end="631:66">count</name> <operator pos:start="631:68" pos:end="631:68">&gt;</operator> <name pos:start="631:70" pos:end="631:74">count</name></expr>)</condition> <block pos:start="631:77" pos:end="635:17">{<block_content pos:start="633:21" pos:end="633:100">

                    <expr_stmt pos:start="633:21" pos:end="633:100"><expr pos:start="633:21" pos:end="633:99"><call pos:start="633:21" pos:end="633:99"><name pos:start="633:21" pos:end="633:26">av_log</name><argument_list pos:start="633:27" pos:end="633:99">(<argument pos:start="633:28" pos:end="633:35"><expr pos:start="633:28" pos:end="633:35"><name pos:start="633:28" pos:end="633:35"><name pos:start="633:28" pos:end="633:28">s</name><operator pos:start="633:29" pos:end="633:30">-&gt;</operator><name pos:start="633:31" pos:end="633:35">avctx</name></name></expr></argument>, <argument pos:start="633:38" pos:end="633:51"><expr pos:start="633:38" pos:end="633:51"><name pos:start="633:38" pos:end="633:51">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="633:54" pos:end="633:79"><expr pos:start="633:54" pos:end="633:79"><literal type="string" pos:start="633:54" pos:end="633:79">"Invalid GeoTIFF key %d\n"</literal></expr></argument>, <argument pos:start="633:82" pos:end="633:98"><expr pos:start="633:82" pos:end="633:98"><name pos:start="633:82" pos:end="633:94"><name pos:start="633:82" pos:end="633:82">s</name><operator pos:start="633:83" pos:end="633:84">-&gt;</operator><name pos:start="633:85" pos:end="633:91">geotags</name><index pos:start="633:92" pos:end="633:94">[<expr pos:start="633:93" pos:end="633:93"><name pos:start="633:93" pos:end="633:93">i</name></expr>]</index></name><operator pos:start="633:95" pos:end="633:95">.</operator><name pos:start="633:96" pos:end="633:98">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="635:19" pos:end="663:17">else <block pos:start="635:24" pos:end="663:17">{<block_content pos:start="637:21" pos:end="661:43">

                    <decl_stmt pos:start="637:21" pos:end="637:29"><decl pos:start="637:21" pos:end="637:28"><type pos:start="637:21" pos:end="637:26"><name pos:start="637:21" pos:end="637:24">char</name> <modifier pos:start="637:26" pos:end="637:26">*</modifier></type><name pos:start="637:27" pos:end="637:28">ap</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="641:21" pos:end="641:83"><expr pos:start="641:21" pos:end="641:82"><call pos:start="641:21" pos:end="641:82"><name pos:start="641:21" pos:end="641:36">bytestream2_seek</name><argument_list pos:start="641:37" pos:end="641:82">(<argument pos:start="641:38" pos:end="641:43"><expr pos:start="641:38" pos:end="641:43"><operator pos:start="641:38" pos:end="641:38">&amp;</operator><name pos:start="641:39" pos:end="641:43"><name pos:start="641:39" pos:end="641:39">s</name><operator pos:start="641:40" pos:end="641:41">-&gt;</operator><name pos:start="641:42" pos:end="641:43">gb</name></name></expr></argument>, <argument pos:start="641:46" pos:end="641:71"><expr pos:start="641:46" pos:end="641:71"><name pos:start="641:46" pos:end="641:48">pos</name> <operator pos:start="641:50" pos:end="641:50">+</operator> <name pos:start="641:52" pos:end="641:64"><name pos:start="641:52" pos:end="641:52">s</name><operator pos:start="641:53" pos:end="641:54">-&gt;</operator><name pos:start="641:55" pos:end="641:61">geotags</name><index pos:start="641:62" pos:end="641:64">[<expr pos:start="641:63" pos:end="641:63"><name pos:start="641:63" pos:end="641:63">i</name></expr>]</index></name><operator pos:start="641:65" pos:end="641:65">.</operator><name pos:start="641:66" pos:end="641:71">offset</name></expr></argument>, <argument pos:start="641:74" pos:end="641:81"><expr pos:start="641:74" pos:end="641:81"><name pos:start="641:74" pos:end="641:81">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="643:21" pos:end="645:51"><if pos:start="643:21" pos:end="645:51">if <condition pos:start="643:24" pos:end="643:81">(<expr pos:start="643:25" pos:end="643:80"><call pos:start="643:25" pos:end="643:58"><name pos:start="643:25" pos:end="643:50">bytestream2_get_bytes_left</name><argument_list pos:start="643:51" pos:end="643:58">(<argument pos:start="643:52" pos:end="643:57"><expr pos:start="643:52" pos:end="643:57"><operator pos:start="643:52" pos:end="643:52">&amp;</operator><name pos:start="643:53" pos:end="643:57"><name pos:start="643:53" pos:end="643:53">s</name><operator pos:start="643:54" pos:end="643:55">-&gt;</operator><name pos:start="643:56" pos:end="643:57">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="643:60" pos:end="643:60">&lt;</operator> <name pos:start="643:62" pos:end="643:74"><name pos:start="643:62" pos:end="643:62">s</name><operator pos:start="643:63" pos:end="643:64">-&gt;</operator><name pos:start="643:65" pos:end="643:71">geotags</name><index pos:start="643:72" pos:end="643:74">[<expr pos:start="643:73" pos:end="643:73"><name pos:start="643:73" pos:end="643:73">i</name></expr>]</index></name><operator pos:start="643:75" pos:end="643:75">.</operator><name pos:start="643:76" pos:end="643:80">count</name></expr>)</condition><block type="pseudo" pos:start="645:25" pos:end="645:51"><block_content pos:start="645:25" pos:end="645:51">

                        <return pos:start="645:25" pos:end="645:51">return <expr pos:start="645:32" pos:end="645:50"><name pos:start="645:32" pos:end="645:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="647:21" pos:end="647:56"><expr pos:start="647:21" pos:end="647:55"><name pos:start="647:21" pos:end="647:22">ap</name> <operator pos:start="647:24" pos:end="647:24">=</operator> <call pos:start="647:26" pos:end="647:55"><name pos:start="647:26" pos:end="647:34">av_malloc</name><argument_list pos:start="647:35" pos:end="647:55">(<argument pos:start="647:36" pos:end="647:54"><expr pos:start="647:36" pos:end="647:54"><name pos:start="647:36" pos:end="647:48"><name pos:start="647:36" pos:end="647:36">s</name><operator pos:start="647:37" pos:end="647:38">-&gt;</operator><name pos:start="647:39" pos:end="647:45">geotags</name><index pos:start="647:46" pos:end="647:48">[<expr pos:start="647:47" pos:end="647:47"><name pos:start="647:47" pos:end="647:47">i</name></expr>]</index></name><operator pos:start="647:49" pos:end="647:49">.</operator><name pos:start="647:50" pos:end="647:54">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="649:21" pos:end="655:21"><if pos:start="649:21" pos:end="655:21">if <condition pos:start="649:24" pos:end="649:28">(<expr pos:start="649:25" pos:end="649:27"><operator pos:start="649:25" pos:end="649:25">!</operator><name pos:start="649:26" pos:end="649:27">ap</name></expr>)</condition> <block pos:start="649:30" pos:end="655:21">{<block_content pos:start="651:25" pos:end="653:47">

                        <expr_stmt pos:start="651:25" pos:end="651:94"><expr pos:start="651:25" pos:end="651:93"><call pos:start="651:25" pos:end="651:93"><name pos:start="651:25" pos:end="651:30">av_log</name><argument_list pos:start="651:31" pos:end="651:93">(<argument pos:start="651:32" pos:end="651:39"><expr pos:start="651:32" pos:end="651:39"><name pos:start="651:32" pos:end="651:39"><name pos:start="651:32" pos:end="651:32">s</name><operator pos:start="651:33" pos:end="651:34">-&gt;</operator><name pos:start="651:35" pos:end="651:39">avctx</name></name></expr></argument>, <argument pos:start="651:42" pos:end="651:53"><expr pos:start="651:42" pos:end="651:53"><name pos:start="651:42" pos:end="651:53">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="651:56" pos:end="651:92"><expr pos:start="651:56" pos:end="651:92"><literal type="string" pos:start="651:56" pos:end="651:92">"Error allocating temporary buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <return pos:start="653:25" pos:end="653:47">return <expr pos:start="653:32" pos:end="653:46"><call pos:start="653:32" pos:end="653:46"><name pos:start="653:32" pos:end="653:38">AVERROR</name><argument_list pos:start="653:39" pos:end="653:46">(<argument pos:start="653:40" pos:end="653:45"><expr pos:start="653:40" pos:end="653:45"><name pos:start="653:40" pos:end="653:45">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="657:21" pos:end="657:77"><expr pos:start="657:21" pos:end="657:76"><call pos:start="657:21" pos:end="657:76"><name pos:start="657:21" pos:end="657:43">bytestream2_get_bufferu</name><argument_list pos:start="657:44" pos:end="657:76">(<argument pos:start="657:45" pos:end="657:50"><expr pos:start="657:45" pos:end="657:50"><operator pos:start="657:45" pos:end="657:45">&amp;</operator><name pos:start="657:46" pos:end="657:50"><name pos:start="657:46" pos:end="657:46">s</name><operator pos:start="657:47" pos:end="657:48">-&gt;</operator><name pos:start="657:49" pos:end="657:50">gb</name></name></expr></argument>, <argument pos:start="657:53" pos:end="657:54"><expr pos:start="657:53" pos:end="657:54"><name pos:start="657:53" pos:end="657:54">ap</name></expr></argument>, <argument pos:start="657:57" pos:end="657:75"><expr pos:start="657:57" pos:end="657:75"><name pos:start="657:57" pos:end="657:69"><name pos:start="657:57" pos:end="657:57">s</name><operator pos:start="657:58" pos:end="657:59">-&gt;</operator><name pos:start="657:60" pos:end="657:66">geotags</name><index pos:start="657:67" pos:end="657:69">[<expr pos:start="657:68" pos:end="657:68"><name pos:start="657:68" pos:end="657:68">i</name></expr>]</index></name><operator pos:start="657:70" pos:end="657:70">.</operator><name pos:start="657:71" pos:end="657:75">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="659:21" pos:end="659:55"><expr pos:start="659:21" pos:end="659:54"><name pos:start="659:21" pos:end="659:47"><name pos:start="659:21" pos:end="659:22">ap</name><index pos:start="659:23" pos:end="659:47">[<expr pos:start="659:24" pos:end="659:46"><name pos:start="659:24" pos:end="659:36"><name pos:start="659:24" pos:end="659:24">s</name><operator pos:start="659:25" pos:end="659:26">-&gt;</operator><name pos:start="659:27" pos:end="659:33">geotags</name><index pos:start="659:34" pos:end="659:36">[<expr pos:start="659:35" pos:end="659:35"><name pos:start="659:35" pos:end="659:35">i</name></expr>]</index></name><operator pos:start="659:37" pos:end="659:37">.</operator><name pos:start="659:38" pos:end="659:42">count</name> <operator pos:start="659:44" pos:end="659:44">-</operator> <literal type="number" pos:start="659:46" pos:end="659:46">1</literal></expr>]</index></name> <operator pos:start="659:49" pos:end="659:49">=</operator> <literal type="char" pos:start="659:51" pos:end="659:54">'\0'</literal></expr>;</expr_stmt> <comment type="line" pos:start="659:57" pos:end="659:97">//replace the "|" delimiter with a 0 byte</comment>

                    <expr_stmt pos:start="661:21" pos:end="661:43"><expr pos:start="661:21" pos:end="661:42"><name pos:start="661:21" pos:end="661:33"><name pos:start="661:21" pos:end="661:21">s</name><operator pos:start="661:22" pos:end="661:23">-&gt;</operator><name pos:start="661:24" pos:end="661:30">geotags</name><index pos:start="661:31" pos:end="661:33">[<expr pos:start="661:32" pos:end="661:32"><name pos:start="661:32" pos:end="661:32">i</name></expr>]</index></name><operator pos:start="661:34" pos:end="661:34">.</operator><name pos:start="661:35" pos:end="661:37">val</name> <operator pos:start="661:39" pos:end="661:39">=</operator> <name pos:start="661:41" pos:end="661:42">ap</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="669:9" pos:end="669:14">break;</break>

    <case pos:start="671:5" pos:end="671:21">case <expr pos:start="671:10" pos:end="671:20"><name pos:start="671:10" pos:end="671:20">TIFF_ARTIST</name></expr>:</case>

        <expr_stmt pos:start="673:9" pos:end="673:44"><expr pos:start="673:9" pos:end="673:43"><call pos:start="673:9" pos:end="673:43"><name pos:start="673:9" pos:end="673:20">ADD_METADATA</name><argument_list pos:start="673:21" pos:end="673:43">(<argument pos:start="673:22" pos:end="673:26"><expr pos:start="673:22" pos:end="673:26"><name pos:start="673:22" pos:end="673:26">count</name></expr></argument>, <argument pos:start="673:29" pos:end="673:36"><expr pos:start="673:29" pos:end="673:36"><literal type="string" pos:start="673:29" pos:end="673:36">"artist"</literal></expr></argument>, <argument pos:start="673:39" pos:end="673:42"><expr pos:start="673:39" pos:end="673:42"><name pos:start="673:39" pos:end="673:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="675:9" pos:end="675:14">break;</break>

    <case pos:start="677:5" pos:end="677:24">case <expr pos:start="677:10" pos:end="677:23"><name pos:start="677:10" pos:end="677:23">TIFF_COPYRIGHT</name></expr>:</case>

        <expr_stmt pos:start="679:9" pos:end="679:47"><expr pos:start="679:9" pos:end="679:46"><call pos:start="679:9" pos:end="679:46"><name pos:start="679:9" pos:end="679:20">ADD_METADATA</name><argument_list pos:start="679:21" pos:end="679:46">(<argument pos:start="679:22" pos:end="679:26"><expr pos:start="679:22" pos:end="679:26"><name pos:start="679:22" pos:end="679:26">count</name></expr></argument>, <argument pos:start="679:29" pos:end="679:39"><expr pos:start="679:29" pos:end="679:39"><literal type="string" pos:start="679:29" pos:end="679:39">"copyright"</literal></expr></argument>, <argument pos:start="679:42" pos:end="679:45"><expr pos:start="679:42" pos:end="679:45"><name pos:start="679:42" pos:end="679:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="681:9" pos:end="681:14">break;</break>

    <case pos:start="683:5" pos:end="683:19">case <expr pos:start="683:10" pos:end="683:18"><name pos:start="683:10" pos:end="683:18">TIFF_DATE</name></expr>:</case>

        <expr_stmt pos:start="685:9" pos:end="685:42"><expr pos:start="685:9" pos:end="685:41"><call pos:start="685:9" pos:end="685:41"><name pos:start="685:9" pos:end="685:20">ADD_METADATA</name><argument_list pos:start="685:21" pos:end="685:41">(<argument pos:start="685:22" pos:end="685:26"><expr pos:start="685:22" pos:end="685:26"><name pos:start="685:22" pos:end="685:26">count</name></expr></argument>, <argument pos:start="685:29" pos:end="685:34"><expr pos:start="685:29" pos:end="685:34"><literal type="string" pos:start="685:29" pos:end="685:34">"date"</literal></expr></argument>, <argument pos:start="685:37" pos:end="685:40"><expr pos:start="685:37" pos:end="685:40"><name pos:start="685:37" pos:end="685:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="687:9" pos:end="687:14">break;</break>

    <case pos:start="689:5" pos:end="689:28">case <expr pos:start="689:10" pos:end="689:27"><name pos:start="689:10" pos:end="689:27">TIFF_DOCUMENT_NAME</name></expr>:</case>

        <expr_stmt pos:start="691:9" pos:end="691:51"><expr pos:start="691:9" pos:end="691:50"><call pos:start="691:9" pos:end="691:50"><name pos:start="691:9" pos:end="691:20">ADD_METADATA</name><argument_list pos:start="691:21" pos:end="691:50">(<argument pos:start="691:22" pos:end="691:26"><expr pos:start="691:22" pos:end="691:26"><name pos:start="691:22" pos:end="691:26">count</name></expr></argument>, <argument pos:start="691:29" pos:end="691:43"><expr pos:start="691:29" pos:end="691:43"><literal type="string" pos:start="691:29" pos:end="691:43">"document_name"</literal></expr></argument>, <argument pos:start="691:46" pos:end="691:49"><expr pos:start="691:46" pos:end="691:49"><name pos:start="691:46" pos:end="691:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="693:9" pos:end="693:14">break;</break>

    <case pos:start="695:5" pos:end="695:28">case <expr pos:start="695:10" pos:end="695:27"><name pos:start="695:10" pos:end="695:27">TIFF_HOST_COMPUTER</name></expr>:</case>

        <expr_stmt pos:start="697:9" pos:end="697:46"><expr pos:start="697:9" pos:end="697:45"><call pos:start="697:9" pos:end="697:45"><name pos:start="697:9" pos:end="697:20">ADD_METADATA</name><argument_list pos:start="697:21" pos:end="697:45">(<argument pos:start="697:22" pos:end="697:26"><expr pos:start="697:22" pos:end="697:26"><name pos:start="697:22" pos:end="697:26">count</name></expr></argument>, <argument pos:start="697:29" pos:end="697:38"><expr pos:start="697:29" pos:end="697:38"><literal type="string" pos:start="697:29" pos:end="697:38">"computer"</literal></expr></argument>, <argument pos:start="697:41" pos:end="697:44"><expr pos:start="697:41" pos:end="697:44"><name pos:start="697:41" pos:end="697:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="699:9" pos:end="699:14">break;</break>

    <case pos:start="701:5" pos:end="701:32">case <expr pos:start="701:10" pos:end="701:31"><name pos:start="701:10" pos:end="701:31">TIFF_IMAGE_DESCRIPTION</name></expr>:</case>

        <expr_stmt pos:start="703:9" pos:end="703:49"><expr pos:start="703:9" pos:end="703:48"><call pos:start="703:9" pos:end="703:48"><name pos:start="703:9" pos:end="703:20">ADD_METADATA</name><argument_list pos:start="703:21" pos:end="703:48">(<argument pos:start="703:22" pos:end="703:26"><expr pos:start="703:22" pos:end="703:26"><name pos:start="703:22" pos:end="703:26">count</name></expr></argument>, <argument pos:start="703:29" pos:end="703:41"><expr pos:start="703:29" pos:end="703:41"><literal type="string" pos:start="703:29" pos:end="703:41">"description"</literal></expr></argument>, <argument pos:start="703:44" pos:end="703:47"><expr pos:start="703:44" pos:end="703:47"><name pos:start="703:44" pos:end="703:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="705:9" pos:end="705:14">break;</break>

    <case pos:start="707:5" pos:end="707:19">case <expr pos:start="707:10" pos:end="707:18"><name pos:start="707:10" pos:end="707:18">TIFF_MAKE</name></expr>:</case>

        <expr_stmt pos:start="709:9" pos:end="709:42"><expr pos:start="709:9" pos:end="709:41"><call pos:start="709:9" pos:end="709:41"><name pos:start="709:9" pos:end="709:20">ADD_METADATA</name><argument_list pos:start="709:21" pos:end="709:41">(<argument pos:start="709:22" pos:end="709:26"><expr pos:start="709:22" pos:end="709:26"><name pos:start="709:22" pos:end="709:26">count</name></expr></argument>, <argument pos:start="709:29" pos:end="709:34"><expr pos:start="709:29" pos:end="709:34"><literal type="string" pos:start="709:29" pos:end="709:34">"make"</literal></expr></argument>, <argument pos:start="709:37" pos:end="709:40"><expr pos:start="709:37" pos:end="709:40"><name pos:start="709:37" pos:end="709:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="711:9" pos:end="711:14">break;</break>

    <case pos:start="713:5" pos:end="713:20">case <expr pos:start="713:10" pos:end="713:19"><name pos:start="713:10" pos:end="713:19">TIFF_MODEL</name></expr>:</case>

        <expr_stmt pos:start="715:9" pos:end="715:43"><expr pos:start="715:9" pos:end="715:42"><call pos:start="715:9" pos:end="715:42"><name pos:start="715:9" pos:end="715:20">ADD_METADATA</name><argument_list pos:start="715:21" pos:end="715:42">(<argument pos:start="715:22" pos:end="715:26"><expr pos:start="715:22" pos:end="715:26"><name pos:start="715:22" pos:end="715:26">count</name></expr></argument>, <argument pos:start="715:29" pos:end="715:35"><expr pos:start="715:29" pos:end="715:35"><literal type="string" pos:start="715:29" pos:end="715:35">"model"</literal></expr></argument>, <argument pos:start="715:38" pos:end="715:41"><expr pos:start="715:38" pos:end="715:41"><name pos:start="715:38" pos:end="715:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="717:9" pos:end="717:14">break;</break>

    <case pos:start="719:5" pos:end="719:24">case <expr pos:start="719:10" pos:end="719:23"><name pos:start="719:10" pos:end="719:23">TIFF_PAGE_NAME</name></expr>:</case>

        <expr_stmt pos:start="721:9" pos:end="721:47"><expr pos:start="721:9" pos:end="721:46"><call pos:start="721:9" pos:end="721:46"><name pos:start="721:9" pos:end="721:20">ADD_METADATA</name><argument_list pos:start="721:21" pos:end="721:46">(<argument pos:start="721:22" pos:end="721:26"><expr pos:start="721:22" pos:end="721:26"><name pos:start="721:22" pos:end="721:26">count</name></expr></argument>, <argument pos:start="721:29" pos:end="721:39"><expr pos:start="721:29" pos:end="721:39"><literal type="string" pos:start="721:29" pos:end="721:39">"page_name"</literal></expr></argument>, <argument pos:start="721:42" pos:end="721:45"><expr pos:start="721:42" pos:end="721:45"><name pos:start="721:42" pos:end="721:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="723:9" pos:end="723:14">break;</break>

    <case pos:start="725:5" pos:end="725:26">case <expr pos:start="725:10" pos:end="725:25"><name pos:start="725:10" pos:end="725:25">TIFF_PAGE_NUMBER</name></expr>:</case>

        <expr_stmt pos:start="727:9" pos:end="727:50"><expr pos:start="727:9" pos:end="727:49"><call pos:start="727:9" pos:end="727:49"><name pos:start="727:9" pos:end="727:20">ADD_METADATA</name><argument_list pos:start="727:21" pos:end="727:49">(<argument pos:start="727:22" pos:end="727:26"><expr pos:start="727:22" pos:end="727:26"><name pos:start="727:22" pos:end="727:26">count</name></expr></argument>, <argument pos:start="727:29" pos:end="727:41"><expr pos:start="727:29" pos:end="727:41"><literal type="string" pos:start="727:29" pos:end="727:41">"page_number"</literal></expr></argument>, <argument pos:start="727:44" pos:end="727:48"><expr pos:start="727:44" pos:end="727:48"><literal type="string" pos:start="727:44" pos:end="727:48">" / "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="729:9" pos:end="729:14">break;</break>

    <case pos:start="731:5" pos:end="731:28">case <expr pos:start="731:10" pos:end="731:27"><name pos:start="731:10" pos:end="731:27">TIFF_SOFTWARE_NAME</name></expr>:</case>

        <expr_stmt pos:start="733:9" pos:end="733:46"><expr pos:start="733:9" pos:end="733:45"><call pos:start="733:9" pos:end="733:45"><name pos:start="733:9" pos:end="733:20">ADD_METADATA</name><argument_list pos:start="733:21" pos:end="733:45">(<argument pos:start="733:22" pos:end="733:26"><expr pos:start="733:22" pos:end="733:26"><name pos:start="733:22" pos:end="733:26">count</name></expr></argument>, <argument pos:start="733:29" pos:end="733:38"><expr pos:start="733:29" pos:end="733:38"><literal type="string" pos:start="733:29" pos:end="733:38">"software"</literal></expr></argument>, <argument pos:start="733:41" pos:end="733:44"><expr pos:start="733:41" pos:end="733:44"><name pos:start="733:41" pos:end="733:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="735:9" pos:end="735:14">break;</break>

    <default pos:start="737:5" pos:end="737:12">default:</default>

        <expr_stmt pos:start="739:9" pos:end="741:25"><expr pos:start="739:9" pos:end="741:24"><call pos:start="739:9" pos:end="741:24"><name pos:start="739:9" pos:end="739:14">av_log</name><argument_list pos:start="739:15" pos:end="741:24">(<argument pos:start="739:16" pos:end="739:23"><expr pos:start="739:16" pos:end="739:23"><name pos:start="739:16" pos:end="739:23"><name pos:start="739:16" pos:end="739:16">s</name><operator pos:start="739:17" pos:end="739:18">-&gt;</operator><name pos:start="739:19" pos:end="739:23">avctx</name></name></expr></argument>, <argument pos:start="739:26" pos:end="739:37"><expr pos:start="739:26" pos:end="739:37"><name pos:start="739:26" pos:end="739:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="739:40" pos:end="739:78"><expr pos:start="739:40" pos:end="739:78"><literal type="string" pos:start="739:40" pos:end="739:78">"Unknown or unsupported tag %d/0X%0X\n"</literal></expr></argument>,

               <argument pos:start="741:16" pos:end="741:18"><expr pos:start="741:16" pos:end="741:18"><name pos:start="741:16" pos:end="741:18">tag</name></expr></argument>, <argument pos:start="741:21" pos:end="741:23"><expr pos:start="741:21" pos:end="741:23"><name pos:start="741:21" pos:end="741:23">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="745:5" pos:end="745:46"><expr pos:start="745:5" pos:end="745:45"><call pos:start="745:5" pos:end="745:45"><name pos:start="745:5" pos:end="745:20">bytestream2_seek</name><argument_list pos:start="745:21" pos:end="745:45">(<argument pos:start="745:22" pos:end="745:27"><expr pos:start="745:22" pos:end="745:27"><operator pos:start="745:22" pos:end="745:22">&amp;</operator><name pos:start="745:23" pos:end="745:27"><name pos:start="745:23" pos:end="745:23">s</name><operator pos:start="745:24" pos:end="745:25">-&gt;</operator><name pos:start="745:26" pos:end="745:27">gb</name></name></expr></argument>, <argument pos:start="745:30" pos:end="745:34"><expr pos:start="745:30" pos:end="745:34"><name pos:start="745:30" pos:end="745:34">start</name></expr></argument>, <argument pos:start="745:37" pos:end="745:44"><expr pos:start="745:37" pos:end="745:44"><name pos:start="745:37" pos:end="745:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="747:5" pos:end="747:13">return <expr pos:start="747:12" pos:end="747:12"><literal type="number" pos:start="747:12" pos:end="747:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
