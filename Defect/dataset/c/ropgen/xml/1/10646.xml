<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10646.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">pci_read_devaddr</name><parameter_list pos:start="1:28" pos:end="3:55">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:35">Monitor</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">mon</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:58"><decl pos:start="1:43" pos:end="1:58"><type pos:start="1:43" pos:end="1:58"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">busp</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:54"><decl pos:start="3:40" pos:end="3:54"><type pos:start="3:40" pos:end="3:54"><name pos:start="3:40" pos:end="3:47">unsigned</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:54">slotp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:13">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">dom</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:26">/* strip legacy tag */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:38"><name pos:start="13:10" pos:end="13:16">strncmp</name><argument_list pos:start="13:17" pos:end="13:38">(<argument pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">addr</name></expr></argument>, <argument pos:start="13:24" pos:end="13:34"><expr pos:start="13:24" pos:end="13:34"><literal type="string" pos:start="13:24" pos:end="13:34">"pci_addr="</literal></expr></argument>, <argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">9</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:41" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:18">

        <expr_stmt pos:start="15:9" pos:end="15:18"><expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:12">addr</name> <operator pos:start="15:14" pos:end="15:15">+=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">9</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><call pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:25">pci_parse_devaddr</name><argument_list pos:start="19:26" pos:end="19:56">(<argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">addr</name></expr></argument>, <argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><operator pos:start="19:33" pos:end="19:33">&amp;</operator><name pos:start="19:34" pos:end="19:36">dom</name></expr></argument>, <argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">busp</name></expr></argument>, <argument pos:start="19:45" pos:end="19:49"><expr pos:start="19:45" pos:end="19:49"><name pos:start="19:45" pos:end="19:49">slotp</name></expr></argument>, <argument pos:start="19:52" pos:end="19:55"><expr pos:start="19:52" pos:end="19:55"><name pos:start="19:52" pos:end="19:55">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:59" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:53"><expr pos:start="21:9" pos:end="21:52"><call pos:start="21:9" pos:end="21:52"><name pos:start="21:9" pos:end="21:22">monitor_printf</name><argument_list pos:start="21:23" pos:end="21:52">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">mon</name></expr></argument>, <argument pos:start="21:29" pos:end="21:51"><expr pos:start="21:29" pos:end="21:51"><literal type="string" pos:start="21:29" pos:end="21:51">"Invalid pci address\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">dom</name> <operator pos:start="27:13" pos:end="27:14">!=</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>)</condition> <block pos:start="27:19" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:84"><expr pos:start="29:9" pos:end="29:83"><call pos:start="29:9" pos:end="29:83"><name pos:start="29:9" pos:end="29:22">monitor_printf</name><argument_list pos:start="29:23" pos:end="29:83">(<argument pos:start="29:24" pos:end="29:26"><expr pos:start="29:24" pos:end="29:26"><name pos:start="29:24" pos:end="29:26">mon</name></expr></argument>, <argument pos:start="29:29" pos:end="29:82"><expr pos:start="29:29" pos:end="29:82"><literal type="string" pos:start="29:29" pos:end="29:82">"Multiple PCI domains not supported, use device_add\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
