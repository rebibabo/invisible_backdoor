<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19896.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:33">virtio_net_receive</name><parameter_list pos:start="1:34" pos:end="1:86">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:48">NetClientState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">nc</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:72"><decl pos:start="1:55" pos:end="1:72"><type pos:start="1:55" pos:end="1:72"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">buf</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:85"><decl pos:start="1:75" pos:end="1:85"><type pos:start="1:75" pos:end="1:85"><name pos:start="1:75" pos:end="1:80">size_t</name></type> <name pos:start="1:82" pos:end="1:85">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:16">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">VirtIONet</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">n</name> <init pos:start="5:18" pos:end="5:42">= <expr pos:start="5:20" pos:end="5:42"><call pos:start="5:20" pos:end="5:42"><name pos:start="5:20" pos:end="5:38">qemu_get_nic_opaque</name><argument_list pos:start="5:39" pos:end="5:42">(<argument pos:start="5:40" pos:end="5:41"><expr pos:start="5:40" pos:end="5:41"><name pos:start="5:40" pos:end="5:41">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIONetQueue</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">q</name> <init pos:start="7:23" pos:end="7:51">= <expr pos:start="7:25" pos:end="7:51"><call pos:start="7:25" pos:end="7:51"><name pos:start="7:25" pos:end="7:47">virtio_net_get_subqueue</name><argument_list pos:start="7:48" pos:end="7:51">(<argument pos:start="7:49" pos:end="7:50"><expr pos:start="7:49" pos:end="7:50"><name pos:start="7:49" pos:end="7:50">nc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">VirtIODevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">vdev</name> <init pos:start="9:24" pos:end="9:41">= <expr pos:start="9:26" pos:end="9:41"><call pos:start="9:26" pos:end="9:41"><name pos:start="9:26" pos:end="9:38">VIRTIO_DEVICE</name><argument_list pos:start="9:39" pos:end="9:41">(<argument pos:start="9:40" pos:end="9:40"><expr pos:start="9:40" pos:end="9:40"><name pos:start="9:40" pos:end="9:40">n</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:16">iovec</name></name></type> <name pos:start="11:18" pos:end="11:44"><name pos:start="11:18" pos:end="11:24">mhdr_sg</name><index pos:start="11:25" pos:end="11:44">[<expr pos:start="11:26" pos:end="11:43"><name pos:start="11:26" pos:end="11:43">VIRTQUEUE_MAX_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:35">virtio_net_hdr_mrg_rxbuf</name></name></type> <name pos:start="13:37" pos:end="13:40">mhdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">unsigned</name></type> <name pos:start="15:14" pos:end="15:21">mhdr_cnt</name> <init pos:start="15:23" pos:end="15:25">= <expr pos:start="15:25" pos:end="15:25"><literal type="number" pos:start="15:25" pos:end="15:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">size_t</name></type> <name pos:start="17:12" pos:end="17:17">offset</name></decl>, <decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:20" pos:end="17:20">i</name></decl>, <decl pos:start="17:23" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:10"/><name pos:start="17:23" pos:end="17:34">guest_offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:35"><name pos:start="21:10" pos:end="21:31">virtio_net_can_receive</name><argument_list pos:start="21:32" pos:end="21:35">(<argument pos:start="21:33" pos:end="21:34"><expr pos:start="21:33" pos:end="21:34"><name pos:start="21:33" pos:end="21:34">nc</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:61">/* hdr_len refers to the header we supply to the guest */</comment>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:78">(<expr pos:start="31:9" pos:end="31:77"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:77"><name pos:start="31:10" pos:end="31:31">virtio_net_has_buffers</name><argument_list pos:start="31:32" pos:end="31:77">(<argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><name pos:start="31:33" pos:end="31:33">q</name></expr></argument>, <argument pos:start="31:36" pos:end="31:76"><expr pos:start="31:36" pos:end="31:76"><name pos:start="31:36" pos:end="31:39">size</name> <operator pos:start="31:41" pos:end="31:41">+</operator> <name pos:start="31:43" pos:end="31:58"><name pos:start="31:43" pos:end="31:43">n</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:58">guest_hdr_len</name></name> <operator pos:start="31:60" pos:end="31:60">-</operator> <name pos:start="31:62" pos:end="31:76"><name pos:start="31:62" pos:end="31:62">n</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:76">host_hdr_len</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:80" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:20"><if pos:start="39:5" pos:end="41:20">if <condition pos:start="39:8" pos:end="39:38">(<expr pos:start="39:9" pos:end="39:37"><operator pos:start="39:9" pos:end="39:9">!</operator><call pos:start="39:10" pos:end="39:37"><name pos:start="39:10" pos:end="39:23">receive_filter</name><argument_list pos:start="39:24" pos:end="39:37">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">n</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">buf</name></expr></argument>, <argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">size</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:20"><block_content pos:start="41:9" pos:end="41:20">

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">size</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:19"><expr pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:10">offset</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:14">i</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>;</expr_stmt>



    <while pos:start="49:5" pos:end="175:5">while <condition pos:start="49:11" pos:end="49:25">(<expr pos:start="49:12" pos:end="49:24"><name pos:start="49:12" pos:end="49:17">offset</name> <operator pos:start="49:19" pos:end="49:19">&lt;</operator> <name pos:start="49:21" pos:end="49:24">size</name></expr>)</condition> <block pos:start="49:27" pos:end="175:5">{<block_content pos:start="51:9" pos:end="173:52">

        <decl_stmt pos:start="51:9" pos:end="51:30"><decl pos:start="51:9" pos:end="51:29"><type pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:24">VirtQueueElement</name></type> <name pos:start="51:26" pos:end="51:29">elem</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:23"><decl pos:start="53:9" pos:end="53:15"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:15">len</name></decl>, <decl pos:start="53:18" pos:end="53:22"><type ref="prev" pos:start="53:9" pos:end="53:11"/><name pos:start="53:18" pos:end="53:22">total</name></decl>;</decl_stmt>

        <decl_stmt pos:start="55:9" pos:end="55:44"><decl pos:start="55:9" pos:end="55:43"><type pos:start="55:9" pos:end="55:28"><specifier pos:start="55:9" pos:end="55:13">const</specifier> <name pos:start="55:15" pos:end="55:26"><name pos:start="55:15" pos:end="55:20">struct</name> <name pos:start="55:22" pos:end="55:26">iovec</name></name> <modifier pos:start="55:28" pos:end="55:28">*</modifier></type><name pos:start="55:29" pos:end="55:30">sg</name> <init pos:start="55:32" pos:end="55:43">= <expr pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:43"><name pos:start="55:34" pos:end="55:37">elem</name><operator pos:start="55:38" pos:end="55:38">.</operator><name pos:start="55:39" pos:end="55:43">in_sg</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:13">total</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <literal type="number" pos:start="59:17" pos:end="59:17">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="85:9"><if pos:start="63:9" pos:end="85:9">if <condition pos:start="63:12" pos:end="63:48">(<expr pos:start="63:13" pos:end="63:47"><call pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:25">virtqueue_pop</name><argument_list pos:start="63:26" pos:end="63:42">(<argument pos:start="63:27" pos:end="63:34"><expr pos:start="63:27" pos:end="63:34"><name pos:start="63:27" pos:end="63:34"><name pos:start="63:27" pos:end="63:27">q</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:34">rx_vq</name></name></expr></argument>, <argument pos:start="63:37" pos:end="63:41"><expr pos:start="63:37" pos:end="63:41"><operator pos:start="63:37" pos:end="63:37">&amp;</operator><name pos:start="63:38" pos:end="63:41">elem</name></expr></argument>)</argument_list></call> <operator pos:start="63:44" pos:end="63:45">==</operator> <literal type="number" pos:start="63:47" pos:end="63:47">0</literal></expr>)</condition> <block pos:start="63:50" pos:end="85:9">{<block_content pos:start="65:13" pos:end="83:20">

            <if_stmt pos:start="65:13" pos:end="67:26"><if pos:start="65:13" pos:end="67:26">if <condition pos:start="65:16" pos:end="65:23">(<expr pos:start="65:17" pos:end="65:22"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:26"><block_content pos:start="67:17" pos:end="67:26">

                <return pos:start="67:17" pos:end="67:26">return <expr pos:start="67:24" pos:end="67:25"><operator pos:start="67:24" pos:end="67:24">-</operator><literal type="number" pos:start="67:25" pos:end="67:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="81:47"><expr pos:start="69:13" pos:end="81:46"><call pos:start="69:13" pos:end="81:46"><name pos:start="69:13" pos:end="69:24">error_report</name><argument_list pos:start="69:25" pos:end="81:46">(<argument pos:start="69:26" pos:end="75:52"><expr pos:start="69:26" pos:end="75:52"><literal type="string" pos:start="69:26" pos:end="69:62">"virtio-net unexpected empty queue: "</literal>

                         <literal type="string" pos:start="71:26" pos:end="71:68">"i %zd mergeable %d offset %zd, size %zd, "</literal>

                         <literal type="string" pos:start="73:26" pos:end="73:63">"guest hdr len %zd, host hdr len %zd "</literal>

                         <literal type="string" pos:start="75:26" pos:end="75:45">"guest features 0x%"</literal> <name pos:start="75:47" pos:end="75:52">PRIx64</name></expr></argument>,

                         <argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><name pos:start="77:26" pos:end="77:26">i</name></expr></argument>, <argument pos:start="77:29" pos:end="77:48"><expr pos:start="77:29" pos:end="77:48"><name pos:start="77:29" pos:end="77:48"><name pos:start="77:29" pos:end="77:29">n</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:48">mergeable_rx_bufs</name></name></expr></argument>, <argument pos:start="77:51" pos:end="77:56"><expr pos:start="77:51" pos:end="77:56"><name pos:start="77:51" pos:end="77:56">offset</name></expr></argument>, <argument pos:start="77:59" pos:end="77:62"><expr pos:start="77:59" pos:end="77:62"><name pos:start="77:59" pos:end="77:62">size</name></expr></argument>,

                         <argument pos:start="79:26" pos:end="79:41"><expr pos:start="79:26" pos:end="79:41"><name pos:start="79:26" pos:end="79:41"><name pos:start="79:26" pos:end="79:26">n</name><operator pos:start="79:27" pos:end="79:28">-&gt;</operator><name pos:start="79:29" pos:end="79:41">guest_hdr_len</name></name></expr></argument>, <argument pos:start="79:44" pos:end="79:58"><expr pos:start="79:44" pos:end="79:58"><name pos:start="79:44" pos:end="79:58"><name pos:start="79:44" pos:end="79:44">n</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:58">host_hdr_len</name></name></expr></argument>,

                         <argument pos:start="81:26" pos:end="81:45"><expr pos:start="81:26" pos:end="81:45"><name pos:start="81:26" pos:end="81:45"><name pos:start="81:26" pos:end="81:29">vdev</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:45">guest_features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:20"><expr pos:start="83:13" pos:end="83:19"><call pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:16">exit</name><argument_list pos:start="83:17" pos:end="83:19">(<argument pos:start="83:18" pos:end="83:18"><expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:28">(<expr pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:23"><name pos:start="89:13" pos:end="89:16">elem</name><operator pos:start="89:17" pos:end="89:17">.</operator><name pos:start="89:18" pos:end="89:23">in_num</name></name> <operator pos:start="89:25" pos:end="89:25">&lt;</operator> <literal type="number" pos:start="89:27" pos:end="89:27">1</literal></expr>)</condition> <block pos:start="89:30" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:20">

            <expr_stmt pos:start="91:13" pos:end="91:76"><expr pos:start="91:13" pos:end="91:75"><call pos:start="91:13" pos:end="91:75"><name pos:start="91:13" pos:end="91:24">error_report</name><argument_list pos:start="91:25" pos:end="91:75">(<argument pos:start="91:26" pos:end="91:74"><expr pos:start="91:26" pos:end="91:74"><literal type="string" pos:start="91:26" pos:end="91:74">"virtio-net receive queue contains no in buffers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:20"><expr pos:start="93:13" pos:end="93:19"><call pos:start="93:13" pos:end="93:19"><name pos:start="93:13" pos:end="93:16">exit</name><argument_list pos:start="93:17" pos:end="93:19">(<argument pos:start="93:18" pos:end="93:18"><expr pos:start="93:18" pos:end="93:18"><literal type="number" pos:start="93:18" pos:end="93:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="129:9"><if pos:start="99:9" pos:end="125:9">if <condition pos:start="99:12" pos:end="99:19">(<expr pos:start="99:13" pos:end="99:18"><name pos:start="99:13" pos:end="99:13">i</name> <operator pos:start="99:15" pos:end="99:16">==</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>)</condition> <block pos:start="99:21" pos:end="125:9">{<block_content pos:start="101:13" pos:end="123:44">

            <expr_stmt pos:start="101:13" pos:end="101:32"><expr pos:start="101:13" pos:end="101:31"><call pos:start="101:13" pos:end="101:31"><name pos:start="101:13" pos:end="101:18">assert</name><argument_list pos:start="101:19" pos:end="101:31">(<argument pos:start="101:20" pos:end="101:30"><expr pos:start="101:20" pos:end="101:30"><name pos:start="101:20" pos:end="101:25">offset</name> <operator pos:start="101:27" pos:end="101:28">==</operator> <literal type="number" pos:start="101:30" pos:end="101:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="113:13"><if pos:start="103:13" pos:end="113:13">if <condition pos:start="103:16" pos:end="103:37">(<expr pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:17">n</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:36">mergeable_rx_bufs</name></name></expr>)</condition> <block pos:start="103:39" pos:end="113:13">{<block_content pos:start="105:17" pos:end="111:62">

                <expr_stmt pos:start="105:17" pos:end="111:62"><expr pos:start="105:17" pos:end="111:61"><name pos:start="105:17" pos:end="105:24">mhdr_cnt</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="111:61"><name pos:start="105:28" pos:end="105:35">iov_copy</name><argument_list pos:start="105:36" pos:end="111:61">(<argument pos:start="105:37" pos:end="105:43"><expr pos:start="105:37" pos:end="105:43"><name pos:start="105:37" pos:end="105:43">mhdr_sg</name></expr></argument>, <argument pos:start="105:46" pos:end="105:64"><expr pos:start="105:46" pos:end="105:64"><call pos:start="105:46" pos:end="105:64"><name pos:start="105:46" pos:end="105:55">ARRAY_SIZE</name><argument_list pos:start="105:56" pos:end="105:64">(<argument pos:start="105:57" pos:end="105:63"><expr pos:start="105:57" pos:end="105:63"><name pos:start="105:57" pos:end="105:63">mhdr_sg</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">sg</name></expr></argument>, <argument pos:start="107:41" pos:end="107:51"><expr pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:51"><name pos:start="107:41" pos:end="107:44">elem</name><operator pos:start="107:45" pos:end="107:45">.</operator><name pos:start="107:46" pos:end="107:51">in_num</name></name></expr></argument>,

                                    <argument pos:start="109:37" pos:end="109:71"><expr pos:start="109:37" pos:end="109:71"><call pos:start="109:37" pos:end="109:71"><name pos:start="109:37" pos:end="109:44">offsetof</name><argument_list pos:start="109:45" pos:end="109:71">(<argument pos:start="109:46" pos:end="109:57"><expr pos:start="109:46" pos:end="109:57"><call pos:start="109:46" pos:end="109:57"><name pos:start="109:46" pos:end="109:51">typeof</name><argument_list pos:start="109:52" pos:end="109:57">(<argument pos:start="109:53" pos:end="109:56"><expr pos:start="109:53" pos:end="109:56"><name pos:start="109:53" pos:end="109:56">mhdr</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:60" pos:end="109:70"><expr pos:start="109:60" pos:end="109:70"><name pos:start="109:60" pos:end="109:70">num_buffers</name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="111:37" pos:end="111:60"><expr pos:start="111:37" pos:end="111:60"><sizeof pos:start="111:37" pos:end="111:60">sizeof<argument_list pos:start="111:43" pos:end="111:60">(<argument pos:start="111:44" pos:end="111:59"><expr pos:start="111:44" pos:end="111:59"><name pos:start="111:44" pos:end="111:59"><name pos:start="111:44" pos:end="111:47">mhdr</name><operator pos:start="111:48" pos:end="111:48">.</operator><name pos:start="111:49" pos:end="111:59">num_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:58"><expr pos:start="117:13" pos:end="117:57"><call pos:start="117:13" pos:end="117:57"><name pos:start="117:13" pos:end="117:26">receive_header</name><argument_list pos:start="117:27" pos:end="117:57">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">n</name></expr></argument>, <argument pos:start="117:31" pos:end="117:32"><expr pos:start="117:31" pos:end="117:32"><name pos:start="117:31" pos:end="117:32">sg</name></expr></argument>, <argument pos:start="117:35" pos:end="117:45"><expr pos:start="117:35" pos:end="117:45"><name pos:start="117:35" pos:end="117:45"><name pos:start="117:35" pos:end="117:38">elem</name><operator pos:start="117:39" pos:end="117:39">.</operator><name pos:start="117:40" pos:end="117:45">in_num</name></name></expr></argument>, <argument pos:start="117:48" pos:end="117:50"><expr pos:start="117:48" pos:end="117:50"><name pos:start="117:48" pos:end="117:50">buf</name></expr></argument>, <argument pos:start="117:53" pos:end="117:56"><expr pos:start="117:53" pos:end="117:56"><name pos:start="117:53" pos:end="117:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:37"><expr pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:18">offset</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:36"><name pos:start="119:22" pos:end="119:22">n</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:36">host_hdr_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:38"><expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:17">total</name> <operator pos:start="121:19" pos:end="121:20">+=</operator> <name pos:start="121:22" pos:end="121:37"><name pos:start="121:22" pos:end="121:22">n</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:37">guest_hdr_len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:44"><expr pos:start="123:13" pos:end="123:43"><name pos:start="123:13" pos:end="123:24">guest_offset</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:43"><name pos:start="123:28" pos:end="123:28">n</name><operator pos:start="123:29" pos:end="123:30">-&gt;</operator><name pos:start="123:31" pos:end="123:43">guest_hdr_len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="129:9">else <block pos:start="125:16" pos:end="129:9">{<block_content pos:start="127:13" pos:end="127:29">

            <expr_stmt pos:start="127:13" pos:end="127:29"><expr pos:start="127:13" pos:end="127:28"><name pos:start="127:13" pos:end="127:24">guest_offset</name> <operator pos:start="127:26" pos:end="127:26">=</operator> <literal type="number" pos:start="127:28" pos:end="127:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <comment type="block" pos:start="133:9" pos:end="133:34">/* copy in packet.  ugh */</comment>

        <expr_stmt pos:start="135:9" pos:end="137:56"><expr pos:start="135:9" pos:end="137:55"><name pos:start="135:9" pos:end="135:11">len</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="137:55"><name pos:start="135:15" pos:end="135:26">iov_from_buf</name><argument_list pos:start="135:27" pos:end="137:55">(<argument pos:start="135:28" pos:end="135:29"><expr pos:start="135:28" pos:end="135:29"><name pos:start="135:28" pos:end="135:29">sg</name></expr></argument>, <argument pos:start="135:32" pos:end="135:42"><expr pos:start="135:32" pos:end="135:42"><name pos:start="135:32" pos:end="135:42"><name pos:start="135:32" pos:end="135:35">elem</name><operator pos:start="135:36" pos:end="135:36">.</operator><name pos:start="135:37" pos:end="135:42">in_num</name></name></expr></argument>, <argument pos:start="135:45" pos:end="135:56"><expr pos:start="135:45" pos:end="135:56"><name pos:start="135:45" pos:end="135:56">guest_offset</name></expr></argument>,

                           <argument pos:start="137:28" pos:end="137:39"><expr pos:start="137:28" pos:end="137:39"><name pos:start="137:28" pos:end="137:30">buf</name> <operator pos:start="137:32" pos:end="137:32">+</operator> <name pos:start="137:34" pos:end="137:39">offset</name></expr></argument>, <argument pos:start="137:42" pos:end="137:54"><expr pos:start="137:42" pos:end="137:54"><name pos:start="137:42" pos:end="137:45">size</name> <operator pos:start="137:47" pos:end="137:47">-</operator> <name pos:start="137:49" pos:end="137:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:21"><expr pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:13">total</name> <operator pos:start="139:15" pos:end="139:16">+=</operator> <name pos:start="139:18" pos:end="139:20">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:22"><expr pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:14">offset</name> <operator pos:start="141:16" pos:end="141:17">+=</operator> <name pos:start="141:19" pos:end="141:21">len</name></expr>;</expr_stmt>

        <comment type="block" pos:start="143:9" pos:end="147:33">/* If buffers can't be merged, at this point we

         * must have consumed the complete packet.

         * Otherwise, drop it. */</comment>

        <if_stmt pos:start="149:9" pos:end="167:9"><if pos:start="149:9" pos:end="167:9">if <condition pos:start="149:12" pos:end="149:51">(<expr pos:start="149:13" pos:end="149:50"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:33"><name pos:start="149:14" pos:end="149:14">n</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:33">mergeable_rx_bufs</name></name> <operator pos:start="149:35" pos:end="149:36">&amp;&amp;</operator> <name pos:start="149:38" pos:end="149:43">offset</name> <operator pos:start="149:45" pos:end="149:45">&lt;</operator> <name pos:start="149:47" pos:end="149:50">size</name></expr>)</condition> <block pos:start="149:53" pos:end="167:9">{<block_content pos:start="165:13" pos:end="165:24">

<cpp:if pos:start="151:1" pos:end="151:5">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:5"><literal type="number" pos:start="151:5" pos:end="151:5">0</literal></expr></cpp:if>

            error_report("virtio-net truncated non-mergeable packet: "

                         "i %zd mergeable %d offset %zd, size %zd, "

                         "guest hdr len %zd, host hdr len %zd",

                         i, n-&gt;mergeable_rx_bufs,

                         offset, size, n-&gt;guest_hdr_len, n-&gt;host_hdr_len);

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>

            <return pos:start="165:13" pos:end="165:24">return <expr pos:start="165:20" pos:end="165:23"><name pos:start="165:20" pos:end="165:23">size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="171:9" pos:end="171:31">/* signal other side */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:52"><expr pos:start="173:9" pos:end="173:51"><call pos:start="173:9" pos:end="173:51"><name pos:start="173:9" pos:end="173:22">virtqueue_fill</name><argument_list pos:start="173:23" pos:end="173:51">(<argument pos:start="173:24" pos:end="173:31"><expr pos:start="173:24" pos:end="173:31"><name pos:start="173:24" pos:end="173:31"><name pos:start="173:24" pos:end="173:24">q</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:31">rx_vq</name></name></expr></argument>, <argument pos:start="173:34" pos:end="173:38"><expr pos:start="173:34" pos:end="173:38"><operator pos:start="173:34" pos:end="173:34">&amp;</operator><name pos:start="173:35" pos:end="173:38">elem</name></expr></argument>, <argument pos:start="173:41" pos:end="173:45"><expr pos:start="173:41" pos:end="173:45"><name pos:start="173:41" pos:end="173:45">total</name></expr></argument>, <argument pos:start="173:48" pos:end="173:50"><expr pos:start="173:48" pos:end="173:50"><name pos:start="173:48" pos:end="173:48">i</name><operator pos:start="173:49" pos:end="173:50">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="179:5" pos:end="189:5"><if pos:start="179:5" pos:end="189:5">if <condition pos:start="179:8" pos:end="179:17">(<expr pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:16">mhdr_cnt</name></expr>)</condition> <block pos:start="179:19" pos:end="189:5">{<block_content pos:start="181:9" pos:end="187:65">

        <expr_stmt pos:start="181:9" pos:end="181:49"><expr pos:start="181:9" pos:end="181:48"><call pos:start="181:9" pos:end="181:48"><name pos:start="181:9" pos:end="181:20">virtio_stw_p</name><argument_list pos:start="181:21" pos:end="181:48">(<argument pos:start="181:22" pos:end="181:25"><expr pos:start="181:22" pos:end="181:25"><name pos:start="181:22" pos:end="181:25">vdev</name></expr></argument>, <argument pos:start="181:28" pos:end="181:44"><expr pos:start="181:28" pos:end="181:44"><operator pos:start="181:28" pos:end="181:28">&amp;</operator><name pos:start="181:29" pos:end="181:44"><name pos:start="181:29" pos:end="181:32">mhdr</name><operator pos:start="181:33" pos:end="181:33">.</operator><name pos:start="181:34" pos:end="181:44">num_buffers</name></name></expr></argument>, <argument pos:start="181:47" pos:end="181:47"><expr pos:start="181:47" pos:end="181:47"><name pos:start="181:47" pos:end="181:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="187:65"><expr pos:start="183:9" pos:end="187:64"><call pos:start="183:9" pos:end="187:64"><name pos:start="183:9" pos:end="183:20">iov_from_buf</name><argument_list pos:start="183:21" pos:end="187:64">(<argument pos:start="183:22" pos:end="183:28"><expr pos:start="183:22" pos:end="183:28"><name pos:start="183:22" pos:end="183:28">mhdr_sg</name></expr></argument>, <argument pos:start="183:31" pos:end="183:38"><expr pos:start="183:31" pos:end="183:38"><name pos:start="183:31" pos:end="183:38">mhdr_cnt</name></expr></argument>,

                     <argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><literal type="number" pos:start="185:22" pos:end="185:22">0</literal></expr></argument>,

                     <argument pos:start="187:22" pos:end="187:38"><expr pos:start="187:22" pos:end="187:38"><operator pos:start="187:22" pos:end="187:22">&amp;</operator><name pos:start="187:23" pos:end="187:38"><name pos:start="187:23" pos:end="187:26">mhdr</name><operator pos:start="187:27" pos:end="187:27">.</operator><name pos:start="187:28" pos:end="187:38">num_buffers</name></name></expr></argument>, <argument pos:start="187:41" pos:end="187:63"><expr pos:start="187:41" pos:end="187:63"><sizeof pos:start="187:41" pos:end="187:63">sizeof <name pos:start="187:48" pos:end="187:63"><name pos:start="187:48" pos:end="187:51">mhdr</name><operator pos:start="187:52" pos:end="187:52">.</operator><name pos:start="187:53" pos:end="187:63">num_buffers</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:33"><expr pos:start="193:5" pos:end="193:32"><call pos:start="193:5" pos:end="193:32"><name pos:start="193:5" pos:end="193:19">virtqueue_flush</name><argument_list pos:start="193:20" pos:end="193:32">(<argument pos:start="193:21" pos:end="193:28"><expr pos:start="193:21" pos:end="193:28"><name pos:start="193:21" pos:end="193:28"><name pos:start="193:21" pos:end="193:21">q</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:28">rx_vq</name></name></expr></argument>, <argument pos:start="193:31" pos:end="193:31"><expr pos:start="193:31" pos:end="193:31"><name pos:start="193:31" pos:end="193:31">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:34"><expr pos:start="195:5" pos:end="195:33"><call pos:start="195:5" pos:end="195:33"><name pos:start="195:5" pos:end="195:17">virtio_notify</name><argument_list pos:start="195:18" pos:end="195:33">(<argument pos:start="195:19" pos:end="195:22"><expr pos:start="195:19" pos:end="195:22"><name pos:start="195:19" pos:end="195:22">vdev</name></expr></argument>, <argument pos:start="195:25" pos:end="195:32"><expr pos:start="195:25" pos:end="195:32"><name pos:start="195:25" pos:end="195:32"><name pos:start="195:25" pos:end="195:25">q</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:32">rx_vq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="199:5" pos:end="199:16">return <expr pos:start="199:12" pos:end="199:15"><name pos:start="199:12" pos:end="199:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
