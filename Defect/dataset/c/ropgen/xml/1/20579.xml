<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20579.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">__qemu_rdma_add_block</name><parameter_list pos:start="1:33" pos:end="3:66">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:44">RDMAContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">rdma</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:67">host_addr</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:48"><decl pos:start="3:26" pos:end="3:48"><type pos:start="3:26" pos:end="3:48"><name pos:start="3:26" pos:end="3:35">ram_addr_t</name></type> <name pos:start="3:37" pos:end="3:48">block_offset</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">uint64_t</name></type> <name pos:start="3:60" pos:end="3:65">length</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:13">

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">RDMALocalBlocks</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:26">local</name> <init pos:start="7:28" pos:end="7:52">= <expr pos:start="7:30" pos:end="7:52"><operator pos:start="7:30" pos:end="7:30">&amp;</operator><name pos:start="7:31" pos:end="7:52"><name pos:start="7:31" pos:end="7:34">rdma</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:52">local_ram_blocks</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="11:31"><decl pos:start="9:5" pos:end="11:30"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">RDMALocalBlock</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">block</name> <init pos:start="9:27" pos:end="11:30">= <expr pos:start="9:29" pos:end="11:30"><call pos:start="9:29" pos:end="11:30"><name pos:start="9:29" pos:end="9:47">g_hash_table_lookup</name><argument_list pos:start="9:48" pos:end="11:30">(<argument pos:start="9:49" pos:end="9:62"><expr pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:52">rdma</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:62">blockmap</name></name></expr></argument>,

        <argument pos:start="11:9" pos:end="11:29"><expr pos:start="11:9" pos:end="11:29"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:13">void</name> <operator pos:start="11:15" pos:end="11:15">*</operator><operator pos:start="11:16" pos:end="11:16">)</operator> <name pos:start="11:18" pos:end="11:29">block_offset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">RDMALocalBlock</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">old</name> <init pos:start="13:25" pos:end="13:38">= <expr pos:start="13:27" pos:end="13:38"><name pos:start="13:27" pos:end="13:38"><name pos:start="13:27" pos:end="13:31">local</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:38">block</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><call pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:25">(<argument pos:start="17:12" pos:end="17:24"><expr pos:start="17:12" pos:end="17:24"><name pos:start="17:12" pos:end="17:16">block</name> <operator pos:start="17:18" pos:end="17:19">==</operator> <name pos:start="17:21" pos:end="17:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:78"><expr pos:start="21:5" pos:end="21:77"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:9">local</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">block</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:77"><name pos:start="21:20" pos:end="21:28">g_malloc0</name><argument_list pos:start="21:29" pos:end="21:77">(<argument pos:start="21:30" pos:end="21:76"><expr pos:start="21:30" pos:end="21:76"><sizeof pos:start="21:30" pos:end="21:51">sizeof<argument_list pos:start="21:36" pos:end="21:51">(<argument pos:start="21:37" pos:end="21:50"><expr pos:start="21:37" pos:end="21:50"><name pos:start="21:37" pos:end="21:50">RDMALocalBlock</name></expr></argument>)</argument_list></sizeof> <operator pos:start="21:53" pos:end="21:53">*</operator> <operator pos:start="21:55" pos:end="21:55">(</operator><name pos:start="21:56" pos:end="21:71"><name pos:start="21:56" pos:end="21:60">local</name><operator pos:start="21:61" pos:end="21:62">-&gt;</operator><name pos:start="21:63" pos:end="21:71">nb_blocks</name></name> <operator pos:start="21:73" pos:end="21:73">+</operator> <literal type="number" pos:start="21:75" pos:end="21:75">1</literal><operator pos:start="21:76" pos:end="21:76">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="45:5"><if pos:start="25:5" pos:end="45:5">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:13">local</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">nb_blocks</name></name></expr>)</condition> <block pos:start="25:27" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:20">

        <decl_stmt pos:start="27:9" pos:end="27:14"><decl pos:start="27:9" pos:end="27:13"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:13">x</name></decl>;</decl_stmt>



        <for pos:start="31:9" pos:end="39:9">for <control pos:start="31:13" pos:end="31:46">(<init pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:18"><name pos:start="31:14" pos:end="31:14">x</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</init> <condition pos:start="31:21" pos:end="31:41"><expr pos:start="31:21" pos:end="31:40"><name pos:start="31:21" pos:end="31:21">x</name> <operator pos:start="31:23" pos:end="31:23">&lt;</operator> <name pos:start="31:25" pos:end="31:40"><name pos:start="31:25" pos:end="31:29">local</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">nb_blocks</name></name></expr>;</condition> <incr pos:start="31:43" pos:end="31:45"><expr pos:start="31:43" pos:end="31:45"><name pos:start="31:43" pos:end="31:43">x</name><operator pos:start="31:44" pos:end="31:45">++</operator></expr></incr>)</control> <block pos:start="31:48" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:66">

            <expr_stmt pos:start="33:13" pos:end="33:71"><expr pos:start="33:13" pos:end="33:70"><call pos:start="33:13" pos:end="33:70"><name pos:start="33:13" pos:end="33:31">g_hash_table_remove</name><argument_list pos:start="33:32" pos:end="33:70">(<argument pos:start="33:33" pos:end="33:46"><expr pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:36">rdma</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:46">blockmap</name></name></expr></argument>, <argument pos:start="33:49" pos:end="33:69"><expr pos:start="33:49" pos:end="33:69"><operator pos:start="33:49" pos:end="33:49">(</operator><name pos:start="33:50" pos:end="33:53">void</name> <operator pos:start="33:55" pos:end="33:55">*</operator><operator pos:start="33:56" pos:end="33:56">)</operator><name pos:start="33:57" pos:end="33:62"><name pos:start="33:57" pos:end="33:59">old</name><index pos:start="33:60" pos:end="33:62">[<expr pos:start="33:61" pos:end="33:61"><name pos:start="33:61" pos:end="33:61">x</name></expr>]</index></name><operator pos:start="33:63" pos:end="33:63">.</operator><name pos:start="33:64" pos:end="33:69">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="37:66"><expr pos:start="35:13" pos:end="37:65"><call pos:start="35:13" pos:end="37:65"><name pos:start="35:13" pos:end="35:31">g_hash_table_insert</name><argument_list pos:start="35:32" pos:end="37:65">(<argument pos:start="35:33" pos:end="35:46"><expr pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:36">rdma</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:46">blockmap</name></name></expr></argument>, <argument pos:start="35:49" pos:end="35:69"><expr pos:start="35:49" pos:end="35:69"><operator pos:start="35:49" pos:end="35:49">(</operator><name pos:start="35:50" pos:end="35:53">void</name> <operator pos:start="35:55" pos:end="35:55">*</operator><operator pos:start="35:56" pos:end="35:56">)</operator><name pos:start="35:57" pos:end="35:62"><name pos:start="35:57" pos:end="35:59">old</name><index pos:start="35:60" pos:end="35:62">[<expr pos:start="35:61" pos:end="35:61"><name pos:start="35:61" pos:end="35:61">x</name></expr>]</index></name><operator pos:start="35:63" pos:end="35:63">.</operator><name pos:start="35:64" pos:end="35:69">offset</name></expr></argument>,

                                                <argument pos:start="37:49" pos:end="37:64"><expr pos:start="37:49" pos:end="37:64"><operator pos:start="37:49" pos:end="37:49">&amp;</operator><name pos:start="37:50" pos:end="37:64"><name pos:start="37:50" pos:end="37:54">local</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:61">block</name><index pos:start="37:62" pos:end="37:64">[<expr pos:start="37:63" pos:end="37:63"><name pos:start="37:63" pos:end="37:63">x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:77"><expr pos:start="41:9" pos:end="41:76"><call pos:start="41:9" pos:end="41:76"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:76">(<argument pos:start="41:16" pos:end="41:27"><expr pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:27"><name pos:start="41:16" pos:end="41:20">local</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">block</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">old</name></expr></argument>, <argument pos:start="41:35" pos:end="41:75"><expr pos:start="41:35" pos:end="41:75"><sizeof pos:start="41:35" pos:end="41:56">sizeof<argument_list pos:start="41:41" pos:end="41:56">(<argument pos:start="41:42" pos:end="41:55"><expr pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:55">RDMALocalBlock</name></expr></argument>)</argument_list></sizeof> <operator pos:start="41:58" pos:end="41:58">*</operator> <name pos:start="41:60" pos:end="41:75"><name pos:start="41:60" pos:end="41:64">local</name><operator pos:start="41:65" pos:end="41:66">-&gt;</operator><name pos:start="41:67" pos:end="41:75">nb_blocks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><call pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:19">(<argument pos:start="43:16" pos:end="43:18"><expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:44"><expr pos:start="49:5" pos:end="49:43"><name pos:start="49:5" pos:end="49:9">block</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">&amp;</operator><name pos:start="49:14" pos:end="49:43"><name pos:start="49:14" pos:end="49:18">local</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:25">block</name><index pos:start="49:26" pos:end="49:43">[<expr pos:start="49:27" pos:end="49:42"><name pos:start="49:27" pos:end="49:42"><name pos:start="49:27" pos:end="49:31">local</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:42">nb_blocks</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:39"><expr pos:start="53:5" pos:end="53:38"><name pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:9">block</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:26">local_host_addr</name></name> <operator pos:start="53:28" pos:end="53:28">=</operator> <name pos:start="53:30" pos:end="53:38">host_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:33"><expr pos:start="55:5" pos:end="55:32"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:9">block</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:17">offset</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:32">block_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:17"><name pos:start="57:5" pos:end="57:9">block</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:17">length</name></name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:26">length</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:9">block</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">index</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:35"><name pos:start="59:20" pos:end="59:24">local</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:35">nb_blocks</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:76"><expr pos:start="61:5" pos:end="61:75"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:9">block</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">nb_chunks</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:69"><name pos:start="61:24" pos:end="61:38">ram_chunk_index</name><argument_list pos:start="61:39" pos:end="61:69">(<argument pos:start="61:40" pos:end="61:48"><expr pos:start="61:40" pos:end="61:48"><name pos:start="61:40" pos:end="61:48">host_addr</name></expr></argument>, <argument pos:start="61:51" pos:end="61:68"><expr pos:start="61:51" pos:end="61:68"><name pos:start="61:51" pos:end="61:59">host_addr</name> <operator pos:start="61:61" pos:end="61:61">+</operator> <name pos:start="61:63" pos:end="61:68">length</name></expr></argument>)</argument_list></call> <operator pos:start="61:71" pos:end="61:71">+</operator> <literal type="number" pos:start="61:73" pos:end="61:75">1UL</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:57"><expr pos:start="63:5" pos:end="63:56"><name pos:start="63:5" pos:end="63:25"><name pos:start="63:5" pos:end="63:9">block</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:25">transit_bitmap</name></name> <operator pos:start="63:27" pos:end="63:27">=</operator> <call pos:start="63:29" pos:end="63:56"><name pos:start="63:29" pos:end="63:38">bitmap_new</name><argument_list pos:start="63:39" pos:end="63:56">(<argument pos:start="63:40" pos:end="63:55"><expr pos:start="63:40" pos:end="63:55"><name pos:start="63:40" pos:end="63:55"><name pos:start="63:40" pos:end="63:44">block</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:55">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:61"><expr pos:start="65:5" pos:end="65:60"><call pos:start="65:5" pos:end="65:60"><name pos:start="65:5" pos:end="65:16">bitmap_clear</name><argument_list pos:start="65:17" pos:end="65:60">(<argument pos:start="65:18" pos:end="65:38"><expr pos:start="65:18" pos:end="65:38"><name pos:start="65:18" pos:end="65:38"><name pos:start="65:18" pos:end="65:22">block</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:38">transit_bitmap</name></name></expr></argument>, <argument pos:start="65:41" pos:end="65:41"><expr pos:start="65:41" pos:end="65:41"><literal type="number" pos:start="65:41" pos:end="65:41">0</literal></expr></argument>, <argument pos:start="65:44" pos:end="65:59"><expr pos:start="65:44" pos:end="65:59"><name pos:start="65:44" pos:end="65:59"><name pos:start="65:44" pos:end="65:48">block</name><operator pos:start="65:49" pos:end="65:50">-&gt;</operator><name pos:start="65:51" pos:end="65:59">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:60"><expr pos:start="67:5" pos:end="67:59"><name pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:9">block</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:28">unregister_bitmap</name></name> <operator pos:start="67:30" pos:end="67:30">=</operator> <call pos:start="67:32" pos:end="67:59"><name pos:start="67:32" pos:end="67:41">bitmap_new</name><argument_list pos:start="67:42" pos:end="67:59">(<argument pos:start="67:43" pos:end="67:58"><expr pos:start="67:43" pos:end="67:58"><name pos:start="67:43" pos:end="67:58"><name pos:start="67:43" pos:end="67:47">block</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:58">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:64"><expr pos:start="69:5" pos:end="69:63"><call pos:start="69:5" pos:end="69:63"><name pos:start="69:5" pos:end="69:16">bitmap_clear</name><argument_list pos:start="69:17" pos:end="69:63">(<argument pos:start="69:18" pos:end="69:41"><expr pos:start="69:18" pos:end="69:41"><name pos:start="69:18" pos:end="69:41"><name pos:start="69:18" pos:end="69:22">block</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:41">unregister_bitmap</name></name></expr></argument>, <argument pos:start="69:44" pos:end="69:44"><expr pos:start="69:44" pos:end="69:44"><literal type="number" pos:start="69:44" pos:end="69:44">0</literal></expr></argument>, <argument pos:start="69:47" pos:end="69:62"><expr pos:start="69:47" pos:end="69:62"><name pos:start="69:47" pos:end="69:62"><name pos:start="69:47" pos:end="69:51">block</name><operator pos:start="69:52" pos:end="69:53">-&gt;</operator><name pos:start="69:54" pos:end="69:62">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:72"><expr pos:start="71:5" pos:end="71:71"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:9">block</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:22">remote_keys</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:71"><name pos:start="71:26" pos:end="71:34">g_malloc0</name><argument_list pos:start="71:35" pos:end="71:71">(<argument pos:start="71:36" pos:end="71:70"><expr pos:start="71:36" pos:end="71:70"><name pos:start="71:36" pos:end="71:51"><name pos:start="71:36" pos:end="71:40">block</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:51">nb_chunks</name></name> <operator pos:start="71:53" pos:end="71:53">*</operator> <sizeof pos:start="71:55" pos:end="71:70">sizeof<argument_list pos:start="71:61" pos:end="71:70">(<argument pos:start="71:62" pos:end="71:69"><expr pos:start="71:62" pos:end="71:69"><name pos:start="71:62" pos:end="71:69">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:53"><expr pos:start="75:5" pos:end="75:52"><name pos:start="75:5" pos:end="75:23"><name pos:start="75:5" pos:end="75:9">block</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:23">is_ram_block</name></name> <operator pos:start="75:25" pos:end="75:25">=</operator> <ternary pos:start="75:27" pos:end="75:52"><condition pos:start="75:27" pos:end="75:39"><expr pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:37"><name pos:start="75:27" pos:end="75:31">local</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:37">init</name></name></expr> ?</condition><then pos:start="75:41" pos:end="75:45"> <expr pos:start="75:41" pos:end="75:45"><name pos:start="75:41" pos:end="75:45">false</name></expr> </then><else pos:start="75:47" pos:end="75:52">: <expr pos:start="75:49" pos:end="75:52"><name pos:start="75:49" pos:end="75:52">true</name></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:70"><expr pos:start="79:5" pos:end="79:69"><call pos:start="79:5" pos:end="79:69"><name pos:start="79:5" pos:end="79:23">g_hash_table_insert</name><argument_list pos:start="79:24" pos:end="79:69">(<argument pos:start="79:25" pos:end="79:38"><expr pos:start="79:25" pos:end="79:38"><name pos:start="79:25" pos:end="79:38"><name pos:start="79:25" pos:end="79:28">rdma</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:38">blockmap</name></name></expr></argument>, <argument pos:start="79:41" pos:end="79:61"><expr pos:start="79:41" pos:end="79:61"><operator pos:start="79:41" pos:end="79:41">(</operator><name pos:start="79:42" pos:end="79:45">void</name> <operator pos:start="79:47" pos:end="79:47">*</operator><operator pos:start="79:48" pos:end="79:48">)</operator> <name pos:start="79:50" pos:end="79:61">block_offset</name></expr></argument>, <argument pos:start="79:64" pos:end="79:68"><expr pos:start="79:64" pos:end="79:68"><name pos:start="79:64" pos:end="79:68">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="93:65"><expr pos:start="83:5" pos:end="93:64"><call pos:start="83:5" pos:end="93:64"><name pos:start="83:5" pos:end="83:12">DDPRINTF</name><argument_list pos:start="83:13" pos:end="93:64">(<argument pos:start="83:14" pos:end="85:79"><expr pos:start="83:14" pos:end="85:79"><literal type="string" pos:start="83:14" pos:end="83:39">"Added Block: %d, addr: %"</literal> <name pos:start="83:41" pos:end="83:46">PRIu64</name> <literal type="string" pos:start="83:48" pos:end="83:60">", offset: %"</literal> <name pos:start="83:62" pos:end="83:67">PRIu64</name>

           <literal type="string" pos:start="85:12" pos:end="85:23">" length: %"</literal> <name pos:start="85:25" pos:end="85:30">PRIu64</name> <literal type="string" pos:start="85:32" pos:end="85:40">" end: %"</literal> <name pos:start="85:42" pos:end="85:47">PRIu64</name> <literal type="string" pos:start="85:49" pos:end="85:57">" bits %"</literal> <name pos:start="85:59" pos:end="85:64">PRIu64</name> <literal type="string" pos:start="85:66" pos:end="85:79">" chunks %d\n"</literal></expr></argument>,

            <argument pos:start="87:13" pos:end="87:28"><expr pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:28"><name pos:start="87:13" pos:end="87:17">local</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:28">nb_blocks</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:63"><expr pos:start="87:31" pos:end="87:63"><operator pos:start="87:31" pos:end="87:31">(</operator><name pos:start="87:32" pos:end="87:39">uint64_t</name><operator pos:start="87:40" pos:end="87:40">)</operator> <name pos:start="87:42" pos:end="87:63"><name pos:start="87:42" pos:end="87:46">block</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:63">local_host_addr</name></name></expr></argument>, <argument pos:start="87:66" pos:end="87:78"><expr pos:start="87:66" pos:end="87:78"><name pos:start="87:66" pos:end="87:78"><name pos:start="87:66" pos:end="87:70">block</name><operator pos:start="87:71" pos:end="87:72">-&gt;</operator><name pos:start="87:73" pos:end="87:78">offset</name></name></expr></argument>,

            <argument pos:start="89:13" pos:end="89:25"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:17">block</name><operator pos:start="89:18" pos:end="89:19">-&gt;</operator><name pos:start="89:20" pos:end="89:25">length</name></name></expr></argument>, <argument pos:start="89:28" pos:end="89:78"><expr pos:start="89:28" pos:end="89:78"><operator pos:start="89:28" pos:end="89:28">(</operator><name pos:start="89:29" pos:end="89:36">uint64_t</name><operator pos:start="89:37" pos:end="89:37">)</operator> <operator pos:start="89:39" pos:end="89:39">(</operator><name pos:start="89:40" pos:end="89:61"><name pos:start="89:40" pos:end="89:44">block</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:61">local_host_addr</name></name> <operator pos:start="89:63" pos:end="89:63">+</operator> <name pos:start="89:65" pos:end="89:77"><name pos:start="89:65" pos:end="89:69">block</name><operator pos:start="89:70" pos:end="89:71">-&gt;</operator><name pos:start="89:72" pos:end="89:77">length</name></name><operator pos:start="89:78" pos:end="89:78">)</operator></expr></argument>,

                <argument pos:start="91:17" pos:end="93:45"><expr pos:start="91:17" pos:end="93:45"><call pos:start="91:17" pos:end="91:47"><name pos:start="91:17" pos:end="91:29">BITS_TO_LONGS</name><argument_list pos:start="91:30" pos:end="91:47">(<argument pos:start="91:31" pos:end="91:46"><expr pos:start="91:31" pos:end="91:46"><name pos:start="91:31" pos:end="91:46"><name pos:start="91:31" pos:end="91:35">block</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:46">nb_chunks</name></name></expr></argument>)</argument_list></call> <operator pos:start="91:49" pos:end="91:49">*</operator>

                    sizeof<operator pos:start="93:27" pos:end="93:27">(</operator><name pos:start="93:28" pos:end="93:35">unsigned</name> <name pos:start="93:37" pos:end="93:40">long</name><operator pos:start="93:41" pos:end="93:41">)</operator> <operator pos:start="93:43" pos:end="93:43">*</operator> <literal type="number" pos:start="93:45" pos:end="93:45">8</literal></expr></argument>, <argument pos:start="93:48" pos:end="93:63"><expr pos:start="93:48" pos:end="93:63"><name pos:start="93:48" pos:end="93:63"><name pos:start="93:48" pos:end="93:52">block</name><operator pos:start="93:53" pos:end="93:54">-&gt;</operator><name pos:start="93:55" pos:end="93:63">nb_chunks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:23"><expr pos:start="97:5" pos:end="97:22"><name pos:start="97:5" pos:end="97:20"><name pos:start="97:5" pos:end="97:9">local</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:20">nb_blocks</name></name><operator pos:start="97:21" pos:end="97:22">++</operator></expr>;</expr_stmt>



    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
