<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20308.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">add_ptimer_tests</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:36"><name pos:start="1:30" pos:end="1:36">uint8_t</name></type> <name pos:start="1:38" pos:end="1:43">policy</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:44">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:20">ppolicy</name> <init pos:start="5:22" pos:end="5:34">= <expr pos:start="5:24" pos:end="5:34"><call pos:start="5:24" pos:end="5:34"><name pos:start="5:24" pos:end="5:31">g_malloc</name><argument_list pos:start="5:32" pos:end="5:34">(<argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:21">policy_name</name> <init pos:start="7:23" pos:end="7:38">= <expr pos:start="7:25" pos:end="7:38"><call pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:33">g_malloc0</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><literal type="number" pos:start="7:35" pos:end="7:37">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><operator pos:start="11:5" pos:end="11:5">*</operator><name pos:start="11:6" pos:end="11:12">ppolicy</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:21">policy</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:14">policy</name> <operator pos:start="15:16" pos:end="15:17">==</operator> <name pos:start="15:19" pos:end="15:39">PTIMER_POLICY_DEFAULT</name></expr>)</condition> <block pos:start="15:42" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:42">

        <expr_stmt pos:start="17:9" pos:end="17:42"><expr pos:start="17:9" pos:end="17:41"><call pos:start="17:9" pos:end="17:41"><name pos:start="17:9" pos:end="17:17">g_sprintf</name><argument_list pos:start="17:18" pos:end="17:41">(<argument pos:start="17:19" pos:end="17:29"><expr pos:start="17:19" pos:end="17:29"><name pos:start="17:19" pos:end="17:29">policy_name</name></expr></argument>, <argument pos:start="17:32" pos:end="17:40"><expr pos:start="17:32" pos:end="17:40"><literal type="string" pos:start="17:32" pos:end="17:40">"default"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:53">(<expr pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:14">policy</name> <operator pos:start="23:16" pos:end="23:16">&amp;</operator> <name pos:start="23:18" pos:end="23:52">PTIMER_POLICY_WRAP_AFTER_ONE_PERIOD</name></expr>)</condition> <block pos:start="23:55" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:62">

        <expr_stmt pos:start="25:9" pos:end="25:62"><expr pos:start="25:9" pos:end="25:61"><call pos:start="25:9" pos:end="25:61"><name pos:start="25:9" pos:end="25:17">g_strlcat</name><argument_list pos:start="25:18" pos:end="25:61">(<argument pos:start="25:19" pos:end="25:29"><expr pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:29">policy_name</name></expr></argument>, <argument pos:start="25:32" pos:end="25:55"><expr pos:start="25:32" pos:end="25:55"><literal type="string" pos:start="25:32" pos:end="25:55">"wrap_after_one_period,"</literal></expr></argument>, <argument pos:start="25:58" pos:end="25:60"><expr pos:start="25:58" pos:end="25:60"><literal type="number" pos:start="25:58" pos:end="25:60">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:50">(<expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:14">policy</name> <operator pos:start="31:16" pos:end="31:16">&amp;</operator> <name pos:start="31:18" pos:end="31:49">PTIMER_POLICY_CONTINUOUS_TRIGGER</name></expr>)</condition> <block pos:start="31:52" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:59">

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><call pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:17">g_strlcat</name><argument_list pos:start="33:18" pos:end="33:58">(<argument pos:start="33:19" pos:end="33:29"><expr pos:start="33:19" pos:end="33:29"><name pos:start="33:19" pos:end="33:29">policy_name</name></expr></argument>, <argument pos:start="33:32" pos:end="33:52"><expr pos:start="33:32" pos:end="33:52"><literal type="string" pos:start="33:32" pos:end="33:52">"continuous_trigger,"</literal></expr></argument>, <argument pos:start="33:55" pos:end="33:57"><expr pos:start="33:55" pos:end="33:57"><literal type="number" pos:start="33:55" pos:end="33:57">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:52">(<expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:14">policy</name> <operator pos:start="39:16" pos:end="39:16">&amp;</operator> <name pos:start="39:18" pos:end="39:51">PTIMER_POLICY_NO_IMMEDIATE_TRIGGER</name></expr>)</condition> <block pos:start="39:54" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:61">

        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:17">g_strlcat</name><argument_list pos:start="41:18" pos:end="41:60">(<argument pos:start="41:19" pos:end="41:29"><expr pos:start="41:19" pos:end="41:29"><name pos:start="41:19" pos:end="41:29">policy_name</name></expr></argument>, <argument pos:start="41:32" pos:end="41:54"><expr pos:start="41:32" pos:end="41:54"><literal type="string" pos:start="41:32" pos:end="41:54">"no_immediate_trigger,"</literal></expr></argument>, <argument pos:start="41:57" pos:end="41:59"><expr pos:start="41:57" pos:end="41:59"><literal type="number" pos:start="41:57" pos:end="41:59">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:51">(<expr pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:14">policy</name> <operator pos:start="47:16" pos:end="47:16">&amp;</operator> <name pos:start="47:18" pos:end="47:50">PTIMER_POLICY_NO_IMMEDIATE_RELOAD</name></expr>)</condition> <block pos:start="47:53" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:60">

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><call pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:17">g_strlcat</name><argument_list pos:start="49:18" pos:end="49:59">(<argument pos:start="49:19" pos:end="49:29"><expr pos:start="49:19" pos:end="49:29"><name pos:start="49:19" pos:end="49:29">policy_name</name></expr></argument>, <argument pos:start="49:32" pos:end="49:53"><expr pos:start="49:32" pos:end="49:53"><literal type="string" pos:start="49:32" pos:end="49:53">"no_immediate_reload,"</literal></expr></argument>, <argument pos:start="49:56" pos:end="49:58"><expr pos:start="49:56" pos:end="49:58"><literal type="number" pos:start="49:56" pos:end="49:58">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="59:5"><if pos:start="55:5" pos:end="59:5">if <condition pos:start="55:8" pos:end="55:53">(<expr pos:start="55:9" pos:end="55:52"><name pos:start="55:9" pos:end="55:14">policy</name> <operator pos:start="55:16" pos:end="55:16">&amp;</operator> <name pos:start="55:18" pos:end="55:52">PTIMER_POLICY_NO_COUNTER_ROUND_DOWN</name></expr>)</condition> <block pos:start="55:55" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:61">

        <expr_stmt pos:start="57:9" pos:end="57:61"><expr pos:start="57:9" pos:end="57:60"><call pos:start="57:9" pos:end="57:60"><name pos:start="57:9" pos:end="57:17">g_strlcat</name><argument_list pos:start="57:18" pos:end="57:60">(<argument pos:start="57:19" pos:end="57:29"><expr pos:start="57:19" pos:end="57:29"><name pos:start="57:19" pos:end="57:29">policy_name</name></expr></argument>, <argument pos:start="57:32" pos:end="57:54"><expr pos:start="57:32" pos:end="57:54"><literal type="string" pos:start="57:32" pos:end="57:54">"no_counter_rounddown,"</literal></expr></argument>, <argument pos:start="57:57" pos:end="57:59"><expr pos:start="57:57" pos:end="57:59"><literal type="number" pos:start="57:57" pos:end="57:59">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="67:34"><expr pos:start="63:5" pos:end="67:33"><call pos:start="63:5" pos:end="67:33"><name pos:start="63:5" pos:end="63:24">g_test_add_data_func</name><argument_list pos:start="63:25" pos:end="67:33">(

        <argument pos:start="65:9" pos:end="65:67"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:23">g_strdup_printf</name><argument_list pos:start="65:24" pos:end="65:67">(<argument pos:start="65:25" pos:end="65:53"><expr pos:start="65:25" pos:end="65:53"><literal type="string" pos:start="65:25" pos:end="65:53">"/ptimer/set_count policy=%s"</literal></expr></argument>, <argument pos:start="65:56" pos:end="65:66"><expr pos:start="65:56" pos:end="65:66"><name pos:start="65:56" pos:end="65:66">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="67:9" pos:end="67:15"><expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:15">ppolicy</name></expr></argument>, <argument pos:start="67:18" pos:end="67:32"><expr pos:start="67:18" pos:end="67:32"><name pos:start="67:18" pos:end="67:32">check_set_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="75:34"><expr pos:start="71:5" pos:end="75:33"><call pos:start="71:5" pos:end="75:33"><name pos:start="71:5" pos:end="71:24">g_test_add_data_func</name><argument_list pos:start="71:25" pos:end="75:33">(

        <argument pos:start="73:9" pos:end="73:67"><expr pos:start="73:9" pos:end="73:67"><call pos:start="73:9" pos:end="73:67"><name pos:start="73:9" pos:end="73:23">g_strdup_printf</name><argument_list pos:start="73:24" pos:end="73:67">(<argument pos:start="73:25" pos:end="73:53"><expr pos:start="73:25" pos:end="73:53"><literal type="string" pos:start="73:25" pos:end="73:53">"/ptimer/set_limit policy=%s"</literal></expr></argument>, <argument pos:start="73:56" pos:end="73:66"><expr pos:start="73:56" pos:end="73:66"><name pos:start="73:56" pos:end="73:66">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="75:9" pos:end="75:15"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:15">ppolicy</name></expr></argument>, <argument pos:start="75:18" pos:end="75:32"><expr pos:start="75:18" pos:end="75:32"><name pos:start="75:18" pos:end="75:32">check_set_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="83:32"><expr pos:start="79:5" pos:end="83:31"><call pos:start="79:5" pos:end="83:31"><name pos:start="79:5" pos:end="79:24">g_test_add_data_func</name><argument_list pos:start="79:25" pos:end="83:31">(

        <argument pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:65"><call pos:start="81:9" pos:end="81:65"><name pos:start="81:9" pos:end="81:23">g_strdup_printf</name><argument_list pos:start="81:24" pos:end="81:65">(<argument pos:start="81:25" pos:end="81:51"><expr pos:start="81:25" pos:end="81:51"><literal type="string" pos:start="81:25" pos:end="81:51">"/ptimer/oneshot policy=%s"</literal></expr></argument>, <argument pos:start="81:54" pos:end="81:64"><expr pos:start="81:54" pos:end="81:64"><name pos:start="81:54" pos:end="81:64">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="83:9" pos:end="83:15"><expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:15">ppolicy</name></expr></argument>, <argument pos:start="83:18" pos:end="83:30"><expr pos:start="83:18" pos:end="83:30"><name pos:start="83:18" pos:end="83:30">check_oneshot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="91:33"><expr pos:start="87:5" pos:end="91:32"><call pos:start="87:5" pos:end="91:32"><name pos:start="87:5" pos:end="87:24">g_test_add_data_func</name><argument_list pos:start="87:25" pos:end="91:32">(

        <argument pos:start="89:9" pos:end="89:66"><expr pos:start="89:9" pos:end="89:66"><call pos:start="89:9" pos:end="89:66"><name pos:start="89:9" pos:end="89:23">g_strdup_printf</name><argument_list pos:start="89:24" pos:end="89:66">(<argument pos:start="89:25" pos:end="89:52"><expr pos:start="89:25" pos:end="89:52"><literal type="string" pos:start="89:25" pos:end="89:52">"/ptimer/periodic policy=%s"</literal></expr></argument>, <argument pos:start="89:55" pos:end="89:65"><expr pos:start="89:55" pos:end="89:65"><name pos:start="89:55" pos:end="89:65">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="91:9" pos:end="91:15"><expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:15">ppolicy</name></expr></argument>, <argument pos:start="91:18" pos:end="91:31"><expr pos:start="91:18" pos:end="91:31"><name pos:start="91:18" pos:end="91:31">check_periodic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="99:47"><expr pos:start="95:5" pos:end="99:46"><call pos:start="95:5" pos:end="99:46"><name pos:start="95:5" pos:end="95:24">g_test_add_data_func</name><argument_list pos:start="95:25" pos:end="99:46">(

        <argument pos:start="97:9" pos:end="97:80"><expr pos:start="97:9" pos:end="97:80"><call pos:start="97:9" pos:end="97:80"><name pos:start="97:9" pos:end="97:23">g_strdup_printf</name><argument_list pos:start="97:24" pos:end="97:80">(<argument pos:start="97:25" pos:end="97:66"><expr pos:start="97:25" pos:end="97:66"><literal type="string" pos:start="97:25" pos:end="97:66">"/ptimer/on_the_fly_mode_change policy=%s"</literal></expr></argument>, <argument pos:start="97:69" pos:end="97:79"><expr pos:start="97:69" pos:end="97:79"><name pos:start="97:69" pos:end="97:79">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="99:9" pos:end="99:15"><expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:15">ppolicy</name></expr></argument>, <argument pos:start="99:18" pos:end="99:45"><expr pos:start="99:18" pos:end="99:45"><name pos:start="99:18" pos:end="99:45">check_on_the_fly_mode_change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="107:49"><expr pos:start="103:5" pos:end="107:48"><call pos:start="103:5" pos:end="107:48"><name pos:start="103:5" pos:end="103:24">g_test_add_data_func</name><argument_list pos:start="103:25" pos:end="107:48">(

        <argument pos:start="105:9" pos:end="105:82"><expr pos:start="105:9" pos:end="105:82"><call pos:start="105:9" pos:end="105:82"><name pos:start="105:9" pos:end="105:23">g_strdup_printf</name><argument_list pos:start="105:24" pos:end="105:82">(<argument pos:start="105:25" pos:end="105:68"><expr pos:start="105:25" pos:end="105:68"><literal type="string" pos:start="105:25" pos:end="105:68">"/ptimer/on_the_fly_period_change policy=%s"</literal></expr></argument>, <argument pos:start="105:71" pos:end="105:81"><expr pos:start="105:71" pos:end="105:81"><name pos:start="105:71" pos:end="105:81">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="107:9" pos:end="107:15"><expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:15">ppolicy</name></expr></argument>, <argument pos:start="107:18" pos:end="107:47"><expr pos:start="107:18" pos:end="107:47"><name pos:start="107:18" pos:end="107:47">check_on_the_fly_period_change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="115:47"><expr pos:start="111:5" pos:end="115:46"><call pos:start="111:5" pos:end="115:46"><name pos:start="111:5" pos:end="111:24">g_test_add_data_func</name><argument_list pos:start="111:25" pos:end="115:46">(

        <argument pos:start="113:9" pos:end="113:80"><expr pos:start="113:9" pos:end="113:80"><call pos:start="113:9" pos:end="113:80"><name pos:start="113:9" pos:end="113:23">g_strdup_printf</name><argument_list pos:start="113:24" pos:end="113:80">(<argument pos:start="113:25" pos:end="113:66"><expr pos:start="113:25" pos:end="113:66"><literal type="string" pos:start="113:25" pos:end="113:66">"/ptimer/on_the_fly_freq_change policy=%s"</literal></expr></argument>, <argument pos:start="113:69" pos:end="113:79"><expr pos:start="113:69" pos:end="113:79"><name pos:start="113:69" pos:end="113:79">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="115:9" pos:end="115:15"><expr pos:start="115:9" pos:end="115:15"><name pos:start="115:9" pos:end="115:15">ppolicy</name></expr></argument>, <argument pos:start="115:18" pos:end="115:45"><expr pos:start="115:18" pos:end="115:45"><name pos:start="115:18" pos:end="115:45">check_on_the_fly_freq_change</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="123:42"><expr pos:start="119:5" pos:end="123:41"><call pos:start="119:5" pos:end="123:41"><name pos:start="119:5" pos:end="119:24">g_test_add_data_func</name><argument_list pos:start="119:25" pos:end="123:41">(

        <argument pos:start="121:9" pos:end="121:75"><expr pos:start="121:9" pos:end="121:75"><call pos:start="121:9" pos:end="121:75"><name pos:start="121:9" pos:end="121:23">g_strdup_printf</name><argument_list pos:start="121:24" pos:end="121:75">(<argument pos:start="121:25" pos:end="121:61"><expr pos:start="121:25" pos:end="121:61"><literal type="string" pos:start="121:25" pos:end="121:61">"/ptimer/run_with_period_0 policy=%s"</literal></expr></argument>, <argument pos:start="121:64" pos:end="121:74"><expr pos:start="121:64" pos:end="121:74"><name pos:start="121:64" pos:end="121:74">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="123:9" pos:end="123:15"><expr pos:start="123:9" pos:end="123:15"><name pos:start="123:9" pos:end="123:15">ppolicy</name></expr></argument>, <argument pos:start="123:18" pos:end="123:40"><expr pos:start="123:18" pos:end="123:40"><name pos:start="123:18" pos:end="123:40">check_run_with_period_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="131:41"><expr pos:start="127:5" pos:end="131:40"><call pos:start="127:5" pos:end="131:40"><name pos:start="127:5" pos:end="127:24">g_test_add_data_func</name><argument_list pos:start="127:25" pos:end="131:40">(

        <argument pos:start="129:9" pos:end="129:74"><expr pos:start="129:9" pos:end="129:74"><call pos:start="129:9" pos:end="129:74"><name pos:start="129:9" pos:end="129:23">g_strdup_printf</name><argument_list pos:start="129:24" pos:end="129:74">(<argument pos:start="129:25" pos:end="129:60"><expr pos:start="129:25" pos:end="129:60"><literal type="string" pos:start="129:25" pos:end="129:60">"/ptimer/run_with_delta_0 policy=%s"</literal></expr></argument>, <argument pos:start="129:63" pos:end="129:73"><expr pos:start="129:63" pos:end="129:73"><name pos:start="129:63" pos:end="129:73">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="131:9" pos:end="131:15"><expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:15">ppolicy</name></expr></argument>, <argument pos:start="131:18" pos:end="131:39"><expr pos:start="131:18" pos:end="131:39"><name pos:start="131:18" pos:end="131:39">check_run_with_delta_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="139:45"><expr pos:start="135:5" pos:end="139:44"><call pos:start="135:5" pos:end="139:44"><name pos:start="135:5" pos:end="135:24">g_test_add_data_func</name><argument_list pos:start="135:25" pos:end="139:44">(

        <argument pos:start="137:9" pos:end="137:78"><expr pos:start="137:9" pos:end="137:78"><call pos:start="137:9" pos:end="137:78"><name pos:start="137:9" pos:end="137:23">g_strdup_printf</name><argument_list pos:start="137:24" pos:end="137:78">(<argument pos:start="137:25" pos:end="137:64"><expr pos:start="137:25" pos:end="137:64"><literal type="string" pos:start="137:25" pos:end="137:64">"/ptimer/periodic_with_load_0 policy=%s"</literal></expr></argument>, <argument pos:start="137:67" pos:end="137:77"><expr pos:start="137:67" pos:end="137:77"><name pos:start="137:67" pos:end="137:77">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="139:9" pos:end="139:15"><expr pos:start="139:9" pos:end="139:15"><name pos:start="139:9" pos:end="139:15">ppolicy</name></expr></argument>, <argument pos:start="139:18" pos:end="139:43"><expr pos:start="139:18" pos:end="139:43"><name pos:start="139:18" pos:end="139:43">check_periodic_with_load_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="147:44"><expr pos:start="143:5" pos:end="147:43"><call pos:start="143:5" pos:end="147:43"><name pos:start="143:5" pos:end="143:24">g_test_add_data_func</name><argument_list pos:start="143:25" pos:end="147:43">(

        <argument pos:start="145:9" pos:end="145:77"><expr pos:start="145:9" pos:end="145:77"><call pos:start="145:9" pos:end="145:77"><name pos:start="145:9" pos:end="145:23">g_strdup_printf</name><argument_list pos:start="145:24" pos:end="145:77">(<argument pos:start="145:25" pos:end="145:63"><expr pos:start="145:25" pos:end="145:63"><literal type="string" pos:start="145:25" pos:end="145:63">"/ptimer/oneshot_with_load_0 policy=%s"</literal></expr></argument>, <argument pos:start="145:66" pos:end="145:76"><expr pos:start="145:66" pos:end="145:76"><name pos:start="145:66" pos:end="145:76">policy_name</name></expr></argument>)</argument_list></call></expr></argument>,

        <argument pos:start="147:9" pos:end="147:15"><expr pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:15">ppolicy</name></expr></argument>, <argument pos:start="147:18" pos:end="147:42"><expr pos:start="147:18" pos:end="147:42"><name pos:start="147:18" pos:end="147:42">check_oneshot_with_load_0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
