<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13227.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">net_init_tap</name><parameter_list pos:start="1:17" pos:end="3:38">(<parameter pos:start="1:18" pos:end="1:45"><decl pos:start="1:18" pos:end="1:45"><type pos:start="1:18" pos:end="1:45"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:39">NetClientOptions</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">opts</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">name</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:37"><decl pos:start="3:18" pos:end="3:37"><type pos:start="3:18" pos:end="3:37"><name pos:start="3:18" pos:end="3:31">NetClientState</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:37">peer</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="295:1">{<block_content pos:start="7:5" pos:end="293:13">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:28"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:26">NetdevTapOptions</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:31">tap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>, <decl pos:start="9:13" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:20">vnet_hdr</name> <init pos:start="9:22" pos:end="9:24">= <expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">0</literal></expr></init></decl>, <decl pos:start="9:27" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:27">i</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr></init></decl>, <decl pos:start="9:34" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:39">queues</name></decl>;</decl_stmt>

    <comment type="block" pos:start="11:5" pos:end="11:39">/* for the no-fd, no-helper case */</comment>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">script</name> <init pos:start="13:24" pos:end="13:29">= <expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">NULL</name></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:32" pos:end="13:78">/* suppress wrong "uninit'd use" gcc warning */</comment>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:26">downscript</name> <init pos:start="15:28" pos:end="15:33">= <expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:27">vhostfdname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:20"><name pos:start="19:10" pos:end="19:15">ifname</name><index pos:start="19:16" pos:end="19:20">[<expr pos:start="19:17" pos:end="19:19"><literal type="number" pos:start="19:17" pos:end="19:19">128</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:53">(<argument pos:start="23:12" pos:end="23:52"><expr pos:start="23:12" pos:end="23:52"><name pos:start="23:12" pos:end="23:21"><name pos:start="23:12" pos:end="23:15">opts</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">kind</name></name> <operator pos:start="23:23" pos:end="23:24">==</operator> <name pos:start="23:26" pos:end="23:52">NET_CLIENT_OPTIONS_KIND_TAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:20"><expr pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">tap</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:19"><name pos:start="25:11" pos:end="25:14">opts</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:19">tap</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:10">queues</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <ternary pos:start="27:14" pos:end="27:46"><condition pos:start="27:14" pos:end="27:30"><expr pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:28"><name pos:start="27:14" pos:end="27:16">tap</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:28">has_queues</name></name></expr> ?</condition><then pos:start="27:32" pos:end="27:42"> <expr pos:start="27:32" pos:end="27:42"><name pos:start="27:32" pos:end="27:42"><name pos:start="27:32" pos:end="27:34">tap</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:42">queues</name></name></expr> </then><else pos:start="27:44" pos:end="27:46">: <expr pos:start="27:46" pos:end="27:46"><literal type="number" pos:start="27:46" pos:end="27:46">1</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:15">vhostfdname</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <ternary pos:start="29:19" pos:end="29:56"><condition pos:start="29:19" pos:end="29:36"><expr pos:start="29:19" pos:end="29:34"><name pos:start="29:19" pos:end="29:34"><name pos:start="29:19" pos:end="29:21">tap</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:34">has_vhostfd</name></name></expr> ?</condition><then pos:start="29:38" pos:end="29:49"> <expr pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:40">tap</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:49">vhostfd</name></name></expr> </then><else pos:start="29:51" pos:end="29:56">: <expr pos:start="29:53" pos:end="29:56"><name pos:start="29:53" pos:end="29:56">NULL</name></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="35:43">/* QEMU vlans does not support multiqueue tap, in this case peer is set.

     * For -netdev, peer is always NULL. */</comment>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:71">(<expr pos:start="37:9" pos:end="37:70"><name pos:start="37:9" pos:end="37:12">peer</name> <operator pos:start="37:14" pos:end="37:15">&amp;&amp;</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:20">tap</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:32">has_queues</name></name> <operator pos:start="37:34" pos:end="37:35">||</operator> <name pos:start="37:37" pos:end="37:48"><name pos:start="37:37" pos:end="37:39">tap</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:48">has_fds</name></name> <operator pos:start="37:50" pos:end="37:51">||</operator> <name pos:start="37:53" pos:end="37:69"><name pos:start="37:53" pos:end="37:55">tap</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:69">has_vhostfds</name></name><operator pos:start="37:70" pos:end="37:70">)</operator></expr>)</condition> <block pos:start="37:73" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:18">

        <expr_stmt pos:start="39:9" pos:end="39:70"><expr pos:start="39:9" pos:end="39:69"><call pos:start="39:9" pos:end="39:69"><name pos:start="39:9" pos:end="39:20">error_report</name><argument_list pos:start="39:21" pos:end="39:69">(<argument pos:start="39:22" pos:end="39:68"><expr pos:start="39:22" pos:end="39:68"><literal type="string" pos:start="39:22" pos:end="39:68">"Multiqueue tap cannot be used with QEMU vlans"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="289:5"><if pos:start="47:5" pos:end="93:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:11">tap</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:19">has_fd</name></name></expr>)</condition> <block pos:start="47:22" pos:end="93:5">{<block_content pos:start="49:9" pos:end="91:9">

        <if_stmt pos:start="49:9" pos:end="61:9"><if pos:start="49:9" pos:end="61:9">if <condition pos:start="49:12" pos:end="53:25">(<expr pos:start="49:13" pos:end="53:24"><name pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:15">tap</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:27">has_ifname</name></name> <operator pos:start="49:29" pos:end="49:30">||</operator> <name pos:start="49:32" pos:end="49:46"><name pos:start="49:32" pos:end="49:34">tap</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:46">has_script</name></name> <operator pos:start="49:48" pos:end="49:49">||</operator> <name pos:start="49:51" pos:end="49:69"><name pos:start="49:51" pos:end="49:53">tap</name><operator pos:start="49:54" pos:end="49:55">-&gt;</operator><name pos:start="49:56" pos:end="49:69">has_downscript</name></name> <operator pos:start="49:71" pos:end="49:72">||</operator>

            <name pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:15">tap</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:29">has_vnet_hdr</name></name> <operator pos:start="51:31" pos:end="51:32">||</operator> <name pos:start="51:34" pos:end="51:48"><name pos:start="51:34" pos:end="51:36">tap</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:48">has_helper</name></name> <operator pos:start="51:50" pos:end="51:51">||</operator> <name pos:start="51:53" pos:end="51:67"><name pos:start="51:53" pos:end="51:55">tap</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:67">has_queues</name></name> <operator pos:start="51:69" pos:end="51:70">||</operator>

            <name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:15">tap</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:24">has_fds</name></name></expr>)</condition> <block pos:start="53:27" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:22">

            <expr_stmt pos:start="55:13" pos:end="57:76"><expr pos:start="55:13" pos:end="57:75"><call pos:start="55:13" pos:end="57:75"><name pos:start="55:13" pos:end="55:24">error_report</name><argument_list pos:start="55:25" pos:end="57:75">(<argument pos:start="55:26" pos:end="57:74"><expr pos:start="55:26" pos:end="57:74"><literal type="string" pos:start="55:26" pos:end="55:69">"ifname=, script=, downscript=, vnet_hdr=, "</literal>

                         <literal type="string" pos:start="57:26" pos:end="57:74">"helper=, queues=, and fds= are invalid with fd="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:55"><expr pos:start="65:9" pos:end="65:54"><name pos:start="65:9" pos:end="65:10">fd</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:54"><name pos:start="65:14" pos:end="65:36">monitor_handle_fd_param</name><argument_list pos:start="65:37" pos:end="65:54">(<argument pos:start="65:38" pos:end="65:44"><expr pos:start="65:38" pos:end="65:44"><name pos:start="65:38" pos:end="65:44">cur_mon</name></expr></argument>, <argument pos:start="65:47" pos:end="65:53"><expr pos:start="65:47" pos:end="65:53"><name pos:start="65:47" pos:end="65:53"><name pos:start="65:47" pos:end="65:49">tap</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:53">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:14">fd</name> <operator pos:start="67:16" pos:end="67:17">==</operator> <operator pos:start="67:19" pos:end="67:19">-</operator><literal type="number" pos:start="67:20" pos:end="67:20">1</literal></expr>)</condition> <block pos:start="67:23" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:22">

            <return pos:start="69:13" pos:end="69:22">return <expr pos:start="69:20" pos:end="69:21"><operator pos:start="69:20" pos:end="69:20">-</operator><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><call pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:13">fcntl</name><argument_list pos:start="75:14" pos:end="75:38">(<argument pos:start="75:15" pos:end="75:16"><expr pos:start="75:15" pos:end="75:16"><name pos:start="75:15" pos:end="75:16">fd</name></expr></argument>, <argument pos:start="75:19" pos:end="75:25"><expr pos:start="75:19" pos:end="75:25"><name pos:start="75:19" pos:end="75:25">F_SETFL</name></expr></argument>, <argument pos:start="75:28" pos:end="75:37"><expr pos:start="75:28" pos:end="75:37"><name pos:start="75:28" pos:end="75:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:16">vnet_hdr</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:41"><name pos:start="79:20" pos:end="79:37">tap_probe_vnet_hdr</name><argument_list pos:start="79:38" pos:end="79:41">(<argument pos:start="79:39" pos:end="79:40"><expr pos:start="79:39" pos:end="79:40"><name pos:start="79:39" pos:end="79:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="87:56">(<expr pos:start="83:13" pos:end="87:55"><call pos:start="83:13" pos:end="87:55"><name pos:start="83:13" pos:end="83:28">net_init_tap_one</name><argument_list pos:start="83:29" pos:end="87:55">(<argument pos:start="83:30" pos:end="83:32"><expr pos:start="83:30" pos:end="83:32"><name pos:start="83:30" pos:end="83:32">tap</name></expr></argument>, <argument pos:start="83:35" pos:end="83:38"><expr pos:start="83:35" pos:end="83:38"><name pos:start="83:35" pos:end="83:38">peer</name></expr></argument>, <argument pos:start="83:41" pos:end="83:45"><expr pos:start="83:41" pos:end="83:45"><literal type="string" pos:start="83:41" pos:end="83:45">"tap"</literal></expr></argument>, <argument pos:start="83:48" pos:end="83:51"><expr pos:start="83:48" pos:end="83:51"><name pos:start="83:48" pos:end="83:51">name</name></expr></argument>, <argument pos:start="83:54" pos:end="83:57"><expr pos:start="83:54" pos:end="83:57"><name pos:start="83:54" pos:end="83:57">NULL</name></expr></argument>,

                             <argument pos:start="85:30" pos:end="85:35"><expr pos:start="85:30" pos:end="85:35"><name pos:start="85:30" pos:end="85:35">script</name></expr></argument>, <argument pos:start="85:38" pos:end="85:47"><expr pos:start="85:38" pos:end="85:47"><name pos:start="85:38" pos:end="85:47">downscript</name></expr></argument>,

                             <argument pos:start="87:30" pos:end="87:40"><expr pos:start="87:30" pos:end="87:40"><name pos:start="87:30" pos:end="87:40">vhostfdname</name></expr></argument>, <argument pos:start="87:43" pos:end="87:50"><expr pos:start="87:43" pos:end="87:50"><name pos:start="87:43" pos:end="87:50">vnet_hdr</name></expr></argument>, <argument pos:start="87:53" pos:end="87:54"><expr pos:start="87:53" pos:end="87:54"><name pos:start="87:53" pos:end="87:54">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:58" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:22">

            <return pos:start="89:13" pos:end="89:22">return <expr pos:start="89:20" pos:end="89:21"><operator pos:start="89:20" pos:end="89:20">-</operator><literal type="number" pos:start="89:21" pos:end="89:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="93:7" pos:end="183:5">else if <condition pos:start="93:15" pos:end="93:28">(<expr pos:start="93:16" pos:end="93:27"><name pos:start="93:16" pos:end="93:27"><name pos:start="93:16" pos:end="93:18">tap</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:27">has_fds</name></name></expr>)</condition> <block pos:start="93:30" pos:end="183:5">{<block_content pos:start="95:9" pos:end="181:9">

        <decl_stmt pos:start="95:9" pos:end="95:34"><decl pos:start="95:9" pos:end="95:33"><type pos:start="95:9" pos:end="95:14"><name pos:start="95:9" pos:end="95:12">char</name> <modifier pos:start="95:14" pos:end="95:14">*</modifier></type><name pos:start="95:15" pos:end="95:33"><name pos:start="95:15" pos:end="95:17">fds</name><index pos:start="95:18" pos:end="95:33">[<expr pos:start="95:19" pos:end="95:32"><name pos:start="95:19" pos:end="95:32">MAX_TAP_QUEUES</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:40"><decl pos:start="97:9" pos:end="97:39"><type pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:12">char</name> <modifier pos:start="97:14" pos:end="97:14">*</modifier></type><name pos:start="97:15" pos:end="97:39"><name pos:start="97:15" pos:end="97:23">vhost_fds</name><index pos:start="97:24" pos:end="97:39">[<expr pos:start="97:25" pos:end="97:38"><name pos:start="97:25" pos:end="97:38">MAX_TAP_QUEUES</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:26"><decl pos:start="99:9" pos:end="99:16"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:16">nfds</name></decl>, <decl pos:start="99:19" pos:end="99:25"><type ref="prev" pos:start="99:9" pos:end="99:11"/><name pos:start="99:19" pos:end="99:25">nvhosts</name></decl>;</decl_stmt>



        <if_stmt pos:start="103:9" pos:end="115:9"><if pos:start="103:9" pos:end="115:9">if <condition pos:start="103:12" pos:end="107:24">(<expr pos:start="103:13" pos:end="107:23"><name pos:start="103:13" pos:end="103:27"><name pos:start="103:13" pos:end="103:15">tap</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:27">has_ifname</name></name> <operator pos:start="103:29" pos:end="103:30">||</operator> <name pos:start="103:32" pos:end="103:46"><name pos:start="103:32" pos:end="103:34">tap</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:46">has_script</name></name> <operator pos:start="103:48" pos:end="103:49">||</operator> <name pos:start="103:51" pos:end="103:69"><name pos:start="103:51" pos:end="103:53">tap</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:69">has_downscript</name></name> <operator pos:start="103:71" pos:end="103:72">||</operator>

            <name pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:15">tap</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:29">has_vnet_hdr</name></name> <operator pos:start="105:31" pos:end="105:32">||</operator> <name pos:start="105:34" pos:end="105:48"><name pos:start="105:34" pos:end="105:36">tap</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:48">has_helper</name></name> <operator pos:start="105:50" pos:end="105:51">||</operator> <name pos:start="105:53" pos:end="105:67"><name pos:start="105:53" pos:end="105:55">tap</name><operator pos:start="105:56" pos:end="105:57">-&gt;</operator><name pos:start="105:58" pos:end="105:67">has_queues</name></name> <operator pos:start="105:69" pos:end="105:70">||</operator>

            <name pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:15">tap</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:23">has_fd</name></name></expr>)</condition> <block pos:start="107:26" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:22">

            <expr_stmt pos:start="109:13" pos:end="111:76"><expr pos:start="109:13" pos:end="111:75"><call pos:start="109:13" pos:end="111:75"><name pos:start="109:13" pos:end="109:24">error_report</name><argument_list pos:start="109:25" pos:end="111:75">(<argument pos:start="109:26" pos:end="111:74"><expr pos:start="109:26" pos:end="111:74"><literal type="string" pos:start="109:26" pos:end="109:69">"ifname=, script=, downscript=, vnet_hdr=, "</literal>

                         <literal type="string" pos:start="111:26" pos:end="111:74">"helper=, queues=, and fd= are invalid with fds="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:22">return <expr pos:start="113:20" pos:end="113:21"><operator pos:start="113:20" pos:end="113:20">-</operator><literal type="number" pos:start="113:21" pos:end="113:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="119:9" pos:end="119:54"><expr pos:start="119:9" pos:end="119:53"><name pos:start="119:9" pos:end="119:12">nfds</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <call pos:start="119:16" pos:end="119:53"><name pos:start="119:16" pos:end="119:22">get_fds</name><argument_list pos:start="119:23" pos:end="119:53">(<argument pos:start="119:24" pos:end="119:31"><expr pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:31"><name pos:start="119:24" pos:end="119:26">tap</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:31">fds</name></name></expr></argument>, <argument pos:start="119:34" pos:end="119:36"><expr pos:start="119:34" pos:end="119:36"><name pos:start="119:34" pos:end="119:36">fds</name></expr></argument>, <argument pos:start="119:39" pos:end="119:52"><expr pos:start="119:39" pos:end="119:52"><name pos:start="119:39" pos:end="119:52">MAX_TAP_QUEUES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="135:9"><if pos:start="121:9" pos:end="135:9">if <condition pos:start="121:12" pos:end="121:30">(<expr pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:29"><name pos:start="121:13" pos:end="121:15">tap</name><operator pos:start="121:16" pos:end="121:17">-&gt;</operator><name pos:start="121:18" pos:end="121:29">has_vhostfds</name></name></expr>)</condition> <block pos:start="121:32" pos:end="135:9">{<block_content pos:start="123:13" pos:end="133:13">

            <expr_stmt pos:start="123:13" pos:end="123:72"><expr pos:start="123:13" pos:end="123:71"><name pos:start="123:13" pos:end="123:19">nvhosts</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <call pos:start="123:23" pos:end="123:71"><name pos:start="123:23" pos:end="123:29">get_fds</name><argument_list pos:start="123:30" pos:end="123:71">(<argument pos:start="123:31" pos:end="123:43"><expr pos:start="123:31" pos:end="123:43"><name pos:start="123:31" pos:end="123:43"><name pos:start="123:31" pos:end="123:33">tap</name><operator pos:start="123:34" pos:end="123:35">-&gt;</operator><name pos:start="123:36" pos:end="123:43">vhostfds</name></name></expr></argument>, <argument pos:start="123:46" pos:end="123:54"><expr pos:start="123:46" pos:end="123:54"><name pos:start="123:46" pos:end="123:54">vhost_fds</name></expr></argument>, <argument pos:start="123:57" pos:end="123:70"><expr pos:start="123:57" pos:end="123:70"><name pos:start="123:57" pos:end="123:70">MAX_TAP_QUEUES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if <condition pos:start="125:16" pos:end="125:32">(<expr pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:20">nfds</name> <operator pos:start="125:22" pos:end="125:23">!=</operator> <name pos:start="125:25" pos:end="125:31">nvhosts</name></expr>)</condition> <block pos:start="125:34" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:26">

                <expr_stmt pos:start="127:17" pos:end="129:58"><expr pos:start="127:17" pos:end="129:57"><call pos:start="127:17" pos:end="129:57"><name pos:start="127:17" pos:end="127:28">error_report</name><argument_list pos:start="127:29" pos:end="129:57">(<argument pos:start="127:30" pos:end="129:56"><expr pos:start="127:30" pos:end="129:56"><literal type="string" pos:start="127:30" pos:end="127:75">"The number of fds passed does not match the "</literal>

                             <literal type="string" pos:start="129:30" pos:end="129:56">"number of vhostfds passed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="139:9" pos:end="181:9">for <control pos:start="139:13" pos:end="139:34">(<init pos:start="139:14" pos:end="139:19"><expr pos:start="139:14" pos:end="139:18"><name pos:start="139:14" pos:end="139:14">i</name> <operator pos:start="139:16" pos:end="139:16">=</operator> <literal type="number" pos:start="139:18" pos:end="139:18">0</literal></expr>;</init> <condition pos:start="139:21" pos:end="139:29"><expr pos:start="139:21" pos:end="139:28"><name pos:start="139:21" pos:end="139:21">i</name> <operator pos:start="139:23" pos:end="139:23">&lt;</operator> <name pos:start="139:25" pos:end="139:28">nfds</name></expr>;</condition> <incr pos:start="139:31" pos:end="139:33"><expr pos:start="139:31" pos:end="139:33"><name pos:start="139:31" pos:end="139:31">i</name><operator pos:start="139:32" pos:end="139:33">++</operator></expr></incr>)</control> <block pos:start="139:36" pos:end="181:9">{<block_content pos:start="141:13" pos:end="179:13">

            <expr_stmt pos:start="141:13" pos:end="141:58"><expr pos:start="141:13" pos:end="141:57"><name pos:start="141:13" pos:end="141:14">fd</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <call pos:start="141:18" pos:end="141:57"><name pos:start="141:18" pos:end="141:40">monitor_handle_fd_param</name><argument_list pos:start="141:41" pos:end="141:57">(<argument pos:start="141:42" pos:end="141:48"><expr pos:start="141:42" pos:end="141:48"><name pos:start="141:42" pos:end="141:48">cur_mon</name></expr></argument>, <argument pos:start="141:51" pos:end="141:56"><expr pos:start="141:51" pos:end="141:56"><name pos:start="141:51" pos:end="141:56"><name pos:start="141:51" pos:end="141:53">fds</name><index pos:start="141:54" pos:end="141:56">[<expr pos:start="141:55" pos:end="141:55"><name pos:start="141:55" pos:end="141:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="147:13"><if pos:start="143:13" pos:end="147:13">if <condition pos:start="143:16" pos:end="143:25">(<expr pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:18">fd</name> <operator pos:start="143:20" pos:end="143:21">==</operator> <operator pos:start="143:23" pos:end="143:23">-</operator><literal type="number" pos:start="143:24" pos:end="143:24">1</literal></expr>)</condition> <block pos:start="143:27" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:26">

                <return pos:start="145:17" pos:end="145:26">return <expr pos:start="145:24" pos:end="145:25"><operator pos:start="145:24" pos:end="145:24">-</operator><literal type="number" pos:start="145:25" pos:end="145:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="151:13" pos:end="151:43"><expr pos:start="151:13" pos:end="151:42"><call pos:start="151:13" pos:end="151:42"><name pos:start="151:13" pos:end="151:17">fcntl</name><argument_list pos:start="151:18" pos:end="151:42">(<argument pos:start="151:19" pos:end="151:20"><expr pos:start="151:19" pos:end="151:20"><name pos:start="151:19" pos:end="151:20">fd</name></expr></argument>, <argument pos:start="151:23" pos:end="151:29"><expr pos:start="151:23" pos:end="151:29"><name pos:start="151:23" pos:end="151:29">F_SETFL</name></expr></argument>, <argument pos:start="151:32" pos:end="151:41"><expr pos:start="151:32" pos:end="151:41"><name pos:start="151:32" pos:end="151:41">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="155:13" pos:end="165:13"><if pos:start="155:13" pos:end="159:13">if <condition pos:start="155:16" pos:end="155:23">(<expr pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:17">i</name> <operator pos:start="155:19" pos:end="155:20">==</operator> <literal type="number" pos:start="155:22" pos:end="155:22">0</literal></expr>)</condition> <block pos:start="155:25" pos:end="159:13">{<block_content pos:start="157:17" pos:end="157:50">

                <expr_stmt pos:start="157:17" pos:end="157:50"><expr pos:start="157:17" pos:end="157:49"><name pos:start="157:17" pos:end="157:24">vnet_hdr</name> <operator pos:start="157:26" pos:end="157:26">=</operator> <call pos:start="157:28" pos:end="157:49"><name pos:start="157:28" pos:end="157:45">tap_probe_vnet_hdr</name><argument_list pos:start="157:46" pos:end="157:49">(<argument pos:start="157:47" pos:end="157:48"><expr pos:start="157:47" pos:end="157:48"><name pos:start="157:47" pos:end="157:48">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="159:15" pos:end="165:13">else if <condition pos:start="159:23" pos:end="159:58">(<expr pos:start="159:24" pos:end="159:57"><name pos:start="159:24" pos:end="159:31">vnet_hdr</name> <operator pos:start="159:33" pos:end="159:34">!=</operator> <call pos:start="159:36" pos:end="159:57"><name pos:start="159:36" pos:end="159:53">tap_probe_vnet_hdr</name><argument_list pos:start="159:54" pos:end="159:57">(<argument pos:start="159:55" pos:end="159:56"><expr pos:start="159:55" pos:end="159:56"><name pos:start="159:55" pos:end="159:56">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:60" pos:end="165:13">{<block_content pos:start="161:17" pos:end="163:26">

                <expr_stmt pos:start="161:17" pos:end="161:77"><expr pos:start="161:17" pos:end="161:76"><call pos:start="161:17" pos:end="161:76"><name pos:start="161:17" pos:end="161:28">error_report</name><argument_list pos:start="161:29" pos:end="161:76">(<argument pos:start="161:30" pos:end="161:75"><expr pos:start="161:30" pos:end="161:75"><literal type="string" pos:start="161:30" pos:end="161:75">"vnet_hdr not consistent across given tap fds"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="163:17" pos:end="163:26">return <expr pos:start="163:24" pos:end="163:25"><operator pos:start="163:24" pos:end="163:24">-</operator><literal type="number" pos:start="163:25" pos:end="163:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="169:13" pos:end="179:13"><if pos:start="169:13" pos:end="179:13">if <condition pos:start="169:16" pos:end="175:47">(<expr pos:start="169:17" pos:end="175:46"><call pos:start="169:17" pos:end="175:46"><name pos:start="169:17" pos:end="169:32">net_init_tap_one</name><argument_list pos:start="169:33" pos:end="175:46">(<argument pos:start="169:34" pos:end="169:36"><expr pos:start="169:34" pos:end="169:36"><name pos:start="169:34" pos:end="169:36">tap</name></expr></argument>, <argument pos:start="169:39" pos:end="169:42"><expr pos:start="169:39" pos:end="169:42"><name pos:start="169:39" pos:end="169:42">peer</name></expr></argument>, <argument pos:start="169:45" pos:end="169:49"><expr pos:start="169:45" pos:end="169:49"><literal type="string" pos:start="169:45" pos:end="169:49">"tap"</literal></expr></argument>, <argument pos:start="169:52" pos:end="169:55"><expr pos:start="169:52" pos:end="169:55"><name pos:start="169:52" pos:end="169:55">name</name></expr></argument>, <argument pos:start="169:58" pos:end="169:63"><expr pos:start="169:58" pos:end="169:63"><name pos:start="169:58" pos:end="169:63">ifname</name></expr></argument>,

                                 <argument pos:start="171:34" pos:end="171:39"><expr pos:start="171:34" pos:end="171:39"><name pos:start="171:34" pos:end="171:39">script</name></expr></argument>, <argument pos:start="171:42" pos:end="171:51"><expr pos:start="171:42" pos:end="171:51"><name pos:start="171:42" pos:end="171:51">downscript</name></expr></argument>,

                                 <argument pos:start="173:34" pos:end="173:72"><expr pos:start="173:34" pos:end="173:72"><ternary pos:start="173:34" pos:end="173:72"><condition pos:start="173:34" pos:end="173:52"><expr pos:start="173:34" pos:end="173:50"><name pos:start="173:34" pos:end="173:50"><name pos:start="173:34" pos:end="173:36">tap</name><operator pos:start="173:37" pos:end="173:38">-&gt;</operator><name pos:start="173:39" pos:end="173:50">has_vhostfds</name></name></expr> ?</condition><then pos:start="173:54" pos:end="173:65"> <expr pos:start="173:54" pos:end="173:65"><name pos:start="173:54" pos:end="173:65"><name pos:start="173:54" pos:end="173:62">vhost_fds</name><index pos:start="173:63" pos:end="173:65">[<expr pos:start="173:64" pos:end="173:64"><name pos:start="173:64" pos:end="173:64">i</name></expr>]</index></name></expr> </then><else pos:start="173:67" pos:end="173:72">: <expr pos:start="173:69" pos:end="173:72"><name pos:start="173:69" pos:end="173:72">NULL</name></expr></else></ternary></expr></argument>,

                                 <argument pos:start="175:34" pos:end="175:41"><expr pos:start="175:34" pos:end="175:41"><name pos:start="175:34" pos:end="175:41">vnet_hdr</name></expr></argument>, <argument pos:start="175:44" pos:end="175:45"><expr pos:start="175:44" pos:end="175:45"><name pos:start="175:44" pos:end="175:45">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="175:49" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:26">

                <return pos:start="177:17" pos:end="177:26">return <expr pos:start="177:24" pos:end="177:25"><operator pos:start="177:24" pos:end="177:24">-</operator><literal type="number" pos:start="177:25" pos:end="177:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="183:7" pos:end="225:5">else if <condition pos:start="183:15" pos:end="183:31">(<expr pos:start="183:16" pos:end="183:30"><name pos:start="183:16" pos:end="183:30"><name pos:start="183:16" pos:end="183:18">tap</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:30">has_helper</name></name></expr>)</condition> <block pos:start="183:33" pos:end="225:5">{<block_content pos:start="185:9" pos:end="223:9">

        <if_stmt pos:start="185:9" pos:end="195:9"><if pos:start="185:9" pos:end="195:9">if <condition pos:start="185:12" pos:end="187:65">(<expr pos:start="185:13" pos:end="187:64"><name pos:start="185:13" pos:end="185:27"><name pos:start="185:13" pos:end="185:15">tap</name><operator pos:start="185:16" pos:end="185:17">-&gt;</operator><name pos:start="185:18" pos:end="185:27">has_ifname</name></name> <operator pos:start="185:29" pos:end="185:30">||</operator> <name pos:start="185:32" pos:end="185:46"><name pos:start="185:32" pos:end="185:34">tap</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:46">has_script</name></name> <operator pos:start="185:48" pos:end="185:49">||</operator> <name pos:start="185:51" pos:end="185:69"><name pos:start="185:51" pos:end="185:53">tap</name><operator pos:start="185:54" pos:end="185:55">-&gt;</operator><name pos:start="185:56" pos:end="185:69">has_downscript</name></name> <operator pos:start="185:71" pos:end="185:72">||</operator>

            <name pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:15">tap</name><operator pos:start="187:16" pos:end="187:17">-&gt;</operator><name pos:start="187:18" pos:end="187:29">has_vnet_hdr</name></name> <operator pos:start="187:31" pos:end="187:32">||</operator> <name pos:start="187:34" pos:end="187:48"><name pos:start="187:34" pos:end="187:36">tap</name><operator pos:start="187:37" pos:end="187:38">-&gt;</operator><name pos:start="187:39" pos:end="187:48">has_queues</name></name> <operator pos:start="187:50" pos:end="187:51">||</operator> <name pos:start="187:53" pos:end="187:64"><name pos:start="187:53" pos:end="187:55">tap</name><operator pos:start="187:56" pos:end="187:57">-&gt;</operator><name pos:start="187:58" pos:end="187:64">has_fds</name></name></expr>)</condition> <block pos:start="187:67" pos:end="195:9">{<block_content pos:start="189:13" pos:end="193:22">

            <expr_stmt pos:start="189:13" pos:end="191:71"><expr pos:start="189:13" pos:end="191:70"><call pos:start="189:13" pos:end="191:70"><name pos:start="189:13" pos:end="189:24">error_report</name><argument_list pos:start="189:25" pos:end="191:70">(<argument pos:start="189:26" pos:end="191:69"><expr pos:start="189:26" pos:end="191:69"><literal type="string" pos:start="189:26" pos:end="189:72">"ifname=, script=, downscript=, and vnet_hdr= "</literal>

                         <literal type="string" pos:start="191:26" pos:end="191:69">"queues=, and fds= are invalid with helper="</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="193:13" pos:end="193:22">return <expr pos:start="193:20" pos:end="193:21"><operator pos:start="193:20" pos:end="193:20">-</operator><literal type="number" pos:start="193:21" pos:end="193:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="199:9" pos:end="199:74"><expr pos:start="199:9" pos:end="199:73"><name pos:start="199:9" pos:end="199:10">fd</name> <operator pos:start="199:12" pos:end="199:12">=</operator> <call pos:start="199:14" pos:end="199:73"><name pos:start="199:14" pos:end="199:34">net_bridge_run_helper</name><argument_list pos:start="199:35" pos:end="199:73">(<argument pos:start="199:36" pos:end="199:46"><expr pos:start="199:36" pos:end="199:46"><name pos:start="199:36" pos:end="199:46"><name pos:start="199:36" pos:end="199:38">tap</name><operator pos:start="199:39" pos:end="199:40">-&gt;</operator><name pos:start="199:41" pos:end="199:46">helper</name></name></expr></argument>, <argument pos:start="199:49" pos:end="199:72"><expr pos:start="199:49" pos:end="199:72"><name pos:start="199:49" pos:end="199:72">DEFAULT_BRIDGE_INTERFACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="205:9"><if pos:start="201:9" pos:end="205:9">if <condition pos:start="201:12" pos:end="201:21">(<expr pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:14">fd</name> <operator pos:start="201:16" pos:end="201:17">==</operator> <operator pos:start="201:19" pos:end="201:19">-</operator><literal type="number" pos:start="201:20" pos:end="201:20">1</literal></expr>)</condition> <block pos:start="201:23" pos:end="205:9">{<block_content pos:start="203:13" pos:end="203:22">

            <return pos:start="203:13" pos:end="203:22">return <expr pos:start="203:20" pos:end="203:21"><operator pos:start="203:20" pos:end="203:20">-</operator><literal type="number" pos:start="203:21" pos:end="203:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:39"><expr pos:start="209:9" pos:end="209:38"><call pos:start="209:9" pos:end="209:38"><name pos:start="209:9" pos:end="209:13">fcntl</name><argument_list pos:start="209:14" pos:end="209:38">(<argument pos:start="209:15" pos:end="209:16"><expr pos:start="209:15" pos:end="209:16"><name pos:start="209:15" pos:end="209:16">fd</name></expr></argument>, <argument pos:start="209:19" pos:end="209:25"><expr pos:start="209:19" pos:end="209:25"><name pos:start="209:19" pos:end="209:25">F_SETFL</name></expr></argument>, <argument pos:start="209:28" pos:end="209:37"><expr pos:start="209:28" pos:end="209:37"><name pos:start="209:28" pos:end="209:37">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:42"><expr pos:start="211:9" pos:end="211:41"><name pos:start="211:9" pos:end="211:16">vnet_hdr</name> <operator pos:start="211:18" pos:end="211:18">=</operator> <call pos:start="211:20" pos:end="211:41"><name pos:start="211:20" pos:end="211:37">tap_probe_vnet_hdr</name><argument_list pos:start="211:38" pos:end="211:41">(<argument pos:start="211:39" pos:end="211:40"><expr pos:start="211:39" pos:end="211:40"><name pos:start="211:39" pos:end="211:40">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="215:9" pos:end="223:9"><if pos:start="215:9" pos:end="223:9">if <condition pos:start="215:12" pos:end="219:43">(<expr pos:start="215:13" pos:end="219:42"><call pos:start="215:13" pos:end="219:42"><name pos:start="215:13" pos:end="215:28">net_init_tap_one</name><argument_list pos:start="215:29" pos:end="219:42">(<argument pos:start="215:30" pos:end="215:32"><expr pos:start="215:30" pos:end="215:32"><name pos:start="215:30" pos:end="215:32">tap</name></expr></argument>, <argument pos:start="215:35" pos:end="215:38"><expr pos:start="215:35" pos:end="215:38"><name pos:start="215:35" pos:end="215:38">peer</name></expr></argument>, <argument pos:start="215:41" pos:end="215:48"><expr pos:start="215:41" pos:end="215:48"><literal type="string" pos:start="215:41" pos:end="215:48">"bridge"</literal></expr></argument>, <argument pos:start="215:51" pos:end="215:54"><expr pos:start="215:51" pos:end="215:54"><name pos:start="215:51" pos:end="215:54">name</name></expr></argument>, <argument pos:start="215:57" pos:end="215:62"><expr pos:start="215:57" pos:end="215:62"><name pos:start="215:57" pos:end="215:62">ifname</name></expr></argument>,

                             <argument pos:start="217:30" pos:end="217:35"><expr pos:start="217:30" pos:end="217:35"><name pos:start="217:30" pos:end="217:35">script</name></expr></argument>, <argument pos:start="217:38" pos:end="217:47"><expr pos:start="217:38" pos:end="217:47"><name pos:start="217:38" pos:end="217:47">downscript</name></expr></argument>, <argument pos:start="217:50" pos:end="217:60"><expr pos:start="217:50" pos:end="217:60"><name pos:start="217:50" pos:end="217:60">vhostfdname</name></expr></argument>,

                             <argument pos:start="219:30" pos:end="219:37"><expr pos:start="219:30" pos:end="219:37"><name pos:start="219:30" pos:end="219:37">vnet_hdr</name></expr></argument>, <argument pos:start="219:40" pos:end="219:41"><expr pos:start="219:40" pos:end="219:41"><name pos:start="219:40" pos:end="219:41">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="219:45" pos:end="223:9">{<block_content pos:start="221:13" pos:end="221:22">

            <return pos:start="221:13" pos:end="221:22">return <expr pos:start="221:20" pos:end="221:21"><operator pos:start="221:20" pos:end="221:20">-</operator><literal type="number" pos:start="221:21" pos:end="221:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="225:7" pos:end="289:5">else <block pos:start="225:12" pos:end="289:5">{<block_content pos:start="227:9" pos:end="287:9">

        <expr_stmt pos:start="227:9" pos:end="227:72"><expr pos:start="227:9" pos:end="227:71"><name pos:start="227:9" pos:end="227:14">script</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <ternary pos:start="227:18" pos:end="227:71"><condition pos:start="227:18" pos:end="227:34"><expr pos:start="227:18" pos:end="227:32"><name pos:start="227:18" pos:end="227:32"><name pos:start="227:18" pos:end="227:20">tap</name><operator pos:start="227:21" pos:end="227:22">-&gt;</operator><name pos:start="227:23" pos:end="227:32">has_script</name></name></expr> ?</condition><then pos:start="227:36" pos:end="227:46"> <expr pos:start="227:36" pos:end="227:46"><name pos:start="227:36" pos:end="227:46"><name pos:start="227:36" pos:end="227:38">tap</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:46">script</name></name></expr> </then><else pos:start="227:48" pos:end="227:71">: <expr pos:start="227:50" pos:end="227:71"><name pos:start="227:50" pos:end="227:71">DEFAULT_NETWORK_SCRIPT</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="231:40"><expr pos:start="229:9" pos:end="231:39"><name pos:start="229:9" pos:end="229:18">downscript</name> <operator pos:start="229:20" pos:end="229:20">=</operator> <ternary pos:start="229:22" pos:end="231:39"><condition pos:start="229:22" pos:end="229:42"><expr pos:start="229:22" pos:end="229:40"><name pos:start="229:22" pos:end="229:40"><name pos:start="229:22" pos:end="229:24">tap</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:40">has_downscript</name></name></expr> ?</condition><then pos:start="229:44" pos:end="229:58"> <expr pos:start="229:44" pos:end="229:58"><name pos:start="229:44" pos:end="229:58"><name pos:start="229:44" pos:end="229:46">tap</name><operator pos:start="229:47" pos:end="229:48">-&gt;</operator><name pos:start="229:49" pos:end="229:58">downscript</name></name></expr> </then><else pos:start="229:60" pos:end="231:39">:

            <expr pos:start="231:13" pos:end="231:39"><name pos:start="231:13" pos:end="231:39">DEFAULT_NETWORK_DOWN_SCRIPT</name></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="235:9" pos:end="243:9"><if pos:start="235:9" pos:end="239:9">if <condition pos:start="235:12" pos:end="235:28">(<expr pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:27"><name pos:start="235:13" pos:end="235:15">tap</name><operator pos:start="235:16" pos:end="235:17">-&gt;</operator><name pos:start="235:18" pos:end="235:27">has_ifname</name></name></expr>)</condition> <block pos:start="235:30" pos:end="239:9">{<block_content pos:start="237:13" pos:end="237:56">

            <expr_stmt pos:start="237:13" pos:end="237:56"><expr pos:start="237:13" pos:end="237:55"><call pos:start="237:13" pos:end="237:55"><name pos:start="237:13" pos:end="237:19">pstrcpy</name><argument_list pos:start="237:20" pos:end="237:55">(<argument pos:start="237:21" pos:end="237:26"><expr pos:start="237:21" pos:end="237:26"><name pos:start="237:21" pos:end="237:26">ifname</name></expr></argument>, <argument pos:start="237:29" pos:end="237:41"><expr pos:start="237:29" pos:end="237:41"><sizeof pos:start="237:29" pos:end="237:41">sizeof <name pos:start="237:36" pos:end="237:41">ifname</name></sizeof></expr></argument>, <argument pos:start="237:44" pos:end="237:54"><expr pos:start="237:44" pos:end="237:54"><name pos:start="237:44" pos:end="237:54"><name pos:start="237:44" pos:end="237:46">tap</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:54">ifname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="239:11" pos:end="243:9">else <block pos:start="239:16" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:29">

            <expr_stmt pos:start="241:13" pos:end="241:29"><expr pos:start="241:13" pos:end="241:28"><name pos:start="241:13" pos:end="241:21"><name pos:start="241:13" pos:end="241:18">ifname</name><index pos:start="241:19" pos:end="241:21">[<expr pos:start="241:20" pos:end="241:20"><literal type="number" pos:start="241:20" pos:end="241:20">0</literal></expr>]</index></name> <operator pos:start="241:23" pos:end="241:23">=</operator> <literal type="char" pos:start="241:25" pos:end="241:28">'\0'</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <for pos:start="247:9" pos:end="287:9">for <control pos:start="247:13" pos:end="247:36">(<init pos:start="247:14" pos:end="247:19"><expr pos:start="247:14" pos:end="247:18"><name pos:start="247:14" pos:end="247:14">i</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <literal type="number" pos:start="247:18" pos:end="247:18">0</literal></expr>;</init> <condition pos:start="247:21" pos:end="247:31"><expr pos:start="247:21" pos:end="247:30"><name pos:start="247:21" pos:end="247:21">i</name> <operator pos:start="247:23" pos:end="247:23">&lt;</operator> <name pos:start="247:25" pos:end="247:30">queues</name></expr>;</condition> <incr pos:start="247:33" pos:end="247:35"><expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:33">i</name><operator pos:start="247:34" pos:end="247:35">++</operator></expr></incr>)</control> <block pos:start="247:38" pos:end="287:9">{<block_content pos:start="249:13" pos:end="285:13">

            <expr_stmt pos:start="249:13" pos:end="251:65"><expr pos:start="249:13" pos:end="251:64"><name pos:start="249:13" pos:end="249:14">fd</name> <operator pos:start="249:16" pos:end="249:16">=</operator> <call pos:start="249:18" pos:end="251:64"><name pos:start="249:18" pos:end="249:29">net_tap_init</name><argument_list pos:start="249:30" pos:end="251:64">(<argument pos:start="249:31" pos:end="249:33"><expr pos:start="249:31" pos:end="249:33"><name pos:start="249:31" pos:end="249:33">tap</name></expr></argument>, <argument pos:start="249:36" pos:end="249:44"><expr pos:start="249:36" pos:end="249:44"><operator pos:start="249:36" pos:end="249:36">&amp;</operator><name pos:start="249:37" pos:end="249:44">vnet_hdr</name></expr></argument>, <argument pos:start="249:47" pos:end="249:68"><expr pos:start="249:47" pos:end="249:68"><ternary pos:start="249:47" pos:end="249:68"><condition pos:start="249:47" pos:end="249:54"><expr pos:start="249:47" pos:end="249:52"><name pos:start="249:47" pos:end="249:47">i</name> <operator pos:start="249:49" pos:end="249:50">&gt;=</operator> <literal type="number" pos:start="249:52" pos:end="249:52">1</literal></expr> ?</condition><then pos:start="249:56" pos:end="249:59"> <expr pos:start="249:56" pos:end="249:59"><literal type="string" pos:start="249:56" pos:end="249:59">"no"</literal></expr> </then><else pos:start="249:61" pos:end="249:68">: <expr pos:start="249:63" pos:end="249:68"><name pos:start="249:63" pos:end="249:68">script</name></expr></else></ternary></expr></argument>,

                              <argument pos:start="251:31" pos:end="251:36"><expr pos:start="251:31" pos:end="251:36"><name pos:start="251:31" pos:end="251:36">ifname</name></expr></argument>, <argument pos:start="251:39" pos:end="251:51"><expr pos:start="251:39" pos:end="251:51"><sizeof pos:start="251:39" pos:end="251:51">sizeof <name pos:start="251:46" pos:end="251:51">ifname</name></sizeof></expr></argument>, <argument pos:start="251:54" pos:end="251:63"><expr pos:start="251:54" pos:end="251:63"><name pos:start="251:54" pos:end="251:59">queues</name> <operator pos:start="251:61" pos:end="251:61">&gt;</operator> <literal type="number" pos:start="251:63" pos:end="251:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="253:13" pos:end="257:13"><if pos:start="253:13" pos:end="257:13">if <condition pos:start="253:16" pos:end="253:25">(<expr pos:start="253:17" pos:end="253:24"><name pos:start="253:17" pos:end="253:18">fd</name> <operator pos:start="253:20" pos:end="253:21">==</operator> <operator pos:start="253:23" pos:end="253:23">-</operator><literal type="number" pos:start="253:24" pos:end="253:24">1</literal></expr>)</condition> <block pos:start="253:27" pos:end="257:13">{<block_content pos:start="255:17" pos:end="255:26">

                <return pos:start="255:17" pos:end="255:26">return <expr pos:start="255:24" pos:end="255:25"><operator pos:start="255:24" pos:end="255:24">-</operator><literal type="number" pos:start="255:25" pos:end="255:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="261:13" pos:end="271:13"><if pos:start="261:13" pos:end="271:13">if <condition pos:start="261:16" pos:end="261:57">(<expr pos:start="261:17" pos:end="261:56"><name pos:start="261:17" pos:end="261:22">queues</name> <operator pos:start="261:24" pos:end="261:24">&gt;</operator> <literal type="number" pos:start="261:26" pos:end="261:26">1</literal> <operator pos:start="261:28" pos:end="261:29">&amp;&amp;</operator> <name pos:start="261:31" pos:end="261:31">i</name> <operator pos:start="261:33" pos:end="261:34">==</operator> <literal type="number" pos:start="261:36" pos:end="261:36">0</literal> <operator pos:start="261:38" pos:end="261:39">&amp;&amp;</operator> <operator pos:start="261:41" pos:end="261:41">!</operator><name pos:start="261:42" pos:end="261:56"><name pos:start="261:42" pos:end="261:44">tap</name><operator pos:start="261:45" pos:end="261:46">-&gt;</operator><name pos:start="261:47" pos:end="261:56">has_ifname</name></name></expr>)</condition> <block pos:start="261:59" pos:end="271:13">{<block_content pos:start="263:17" pos:end="269:17">

                <if_stmt pos:start="263:17" pos:end="269:17"><if pos:start="263:17" pos:end="269:17">if <condition pos:start="263:20" pos:end="263:50">(<expr pos:start="263:21" pos:end="263:49"><call pos:start="263:21" pos:end="263:49"><name pos:start="263:21" pos:end="263:37">tap_fd_get_ifname</name><argument_list pos:start="263:38" pos:end="263:49">(<argument pos:start="263:39" pos:end="263:40"><expr pos:start="263:39" pos:end="263:40"><name pos:start="263:39" pos:end="263:40">fd</name></expr></argument>, <argument pos:start="263:43" pos:end="263:48"><expr pos:start="263:43" pos:end="263:48"><name pos:start="263:43" pos:end="263:48">ifname</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="263:52" pos:end="269:17">{<block_content pos:start="265:21" pos:end="267:30">

                    <expr_stmt pos:start="265:21" pos:end="265:55"><expr pos:start="265:21" pos:end="265:54"><call pos:start="265:21" pos:end="265:54"><name pos:start="265:21" pos:end="265:32">error_report</name><argument_list pos:start="265:33" pos:end="265:54">(<argument pos:start="265:34" pos:end="265:53"><expr pos:start="265:34" pos:end="265:53"><literal type="string" pos:start="265:34" pos:end="265:53">"Fail to get ifname"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="267:21" pos:end="267:30">return <expr pos:start="267:28" pos:end="267:29"><operator pos:start="267:28" pos:end="267:28">-</operator><literal type="number" pos:start="267:29" pos:end="267:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="275:13" pos:end="285:13"><if pos:start="275:13" pos:end="285:13">if <condition pos:start="275:16" pos:end="281:60">(<expr pos:start="275:17" pos:end="281:59"><call pos:start="275:17" pos:end="281:59"><name pos:start="275:17" pos:end="275:32">net_init_tap_one</name><argument_list pos:start="275:33" pos:end="281:59">(<argument pos:start="275:34" pos:end="275:36"><expr pos:start="275:34" pos:end="275:36"><name pos:start="275:34" pos:end="275:36">tap</name></expr></argument>, <argument pos:start="275:39" pos:end="275:42"><expr pos:start="275:39" pos:end="275:42"><name pos:start="275:39" pos:end="275:42">peer</name></expr></argument>, <argument pos:start="275:45" pos:end="275:49"><expr pos:start="275:45" pos:end="275:49"><literal type="string" pos:start="275:45" pos:end="275:49">"tap"</literal></expr></argument>, <argument pos:start="275:52" pos:end="275:55"><expr pos:start="275:52" pos:end="275:55"><name pos:start="275:52" pos:end="275:55">name</name></expr></argument>, <argument pos:start="275:58" pos:end="275:63"><expr pos:start="275:58" pos:end="275:63"><name pos:start="275:58" pos:end="275:63">ifname</name></expr></argument>,

                                 <argument pos:start="277:34" pos:end="277:55"><expr pos:start="277:34" pos:end="277:55"><ternary pos:start="277:34" pos:end="277:55"><condition pos:start="277:34" pos:end="277:41"><expr pos:start="277:34" pos:end="277:39"><name pos:start="277:34" pos:end="277:34">i</name> <operator pos:start="277:36" pos:end="277:37">&gt;=</operator> <literal type="number" pos:start="277:39" pos:end="277:39">1</literal></expr> ?</condition><then pos:start="277:43" pos:end="277:46"> <expr pos:start="277:43" pos:end="277:46"><literal type="string" pos:start="277:43" pos:end="277:46">"no"</literal></expr> </then><else pos:start="277:48" pos:end="277:55">: <expr pos:start="277:50" pos:end="277:55"><name pos:start="277:50" pos:end="277:55">script</name></expr></else></ternary></expr></argument>,

                                 <argument pos:start="279:34" pos:end="279:59"><expr pos:start="279:34" pos:end="279:59"><ternary pos:start="279:34" pos:end="279:59"><condition pos:start="279:34" pos:end="279:41"><expr pos:start="279:34" pos:end="279:39"><name pos:start="279:34" pos:end="279:34">i</name> <operator pos:start="279:36" pos:end="279:37">&gt;=</operator> <literal type="number" pos:start="279:39" pos:end="279:39">1</literal></expr> ?</condition><then pos:start="279:43" pos:end="279:46"> <expr pos:start="279:43" pos:end="279:46"><literal type="string" pos:start="279:43" pos:end="279:46">"no"</literal></expr> </then><else pos:start="279:48" pos:end="279:59">: <expr pos:start="279:50" pos:end="279:59"><name pos:start="279:50" pos:end="279:59">downscript</name></expr></else></ternary></expr></argument>,

                                 <argument pos:start="281:34" pos:end="281:44"><expr pos:start="281:34" pos:end="281:44"><name pos:start="281:34" pos:end="281:44">vhostfdname</name></expr></argument>, <argument pos:start="281:47" pos:end="281:54"><expr pos:start="281:47" pos:end="281:54"><name pos:start="281:47" pos:end="281:54">vnet_hdr</name></expr></argument>, <argument pos:start="281:57" pos:end="281:58"><expr pos:start="281:57" pos:end="281:58"><name pos:start="281:57" pos:end="281:58">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="281:62" pos:end="285:13">{<block_content pos:start="283:17" pos:end="283:26">

                <return pos:start="283:17" pos:end="283:26">return <expr pos:start="283:24" pos:end="283:25"><operator pos:start="283:24" pos:end="283:24">-</operator><literal type="number" pos:start="283:25" pos:end="283:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="293:5" pos:end="293:13">return <expr pos:start="293:12" pos:end="293:12"><literal type="number" pos:start="293:12" pos:end="293:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
