<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25842.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qcow_make_empty</name><parameter_list pos:start="1:27" pos:end="1:48">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22">l1_length</name> <init pos:start="7:24" pos:end="7:54">= <expr pos:start="7:26" pos:end="7:54"><name pos:start="7:26" pos:end="7:35"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:35">l1_size</name></name> <operator pos:start="7:37" pos:end="7:37">*</operator> <sizeof pos:start="7:39" pos:end="7:54">sizeof<argument_list pos:start="7:45" pos:end="7:54">(<argument pos:start="7:46" pos:end="7:53"><expr pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:53">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:37">(<argument pos:start="13:12" pos:end="13:22"><expr pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:22"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:22">l1_table</name></name></expr></argument>, <argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr></argument>, <argument pos:start="13:28" pos:end="13:36"><expr pos:start="13:28" pos:end="13:36"><name pos:start="13:28" pos:end="13:36">l1_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:78">(<expr pos:start="15:9" pos:end="15:77"><call pos:start="15:9" pos:end="15:73"><name pos:start="15:9" pos:end="15:19">bdrv_pwrite</name><argument_list pos:start="15:20" pos:end="15:73">(<argument pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:28"><name pos:start="15:21" pos:end="15:22">bs</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:28">file</name></name></expr></argument>, <argument pos:start="15:31" pos:end="15:48"><expr pos:start="15:31" pos:end="15:48"><name pos:start="15:31" pos:end="15:48"><name pos:start="15:31" pos:end="15:31">s</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:48">l1_table_offset</name></name></expr></argument>, <argument pos:start="15:51" pos:end="15:61"><expr pos:start="15:51" pos:end="15:61"><name pos:start="15:51" pos:end="15:61"><name pos:start="15:51" pos:end="15:51">s</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:61">l1_table</name></name></expr></argument>, <argument pos:start="15:64" pos:end="15:72"><expr pos:start="15:64" pos:end="15:72"><name pos:start="15:64" pos:end="15:72">l1_length</name></expr></argument>)</argument_list></call> <operator pos:start="15:75" pos:end="15:75">&lt;</operator> <literal type="number" pos:start="15:77" pos:end="15:77">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

	<return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:66"><expr pos:start="19:5" pos:end="19:65"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:65"><name pos:start="19:11" pos:end="19:23">bdrv_truncate</name><argument_list pos:start="19:24" pos:end="19:65">(<argument pos:start="19:25" pos:end="19:32"><expr pos:start="19:25" pos:end="19:32"><name pos:start="19:25" pos:end="19:32"><name pos:start="19:25" pos:end="19:26">bs</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">file</name></name></expr></argument>, <argument pos:start="19:35" pos:end="19:64"><expr pos:start="19:35" pos:end="19:64"><name pos:start="19:35" pos:end="19:52"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:52">l1_table_offset</name></name> <operator pos:start="19:54" pos:end="19:54">+</operator> <name pos:start="19:56" pos:end="19:64">l1_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:16">(<expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:74"><expr pos:start="27:5" pos:end="27:73"><call pos:start="27:5" pos:end="27:73"><name pos:start="27:5" pos:end="27:10">memset</name><argument_list pos:start="27:11" pos:end="27:73">(<argument pos:start="27:12" pos:end="27:22"><expr pos:start="27:12" pos:end="27:22"><name pos:start="27:12" pos:end="27:22"><name pos:start="27:12" pos:end="27:12">s</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:22">l2_cache</name></name></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr></argument>, <argument pos:start="27:28" pos:end="27:72"><expr pos:start="27:28" pos:end="27:72"><name pos:start="27:28" pos:end="27:37"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:37">l2_size</name></name> <operator pos:start="27:39" pos:end="27:39">*</operator> <name pos:start="27:41" pos:end="27:53">L2_CACHE_SIZE</name> <operator pos:start="27:55" pos:end="27:55">*</operator> <sizeof pos:start="27:57" pos:end="27:72">sizeof<argument_list pos:start="27:63" pos:end="27:72">(<argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:69"><expr pos:start="29:5" pos:end="29:68"><call pos:start="29:5" pos:end="29:68"><name pos:start="29:5" pos:end="29:10">memset</name><argument_list pos:start="29:11" pos:end="29:68">(<argument pos:start="29:12" pos:end="29:30"><expr pos:start="29:12" pos:end="29:30"><name pos:start="29:12" pos:end="29:30"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:30">l2_cache_offsets</name></name></expr></argument>, <argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr></argument>, <argument pos:start="29:36" pos:end="29:67"><expr pos:start="29:36" pos:end="29:67"><name pos:start="29:36" pos:end="29:48">L2_CACHE_SIZE</name> <operator pos:start="29:50" pos:end="29:50">*</operator> <sizeof pos:start="29:52" pos:end="29:67">sizeof<argument_list pos:start="29:58" pos:end="29:67">(<argument pos:start="29:59" pos:end="29:66"><expr pos:start="29:59" pos:end="29:66"><name pos:start="29:59" pos:end="29:66">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:68"><expr pos:start="31:5" pos:end="31:67"><call pos:start="31:5" pos:end="31:67"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:67">(<argument pos:start="31:12" pos:end="31:29"><expr pos:start="31:12" pos:end="31:29"><name pos:start="31:12" pos:end="31:29"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:29">l2_cache_counts</name></name></expr></argument>, <argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr></argument>, <argument pos:start="31:35" pos:end="31:66"><expr pos:start="31:35" pos:end="31:66"><name pos:start="31:35" pos:end="31:47">L2_CACHE_SIZE</name> <operator pos:start="31:49" pos:end="31:49">*</operator> <sizeof pos:start="31:51" pos:end="31:66">sizeof<argument_list pos:start="31:57" pos:end="31:66">(<argument pos:start="31:58" pos:end="31:65"><expr pos:start="31:58" pos:end="31:65"><name pos:start="31:58" pos:end="31:65">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
