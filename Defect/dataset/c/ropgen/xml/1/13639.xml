<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13639.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">mch_realize</name><parameter_list pos:start="1:24" pos:end="1:51">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">d</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:43">Error</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier><modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">MCHPCIState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">mch</name> <init pos:start="7:22" pos:end="7:40">= <expr pos:start="7:24" pos:end="7:40"><call pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:37">MCH_PCI_DEVICE</name><argument_list pos:start="7:38" pos:end="7:40">(<argument pos:start="7:39" pos:end="7:39"><expr pos:start="7:39" pos:end="7:39"><name pos:start="7:39" pos:end="7:39">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:34">/* setup pci memory mapping */</comment>

    <expr_stmt pos:start="13:5" pos:end="15:51"><expr pos:start="13:5" pos:end="15:50"><call pos:start="13:5" pos:end="15:50"><name pos:start="13:5" pos:end="13:26">pc_pci_as_mapping_init</name><argument_list pos:start="13:27" pos:end="15:50">(<argument pos:start="13:28" pos:end="13:38"><expr pos:start="13:28" pos:end="13:38"><call pos:start="13:28" pos:end="13:38"><name pos:start="13:28" pos:end="13:33">OBJECT</name><argument_list pos:start="13:34" pos:end="13:38">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:41" pos:end="13:58"><expr pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:43">mch</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:58">system_memory</name></name></expr></argument>,

                           <argument pos:start="15:28" pos:end="15:49"><expr pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:30">mch</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:49">pci_address_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:15">/* smram */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><call pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:20">cpu_smm_register</name><argument_list pos:start="21:21" pos:end="21:39">(<argument pos:start="21:22" pos:end="21:33"><expr pos:start="21:22" pos:end="21:33"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:33">mch_set_smm</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">mch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="25:71"><expr pos:start="23:5" pos:end="25:70"><call pos:start="23:5" pos:end="25:70"><name pos:start="23:5" pos:end="23:28">memory_region_init_alias</name><argument_list pos:start="23:29" pos:end="25:70">(<argument pos:start="23:30" pos:end="23:47"><expr pos:start="23:30" pos:end="23:47"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:47"><name pos:start="23:31" pos:end="23:33">mch</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:47">smram_region</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:60"><expr pos:start="23:50" pos:end="23:60"><call pos:start="23:50" pos:end="23:60"><name pos:start="23:50" pos:end="23:55">OBJECT</name><argument_list pos:start="23:56" pos:end="23:60">(<argument pos:start="23:57" pos:end="23:59"><expr pos:start="23:57" pos:end="23:59"><name pos:start="23:57" pos:end="23:59">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:63" pos:end="23:76"><expr pos:start="23:63" pos:end="23:76"><literal type="string" pos:start="23:63" pos:end="23:76">"smram-region"</literal></expr></argument>,

                             <argument pos:start="25:30" pos:end="25:51"><expr pos:start="25:30" pos:end="25:51"><name pos:start="25:30" pos:end="25:51"><name pos:start="25:30" pos:end="25:32">mch</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:51">pci_address_space</name></name></expr></argument>, <argument pos:start="25:54" pos:end="25:60"><expr pos:start="25:54" pos:end="25:60"><literal type="number" pos:start="25:54" pos:end="25:60">0xa0000</literal></expr></argument>, <argument pos:start="25:63" pos:end="25:69"><expr pos:start="25:63" pos:end="25:69"><literal type="number" pos:start="25:63" pos:end="25:69">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:63"><expr pos:start="27:5" pos:end="29:62"><call pos:start="27:5" pos:end="29:62"><name pos:start="27:5" pos:end="27:39">memory_region_add_subregion_overlap</name><argument_list pos:start="27:40" pos:end="29:62">(<argument pos:start="27:41" pos:end="27:58"><expr pos:start="27:41" pos:end="27:58"><name pos:start="27:41" pos:end="27:58"><name pos:start="27:41" pos:end="27:43">mch</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:58">system_memory</name></name></expr></argument>, <argument pos:start="27:61" pos:end="27:67"><expr pos:start="27:61" pos:end="27:67"><literal type="number" pos:start="27:61" pos:end="27:67">0xa0000</literal></expr></argument>,

                                        <argument pos:start="29:41" pos:end="29:58"><expr pos:start="29:41" pos:end="29:58"><operator pos:start="29:41" pos:end="29:41">&amp;</operator><name pos:start="29:42" pos:end="29:58"><name pos:start="29:42" pos:end="29:44">mch</name><operator pos:start="29:45" pos:end="29:46">-&gt;</operator><name pos:start="29:47" pos:end="29:58">smram_region</name></name></expr></argument>, <argument pos:start="29:61" pos:end="29:61"><expr pos:start="29:61" pos:end="29:61"><literal type="number" pos:start="29:61" pos:end="29:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:57"><expr pos:start="31:5" pos:end="31:56"><call pos:start="31:5" pos:end="31:56"><name pos:start="31:5" pos:end="31:29">memory_region_set_enabled</name><argument_list pos:start="31:30" pos:end="31:56">(<argument pos:start="31:31" pos:end="31:48"><expr pos:start="31:31" pos:end="31:48"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:48"><name pos:start="31:32" pos:end="31:34">mch</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:48">smram_region</name></name></expr></argument>, <argument pos:start="31:51" pos:end="31:55"><expr pos:start="31:51" pos:end="31:55"><name pos:start="31:51" pos:end="31:55">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="37:43"><expr pos:start="33:5" pos:end="37:42"><call pos:start="33:5" pos:end="37:42"><name pos:start="33:5" pos:end="33:12">init_pam</name><argument_list pos:start="33:13" pos:end="37:42">(<argument pos:start="33:14" pos:end="33:24"><expr pos:start="33:14" pos:end="33:24"><call pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:19">DEVICE</name><argument_list pos:start="33:20" pos:end="33:24">(<argument pos:start="33:21" pos:end="33:23"><expr pos:start="33:21" pos:end="33:23"><name pos:start="33:21" pos:end="33:23">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:27" pos:end="33:41"><expr pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:29">mch</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:41">ram_memory</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:61"><expr pos:start="33:44" pos:end="33:61"><name pos:start="33:44" pos:end="33:61"><name pos:start="33:44" pos:end="33:46">mch</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:61">system_memory</name></name></expr></argument>,

             <argument pos:start="35:14" pos:end="35:35"><expr pos:start="35:14" pos:end="35:35"><name pos:start="35:14" pos:end="35:35"><name pos:start="35:14" pos:end="35:16">mch</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:35">pci_address_space</name></name></expr></argument>, <argument pos:start="35:38" pos:end="35:57"><expr pos:start="35:38" pos:end="35:57"><operator pos:start="35:38" pos:end="35:38">&amp;</operator><name pos:start="35:39" pos:end="35:57"><name pos:start="35:39" pos:end="35:41">mch</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:54">pam_regions</name><index pos:start="35:55" pos:end="35:57">[<expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">0</literal></expr>]</index></name></expr></argument>,

             <argument pos:start="37:14" pos:end="37:26"><expr pos:start="37:14" pos:end="37:26"><name pos:start="37:14" pos:end="37:26">PAM_BIOS_BASE</name></expr></argument>, <argument pos:start="37:29" pos:end="37:41"><expr pos:start="37:29" pos:end="37:41"><name pos:start="37:29" pos:end="37:41">PAM_BIOS_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="47:5">for <control pos:start="39:9" pos:end="39:28">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:22"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <literal type="number" pos:start="39:21" pos:end="39:22">12</literal></expr>;</condition> <incr pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><operator pos:start="39:25" pos:end="39:26">++</operator><name pos:start="39:27" pos:end="39:27">i</name></expr></incr>)</control> <block pos:start="39:30" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:70">

        <expr_stmt pos:start="41:9" pos:end="45:70"><expr pos:start="41:9" pos:end="45:69"><call pos:start="41:9" pos:end="45:69"><name pos:start="41:9" pos:end="41:16">init_pam</name><argument_list pos:start="41:17" pos:end="45:69">(<argument pos:start="41:18" pos:end="41:28"><expr pos:start="41:18" pos:end="41:28"><call pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:23">DEVICE</name><argument_list pos:start="41:24" pos:end="41:28">(<argument pos:start="41:25" pos:end="41:27"><expr pos:start="41:25" pos:end="41:27"><name pos:start="41:25" pos:end="41:27">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:31" pos:end="41:45"><expr pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:45"><name pos:start="41:31" pos:end="41:33">mch</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:45">ram_memory</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:65"><expr pos:start="41:48" pos:end="41:65"><name pos:start="41:48" pos:end="41:65"><name pos:start="41:48" pos:end="41:50">mch</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:65">system_memory</name></name></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:39"><expr pos:start="43:18" pos:end="43:39"><name pos:start="43:18" pos:end="43:39"><name pos:start="43:18" pos:end="43:20">mch</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:39">pci_address_space</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:63"><expr pos:start="43:42" pos:end="43:63"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:63"><name pos:start="43:43" pos:end="43:45">mch</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:58">pam_regions</name><index pos:start="43:59" pos:end="43:63">[<expr pos:start="43:60" pos:end="43:62"><name pos:start="43:60" pos:end="43:60">i</name><operator pos:start="43:61" pos:end="43:61">+</operator><literal type="number" pos:start="43:62" pos:end="43:62">1</literal></expr>]</index></name></expr></argument>,

                 <argument pos:start="45:18" pos:end="45:52"><expr pos:start="45:18" pos:end="45:52"><name pos:start="45:18" pos:end="45:31">PAM_EXPAN_BASE</name> <operator pos:start="45:33" pos:end="45:33">+</operator> <name pos:start="45:35" pos:end="45:35">i</name> <operator pos:start="45:37" pos:end="45:37">*</operator> <name pos:start="45:39" pos:end="45:52">PAM_EXPAN_SIZE</name></expr></argument>, <argument pos:start="45:55" pos:end="45:68"><expr pos:start="45:55" pos:end="45:68"><name pos:start="45:55" pos:end="45:68">PAM_EXPAN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="49:5" pos:end="49:28">/* Intel IOMMU (VT-d) */</comment>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:67">(<expr pos:start="51:9" pos:end="51:66"><call pos:start="51:9" pos:end="51:66"><name pos:start="51:9" pos:end="51:25">qemu_opt_get_bool</name><argument_list pos:start="51:26" pos:end="51:66">(<argument pos:start="51:27" pos:end="51:49"><expr pos:start="51:27" pos:end="51:49"><call pos:start="51:27" pos:end="51:49"><name pos:start="51:27" pos:end="51:47">qemu_get_machine_opts</name><argument_list pos:start="51:48" pos:end="51:49">()</argument_list></call></expr></argument>, <argument pos:start="51:52" pos:end="51:58"><expr pos:start="51:52" pos:end="51:58"><literal type="string" pos:start="51:52" pos:end="51:58">"iommu"</literal></expr></argument>, <argument pos:start="51:61" pos:end="51:65"><expr pos:start="51:61" pos:end="51:65"><name pos:start="51:61" pos:end="51:65">false</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:69" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:27">

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:21">mch_init_dmar</name><argument_list pos:start="53:22" pos:end="53:26">(<argument pos:start="53:23" pos:end="53:25"><expr pos:start="53:23" pos:end="53:25"><name pos:start="53:23" pos:end="53:25">mch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
