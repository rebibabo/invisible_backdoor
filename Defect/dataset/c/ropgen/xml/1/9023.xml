<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9023.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:41">apply_color_indexing_transform</name><parameter_list pos:start="1:42" pos:end="1:57">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:53">WebPContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">ImageContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">img</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ImageContext</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">x</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pi</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:37"><expr pos:start="15:5" pos:end="15:36"><name pos:start="15:5" pos:end="15:7">img</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">&amp;</operator><name pos:start="15:12" pos:end="15:36"><name pos:start="15:12" pos:end="15:12">s</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:19">image</name><index pos:start="15:20" pos:end="15:36">[<expr pos:start="15:21" pos:end="15:35"><name pos:start="15:21" pos:end="15:35">IMAGE_ROLE_ARGB</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:7">pal</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">&amp;</operator><name pos:start="17:12" pos:end="17:46"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:19">image</name><index pos:start="17:20" pos:end="17:46">[<expr pos:start="17:21" pos:end="17:45"><name pos:start="17:21" pos:end="17:45">IMAGE_ROLE_COLOR_INDEXING</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="73:5"><if pos:start="21:5" pos:end="73:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:11">pal</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:27">size_reduction</name></name> <operator pos:start="21:29" pos:end="21:29">&gt;</operator> <literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr>)</condition> <block pos:start="21:34" pos:end="73:5">{<block_content pos:start="23:9" pos:end="71:22">

        <decl_stmt pos:start="23:9" pos:end="23:27"><decl pos:start="23:9" pos:end="23:26"><type pos:start="23:9" pos:end="23:21"><name pos:start="23:9" pos:end="23:21">GetBitContext</name></type> <name pos:start="23:23" pos:end="23:26">gb_g</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:22"><decl pos:start="25:9" pos:end="25:21"><type pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:15">uint8_t</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:21">line</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:50"><decl pos:start="27:9" pos:end="27:49"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:22">pixel_bits</name> <init pos:start="27:24" pos:end="27:49">= <expr pos:start="27:26" pos:end="27:49"><literal type="number" pos:start="27:26" pos:end="27:26">8</literal> <operator pos:start="27:28" pos:end="27:29">&gt;&gt;</operator> <name pos:start="27:31" pos:end="27:49"><name pos:start="27:31" pos:end="27:33">pal</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:49">size_reduction</name></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:50"><expr pos:start="31:9" pos:end="31:49"><name pos:start="31:9" pos:end="31:12">line</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:49"><name pos:start="31:16" pos:end="31:24">av_malloc</name><argument_list pos:start="31:25" pos:end="31:49">(<argument pos:start="31:26" pos:end="31:48"><expr pos:start="31:26" pos:end="31:48"><name pos:start="31:26" pos:end="31:48"><name pos:start="31:26" pos:end="31:28">img</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:35">frame</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:45">linesize</name><index pos:start="31:46" pos:end="31:48">[<expr pos:start="31:47" pos:end="31:47"><literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:35"><if pos:start="33:9" pos:end="35:35">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:17">line</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <for pos:start="39:9" pos:end="69:9">for <control pos:start="39:13" pos:end="39:48">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">y</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:43"><expr pos:start="39:21" pos:end="39:42"><name pos:start="39:21" pos:end="39:21">y</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <name pos:start="39:25" pos:end="39:42"><name pos:start="39:25" pos:end="39:27">img</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:34">frame</name><operator pos:start="39:35" pos:end="39:36">-&gt;</operator><name pos:start="39:37" pos:end="39:42">height</name></name></expr>;</condition> <incr pos:start="39:45" pos:end="39:47"><expr pos:start="39:45" pos:end="39:47"><name pos:start="39:45" pos:end="39:45">y</name><operator pos:start="39:46" pos:end="39:47">++</operator></expr></incr>)</control> <block pos:start="39:50" pos:end="69:9">{<block_content pos:start="41:13" pos:end="67:13">

            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:13">p</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <call pos:start="41:17" pos:end="41:43"><name pos:start="41:17" pos:end="41:25">GET_PIXEL</name><argument_list pos:start="41:26" pos:end="41:43">(<argument pos:start="41:27" pos:end="41:36"><expr pos:start="41:27" pos:end="41:36"><name pos:start="41:27" pos:end="41:36"><name pos:start="41:27" pos:end="41:29">img</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">frame</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><literal type="number" pos:start="41:39" pos:end="41:39">0</literal></expr></argument>, <argument pos:start="41:42" pos:end="41:42"><expr pos:start="41:42" pos:end="41:42"><name pos:start="41:42" pos:end="41:42">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:53"><expr pos:start="43:13" pos:end="43:52"><call pos:start="43:13" pos:end="43:52"><name pos:start="43:13" pos:end="43:18">memcpy</name><argument_list pos:start="43:19" pos:end="43:52">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">line</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><name pos:start="43:26" pos:end="43:26">p</name></expr></argument>, <argument pos:start="43:29" pos:end="43:51"><expr pos:start="43:29" pos:end="43:51"><name pos:start="43:29" pos:end="43:51"><name pos:start="43:29" pos:end="43:31">img</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:38">frame</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:48">linesize</name><index pos:start="43:49" pos:end="43:51">[<expr pos:start="43:50" pos:end="43:50"><literal type="number" pos:start="43:50" pos:end="43:50">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:68"><expr pos:start="45:13" pos:end="45:67"><call pos:start="45:13" pos:end="45:67"><name pos:start="45:13" pos:end="45:25">init_get_bits</name><argument_list pos:start="45:26" pos:end="45:67">(<argument pos:start="45:27" pos:end="45:31"><expr pos:start="45:27" pos:end="45:31"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:31">gb_g</name></expr></argument>, <argument pos:start="45:34" pos:end="45:37"><expr pos:start="45:34" pos:end="45:37"><name pos:start="45:34" pos:end="45:37">line</name></expr></argument>, <argument pos:start="45:40" pos:end="45:66"><expr pos:start="45:40" pos:end="45:66"><name pos:start="45:40" pos:end="45:62"><name pos:start="45:40" pos:end="45:42">img</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:49">frame</name><operator pos:start="45:50" pos:end="45:51">-&gt;</operator><name pos:start="45:52" pos:end="45:59">linesize</name><index pos:start="45:60" pos:end="45:62">[<expr pos:start="45:61" pos:end="45:61"><literal type="number" pos:start="45:61" pos:end="45:61">0</literal></expr>]</index></name> <operator pos:start="45:64" pos:end="45:64">*</operator> <literal type="number" pos:start="45:66" pos:end="45:66">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:33"><expr pos:start="47:13" pos:end="47:32"><call pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:21">skip_bits</name><argument_list pos:start="47:22" pos:end="47:32">(<argument pos:start="47:23" pos:end="47:27"><expr pos:start="47:23" pos:end="47:27"><operator pos:start="47:23" pos:end="47:23">&amp;</operator><name pos:start="47:24" pos:end="47:27">gb_g</name></expr></argument>, <argument pos:start="47:30" pos:end="47:31"><expr pos:start="47:30" pos:end="47:31"><literal type="number" pos:start="47:30" pos:end="47:31">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:18"><expr pos:start="49:13" pos:end="49:17"><name pos:start="49:13" pos:end="49:13">i</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>;</expr_stmt>

            <for pos:start="51:13" pos:end="67:13">for <control pos:start="51:17" pos:end="51:51">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">x</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:46"><expr pos:start="51:25" pos:end="51:45"><name pos:start="51:25" pos:end="51:25">x</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <name pos:start="51:29" pos:end="51:45"><name pos:start="51:29" pos:end="51:31">img</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:38">frame</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:45">width</name></name></expr>;</condition> <incr pos:start="51:48" pos:end="51:50"><expr pos:start="51:48" pos:end="51:50"><name pos:start="51:48" pos:end="51:48">x</name><operator pos:start="51:49" pos:end="51:50">++</operator></expr></incr>)</control> <block pos:start="51:53" pos:end="67:13">{<block_content pos:start="53:17" pos:end="65:17">

                <expr_stmt pos:start="53:17" pos:end="53:51"><expr pos:start="53:17" pos:end="53:50"><name pos:start="53:17" pos:end="53:17">p</name>    <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:50"><name pos:start="53:24" pos:end="53:32">GET_PIXEL</name><argument_list pos:start="53:33" pos:end="53:50">(<argument pos:start="53:34" pos:end="53:43"><expr pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:43"><name pos:start="53:34" pos:end="53:36">img</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:43">frame</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><name pos:start="53:46" pos:end="53:46">x</name></expr></argument>, <argument pos:start="53:49" pos:end="53:49"><expr pos:start="53:49" pos:end="53:49"><name pos:start="53:49" pos:end="53:49">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:51"><expr pos:start="55:17" pos:end="55:50"><name pos:start="55:17" pos:end="55:20"><name pos:start="55:17" pos:end="55:17">p</name><index pos:start="55:18" pos:end="55:20">[<expr pos:start="55:19" pos:end="55:19"><literal type="number" pos:start="55:19" pos:end="55:19">2</literal></expr>]</index></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <call pos:start="55:24" pos:end="55:50"><name pos:start="55:24" pos:end="55:31">get_bits</name><argument_list pos:start="55:32" pos:end="55:50">(<argument pos:start="55:33" pos:end="55:37"><expr pos:start="55:33" pos:end="55:37"><operator pos:start="55:33" pos:end="55:33">&amp;</operator><name pos:start="55:34" pos:end="55:37">gb_g</name></expr></argument>, <argument pos:start="55:40" pos:end="55:49"><expr pos:start="55:40" pos:end="55:49"><name pos:start="55:40" pos:end="55:49">pixel_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:20"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:17">i</name><operator pos:start="57:18" pos:end="57:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="59:17" pos:end="65:17"><if pos:start="59:17" pos:end="65:17">if <condition pos:start="59:20" pos:end="59:50">(<expr pos:start="59:21" pos:end="59:49"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:24">==</operator> <literal type="number" pos:start="59:26" pos:end="59:26">1</literal> <operator pos:start="59:28" pos:end="59:29">&lt;&lt;</operator> <name pos:start="59:31" pos:end="59:49"><name pos:start="59:31" pos:end="59:33">pal</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:49">size_reduction</name></name></expr>)</condition> <block pos:start="59:52" pos:end="65:17">{<block_content pos:start="61:21" pos:end="63:26">

                    <expr_stmt pos:start="61:21" pos:end="61:41"><expr pos:start="61:21" pos:end="61:40"><call pos:start="61:21" pos:end="61:40"><name pos:start="61:21" pos:end="61:29">skip_bits</name><argument_list pos:start="61:30" pos:end="61:40">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><operator pos:start="61:31" pos:end="61:31">&amp;</operator><name pos:start="61:32" pos:end="61:35">gb_g</name></expr></argument>, <argument pos:start="61:38" pos:end="61:39"><expr pos:start="61:38" pos:end="61:39"><literal type="number" pos:start="61:38" pos:end="61:39">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:26"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:22"><expr pos:start="71:9" pos:end="71:21"><call pos:start="71:9" pos:end="71:21"><name pos:start="71:9" pos:end="71:15">av_free</name><argument_list pos:start="71:16" pos:end="71:21">(<argument pos:start="71:17" pos:end="71:20"><expr pos:start="71:17" pos:end="71:20"><name pos:start="71:17" pos:end="71:20">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="77:5" pos:end="99:5">for <control pos:start="77:9" pos:end="77:44">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">y</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:39"><expr pos:start="77:17" pos:end="77:38"><name pos:start="77:17" pos:end="77:17">y</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:38"><name pos:start="77:21" pos:end="77:23">img</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:30">frame</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:38">height</name></name></expr>;</condition> <incr pos:start="77:41" pos:end="77:43"><expr pos:start="77:41" pos:end="77:43"><name pos:start="77:41" pos:end="77:41">y</name><operator pos:start="77:42" pos:end="77:43">++</operator></expr></incr>)</control> <block pos:start="77:46" pos:end="99:5">{<block_content pos:start="79:9" pos:end="97:9">

        <for pos:start="79:9" pos:end="97:9">for <control pos:start="79:13" pos:end="79:47">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">x</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:42"><expr pos:start="79:21" pos:end="79:41"><name pos:start="79:21" pos:end="79:21">x</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <name pos:start="79:25" pos:end="79:41"><name pos:start="79:25" pos:end="79:27">img</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">frame</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:41">width</name></name></expr>;</condition> <incr pos:start="79:44" pos:end="79:46"><expr pos:start="79:44" pos:end="79:46"><name pos:start="79:44" pos:end="79:44">x</name><operator pos:start="79:45" pos:end="79:46">++</operator></expr></incr>)</control> <block pos:start="79:49" pos:end="97:9">{<block_content pos:start="81:13" pos:end="95:29">

            <expr_stmt pos:start="81:13" pos:end="81:44"><expr pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:13">p</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <call pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:25">GET_PIXEL</name><argument_list pos:start="81:26" pos:end="81:43">(<argument pos:start="81:27" pos:end="81:36"><expr pos:start="81:27" pos:end="81:36"><name pos:start="81:27" pos:end="81:36"><name pos:start="81:27" pos:end="81:29">img</name><operator pos:start="81:30" pos:end="81:31">-&gt;</operator><name pos:start="81:32" pos:end="81:36">frame</name></name></expr></argument>, <argument pos:start="81:39" pos:end="81:39"><expr pos:start="81:39" pos:end="81:39"><name pos:start="81:39" pos:end="81:39">x</name></expr></argument>, <argument pos:start="81:42" pos:end="81:42"><expr pos:start="81:42" pos:end="81:42"><name pos:start="81:42" pos:end="81:42">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:21"><expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:13">i</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <name pos:start="83:17" pos:end="83:20"><name pos:start="83:17" pos:end="83:17">p</name><index pos:start="83:18" pos:end="83:20">[<expr pos:start="83:19" pos:end="83:19"><literal type="number" pos:start="83:19" pos:end="83:19">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if <condition pos:start="85:16" pos:end="85:39">(<expr pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:20">&gt;=</operator> <name pos:start="85:22" pos:end="85:38"><name pos:start="85:22" pos:end="85:24">pal</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:31">frame</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:38">width</name></name></expr>)</condition> <block pos:start="85:41" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:43">

                <expr_stmt pos:start="87:17" pos:end="87:80"><expr pos:start="87:17" pos:end="87:79"><call pos:start="87:17" pos:end="87:79"><name pos:start="87:17" pos:end="87:22">av_log</name><argument_list pos:start="87:23" pos:end="87:79">(<argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:31"><name pos:start="87:24" pos:end="87:24">s</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:31">avctx</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:45"><expr pos:start="87:34" pos:end="87:45"><name pos:start="87:34" pos:end="87:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:48" pos:end="87:75"><expr pos:start="87:48" pos:end="87:75"><literal type="string" pos:start="87:48" pos:end="87:75">"invalid palette index %d\n"</literal></expr></argument>, <argument pos:start="87:78" pos:end="87:78"><expr pos:start="87:78" pos:end="87:78"><name pos:start="87:78" pos:end="87:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="89:17" pos:end="89:43">return <expr pos:start="89:24" pos:end="89:42"><name pos:start="89:24" pos:end="89:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:45"><expr pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:14">pi</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:44"><name pos:start="93:18" pos:end="93:26">GET_PIXEL</name><argument_list pos:start="93:27" pos:end="93:44">(<argument pos:start="93:28" pos:end="93:37"><expr pos:start="93:28" pos:end="93:37"><name pos:start="93:28" pos:end="93:37"><name pos:start="93:28" pos:end="93:30">pal</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:37">frame</name></name></expr></argument>, <argument pos:start="93:40" pos:end="93:40"><expr pos:start="93:40" pos:end="93:40"><name pos:start="93:40" pos:end="93:40">i</name></expr></argument>, <argument pos:start="93:43" pos:end="93:43"><expr pos:start="93:43" pos:end="93:43"><literal type="number" pos:start="93:43" pos:end="93:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:29"><expr pos:start="95:13" pos:end="95:28"><call pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:21">AV_COPY32</name><argument_list pos:start="95:22" pos:end="95:28">(<argument pos:start="95:23" pos:end="95:23"><expr pos:start="95:23" pos:end="95:23"><name pos:start="95:23" pos:end="95:23">p</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">pi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
