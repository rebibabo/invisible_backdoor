<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12804.c" pos:tabs="8"><function pos:start="1:1" pos:end="387:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">ff_asf_parse_packet</name><parameter_list pos:start="1:31" pos:end="1:82">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:62">AVIOContext</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">pb</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:81"><decl pos:start="1:69" pos:end="1:81"><type pos:start="1:69" pos:end="1:81"><name pos:start="1:69" pos:end="1:76">AVPacket</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="387:1">{<block_content pos:start="5:5" pos:end="385:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">asf_st</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="9:5" pos:end="383:5">for <control pos:start="9:9" pos:end="9:12">(<init pos:start="9:10" pos:end="9:10">;</init><condition pos:start="9:11" pos:end="9:11">;</condition><incr/>)</control> <block pos:start="9:14" pos:end="383:5">{<block_content pos:start="11:9" pos:end="381:9">

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="13:9" pos:end="15:31"><if pos:start="13:9" pos:end="15:31">if<condition pos:start="13:11" pos:end="13:27">(<expr pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:13">pb</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:26">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:31"><block_content pos:start="15:13" pos:end="15:31">

            <return pos:start="15:13" pos:end="15:31">return <expr pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="45:9"><if pos:start="17:9" pos:end="45:9">if <condition pos:start="17:12" pos:end="19:40">(<expr pos:start="17:13" pos:end="19:39"><name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:15">asf</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:33">packet_size_left</name></name> <operator pos:start="17:35" pos:end="17:35">&lt;</operator> <name pos:start="17:37" pos:end="17:53">FRAME_HEADER_SIZE</name>

            <operator pos:start="19:13" pos:end="19:14">||</operator> <name pos:start="19:16" pos:end="19:35"><name pos:start="19:16" pos:end="19:18">asf</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:35">packet_segments</name></name> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <literal type="number" pos:start="19:39" pos:end="19:39">1</literal></expr>)</condition> <block pos:start="19:42" pos:end="45:9">{<block_content pos:start="23:13" pos:end="43:21">

            <comment type="line" pos:start="21:13" pos:end="21:61">//asf-&gt;packet_size_left &lt;= asf-&gt;packet_padsize) {</comment>

            <decl_stmt pos:start="23:13" pos:end="23:66"><decl pos:start="23:13" pos:end="23:65"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:19">ret</name> <init pos:start="23:21" pos:end="23:65">= <expr pos:start="23:23" pos:end="23:65"><name pos:start="23:23" pos:end="23:43"><name pos:start="23:23" pos:end="23:25">asf</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:43">packet_size_left</name></name> <operator pos:start="23:45" pos:end="23:45">+</operator> <name pos:start="23:47" pos:end="23:65"><name pos:start="23:47" pos:end="23:49">asf</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:65">packet_padsize</name></name></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:start="25:13" pos:end="25:125">//printf("PacketLeftSize:%d  Pad:%d Pos:%"PRId64"\n", asf-&gt;packet_size_left, asf-&gt;packet_padsize, avio_tell(pb));</comment>

            <expr_stmt pos:start="27:13" pos:end="27:27"><expr pos:start="27:13" pos:end="27:26"><call pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:18">assert</name><argument_list pos:start="27:19" pos:end="27:26">(<argument pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:25"><name pos:start="27:20" pos:end="27:22">ret</name><operator pos:start="27:23" pos:end="27:24">&gt;=</operator><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="29:13" pos:end="29:27">/* fail safe */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:31"><expr pos:start="31:13" pos:end="31:30"><call pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:21">avio_skip</name><argument_list pos:start="31:22" pos:end="31:30">(<argument pos:start="31:23" pos:end="31:24"><expr pos:start="31:23" pos:end="31:24"><name pos:start="31:23" pos:end="31:24">pb</name></expr></argument>, <argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:15">asf</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">packet_pos</name></name><operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:42"><name pos:start="35:30" pos:end="35:38">avio_tell</name><argument_list pos:start="35:39" pos:end="35:42">(<argument pos:start="35:40" pos:end="35:41"><expr pos:start="35:40" pos:end="35:41"><name pos:start="35:40" pos:end="35:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="41:35"><if pos:start="37:13" pos:end="41:35">if <condition pos:start="37:16" pos:end="39:85">(<expr pos:start="37:17" pos:end="39:84"><name pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:19">asf</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:37">data_object_size</name></name> <operator pos:start="37:39" pos:end="37:40">!=</operator> <operator pos:start="37:42" pos:end="37:42">(</operator><name pos:start="37:43" pos:end="37:50">uint64_t</name><operator pos:start="37:51" pos:end="37:51">)</operator><operator pos:start="37:52" pos:end="37:52">-</operator><literal type="number" pos:start="37:53" pos:end="37:53">1</literal> <operator pos:start="37:55" pos:end="37:56">&amp;&amp;</operator>

                <operator pos:start="39:17" pos:end="39:17">(</operator><name pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:20">asf</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:32">packet_pos</name></name> <operator pos:start="39:34" pos:end="39:34">-</operator> <name pos:start="39:36" pos:end="39:58"><name pos:start="39:36" pos:end="39:38">asf</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:58">data_object_offset</name></name> <operator pos:start="39:60" pos:end="39:61">&gt;=</operator> <name pos:start="39:63" pos:end="39:83"><name pos:start="39:63" pos:end="39:65">asf</name><operator pos:start="39:66" pos:end="39:67">-&gt;</operator><name pos:start="39:68" pos:end="39:83">data_object_size</name></name><operator pos:start="39:84" pos:end="39:84">)</operator></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:35"><block_content pos:start="41:17" pos:end="41:35">

                <return pos:start="41:17" pos:end="41:35">return <expr pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:34">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="41:37" pos:end="41:83">/* Do not exceed the size of the data object */</comment>

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="83:9"><if pos:start="47:9" pos:end="83:9">if <condition pos:start="47:12" pos:end="47:40">(<expr pos:start="47:13" pos:end="47:39"><name pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:15">asf</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:34">packet_time_start</name></name> <operator pos:start="47:36" pos:end="47:37">==</operator> <literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr>)</condition> <block pos:start="47:42" pos:end="83:9">{<block_content pos:start="49:13" pos:end="81:67">

            <if_stmt pos:start="49:13" pos:end="55:13"><if pos:start="49:13" pos:end="55:13">if<condition pos:start="49:15" pos:end="49:48">(<expr pos:start="49:16" pos:end="49:47"><call pos:start="49:16" pos:end="49:43"><name pos:start="49:16" pos:end="49:36">asf_read_frame_header</name><argument_list pos:start="49:37" pos:end="49:43">(<argument pos:start="49:38" pos:end="49:38"><expr pos:start="49:38" pos:end="49:38"><name pos:start="49:38" pos:end="49:38">s</name></expr></argument>, <argument pos:start="49:41" pos:end="49:42"><expr pos:start="49:41" pos:end="49:42"><name pos:start="49:41" pos:end="49:42">pb</name></expr></argument>)</argument_list></call> <operator pos:start="49:45" pos:end="49:45">&lt;</operator> <literal type="number" pos:start="49:47" pos:end="49:47">0</literal></expr>)</condition><block pos:start="49:49" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:25">

                <expr_stmt pos:start="51:17" pos:end="51:40"><expr pos:start="51:17" pos:end="51:39"><name pos:start="51:17" pos:end="51:36"><name pos:start="51:17" pos:end="51:19">asf</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:36">packet_segments</name></name><operator pos:start="51:37" pos:end="51:37">=</operator> <literal type="number" pos:start="51:39" pos:end="51:39">0</literal></expr>;</expr_stmt>

                <continue pos:start="53:17" pos:end="53:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="57:13" pos:end="79:13"><if pos:start="57:13" pos:end="79:13">if <condition pos:start="57:16" pos:end="63:17">(<expr pos:start="57:17" pos:end="61:105"><name pos:start="57:17" pos:end="57:33"><name pos:start="57:17" pos:end="57:19">asf</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:33">stream_index</name></name> <operator pos:start="57:35" pos:end="57:35">&lt;</operator> <literal type="number" pos:start="57:37" pos:end="57:37">0</literal>

                <operator pos:start="59:17" pos:end="59:18">||</operator> <name pos:start="59:20" pos:end="59:48"><name pos:start="59:20" pos:end="59:20">s</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:29">streams</name><index pos:start="59:30" pos:end="59:48">[<expr pos:start="59:31" pos:end="59:47"><name pos:start="59:31" pos:end="59:47"><name pos:start="59:31" pos:end="59:33">asf</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:47">stream_index</name></name></expr>]</index></name><operator pos:start="59:49" pos:end="59:50">-&gt;</operator><name pos:start="59:51" pos:end="59:57">discard</name> <operator pos:start="59:59" pos:end="59:60">&gt;=</operator> <name pos:start="59:62" pos:end="59:74">AVDISCARD_ALL</name>

                <operator pos:start="61:17" pos:end="61:18">||</operator> <operator pos:start="61:20" pos:end="61:20">(</operator><operator pos:start="61:21" pos:end="61:21">!</operator><name pos:start="61:22" pos:end="61:42"><name pos:start="61:22" pos:end="61:24">asf</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:42">packet_key_frame</name></name> <operator pos:start="61:44" pos:end="61:45">&amp;&amp;</operator> <name pos:start="61:47" pos:end="61:75"><name pos:start="61:47" pos:end="61:47">s</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:56">streams</name><index pos:start="61:57" pos:end="61:75">[<expr pos:start="61:58" pos:end="61:74"><name pos:start="61:58" pos:end="61:74"><name pos:start="61:58" pos:end="61:60">asf</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:74">stream_index</name></name></expr>]</index></name><operator pos:start="61:76" pos:end="61:77">-&gt;</operator><name pos:start="61:78" pos:end="61:84">discard</name> <operator pos:start="61:86" pos:end="61:87">&gt;=</operator> <name pos:start="61:89" pos:end="61:104">AVDISCARD_NONKEY</name><operator pos:start="61:105" pos:end="61:105">)</operator></expr>

                )</condition> <block pos:start="63:19" pos:end="79:13">{<block_content pos:start="65:17" pos:end="77:25">

                <expr_stmt pos:start="65:17" pos:end="65:43"><expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:19">asf</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:38">packet_time_start</name></name> <operator pos:start="65:40" pos:end="65:40">=</operator> <literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="67:17" pos:end="67:58">/* unhandled packet (should not happen) */</comment>

                <expr_stmt pos:start="69:17" pos:end="69:53"><expr pos:start="69:17" pos:end="69:52"><call pos:start="69:17" pos:end="69:52"><name pos:start="69:17" pos:end="69:25">avio_skip</name><argument_list pos:start="69:26" pos:end="69:52">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">pb</name></expr></argument>, <argument pos:start="69:31" pos:end="69:51"><expr pos:start="69:31" pos:end="69:51"><name pos:start="69:31" pos:end="69:51"><name pos:start="69:31" pos:end="69:33">asf</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:63"><expr pos:start="71:17" pos:end="71:62"><name pos:start="71:17" pos:end="71:37"><name pos:start="71:17" pos:end="71:19">asf</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:37">packet_size_left</name></name> <operator pos:start="71:39" pos:end="71:40">-=</operator> <name pos:start="71:42" pos:end="71:62"><name pos:start="71:42" pos:end="71:44">asf</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:62">packet_frag_size</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="73:17" pos:end="75:104"><if pos:start="73:17" pos:end="75:104">if<condition pos:start="73:19" pos:end="73:41">(<expr pos:start="73:20" pos:end="73:40"><name pos:start="73:20" pos:end="73:36"><name pos:start="73:20" pos:end="73:22">asf</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:36">stream_index</name></name> <operator pos:start="73:38" pos:end="73:38">&lt;</operator> <literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>)</condition><block type="pseudo" pos:start="75:21" pos:end="75:104"><block_content pos:start="75:21" pos:end="75:104">

                    <expr_stmt pos:start="75:21" pos:end="75:104"><expr pos:start="75:21" pos:end="75:103"><call pos:start="75:21" pos:end="75:103"><name pos:start="75:21" pos:end="75:26">av_log</name><argument_list pos:start="75:27" pos:end="75:103">(<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><name pos:start="75:28" pos:end="75:28">s</name></expr></argument>, <argument pos:start="75:31" pos:end="75:42"><expr pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:45" pos:end="75:79"><expr pos:start="75:45" pos:end="75:79"><literal type="string" pos:start="75:45" pos:end="75:79">"ff asf skip %d (unknown stream)\n"</literal></expr></argument>, <argument pos:start="75:82" pos:end="75:102"><expr pos:start="75:82" pos:end="75:102"><name pos:start="75:82" pos:end="75:102"><name pos:start="75:82" pos:end="75:84">asf</name><operator pos:start="75:85" pos:end="75:86">-&gt;</operator><name pos:start="75:87" pos:end="75:102">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <continue pos:start="77:17" pos:end="77:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:67"><expr pos:start="81:13" pos:end="81:66"><name pos:start="81:13" pos:end="81:23"><name pos:start="81:13" pos:end="81:15">asf</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:23">asf_st</name></name> <operator pos:start="81:25" pos:end="81:25">=</operator> <name pos:start="81:27" pos:end="81:55"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:36">streams</name><index pos:start="81:37" pos:end="81:55">[<expr pos:start="81:38" pos:end="81:54"><name pos:start="81:38" pos:end="81:54"><name pos:start="81:38" pos:end="81:40">asf</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:54">stream_index</name></name></expr>]</index></name><operator pos:start="81:56" pos:end="81:57">-&gt;</operator><name pos:start="81:58" pos:end="81:66">priv_data</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:29"><expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:14">asf_st</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:28"><name pos:start="85:18" pos:end="85:20">asf</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:28">asf_st</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="121:9"><if pos:start="89:9" pos:end="121:9">if <condition pos:start="89:12" pos:end="89:41">(<expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:15">asf</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:35">packet_replic_size</name></name> <operator pos:start="89:37" pos:end="89:38">==</operator> <literal type="number" pos:start="89:40" pos:end="89:40">1</literal></expr>)</condition> <block pos:start="89:43" pos:end="121:9">{<block_content pos:start="93:13" pos:end="117:59">

            <comment type="line" pos:start="91:13" pos:end="91:66">// frag_offset is here used as the beginning timestamp</comment>

            <expr_stmt pos:start="93:13" pos:end="93:64"><expr pos:start="93:13" pos:end="93:63"><name pos:start="93:13" pos:end="93:38"><name pos:start="93:13" pos:end="93:15">asf</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:38">packet_frag_timestamp</name></name> <operator pos:start="93:40" pos:end="93:40">=</operator> <name pos:start="93:42" pos:end="93:63"><name pos:start="93:42" pos:end="93:44">asf</name><operator pos:start="93:45" pos:end="93:46">-&gt;</operator><name pos:start="93:47" pos:end="93:63">packet_time_start</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:61"><expr pos:start="95:13" pos:end="95:60"><name pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:15">asf</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:34">packet_time_start</name></name> <operator pos:start="95:36" pos:end="95:37">+=</operator> <name pos:start="95:39" pos:end="95:60"><name pos:start="95:39" pos:end="95:41">asf</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:60">packet_time_delta</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:71"><expr pos:start="97:13" pos:end="97:70"><name pos:start="97:13" pos:end="97:32"><name pos:start="97:13" pos:end="97:15">asf</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:32">packet_obj_size</name></name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:56"><name pos:start="97:36" pos:end="97:38">asf</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:56">packet_frag_size</name></name> <operator pos:start="97:58" pos:end="97:58">=</operator> <call pos:start="97:60" pos:end="97:70"><name pos:start="97:60" pos:end="97:66">avio_r8</name><argument_list pos:start="97:67" pos:end="97:70">(<argument pos:start="97:68" pos:end="97:69"><expr pos:start="97:68" pos:end="97:69"><name pos:start="97:68" pos:end="97:69">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:33"><name pos:start="99:13" pos:end="99:15">asf</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:33">packet_size_left</name></name><operator pos:start="99:34" pos:end="99:35">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:15">asf</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:34">packet_multi_size</name></name><operator pos:start="101:35" pos:end="101:36">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="115:13">if <condition pos:start="103:16" pos:end="103:62">(<expr pos:start="103:17" pos:end="103:61"><name pos:start="103:17" pos:end="103:38"><name pos:start="103:17" pos:end="103:19">asf</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:38">packet_multi_size</name></name> <operator pos:start="103:40" pos:end="103:40">&lt;</operator> <name pos:start="103:42" pos:end="103:61"><name pos:start="103:42" pos:end="103:44">asf</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:61">packet_obj_size</name></name></expr>)</condition>

            <block pos:start="105:13" pos:end="115:13">{<block_content pos:start="107:17" pos:end="113:25">

                <expr_stmt pos:start="107:17" pos:end="107:43"><expr pos:start="107:17" pos:end="107:42"><name pos:start="107:17" pos:end="107:38"><name pos:start="107:17" pos:end="107:19">asf</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:38">packet_time_start</name></name> <operator pos:start="107:40" pos:end="107:40">=</operator> <literal type="number" pos:start="107:42" pos:end="107:42">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:54"><expr pos:start="109:17" pos:end="109:53"><call pos:start="109:17" pos:end="109:53"><name pos:start="109:17" pos:end="109:25">avio_skip</name><argument_list pos:start="109:26" pos:end="109:53">(<argument pos:start="109:27" pos:end="109:28"><expr pos:start="109:27" pos:end="109:28"><name pos:start="109:27" pos:end="109:28">pb</name></expr></argument>, <argument pos:start="109:31" pos:end="109:52"><expr pos:start="109:31" pos:end="109:52"><name pos:start="109:31" pos:end="109:52"><name pos:start="109:31" pos:end="109:33">asf</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:52">packet_multi_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:64"><expr pos:start="111:17" pos:end="111:63"><name pos:start="111:17" pos:end="111:37"><name pos:start="111:17" pos:end="111:19">asf</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:37">packet_size_left</name></name> <operator pos:start="111:39" pos:end="111:40">-=</operator> <name pos:start="111:42" pos:end="111:63"><name pos:start="111:42" pos:end="111:44">asf</name><operator pos:start="111:45" pos:end="111:46">-&gt;</operator><name pos:start="111:47" pos:end="111:63">packet_multi_size</name></name></expr>;</expr_stmt>

                <continue pos:start="113:17" pos:end="113:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:59"><expr pos:start="117:13" pos:end="117:58"><name pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:15">asf</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:34">packet_multi_size</name></name> <operator pos:start="117:36" pos:end="117:37">-=</operator> <name pos:start="117:39" pos:end="117:58"><name pos:start="117:39" pos:end="117:41">asf</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:58">packet_obj_size</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="119:13" pos:end="119:157">//printf("COMPRESS size  %d  %d  %d   ms:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_timestamp, asf-&gt;packet_size_left, asf-&gt;packet_multi_size);</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="137:9"><if pos:start="123:9" pos:end="137:9">if<condition pos:start="123:11" pos:end="127:81">(   <comment type="block" pos:start="123:15" pos:end="123:63">/*asf-&gt;packet_frag_size == asf-&gt;packet_obj_size*/</comment>

              <expr pos:start="125:15" pos:end="127:80"><name pos:start="125:15" pos:end="125:33"><name pos:start="125:15" pos:end="125:20">asf_st</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:33">frag_offset</name></name> <operator pos:start="125:35" pos:end="125:35">+</operator> <name pos:start="125:37" pos:end="125:57"><name pos:start="125:37" pos:end="125:39">asf</name><operator pos:start="125:40" pos:end="125:41">-&gt;</operator><name pos:start="125:42" pos:end="125:57">packet_frag_size</name></name> <operator pos:start="125:59" pos:end="125:60">&lt;=</operator> <name pos:start="125:62" pos:end="125:77"><name pos:start="125:62" pos:end="125:67">asf_st</name><operator pos:start="125:68" pos:end="125:69">-&gt;</operator><name pos:start="125:70" pos:end="125:72">pkt</name><operator pos:start="125:73" pos:end="125:73">.</operator><name pos:start="125:74" pos:end="125:77">size</name></name>

           <operator pos:start="127:12" pos:end="127:13">&amp;&amp;</operator> <name pos:start="127:15" pos:end="127:33"><name pos:start="127:15" pos:end="127:20">asf_st</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:33">frag_offset</name></name> <operator pos:start="127:35" pos:end="127:35">+</operator> <name pos:start="127:37" pos:end="127:57"><name pos:start="127:37" pos:end="127:39">asf</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:57">packet_frag_size</name></name> <operator pos:start="127:59" pos:end="127:59">&gt;</operator> <name pos:start="127:61" pos:end="127:80"><name pos:start="127:61" pos:end="127:63">asf</name><operator pos:start="127:64" pos:end="127:65">-&gt;</operator><name pos:start="127:66" pos:end="127:80">packet_obj_size</name></name></expr>)</condition><block pos:start="127:82" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:51">

            <expr_stmt pos:start="129:13" pos:end="133:56"><expr pos:start="129:13" pos:end="133:55"><call pos:start="129:13" pos:end="133:55"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="133:55">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">s</name></expr></argument>, <argument pos:start="129:23" pos:end="129:33"><expr pos:start="129:23" pos:end="129:33"><name pos:start="129:23" pos:end="129:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="129:36" pos:end="129:85"><expr pos:start="129:36" pos:end="129:85"><literal type="string" pos:start="129:36" pos:end="129:85">"ignoring invalid packet_obj_size (%d %d %d %d)\n"</literal></expr></argument>,

                <argument pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:35"><name pos:start="131:17" pos:end="131:35"><name pos:start="131:17" pos:end="131:22">asf_st</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:35">frag_offset</name></name></expr></argument>, <argument pos:start="131:38" pos:end="131:58"><expr pos:start="131:38" pos:end="131:58"><name pos:start="131:38" pos:end="131:58"><name pos:start="131:38" pos:end="131:40">asf</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:58">packet_frag_size</name></name></expr></argument>,

                <argument pos:start="133:17" pos:end="133:36"><expr pos:start="133:17" pos:end="133:36"><name pos:start="133:17" pos:end="133:36"><name pos:start="133:17" pos:end="133:19">asf</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:36">packet_obj_size</name></name></expr></argument>, <argument pos:start="133:39" pos:end="133:54"><expr pos:start="133:39" pos:end="133:54"><name pos:start="133:39" pos:end="133:54"><name pos:start="133:39" pos:end="133:44">asf_st</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:49">pkt</name><operator pos:start="133:50" pos:end="133:50">.</operator><name pos:start="133:51" pos:end="133:54">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:51"><expr pos:start="135:13" pos:end="135:50"><name pos:start="135:13" pos:end="135:32"><name pos:start="135:13" pos:end="135:15">asf</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:32">packet_obj_size</name></name><operator pos:start="135:33" pos:end="135:33">=</operator> <name pos:start="135:35" pos:end="135:50"><name pos:start="135:35" pos:end="135:40">asf_st</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:45">pkt</name><operator pos:start="135:46" pos:end="135:46">.</operator><name pos:start="135:47" pos:end="135:50">size</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="141:9" pos:end="205:9"><if pos:start="141:9" pos:end="205:9">if <condition pos:start="141:12" pos:end="143:78">(   <expr pos:start="141:16" pos:end="143:77"><name pos:start="141:16" pos:end="141:31"><name pos:start="141:16" pos:end="141:21">asf_st</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:26">pkt</name><operator pos:start="141:27" pos:end="141:27">.</operator><name pos:start="141:28" pos:end="141:31">size</name></name> <operator pos:start="141:33" pos:end="141:34">!=</operator> <name pos:start="141:36" pos:end="141:55"><name pos:start="141:36" pos:end="141:38">asf</name><operator pos:start="141:39" pos:end="141:40">-&gt;</operator><name pos:start="141:41" pos:end="141:55">packet_obj_size</name></name>

            <operator pos:start="143:13" pos:end="143:14">||</operator> <name pos:start="143:16" pos:end="143:34"><name pos:start="143:16" pos:end="143:21">asf_st</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:34">frag_offset</name></name> <operator pos:start="143:36" pos:end="143:36">+</operator> <name pos:start="143:38" pos:end="143:58"><name pos:start="143:38" pos:end="143:40">asf</name><operator pos:start="143:41" pos:end="143:42">-&gt;</operator><name pos:start="143:43" pos:end="143:58">packet_frag_size</name></name> <operator pos:start="143:60" pos:end="143:60">&gt;</operator> <name pos:start="143:62" pos:end="143:77"><name pos:start="143:62" pos:end="143:67">asf_st</name><operator pos:start="143:68" pos:end="143:69">-&gt;</operator><name pos:start="143:70" pos:end="143:72">pkt</name><operator pos:start="143:73" pos:end="143:73">.</operator><name pos:start="143:74" pos:end="143:77">size</name></name></expr>)</condition> <block pos:start="143:80" pos:end="205:9">{<block_content pos:start="145:13" pos:end="203:53"> <comment type="line" pos:start="143:82" pos:end="143:118">//FIXME is this condition sufficient?</comment>

            <if_stmt pos:start="145:13" pos:end="153:13"><if pos:start="145:13" pos:end="153:13">if<condition pos:start="145:15" pos:end="145:32">(<expr pos:start="145:16" pos:end="145:31"><name pos:start="145:16" pos:end="145:31"><name pos:start="145:16" pos:end="145:21">asf_st</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:26">pkt</name><operator pos:start="145:27" pos:end="145:27">.</operator><name pos:start="145:28" pos:end="145:31">data</name></name></expr>)</condition><block pos:start="145:33" pos:end="153:13">{<block_content pos:start="147:17" pos:end="151:45">

                <expr_stmt pos:start="147:17" pos:end="147:126"><expr pos:start="147:17" pos:end="147:125"><call pos:start="147:17" pos:end="147:125"><name pos:start="147:17" pos:end="147:22">av_log</name><argument_list pos:start="147:23" pos:end="147:125">(<argument pos:start="147:24" pos:end="147:24"><expr pos:start="147:24" pos:end="147:24"><name pos:start="147:24" pos:end="147:24">s</name></expr></argument>, <argument pos:start="147:27" pos:end="147:37"><expr pos:start="147:27" pos:end="147:37"><name pos:start="147:27" pos:end="147:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="147:40" pos:end="147:84"><expr pos:start="147:40" pos:end="147:84"><literal type="string" pos:start="147:40" pos:end="147:84">"freeing incomplete packet size %d, new %d\n"</literal></expr></argument>, <argument pos:start="147:87" pos:end="147:102"><expr pos:start="147:87" pos:end="147:102"><name pos:start="147:87" pos:end="147:102"><name pos:start="147:87" pos:end="147:92">asf_st</name><operator pos:start="147:93" pos:end="147:94">-&gt;</operator><name pos:start="147:95" pos:end="147:97">pkt</name><operator pos:start="147:98" pos:end="147:98">.</operator><name pos:start="147:99" pos:end="147:102">size</name></name></expr></argument>, <argument pos:start="147:105" pos:end="147:124"><expr pos:start="147:105" pos:end="147:124"><name pos:start="147:105" pos:end="147:124"><name pos:start="147:105" pos:end="147:107">asf</name><operator pos:start="147:108" pos:end="147:109">-&gt;</operator><name pos:start="147:110" pos:end="147:124">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:40"><expr pos:start="149:17" pos:end="149:39"><name pos:start="149:17" pos:end="149:35"><name pos:start="149:17" pos:end="149:22">asf_st</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:35">frag_offset</name></name> <operator pos:start="149:37" pos:end="149:37">=</operator> <literal type="number" pos:start="149:39" pos:end="149:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:45"><expr pos:start="151:17" pos:end="151:44"><call pos:start="151:17" pos:end="151:44"><name pos:start="151:17" pos:end="151:30">av_free_packet</name><argument_list pos:start="151:31" pos:end="151:44">(<argument pos:start="151:32" pos:end="151:43"><expr pos:start="151:32" pos:end="151:43"><operator pos:start="151:32" pos:end="151:32">&amp;</operator><name pos:start="151:33" pos:end="151:43"><name pos:start="151:33" pos:end="151:38">asf_st</name><operator pos:start="151:39" pos:end="151:40">-&gt;</operator><name pos:start="151:41" pos:end="151:43">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="155:13" pos:end="155:28">/* new packet */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:62"><expr pos:start="157:13" pos:end="157:61"><call pos:start="157:13" pos:end="157:61"><name pos:start="157:13" pos:end="157:25">av_new_packet</name><argument_list pos:start="157:26" pos:end="157:61">(<argument pos:start="157:27" pos:end="157:38"><expr pos:start="157:27" pos:end="157:38"><operator pos:start="157:27" pos:end="157:27">&amp;</operator><name pos:start="157:28" pos:end="157:38"><name pos:start="157:28" pos:end="157:33">asf_st</name><operator pos:start="157:34" pos:end="157:35">-&gt;</operator><name pos:start="157:36" pos:end="157:38">pkt</name></name></expr></argument>, <argument pos:start="157:41" pos:end="157:60"><expr pos:start="157:41" pos:end="157:60"><name pos:start="157:41" pos:end="157:60"><name pos:start="157:41" pos:end="157:43">asf</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:60">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:42"><expr pos:start="159:13" pos:end="159:41"><name pos:start="159:13" pos:end="159:23"><name pos:start="159:13" pos:end="159:18">asf_st</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:23">seq</name></name> <operator pos:start="159:25" pos:end="159:25">=</operator> <name pos:start="159:27" pos:end="159:41"><name pos:start="159:27" pos:end="159:29">asf</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:41">packet_seq</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:76"><expr pos:start="161:13" pos:end="161:75"><name pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:18">asf_st</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:23">pkt</name><operator pos:start="161:24" pos:end="161:24">.</operator><name pos:start="161:25" pos:end="161:27">dts</name></name> <operator pos:start="161:29" pos:end="161:29">=</operator> <name pos:start="161:31" pos:end="161:56"><name pos:start="161:31" pos:end="161:33">asf</name><operator pos:start="161:34" pos:end="161:35">-&gt;</operator><name pos:start="161:36" pos:end="161:56">packet_frag_timestamp</name></name> <operator pos:start="161:58" pos:end="161:58">-</operator> <name pos:start="161:60" pos:end="161:75"><name pos:start="161:60" pos:end="161:62">asf</name><operator pos:start="161:63" pos:end="161:64">-&gt;</operator><name pos:start="161:65" pos:end="161:67">hdr</name><operator pos:start="161:68" pos:end="161:68">.</operator><name pos:start="161:69" pos:end="161:75">preroll</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:57"><expr pos:start="163:13" pos:end="163:56"><name pos:start="163:13" pos:end="163:36"><name pos:start="163:13" pos:end="163:18">asf_st</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:23">pkt</name><operator pos:start="163:24" pos:end="163:24">.</operator><name pos:start="163:25" pos:end="163:36">stream_index</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <name pos:start="163:40" pos:end="163:56"><name pos:start="163:40" pos:end="163:42">asf</name><operator pos:start="163:43" pos:end="163:44">-&gt;</operator><name pos:start="163:45" pos:end="163:56">stream_index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="167:48"><expr pos:start="165:13" pos:end="167:47"><name pos:start="165:13" pos:end="165:27"><name pos:start="165:13" pos:end="165:18">asf_st</name><operator pos:start="165:19" pos:end="165:20">-&gt;</operator><name pos:start="165:21" pos:end="165:23">pkt</name><operator pos:start="165:24" pos:end="165:24">.</operator><name pos:start="165:25" pos:end="165:27">pos</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator>

            <name pos:start="167:13" pos:end="167:30"><name pos:start="167:13" pos:end="167:18">asf_st</name><operator pos:start="167:19" pos:end="167:20">-&gt;</operator><name pos:start="167:21" pos:end="167:30">packet_pos</name></name><operator pos:start="167:31" pos:end="167:31">=</operator> <name pos:start="167:33" pos:end="167:47"><name pos:start="167:33" pos:end="167:35">asf</name><operator pos:start="167:36" pos:end="167:37">-&gt;</operator><name pos:start="167:38" pos:end="167:47">packet_pos</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="169:13" pos:end="189:13"><if pos:start="169:13" pos:end="189:13">if <condition pos:start="169:16" pos:end="169:60">(<expr pos:start="169:17" pos:end="169:59"><name pos:start="169:17" pos:end="169:32"><name pos:start="169:17" pos:end="169:22">asf_st</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:27">pkt</name><operator pos:start="169:28" pos:end="169:28">.</operator><name pos:start="169:29" pos:end="169:32">data</name></name> <operator pos:start="169:34" pos:end="169:35">&amp;&amp;</operator> <name pos:start="169:37" pos:end="169:59"><name pos:start="169:37" pos:end="169:42">asf_st</name><operator pos:start="169:43" pos:end="169:44">-&gt;</operator><name pos:start="169:45" pos:end="169:59">palette_changed</name></name></expr>)</condition> <block pos:start="169:62" pos:end="189:13">{<block_content pos:start="171:17" pos:end="187:17">

                <decl_stmt pos:start="171:17" pos:end="171:29"><decl pos:start="171:17" pos:end="171:28"><type pos:start="171:17" pos:end="171:25"><name pos:start="171:17" pos:end="171:23">uint8_t</name> <modifier pos:start="171:25" pos:end="171:25">*</modifier></type><name pos:start="171:26" pos:end="171:28">pal</name></decl>;</decl_stmt>

                <expr_stmt pos:start="173:17" pos:end="175:62"><expr pos:start="173:17" pos:end="175:61"><name pos:start="173:17" pos:end="173:19">pal</name> <operator pos:start="173:21" pos:end="173:21">=</operator> <call pos:start="173:23" pos:end="175:61"><name pos:start="173:23" pos:end="173:45">av_packet_new_side_data</name><argument_list pos:start="173:46" pos:end="175:61">(<argument pos:start="173:47" pos:end="173:58"><expr pos:start="173:47" pos:end="173:58"><operator pos:start="173:47" pos:end="173:47">&amp;</operator><name pos:start="173:48" pos:end="173:58"><name pos:start="173:48" pos:end="173:53">asf_st</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:58">pkt</name></name></expr></argument>, <argument pos:start="173:61" pos:end="173:79"><expr pos:start="173:61" pos:end="173:79"><name pos:start="173:61" pos:end="173:79">AV_PKT_DATA_PALETTE</name></expr></argument>,

                                              <argument pos:start="175:47" pos:end="175:60"><expr pos:start="175:47" pos:end="175:60"><name pos:start="175:47" pos:end="175:60">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="177:17" pos:end="187:17"><if pos:start="177:17" pos:end="181:17">if <condition pos:start="177:20" pos:end="177:25">(<expr pos:start="177:21" pos:end="177:24"><operator pos:start="177:21" pos:end="177:21">!</operator><name pos:start="177:22" pos:end="177:24">pal</name></expr>)</condition> <block pos:start="177:27" pos:end="181:17">{<block_content pos:start="179:21" pos:end="179:81">

                    <expr_stmt pos:start="179:21" pos:end="179:81"><expr pos:start="179:21" pos:end="179:80"><call pos:start="179:21" pos:end="179:80"><name pos:start="179:21" pos:end="179:26">av_log</name><argument_list pos:start="179:27" pos:end="179:80">(<argument pos:start="179:28" pos:end="179:28"><expr pos:start="179:28" pos:end="179:28"><name pos:start="179:28" pos:end="179:28">s</name></expr></argument>, <argument pos:start="179:31" pos:end="179:42"><expr pos:start="179:31" pos:end="179:42"><name pos:start="179:31" pos:end="179:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:45" pos:end="179:79"><expr pos:start="179:45" pos:end="179:79"><literal type="string" pos:start="179:45" pos:end="179:79">"Cannot append palette to packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="181:19" pos:end="187:17">else <block pos:start="181:24" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:48">

                    <expr_stmt pos:start="183:21" pos:end="183:65"><expr pos:start="183:21" pos:end="183:64"><call pos:start="183:21" pos:end="183:64"><name pos:start="183:21" pos:end="183:26">memcpy</name><argument_list pos:start="183:27" pos:end="183:64">(<argument pos:start="183:28" pos:end="183:30"><expr pos:start="183:28" pos:end="183:30"><name pos:start="183:28" pos:end="183:30">pal</name></expr></argument>, <argument pos:start="183:33" pos:end="183:47"><expr pos:start="183:33" pos:end="183:47"><name pos:start="183:33" pos:end="183:47"><name pos:start="183:33" pos:end="183:38">asf_st</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:47">palette</name></name></expr></argument>, <argument pos:start="183:50" pos:end="183:63"><expr pos:start="183:50" pos:end="183:63"><name pos:start="183:50" pos:end="183:63">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:48"><expr pos:start="185:21" pos:end="185:47"><name pos:start="185:21" pos:end="185:43"><name pos:start="185:21" pos:end="185:26">asf_st</name><operator pos:start="185:27" pos:end="185:28">-&gt;</operator><name pos:start="185:29" pos:end="185:43">palette_changed</name></name> <operator pos:start="185:45" pos:end="185:45">=</operator> <literal type="number" pos:start="185:47" pos:end="185:47">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

<comment type="line" pos:start="191:1" pos:end="191:73">//printf("new packet: stream:%d key:%d packet_key:%d audio:%d size:%d\n",</comment>

<comment type="line" pos:start="193:1" pos:end="193:80">//asf-&gt;stream_index, asf-&gt;packet_key_frame, asf_st-&gt;pkt.flags &amp; AV_PKT_FLAG_KEY,</comment>

<comment type="line" pos:start="195:1" pos:end="195:96">//s-&gt;streams[asf-&gt;stream_index]-&gt;codec-&gt;codec_type == AVMEDIA_TYPE_AUDIO, asf-&gt;packet_obj_size);</comment>

            <if_stmt pos:start="197:13" pos:end="199:42"><if pos:start="197:13" pos:end="199:42">if <condition pos:start="197:16" pos:end="197:87">(<expr pos:start="197:17" pos:end="197:86"><name pos:start="197:17" pos:end="197:45"><name pos:start="197:17" pos:end="197:17">s</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:26">streams</name><index pos:start="197:27" pos:end="197:45">[<expr pos:start="197:28" pos:end="197:44"><name pos:start="197:28" pos:end="197:44"><name pos:start="197:28" pos:end="197:30">asf</name><operator pos:start="197:31" pos:end="197:32">-&gt;</operator><name pos:start="197:33" pos:end="197:44">stream_index</name></name></expr>]</index></name><operator pos:start="197:46" pos:end="197:47">-&gt;</operator><name pos:start="197:48" pos:end="197:64"><name pos:start="197:48" pos:end="197:52">codec</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:64">codec_type</name></name> <operator pos:start="197:66" pos:end="197:67">==</operator> <name pos:start="197:69" pos:end="197:86">AVMEDIA_TYPE_AUDIO</name></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:42"><block_content pos:start="199:17" pos:end="199:42">

                <expr_stmt pos:start="199:17" pos:end="199:42"><expr pos:start="199:17" pos:end="199:41"><name pos:start="199:17" pos:end="199:37"><name pos:start="199:17" pos:end="199:19">asf</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:37">packet_key_frame</name></name> <operator pos:start="199:39" pos:end="199:39">=</operator> <literal type="number" pos:start="199:41" pos:end="199:41">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="201:13" pos:end="203:53"><if pos:start="201:13" pos:end="203:53">if <condition pos:start="201:16" pos:end="201:38">(<expr pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:19">asf</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:37">packet_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:53"><block_content pos:start="203:17" pos:end="203:53">

                <expr_stmt pos:start="203:17" pos:end="203:53"><expr pos:start="203:17" pos:end="203:52"><name pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:22">asf_st</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:27">pkt</name><operator pos:start="203:28" pos:end="203:28">.</operator><name pos:start="203:29" pos:end="203:33">flags</name></name> <operator pos:start="203:35" pos:end="203:36">|=</operator> <name pos:start="203:38" pos:end="203:52">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="209:9" pos:end="209:23">/* read data */</comment>

        <comment type="line" pos:start="211:9" pos:end="211:70">//printf("READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n",</comment>

        <comment type="line" pos:start="213:9" pos:end="213:75">//       s-&gt;packet_size, asf_st-&gt;pkt.size, asf-&gt;packet_frag_offset,</comment>

        <comment type="line" pos:start="215:9" pos:end="215:79">//       asf_st-&gt;frag_offset, asf-&gt;packet_frag_size, asf_st-&gt;pkt.data);</comment>

        <expr_stmt pos:start="217:9" pos:end="217:55"><expr pos:start="217:9" pos:end="217:54"><name pos:start="217:9" pos:end="217:29"><name pos:start="217:9" pos:end="217:11">asf</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:29">packet_size_left</name></name> <operator pos:start="217:31" pos:end="217:32">-=</operator> <name pos:start="217:34" pos:end="217:54"><name pos:start="217:34" pos:end="217:36">asf</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:54">packet_frag_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="219:9" pos:end="221:21"><if pos:start="219:9" pos:end="221:21">if <condition pos:start="219:12" pos:end="219:38">(<expr pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:33"><name pos:start="219:13" pos:end="219:15">asf</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:33">packet_size_left</name></name> <operator pos:start="219:35" pos:end="219:35">&lt;</operator> <literal type="number" pos:start="219:37" pos:end="219:37">0</literal></expr>)</condition><block type="pseudo" pos:start="221:13" pos:end="221:21"><block_content pos:start="221:13" pos:end="221:21">

            <continue pos:start="221:13" pos:end="221:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="225:9" pos:end="235:9"><if pos:start="225:9" pos:end="235:9">if<condition pos:start="225:11" pos:end="227:81">(   <expr pos:start="225:15" pos:end="227:80"><name pos:start="225:15" pos:end="225:37"><name pos:start="225:15" pos:end="225:17">asf</name><operator pos:start="225:18" pos:end="225:19">-&gt;</operator><name pos:start="225:20" pos:end="225:37">packet_frag_offset</name></name> <operator pos:start="225:39" pos:end="225:40">&gt;=</operator> <name pos:start="225:42" pos:end="225:57"><name pos:start="225:42" pos:end="225:47">asf_st</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:52">pkt</name><operator pos:start="225:53" pos:end="225:53">.</operator><name pos:start="225:54" pos:end="225:57">size</name></name>

           <operator pos:start="227:12" pos:end="227:13">||</operator> <name pos:start="227:15" pos:end="227:35"><name pos:start="227:15" pos:end="227:17">asf</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:35">packet_frag_size</name></name> <operator pos:start="227:37" pos:end="227:37">&gt;</operator> <name pos:start="227:39" pos:end="227:54"><name pos:start="227:39" pos:end="227:44">asf_st</name><operator pos:start="227:45" pos:end="227:46">-&gt;</operator><name pos:start="227:47" pos:end="227:49">pkt</name><operator pos:start="227:50" pos:end="227:50">.</operator><name pos:start="227:51" pos:end="227:54">size</name></name> <operator pos:start="227:56" pos:end="227:56">-</operator> <name pos:start="227:58" pos:end="227:80"><name pos:start="227:58" pos:end="227:60">asf</name><operator pos:start="227:61" pos:end="227:62">-&gt;</operator><name pos:start="227:63" pos:end="227:80">packet_frag_offset</name></name></expr>)</condition><block pos:start="227:82" pos:end="235:9">{<block_content pos:start="229:13" pos:end="233:21">

            <expr_stmt pos:start="229:13" pos:end="231:82"><expr pos:start="229:13" pos:end="231:81"><call pos:start="229:13" pos:end="231:81"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="231:81">(<argument pos:start="229:20" pos:end="229:20"><expr pos:start="229:20" pos:end="229:20"><name pos:start="229:20" pos:end="229:20">s</name></expr></argument>, <argument pos:start="229:23" pos:end="229:34"><expr pos:start="229:23" pos:end="229:34"><name pos:start="229:23" pos:end="229:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:37" pos:end="229:88"><expr pos:start="229:37" pos:end="229:88"><literal type="string" pos:start="229:37" pos:end="229:88">"packet fragment position invalid %u,%u not in %u\n"</literal></expr></argument>,

                <argument pos:start="231:17" pos:end="231:39"><expr pos:start="231:17" pos:end="231:39"><name pos:start="231:17" pos:end="231:39"><name pos:start="231:17" pos:end="231:19">asf</name><operator pos:start="231:20" pos:end="231:21">-&gt;</operator><name pos:start="231:22" pos:end="231:39">packet_frag_offset</name></name></expr></argument>, <argument pos:start="231:42" pos:end="231:62"><expr pos:start="231:42" pos:end="231:62"><name pos:start="231:42" pos:end="231:62"><name pos:start="231:42" pos:end="231:44">asf</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:62">packet_frag_size</name></name></expr></argument>, <argument pos:start="231:65" pos:end="231:80"><expr pos:start="231:65" pos:end="231:80"><name pos:start="231:65" pos:end="231:80"><name pos:start="231:65" pos:end="231:70">asf_st</name><operator pos:start="231:71" pos:end="231:72">-&gt;</operator><name pos:start="231:73" pos:end="231:75">pkt</name><operator pos:start="231:76" pos:end="231:76">.</operator><name pos:start="231:77" pos:end="231:80">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <continue pos:start="233:13" pos:end="233:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="239:9" pos:end="241:48"><expr pos:start="239:9" pos:end="241:47"><name pos:start="239:9" pos:end="239:11">ret</name> <operator pos:start="239:13" pos:end="239:13">=</operator> <call pos:start="239:15" pos:end="241:47"><name pos:start="239:15" pos:end="239:23">avio_read</name><argument_list pos:start="239:24" pos:end="241:47">(<argument pos:start="239:25" pos:end="239:26"><expr pos:start="239:25" pos:end="239:26"><name pos:start="239:25" pos:end="239:26">pb</name></expr></argument>, <argument pos:start="239:29" pos:end="239:70"><expr pos:start="239:29" pos:end="239:70"><name pos:start="239:29" pos:end="239:44"><name pos:start="239:29" pos:end="239:34">asf_st</name><operator pos:start="239:35" pos:end="239:36">-&gt;</operator><name pos:start="239:37" pos:end="239:39">pkt</name><operator pos:start="239:40" pos:end="239:40">.</operator><name pos:start="239:41" pos:end="239:44">data</name></name> <operator pos:start="239:46" pos:end="239:46">+</operator> <name pos:start="239:48" pos:end="239:70"><name pos:start="239:48" pos:end="239:50">asf</name><operator pos:start="239:51" pos:end="239:52">-&gt;</operator><name pos:start="239:53" pos:end="239:70">packet_frag_offset</name></name></expr></argument>,

                         <argument pos:start="241:26" pos:end="241:46"><expr pos:start="241:26" pos:end="241:46"><name pos:start="241:26" pos:end="241:46"><name pos:start="241:26" pos:end="241:28">asf</name><operator pos:start="241:29" pos:end="241:30">-&gt;</operator><name pos:start="241:31" pos:end="241:46">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="243:9" pos:end="269:9"><if pos:start="243:9" pos:end="269:9">if <condition pos:start="243:12" pos:end="243:41">(<expr pos:start="243:13" pos:end="243:40"><name pos:start="243:13" pos:end="243:15">ret</name> <operator pos:start="243:17" pos:end="243:18">!=</operator> <name pos:start="243:20" pos:end="243:40"><name pos:start="243:20" pos:end="243:22">asf</name><operator pos:start="243:23" pos:end="243:24">-&gt;</operator><name pos:start="243:25" pos:end="243:40">packet_frag_size</name></name></expr>)</condition> <block pos:start="243:43" pos:end="269:9">{<block_content pos:start="245:13" pos:end="267:78">

            <if_stmt pos:start="245:13" pos:end="247:51"><if pos:start="245:13" pos:end="247:51">if <condition pos:start="245:16" pos:end="245:62">(<expr pos:start="245:17" pos:end="245:61"><name pos:start="245:17" pos:end="245:19">ret</name> <operator pos:start="245:21" pos:end="245:21">&lt;</operator> <literal type="number" pos:start="245:23" pos:end="245:23">0</literal> <operator pos:start="245:25" pos:end="245:26">||</operator> <name pos:start="245:28" pos:end="245:50"><name pos:start="245:28" pos:end="245:30">asf</name><operator pos:start="245:31" pos:end="245:32">-&gt;</operator><name pos:start="245:33" pos:end="245:50">packet_frag_offset</name></name> <operator pos:start="245:52" pos:end="245:52">+</operator> <name pos:start="245:54" pos:end="245:56">ret</name> <operator pos:start="245:58" pos:end="245:59">==</operator> <literal type="number" pos:start="245:61" pos:end="245:61">0</literal></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:51"><block_content pos:start="247:17" pos:end="247:51">

                <return pos:start="247:17" pos:end="247:51">return <expr pos:start="247:24" pos:end="247:50"><ternary pos:start="247:24" pos:end="247:50"><condition pos:start="247:24" pos:end="247:32"><expr pos:start="247:24" pos:end="247:30"><name pos:start="247:24" pos:end="247:26">ret</name> <operator pos:start="247:28" pos:end="247:28">&lt;</operator> <literal type="number" pos:start="247:30" pos:end="247:30">0</literal></expr> ?</condition><then pos:start="247:34" pos:end="247:36"> <expr pos:start="247:34" pos:end="247:36"><name pos:start="247:34" pos:end="247:36">ret</name></expr> </then><else pos:start="247:38" pos:end="247:50">: <expr pos:start="247:40" pos:end="247:50"><name pos:start="247:40" pos:end="247:50">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="249:13" pos:end="267:78"><if pos:start="249:13" pos:end="263:13">if <condition pos:start="249:16" pos:end="249:36">(<expr pos:start="249:17" pos:end="249:35"><name pos:start="249:17" pos:end="249:31"><name pos:start="249:17" pos:end="249:22">asf_st</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:31">ds_span</name></name> <operator pos:start="249:33" pos:end="249:33">&gt;</operator> <literal type="number" pos:start="249:35" pos:end="249:35">1</literal></expr>)</condition> <block pos:start="249:38" pos:end="263:13">{<block_content pos:start="257:17" pos:end="261:44">

                <comment type="line" pos:start="251:17" pos:end="251:85">// scrambling, we can either drop it completely or fill the remainder</comment>

                <comment type="line" pos:start="253:17" pos:end="253:84">// TODO: should we fill the whole packet instead of just the current</comment>

                <comment type="line" pos:start="255:17" pos:end="255:28">// fragment?</comment>

                <expr_stmt pos:start="257:17" pos:end="259:52"><expr pos:start="257:17" pos:end="259:51"><call pos:start="257:17" pos:end="259:51"><name pos:start="257:17" pos:end="257:22">memset</name><argument_list pos:start="257:23" pos:end="259:51">(<argument pos:start="257:24" pos:end="257:71"><expr pos:start="257:24" pos:end="257:71"><name pos:start="257:24" pos:end="257:39"><name pos:start="257:24" pos:end="257:29">asf_st</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:34">pkt</name><operator pos:start="257:35" pos:end="257:35">.</operator><name pos:start="257:36" pos:end="257:39">data</name></name> <operator pos:start="257:41" pos:end="257:41">+</operator> <name pos:start="257:43" pos:end="257:65"><name pos:start="257:43" pos:end="257:45">asf</name><operator pos:start="257:46" pos:end="257:47">-&gt;</operator><name pos:start="257:48" pos:end="257:65">packet_frag_offset</name></name> <operator pos:start="257:67" pos:end="257:67">+</operator> <name pos:start="257:69" pos:end="257:71">ret</name></expr></argument>, <argument pos:start="257:74" pos:end="257:74"><expr pos:start="257:74" pos:end="257:74"><literal type="number" pos:start="257:74" pos:end="257:74">0</literal></expr></argument>,

                       <argument pos:start="259:24" pos:end="259:50"><expr pos:start="259:24" pos:end="259:50"><name pos:start="259:24" pos:end="259:44"><name pos:start="259:24" pos:end="259:26">asf</name><operator pos:start="259:27" pos:end="259:28">-&gt;</operator><name pos:start="259:29" pos:end="259:44">packet_frag_size</name></name> <operator pos:start="259:46" pos:end="259:46">-</operator> <name pos:start="259:48" pos:end="259:50">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:44"><expr pos:start="261:17" pos:end="261:43"><name pos:start="261:17" pos:end="261:19">ret</name> <operator pos:start="261:21" pos:end="261:21">=</operator> <name pos:start="261:23" pos:end="261:43"><name pos:start="261:23" pos:end="261:25">asf</name><operator pos:start="261:26" pos:end="261:27">-&gt;</operator><name pos:start="261:28" pos:end="261:43">packet_frag_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="263:15" pos:end="267:78">else<block type="pseudo" pos:start="267:17" pos:end="267:78"><block_content pos:start="267:17" pos:end="267:78">

                <comment type="line" pos:start="265:17" pos:end="265:66">// no scrambling, so we can return partial packets</comment>

                <expr_stmt pos:start="267:17" pos:end="267:78"><expr pos:start="267:17" pos:end="267:77"><call pos:start="267:17" pos:end="267:77"><name pos:start="267:17" pos:end="267:32">av_shrink_packet</name><argument_list pos:start="267:33" pos:end="267:77">(<argument pos:start="267:34" pos:end="267:45"><expr pos:start="267:34" pos:end="267:45"><operator pos:start="267:34" pos:end="267:34">&amp;</operator><name pos:start="267:35" pos:end="267:45"><name pos:start="267:35" pos:end="267:40">asf_st</name><operator pos:start="267:41" pos:end="267:42">-&gt;</operator><name pos:start="267:43" pos:end="267:45">pkt</name></name></expr></argument>, <argument pos:start="267:48" pos:end="267:76"><expr pos:start="267:48" pos:end="267:76"><name pos:start="267:48" pos:end="267:70"><name pos:start="267:48" pos:end="267:50">asf</name><operator pos:start="267:51" pos:end="267:52">-&gt;</operator><name pos:start="267:53" pos:end="267:70">packet_frag_offset</name></name> <operator pos:start="267:72" pos:end="267:72">+</operator> <name pos:start="267:74" pos:end="267:76">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="271:9" pos:end="275:33"><if pos:start="271:9" pos:end="275:33">if <condition pos:start="271:12" pos:end="271:38">(<expr pos:start="271:13" pos:end="271:37"><name pos:start="271:13" pos:end="271:18"><name pos:start="271:13" pos:end="271:13">s</name><operator pos:start="271:14" pos:end="271:15">-&gt;</operator><name pos:start="271:16" pos:end="271:18">key</name></name> <operator pos:start="271:20" pos:end="271:21">&amp;&amp;</operator> <name pos:start="271:23" pos:end="271:31"><name pos:start="271:23" pos:end="271:23">s</name><operator pos:start="271:24" pos:end="271:25">-&gt;</operator><name pos:start="271:26" pos:end="271:31">keylen</name></name> <operator pos:start="271:33" pos:end="271:34">==</operator> <literal type="number" pos:start="271:36" pos:end="271:37">20</literal></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="275:33"><block_content pos:start="273:13" pos:end="275:33">

            <expr_stmt pos:start="273:13" pos:end="275:33"><expr pos:start="273:13" pos:end="275:32"><call pos:start="273:13" pos:end="275:32"><name pos:start="273:13" pos:end="273:27">ff_asfcrypt_dec</name><argument_list pos:start="273:28" pos:end="275:32">(<argument pos:start="273:29" pos:end="273:34"><expr pos:start="273:29" pos:end="273:34"><name pos:start="273:29" pos:end="273:34"><name pos:start="273:29" pos:end="273:29">s</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:34">key</name></name></expr></argument>, <argument pos:start="273:37" pos:end="273:78"><expr pos:start="273:37" pos:end="273:78"><name pos:start="273:37" pos:end="273:52"><name pos:start="273:37" pos:end="273:42">asf_st</name><operator pos:start="273:43" pos:end="273:44">-&gt;</operator><name pos:start="273:45" pos:end="273:47">pkt</name><operator pos:start="273:48" pos:end="273:48">.</operator><name pos:start="273:49" pos:end="273:52">data</name></name> <operator pos:start="273:54" pos:end="273:54">+</operator> <name pos:start="273:56" pos:end="273:78"><name pos:start="273:56" pos:end="273:58">asf</name><operator pos:start="273:59" pos:end="273:60">-&gt;</operator><name pos:start="273:61" pos:end="273:78">packet_frag_offset</name></name></expr></argument>,

                            <argument pos:start="275:29" pos:end="275:31"><expr pos:start="275:29" pos:end="275:31"><name pos:start="275:29" pos:end="275:31">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:35"><expr pos:start="277:9" pos:end="277:34"><name pos:start="277:9" pos:end="277:27"><name pos:start="277:9" pos:end="277:14">asf_st</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:27">frag_offset</name></name> <operator pos:start="277:29" pos:end="277:30">+=</operator> <name pos:start="277:32" pos:end="277:34">ret</name></expr>;</expr_stmt>

        <comment type="block" pos:start="279:9" pos:end="279:42">/* test if whole packet is read */</comment>

        <if_stmt pos:start="281:9" pos:end="381:9"><if pos:start="281:9" pos:end="381:9">if <condition pos:start="281:12" pos:end="281:52">(<expr pos:start="281:13" pos:end="281:51"><name pos:start="281:13" pos:end="281:31"><name pos:start="281:13" pos:end="281:18">asf_st</name><operator pos:start="281:19" pos:end="281:20">-&gt;</operator><name pos:start="281:21" pos:end="281:31">frag_offset</name></name> <operator pos:start="281:33" pos:end="281:34">==</operator> <name pos:start="281:36" pos:end="281:51"><name pos:start="281:36" pos:end="281:41">asf_st</name><operator pos:start="281:42" pos:end="281:43">-&gt;</operator><name pos:start="281:44" pos:end="281:46">pkt</name><operator pos:start="281:47" pos:end="281:47">.</operator><name pos:start="281:48" pos:end="281:51">size</name></name></expr>)</condition> <block pos:start="281:54" pos:end="381:9">{<block_content pos:start="285:13" pos:end="379:18">

            <comment type="line" pos:start="283:13" pos:end="283:57">//workaround for macroshit radio DVR-MS files</comment>

            <if_stmt pos:start="285:13" pos:end="305:13"><if pos:start="285:13" pos:end="305:13">if<condition pos:start="285:15" pos:end="287:41">(   <expr pos:start="285:19" pos:end="287:40"><name pos:start="285:19" pos:end="285:47"><name pos:start="285:19" pos:end="285:19">s</name><operator pos:start="285:20" pos:end="285:21">-&gt;</operator><name pos:start="285:22" pos:end="285:28">streams</name><index pos:start="285:29" pos:end="285:47">[<expr pos:start="285:30" pos:end="285:46"><name pos:start="285:30" pos:end="285:46"><name pos:start="285:30" pos:end="285:32">asf</name><operator pos:start="285:33" pos:end="285:34">-&gt;</operator><name pos:start="285:35" pos:end="285:46">stream_index</name></name></expr>]</index></name><operator pos:start="285:48" pos:end="285:49">-&gt;</operator><name pos:start="285:50" pos:end="285:64"><name pos:start="285:50" pos:end="285:54">codec</name><operator pos:start="285:55" pos:end="285:56">-&gt;</operator><name pos:start="285:57" pos:end="285:64">codec_id</name></name> <operator pos:start="285:66" pos:end="285:67">==</operator> <name pos:start="285:69" pos:end="285:87">CODEC_ID_MPEG2VIDEO</name>

               <operator pos:start="287:16" pos:end="287:17">&amp;&amp;</operator> <name pos:start="287:19" pos:end="287:34"><name pos:start="287:19" pos:end="287:24">asf_st</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:29">pkt</name><operator pos:start="287:30" pos:end="287:30">.</operator><name pos:start="287:31" pos:end="287:34">size</name></name> <operator pos:start="287:36" pos:end="287:36">&gt;</operator> <literal type="number" pos:start="287:38" pos:end="287:40">100</literal></expr>)</condition><block pos:start="287:42" pos:end="305:13">{<block_content pos:start="289:17" pos:end="303:17">

                <decl_stmt pos:start="289:17" pos:end="289:22"><decl pos:start="289:17" pos:end="289:21"><type pos:start="289:17" pos:end="289:19"><name pos:start="289:17" pos:end="289:19">int</name></type> <name pos:start="289:21" pos:end="289:21">i</name></decl>;</decl_stmt>

                <for pos:start="291:17" pos:end="291:74">for<control pos:start="291:20" pos:end="291:73">(<init pos:start="291:21" pos:end="291:24"><expr pos:start="291:21" pos:end="291:23"><name pos:start="291:21" pos:end="291:21">i</name><operator pos:start="291:22" pos:end="291:22">=</operator><literal type="number" pos:start="291:23" pos:end="291:23">0</literal></expr>;</init> <condition pos:start="291:26" pos:end="291:68"><expr pos:start="291:26" pos:end="291:67"><name pos:start="291:26" pos:end="291:26">i</name><operator pos:start="291:27" pos:end="291:27">&lt;</operator><name pos:start="291:28" pos:end="291:43"><name pos:start="291:28" pos:end="291:33">asf_st</name><operator pos:start="291:34" pos:end="291:35">-&gt;</operator><name pos:start="291:36" pos:end="291:38">pkt</name><operator pos:start="291:39" pos:end="291:39">.</operator><name pos:start="291:40" pos:end="291:43">size</name></name> <operator pos:start="291:45" pos:end="291:46">&amp;&amp;</operator> <operator pos:start="291:48" pos:end="291:48">!</operator><name pos:start="291:49" pos:end="291:67"><name pos:start="291:49" pos:end="291:54">asf_st</name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:59">pkt</name><operator pos:start="291:60" pos:end="291:60">.</operator><name pos:start="291:61" pos:end="291:64">data</name><index pos:start="291:65" pos:end="291:67">[<expr pos:start="291:66" pos:end="291:66"><name pos:start="291:66" pos:end="291:66">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="291:70" pos:end="291:72"><expr pos:start="291:70" pos:end="291:72"><name pos:start="291:70" pos:end="291:70">i</name><operator pos:start="291:71" pos:end="291:72">++</operator></expr></incr>)</control><block type="pseudo" pos:start="291:74" pos:end="291:74"><block_content pos:start="291:74" pos:end="291:74"><empty_stmt pos:start="291:74" pos:end="291:74">;</empty_stmt></block_content></block></for>

                <if_stmt pos:start="293:17" pos:end="303:17"><if pos:start="293:17" pos:end="303:17">if<condition pos:start="293:19" pos:end="293:41">(<expr pos:start="293:20" pos:end="293:40"><name pos:start="293:20" pos:end="293:20">i</name> <operator pos:start="293:22" pos:end="293:23">==</operator> <name pos:start="293:25" pos:end="293:40"><name pos:start="293:25" pos:end="293:30">asf_st</name><operator pos:start="293:31" pos:end="293:32">-&gt;</operator><name pos:start="293:33" pos:end="293:35">pkt</name><operator pos:start="293:36" pos:end="293:36">.</operator><name pos:start="293:37" pos:end="293:40">size</name></name></expr>)</condition><block pos:start="293:42" pos:end="303:17">{<block_content pos:start="295:21" pos:end="301:29">

                    <expr_stmt pos:start="295:21" pos:end="295:68"><expr pos:start="295:21" pos:end="295:67"><call pos:start="295:21" pos:end="295:67"><name pos:start="295:21" pos:end="295:26">av_log</name><argument_list pos:start="295:27" pos:end="295:67">(<argument pos:start="295:28" pos:end="295:28"><expr pos:start="295:28" pos:end="295:28"><name pos:start="295:28" pos:end="295:28">s</name></expr></argument>, <argument pos:start="295:31" pos:end="295:42"><expr pos:start="295:31" pos:end="295:42"><name pos:start="295:31" pos:end="295:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="295:45" pos:end="295:66"><expr pos:start="295:45" pos:end="295:66"><literal type="string" pos:start="295:45" pos:end="295:66">"discarding ms fart\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="297:21" pos:end="297:44"><expr pos:start="297:21" pos:end="297:43"><name pos:start="297:21" pos:end="297:39"><name pos:start="297:21" pos:end="297:26">asf_st</name><operator pos:start="297:27" pos:end="297:28">-&gt;</operator><name pos:start="297:29" pos:end="297:39">frag_offset</name></name> <operator pos:start="297:41" pos:end="297:41">=</operator> <literal type="number" pos:start="297:43" pos:end="297:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="299:21" pos:end="299:49"><expr pos:start="299:21" pos:end="299:48"><call pos:start="299:21" pos:end="299:48"><name pos:start="299:21" pos:end="299:34">av_free_packet</name><argument_list pos:start="299:35" pos:end="299:48">(<argument pos:start="299:36" pos:end="299:47"><expr pos:start="299:36" pos:end="299:47"><operator pos:start="299:36" pos:end="299:36">&amp;</operator><name pos:start="299:37" pos:end="299:47"><name pos:start="299:37" pos:end="299:42">asf_st</name><operator pos:start="299:43" pos:end="299:44">-&gt;</operator><name pos:start="299:45" pos:end="299:47">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <continue pos:start="301:21" pos:end="301:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="309:13" pos:end="309:31">/* return packet */</comment>

            <if_stmt pos:start="311:13" pos:end="365:13"><if pos:start="311:13" pos:end="365:13">if <condition pos:start="311:16" pos:end="311:36">(<expr pos:start="311:17" pos:end="311:35"><name pos:start="311:17" pos:end="311:31"><name pos:start="311:17" pos:end="311:22">asf_st</name><operator pos:start="311:23" pos:end="311:24">-&gt;</operator><name pos:start="311:25" pos:end="311:31">ds_span</name></name> <operator pos:start="311:33" pos:end="311:33">&gt;</operator> <literal type="number" pos:start="311:35" pos:end="311:35">1</literal></expr>)</condition> <block pos:start="311:38" pos:end="365:13">{<block_content pos:start="313:15" pos:end="363:15">

              <if_stmt pos:start="313:15" pos:end="363:15"><if pos:start="313:15" pos:end="317:15">if<condition pos:start="313:17" pos:end="313:78">(<expr pos:start="313:18" pos:end="313:77"><name pos:start="313:18" pos:end="313:33"><name pos:start="313:18" pos:end="313:23">asf_st</name><operator pos:start="313:24" pos:end="313:25">-&gt;</operator><name pos:start="313:26" pos:end="313:28">pkt</name><operator pos:start="313:29" pos:end="313:29">.</operator><name pos:start="313:30" pos:end="313:33">size</name></name> <operator pos:start="313:35" pos:end="313:36">!=</operator> <name pos:start="313:38" pos:end="313:59"><name pos:start="313:38" pos:end="313:43">asf_st</name><operator pos:start="313:44" pos:end="313:45">-&gt;</operator><name pos:start="313:46" pos:end="313:59">ds_packet_size</name></name> <operator pos:start="313:61" pos:end="313:61">*</operator> <name pos:start="313:63" pos:end="313:77"><name pos:start="313:63" pos:end="313:68">asf_st</name><operator pos:start="313:69" pos:end="313:70">-&gt;</operator><name pos:start="313:71" pos:end="313:77">ds_span</name></name></expr>)</condition><block pos:start="313:79" pos:end="317:15">{<block_content pos:start="315:21" pos:end="315:156">

                    <expr_stmt pos:start="315:21" pos:end="315:156"><expr pos:start="315:21" pos:end="315:155"><call pos:start="315:21" pos:end="315:155"><name pos:start="315:21" pos:end="315:26">av_log</name><argument_list pos:start="315:27" pos:end="315:155">(<argument pos:start="315:28" pos:end="315:28"><expr pos:start="315:28" pos:end="315:28"><name pos:start="315:28" pos:end="315:28">s</name></expr></argument>, <argument pos:start="315:31" pos:end="315:42"><expr pos:start="315:31" pos:end="315:42"><name pos:start="315:31" pos:end="315:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="315:45" pos:end="315:95"><expr pos:start="315:45" pos:end="315:95"><literal type="string" pos:start="315:45" pos:end="315:95">"pkt.size != ds_packet_size * ds_span (%d %d %d)\n"</literal></expr></argument>, <argument pos:start="315:98" pos:end="315:113"><expr pos:start="315:98" pos:end="315:113"><name pos:start="315:98" pos:end="315:113"><name pos:start="315:98" pos:end="315:103">asf_st</name><operator pos:start="315:104" pos:end="315:105">-&gt;</operator><name pos:start="315:106" pos:end="315:108">pkt</name><operator pos:start="315:109" pos:end="315:109">.</operator><name pos:start="315:110" pos:end="315:113">size</name></name></expr></argument>, <argument pos:start="315:116" pos:end="315:137"><expr pos:start="315:116" pos:end="315:137"><name pos:start="315:116" pos:end="315:137"><name pos:start="315:116" pos:end="315:121">asf_st</name><operator pos:start="315:122" pos:end="315:123">-&gt;</operator><name pos:start="315:124" pos:end="315:137">ds_packet_size</name></name></expr></argument>, <argument pos:start="315:140" pos:end="315:154"><expr pos:start="315:140" pos:end="315:154"><name pos:start="315:140" pos:end="315:154"><name pos:start="315:140" pos:end="315:145">asf_st</name><operator pos:start="315:146" pos:end="315:147">-&gt;</operator><name pos:start="315:148" pos:end="315:154">ds_span</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

              </block_content>}</block></if><else pos:start="317:16" pos:end="363:15">else<block pos:start="317:20" pos:end="363:15">{<block_content pos:start="321:17" pos:end="361:17">

                <comment type="block" pos:start="319:17" pos:end="319:41">/* packet descrambling */</comment>

                <decl_stmt pos:start="321:17" pos:end="321:94"><decl pos:start="321:17" pos:end="321:93"><type pos:start="321:17" pos:end="321:25"><name pos:start="321:17" pos:end="321:23">uint8_t</name> <modifier pos:start="321:25" pos:end="321:25">*</modifier></type><name pos:start="321:26" pos:end="321:32">newdata</name> <init pos:start="321:34" pos:end="321:93">= <expr pos:start="321:36" pos:end="321:93"><call pos:start="321:36" pos:end="321:93"><name pos:start="321:36" pos:end="321:44">av_malloc</name><argument_list pos:start="321:45" pos:end="321:93">(<argument pos:start="321:46" pos:end="321:92"><expr pos:start="321:46" pos:end="321:92"><name pos:start="321:46" pos:end="321:61"><name pos:start="321:46" pos:end="321:51">asf_st</name><operator pos:start="321:52" pos:end="321:53">-&gt;</operator><name pos:start="321:54" pos:end="321:56">pkt</name><operator pos:start="321:57" pos:end="321:57">.</operator><name pos:start="321:58" pos:end="321:61">size</name></name> <operator pos:start="321:63" pos:end="321:63">+</operator> <name pos:start="321:65" pos:end="321:92">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="323:17" pos:end="361:17"><if pos:start="323:17" pos:end="361:17">if <condition pos:start="323:20" pos:end="323:28">(<expr pos:start="323:21" pos:end="323:27"><name pos:start="323:21" pos:end="323:27">newdata</name></expr>)</condition> <block pos:start="323:30" pos:end="361:17">{<block_content pos:start="325:21" pos:end="359:47">

                    <decl_stmt pos:start="325:21" pos:end="325:35"><decl pos:start="325:21" pos:end="325:34"><type pos:start="325:21" pos:end="325:23"><name pos:start="325:21" pos:end="325:23">int</name></type> <name pos:start="325:25" pos:end="325:30">offset</name> <init pos:start="325:32" pos:end="325:34">= <expr pos:start="325:34" pos:end="325:34"><literal type="number" pos:start="325:34" pos:end="325:34">0</literal></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:88"><expr pos:start="327:21" pos:end="327:87"><call pos:start="327:21" pos:end="327:87"><name pos:start="327:21" pos:end="327:26">memset</name><argument_list pos:start="327:27" pos:end="327:87">(<argument pos:start="327:28" pos:end="327:53"><expr pos:start="327:28" pos:end="327:53"><name pos:start="327:28" pos:end="327:34">newdata</name> <operator pos:start="327:36" pos:end="327:36">+</operator> <name pos:start="327:38" pos:end="327:53"><name pos:start="327:38" pos:end="327:43">asf_st</name><operator pos:start="327:44" pos:end="327:45">-&gt;</operator><name pos:start="327:46" pos:end="327:48">pkt</name><operator pos:start="327:49" pos:end="327:49">.</operator><name pos:start="327:50" pos:end="327:53">size</name></name></expr></argument>, <argument pos:start="327:56" pos:end="327:56"><expr pos:start="327:56" pos:end="327:56"><literal type="number" pos:start="327:56" pos:end="327:56">0</literal></expr></argument>, <argument pos:start="327:59" pos:end="327:86"><expr pos:start="327:59" pos:end="327:86"><name pos:start="327:59" pos:end="327:86">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <while pos:start="329:21" pos:end="355:21">while <condition pos:start="329:27" pos:end="329:53">(<expr pos:start="329:28" pos:end="329:52"><name pos:start="329:28" pos:end="329:33">offset</name> <operator pos:start="329:35" pos:end="329:35">&lt;</operator> <name pos:start="329:37" pos:end="329:52"><name pos:start="329:37" pos:end="329:42">asf_st</name><operator pos:start="329:43" pos:end="329:44">-&gt;</operator><name pos:start="329:45" pos:end="329:47">pkt</name><operator pos:start="329:48" pos:end="329:48">.</operator><name pos:start="329:49" pos:end="329:52">size</name></name></expr>)</condition> <block pos:start="329:55" pos:end="355:21">{<block_content pos:start="331:25" pos:end="353:56">

                        <decl_stmt pos:start="331:25" pos:end="331:65"><decl pos:start="331:25" pos:end="331:64"><type pos:start="331:25" pos:end="331:27"><name pos:start="331:25" pos:end="331:27">int</name></type> <name pos:start="331:29" pos:end="331:31">off</name> <init pos:start="331:33" pos:end="331:64">= <expr pos:start="331:35" pos:end="331:64"><name pos:start="331:35" pos:end="331:40">offset</name> <operator pos:start="331:42" pos:end="331:42">/</operator> <name pos:start="331:44" pos:end="331:64"><name pos:start="331:44" pos:end="331:49">asf_st</name><operator pos:start="331:50" pos:end="331:51">-&gt;</operator><name pos:start="331:52" pos:end="331:64">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="333:25" pos:end="333:56"><decl pos:start="333:25" pos:end="333:55"><type pos:start="333:25" pos:end="333:27"><name pos:start="333:25" pos:end="333:27">int</name></type> <name pos:start="333:29" pos:end="333:31">row</name> <init pos:start="333:33" pos:end="333:55">= <expr pos:start="333:35" pos:end="333:55"><name pos:start="333:35" pos:end="333:37">off</name> <operator pos:start="333:39" pos:end="333:39">/</operator> <name pos:start="333:41" pos:end="333:55"><name pos:start="333:41" pos:end="333:46">asf_st</name><operator pos:start="333:47" pos:end="333:48">-&gt;</operator><name pos:start="333:49" pos:end="333:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="335:25" pos:end="335:56"><decl pos:start="335:25" pos:end="335:55"><type pos:start="335:25" pos:end="335:27"><name pos:start="335:25" pos:end="335:27">int</name></type> <name pos:start="335:29" pos:end="335:31">col</name> <init pos:start="335:33" pos:end="335:55">= <expr pos:start="335:35" pos:end="335:55"><name pos:start="335:35" pos:end="335:37">off</name> <operator pos:start="335:39" pos:end="335:39">%</operator> <name pos:start="335:41" pos:end="335:55"><name pos:start="335:41" pos:end="335:46">asf_st</name><operator pos:start="335:47" pos:end="335:48">-&gt;</operator><name pos:start="335:49" pos:end="335:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="337:25" pos:end="337:93"><decl pos:start="337:25" pos:end="337:92"><type pos:start="337:25" pos:end="337:27"><name pos:start="337:25" pos:end="337:27">int</name></type> <name pos:start="337:29" pos:end="337:31">idx</name> <init pos:start="337:33" pos:end="337:92">= <expr pos:start="337:35" pos:end="337:92"><name pos:start="337:35" pos:end="337:37">row</name> <operator pos:start="337:39" pos:end="337:39">+</operator> <name pos:start="337:41" pos:end="337:43">col</name> <operator pos:start="337:45" pos:end="337:45">*</operator> <name pos:start="337:47" pos:end="337:68"><name pos:start="337:47" pos:end="337:52">asf_st</name><operator pos:start="337:53" pos:end="337:54">-&gt;</operator><name pos:start="337:55" pos:end="337:68">ds_packet_size</name></name> <operator pos:start="337:70" pos:end="337:70">/</operator> <name pos:start="337:72" pos:end="337:92"><name pos:start="337:72" pos:end="337:77">asf_st</name><operator pos:start="337:78" pos:end="337:79">-&gt;</operator><name pos:start="337:80" pos:end="337:92">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

                        <comment type="line" pos:start="339:25" pos:end="339:89">//printf("off:%d  row:%d  col:%d  idx:%d\n", off, row, col, idx);</comment>



                        <expr_stmt pos:start="343:25" pos:end="343:83"><expr pos:start="343:25" pos:end="343:82"><call pos:start="343:25" pos:end="343:82"><name pos:start="343:25" pos:end="343:30">assert</name><argument_list pos:start="343:31" pos:end="343:82">(<argument pos:start="343:32" pos:end="343:81"><expr pos:start="343:32" pos:end="343:81"><name pos:start="343:32" pos:end="343:37">offset</name> <operator pos:start="343:39" pos:end="343:39">+</operator> <name pos:start="343:41" pos:end="343:61"><name pos:start="343:41" pos:end="343:46">asf_st</name><operator pos:start="343:47" pos:end="343:48">-&gt;</operator><name pos:start="343:49" pos:end="343:61">ds_chunk_size</name></name> <operator pos:start="343:63" pos:end="343:64">&lt;=</operator> <name pos:start="343:66" pos:end="343:81"><name pos:start="343:66" pos:end="343:71">asf_st</name><operator pos:start="343:72" pos:end="343:73">-&gt;</operator><name pos:start="343:74" pos:end="343:76">pkt</name><operator pos:start="343:77" pos:end="343:77">.</operator><name pos:start="343:78" pos:end="343:81">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="345:25" pos:end="345:82"><expr pos:start="345:25" pos:end="345:81"><call pos:start="345:25" pos:end="345:81"><name pos:start="345:25" pos:end="345:30">assert</name><argument_list pos:start="345:31" pos:end="345:81">(<argument pos:start="345:32" pos:end="345:80"><expr pos:start="345:32" pos:end="345:80"><name pos:start="345:32" pos:end="345:34">idx</name><operator pos:start="345:35" pos:end="345:35">+</operator><literal type="number" pos:start="345:36" pos:end="345:36">1</literal> <operator pos:start="345:38" pos:end="345:39">&lt;=</operator> <name pos:start="345:41" pos:end="345:56"><name pos:start="345:41" pos:end="345:46">asf_st</name><operator pos:start="345:47" pos:end="345:48">-&gt;</operator><name pos:start="345:49" pos:end="345:51">pkt</name><operator pos:start="345:52" pos:end="345:52">.</operator><name pos:start="345:53" pos:end="345:56">size</name></name> <operator pos:start="345:58" pos:end="345:58">/</operator> <name pos:start="345:60" pos:end="345:80"><name pos:start="345:60" pos:end="345:65">asf_st</name><operator pos:start="345:66" pos:end="345:67">-&gt;</operator><name pos:start="345:68" pos:end="345:80">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="347:25" pos:end="351:54"><expr pos:start="347:25" pos:end="351:53"><call pos:start="347:25" pos:end="351:53"><name pos:start="347:25" pos:end="347:30">memcpy</name><argument_list pos:start="347:31" pos:end="351:53">(<argument pos:start="347:32" pos:end="347:47"><expr pos:start="347:32" pos:end="347:47"><name pos:start="347:32" pos:end="347:38">newdata</name> <operator pos:start="347:40" pos:end="347:40">+</operator> <name pos:start="347:42" pos:end="347:47">offset</name></expr></argument>,

                               <argument pos:start="349:32" pos:end="349:77"><expr pos:start="349:32" pos:end="349:77"><name pos:start="349:32" pos:end="349:47"><name pos:start="349:32" pos:end="349:37">asf_st</name><operator pos:start="349:38" pos:end="349:39">-&gt;</operator><name pos:start="349:40" pos:end="349:42">pkt</name><operator pos:start="349:43" pos:end="349:43">.</operator><name pos:start="349:44" pos:end="349:47">data</name></name> <operator pos:start="349:49" pos:end="349:49">+</operator> <name pos:start="349:51" pos:end="349:53">idx</name> <operator pos:start="349:55" pos:end="349:55">*</operator> <name pos:start="349:57" pos:end="349:77"><name pos:start="349:57" pos:end="349:62">asf_st</name><operator pos:start="349:63" pos:end="349:64">-&gt;</operator><name pos:start="349:65" pos:end="349:77">ds_chunk_size</name></name></expr></argument>,

                               <argument pos:start="351:32" pos:end="351:52"><expr pos:start="351:32" pos:end="351:52"><name pos:start="351:32" pos:end="351:52"><name pos:start="351:32" pos:end="351:37">asf_st</name><operator pos:start="351:38" pos:end="351:39">-&gt;</operator><name pos:start="351:40" pos:end="351:52">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="353:25" pos:end="353:56"><expr pos:start="353:25" pos:end="353:55"><name pos:start="353:25" pos:end="353:30">offset</name> <operator pos:start="353:32" pos:end="353:33">+=</operator> <name pos:start="353:35" pos:end="353:55"><name pos:start="353:35" pos:end="353:40">asf_st</name><operator pos:start="353:41" pos:end="353:42">-&gt;</operator><name pos:start="353:43" pos:end="353:55">ds_chunk_size</name></name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                    <expr_stmt pos:start="357:21" pos:end="357:46"><expr pos:start="357:21" pos:end="357:45"><call pos:start="357:21" pos:end="357:45"><name pos:start="357:21" pos:end="357:27">av_free</name><argument_list pos:start="357:28" pos:end="357:45">(<argument pos:start="357:29" pos:end="357:44"><expr pos:start="357:29" pos:end="357:44"><name pos:start="357:29" pos:end="357:44"><name pos:start="357:29" pos:end="357:34">asf_st</name><operator pos:start="357:35" pos:end="357:36">-&gt;</operator><name pos:start="357:37" pos:end="357:39">pkt</name><operator pos:start="357:40" pos:end="357:40">.</operator><name pos:start="357:41" pos:end="357:44">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="359:21" pos:end="359:47"><expr pos:start="359:21" pos:end="359:46"><name pos:start="359:21" pos:end="359:36"><name pos:start="359:21" pos:end="359:26">asf_st</name><operator pos:start="359:27" pos:end="359:28">-&gt;</operator><name pos:start="359:29" pos:end="359:31">pkt</name><operator pos:start="359:32" pos:end="359:32">.</operator><name pos:start="359:33" pos:end="359:36">data</name></name> <operator pos:start="359:38" pos:end="359:38">=</operator> <name pos:start="359:40" pos:end="359:46">newdata</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

              </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:36"><expr pos:start="367:13" pos:end="367:35"><name pos:start="367:13" pos:end="367:31"><name pos:start="367:13" pos:end="367:18">asf_st</name><operator pos:start="367:19" pos:end="367:20">-&gt;</operator><name pos:start="367:21" pos:end="367:31">frag_offset</name></name> <operator pos:start="367:33" pos:end="367:33">=</operator> <literal type="number" pos:start="367:35" pos:end="367:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:30"><expr pos:start="369:13" pos:end="369:29"><operator pos:start="369:13" pos:end="369:13">*</operator><name pos:start="369:14" pos:end="369:16">pkt</name><operator pos:start="369:17" pos:end="369:17">=</operator> <name pos:start="369:19" pos:end="369:29"><name pos:start="369:19" pos:end="369:24">asf_st</name><operator pos:start="369:25" pos:end="369:26">-&gt;</operator><name pos:start="369:27" pos:end="369:29">pkt</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="371:13" pos:end="371:80">//printf("packet %d %d\n", asf_st-&gt;pkt.size, asf-&gt;packet_frag_size);</comment>

            <expr_stmt pos:start="373:13" pos:end="373:33"><expr pos:start="373:13" pos:end="373:32"><name pos:start="373:13" pos:end="373:28"><name pos:start="373:13" pos:end="373:18">asf_st</name><operator pos:start="373:19" pos:end="373:20">-&gt;</operator><name pos:start="373:21" pos:end="373:23">pkt</name><operator pos:start="373:24" pos:end="373:24">.</operator><name pos:start="373:25" pos:end="373:28">size</name></name> <operator pos:start="373:30" pos:end="373:30">=</operator> <literal type="number" pos:start="373:32" pos:end="373:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:33"><expr pos:start="375:13" pos:end="375:32"><name pos:start="375:13" pos:end="375:28"><name pos:start="375:13" pos:end="375:18">asf_st</name><operator pos:start="375:19" pos:end="375:20">-&gt;</operator><name pos:start="375:21" pos:end="375:23">pkt</name><operator pos:start="375:24" pos:end="375:24">.</operator><name pos:start="375:25" pos:end="375:28">data</name></name> <operator pos:start="375:30" pos:end="375:30">=</operator> <literal type="number" pos:start="375:32" pos:end="375:32">0</literal></expr>;</expr_stmt>



            <break pos:start="379:13" pos:end="379:18">break;</break> <comment type="line" pos:start="379:20" pos:end="379:38">// packet completed</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="385:5" pos:end="385:13">return <expr pos:start="385:12" pos:end="385:12"><literal type="number" pos:start="385:12" pos:end="385:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
