<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13099.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ppc6xx_tlb_check</name> <parameter_list pos:start="1:29" pos:end="3:73">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:58"><decl pos:start="1:45" pos:end="1:58"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:53">mmu_ctx_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">ctx</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:41">target_ulong</name></type> <name pos:start="3:43" pos:end="3:47">eaddr</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:55"><decl pos:start="3:50" pos:end="3:55"><type pos:start="3:50" pos:end="3:55"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:55">rw</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:72"><decl pos:start="3:58" pos:end="3:72"><type pos:start="3:58" pos:end="3:72"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:72">access_type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="143:1">{<block_content pos:start="7:5" pos:end="141:15">

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ppc_tlb_t</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:18">tlb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">nr</name></decl>, <decl pos:start="9:13" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:16">best</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:21">way</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    

    <expr_stmt pos:start="15:5" pos:end="15:14"><expr pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:8">best</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <operator pos:start="15:12" pos:end="15:12">-</operator><literal type="number" pos:start="15:13" pos:end="15:13">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:13"><expr pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <operator pos:start="17:11" pos:end="17:11">-</operator><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:15" pos:end="17:32">/* No TLB found */</comment>

    <for pos:start="19:5" pos:end="115:5">for <control pos:start="19:9" pos:end="19:44">(<init pos:start="19:10" pos:end="19:17"><expr pos:start="19:10" pos:end="19:16"><name pos:start="19:10" pos:end="19:12">way</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</init> <condition pos:start="19:19" pos:end="19:37"><expr pos:start="19:19" pos:end="19:36"><name pos:start="19:19" pos:end="19:21">way</name> <operator pos:start="19:23" pos:end="19:23">&lt;</operator> <name pos:start="19:25" pos:end="19:36"><name pos:start="19:25" pos:end="19:27">env</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:36">nb_ways</name></name></expr>;</condition> <incr pos:start="19:39" pos:end="19:43"><expr pos:start="19:39" pos:end="19:43"><name pos:start="19:39" pos:end="19:41">way</name><operator pos:start="19:42" pos:end="19:43">++</operator></expr></incr>)</control> <block pos:start="19:46" pos:end="115:5">{<block_content pos:start="21:9" pos:end="113:9">

        <expr_stmt pos:start="21:9" pos:end="23:67"><expr pos:start="21:9" pos:end="23:66"><name pos:start="21:9" pos:end="21:10">nr</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="23:66"><name pos:start="21:14" pos:end="21:30">ppc6xx_tlb_getnum</name><argument_list pos:start="21:31" pos:end="23:66">(<argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">env</name></expr></argument>, <argument pos:start="21:37" pos:end="21:41"><expr pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:41">eaddr</name></expr></argument>, <argument pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><name pos:start="21:44" pos:end="21:46">way</name></expr></argument>,

                               <argument pos:start="23:32" pos:end="23:65"><expr pos:start="23:32" pos:end="23:65"><ternary pos:start="23:32" pos:end="23:65"><condition pos:start="23:32" pos:end="23:59"><expr pos:start="23:32" pos:end="23:57"><name pos:start="23:32" pos:end="23:42">access_type</name> <operator pos:start="23:44" pos:end="23:45">==</operator> <name pos:start="23:47" pos:end="23:57">ACCESS_CODE</name></expr> ?</condition><then pos:start="23:61" pos:end="23:61"> <expr pos:start="23:61" pos:end="23:61"><literal type="number" pos:start="23:61" pos:end="23:61">1</literal></expr> </then><else pos:start="23:63" pos:end="23:65">: <expr pos:start="23:65" pos:end="23:65"><literal type="number" pos:start="23:65" pos:end="23:65">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:11">tlb</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:27"><name pos:start="25:16" pos:end="25:18">env</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:23">tlb</name><index pos:start="25:24" pos:end="25:27">[<expr pos:start="25:25" pos:end="25:26"><name pos:start="25:25" pos:end="25:26">nr</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:72">/* This test "emulates" the PTE index match for hardware TLBs */</comment>

        <if_stmt pos:start="29:9" pos:end="52:0"><if pos:start="29:9" pos:end="52:0">if <condition pos:start="29:12" pos:end="29:51">(<expr pos:start="29:13" pos:end="29:50"><operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:18">eaddr</name> <operator pos:start="29:20" pos:end="29:20">&amp;</operator> <name pos:start="29:22" pos:end="29:37">TARGET_PAGE_MASK</name><operator pos:start="29:38" pos:end="29:38">)</operator> <operator pos:start="29:40" pos:end="29:41">!=</operator> <name pos:start="29:43" pos:end="29:50"><name pos:start="29:43" pos:end="29:45">tlb</name><operator pos:start="29:46" pos:end="29:47">-&gt;</operator><name pos:start="29:48" pos:end="29:50">EPN</name></name></expr>)</condition> <block pos:start="29:53" pos:end="52:0">{<block_content pos:start="33:13" pos:end="47:21">

<cpp:if pos:start="31:1" pos:end="31:32">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:11">defined</name> <argument_list pos:start="31:13" pos:end="31:32">(<argument pos:start="31:14" pos:end="31:31"><expr pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <if_stmt pos:start="33:13" pos:end="46:0"><if pos:start="33:13" pos:end="46:0">if <condition pos:start="33:16" pos:end="33:30">(<expr pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:24">loglevel</name> <operator pos:start="33:26" pos:end="33:27">!=</operator> <literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>)</condition> <block pos:start="33:32" pos:end="46:0">{<block_content pos:start="35:17" pos:end="41:70">

                <expr_stmt pos:start="35:17" pos:end="41:70"><expr pos:start="35:17" pos:end="41:69"><call pos:start="35:17" pos:end="41:69"><name pos:start="35:17" pos:end="35:23">fprintf</name><argument_list pos:start="35:24" pos:end="41:69">(<argument pos:start="35:25" pos:end="35:31"><expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:31">logfile</name></expr></argument>, <argument pos:start="35:34" pos:end="35:69"><expr pos:start="35:34" pos:end="35:69"><literal type="string" pos:start="35:34" pos:end="35:69">"TLB %d/%d %s [%08x %08x] &lt;&gt; %08x\n"</literal></expr></argument>,

                        <argument pos:start="37:25" pos:end="37:26"><expr pos:start="37:25" pos:end="37:26"><name pos:start="37:25" pos:end="37:26">nr</name></expr></argument>, <argument pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:39"><name pos:start="37:29" pos:end="37:31">env</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:39">nb_tlb</name></name></expr></argument>,

                        <argument pos:start="39:25" pos:end="39:67"><expr pos:start="39:25" pos:end="39:67"><ternary pos:start="39:25" pos:end="39:67"><condition pos:start="39:25" pos:end="39:49"><expr pos:start="39:25" pos:end="39:47"><call pos:start="39:25" pos:end="39:47"><name pos:start="39:25" pos:end="39:36">pte_is_valid</name><argument_list pos:start="39:37" pos:end="39:47">(<argument pos:start="39:38" pos:end="39:46"><expr pos:start="39:38" pos:end="39:46"><name pos:start="39:38" pos:end="39:46"><name pos:start="39:38" pos:end="39:40">tlb</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:46">pte0</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="39:51" pos:end="39:57"> <expr pos:start="39:51" pos:end="39:57"><literal type="string" pos:start="39:51" pos:end="39:57">"valid"</literal></expr> </then><else pos:start="39:59" pos:end="39:67">: <expr pos:start="39:61" pos:end="39:67"><literal type="string" pos:start="39:61" pos:end="39:67">"inval"</literal></expr></else></ternary></expr></argument>,

                        <argument pos:start="41:25" pos:end="41:32"><expr pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:32"><name pos:start="41:25" pos:end="41:27">tlb</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:32">EPN</name></name></expr></argument>, <argument pos:start="41:35" pos:end="41:61"><expr pos:start="41:35" pos:end="41:61"><name pos:start="41:35" pos:end="41:42"><name pos:start="41:35" pos:end="41:37">tlb</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:42">EPN</name></name> <operator pos:start="41:44" pos:end="41:44">+</operator> <name pos:start="41:46" pos:end="41:61">TARGET_PAGE_SIZE</name></expr></argument>, <argument pos:start="41:64" pos:end="41:68"><expr pos:start="41:64" pos:end="41:68"><name pos:start="41:64" pos:end="41:68">eaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

<cpp:if pos:start="51:1" pos:end="51:32">#<cpp:directive pos:start="51:2" pos:end="51:3">if</cpp:directive> <expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:11">defined</name> <argument_list pos:start="51:13" pos:end="51:32">(<argument pos:start="51:14" pos:end="51:31"><expr pos:start="51:14" pos:end="51:31"><name pos:start="51:14" pos:end="51:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="53:9" pos:end="68:0"><if pos:start="53:9" pos:end="68:0">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:20">loglevel</name> <operator pos:start="53:22" pos:end="53:23">!=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">0</literal></expr>)</condition> <block pos:start="53:28" pos:end="68:0">{<block_content pos:start="55:13" pos:end="63:76">

            <expr_stmt pos:start="55:13" pos:end="63:76"><expr pos:start="55:13" pos:end="63:75"><call pos:start="55:13" pos:end="63:75"><name pos:start="55:13" pos:end="55:19">fprintf</name><argument_list pos:start="55:20" pos:end="63:75">(<argument pos:start="55:21" pos:end="55:27"><expr pos:start="55:21" pos:end="55:27"><name pos:start="55:21" pos:end="55:27">logfile</name></expr></argument>, <argument pos:start="55:30" pos:end="55:69"><expr pos:start="55:30" pos:end="55:69"><literal type="string" pos:start="55:30" pos:end="55:69">"TLB %d/%d %s %08x &lt;&gt; %08x %08x %c %c\n"</literal></expr></argument>,

                    <argument pos:start="57:21" pos:end="57:22"><expr pos:start="57:21" pos:end="57:22"><name pos:start="57:21" pos:end="57:22">nr</name></expr></argument>, <argument pos:start="57:25" pos:end="57:35"><expr pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:35"><name pos:start="57:25" pos:end="57:27">env</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:35">nb_tlb</name></name></expr></argument>,

                    <argument pos:start="59:21" pos:end="59:63"><expr pos:start="59:21" pos:end="59:63"><ternary pos:start="59:21" pos:end="59:63"><condition pos:start="59:21" pos:end="59:45"><expr pos:start="59:21" pos:end="59:43"><call pos:start="59:21" pos:end="59:43"><name pos:start="59:21" pos:end="59:32">pte_is_valid</name><argument_list pos:start="59:33" pos:end="59:43">(<argument pos:start="59:34" pos:end="59:42"><expr pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:36">tlb</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:42">pte0</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="59:47" pos:end="59:53"> <expr pos:start="59:47" pos:end="59:53"><literal type="string" pos:start="59:47" pos:end="59:53">"valid"</literal></expr> </then><else pos:start="59:55" pos:end="59:63">: <expr pos:start="59:57" pos:end="59:63"><literal type="string" pos:start="59:57" pos:end="59:63">"inval"</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="61:21" pos:end="61:28"><expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:23">tlb</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:28">EPN</name></name></expr></argument>, <argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><name pos:start="61:31" pos:end="61:35">eaddr</name></expr></argument>, <argument pos:start="61:38" pos:end="61:46"><expr pos:start="61:38" pos:end="61:46"><name pos:start="61:38" pos:end="61:46"><name pos:start="61:38" pos:end="61:40">tlb</name><operator pos:start="61:41" pos:end="61:42">-&gt;</operator><name pos:start="61:43" pos:end="61:46">pte1</name></name></expr></argument>,

                    <argument pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:34"><ternary pos:start="63:21" pos:end="63:34"><condition pos:start="63:21" pos:end="63:24"><expr pos:start="63:21" pos:end="63:22"><name pos:start="63:21" pos:end="63:22">rw</name></expr> ?</condition><then pos:start="63:26" pos:end="63:28"> <expr pos:start="63:26" pos:end="63:28"><literal type="char" pos:start="63:26" pos:end="63:28">'S'</literal></expr> </then><else pos:start="63:30" pos:end="63:34">: <expr pos:start="63:32" pos:end="63:34"><literal type="char" pos:start="63:32" pos:end="63:34">'L'</literal></expr></else></ternary></expr></argument>, <argument pos:start="63:37" pos:end="63:74"><expr pos:start="63:37" pos:end="63:74"><ternary pos:start="63:37" pos:end="63:74"><condition pos:start="63:37" pos:end="63:64"><expr pos:start="63:37" pos:end="63:62"><name pos:start="63:37" pos:end="63:47">access_type</name> <operator pos:start="63:49" pos:end="63:50">==</operator> <name pos:start="63:52" pos:end="63:62">ACCESS_CODE</name></expr> ?</condition><then pos:start="63:66" pos:end="63:68"> <expr pos:start="63:66" pos:end="63:68"><literal type="char" pos:start="63:66" pos:end="63:68">'I'</literal></expr> </then><else pos:start="63:70" pos:end="63:74">: <expr pos:start="63:72" pos:end="63:74"><literal type="char" pos:start="63:72" pos:end="63:74">'D'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="67:1" pos:end="67:6">#<cpp:directive pos:start="67:2" pos:end="67:6">endif</cpp:directive></cpp:endif>

        <switch pos:start="69:9" pos:end="113:9">switch <condition pos:start="69:16" pos:end="69:60">(<expr pos:start="69:17" pos:end="69:59"><call pos:start="69:17" pos:end="69:59"><name pos:start="69:17" pos:end="69:25">pte_check</name><argument_list pos:start="69:26" pos:end="69:59">(<argument pos:start="69:27" pos:end="69:29"><expr pos:start="69:27" pos:end="69:29"><name pos:start="69:27" pos:end="69:29">ctx</name></expr></argument>, <argument pos:start="69:32" pos:end="69:40"><expr pos:start="69:32" pos:end="69:40"><name pos:start="69:32" pos:end="69:40"><name pos:start="69:32" pos:end="69:34">tlb</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:40">pte0</name></name></expr></argument>, <argument pos:start="69:43" pos:end="69:51"><expr pos:start="69:43" pos:end="69:51"><name pos:start="69:43" pos:end="69:51"><name pos:start="69:43" pos:end="69:45">tlb</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:51">pte1</name></name></expr></argument>, <argument pos:start="69:54" pos:end="69:54"><expr pos:start="69:54" pos:end="69:54"><literal type="number" pos:start="69:54" pos:end="69:54">0</literal></expr></argument>, <argument pos:start="69:57" pos:end="69:58"><expr pos:start="69:57" pos:end="69:58"><name pos:start="69:57" pos:end="69:58">rw</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:62" pos:end="113:9">{<block_content pos:start="71:9" pos:end="111:22">

        <case pos:start="71:9" pos:end="71:16">case <expr pos:start="71:14" pos:end="71:15"><operator pos:start="71:14" pos:end="71:14">-</operator><literal type="number" pos:start="71:15" pos:end="71:15">3</literal></expr>:</case>

            <comment type="block" pos:start="73:13" pos:end="73:35">/* TLB inconsistency */</comment>

            <return pos:start="75:13" pos:end="75:22">return <expr pos:start="75:20" pos:end="75:21"><operator pos:start="75:20" pos:end="75:20">-</operator><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</return>

        <case pos:start="77:9" pos:end="77:16">case <expr pos:start="77:14" pos:end="77:15"><operator pos:start="77:14" pos:end="77:14">-</operator><literal type="number" pos:start="77:15" pos:end="77:15">2</literal></expr>:</case>

            <comment type="block" pos:start="79:13" pos:end="79:34">/* Access violation */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:21"><expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <operator pos:start="81:19" pos:end="81:19">-</operator><literal type="number" pos:start="81:20" pos:end="81:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:22"><expr pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:16">best</name> <operator pos:start="83:18" pos:end="83:18">=</operator> <name pos:start="83:20" pos:end="83:21">nr</name></expr>;</expr_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:16">case <expr pos:start="87:14" pos:end="87:15"><operator pos:start="87:14" pos:end="87:14">-</operator><literal type="number" pos:start="87:15" pos:end="87:15">1</literal></expr>:</case>

        <default pos:start="89:9" pos:end="89:16">default:</default>

            <comment type="block" pos:start="91:13" pos:end="91:26">/* No match */</comment>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:15">case <expr pos:start="95:14" pos:end="95:14"><literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>:</case>

            <comment type="block" pos:start="97:13" pos:end="97:32">/* access granted */</comment>

            <comment type="block" pos:start="99:13" pos:end="105:15">/* XXX: we should go on looping to check all TLBs consistency

             *      but we can speed-up the whole thing as the

             *      result would be undefined if TLBs are not consistent.

             */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:20"><expr pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:15">ret</name> <operator pos:start="107:17" pos:end="107:17">=</operator> <literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:22"><expr pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:16">best</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <name pos:start="109:20" pos:end="109:21">nr</name></expr>;</expr_stmt>

            <goto pos:start="111:13" pos:end="111:22">goto <name pos:start="111:18" pos:end="111:21">done</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></for>

    <if_stmt pos:start="117:5" pos:end="137:5"><if pos:start="117:5" pos:end="137:5">if <condition pos:start="117:8" pos:end="117:19">(<expr pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:12">best</name> <operator pos:start="117:14" pos:end="117:15">!=</operator> <operator pos:start="117:17" pos:end="117:17">-</operator><literal type="number" pos:start="117:18" pos:end="117:18">1</literal></expr>)</condition> <block pos:start="117:21" pos:end="137:5">{<block_content pos:start="119:5" pos:end="135:61">

    <label pos:start="119:5" pos:end="122:0"><name pos:start="119:5" pos:end="119:8">done</name>:</label>

<cpp:if pos:start="121:1" pos:end="121:32">#<cpp:directive pos:start="121:2" pos:end="121:3">if</cpp:directive> <expr pos:start="121:5" pos:end="121:32"><call pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:11">defined</name> <argument_list pos:start="121:13" pos:end="121:32">(<argument pos:start="121:14" pos:end="121:31"><expr pos:start="121:14" pos:end="121:31"><name pos:start="121:14" pos:end="121:31">DEBUG_SOFTWARE_TLB</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="123:9" pos:end="132:0"><if pos:start="123:9" pos:end="132:0">if <condition pos:start="123:12" pos:end="123:25">(<expr pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:20">loglevel</name> <operator pos:start="123:22" pos:end="123:22">&gt;</operator> <literal type="number" pos:start="123:24" pos:end="123:24">0</literal></expr>)</condition> <block pos:start="123:27" pos:end="132:0">{<block_content pos:start="125:13" pos:end="127:67">

            <expr_stmt pos:start="125:13" pos:end="127:67"><expr pos:start="125:13" pos:end="127:66"><call pos:start="125:13" pos:end="127:66"><name pos:start="125:13" pos:end="125:19">fprintf</name><argument_list pos:start="125:20" pos:end="127:66">(<argument pos:start="125:21" pos:end="125:27"><expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:27">logfile</name></expr></argument>, <argument pos:start="125:30" pos:end="125:77"><expr pos:start="125:30" pos:end="125:77"><literal type="string" pos:start="125:30" pos:end="125:77">"found TLB at addr 0x%08lx prot=0x%01x ret=%d\n"</literal></expr></argument>,

                    <argument pos:start="127:21" pos:end="127:49"><expr pos:start="127:21" pos:end="127:49"><name pos:start="127:21" pos:end="127:30"><name pos:start="127:21" pos:end="127:23">ctx</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:30">raddr</name></name> <operator pos:start="127:32" pos:end="127:32">&amp;</operator> <name pos:start="127:34" pos:end="127:49">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="127:52" pos:end="127:60"><expr pos:start="127:52" pos:end="127:60"><name pos:start="127:52" pos:end="127:60"><name pos:start="127:52" pos:end="127:54">ctx</name><operator pos:start="127:55" pos:end="127:56">-&gt;</operator><name pos:start="127:57" pos:end="127:60">prot</name></name></expr></argument>, <argument pos:start="127:63" pos:end="127:65"><expr pos:start="127:63" pos:end="127:65"><name pos:start="127:63" pos:end="127:65">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="131:1" pos:end="131:6">#<cpp:directive pos:start="131:2" pos:end="131:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="133:9" pos:end="133:31">/* Update page flags */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:61"><expr pos:start="135:9" pos:end="135:60"><call pos:start="135:9" pos:end="135:60"><name pos:start="135:9" pos:end="135:24">pte_update_flags</name><argument_list pos:start="135:25" pos:end="135:60">(<argument pos:start="135:26" pos:end="135:28"><expr pos:start="135:26" pos:end="135:28"><name pos:start="135:26" pos:end="135:28">ctx</name></expr></argument>, <argument pos:start="135:31" pos:end="135:50"><expr pos:start="135:31" pos:end="135:50"><operator pos:start="135:31" pos:end="135:31">&amp;</operator><name pos:start="135:32" pos:end="135:45"><name pos:start="135:32" pos:end="135:34">env</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:39">tlb</name><index pos:start="135:40" pos:end="135:45">[<expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">best</name></expr>]</index></name><operator pos:start="135:46" pos:end="135:46">.</operator><name pos:start="135:47" pos:end="135:50">pte1</name></expr></argument>, <argument pos:start="135:53" pos:end="135:55"><expr pos:start="135:53" pos:end="135:55"><name pos:start="135:53" pos:end="135:55">ret</name></expr></argument>, <argument pos:start="135:58" pos:end="135:59"><expr pos:start="135:58" pos:end="135:59"><name pos:start="135:58" pos:end="135:59">rw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:15">return <expr pos:start="141:12" pos:end="141:14"><name pos:start="141:12" pos:end="141:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
