<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16446.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">cpu_register_physical_memory</name><parameter_list pos:start="1:34" pos:end="5:60">(<parameter pos:start="1:35" pos:end="1:63"><decl pos:start="1:35" pos:end="1:63"><type pos:start="1:35" pos:end="1:63"><name pos:start="1:35" pos:end="1:52">target_phys_addr_t</name></type> <name pos:start="1:54" pos:end="1:63">start_addr</name></decl></parameter>, 

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><name pos:start="3:35" pos:end="3:42">unsigned</name> <name pos:start="3:44" pos:end="3:47">long</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:59"><decl pos:start="5:35" pos:end="5:59"><type pos:start="5:35" pos:end="5:59"><name pos:start="5:35" pos:end="5:42">unsigned</name> <name pos:start="5:44" pos:end="5:47">long</name></type> <name pos:start="5:49" pos:end="5:59">phys_offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="131:1">{<block_content pos:start="9:5" pos:end="129:5">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:27">addr</name></decl>, <decl pos:start="9:30" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:22"/><name pos:start="9:30" pos:end="9:37">end_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">PhysPageDesc</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:19">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">CPUState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">long</name></type> <name pos:start="15:19" pos:end="15:27">orig_size</name> <init pos:start="15:29" pos:end="15:34">= <expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">void</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:17">subpage</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:12">end_addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:25">start_addr</name> <operator pos:start="21:27" pos:end="21:27">+</operator> <operator pos:start="21:29" pos:end="21:29">(</operator><name pos:start="21:30" pos:end="21:47">target_phys_addr_t</name><operator pos:start="21:48" pos:end="21:48">)</operator><name pos:start="21:49" pos:end="21:52">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:60"><expr pos:start="23:5" pos:end="23:59"><name pos:start="23:5" pos:end="23:8">size</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:16">size</name> <operator pos:start="23:18" pos:end="23:18">+</operator> <name pos:start="23:20" pos:end="23:35">TARGET_PAGE_SIZE</name> <operator pos:start="23:37" pos:end="23:37">-</operator> <literal type="number" pos:start="23:39" pos:end="23:39">1</literal><operator pos:start="23:40" pos:end="23:40">)</operator> <operator pos:start="23:42" pos:end="23:42">&amp;</operator> <name pos:start="23:44" pos:end="23:59">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="115:5">for<control pos:start="25:8" pos:end="25:69">(<init pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:12">addr</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:25">start_addr</name></expr>;</init> <condition pos:start="25:28" pos:end="25:43"><expr pos:start="25:28" pos:end="25:42"><name pos:start="25:28" pos:end="25:31">addr</name> <operator pos:start="25:33" pos:end="25:33">&lt;</operator> <name pos:start="25:35" pos:end="25:42">end_addr</name></expr>;</condition> <incr pos:start="25:45" pos:end="25:68"><expr pos:start="25:45" pos:end="25:68"><name pos:start="25:45" pos:end="25:48">addr</name> <operator pos:start="25:50" pos:end="25:51">+=</operator> <name pos:start="25:53" pos:end="25:68">TARGET_PAGE_SIZE</name></expr></incr>)</control> <block pos:start="25:71" pos:end="115:5">{<block_content pos:start="27:9" pos:end="113:9">

        <expr_stmt pos:start="27:9" pos:end="27:53"><expr pos:start="27:9" pos:end="27:52"><name pos:start="27:9" pos:end="27:9">p</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:26">phys_page_find</name><argument_list pos:start="27:27" pos:end="27:52">(<argument pos:start="27:28" pos:end="27:51"><expr pos:start="27:28" pos:end="27:51"><name pos:start="27:28" pos:end="27:31">addr</name> <operator pos:start="27:33" pos:end="27:34">&gt;&gt;</operator> <name pos:start="27:36" pos:end="27:51">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="113:9"><if pos:start="29:9" pos:end="73:9">if <condition pos:start="29:12" pos:end="29:53">(<expr pos:start="29:13" pos:end="29:52"><name pos:start="29:13" pos:end="29:13">p</name> <operator pos:start="29:15" pos:end="29:16">&amp;&amp;</operator> <name pos:start="29:18" pos:end="29:31"><name pos:start="29:18" pos:end="29:18">p</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:31">phys_offset</name></name> <operator pos:start="29:33" pos:end="29:34">!=</operator> <name pos:start="29:36" pos:end="29:52">IO_MEM_UNASSIGNED</name></expr>)</condition> <block pos:start="29:55" pos:end="73:9">{<block_content pos:start="31:13" pos:end="71:13">

            <decl_stmt pos:start="31:13" pos:end="31:55"><decl pos:start="31:13" pos:end="31:54"><type pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:20">unsigned</name> <name pos:start="31:22" pos:end="31:25">long</name></type> <name pos:start="31:27" pos:end="31:37">orig_memory</name> <init pos:start="31:39" pos:end="31:54">= <expr pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:41">p</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:54">phys_offset</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:54"><decl pos:start="33:13" pos:end="33:42"><type pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:30">target_phys_addr_t</name></type> <name pos:start="33:32" pos:end="33:42">start_addr2</name></decl>, <decl pos:start="33:45" pos:end="33:53"><type ref="prev" pos:start="33:13" pos:end="33:30"/><name pos:start="33:45" pos:end="33:53">end_addr2</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:33"><decl pos:start="35:13" pos:end="35:32"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:28">need_subpage</name> <init pos:start="35:30" pos:end="35:32">= <expr pos:start="35:32" pos:end="35:32"><literal type="number" pos:start="35:32" pos:end="35:32">0</literal></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="39:13" pos:end="41:40"><expr pos:start="39:13" pos:end="41:39"><call pos:start="39:13" pos:end="41:39"><name pos:start="39:13" pos:end="39:25">CHECK_SUBPAGE</name><argument_list pos:start="39:26" pos:end="41:39">(<argument pos:start="39:27" pos:end="39:30"><expr pos:start="39:27" pos:end="39:30"><name pos:start="39:27" pos:end="39:30">addr</name></expr></argument>, <argument pos:start="39:33" pos:end="39:42"><expr pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:42">start_addr</name></expr></argument>, <argument pos:start="39:45" pos:end="39:55"><expr pos:start="39:45" pos:end="39:55"><name pos:start="39:45" pos:end="39:55">start_addr2</name></expr></argument>, <argument pos:start="39:58" pos:end="39:65"><expr pos:start="39:58" pos:end="39:65"><name pos:start="39:58" pos:end="39:65">end_addr</name></expr></argument>, <argument pos:start="39:68" pos:end="39:76"><expr pos:start="39:68" pos:end="39:76"><name pos:start="39:68" pos:end="39:76">end_addr2</name></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:38"><expr pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:38">need_subpage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="71:13"><if pos:start="43:13" pos:end="61:13">if <condition pos:start="43:16" pos:end="43:29">(<expr pos:start="43:17" pos:end="43:28"><name pos:start="43:17" pos:end="43:28">need_subpage</name></expr>)</condition> <block pos:start="43:31" pos:end="61:13">{<block_content pos:start="45:17" pos:end="59:79">

                <if_stmt pos:start="45:17" pos:end="57:17"><if pos:start="45:17" pos:end="51:17">if <condition pos:start="45:20" pos:end="45:52">(<expr pos:start="45:21" pos:end="45:51"><operator pos:start="45:21" pos:end="45:21">!</operator><operator pos:start="45:22" pos:end="45:22">(</operator><name pos:start="45:23" pos:end="45:33">orig_memory</name> <operator pos:start="45:35" pos:end="45:35">&amp;</operator> <name pos:start="45:37" pos:end="45:50">IO_MEM_SUBPAGE</name><operator pos:start="45:51" pos:end="45:51">)</operator></expr>)</condition> <block pos:start="45:54" pos:end="51:17">{<block_content pos:start="47:21" pos:end="49:73">

                    <expr_stmt pos:start="47:21" pos:end="49:73"><expr pos:start="47:21" pos:end="49:72"><name pos:start="47:21" pos:end="47:27">subpage</name> <operator pos:start="47:29" pos:end="47:29">=</operator> <call pos:start="47:31" pos:end="49:72"><name pos:start="47:31" pos:end="47:42">subpage_init</name><argument_list pos:start="47:43" pos:end="49:72">(<argument pos:start="47:44" pos:end="47:68"><expr pos:start="47:44" pos:end="47:68"><operator pos:start="47:44" pos:end="47:44">(</operator><name pos:start="47:45" pos:end="47:48">addr</name> <operator pos:start="47:50" pos:end="47:50">&amp;</operator> <name pos:start="47:52" pos:end="47:67">TARGET_PAGE_MASK</name><operator pos:start="47:68" pos:end="47:68">)</operator></expr></argument>,

                                           <argument pos:start="49:44" pos:end="49:58"><expr pos:start="49:44" pos:end="49:58"><operator pos:start="49:44" pos:end="49:44">&amp;</operator><name pos:start="49:45" pos:end="49:58"><name pos:start="49:45" pos:end="49:45">p</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:58">phys_offset</name></name></expr></argument>, <argument pos:start="49:61" pos:end="49:71"><expr pos:start="49:61" pos:end="49:71"><name pos:start="49:61" pos:end="49:71">orig_memory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="51:19" pos:end="57:17">else <block pos:start="51:24" pos:end="57:17">{<block_content pos:start="53:21" pos:end="55:61">

                    <expr_stmt pos:start="53:21" pos:end="55:61"><expr pos:start="53:21" pos:end="55:60"><name pos:start="53:21" pos:end="53:27">subpage</name> <operator pos:start="53:29" pos:end="53:29">=</operator> <name pos:start="53:31" pos:end="55:60"><name pos:start="53:31" pos:end="53:43">io_mem_opaque</name><index pos:start="53:44" pos:end="55:60">[<expr pos:start="53:45" pos:end="55:59"><operator pos:start="53:45" pos:end="53:45">(</operator><name pos:start="53:46" pos:end="53:56">orig_memory</name> <operator pos:start="53:58" pos:end="53:58">&amp;</operator> <operator pos:start="53:60" pos:end="53:60">~</operator><name pos:start="53:61" pos:end="53:76">TARGET_PAGE_MASK</name><operator pos:start="53:77" pos:end="53:77">)</operator>

                                            <operator pos:start="55:45" pos:end="55:46">&gt;&gt;</operator> <name pos:start="55:48" pos:end="55:59">IO_MEM_SHIFT</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:79"><expr pos:start="59:17" pos:end="59:78"><call pos:start="59:17" pos:end="59:78"><name pos:start="59:17" pos:end="59:32">subpage_register</name><argument_list pos:start="59:33" pos:end="59:78">(<argument pos:start="59:34" pos:end="59:40"><expr pos:start="59:34" pos:end="59:40"><name pos:start="59:34" pos:end="59:40">subpage</name></expr></argument>, <argument pos:start="59:43" pos:end="59:53"><expr pos:start="59:43" pos:end="59:53"><name pos:start="59:43" pos:end="59:53">start_addr2</name></expr></argument>, <argument pos:start="59:56" pos:end="59:64"><expr pos:start="59:56" pos:end="59:64"><name pos:start="59:56" pos:end="59:64">end_addr2</name></expr></argument>, <argument pos:start="59:67" pos:end="59:77"><expr pos:start="59:67" pos:end="59:77"><name pos:start="59:67" pos:end="59:77">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="71:13">else <block pos:start="61:20" pos:end="71:13">{<block_content pos:start="63:17" pos:end="69:52">

                <expr_stmt pos:start="63:17" pos:end="63:45"><expr pos:start="63:17" pos:end="63:44"><name pos:start="63:17" pos:end="63:30"><name pos:start="63:17" pos:end="63:17">p</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:30">phys_offset</name></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <name pos:start="63:34" pos:end="63:44">phys_offset</name></expr>;</expr_stmt>

                <if_stmt pos:start="65:17" pos:end="69:52"><if pos:start="65:17" pos:end="69:52">if <condition pos:start="65:20" pos:end="67:48">(<expr pos:start="65:21" pos:end="67:47"><operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:32">phys_offset</name> <operator pos:start="65:34" pos:end="65:34">&amp;</operator> <operator pos:start="65:36" pos:end="65:36">~</operator><name pos:start="65:37" pos:end="65:52">TARGET_PAGE_MASK</name><operator pos:start="65:53" pos:end="65:53">)</operator> <operator pos:start="65:55" pos:end="65:56">&lt;=</operator> <name pos:start="65:58" pos:end="65:67">IO_MEM_ROM</name> <operator pos:start="65:69" pos:end="65:70">||</operator>

                    <operator pos:start="67:21" pos:end="67:21">(</operator><name pos:start="67:22" pos:end="67:32">phys_offset</name> <operator pos:start="67:34" pos:end="67:34">&amp;</operator> <name pos:start="67:36" pos:end="67:46">IO_MEM_ROMD</name><operator pos:start="67:47" pos:end="67:47">)</operator></expr>)</condition><block type="pseudo" pos:start="69:21" pos:end="69:52"><block_content pos:start="69:21" pos:end="69:52">

                    <expr_stmt pos:start="69:21" pos:end="69:52"><expr pos:start="69:21" pos:end="69:51"><name pos:start="69:21" pos:end="69:31">phys_offset</name> <operator pos:start="69:33" pos:end="69:34">+=</operator> <name pos:start="69:36" pos:end="69:51">TARGET_PAGE_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="113:9">else <block pos:start="73:16" pos:end="113:9">{<block_content pos:start="75:13" pos:end="111:13">

            <expr_stmt pos:start="75:13" pos:end="75:66"><expr pos:start="75:13" pos:end="75:65"><name pos:start="75:13" pos:end="75:13">p</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:65"><name pos:start="75:17" pos:end="75:36">phys_page_find_alloc</name><argument_list pos:start="75:37" pos:end="75:65">(<argument pos:start="75:38" pos:end="75:61"><expr pos:start="75:38" pos:end="75:61"><name pos:start="75:38" pos:end="75:41">addr</name> <operator pos:start="75:43" pos:end="75:44">&gt;&gt;</operator> <name pos:start="75:46" pos:end="75:61">TARGET_PAGE_BITS</name></expr></argument>, <argument pos:start="75:64" pos:end="75:64"><expr pos:start="75:64" pos:end="75:64"><literal type="number" pos:start="75:64" pos:end="75:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:41"><expr pos:start="77:13" pos:end="77:40"><name pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:13">p</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:26">phys_offset</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:40">phys_offset</name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="111:13"><if pos:start="79:13" pos:end="83:48">if <condition pos:start="79:16" pos:end="81:44">(<expr pos:start="79:17" pos:end="81:43"><operator pos:start="79:17" pos:end="79:17">(</operator><name pos:start="79:18" pos:end="79:28">phys_offset</name> <operator pos:start="79:30" pos:end="79:30">&amp;</operator> <operator pos:start="79:32" pos:end="79:32">~</operator><name pos:start="79:33" pos:end="79:48">TARGET_PAGE_MASK</name><operator pos:start="79:49" pos:end="79:49">)</operator> <operator pos:start="79:51" pos:end="79:52">&lt;=</operator> <name pos:start="79:54" pos:end="79:63">IO_MEM_ROM</name> <operator pos:start="79:65" pos:end="79:66">||</operator>

                <operator pos:start="81:17" pos:end="81:17">(</operator><name pos:start="81:18" pos:end="81:28">phys_offset</name> <operator pos:start="81:30" pos:end="81:30">&amp;</operator> <name pos:start="81:32" pos:end="81:42">IO_MEM_ROMD</name><operator pos:start="81:43" pos:end="81:43">)</operator></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:48"><block_content pos:start="83:17" pos:end="83:48">

                <expr_stmt pos:start="83:17" pos:end="83:48"><expr pos:start="83:17" pos:end="83:47"><name pos:start="83:17" pos:end="83:27">phys_offset</name> <operator pos:start="83:29" pos:end="83:30">+=</operator> <name pos:start="83:32" pos:end="83:47">TARGET_PAGE_SIZE</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="85:13" pos:end="111:13">else <block pos:start="85:18" pos:end="111:13">{<block_content pos:start="87:17" pos:end="109:17">

                <decl_stmt pos:start="87:17" pos:end="87:58"><decl pos:start="87:17" pos:end="87:46"><type pos:start="87:17" pos:end="87:34"><name pos:start="87:17" pos:end="87:34">target_phys_addr_t</name></type> <name pos:start="87:36" pos:end="87:46">start_addr2</name></decl>, <decl pos:start="87:49" pos:end="87:57"><type ref="prev" pos:start="87:17" pos:end="87:34"/><name pos:start="87:49" pos:end="87:57">end_addr2</name></decl>;</decl_stmt>

                <decl_stmt pos:start="89:17" pos:end="89:37"><decl pos:start="89:17" pos:end="89:36"><type pos:start="89:17" pos:end="89:19"><name pos:start="89:17" pos:end="89:19">int</name></type> <name pos:start="89:21" pos:end="89:32">need_subpage</name> <init pos:start="89:34" pos:end="89:36">= <expr pos:start="89:36" pos:end="89:36"><literal type="number" pos:start="89:36" pos:end="89:36">0</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="93:17" pos:end="95:55"><expr pos:start="93:17" pos:end="95:54"><call pos:start="93:17" pos:end="95:54"><name pos:start="93:17" pos:end="93:29">CHECK_SUBPAGE</name><argument_list pos:start="93:30" pos:end="95:54">(<argument pos:start="93:31" pos:end="93:34"><expr pos:start="93:31" pos:end="93:34"><name pos:start="93:31" pos:end="93:34">addr</name></expr></argument>, <argument pos:start="93:37" pos:end="93:46"><expr pos:start="93:37" pos:end="93:46"><name pos:start="93:37" pos:end="93:46">start_addr</name></expr></argument>, <argument pos:start="93:49" pos:end="93:59"><expr pos:start="93:49" pos:end="93:59"><name pos:start="93:49" pos:end="93:59">start_addr2</name></expr></argument>, <argument pos:start="93:62" pos:end="93:69"><expr pos:start="93:62" pos:end="93:69"><name pos:start="93:62" pos:end="93:69">end_addr</name></expr></argument>,

                              <argument pos:start="95:31" pos:end="95:39"><expr pos:start="95:31" pos:end="95:39"><name pos:start="95:31" pos:end="95:39">end_addr2</name></expr></argument>, <argument pos:start="95:42" pos:end="95:53"><expr pos:start="95:42" pos:end="95:53"><name pos:start="95:42" pos:end="95:53">need_subpage</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="99:17" pos:end="109:17"><if pos:start="99:17" pos:end="109:17">if <condition pos:start="99:20" pos:end="99:33">(<expr pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:32">need_subpage</name></expr>)</condition> <block pos:start="99:35" pos:end="109:17">{<block_content pos:start="101:21" pos:end="107:50">

                    <expr_stmt pos:start="101:21" pos:end="103:79"><expr pos:start="101:21" pos:end="103:78"><name pos:start="101:21" pos:end="101:27">subpage</name> <operator pos:start="101:29" pos:end="101:29">=</operator> <call pos:start="101:31" pos:end="103:78"><name pos:start="101:31" pos:end="101:42">subpage_init</name><argument_list pos:start="101:43" pos:end="103:78">(<argument pos:start="101:44" pos:end="101:68"><expr pos:start="101:44" pos:end="101:68"><operator pos:start="101:44" pos:end="101:44">(</operator><name pos:start="101:45" pos:end="101:48">addr</name> <operator pos:start="101:50" pos:end="101:50">&amp;</operator> <name pos:start="101:52" pos:end="101:67">TARGET_PAGE_MASK</name><operator pos:start="101:68" pos:end="101:68">)</operator></expr></argument>,

                                           <argument pos:start="103:44" pos:end="103:58"><expr pos:start="103:44" pos:end="103:58"><operator pos:start="103:44" pos:end="103:44">&amp;</operator><name pos:start="103:45" pos:end="103:58"><name pos:start="103:45" pos:end="103:45">p</name><operator pos:start="103:46" pos:end="103:47">-&gt;</operator><name pos:start="103:48" pos:end="103:58">phys_offset</name></name></expr></argument>, <argument pos:start="103:61" pos:end="103:77"><expr pos:start="103:61" pos:end="103:77"><name pos:start="103:61" pos:end="103:77">IO_MEM_UNASSIGNED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="107:50"><expr pos:start="105:21" pos:end="107:49"><call pos:start="105:21" pos:end="107:49"><name pos:start="105:21" pos:end="105:36">subpage_register</name><argument_list pos:start="105:37" pos:end="107:49">(<argument pos:start="105:38" pos:end="105:44"><expr pos:start="105:38" pos:end="105:44"><name pos:start="105:38" pos:end="105:44">subpage</name></expr></argument>, <argument pos:start="105:47" pos:end="105:57"><expr pos:start="105:47" pos:end="105:57"><name pos:start="105:47" pos:end="105:57">start_addr2</name></expr></argument>, <argument pos:start="105:60" pos:end="105:68"><expr pos:start="105:60" pos:end="105:68"><name pos:start="105:60" pos:end="105:68">end_addr2</name></expr></argument>,

                                     <argument pos:start="107:38" pos:end="107:48"><expr pos:start="107:38" pos:end="107:48"><name pos:start="107:38" pos:end="107:48">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    

    <comment type="block" pos:start="119:5" pos:end="121:36">/* since each CPU stores ram addresses in its TLB cache, we must

       reset the modified entries */</comment>

    <comment type="block" pos:start="123:5" pos:end="123:21">/* XXX: slow ! */</comment>

    <for pos:start="125:5" pos:end="129:5">for<control pos:start="125:8" pos:end="125:58">(<init pos:start="125:9" pos:end="125:24"><expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:11">env</name> <operator pos:start="125:13" pos:end="125:13">=</operator> <name pos:start="125:15" pos:end="125:23">first_cpu</name></expr>;</init> <condition pos:start="125:26" pos:end="125:37"><expr pos:start="125:26" pos:end="125:36"><name pos:start="125:26" pos:end="125:28">env</name> <operator pos:start="125:30" pos:end="125:31">!=</operator> <name pos:start="125:33" pos:end="125:36">NULL</name></expr>;</condition> <incr pos:start="125:39" pos:end="125:57"><expr pos:start="125:39" pos:end="125:57"><name pos:start="125:39" pos:end="125:41">env</name> <operator pos:start="125:43" pos:end="125:43">=</operator> <name pos:start="125:45" pos:end="125:57"><name pos:start="125:45" pos:end="125:47">env</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:57">next_cpu</name></name></expr></incr>)</control> <block pos:start="125:60" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:26">

        <expr_stmt pos:start="127:9" pos:end="127:26"><expr pos:start="127:9" pos:end="127:25"><call pos:start="127:9" pos:end="127:25"><name pos:start="127:9" pos:end="127:17">tlb_flush</name><argument_list pos:start="127:18" pos:end="127:25">(<argument pos:start="127:19" pos:end="127:21"><expr pos:start="127:19" pos:end="127:21"><name pos:start="127:19" pos:end="127:21">env</name></expr></argument>, <argument pos:start="127:24" pos:end="127:24"><expr pos:start="127:24" pos:end="127:24"><literal type="number" pos:start="127:24" pos:end="127:24">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
