<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6795.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qemu_set_fd_handler</name><parameter_list pos:start="1:24" pos:end="7:37">(<parameter pos:start="1:25" pos:end="1:30"><decl pos:start="1:25" pos:end="1:30"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:30">fd</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:42"><decl pos:start="3:25" pos:end="3:42"><type pos:start="3:25" pos:end="3:42"><name pos:start="3:25" pos:end="3:33">IOHandler</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:42">fd_read</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:43"><decl pos:start="5:25" pos:end="5:43"><type pos:start="5:25" pos:end="5:43"><name pos:start="5:25" pos:end="5:33">IOHandler</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:43">fd_write</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:36"><decl pos:start="7:25" pos:end="7:36"><type pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:28">void</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="67:1">{<block_content pos:start="11:5" pos:end="65:13">

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:23"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:23">IOTrampoline</name></type> <name pos:start="11:25" pos:end="11:50"><name pos:start="11:25" pos:end="11:38">fd_trampolines</name><index pos:start="11:39" pos:end="11:50">[<expr pos:start="11:40" pos:end="11:49"><name pos:start="11:40" pos:end="11:49">FD_SETSIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">IOTrampoline</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:23">tramp</name> <init pos:start="13:25" pos:end="13:45">= <expr pos:start="13:27" pos:end="13:45"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:45"><name pos:start="13:28" pos:end="13:41">fd_trampolines</name><index pos:start="13:42" pos:end="13:45">[<expr pos:start="13:43" pos:end="13:44"><name pos:start="13:43" pos:end="13:44">fd</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:24">(<expr pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:13">tramp</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">tag</name></name> <operator pos:start="17:20" pos:end="17:21">!=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr>)</condition> <block pos:start="17:26" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:36">

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><call pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:26">g_io_channel_unref</name><argument_list pos:start="19:27" pos:end="19:39">(<argument pos:start="19:28" pos:end="19:38"><expr pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:38"><name pos:start="19:28" pos:end="19:32">tramp</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:38">chan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:23">g_source_remove</name><argument_list pos:start="21:24" pos:end="21:35">(<argument pos:start="21:25" pos:end="21:34"><expr pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:34"><name pos:start="21:25" pos:end="21:29">tramp</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:34">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="61:5"><if pos:start="27:5" pos:end="61:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:14">opaque</name></expr>)</condition> <block pos:start="27:17" pos:end="61:5">{<block_content pos:start="29:9" pos:end="59:77">

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:20">GIOCondition</name></type> <name pos:start="29:22" pos:end="29:25">cond</name> <init pos:start="29:27" pos:end="29:29">= <expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:33"><expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:13">tramp</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:22">fd_read</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:32">fd_read</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">tramp</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">fd_write</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:34">fd_write</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:31"><expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:13">tramp</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:21">opaque</name></name> <operator pos:start="37:23" pos:end="37:23">=</operator> <name pos:start="37:25" pos:end="37:30">opaque</name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:19">fd_read</name></expr>)</condition> <block pos:start="41:22" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:39">

            <expr_stmt pos:start="43:13" pos:end="43:39"><expr pos:start="43:13" pos:end="43:38"><name pos:start="43:13" pos:end="43:16">cond</name> <operator pos:start="43:18" pos:end="43:19">|=</operator> <name pos:start="43:21" pos:end="43:27">G_IO_IN</name> <operator pos:start="43:29" pos:end="43:29">|</operator> <name pos:start="43:31" pos:end="43:38">G_IO_ERR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="49:9" pos:end="53:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:21">(<expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">fd_write</name></expr>)</condition> <block pos:start="49:23" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:40">

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:16">cond</name> <operator pos:start="51:18" pos:end="51:19">|=</operator> <name pos:start="51:21" pos:end="51:28">G_IO_OUT</name> <operator pos:start="51:30" pos:end="51:30">|</operator> <name pos:start="51:32" pos:end="51:39">G_IO_ERR</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:13">tramp</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:19">chan</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:47"><name pos:start="57:23" pos:end="57:43">g_io_channel_unix_new</name><argument_list pos:start="57:44" pos:end="57:47">(<argument pos:start="57:45" pos:end="57:46"><expr pos:start="57:45" pos:end="57:46"><name pos:start="57:45" pos:end="57:46">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:77"><expr pos:start="59:9" pos:end="59:76"><name pos:start="59:9" pos:end="59:18"><name pos:start="59:9" pos:end="59:13">tramp</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:18">tag</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:76"><name pos:start="59:22" pos:end="59:35">g_io_add_watch</name><argument_list pos:start="59:36" pos:end="59:76">(<argument pos:start="59:37" pos:end="59:47"><expr pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:47"><name pos:start="59:37" pos:end="59:41">tramp</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:47">chan</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:53"><expr pos:start="59:50" pos:end="59:53"><name pos:start="59:50" pos:end="59:53">cond</name></expr></argument>, <argument pos:start="59:56" pos:end="59:68"><expr pos:start="59:56" pos:end="59:68"><name pos:start="59:56" pos:end="59:68">fd_trampoline</name></expr></argument>, <argument pos:start="59:71" pos:end="59:75"><expr pos:start="59:71" pos:end="59:75"><name pos:start="59:71" pos:end="59:75">tramp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
