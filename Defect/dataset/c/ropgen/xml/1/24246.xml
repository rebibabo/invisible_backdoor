<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24246.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">read_channel_params</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:47">MLPDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">m</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">substr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:49"><decl pos:start="3:32" pos:end="3:49"><type pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:44">GetBitContext</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:49">gbp</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:66"><decl pos:start="3:52" pos:end="3:66"><type pos:start="3:52" pos:end="3:66"><name pos:start="3:52" pos:end="3:59">unsigned</name> <name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:66">ch</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:13">

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">SubStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:40">= <expr pos:start="7:20" pos:end="7:40"><operator pos:start="7:20" pos:end="7:20">&amp;</operator><name pos:start="7:21" pos:end="7:40"><name pos:start="7:21" pos:end="7:21">m</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:32">substream</name><index pos:start="7:33" pos:end="7:40">[<expr pos:start="7:34" pos:end="7:39"><name pos:start="7:34" pos:end="7:39">substr</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ChannelParams</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">cp</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:46"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:42">channel_params</name><index pos:start="9:43" pos:end="9:46">[<expr pos:start="9:44" pos:end="9:45"><name pos:start="9:44" pos:end="9:45">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">FilterParams</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">fir</name> <init pos:start="11:23" pos:end="11:47">= <expr pos:start="11:25" pos:end="11:47"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:27">cp</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:42">filter_params</name><index pos:start="11:43" pos:end="11:47">[<expr pos:start="11:44" pos:end="11:46"><name pos:start="11:44" pos:end="11:46">FIR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">FilterParams</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:21">iir</name> <init pos:start="13:23" pos:end="13:47">= <expr pos:start="13:25" pos:end="13:47"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:47"><name pos:start="13:26" pos:end="13:27">cp</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:42">filter_params</name><index pos:start="13:43" pos:end="13:47">[<expr pos:start="13:44" pos:end="13:46"><name pos:start="13:44" pos:end="13:46">IIR</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:27"><if pos:start="19:5" pos:end="25:27">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:31"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:31">param_presence_flags</name></name> <operator pos:start="19:33" pos:end="19:33">&amp;</operator> <name pos:start="19:35" pos:end="19:43">PARAM_FIR</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="25:27"><block_content pos:start="21:9" pos:end="25:27">

        <if_stmt pos:start="21:9" pos:end="25:27"><if pos:start="21:9" pos:end="25:27">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><call pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:21">get_bits1</name><argument_list pos:start="21:22" pos:end="21:26">(<argument pos:start="21:23" pos:end="21:25"><expr pos:start="21:23" pos:end="21:25"><name pos:start="21:23" pos:end="21:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="25:27"><block_content pos:start="23:13" pos:end="25:27">

            <if_stmt pos:start="23:13" pos:end="25:27"><if pos:start="23:13" pos:end="25:27">if <condition pos:start="23:16" pos:end="23:72">(<expr pos:start="23:17" pos:end="23:71"><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:20">ret</name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:66"><name pos:start="23:24" pos:end="23:41">read_filter_params</name><argument_list pos:start="23:42" pos:end="23:66">(<argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><name pos:start="23:43" pos:end="23:43">m</name></expr></argument>, <argument pos:start="23:46" pos:end="23:48"><expr pos:start="23:46" pos:end="23:48"><name pos:start="23:46" pos:end="23:48">gbp</name></expr></argument>, <argument pos:start="23:51" pos:end="23:56"><expr pos:start="23:51" pos:end="23:56"><name pos:start="23:51" pos:end="23:56">substr</name></expr></argument>, <argument pos:start="23:59" pos:end="23:60"><expr pos:start="23:59" pos:end="23:60"><name pos:start="23:59" pos:end="23:60">ch</name></expr></argument>, <argument pos:start="23:63" pos:end="23:65"><expr pos:start="23:63" pos:end="23:65"><name pos:start="23:63" pos:end="23:65">FIR</name></expr></argument>)</argument_list></call><operator pos:start="23:67" pos:end="23:67">)</operator> <operator pos:start="23:69" pos:end="23:69">&lt;</operator> <literal type="number" pos:start="23:71" pos:end="23:71">0</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:27"><block_content pos:start="25:17" pos:end="25:27">

                <return pos:start="25:17" pos:end="25:27">return <expr pos:start="25:24" pos:end="25:26"><name pos:start="25:24" pos:end="25:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:27"><if pos:start="29:5" pos:end="35:27">if <condition pos:start="29:8" pos:end="29:44">(<expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:31">param_presence_flags</name></name> <operator pos:start="29:33" pos:end="29:33">&amp;</operator> <name pos:start="29:35" pos:end="29:43">PARAM_IIR</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="35:27"><block_content pos:start="31:9" pos:end="35:27">

        <if_stmt pos:start="31:9" pos:end="35:27"><if pos:start="31:9" pos:end="35:27">if <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><call pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:21">get_bits1</name><argument_list pos:start="31:22" pos:end="31:26">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="35:27"><block_content pos:start="33:13" pos:end="35:27">

            <if_stmt pos:start="33:13" pos:end="35:27"><if pos:start="33:13" pos:end="35:27">if <condition pos:start="33:16" pos:end="33:72">(<expr pos:start="33:17" pos:end="33:71"><operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:20">ret</name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:66"><name pos:start="33:24" pos:end="33:41">read_filter_params</name><argument_list pos:start="33:42" pos:end="33:66">(<argument pos:start="33:43" pos:end="33:43"><expr pos:start="33:43" pos:end="33:43"><name pos:start="33:43" pos:end="33:43">m</name></expr></argument>, <argument pos:start="33:46" pos:end="33:48"><expr pos:start="33:46" pos:end="33:48"><name pos:start="33:46" pos:end="33:48">gbp</name></expr></argument>, <argument pos:start="33:51" pos:end="33:56"><expr pos:start="33:51" pos:end="33:56"><name pos:start="33:51" pos:end="33:56">substr</name></expr></argument>, <argument pos:start="33:59" pos:end="33:60"><expr pos:start="33:59" pos:end="33:60"><name pos:start="33:59" pos:end="33:60">ch</name></expr></argument>, <argument pos:start="33:63" pos:end="33:65"><expr pos:start="33:63" pos:end="33:65"><name pos:start="33:63" pos:end="33:65">IIR</name></expr></argument>)</argument_list></call><operator pos:start="33:67" pos:end="33:67">)</operator> <operator pos:start="33:69" pos:end="33:69">&lt;</operator> <literal type="number" pos:start="33:71" pos:end="33:71">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:27"><block_content pos:start="35:17" pos:end="35:27">

                <return pos:start="35:17" pos:end="35:27">return <expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">fir</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">order</name></name> <operator pos:start="39:20" pos:end="39:20">+</operator> <name pos:start="39:22" pos:end="39:31"><name pos:start="39:22" pos:end="39:24">iir</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:31">order</name></name> <operator pos:start="39:33" pos:end="39:33">&gt;</operator> <literal type="number" pos:start="39:35" pos:end="39:35">8</literal></expr>)</condition> <block pos:start="39:38" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:74"><expr pos:start="41:9" pos:end="41:73"><call pos:start="41:9" pos:end="41:73"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:73">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">m</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:72"><expr pos:start="41:40" pos:end="41:72"><literal type="string" pos:start="41:40" pos:end="41:72">"Total filter orders too high.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="59:5">if <condition pos:start="49:8" pos:end="51:33">(<expr pos:start="49:9" pos:end="51:32"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:11">fir</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:18">order</name></name> <operator pos:start="49:20" pos:end="49:21">&amp;&amp;</operator> <name pos:start="49:23" pos:end="49:32"><name pos:start="49:23" pos:end="49:25">iir</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:32">order</name></name> <operator pos:start="49:34" pos:end="49:35">&amp;&amp;</operator>

        <name pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">fir</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:18">shift</name></name> <operator pos:start="51:20" pos:end="51:21">!=</operator> <name pos:start="51:23" pos:end="51:32"><name pos:start="51:23" pos:end="51:25">iir</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">shift</name></name></expr>)</condition> <block pos:start="51:35" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:35">

        <expr_stmt pos:start="53:9" pos:end="55:70"><expr pos:start="53:9" pos:end="55:69"><call pos:start="53:9" pos:end="55:69"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:69">(<argument pos:start="53:16" pos:end="53:23"><expr pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:16">m</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:23">avctx</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:37"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:37">AV_LOG_ERROR</name></expr></argument>,

                <argument pos:start="55:17" pos:end="55:68"><expr pos:start="55:17" pos:end="55:68"><literal type="string" pos:start="55:17" pos:end="55:68">"FIR and IIR filters must use the same precision.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:35">return <expr pos:start="57:16" pos:end="57:34"><name pos:start="57:16" pos:end="57:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="61:5" pos:end="69:45">/* The FIR and IIR filters must have the same precision.

     * To simplify the filtering code, only the precision of the

     * FIR filter is considered. If only the IIR filter is employed,

     * the FIR filter precision is set to that of the IIR filter, so

     * that the filtering code can use it. */</comment>

    <if_stmt pos:start="71:5" pos:end="73:32"><if pos:start="71:5" pos:end="73:32">if <condition pos:start="71:8" pos:end="71:34">(<expr pos:start="71:9" pos:end="71:33"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:19"><name pos:start="71:10" pos:end="71:12">fir</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:19">order</name></name> <operator pos:start="71:21" pos:end="71:22">&amp;&amp;</operator> <name pos:start="71:24" pos:end="71:33"><name pos:start="71:24" pos:end="71:26">iir</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:33">order</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:32"><block_content pos:start="73:9" pos:end="73:32">

        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:11">fir</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:18">shift</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:31"><name pos:start="73:22" pos:end="73:24">iir</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">shift</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="81:49"><if pos:start="77:5" pos:end="81:49">if <condition pos:start="77:8" pos:end="77:51">(<expr pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:31">param_presence_flags</name></name> <operator pos:start="77:33" pos:end="77:33">&amp;</operator> <name pos:start="77:35" pos:end="77:50">PARAM_HUFFOFFSET</name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="81:49"><block_content pos:start="79:9" pos:end="81:49">

        <if_stmt pos:start="79:9" pos:end="81:49"><if pos:start="79:9" pos:end="81:49">if <condition pos:start="79:12" pos:end="79:27">(<expr pos:start="79:13" pos:end="79:26"><call pos:start="79:13" pos:end="79:26"><name pos:start="79:13" pos:end="79:21">get_bits1</name><argument_list pos:start="79:22" pos:end="79:26">(<argument pos:start="79:23" pos:end="79:25"><expr pos:start="79:23" pos:end="79:25"><name pos:start="79:23" pos:end="79:25">gbp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:49"><block_content pos:start="81:13" pos:end="81:49">

            <expr_stmt pos:start="81:13" pos:end="81:49"><expr pos:start="81:13" pos:end="81:48"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:14">cp</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:27">huff_offset</name></name> <operator pos:start="81:29" pos:end="81:29">=</operator> <call pos:start="81:31" pos:end="81:48"><name pos:start="81:31" pos:end="81:39">get_sbits</name><argument_list pos:start="81:40" pos:end="81:48">(<argument pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:43">gbp</name></expr></argument>, <argument pos:start="81:46" pos:end="81:47"><expr pos:start="81:46" pos:end="81:47"><literal type="number" pos:start="81:46" pos:end="81:47">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:37"><expr pos:start="85:5" pos:end="85:36"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:6">cp</name><operator pos:start="85:7" pos:end="85:8">-&gt;</operator><name pos:start="85:9" pos:end="85:16">codebook</name></name>  <operator pos:start="85:19" pos:end="85:19">=</operator> <call pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:28">get_bits</name><argument_list pos:start="85:29" pos:end="85:36">(<argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">gbp</name></expr></argument>, <argument pos:start="85:35" pos:end="85:35"><expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:37"><expr pos:start="87:5" pos:end="87:36"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:6">cp</name><operator pos:start="87:7" pos:end="87:8">-&gt;</operator><name pos:start="87:9" pos:end="87:17">huff_lsbs</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:28">get_bits</name><argument_list pos:start="87:29" pos:end="87:36">(<argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:32">gbp</name></expr></argument>, <argument pos:start="87:35" pos:end="87:35"><expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="99:5">if <condition pos:start="91:8" pos:end="91:27">(<expr pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:10">cp</name><operator pos:start="91:11" pos:end="91:12">-&gt;</operator><name pos:start="91:13" pos:end="91:21">huff_lsbs</name></name> <operator pos:start="91:23" pos:end="91:23">&gt;</operator> <literal type="number" pos:start="91:25" pos:end="91:26">24</literal></expr>)</condition> <block pos:start="91:29" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:35">

        <expr_stmt pos:start="93:9" pos:end="93:63"><expr pos:start="93:9" pos:end="93:62"><call pos:start="93:9" pos:end="93:62"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:62">(<argument pos:start="93:16" pos:end="93:23"><expr pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:23"><name pos:start="93:16" pos:end="93:16">m</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:23">avctx</name></name></expr></argument>, <argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:40" pos:end="93:61"><expr pos:start="93:40" pos:end="93:61"><literal type="string" pos:start="93:40" pos:end="93:61">"Invalid huff_lsbs.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:26"><expr pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:10">cp</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:21">huff_lsbs</name></name> <operator pos:start="95:23" pos:end="95:23">=</operator> <literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:35">return <expr pos:start="97:16" pos:end="97:34"><name pos:start="97:16" pos:end="97:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:62"><expr pos:start="103:5" pos:end="103:61"><name pos:start="103:5" pos:end="103:24"><name pos:start="103:5" pos:end="103:6">cp</name><operator pos:start="103:7" pos:end="103:8">-&gt;</operator><name pos:start="103:9" pos:end="103:24">sign_huff_offset</name></name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:61"><name pos:start="103:28" pos:end="103:46">calculate_sign_huff</name><argument_list pos:start="103:47" pos:end="103:61">(<argument pos:start="103:48" pos:end="103:48"><expr pos:start="103:48" pos:end="103:48"><name pos:start="103:48" pos:end="103:48">m</name></expr></argument>, <argument pos:start="103:51" pos:end="103:56"><expr pos:start="103:51" pos:end="103:56"><name pos:start="103:51" pos:end="103:56">substr</name></expr></argument>, <argument pos:start="103:59" pos:end="103:60"><expr pos:start="103:59" pos:end="103:60"><name pos:start="103:59" pos:end="103:60">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
