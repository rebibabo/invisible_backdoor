<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10830.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">dct_quantize_c</name><parameter_list pos:start="1:26" pos:end="5:35">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:40">MpegEncContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:31">DCTELEM</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">block</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:45"><decl pos:start="3:41" pos:end="3:45"><type pos:start="3:41" pos:end="3:45"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:45">n</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:34"><decl pos:start="5:25" pos:end="5:34"><type pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:34">qscale</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="219:1">{<block_content pos:start="9:5" pos:end="217:25">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:19">level</name></decl>, <decl pos:start="9:22" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:34">last_non_zero</name></decl>, <decl pos:start="9:37" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:37" pos:end="9:37">q</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:15"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:19">qmat</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">minLevel</name></decl>, <decl pos:start="13:19" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:26">maxLevel</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="49:5"><if pos:start="17:5" pos:end="25:5">if<condition pos:start="17:7" pos:end="17:61">(<expr pos:start="17:8" pos:end="17:60"><name pos:start="17:8" pos:end="17:15"><name pos:start="17:8" pos:end="17:8">s</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:15">avctx</name></name><operator pos:start="17:16" pos:end="17:17">!=</operator><name pos:start="17:18" pos:end="17:21">NULL</name> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:44"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:33">avctx</name><operator pos:start="17:34" pos:end="17:35">-&gt;</operator><name pos:start="17:36" pos:end="17:40">codec</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:44">id</name></name><operator pos:start="17:45" pos:end="17:46">==</operator><name pos:start="17:47" pos:end="17:60">CODEC_ID_MPEG4</name></expr>)</condition><block pos:start="17:62" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:23">

	<comment type="block" pos:start="19:9" pos:end="19:19">/* mpeg4 */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:16">minLevel</name><operator pos:start="21:17" pos:end="21:17">=</operator> <operator pos:start="21:19" pos:end="21:19">-</operator><literal type="number" pos:start="21:20" pos:end="21:23">2048</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:16">maxLevel</name><operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:22">2047</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="25:6" pos:end="33:5">else if<condition pos:start="25:13" pos:end="25:38">(<expr pos:start="25:14" pos:end="25:37"><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:26">out_format</name></name><operator pos:start="25:27" pos:end="25:28">==</operator><name pos:start="25:29" pos:end="25:37">FMT_MPEG1</name></expr>)</condition><block pos:start="25:39" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:22">

	<comment type="block" pos:start="27:9" pos:end="27:19">/* mpeg1 */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:23"><expr pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:16">minLevel</name><operator pos:start="29:17" pos:end="29:17">=</operator> <operator pos:start="29:19" pos:end="29:19">-</operator><literal type="number" pos:start="29:20" pos:end="29:22">255</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:16">maxLevel</name><operator pos:start="31:17" pos:end="31:17">=</operator> <literal type="number" pos:start="31:19" pos:end="31:21">255</literal></expr>;</expr_stmt>

    </block_content>}</block></if><if type="elseif" pos:start="33:6" pos:end="41:5">else if<condition pos:start="33:13" pos:end="33:38">(<expr pos:start="33:14" pos:end="33:37"><name pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:26">out_format</name></name><operator pos:start="33:27" pos:end="33:28">==</operator><name pos:start="33:29" pos:end="33:37">FMT_MJPEG</name></expr>)</condition><block pos:start="33:39" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:23">

	<comment type="block" pos:start="35:9" pos:end="35:21">/* (m)jpeg */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:16">minLevel</name><operator pos:start="37:17" pos:end="37:17">=</operator> <operator pos:start="37:19" pos:end="37:19">-</operator><literal type="number" pos:start="37:20" pos:end="37:23">1023</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:16">maxLevel</name><operator pos:start="39:17" pos:end="39:17">=</operator> <literal type="number" pos:start="39:19" pos:end="39:22">1023</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="41:6" pos:end="49:5">else<block pos:start="41:10" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:22">

	<comment type="block" pos:start="43:9" pos:end="43:28">/* h263 / msmpeg4 */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:16">minLevel</name><operator pos:start="45:17" pos:end="45:17">=</operator> <operator pos:start="45:19" pos:end="45:19">-</operator><literal type="number" pos:start="45:20" pos:end="45:22">128</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:16">maxLevel</name><operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:21">127</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:20"><expr pos:start="53:5" pos:end="53:19"><call pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:11">av_fdct</name> <argument_list pos:start="53:13" pos:end="53:19">(<argument pos:start="53:14" pos:end="53:18"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:18">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:50">/* we need this permutation so that we correct the IDCT

       permutation. will be moved into DCT code */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:17">block_permute</name><argument_list pos:start="61:18" pos:end="61:24">(<argument pos:start="61:19" pos:end="61:23"><expr pos:start="61:19" pos:end="61:23"><name pos:start="61:19" pos:end="61:23">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="105:5"><if pos:start="65:5" pos:end="97:5">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:19">mb_intra</name></name></expr>)</condition> <block pos:start="65:22" pos:end="97:5">{<block_content pos:start="67:9" pos:end="95:9">

        <if_stmt pos:start="67:9" pos:end="73:30"><if pos:start="67:9" pos:end="69:30">if <condition pos:start="67:12" pos:end="67:18">(<expr pos:start="67:13" pos:end="67:17"><name pos:start="67:13" pos:end="67:13">n</name> <operator pos:start="67:15" pos:end="67:15">&lt;</operator> <literal type="number" pos:start="67:17" pos:end="67:17">4</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:30"><block_content pos:start="69:13" pos:end="69:30">

            <expr_stmt pos:start="69:13" pos:end="69:30"><expr pos:start="69:13" pos:end="69:29"><name pos:start="69:13" pos:end="69:13">q</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:29"><name pos:start="69:17" pos:end="69:17">s</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:29">y_dc_scale</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="71:9" pos:end="73:30">else<block type="pseudo" pos:start="73:13" pos:end="73:30"><block_content pos:start="73:13" pos:end="73:30">

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:13">q</name> <operator pos:start="73:15" pos:end="73:15">=</operator> <name pos:start="73:17" pos:end="73:29"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:29">c_dc_scale</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:9">q</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:13">q</name> <operator pos:start="75:15" pos:end="75:16">&lt;&lt;</operator> <literal type="number" pos:start="75:18" pos:end="75:18">3</literal></expr>;</expr_stmt>

        

        <comment type="block" pos:start="79:9" pos:end="79:54">/* note: block[0] is assumed to be positive */</comment>

        <expr_stmt pos:start="81:9" pos:end="81:45"><expr pos:start="81:9" pos:end="81:44"><name pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:13">block</name><index pos:start="81:14" pos:end="81:16">[<expr pos:start="81:15" pos:end="81:15"><literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>]</index></name> <operator pos:start="81:18" pos:end="81:18">=</operator> <operator pos:start="81:20" pos:end="81:20">(</operator><name pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:25">block</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><literal type="number" pos:start="81:27" pos:end="81:27">0</literal></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">+</operator> <operator pos:start="81:32" pos:end="81:32">(</operator><name pos:start="81:33" pos:end="81:33">q</name> <operator pos:start="81:35" pos:end="81:36">&gt;&gt;</operator> <literal type="number" pos:start="81:38" pos:end="81:38">1</literal><operator pos:start="81:39" pos:end="81:39">)</operator><operator pos:start="81:40" pos:end="81:40">)</operator> <operator pos:start="81:42" pos:end="81:42">/</operator> <name pos:start="81:44" pos:end="81:44">q</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:14"><expr pos:start="83:9" pos:end="83:13"><name pos:start="83:9" pos:end="83:9">i</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <literal type="number" pos:start="83:13" pos:end="83:13">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:21">last_non_zero</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:38">(<expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:25">out_format</name></name> <operator pos:start="87:27" pos:end="87:28">==</operator> <name pos:start="87:30" pos:end="87:37">FMT_H263</name></expr>)</condition> <block pos:start="87:40" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:41">

            <expr_stmt pos:start="89:13" pos:end="89:41"><expr pos:start="89:13" pos:end="89:40"><name pos:start="89:13" pos:end="89:16">qmat</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:40"><name pos:start="89:20" pos:end="89:20">s</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:40">q_non_intra_matrix</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="91:11" pos:end="95:9">else <block pos:start="91:16" pos:end="95:9">{<block_content pos:start="93:13" pos:end="93:37">

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:16">qmat</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:36"><name pos:start="93:20" pos:end="93:20">s</name><operator pos:start="93:21" pos:end="93:22">-&gt;</operator><name pos:start="93:23" pos:end="93:36">q_intra_matrix</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="105:5">else <block pos:start="97:12" pos:end="105:5">{<block_content pos:start="99:9" pos:end="103:37">

        <expr_stmt pos:start="99:9" pos:end="99:14"><expr pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:9">i</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <literal type="number" pos:start="99:13" pos:end="99:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:27"><expr pos:start="101:9" pos:end="101:26"><name pos:start="101:9" pos:end="101:21">last_non_zero</name> <operator pos:start="101:23" pos:end="101:23">=</operator> <operator pos:start="101:25" pos:end="101:25">-</operator><literal type="number" pos:start="101:26" pos:end="101:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:37"><expr pos:start="103:9" pos:end="103:36"><name pos:start="103:9" pos:end="103:12">qmat</name> <operator pos:start="103:14" pos:end="103:14">=</operator> <name pos:start="103:16" pos:end="103:36"><name pos:start="103:16" pos:end="103:16">s</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:36">q_non_intra_matrix</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="109:5" pos:end="215:5">for<control pos:start="109:8" pos:end="109:18">(<init pos:start="109:9" pos:end="109:9">;</init><condition pos:start="109:10" pos:end="109:14"><expr pos:start="109:10" pos:end="109:13"><name pos:start="109:10" pos:end="109:10">i</name><operator pos:start="109:11" pos:end="109:11">&lt;</operator><literal type="number" pos:start="109:12" pos:end="109:13">64</literal></expr>;</condition><incr pos:start="109:15" pos:end="109:17"><expr pos:start="109:15" pos:end="109:17"><name pos:start="109:15" pos:end="109:15">i</name><operator pos:start="109:16" pos:end="109:17">++</operator></expr></incr>)</control> <block pos:start="109:20" pos:end="215:5">{<block_content pos:start="111:9" pos:end="213:9">

        <expr_stmt pos:start="111:9" pos:end="111:29"><expr pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:9">j</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:25">zigzag_direct</name><index pos:start="111:26" pos:end="111:28">[<expr pos:start="111:27" pos:end="111:27"><name pos:start="111:27" pos:end="111:27">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:25"><expr pos:start="113:9" pos:end="113:24"><name pos:start="113:9" pos:end="113:13">level</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <name pos:start="113:17" pos:end="113:24"><name pos:start="113:17" pos:end="113:21">block</name><index pos:start="113:22" pos:end="113:24">[<expr pos:start="113:23" pos:end="113:23"><name pos:start="113:23" pos:end="113:23">j</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="118:0"><expr pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:13">level</name> <operator pos:start="115:15" pos:end="115:15">=</operator> <name pos:start="115:17" pos:end="115:21">level</name> <operator pos:start="115:23" pos:end="115:23">*</operator> <name pos:start="115:25" pos:end="115:31"><name pos:start="115:25" pos:end="115:28">qmat</name><index pos:start="115:29" pos:end="115:31">[<expr pos:start="115:30" pos:end="115:30"><name pos:start="115:30" pos:end="115:30">j</name></expr>]</index></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="117:1" pos:end="117:15">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:15">PARANOID</name></cpp:ifdef>

        <block pos:start="119:9" pos:end="168:0">{<block_content pos:start="121:13" pos:end="161:13">

            <decl_stmt pos:start="121:13" pos:end="121:33"><decl pos:start="121:13" pos:end="121:32"><type pos:start="121:13" pos:end="121:22"><specifier pos:start="121:13" pos:end="121:18">static</specifier> <name pos:start="121:20" pos:end="121:22">int</name></type> <name pos:start="121:24" pos:end="121:28">count</name> <init pos:start="121:30" pos:end="121:32">= <expr pos:start="121:32" pos:end="121:32"><literal type="number" pos:start="121:32" pos:end="121:32">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="123:13" pos:end="123:38"><decl pos:start="123:13" pos:end="123:22"><type pos:start="123:13" pos:end="123:15"><name pos:start="123:13" pos:end="123:15">int</name></type> <name pos:start="123:17" pos:end="123:22">level1</name></decl>, <decl pos:start="123:25" pos:end="123:30"><type ref="prev" pos:start="123:13" pos:end="123:15"/><name pos:start="123:25" pos:end="123:30">level2</name></decl>, <decl pos:start="123:33" pos:end="123:37"><type ref="prev" pos:start="123:13" pos:end="123:15"/><name pos:start="123:33" pos:end="123:37">qmat1</name></decl>;</decl_stmt>

            <decl_stmt pos:start="125:13" pos:end="125:23"><decl pos:start="125:13" pos:end="125:22"><type pos:start="125:13" pos:end="125:18"><name pos:start="125:13" pos:end="125:18">double</name></type> <name pos:start="125:20" pos:end="125:22">val</name></decl>;</decl_stmt>

            <if_stmt pos:start="127:13" pos:end="135:13"><if pos:start="127:13" pos:end="131:13">if <condition pos:start="127:16" pos:end="127:46">(<expr pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:20">qmat</name> <operator pos:start="127:22" pos:end="127:23">==</operator> <name pos:start="127:25" pos:end="127:45"><name pos:start="127:25" pos:end="127:25">s</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:45">q_non_intra_matrix</name></name></expr>)</condition> <block pos:start="127:48" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:64">

                <expr_stmt pos:start="129:17" pos:end="129:64"><expr pos:start="129:17" pos:end="129:63"><name pos:start="129:17" pos:end="129:21">qmat1</name> <operator pos:start="129:23" pos:end="129:23">=</operator> <name pos:start="129:25" pos:end="129:51"><name pos:start="129:25" pos:end="129:48">default_non_intra_matrix</name><index pos:start="129:49" pos:end="129:51">[<expr pos:start="129:50" pos:end="129:50"><name pos:start="129:50" pos:end="129:50">j</name></expr>]</index></name> <operator pos:start="129:53" pos:end="129:53">*</operator> <name pos:start="129:55" pos:end="129:63"><name pos:start="129:55" pos:end="129:55">s</name><operator pos:start="129:56" pos:end="129:57">-&gt;</operator><name pos:start="129:58" pos:end="129:63">qscale</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="131:15" pos:end="135:13">else <block pos:start="131:20" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:60">

                <expr_stmt pos:start="133:17" pos:end="133:60"><expr pos:start="133:17" pos:end="133:59"><name pos:start="133:17" pos:end="133:21">qmat1</name> <operator pos:start="133:23" pos:end="133:23">=</operator> <name pos:start="133:25" pos:end="133:47"><name pos:start="133:25" pos:end="133:44">default_intra_matrix</name><index pos:start="133:45" pos:end="133:47">[<expr pos:start="133:46" pos:end="133:46"><name pos:start="133:46" pos:end="133:46">j</name></expr>]</index></name> <operator pos:start="133:49" pos:end="133:49">*</operator> <name pos:start="133:51" pos:end="133:59"><name pos:start="133:51" pos:end="133:51">s</name><operator pos:start="133:52" pos:end="133:53">-&gt;</operator><name pos:start="133:54" pos:end="133:59">qscale</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="137:13" pos:end="145:51"><if pos:start="137:13" pos:end="139:63">if <condition pos:start="137:16" pos:end="137:43">(<expr pos:start="137:17" pos:end="137:42"><name pos:start="137:17" pos:end="137:23">av_fdct</name> <operator pos:start="137:25" pos:end="137:26">!=</operator> <name pos:start="137:28" pos:end="137:42">jpeg_fdct_ifast</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:63"><block_content pos:start="139:17" pos:end="139:63">

                <expr_stmt pos:start="139:17" pos:end="139:63"><expr pos:start="139:17" pos:end="139:62"><name pos:start="139:17" pos:end="139:19">val</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <operator pos:start="139:23" pos:end="139:23">(</operator><operator pos:start="139:24" pos:end="139:24">(</operator><name pos:start="139:25" pos:end="139:30">double</name><operator pos:start="139:31" pos:end="139:31">)</operator><name pos:start="139:32" pos:end="139:39"><name pos:start="139:32" pos:end="139:36">block</name><index pos:start="139:37" pos:end="139:39">[<expr pos:start="139:38" pos:end="139:38"><name pos:start="139:38" pos:end="139:38">j</name></expr>]</index></name> <operator pos:start="139:41" pos:end="139:41">*</operator> <literal type="number" pos:start="139:43" pos:end="139:45">8.0</literal><operator pos:start="139:46" pos:end="139:46">)</operator> <operator pos:start="139:48" pos:end="139:48">/</operator> <operator pos:start="139:50" pos:end="139:50">(</operator><name pos:start="139:51" pos:end="139:56">double</name><operator pos:start="139:57" pos:end="139:57">)</operator><name pos:start="139:58" pos:end="139:62">qmat1</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="141:13" pos:end="145:51">else<block type="pseudo" pos:start="143:17" pos:end="145:51"><block_content pos:start="143:17" pos:end="145:51">

                <expr_stmt pos:start="143:17" pos:end="145:51"><expr pos:start="143:17" pos:end="145:50"><name pos:start="143:17" pos:end="143:19">val</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <operator pos:start="143:23" pos:end="143:23">(</operator><operator pos:start="143:24" pos:end="143:24">(</operator><name pos:start="143:25" pos:end="143:30">double</name><operator pos:start="143:31" pos:end="143:31">)</operator><name pos:start="143:32" pos:end="143:39"><name pos:start="143:32" pos:end="143:36">block</name><index pos:start="143:37" pos:end="143:39">[<expr pos:start="143:38" pos:end="143:38"><name pos:start="143:38" pos:end="143:38">j</name></expr>]</index></name> <operator pos:start="143:41" pos:end="143:41">*</operator> <literal type="number" pos:start="143:43" pos:end="143:45">8.0</literal> <operator pos:start="143:47" pos:end="143:47">*</operator> <literal type="number" pos:start="143:49" pos:end="143:54">2048.0</literal><operator pos:start="143:55" pos:end="143:55">)</operator> <operator pos:start="143:57" pos:end="143:57">/</operator> 

                    <operator pos:start="145:21" pos:end="145:21">(</operator><operator pos:start="145:22" pos:end="145:22">(</operator><name pos:start="145:23" pos:end="145:28">double</name><operator pos:start="145:29" pos:end="145:29">)</operator><name pos:start="145:30" pos:end="145:34">qmat1</name> <operator pos:start="145:36" pos:end="145:36">*</operator> <name pos:start="145:38" pos:end="145:49"><name pos:start="145:38" pos:end="145:46">aanscales</name><index pos:start="145:47" pos:end="145:49">[<expr pos:start="145:48" pos:end="145:48"><name pos:start="145:48" pos:end="145:48">j</name></expr>]</index></name><operator pos:start="145:50" pos:end="145:50">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:18">level1</name> <operator pos:start="147:20" pos:end="147:20">=</operator> <operator pos:start="147:22" pos:end="147:22">(</operator><name pos:start="147:23" pos:end="147:25">int</name><operator pos:start="147:26" pos:end="147:26">)</operator><name pos:start="147:27" pos:end="147:29">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:53"><expr pos:start="149:13" pos:end="149:52"><name pos:start="149:13" pos:end="149:18">level2</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <name pos:start="149:22" pos:end="149:26">level</name> <operator pos:start="149:28" pos:end="149:28">/</operator> <operator pos:start="149:30" pos:end="149:30">(</operator><literal type="number" pos:start="149:31" pos:end="149:31">1</literal> <operator pos:start="149:33" pos:end="149:34">&lt;&lt;</operator> <operator pos:start="149:36" pos:end="149:36">(</operator><name pos:start="149:37" pos:end="149:46">QMAT_SHIFT</name> <operator pos:start="149:48" pos:end="149:48">-</operator> <literal type="number" pos:start="149:50" pos:end="149:50">3</literal><operator pos:start="149:51" pos:end="149:51">)</operator><operator pos:start="149:52" pos:end="149:52">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="161:13"><if pos:start="151:13" pos:end="161:13">if <condition pos:start="151:16" pos:end="151:33">(<expr pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:22">level1</name> <operator pos:start="151:24" pos:end="151:25">!=</operator> <name pos:start="151:27" pos:end="151:32">level2</name></expr>)</condition> <block pos:start="151:35" pos:end="161:13">{<block_content pos:start="153:17" pos:end="159:24">

                <expr_stmt pos:start="153:17" pos:end="157:29"><expr pos:start="153:17" pos:end="157:28"><call pos:start="153:17" pos:end="157:28"><name pos:start="153:17" pos:end="153:23">fprintf</name><argument_list pos:start="153:24" pos:end="157:28">(<argument pos:start="153:25" pos:end="153:30"><expr pos:start="153:25" pos:end="153:30"><name pos:start="153:25" pos:end="153:30">stderr</name></expr></argument>, <argument pos:start="153:33" pos:end="153:111"><expr pos:start="153:33" pos:end="153:111"><literal type="string" pos:start="153:33" pos:end="153:111">"%d: quant error qlevel=%d wanted=%d level=%d qmat1=%d qmat=%d wantedf=%0.6f\n"</literal></expr></argument>, 

                        <argument pos:start="155:25" pos:end="155:29"><expr pos:start="155:25" pos:end="155:29"><name pos:start="155:25" pos:end="155:29">count</name></expr></argument>, <argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><name pos:start="155:32" pos:end="155:37">level2</name></expr></argument>, <argument pos:start="155:40" pos:end="155:45"><expr pos:start="155:40" pos:end="155:45"><name pos:start="155:40" pos:end="155:45">level1</name></expr></argument>, <argument pos:start="155:48" pos:end="155:55"><expr pos:start="155:48" pos:end="155:55"><name pos:start="155:48" pos:end="155:55"><name pos:start="155:48" pos:end="155:52">block</name><index pos:start="155:53" pos:end="155:55">[<expr pos:start="155:54" pos:end="155:54"><name pos:start="155:54" pos:end="155:54">j</name></expr>]</index></name></expr></argument>, <argument pos:start="155:58" pos:end="155:62"><expr pos:start="155:58" pos:end="155:62"><name pos:start="155:58" pos:end="155:62">qmat1</name></expr></argument>, <argument pos:start="155:65" pos:end="155:71"><expr pos:start="155:65" pos:end="155:71"><name pos:start="155:65" pos:end="155:71"><name pos:start="155:65" pos:end="155:68">qmat</name><index pos:start="155:69" pos:end="155:71">[<expr pos:start="155:70" pos:end="155:70"><name pos:start="155:70" pos:end="155:70">j</name></expr>]</index></name></expr></argument>,

                        <argument pos:start="157:25" pos:end="157:27"><expr pos:start="157:25" pos:end="157:27"><name pos:start="157:25" pos:end="157:27">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:24"><expr pos:start="159:17" pos:end="159:23"><name pos:start="159:17" pos:end="159:21">count</name><operator pos:start="159:22" pos:end="159:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



        </block_content>}</block>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="169:9" pos:end="175:10">/* XXX: slight error for the low range. Test should be equivalent to

           (level &lt;= -(1 &lt;&lt; (QMAT_SHIFT - 3)) || level &gt;= (1 &lt;&lt;

           (QMAT_SHIFT - 3)))

        */</comment>

        <if_stmt pos:start="177:9" pos:end="213:9"><if pos:start="177:9" pos:end="209:9">if <condition pos:start="177:12" pos:end="179:18">(<expr pos:start="177:13" pos:end="179:17"><operator pos:start="177:13" pos:end="177:13">(</operator><operator pos:start="177:14" pos:end="177:14">(</operator><name pos:start="177:15" pos:end="177:19">level</name> <operator pos:start="177:21" pos:end="177:22">&lt;&lt;</operator> <operator pos:start="177:24" pos:end="177:24">(</operator><literal type="number" pos:start="177:25" pos:end="177:28">31</literal> <operator pos:start="177:28" pos:end="177:28">-</operator> <operator pos:start="177:30" pos:end="177:30">(</operator><name pos:start="177:31" pos:end="177:40">QMAT_SHIFT</name> <operator pos:start="177:42" pos:end="177:42">-</operator> <literal type="number" pos:start="177:44" pos:end="177:44">3</literal><operator pos:start="177:45" pos:end="177:45">)</operator><operator pos:start="177:46" pos:end="177:46">)</operator><operator pos:start="177:47" pos:end="177:47">)</operator> <operator pos:start="177:49" pos:end="177:50">&gt;&gt;</operator> <operator pos:start="177:52" pos:end="177:52">(</operator><literal type="number" pos:start="177:53" pos:end="177:56">31</literal> <operator pos:start="177:56" pos:end="177:56">-</operator> <operator pos:start="177:58" pos:end="177:58">(</operator><name pos:start="177:59" pos:end="177:68">QMAT_SHIFT</name> <operator pos:start="177:70" pos:end="177:70">-</operator> <literal type="number" pos:start="177:72" pos:end="177:72">3</literal><operator pos:start="177:73" pos:end="177:73">)</operator><operator pos:start="177:74" pos:end="177:74">)</operator><operator pos:start="177:75" pos:end="177:75">)</operator> <operator pos:start="177:77" pos:end="177:78">!=</operator> 

            <name pos:start="179:13" pos:end="179:17">level</name></expr>)</condition> <block pos:start="179:20" pos:end="209:9">{<block_content pos:start="181:13" pos:end="207:30">

            <expr_stmt pos:start="181:13" pos:end="181:52"><expr pos:start="181:13" pos:end="181:51"><name pos:start="181:13" pos:end="181:17">level</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:25">level</name> <operator pos:start="181:27" pos:end="181:27">/</operator> <operator pos:start="181:29" pos:end="181:29">(</operator><literal type="number" pos:start="181:30" pos:end="181:30">1</literal> <operator pos:start="181:32" pos:end="181:33">&lt;&lt;</operator> <operator pos:start="181:35" pos:end="181:35">(</operator><name pos:start="181:36" pos:end="181:45">QMAT_SHIFT</name> <operator pos:start="181:47" pos:end="181:47">-</operator> <literal type="number" pos:start="181:49" pos:end="181:49">3</literal><operator pos:start="181:50" pos:end="181:50">)</operator><operator pos:start="181:51" pos:end="181:51">)</operator></expr>;</expr_stmt>

            <comment type="block" pos:start="183:13" pos:end="193:14">/* XXX: currently, this code is not optimal. the range should be:

               mpeg1: -255..255

               mpeg2: -2048..2047

               h263:  -128..127

               mpeg4: -2048..2047

            */</comment>

            <if_stmt pos:start="195:13" pos:end="201:33"><if pos:start="195:13" pos:end="197:33">if <condition pos:start="195:16" pos:end="195:33">(<expr pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:21">level</name> <operator pos:start="195:23" pos:end="195:23">&gt;</operator> <name pos:start="195:25" pos:end="195:32">maxLevel</name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:33"><block_content pos:start="197:17" pos:end="197:33">

                <expr_stmt pos:start="197:17" pos:end="197:33"><expr pos:start="197:17" pos:end="197:32"><name pos:start="197:17" pos:end="197:21">level</name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:32">maxLevel</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="199:13" pos:end="201:33">else if <condition pos:start="199:21" pos:end="199:38">(<expr pos:start="199:22" pos:end="199:37"><name pos:start="199:22" pos:end="199:26">level</name> <operator pos:start="199:28" pos:end="199:28">&lt;</operator> <name pos:start="199:30" pos:end="199:37">minLevel</name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:33"><block_content pos:start="201:17" pos:end="201:33">

                <expr_stmt pos:start="201:17" pos:end="201:33"><expr pos:start="201:17" pos:end="201:32"><name pos:start="201:17" pos:end="201:21">level</name> <operator pos:start="201:23" pos:end="201:23">=</operator> <name pos:start="201:25" pos:end="201:32">minLevel</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="205:13" pos:end="205:29"><expr pos:start="205:13" pos:end="205:28"><name pos:start="205:13" pos:end="205:20"><name pos:start="205:13" pos:end="205:17">block</name><index pos:start="205:18" pos:end="205:20">[<expr pos:start="205:19" pos:end="205:19"><name pos:start="205:19" pos:end="205:19">j</name></expr>]</index></name> <operator pos:start="205:22" pos:end="205:22">=</operator> <name pos:start="205:24" pos:end="205:28">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:30"><expr pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:25">last_non_zero</name> <operator pos:start="207:27" pos:end="207:27">=</operator> <name pos:start="207:29" pos:end="207:29">i</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="209:11" pos:end="213:9">else <block pos:start="209:16" pos:end="213:9">{<block_content pos:start="211:13" pos:end="211:25">

            <expr_stmt pos:start="211:13" pos:end="211:25"><expr pos:start="211:13" pos:end="211:24"><name pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:17">block</name><index pos:start="211:18" pos:end="211:20">[<expr pos:start="211:19" pos:end="211:19"><name pos:start="211:19" pos:end="211:19">j</name></expr>]</index></name> <operator pos:start="211:22" pos:end="211:22">=</operator> <literal type="number" pos:start="211:24" pos:end="211:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="217:5" pos:end="217:25">return <expr pos:start="217:12" pos:end="217:24"><name pos:start="217:12" pos:end="217:24">last_non_zero</name></expr>;</return>

</block_content>}</block></function>
</unit>
