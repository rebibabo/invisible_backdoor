<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1515.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_esds</name><parameter_list pos:start="1:25" pos:end="1:75">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:74"><decl pos:start="1:60" pos:end="1:74"><type pos:start="1:60" pos:end="1:74"><name pos:start="1:60" pos:end="1:69">MOV_atom_t</name></type> <name pos:start="1:71" pos:end="1:74">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:13">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name> <init pos:start="5:18" pos:end="5:54">= <expr pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:54"><name pos:start="5:20" pos:end="5:20">c</name><operator pos:start="5:21" pos:end="5:22">-&gt;</operator><name pos:start="5:23" pos:end="5:24">fc</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:33">streams</name><index pos:start="5:34" pos:end="5:54">[<expr pos:start="5:35" pos:end="5:53"><name pos:start="5:35" pos:end="5:51"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">fc</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:51">nb_streams</name></name><operator pos:start="5:52" pos:end="5:52">-</operator><literal type="number" pos:start="5:53" pos:end="5:53">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">tag</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">get_be32</name><argument_list pos:start="11:13" pos:end="11:16">(<argument pos:start="11:14" pos:end="11:15"><expr pos:start="11:14" pos:end="11:15"><name pos:start="11:14" pos:end="11:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:19" pos:end="11:39">/* version + flags */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:7">len</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:37"><name pos:start="13:11" pos:end="13:24">mp4_read_descr</name><argument_list pos:start="13:25" pos:end="13:37">(<argument pos:start="13:26" pos:end="13:26"><expr pos:start="13:26" pos:end="13:26"><name pos:start="13:26" pos:end="13:26">c</name></expr></argument>, <argument pos:start="13:29" pos:end="13:30"><expr pos:start="13:29" pos:end="13:30"><name pos:start="13:29" pos:end="13:30">pb</name></expr></argument>, <argument pos:start="13:33" pos:end="13:36"><expr pos:start="13:33" pos:end="13:36"><operator pos:start="13:33" pos:end="13:33">&amp;</operator><name pos:start="13:34" pos:end="13:36">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="23:21"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:29">(<expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">tag</name> <operator pos:start="15:13" pos:end="15:14">==</operator> <name pos:start="15:16" pos:end="15:28">MP4ESDescrTag</name></expr>)</condition> <block pos:start="15:31" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:21">

        <expr_stmt pos:start="17:9" pos:end="17:21"><expr pos:start="17:9" pos:end="17:20"><call pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:16">get_be16</name><argument_list pos:start="17:17" pos:end="17:20">(<argument pos:start="17:18" pos:end="17:19"><expr pos:start="17:18" pos:end="17:19"><name pos:start="17:18" pos:end="17:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:23" pos:end="17:30">/* ID */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:21"><expr pos:start="19:9" pos:end="19:20"><call pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:16">get_byte</name><argument_list pos:start="19:17" pos:end="19:20">(<argument pos:start="19:18" pos:end="19:19"><expr pos:start="19:18" pos:end="19:19"><name pos:start="19:18" pos:end="19:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:23" pos:end="19:36">/* priority */</comment>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="23:21">else<block type="pseudo" pos:start="23:9" pos:end="23:21"><block_content pos:start="23:9" pos:end="23:21">

        <expr_stmt pos:start="23:9" pos:end="23:21"><expr pos:start="23:9" pos:end="23:20"><call pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:16">get_be16</name><argument_list pos:start="23:17" pos:end="23:20">(<argument pos:start="23:18" pos:end="23:19"><expr pos:start="23:18" pos:end="23:19"><name pos:start="23:18" pos:end="23:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="23:23" pos:end="23:30">/* ID */</comment>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:7">len</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:37"><name pos:start="27:11" pos:end="27:24">mp4_read_descr</name><argument_list pos:start="27:25" pos:end="27:37">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">c</name></expr></argument>, <argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">pb</name></expr></argument>, <argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><operator pos:start="27:33" pos:end="27:33">&amp;</operator><name pos:start="27:34" pos:end="27:36">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="75:5"><if pos:start="29:5" pos:end="75:5">if <condition pos:start="29:8" pos:end="29:36">(<expr pos:start="29:9" pos:end="29:35"><name pos:start="29:9" pos:end="29:11">tag</name> <operator pos:start="29:13" pos:end="29:14">==</operator> <name pos:start="29:16" pos:end="29:35">MP4DecConfigDescrTag</name></expr>)</condition> <block pos:start="29:38" pos:end="75:5">{<block_content pos:start="31:9" pos:end="73:9">

        <decl_stmt pos:start="31:9" pos:end="31:42"><decl pos:start="31:9" pos:end="31:41"><type pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">int</name></type> <name pos:start="31:13" pos:end="31:26">object_type_id</name> <init pos:start="31:28" pos:end="31:41">= <expr pos:start="31:30" pos:end="31:41"><call pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:37">get_byte</name><argument_list pos:start="31:38" pos:end="31:41">(<argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:21"><expr pos:start="33:9" pos:end="33:20"><call pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:16">get_byte</name><argument_list pos:start="33:17" pos:end="33:20">(<argument pos:start="33:18" pos:end="33:19"><expr pos:start="33:18" pos:end="33:19"><name pos:start="33:18" pos:end="33:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:23" pos:end="33:39">/* stream type */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:21"><expr pos:start="35:9" pos:end="35:20"><call pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:16">get_be24</name><argument_list pos:start="35:17" pos:end="35:20">(<argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:23" pos:end="35:42">/* buffer size db */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><call pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:16">get_be32</name><argument_list pos:start="37:17" pos:end="37:20">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><name pos:start="37:18" pos:end="37:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:23" pos:end="37:39">/* max bitrate */</comment>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:16">get_be32</name><argument_list pos:start="39:17" pos:end="39:20">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:23" pos:end="39:39">/* avg bitrate */</comment>



        <expr_stmt pos:start="43:9" pos:end="43:75"><expr pos:start="43:9" pos:end="43:74"><name pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:10">st</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:17">codec</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:27">codec_id</name></name><operator pos:start="43:28" pos:end="43:28">=</operator> <call pos:start="43:30" pos:end="43:74"><name pos:start="43:30" pos:end="43:41">codec_get_id</name><argument_list pos:start="43:42" pos:end="43:74">(<argument pos:start="43:43" pos:end="43:57"><expr pos:start="43:43" pos:end="43:57"><name pos:start="43:43" pos:end="43:57">ff_mp4_obj_type</name></expr></argument>, <argument pos:start="43:60" pos:end="43:73"><expr pos:start="43:60" pos:end="43:73"><name pos:start="43:60" pos:end="43:73">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:67"><expr pos:start="45:9" pos:end="45:66"><call pos:start="45:9" pos:end="45:66"><name pos:start="45:9" pos:end="45:15">dprintf</name><argument_list pos:start="45:16" pos:end="45:66">(<argument pos:start="45:17" pos:end="45:21"><expr pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:21"><name pos:start="45:17" pos:end="45:17">c</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:21">fc</name></name></expr></argument>, <argument pos:start="45:24" pos:end="45:49"><expr pos:start="45:24" pos:end="45:49"><literal type="string" pos:start="45:24" pos:end="45:49">"esds object type id %d\n"</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:65"><expr pos:start="45:52" pos:end="45:65"><name pos:start="45:52" pos:end="45:65">object_type_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:42"><expr pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:11">len</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:41"><name pos:start="47:15" pos:end="47:28">mp4_read_descr</name><argument_list pos:start="47:29" pos:end="47:41">(<argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">c</name></expr></argument>, <argument pos:start="47:33" pos:end="47:34"><expr pos:start="47:33" pos:end="47:34"><name pos:start="47:33" pos:end="47:34">pb</name></expr></argument>, <argument pos:start="47:37" pos:end="47:40"><expr pos:start="47:37" pos:end="47:40"><operator pos:start="47:37" pos:end="47:37">&amp;</operator><name pos:start="47:38" pos:end="47:40">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="73:9"><if pos:start="49:9" pos:end="73:9">if <condition pos:start="49:12" pos:end="49:42">(<expr pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:15">tag</name> <operator pos:start="49:17" pos:end="49:18">==</operator> <name pos:start="49:20" pos:end="49:41">MP4DecSpecificDescrTag</name></expr>)</condition> <block pos:start="49:44" pos:end="73:9">{<block_content pos:start="51:13" pos:end="71:13">

            <expr_stmt pos:start="51:13" pos:end="51:66"><expr pos:start="51:13" pos:end="51:65"><call pos:start="51:13" pos:end="51:65"><name pos:start="51:13" pos:end="51:19">dprintf</name><argument_list pos:start="51:20" pos:end="51:65">(<argument pos:start="51:21" pos:end="51:25"><expr pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:25"><name pos:start="51:21" pos:end="51:21">c</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:25">fc</name></name></expr></argument>, <argument pos:start="51:28" pos:end="51:59"><expr pos:start="51:28" pos:end="51:59"><literal type="string" pos:start="51:28" pos:end="51:59">"Specific MPEG4 header len=%d\n"</literal></expr></argument>, <argument pos:start="51:62" pos:end="51:64"><expr pos:start="51:62" pos:end="51:64"><name pos:start="51:62" pos:end="51:64">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="55:82"><expr pos:start="55:13" pos:end="55:81"><name pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:14">st</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:21">codec</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:32">extradata</name></name> <operator pos:start="55:34" pos:end="55:34">=</operator> <call pos:start="55:36" pos:end="55:81"><name pos:start="55:36" pos:end="55:45">av_mallocz</name><argument_list pos:start="55:46" pos:end="55:81">(<argument pos:start="55:47" pos:end="55:80"><expr pos:start="55:47" pos:end="55:80"><name pos:start="55:47" pos:end="55:49">len</name> <operator pos:start="55:51" pos:end="55:51">+</operator> <name pos:start="55:53" pos:end="55:80">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:39"><if pos:start="57:13" pos:end="59:39">if <condition pos:start="57:16" pos:end="57:38">(<expr pos:start="57:17" pos:end="57:37"><operator pos:start="57:17" pos:end="57:17">!</operator><name pos:start="57:18" pos:end="57:37"><name pos:start="57:18" pos:end="57:19">st</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:26">codec</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:37">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:39"><block_content pos:start="59:17" pos:end="59:39">

                <return pos:start="59:17" pos:end="59:39">return <expr pos:start="59:24" pos:end="59:38"><call pos:start="59:24" pos:end="59:38"><name pos:start="59:24" pos:end="59:30">AVERROR</name><argument_list pos:start="59:31" pos:end="59:38">(<argument pos:start="59:32" pos:end="59:37"><expr pos:start="59:32" pos:end="59:37"><name pos:start="59:32" pos:end="59:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:54"><expr pos:start="61:13" pos:end="61:53"><call pos:start="61:13" pos:end="61:53"><name pos:start="61:13" pos:end="61:22">get_buffer</name><argument_list pos:start="61:23" pos:end="61:53">(<argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><name pos:start="61:24" pos:end="61:25">pb</name></expr></argument>, <argument pos:start="61:28" pos:end="61:47"><expr pos:start="61:28" pos:end="61:47"><name pos:start="61:28" pos:end="61:47"><name pos:start="61:28" pos:end="61:29">st</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:36">codec</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:47">extradata</name></name></expr></argument>, <argument pos:start="61:50" pos:end="61:52"><expr pos:start="61:50" pos:end="61:52"><name pos:start="61:50" pos:end="61:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:37"><name pos:start="63:13" pos:end="63:14">st</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">codec</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:37">extradata_size</name></name> <operator pos:start="63:39" pos:end="63:39">=</operator> <name pos:start="63:41" pos:end="63:43">len</name></expr>;</expr_stmt>

            <comment type="block" pos:start="65:13" pos:end="65:30">/* from mplayer */</comment>

            <if_stmt pos:start="67:13" pos:end="71:13"><if pos:start="67:13" pos:end="71:13">if <condition pos:start="67:16" pos:end="67:51">(<expr pos:start="67:17" pos:end="67:50"><operator pos:start="67:17" pos:end="67:17">(</operator><operator pos:start="67:18" pos:end="67:18">*</operator><name pos:start="67:19" pos:end="67:38"><name pos:start="67:19" pos:end="67:20">st</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:27">codec</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:38">extradata</name></name> <operator pos:start="67:40" pos:end="67:41">&gt;&gt;</operator> <literal type="number" pos:start="67:43" pos:end="67:43">3</literal><operator pos:start="67:44" pos:end="67:44">)</operator> <operator pos:start="67:46" pos:end="67:47">==</operator> <literal type="number" pos:start="67:49" pos:end="67:50">29</literal></expr>)</condition> <block pos:start="67:53" pos:end="71:13">{<block_content pos:start="69:17" pos:end="69:54">

                <expr_stmt pos:start="69:17" pos:end="69:54"><expr pos:start="69:17" pos:end="69:53"><name pos:start="69:17" pos:end="69:35"><name pos:start="69:17" pos:end="69:18">st</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:25">codec</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:35">codec_id</name></name> <operator pos:start="69:37" pos:end="69:37">=</operator> <name pos:start="69:39" pos:end="69:53">CODEC_ID_MP3ON4</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
