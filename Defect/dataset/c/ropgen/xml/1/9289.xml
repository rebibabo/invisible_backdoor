<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9289.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_hdlr</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:64">MOVAtom</name></type> <name pos:start="1:66" pos:end="1:69">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="103:1">{<block_content pos:start="5:5" pos:end="101:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <name pos:start="9:14" pos:end="9:22">av_unused</name></type> <name pos:start="9:24" pos:end="9:28">ctype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:22">title_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:19">title_str</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:30">(<expr pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:13">fc</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:25">nb_streams</name></name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17"> <comment type="line" pos:start="17:32" pos:end="17:56">// meta before first trak</comment>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:6">st</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:44"><name pos:start="23:10" pos:end="23:10">c</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:14">fc</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:23">streams</name><index pos:start="23:24" pos:end="23:44">[<expr pos:start="23:25" pos:end="23:43"><name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:25">c</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:29">fc</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:41">nb_streams</name></name><operator pos:start="23:42" pos:end="23:42">-</operator><literal type="number" pos:start="23:43" pos:end="23:43">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><call pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:11">avio_r8</name><argument_list pos:start="27:12" pos:end="27:15">(<argument pos:start="27:13" pos:end="27:14"><expr pos:start="27:13" pos:end="27:14"><name pos:start="27:13" pos:end="27:14">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:18" pos:end="27:30">/* version */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><call pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:13">avio_rb24</name><argument_list pos:start="29:14" pos:end="29:17">(<argument pos:start="29:15" pos:end="29:16"><expr pos:start="29:15" pos:end="29:16"><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:20" pos:end="29:30">/* flags */</comment>



    <comment type="block" pos:start="33:5" pos:end="33:24">/* component type */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:9">ctype</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <call pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:21">avio_rl32</name><argument_list pos:start="35:22" pos:end="35:25">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:8">type</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:24"><name pos:start="37:12" pos:end="37:20">avio_rl32</name><argument_list pos:start="37:21" pos:end="37:24">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:27" pos:end="37:49">/* component subtype */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:80"><expr pos:start="41:5" pos:end="41:79"><call pos:start="41:5" pos:end="41:79"><name pos:start="41:5" pos:end="41:10">av_log</name><argument_list pos:start="41:11" pos:end="41:79">(<argument pos:start="41:12" pos:end="41:16"><expr pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:16"><name pos:start="41:12" pos:end="41:12">c</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:16">fc</name></name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="41:33" pos:end="41:56"><expr pos:start="41:33" pos:end="41:56"><literal type="string" pos:start="41:33" pos:end="41:56">"ctype= %.4s (0x%08x)\n"</literal></expr></argument>, <argument pos:start="41:59" pos:end="41:71"><expr pos:start="41:59" pos:end="41:71"><operator pos:start="41:59" pos:end="41:59">(</operator><name pos:start="41:60" pos:end="41:63">char</name><operator pos:start="41:64" pos:end="41:64">*</operator><operator pos:start="41:65" pos:end="41:65">)</operator><operator pos:start="41:66" pos:end="41:66">&amp;</operator><name pos:start="41:67" pos:end="41:71">ctype</name></expr></argument>, <argument pos:start="41:74" pos:end="41:78"><expr pos:start="41:74" pos:end="41:78"><name pos:start="41:74" pos:end="41:78">ctype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><call pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:10">av_log</name><argument_list pos:start="43:11" pos:end="43:62">(<argument pos:start="43:12" pos:end="43:16"><expr pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:16"><name pos:start="43:12" pos:end="43:12">c</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:16">fc</name></name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:30">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="43:33" pos:end="43:47"><expr pos:start="43:33" pos:end="43:47"><literal type="string" pos:start="43:33" pos:end="43:47">"stype= %.4s\n"</literal></expr></argument>, <argument pos:start="43:50" pos:end="43:61"><expr pos:start="43:50" pos:end="43:61"><operator pos:start="43:50" pos:end="43:50">(</operator><name pos:start="43:51" pos:end="43:54">char</name><operator pos:start="43:55" pos:end="43:55">*</operator><operator pos:start="43:56" pos:end="43:56">)</operator><operator pos:start="43:57" pos:end="43:57">&amp;</operator><name pos:start="43:58" pos:end="43:61">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="61:54"><if pos:start="47:5" pos:end="49:51">if     <condition pos:start="47:12" pos:end="47:43">(<expr pos:start="47:13" pos:end="47:42"><name pos:start="47:13" pos:end="47:16">type</name> <operator pos:start="47:18" pos:end="47:19">==</operator> <call pos:start="47:21" pos:end="47:42"><name pos:start="47:21" pos:end="47:25">MKTAG</name><argument_list pos:start="47:26" pos:end="47:42">(<argument pos:start="47:27" pos:end="47:29"><expr pos:start="47:27" pos:end="47:29"><literal type="char" pos:start="47:27" pos:end="47:29">'v'</literal></expr></argument>,<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><literal type="char" pos:start="47:31" pos:end="47:33">'i'</literal></expr></argument>,<argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><literal type="char" pos:start="47:35" pos:end="47:37">'d'</literal></expr></argument>,<argument pos:start="47:39" pos:end="47:41"><expr pos:start="47:39" pos:end="47:41"><literal type="char" pos:start="47:39" pos:end="47:41">'e'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:51"><block_content pos:start="49:9" pos:end="49:51">

        <expr_stmt pos:start="49:9" pos:end="49:51"><expr pos:start="49:9" pos:end="49:50"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:10">st</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:17">codec</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:29">codec_type</name></name> <operator pos:start="49:31" pos:end="49:31">=</operator> <name pos:start="49:33" pos:end="49:50">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="51:5" pos:end="53:51">else if <condition pos:start="51:13" pos:end="51:44">(<expr pos:start="51:14" pos:end="51:43"><name pos:start="51:14" pos:end="51:17">type</name> <operator pos:start="51:19" pos:end="51:20">==</operator> <call pos:start="51:22" pos:end="51:43"><name pos:start="51:22" pos:end="51:26">MKTAG</name><argument_list pos:start="51:27" pos:end="51:43">(<argument pos:start="51:28" pos:end="51:30"><expr pos:start="51:28" pos:end="51:30"><literal type="char" pos:start="51:28" pos:end="51:30">'s'</literal></expr></argument>,<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><literal type="char" pos:start="51:32" pos:end="51:34">'o'</literal></expr></argument>,<argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><literal type="char" pos:start="51:36" pos:end="51:38">'u'</literal></expr></argument>,<argument pos:start="51:40" pos:end="51:42"><expr pos:start="51:40" pos:end="51:42"><literal type="char" pos:start="51:40" pos:end="51:42">'n'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:51"><block_content pos:start="53:9" pos:end="53:51">

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:10">st</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:17">codec</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:29">codec_type</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="55:5" pos:end="57:46">else if <condition pos:start="55:13" pos:end="55:44">(<expr pos:start="55:14" pos:end="55:43"><name pos:start="55:14" pos:end="55:17">type</name> <operator pos:start="55:19" pos:end="55:20">==</operator> <call pos:start="55:22" pos:end="55:43"><name pos:start="55:22" pos:end="55:26">MKTAG</name><argument_list pos:start="55:27" pos:end="55:43">(<argument pos:start="55:28" pos:end="55:30"><expr pos:start="55:28" pos:end="55:30"><literal type="char" pos:start="55:28" pos:end="55:30">'m'</literal></expr></argument>,<argument pos:start="55:32" pos:end="55:34"><expr pos:start="55:32" pos:end="55:34"><literal type="char" pos:start="55:32" pos:end="55:34">'1'</literal></expr></argument>,<argument pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><literal type="char" pos:start="55:36" pos:end="55:38">'a'</literal></expr></argument>,<argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><literal type="char" pos:start="55:40" pos:end="55:42">' '</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:46"><block_content pos:start="57:9" pos:end="57:46">

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:10">st</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:17">codec</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">codec_id</name></name> <operator pos:start="57:29" pos:end="57:29">=</operator> <name pos:start="57:31" pos:end="57:45">AV_CODEC_ID_MP2</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="59:5" pos:end="61:54">else if <condition pos:start="59:13" pos:end="59:82">(<expr pos:start="59:14" pos:end="59:81"><operator pos:start="59:14" pos:end="59:14">(</operator><name pos:start="59:15" pos:end="59:18">type</name> <operator pos:start="59:20" pos:end="59:21">==</operator> <call pos:start="59:23" pos:end="59:44"><name pos:start="59:23" pos:end="59:27">MKTAG</name><argument_list pos:start="59:28" pos:end="59:44">(<argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><literal type="char" pos:start="59:29" pos:end="59:31">'s'</literal></expr></argument>,<argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><literal type="char" pos:start="59:33" pos:end="59:35">'u'</literal></expr></argument>,<argument pos:start="59:37" pos:end="59:39"><expr pos:start="59:37" pos:end="59:39"><literal type="char" pos:start="59:37" pos:end="59:39">'b'</literal></expr></argument>,<argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><literal type="char" pos:start="59:41" pos:end="59:43">'p'</literal></expr></argument>)</argument_list></call><operator pos:start="59:45" pos:end="59:45">)</operator> <operator pos:start="59:47" pos:end="59:48">||</operator> <operator pos:start="59:50" pos:end="59:50">(</operator><name pos:start="59:51" pos:end="59:54">type</name> <operator pos:start="59:56" pos:end="59:57">==</operator> <call pos:start="59:59" pos:end="59:80"><name pos:start="59:59" pos:end="59:63">MKTAG</name><argument_list pos:start="59:64" pos:end="59:80">(<argument pos:start="59:65" pos:end="59:67"><expr pos:start="59:65" pos:end="59:67"><literal type="char" pos:start="59:65" pos:end="59:67">'c'</literal></expr></argument>,<argument pos:start="59:69" pos:end="59:71"><expr pos:start="59:69" pos:end="59:71"><literal type="char" pos:start="59:69" pos:end="59:71">'l'</literal></expr></argument>,<argument pos:start="59:73" pos:end="59:75"><expr pos:start="59:73" pos:end="59:75"><literal type="char" pos:start="59:73" pos:end="59:75">'c'</literal></expr></argument>,<argument pos:start="59:77" pos:end="59:79"><expr pos:start="59:77" pos:end="59:79"><literal type="char" pos:start="59:77" pos:end="59:79">'p'</literal></expr></argument>)</argument_list></call><operator pos:start="59:81" pos:end="59:81">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:54"><block_content pos:start="61:9" pos:end="61:54">

        <expr_stmt pos:start="61:9" pos:end="61:54"><expr pos:start="61:9" pos:end="61:53"><name pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:29">codec_type</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:53">AVMEDIA_TYPE_SUBTITLE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:18"><expr pos:start="65:5" pos:end="65:17"><call pos:start="65:5" pos:end="65:17"><name pos:start="65:5" pos:end="65:13">avio_rb32</name><argument_list pos:start="65:14" pos:end="65:17">(<argument pos:start="65:15" pos:end="65:16"><expr pos:start="65:15" pos:end="65:16"><name pos:start="65:15" pos:end="65:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:20" pos:end="65:47">/* component  manufacture */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><call pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:13">avio_rb32</name><argument_list pos:start="67:14" pos:end="67:17">(<argument pos:start="67:15" pos:end="67:16"><expr pos:start="67:15" pos:end="67:16"><name pos:start="67:15" pos:end="67:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:20" pos:end="67:40">/* component flags */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:18"><expr pos:start="69:5" pos:end="69:17"><call pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:13">avio_rb32</name><argument_list pos:start="69:14" pos:end="69:17">(<argument pos:start="69:15" pos:end="69:16"><expr pos:start="69:15" pos:end="69:16"><name pos:start="69:15" pos:end="69:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:20" pos:end="69:45">/* component flags mask */</comment>



    <expr_stmt pos:start="73:5" pos:end="73:32"><expr pos:start="73:5" pos:end="73:31"><name pos:start="73:5" pos:end="73:14">title_size</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <name pos:start="73:18" pos:end="73:26"><name pos:start="73:18" pos:end="73:21">atom</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:26">size</name></name> <operator pos:start="73:28" pos:end="73:28">-</operator> <literal type="number" pos:start="73:30" pos:end="73:31">24</literal></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="97:5"><if pos:start="75:5" pos:end="97:5">if <condition pos:start="75:8" pos:end="75:23">(<expr pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:18">title_size</name> <operator pos:start="75:20" pos:end="75:20">&gt;</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>)</condition> <block pos:start="75:25" pos:end="97:5">{<block_content pos:start="77:9" pos:end="95:29">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:17">title_str</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:45"><name pos:start="77:21" pos:end="77:29">av_malloc</name><argument_list pos:start="77:30" pos:end="77:45">(<argument pos:start="77:31" pos:end="77:44"><expr pos:start="77:31" pos:end="77:44"><name pos:start="77:31" pos:end="77:40">title_size</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:48" pos:end="77:72">/* Add null terminator */</comment>

        <if_stmt pos:start="79:9" pos:end="81:35"><if pos:start="79:9" pos:end="81:35">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:22">title_str</name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:35"><block_content pos:start="81:13" pos:end="81:35">

            <return pos:start="81:13" pos:end="81:35">return <expr pos:start="81:20" pos:end="81:34"><call pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:45"><expr pos:start="83:9" pos:end="83:44"><call pos:start="83:9" pos:end="83:44"><name pos:start="83:9" pos:end="83:17">avio_read</name><argument_list pos:start="83:18" pos:end="83:44">(<argument pos:start="83:19" pos:end="83:20"><expr pos:start="83:19" pos:end="83:20"><name pos:start="83:19" pos:end="83:20">pb</name></expr></argument>, <argument pos:start="83:23" pos:end="83:31"><expr pos:start="83:23" pos:end="83:31"><name pos:start="83:23" pos:end="83:31">title_str</name></expr></argument>, <argument pos:start="83:34" pos:end="83:43"><expr pos:start="83:34" pos:end="83:43"><name pos:start="83:34" pos:end="83:43">title_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:34"><expr pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:17">title_str</name><index pos:start="85:18" pos:end="85:29">[<expr pos:start="85:19" pos:end="85:28"><name pos:start="85:19" pos:end="85:28">title_size</name></expr>]</index></name> <operator pos:start="85:31" pos:end="85:31">=</operator> <literal type="number" pos:start="85:33" pos:end="85:33">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:25">(<expr pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:24"><name pos:start="87:13" pos:end="87:21">title_str</name><index pos:start="87:22" pos:end="87:24">[<expr pos:start="87:23" pos:end="87:23"><literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="87:27" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:75">

            <decl_stmt pos:start="89:13" pos:end="89:67"><decl pos:start="89:13" pos:end="89:66"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:19">off</name> <init pos:start="89:21" pos:end="89:66">= <expr pos:start="89:23" pos:end="89:66"><operator pos:start="89:23" pos:end="89:23">(</operator><operator pos:start="89:24" pos:end="89:24">!</operator><name pos:start="89:25" pos:end="89:31"><name pos:start="89:25" pos:end="89:25">c</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:31">isom</name></name> <operator pos:start="89:33" pos:end="89:34">&amp;&amp;</operator> <name pos:start="89:36" pos:end="89:47"><name pos:start="89:36" pos:end="89:44">title_str</name><index pos:start="89:45" pos:end="89:47">[<expr pos:start="89:46" pos:end="89:46"><literal type="number" pos:start="89:46" pos:end="89:46">0</literal></expr>]</index></name> <operator pos:start="89:49" pos:end="89:50">==</operator> <name pos:start="89:52" pos:end="89:61">title_size</name> <operator pos:start="89:63" pos:end="89:63">-</operator> <literal type="number" pos:start="89:65" pos:end="89:65">1</literal><operator pos:start="89:66" pos:end="89:66">)</operator></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:75"><expr pos:start="91:13" pos:end="91:74"><call pos:start="91:13" pos:end="91:74"><name pos:start="91:13" pos:end="91:23">av_dict_set</name><argument_list pos:start="91:24" pos:end="91:74">(<argument pos:start="91:25" pos:end="91:37"><expr pos:start="91:25" pos:end="91:37"><operator pos:start="91:25" pos:end="91:25">&amp;</operator><name pos:start="91:26" pos:end="91:37"><name pos:start="91:26" pos:end="91:27">st</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:37">metadata</name></name></expr></argument>, <argument pos:start="91:40" pos:end="91:53"><expr pos:start="91:40" pos:end="91:53"><literal type="string" pos:start="91:40" pos:end="91:53">"handler_name"</literal></expr></argument>, <argument pos:start="91:56" pos:end="91:70"><expr pos:start="91:56" pos:end="91:70"><name pos:start="91:56" pos:end="91:64">title_str</name> <operator pos:start="91:66" pos:end="91:66">+</operator> <name pos:start="91:68" pos:end="91:70">off</name></expr></argument>, <argument pos:start="91:73" pos:end="91:73"><expr pos:start="91:73" pos:end="91:73"><literal type="number" pos:start="91:73" pos:end="91:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:16">av_freep</name><argument_list pos:start="95:17" pos:end="95:28">(<argument pos:start="95:18" pos:end="95:27"><expr pos:start="95:18" pos:end="95:27"><operator pos:start="95:18" pos:end="95:18">&amp;</operator><name pos:start="95:19" pos:end="95:27">title_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="101:5" pos:end="101:13">return <expr pos:start="101:12" pos:end="101:12"><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
