<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18633.c" pos:tabs="8"><function pos:start="1:1" pos:end="308:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">mptsas_process_scsi_task_mgmt</name><parameter_list pos:start="1:42" pos:end="1:82">(<parameter pos:start="1:43" pos:end="1:56"><decl pos:start="1:43" pos:end="1:56"><type pos:start="1:43" pos:end="1:56"><name pos:start="1:43" pos:end="1:53">MPTSASState</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:56">s</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:81"><decl pos:start="1:59" pos:end="1:81"><type pos:start="1:59" pos:end="1:81"><name pos:start="1:59" pos:end="1:76">MPIMsgSCSITaskMgmt</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:81">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="308:1">{<block_content pos:start="5:5" pos:end="306:52">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:27">MPIMsgSCSITaskMgmtReply</name></type> <name pos:start="5:29" pos:end="5:33">reply</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:29"><name pos:start="7:5" pos:end="7:27">MPIMsgSCSITaskMgmtReply</name> <modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:40">reply_async</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">status</name></decl>, <decl pos:start="9:17" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:21">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">SCSIDevice</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">sdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">SCSIRequest</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">r</name></decl>, <decl pos:start="13:21" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:17"><modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:25">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">BusChild</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">kid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:40">mptsas_fix_scsi_task_mgmt_endianness</name><argument_list pos:start="19:41" pos:end="19:45">(<argument pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:44">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="23:22" pos:end="23:61">(<argument pos:start="23:23" pos:end="23:60"><expr pos:start="23:23" pos:end="23:60"><name pos:start="23:23" pos:end="23:45">MPTSAS_MAX_REQUEST_SIZE</name> <operator pos:start="23:47" pos:end="23:47">&lt;</operator> <sizeof pos:start="23:49" pos:end="23:60">sizeof<argument_list pos:start="23:55" pos:end="23:60">(<argument pos:start="23:56" pos:end="23:59"><expr pos:start="23:56" pos:end="23:59"><operator pos:start="23:56" pos:end="23:56">*</operator><name pos:start="23:57" pos:end="23:59">req</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="25:22" pos:end="25:61">(<argument pos:start="25:23" pos:end="25:60"><expr pos:start="25:23" pos:end="25:60"><sizeof pos:start="25:23" pos:end="25:45">sizeof<argument_list pos:start="25:29" pos:end="25:45">(<argument pos:start="25:30" pos:end="25:44"><expr pos:start="25:30" pos:end="25:44"><name pos:start="25:30" pos:end="25:44"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:44">doorbell_msg</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:47" pos:end="25:47">&lt;</operator> <sizeof pos:start="25:49" pos:end="25:60">sizeof<argument_list pos:start="25:55" pos:end="25:60">(<argument pos:start="25:56" pos:end="25:59"><expr pos:start="25:56" pos:end="25:59"><operator pos:start="25:56" pos:end="25:56">*</operator><name pos:start="25:57" pos:end="25:59">req</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:65"><expr pos:start="27:5" pos:end="27:64"><call pos:start="27:5" pos:end="27:64"><name pos:start="27:5" pos:end="27:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="27:22" pos:end="27:64">(<argument pos:start="27:23" pos:end="27:63"><expr pos:start="27:23" pos:end="27:63"><sizeof pos:start="27:23" pos:end="27:47">sizeof<argument_list pos:start="27:29" pos:end="27:47">(<argument pos:start="27:30" pos:end="27:46"><expr pos:start="27:30" pos:end="27:46"><name pos:start="27:30" pos:end="27:46"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:46">doorbell_reply</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:49" pos:end="27:49">&lt;</operator> <sizeof pos:start="27:51" pos:end="27:63">sizeof<argument_list pos:start="27:57" pos:end="27:63">(<argument pos:start="27:58" pos:end="27:62"><expr pos:start="27:58" pos:end="27:62"><name pos:start="27:58" pos:end="27:62">reply</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:36">(<argument pos:start="31:12" pos:end="31:17"><expr pos:start="31:12" pos:end="31:17"><operator pos:start="31:12" pos:end="31:12">&amp;</operator><name pos:start="31:13" pos:end="31:17">reply</name></expr></argument>, <argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr></argument>, <argument pos:start="31:23" pos:end="31:35"><expr pos:start="31:23" pos:end="31:35"><sizeof pos:start="31:23" pos:end="31:35">sizeof<argument_list pos:start="31:29" pos:end="31:35">(<argument pos:start="31:30" pos:end="31:34"><expr pos:start="31:30" pos:end="31:34"><name pos:start="31:30" pos:end="31:34">reply</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:37"><expr pos:start="33:5" pos:end="33:36"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:9">reply</name><operator pos:start="33:10" pos:end="33:10">.</operator><name pos:start="33:11" pos:end="33:18">TargetID</name></name>   <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:36"><name pos:start="33:24" pos:end="33:26">req</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:36">TargetID</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:32"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:9">reply</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:13">Bus</name></name>        <operator pos:start="35:22" pos:end="35:22">=</operator> <name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:26">req</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:31">Bus</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:9">reply</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:19">MsgLength</name></name>  <operator pos:start="37:22" pos:end="37:22">=</operator> <sizeof pos:start="37:24" pos:end="37:36">sizeof<argument_list pos:start="37:30" pos:end="37:36">(<argument pos:start="37:31" pos:end="37:35"><expr pos:start="37:31" pos:end="37:35"><name pos:start="37:31" pos:end="37:35">reply</name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:38" pos:end="37:38">/</operator> <literal type="number" pos:start="37:40" pos:end="37:40">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:9">reply</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:18">Function</name></name>   <operator pos:start="39:22" pos:end="39:22">=</operator> <name pos:start="39:24" pos:end="39:36"><name pos:start="39:24" pos:end="39:26">req</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">Function</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:37"><expr pos:start="41:5" pos:end="41:36"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:9">reply</name><operator pos:start="41:10" pos:end="41:10">.</operator><name pos:start="41:11" pos:end="41:18">TaskType</name></name>   <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:36"><name pos:start="41:24" pos:end="41:26">req</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:36">TaskType</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:20"><name pos:start="43:5" pos:end="43:9">reply</name><operator pos:start="43:10" pos:end="43:10">.</operator><name pos:start="43:11" pos:end="43:20">MsgContext</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <name pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:26">req</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:38">MsgContext</name></name></expr>;</expr_stmt>



    <switch pos:start="47:5" pos:end="298:5">switch <condition pos:start="47:12" pos:end="47:26">(<expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:15">req</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:25">TaskType</name></name></expr>)</condition> <block pos:start="47:28" pos:end="298:5">{<block_content pos:start="49:5" pos:end="296:14">

    <case pos:start="49:5" pos:end="49:46">case <expr pos:start="49:10" pos:end="49:45"><name pos:start="49:10" pos:end="49:45">MPI_SCSITASKMGMT_TASKTYPE_ABORT_TASK</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:46">case <expr pos:start="51:10" pos:end="51:45"><name pos:start="51:10" pos:end="51:45">MPI_SCSITASKMGMT_TASKTYPE_QUERY_TASK</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="55:58"><expr pos:start="53:9" pos:end="55:57"><name pos:start="53:9" pos:end="53:14">status</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <call pos:start="53:18" pos:end="55:57"><name pos:start="53:18" pos:end="53:40">mptsas_scsi_device_find</name><argument_list pos:start="53:41" pos:end="55:57">(<argument pos:start="53:42" pos:end="53:42"><expr pos:start="53:42" pos:end="53:42"><name pos:start="53:42" pos:end="53:42">s</name></expr></argument>, <argument pos:start="53:45" pos:end="53:52"><expr pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:52"><name pos:start="53:45" pos:end="53:47">req</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:52">Bus</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:67"><expr pos:start="53:55" pos:end="53:67"><name pos:start="53:55" pos:end="53:67"><name pos:start="53:55" pos:end="53:57">req</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:67">TargetID</name></name></expr></argument>,

                                         <argument pos:start="55:42" pos:end="55:49"><expr pos:start="55:42" pos:end="55:49"><name pos:start="55:42" pos:end="55:49"><name pos:start="55:42" pos:end="55:44">req</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:49">LUN</name></name></expr></argument>, <argument pos:start="55:52" pos:end="55:56"><expr pos:start="55:52" pos:end="55:56"><operator pos:start="55:52" pos:end="55:52">&amp;</operator><name pos:start="55:53" pos:end="55:56">sdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:19">(<expr pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:18">status</name></expr>)</condition> <block pos:start="57:21" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:21">

            <expr_stmt pos:start="59:13" pos:end="59:37"><expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:17">reply</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:27">IOCStatus</name></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:36">status</name></expr>;</expr_stmt>

            <goto pos:start="61:13" pos:end="61:21">goto <name pos:start="61:18" pos:end="61:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:37">(<expr pos:start="65:13" pos:end="65:36"><name pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:16">sdev</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:21">lun</name></name> <operator pos:start="65:23" pos:end="65:24">!=</operator> <name pos:start="65:26" pos:end="65:36"><name pos:start="65:26" pos:end="65:28">req</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:33">LUN</name><index pos:start="65:34" pos:end="65:36">[<expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="65:39" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:21">

            <expr_stmt pos:start="67:13" pos:end="67:69"><expr pos:start="67:13" pos:end="67:68"><name pos:start="67:13" pos:end="67:30"><name pos:start="67:13" pos:end="67:17">reply</name><operator pos:start="67:18" pos:end="67:18">.</operator><name pos:start="67:19" pos:end="67:30">ResponseCode</name></name> <operator pos:start="67:32" pos:end="67:32">=</operator> <name pos:start="67:34" pos:end="67:68">MPI_SCSITASKMGMT_RSP_TM_INVALID_LUN</name></expr>;</expr_stmt>

            <goto pos:start="69:13" pos:end="69:21">goto <name pos:start="69:18" pos:end="69:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <macro pos:start="75:9" pos:end="75:59"><name pos:start="75:9" pos:end="75:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="75:28" pos:end="75:59">(<argument pos:start="75:29" pos:end="75:29">r</argument>, <argument pos:start="75:32" pos:end="75:46">&amp;sdev-&gt;requests</argument>, <argument pos:start="75:49" pos:end="75:52">next</argument>, <argument pos:start="75:55" pos:end="75:58">next</argument>)</argument_list></macro> <block pos:start="75:61" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:13">

            <decl_stmt pos:start="77:13" pos:end="77:52"><decl pos:start="77:13" pos:end="77:51"><type pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:25">MPTSASRequest</name> <modifier pos:start="77:27" pos:end="77:27">*</modifier></type><name pos:start="77:28" pos:end="77:34">cmd_req</name> <init pos:start="77:36" pos:end="77:51">= <expr pos:start="77:38" pos:end="77:51"><name pos:start="77:38" pos:end="77:51"><name pos:start="77:38" pos:end="77:38">r</name><operator pos:start="77:39" pos:end="77:40">-&gt;</operator><name pos:start="77:41" pos:end="77:51">hba_private</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="79:13" pos:end="83:13"><if pos:start="79:13" pos:end="83:13">if <condition pos:start="79:16" pos:end="79:78">(<expr pos:start="79:17" pos:end="79:77"><name pos:start="79:17" pos:end="79:23">cmd_req</name> <operator pos:start="79:25" pos:end="79:26">&amp;&amp;</operator> <name pos:start="79:28" pos:end="79:54"><name pos:start="79:28" pos:end="79:34">cmd_req</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:43">scsi_io</name><operator pos:start="79:44" pos:end="79:44">.</operator><name pos:start="79:45" pos:end="79:54">MsgContext</name></name> <operator pos:start="79:56" pos:end="79:57">==</operator> <name pos:start="79:59" pos:end="79:77"><name pos:start="79:59" pos:end="79:61">req</name><operator pos:start="79:62" pos:end="79:63">-&gt;</operator><name pos:start="79:64" pos:end="79:77">TaskMsgContext</name></name></expr>)</condition> <block pos:start="79:80" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:22">

                <break pos:start="81:17" pos:end="81:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="87:9" pos:end="137:9"><if pos:start="87:9" pos:end="137:9">if <condition pos:start="87:12" pos:end="87:14">(<expr pos:start="87:13" pos:end="87:13"><name pos:start="87:13" pos:end="87:13">r</name></expr>)</condition> <block pos:start="87:16" pos:end="137:9">{<block_content pos:start="97:13" pos:end="135:13">

            <comment type="block" pos:start="89:13" pos:end="95:15">/*

             * Assert that the request has not been completed yet, we

             * check for it in the loop above.

             */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:35"><expr pos:start="97:13" pos:end="97:34"><call pos:start="97:13" pos:end="97:34"><name pos:start="97:13" pos:end="97:18">assert</name><argument_list pos:start="97:19" pos:end="97:34">(<argument pos:start="97:20" pos:end="97:33"><expr pos:start="97:20" pos:end="97:33"><name pos:start="97:20" pos:end="97:33"><name pos:start="97:20" pos:end="97:20">r</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:33">hba_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="135:13"><if pos:start="99:13" pos:end="109:13">if <condition pos:start="99:16" pos:end="99:70">(<expr pos:start="99:17" pos:end="99:69"><name pos:start="99:17" pos:end="99:29"><name pos:start="99:17" pos:end="99:19">req</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:29">TaskType</name></name> <operator pos:start="99:31" pos:end="99:32">==</operator> <name pos:start="99:34" pos:end="99:69">MPI_SCSITASKMGMT_TASKTYPE_QUERY_TASK</name></expr>)</condition> <block pos:start="99:72" pos:end="109:13">{<block_content pos:start="107:17" pos:end="107:71">

                <comment type="block" pos:start="101:17" pos:end="105:19">/* "If the specified command is present in the task set, then

                 * return a service response set to FUNCTION SUCCEEDED".

                 */</comment>

                <expr_stmt pos:start="107:17" pos:end="107:71"><expr pos:start="107:17" pos:end="107:70"><name pos:start="107:17" pos:end="107:34"><name pos:start="107:17" pos:end="107:21">reply</name><operator pos:start="107:22" pos:end="107:22">.</operator><name pos:start="107:23" pos:end="107:34">ResponseCode</name></name> <operator pos:start="107:36" pos:end="107:36">=</operator> <name pos:start="107:38" pos:end="107:70">MPI_SCSITASKMGMT_RSP_TM_SUCCEEDED</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="109:15" pos:end="135:13">else <block pos:start="109:20" pos:end="135:13">{<block_content pos:start="111:17" pos:end="133:39">

                <decl_stmt pos:start="111:17" pos:end="111:47"><decl pos:start="111:17" pos:end="111:46"><type pos:start="111:17" pos:end="111:38"><name pos:start="111:17" pos:end="111:36">MPTSASCancelNotifier</name> <modifier pos:start="111:38" pos:end="111:38">*</modifier></type><name pos:start="111:39" pos:end="111:46">notifier</name></decl>;</decl_stmt>



                <expr_stmt pos:start="115:17" pos:end="115:80"><expr pos:start="115:17" pos:end="115:79"><name pos:start="115:17" pos:end="115:27">reply_async</name> <operator pos:start="115:29" pos:end="115:29">=</operator> <call pos:start="115:31" pos:end="115:79"><name pos:start="115:31" pos:end="115:38">g_memdup</name><argument_list pos:start="115:39" pos:end="115:79">(<argument pos:start="115:40" pos:end="115:45"><expr pos:start="115:40" pos:end="115:45"><operator pos:start="115:40" pos:end="115:40">&amp;</operator><name pos:start="115:41" pos:end="115:45">reply</name></expr></argument>, <argument pos:start="115:48" pos:end="115:78"><expr pos:start="115:48" pos:end="115:78"><sizeof pos:start="115:48" pos:end="115:78">sizeof<argument_list pos:start="115:54" pos:end="115:78">(<argument pos:start="115:55" pos:end="115:77"><expr pos:start="115:55" pos:end="115:77"><name pos:start="115:55" pos:end="115:77">MPIMsgSCSITaskMgmtReply</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="117:17" pos:end="117:50"><expr pos:start="117:17" pos:end="117:49"><name pos:start="117:17" pos:end="117:39"><name pos:start="117:17" pos:end="117:27">reply_async</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:39">IOCLogInfo</name></name> <operator pos:start="117:41" pos:end="117:41">=</operator> <name pos:start="117:43" pos:end="117:49">INT_MAX</name></expr>;</expr_stmt>



                <expr_stmt pos:start="121:17" pos:end="121:26"><expr pos:start="121:17" pos:end="121:25"><name pos:start="121:17" pos:end="121:21">count</name> <operator pos:start="121:23" pos:end="121:23">=</operator> <literal type="number" pos:start="121:25" pos:end="121:25">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="123:17" pos:end="123:58"><expr pos:start="123:17" pos:end="123:57"><name pos:start="123:17" pos:end="123:24">notifier</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:57"><name pos:start="123:28" pos:end="123:32">g_new</name><argument_list pos:start="123:33" pos:end="123:57">(<argument pos:start="123:34" pos:end="123:53"><expr pos:start="123:34" pos:end="123:53"><name pos:start="123:34" pos:end="123:53">MPTSASCancelNotifier</name></expr></argument>, <argument pos:start="123:56" pos:end="123:56"><expr pos:start="123:56" pos:end="123:56"><literal type="number" pos:start="123:56" pos:end="123:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:32"><expr pos:start="125:17" pos:end="125:31"><name pos:start="125:17" pos:end="125:27"><name pos:start="125:17" pos:end="125:24">notifier</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:27">s</name></name> <operator pos:start="125:29" pos:end="125:29">=</operator> <name pos:start="125:31" pos:end="125:31">s</name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:46"><expr pos:start="127:17" pos:end="127:45"><name pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:24">notifier</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:31">reply</name></name> <operator pos:start="127:33" pos:end="127:33">=</operator> <name pos:start="127:35" pos:end="127:45">reply_async</name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:65"><expr pos:start="129:17" pos:end="129:64"><name pos:start="129:17" pos:end="129:41"><name pos:start="129:17" pos:end="129:24">notifier</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:34">notifier</name><operator pos:start="129:35" pos:end="129:35">.</operator><name pos:start="129:36" pos:end="129:41">notify</name></name> <operator pos:start="129:43" pos:end="129:43">=</operator> <name pos:start="129:45" pos:end="129:64">mptsas_cancel_notify</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:62"><expr pos:start="131:17" pos:end="131:61"><call pos:start="131:17" pos:end="131:61"><name pos:start="131:17" pos:end="131:37">scsi_req_cancel_async</name><argument_list pos:start="131:38" pos:end="131:61">(<argument pos:start="131:39" pos:end="131:39"><expr pos:start="131:39" pos:end="131:39"><name pos:start="131:39" pos:end="131:39">r</name></expr></argument>, <argument pos:start="131:42" pos:end="131:60"><expr pos:start="131:42" pos:end="131:60"><operator pos:start="131:42" pos:end="131:42">&amp;</operator><name pos:start="131:43" pos:end="131:60"><name pos:start="131:43" pos:end="131:50">notifier</name><operator pos:start="131:51" pos:end="131:52">-&gt;</operator><name pos:start="131:53" pos:end="131:60">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="133:17" pos:end="133:39">goto <name pos:start="133:22" pos:end="133:38">reply_maybe_async</name>;</goto>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="139:9" pos:end="139:14">break;</break>



    <case pos:start="143:5" pos:end="143:49">case <expr pos:start="143:10" pos:end="143:48"><name pos:start="143:10" pos:end="143:48">MPI_SCSITASKMGMT_TASKTYPE_ABRT_TASK_SET</name></expr>:</case>

    <case pos:start="145:5" pos:end="145:50">case <expr pos:start="145:10" pos:end="145:49"><name pos:start="145:10" pos:end="145:49">MPI_SCSITASKMGMT_TASKTYPE_CLEAR_TASK_SET</name></expr>:</case>

        <expr_stmt pos:start="147:9" pos:end="149:58"><expr pos:start="147:9" pos:end="149:57"><name pos:start="147:9" pos:end="147:14">status</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <call pos:start="147:18" pos:end="149:57"><name pos:start="147:18" pos:end="147:40">mptsas_scsi_device_find</name><argument_list pos:start="147:41" pos:end="149:57">(<argument pos:start="147:42" pos:end="147:42"><expr pos:start="147:42" pos:end="147:42"><name pos:start="147:42" pos:end="147:42">s</name></expr></argument>, <argument pos:start="147:45" pos:end="147:52"><expr pos:start="147:45" pos:end="147:52"><name pos:start="147:45" pos:end="147:52"><name pos:start="147:45" pos:end="147:47">req</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:52">Bus</name></name></expr></argument>, <argument pos:start="147:55" pos:end="147:67"><expr pos:start="147:55" pos:end="147:67"><name pos:start="147:55" pos:end="147:67"><name pos:start="147:55" pos:end="147:57">req</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:67">TargetID</name></name></expr></argument>,

                                         <argument pos:start="149:42" pos:end="149:49"><expr pos:start="149:42" pos:end="149:49"><name pos:start="149:42" pos:end="149:49"><name pos:start="149:42" pos:end="149:44">req</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:49">LUN</name></name></expr></argument>, <argument pos:start="149:52" pos:end="149:56"><expr pos:start="149:52" pos:end="149:56"><operator pos:start="149:52" pos:end="149:52">&amp;</operator><name pos:start="149:53" pos:end="149:56">sdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:19">(<expr pos:start="151:13" pos:end="151:18"><name pos:start="151:13" pos:end="151:18">status</name></expr>)</condition> <block pos:start="151:21" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:21">

            <expr_stmt pos:start="153:13" pos:end="153:37"><expr pos:start="153:13" pos:end="153:36"><name pos:start="153:13" pos:end="153:27"><name pos:start="153:13" pos:end="153:17">reply</name><operator pos:start="153:18" pos:end="153:18">.</operator><name pos:start="153:19" pos:end="153:27">IOCStatus</name></name> <operator pos:start="153:29" pos:end="153:29">=</operator> <name pos:start="153:31" pos:end="153:36">status</name></expr>;</expr_stmt>

            <goto pos:start="155:13" pos:end="155:21">goto <name pos:start="155:18" pos:end="155:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="159:9" pos:end="165:9"><if pos:start="159:9" pos:end="165:9">if <condition pos:start="159:12" pos:end="159:37">(<expr pos:start="159:13" pos:end="159:36"><name pos:start="159:13" pos:end="159:21"><name pos:start="159:13" pos:end="159:16">sdev</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:21">lun</name></name> <operator pos:start="159:23" pos:end="159:24">!=</operator> <name pos:start="159:26" pos:end="159:36"><name pos:start="159:26" pos:end="159:28">req</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:33">LUN</name><index pos:start="159:34" pos:end="159:36">[<expr pos:start="159:35" pos:end="159:35"><literal type="number" pos:start="159:35" pos:end="159:35">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="159:39" pos:end="165:9">{<block_content pos:start="161:13" pos:end="163:21">

            <expr_stmt pos:start="161:13" pos:end="161:69"><expr pos:start="161:13" pos:end="161:68"><name pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:17">reply</name><operator pos:start="161:18" pos:end="161:18">.</operator><name pos:start="161:19" pos:end="161:30">ResponseCode</name></name> <operator pos:start="161:32" pos:end="161:32">=</operator> <name pos:start="161:34" pos:end="161:68">MPI_SCSITASKMGMT_RSP_TM_INVALID_LUN</name></expr>;</expr_stmt>

            <goto pos:start="163:13" pos:end="163:21">goto <name pos:start="163:18" pos:end="163:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:72"><expr pos:start="169:9" pos:end="169:71"><name pos:start="169:9" pos:end="169:19">reply_async</name> <operator pos:start="169:21" pos:end="169:21">=</operator> <call pos:start="169:23" pos:end="169:71"><name pos:start="169:23" pos:end="169:30">g_memdup</name><argument_list pos:start="169:31" pos:end="169:71">(<argument pos:start="169:32" pos:end="169:37"><expr pos:start="169:32" pos:end="169:37"><operator pos:start="169:32" pos:end="169:32">&amp;</operator><name pos:start="169:33" pos:end="169:37">reply</name></expr></argument>, <argument pos:start="169:40" pos:end="169:70"><expr pos:start="169:40" pos:end="169:70"><sizeof pos:start="169:40" pos:end="169:70">sizeof<argument_list pos:start="169:46" pos:end="169:70">(<argument pos:start="169:47" pos:end="169:69"><expr pos:start="169:47" pos:end="169:69"><name pos:start="169:47" pos:end="169:69">MPIMsgSCSITaskMgmtReply</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:42"><expr pos:start="171:9" pos:end="171:41"><name pos:start="171:9" pos:end="171:31"><name pos:start="171:9" pos:end="171:19">reply_async</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:31">IOCLogInfo</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <name pos:start="171:35" pos:end="171:41">INT_MAX</name></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:18"><expr pos:start="175:9" pos:end="175:17"><name pos:start="175:9" pos:end="175:13">count</name> <operator pos:start="175:15" pos:end="175:15">=</operator> <literal type="number" pos:start="175:17" pos:end="175:17">0</literal></expr>;</expr_stmt>

        <macro pos:start="177:9" pos:end="177:59"><name pos:start="177:9" pos:end="177:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="177:28" pos:end="177:59">(<argument pos:start="177:29" pos:end="177:29">r</argument>, <argument pos:start="177:32" pos:end="177:46">&amp;sdev-&gt;requests</argument>, <argument pos:start="177:49" pos:end="177:52">next</argument>, <argument pos:start="177:55" pos:end="177:58">next</argument>)</argument_list></macro> <block pos:start="177:61" pos:end="199:9">{<block_content pos:start="179:13" pos:end="197:13">

            <if_stmt pos:start="179:13" pos:end="197:13"><if pos:start="179:13" pos:end="197:13">if <condition pos:start="179:16" pos:end="179:31">(<expr pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:17">r</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:30">hba_private</name></name></expr>)</condition> <block pos:start="179:33" pos:end="197:13">{<block_content pos:start="181:17" pos:end="195:62">

                <decl_stmt pos:start="181:17" pos:end="181:47"><decl pos:start="181:17" pos:end="181:46"><type pos:start="181:17" pos:end="181:38"><name pos:start="181:17" pos:end="181:36">MPTSASCancelNotifier</name> <modifier pos:start="181:38" pos:end="181:38">*</modifier></type><name pos:start="181:39" pos:end="181:46">notifier</name></decl>;</decl_stmt>



                <expr_stmt pos:start="185:17" pos:end="185:24"><expr pos:start="185:17" pos:end="185:23"><name pos:start="185:17" pos:end="185:21">count</name><operator pos:start="185:22" pos:end="185:23">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:58"><expr pos:start="187:17" pos:end="187:57"><name pos:start="187:17" pos:end="187:24">notifier</name> <operator pos:start="187:26" pos:end="187:26">=</operator> <call pos:start="187:28" pos:end="187:57"><name pos:start="187:28" pos:end="187:32">g_new</name><argument_list pos:start="187:33" pos:end="187:57">(<argument pos:start="187:34" pos:end="187:53"><expr pos:start="187:34" pos:end="187:53"><name pos:start="187:34" pos:end="187:53">MPTSASCancelNotifier</name></expr></argument>, <argument pos:start="187:56" pos:end="187:56"><expr pos:start="187:56" pos:end="187:56"><literal type="number" pos:start="187:56" pos:end="187:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:32"><expr pos:start="189:17" pos:end="189:31"><name pos:start="189:17" pos:end="189:27"><name pos:start="189:17" pos:end="189:24">notifier</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:27">s</name></name> <operator pos:start="189:29" pos:end="189:29">=</operator> <name pos:start="189:31" pos:end="189:31">s</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:46"><expr pos:start="191:17" pos:end="191:45"><name pos:start="191:17" pos:end="191:31"><name pos:start="191:17" pos:end="191:24">notifier</name><operator pos:start="191:25" pos:end="191:26">-&gt;</operator><name pos:start="191:27" pos:end="191:31">reply</name></name> <operator pos:start="191:33" pos:end="191:33">=</operator> <name pos:start="191:35" pos:end="191:45">reply_async</name></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:65"><expr pos:start="193:17" pos:end="193:64"><name pos:start="193:17" pos:end="193:41"><name pos:start="193:17" pos:end="193:24">notifier</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:34">notifier</name><operator pos:start="193:35" pos:end="193:35">.</operator><name pos:start="193:36" pos:end="193:41">notify</name></name> <operator pos:start="193:43" pos:end="193:43">=</operator> <name pos:start="193:45" pos:end="193:64">mptsas_cancel_notify</name></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:62"><expr pos:start="195:17" pos:end="195:61"><call pos:start="195:17" pos:end="195:61"><name pos:start="195:17" pos:end="195:37">scsi_req_cancel_async</name><argument_list pos:start="195:38" pos:end="195:61">(<argument pos:start="195:39" pos:end="195:39"><expr pos:start="195:39" pos:end="195:39"><name pos:start="195:39" pos:end="195:39">r</name></expr></argument>, <argument pos:start="195:42" pos:end="195:60"><expr pos:start="195:42" pos:end="195:60"><operator pos:start="195:42" pos:end="195:42">&amp;</operator><name pos:start="195:43" pos:end="195:60"><name pos:start="195:43" pos:end="195:50">notifier</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:60">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



<label pos:start="203:1" pos:end="203:18"><name pos:start="203:1" pos:end="203:17">reply_maybe_async</name>:</label>

        <if_stmt pos:start="205:9" pos:end="211:9"><if pos:start="205:9" pos:end="211:9">if <condition pos:start="205:12" pos:end="205:50">(<expr pos:start="205:13" pos:end="205:49"><name pos:start="205:13" pos:end="205:41"><name pos:start="205:13" pos:end="205:23">reply_async</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:41">TerminationCount</name></name> <operator pos:start="205:43" pos:end="205:43">&lt;</operator> <name pos:start="205:45" pos:end="205:49">count</name></expr>)</condition> <block pos:start="205:52" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:19">

            <expr_stmt pos:start="207:13" pos:end="207:44"><expr pos:start="207:13" pos:end="207:43"><name pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:23">reply_async</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:35">IOCLogInfo</name></name> <operator pos:start="207:37" pos:end="207:37">=</operator> <name pos:start="207:39" pos:end="207:43">count</name></expr>;</expr_stmt>

            <return pos:start="209:13" pos:end="209:19">return;</return>

        </block_content>}</block></if></if_stmt>


        <expr_stmt pos:start="214:9" pos:end="214:39"><expr pos:start="214:9" pos:end="214:38"><name pos:start="214:9" pos:end="214:30"><name pos:start="214:9" pos:end="214:13">reply</name><operator pos:start="214:14" pos:end="214:14">.</operator><name pos:start="214:15" pos:end="214:30">TerminationCount</name></name> <operator pos:start="214:32" pos:end="214:32">=</operator> <name pos:start="214:34" pos:end="214:38">count</name></expr>;</expr_stmt>

        <break pos:start="216:9" pos:end="216:14">break;</break>



    <case pos:start="220:5" pos:end="220:54">case <expr pos:start="220:10" pos:end="220:53"><name pos:start="220:10" pos:end="220:53">MPI_SCSITASKMGMT_TASKTYPE_LOGICAL_UNIT_RESET</name></expr>:</case>

        <expr_stmt pos:start="222:9" pos:end="224:58"><expr pos:start="222:9" pos:end="224:57"><name pos:start="222:9" pos:end="222:14">status</name> <operator pos:start="222:16" pos:end="222:16">=</operator> <call pos:start="222:18" pos:end="224:57"><name pos:start="222:18" pos:end="222:40">mptsas_scsi_device_find</name><argument_list pos:start="222:41" pos:end="224:57">(<argument pos:start="222:42" pos:end="222:42"><expr pos:start="222:42" pos:end="222:42"><name pos:start="222:42" pos:end="222:42">s</name></expr></argument>, <argument pos:start="222:45" pos:end="222:52"><expr pos:start="222:45" pos:end="222:52"><name pos:start="222:45" pos:end="222:52"><name pos:start="222:45" pos:end="222:47">req</name><operator pos:start="222:48" pos:end="222:49">-&gt;</operator><name pos:start="222:50" pos:end="222:52">Bus</name></name></expr></argument>, <argument pos:start="222:55" pos:end="222:67"><expr pos:start="222:55" pos:end="222:67"><name pos:start="222:55" pos:end="222:67"><name pos:start="222:55" pos:end="222:57">req</name><operator pos:start="222:58" pos:end="222:59">-&gt;</operator><name pos:start="222:60" pos:end="222:67">TargetID</name></name></expr></argument>,

                                         <argument pos:start="224:42" pos:end="224:49"><expr pos:start="224:42" pos:end="224:49"><name pos:start="224:42" pos:end="224:49"><name pos:start="224:42" pos:end="224:44">req</name><operator pos:start="224:45" pos:end="224:46">-&gt;</operator><name pos:start="224:47" pos:end="224:49">LUN</name></name></expr></argument>, <argument pos:start="224:52" pos:end="224:56"><expr pos:start="224:52" pos:end="224:56"><operator pos:start="224:52" pos:end="224:52">&amp;</operator><name pos:start="224:53" pos:end="224:56">sdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="226:9" pos:end="232:9"><if pos:start="226:9" pos:end="232:9">if <condition pos:start="226:12" pos:end="226:19">(<expr pos:start="226:13" pos:end="226:18"><name pos:start="226:13" pos:end="226:18">status</name></expr>)</condition> <block pos:start="226:21" pos:end="232:9">{<block_content pos:start="228:13" pos:end="230:21">

            <expr_stmt pos:start="228:13" pos:end="228:37"><expr pos:start="228:13" pos:end="228:36"><name pos:start="228:13" pos:end="228:27"><name pos:start="228:13" pos:end="228:17">reply</name><operator pos:start="228:18" pos:end="228:18">.</operator><name pos:start="228:19" pos:end="228:27">IOCStatus</name></name> <operator pos:start="228:29" pos:end="228:29">=</operator> <name pos:start="228:31" pos:end="228:36">status</name></expr>;</expr_stmt>

            <goto pos:start="230:13" pos:end="230:21">goto <name pos:start="230:18" pos:end="230:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="234:9" pos:end="240:9"><if pos:start="234:9" pos:end="240:9">if <condition pos:start="234:12" pos:end="234:37">(<expr pos:start="234:13" pos:end="234:36"><name pos:start="234:13" pos:end="234:21"><name pos:start="234:13" pos:end="234:16">sdev</name><operator pos:start="234:17" pos:end="234:18">-&gt;</operator><name pos:start="234:19" pos:end="234:21">lun</name></name> <operator pos:start="234:23" pos:end="234:24">!=</operator> <name pos:start="234:26" pos:end="234:36"><name pos:start="234:26" pos:end="234:28">req</name><operator pos:start="234:29" pos:end="234:30">-&gt;</operator><name pos:start="234:31" pos:end="234:33">LUN</name><index pos:start="234:34" pos:end="234:36">[<expr pos:start="234:35" pos:end="234:35"><literal type="number" pos:start="234:35" pos:end="234:35">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="234:39" pos:end="240:9">{<block_content pos:start="236:13" pos:end="238:21">

            <expr_stmt pos:start="236:13" pos:end="236:69"><expr pos:start="236:13" pos:end="236:68"><name pos:start="236:13" pos:end="236:30"><name pos:start="236:13" pos:end="236:17">reply</name><operator pos:start="236:18" pos:end="236:18">.</operator><name pos:start="236:19" pos:end="236:30">ResponseCode</name></name> <operator pos:start="236:32" pos:end="236:32">=</operator> <name pos:start="236:34" pos:end="236:68">MPI_SCSITASKMGMT_RSP_TM_INVALID_LUN</name></expr>;</expr_stmt>

            <goto pos:start="238:13" pos:end="238:21">goto <name pos:start="238:18" pos:end="238:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="242:9" pos:end="242:36"><expr pos:start="242:9" pos:end="242:35"><call pos:start="242:9" pos:end="242:35"><name pos:start="242:9" pos:end="242:22">qdev_reset_all</name><argument_list pos:start="242:23" pos:end="242:35">(<argument pos:start="242:24" pos:end="242:34"><expr pos:start="242:24" pos:end="242:34"><operator pos:start="242:24" pos:end="242:24">&amp;</operator><name pos:start="242:25" pos:end="242:34"><name pos:start="242:25" pos:end="242:28">sdev</name><operator pos:start="242:29" pos:end="242:30">-&gt;</operator><name pos:start="242:31" pos:end="242:34">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="244:9" pos:end="244:14">break;</break>



    <case pos:start="248:5" pos:end="248:48">case <expr pos:start="248:10" pos:end="248:47"><name pos:start="248:10" pos:end="248:47">MPI_SCSITASKMGMT_TASKTYPE_TARGET_RESET</name></expr>:</case>

        <if_stmt pos:start="250:9" pos:end="256:9"><if pos:start="250:9" pos:end="256:9">if <condition pos:start="250:12" pos:end="250:26">(<expr pos:start="250:13" pos:end="250:25"><name pos:start="250:13" pos:end="250:20"><name pos:start="250:13" pos:end="250:15">req</name><operator pos:start="250:16" pos:end="250:17">-&gt;</operator><name pos:start="250:18" pos:end="250:20">Bus</name></name> <operator pos:start="250:22" pos:end="250:23">!=</operator> <literal type="number" pos:start="250:25" pos:end="250:25">0</literal></expr>)</condition> <block pos:start="250:28" pos:end="256:9">{<block_content pos:start="252:13" pos:end="254:21">

            <expr_stmt pos:start="252:13" pos:end="252:61"><expr pos:start="252:13" pos:end="252:60"><name pos:start="252:13" pos:end="252:27"><name pos:start="252:13" pos:end="252:17">reply</name><operator pos:start="252:18" pos:end="252:18">.</operator><name pos:start="252:19" pos:end="252:27">IOCStatus</name></name> <operator pos:start="252:29" pos:end="252:29">=</operator> <name pos:start="252:31" pos:end="252:60">MPI_IOCSTATUS_SCSI_INVALID_BUS</name></expr>;</expr_stmt>

            <goto pos:start="254:13" pos:end="254:21">goto <name pos:start="254:18" pos:end="254:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="258:9" pos:end="264:9"><if pos:start="258:9" pos:end="264:9">if <condition pos:start="258:12" pos:end="258:43">(<expr pos:start="258:13" pos:end="258:42"><name pos:start="258:13" pos:end="258:25"><name pos:start="258:13" pos:end="258:15">req</name><operator pos:start="258:16" pos:end="258:17">-&gt;</operator><name pos:start="258:18" pos:end="258:25">TargetID</name></name> <operator pos:start="258:27" pos:end="258:27">&gt;</operator> <name pos:start="258:29" pos:end="258:42"><name pos:start="258:29" pos:end="258:29">s</name><operator pos:start="258:30" pos:end="258:31">-&gt;</operator><name pos:start="258:32" pos:end="258:42">max_devices</name></name></expr>)</condition> <block pos:start="258:45" pos:end="264:9">{<block_content pos:start="260:13" pos:end="262:21">

            <expr_stmt pos:start="260:13" pos:end="260:66"><expr pos:start="260:13" pos:end="260:65"><name pos:start="260:13" pos:end="260:27"><name pos:start="260:13" pos:end="260:17">reply</name><operator pos:start="260:18" pos:end="260:18">.</operator><name pos:start="260:19" pos:end="260:27">IOCStatus</name></name> <operator pos:start="260:29" pos:end="260:29">=</operator> <name pos:start="260:31" pos:end="260:65">MPI_IOCSTATUS_SCSI_INVALID_TARGETID</name></expr>;</expr_stmt>

            <goto pos:start="262:13" pos:end="262:21">goto <name pos:start="262:18" pos:end="262:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <macro pos:start="268:9" pos:end="268:59"><name pos:start="268:9" pos:end="268:22">QTAILQ_FOREACH</name><argument_list pos:start="268:23" pos:end="268:59">(<argument pos:start="268:24" pos:end="268:26">kid</argument>, <argument pos:start="268:29" pos:end="268:49">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="268:52" pos:end="268:58">sibling</argument>)</argument_list></macro> <block pos:start="268:61" pos:end="278:9">{<block_content pos:start="270:13" pos:end="276:13">

            <expr_stmt pos:start="270:13" pos:end="270:43"><expr pos:start="270:13" pos:end="270:42"><name pos:start="270:13" pos:end="270:16">sdev</name> <operator pos:start="270:18" pos:end="270:18">=</operator> <call pos:start="270:20" pos:end="270:42"><name pos:start="270:20" pos:end="270:30">SCSI_DEVICE</name><argument_list pos:start="270:31" pos:end="270:42">(<argument pos:start="270:32" pos:end="270:41"><expr pos:start="270:32" pos:end="270:41"><name pos:start="270:32" pos:end="270:41"><name pos:start="270:32" pos:end="270:34">kid</name><operator pos:start="270:35" pos:end="270:36">-&gt;</operator><name pos:start="270:37" pos:end="270:41">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="272:13" pos:end="276:13"><if pos:start="272:13" pos:end="276:13">if <condition pos:start="272:16" pos:end="272:64">(<expr pos:start="272:17" pos:end="272:63"><name pos:start="272:17" pos:end="272:29"><name pos:start="272:17" pos:end="272:20">sdev</name><operator pos:start="272:21" pos:end="272:22">-&gt;</operator><name pos:start="272:23" pos:end="272:29">channel</name></name> <operator pos:start="272:31" pos:end="272:32">==</operator> <literal type="number" pos:start="272:34" pos:end="272:34">0</literal> <operator pos:start="272:36" pos:end="272:37">&amp;&amp;</operator> <name pos:start="272:39" pos:end="272:46"><name pos:start="272:39" pos:end="272:42">sdev</name><operator pos:start="272:43" pos:end="272:44">-&gt;</operator><name pos:start="272:45" pos:end="272:46">id</name></name> <operator pos:start="272:48" pos:end="272:49">==</operator> <name pos:start="272:51" pos:end="272:63"><name pos:start="272:51" pos:end="272:53">req</name><operator pos:start="272:54" pos:end="272:55">-&gt;</operator><name pos:start="272:56" pos:end="272:63">TargetID</name></name></expr>)</condition> <block pos:start="272:66" pos:end="276:13">{<block_content pos:start="274:17" pos:end="274:43">

                <expr_stmt pos:start="274:17" pos:end="274:43"><expr pos:start="274:17" pos:end="274:42"><call pos:start="274:17" pos:end="274:42"><name pos:start="274:17" pos:end="274:30">qdev_reset_all</name><argument_list pos:start="274:31" pos:end="274:42">(<argument pos:start="274:32" pos:end="274:41"><expr pos:start="274:32" pos:end="274:41"><name pos:start="274:32" pos:end="274:41"><name pos:start="274:32" pos:end="274:34">kid</name><operator pos:start="274:35" pos:end="274:36">-&gt;</operator><name pos:start="274:37" pos:end="274:41">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="280:9" pos:end="280:14">break;</break>



    <case pos:start="284:5" pos:end="284:45">case <expr pos:start="284:10" pos:end="284:44"><name pos:start="284:10" pos:end="284:44">MPI_SCSITASKMGMT_TASKTYPE_RESET_BUS</name></expr>:</case>

        <expr_stmt pos:start="286:9" pos:end="286:37"><expr pos:start="286:9" pos:end="286:36"><call pos:start="286:9" pos:end="286:36"><name pos:start="286:9" pos:end="286:22">qbus_reset_all</name><argument_list pos:start="286:23" pos:end="286:36">(<argument pos:start="286:24" pos:end="286:35"><expr pos:start="286:24" pos:end="286:35"><operator pos:start="286:24" pos:end="286:24">&amp;</operator><name pos:start="286:25" pos:end="286:35"><name pos:start="286:25" pos:end="286:25">s</name><operator pos:start="286:26" pos:end="286:27">-&gt;</operator><name pos:start="286:28" pos:end="286:30">bus</name><operator pos:start="286:31" pos:end="286:31">.</operator><name pos:start="286:32" pos:end="286:35">qbus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="288:9" pos:end="288:14">break;</break>



    <default pos:start="292:5" pos:end="292:12">default:</default>

        <expr_stmt pos:start="294:9" pos:end="294:67"><expr pos:start="294:9" pos:end="294:66"><name pos:start="294:9" pos:end="294:26"><name pos:start="294:9" pos:end="294:13">reply</name><operator pos:start="294:14" pos:end="294:14">.</operator><name pos:start="294:15" pos:end="294:26">ResponseCode</name></name> <operator pos:start="294:28" pos:end="294:28">=</operator> <name pos:start="294:30" pos:end="294:66">MPI_SCSITASKMGMT_RSP_TM_NOT_SUPPORTED</name></expr>;</expr_stmt>

        <break pos:start="296:9" pos:end="296:14">break;</break>

    </block_content>}</block></switch>



<label pos:start="302:1" pos:end="302:4"><name pos:start="302:1" pos:end="302:3">out</name>:</label>

    <expr_stmt pos:start="304:5" pos:end="304:55"><expr pos:start="304:5" pos:end="304:54"><call pos:start="304:5" pos:end="304:54"><name pos:start="304:5" pos:end="304:46">mptsas_fix_scsi_task_mgmt_reply_endianness</name><argument_list pos:start="304:47" pos:end="304:54">(<argument pos:start="304:48" pos:end="304:53"><expr pos:start="304:48" pos:end="304:53"><operator pos:start="304:48" pos:end="304:48">&amp;</operator><name pos:start="304:49" pos:end="304:53">reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="306:5" pos:end="306:52"><expr pos:start="306:5" pos:end="306:51"><call pos:start="306:5" pos:end="306:51"><name pos:start="306:5" pos:end="306:21">mptsas_post_reply</name><argument_list pos:start="306:22" pos:end="306:51">(<argument pos:start="306:23" pos:end="306:23"><expr pos:start="306:23" pos:end="306:23"><name pos:start="306:23" pos:end="306:23">s</name></expr></argument>, <argument pos:start="306:26" pos:end="306:50"><expr pos:start="306:26" pos:end="306:50"><operator pos:start="306:26" pos:end="306:26">(</operator><name pos:start="306:27" pos:end="306:41">MPIDefaultReply</name> <operator pos:start="306:43" pos:end="306:43">*</operator><operator pos:start="306:44" pos:end="306:44">)</operator><operator pos:start="306:45" pos:end="306:45">&amp;</operator><name pos:start="306:46" pos:end="306:50">reply</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
