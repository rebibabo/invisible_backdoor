<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26771.c" pos:tabs="8"><function pos:start="1:1" pos:end="40:35"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">close_guest_eventfds</name><parameter_list pos:start="1:33" pos:end="1:59">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">IVShmemState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:58"><decl pos:start="1:51" pos:end="1:58"><type pos:start="1:51" pos:end="1:58"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:58">posn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="40:35">{<block_content pos:start="5:5" pos:end="40:35">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:25"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:25">guest_curr_max</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="40:35"><if pos:start="9:5" pos:end="40:35">if <condition pos:start="9:8" pos:end="9:51">(<expr pos:start="9:9" pos:end="9:50"><operator pos:start="9:9" pos:end="9:9">!</operator><call pos:start="9:10" pos:end="9:50"><name pos:start="9:10" pos:end="9:28">ivshmem_has_feature</name><argument_list pos:start="9:29" pos:end="9:50">(<argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">s</name></expr></argument>, <argument pos:start="9:33" pos:end="9:49"><expr pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:49">IVSHMEM_IOEVENTFD</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:53" pos:end="40:35">{<block_content pos:start="18:5" pos:end="40:35">








    <expr_stmt pos:start="18:5" pos:end="18:48"><expr pos:start="18:5" pos:end="18:47"><name pos:start="18:5" pos:end="18:18">guest_curr_max</name> <operator pos:start="18:20" pos:end="18:20">=</operator> <name pos:start="18:22" pos:end="18:35"><name pos:start="18:22" pos:end="18:22">s</name><operator pos:start="18:23" pos:end="18:24">-&gt;</operator><name pos:start="18:25" pos:end="18:29">peers</name><index pos:start="18:30" pos:end="18:35">[<expr pos:start="18:31" pos:end="18:34"><name pos:start="18:31" pos:end="18:34">posn</name></expr>]</index></name><operator pos:start="18:36" pos:end="18:36">.</operator><name pos:start="18:37" pos:end="18:47">nb_eventfds</name></expr>;</expr_stmt>



    <expr_stmt pos:start="22:5" pos:end="22:38"><expr pos:start="22:5" pos:end="22:37"><call pos:start="22:5" pos:end="22:37"><name pos:start="22:5" pos:end="22:35">memory_region_transaction_begin</name><argument_list pos:start="22:36" pos:end="22:37">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="24:5" pos:end="40:35">for <control pos:start="24:9" pos:end="24:40">(<init pos:start="24:10" pos:end="24:15"><expr pos:start="24:10" pos:end="24:14"><name pos:start="24:10" pos:end="24:10">i</name> <operator pos:start="24:12" pos:end="24:12">=</operator> <literal type="number" pos:start="24:14" pos:end="24:14">0</literal></expr>;</init> <condition pos:start="24:17" pos:end="24:35"><expr pos:start="24:17" pos:end="24:34"><name pos:start="24:17" pos:end="24:17">i</name> <operator pos:start="24:19" pos:end="24:19">&lt;</operator> <name pos:start="24:21" pos:end="24:34">guest_curr_max</name></expr>;</condition> <incr pos:start="24:37" pos:end="24:39"><expr pos:start="24:37" pos:end="24:39"><name pos:start="24:37" pos:end="24:37">i</name><operator pos:start="24:38" pos:end="24:39">++</operator></expr></incr>)</control> <block pos:start="24:42" pos:end="40:35">{<block_content pos:start="26:9" pos:end="40:35">

        <expr_stmt pos:start="26:9" pos:end="26:40"><expr pos:start="26:9" pos:end="26:39"><call pos:start="26:9" pos:end="26:39"><name pos:start="26:9" pos:end="26:27">ivshmem_del_eventfd</name><argument_list pos:start="26:28" pos:end="26:39">(<argument pos:start="26:29" pos:end="26:29"><expr pos:start="26:29" pos:end="26:29"><name pos:start="26:29" pos:end="26:29">s</name></expr></argument>, <argument pos:start="26:32" pos:end="26:35"><expr pos:start="26:32" pos:end="26:35"><name pos:start="26:32" pos:end="26:35">posn</name></expr></argument>, <argument pos:start="26:38" pos:end="26:38"><expr pos:start="26:38" pos:end="26:38"><name pos:start="26:38" pos:end="26:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <expr_stmt pos:start="29:5" pos:end="29:39"><expr pos:start="29:5" pos:end="29:38"><call pos:start="29:5" pos:end="29:38"><name pos:start="29:5" pos:end="29:36">memory_region_transaction_commit</name><argument_list pos:start="29:37" pos:end="29:38">()</argument_list></call></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="40:35">for <control pos:start="31:9" pos:end="31:40">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">i</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:35"><expr pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:17">i</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:34">guest_curr_max</name></expr>;</condition> <incr pos:start="31:37" pos:end="31:39"><expr pos:start="31:37" pos:end="31:39"><name pos:start="31:37" pos:end="31:37">i</name><operator pos:start="31:38" pos:end="31:39">++</operator></expr></incr>)</control> <block pos:start="31:42" pos:end="40:35">{<block_content pos:start="33:9" pos:end="40:35">

        <expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:30">event_notifier_cleanup</name><argument_list pos:start="33:31" pos:end="33:59">(<argument pos:start="33:32" pos:end="33:58"><expr pos:start="33:32" pos:end="33:58"><operator pos:start="33:32" pos:end="33:32">&amp;</operator><name pos:start="33:33" pos:end="33:46"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:40">peers</name><index pos:start="33:41" pos:end="33:46">[<expr pos:start="33:42" pos:end="33:45"><name pos:start="33:42" pos:end="33:45">posn</name></expr>]</index></name><operator pos:start="33:47" pos:end="33:47">.</operator><name pos:start="33:48" pos:end="33:58"><name pos:start="33:48" pos:end="33:55">eventfds</name><index pos:start="33:56" pos:end="33:58">[<expr pos:start="33:57" pos:end="33:57"><name pos:start="33:57" pos:end="33:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="38:5" pos:end="38:36"><expr pos:start="38:5" pos:end="38:35"><call pos:start="38:5" pos:end="38:35"><name pos:start="38:5" pos:end="38:10">g_free</name><argument_list pos:start="38:11" pos:end="38:35">(<argument pos:start="38:12" pos:end="38:34"><expr pos:start="38:12" pos:end="38:34"><name pos:start="38:12" pos:end="38:25"><name pos:start="38:12" pos:end="38:12">s</name><operator pos:start="38:13" pos:end="38:14">-&gt;</operator><name pos:start="38:15" pos:end="38:19">peers</name><index pos:start="38:20" pos:end="38:25">[<expr pos:start="38:21" pos:end="38:24"><name pos:start="38:21" pos:end="38:24">posn</name></expr>]</index></name><operator pos:start="38:26" pos:end="38:26">.</operator><name pos:start="38:27" pos:end="38:34">eventfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="40:5" pos:end="40:35"><expr pos:start="40:5" pos:end="40:34"><name pos:start="40:5" pos:end="40:18"><name pos:start="40:5" pos:end="40:5">s</name><operator pos:start="40:6" pos:end="40:7">-&gt;</operator><name pos:start="40:8" pos:end="40:12">peers</name><index pos:start="40:13" pos:end="40:18">[<expr pos:start="40:14" pos:end="40:17"><name pos:start="40:14" pos:end="40:17">posn</name></expr>]</index></name><operator pos:start="40:19" pos:end="40:19">.</operator><name pos:start="40:20" pos:end="40:30">nb_eventfds</name> <operator pos:start="40:32" pos:end="40:32">=</operator> <literal type="number" pos:start="40:34" pos:end="40:34">0</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
