<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16367.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">SocketAddress</name> <modifier pos:start="1:22" pos:end="1:22">*</modifier></type><name pos:start="1:23" pos:end="1:32">nbd_config</name><parameter_list pos:start="1:33" pos:end="3:46">(<parameter pos:start="1:34" pos:end="1:48"><decl pos:start="1:34" pos:end="1:48"><type pos:start="1:34" pos:end="1:48"><name pos:start="1:34" pos:end="1:45">BDRVNBDState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:64"><decl pos:start="1:51" pos:end="1:64"><type pos:start="1:51" pos:end="1:64"><name pos:start="1:51" pos:end="1:55">QDict</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:64">options</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:79"><decl pos:start="1:67" pos:end="1:79"><type pos:start="1:67" pos:end="1:79"><name pos:start="1:67" pos:end="1:70">char</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:79">export</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:38">Error</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="89:1">{<block_content pos:start="7:5" pos:end="87:17">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SocketAddress</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:24">saddr</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:71">(<expr pos:start="11:9" pos:end="11:70"><call pos:start="11:9" pos:end="11:37"><name pos:start="11:9" pos:end="11:20">qdict_haskey</name><argument_list pos:start="11:21" pos:end="11:37">(<argument pos:start="11:22" pos:end="11:28"><expr pos:start="11:22" pos:end="11:28"><name pos:start="11:22" pos:end="11:28">options</name></expr></argument>, <argument pos:start="11:31" pos:end="11:36"><expr pos:start="11:31" pos:end="11:36"><literal type="string" pos:start="11:31" pos:end="11:36">"path"</literal></expr></argument>)</argument_list></call> <operator pos:start="11:39" pos:end="11:40">==</operator> <call pos:start="11:42" pos:end="11:70"><name pos:start="11:42" pos:end="11:53">qdict_haskey</name><argument_list pos:start="11:54" pos:end="11:70">(<argument pos:start="11:55" pos:end="11:61"><expr pos:start="11:55" pos:end="11:61"><name pos:start="11:55" pos:end="11:61">options</name></expr></argument>, <argument pos:start="11:64" pos:end="11:69"><expr pos:start="11:64" pos:end="11:69"><literal type="string" pos:start="11:64" pos:end="11:69">"host"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:73" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:20">

        <if_stmt pos:start="13:9" pos:end="21:9"><if pos:start="13:9" pos:end="17:9">if <condition pos:start="13:12" pos:end="13:42">(<expr pos:start="13:13" pos:end="13:41"><call pos:start="13:13" pos:end="13:41"><name pos:start="13:13" pos:end="13:24">qdict_haskey</name><argument_list pos:start="13:25" pos:end="13:41">(<argument pos:start="13:26" pos:end="13:32"><expr pos:start="13:26" pos:end="13:32"><name pos:start="13:26" pos:end="13:32">options</name></expr></argument>, <argument pos:start="13:35" pos:end="13:40"><expr pos:start="13:35" pos:end="13:40"><literal type="string" pos:start="13:35" pos:end="13:40">"path"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:44" pos:end="17:9">{<block_content pos:start="15:13" pos:end="15:80">

            <expr_stmt pos:start="15:13" pos:end="15:80"><expr pos:start="15:13" pos:end="15:79"><call pos:start="15:13" pos:end="15:79"><name pos:start="15:13" pos:end="15:22">error_setg</name><argument_list pos:start="15:23" pos:end="15:79">(<argument pos:start="15:24" pos:end="15:27"><expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">errp</name></expr></argument>, <argument pos:start="15:30" pos:end="15:78"><expr pos:start="15:30" pos:end="15:78"><literal type="string" pos:start="15:30" pos:end="15:78">"path and host may not be used at the same time."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="17:11" pos:end="21:9">else <block pos:start="17:16" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:72">

            <expr_stmt pos:start="19:13" pos:end="19:72"><expr pos:start="19:13" pos:end="19:71"><call pos:start="19:13" pos:end="19:71"><name pos:start="19:13" pos:end="19:22">error_setg</name><argument_list pos:start="19:23" pos:end="19:71">(<argument pos:start="19:24" pos:end="19:27"><expr pos:start="19:24" pos:end="19:27"><name pos:start="19:24" pos:end="19:27">errp</name></expr></argument>, <argument pos:start="19:30" pos:end="19:70"><expr pos:start="19:30" pos:end="19:70"><literal type="string" pos:start="19:30" pos:end="19:70">"one of path and host must be specified."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:37"><expr pos:start="29:5" pos:end="29:36"><name pos:start="29:5" pos:end="29:9">saddr</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <call pos:start="29:13" pos:end="29:36"><name pos:start="29:13" pos:end="29:18">g_new0</name><argument_list pos:start="29:19" pos:end="29:36">(<argument pos:start="29:20" pos:end="29:32"><expr pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:32">SocketAddress</name></expr></argument>, <argument pos:start="29:35" pos:end="29:35"><expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="69:5"><if pos:start="33:5" pos:end="45:5">if <condition pos:start="33:8" pos:end="33:38">(<expr pos:start="33:9" pos:end="33:37"><call pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:20">qdict_haskey</name><argument_list pos:start="33:21" pos:end="33:37">(<argument pos:start="33:22" pos:end="33:28"><expr pos:start="33:22" pos:end="33:28"><name pos:start="33:22" pos:end="33:28">options</name></expr></argument>, <argument pos:start="33:31" pos:end="33:36"><expr pos:start="33:31" pos:end="33:36"><literal type="string" pos:start="33:31" pos:end="33:36">"path"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:40" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:35">

        <decl_stmt pos:start="35:9" pos:end="35:34"><decl pos:start="35:9" pos:end="35:33"><type pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:25">UnixSocketAddress</name> <modifier pos:start="35:27" pos:end="35:27">*</modifier></type><name pos:start="35:28" pos:end="35:33">q_unix</name></decl>;</decl_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">saddr</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:19">type</name></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <name pos:start="37:23" pos:end="37:46">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:69"><expr pos:start="39:9" pos:end="39:68"><name pos:start="39:9" pos:end="39:14">q_unix</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:37"><name pos:start="39:18" pos:end="39:22">saddr</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:25">u</name><operator pos:start="39:26" pos:end="39:26">.</operator><name pos:start="39:27" pos:end="39:32">q_unix</name><operator pos:start="39:33" pos:end="39:33">.</operator><name pos:start="39:34" pos:end="39:37">data</name></name> <operator pos:start="39:39" pos:end="39:39">=</operator> <call pos:start="39:41" pos:end="39:68"><name pos:start="39:41" pos:end="39:46">g_new0</name><argument_list pos:start="39:47" pos:end="39:68">(<argument pos:start="39:48" pos:end="39:64"><expr pos:start="39:48" pos:end="39:64"><name pos:start="39:48" pos:end="39:64">UnixSocketAddress</name></expr></argument>, <argument pos:start="39:67" pos:end="39:67"><expr pos:start="39:67" pos:end="39:67"><literal type="number" pos:start="39:67" pos:end="39:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:64"><expr pos:start="41:9" pos:end="41:63"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:14">q_unix</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:20">path</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator> <call pos:start="41:24" pos:end="41:63"><name pos:start="41:24" pos:end="41:31">g_strdup</name><argument_list pos:start="41:32" pos:end="41:63">(<argument pos:start="41:33" pos:end="41:62"><expr pos:start="41:33" pos:end="41:62"><call pos:start="41:33" pos:end="41:62"><name pos:start="41:33" pos:end="41:45">qdict_get_str</name><argument_list pos:start="41:46" pos:end="41:62">(<argument pos:start="41:47" pos:end="41:53"><expr pos:start="41:47" pos:end="41:53"><name pos:start="41:47" pos:end="41:53">options</name></expr></argument>, <argument pos:start="41:56" pos:end="41:61"><expr pos:start="41:56" pos:end="41:61"><literal type="string" pos:start="41:56" pos:end="41:61">"path"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:35"><expr pos:start="43:9" pos:end="43:34"><call pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:17">qdict_del</name><argument_list pos:start="43:18" pos:end="43:34">(<argument pos:start="43:19" pos:end="43:25"><expr pos:start="43:19" pos:end="43:25"><name pos:start="43:19" pos:end="43:25">options</name></expr></argument>, <argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><literal type="string" pos:start="43:28" pos:end="43:33">"path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="69:5">else <block pos:start="45:12" pos:end="69:5">{<block_content pos:start="47:9" pos:end="67:35">

        <decl_stmt pos:start="47:9" pos:end="47:32"><decl pos:start="47:9" pos:end="47:31"><type pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:25">InetSocketAddress</name> <modifier pos:start="47:27" pos:end="47:27">*</modifier></type><name pos:start="47:28" pos:end="47:31">inet</name></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:19"><name pos:start="49:9" pos:end="49:13">saddr</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:19">type</name></name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:46">SOCKET_ADDRESS_KIND_INET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:65"><expr pos:start="51:9" pos:end="51:64"><name pos:start="51:9" pos:end="51:12">inet</name> <operator pos:start="51:14" pos:end="51:14">=</operator> <name pos:start="51:16" pos:end="51:33"><name pos:start="51:16" pos:end="51:20">saddr</name><operator pos:start="51:21" pos:end="51:22">-&gt;</operator><name pos:start="51:23" pos:end="51:23">u</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:28">inet</name><operator pos:start="51:29" pos:end="51:29">.</operator><name pos:start="51:30" pos:end="51:33">data</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <call pos:start="51:37" pos:end="51:64"><name pos:start="51:37" pos:end="51:42">g_new0</name><argument_list pos:start="51:43" pos:end="51:64">(<argument pos:start="51:44" pos:end="51:60"><expr pos:start="51:44" pos:end="51:60"><name pos:start="51:44" pos:end="51:60">InetSocketAddress</name></expr></argument>, <argument pos:start="51:63" pos:end="51:63"><expr pos:start="51:63" pos:end="51:63"><literal type="number" pos:start="51:63" pos:end="51:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:12">inet</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:18">host</name></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <call pos:start="53:22" pos:end="53:61"><name pos:start="53:22" pos:end="53:29">g_strdup</name><argument_list pos:start="53:30" pos:end="53:61">(<argument pos:start="53:31" pos:end="53:60"><expr pos:start="53:31" pos:end="53:60"><call pos:start="53:31" pos:end="53:60"><name pos:start="53:31" pos:end="53:43">qdict_get_str</name><argument_list pos:start="53:44" pos:end="53:60">(<argument pos:start="53:45" pos:end="53:51"><expr pos:start="53:45" pos:end="53:51"><name pos:start="53:45" pos:end="53:51">options</name></expr></argument>, <argument pos:start="53:54" pos:end="53:59"><expr pos:start="53:54" pos:end="53:59"><literal type="string" pos:start="53:54" pos:end="53:59">"host"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:48">(<expr pos:start="55:13" pos:end="55:47"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:47"><name pos:start="55:14" pos:end="55:30">qdict_get_try_str</name><argument_list pos:start="55:31" pos:end="55:47">(<argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">options</name></expr></argument>, <argument pos:start="55:41" pos:end="55:46"><expr pos:start="55:41" pos:end="55:46"><literal type="string" pos:start="55:41" pos:end="55:46">"port"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:50" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:65">

            <expr_stmt pos:start="57:13" pos:end="57:65"><expr pos:start="57:13" pos:end="57:64"><name pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:16">inet</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:22">port</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <call pos:start="57:26" pos:end="57:64"><name pos:start="57:26" pos:end="57:40">g_strdup_printf</name><argument_list pos:start="57:41" pos:end="57:64">(<argument pos:start="57:42" pos:end="57:45"><expr pos:start="57:42" pos:end="57:45"><literal type="string" pos:start="57:42" pos:end="57:45">"%d"</literal></expr></argument>, <argument pos:start="57:48" pos:end="57:63"><expr pos:start="57:48" pos:end="57:63"><name pos:start="57:48" pos:end="57:63">NBD_DEFAULT_PORT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="63:9">else <block pos:start="59:16" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:66">

            <expr_stmt pos:start="61:13" pos:end="61:66"><expr pos:start="61:13" pos:end="61:65"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:16">inet</name><operator pos:start="61:17" pos:end="61:18">-&gt;</operator><name pos:start="61:19" pos:end="61:22">port</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:65"><name pos:start="61:26" pos:end="61:33">g_strdup</name><argument_list pos:start="61:34" pos:end="61:65">(<argument pos:start="61:35" pos:end="61:64"><expr pos:start="61:35" pos:end="61:64"><call pos:start="61:35" pos:end="61:64"><name pos:start="61:35" pos:end="61:47">qdict_get_str</name><argument_list pos:start="61:48" pos:end="61:64">(<argument pos:start="61:49" pos:end="61:55"><expr pos:start="61:49" pos:end="61:55"><name pos:start="61:49" pos:end="61:55">options</name></expr></argument>, <argument pos:start="61:58" pos:end="61:63"><expr pos:start="61:58" pos:end="61:63"><literal type="string" pos:start="61:58" pos:end="61:63">"port"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><call pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:17">qdict_del</name><argument_list pos:start="65:18" pos:end="65:34">(<argument pos:start="65:19" pos:end="65:25"><expr pos:start="65:19" pos:end="65:25"><name pos:start="65:19" pos:end="65:25">options</name></expr></argument>, <argument pos:start="65:28" pos:end="65:33"><expr pos:start="65:28" pos:end="65:33"><literal type="string" pos:start="65:28" pos:end="65:33">"host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><call pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:17">qdict_del</name><argument_list pos:start="67:18" pos:end="67:34">(<argument pos:start="67:19" pos:end="67:25"><expr pos:start="67:19" pos:end="67:25"><name pos:start="67:19" pos:end="67:25">options</name></expr></argument>, <argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><literal type="string" pos:start="67:28" pos:end="67:33">"port"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:64"><expr pos:start="73:5" pos:end="73:63"><name pos:start="73:5" pos:end="73:21"><name pos:start="73:5" pos:end="73:5">s</name><operator pos:start="73:6" pos:end="73:7">-&gt;</operator><name pos:start="73:8" pos:end="73:13">client</name><operator pos:start="73:14" pos:end="73:14">.</operator><name pos:start="73:15" pos:end="73:21">is_unix</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:35"><name pos:start="73:25" pos:end="73:29">saddr</name><operator pos:start="73:30" pos:end="73:31">-&gt;</operator><name pos:start="73:32" pos:end="73:35">type</name></name> <operator pos:start="73:37" pos:end="73:38">==</operator> <name pos:start="73:40" pos:end="73:63">SOCKET_ADDRESS_KIND_UNIX</name></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:61"><expr pos:start="77:5" pos:end="77:60"><operator pos:start="77:5" pos:end="77:5">*</operator><name pos:start="77:6" pos:end="77:11">export</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <call pos:start="77:15" pos:end="77:60"><name pos:start="77:15" pos:end="77:22">g_strdup</name><argument_list pos:start="77:23" pos:end="77:60">(<argument pos:start="77:24" pos:end="77:59"><expr pos:start="77:24" pos:end="77:59"><call pos:start="77:24" pos:end="77:59"><name pos:start="77:24" pos:end="77:40">qdict_get_try_str</name><argument_list pos:start="77:41" pos:end="77:59">(<argument pos:start="77:42" pos:end="77:48"><expr pos:start="77:42" pos:end="77:48"><name pos:start="77:42" pos:end="77:48">options</name></expr></argument>, <argument pos:start="77:51" pos:end="77:58"><expr pos:start="77:51" pos:end="77:58"><literal type="string" pos:start="77:51" pos:end="77:58">"export"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:16">(<expr pos:start="79:9" pos:end="79:15"><operator pos:start="79:9" pos:end="79:9">*</operator><name pos:start="79:10" pos:end="79:15">export</name></expr>)</condition> <block pos:start="79:18" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:37">

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><call pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:17">qdict_del</name><argument_list pos:start="81:18" pos:end="81:36">(<argument pos:start="81:19" pos:end="81:25"><expr pos:start="81:19" pos:end="81:25"><name pos:start="81:19" pos:end="81:25">options</name></expr></argument>, <argument pos:start="81:28" pos:end="81:35"><expr pos:start="81:28" pos:end="81:35"><literal type="string" pos:start="81:28" pos:end="81:35">"export"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="87:5" pos:end="87:17">return <expr pos:start="87:12" pos:end="87:16"><name pos:start="87:12" pos:end="87:16">saddr</name></expr>;</return>

</block_content>}</block></function>
</unit>
