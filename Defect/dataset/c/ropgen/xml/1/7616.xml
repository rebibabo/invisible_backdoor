<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7616.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">vmstate_register_with_alias_id</name><parameter_list pos:start="1:35" pos:end="7:60">(<parameter pos:start="1:36" pos:end="1:51"><decl pos:start="1:36" pos:end="1:51"><type pos:start="1:36" pos:end="1:51"><name pos:start="1:36" pos:end="1:46">DeviceState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">dev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:68">instance_id</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:65"><decl pos:start="3:36" pos:end="3:65"><type pos:start="3:36" pos:end="3:65"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:59">VMStateDescription</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">vmsd</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:47"><decl pos:start="5:36" pos:end="5:47"><type pos:start="5:36" pos:end="5:47"><name pos:start="5:36" pos:end="5:39">void</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:47">opaque</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:61"><decl pos:start="5:50" pos:end="5:61"><type pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:61">alias_id</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:59"><decl pos:start="7:36" pos:end="7:59"><type pos:start="7:36" pos:end="7:59"><name pos:start="7:36" pos:end="7:38">int</name></type> <name pos:start="7:40" pos:end="7:59">required_for_version</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="85:1">{<block_content pos:start="11:5" pos:end="83:13">

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">SaveStateEntry</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">se</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:70">/* If this triggers, alias support can be dropped for the vmsd. */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:79"><expr pos:start="17:5" pos:end="17:78"><call pos:start="17:5" pos:end="17:78"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:78">(<argument pos:start="17:12" pos:end="17:77"><expr pos:start="17:12" pos:end="17:77"><name pos:start="17:12" pos:end="17:19">alias_id</name> <operator pos:start="17:21" pos:end="17:22">==</operator> <operator pos:start="17:24" pos:end="17:24">-</operator><literal type="number" pos:start="17:25" pos:end="17:25">1</literal> <operator pos:start="17:27" pos:end="17:28">||</operator> <name pos:start="17:30" pos:end="17:49">required_for_version</name> <operator pos:start="17:51" pos:end="17:52">&gt;=</operator> <name pos:start="17:54" pos:end="17:77"><name pos:start="17:54" pos:end="17:57">vmsd</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:77">minimum_version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:6">se</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:42"><name pos:start="21:10" pos:end="21:18">g_malloc0</name><argument_list pos:start="21:19" pos:end="21:42">(<argument pos:start="21:20" pos:end="21:41"><expr pos:start="21:20" pos:end="21:41"><sizeof pos:start="21:20" pos:end="21:41">sizeof<argument_list pos:start="21:26" pos:end="21:41">(<argument pos:start="21:27" pos:end="21:40"><expr pos:start="21:27" pos:end="21:40"><name pos:start="21:27" pos:end="21:40">SaveStateEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:6">se</name><operator pos:start="23:7" pos:end="23:8">-&gt;</operator><name pos:start="23:9" pos:end="23:18">version_id</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:37"><name pos:start="23:22" pos:end="23:25">vmsd</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:37">version_id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:6">se</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:18">section_id</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:51"><name pos:start="25:22" pos:end="25:33">savevm_state</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:51">global_section_id</name></name><operator pos:start="25:52" pos:end="25:53">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:6">se</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:14">opaque</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:23">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:6">se</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:12">vmsd</name></name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:19">vmsd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:6">se</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:16">alias_id</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:27">alias_id</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="61:5"><if pos:start="35:5" pos:end="61:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">dev</name></expr>)</condition> <block pos:start="35:14" pos:end="61:5">{<block_content pos:start="37:9" pos:end="59:9">

        <decl_stmt pos:start="37:9" pos:end="37:42"><decl pos:start="37:9" pos:end="37:41"><type pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:12">char</name> <modifier pos:start="37:14" pos:end="37:14">*</modifier></type><name pos:start="37:15" pos:end="37:16">id</name> <init pos:start="37:18" pos:end="37:41">= <expr pos:start="37:20" pos:end="37:41"><call pos:start="37:20" pos:end="37:41"><name pos:start="37:20" pos:end="37:36">qdev_get_dev_path</name><argument_list pos:start="37:37" pos:end="37:41">(<argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="39:9" pos:end="59:9"><if pos:start="39:9" pos:end="59:9">if <condition pos:start="39:12" pos:end="39:15">(<expr pos:start="39:13" pos:end="39:14"><name pos:start="39:13" pos:end="39:14">id</name></expr>)</condition> <block pos:start="39:17" pos:end="59:9">{<block_content pos:start="41:13" pos:end="57:29">

            <expr_stmt pos:start="41:13" pos:end="41:54"><expr pos:start="41:13" pos:end="41:53"><call pos:start="41:13" pos:end="41:53"><name pos:start="41:13" pos:end="41:19">pstrcpy</name><argument_list pos:start="41:20" pos:end="41:53">(<argument pos:start="41:21" pos:end="41:29"><expr pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:29"><name pos:start="41:21" pos:end="41:22">se</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:29">idstr</name></name></expr></argument>, <argument pos:start="41:32" pos:end="41:48"><expr pos:start="41:32" pos:end="41:48"><sizeof pos:start="41:32" pos:end="41:48">sizeof<argument_list pos:start="41:38" pos:end="41:48">(<argument pos:start="41:39" pos:end="41:47"><expr pos:start="41:39" pos:end="41:47"><name pos:start="41:39" pos:end="41:47"><name pos:start="41:39" pos:end="41:40">se</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:47">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:51" pos:end="41:52"><expr pos:start="41:51" pos:end="41:52"><name pos:start="41:51" pos:end="41:52">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:55"><expr pos:start="43:13" pos:end="43:54"><call pos:start="43:13" pos:end="43:54"><name pos:start="43:13" pos:end="43:19">pstrcat</name><argument_list pos:start="43:20" pos:end="43:54">(<argument pos:start="43:21" pos:end="43:29"><expr pos:start="43:21" pos:end="43:29"><name pos:start="43:21" pos:end="43:29"><name pos:start="43:21" pos:end="43:22">se</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:29">idstr</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:48"><expr pos:start="43:32" pos:end="43:48"><sizeof pos:start="43:32" pos:end="43:48">sizeof<argument_list pos:start="43:38" pos:end="43:48">(<argument pos:start="43:39" pos:end="43:47"><expr pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:47"><name pos:start="43:39" pos:end="43:40">se</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:47">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="43:51" pos:end="43:53"><expr pos:start="43:51" pos:end="43:53"><literal type="string" pos:start="43:51" pos:end="43:53">"/"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:23"><expr pos:start="45:13" pos:end="45:22"><call pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:18">g_free</name><argument_list pos:start="45:19" pos:end="45:22">(<argument pos:start="45:20" pos:end="45:21"><expr pos:start="45:20" pos:end="45:21"><name pos:start="45:20" pos:end="45:21">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="49:13" pos:end="49:56"><expr pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:14">se</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:22">compat</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:55"><name pos:start="49:26" pos:end="49:34">g_malloc0</name><argument_list pos:start="49:35" pos:end="49:55">(<argument pos:start="49:36" pos:end="49:54"><expr pos:start="49:36" pos:end="49:54"><sizeof pos:start="49:36" pos:end="49:54">sizeof<argument_list pos:start="49:42" pos:end="49:54">(<argument pos:start="49:43" pos:end="49:53"><expr pos:start="49:43" pos:end="49:53"><name pos:start="49:43" pos:end="49:53">CompatEntry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:78"><expr pos:start="51:13" pos:end="51:77"><call pos:start="51:13" pos:end="51:77"><name pos:start="51:13" pos:end="51:19">pstrcpy</name><argument_list pos:start="51:20" pos:end="51:77">(<argument pos:start="51:21" pos:end="51:37"><expr pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:22">se</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:30">compat</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:37">idstr</name></name></expr></argument>, <argument pos:start="51:40" pos:end="51:64"><expr pos:start="51:40" pos:end="51:64"><sizeof pos:start="51:40" pos:end="51:64">sizeof<argument_list pos:start="51:46" pos:end="51:64">(<argument pos:start="51:47" pos:end="51:63"><expr pos:start="51:47" pos:end="51:63"><name pos:start="51:47" pos:end="51:63"><name pos:start="51:47" pos:end="51:48">se</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:56">compat</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:63">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="51:67" pos:end="51:76"><expr pos:start="51:67" pos:end="51:76"><name pos:start="51:67" pos:end="51:76"><name pos:start="51:67" pos:end="51:70">vmsd</name><operator pos:start="51:71" pos:end="51:72">-&gt;</operator><name pos:start="51:73" pos:end="51:76">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="55:80"><expr pos:start="53:13" pos:end="55:79"><name pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:14">se</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:22">compat</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:35">instance_id</name></name> <operator pos:start="53:37" pos:end="53:37">=</operator> <ternary pos:start="53:39" pos:end="55:79"><condition pos:start="53:39" pos:end="53:57"><expr pos:start="53:39" pos:end="53:55"><name pos:start="53:39" pos:end="53:49">instance_id</name> <operator pos:start="53:51" pos:end="53:52">==</operator> <operator pos:start="53:54" pos:end="53:54">-</operator><literal type="number" pos:start="53:55" pos:end="53:55">1</literal></expr> ?</condition><then pos:start="55:26" pos:end="55:65">

                         <expr pos:start="55:26" pos:end="55:65"><call pos:start="55:26" pos:end="55:65"><name pos:start="55:26" pos:end="55:53">calculate_compat_instance_id</name><argument_list pos:start="55:54" pos:end="55:65">(<argument pos:start="55:55" pos:end="55:64"><expr pos:start="55:55" pos:end="55:64"><name pos:start="55:55" pos:end="55:64"><name pos:start="55:55" pos:end="55:58">vmsd</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:64">name</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="55:67" pos:end="55:79">: <expr pos:start="55:69" pos:end="55:79"><name pos:start="55:69" pos:end="55:79">instance_id</name></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:23">instance_id</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">-</operator><literal type="number" pos:start="57:28" pos:end="57:28">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><call pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:11">pstrcat</name><argument_list pos:start="63:12" pos:end="63:53">(<argument pos:start="63:13" pos:end="63:21"><expr pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:21"><name pos:start="63:13" pos:end="63:14">se</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">idstr</name></name></expr></argument>, <argument pos:start="63:24" pos:end="63:40"><expr pos:start="63:24" pos:end="63:40"><sizeof pos:start="63:24" pos:end="63:40">sizeof<argument_list pos:start="63:30" pos:end="63:40">(<argument pos:start="63:31" pos:end="63:39"><expr pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:32">se</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:39">idstr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:43" pos:end="63:52"><expr pos:start="63:43" pos:end="63:52"><name pos:start="63:43" pos:end="63:52"><name pos:start="63:43" pos:end="63:46">vmsd</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:52">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="75:5"><if pos:start="67:5" pos:end="71:5">if <condition pos:start="67:8" pos:end="67:26">(<expr pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:19">instance_id</name> <operator pos:start="67:21" pos:end="67:22">==</operator> <operator pos:start="67:24" pos:end="67:24">-</operator><literal type="number" pos:start="67:25" pos:end="67:25">1</literal></expr>)</condition> <block pos:start="67:28" pos:end="71:5">{<block_content pos:start="69:9" pos:end="69:63">

        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:10">se</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:23">instance_id</name></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:62"><name pos:start="69:27" pos:end="69:51">calculate_new_instance_id</name><argument_list pos:start="69:52" pos:end="69:62">(<argument pos:start="69:53" pos:end="69:61"><expr pos:start="69:53" pos:end="69:61"><name pos:start="69:53" pos:end="69:61"><name pos:start="69:53" pos:end="69:54">se</name><operator pos:start="69:55" pos:end="69:56">-&gt;</operator><name pos:start="69:57" pos:end="69:61">idstr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="71:7" pos:end="75:5">else <block pos:start="71:12" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:38">

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:10">se</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:23">instance_id</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:37">instance_id</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><call pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:10">assert</name><argument_list pos:start="77:11" pos:end="77:47">(<argument pos:start="77:12" pos:end="77:46"><expr pos:start="77:12" pos:end="77:46"><operator pos:start="77:12" pos:end="77:12">!</operator><name pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:14">se</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:22">compat</name></name> <operator pos:start="77:24" pos:end="77:25">||</operator> <name pos:start="77:27" pos:end="77:41"><name pos:start="77:27" pos:end="77:28">se</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:41">instance_id</name></name> <operator pos:start="77:43" pos:end="77:44">==</operator> <literal type="number" pos:start="77:46" pos:end="77:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:32">/* add at the end of list */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:58"><expr pos:start="81:5" pos:end="81:57"><call pos:start="81:5" pos:end="81:57"><name pos:start="81:5" pos:end="81:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="81:23" pos:end="81:57">(<argument pos:start="81:24" pos:end="81:45"><expr pos:start="81:24" pos:end="81:45"><operator pos:start="81:24" pos:end="81:24">&amp;</operator><name pos:start="81:25" pos:end="81:45"><name pos:start="81:25" pos:end="81:36">savevm_state</name><operator pos:start="81:37" pos:end="81:37">.</operator><name pos:start="81:38" pos:end="81:45">handlers</name></name></expr></argument>, <argument pos:start="81:48" pos:end="81:49"><expr pos:start="81:48" pos:end="81:49"><name pos:start="81:48" pos:end="81:49">se</name></expr></argument>, <argument pos:start="81:52" pos:end="81:56"><expr pos:start="81:52" pos:end="81:56"><name pos:start="81:52" pos:end="81:56">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="83:5" pos:end="83:13">return <expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
