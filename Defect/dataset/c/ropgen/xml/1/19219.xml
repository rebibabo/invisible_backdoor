<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19219.c" pos:tabs="8"><function pos:start="1:1" pos:end="169:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">e1000e_pci_realize</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:40">PCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:49">pci_dev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:56">Error</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="169:1">{<block_content pos:start="5:5" pos:end="167:37">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:25"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:25">uint16_t</name></type> <name pos:start="5:27" pos:end="5:44">e1000e_pmrb_offset</name> <init pos:start="5:46" pos:end="5:52">= <expr pos:start="5:48" pos:end="5:52"><literal type="number" pos:start="5:48" pos:end="5:52">0x0C8</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:25"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:25">uint16_t</name></type> <name pos:start="7:27" pos:end="7:44">e1000e_pcie_offset</name> <init pos:start="7:46" pos:end="7:52">= <expr pos:start="7:48" pos:end="7:52"><literal type="number" pos:start="7:48" pos:end="7:52">0x0E0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:25"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:25">uint16_t</name></type> <name pos:start="9:27" pos:end="9:43">e1000e_aer_offset</name> <init pos:start="9:45" pos:end="9:52">=  <expr pos:start="9:48" pos:end="9:52"><literal type="number" pos:start="9:48" pos:end="9:52">0x100</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:25">uint16_t</name></type> <name pos:start="11:27" pos:end="11:43">e1000e_dsn_offset</name> <init pos:start="11:45" pos:end="11:52">=  <expr pos:start="11:48" pos:end="11:52"><literal type="number" pos:start="11:48" pos:end="11:52">0x140</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">E1000EState</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:18">s</name> <init pos:start="13:20" pos:end="13:36">= <expr pos:start="13:22" pos:end="13:36"><call pos:start="13:22" pos:end="13:36"><name pos:start="13:22" pos:end="13:27">E1000E</name><argument_list pos:start="13:28" pos:end="13:36">(<argument pos:start="13:29" pos:end="13:35"><expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:20">macaddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:34"><expr pos:start="21:5" pos:end="21:33"><call pos:start="21:5" pos:end="21:33"><name pos:start="21:5" pos:end="21:31">trace_e1000e_cb_pci_realize</name><argument_list pos:start="21:32" pos:end="21:33">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:11">pci_dev</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:25">config_write</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:47">e1000e_write_config</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:11">pci_dev</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:19">config</name><index pos:start="29:20" pos:end="29:40">[<expr pos:start="29:21" pos:end="29:39"><name pos:start="29:21" pos:end="29:39">PCI_CACHE_LINE_SIZE</name></expr>]</index></name> <operator pos:start="29:42" pos:end="29:42">=</operator> <literal type="number" pos:start="29:44" pos:end="29:47">0x10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:43"><expr pos:start="31:5" pos:end="31:42"><name pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:11">pci_dev</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:19">config</name><index pos:start="31:20" pos:end="31:38">[<expr pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:37">PCI_INTERRUPT_PIN</name></expr>]</index></name> <operator pos:start="31:40" pos:end="31:40">=</operator> <literal type="number" pos:start="31:42" pos:end="31:42">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:75"><expr pos:start="35:5" pos:end="35:74"><call pos:start="35:5" pos:end="35:74"><name pos:start="35:5" pos:end="35:16">pci_set_word</name><argument_list pos:start="35:17" pos:end="35:74">(<argument pos:start="35:18" pos:end="35:58"><expr pos:start="35:18" pos:end="35:58"><name pos:start="35:18" pos:end="35:32"><name pos:start="35:18" pos:end="35:24">pci_dev</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:32">config</name></name> <operator pos:start="35:34" pos:end="35:34">+</operator> <name pos:start="35:36" pos:end="35:58">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>, <argument pos:start="35:61" pos:end="35:73"><expr pos:start="35:61" pos:end="35:73"><name pos:start="35:61" pos:end="35:73"><name pos:start="35:61" pos:end="35:61">s</name><operator pos:start="35:62" pos:end="35:63">-&gt;</operator><name pos:start="35:64" pos:end="35:73">subsys_ven</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:64"><expr pos:start="37:5" pos:end="37:63"><call pos:start="37:5" pos:end="37:63"><name pos:start="37:5" pos:end="37:16">pci_set_word</name><argument_list pos:start="37:17" pos:end="37:63">(<argument pos:start="37:18" pos:end="37:51"><expr pos:start="37:18" pos:end="37:51"><name pos:start="37:18" pos:end="37:32"><name pos:start="37:18" pos:end="37:24">pci_dev</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:32">config</name></name> <operator pos:start="37:34" pos:end="37:34">+</operator> <name pos:start="37:36" pos:end="37:51">PCI_SUBSYSTEM_ID</name></expr></argument>, <argument pos:start="37:54" pos:end="37:62"><expr pos:start="37:54" pos:end="37:62"><name pos:start="37:54" pos:end="37:62"><name pos:start="37:54" pos:end="37:54">s</name><operator pos:start="37:55" pos:end="37:56">-&gt;</operator><name pos:start="37:57" pos:end="37:62">subsys</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:39"><expr pos:start="41:5" pos:end="41:38"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:22">subsys_ven_used</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:38"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:38">subsys_ven</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:18">subsys_used</name></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:22">s</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:30">subsys</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:32">/* Define IO/MMIO regions */</comment>

    <expr_stmt pos:start="49:5" pos:end="51:59"><expr pos:start="49:5" pos:end="51:58"><call pos:start="49:5" pos:end="51:58"><name pos:start="49:5" pos:end="49:25">memory_region_init_io</name><argument_list pos:start="49:26" pos:end="51:58">(<argument pos:start="49:27" pos:end="49:34"><expr pos:start="49:27" pos:end="49:34"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:34"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:34">mmio</name></name></expr></argument>, <argument pos:start="49:37" pos:end="49:45"><expr pos:start="49:37" pos:end="49:45"><call pos:start="49:37" pos:end="49:45"><name pos:start="49:37" pos:end="49:42">OBJECT</name><argument_list pos:start="49:43" pos:end="49:45">(<argument pos:start="49:44" pos:end="49:44"><expr pos:start="49:44" pos:end="49:44"><name pos:start="49:44" pos:end="49:44">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:48" pos:end="49:56"><expr pos:start="49:48" pos:end="49:56"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:56">mmio_ops</name></expr></argument>, <argument pos:start="49:59" pos:end="49:59"><expr pos:start="49:59" pos:end="49:59"><name pos:start="49:59" pos:end="49:59">s</name></expr></argument>,

                          <argument pos:start="51:27" pos:end="51:39"><expr pos:start="51:27" pos:end="51:39"><literal type="string" pos:start="51:27" pos:end="51:39">"e1000e-mmio"</literal></expr></argument>, <argument pos:start="51:42" pos:end="51:57"><expr pos:start="51:42" pos:end="51:57"><name pos:start="51:42" pos:end="51:57">E1000E_MMIO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="55:62"><expr pos:start="53:5" pos:end="55:61"><call pos:start="53:5" pos:end="55:61"><name pos:start="53:5" pos:end="53:20">pci_register_bar</name><argument_list pos:start="53:21" pos:end="55:61">(<argument pos:start="53:22" pos:end="53:28"><expr pos:start="53:22" pos:end="53:28"><name pos:start="53:22" pos:end="53:28">pci_dev</name></expr></argument>, <argument pos:start="53:31" pos:end="53:45"><expr pos:start="53:31" pos:end="53:45"><name pos:start="53:31" pos:end="53:45">E1000E_MMIO_IDX</name></expr></argument>,

                     <argument pos:start="55:22" pos:end="55:50"><expr pos:start="55:22" pos:end="55:50"><name pos:start="55:22" pos:end="55:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="55:53" pos:end="55:60"><expr pos:start="55:53" pos:end="55:60"><operator pos:start="55:53" pos:end="55:53">&amp;</operator><name pos:start="55:54" pos:end="55:60"><name pos:start="55:54" pos:end="55:54">s</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:60">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="65:7">/*

     * We provide a dummy implementation for the flash BAR

     * for drivers that may theoretically probe for its presence.

     */</comment>

    <expr_stmt pos:start="67:5" pos:end="69:58"><expr pos:start="67:5" pos:end="69:57"><call pos:start="67:5" pos:end="69:57"><name pos:start="67:5" pos:end="67:22">memory_region_init</name><argument_list pos:start="67:23" pos:end="69:57">(<argument pos:start="67:24" pos:end="67:32"><expr pos:start="67:24" pos:end="67:32"><operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:25">s</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:32">flash</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:43"><expr pos:start="67:35" pos:end="67:43"><call pos:start="67:35" pos:end="67:43"><name pos:start="67:35" pos:end="67:40">OBJECT</name><argument_list pos:start="67:41" pos:end="67:43">(<argument pos:start="67:42" pos:end="67:42"><expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">s</name></expr></argument>)</argument_list></call></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:37"><expr pos:start="69:24" pos:end="69:37"><literal type="string" pos:start="69:24" pos:end="69:37">"e1000e-flash"</literal></expr></argument>, <argument pos:start="69:40" pos:end="69:56"><expr pos:start="69:40" pos:end="69:56"><name pos:start="69:40" pos:end="69:56">E1000E_FLASH_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="73:63"><expr pos:start="71:5" pos:end="73:62"><call pos:start="71:5" pos:end="73:62"><name pos:start="71:5" pos:end="71:20">pci_register_bar</name><argument_list pos:start="71:21" pos:end="73:62">(<argument pos:start="71:22" pos:end="71:28"><expr pos:start="71:22" pos:end="71:28"><name pos:start="71:22" pos:end="71:28">pci_dev</name></expr></argument>, <argument pos:start="71:31" pos:end="71:46"><expr pos:start="71:31" pos:end="71:46"><name pos:start="71:31" pos:end="71:46">E1000E_FLASH_IDX</name></expr></argument>,

                     <argument pos:start="73:22" pos:end="73:50"><expr pos:start="73:22" pos:end="73:50"><name pos:start="73:22" pos:end="73:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="73:53" pos:end="73:61"><expr pos:start="73:53" pos:end="73:61"><operator pos:start="73:53" pos:end="73:53">&amp;</operator><name pos:start="73:54" pos:end="73:61"><name pos:start="73:54" pos:end="73:54">s</name><operator pos:start="73:55" pos:end="73:56">-&gt;</operator><name pos:start="73:57" pos:end="73:61">flash</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:55"><expr pos:start="77:5" pos:end="79:54"><call pos:start="77:5" pos:end="79:54"><name pos:start="77:5" pos:end="77:25">memory_region_init_io</name><argument_list pos:start="77:26" pos:end="79:54">(<argument pos:start="77:27" pos:end="77:32"><expr pos:start="77:27" pos:end="77:32"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:32"><name pos:start="77:28" pos:end="77:28">s</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:32">io</name></name></expr></argument>, <argument pos:start="77:35" pos:end="77:43"><expr pos:start="77:35" pos:end="77:43"><call pos:start="77:35" pos:end="77:43"><name pos:start="77:35" pos:end="77:40">OBJECT</name><argument_list pos:start="77:41" pos:end="77:43">(<argument pos:start="77:42" pos:end="77:42"><expr pos:start="77:42" pos:end="77:42"><name pos:start="77:42" pos:end="77:42">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:46" pos:end="77:52"><expr pos:start="77:46" pos:end="77:52"><operator pos:start="77:46" pos:end="77:46">&amp;</operator><name pos:start="77:47" pos:end="77:52">io_ops</name></expr></argument>, <argument pos:start="77:55" pos:end="77:55"><expr pos:start="77:55" pos:end="77:55"><name pos:start="77:55" pos:end="77:55">s</name></expr></argument>,

                          <argument pos:start="79:27" pos:end="79:37"><expr pos:start="79:27" pos:end="79:37"><literal type="string" pos:start="79:27" pos:end="79:37">"e1000e-io"</literal></expr></argument>, <argument pos:start="79:40" pos:end="79:53"><expr pos:start="79:40" pos:end="79:53"><name pos:start="79:40" pos:end="79:53">E1000E_IO_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="83:56"><expr pos:start="81:5" pos:end="83:55"><call pos:start="81:5" pos:end="83:55"><name pos:start="81:5" pos:end="81:20">pci_register_bar</name><argument_list pos:start="81:21" pos:end="83:55">(<argument pos:start="81:22" pos:end="81:28"><expr pos:start="81:22" pos:end="81:28"><name pos:start="81:22" pos:end="81:28">pci_dev</name></expr></argument>, <argument pos:start="81:31" pos:end="81:43"><expr pos:start="81:31" pos:end="81:43"><name pos:start="81:31" pos:end="81:43">E1000E_IO_IDX</name></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:46"><expr pos:start="83:22" pos:end="83:46"><name pos:start="83:22" pos:end="83:46">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="83:49" pos:end="83:54"><expr pos:start="83:49" pos:end="83:54"><operator pos:start="83:49" pos:end="83:49">&amp;</operator><name pos:start="83:50" pos:end="83:54"><name pos:start="83:50" pos:end="83:50">s</name><operator pos:start="83:51" pos:end="83:52">-&gt;</operator><name pos:start="83:53" pos:end="83:54">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="89:41"><expr pos:start="87:5" pos:end="89:40"><call pos:start="87:5" pos:end="89:40"><name pos:start="87:5" pos:end="87:22">memory_region_init</name><argument_list pos:start="87:23" pos:end="89:40">(<argument pos:start="87:24" pos:end="87:31"><expr pos:start="87:24" pos:end="87:31"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:25">s</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:31">msix</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:42"><expr pos:start="87:34" pos:end="87:42"><call pos:start="87:34" pos:end="87:42"><name pos:start="87:34" pos:end="87:39">OBJECT</name><argument_list pos:start="87:40" pos:end="87:42">(<argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><name pos:start="87:41" pos:end="87:41">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:45" pos:end="87:57"><expr pos:start="87:45" pos:end="87:57"><literal type="string" pos:start="87:45" pos:end="87:57">"e1000e-msix"</literal></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:39"><expr pos:start="89:24" pos:end="89:39"><name pos:start="89:24" pos:end="89:39">E1000E_MSIX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:62"><expr pos:start="91:5" pos:end="93:61"><call pos:start="91:5" pos:end="93:61"><name pos:start="91:5" pos:end="91:20">pci_register_bar</name><argument_list pos:start="91:21" pos:end="93:61">(<argument pos:start="91:22" pos:end="91:28"><expr pos:start="91:22" pos:end="91:28"><name pos:start="91:22" pos:end="91:28">pci_dev</name></expr></argument>, <argument pos:start="91:31" pos:end="91:45"><expr pos:start="91:31" pos:end="91:45"><name pos:start="91:31" pos:end="91:45">E1000E_MSIX_IDX</name></expr></argument>,

                     <argument pos:start="93:22" pos:end="93:50"><expr pos:start="93:22" pos:end="93:50"><name pos:start="93:22" pos:end="93:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="93:53" pos:end="93:60"><expr pos:start="93:53" pos:end="93:60"><operator pos:start="93:53" pos:end="93:53">&amp;</operator><name pos:start="93:54" pos:end="93:60"><name pos:start="93:54" pos:end="93:54">s</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:60">msix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:35">/* Create networking backend */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:52"><expr pos:start="99:5" pos:end="99:51"><call pos:start="99:5" pos:end="99:51"><name pos:start="99:5" pos:end="99:33">qemu_macaddr_default_if_unset</name><argument_list pos:start="99:34" pos:end="99:51">(<argument pos:start="99:35" pos:end="99:50"><expr pos:start="99:35" pos:end="99:50"><operator pos:start="99:35" pos:end="99:35">&amp;</operator><name pos:start="99:36" pos:end="99:50"><name pos:start="99:36" pos:end="99:36">s</name><operator pos:start="99:37" pos:end="99:38">-&gt;</operator><name pos:start="99:39" pos:end="99:42">conf</name><operator pos:start="99:43" pos:end="99:43">.</operator><name pos:start="99:44" pos:end="99:50">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:32"><expr pos:start="101:5" pos:end="101:31"><name pos:start="101:5" pos:end="101:11">macaddr</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:31"><name pos:start="101:15" pos:end="101:15">s</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:21">conf</name><operator pos:start="101:22" pos:end="101:22">.</operator><name pos:start="101:23" pos:end="101:29">macaddr</name><operator pos:start="101:30" pos:end="101:30">.</operator><name pos:start="101:31" pos:end="101:31">a</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:24"><expr pos:start="105:5" pos:end="105:23"><call pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:20">e1000e_init_msix</name><argument_list pos:start="105:21" pos:end="105:23">(<argument pos:start="105:22" pos:end="105:22"><expr pos:start="105:22" pos:end="105:22"><name pos:start="105:22" pos:end="105:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:67">(<expr pos:start="109:9" pos:end="109:66"><call pos:start="109:9" pos:end="109:62"><name pos:start="109:9" pos:end="109:33">pcie_endpoint_cap_v1_init</name><argument_list pos:start="109:34" pos:end="109:62">(<argument pos:start="109:35" pos:end="109:41"><expr pos:start="109:35" pos:end="109:41"><name pos:start="109:35" pos:end="109:41">pci_dev</name></expr></argument>, <argument pos:start="109:44" pos:end="109:61"><expr pos:start="109:44" pos:end="109:61"><name pos:start="109:44" pos:end="109:61">e1000e_pcie_offset</name></expr></argument>)</argument_list></call> <operator pos:start="109:64" pos:end="109:64">&lt;</operator> <literal type="number" pos:start="109:66" pos:end="109:66">0</literal></expr>)</condition> <block pos:start="109:69" pos:end="113:5">{<block_content pos:start="111:9" pos:end="111:57">

        <expr_stmt pos:start="111:9" pos:end="111:57"><expr pos:start="111:9" pos:end="111:56"><call pos:start="111:9" pos:end="111:56"><name pos:start="111:9" pos:end="111:16">hw_error</name><argument_list pos:start="111:17" pos:end="111:56">(<argument pos:start="111:18" pos:end="111:55"><expr pos:start="111:18" pos:end="111:55"><literal type="string" pos:start="111:18" pos:end="111:55">"Failed to initialize PCIe capability"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:62"><expr pos:start="117:5" pos:end="117:61"><name pos:start="117:5" pos:end="117:7">ret</name> <operator pos:start="117:9" pos:end="117:9">=</operator> <call pos:start="117:11" pos:end="117:61"><name pos:start="117:11" pos:end="117:18">msi_init</name><argument_list pos:start="117:19" pos:end="117:61">(<argument pos:start="117:20" pos:end="117:32"><expr pos:start="117:20" pos:end="117:32"><call pos:start="117:20" pos:end="117:32"><name pos:start="117:20" pos:end="117:29">PCI_DEVICE</name><argument_list pos:start="117:30" pos:end="117:32">(<argument pos:start="117:31" pos:end="117:31"><expr pos:start="117:31" pos:end="117:31"><name pos:start="117:31" pos:end="117:31">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:35" pos:end="117:38"><expr pos:start="117:35" pos:end="117:38"><literal type="number" pos:start="117:35" pos:end="117:38">0xD0</literal></expr></argument>, <argument pos:start="117:41" pos:end="117:41"><expr pos:start="117:41" pos:end="117:41"><literal type="number" pos:start="117:41" pos:end="117:41">1</literal></expr></argument>, <argument pos:start="117:44" pos:end="117:47"><expr pos:start="117:44" pos:end="117:47"><name pos:start="117:44" pos:end="117:47">true</name></expr></argument>, <argument pos:start="117:50" pos:end="117:54"><expr pos:start="117:50" pos:end="117:54"><name pos:start="117:50" pos:end="117:54">false</name></expr></argument>, <argument pos:start="117:57" pos:end="117:60"><expr pos:start="117:57" pos:end="117:60"><name pos:start="117:57" pos:end="117:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:12">(<expr pos:start="119:9" pos:end="119:11"><name pos:start="119:9" pos:end="119:11">ret</name></expr>)</condition> <block pos:start="119:14" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:40">

        <expr_stmt pos:start="121:9" pos:end="121:40"><expr pos:start="121:9" pos:end="121:39"><call pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:34">trace_e1000e_msi_init_fail</name><argument_list pos:start="121:35" pos:end="121:39">(<argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><name pos:start="121:36" pos:end="121:38">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="129:54">(<expr pos:start="127:9" pos:end="129:53"><call pos:start="127:9" pos:end="129:49"><name pos:start="127:9" pos:end="127:32">e1000e_add_pm_capability</name><argument_list pos:start="127:33" pos:end="129:49">(<argument pos:start="127:34" pos:end="127:40"><expr pos:start="127:34" pos:end="127:40"><name pos:start="127:34" pos:end="127:40">pci_dev</name></expr></argument>, <argument pos:start="127:43" pos:end="127:60"><expr pos:start="127:43" pos:end="127:60"><name pos:start="127:43" pos:end="127:60">e1000e_pmrb_offset</name></expr></argument>,

                                  <argument pos:start="129:35" pos:end="129:48"><expr pos:start="129:35" pos:end="129:48"><name pos:start="129:35" pos:end="129:48">PCI_PM_CAP_DSI</name></expr></argument>)</argument_list></call> <operator pos:start="129:51" pos:end="129:51">&lt;</operator> <literal type="number" pos:start="129:53" pos:end="129:53">0</literal></expr>)</condition> <block pos:start="129:56" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:55">

        <expr_stmt pos:start="131:9" pos:end="131:55"><expr pos:start="131:9" pos:end="131:54"><call pos:start="131:9" pos:end="131:54"><name pos:start="131:9" pos:end="131:16">hw_error</name><argument_list pos:start="131:17" pos:end="131:54">(<argument pos:start="131:18" pos:end="131:53"><expr pos:start="131:18" pos:end="131:53"><literal type="string" pos:start="131:18" pos:end="131:53">"Failed to initialize PM capability"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="141:5"><if pos:start="137:5" pos:end="141:5">if <condition pos:start="137:8" pos:end="137:70">(<expr pos:start="137:9" pos:end="137:69"><call pos:start="137:9" pos:end="137:65"><name pos:start="137:9" pos:end="137:21">pcie_aer_init</name><argument_list pos:start="137:22" pos:end="137:65">(<argument pos:start="137:23" pos:end="137:29"><expr pos:start="137:23" pos:end="137:29"><name pos:start="137:23" pos:end="137:29">pci_dev</name></expr></argument>, <argument pos:start="137:32" pos:end="137:48"><expr pos:start="137:32" pos:end="137:48"><name pos:start="137:32" pos:end="137:48">e1000e_aer_offset</name></expr></argument>, <argument pos:start="137:51" pos:end="137:64"><expr pos:start="137:51" pos:end="137:64"><name pos:start="137:51" pos:end="137:64">PCI_ERR_SIZEOF</name></expr></argument>)</argument_list></call> <operator pos:start="137:67" pos:end="137:67">&lt;</operator> <literal type="number" pos:start="137:69" pos:end="137:69">0</literal></expr>)</condition> <block pos:start="137:72" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:56">

        <expr_stmt pos:start="139:9" pos:end="139:56"><expr pos:start="139:9" pos:end="139:55"><call pos:start="139:9" pos:end="139:55"><name pos:start="139:9" pos:end="139:16">hw_error</name><argument_list pos:start="139:17" pos:end="139:55">(<argument pos:start="139:18" pos:end="139:54"><expr pos:start="139:18" pos:end="139:54"><literal type="string" pos:start="139:18" pos:end="139:54">"Failed to initialize AER capability"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="147:51"><expr pos:start="145:5" pos:end="147:50"><call pos:start="145:5" pos:end="147:50"><name pos:start="145:5" pos:end="145:25">pcie_dev_ser_num_init</name><argument_list pos:start="145:26" pos:end="147:50">(<argument pos:start="145:27" pos:end="145:33"><expr pos:start="145:27" pos:end="145:33"><name pos:start="145:27" pos:end="145:33">pci_dev</name></expr></argument>, <argument pos:start="145:36" pos:end="145:52"><expr pos:start="145:36" pos:end="145:52"><name pos:start="145:36" pos:end="145:52">e1000e_dsn_offset</name></expr></argument>,

                          <argument pos:start="147:27" pos:end="147:49"><expr pos:start="147:27" pos:end="147:49"><call pos:start="147:27" pos:end="147:49"><name pos:start="147:27" pos:end="147:40">e1000e_gen_dsn</name><argument_list pos:start="147:41" pos:end="147:49">(<argument pos:start="147:42" pos:end="147:48"><expr pos:start="147:42" pos:end="147:48"><name pos:start="147:42" pos:end="147:48">macaddr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:46"><expr pos:start="151:5" pos:end="151:45"><call pos:start="151:5" pos:end="151:45"><name pos:start="151:5" pos:end="151:24">e1000e_init_net_peer</name><argument_list pos:start="151:25" pos:end="151:45">(<argument pos:start="151:26" pos:end="151:26"><expr pos:start="151:26" pos:end="151:26"><name pos:start="151:26" pos:end="151:26">s</name></expr></argument>, <argument pos:start="151:29" pos:end="151:35"><expr pos:start="151:29" pos:end="151:35"><name pos:start="151:29" pos:end="151:35">pci_dev</name></expr></argument>, <argument pos:start="151:38" pos:end="151:44"><expr pos:start="151:38" pos:end="151:44"><name pos:start="151:38" pos:end="151:44">macaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:25">/* Initialize core */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:27"><expr pos:start="157:5" pos:end="157:26"><call pos:start="157:5" pos:end="157:26"><name pos:start="157:5" pos:end="157:23">e1000e_core_realize</name><argument_list pos:start="157:24" pos:end="157:26">(<argument pos:start="157:25" pos:end="157:25"><expr pos:start="157:25" pos:end="157:25"><name pos:start="157:25" pos:end="157:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="167:37"><expr pos:start="161:5" pos:end="167:36"><call pos:start="161:5" pos:end="167:36"><name pos:start="161:5" pos:end="161:27">e1000e_core_pci_realize</name><argument_list pos:start="161:28" pos:end="167:36">(<argument pos:start="161:29" pos:end="161:36"><expr pos:start="161:29" pos:end="161:36"><operator pos:start="161:29" pos:end="161:29">&amp;</operator><name pos:start="161:30" pos:end="161:36"><name pos:start="161:30" pos:end="161:30">s</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:36">core</name></name></expr></argument>,

                            <argument pos:start="163:29" pos:end="163:50"><expr pos:start="163:29" pos:end="163:50"><name pos:start="163:29" pos:end="163:50">e1000e_eeprom_template</name></expr></argument>,

                            <argument pos:start="165:29" pos:end="165:58"><expr pos:start="165:29" pos:end="165:58"><sizeof pos:start="165:29" pos:end="165:58">sizeof<argument_list pos:start="165:35" pos:end="165:58">(<argument pos:start="165:36" pos:end="165:57"><expr pos:start="165:36" pos:end="165:57"><name pos:start="165:36" pos:end="165:57">e1000e_eeprom_template</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                            <argument pos:start="167:29" pos:end="167:35"><expr pos:start="167:29" pos:end="167:35"><name pos:start="167:29" pos:end="167:35">macaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
