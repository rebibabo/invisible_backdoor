<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23479.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">migration_completion</name><parameter_list pos:start="1:33" pos:end="5:53">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:47">MigrationState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:76"><decl pos:start="1:53" pos:end="1:76"><type pos:start="1:53" pos:end="1:76"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:76">current_active_state</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:53"><decl pos:start="3:34" pos:end="3:53"><type pos:start="3:34" pos:end="3:53"><name pos:start="3:34" pos:end="3:37">bool</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:53">old_vm_running</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:52"><decl pos:start="5:34" pos:end="5:52"><type pos:start="5:34" pos:end="5:52"><name pos:start="5:34" pos:end="5:40">int64_t</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:52">start_time</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="129:1">{<block_content pos:start="9:5" pos:end="127:47">

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="67:5"><if pos:start="13:5" pos:end="57:5">if <condition pos:start="13:8" pos:end="13:44">(<expr pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:16">state</name></name> <operator pos:start="13:18" pos:end="13:19">==</operator> <name pos:start="13:21" pos:end="13:43">MIGRATION_STATUS_ACTIVE</name></expr>)</condition> <block pos:start="13:46" pos:end="57:5">{<block_content pos:start="15:9" pos:end="55:9">

        <expr_stmt pos:start="15:9" pos:end="15:35"><expr pos:start="15:9" pos:end="15:34"><call pos:start="15:9" pos:end="15:34"><name pos:start="15:9" pos:end="15:32">qemu_mutex_lock_iothread</name><argument_list pos:start="15:33" pos:end="15:34">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:61"><expr pos:start="17:9" pos:end="17:60"><operator pos:start="17:9" pos:end="17:9">*</operator><name pos:start="17:10" pos:end="17:19">start_time</name> <operator pos:start="17:21" pos:end="17:21">=</operator> <call pos:start="17:23" pos:end="17:60"><name pos:start="17:23" pos:end="17:39">qemu_clock_get_ms</name><argument_list pos:start="17:40" pos:end="17:60">(<argument pos:start="17:41" pos:end="17:59"><expr pos:start="17:41" pos:end="17:59"><name pos:start="17:41" pos:end="17:59">QEMU_CLOCK_REALTIME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><call pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:34">qemu_system_wakeup_request</name><argument_list pos:start="19:35" pos:end="19:60">(<argument pos:start="19:36" pos:end="19:59"><expr pos:start="19:36" pos:end="19:59"><name pos:start="19:36" pos:end="19:59">QEMU_WAKEUP_REASON_OTHER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:48"><expr pos:start="21:9" pos:end="21:47"><operator pos:start="21:9" pos:end="21:9">*</operator><name pos:start="21:10" pos:end="21:23">old_vm_running</name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:47"><name pos:start="21:27" pos:end="21:45">runstate_is_running</name><argument_list pos:start="21:46" pos:end="21:47">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:35"><expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:34"><name pos:start="23:15" pos:end="23:32">global_state_store</name><argument_list pos:start="23:33" pos:end="23:34">()</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="27:9" pos:end="45:9"><if pos:start="27:9" pos:end="45:9">if <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:16">ret</name></expr>)</condition> <block pos:start="27:19" pos:end="45:9">{<block_content pos:start="29:13" pos:end="43:13">

            <expr_stmt pos:start="29:13" pos:end="29:64"><expr pos:start="29:13" pos:end="29:63"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:63"><name pos:start="29:19" pos:end="29:37">vm_stop_force_state</name><argument_list pos:start="29:38" pos:end="29:63">(<argument pos:start="29:39" pos:end="29:62"><expr pos:start="29:39" pos:end="29:62"><name pos:start="29:39" pos:end="29:62">RUN_STATE_FINISH_MIGRATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:25">(<expr pos:start="31:17" pos:end="31:24"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:22">&gt;=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr>)</condition> <block pos:start="31:27" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:44">

                <expr_stmt pos:start="33:17" pos:end="33:44"><expr pos:start="33:17" pos:end="33:43"><name pos:start="33:17" pos:end="33:19">ret</name> <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:43"><name pos:start="33:23" pos:end="33:41">bdrv_inactivate_all</name><argument_list pos:start="33:42" pos:end="33:43">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="37:13" pos:end="43:13"><if pos:start="37:13" pos:end="43:13">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:19">ret</name> <operator pos:start="37:21" pos:end="37:22">&gt;=</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>)</condition> <block pos:start="37:27" pos:end="43:13">{<block_content pos:start="39:17" pos:end="41:74">

                <expr_stmt pos:start="39:17" pos:end="39:68"><expr pos:start="39:17" pos:end="39:67"><call pos:start="39:17" pos:end="39:67"><name pos:start="39:17" pos:end="39:40">qemu_file_set_rate_limit</name><argument_list pos:start="39:41" pos:end="39:67">(<argument pos:start="39:42" pos:end="39:55"><expr pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:55"><name pos:start="39:42" pos:end="39:42">s</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:55">to_dst_file</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:66"><expr pos:start="39:58" pos:end="39:66"><name pos:start="39:58" pos:end="39:66">INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:74"><expr pos:start="41:17" pos:end="41:73"><call pos:start="41:17" pos:end="41:73"><name pos:start="41:17" pos:end="41:50">qemu_savevm_state_complete_precopy</name><argument_list pos:start="41:51" pos:end="41:73">(<argument pos:start="41:52" pos:end="41:65"><expr pos:start="41:52" pos:end="41:65"><name pos:start="41:52" pos:end="41:65"><name pos:start="41:52" pos:end="41:52">s</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:65">to_dst_file</name></name></expr></argument>, <argument pos:start="41:68" pos:end="41:72"><expr pos:start="41:68" pos:end="41:72"><name pos:start="41:68" pos:end="41:72">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:34">qemu_mutex_unlock_iothread</name><argument_list pos:start="47:35" pos:end="47:36">()</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:20">(<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:15">ret</name> <operator pos:start="51:17" pos:end="51:17">&lt;</operator> <literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>)</condition> <block pos:start="51:22" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:22">

            <goto pos:start="53:13" pos:end="53:22">goto <name pos:start="53:18" pos:end="53:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="57:7" pos:end="67:5">else if <condition pos:start="57:15" pos:end="57:60">(<expr pos:start="57:16" pos:end="57:59"><name pos:start="57:16" pos:end="57:23"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">state</name></name> <operator pos:start="57:25" pos:end="57:26">==</operator> <name pos:start="57:28" pos:end="57:59">MIGRATION_STATUS_POSTCOPY_ACTIVE</name></expr>)</condition> <block pos:start="57:62" pos:end="67:5">{<block_content pos:start="59:9" pos:end="65:65">

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><call pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:47">trace_migration_completion_postcopy_end</name><argument_list pos:start="59:48" pos:end="59:49">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:60"><expr pos:start="63:9" pos:end="63:59"><call pos:start="63:9" pos:end="63:59"><name pos:start="63:9" pos:end="63:43">qemu_savevm_state_complete_postcopy</name><argument_list pos:start="63:44" pos:end="63:59">(<argument pos:start="63:45" pos:end="63:58"><expr pos:start="63:45" pos:end="63:58"><name pos:start="63:45" pos:end="63:58"><name pos:start="63:45" pos:end="63:45">s</name><operator pos:start="63:46" pos:end="63:47">-&gt;</operator><name pos:start="63:48" pos:end="63:58">to_dst_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:65"><expr pos:start="65:9" pos:end="65:64"><call pos:start="65:9" pos:end="65:64"><name pos:start="65:9" pos:end="65:62">trace_migration_completion_postcopy_end_after_complete</name><argument_list pos:start="65:63" pos:end="65:64">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="71:5" pos:end="83:7">/*

     * If rp was opened we must clean up the thread before

     * cleaning everything else up (since if there are no failures

     * it will wait for the destination to send it's status in

     * a SHUT command).

     * Postcopy opens rp if enabled (even if it's not avtivated)

     */</comment>

    <if_stmt pos:start="85:5" pos:end="101:5"><if pos:start="85:5" pos:end="101:5">if <condition pos:start="85:8" pos:end="85:31">(<expr pos:start="85:9" pos:end="85:30"><call pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:28">migrate_postcopy_ram</name><argument_list pos:start="85:29" pos:end="85:30">()</argument_list></call></expr>)</condition> <block pos:start="85:33" pos:end="101:5">{<block_content pos:start="87:9" pos:end="99:9">

        <decl_stmt pos:start="87:9" pos:end="87:21"><decl pos:start="87:9" pos:end="87:20"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:20">rp_error</name></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:60"><expr pos:start="89:9" pos:end="89:59"><call pos:start="89:9" pos:end="89:59"><name pos:start="89:9" pos:end="89:57">trace_migration_completion_postcopy_end_before_rp</name><argument_list pos:start="89:58" pos:end="89:59">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:56"><expr pos:start="91:9" pos:end="91:55"><name pos:start="91:9" pos:end="91:16">rp_error</name> <operator pos:start="91:18" pos:end="91:18">=</operator> <call pos:start="91:20" pos:end="91:55"><name pos:start="91:20" pos:end="91:52">await_return_path_close_on_source</name><argument_list pos:start="91:53" pos:end="91:55">(<argument pos:start="91:54" pos:end="91:54"><expr pos:start="91:54" pos:end="91:54"><name pos:start="91:54" pos:end="91:54">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:67"><expr pos:start="93:9" pos:end="93:66"><call pos:start="93:9" pos:end="93:66"><name pos:start="93:9" pos:end="93:56">trace_migration_completion_postcopy_end_after_rp</name><argument_list pos:start="93:57" pos:end="93:66">(<argument pos:start="93:58" pos:end="93:65"><expr pos:start="93:58" pos:end="93:65"><name pos:start="93:58" pos:end="93:65">rp_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="99:9"><if pos:start="95:9" pos:end="99:9">if <condition pos:start="95:12" pos:end="95:21">(<expr pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:20">rp_error</name></expr>)</condition> <block pos:start="95:23" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:22">

            <goto pos:start="97:13" pos:end="97:22">goto <name pos:start="97:18" pos:end="97:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:44">(<expr pos:start="105:9" pos:end="105:43"><call pos:start="105:9" pos:end="105:43"><name pos:start="105:9" pos:end="105:27">qemu_file_get_error</name><argument_list pos:start="105:28" pos:end="105:43">(<argument pos:start="105:29" pos:end="105:42"><expr pos:start="105:29" pos:end="105:42"><name pos:start="105:29" pos:end="105:42"><name pos:start="105:29" pos:end="105:29">s</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:42">to_dst_file</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:46" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:18">

        <expr_stmt pos:start="107:9" pos:end="107:46"><expr pos:start="107:9" pos:end="107:45"><call pos:start="107:9" pos:end="107:45"><name pos:start="107:9" pos:end="107:43">trace_migration_completion_file_err</name><argument_list pos:start="107:44" pos:end="107:45">()</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="109:9" pos:end="109:18">goto <name pos:start="109:14" pos:end="109:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="117:50"><expr pos:start="115:5" pos:end="117:49"><call pos:start="115:5" pos:end="117:49"><name pos:start="115:5" pos:end="115:21">migrate_set_state</name><argument_list pos:start="115:22" pos:end="117:49">(<argument pos:start="115:23" pos:end="115:31"><expr pos:start="115:23" pos:end="115:31"><operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:31"><name pos:start="115:24" pos:end="115:24">s</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:31">state</name></name></expr></argument>, <argument pos:start="115:34" pos:end="115:53"><expr pos:start="115:34" pos:end="115:53"><name pos:start="115:34" pos:end="115:53">current_active_state</name></expr></argument>,

                      <argument pos:start="117:23" pos:end="117:48"><expr pos:start="117:23" pos:end="117:48"><name pos:start="117:23" pos:end="117:48">MIGRATION_STATUS_COMPLETED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:11">return;</return>



<label pos:start="123:1" pos:end="123:5"><name pos:start="123:1" pos:end="123:4">fail</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="127:47"><expr pos:start="125:5" pos:end="127:46"><call pos:start="125:5" pos:end="127:46"><name pos:start="125:5" pos:end="125:21">migrate_set_state</name><argument_list pos:start="125:22" pos:end="127:46">(<argument pos:start="125:23" pos:end="125:31"><expr pos:start="125:23" pos:end="125:31"><operator pos:start="125:23" pos:end="125:23">&amp;</operator><name pos:start="125:24" pos:end="125:31"><name pos:start="125:24" pos:end="125:24">s</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:31">state</name></name></expr></argument>, <argument pos:start="125:34" pos:end="125:53"><expr pos:start="125:34" pos:end="125:53"><name pos:start="125:34" pos:end="125:53">current_active_state</name></expr></argument>,

                      <argument pos:start="127:23" pos:end="127:45"><expr pos:start="127:23" pos:end="127:45"><name pos:start="127:23" pos:end="127:45">MIGRATION_STATUS_FAILED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
