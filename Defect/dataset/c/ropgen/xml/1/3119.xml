<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3119.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">seg_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:1">{<block_content pos:start="5:5" pos:end="249:15">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">SegmentContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">seg</name> <init pos:start="5:25" pos:end="5:38">= <expr pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:38"><name pos:start="5:27" pos:end="5:27">s</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:27"><expr pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:7">seg</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:22">segment_count</name></name> <operator pos:start="13:24" pos:end="13:24">=</operator> <literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:43"><if pos:start="15:5" pos:end="17:43">if <condition pos:start="15:8" pos:end="15:35">(<expr pos:start="15:9" pos:end="15:34"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:34"><name pos:start="15:10" pos:end="15:12">seg</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:34">write_header_trailer</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:43"><block_content pos:start="17:9" pos:end="17:43">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:11">seg</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:38">individual_header_trailer</name></name> <operator pos:start="17:40" pos:end="17:40">=</operator> <literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:40">(<expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:11">seg</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:21">time_str</name></name> <operator pos:start="21:23" pos:end="21:24">&amp;&amp;</operator> <name pos:start="21:26" pos:end="21:39"><name pos:start="21:26" pos:end="21:28">seg</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:39">times_str</name></name></expr>)</condition> <block pos:start="21:42" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:31">

        <expr_stmt pos:start="23:9" pos:end="25:107"><expr pos:start="23:9" pos:end="25:106"><call pos:start="23:9" pos:end="25:106"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="25:106">(<argument pos:start="23:16" pos:end="23:16"><expr pos:start="23:16" pos:end="23:16"><name pos:start="23:16" pos:end="23:16">s</name></expr></argument>, <argument pos:start="23:19" pos:end="23:30"><expr pos:start="23:19" pos:end="23:30"><name pos:start="23:19" pos:end="23:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="25:16" pos:end="25:105"><expr pos:start="25:16" pos:end="25:105"><literal type="string" pos:start="25:16" pos:end="25:105">"segment_time and segment_times options are mutually exclusive, select just one of them\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:69">(<expr pos:start="33:9" pos:end="33:68"><operator pos:start="33:9" pos:end="33:9">(</operator><name pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:12">seg</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:24">list_flags</name></name> <operator pos:start="33:26" pos:end="33:26">&amp;</operator> <name pos:start="33:28" pos:end="33:49">SEGMENT_LIST_FLAG_LIVE</name><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:53">&amp;&amp;</operator> <name pos:start="33:55" pos:end="33:68"><name pos:start="33:55" pos:end="33:57">seg</name><operator pos:start="33:58" pos:end="33:59">-&gt;</operator><name pos:start="33:60" pos:end="33:68">times_str</name></name></expr>)</condition> <block pos:start="33:71" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:31">

        <expr_stmt pos:start="35:9" pos:end="39:75"><expr pos:start="35:9" pos:end="39:74"><call pos:start="35:9" pos:end="39:74"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="39:74">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">s</name></expr></argument>, <argument pos:start="35:19" pos:end="35:30"><expr pos:start="35:19" pos:end="35:30"><name pos:start="35:19" pos:end="35:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="39:73"><expr pos:start="37:16" pos:end="39:73"><literal type="string" pos:start="37:16" pos:end="37:86">"segment_flags +live and segment_times options are mutually exclusive:"</literal>

               <literal type="string" pos:start="39:16" pos:end="39:73">"specify -segment_time if you want a live-friendly list\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="73:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:23">(<expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:11">seg</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:22">times_str</name></name></expr>)</condition> <block pos:start="47:25" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:23">

        <if_stmt pos:start="49:9" pos:end="51:23"><if pos:start="49:9" pos:end="51:23">if <condition pos:start="49:12" pos:end="49:84">(<expr pos:start="49:13" pos:end="49:83"><operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:16">ret</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:78"><name pos:start="49:20" pos:end="49:30">parse_times</name><argument_list pos:start="49:31" pos:end="49:78">(<argument pos:start="49:32" pos:end="49:32"><expr pos:start="49:32" pos:end="49:32"><name pos:start="49:32" pos:end="49:32">s</name></expr></argument>, <argument pos:start="49:35" pos:end="49:45"><expr pos:start="49:35" pos:end="49:45"><operator pos:start="49:35" pos:end="49:35">&amp;</operator><name pos:start="49:36" pos:end="49:45"><name pos:start="49:36" pos:end="49:38">seg</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:45">times</name></name></expr></argument>, <argument pos:start="49:48" pos:end="49:61"><expr pos:start="49:48" pos:end="49:61"><operator pos:start="49:48" pos:end="49:48">&amp;</operator><name pos:start="49:49" pos:end="49:61"><name pos:start="49:49" pos:end="49:51">seg</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:61">nb_times</name></name></expr></argument>, <argument pos:start="49:64" pos:end="49:77"><expr pos:start="49:64" pos:end="49:77"><name pos:start="49:64" pos:end="49:77"><name pos:start="49:64" pos:end="49:66">seg</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:77">times_str</name></name></expr></argument>)</argument_list></call><operator pos:start="49:79" pos:end="49:79">)</operator> <operator pos:start="49:81" pos:end="49:81">&lt;</operator> <literal type="number" pos:start="49:83" pos:end="49:83">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:23"><block_content pos:start="51:13" pos:end="51:23">

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="73:5">else <block pos:start="53:12" pos:end="73:5">{<block_content pos:start="57:9" pos:end="71:9">

        <comment type="block" pos:start="55:9" pos:end="55:48">/* set default value if not specified */</comment>

        <if_stmt pos:start="57:9" pos:end="59:43"><if pos:start="57:9" pos:end="59:43">if <condition pos:start="57:12" pos:end="57:27">(<expr pos:start="57:13" pos:end="57:26"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:26"><name pos:start="57:14" pos:end="57:16">seg</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:26">time_str</name></name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:43"><block_content pos:start="59:13" pos:end="59:43">

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">seg</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:25">time_str</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:42"><name pos:start="59:29" pos:end="59:37">av_strdup</name><argument_list pos:start="59:38" pos:end="59:42">(<argument pos:start="59:39" pos:end="59:41"><expr pos:start="59:39" pos:end="59:41"><literal type="string" pos:start="59:39" pos:end="59:41">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if <condition pos:start="61:12" pos:end="61:68">(<expr pos:start="61:13" pos:end="61:67"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:16">ret</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:62"><name pos:start="61:20" pos:end="61:32">av_parse_time</name><argument_list pos:start="61:33" pos:end="61:62">(<argument pos:start="61:34" pos:end="61:43"><expr pos:start="61:34" pos:end="61:43"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:43"><name pos:start="61:35" pos:end="61:37">seg</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:43">time</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:58"><expr pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:58"><name pos:start="61:46" pos:end="61:48">seg</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:58">time_str</name></name></expr></argument>, <argument pos:start="61:61" pos:end="61:61"><expr pos:start="61:61" pos:end="61:61"><literal type="number" pos:start="61:61" pos:end="61:61">1</literal></expr></argument>)</argument_list></call><operator pos:start="61:63" pos:end="61:63">)</operator> <operator pos:start="61:65" pos:end="61:65">&lt;</operator> <literal type="number" pos:start="61:67" pos:end="61:67">0</literal></expr>)</condition> <block pos:start="61:70" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:23">

            <expr_stmt pos:start="63:13" pos:end="67:34"><expr pos:start="63:13" pos:end="67:33"><call pos:start="63:13" pos:end="67:33"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="67:33">(<argument pos:start="63:20" pos:end="63:20"><expr pos:start="63:20" pos:end="63:20"><name pos:start="63:20" pos:end="63:20">s</name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="65:20" pos:end="65:87"><expr pos:start="65:20" pos:end="65:87"><literal type="string" pos:start="65:20" pos:end="65:87">"Invalid time duration specification '%s' for segment_time option\n"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:32"><expr pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:22">seg</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:32">time_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="77:5" pos:end="91:5"><if pos:start="77:5" pos:end="91:5">if <condition pos:start="77:8" pos:end="77:28">(<expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:11">seg</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:27">time_delta_str</name></name></expr>)</condition> <block pos:start="77:30" pos:end="91:5">{<block_content pos:start="79:9" pos:end="89:9">

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="89:9">if <condition pos:start="79:12" pos:end="79:80">(<expr pos:start="79:13" pos:end="79:79"><operator pos:start="79:13" pos:end="79:13">(</operator><name pos:start="79:14" pos:end="79:16">ret</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:74"><name pos:start="79:20" pos:end="79:32">av_parse_time</name><argument_list pos:start="79:33" pos:end="79:74">(<argument pos:start="79:34" pos:end="79:49"><expr pos:start="79:34" pos:end="79:49"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:49"><name pos:start="79:35" pos:end="79:37">seg</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:49">time_delta</name></name></expr></argument>, <argument pos:start="79:52" pos:end="79:70"><expr pos:start="79:52" pos:end="79:70"><name pos:start="79:52" pos:end="79:70"><name pos:start="79:52" pos:end="79:54">seg</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:70">time_delta_str</name></name></expr></argument>, <argument pos:start="79:73" pos:end="79:73"><expr pos:start="79:73" pos:end="79:73"><literal type="number" pos:start="79:73" pos:end="79:73">1</literal></expr></argument>)</argument_list></call><operator pos:start="79:75" pos:end="79:75">)</operator> <operator pos:start="79:77" pos:end="79:77">&lt;</operator> <literal type="number" pos:start="79:79" pos:end="79:79">0</literal></expr>)</condition> <block pos:start="79:82" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:23">

            <expr_stmt pos:start="81:13" pos:end="85:40"><expr pos:start="81:13" pos:end="85:39"><call pos:start="81:13" pos:end="85:39"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="85:39">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="83:20" pos:end="83:80"><expr pos:start="83:20" pos:end="83:80"><literal type="string" pos:start="83:20" pos:end="83:80">"Invalid time duration specification '%s' for delta option\n"</literal></expr></argument>,

                   <argument pos:start="85:20" pos:end="85:38"><expr pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:38"><name pos:start="85:20" pos:end="85:22">seg</name><operator pos:start="85:23" pos:end="85:24">-&gt;</operator><name pos:start="85:25" pos:end="85:38">time_delta_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="95:5" pos:end="113:5"><if pos:start="95:5" pos:end="113:5">if <condition pos:start="95:8" pos:end="95:18">(<expr pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:17"><name pos:start="95:9" pos:end="95:11">seg</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:17">list</name></name></expr>)</condition> <block pos:start="95:20" pos:end="113:5">{<block_content pos:start="97:9" pos:end="111:22">

        <if_stmt pos:start="97:9" pos:end="107:9"><if pos:start="97:9" pos:end="107:9">if <condition pos:start="97:12" pos:end="97:50">(<expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:26"><name pos:start="97:13" pos:end="97:15">seg</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:26">list_type</name></name> <operator pos:start="97:28" pos:end="97:29">==</operator> <name pos:start="97:31" pos:end="97:49">LIST_TYPE_UNDEFINED</name></expr>)</condition> <block pos:start="97:52" pos:end="107:9">{<block_content pos:start="99:13" pos:end="105:86">

            <if_stmt pos:start="99:13" pos:end="105:86"><if pos:start="99:13" pos:end="99:85">if      <condition pos:start="99:21" pos:end="99:53">(<expr pos:start="99:22" pos:end="99:52"><call pos:start="99:22" pos:end="99:52"><name pos:start="99:22" pos:end="99:33">av_match_ext</name><argument_list pos:start="99:34" pos:end="99:52">(<argument pos:start="99:35" pos:end="99:43"><expr pos:start="99:35" pos:end="99:43"><name pos:start="99:35" pos:end="99:43"><name pos:start="99:35" pos:end="99:37">seg</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:43">list</name></name></expr></argument>, <argument pos:start="99:46" pos:end="99:50"><expr pos:start="99:46" pos:end="99:50"><literal type="string" pos:start="99:46" pos:end="99:50">"csv"</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:55" pos:end="99:85"><block_content pos:start="99:55" pos:end="99:85"> <expr_stmt pos:start="99:55" pos:end="99:85"><expr pos:start="99:55" pos:end="99:84"><name pos:start="99:55" pos:end="99:68"><name pos:start="99:55" pos:end="99:57">seg</name><operator pos:start="99:58" pos:end="99:59">-&gt;</operator><name pos:start="99:60" pos:end="99:68">list_type</name></name> <operator pos:start="99:70" pos:end="99:70">=</operator> <name pos:start="99:72" pos:end="99:84">LIST_TYPE_CSV</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="101:13" pos:end="101:85">else if <condition pos:start="101:21" pos:end="101:53">(<expr pos:start="101:22" pos:end="101:52"><call pos:start="101:22" pos:end="101:52"><name pos:start="101:22" pos:end="101:33">av_match_ext</name><argument_list pos:start="101:34" pos:end="101:52">(<argument pos:start="101:35" pos:end="101:43"><expr pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:43"><name pos:start="101:35" pos:end="101:37">seg</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:43">list</name></name></expr></argument>, <argument pos:start="101:46" pos:end="101:50"><expr pos:start="101:46" pos:end="101:50"><literal type="string" pos:start="101:46" pos:end="101:50">"ext"</literal></expr></argument> )</argument_list></call></expr>)</condition><block type="pseudo" pos:start="101:55" pos:end="101:85"><block_content pos:start="101:55" pos:end="101:85"> <expr_stmt pos:start="101:55" pos:end="101:85"><expr pos:start="101:55" pos:end="101:84"><name pos:start="101:55" pos:end="101:68"><name pos:start="101:55" pos:end="101:57">seg</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:68">list_type</name></name> <operator pos:start="101:70" pos:end="101:70">=</operator> <name pos:start="101:72" pos:end="101:84">LIST_TYPE_EXT</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="103:13" pos:end="103:86">else if <condition pos:start="103:21" pos:end="103:53">(<expr pos:start="103:22" pos:end="103:52"><call pos:start="103:22" pos:end="103:52"><name pos:start="103:22" pos:end="103:33">av_match_ext</name><argument_list pos:start="103:34" pos:end="103:52">(<argument pos:start="103:35" pos:end="103:43"><expr pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:37">seg</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:43">list</name></name></expr></argument>, <argument pos:start="103:46" pos:end="103:51"><expr pos:start="103:46" pos:end="103:51"><literal type="string" pos:start="103:46" pos:end="103:51">"m3u8"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="103:55" pos:end="103:86"><block_content pos:start="103:55" pos:end="103:86"> <expr_stmt pos:start="103:55" pos:end="103:86"><expr pos:start="103:55" pos:end="103:85"><name pos:start="103:55" pos:end="103:68"><name pos:start="103:55" pos:end="103:57">seg</name><operator pos:start="103:58" pos:end="103:59">-&gt;</operator><name pos:start="103:60" pos:end="103:68">list_type</name></name> <operator pos:start="103:70" pos:end="103:70">=</operator> <name pos:start="103:72" pos:end="103:85">LIST_TYPE_M3U8</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="105:13" pos:end="105:86">else<block type="pseudo" pos:start="105:55" pos:end="105:86"><block_content pos:start="105:55" pos:end="105:86">                                      <expr_stmt pos:start="105:55" pos:end="105:86"><expr pos:start="105:55" pos:end="105:85"><name pos:start="105:55" pos:end="105:68"><name pos:start="105:55" pos:end="105:57">seg</name><operator pos:start="105:58" pos:end="105:59">-&gt;</operator><name pos:start="105:60" pos:end="105:68">list_type</name></name> <operator pos:start="105:70" pos:end="105:70">=</operator> <name pos:start="105:72" pos:end="105:85">LIST_TYPE_FLAT</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="109:9" pos:end="111:22"><if pos:start="109:9" pos:end="111:22">if <condition pos:start="109:12" pos:end="109:45">(<expr pos:start="109:13" pos:end="109:44"><operator pos:start="109:13" pos:end="109:13">(</operator><name pos:start="109:14" pos:end="109:16">ret</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <call pos:start="109:20" pos:end="109:39"><name pos:start="109:20" pos:end="109:36">segment_list_open</name><argument_list pos:start="109:37" pos:end="109:39">(<argument pos:start="109:38" pos:end="109:38"><expr pos:start="109:38" pos:end="109:38"><name pos:start="109:38" pos:end="109:38">s</name></expr></argument>)</argument_list></call><operator pos:start="109:40" pos:end="109:40">)</operator> <operator pos:start="109:42" pos:end="109:42">&lt;</operator> <literal type="number" pos:start="109:44" pos:end="109:44">0</literal></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:22"><block_content pos:start="111:13" pos:end="111:22">

            <goto pos:start="111:13" pos:end="111:22">goto <name pos:start="111:18" pos:end="111:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="117:94"><if pos:start="115:5" pos:end="117:94">if <condition pos:start="115:8" pos:end="115:40">(<expr pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:11">seg</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:22">list_type</name></name> <operator pos:start="115:24" pos:end="115:25">==</operator> <name pos:start="115:27" pos:end="115:39">LIST_TYPE_EXT</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:94"><block_content pos:start="117:9" pos:end="117:94">

        <expr_stmt pos:start="117:9" pos:end="117:94"><expr pos:start="117:9" pos:end="117:93"><call pos:start="117:9" pos:end="117:93"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="117:93">(<argument pos:start="117:16" pos:end="117:16"><expr pos:start="117:16" pos:end="117:16"><name pos:start="117:16" pos:end="117:16">s</name></expr></argument>, <argument pos:start="117:19" pos:end="117:32"><expr pos:start="117:19" pos:end="117:32"><name pos:start="117:19" pos:end="117:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="117:35" pos:end="117:92"><expr pos:start="117:35" pos:end="117:92"><literal type="string" pos:start="117:35" pos:end="117:92">"'ext' list type option is deprecated in favor of 'csv'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="121:5" pos:end="125:69">for <control pos:start="121:9" pos:end="121:39">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:34"><expr pos:start="121:17" pos:end="121:33"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:33">nb_streams</name></name></expr>;</condition> <incr pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><name pos:start="121:36" pos:end="121:36">i</name><operator pos:start="121:37" pos:end="121:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:9" pos:end="125:69"><block_content pos:start="123:9" pos:end="125:69">

        <expr_stmt pos:start="123:9" pos:end="125:69"><expr pos:start="123:9" pos:end="125:68"><name pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:11">seg</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:22">has_video</name></name> <operator pos:start="123:24" pos:end="123:25">+=</operator>

            <operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:26"><name pos:start="125:14" pos:end="125:14">s</name><operator pos:start="125:15" pos:end="125:16">-&gt;</operator><name pos:start="125:17" pos:end="125:23">streams</name><index pos:start="125:24" pos:end="125:26">[<expr pos:start="125:25" pos:end="125:25"><name pos:start="125:25" pos:end="125:25">i</name></expr>]</index></name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:45"><name pos:start="125:29" pos:end="125:33">codec</name><operator pos:start="125:34" pos:end="125:35">-&gt;</operator><name pos:start="125:36" pos:end="125:45">codec_type</name></name> <operator pos:start="125:47" pos:end="125:48">==</operator> <name pos:start="125:50" pos:end="125:67">AVMEDIA_TYPE_VIDEO</name><operator pos:start="125:68" pos:end="125:68">)</operator></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="129:5" pos:end="135:47"><if pos:start="129:5" pos:end="135:47">if <condition pos:start="129:8" pos:end="129:27">(<expr pos:start="129:9" pos:end="129:26"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:11">seg</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:22">has_video</name></name> <operator pos:start="129:24" pos:end="129:24">&gt;</operator> <literal type="number" pos:start="129:26" pos:end="129:26">1</literal></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="135:47"><block_content pos:start="131:9" pos:end="135:47">

        <expr_stmt pos:start="131:9" pos:end="135:47"><expr pos:start="131:9" pos:end="135:46"><call pos:start="131:9" pos:end="135:46"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="135:46">(<argument pos:start="131:16" pos:end="131:16"><expr pos:start="131:16" pos:end="131:16"><name pos:start="131:16" pos:end="131:16">s</name></expr></argument>, <argument pos:start="131:19" pos:end="131:32"><expr pos:start="131:19" pos:end="131:32"><name pos:start="131:19" pos:end="131:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="133:16" pos:end="135:45"><expr pos:start="133:16" pos:end="135:45"><literal type="string" pos:start="133:16" pos:end="133:58">"More than a single video stream present, "</literal>

               <literal type="string" pos:start="135:16" pos:end="135:45">"expect issues decoding it.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:67"><expr pos:start="139:5" pos:end="139:66"><name pos:start="139:5" pos:end="139:16"><name pos:start="139:5" pos:end="139:7">seg</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:16">oformat</name></name> <operator pos:start="139:18" pos:end="139:18">=</operator> <call pos:start="139:20" pos:end="139:66"><name pos:start="139:20" pos:end="139:34">av_guess_format</name><argument_list pos:start="139:35" pos:end="139:66">(<argument pos:start="139:36" pos:end="139:46"><expr pos:start="139:36" pos:end="139:46"><name pos:start="139:36" pos:end="139:46"><name pos:start="139:36" pos:end="139:38">seg</name><operator pos:start="139:39" pos:end="139:40">-&gt;</operator><name pos:start="139:41" pos:end="139:46">format</name></name></expr></argument>, <argument pos:start="139:49" pos:end="139:59"><expr pos:start="139:49" pos:end="139:59"><name pos:start="139:49" pos:end="139:59"><name pos:start="139:49" pos:end="139:49">s</name><operator pos:start="139:50" pos:end="139:51">-&gt;</operator><name pos:start="139:52" pos:end="139:59">filename</name></name></expr></argument>, <argument pos:start="139:62" pos:end="139:65"><expr pos:start="139:62" pos:end="139:65"><name pos:start="139:62" pos:end="139:65">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="149:5"><if pos:start="143:5" pos:end="149:5">if <condition pos:start="143:8" pos:end="143:22">(<expr pos:start="143:9" pos:end="143:21"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:21"><name pos:start="143:10" pos:end="143:12">seg</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:21">oformat</name></name></expr>)</condition> <block pos:start="143:24" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:18">

        <expr_stmt pos:start="145:9" pos:end="145:38"><expr pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">=</operator> <name pos:start="145:15" pos:end="145:37">AVERROR_MUXER_NOT_FOUND</name></expr>;</expr_stmt>

        <goto pos:start="147:9" pos:end="147:18">goto <name pos:start="147:14" pos:end="147:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="161:5"><if pos:start="151:5" pos:end="161:5">if <condition pos:start="151:8" pos:end="151:43">(<expr pos:start="151:9" pos:end="151:42"><name pos:start="151:9" pos:end="151:27"><name pos:start="151:9" pos:end="151:11">seg</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:20">oformat</name><operator pos:start="151:21" pos:end="151:22">-&gt;</operator><name pos:start="151:23" pos:end="151:27">flags</name></name> <operator pos:start="151:29" pos:end="151:29">&amp;</operator> <name pos:start="151:31" pos:end="151:42">AVFMT_NOFILE</name></expr>)</condition> <block pos:start="151:45" pos:end="161:5">{<block_content pos:start="153:9" pos:end="159:18">

        <expr_stmt pos:start="153:9" pos:end="155:34"><expr pos:start="153:9" pos:end="155:33"><call pos:start="153:9" pos:end="155:33"><name pos:start="153:9" pos:end="153:14">av_log</name><argument_list pos:start="153:15" pos:end="155:33">(<argument pos:start="153:16" pos:end="153:16"><expr pos:start="153:16" pos:end="153:16"><name pos:start="153:16" pos:end="153:16">s</name></expr></argument>, <argument pos:start="153:19" pos:end="153:30"><expr pos:start="153:19" pos:end="153:30"><name pos:start="153:19" pos:end="153:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="153:33" pos:end="153:60"><expr pos:start="153:33" pos:end="153:60"><literal type="string" pos:start="153:33" pos:end="153:60">"format %s not supported.\n"</literal></expr></argument>,

               <argument pos:start="155:16" pos:end="155:32"><expr pos:start="155:16" pos:end="155:32"><name pos:start="155:16" pos:end="155:32"><name pos:start="155:16" pos:end="155:17">oc</name><operator pos:start="155:18" pos:end="155:19">-&gt;</operator><name pos:start="155:20" pos:end="155:26">oformat</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:32">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:30"><expr pos:start="157:9" pos:end="157:29"><name pos:start="157:9" pos:end="157:11">ret</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:29"><name pos:start="157:15" pos:end="157:21">AVERROR</name><argument_list pos:start="157:22" pos:end="157:29">(<argument pos:start="157:23" pos:end="157:28"><expr pos:start="157:23" pos:end="157:28"><name pos:start="157:23" pos:end="157:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="159:9" pos:end="159:18">goto <name pos:start="159:14" pos:end="159:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="167:18"><if pos:start="165:5" pos:end="167:18">if <condition pos:start="165:8" pos:end="165:40">(<expr pos:start="165:9" pos:end="165:39"><operator pos:start="165:9" pos:end="165:9">(</operator><name pos:start="165:10" pos:end="165:12">ret</name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="165:34"><name pos:start="165:16" pos:end="165:31">segment_mux_init</name><argument_list pos:start="165:32" pos:end="165:34">(<argument pos:start="165:33" pos:end="165:33"><expr pos:start="165:33" pos:end="165:33"><name pos:start="165:33" pos:end="165:33">s</name></expr></argument>)</argument_list></call><operator pos:start="165:35" pos:end="165:35">)</operator> <operator pos:start="165:37" pos:end="165:37">&lt;</operator> <literal type="number" pos:start="165:39" pos:end="165:39">0</literal></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:18"><block_content pos:start="167:9" pos:end="167:18">

        <goto pos:start="167:9" pos:end="167:18">goto <name pos:start="167:14" pos:end="167:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:18"><expr pos:start="169:5" pos:end="169:17"><name pos:start="169:5" pos:end="169:6">oc</name> <operator pos:start="169:8" pos:end="169:8">=</operator> <name pos:start="169:10" pos:end="169:17"><name pos:start="169:10" pos:end="169:12">seg</name><operator pos:start="169:13" pos:end="169:14">-&gt;</operator><name pos:start="169:15" pos:end="169:17">avf</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="173:5" pos:end="181:5"><if pos:start="173:5" pos:end="181:5">if <condition pos:start="173:8" pos:end="175:67">(<expr pos:start="173:9" pos:end="175:66"><call pos:start="173:9" pos:end="175:62"><name pos:start="173:9" pos:end="173:29">av_get_frame_filename</name><argument_list pos:start="173:30" pos:end="175:62">(<argument pos:start="173:31" pos:end="173:42"><expr pos:start="173:31" pos:end="173:42"><name pos:start="173:31" pos:end="173:42"><name pos:start="173:31" pos:end="173:32">oc</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:42">filename</name></name></expr></argument>, <argument pos:start="173:45" pos:end="173:64"><expr pos:start="173:45" pos:end="173:64"><sizeof pos:start="173:45" pos:end="173:64">sizeof<argument_list pos:start="173:51" pos:end="173:64">(<argument pos:start="173:52" pos:end="173:63"><expr pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:63"><name pos:start="173:52" pos:end="173:53">oc</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:63">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                              <argument pos:start="175:31" pos:end="175:41"><expr pos:start="175:31" pos:end="175:41"><name pos:start="175:31" pos:end="175:41"><name pos:start="175:31" pos:end="175:31">s</name><operator pos:start="175:32" pos:end="175:33">-&gt;</operator><name pos:start="175:34" pos:end="175:41">filename</name></name></expr></argument>, <argument pos:start="175:44" pos:end="175:61"><expr pos:start="175:44" pos:end="175:61"><name pos:start="175:44" pos:end="175:59"><name pos:start="175:44" pos:end="175:46">seg</name><operator pos:start="175:47" pos:end="175:48">-&gt;</operator><name pos:start="175:49" pos:end="175:59">segment_idx</name></name><operator pos:start="175:60" pos:end="175:61">++</operator></expr></argument>)</argument_list></call> <operator pos:start="175:64" pos:end="175:64">&lt;</operator> <literal type="number" pos:start="175:66" pos:end="175:66">0</literal></expr>)</condition> <block pos:start="175:69" pos:end="181:5">{<block_content pos:start="177:9" pos:end="179:18">

        <expr_stmt pos:start="177:9" pos:end="177:30"><expr pos:start="177:9" pos:end="177:29"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">=</operator> <call pos:start="177:15" pos:end="177:29"><name pos:start="177:15" pos:end="177:21">AVERROR</name><argument_list pos:start="177:22" pos:end="177:29">(<argument pos:start="177:23" pos:end="177:28"><expr pos:start="177:23" pos:end="177:28"><name pos:start="177:23" pos:end="177:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="179:9" pos:end="179:18">goto <name pos:start="179:14" pos:end="179:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:25"><expr pos:start="183:5" pos:end="183:24"><name pos:start="183:5" pos:end="183:22"><name pos:start="183:5" pos:end="183:7">seg</name><operator pos:start="183:8" pos:end="183:9">-&gt;</operator><name pos:start="183:10" pos:end="183:22">segment_count</name></name><operator pos:start="183:23" pos:end="183:24">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="187:5" pos:end="201:5"><if pos:start="187:5" pos:end="195:5">if <condition pos:start="187:8" pos:end="187:34">(<expr pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:33"><name pos:start="187:9" pos:end="187:11">seg</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:33">write_header_trailer</name></name></expr>)</condition> <block pos:start="187:36" pos:end="195:5">{<block_content pos:start="189:9" pos:end="193:22">

        <if_stmt pos:start="189:9" pos:end="193:22"><if pos:start="189:9" pos:end="193:22">if <condition pos:start="189:12" pos:end="191:65">(<expr pos:start="189:13" pos:end="191:64"><operator pos:start="189:13" pos:end="189:13">(</operator><name pos:start="189:14" pos:end="189:16">ret</name> <operator pos:start="189:18" pos:end="189:18">=</operator> <call pos:start="189:20" pos:end="191:59"><name pos:start="189:20" pos:end="189:29">avio_open2</name><argument_list pos:start="189:30" pos:end="191:59">(<argument pos:start="189:31" pos:end="189:37"><expr pos:start="189:31" pos:end="189:37"><operator pos:start="189:31" pos:end="189:31">&amp;</operator><name pos:start="189:32" pos:end="189:37"><name pos:start="189:32" pos:end="189:33">oc</name><operator pos:start="189:34" pos:end="189:35">-&gt;</operator><name pos:start="189:36" pos:end="189:37">pb</name></name></expr></argument>, <argument pos:start="189:40" pos:end="189:51"><expr pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:51"><name pos:start="189:40" pos:end="189:41">oc</name><operator pos:start="189:42" pos:end="189:43">-&gt;</operator><name pos:start="189:44" pos:end="189:51">filename</name></name></expr></argument>, <argument pos:start="189:54" pos:end="189:68"><expr pos:start="189:54" pos:end="189:68"><name pos:start="189:54" pos:end="189:68">AVIO_FLAG_WRITE</name></expr></argument>,

                              <argument pos:start="191:31" pos:end="191:52"><expr pos:start="191:31" pos:end="191:52"><operator pos:start="191:31" pos:end="191:31">&amp;</operator><name pos:start="191:32" pos:end="191:52"><name pos:start="191:32" pos:end="191:32">s</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:52">interrupt_callback</name></name></expr></argument>, <argument pos:start="191:55" pos:end="191:58"><expr pos:start="191:55" pos:end="191:58"><name pos:start="191:55" pos:end="191:58">NULL</name></expr></argument>)</argument_list></call><operator pos:start="191:60" pos:end="191:60">)</operator> <operator pos:start="191:62" pos:end="191:62">&lt;</operator> <literal type="number" pos:start="191:64" pos:end="191:64">0</literal></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:22"><block_content pos:start="193:13" pos:end="193:22">

            <goto pos:start="193:13" pos:end="193:22">goto <name pos:start="193:18" pos:end="193:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="201:5">else <block pos:start="195:12" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:22">

        <if_stmt pos:start="197:9" pos:end="199:22"><if pos:start="197:9" pos:end="199:22">if <condition pos:start="197:12" pos:end="197:47">(<expr pos:start="197:13" pos:end="197:46"><operator pos:start="197:13" pos:end="197:13">(</operator><name pos:start="197:14" pos:end="197:16">ret</name> <operator pos:start="197:18" pos:end="197:18">=</operator> <call pos:start="197:20" pos:end="197:41"><name pos:start="197:20" pos:end="197:32">open_null_ctx</name><argument_list pos:start="197:33" pos:end="197:41">(<argument pos:start="197:34" pos:end="197:40"><expr pos:start="197:34" pos:end="197:40"><operator pos:start="197:34" pos:end="197:34">&amp;</operator><name pos:start="197:35" pos:end="197:40"><name pos:start="197:35" pos:end="197:36">oc</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:40">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="197:42" pos:end="197:42">)</operator> <operator pos:start="197:44" pos:end="197:44">&lt;</operator> <literal type="number" pos:start="197:46" pos:end="197:46">0</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:22"><block_content pos:start="199:13" pos:end="199:22">

            <goto pos:start="199:13" pos:end="199:22">goto <name pos:start="199:18" pos:end="199:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:52">(<expr pos:start="205:9" pos:end="205:51"><operator pos:start="205:9" pos:end="205:9">(</operator><name pos:start="205:10" pos:end="205:12">ret</name> <operator pos:start="205:14" pos:end="205:14">=</operator> <call pos:start="205:16" pos:end="205:46"><name pos:start="205:16" pos:end="205:36">avformat_write_header</name><argument_list pos:start="205:37" pos:end="205:46">(<argument pos:start="205:38" pos:end="205:39"><expr pos:start="205:38" pos:end="205:39"><name pos:start="205:38" pos:end="205:39">oc</name></expr></argument>, <argument pos:start="205:42" pos:end="205:45"><expr pos:start="205:42" pos:end="205:45"><name pos:start="205:42" pos:end="205:45">NULL</name></expr></argument>)</argument_list></call><operator pos:start="205:47" pos:end="205:47">)</operator> <operator pos:start="205:49" pos:end="205:49">&lt;</operator> <literal type="number" pos:start="205:51" pos:end="205:51">0</literal></expr>)</condition> <block pos:start="205:54" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:18">

        <expr_stmt pos:start="207:9" pos:end="207:27"><expr pos:start="207:9" pos:end="207:26"><call pos:start="207:9" pos:end="207:26"><name pos:start="207:9" pos:end="207:18">avio_close</name><argument_list pos:start="207:19" pos:end="207:26">(<argument pos:start="207:20" pos:end="207:25"><expr pos:start="207:20" pos:end="207:25"><name pos:start="207:20" pos:end="207:25"><name pos:start="207:20" pos:end="207:21">oc</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="209:9" pos:end="209:18">goto <name pos:start="209:14" pos:end="209:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="217:33"><if pos:start="215:5" pos:end="217:33">if <condition pos:start="215:8" pos:end="215:62">(<expr pos:start="215:9" pos:end="215:61"><name pos:start="215:9" pos:end="215:29"><name pos:start="215:9" pos:end="215:10">oc</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:29">avoid_negative_ts</name></name> <operator pos:start="215:31" pos:end="215:31">&gt;</operator> <literal type="number" pos:start="215:33" pos:end="215:33">0</literal> <operator pos:start="215:35" pos:end="215:36">&amp;&amp;</operator> <name pos:start="215:38" pos:end="215:57"><name pos:start="215:38" pos:end="215:38">s</name><operator pos:start="215:39" pos:end="215:40">-&gt;</operator><name pos:start="215:41" pos:end="215:57">avoid_negative_ts</name></name> <operator pos:start="215:59" pos:end="215:59">&lt;</operator> <literal type="number" pos:start="215:61" pos:end="215:61">0</literal></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="217:33"><block_content pos:start="217:9" pos:end="217:33">

        <expr_stmt pos:start="217:9" pos:end="217:33"><expr pos:start="217:9" pos:end="217:32"><name pos:start="217:9" pos:end="217:28"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:28">avoid_negative_ts</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <literal type="number" pos:start="217:32" pos:end="217:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="221:5" pos:end="231:5"><if pos:start="221:5" pos:end="231:5">if <condition pos:start="221:8" pos:end="221:35">(<expr pos:start="221:9" pos:end="221:34"><operator pos:start="221:9" pos:end="221:9">!</operator><name pos:start="221:10" pos:end="221:34"><name pos:start="221:10" pos:end="221:12">seg</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:34">write_header_trailer</name></name></expr>)</condition> <block pos:start="221:37" pos:end="231:5">{<block_content pos:start="223:9" pos:end="229:22">

        <expr_stmt pos:start="223:9" pos:end="223:31"><expr pos:start="223:9" pos:end="223:30"><call pos:start="223:9" pos:end="223:30"><name pos:start="223:9" pos:end="223:22">close_null_ctx</name><argument_list pos:start="223:23" pos:end="223:30">(<argument pos:start="223:24" pos:end="223:29"><expr pos:start="223:24" pos:end="223:29"><name pos:start="223:24" pos:end="223:29"><name pos:start="223:24" pos:end="223:25">oc</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:29">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="225:9" pos:end="229:22"><if pos:start="225:9" pos:end="229:22">if <condition pos:start="225:12" pos:end="227:65">(<expr pos:start="225:13" pos:end="227:64"><operator pos:start="225:13" pos:end="225:13">(</operator><name pos:start="225:14" pos:end="225:16">ret</name> <operator pos:start="225:18" pos:end="225:18">=</operator> <call pos:start="225:20" pos:end="227:59"><name pos:start="225:20" pos:end="225:29">avio_open2</name><argument_list pos:start="225:30" pos:end="227:59">(<argument pos:start="225:31" pos:end="225:37"><expr pos:start="225:31" pos:end="225:37"><operator pos:start="225:31" pos:end="225:31">&amp;</operator><name pos:start="225:32" pos:end="225:37"><name pos:start="225:32" pos:end="225:33">oc</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:37">pb</name></name></expr></argument>, <argument pos:start="225:40" pos:end="225:51"><expr pos:start="225:40" pos:end="225:51"><name pos:start="225:40" pos:end="225:51"><name pos:start="225:40" pos:end="225:41">oc</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:51">filename</name></name></expr></argument>, <argument pos:start="225:54" pos:end="225:68"><expr pos:start="225:54" pos:end="225:68"><name pos:start="225:54" pos:end="225:68">AVIO_FLAG_WRITE</name></expr></argument>,

                              <argument pos:start="227:31" pos:end="227:52"><expr pos:start="227:31" pos:end="227:52"><operator pos:start="227:31" pos:end="227:31">&amp;</operator><name pos:start="227:32" pos:end="227:52"><name pos:start="227:32" pos:end="227:32">s</name><operator pos:start="227:33" pos:end="227:34">-&gt;</operator><name pos:start="227:35" pos:end="227:52">interrupt_callback</name></name></expr></argument>, <argument pos:start="227:55" pos:end="227:58"><expr pos:start="227:55" pos:end="227:58"><name pos:start="227:55" pos:end="227:58">NULL</name></expr></argument>)</argument_list></call><operator pos:start="227:60" pos:end="227:60">)</operator> <operator pos:start="227:62" pos:end="227:62">&lt;</operator> <literal type="number" pos:start="227:64" pos:end="227:64">0</literal></expr>)</condition><block type="pseudo" pos:start="229:13" pos:end="229:22"><block_content pos:start="229:13" pos:end="229:22">

            <goto pos:start="229:13" pos:end="229:22">goto <name pos:start="229:18" pos:end="229:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="235:1" pos:end="235:5"><name pos:start="235:1" pos:end="235:4">fail</name>:</label>

    <if_stmt pos:start="237:5" pos:end="247:5"><if pos:start="237:5" pos:end="247:5">if <condition pos:start="237:8" pos:end="237:12">(<expr pos:start="237:9" pos:end="237:11"><name pos:start="237:9" pos:end="237:11">ret</name></expr>)</condition> <block pos:start="237:14" pos:end="247:5">{<block_content pos:start="239:9" pos:end="245:44">

        <if_stmt pos:start="239:9" pos:end="241:34"><if pos:start="239:9" pos:end="241:34">if <condition pos:start="239:12" pos:end="239:22">(<expr pos:start="239:13" pos:end="239:21"><name pos:start="239:13" pos:end="239:21"><name pos:start="239:13" pos:end="239:15">seg</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:21">list</name></name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:34"><block_content pos:start="241:13" pos:end="241:34">

            <expr_stmt pos:start="241:13" pos:end="241:34"><expr pos:start="241:13" pos:end="241:33"><call pos:start="241:13" pos:end="241:33"><name pos:start="241:13" pos:end="241:30">segment_list_close</name><argument_list pos:start="241:31" pos:end="241:33">(<argument pos:start="241:32" pos:end="241:32"><expr pos:start="241:32" pos:end="241:32"><name pos:start="241:32" pos:end="241:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="245:44"><if pos:start="243:9" pos:end="245:44">if <condition pos:start="243:12" pos:end="243:21">(<expr pos:start="243:13" pos:end="243:20"><name pos:start="243:13" pos:end="243:20"><name pos:start="243:13" pos:end="243:15">seg</name><operator pos:start="243:16" pos:end="243:17">-&gt;</operator><name pos:start="243:18" pos:end="243:20">avf</name></name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:44"><block_content pos:start="245:13" pos:end="245:44">

            <expr_stmt pos:start="245:13" pos:end="245:44"><expr pos:start="245:13" pos:end="245:43"><call pos:start="245:13" pos:end="245:43"><name pos:start="245:13" pos:end="245:33">avformat_free_context</name><argument_list pos:start="245:34" pos:end="245:43">(<argument pos:start="245:35" pos:end="245:42"><expr pos:start="245:35" pos:end="245:42"><name pos:start="245:35" pos:end="245:42"><name pos:start="245:35" pos:end="245:37">seg</name><operator pos:start="245:38" pos:end="245:39">-&gt;</operator><name pos:start="245:40" pos:end="245:42">avf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="249:5" pos:end="249:15">return <expr pos:start="249:12" pos:end="249:14"><name pos:start="249:12" pos:end="249:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
