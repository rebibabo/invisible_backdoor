<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22642.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">vfio_enable_msi</name><parameter_list pos:start="1:28" pos:end="1:45">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:38">VFIODevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:51">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:14">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><call pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:27">vfio_disable_interrupts</name><argument_list pos:start="9:28" pos:end="9:33">(<argument pos:start="9:29" pos:end="9:32"><expr pos:start="9:29" pos:end="9:32"><name pos:start="9:29" pos:end="9:32">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:8">vdev</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:20">nr_vectors</name></name> <operator pos:start="13:22" pos:end="13:22">=</operator> <call pos:start="13:24" pos:end="13:60"><name pos:start="13:24" pos:end="13:47">msi_nr_vectors_allocated</name><argument_list pos:start="13:48" pos:end="13:60">(<argument pos:start="13:49" pos:end="13:59"><expr pos:start="13:49" pos:end="13:59"><operator pos:start="13:49" pos:end="13:49">&amp;</operator><name pos:start="13:50" pos:end="13:59"><name pos:start="13:50" pos:end="13:53">vdev</name><operator pos:start="13:54" pos:end="13:55">-&gt;</operator><name pos:start="13:56" pos:end="13:59">pdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="15:1" pos:end="15:6"><name pos:start="15:1" pos:end="15:5">retry</name>:</label>

    <expr_stmt pos:start="17:5" pos:end="17:76"><expr pos:start="17:5" pos:end="17:75"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:8">vdev</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:21">msi_vectors</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <call pos:start="17:25" pos:end="17:75"><name pos:start="17:25" pos:end="17:33">g_malloc0</name><argument_list pos:start="17:34" pos:end="17:75">(<argument pos:start="17:35" pos:end="17:74"><expr pos:start="17:35" pos:end="17:74"><name pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:38">vdev</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:50">nr_vectors</name></name> <operator pos:start="17:52" pos:end="17:52">*</operator> <sizeof pos:start="17:54" pos:end="17:74">sizeof<argument_list pos:start="17:60" pos:end="17:74">(<argument pos:start="17:61" pos:end="17:73"><expr pos:start="17:61" pos:end="17:73"><name pos:start="17:61" pos:end="17:73">VFIOMSIVector</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="67:5">for <control pos:start="21:9" pos:end="21:42">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:37"><expr pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:36"><name pos:start="21:21" pos:end="21:24">vdev</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">nr_vectors</name></name></expr>;</condition> <incr pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><name pos:start="21:39" pos:end="21:39">i</name><operator pos:start="21:40" pos:end="21:41">++</operator></expr></incr>)</control> <block pos:start="21:44" pos:end="67:5">{<block_content pos:start="23:9" pos:end="65:9">

        <decl_stmt pos:start="23:9" pos:end="23:54"><decl pos:start="23:9" pos:end="23:53"><type pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:21">VFIOMSIVector</name> <modifier pos:start="23:23" pos:end="23:23">*</modifier></type><name pos:start="23:24" pos:end="23:29">vector</name> <init pos:start="23:31" pos:end="23:53">= <expr pos:start="23:33" pos:end="23:53"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:53"><name pos:start="23:34" pos:end="23:37">vdev</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:50">msi_vectors</name><index pos:start="23:51" pos:end="23:53">[<expr pos:start="23:52" pos:end="23:52"><name pos:start="23:52" pos:end="23:52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:14">vector</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">vdev</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:27">vdev</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:14">vector</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:19">use</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:26">true</name></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:55">(<expr pos:start="33:13" pos:end="33:54"><call pos:start="33:13" pos:end="33:54"><name pos:start="33:13" pos:end="33:31">event_notifier_init</name><argument_list pos:start="33:32" pos:end="33:54">(<argument pos:start="33:33" pos:end="33:50"><expr pos:start="33:33" pos:end="33:50"><operator pos:start="33:33" pos:end="33:33">&amp;</operator><name pos:start="33:34" pos:end="33:50"><name pos:start="33:34" pos:end="33:39">vector</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:50">interrupt</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:53"><expr pos:start="33:53" pos:end="33:53"><literal type="number" pos:start="33:53" pos:end="33:53">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:57" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:68">

            <expr_stmt pos:start="35:13" pos:end="35:68"><expr pos:start="35:13" pos:end="35:67"><call pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:24">error_report</name><argument_list pos:start="35:25" pos:end="35:67">(<argument pos:start="35:26" pos:end="35:66"><expr pos:start="35:26" pos:end="35:66"><literal type="string" pos:start="35:26" pos:end="35:66">"vfio: Error: event_notifier_init failed"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:54"><expr pos:start="41:9" pos:end="41:53"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:14">vector</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:19">msg</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:53"><name pos:start="41:23" pos:end="41:37">msi_get_message</name><argument_list pos:start="41:38" pos:end="41:53">(<argument pos:start="41:39" pos:end="41:49"><expr pos:start="41:39" pos:end="41:49"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:49"><name pos:start="41:40" pos:end="41:43">vdev</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:49">pdev</name></name></expr></argument>, <argument pos:start="41:52" pos:end="41:52"><expr pos:start="41:52" pos:end="41:52"><name pos:start="41:52" pos:end="41:52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="45:9" pos:end="51:11">/*

         * Attempt to enable route through KVM irqchip,

         * default to userspace handling if unavailable.

         */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:73"><expr pos:start="53:9" pos:end="53:72"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:14">vector</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">virq</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:72"><name pos:start="53:24" pos:end="53:48">kvm_irqchip_add_msi_route</name><argument_list pos:start="53:49" pos:end="53:72">(<argument pos:start="53:50" pos:end="53:58"><expr pos:start="53:50" pos:end="53:58"><name pos:start="53:50" pos:end="53:58">kvm_state</name></expr></argument>, <argument pos:start="53:61" pos:end="53:71"><expr pos:start="53:61" pos:end="53:71"><name pos:start="53:61" pos:end="53:71"><name pos:start="53:61" pos:end="53:66">vector</name><operator pos:start="53:67" pos:end="53:68">-&gt;</operator><name pos:start="53:69" pos:end="53:71">msg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="65:9"><if pos:start="55:9" pos:end="65:9">if <condition pos:start="55:12" pos:end="59:67">(<expr pos:start="55:13" pos:end="59:66"><name pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:18">vector</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:24">virq</name></name> <operator pos:start="55:26" pos:end="55:26">&lt;</operator> <literal type="number" pos:start="55:28" pos:end="55:28">0</literal> <operator pos:start="55:30" pos:end="55:31">||</operator>

            <call pos:start="57:13" pos:end="59:62"><name pos:start="57:13" pos:end="57:42">kvm_irqchip_add_irqfd_notifier</name><argument_list pos:start="57:43" pos:end="59:62">(<argument pos:start="57:44" pos:end="57:52"><expr pos:start="57:44" pos:end="57:52"><name pos:start="57:44" pos:end="57:52">kvm_state</name></expr></argument>, <argument pos:start="57:55" pos:end="57:72"><expr pos:start="57:55" pos:end="57:72"><operator pos:start="57:55" pos:end="57:55">&amp;</operator><name pos:start="57:56" pos:end="57:72"><name pos:start="57:56" pos:end="57:61">vector</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:72">interrupt</name></name></expr></argument>,

                                           <argument pos:start="59:44" pos:end="59:47"><expr pos:start="59:44" pos:end="59:47"><name pos:start="59:44" pos:end="59:47">NULL</name></expr></argument>, <argument pos:start="59:50" pos:end="59:61"><expr pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:61"><name pos:start="59:50" pos:end="59:55">vector</name><operator pos:start="59:56" pos:end="59:57">-&gt;</operator><name pos:start="59:58" pos:end="59:61">virq</name></name></expr></argument>)</argument_list></call> <operator pos:start="59:64" pos:end="59:64">&lt;</operator> <literal type="number" pos:start="59:66" pos:end="59:66">0</literal></expr>)</condition> <block pos:start="59:69" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:66">

            <expr_stmt pos:start="61:13" pos:end="63:66"><expr pos:start="61:13" pos:end="63:65"><call pos:start="61:13" pos:end="63:65"><name pos:start="61:13" pos:end="61:31">qemu_set_fd_handler</name><argument_list pos:start="61:32" pos:end="63:65">(<argument pos:start="61:33" pos:end="61:73"><expr pos:start="61:33" pos:end="61:73"><call pos:start="61:33" pos:end="61:73"><name pos:start="61:33" pos:end="61:53">event_notifier_get_fd</name><argument_list pos:start="61:54" pos:end="61:73">(<argument pos:start="61:55" pos:end="61:72"><expr pos:start="61:55" pos:end="61:72"><operator pos:start="61:55" pos:end="61:55">&amp;</operator><name pos:start="61:56" pos:end="61:72"><name pos:start="61:56" pos:end="61:61">vector</name><operator pos:start="61:62" pos:end="61:63">-&gt;</operator><name pos:start="61:64" pos:end="61:72">interrupt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="63:33" pos:end="63:50"><expr pos:start="63:33" pos:end="63:50"><name pos:start="63:33" pos:end="63:50">vfio_msi_interrupt</name></expr></argument>, <argument pos:start="63:53" pos:end="63:56"><expr pos:start="63:53" pos:end="63:56"><name pos:start="63:53" pos:end="63:56">NULL</name></expr></argument>, <argument pos:start="63:59" pos:end="63:64"><expr pos:start="63:59" pos:end="63:64"><name pos:start="63:59" pos:end="63:64">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:7">ret</name> <operator pos:start="71:9" pos:end="71:9">=</operator> <call pos:start="71:11" pos:end="71:42"><name pos:start="71:11" pos:end="71:29">vfio_enable_vectors</name><argument_list pos:start="71:30" pos:end="71:42">(<argument pos:start="71:31" pos:end="71:34"><expr pos:start="71:31" pos:end="71:34"><name pos:start="71:31" pos:end="71:34">vdev</name></expr></argument>, <argument pos:start="71:37" pos:end="71:41"><expr pos:start="71:37" pos:end="71:41"><name pos:start="71:37" pos:end="71:41">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="135:5"><if pos:start="73:5" pos:end="135:5">if <condition pos:start="73:8" pos:end="73:12">(<expr pos:start="73:9" pos:end="73:11"><name pos:start="73:9" pos:end="73:11">ret</name></expr>)</condition> <block pos:start="73:14" pos:end="135:5">{<block_content pos:start="75:9" pos:end="133:15">

        <if_stmt pos:start="75:9" pos:end="85:9"><if pos:start="75:9" pos:end="79:9">if <condition pos:start="75:12" pos:end="75:20">(<expr pos:start="75:13" pos:end="75:19"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:17">&lt;</operator> <literal type="number" pos:start="75:19" pos:end="75:19">0</literal></expr>)</condition> <block pos:start="75:22" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:69">

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><call pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:24">error_report</name><argument_list pos:start="77:25" pos:end="77:68">(<argument pos:start="77:26" pos:end="77:67"><expr pos:start="77:26" pos:end="77:67"><literal type="string" pos:start="77:26" pos:end="77:67">"vfio: Error: Failed to setup MSI fds: %m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="79:11" pos:end="85:9">else if <condition pos:start="79:19" pos:end="79:43">(<expr pos:start="79:20" pos:end="79:42"><name pos:start="79:20" pos:end="79:22">ret</name> <operator pos:start="79:24" pos:end="79:25">!=</operator> <name pos:start="79:27" pos:end="79:42"><name pos:start="79:27" pos:end="79:30">vdev</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:42">nr_vectors</name></name></expr>)</condition> <block pos:start="79:45" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:78">

            <expr_stmt pos:start="81:13" pos:end="83:78"><expr pos:start="81:13" pos:end="83:77"><call pos:start="81:13" pos:end="83:77"><name pos:start="81:13" pos:end="81:24">error_report</name><argument_list pos:start="81:25" pos:end="83:77">(<argument pos:start="81:26" pos:end="83:53"><expr pos:start="81:26" pos:end="83:53"><literal type="string" pos:start="81:26" pos:end="81:60">"vfio: Error: Failed to enable %d "</literal>

                         <literal type="string" pos:start="83:26" pos:end="83:53">"MSI vectors, retry with %d"</literal></expr></argument>, <argument pos:start="83:56" pos:end="83:71"><expr pos:start="83:56" pos:end="83:71"><name pos:start="83:56" pos:end="83:71"><name pos:start="83:56" pos:end="83:59">vdev</name><operator pos:start="83:60" pos:end="83:61">-&gt;</operator><name pos:start="83:62" pos:end="83:71">nr_vectors</name></name></expr></argument>, <argument pos:start="83:74" pos:end="83:76"><expr pos:start="83:74" pos:end="83:76"><name pos:start="83:74" pos:end="83:76">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <for pos:start="89:9" pos:end="113:9">for <control pos:start="89:13" pos:end="89:46">(<init pos:start="89:14" pos:end="89:19"><expr pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">i</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <literal type="number" pos:start="89:18" pos:end="89:18">0</literal></expr>;</init> <condition pos:start="89:21" pos:end="89:41"><expr pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:21">i</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <name pos:start="89:25" pos:end="89:40"><name pos:start="89:25" pos:end="89:28">vdev</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:40">nr_vectors</name></name></expr>;</condition> <incr pos:start="89:43" pos:end="89:45"><expr pos:start="89:43" pos:end="89:45"><name pos:start="89:43" pos:end="89:43">i</name><operator pos:start="89:44" pos:end="89:45">++</operator></expr></incr>)</control> <block pos:start="89:48" pos:end="113:9">{<block_content pos:start="91:13" pos:end="111:55">

            <decl_stmt pos:start="91:13" pos:end="91:58"><decl pos:start="91:13" pos:end="91:57"><type pos:start="91:13" pos:end="91:27"><name pos:start="91:13" pos:end="91:25">VFIOMSIVector</name> <modifier pos:start="91:27" pos:end="91:27">*</modifier></type><name pos:start="91:28" pos:end="91:33">vector</name> <init pos:start="91:35" pos:end="91:57">= <expr pos:start="91:37" pos:end="91:57"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:57"><name pos:start="91:38" pos:end="91:41">vdev</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:54">msi_vectors</name><index pos:start="91:55" pos:end="91:57">[<expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="93:13" pos:end="109:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:34">(<expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:22">vector</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:28">virq</name></name> <operator pos:start="93:30" pos:end="93:31">&gt;=</operator> <literal type="number" pos:start="93:33" pos:end="93:33">0</literal></expr>)</condition> <block pos:start="93:36" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:34">

                <expr_stmt pos:start="95:17" pos:end="97:64"><expr pos:start="95:17" pos:end="97:63"><call pos:start="95:17" pos:end="97:63"><name pos:start="95:17" pos:end="95:49">kvm_irqchip_remove_irqfd_notifier</name><argument_list pos:start="95:50" pos:end="97:63">(<argument pos:start="95:51" pos:end="95:59"><expr pos:start="95:51" pos:end="95:59"><name pos:start="95:51" pos:end="95:59">kvm_state</name></expr></argument>, <argument pos:start="95:62" pos:end="95:79"><expr pos:start="95:62" pos:end="95:79"><operator pos:start="95:62" pos:end="95:62">&amp;</operator><name pos:start="95:63" pos:end="95:79"><name pos:start="95:63" pos:end="95:68">vector</name><operator pos:start="95:69" pos:end="95:70">-&gt;</operator><name pos:start="95:71" pos:end="95:79">interrupt</name></name></expr></argument>,

                                                  <argument pos:start="97:51" pos:end="97:62"><expr pos:start="97:51" pos:end="97:62"><name pos:start="97:51" pos:end="97:62"><name pos:start="97:51" pos:end="97:56">vector</name><operator pos:start="97:57" pos:end="97:58">-&gt;</operator><name pos:start="97:59" pos:end="97:62">virq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:66"><expr pos:start="99:17" pos:end="99:65"><call pos:start="99:17" pos:end="99:65"><name pos:start="99:17" pos:end="99:40">kvm_irqchip_release_virq</name><argument_list pos:start="99:41" pos:end="99:65">(<argument pos:start="99:42" pos:end="99:50"><expr pos:start="99:42" pos:end="99:50"><name pos:start="99:42" pos:end="99:50">kvm_state</name></expr></argument>, <argument pos:start="99:53" pos:end="99:64"><expr pos:start="99:53" pos:end="99:64"><name pos:start="99:53" pos:end="99:64"><name pos:start="99:53" pos:end="99:58">vector</name><operator pos:start="99:59" pos:end="99:60">-&gt;</operator><name pos:start="99:61" pos:end="99:64">virq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:34"><expr pos:start="101:17" pos:end="101:33"><name pos:start="101:17" pos:end="101:28"><name pos:start="101:17" pos:end="101:22">vector</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:28">virq</name></name> <operator pos:start="101:30" pos:end="101:30">=</operator> <operator pos:start="101:32" pos:end="101:32">-</operator><literal type="number" pos:start="101:33" pos:end="101:33">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="103:15" pos:end="109:13">else <block pos:start="103:20" pos:end="109:13">{<block_content pos:start="105:17" pos:end="107:54">

                <expr_stmt pos:start="105:17" pos:end="107:54"><expr pos:start="105:17" pos:end="107:53"><call pos:start="105:17" pos:end="107:53"><name pos:start="105:17" pos:end="105:35">qemu_set_fd_handler</name><argument_list pos:start="105:36" pos:end="107:53">(<argument pos:start="105:37" pos:end="105:77"><expr pos:start="105:37" pos:end="105:77"><call pos:start="105:37" pos:end="105:77"><name pos:start="105:37" pos:end="105:57">event_notifier_get_fd</name><argument_list pos:start="105:58" pos:end="105:77">(<argument pos:start="105:59" pos:end="105:76"><expr pos:start="105:59" pos:end="105:76"><operator pos:start="105:59" pos:end="105:59">&amp;</operator><name pos:start="105:60" pos:end="105:76"><name pos:start="105:60" pos:end="105:65">vector</name><operator pos:start="105:66" pos:end="105:67">-&gt;</operator><name pos:start="105:68" pos:end="105:76">interrupt</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                    <argument pos:start="107:37" pos:end="107:40"><expr pos:start="107:37" pos:end="107:40"><name pos:start="107:37" pos:end="107:40">NULL</name></expr></argument>, <argument pos:start="107:43" pos:end="107:46"><expr pos:start="107:43" pos:end="107:46"><name pos:start="107:43" pos:end="107:46">NULL</name></expr></argument>, <argument pos:start="107:49" pos:end="107:52"><expr pos:start="107:49" pos:end="107:52"><name pos:start="107:49" pos:end="107:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:55"><expr pos:start="111:13" pos:end="111:54"><call pos:start="111:13" pos:end="111:54"><name pos:start="111:13" pos:end="111:34">event_notifier_cleanup</name><argument_list pos:start="111:35" pos:end="111:54">(<argument pos:start="111:36" pos:end="111:53"><expr pos:start="111:36" pos:end="111:53"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:53"><name pos:start="111:37" pos:end="111:42">vector</name><operator pos:start="111:43" pos:end="111:44">-&gt;</operator><name pos:start="111:45" pos:end="111:53">interrupt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><call pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:14">g_free</name><argument_list pos:start="117:15" pos:end="117:33">(<argument pos:start="117:16" pos:end="117:32"><expr pos:start="117:16" pos:end="117:32"><name pos:start="117:16" pos:end="117:32"><name pos:start="117:16" pos:end="117:19">vdev</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:32">msi_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="127:9"><if pos:start="121:9" pos:end="127:9">if <condition pos:start="121:12" pos:end="121:47">(<expr pos:start="121:13" pos:end="121:46"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">&gt;</operator> <literal type="number" pos:start="121:19" pos:end="121:19">0</literal> <operator pos:start="121:21" pos:end="121:22">&amp;&amp;</operator> <name pos:start="121:24" pos:end="121:26">ret</name> <operator pos:start="121:28" pos:end="121:29">!=</operator> <name pos:start="121:31" pos:end="121:46"><name pos:start="121:31" pos:end="121:34">vdev</name><operator pos:start="121:35" pos:end="121:36">-&gt;</operator><name pos:start="121:37" pos:end="121:46">nr_vectors</name></name></expr>)</condition> <block pos:start="121:49" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:23">

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:28"><name pos:start="123:13" pos:end="123:16">vdev</name><operator pos:start="123:17" pos:end="123:18">-&gt;</operator><name pos:start="123:19" pos:end="123:28">nr_vectors</name></name> <operator pos:start="123:30" pos:end="123:30">=</operator> <name pos:start="123:32" pos:end="123:34">ret</name></expr>;</expr_stmt>

            <goto pos:start="125:13" pos:end="125:23">goto <name pos:start="125:18" pos:end="125:22">retry</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:29"><expr pos:start="129:9" pos:end="129:28"><name pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:12">vdev</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:24">nr_vectors</name></name> <operator pos:start="129:26" pos:end="129:26">=</operator> <literal type="number" pos:start="129:28" pos:end="129:28">0</literal></expr>;</expr_stmt>



        <return pos:start="133:9" pos:end="133:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:35"><expr pos:start="139:5" pos:end="139:34"><name pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:8">vdev</name><operator pos:start="139:9" pos:end="139:10">-&gt;</operator><name pos:start="139:11" pos:end="139:19">interrupt</name></name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:34">VFIO_INT_MSI</name></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="147:51"><expr pos:start="143:5" pos:end="147:50"><call pos:start="143:5" pos:end="147:50"><name pos:start="143:5" pos:end="143:11">DPRINTF</name><argument_list pos:start="143:12" pos:end="147:50">(<argument pos:start="143:13" pos:end="143:60"><expr pos:start="143:13" pos:end="143:60"><literal type="string" pos:start="143:13" pos:end="143:60">"%s(%04x:%02x:%02x.%x) Enabled %d MSI vectors\n"</literal></expr></argument>, <argument pos:start="143:63" pos:end="143:70"><expr pos:start="143:63" pos:end="143:70"><name pos:start="143:63" pos:end="143:70">__func__</name></expr></argument>,

            <argument pos:start="145:13" pos:end="145:29"><expr pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:16">vdev</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:22">host</name><operator pos:start="145:23" pos:end="145:23">.</operator><name pos:start="145:24" pos:end="145:29">domain</name></name></expr></argument>, <argument pos:start="145:32" pos:end="145:45"><expr pos:start="145:32" pos:end="145:45"><name pos:start="145:32" pos:end="145:45"><name pos:start="145:32" pos:end="145:35">vdev</name><operator pos:start="145:36" pos:end="145:37">-&gt;</operator><name pos:start="145:38" pos:end="145:41">host</name><operator pos:start="145:42" pos:end="145:42">.</operator><name pos:start="145:43" pos:end="145:45">bus</name></name></expr></argument>, <argument pos:start="145:48" pos:end="145:62"><expr pos:start="145:48" pos:end="145:62"><name pos:start="145:48" pos:end="145:62"><name pos:start="145:48" pos:end="145:51">vdev</name><operator pos:start="145:52" pos:end="145:53">-&gt;</operator><name pos:start="145:54" pos:end="145:57">host</name><operator pos:start="145:58" pos:end="145:58">.</operator><name pos:start="145:59" pos:end="145:62">slot</name></name></expr></argument>,

            <argument pos:start="147:13" pos:end="147:31"><expr pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:16">vdev</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:22">host</name><operator pos:start="147:23" pos:end="147:23">.</operator><name pos:start="147:24" pos:end="147:31">function</name></name></expr></argument>, <argument pos:start="147:34" pos:end="147:49"><expr pos:start="147:34" pos:end="147:49"><name pos:start="147:34" pos:end="147:49"><name pos:start="147:34" pos:end="147:37">vdev</name><operator pos:start="147:38" pos:end="147:39">-&gt;</operator><name pos:start="147:40" pos:end="147:49">nr_vectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
