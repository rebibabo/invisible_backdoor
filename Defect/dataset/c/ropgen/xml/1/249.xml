<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/249.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">gen_op_arith_subf</name><parameter_list pos:start="1:37" pos:end="5:52">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:60">TCGv</name></type> <name pos:start="1:62" pos:end="1:64">ret</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:75"><decl pos:start="1:67" pos:end="1:75"><type pos:start="1:67" pos:end="1:75"><name pos:start="1:67" pos:end="1:70">TCGv</name></type> <name pos:start="1:72" pos:end="1:75">arg1</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:41">TCGv</name></type> <name pos:start="3:43" pos:end="3:46">arg2</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:58"><decl pos:start="3:49" pos:end="3:58"><type pos:start="3:49" pos:end="3:58"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:58">add_ca</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:74"><decl pos:start="3:61" pos:end="3:74"><type pos:start="3:61" pos:end="3:74"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:74">compute_ca</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:51"><decl pos:start="5:38" pos:end="5:51"><type pos:start="5:38" pos:end="5:51"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:51">compute_ov</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="107:1">{<block_content pos:start="9:5" pos:end="105:5">

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:11">t0</name></decl>, <decl pos:start="9:14" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:14" pos:end="9:15">t1</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:59">(<expr pos:start="13:9" pos:end="15:58"><operator pos:start="13:9" pos:end="13:9">(</operator><operator pos:start="13:10" pos:end="13:10">!</operator><name pos:start="13:11" pos:end="13:20">compute_ca</name> <operator pos:start="13:22" pos:end="13:23">&amp;&amp;</operator> <operator pos:start="13:25" pos:end="13:25">!</operator><name pos:start="13:26" pos:end="13:35">compute_ov</name><operator pos:start="13:36" pos:end="13:36">)</operator> <operator pos:start="13:38" pos:end="13:39">||</operator>

        <operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">!</operator><call pos:start="15:11" pos:end="15:31"><name pos:start="15:11" pos:end="15:20">TCGV_EQUAL</name><argument_list pos:start="15:21" pos:end="15:31">(<argument pos:start="15:22" pos:end="15:24"><expr pos:start="15:22" pos:end="15:24"><name pos:start="15:22" pos:end="15:24">ret</name></expr></argument>, <argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">arg1</name></expr></argument>)</argument_list></call> <operator pos:start="15:33" pos:end="15:34">&amp;&amp;</operator> <operator pos:start="15:36" pos:end="15:36">!</operator><call pos:start="15:37" pos:end="15:57"><name pos:start="15:37" pos:end="15:46">TCGV_EQUAL</name><argument_list pos:start="15:47" pos:end="15:57">(<argument pos:start="15:48" pos:end="15:50"><expr pos:start="15:48" pos:end="15:50"><name pos:start="15:48" pos:end="15:50">ret</name></expr></argument>, <argument pos:start="15:53" pos:end="15:56"><expr pos:start="15:53" pos:end="15:56"><name pos:start="15:53" pos:end="15:56">arg2</name></expr></argument>)</argument_list></call><operator pos:start="15:58" pos:end="15:58">)</operator></expr>)</condition>  <block pos:start="15:62" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <expr_stmt pos:start="17:9" pos:end="17:17"><expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:10">t0</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <name pos:start="17:14" pos:end="17:16">ret</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:34">

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:10">t0</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <call pos:start="21:14" pos:end="21:33"><name pos:start="21:14" pos:end="21:31">tcg_temp_local_new</name><argument_list pos:start="21:32" pos:end="21:33">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:14">add_ca</name></expr>)</condition> <block pos:start="27:17" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:35">

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:10">t1</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <call pos:start="29:14" pos:end="29:33"><name pos:start="29:14" pos:end="29:31">tcg_temp_local_new</name><argument_list pos:start="29:32" pos:end="29:33">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><call pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:22">tcg_gen_mov_tl</name><argument_list pos:start="31:23" pos:end="31:34">(<argument pos:start="31:24" pos:end="31:25"><expr pos:start="31:24" pos:end="31:25"><name pos:start="31:24" pos:end="31:25">t1</name></expr></argument>, <argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">cpu_ca</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:24">

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><call pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:19">TCGV_UNUSED</name><argument_list pos:start="35:20" pos:end="35:23">(<argument pos:start="35:21" pos:end="35:22"><expr pos:start="35:21" pos:end="35:22"><name pos:start="35:21" pos:end="35:22">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:18">compute_ca</name></expr>)</condition> <block pos:start="41:21" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:35">

        <comment type="block" pos:start="43:9" pos:end="43:62">/* Start with XER CA disabled, the most likely case */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:23">tcg_gen_movi_tl</name><argument_list pos:start="45:24" pos:end="45:34">(<argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">cpu_ca</name></expr></argument>, <argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:19">(<expr pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:18">compute_ov</name></expr>)</condition> <block pos:start="49:21" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:35">

        <comment type="block" pos:start="51:9" pos:end="51:62">/* Start with XER OV disabled, the most likely case */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:35"><expr pos:start="53:9" pos:end="53:34"><call pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:23">tcg_gen_movi_tl</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:30"><name pos:start="53:25" pos:end="53:30">cpu_ov</name></expr></argument>, <argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="83:5"><if pos:start="59:5" pos:end="73:5">if <condition pos:start="59:8" pos:end="59:15">(<expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:14">add_ca</name></expr>)</condition> <block pos:start="59:17" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:26">

        <expr_stmt pos:start="61:9" pos:end="61:33"><expr pos:start="61:9" pos:end="61:32"><call pos:start="61:9" pos:end="61:32"><name pos:start="61:9" pos:end="61:22">tcg_gen_not_tl</name><argument_list pos:start="61:23" pos:end="61:32">(<argument pos:start="61:24" pos:end="61:25"><expr pos:start="61:24" pos:end="61:25"><name pos:start="61:24" pos:end="61:25">t0</name></expr></argument>, <argument pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><name pos:start="61:28" pos:end="61:31">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:37"><expr pos:start="63:9" pos:end="63:36"><call pos:start="63:9" pos:end="63:36"><name pos:start="63:9" pos:end="63:22">tcg_gen_add_tl</name><argument_list pos:start="63:23" pos:end="63:36">(<argument pos:start="63:24" pos:end="63:25"><expr pos:start="63:24" pos:end="63:25"><name pos:start="63:24" pos:end="63:25">t0</name></expr></argument>, <argument pos:start="63:28" pos:end="63:29"><expr pos:start="63:28" pos:end="63:29"><name pos:start="63:28" pos:end="63:29">t0</name></expr></argument>, <argument pos:start="63:32" pos:end="63:35"><expr pos:start="63:32" pos:end="63:35"><name pos:start="63:32" pos:end="63:35">arg2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:50"><expr pos:start="65:9" pos:end="65:49"><call pos:start="65:9" pos:end="65:49"><name pos:start="65:9" pos:end="65:31">gen_op_arith_compute_ca</name><argument_list pos:start="65:32" pos:end="65:49">(<argument pos:start="65:33" pos:end="65:35"><expr pos:start="65:33" pos:end="65:35"><name pos:start="65:33" pos:end="65:35">ctx</name></expr></argument>, <argument pos:start="65:38" pos:end="65:39"><expr pos:start="65:38" pos:end="65:39"><name pos:start="65:38" pos:end="65:39">t0</name></expr></argument>, <argument pos:start="65:42" pos:end="65:45"><expr pos:start="65:42" pos:end="65:45"><name pos:start="65:42" pos:end="65:45">arg2</name></expr></argument>, <argument pos:start="65:48" pos:end="65:48"><expr pos:start="65:48" pos:end="65:48"><literal type="number" pos:start="65:48" pos:end="65:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><call pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:22">tcg_gen_add_tl</name><argument_list pos:start="67:23" pos:end="67:34">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">t0</name></expr></argument>, <argument pos:start="67:28" pos:end="67:29"><expr pos:start="67:28" pos:end="67:29"><name pos:start="67:28" pos:end="67:29">t0</name></expr></argument>, <argument pos:start="67:32" pos:end="67:33"><expr pos:start="67:32" pos:end="67:33"><name pos:start="67:32" pos:end="67:33">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:48"><expr pos:start="69:9" pos:end="69:47"><call pos:start="69:9" pos:end="69:47"><name pos:start="69:9" pos:end="69:31">gen_op_arith_compute_ca</name><argument_list pos:start="69:32" pos:end="69:47">(<argument pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:35">ctx</name></expr></argument>, <argument pos:start="69:38" pos:end="69:39"><expr pos:start="69:38" pos:end="69:39"><name pos:start="69:38" pos:end="69:39">t0</name></expr></argument>, <argument pos:start="69:42" pos:end="69:43"><expr pos:start="69:42" pos:end="69:43"><name pos:start="69:42" pos:end="69:43">t1</name></expr></argument>, <argument pos:start="69:46" pos:end="69:46"><expr pos:start="69:46" pos:end="69:46"><literal type="number" pos:start="69:46" pos:end="69:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><call pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:21">tcg_temp_free</name><argument_list pos:start="71:22" pos:end="71:25">(<argument pos:start="71:23" pos:end="71:24"><expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="83:5">else <block pos:start="73:12" pos:end="83:5">{<block_content pos:start="75:9" pos:end="81:9">

        <expr_stmt pos:start="75:9" pos:end="75:39"><expr pos:start="75:9" pos:end="75:38"><call pos:start="75:9" pos:end="75:38"><name pos:start="75:9" pos:end="75:22">tcg_gen_sub_tl</name><argument_list pos:start="75:23" pos:end="75:38">(<argument pos:start="75:24" pos:end="75:25"><expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">t0</name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">arg2</name></expr></argument>, <argument pos:start="75:34" pos:end="75:37"><expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">arg1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:23">(<expr pos:start="77:13" pos:end="77:22"><name pos:start="77:13" pos:end="77:22">compute_ca</name></expr>)</condition> <block pos:start="77:25" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:54">

            <expr_stmt pos:start="79:13" pos:end="79:54"><expr pos:start="79:13" pos:end="79:53"><call pos:start="79:13" pos:end="79:53"><name pos:start="79:13" pos:end="79:35">gen_op_arith_compute_ca</name><argument_list pos:start="79:36" pos:end="79:53">(<argument pos:start="79:37" pos:end="79:39"><expr pos:start="79:37" pos:end="79:39"><name pos:start="79:37" pos:end="79:39">ctx</name></expr></argument>, <argument pos:start="79:42" pos:end="79:43"><expr pos:start="79:42" pos:end="79:43"><name pos:start="79:42" pos:end="79:43">t0</name></expr></argument>, <argument pos:start="79:46" pos:end="79:49"><expr pos:start="79:46" pos:end="79:49"><name pos:start="79:46" pos:end="79:49">arg2</name></expr></argument>, <argument pos:start="79:52" pos:end="79:52"><expr pos:start="79:52" pos:end="79:52"><literal type="number" pos:start="79:52" pos:end="79:52">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="85:5" pos:end="89:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:18">compute_ov</name></expr>)</condition> <block pos:start="85:21" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:56">

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><call pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:31">gen_op_arith_compute_ov</name><argument_list pos:start="87:32" pos:end="87:55">(<argument pos:start="87:33" pos:end="87:35"><expr pos:start="87:33" pos:end="87:35"><name pos:start="87:33" pos:end="87:35">ctx</name></expr></argument>, <argument pos:start="87:38" pos:end="87:39"><expr pos:start="87:38" pos:end="87:39"><name pos:start="87:38" pos:end="87:39">t0</name></expr></argument>, <argument pos:start="87:42" pos:end="87:45"><expr pos:start="87:42" pos:end="87:45"><name pos:start="87:42" pos:end="87:45">arg1</name></expr></argument>, <argument pos:start="87:48" pos:end="87:51"><expr pos:start="87:48" pos:end="87:51"><name pos:start="87:48" pos:end="87:51">arg2</name></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="95:29"><if pos:start="93:5" pos:end="95:29">if <condition pos:start="93:8" pos:end="93:39">(<expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:16">unlikely</name><argument_list pos:start="93:17" pos:end="93:38">(<argument pos:start="93:18" pos:end="93:37"><expr pos:start="93:18" pos:end="93:37"><call pos:start="93:18" pos:end="93:32"><name pos:start="93:18" pos:end="93:19">Rc</name><argument_list pos:start="93:20" pos:end="93:32">(<argument pos:start="93:21" pos:end="93:31"><expr pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:31"><name pos:start="93:21" pos:end="93:23">ctx</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="93:34" pos:end="93:35">!=</operator> <literal type="number" pos:start="93:37" pos:end="93:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:29"><block_content pos:start="95:9" pos:end="95:29">

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><call pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:19">gen_set_Rc0</name><argument_list pos:start="95:20" pos:end="95:28">(<argument pos:start="95:21" pos:end="95:23"><expr pos:start="95:21" pos:end="95:23"><name pos:start="95:21" pos:end="95:23">ctx</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:29">(<expr pos:start="99:9" pos:end="99:28"><operator pos:start="99:9" pos:end="99:9">!</operator><call pos:start="99:10" pos:end="99:28"><name pos:start="99:10" pos:end="99:19">TCGV_EQUAL</name><argument_list pos:start="99:20" pos:end="99:28">(<argument pos:start="99:21" pos:end="99:22"><expr pos:start="99:21" pos:end="99:22"><name pos:start="99:21" pos:end="99:22">t0</name></expr></argument>, <argument pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:27">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:31" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:26">

        <expr_stmt pos:start="101:9" pos:end="101:32"><expr pos:start="101:9" pos:end="101:31"><call pos:start="101:9" pos:end="101:31"><name pos:start="101:9" pos:end="101:22">tcg_gen_mov_tl</name><argument_list pos:start="101:23" pos:end="101:31">(<argument pos:start="101:24" pos:end="101:26"><expr pos:start="101:24" pos:end="101:26"><name pos:start="101:24" pos:end="101:26">ret</name></expr></argument>, <argument pos:start="101:29" pos:end="101:30"><expr pos:start="101:29" pos:end="101:30"><name pos:start="101:29" pos:end="101:30">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:26"><expr pos:start="103:9" pos:end="103:25"><call pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:21">tcg_temp_free</name><argument_list pos:start="103:22" pos:end="103:25">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
