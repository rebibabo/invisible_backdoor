<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20767.c" pos:tabs="8"><function pos:start="1:1" pos:end="122:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">init_proc_POWER7</name> <parameter_list pos:start="1:30" pos:end="1:47">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">CPUPPCState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="122:1">{<block_content pos:start="5:5" pos:end="120:31">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">gen_spr_ne_601</name><argument_list pos:start="5:19" pos:end="5:23">(<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:15">gen_spr_7xx</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:19">/* Time base */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><call pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11">gen_tbl</name><argument_list pos:start="11:12" pos:end="11:16">(<argument pos:start="11:13" pos:end="11:15"><expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:34">/* Processor identification */</comment>

    <expr_stmt pos:start="15:5" pos:end="24:0"><expr pos:start="15:5" pos:end="21:28"><call pos:start="15:5" pos:end="21:28"><name pos:start="15:5" pos:end="15:16">spr_register</name><argument_list pos:start="15:17" pos:end="21:28">(<argument pos:start="15:18" pos:end="15:20"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:20">env</name></expr></argument>, <argument pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:29"><name pos:start="15:23" pos:end="15:29">SPR_PIR</name></expr></argument>, <argument pos:start="15:32" pos:end="15:36"><expr pos:start="15:32" pos:end="15:36"><literal type="string" pos:start="15:32" pos:end="15:36">"PIR"</literal></expr></argument>,

                 <argument pos:start="17:18" pos:end="17:29"><expr pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="17:32" pos:end="17:43"><expr pos:start="17:32" pos:end="17:43"><name pos:start="17:32" pos:end="17:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="19:18" pos:end="19:34"><expr pos:start="19:18" pos:end="19:34"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:34">spr_read_generic</name></expr></argument>, <argument pos:start="19:37" pos:end="19:50"><expr pos:start="19:37" pos:end="19:50"><operator pos:start="19:37" pos:end="19:37">&amp;</operator><name pos:start="19:38" pos:end="19:50">spr_write_pir</name></expr></argument>,

                 <argument pos:start="21:18" pos:end="21:27"><expr pos:start="21:18" pos:end="21:27"><literal type="number" pos:start="21:18" pos:end="21:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="23:1" pos:end="23:30">#<cpp:directive pos:start="23:2" pos:end="23:3">if</cpp:directive> <expr pos:start="23:5" pos:end="23:30"><operator pos:start="23:5" pos:end="23:5">!</operator><call pos:start="23:6" pos:end="23:30"><name pos:start="23:6" pos:end="23:12">defined</name><argument_list pos:start="23:13" pos:end="23:30">(<argument pos:start="23:14" pos:end="23:29"><expr pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <comment type="block" pos:start="25:5" pos:end="25:72">/* PURR &amp; SPURR: Hack - treat these as aliases for the TB for now */</comment>

    <expr_stmt pos:start="27:5" pos:end="33:51"><expr pos:start="27:5" pos:end="33:50"><call pos:start="27:5" pos:end="33:50"><name pos:start="27:5" pos:end="27:20">spr_register_kvm</name><argument_list pos:start="27:21" pos:end="33:50">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><name pos:start="27:22" pos:end="27:24">env</name></expr></argument>, <argument pos:start="27:27" pos:end="27:34"><expr pos:start="27:27" pos:end="27:34"><name pos:start="27:27" pos:end="27:34">SPR_PURR</name></expr></argument>,   <argument pos:start="27:39" pos:end="27:44"><expr pos:start="27:39" pos:end="27:44"><literal type="string" pos:start="27:39" pos:end="27:44">"PURR"</literal></expr></argument>,

                     <argument pos:start="29:22" pos:end="29:35"><expr pos:start="29:22" pos:end="29:35"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:35">spr_read_purr</name></expr></argument>, <argument pos:start="29:38" pos:end="29:49"><expr pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:49">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:35">spr_read_purr</name></expr></argument>, <argument pos:start="31:38" pos:end="31:49"><expr pos:start="31:38" pos:end="31:49"><name pos:start="31:38" pos:end="31:49">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="33:22" pos:end="33:37"><expr pos:start="33:22" pos:end="33:37"><name pos:start="33:22" pos:end="33:37">KVM_REG_PPC_PURR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:49"><expr pos:start="33:40" pos:end="33:49"><literal type="number" pos:start="33:40" pos:end="33:49">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="41:52"><expr pos:start="35:5" pos:end="41:51"><call pos:start="35:5" pos:end="41:51"><name pos:start="35:5" pos:end="35:20">spr_register_kvm</name><argument_list pos:start="35:21" pos:end="41:51">(<argument pos:start="35:22" pos:end="35:24"><expr pos:start="35:22" pos:end="35:24"><name pos:start="35:22" pos:end="35:24">env</name></expr></argument>, <argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:35">SPR_SPURR</name></expr></argument>,   <argument pos:start="35:40" pos:end="35:46"><expr pos:start="35:40" pos:end="35:46"><literal type="string" pos:start="35:40" pos:end="35:46">"SPURR"</literal></expr></argument>,

                     <argument pos:start="37:22" pos:end="37:35"><expr pos:start="37:22" pos:end="37:35"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:35">spr_read_purr</name></expr></argument>, <argument pos:start="37:38" pos:end="37:49"><expr pos:start="37:38" pos:end="37:49"><name pos:start="37:38" pos:end="37:49">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="39:22" pos:end="39:35"><expr pos:start="39:22" pos:end="39:35"><operator pos:start="39:22" pos:end="39:22">&amp;</operator><name pos:start="39:23" pos:end="39:35">spr_read_purr</name></expr></argument>, <argument pos:start="39:38" pos:end="39:49"><expr pos:start="39:38" pos:end="39:49"><name pos:start="39:38" pos:end="39:49">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:38"><expr pos:start="41:22" pos:end="41:38"><name pos:start="41:22" pos:end="41:38">KVM_REG_PPC_SPURR</name></expr></argument>, <argument pos:start="41:41" pos:end="41:50"><expr pos:start="41:41" pos:end="41:50"><literal type="number" pos:start="41:41" pos:end="41:50">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="49:29"><expr pos:start="43:5" pos:end="49:28"><call pos:start="43:5" pos:end="49:28"><name pos:start="43:5" pos:end="43:16">spr_register</name><argument_list pos:start="43:17" pos:end="49:28">(<argument pos:start="43:18" pos:end="43:20"><expr pos:start="43:18" pos:end="43:20"><name pos:start="43:18" pos:end="43:20">env</name></expr></argument>, <argument pos:start="43:23" pos:end="43:30"><expr pos:start="43:23" pos:end="43:30"><name pos:start="43:23" pos:end="43:30">SPR_CFAR</name></expr></argument>, <argument pos:start="43:33" pos:end="43:42"><expr pos:start="43:33" pos:end="43:42"><literal type="string" pos:start="43:33" pos:end="43:42">"SPR_CFAR"</literal></expr></argument>,

                 <argument pos:start="45:18" pos:end="45:29"><expr pos:start="45:18" pos:end="45:29"><name pos:start="45:18" pos:end="45:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="45:32" pos:end="45:43"><expr pos:start="45:32" pos:end="45:43"><name pos:start="45:32" pos:end="45:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="47:18" pos:end="47:31"><expr pos:start="47:18" pos:end="47:31"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:31">spr_read_cfar</name></expr></argument>, <argument pos:start="47:34" pos:end="47:48"><expr pos:start="47:34" pos:end="47:48"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:48">spr_write_cfar</name></expr></argument>,

                 <argument pos:start="49:18" pos:end="49:27"><expr pos:start="49:18" pos:end="49:27"><literal type="number" pos:start="49:18" pos:end="49:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="60:0"><expr pos:start="51:5" pos:end="57:50"><call pos:start="51:5" pos:end="57:50"><name pos:start="51:5" pos:end="51:20">spr_register_kvm</name><argument_list pos:start="51:21" pos:end="57:50">(<argument pos:start="51:22" pos:end="51:24"><expr pos:start="51:22" pos:end="51:24"><name pos:start="51:22" pos:end="51:24">env</name></expr></argument>, <argument pos:start="51:27" pos:end="51:34"><expr pos:start="51:27" pos:end="51:34"><name pos:start="51:27" pos:end="51:34">SPR_DSCR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:46"><expr pos:start="51:37" pos:end="51:46"><literal type="string" pos:start="51:37" pos:end="51:46">"SPR_DSCR"</literal></expr></argument>,

                     <argument pos:start="53:22" pos:end="53:33"><expr pos:start="53:22" pos:end="53:33"><name pos:start="53:22" pos:end="53:33">SPR_NOACCESS</name></expr></argument>, <argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><name pos:start="53:36" pos:end="53:47">SPR_NOACCESS</name></expr></argument>,

                     <argument pos:start="55:22" pos:end="55:38"><expr pos:start="55:22" pos:end="55:38"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:38">spr_read_generic</name></expr></argument>, <argument pos:start="55:41" pos:end="55:58"><expr pos:start="55:41" pos:end="55:58"><operator pos:start="55:41" pos:end="55:41">&amp;</operator><name pos:start="55:42" pos:end="55:58">spr_write_generic</name></expr></argument>,

                     <argument pos:start="57:22" pos:end="57:37"><expr pos:start="57:22" pos:end="57:37"><name pos:start="57:22" pos:end="57:37">KVM_REG_PPC_DSCR</name></expr></argument>, <argument pos:start="57:40" pos:end="57:49"><expr pos:start="57:40" pos:end="57:49"><literal type="number" pos:start="57:40" pos:end="57:49">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="59:8" pos:end="59:30">/* !CONFIG_USER_ONLY */</comment>

    <comment type="block" pos:start="61:5" pos:end="61:27">/* Memory management */</comment>

    <comment type="block" pos:start="63:5" pos:end="63:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="65:5" pos:end="71:29"><expr pos:start="65:5" pos:end="71:28"><call pos:start="65:5" pos:end="71:28"><name pos:start="65:5" pos:end="65:16">spr_register</name><argument_list pos:start="65:17" pos:end="71:28">(<argument pos:start="65:18" pos:end="65:20"><expr pos:start="65:18" pos:end="65:20"><name pos:start="65:18" pos:end="65:20">env</name></expr></argument>, <argument pos:start="65:23" pos:end="65:32"><expr pos:start="65:23" pos:end="65:32"><name pos:start="65:23" pos:end="65:32">SPR_MMUCFG</name></expr></argument>, <argument pos:start="65:35" pos:end="65:42"><expr pos:start="65:35" pos:end="65:42"><literal type="string" pos:start="65:35" pos:end="65:42">"MMUCFG"</literal></expr></argument>,

                 <argument pos:start="67:18" pos:end="67:29"><expr pos:start="67:18" pos:end="67:29"><name pos:start="67:18" pos:end="67:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="67:32" pos:end="67:43"><expr pos:start="67:32" pos:end="67:43"><name pos:start="67:32" pos:end="67:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="69:18" pos:end="69:34"><expr pos:start="69:18" pos:end="69:34"><operator pos:start="69:18" pos:end="69:18">&amp;</operator><name pos:start="69:19" pos:end="69:34">spr_read_generic</name></expr></argument>, <argument pos:start="69:37" pos:end="69:48"><expr pos:start="69:37" pos:end="69:48"><name pos:start="69:37" pos:end="69:48">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="71:18" pos:end="71:27"><expr pos:start="71:18" pos:end="71:27"><literal type="number" pos:start="71:18" pos:end="71:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:31" pos:end="71:41">/* TOFIX */</comment>


    <comment type="block" pos:start="74:5" pos:end="74:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="76:5" pos:end="82:29"><expr pos:start="76:5" pos:end="82:28"><call pos:start="76:5" pos:end="82:28"><name pos:start="76:5" pos:end="76:16">spr_register</name><argument_list pos:start="76:17" pos:end="82:28">(<argument pos:start="76:18" pos:end="76:20"><expr pos:start="76:18" pos:end="76:20"><name pos:start="76:18" pos:end="76:20">env</name></expr></argument>, <argument pos:start="76:23" pos:end="76:30"><expr pos:start="76:23" pos:end="76:30"><name pos:start="76:23" pos:end="76:30">SPR_CTRL</name></expr></argument>, <argument pos:start="76:33" pos:end="76:43"><expr pos:start="76:33" pos:end="76:43"><literal type="string" pos:start="76:33" pos:end="76:43">"SPR_CTRLT"</literal></expr></argument>,

                 <argument pos:start="78:18" pos:end="78:29"><expr pos:start="78:18" pos:end="78:29"><name pos:start="78:18" pos:end="78:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="78:32" pos:end="78:43"><expr pos:start="78:32" pos:end="78:43"><name pos:start="78:32" pos:end="78:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="80:18" pos:end="80:34"><expr pos:start="80:18" pos:end="80:34"><operator pos:start="80:18" pos:end="80:18">&amp;</operator><name pos:start="80:19" pos:end="80:34">spr_read_generic</name></expr></argument>, <argument pos:start="80:37" pos:end="80:54"><expr pos:start="80:37" pos:end="80:54"><operator pos:start="80:37" pos:end="80:37">&amp;</operator><name pos:start="80:38" pos:end="80:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="82:18" pos:end="82:27"><expr pos:start="82:18" pos:end="82:27"><literal type="number" pos:start="82:18" pos:end="82:27">0x80800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="84:5" pos:end="90:29"><expr pos:start="84:5" pos:end="90:28"><call pos:start="84:5" pos:end="90:28"><name pos:start="84:5" pos:end="84:16">spr_register</name><argument_list pos:start="84:17" pos:end="90:28">(<argument pos:start="84:18" pos:end="84:20"><expr pos:start="84:18" pos:end="84:20"><name pos:start="84:18" pos:end="84:20">env</name></expr></argument>, <argument pos:start="84:23" pos:end="84:31"><expr pos:start="84:23" pos:end="84:31"><name pos:start="84:23" pos:end="84:31">SPR_UCTRL</name></expr></argument>, <argument pos:start="84:34" pos:end="84:44"><expr pos:start="84:34" pos:end="84:44"><literal type="string" pos:start="84:34" pos:end="84:44">"SPR_CTRLF"</literal></expr></argument>,

                 <argument pos:start="86:18" pos:end="86:29"><expr pos:start="86:18" pos:end="86:29"><name pos:start="86:18" pos:end="86:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="86:32" pos:end="86:43"><expr pos:start="86:32" pos:end="86:43"><name pos:start="86:32" pos:end="86:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="88:18" pos:end="88:34"><expr pos:start="88:18" pos:end="88:34"><operator pos:start="88:18" pos:end="88:18">&amp;</operator><name pos:start="88:19" pos:end="88:34">spr_read_generic</name></expr></argument>, <argument pos:start="88:37" pos:end="88:54"><expr pos:start="88:37" pos:end="88:54"><operator pos:start="88:37" pos:end="88:37">&amp;</operator><name pos:start="88:38" pos:end="88:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="90:18" pos:end="90:27"><expr pos:start="90:18" pos:end="90:27"><literal type="number" pos:start="90:18" pos:end="90:27">0x80800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="92:5" pos:end="101:0"><expr pos:start="92:5" pos:end="98:28"><call pos:start="92:5" pos:end="98:28"><name pos:start="92:5" pos:end="92:16">spr_register</name><argument_list pos:start="92:17" pos:end="98:28">(<argument pos:start="92:18" pos:end="92:20"><expr pos:start="92:18" pos:end="92:20"><name pos:start="92:18" pos:end="92:20">env</name></expr></argument>, <argument pos:start="92:23" pos:end="92:32"><expr pos:start="92:23" pos:end="92:32"><name pos:start="92:23" pos:end="92:32">SPR_VRSAVE</name></expr></argument>, <argument pos:start="92:35" pos:end="92:46"><expr pos:start="92:35" pos:end="92:46"><literal type="string" pos:start="92:35" pos:end="92:46">"SPR_VRSAVE"</literal></expr></argument>,

                 <argument pos:start="94:18" pos:end="94:34"><expr pos:start="94:18" pos:end="94:34"><operator pos:start="94:18" pos:end="94:18">&amp;</operator><name pos:start="94:19" pos:end="94:34">spr_read_generic</name></expr></argument>, <argument pos:start="94:37" pos:end="94:54"><expr pos:start="94:37" pos:end="94:54"><operator pos:start="94:37" pos:end="94:37">&amp;</operator><name pos:start="94:38" pos:end="94:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="96:18" pos:end="96:34"><expr pos:start="96:18" pos:end="96:34"><operator pos:start="96:18" pos:end="96:18">&amp;</operator><name pos:start="96:19" pos:end="96:34">spr_read_generic</name></expr></argument>, <argument pos:start="96:37" pos:end="96:54"><expr pos:start="96:37" pos:end="96:54"><operator pos:start="96:37" pos:end="96:37">&amp;</operator><name pos:start="96:38" pos:end="96:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="98:18" pos:end="98:27"><expr pos:start="98:18" pos:end="98:27"><literal type="number" pos:start="98:18" pos:end="98:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="100:1" pos:end="100:30">#<cpp:directive pos:start="100:2" pos:end="100:3">if</cpp:directive> <expr pos:start="100:5" pos:end="100:30"><operator pos:start="100:5" pos:end="100:5">!</operator><call pos:start="100:6" pos:end="100:30"><name pos:start="100:6" pos:end="100:12">defined</name><argument_list pos:start="100:13" pos:end="100:30">(<argument pos:start="100:14" pos:end="100:29"><expr pos:start="100:14" pos:end="100:29"><name pos:start="100:14" pos:end="100:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="102:5" pos:end="105:0"><expr pos:start="102:5" pos:end="102:20"><name pos:start="102:5" pos:end="102:15"><name pos:start="102:5" pos:end="102:7">env</name><operator pos:start="102:8" pos:end="102:9">-&gt;</operator><name pos:start="102:10" pos:end="102:15">slb_nr</name></name> <operator pos:start="102:17" pos:end="102:17">=</operator> <literal type="number" pos:start="102:19" pos:end="102:20">32</literal></expr>;</expr_stmt>

<cpp:endif pos:start="104:1" pos:end="104:6">#<cpp:directive pos:start="104:2" pos:end="104:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="106:5" pos:end="106:26"><expr pos:start="106:5" pos:end="106:25"><call pos:start="106:5" pos:end="106:25"><name pos:start="106:5" pos:end="106:20">init_excp_POWER7</name><argument_list pos:start="106:21" pos:end="106:25">(<argument pos:start="106:22" pos:end="106:24"><expr pos:start="106:22" pos:end="106:24"><name pos:start="106:22" pos:end="106:24">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="108:5" pos:end="108:32"><expr pos:start="108:5" pos:end="108:31"><name pos:start="108:5" pos:end="108:25"><name pos:start="108:5" pos:end="108:7">env</name><operator pos:start="108:8" pos:end="108:9">-&gt;</operator><name pos:start="108:10" pos:end="108:25">dcache_line_size</name></name> <operator pos:start="108:27" pos:end="108:27">=</operator> <literal type="number" pos:start="108:29" pos:end="108:31">128</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="110:5" pos:end="110:32"><expr pos:start="110:5" pos:end="110:31"><name pos:start="110:5" pos:end="110:25"><name pos:start="110:5" pos:end="110:7">env</name><operator pos:start="110:8" pos:end="110:9">-&gt;</operator><name pos:start="110:10" pos:end="110:25">icache_line_size</name></name> <operator pos:start="110:27" pos:end="110:27">=</operator> <literal type="number" pos:start="110:29" pos:end="110:31">128</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="112:5" pos:end="112:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="114:5" pos:end="114:28"><expr pos:start="114:5" pos:end="114:27"><call pos:start="114:5" pos:end="114:27"><name pos:start="114:5" pos:end="114:22">ppcPOWER7_irq_init</name><argument_list pos:start="114:23" pos:end="114:27">(<argument pos:start="114:24" pos:end="114:26"><expr pos:start="114:24" pos:end="114:26"><name pos:start="114:24" pos:end="114:26">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="116:5" pos:end="118:51">/* Can't find information on what this should be on reset.  This

     * value is the one used by 74xx processors. */</comment>

    <expr_stmt pos:start="120:5" pos:end="120:31"><expr pos:start="120:5" pos:end="120:30"><call pos:start="120:5" pos:end="120:30"><name pos:start="120:5" pos:end="120:13">vscr_init</name><argument_list pos:start="120:14" pos:end="120:30">(<argument pos:start="120:15" pos:end="120:17"><expr pos:start="120:15" pos:end="120:17"><name pos:start="120:15" pos:end="120:17">env</name></expr></argument>, <argument pos:start="120:20" pos:end="120:29"><expr pos:start="120:20" pos:end="120:29"><literal type="number" pos:start="120:20" pos:end="120:29">0x00010000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
