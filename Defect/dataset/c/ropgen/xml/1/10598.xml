<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10598.c" pos:tabs="8"><function pos:start="1:1" pos:end="15:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:26">bdrv_new</name><parameter_list pos:start="1:27" pos:end="1:32">(<parameter pos:start="1:28" pos:end="1:31"><decl pos:start="1:28" pos:end="1:31"><type pos:start="1:28" pos:end="1:31"><name pos:start="1:28" pos:end="1:31">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="15:1">{<block_content pos:start="3:5" pos:end="14:14">
    <decl_stmt pos:start="3:5" pos:end="3:25"><decl pos:start="3:5" pos:end="3:24"><type pos:start="3:5" pos:end="3:22"><name pos:start="3:5" pos:end="3:20">BlockDriverState</name> <modifier pos:start="3:22" pos:end="3:22">*</modifier></type><name pos:start="3:23" pos:end="3:24">bs</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:37"><expr pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:6">bs</name> <operator pos:start="5:8" pos:end="5:8">=</operator> <call pos:start="5:10" pos:end="5:36"><name pos:start="5:10" pos:end="5:15">g_new0</name><argument_list pos:start="5:16" pos:end="5:36">(<argument pos:start="5:17" pos:end="5:32"><expr pos:start="5:17" pos:end="5:32"><name pos:start="5:17" pos:end="5:32">BlockDriverState</name></expr></argument>, <argument pos:start="5:35" pos:end="5:35"><expr pos:start="5:35" pos:end="5:35"><literal type="number" pos:start="5:35" pos:end="5:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:35"><expr pos:start="6:5" pos:end="6:34"><call pos:start="6:5" pos:end="6:34"><name pos:start="6:5" pos:end="6:14">QLIST_INIT</name><argument_list pos:start="6:15" pos:end="6:34">(<argument pos:start="6:16" pos:end="6:33"><expr pos:start="6:16" pos:end="6:33"><operator pos:start="6:16" pos:end="6:16">&amp;</operator><name pos:start="6:17" pos:end="6:33"><name pos:start="6:17" pos:end="6:18">bs</name><operator pos:start="6:19" pos:end="6:20">-&gt;</operator><name pos:start="6:21" pos:end="6:33">dirty_bitmaps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="7:5" pos:end="9:5">for <control pos:start="7:9" pos:end="7:43">(<init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:38"><expr pos:start="7:17" pos:end="7:37"><name pos:start="7:17" pos:end="7:17">i</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <name pos:start="7:21" pos:end="7:37">BLOCK_OP_TYPE_MAX</name></expr>;</condition> <incr pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:40">i</name><operator pos:start="7:41" pos:end="7:42">++</operator></expr></incr>)</control> <block pos:start="7:45" pos:end="9:5">{<block_content pos:start="8:9" pos:end="8:40">
        <expr_stmt pos:start="8:9" pos:end="8:40"><expr pos:start="8:9" pos:end="8:39"><call pos:start="8:9" pos:end="8:39"><name pos:start="8:9" pos:end="8:18">QLIST_INIT</name><argument_list pos:start="8:19" pos:end="8:39">(<argument pos:start="8:20" pos:end="8:38"><expr pos:start="8:20" pos:end="8:38"><operator pos:start="8:20" pos:end="8:20">&amp;</operator><name pos:start="8:21" pos:end="8:38"><name pos:start="8:21" pos:end="8:22">bs</name><operator pos:start="8:23" pos:end="8:24">-&gt;</operator><name pos:start="8:25" pos:end="8:35">op_blockers</name><index pos:start="8:36" pos:end="8:38">[<expr pos:start="8:37" pos:end="8:37"><name pos:start="8:37" pos:end="8:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
    <expr_stmt pos:start="10:5" pos:end="10:64"><expr pos:start="10:5" pos:end="10:63"><call pos:start="10:5" pos:end="10:63"><name pos:start="10:5" pos:end="10:34">notifier_with_return_list_init</name><argument_list pos:start="10:35" pos:end="10:63">(<argument pos:start="10:36" pos:end="10:62"><expr pos:start="10:36" pos:end="10:62"><operator pos:start="10:36" pos:end="10:36">&amp;</operator><name pos:start="10:37" pos:end="10:62"><name pos:start="10:37" pos:end="10:38">bs</name><operator pos:start="10:39" pos:end="10:40">-&gt;</operator><name pos:start="10:41" pos:end="10:62">before_write_notifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:19"><expr pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:6">bs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:14">refcnt</name></name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:45"><expr pos:start="12:5" pos:end="12:44"><name pos:start="12:5" pos:end="12:19"><name pos:start="12:5" pos:end="12:6">bs</name><operator pos:start="12:7" pos:end="12:8">-&gt;</operator><name pos:start="12:9" pos:end="12:19">aio_context</name></name> <operator pos:start="12:21" pos:end="12:21">=</operator> <call pos:start="12:23" pos:end="12:44"><name pos:start="12:23" pos:end="12:42">qemu_get_aio_context</name><argument_list pos:start="12:43" pos:end="12:44">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:54"><expr pos:start="13:5" pos:end="13:53"><call pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="13:23" pos:end="13:53">(<argument pos:start="13:24" pos:end="13:39"><expr pos:start="13:24" pos:end="13:39"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:39">all_bdrv_states</name></expr></argument>, <argument pos:start="13:42" pos:end="13:43"><expr pos:start="13:42" pos:end="13:43"><name pos:start="13:42" pos:end="13:43">bs</name></expr></argument>, <argument pos:start="13:46" pos:end="13:52"><expr pos:start="13:46" pos:end="13:52"><name pos:start="13:46" pos:end="13:52">bs_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="14:5" pos:end="14:14">return <expr pos:start="14:12" pos:end="14:13"><name pos:start="14:12" pos:end="14:13">bs</name></expr>;</return>
</block_content>}</block></function></unit>
