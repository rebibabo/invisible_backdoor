<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19442.c" pos:tabs="8"><function pos:start="1:1" pos:end="195:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rgbToRgbWrapper</name><parameter_list pos:start="1:27" pos:end="5:43">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">SwsContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">c</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:60"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:55">uint8_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62"><name pos:start="1:58" pos:end="1:60">src</name><index pos:start="1:61" pos:end="1:62">[]</index></name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:79"><name pos:start="1:69" pos:end="1:77">srcStride</name><index pos:start="1:78" pos:end="1:79">[]</index></name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:40">srcSliceY</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:55">srcSliceH</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:71"><decl pos:start="3:58" pos:end="3:71"><type pos:start="3:58" pos:end="3:69"><name pos:start="3:58" pos:end="3:64">uint8_t</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:71"><name pos:start="3:67" pos:end="3:69">dst</name><index pos:start="3:70" pos:end="3:71">[]</index></name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:42"><decl pos:start="5:28" pos:end="5:42"><type pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:30">int</name></type> <name pos:start="5:32" pos:end="5:42"><name pos:start="5:32" pos:end="5:40">dstStride</name><index pos:start="5:41" pos:end="5:42">[]</index></name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="195:1">{<block_content pos:start="9:5" pos:end="193:21">

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:26"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:26"><name pos:start="9:11" pos:end="9:14">enum</name> <name pos:start="9:16" pos:end="9:26">PixelFormat</name></name></type> <name pos:start="9:28" pos:end="9:36">srcFormat</name> <init pos:start="9:38" pos:end="9:51">= <expr pos:start="9:40" pos:end="9:51"><name pos:start="9:40" pos:end="9:51"><name pos:start="9:40" pos:end="9:40">c</name><operator pos:start="9:41" pos:end="9:42">-&gt;</operator><name pos:start="9:43" pos:end="9:51">srcFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:26"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:26"><name pos:start="11:11" pos:end="11:14">enum</name> <name pos:start="11:16" pos:end="11:26">PixelFormat</name></name></type> <name pos:start="11:28" pos:end="11:36">dstFormat</name> <init pos:start="11:38" pos:end="11:51">= <expr pos:start="11:40" pos:end="11:51"><name pos:start="11:40" pos:end="11:51"><name pos:start="11:40" pos:end="11:40">c</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:51">dstFormat</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:13"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:13">int</name></type> <name pos:start="13:15" pos:end="13:20">srcBpp</name> <init pos:start="13:22" pos:end="13:49">= <expr pos:start="13:24" pos:end="13:49"><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:25">c</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:39">srcFormatBpp</name></name> <operator pos:start="13:41" pos:end="13:41">+</operator> <literal type="number" pos:start="13:43" pos:end="13:43">7</literal><operator pos:start="13:44" pos:end="13:44">)</operator> <operator pos:start="13:46" pos:end="13:47">&gt;&gt;</operator> <literal type="number" pos:start="13:49" pos:end="13:49">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">dstBpp</name> <init pos:start="15:22" pos:end="15:49">= <expr pos:start="15:24" pos:end="15:49"><operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:25">c</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:39">dstFormatBpp</name></name> <operator pos:start="15:41" pos:end="15:41">+</operator> <literal type="number" pos:start="15:43" pos:end="15:43">7</literal><operator pos:start="15:44" pos:end="15:44">)</operator> <operator pos:start="15:46" pos:end="15:47">&gt;&gt;</operator> <literal type="number" pos:start="15:49" pos:end="15:49">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:19">srcId</name> <init pos:start="17:21" pos:end="17:37">= <expr pos:start="17:23" pos:end="17:37"><name pos:start="17:23" pos:end="17:37"><name pos:start="17:23" pos:end="17:23">c</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:37">srcFormatBpp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:19">dstId</name> <init pos:start="19:21" pos:end="19:37">= <expr pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:23">c</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:37">dstFormatBpp</name></name></expr></init></decl>;</decl_stmt>

    <function_decl pos:start="21:5" pos:end="26:0"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">void</name></type> (<modifier pos:start="21:11" pos:end="21:11">*</modifier><name pos:start="21:12" pos:end="21:15">conv</name>)<parameter_list pos:start="21:17" pos:end="21:64">(<parameter pos:start="21:18" pos:end="21:35"><decl pos:start="21:18" pos:end="21:35"><type pos:start="21:18" pos:end="21:35"><specifier pos:start="21:18" pos:end="21:22">const</specifier> <name pos:start="21:24" pos:end="21:30">uint8_t</name> <modifier pos:start="21:32" pos:end="21:32">*</modifier></type><name pos:start="21:33" pos:end="21:35">src</name></decl></parameter>, <parameter pos:start="21:38" pos:end="21:49"><decl pos:start="21:38" pos:end="21:49"><type pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:44">uint8_t</name> <modifier pos:start="21:46" pos:end="21:46">*</modifier></type><name pos:start="21:47" pos:end="21:49">dst</name></decl></parameter>, <parameter pos:start="21:52" pos:end="21:63"><decl pos:start="21:52" pos:end="21:63"><type pos:start="21:52" pos:end="21:63"><name pos:start="21:52" pos:end="21:54">int</name></type> <name pos:start="21:56" pos:end="21:63">src_size</name></decl></parameter>)</parameter_list> <init pos:start="21:66" pos:end="21:71">= <expr pos:start="21:68" pos:end="21:71"><name pos:start="21:68" pos:end="21:71">NULL</name></expr></init>;</function_decl>



<cpp:define pos:start="25:1" pos:end="25:84">#<cpp:directive pos:start="25:2" pos:end="25:7">define</cpp:directive> <cpp:macro pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:15">CONV_IS</name><parameter_list pos:start="25:16" pos:end="25:25">(<parameter pos:start="25:17" pos:end="25:19"><type pos:start="25:17" pos:end="25:19"><name pos:start="25:17" pos:end="25:19">src</name></type></parameter>, <parameter pos:start="25:22" pos:end="25:24"><type pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">dst</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="25:27" pos:end="25:84">(srcFormat == PIX_FMT_##src &amp;&amp; dstFormat == PIX_FMT_##dst)</cpp:value></cpp:define>



    <if_stmt pos:start="29:5" pos:end="131:5"><if pos:start="29:5" pos:end="55:5">if <condition pos:start="29:8" pos:end="29:51">(<expr pos:start="29:9" pos:end="29:50"><call pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:16">isRGBA32</name><argument_list pos:start="29:17" pos:end="29:27">(<argument pos:start="29:18" pos:end="29:26"><expr pos:start="29:18" pos:end="29:26"><name pos:start="29:18" pos:end="29:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="29:29" pos:end="29:30">&amp;&amp;</operator> <call pos:start="29:32" pos:end="29:50"><name pos:start="29:32" pos:end="29:39">isRGBA32</name><argument_list pos:start="29:40" pos:end="29:50">(<argument pos:start="29:41" pos:end="29:49"><expr pos:start="29:41" pos:end="29:49"><name pos:start="29:41" pos:end="29:49">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:53" pos:end="55:5">{<block_content pos:start="31:9" pos:end="53:64">

        <if_stmt pos:start="31:9" pos:end="53:64"><if pos:start="31:9" pos:end="37:64">if <condition pos:start="31:12" pos:end="37:37">(     <expr pos:start="31:18" pos:end="37:36"><call pos:start="31:18" pos:end="31:36"><name pos:start="31:18" pos:end="31:24">CONV_IS</name><argument_list pos:start="31:25" pos:end="31:36">(<argument pos:start="31:26" pos:end="31:29"><expr pos:start="31:26" pos:end="31:29"><name pos:start="31:26" pos:end="31:29">ABGR</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">RGBA</name></expr></argument>)</argument_list></call>

              <operator pos:start="33:15" pos:end="33:16">||</operator> <call pos:start="33:18" pos:end="33:36"><name pos:start="33:18" pos:end="33:24">CONV_IS</name><argument_list pos:start="33:25" pos:end="33:36">(<argument pos:start="33:26" pos:end="33:29"><expr pos:start="33:26" pos:end="33:29"><name pos:start="33:26" pos:end="33:29">ARGB</name></expr></argument>, <argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35">BGRA</name></expr></argument>)</argument_list></call>

              <operator pos:start="35:15" pos:end="35:16">||</operator> <call pos:start="35:18" pos:end="35:36"><name pos:start="35:18" pos:end="35:24">CONV_IS</name><argument_list pos:start="35:25" pos:end="35:36">(<argument pos:start="35:26" pos:end="35:29"><expr pos:start="35:26" pos:end="35:29"><name pos:start="35:26" pos:end="35:29">BGRA</name></expr></argument>, <argument pos:start="35:32" pos:end="35:35"><expr pos:start="35:32" pos:end="35:35"><name pos:start="35:32" pos:end="35:35">ARGB</name></expr></argument>)</argument_list></call>

              <operator pos:start="37:15" pos:end="37:16">||</operator> <call pos:start="37:18" pos:end="37:36"><name pos:start="37:18" pos:end="37:24">CONV_IS</name><argument_list pos:start="37:25" pos:end="37:36">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">RGBA</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><name pos:start="37:32" pos:end="37:35">ABGR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:39" pos:end="37:64"><block_content pos:start="37:39" pos:end="37:64"> <expr_stmt pos:start="37:39" pos:end="37:64"><expr pos:start="37:39" pos:end="37:63"><name pos:start="37:39" pos:end="37:42">conv</name> <operator pos:start="37:44" pos:end="37:44">=</operator> <name pos:start="37:46" pos:end="37:63">shuffle_bytes_3210</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="39:9" pos:end="41:64">else if <condition pos:start="39:17" pos:end="41:37">(<expr pos:start="39:18" pos:end="41:36"><call pos:start="39:18" pos:end="39:36"><name pos:start="39:18" pos:end="39:24">CONV_IS</name><argument_list pos:start="39:25" pos:end="39:36">(<argument pos:start="39:26" pos:end="39:29"><expr pos:start="39:26" pos:end="39:29"><name pos:start="39:26" pos:end="39:29">ABGR</name></expr></argument>, <argument pos:start="39:32" pos:end="39:35"><expr pos:start="39:32" pos:end="39:35"><name pos:start="39:32" pos:end="39:35">ARGB</name></expr></argument>)</argument_list></call>

              <operator pos:start="41:15" pos:end="41:16">||</operator> <call pos:start="41:18" pos:end="41:36"><name pos:start="41:18" pos:end="41:24">CONV_IS</name><argument_list pos:start="41:25" pos:end="41:36">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">ARGB</name></expr></argument>, <argument pos:start="41:32" pos:end="41:35"><expr pos:start="41:32" pos:end="41:35"><name pos:start="41:32" pos:end="41:35">ABGR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="41:39" pos:end="41:64"><block_content pos:start="41:39" pos:end="41:64"> <expr_stmt pos:start="41:39" pos:end="41:64"><expr pos:start="41:39" pos:end="41:63"><name pos:start="41:39" pos:end="41:42">conv</name> <operator pos:start="41:44" pos:end="41:44">=</operator> <name pos:start="41:46" pos:end="41:63">shuffle_bytes_0321</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="43:9" pos:end="45:64">else if <condition pos:start="43:17" pos:end="45:37">(<expr pos:start="43:18" pos:end="45:36"><call pos:start="43:18" pos:end="43:36"><name pos:start="43:18" pos:end="43:24">CONV_IS</name><argument_list pos:start="43:25" pos:end="43:36">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">ABGR</name></expr></argument>, <argument pos:start="43:32" pos:end="43:35"><expr pos:start="43:32" pos:end="43:35"><name pos:start="43:32" pos:end="43:35">BGRA</name></expr></argument>)</argument_list></call>

              <operator pos:start="45:15" pos:end="45:16">||</operator> <call pos:start="45:18" pos:end="45:36"><name pos:start="45:18" pos:end="45:24">CONV_IS</name><argument_list pos:start="45:25" pos:end="45:36">(<argument pos:start="45:26" pos:end="45:29"><expr pos:start="45:26" pos:end="45:29"><name pos:start="45:26" pos:end="45:29">ARGB</name></expr></argument>, <argument pos:start="45:32" pos:end="45:35"><expr pos:start="45:32" pos:end="45:35"><name pos:start="45:32" pos:end="45:35">RGBA</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:39" pos:end="45:64"><block_content pos:start="45:39" pos:end="45:64"> <expr_stmt pos:start="45:39" pos:end="45:64"><expr pos:start="45:39" pos:end="45:63"><name pos:start="45:39" pos:end="45:42">conv</name> <operator pos:start="45:44" pos:end="45:44">=</operator> <name pos:start="45:46" pos:end="45:63">shuffle_bytes_1230</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="47:9" pos:end="49:64">else if <condition pos:start="47:17" pos:end="49:37">(<expr pos:start="47:18" pos:end="49:36"><call pos:start="47:18" pos:end="47:36"><name pos:start="47:18" pos:end="47:24">CONV_IS</name><argument_list pos:start="47:25" pos:end="47:36">(<argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">BGRA</name></expr></argument>, <argument pos:start="47:32" pos:end="47:35"><expr pos:start="47:32" pos:end="47:35"><name pos:start="47:32" pos:end="47:35">RGBA</name></expr></argument>)</argument_list></call>

              <operator pos:start="49:15" pos:end="49:16">||</operator> <call pos:start="49:18" pos:end="49:36"><name pos:start="49:18" pos:end="49:24">CONV_IS</name><argument_list pos:start="49:25" pos:end="49:36">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">RGBA</name></expr></argument>, <argument pos:start="49:32" pos:end="49:35"><expr pos:start="49:32" pos:end="49:35"><name pos:start="49:32" pos:end="49:35">BGRA</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:39" pos:end="49:64"><block_content pos:start="49:39" pos:end="49:64"> <expr_stmt pos:start="49:39" pos:end="49:64"><expr pos:start="49:39" pos:end="49:63"><name pos:start="49:39" pos:end="49:42">conv</name> <operator pos:start="49:44" pos:end="49:44">=</operator> <name pos:start="49:46" pos:end="49:63">shuffle_bytes_2103</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="51:9" pos:end="53:64">else if <condition pos:start="51:17" pos:end="53:37">(<expr pos:start="51:18" pos:end="53:36"><call pos:start="51:18" pos:end="51:36"><name pos:start="51:18" pos:end="51:24">CONV_IS</name><argument_list pos:start="51:25" pos:end="51:36">(<argument pos:start="51:26" pos:end="51:29"><expr pos:start="51:26" pos:end="51:29"><name pos:start="51:26" pos:end="51:29">BGRA</name></expr></argument>, <argument pos:start="51:32" pos:end="51:35"><expr pos:start="51:32" pos:end="51:35"><name pos:start="51:32" pos:end="51:35">ABGR</name></expr></argument>)</argument_list></call>

              <operator pos:start="53:15" pos:end="53:16">||</operator> <call pos:start="53:18" pos:end="53:36"><name pos:start="53:18" pos:end="53:24">CONV_IS</name><argument_list pos:start="53:25" pos:end="53:36">(<argument pos:start="53:26" pos:end="53:29"><expr pos:start="53:26" pos:end="53:29"><name pos:start="53:26" pos:end="53:29">RGBA</name></expr></argument>, <argument pos:start="53:32" pos:end="53:35"><expr pos:start="53:32" pos:end="53:35"><name pos:start="53:32" pos:end="53:35">ARGB</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:39" pos:end="53:64"><block_content pos:start="53:39" pos:end="53:64"> <expr_stmt pos:start="53:39" pos:end="53:64"><expr pos:start="53:39" pos:end="53:63"><name pos:start="53:39" pos:end="53:42">conv</name> <operator pos:start="53:44" pos:end="53:44">=</operator> <name pos:start="53:46" pos:end="53:63">shuffle_bytes_3012</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="91:5">else

    <comment type="block" pos:start="57:5" pos:end="57:20">/* BGR -&gt; BGR */</comment>

    if <condition pos:start="59:8" pos:end="61:57">(<expr pos:start="59:9" pos:end="61:56"><operator pos:start="59:9" pos:end="59:9">(</operator><call pos:start="59:10" pos:end="59:30"><name pos:start="59:10" pos:end="59:19">isBGRinInt</name><argument_list pos:start="59:20" pos:end="59:30">(<argument pos:start="59:21" pos:end="59:29"><expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:29">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="59:32" pos:end="59:33">&amp;&amp;</operator> <call pos:start="59:35" pos:end="59:55"><name pos:start="59:35" pos:end="59:44">isBGRinInt</name><argument_list pos:start="59:45" pos:end="59:55">(<argument pos:start="59:46" pos:end="59:54"><expr pos:start="59:46" pos:end="59:54"><name pos:start="59:46" pos:end="59:54">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="59:56" pos:end="59:56">)</operator> <operator pos:start="59:58" pos:end="59:59">||</operator>

        <operator pos:start="61:9" pos:end="61:9">(</operator><call pos:start="61:10" pos:end="61:30"><name pos:start="61:10" pos:end="61:19">isRGBinInt</name><argument_list pos:start="61:20" pos:end="61:30">(<argument pos:start="61:21" pos:end="61:29"><expr pos:start="61:21" pos:end="61:29"><name pos:start="61:21" pos:end="61:29">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="61:32" pos:end="61:33">&amp;&amp;</operator> <call pos:start="61:35" pos:end="61:55"><name pos:start="61:35" pos:end="61:44">isRGBinInt</name><argument_list pos:start="61:45" pos:end="61:55">(<argument pos:start="61:46" pos:end="61:54"><expr pos:start="61:46" pos:end="61:54"><name pos:start="61:46" pos:end="61:54">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="61:56" pos:end="61:56">)</operator></expr>)</condition> <block pos:start="61:59" pos:end="91:5">{<block_content pos:start="63:9" pos:end="89:9">

        <switch pos:start="63:9" pos:end="89:9">switch <condition pos:start="63:16" pos:end="63:38">(<expr pos:start="63:17" pos:end="63:37"><name pos:start="63:17" pos:end="63:21">srcId</name> <operator pos:start="63:23" pos:end="63:23">|</operator> <operator pos:start="63:25" pos:end="63:25">(</operator><name pos:start="63:26" pos:end="63:30">dstId</name> <operator pos:start="63:32" pos:end="63:33">&lt;&lt;</operator> <literal type="number" pos:start="63:35" pos:end="63:36">16</literal><operator pos:start="63:37" pos:end="63:37">)</operator></expr>)</condition> <block pos:start="63:40" pos:end="89:9">{<block_content pos:start="65:9" pos:end="87:49">

        <case pos:start="65:9" pos:end="65:24">case <expr pos:start="65:14" pos:end="65:23"><literal type="number" pos:start="65:14" pos:end="65:23">0x000F0010</literal></expr>:</case> <expr_stmt pos:start="65:26" pos:end="65:42"><expr pos:start="65:26" pos:end="65:41"><name pos:start="65:26" pos:end="65:29">conv</name> <operator pos:start="65:31" pos:end="65:31">=</operator> <name pos:start="65:33" pos:end="65:41">rgb16to15</name></expr>;</expr_stmt> <break pos:start="65:44" pos:end="65:49">break;</break>

        <case pos:start="67:9" pos:end="67:24">case <expr pos:start="67:14" pos:end="67:23"><literal type="number" pos:start="67:14" pos:end="67:23">0x000F0018</literal></expr>:</case> <expr_stmt pos:start="67:26" pos:end="67:42"><expr pos:start="67:26" pos:end="67:41"><name pos:start="67:26" pos:end="67:29">conv</name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:41">rgb24to15</name></expr>;</expr_stmt> <break pos:start="67:44" pos:end="67:49">break;</break>

        <case pos:start="69:9" pos:end="69:24">case <expr pos:start="69:14" pos:end="69:23"><literal type="number" pos:start="69:14" pos:end="69:23">0x000F0020</literal></expr>:</case> <expr_stmt pos:start="69:26" pos:end="69:42"><expr pos:start="69:26" pos:end="69:41"><name pos:start="69:26" pos:end="69:29">conv</name> <operator pos:start="69:31" pos:end="69:31">=</operator> <name pos:start="69:33" pos:end="69:41">rgb32to15</name></expr>;</expr_stmt> <break pos:start="69:44" pos:end="69:49">break;</break>

        <case pos:start="71:9" pos:end="71:24">case <expr pos:start="71:14" pos:end="71:23"><literal type="number" pos:start="71:14" pos:end="71:23">0x0010000F</literal></expr>:</case> <expr_stmt pos:start="71:26" pos:end="71:42"><expr pos:start="71:26" pos:end="71:41"><name pos:start="71:26" pos:end="71:29">conv</name> <operator pos:start="71:31" pos:end="71:31">=</operator> <name pos:start="71:33" pos:end="71:41">rgb15to16</name></expr>;</expr_stmt> <break pos:start="71:44" pos:end="71:49">break;</break>

        <case pos:start="73:9" pos:end="73:24">case <expr pos:start="73:14" pos:end="73:23"><literal type="number" pos:start="73:14" pos:end="73:23">0x00100018</literal></expr>:</case> <expr_stmt pos:start="73:26" pos:end="73:42"><expr pos:start="73:26" pos:end="73:41"><name pos:start="73:26" pos:end="73:29">conv</name> <operator pos:start="73:31" pos:end="73:31">=</operator> <name pos:start="73:33" pos:end="73:41">rgb24to16</name></expr>;</expr_stmt> <break pos:start="73:44" pos:end="73:49">break;</break>

        <case pos:start="75:9" pos:end="75:24">case <expr pos:start="75:14" pos:end="75:23"><literal type="number" pos:start="75:14" pos:end="75:23">0x00100020</literal></expr>:</case> <expr_stmt pos:start="75:26" pos:end="75:42"><expr pos:start="75:26" pos:end="75:41"><name pos:start="75:26" pos:end="75:29">conv</name> <operator pos:start="75:31" pos:end="75:31">=</operator> <name pos:start="75:33" pos:end="75:41">rgb32to16</name></expr>;</expr_stmt> <break pos:start="75:44" pos:end="75:49">break;</break>

        <case pos:start="77:9" pos:end="77:24">case <expr pos:start="77:14" pos:end="77:23"><literal type="number" pos:start="77:14" pos:end="77:23">0x0018000F</literal></expr>:</case> <expr_stmt pos:start="77:26" pos:end="77:42"><expr pos:start="77:26" pos:end="77:41"><name pos:start="77:26" pos:end="77:29">conv</name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:41">rgb15to24</name></expr>;</expr_stmt> <break pos:start="77:44" pos:end="77:49">break;</break>

        <case pos:start="79:9" pos:end="79:24">case <expr pos:start="79:14" pos:end="79:23"><literal type="number" pos:start="79:14" pos:end="79:23">0x00180010</literal></expr>:</case> <expr_stmt pos:start="79:26" pos:end="79:42"><expr pos:start="79:26" pos:end="79:41"><name pos:start="79:26" pos:end="79:29">conv</name> <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:41">rgb16to24</name></expr>;</expr_stmt> <break pos:start="79:44" pos:end="79:49">break;</break>

        <case pos:start="81:9" pos:end="81:24">case <expr pos:start="81:14" pos:end="81:23"><literal type="number" pos:start="81:14" pos:end="81:23">0x00180020</literal></expr>:</case> <expr_stmt pos:start="81:26" pos:end="81:42"><expr pos:start="81:26" pos:end="81:41"><name pos:start="81:26" pos:end="81:29">conv</name> <operator pos:start="81:31" pos:end="81:31">=</operator> <name pos:start="81:33" pos:end="81:41">rgb32to24</name></expr>;</expr_stmt> <break pos:start="81:44" pos:end="81:49">break;</break>

        <case pos:start="83:9" pos:end="83:24">case <expr pos:start="83:14" pos:end="83:23"><literal type="number" pos:start="83:14" pos:end="83:23">0x0020000F</literal></expr>:</case> <expr_stmt pos:start="83:26" pos:end="83:42"><expr pos:start="83:26" pos:end="83:41"><name pos:start="83:26" pos:end="83:29">conv</name> <operator pos:start="83:31" pos:end="83:31">=</operator> <name pos:start="83:33" pos:end="83:41">rgb15to32</name></expr>;</expr_stmt> <break pos:start="83:44" pos:end="83:49">break;</break>

        <case pos:start="85:9" pos:end="85:24">case <expr pos:start="85:14" pos:end="85:23"><literal type="number" pos:start="85:14" pos:end="85:23">0x00200010</literal></expr>:</case> <expr_stmt pos:start="85:26" pos:end="85:42"><expr pos:start="85:26" pos:end="85:41"><name pos:start="85:26" pos:end="85:29">conv</name> <operator pos:start="85:31" pos:end="85:31">=</operator> <name pos:start="85:33" pos:end="85:41">rgb16to32</name></expr>;</expr_stmt> <break pos:start="85:44" pos:end="85:49">break;</break>

        <case pos:start="87:9" pos:end="87:24">case <expr pos:start="87:14" pos:end="87:23"><literal type="number" pos:start="87:14" pos:end="87:23">0x00200018</literal></expr>:</case> <expr_stmt pos:start="87:26" pos:end="87:42"><expr pos:start="87:26" pos:end="87:41"><name pos:start="87:26" pos:end="87:29">conv</name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:41">rgb24to32</name></expr>;</expr_stmt> <break pos:start="87:44" pos:end="87:49">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="91:7" pos:end="131:5">else if <condition pos:start="91:15" pos:end="93:64">(<expr pos:start="91:16" pos:end="93:63"><operator pos:start="91:16" pos:end="91:16">(</operator><call pos:start="91:17" pos:end="91:37"><name pos:start="91:17" pos:end="91:26">isBGRinInt</name><argument_list pos:start="91:27" pos:end="91:37">(<argument pos:start="91:28" pos:end="91:36"><expr pos:start="91:28" pos:end="91:36"><name pos:start="91:28" pos:end="91:36">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="91:39" pos:end="91:40">&amp;&amp;</operator> <call pos:start="91:42" pos:end="91:62"><name pos:start="91:42" pos:end="91:51">isRGBinInt</name><argument_list pos:start="91:52" pos:end="91:62">(<argument pos:start="91:53" pos:end="91:61"><expr pos:start="91:53" pos:end="91:61"><name pos:start="91:53" pos:end="91:61">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="91:63" pos:end="91:63">)</operator> <operator pos:start="91:65" pos:end="91:66">||</operator>

               <operator pos:start="93:16" pos:end="93:16">(</operator><call pos:start="93:17" pos:end="93:37"><name pos:start="93:17" pos:end="93:26">isRGBinInt</name><argument_list pos:start="93:27" pos:end="93:37">(<argument pos:start="93:28" pos:end="93:36"><expr pos:start="93:28" pos:end="93:36"><name pos:start="93:28" pos:end="93:36">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="93:39" pos:end="93:40">&amp;&amp;</operator> <call pos:start="93:42" pos:end="93:62"><name pos:start="93:42" pos:end="93:51">isBGRinInt</name><argument_list pos:start="93:52" pos:end="93:62">(<argument pos:start="93:53" pos:end="93:61"><expr pos:start="93:53" pos:end="93:61"><name pos:start="93:53" pos:end="93:61">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="93:63" pos:end="93:63">)</operator></expr>)</condition> <block pos:start="93:66" pos:end="131:5">{<block_content pos:start="95:9" pos:end="129:9">

        <switch pos:start="95:9" pos:end="129:9">switch <condition pos:start="95:16" pos:end="95:38">(<expr pos:start="95:17" pos:end="95:37"><name pos:start="95:17" pos:end="95:21">srcId</name> <operator pos:start="95:23" pos:end="95:23">|</operator> <operator pos:start="95:25" pos:end="95:25">(</operator><name pos:start="95:26" pos:end="95:30">dstId</name> <operator pos:start="95:32" pos:end="95:33">&lt;&lt;</operator> <literal type="number" pos:start="95:35" pos:end="95:36">16</literal><operator pos:start="95:37" pos:end="95:37">)</operator></expr>)</condition> <block pos:start="95:40" pos:end="129:9">{<block_content pos:start="97:9" pos:end="127:52">

        <case pos:start="97:9" pos:end="97:24">case <expr pos:start="97:14" pos:end="97:23"><literal type="number" pos:start="97:14" pos:end="97:23">0x000C000C</literal></expr>:</case> <expr_stmt pos:start="97:26" pos:end="97:45"><expr pos:start="97:26" pos:end="97:44"><name pos:start="97:26" pos:end="97:29">conv</name> <operator pos:start="97:31" pos:end="97:31">=</operator> <name pos:start="97:33" pos:end="97:44">rgb12tobgr12</name></expr>;</expr_stmt> <break pos:start="97:47" pos:end="97:52">break;</break>

        <case pos:start="99:9" pos:end="99:24">case <expr pos:start="99:14" pos:end="99:23"><literal type="number" pos:start="99:14" pos:end="99:23">0x000F000F</literal></expr>:</case> <expr_stmt pos:start="99:26" pos:end="99:45"><expr pos:start="99:26" pos:end="99:44"><name pos:start="99:26" pos:end="99:29">conv</name> <operator pos:start="99:31" pos:end="99:31">=</operator> <name pos:start="99:33" pos:end="99:44">rgb15tobgr15</name></expr>;</expr_stmt> <break pos:start="99:47" pos:end="99:52">break;</break>

        <case pos:start="101:9" pos:end="101:24">case <expr pos:start="101:14" pos:end="101:23"><literal type="number" pos:start="101:14" pos:end="101:23">0x000F0010</literal></expr>:</case> <expr_stmt pos:start="101:26" pos:end="101:45"><expr pos:start="101:26" pos:end="101:44"><name pos:start="101:26" pos:end="101:29">conv</name> <operator pos:start="101:31" pos:end="101:31">=</operator> <name pos:start="101:33" pos:end="101:44">rgb16tobgr15</name></expr>;</expr_stmt> <break pos:start="101:47" pos:end="101:52">break;</break>

        <case pos:start="103:9" pos:end="103:24">case <expr pos:start="103:14" pos:end="103:23"><literal type="number" pos:start="103:14" pos:end="103:23">0x000F0018</literal></expr>:</case> <expr_stmt pos:start="103:26" pos:end="103:45"><expr pos:start="103:26" pos:end="103:44"><name pos:start="103:26" pos:end="103:29">conv</name> <operator pos:start="103:31" pos:end="103:31">=</operator> <name pos:start="103:33" pos:end="103:44">rgb24tobgr15</name></expr>;</expr_stmt> <break pos:start="103:47" pos:end="103:52">break;</break>

        <case pos:start="105:9" pos:end="105:24">case <expr pos:start="105:14" pos:end="105:23"><literal type="number" pos:start="105:14" pos:end="105:23">0x000F0020</literal></expr>:</case> <expr_stmt pos:start="105:26" pos:end="105:45"><expr pos:start="105:26" pos:end="105:44"><name pos:start="105:26" pos:end="105:29">conv</name> <operator pos:start="105:31" pos:end="105:31">=</operator> <name pos:start="105:33" pos:end="105:44">rgb32tobgr15</name></expr>;</expr_stmt> <break pos:start="105:47" pos:end="105:52">break;</break>

        <case pos:start="107:9" pos:end="107:24">case <expr pos:start="107:14" pos:end="107:23"><literal type="number" pos:start="107:14" pos:end="107:23">0x0010000F</literal></expr>:</case> <expr_stmt pos:start="107:26" pos:end="107:45"><expr pos:start="107:26" pos:end="107:44"><name pos:start="107:26" pos:end="107:29">conv</name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:44">rgb15tobgr16</name></expr>;</expr_stmt> <break pos:start="107:47" pos:end="107:52">break;</break>

        <case pos:start="109:9" pos:end="109:24">case <expr pos:start="109:14" pos:end="109:23"><literal type="number" pos:start="109:14" pos:end="109:23">0x00100010</literal></expr>:</case> <expr_stmt pos:start="109:26" pos:end="109:45"><expr pos:start="109:26" pos:end="109:44"><name pos:start="109:26" pos:end="109:29">conv</name> <operator pos:start="109:31" pos:end="109:31">=</operator> <name pos:start="109:33" pos:end="109:44">rgb16tobgr16</name></expr>;</expr_stmt> <break pos:start="109:47" pos:end="109:52">break;</break>

        <case pos:start="111:9" pos:end="111:24">case <expr pos:start="111:14" pos:end="111:23"><literal type="number" pos:start="111:14" pos:end="111:23">0x00100018</literal></expr>:</case> <expr_stmt pos:start="111:26" pos:end="111:45"><expr pos:start="111:26" pos:end="111:44"><name pos:start="111:26" pos:end="111:29">conv</name> <operator pos:start="111:31" pos:end="111:31">=</operator> <name pos:start="111:33" pos:end="111:44">rgb24tobgr16</name></expr>;</expr_stmt> <break pos:start="111:47" pos:end="111:52">break;</break>

        <case pos:start="113:9" pos:end="113:24">case <expr pos:start="113:14" pos:end="113:23"><literal type="number" pos:start="113:14" pos:end="113:23">0x00100020</literal></expr>:</case> <expr_stmt pos:start="113:26" pos:end="113:45"><expr pos:start="113:26" pos:end="113:44"><name pos:start="113:26" pos:end="113:29">conv</name> <operator pos:start="113:31" pos:end="113:31">=</operator> <name pos:start="113:33" pos:end="113:44">rgb32tobgr16</name></expr>;</expr_stmt> <break pos:start="113:47" pos:end="113:52">break;</break>

        <case pos:start="115:9" pos:end="115:24">case <expr pos:start="115:14" pos:end="115:23"><literal type="number" pos:start="115:14" pos:end="115:23">0x0018000F</literal></expr>:</case> <expr_stmt pos:start="115:26" pos:end="115:45"><expr pos:start="115:26" pos:end="115:44"><name pos:start="115:26" pos:end="115:29">conv</name> <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:44">rgb15tobgr24</name></expr>;</expr_stmt> <break pos:start="115:47" pos:end="115:52">break;</break>

        <case pos:start="117:9" pos:end="117:24">case <expr pos:start="117:14" pos:end="117:23"><literal type="number" pos:start="117:14" pos:end="117:23">0x00180010</literal></expr>:</case> <expr_stmt pos:start="117:26" pos:end="117:45"><expr pos:start="117:26" pos:end="117:44"><name pos:start="117:26" pos:end="117:29">conv</name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:44">rgb16tobgr24</name></expr>;</expr_stmt> <break pos:start="117:47" pos:end="117:52">break;</break>

        <case pos:start="119:9" pos:end="119:24">case <expr pos:start="119:14" pos:end="119:23"><literal type="number" pos:start="119:14" pos:end="119:23">0x00180018</literal></expr>:</case> <expr_stmt pos:start="119:26" pos:end="119:45"><expr pos:start="119:26" pos:end="119:44"><name pos:start="119:26" pos:end="119:29">conv</name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:44">rgb24tobgr24</name></expr>;</expr_stmt> <break pos:start="119:47" pos:end="119:52">break;</break>

        <case pos:start="121:9" pos:end="121:24">case <expr pos:start="121:14" pos:end="121:23"><literal type="number" pos:start="121:14" pos:end="121:23">0x00180020</literal></expr>:</case> <expr_stmt pos:start="121:26" pos:end="121:45"><expr pos:start="121:26" pos:end="121:44"><name pos:start="121:26" pos:end="121:29">conv</name> <operator pos:start="121:31" pos:end="121:31">=</operator> <name pos:start="121:33" pos:end="121:44">rgb32tobgr24</name></expr>;</expr_stmt> <break pos:start="121:47" pos:end="121:52">break;</break>

        <case pos:start="123:9" pos:end="123:24">case <expr pos:start="123:14" pos:end="123:23"><literal type="number" pos:start="123:14" pos:end="123:23">0x0020000F</literal></expr>:</case> <expr_stmt pos:start="123:26" pos:end="123:45"><expr pos:start="123:26" pos:end="123:44"><name pos:start="123:26" pos:end="123:29">conv</name> <operator pos:start="123:31" pos:end="123:31">=</operator> <name pos:start="123:33" pos:end="123:44">rgb15tobgr32</name></expr>;</expr_stmt> <break pos:start="123:47" pos:end="123:52">break;</break>

        <case pos:start="125:9" pos:end="125:24">case <expr pos:start="125:14" pos:end="125:23"><literal type="number" pos:start="125:14" pos:end="125:23">0x00200010</literal></expr>:</case> <expr_stmt pos:start="125:26" pos:end="125:45"><expr pos:start="125:26" pos:end="125:44"><name pos:start="125:26" pos:end="125:29">conv</name> <operator pos:start="125:31" pos:end="125:31">=</operator> <name pos:start="125:33" pos:end="125:44">rgb16tobgr32</name></expr>;</expr_stmt> <break pos:start="125:47" pos:end="125:52">break;</break>

        <case pos:start="127:9" pos:end="127:24">case <expr pos:start="127:14" pos:end="127:23"><literal type="number" pos:start="127:14" pos:end="127:23">0x00200018</literal></expr>:</case> <expr_stmt pos:start="127:26" pos:end="127:45"><expr pos:start="127:26" pos:end="127:44"><name pos:start="127:26" pos:end="127:29">conv</name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:44">rgb24tobgr32</name></expr>;</expr_stmt> <break pos:start="127:47" pos:end="127:52">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="191:5"><if pos:start="135:5" pos:end="141:5">if <condition pos:start="135:8" pos:end="135:14">(<expr pos:start="135:9" pos:end="135:13"><operator pos:start="135:9" pos:end="135:9">!</operator><name pos:start="135:10" pos:end="135:13">conv</name></expr>)</condition> <block pos:start="135:16" pos:end="141:5">{<block_content pos:start="137:9" pos:end="139:71">

        <expr_stmt pos:start="137:9" pos:end="139:71"><expr pos:start="137:9" pos:end="139:70"><call pos:start="137:9" pos:end="139:70"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="139:70">(<argument pos:start="137:16" pos:end="137:16"><expr pos:start="137:16" pos:end="137:16"><name pos:start="137:16" pos:end="137:16">c</name></expr></argument>, <argument pos:start="137:19" pos:end="137:30"><expr pos:start="137:19" pos:end="137:30"><name pos:start="137:19" pos:end="137:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:33" pos:end="137:69"><expr pos:start="137:33" pos:end="137:69"><literal type="string" pos:start="137:33" pos:end="137:69">"internal error %s -&gt; %s converter\n"</literal></expr></argument>,

               <argument pos:start="139:16" pos:end="139:41"><expr pos:start="139:16" pos:end="139:41"><call pos:start="139:16" pos:end="139:41"><name pos:start="139:16" pos:end="139:30">sws_format_name</name><argument_list pos:start="139:31" pos:end="139:41">(<argument pos:start="139:32" pos:end="139:40"><expr pos:start="139:32" pos:end="139:40"><name pos:start="139:32" pos:end="139:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:44" pos:end="139:69"><expr pos:start="139:44" pos:end="139:69"><call pos:start="139:44" pos:end="139:69"><name pos:start="139:44" pos:end="139:58">sws_format_name</name><argument_list pos:start="139:59" pos:end="139:69">(<argument pos:start="139:60" pos:end="139:68"><expr pos:start="139:60" pos:end="139:68"><name pos:start="139:60" pos:end="139:68">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="141:7" pos:end="191:5">else <block pos:start="141:12" pos:end="191:5">{<block_content pos:start="143:9" pos:end="189:9">

        <decl_stmt pos:start="143:9" pos:end="143:39"><decl pos:start="143:9" pos:end="143:38"><type pos:start="143:9" pos:end="143:23"><specifier pos:start="143:9" pos:end="143:13">const</specifier> <name pos:start="143:15" pos:end="143:21">uint8_t</name> <modifier pos:start="143:23" pos:end="143:23">*</modifier></type><name pos:start="143:24" pos:end="143:29">srcPtr</name> <init pos:start="143:31" pos:end="143:38">= <expr pos:start="143:33" pos:end="143:38"><name pos:start="143:33" pos:end="143:38"><name pos:start="143:33" pos:end="143:35">src</name><index pos:start="143:36" pos:end="143:38">[<expr pos:start="143:37" pos:end="143:37"><literal type="number" pos:start="143:37" pos:end="143:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

              <decl_stmt pos:start="145:15" pos:end="145:39"><decl pos:start="145:15" pos:end="145:38"><type pos:start="145:15" pos:end="145:23"><name pos:start="145:15" pos:end="145:21">uint8_t</name> <modifier pos:start="145:23" pos:end="145:23">*</modifier></type><name pos:start="145:24" pos:end="145:29">dstPtr</name> <init pos:start="145:31" pos:end="145:38">= <expr pos:start="145:33" pos:end="145:38"><name pos:start="145:33" pos:end="145:38"><name pos:start="145:33" pos:end="145:35">dst</name><index pos:start="145:36" pos:end="145:38">[<expr pos:start="145:37" pos:end="145:37"><literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="147:9" pos:end="151:33"><if pos:start="147:9" pos:end="151:33">if <condition pos:start="147:12" pos:end="149:33">(<expr pos:start="147:13" pos:end="149:32"><operator pos:start="147:13" pos:end="147:13">(</operator><name pos:start="147:14" pos:end="147:22">srcFormat</name> <operator pos:start="147:24" pos:end="147:25">==</operator> <name pos:start="147:27" pos:end="147:41">PIX_FMT_RGB32_1</name> <operator pos:start="147:43" pos:end="147:44">||</operator> <name pos:start="147:46" pos:end="147:54">srcFormat</name> <operator pos:start="147:56" pos:end="147:57">==</operator> <name pos:start="147:59" pos:end="147:73">PIX_FMT_BGR32_1</name><operator pos:start="147:74" pos:end="147:74">)</operator> <operator pos:start="147:76" pos:end="147:77">&amp;&amp;</operator>

            <operator pos:start="149:13" pos:end="149:13">!</operator><call pos:start="149:14" pos:end="149:32"><name pos:start="149:14" pos:end="149:21">isRGBA32</name><argument_list pos:start="149:22" pos:end="149:32">(<argument pos:start="149:23" pos:end="149:31"><expr pos:start="149:23" pos:end="149:31"><name pos:start="149:23" pos:end="149:31">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:33"><block_content pos:start="151:13" pos:end="151:33">

            <expr_stmt pos:start="151:13" pos:end="151:33"><expr pos:start="151:13" pos:end="151:32"><name pos:start="151:13" pos:end="151:18">srcPtr</name> <operator pos:start="151:20" pos:end="151:21">+=</operator> <name pos:start="151:23" pos:end="151:32">ALT32_CORR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="159:33"><if pos:start="155:9" pos:end="159:33">if <condition pos:start="155:12" pos:end="157:33">(<expr pos:start="155:13" pos:end="157:32"><operator pos:start="155:13" pos:end="155:13">(</operator><name pos:start="155:14" pos:end="155:22">dstFormat</name> <operator pos:start="155:24" pos:end="155:25">==</operator> <name pos:start="155:27" pos:end="155:41">PIX_FMT_RGB32_1</name> <operator pos:start="155:43" pos:end="155:44">||</operator> <name pos:start="155:46" pos:end="155:54">dstFormat</name> <operator pos:start="155:56" pos:end="155:57">==</operator> <name pos:start="155:59" pos:end="155:73">PIX_FMT_BGR32_1</name><operator pos:start="155:74" pos:end="155:74">)</operator> <operator pos:start="155:76" pos:end="155:77">&amp;&amp;</operator>

            <operator pos:start="157:13" pos:end="157:13">!</operator><call pos:start="157:14" pos:end="157:32"><name pos:start="157:14" pos:end="157:21">isRGBA32</name><argument_list pos:start="157:22" pos:end="157:32">(<argument pos:start="157:23" pos:end="157:31"><expr pos:start="157:23" pos:end="157:31"><name pos:start="157:23" pos:end="157:31">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:33"><block_content pos:start="159:13" pos:end="159:33">

            <expr_stmt pos:start="159:13" pos:end="159:33"><expr pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:18">dstPtr</name> <operator pos:start="159:20" pos:end="159:21">+=</operator> <name pos:start="159:23" pos:end="159:32">ALT32_CORR</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="163:9" pos:end="189:9"><if pos:start="163:9" pos:end="169:43">if <condition pos:start="163:12" pos:end="165:37">(<expr pos:start="163:13" pos:end="165:36"><name pos:start="163:13" pos:end="163:24"><name pos:start="163:13" pos:end="163:21">dstStride</name><index pos:start="163:22" pos:end="163:24">[<expr pos:start="163:23" pos:end="163:23"><literal type="number" pos:start="163:23" pos:end="163:23">0</literal></expr>]</index></name> <operator pos:start="163:26" pos:end="163:26">*</operator> <name pos:start="163:28" pos:end="163:33">srcBpp</name> <operator pos:start="163:35" pos:end="163:36">==</operator> <name pos:start="163:38" pos:end="163:49"><name pos:start="163:38" pos:end="163:46">srcStride</name><index pos:start="163:47" pos:end="163:49">[<expr pos:start="163:48" pos:end="163:48"><literal type="number" pos:start="163:48" pos:end="163:48">0</literal></expr>]</index></name> <operator pos:start="163:51" pos:end="163:51">*</operator> <name pos:start="163:53" pos:end="163:58">dstBpp</name> <operator pos:start="163:60" pos:end="163:61">&amp;&amp;</operator> <name pos:start="163:63" pos:end="163:74"><name pos:start="163:63" pos:end="163:71">srcStride</name><index pos:start="163:72" pos:end="163:74">[<expr pos:start="163:73" pos:end="163:73"><literal type="number" pos:start="163:73" pos:end="163:73">0</literal></expr>]</index></name> <operator pos:start="163:76" pos:end="163:76">&gt;</operator> <literal type="number" pos:start="163:78" pos:end="163:78">0</literal> <operator pos:start="163:80" pos:end="163:81">&amp;&amp;</operator>

            <operator pos:start="165:13" pos:end="165:13">!</operator><operator pos:start="165:14" pos:end="165:14">(</operator><name pos:start="165:15" pos:end="165:26"><name pos:start="165:15" pos:end="165:23">srcStride</name><index pos:start="165:24" pos:end="165:26">[<expr pos:start="165:25" pos:end="165:25"><literal type="number" pos:start="165:25" pos:end="165:25">0</literal></expr>]</index></name> <operator pos:start="165:28" pos:end="165:28">%</operator> <name pos:start="165:30" pos:end="165:35">srcBpp</name><operator pos:start="165:36" pos:end="165:36">)</operator></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="169:43"><block_content pos:start="167:13" pos:end="169:43">

            <expr_stmt pos:start="167:13" pos:end="169:43"><expr pos:start="167:13" pos:end="169:42"><call pos:start="167:13" pos:end="169:42"><name pos:start="167:13" pos:end="167:16">conv</name><argument_list pos:start="167:17" pos:end="169:42">(<argument pos:start="167:18" pos:end="167:23"><expr pos:start="167:18" pos:end="167:23"><name pos:start="167:18" pos:end="167:23">srcPtr</name></expr></argument>, <argument pos:start="167:26" pos:end="167:58"><expr pos:start="167:26" pos:end="167:58"><name pos:start="167:26" pos:end="167:31">dstPtr</name> <operator pos:start="167:33" pos:end="167:33">+</operator> <name pos:start="167:35" pos:end="167:46"><name pos:start="167:35" pos:end="167:43">dstStride</name><index pos:start="167:44" pos:end="167:46">[<expr pos:start="167:45" pos:end="167:45"><literal type="number" pos:start="167:45" pos:end="167:45">0</literal></expr>]</index></name> <operator pos:start="167:48" pos:end="167:48">*</operator> <name pos:start="167:50" pos:end="167:58">srcSliceY</name></expr></argument>,

                 <argument pos:start="169:18" pos:end="169:41"><expr pos:start="169:18" pos:end="169:41"><name pos:start="169:18" pos:end="169:26">srcSliceH</name> <operator pos:start="169:28" pos:end="169:28">*</operator> <name pos:start="169:30" pos:end="169:41"><name pos:start="169:30" pos:end="169:38">srcStride</name><index pos:start="169:39" pos:end="169:41">[<expr pos:start="169:40" pos:end="169:40"><literal type="number" pos:start="169:40" pos:end="169:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="171:9" pos:end="189:9">else <block pos:start="171:14" pos:end="189:9">{<block_content pos:start="173:13" pos:end="187:13">

            <decl_stmt pos:start="173:13" pos:end="173:18"><decl pos:start="173:13" pos:end="173:17"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:17">i</name></decl>;</decl_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:47"><expr pos:start="175:13" pos:end="175:46"><name pos:start="175:13" pos:end="175:18">dstPtr</name> <operator pos:start="175:20" pos:end="175:21">+=</operator> <name pos:start="175:23" pos:end="175:34"><name pos:start="175:23" pos:end="175:31">dstStride</name><index pos:start="175:32" pos:end="175:34">[<expr pos:start="175:33" pos:end="175:33"><literal type="number" pos:start="175:33" pos:end="175:33">0</literal></expr>]</index></name> <operator pos:start="175:36" pos:end="175:36">*</operator> <name pos:start="175:38" pos:end="175:46">srcSliceY</name></expr>;</expr_stmt>



            <for pos:start="179:13" pos:end="187:13">for <control pos:start="179:17" pos:end="179:43">(<init pos:start="179:18" pos:end="179:23"><expr pos:start="179:18" pos:end="179:22"><name pos:start="179:18" pos:end="179:18">i</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <literal type="number" pos:start="179:22" pos:end="179:22">0</literal></expr>;</init> <condition pos:start="179:25" pos:end="179:38"><expr pos:start="179:25" pos:end="179:37"><name pos:start="179:25" pos:end="179:25">i</name> <operator pos:start="179:27" pos:end="179:27">&lt;</operator> <name pos:start="179:29" pos:end="179:37">srcSliceH</name></expr>;</condition> <incr pos:start="179:40" pos:end="179:42"><expr pos:start="179:40" pos:end="179:42"><name pos:start="179:40" pos:end="179:40">i</name><operator pos:start="179:41" pos:end="179:42">++</operator></expr></incr>)</control> <block pos:start="179:45" pos:end="187:13">{<block_content pos:start="181:17" pos:end="185:39">

                <expr_stmt pos:start="181:17" pos:end="181:55"><expr pos:start="181:17" pos:end="181:54"><call pos:start="181:17" pos:end="181:54"><name pos:start="181:17" pos:end="181:20">conv</name><argument_list pos:start="181:21" pos:end="181:54">(<argument pos:start="181:22" pos:end="181:27"><expr pos:start="181:22" pos:end="181:27"><name pos:start="181:22" pos:end="181:27">srcPtr</name></expr></argument>, <argument pos:start="181:30" pos:end="181:35"><expr pos:start="181:30" pos:end="181:35"><name pos:start="181:30" pos:end="181:35">dstPtr</name></expr></argument>, <argument pos:start="181:38" pos:end="181:53"><expr pos:start="181:38" pos:end="181:53"><name pos:start="181:38" pos:end="181:44"><name pos:start="181:38" pos:end="181:38">c</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:44">srcW</name></name> <operator pos:start="181:46" pos:end="181:46">*</operator> <name pos:start="181:48" pos:end="181:53">srcBpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:39"><expr pos:start="183:17" pos:end="183:38"><name pos:start="183:17" pos:end="183:22">srcPtr</name> <operator pos:start="183:24" pos:end="183:25">+=</operator> <name pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:35">srcStride</name><index pos:start="183:36" pos:end="183:38">[<expr pos:start="183:37" pos:end="183:37"><literal type="number" pos:start="183:37" pos:end="183:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:39"><expr pos:start="185:17" pos:end="185:38"><name pos:start="185:17" pos:end="185:22">dstPtr</name> <operator pos:start="185:24" pos:end="185:25">+=</operator> <name pos:start="185:27" pos:end="185:38"><name pos:start="185:27" pos:end="185:35">dstStride</name><index pos:start="185:36" pos:end="185:38">[<expr pos:start="185:37" pos:end="185:37"><literal type="number" pos:start="185:37" pos:end="185:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="193:5" pos:end="193:21">return <expr pos:start="193:12" pos:end="193:20"><name pos:start="193:12" pos:end="193:20">srcSliceH</name></expr>;</return>

</block_content>}</block></function>
</unit>
