<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19046.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">ff_lzw_decode</name><parameter_list pos:start="1:18" pos:end="1:53">(<parameter pos:start="1:19" pos:end="1:29"><decl pos:start="1:19" pos:end="1:29"><type pos:start="1:19" pos:end="1:29"><name pos:start="1:19" pos:end="1:26">LZWState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:29">p</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:38">uint8_t</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">buf</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:52"><decl pos:start="1:46" pos:end="1:52"><type pos:start="1:46" pos:end="1:52"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:52">len</name></decl></parameter>)</parameter_list><block pos:start="1:54" pos:end="119:1">{<block_content pos:start="3:5" pos:end="117:19">

    <decl_stmt pos:start="3:5" pos:end="3:27"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">l</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">c</name></decl>, <decl pos:start="3:15" pos:end="3:18"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:18">code</name></decl>, <decl pos:start="3:21" pos:end="3:22"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:21" pos:end="3:22">oc</name></decl>, <decl pos:start="3:25" pos:end="3:26"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:25" pos:end="3:26">fc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">uint8_t</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:15">sp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:19">LZWState</name></name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:45">= <expr pos:start="7:26" pos:end="7:45"><operator pos:start="7:26" pos:end="7:26">(</operator>struct <name pos:start="7:34" pos:end="7:41">LZWState</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator><name pos:start="7:45" pos:end="7:45">p</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:19">end_code</name></name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:12"><expr pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:5">l</name> <operator pos:start="17:7" pos:end="17:7">=</operator> <name pos:start="17:9" pos:end="17:11">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:15"><expr pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:6">sp</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <name pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">s</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:14">sp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:6">oc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <name pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">s</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:14">oc</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:6">fc</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <name pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">s</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:14">fc</name></name></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="107:5">for <control pos:start="27:9" pos:end="27:12">(<init pos:start="27:10" pos:end="27:10">;</init><condition pos:start="27:11" pos:end="27:11">;</condition><incr/>)</control> <block pos:start="27:14" pos:end="107:5">{<block_content pos:start="29:9" pos:end="105:9">

        <while pos:start="29:9" pos:end="37:9">while <condition pos:start="29:15" pos:end="29:29">(<expr pos:start="29:16" pos:end="29:28"><name pos:start="29:16" pos:end="29:17">sp</name> <operator pos:start="29:19" pos:end="29:19">&gt;</operator> <name pos:start="29:21" pos:end="29:28"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:28">stack</name></name></expr>)</condition> <block pos:start="29:31" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:29">

            <expr_stmt pos:start="31:13" pos:end="31:29"><expr pos:start="31:13" pos:end="31:28"><operator pos:start="31:13" pos:end="31:13">*</operator><name pos:start="31:14" pos:end="31:16">buf</name><operator pos:start="31:17" pos:end="31:18">++</operator> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">*</operator><operator pos:start="31:23" pos:end="31:23">(</operator><operator pos:start="31:24" pos:end="31:25">--</operator><name pos:start="31:26" pos:end="31:27">sp</name><operator pos:start="31:28" pos:end="31:28">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="35:29"><if pos:start="33:13" pos:end="35:29">if <condition pos:start="33:16" pos:end="33:27">(<expr pos:start="33:17" pos:end="33:26"><operator pos:start="33:17" pos:end="33:17">(</operator><operator pos:start="33:18" pos:end="33:19">--</operator><name pos:start="33:20" pos:end="33:20">l</name><operator pos:start="33:21" pos:end="33:21">)</operator> <operator pos:start="33:23" pos:end="33:24">==</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:29"><block_content pos:start="35:17" pos:end="35:29">

                <goto pos:start="35:17" pos:end="35:29">goto <name pos:start="35:22" pos:end="35:28">the_end</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:9">c</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:24">lzw_get_code</name><argument_list pos:start="39:25" pos:end="39:27">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="105:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">c</name> <operator pos:start="41:15" pos:end="41:16">==</operator> <name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:28">end_code</name></name></expr>)</condition> <block pos:start="41:31" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:18">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:23"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">end_code</name></name> <operator pos:start="43:25" pos:end="43:25">=</operator> <operator pos:start="43:27" pos:end="43:27">-</operator><literal type="number" pos:start="43:28" pos:end="43:28">1</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="47:11" pos:end="59:9">else if <condition pos:start="47:19" pos:end="47:38">(<expr pos:start="47:20" pos:end="47:37"><name pos:start="47:20" pos:end="47:20">c</name> <operator pos:start="47:22" pos:end="47:23">==</operator> <name pos:start="47:25" pos:end="47:37"><name pos:start="47:25" pos:end="47:25">s</name><operator pos:start="47:26" pos:end="47:27">-&gt;</operator><name pos:start="47:28" pos:end="47:37">clear_code</name></name></expr>)</condition> <block pos:start="47:40" pos:end="59:9">{<block_content pos:start="49:13" pos:end="57:23">

            <expr_stmt pos:start="49:13" pos:end="49:41"><expr pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:22">cursize</name></name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:26">s</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:36">codesize</name></name> <operator pos:start="49:38" pos:end="49:38">+</operator> <literal type="number" pos:start="49:40" pos:end="49:40">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:42"><expr pos:start="51:13" pos:end="51:41"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">curmask</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:41"><name pos:start="51:26" pos:end="51:29">mask</name><index pos:start="51:30" pos:end="51:41">[<expr pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:40"><name pos:start="51:31" pos:end="51:31">s</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:40">cursize</name></name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:13">s</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:19">slot</name></name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:33"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:33">newcodes</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">top_slot</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">1</literal> <operator pos:start="55:29" pos:end="55:30">&lt;&lt;</operator> <name pos:start="55:32" pos:end="55:41"><name pos:start="55:32" pos:end="55:32">s</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:41">cursize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:23"><expr pos:start="57:13" pos:end="57:22"><name pos:start="57:13" pos:end="57:14">fc</name><operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:18">oc</name><operator pos:start="57:19" pos:end="57:19">=</operator> <operator pos:start="57:21" pos:end="57:21">-</operator><literal type="number" pos:start="57:22" pos:end="57:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="105:9">else <block pos:start="59:16" pos:end="105:9">{<block_content pos:start="61:13" pos:end="103:13">

            <expr_stmt pos:start="61:13" pos:end="61:21"><expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:16">code</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <name pos:start="61:20" pos:end="61:20">c</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:32">(<expr pos:start="63:17" pos:end="63:31"><name pos:start="63:17" pos:end="63:20">code</name> <operator pos:start="63:22" pos:end="63:23">&gt;=</operator> <name pos:start="63:25" pos:end="63:31"><name pos:start="63:25" pos:end="63:25">s</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:31">slot</name></name></expr>)</condition> <block pos:start="63:34" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:26">

                <expr_stmt pos:start="65:17" pos:end="65:27"><expr pos:start="65:17" pos:end="65:26"><operator pos:start="65:17" pos:end="65:17">*</operator><name pos:start="65:18" pos:end="65:19">sp</name><operator pos:start="65:20" pos:end="65:21">++</operator> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:26">fc</name></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:26"><expr pos:start="67:17" pos:end="67:25"><name pos:start="67:17" pos:end="67:20">code</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <name pos:start="67:24" pos:end="67:25">oc</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="71:13" pos:end="77:13">while <condition pos:start="71:19" pos:end="71:39">(<expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:23">code</name> <operator pos:start="71:25" pos:end="71:26">&gt;=</operator> <name pos:start="71:28" pos:end="71:38"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:38">newcodes</name></name></expr>)</condition> <block pos:start="71:41" pos:end="77:13">{<block_content pos:start="73:17" pos:end="75:39">

                <expr_stmt pos:start="73:17" pos:end="73:40"><expr pos:start="73:17" pos:end="73:39"><operator pos:start="73:17" pos:end="73:17">*</operator><name pos:start="73:18" pos:end="73:19">sp</name><operator pos:start="73:20" pos:end="73:21">++</operator> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:39"><name pos:start="73:25" pos:end="73:25">s</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:33">suffix</name><index pos:start="73:34" pos:end="73:39">[<expr pos:start="73:35" pos:end="73:38"><name pos:start="73:35" pos:end="73:38">code</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:39"><expr pos:start="75:17" pos:end="75:38"><name pos:start="75:17" pos:end="75:20">code</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:38"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:32">prefix</name><index pos:start="75:33" pos:end="75:38">[<expr pos:start="75:34" pos:end="75:37"><name pos:start="75:34" pos:end="75:37">code</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="79:13" pos:end="79:25"><expr pos:start="79:13" pos:end="79:24"><operator pos:start="79:13" pos:end="79:13">*</operator><name pos:start="79:14" pos:end="79:15">sp</name><operator pos:start="79:16" pos:end="79:17">++</operator> <operator pos:start="79:19" pos:end="79:19">=</operator> <name pos:start="79:21" pos:end="79:24">code</name></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:47">(<expr pos:start="81:17" pos:end="81:46"><name pos:start="81:17" pos:end="81:23"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">slot</name></name> <operator pos:start="81:25" pos:end="81:25">&lt;</operator> <name pos:start="81:27" pos:end="81:37"><name pos:start="81:27" pos:end="81:27">s</name><operator pos:start="81:28" pos:end="81:29">-&gt;</operator><name pos:start="81:30" pos:end="81:37">top_slot</name></name> <operator pos:start="81:39" pos:end="81:40">&amp;&amp;</operator> <name pos:start="81:42" pos:end="81:43">oc</name><operator pos:start="81:44" pos:end="81:45">&gt;=</operator><literal type="number" pos:start="81:46" pos:end="81:46">0</literal></expr>)</condition> <block pos:start="81:49" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:42">

                <expr_stmt pos:start="83:17" pos:end="83:42"><expr pos:start="83:17" pos:end="83:41"><name pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:25">suffix</name><index pos:start="83:26" pos:end="83:34">[<expr pos:start="83:27" pos:end="83:33"><name pos:start="83:27" pos:end="83:33"><name pos:start="83:27" pos:end="83:27">s</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:33">slot</name></name></expr>]</index></name> <operator pos:start="83:36" pos:end="83:36">=</operator> <name pos:start="83:38" pos:end="83:41">code</name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:42"><expr pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:36"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:25">prefix</name><index pos:start="85:26" pos:end="85:36">[<expr pos:start="85:27" pos:end="85:35"><name pos:start="85:27" pos:end="85:33"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:33">slot</name></name><operator pos:start="85:34" pos:end="85:35">++</operator></expr>]</index></name> <operator pos:start="85:38" pos:end="85:38">=</operator> <name pos:start="85:40" pos:end="85:41">oc</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:22"><expr pos:start="89:13" pos:end="89:21"><name pos:start="89:13" pos:end="89:14">fc</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:21">code</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:19"><expr pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:14">oc</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:18">c</name></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="103:13"><if pos:start="93:13" pos:end="103:13">if <condition pos:start="93:16" pos:end="93:55">(<expr pos:start="93:17" pos:end="93:54"><name pos:start="93:17" pos:end="93:23"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:23">slot</name></name> <operator pos:start="93:25" pos:end="93:26">&gt;=</operator> <name pos:start="93:28" pos:end="93:38"><name pos:start="93:28" pos:end="93:28">s</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:38">top_slot</name></name> <operator pos:start="93:40" pos:end="93:40">-</operator> <name pos:start="93:42" pos:end="93:54"><name pos:start="93:42" pos:end="93:42">s</name><operator pos:start="93:43" pos:end="93:44">-&gt;</operator><name pos:start="93:45" pos:end="93:54">extra_slot</name></name></expr>)</condition> <block pos:start="93:57" pos:end="103:13">{<block_content pos:start="95:17" pos:end="101:17">

                <if_stmt pos:start="95:17" pos:end="101:17"><if pos:start="95:17" pos:end="101:17">if <condition pos:start="95:20" pos:end="95:45">(<expr pos:start="95:21" pos:end="95:44"><name pos:start="95:21" pos:end="95:30"><name pos:start="95:21" pos:end="95:21">s</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:30">cursize</name></name> <operator pos:start="95:32" pos:end="95:32">&lt;</operator> <name pos:start="95:34" pos:end="95:44">LZW_MAXBITS</name></expr>)</condition> <block pos:start="95:47" pos:end="101:17">{<block_content pos:start="97:21" pos:end="99:52">

                    <expr_stmt pos:start="97:21" pos:end="97:38"><expr pos:start="97:21" pos:end="97:37"><name pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:31">top_slot</name></name> <operator pos:start="97:33" pos:end="97:35">&lt;&lt;=</operator> <literal type="number" pos:start="97:37" pos:end="97:37">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:52"><expr pos:start="99:21" pos:end="99:51"><name pos:start="99:21" pos:end="99:30"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:30">curmask</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:51"><name pos:start="99:34" pos:end="99:37">mask</name><index pos:start="99:38" pos:end="99:51">[<expr pos:start="99:39" pos:end="99:50"><operator pos:start="99:39" pos:end="99:40">++</operator><name pos:start="99:41" pos:end="99:50"><name pos:start="99:41" pos:end="99:41">s</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:50">cursize</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

  <label pos:start="109:3" pos:end="109:10"><name pos:start="109:3" pos:end="109:9">the_end</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:15"><expr pos:start="111:5" pos:end="111:14"><name pos:start="111:5" pos:end="111:9"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:9">sp</name></name> <operator pos:start="111:11" pos:end="111:11">=</operator> <name pos:start="111:13" pos:end="111:14">sp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:15"><expr pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:9"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:9">oc</name></name> <operator pos:start="113:11" pos:end="113:11">=</operator> <name pos:start="113:13" pos:end="113:14">oc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:15"><expr pos:start="115:5" pos:end="115:14"><name pos:start="115:5" pos:end="115:9"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:9">fc</name></name> <operator pos:start="115:11" pos:end="115:11">=</operator> <name pos:start="115:13" pos:end="115:14">fc</name></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:19">return <expr pos:start="117:12" pos:end="117:18"><name pos:start="117:12" pos:end="117:14">len</name> <operator pos:start="117:16" pos:end="117:16">-</operator> <name pos:start="117:18" pos:end="117:18">l</name></expr>;</return>

</block_content>}</block></function>
</unit>
