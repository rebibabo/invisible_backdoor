<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22986.c" pos:tabs="8"><function pos:start="1:1" pos:end="429:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h264_update_thread_context</name><parameter_list pos:start="1:34" pos:end="3:60">(<parameter pos:start="1:35" pos:end="1:53"><decl pos:start="1:35" pos:end="1:53"><type pos:start="1:35" pos:end="1:53"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">dst</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:59"><decl pos:start="3:35" pos:end="3:59"><type pos:start="3:35" pos:end="3:59"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:54">AVCodecContext</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:59">src</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="429:1">{<block_content pos:start="7:5" pos:end="427:15">

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">H264Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">h</name> <init pos:start="7:20" pos:end="7:35">= <expr pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:24">dst</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">priv_data</name></name></expr></init></decl>, <decl pos:start="7:38" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:38" pos:end="7:38">*</modifier></type><name pos:start="7:39" pos:end="7:40">h1</name> <init pos:start="7:42" pos:end="7:57">= <expr pos:start="7:44" pos:end="7:57"><name pos:start="7:44" pos:end="7:57"><name pos:start="7:44" pos:end="7:46">src</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:57">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">inited</name> <init pos:start="9:16" pos:end="9:39">= <expr pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:39"><name pos:start="9:18" pos:end="9:18">h</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:39">context_initialized</name></name></expr></init></decl>, <decl pos:start="9:42" pos:end="9:48"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:42" pos:end="9:44">err</name> <init pos:start="9:46" pos:end="9:48">= <expr pos:start="9:48" pos:end="9:48"><literal type="number" pos:start="9:48" pos:end="9:48">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:29">context_reinitialized</name> <init pos:start="11:31" pos:end="11:33">= <expr pos:start="11:33" pos:end="11:33"><literal type="number" pos:start="11:33" pos:end="11:33">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">dst</name> <operator pos:start="17:13" pos:end="17:14">==</operator> <name pos:start="17:16" pos:end="17:18">src</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="111:5"><if pos:start="23:5" pos:end="111:5">if <condition pos:start="23:8" pos:end="37:57">(<expr pos:start="23:9" pos:end="37:56"><name pos:start="23:9" pos:end="23:14">inited</name> <operator pos:start="23:16" pos:end="23:17">&amp;&amp;</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:17"><name pos:start="25:10" pos:end="25:10">h</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:17">width</name></name>                 <operator pos:start="25:35" pos:end="25:36">!=</operator> <name pos:start="25:38" pos:end="25:46"><name pos:start="25:38" pos:end="25:39">h1</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:46">width</name></name>                 <operator pos:start="25:64" pos:end="25:65">||</operator>

         <name pos:start="27:10" pos:end="27:18"><name pos:start="27:10" pos:end="27:10">h</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:18">height</name></name>                <operator pos:start="27:35" pos:end="27:36">!=</operator> <name pos:start="27:38" pos:end="27:47"><name pos:start="27:38" pos:end="27:39">h1</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:47">height</name></name>                <operator pos:start="27:64" pos:end="27:65">||</operator>

         <name pos:start="29:10" pos:end="29:20"><name pos:start="29:10" pos:end="29:10">h</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:20">mb_width</name></name>              <operator pos:start="29:35" pos:end="29:36">!=</operator> <name pos:start="29:38" pos:end="29:49"><name pos:start="29:38" pos:end="29:39">h1</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:49">mb_width</name></name>              <operator pos:start="29:64" pos:end="29:65">||</operator>

         <name pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:10">h</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:21">mb_height</name></name>             <operator pos:start="31:35" pos:end="31:36">!=</operator> <name pos:start="31:38" pos:end="31:50"><name pos:start="31:38" pos:end="31:39">h1</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:50">mb_height</name></name>             <operator pos:start="31:64" pos:end="31:65">||</operator>

         <name pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:10">h</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:15">sps</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:30">bit_depth_luma</name></name>    <operator pos:start="33:35" pos:end="33:36">!=</operator> <name pos:start="33:38" pos:end="33:59"><name pos:start="33:38" pos:end="33:39">h1</name><operator pos:start="33:40" pos:end="33:41">-&gt;</operator><name pos:start="33:42" pos:end="33:44">sps</name><operator pos:start="33:45" pos:end="33:45">.</operator><name pos:start="33:46" pos:end="33:59">bit_depth_luma</name></name>    <operator pos:start="33:64" pos:end="33:65">||</operator>

         <name pos:start="35:10" pos:end="35:33"><name pos:start="35:10" pos:end="35:10">h</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:15">sps</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:33">chroma_format_idc</name></name> <operator pos:start="35:35" pos:end="35:36">!=</operator> <name pos:start="35:38" pos:end="35:62"><name pos:start="35:38" pos:end="35:39">h1</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:44">sps</name><operator pos:start="35:45" pos:end="35:45">.</operator><name pos:start="35:46" pos:end="35:62">chroma_format_idc</name></name> <operator pos:start="35:64" pos:end="35:65">||</operator>

         <name pos:start="37:10" pos:end="37:26"><name pos:start="37:10" pos:end="37:10">h</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:15">sps</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:26">colorspace</name></name>        <operator pos:start="37:35" pos:end="37:36">!=</operator> <name pos:start="37:38" pos:end="37:55"><name pos:start="37:38" pos:end="37:39">h1</name><operator pos:start="37:40" pos:end="37:41">-&gt;</operator><name pos:start="37:42" pos:end="37:44">sps</name><operator pos:start="37:45" pos:end="37:45">.</operator><name pos:start="37:46" pos:end="37:55">colorspace</name></name><operator pos:start="37:56" pos:end="37:56">)</operator></expr>)</condition> <block pos:start="37:59" pos:end="111:5">{<block_content pos:start="47:9" pos:end="110:0">



        <comment type="block" pos:start="41:9" pos:end="45:31">/* set bits_per_raw_sample to the previous value. the check for changed

         * bit depth in h264_set_parameter_from_sps() uses it and sets it to

         * the current value */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:62"><expr pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:9">h</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">avctx</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:37">bits_per_raw_sample</name></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:61"><name pos:start="47:41" pos:end="47:41">h</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:46">sps</name><operator pos:start="47:47" pos:end="47:47">.</operator><name pos:start="47:48" pos:end="47:61">bit_depth_luma</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:33"><expr pos:start="51:9" pos:end="51:32"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:9">h</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:16">width</name></name>     <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:32"><name pos:start="51:24" pos:end="51:25">h1</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:9">h</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:17">height</name></name>    <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:33"><name pos:start="53:24" pos:end="53:25">h1</name><operator pos:start="53:26" pos:end="53:27">-&gt;</operator><name pos:start="53:28" pos:end="53:33">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:20"><name pos:start="55:9" pos:end="55:9">h</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:20">mb_height</name></name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:25">h1</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:36">mb_height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">h</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:19">mb_width</name></name>  <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:35"><name pos:start="57:24" pos:end="57:25">h1</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:35">mb_width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:9">h</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:17">mb_num</name></name>    <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:25">h1</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:33">mb_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:37"><expr pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:20">mb_stride</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:36"><name pos:start="61:24" pos:end="61:25">h1</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:36">mb_stride</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:36"><expr pos:start="63:9" pos:end="63:35"><name pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:9">h</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:19">b_stride</name></name>  <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:35"><name pos:start="63:24" pos:end="63:25">h1</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:35">b_stride</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="65:9" pos:end="65:18">// SPS/PPS</comment>

        <if_stmt pos:start="67:9" pos:end="73:23"><if pos:start="67:9" pos:end="73:23">if <condition pos:start="67:12" pos:end="71:71">(<expr pos:start="67:13" pos:end="71:70"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:16">ret</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="71:65"><name pos:start="67:20" pos:end="67:37">copy_parameter_set</name><argument_list pos:start="67:38" pos:end="71:65">(<argument pos:start="67:39" pos:end="67:61"><expr pos:start="67:39" pos:end="67:61"><operator pos:start="67:39" pos:end="67:39">(</operator><name pos:start="67:40" pos:end="67:43">void</name> <operator pos:start="67:45" pos:end="67:45">*</operator><operator pos:start="67:46" pos:end="67:46">*</operator><operator pos:start="67:47" pos:end="67:47">)</operator><name pos:start="67:48" pos:end="67:61"><name pos:start="67:48" pos:end="67:48">h</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:61">sps_buffers</name></name></expr></argument>,

                                      <argument pos:start="69:39" pos:end="69:62"><expr pos:start="69:39" pos:end="69:62"><operator pos:start="69:39" pos:end="69:39">(</operator><name pos:start="69:40" pos:end="69:43">void</name> <operator pos:start="69:45" pos:end="69:45">*</operator><operator pos:start="69:46" pos:end="69:46">*</operator><operator pos:start="69:47" pos:end="69:47">)</operator><name pos:start="69:48" pos:end="69:62"><name pos:start="69:48" pos:end="69:49">h1</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:62">sps_buffers</name></name></expr></argument>,

                                      <argument pos:start="71:39" pos:end="71:51"><expr pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:51">MAX_SPS_COUNT</name></expr></argument>, <argument pos:start="71:54" pos:end="71:64"><expr pos:start="71:54" pos:end="71:64"><sizeof pos:start="71:54" pos:end="71:64">sizeof<argument_list pos:start="71:60" pos:end="71:64">(<argument pos:start="71:61" pos:end="71:63"><expr pos:start="71:61" pos:end="71:63"><name pos:start="71:61" pos:end="71:63">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="71:66" pos:end="71:66">)</operator> <operator pos:start="71:68" pos:end="71:68">&lt;</operator> <literal type="number" pos:start="71:70" pos:end="71:70">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:25"><expr pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:14"><name pos:start="75:9" pos:end="75:9">h</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:14">sps</name></name> <operator pos:start="75:16" pos:end="75:16">=</operator> <name pos:start="75:18" pos:end="75:24"><name pos:start="75:18" pos:end="75:19">h1</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:24">sps</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:23"><if pos:start="77:9" pos:end="83:23">if <condition pos:start="77:12" pos:end="81:71">(<expr pos:start="77:13" pos:end="81:70"><operator pos:start="77:13" pos:end="77:13">(</operator><name pos:start="77:14" pos:end="77:16">ret</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="81:65"><name pos:start="77:20" pos:end="77:37">copy_parameter_set</name><argument_list pos:start="77:38" pos:end="81:65">(<argument pos:start="77:39" pos:end="77:61"><expr pos:start="77:39" pos:end="77:61"><operator pos:start="77:39" pos:end="77:39">(</operator><name pos:start="77:40" pos:end="77:43">void</name> <operator pos:start="77:45" pos:end="77:45">*</operator><operator pos:start="77:46" pos:end="77:46">*</operator><operator pos:start="77:47" pos:end="77:47">)</operator><name pos:start="77:48" pos:end="77:61"><name pos:start="77:48" pos:end="77:48">h</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:61">pps_buffers</name></name></expr></argument>,

                                      <argument pos:start="79:39" pos:end="79:62"><expr pos:start="79:39" pos:end="79:62"><operator pos:start="79:39" pos:end="79:39">(</operator><name pos:start="79:40" pos:end="79:43">void</name> <operator pos:start="79:45" pos:end="79:45">*</operator><operator pos:start="79:46" pos:end="79:46">*</operator><operator pos:start="79:47" pos:end="79:47">)</operator><name pos:start="79:48" pos:end="79:62"><name pos:start="79:48" pos:end="79:49">h1</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:62">pps_buffers</name></name></expr></argument>,

                                      <argument pos:start="81:39" pos:end="81:51"><expr pos:start="81:39" pos:end="81:51"><name pos:start="81:39" pos:end="81:51">MAX_PPS_COUNT</name></expr></argument>, <argument pos:start="81:54" pos:end="81:64"><expr pos:start="81:54" pos:end="81:64"><sizeof pos:start="81:54" pos:end="81:64">sizeof<argument_list pos:start="81:60" pos:end="81:64">(<argument pos:start="81:61" pos:end="81:63"><expr pos:start="81:61" pos:end="81:63"><name pos:start="81:61" pos:end="81:63">PPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="81:66" pos:end="81:66">)</operator> <operator pos:start="81:68" pos:end="81:68">&lt;</operator> <literal type="number" pos:start="81:70" pos:end="81:70">0</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:23"><block_content pos:start="83:13" pos:end="83:23">

            <return pos:start="83:13" pos:end="83:23">return <expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:25"><expr pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:9">h</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:14">pps</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <name pos:start="85:18" pos:end="85:24"><name pos:start="85:18" pos:end="85:19">h1</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:24">pps</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:53">(<expr pos:start="89:13" pos:end="89:52"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:16">err</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:47"><name pos:start="89:20" pos:end="89:41">h264_slice_header_init</name><argument_list pos:start="89:42" pos:end="89:47">(<argument pos:start="89:43" pos:end="89:43"><expr pos:start="89:43" pos:end="89:43"><name pos:start="89:43" pos:end="89:43">h</name></expr></argument>, <argument pos:start="89:46" pos:end="89:46"><expr pos:start="89:46" pos:end="89:46"><literal type="number" pos:start="89:46" pos:end="89:46">1</literal></expr></argument>)</argument_list></call><operator pos:start="89:48" pos:end="89:48">)</operator> <operator pos:start="89:50" pos:end="89:50">&lt;</operator> <literal type="number" pos:start="89:52" pos:end="89:52">0</literal></expr>)</condition> <block pos:start="89:55" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:23">

            <expr_stmt pos:start="91:13" pos:end="91:80"><expr pos:start="91:13" pos:end="91:79"><call pos:start="91:13" pos:end="91:79"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:79">(<argument pos:start="91:20" pos:end="91:27"><expr pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:27"><name pos:start="91:20" pos:end="91:20">h</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:27">avctx</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:41"><expr pos:start="91:30" pos:end="91:41"><name pos:start="91:30" pos:end="91:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:44" pos:end="91:78"><expr pos:start="91:44" pos:end="91:78"><literal type="string" pos:start="91:44" pos:end="91:78">"h264_slice_header_init() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="110:0"><expr pos:start="97:9" pos:end="97:33"><name pos:start="97:9" pos:end="97:29">context_reinitialized</name> <operator pos:start="97:31" pos:end="97:31">=</operator> <literal type="number" pos:start="97:33" pos:end="97:33">1</literal></expr>;</expr_stmt>



<cpp:if pos:start="101:1" pos:end="101:5">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:5"><literal type="number" pos:start="101:5" pos:end="101:5">0</literal></expr></cpp:if>

        h264_set_parameter_from_sps(h);

        <comment type="line" pos:start="105:9" pos:end="105:105">//Note we set context_reinitialized which will cause h264_set_parameter_from_sps to be reexecuted</comment>

        h-&gt;cur_chroma_format_idc = h1-&gt;cur_chroma_format_idc;

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="115:5" pos:end="115:63">/* copy block_offset since frame_start may not be called */</comment>

    <expr_stmt pos:start="117:5" pos:end="117:71"><expr pos:start="117:5" pos:end="117:70"><call pos:start="117:5" pos:end="117:70"><name pos:start="117:5" pos:end="117:10">memcpy</name><argument_list pos:start="117:11" pos:end="117:70">(<argument pos:start="117:12" pos:end="117:26"><expr pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:26"><name pos:start="117:12" pos:end="117:12">h</name><operator pos:start="117:13" pos:end="117:14">-&gt;</operator><name pos:start="117:15" pos:end="117:26">block_offset</name></name></expr></argument>, <argument pos:start="117:29" pos:end="117:44"><expr pos:start="117:29" pos:end="117:44"><name pos:start="117:29" pos:end="117:44"><name pos:start="117:29" pos:end="117:30">h1</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:44">block_offset</name></name></expr></argument>, <argument pos:start="117:47" pos:end="117:69"><expr pos:start="117:47" pos:end="117:69"><sizeof pos:start="117:47" pos:end="117:69">sizeof<argument_list pos:start="117:53" pos:end="117:69">(<argument pos:start="117:54" pos:end="117:68"><expr pos:start="117:54" pos:end="117:68"><name pos:start="117:54" pos:end="117:68"><name pos:start="117:54" pos:end="117:54">h</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:68">block_offset</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="247:5"><if pos:start="121:5" pos:end="247:5">if <condition pos:start="121:8" pos:end="121:16">(<expr pos:start="121:9" pos:end="121:15"><operator pos:start="121:9" pos:end="121:9">!</operator><name pos:start="121:10" pos:end="121:15">inited</name></expr>)</condition> <block pos:start="121:18" pos:end="247:5">{<block_content pos:start="123:9" pos:end="245:57">

        <decl_stmt pos:start="123:9" pos:end="123:56"><decl pos:start="123:9" pos:end="123:55"><type pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:24">H264SliceContext</name> <modifier pos:start="123:26" pos:end="123:26">*</modifier></type><name pos:start="123:27" pos:end="123:40">orig_slice_ctx</name> <init pos:start="123:42" pos:end="123:55">= <expr pos:start="123:44" pos:end="123:55"><name pos:start="123:44" pos:end="123:55"><name pos:start="123:44" pos:end="123:44">h</name><operator pos:start="123:45" pos:end="123:46">-&gt;</operator><name pos:start="123:47" pos:end="123:55">slice_ctx</name></name></expr></init></decl>;</decl_stmt>



        <for pos:start="127:9" pos:end="129:41">for <control pos:start="127:13" pos:end="127:43">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:38"><expr pos:start="127:21" pos:end="127:37"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <name pos:start="127:25" pos:end="127:37">MAX_SPS_COUNT</name></expr>;</condition> <incr pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:40">i</name><operator pos:start="127:41" pos:end="127:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="129:41"><block_content pos:start="129:13" pos:end="129:41">

            <expr_stmt pos:start="129:13" pos:end="129:41"><expr pos:start="129:13" pos:end="129:40"><call pos:start="129:13" pos:end="129:40"><name pos:start="129:13" pos:end="129:20">av_freep</name><argument_list pos:start="129:21" pos:end="129:40">(<argument pos:start="129:22" pos:end="129:39"><expr pos:start="129:22" pos:end="129:39"><name pos:start="129:22" pos:end="129:35"><name pos:start="129:22" pos:end="129:22">h</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:35">sps_buffers</name></name> <operator pos:start="129:37" pos:end="129:37">+</operator> <name pos:start="129:39" pos:end="129:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="133:9" pos:end="135:41">for <control pos:start="133:13" pos:end="133:43">(<init pos:start="133:14" pos:end="133:19"><expr pos:start="133:14" pos:end="133:18"><name pos:start="133:14" pos:end="133:14">i</name> <operator pos:start="133:16" pos:end="133:16">=</operator> <literal type="number" pos:start="133:18" pos:end="133:18">0</literal></expr>;</init> <condition pos:start="133:21" pos:end="133:38"><expr pos:start="133:21" pos:end="133:37"><name pos:start="133:21" pos:end="133:21">i</name> <operator pos:start="133:23" pos:end="133:23">&lt;</operator> <name pos:start="133:25" pos:end="133:37">MAX_PPS_COUNT</name></expr>;</condition> <incr pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:40">i</name><operator pos:start="133:41" pos:end="133:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="135:13" pos:end="135:41"><block_content pos:start="135:13" pos:end="135:41">

            <expr_stmt pos:start="135:13" pos:end="135:41"><expr pos:start="135:13" pos:end="135:40"><call pos:start="135:13" pos:end="135:40"><name pos:start="135:13" pos:end="135:20">av_freep</name><argument_list pos:start="135:21" pos:end="135:40">(<argument pos:start="135:22" pos:end="135:39"><expr pos:start="135:22" pos:end="135:39"><name pos:start="135:22" pos:end="135:35"><name pos:start="135:22" pos:end="135:22">h</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:35">pps_buffers</name></name> <operator pos:start="135:37" pos:end="135:37">+</operator> <name pos:start="135:39" pos:end="135:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="139:9" pos:end="139:54"><expr pos:start="139:9" pos:end="139:53"><call pos:start="139:9" pos:end="139:53"><name pos:start="139:9" pos:end="139:29">ff_h264_unref_picture</name><argument_list pos:start="139:30" pos:end="139:53">(<argument pos:start="139:31" pos:end="139:31"><expr pos:start="139:31" pos:end="139:31"><name pos:start="139:31" pos:end="139:31">h</name></expr></argument>, <argument pos:start="139:34" pos:end="139:52"><expr pos:start="139:34" pos:end="139:52"><operator pos:start="139:34" pos:end="139:34">&amp;</operator><name pos:start="139:35" pos:end="139:52"><name pos:start="139:35" pos:end="139:35">h</name><operator pos:start="139:36" pos:end="139:37">-&gt;</operator><name pos:start="139:38" pos:end="139:52">last_pic_for_ec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:43"><expr pos:start="141:9" pos:end="141:42"><call pos:start="141:9" pos:end="141:42"><name pos:start="141:9" pos:end="141:14">memcpy</name><argument_list pos:start="141:15" pos:end="141:42">(<argument pos:start="141:16" pos:end="141:16"><expr pos:start="141:16" pos:end="141:16"><name pos:start="141:16" pos:end="141:16">h</name></expr></argument>, <argument pos:start="141:19" pos:end="141:20"><expr pos:start="141:19" pos:end="141:20"><name pos:start="141:19" pos:end="141:20">h1</name></expr></argument>, <argument pos:start="141:23" pos:end="141:41"><expr pos:start="141:23" pos:end="141:41"><sizeof pos:start="141:23" pos:end="141:41">sizeof<argument_list pos:start="141:29" pos:end="141:41">(<argument pos:start="141:30" pos:end="141:40"><expr pos:start="141:30" pos:end="141:40"><name pos:start="141:30" pos:end="141:40">H264Context</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:58"><expr pos:start="145:9" pos:end="145:57"><call pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:14">memset</name><argument_list pos:start="145:15" pos:end="145:57">(<argument pos:start="145:16" pos:end="145:29"><expr pos:start="145:16" pos:end="145:29"><name pos:start="145:16" pos:end="145:29"><name pos:start="145:16" pos:end="145:16">h</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:29">sps_buffers</name></name></expr></argument>, <argument pos:start="145:32" pos:end="145:32"><expr pos:start="145:32" pos:end="145:32"><literal type="number" pos:start="145:32" pos:end="145:32">0</literal></expr></argument>, <argument pos:start="145:35" pos:end="145:56"><expr pos:start="145:35" pos:end="145:56"><sizeof pos:start="145:35" pos:end="145:56">sizeof<argument_list pos:start="145:41" pos:end="145:56">(<argument pos:start="145:42" pos:end="145:55"><expr pos:start="145:42" pos:end="145:55"><name pos:start="145:42" pos:end="145:55"><name pos:start="145:42" pos:end="145:42">h</name><operator pos:start="145:43" pos:end="145:44">-&gt;</operator><name pos:start="145:45" pos:end="145:55">sps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:58"><expr pos:start="147:9" pos:end="147:57"><call pos:start="147:9" pos:end="147:57"><name pos:start="147:9" pos:end="147:14">memset</name><argument_list pos:start="147:15" pos:end="147:57">(<argument pos:start="147:16" pos:end="147:29"><expr pos:start="147:16" pos:end="147:29"><name pos:start="147:16" pos:end="147:29"><name pos:start="147:16" pos:end="147:16">h</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:29">pps_buffers</name></name></expr></argument>, <argument pos:start="147:32" pos:end="147:32"><expr pos:start="147:32" pos:end="147:32"><literal type="number" pos:start="147:32" pos:end="147:32">0</literal></expr></argument>, <argument pos:start="147:35" pos:end="147:56"><expr pos:start="147:35" pos:end="147:56"><sizeof pos:start="147:35" pos:end="147:56">sizeof<argument_list pos:start="147:41" pos:end="147:56">(<argument pos:start="147:42" pos:end="147:55"><expr pos:start="147:42" pos:end="147:55"><name pos:start="147:42" pos:end="147:55"><name pos:start="147:42" pos:end="147:42">h</name><operator pos:start="147:43" pos:end="147:44">-&gt;</operator><name pos:start="147:45" pos:end="147:55">pps_buffers</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:51"><expr pos:start="151:9" pos:end="151:50"><call pos:start="151:9" pos:end="151:50"><name pos:start="151:9" pos:end="151:14">memset</name><argument_list pos:start="151:15" pos:end="151:50">(<argument pos:start="151:16" pos:end="151:26"><expr pos:start="151:16" pos:end="151:26"><operator pos:start="151:16" pos:end="151:16">&amp;</operator><name pos:start="151:17" pos:end="151:26"><name pos:start="151:17" pos:end="151:17">h</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:26">cur_pic</name></name></expr></argument>, <argument pos:start="151:29" pos:end="151:29"><expr pos:start="151:29" pos:end="151:29"><literal type="number" pos:start="151:29" pos:end="151:29">0</literal></expr></argument>, <argument pos:start="151:32" pos:end="151:49"><expr pos:start="151:32" pos:end="151:49"><sizeof pos:start="151:32" pos:end="151:49">sizeof<argument_list pos:start="151:38" pos:end="151:49">(<argument pos:start="151:39" pos:end="151:48"><expr pos:start="151:39" pos:end="151:48"><name pos:start="151:39" pos:end="151:48"><name pos:start="151:39" pos:end="151:39">h</name><operator pos:start="151:40" pos:end="151:41">-&gt;</operator><name pos:start="151:42" pos:end="151:48">cur_pic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:67"><expr pos:start="153:9" pos:end="153:66"><call pos:start="153:9" pos:end="153:66"><name pos:start="153:9" pos:end="153:14">memset</name><argument_list pos:start="153:15" pos:end="153:66">(<argument pos:start="153:16" pos:end="153:34"><expr pos:start="153:16" pos:end="153:34"><operator pos:start="153:16" pos:end="153:16">&amp;</operator><name pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:17">h</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:34">last_pic_for_ec</name></name></expr></argument>, <argument pos:start="153:37" pos:end="153:37"><expr pos:start="153:37" pos:end="153:37"><literal type="number" pos:start="153:37" pos:end="153:37">0</literal></expr></argument>, <argument pos:start="153:40" pos:end="153:65"><expr pos:start="153:40" pos:end="153:65"><sizeof pos:start="153:40" pos:end="153:65">sizeof<argument_list pos:start="153:46" pos:end="153:65">(<argument pos:start="153:47" pos:end="153:64"><expr pos:start="153:47" pos:end="153:64"><name pos:start="153:47" pos:end="153:64"><name pos:start="153:47" pos:end="153:47">h</name><operator pos:start="153:48" pos:end="153:49">-&gt;</operator><name pos:start="153:50" pos:end="153:64">last_pic_for_ec</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="157:9" pos:end="157:38"><expr pos:start="157:9" pos:end="157:37"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">h</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:20">slice_ctx</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:37">orig_slice_ctx</name></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:75"><expr pos:start="161:9" pos:end="161:74"><call pos:start="161:9" pos:end="161:74"><name pos:start="161:9" pos:end="161:14">memset</name><argument_list pos:start="161:15" pos:end="161:74">(<argument pos:start="161:16" pos:end="161:34"><expr pos:start="161:16" pos:end="161:34"><operator pos:start="161:16" pos:end="161:16">&amp;</operator><name pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:17">h</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:28">slice_ctx</name><index pos:start="161:29" pos:end="161:31">[<expr pos:start="161:30" pos:end="161:30"><literal type="number" pos:start="161:30" pos:end="161:30">0</literal></expr>]</index></name><operator pos:start="161:32" pos:end="161:32">.</operator><name pos:start="161:33" pos:end="161:34">er</name></expr></argument>,         <argument pos:start="161:45" pos:end="161:45"><expr pos:start="161:45" pos:end="161:45"><literal type="number" pos:start="161:45" pos:end="161:45">0</literal></expr></argument>, <argument pos:start="161:48" pos:end="161:73"><expr pos:start="161:48" pos:end="161:73"><sizeof pos:start="161:48" pos:end="161:73">sizeof<argument_list pos:start="161:54" pos:end="161:73">(<argument pos:start="161:55" pos:end="161:72"><expr pos:start="161:55" pos:end="161:72"><name pos:start="161:55" pos:end="161:69"><name pos:start="161:55" pos:end="161:55">h</name><operator pos:start="161:56" pos:end="161:57">-&gt;</operator><name pos:start="161:58" pos:end="161:66">slice_ctx</name><index pos:start="161:67" pos:end="161:69">[<expr pos:start="161:68" pos:end="161:68"><literal type="number" pos:start="161:68" pos:end="161:68">0</literal></expr>]</index></name><operator pos:start="161:70" pos:end="161:70">.</operator><name pos:start="161:71" pos:end="161:72">er</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:75"><expr pos:start="163:9" pos:end="163:74"><call pos:start="163:9" pos:end="163:74"><name pos:start="163:9" pos:end="163:14">memset</name><argument_list pos:start="163:15" pos:end="163:74">(<argument pos:start="163:16" pos:end="163:34"><expr pos:start="163:16" pos:end="163:34"><operator pos:start="163:16" pos:end="163:16">&amp;</operator><name pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:17">h</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:28">slice_ctx</name><index pos:start="163:29" pos:end="163:31">[<expr pos:start="163:30" pos:end="163:30"><literal type="number" pos:start="163:30" pos:end="163:30">0</literal></expr>]</index></name><operator pos:start="163:32" pos:end="163:32">.</operator><name pos:start="163:33" pos:end="163:34">mb</name></expr></argument>,         <argument pos:start="163:45" pos:end="163:45"><expr pos:start="163:45" pos:end="163:45"><literal type="number" pos:start="163:45" pos:end="163:45">0</literal></expr></argument>, <argument pos:start="163:48" pos:end="163:73"><expr pos:start="163:48" pos:end="163:73"><sizeof pos:start="163:48" pos:end="163:73">sizeof<argument_list pos:start="163:54" pos:end="163:73">(<argument pos:start="163:55" pos:end="163:72"><expr pos:start="163:55" pos:end="163:72"><name pos:start="163:55" pos:end="163:69"><name pos:start="163:55" pos:end="163:55">h</name><operator pos:start="163:56" pos:end="163:57">-&gt;</operator><name pos:start="163:58" pos:end="163:66">slice_ctx</name><index pos:start="163:67" pos:end="163:69">[<expr pos:start="163:68" pos:end="163:68"><literal type="number" pos:start="163:68" pos:end="163:68">0</literal></expr>]</index></name><operator pos:start="163:70" pos:end="163:70">.</operator><name pos:start="163:71" pos:end="163:72">mb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:83"><expr pos:start="165:9" pos:end="165:82"><call pos:start="165:9" pos:end="165:82"><name pos:start="165:9" pos:end="165:14">memset</name><argument_list pos:start="165:15" pos:end="165:82">(<argument pos:start="165:16" pos:end="165:42"><expr pos:start="165:16" pos:end="165:42"><operator pos:start="165:16" pos:end="165:16">&amp;</operator><name pos:start="165:17" pos:end="165:31"><name pos:start="165:17" pos:end="165:17">h</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:28">slice_ctx</name><index pos:start="165:29" pos:end="165:31">[<expr pos:start="165:30" pos:end="165:30"><literal type="number" pos:start="165:30" pos:end="165:30">0</literal></expr>]</index></name><operator pos:start="165:32" pos:end="165:32">.</operator><name pos:start="165:33" pos:end="165:42">mb_luma_dc</name></expr></argument>, <argument pos:start="165:45" pos:end="165:45"><expr pos:start="165:45" pos:end="165:45"><literal type="number" pos:start="165:45" pos:end="165:45">0</literal></expr></argument>, <argument pos:start="165:48" pos:end="165:81"><expr pos:start="165:48" pos:end="165:81"><sizeof pos:start="165:48" pos:end="165:81">sizeof<argument_list pos:start="165:54" pos:end="165:81">(<argument pos:start="165:55" pos:end="165:80"><expr pos:start="165:55" pos:end="165:80"><name pos:start="165:55" pos:end="165:69"><name pos:start="165:55" pos:end="165:55">h</name><operator pos:start="165:56" pos:end="165:57">-&gt;</operator><name pos:start="165:58" pos:end="165:66">slice_ctx</name><index pos:start="165:67" pos:end="165:69">[<expr pos:start="165:68" pos:end="165:68"><literal type="number" pos:start="165:68" pos:end="165:68">0</literal></expr>]</index></name><operator pos:start="165:70" pos:end="165:70">.</operator><name pos:start="165:71" pos:end="165:80">mb_luma_dc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:83"><expr pos:start="167:9" pos:end="167:82"><call pos:start="167:9" pos:end="167:82"><name pos:start="167:9" pos:end="167:14">memset</name><argument_list pos:start="167:15" pos:end="167:82">(<argument pos:start="167:16" pos:end="167:42"><expr pos:start="167:16" pos:end="167:42"><operator pos:start="167:16" pos:end="167:16">&amp;</operator><name pos:start="167:17" pos:end="167:31"><name pos:start="167:17" pos:end="167:17">h</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:28">slice_ctx</name><index pos:start="167:29" pos:end="167:31">[<expr pos:start="167:30" pos:end="167:30"><literal type="number" pos:start="167:30" pos:end="167:30">0</literal></expr>]</index></name><operator pos:start="167:32" pos:end="167:32">.</operator><name pos:start="167:33" pos:end="167:42">mb_padding</name></expr></argument>, <argument pos:start="167:45" pos:end="167:45"><expr pos:start="167:45" pos:end="167:45"><literal type="number" pos:start="167:45" pos:end="167:45">0</literal></expr></argument>, <argument pos:start="167:48" pos:end="167:81"><expr pos:start="167:48" pos:end="167:81"><sizeof pos:start="167:48" pos:end="167:81">sizeof<argument_list pos:start="167:54" pos:end="167:81">(<argument pos:start="167:55" pos:end="167:80"><expr pos:start="167:55" pos:end="167:80"><name pos:start="167:55" pos:end="167:69"><name pos:start="167:55" pos:end="167:55">h</name><operator pos:start="167:56" pos:end="167:57">-&gt;</operator><name pos:start="167:58" pos:end="167:66">slice_ctx</name><index pos:start="167:67" pos:end="167:69">[<expr pos:start="167:68" pos:end="167:68"><literal type="number" pos:start="167:68" pos:end="167:68">0</literal></expr>]</index></name><operator pos:start="167:70" pos:end="167:70">.</operator><name pos:start="167:71" pos:end="167:80">mb_padding</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:35"><expr pos:start="171:9" pos:end="171:34"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:9">h</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:16">avctx</name></name>             <operator pos:start="171:30" pos:end="171:30">=</operator> <name pos:start="171:32" pos:end="171:34">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:36"><expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:14"><name pos:start="173:9" pos:end="173:9">h</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:14">DPB</name></name>               <operator pos:start="173:30" pos:end="173:30">=</operator> <name pos:start="173:32" pos:end="173:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:36"><expr pos:start="175:9" pos:end="175:35"><name pos:start="175:9" pos:end="175:28"><name pos:start="175:9" pos:end="175:9">h</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:28">qscale_table_pool</name></name> <operator pos:start="175:30" pos:end="175:30">=</operator> <name pos:start="175:32" pos:end="175:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:36"><expr pos:start="177:9" pos:end="177:35"><name pos:start="177:9" pos:end="177:23"><name pos:start="177:9" pos:end="177:9">h</name><operator pos:start="177:10" pos:end="177:11">-&gt;</operator><name pos:start="177:12" pos:end="177:23">mb_type_pool</name></name>      <operator pos:start="177:30" pos:end="177:30">=</operator> <name pos:start="177:32" pos:end="177:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:36"><expr pos:start="179:9" pos:end="179:35"><name pos:start="179:9" pos:end="179:25"><name pos:start="179:9" pos:end="179:9">h</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:25">ref_index_pool</name></name>    <operator pos:start="179:30" pos:end="179:30">=</operator> <name pos:start="179:32" pos:end="179:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:36"><expr pos:start="181:9" pos:end="181:35"><name pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:9">h</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:26">motion_val_pool</name></name>   <operator pos:start="181:30" pos:end="181:30">=</operator> <name pos:start="181:32" pos:end="181:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:36"><expr pos:start="183:9" pos:end="183:35"><name pos:start="183:9" pos:end="183:29"><name pos:start="183:9" pos:end="183:9">h</name><operator pos:start="183:10" pos:end="183:11">-&gt;</operator><name pos:start="183:12" pos:end="183:29">intra4x4_pred_mode</name></name><operator pos:start="183:30" pos:end="183:30">=</operator> <name pos:start="183:32" pos:end="183:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:36"><expr pos:start="185:9" pos:end="185:35"><name pos:start="185:9" pos:end="185:25"><name pos:start="185:9" pos:end="185:9">h</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:25">non_zero_count</name></name>    <operator pos:start="185:30" pos:end="185:30">=</operator> <name pos:start="185:32" pos:end="185:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:36"><expr pos:start="187:9" pos:end="187:35"><name pos:start="187:9" pos:end="187:27"><name pos:start="187:9" pos:end="187:9">h</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:27">slice_table_base</name></name>  <operator pos:start="187:30" pos:end="187:30">=</operator> <name pos:start="187:32" pos:end="187:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:9">h</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:22">slice_table</name></name>       <operator pos:start="189:30" pos:end="189:30">=</operator> <name pos:start="189:32" pos:end="189:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:36"><expr pos:start="191:9" pos:end="191:35"><name pos:start="191:9" pos:end="191:20"><name pos:start="191:9" pos:end="191:9">h</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:20">cbp_table</name></name>         <operator pos:start="191:30" pos:end="191:30">=</operator> <name pos:start="191:32" pos:end="191:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:41"><expr pos:start="193:9" pos:end="193:40"><name pos:start="193:9" pos:end="193:33"><name pos:start="193:9" pos:end="193:9">h</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:33">chroma_pred_mode_table</name></name> <operator pos:start="193:35" pos:end="193:35">=</operator> <name pos:start="193:37" pos:end="193:40">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:54"><expr pos:start="195:9" pos:end="195:53"><call pos:start="195:9" pos:end="195:53"><name pos:start="195:9" pos:end="195:14">memset</name><argument_list pos:start="195:15" pos:end="195:53">(<argument pos:start="195:16" pos:end="195:27"><expr pos:start="195:16" pos:end="195:27"><name pos:start="195:16" pos:end="195:27"><name pos:start="195:16" pos:end="195:16">h</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:27">mvd_table</name></name></expr></argument>, <argument pos:start="195:30" pos:end="195:30"><expr pos:start="195:30" pos:end="195:30"><literal type="number" pos:start="195:30" pos:end="195:30">0</literal></expr></argument>, <argument pos:start="195:33" pos:end="195:52"><expr pos:start="195:33" pos:end="195:52"><sizeof pos:start="195:33" pos:end="195:52">sizeof<argument_list pos:start="195:39" pos:end="195:52">(<argument pos:start="195:40" pos:end="195:51"><expr pos:start="195:40" pos:end="195:51"><name pos:start="195:40" pos:end="195:51"><name pos:start="195:40" pos:end="195:40">h</name><operator pos:start="195:41" pos:end="195:42">-&gt;</operator><name pos:start="195:43" pos:end="195:51">mvd_table</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:36"><expr pos:start="197:9" pos:end="197:35"><name pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:9">h</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:23">direct_table</name></name>      <operator pos:start="197:30" pos:end="197:30">=</operator> <name pos:start="197:32" pos:end="197:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:36"><expr pos:start="199:9" pos:end="199:35"><name pos:start="199:9" pos:end="199:22"><name pos:start="199:9" pos:end="199:9">h</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:22">list_counts</name></name>       <operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:36"><expr pos:start="201:9" pos:end="201:35"><name pos:start="201:9" pos:end="201:18"><name pos:start="201:9" pos:end="201:9">h</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:18">mb2b_xy</name></name>           <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:35">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:36"><expr pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:19"><name pos:start="203:9" pos:end="203:9">h</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:19">mb2br_xy</name></name>          <operator pos:start="203:30" pos:end="203:30">=</operator> <name pos:start="203:32" pos:end="203:35">NULL</name></expr>;</expr_stmt>



        <if_stmt pos:start="207:9" pos:end="241:9"><if pos:start="207:9" pos:end="241:9">if <condition pos:start="207:12" pos:end="207:36">(<expr pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:35"><name pos:start="207:13" pos:end="207:14">h1</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:35">context_initialized</name></name></expr>)</condition> <block pos:start="207:38" pos:end="241:9">{<block_content pos:start="209:9" pos:end="239:9">

        <expr_stmt pos:start="209:9" pos:end="209:35"><expr pos:start="209:9" pos:end="209:34"><name pos:start="209:9" pos:end="209:30"><name pos:start="209:9" pos:end="209:9">h</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:30">context_initialized</name></name> <operator pos:start="209:32" pos:end="209:32">=</operator> <literal type="number" pos:start="209:34" pos:end="209:34">0</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="213:9" pos:end="213:51"><expr pos:start="213:9" pos:end="213:50"><call pos:start="213:9" pos:end="213:50"><name pos:start="213:9" pos:end="213:14">memset</name><argument_list pos:start="213:15" pos:end="213:50">(<argument pos:start="213:16" pos:end="213:26"><expr pos:start="213:16" pos:end="213:26"><operator pos:start="213:16" pos:end="213:16">&amp;</operator><name pos:start="213:17" pos:end="213:26"><name pos:start="213:17" pos:end="213:17">h</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:26">cur_pic</name></name></expr></argument>, <argument pos:start="213:29" pos:end="213:29"><expr pos:start="213:29" pos:end="213:29"><literal type="number" pos:start="213:29" pos:end="213:29">0</literal></expr></argument>, <argument pos:start="213:32" pos:end="213:49"><expr pos:start="213:32" pos:end="213:49"><sizeof pos:start="213:32" pos:end="213:49">sizeof<argument_list pos:start="213:38" pos:end="213:49">(<argument pos:start="213:39" pos:end="213:48"><expr pos:start="213:39" pos:end="213:48"><name pos:start="213:39" pos:end="213:48"><name pos:start="213:39" pos:end="213:39">h</name><operator pos:start="213:40" pos:end="213:41">-&gt;</operator><name pos:start="213:42" pos:end="213:48">cur_pic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:38"><expr pos:start="215:9" pos:end="215:37"><call pos:start="215:9" pos:end="215:37"><name pos:start="215:9" pos:end="215:22">av_frame_unref</name><argument_list pos:start="215:23" pos:end="215:37">(<argument pos:start="215:24" pos:end="215:36"><expr pos:start="215:24" pos:end="215:36"><operator pos:start="215:24" pos:end="215:24">&amp;</operator><name pos:start="215:25" pos:end="215:36"><name pos:start="215:25" pos:end="215:25">h</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:34">cur_pic</name><operator pos:start="215:35" pos:end="215:35">.</operator><name pos:start="215:36" pos:end="215:36">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:40"><expr pos:start="217:9" pos:end="217:39"><name pos:start="217:9" pos:end="217:23"><name pos:start="217:9" pos:end="217:9">h</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:18">cur_pic</name><operator pos:start="217:19" pos:end="217:19">.</operator><name pos:start="217:20" pos:end="217:21">tf</name><operator pos:start="217:22" pos:end="217:22">.</operator><name pos:start="217:23" pos:end="217:23">f</name></name> <operator pos:start="217:25" pos:end="217:25">=</operator> <operator pos:start="217:27" pos:end="217:27">&amp;</operator><name pos:start="217:28" pos:end="217:39"><name pos:start="217:28" pos:end="217:28">h</name><operator pos:start="217:29" pos:end="217:30">-&gt;</operator><name pos:start="217:31" pos:end="217:37">cur_pic</name><operator pos:start="217:38" pos:end="217:38">.</operator><name pos:start="217:39" pos:end="217:39">f</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:38"><expr pos:start="221:9" pos:end="221:37"><name pos:start="221:9" pos:end="221:11">ret</name> <operator pos:start="221:13" pos:end="221:13">=</operator> <call pos:start="221:15" pos:end="221:37"><name pos:start="221:15" pos:end="221:34">ff_h264_alloc_tables</name><argument_list pos:start="221:35" pos:end="221:37">(<argument pos:start="221:36" pos:end="221:36"><expr pos:start="221:36" pos:end="221:36"><name pos:start="221:36" pos:end="221:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="223:9" pos:end="229:9"><if pos:start="223:9" pos:end="229:9">if <condition pos:start="223:12" pos:end="223:20">(<expr pos:start="223:13" pos:end="223:19"><name pos:start="223:13" pos:end="223:15">ret</name> <operator pos:start="223:17" pos:end="223:17">&lt;</operator> <literal type="number" pos:start="223:19" pos:end="223:19">0</literal></expr>)</condition> <block pos:start="223:22" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:23">

            <expr_stmt pos:start="225:13" pos:end="225:69"><expr pos:start="225:13" pos:end="225:68"><call pos:start="225:13" pos:end="225:68"><name pos:start="225:13" pos:end="225:18">av_log</name><argument_list pos:start="225:19" pos:end="225:68">(<argument pos:start="225:20" pos:end="225:22"><expr pos:start="225:20" pos:end="225:22"><name pos:start="225:20" pos:end="225:22">dst</name></expr></argument>, <argument pos:start="225:25" pos:end="225:36"><expr pos:start="225:25" pos:end="225:36"><name pos:start="225:25" pos:end="225:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="225:39" pos:end="225:67"><expr pos:start="225:39" pos:end="225:67"><literal type="string" pos:start="225:39" pos:end="225:67">"Could not allocate memory\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="227:13" pos:end="227:23">return <expr pos:start="227:20" pos:end="227:22"><name pos:start="227:20" pos:end="227:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:62"><expr pos:start="231:9" pos:end="231:61"><name pos:start="231:9" pos:end="231:11">ret</name> <operator pos:start="231:13" pos:end="231:13">=</operator> <call pos:start="231:15" pos:end="231:61"><name pos:start="231:15" pos:end="231:40">ff_h264_slice_context_init</name><argument_list pos:start="231:41" pos:end="231:61">(<argument pos:start="231:42" pos:end="231:42"><expr pos:start="231:42" pos:end="231:42"><name pos:start="231:42" pos:end="231:42">h</name></expr></argument>, <argument pos:start="231:45" pos:end="231:60"><expr pos:start="231:45" pos:end="231:60"><operator pos:start="231:45" pos:end="231:45">&amp;</operator><name pos:start="231:46" pos:end="231:60"><name pos:start="231:46" pos:end="231:46">h</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:57">slice_ctx</name><index pos:start="231:58" pos:end="231:60">[<expr pos:start="231:59" pos:end="231:59"><literal type="number" pos:start="231:59" pos:end="231:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="239:9"><if pos:start="233:9" pos:end="239:9">if <condition pos:start="233:12" pos:end="233:20">(<expr pos:start="233:13" pos:end="233:19"><name pos:start="233:13" pos:end="233:15">ret</name> <operator pos:start="233:17" pos:end="233:17">&lt;</operator> <literal type="number" pos:start="233:19" pos:end="233:19">0</literal></expr>)</condition> <block pos:start="233:22" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:23">

            <expr_stmt pos:start="235:13" pos:end="235:66"><expr pos:start="235:13" pos:end="235:65"><call pos:start="235:13" pos:end="235:65"><name pos:start="235:13" pos:end="235:18">av_log</name><argument_list pos:start="235:19" pos:end="235:65">(<argument pos:start="235:20" pos:end="235:22"><expr pos:start="235:20" pos:end="235:22"><name pos:start="235:20" pos:end="235:22">dst</name></expr></argument>, <argument pos:start="235:25" pos:end="235:36"><expr pos:start="235:25" pos:end="235:36"><name pos:start="235:25" pos:end="235:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:39" pos:end="235:64"><expr pos:start="235:39" pos:end="235:64"><literal type="string" pos:start="235:39" pos:end="235:64">"context_init() failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="237:13" pos:end="237:23">return <expr pos:start="237:20" pos:end="237:22"><name pos:start="237:20" pos:end="237:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:57"><expr pos:start="245:9" pos:end="245:56"><name pos:start="245:9" pos:end="245:30"><name pos:start="245:9" pos:end="245:9">h</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:30">context_initialized</name></name> <operator pos:start="245:32" pos:end="245:32">=</operator> <name pos:start="245:34" pos:end="245:56"><name pos:start="245:34" pos:end="245:35">h1</name><operator pos:start="245:36" pos:end="245:37">-&gt;</operator><name pos:start="245:38" pos:end="245:56">context_initialized</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:54"><expr pos:start="251:5" pos:end="251:53"><name pos:start="251:5" pos:end="251:26"><name pos:start="251:5" pos:end="251:5">h</name><operator pos:start="251:6" pos:end="251:7">-&gt;</operator><name pos:start="251:8" pos:end="251:12">avctx</name><operator pos:start="251:13" pos:end="251:14">-&gt;</operator><name pos:start="251:15" pos:end="251:26">coded_height</name></name>  <operator pos:start="251:29" pos:end="251:29">=</operator> <name pos:start="251:31" pos:end="251:53"><name pos:start="251:31" pos:end="251:32">h1</name><operator pos:start="251:33" pos:end="251:34">-&gt;</operator><name pos:start="251:35" pos:end="251:39">avctx</name><operator pos:start="251:40" pos:end="251:41">-&gt;</operator><name pos:start="251:42" pos:end="251:53">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:53"><expr pos:start="253:5" pos:end="253:52"><name pos:start="253:5" pos:end="253:25"><name pos:start="253:5" pos:end="253:5">h</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:12">avctx</name><operator pos:start="253:13" pos:end="253:14">-&gt;</operator><name pos:start="253:15" pos:end="253:25">coded_width</name></name>   <operator pos:start="253:29" pos:end="253:29">=</operator> <name pos:start="253:31" pos:end="253:52"><name pos:start="253:31" pos:end="253:32">h1</name><operator pos:start="253:33" pos:end="253:34">-&gt;</operator><name pos:start="253:35" pos:end="253:39">avctx</name><operator pos:start="253:40" pos:end="253:41">-&gt;</operator><name pos:start="253:42" pos:end="253:52">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:47"><expr pos:start="255:5" pos:end="255:46"><name pos:start="255:5" pos:end="255:19"><name pos:start="255:5" pos:end="255:5">h</name><operator pos:start="255:6" pos:end="255:7">-&gt;</operator><name pos:start="255:8" pos:end="255:12">avctx</name><operator pos:start="255:13" pos:end="255:14">-&gt;</operator><name pos:start="255:15" pos:end="255:19">width</name></name>         <operator pos:start="255:29" pos:end="255:29">=</operator> <name pos:start="255:31" pos:end="255:46"><name pos:start="255:31" pos:end="255:32">h1</name><operator pos:start="255:33" pos:end="255:34">-&gt;</operator><name pos:start="255:35" pos:end="255:39">avctx</name><operator pos:start="255:40" pos:end="255:41">-&gt;</operator><name pos:start="255:42" pos:end="255:46">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:48"><expr pos:start="257:5" pos:end="257:47"><name pos:start="257:5" pos:end="257:20"><name pos:start="257:5" pos:end="257:5">h</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:12">avctx</name><operator pos:start="257:13" pos:end="257:14">-&gt;</operator><name pos:start="257:15" pos:end="257:20">height</name></name>        <operator pos:start="257:29" pos:end="257:29">=</operator> <name pos:start="257:31" pos:end="257:47"><name pos:start="257:31" pos:end="257:32">h1</name><operator pos:start="257:33" pos:end="257:34">-&gt;</operator><name pos:start="257:35" pos:end="257:39">avctx</name><operator pos:start="257:40" pos:end="257:41">-&gt;</operator><name pos:start="257:42" pos:end="257:47">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:55"><expr pos:start="259:5" pos:end="259:54"><name pos:start="259:5" pos:end="259:27"><name pos:start="259:5" pos:end="259:5">h</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:27">coded_picture_number</name></name> <operator pos:start="259:29" pos:end="259:29">=</operator> <name pos:start="259:31" pos:end="259:54"><name pos:start="259:31" pos:end="259:32">h1</name><operator pos:start="259:33" pos:end="259:34">-&gt;</operator><name pos:start="259:35" pos:end="259:54">coded_picture_number</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:46"><expr pos:start="261:5" pos:end="261:45"><name pos:start="261:5" pos:end="261:18"><name pos:start="261:5" pos:end="261:5">h</name><operator pos:start="261:6" pos:end="261:7">-&gt;</operator><name pos:start="261:8" pos:end="261:18">first_field</name></name>          <operator pos:start="261:29" pos:end="261:29">=</operator> <name pos:start="261:31" pos:end="261:45"><name pos:start="261:31" pos:end="261:32">h1</name><operator pos:start="261:33" pos:end="261:34">-&gt;</operator><name pos:start="261:35" pos:end="261:45">first_field</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:52"><expr pos:start="263:5" pos:end="263:51"><name pos:start="263:5" pos:end="263:24"><name pos:start="263:5" pos:end="263:5">h</name><operator pos:start="263:6" pos:end="263:7">-&gt;</operator><name pos:start="263:8" pos:end="263:24">picture_structure</name></name>    <operator pos:start="263:29" pos:end="263:29">=</operator> <name pos:start="263:31" pos:end="263:51"><name pos:start="263:31" pos:end="263:32">h1</name><operator pos:start="263:33" pos:end="263:34">-&gt;</operator><name pos:start="263:35" pos:end="263:51">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:44"><expr pos:start="265:5" pos:end="265:43"><name pos:start="265:5" pos:end="265:16"><name pos:start="265:5" pos:end="265:5">h</name><operator pos:start="265:6" pos:end="265:7">-&gt;</operator><name pos:start="265:8" pos:end="265:16">droppable</name></name>            <operator pos:start="265:29" pos:end="265:29">=</operator> <name pos:start="265:31" pos:end="265:43"><name pos:start="265:31" pos:end="265:32">h1</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:43">droppable</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="267:5" pos:end="267:44"><expr pos:start="267:5" pos:end="267:43"><name pos:start="267:5" pos:end="267:16"><name pos:start="267:5" pos:end="267:5">h</name><operator pos:start="267:6" pos:end="267:7">-&gt;</operator><name pos:start="267:8" pos:end="267:16">low_delay</name></name>            <operator pos:start="267:29" pos:end="267:29">=</operator> <name pos:start="267:31" pos:end="267:43"><name pos:start="267:31" pos:end="267:32">h1</name><operator pos:start="267:33" pos:end="267:34">-&gt;</operator><name pos:start="267:35" pos:end="267:43">low_delay</name></name></expr>;</expr_stmt>



    <for pos:start="271:5" pos:end="281:5">for <control pos:start="271:9" pos:end="271:58">(<init pos:start="271:10" pos:end="271:15"><expr pos:start="271:10" pos:end="271:14"><name pos:start="271:10" pos:end="271:10">i</name> <operator pos:start="271:12" pos:end="271:12">=</operator> <literal type="number" pos:start="271:14" pos:end="271:14">0</literal></expr>;</init> <condition pos:start="271:17" pos:end="271:53"><expr pos:start="271:17" pos:end="271:52"><name pos:start="271:17" pos:end="271:22"><name pos:start="271:17" pos:end="271:17">h</name><operator pos:start="271:18" pos:end="271:19">-&gt;</operator><name pos:start="271:20" pos:end="271:22">DPB</name></name> <operator pos:start="271:24" pos:end="271:25">&amp;&amp;</operator> <name pos:start="271:27" pos:end="271:27">i</name> <operator pos:start="271:29" pos:end="271:29">&lt;</operator> <name pos:start="271:31" pos:end="271:52">H264_MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="271:55" pos:end="271:57"><expr pos:start="271:55" pos:end="271:57"><name pos:start="271:55" pos:end="271:55">i</name><operator pos:start="271:56" pos:end="271:57">++</operator></expr></incr>)</control> <block pos:start="271:60" pos:end="281:5">{<block_content pos:start="273:9" pos:end="279:23">

        <expr_stmt pos:start="273:9" pos:end="273:45"><expr pos:start="273:9" pos:end="273:44"><call pos:start="273:9" pos:end="273:44"><name pos:start="273:9" pos:end="273:29">ff_h264_unref_picture</name><argument_list pos:start="273:30" pos:end="273:44">(<argument pos:start="273:31" pos:end="273:31"><expr pos:start="273:31" pos:end="273:31"><name pos:start="273:31" pos:end="273:31">h</name></expr></argument>, <argument pos:start="273:34" pos:end="273:43"><expr pos:start="273:34" pos:end="273:43"><operator pos:start="273:34" pos:end="273:34">&amp;</operator><name pos:start="273:35" pos:end="273:43"><name pos:start="273:35" pos:end="273:35">h</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:40">DPB</name><index pos:start="273:41" pos:end="273:43">[<expr pos:start="273:42" pos:end="273:42"><name pos:start="273:42" pos:end="273:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="275:9" pos:end="279:23"><if pos:start="275:9" pos:end="279:23">if <condition pos:start="275:12" pos:end="277:72">(<expr pos:start="275:13" pos:end="277:71"><name pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:14">h1</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:19">DPB</name></name> <operator pos:start="275:21" pos:end="275:22">&amp;&amp;</operator> <name pos:start="275:24" pos:end="275:33"><name pos:start="275:24" pos:end="275:25">h1</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:30">DPB</name><index pos:start="275:31" pos:end="275:33">[<expr pos:start="275:32" pos:end="275:32"><name pos:start="275:32" pos:end="275:32">i</name></expr>]</index></name><operator pos:start="275:34" pos:end="275:34">.</operator><name pos:start="275:35" pos:end="275:42"><name pos:start="275:35" pos:end="275:35">f</name><operator pos:start="275:36" pos:end="275:36">.</operator><name pos:start="275:37" pos:end="275:39">buf</name><index pos:start="275:40" pos:end="275:42">[<expr pos:start="275:41" pos:end="275:41"><literal type="number" pos:start="275:41" pos:end="275:41">0</literal></expr>]</index></name> <operator pos:start="275:44" pos:end="275:45">&amp;&amp;</operator>

            <operator pos:start="277:13" pos:end="277:13">(</operator><name pos:start="277:14" pos:end="277:16">ret</name> <operator pos:start="277:18" pos:end="277:18">=</operator> <call pos:start="277:20" pos:end="277:66"><name pos:start="277:20" pos:end="277:38">ff_h264_ref_picture</name><argument_list pos:start="277:39" pos:end="277:66">(<argument pos:start="277:40" pos:end="277:40"><expr pos:start="277:40" pos:end="277:40"><name pos:start="277:40" pos:end="277:40">h</name></expr></argument>, <argument pos:start="277:43" pos:end="277:52"><expr pos:start="277:43" pos:end="277:52"><operator pos:start="277:43" pos:end="277:43">&amp;</operator><name pos:start="277:44" pos:end="277:52"><name pos:start="277:44" pos:end="277:44">h</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:49">DPB</name><index pos:start="277:50" pos:end="277:52">[<expr pos:start="277:51" pos:end="277:51"><name pos:start="277:51" pos:end="277:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="277:55" pos:end="277:65"><expr pos:start="277:55" pos:end="277:65"><operator pos:start="277:55" pos:end="277:55">&amp;</operator><name pos:start="277:56" pos:end="277:65"><name pos:start="277:56" pos:end="277:57">h1</name><operator pos:start="277:58" pos:end="277:59">-&gt;</operator><name pos:start="277:60" pos:end="277:62">DPB</name><index pos:start="277:63" pos:end="277:65">[<expr pos:start="277:64" pos:end="277:64"><name pos:start="277:64" pos:end="277:64">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="277:67" pos:end="277:67">)</operator> <operator pos:start="277:69" pos:end="277:69">&lt;</operator> <literal type="number" pos:start="277:71" pos:end="277:71">0</literal></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:23"><block_content pos:start="279:13" pos:end="279:23">

            <return pos:start="279:13" pos:end="279:23">return <expr pos:start="279:20" pos:end="279:22"><name pos:start="279:20" pos:end="279:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="285:5" pos:end="285:60"><expr pos:start="285:5" pos:end="285:59"><name pos:start="285:5" pos:end="285:18"><name pos:start="285:5" pos:end="285:5">h</name><operator pos:start="285:6" pos:end="285:7">-&gt;</operator><name pos:start="285:8" pos:end="285:18">cur_pic_ptr</name></name> <operator pos:start="285:20" pos:end="285:20">=</operator> <call pos:start="285:22" pos:end="285:59"><name pos:start="285:22" pos:end="285:35">REBASE_PICTURE</name><argument_list pos:start="285:36" pos:end="285:59">(<argument pos:start="285:37" pos:end="285:51"><expr pos:start="285:37" pos:end="285:51"><name pos:start="285:37" pos:end="285:51"><name pos:start="285:37" pos:end="285:38">h1</name><operator pos:start="285:39" pos:end="285:40">-&gt;</operator><name pos:start="285:41" pos:end="285:51">cur_pic_ptr</name></name></expr></argument>, <argument pos:start="285:54" pos:end="285:54"><expr pos:start="285:54" pos:end="285:54"><name pos:start="285:54" pos:end="285:54">h</name></expr></argument>, <argument pos:start="285:57" pos:end="285:58"><expr pos:start="285:57" pos:end="285:58"><name pos:start="285:57" pos:end="285:58">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:42"><expr pos:start="287:5" pos:end="287:41"><call pos:start="287:5" pos:end="287:41"><name pos:start="287:5" pos:end="287:25">ff_h264_unref_picture</name><argument_list pos:start="287:26" pos:end="287:41">(<argument pos:start="287:27" pos:end="287:27"><expr pos:start="287:27" pos:end="287:27"><name pos:start="287:27" pos:end="287:27">h</name></expr></argument>, <argument pos:start="287:30" pos:end="287:40"><expr pos:start="287:30" pos:end="287:40"><operator pos:start="287:30" pos:end="287:30">&amp;</operator><name pos:start="287:31" pos:end="287:40"><name pos:start="287:31" pos:end="287:31">h</name><operator pos:start="287:32" pos:end="287:33">-&gt;</operator><name pos:start="287:34" pos:end="287:40">cur_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="289:5" pos:end="297:5"><if pos:start="289:5" pos:end="297:5">if <condition pos:start="289:8" pos:end="289:29">(<expr pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:28"><name pos:start="289:9" pos:end="289:10">h1</name><operator pos:start="289:11" pos:end="289:12">-&gt;</operator><name pos:start="289:13" pos:end="289:19">cur_pic</name><operator pos:start="289:20" pos:end="289:20">.</operator><name pos:start="289:21" pos:end="289:21">f</name><operator pos:start="289:22" pos:end="289:22">.</operator><name pos:start="289:23" pos:end="289:25">buf</name><index pos:start="289:26" pos:end="289:28">[<expr pos:start="289:27" pos:end="289:27"><literal type="number" pos:start="289:27" pos:end="289:27">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="289:31" pos:end="297:5">{<block_content pos:start="291:9" pos:end="295:23">

        <expr_stmt pos:start="291:9" pos:end="291:64"><expr pos:start="291:9" pos:end="291:63"><name pos:start="291:9" pos:end="291:11">ret</name> <operator pos:start="291:13" pos:end="291:13">=</operator> <call pos:start="291:15" pos:end="291:63"><name pos:start="291:15" pos:end="291:33">ff_h264_ref_picture</name><argument_list pos:start="291:34" pos:end="291:63">(<argument pos:start="291:35" pos:end="291:35"><expr pos:start="291:35" pos:end="291:35"><name pos:start="291:35" pos:end="291:35">h</name></expr></argument>, <argument pos:start="291:38" pos:end="291:48"><expr pos:start="291:38" pos:end="291:48"><operator pos:start="291:38" pos:end="291:38">&amp;</operator><name pos:start="291:39" pos:end="291:48"><name pos:start="291:39" pos:end="291:39">h</name><operator pos:start="291:40" pos:end="291:41">-&gt;</operator><name pos:start="291:42" pos:end="291:48">cur_pic</name></name></expr></argument>, <argument pos:start="291:51" pos:end="291:62"><expr pos:start="291:51" pos:end="291:62"><operator pos:start="291:51" pos:end="291:51">&amp;</operator><name pos:start="291:52" pos:end="291:62"><name pos:start="291:52" pos:end="291:53">h1</name><operator pos:start="291:54" pos:end="291:55">-&gt;</operator><name pos:start="291:56" pos:end="291:62">cur_pic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="295:23"><if pos:start="293:9" pos:end="295:23">if <condition pos:start="293:12" pos:end="293:20">(<expr pos:start="293:13" pos:end="293:19"><name pos:start="293:13" pos:end="293:15">ret</name> <operator pos:start="293:17" pos:end="293:17">&lt;</operator> <literal type="number" pos:start="293:19" pos:end="293:19">0</literal></expr>)</condition><block type="pseudo" pos:start="295:13" pos:end="295:23"><block_content pos:start="295:13" pos:end="295:23">

            <return pos:start="295:13" pos:end="295:23">return <expr pos:start="295:20" pos:end="295:22"><name pos:start="295:20" pos:end="295:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="301:5" pos:end="301:45"><expr pos:start="301:5" pos:end="301:44"><name pos:start="301:5" pos:end="301:22"><name pos:start="301:5" pos:end="301:5">h</name><operator pos:start="301:6" pos:end="301:7">-&gt;</operator><name pos:start="301:8" pos:end="301:22">workaround_bugs</name></name> <operator pos:start="301:24" pos:end="301:24">=</operator> <name pos:start="301:26" pos:end="301:44"><name pos:start="301:26" pos:end="301:27">h1</name><operator pos:start="301:28" pos:end="301:29">-&gt;</operator><name pos:start="301:30" pos:end="301:44">workaround_bugs</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:39"><expr pos:start="303:5" pos:end="303:38"><name pos:start="303:5" pos:end="303:16"><name pos:start="303:5" pos:end="303:5">h</name><operator pos:start="303:6" pos:end="303:7">-&gt;</operator><name pos:start="303:8" pos:end="303:16">low_delay</name></name>       <operator pos:start="303:24" pos:end="303:24">=</operator> <name pos:start="303:26" pos:end="303:38"><name pos:start="303:26" pos:end="303:27">h1</name><operator pos:start="303:28" pos:end="303:29">-&gt;</operator><name pos:start="303:30" pos:end="303:38">low_delay</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:39"><expr pos:start="305:5" pos:end="305:38"><name pos:start="305:5" pos:end="305:16"><name pos:start="305:5" pos:end="305:5">h</name><operator pos:start="305:6" pos:end="305:7">-&gt;</operator><name pos:start="305:8" pos:end="305:16">droppable</name></name>       <operator pos:start="305:24" pos:end="305:24">=</operator> <name pos:start="305:26" pos:end="305:38"><name pos:start="305:26" pos:end="305:27">h1</name><operator pos:start="305:28" pos:end="305:29">-&gt;</operator><name pos:start="305:30" pos:end="305:38">droppable</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="309:5" pos:end="309:29">// extradata/NAL handling</comment>

    <expr_stmt pos:start="311:5" pos:end="311:27"><expr pos:start="311:5" pos:end="311:26"><name pos:start="311:5" pos:end="311:13"><name pos:start="311:5" pos:end="311:5">h</name><operator pos:start="311:6" pos:end="311:7">-&gt;</operator><name pos:start="311:8" pos:end="311:13">is_avc</name></name> <operator pos:start="311:15" pos:end="311:15">=</operator> <name pos:start="311:17" pos:end="311:26"><name pos:start="311:17" pos:end="311:18">h1</name><operator pos:start="311:19" pos:end="311:20">-&gt;</operator><name pos:start="311:21" pos:end="311:26">is_avc</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="315:5" pos:end="315:14">// SPS/PPS</comment>

    <if_stmt pos:start="317:5" pos:end="323:19"><if pos:start="317:5" pos:end="323:19">if <condition pos:start="317:8" pos:end="321:67">(<expr pos:start="317:9" pos:end="321:66"><operator pos:start="317:9" pos:end="317:9">(</operator><name pos:start="317:10" pos:end="317:12">ret</name> <operator pos:start="317:14" pos:end="317:14">=</operator> <call pos:start="317:16" pos:end="321:61"><name pos:start="317:16" pos:end="317:33">copy_parameter_set</name><argument_list pos:start="317:34" pos:end="321:61">(<argument pos:start="317:35" pos:end="317:57"><expr pos:start="317:35" pos:end="317:57"><operator pos:start="317:35" pos:end="317:35">(</operator><name pos:start="317:36" pos:end="317:39">void</name> <operator pos:start="317:41" pos:end="317:41">*</operator><operator pos:start="317:42" pos:end="317:42">*</operator><operator pos:start="317:43" pos:end="317:43">)</operator><name pos:start="317:44" pos:end="317:57"><name pos:start="317:44" pos:end="317:44">h</name><operator pos:start="317:45" pos:end="317:46">-&gt;</operator><name pos:start="317:47" pos:end="317:57">sps_buffers</name></name></expr></argument>,

                                  <argument pos:start="319:35" pos:end="319:58"><expr pos:start="319:35" pos:end="319:58"><operator pos:start="319:35" pos:end="319:35">(</operator><name pos:start="319:36" pos:end="319:39">void</name> <operator pos:start="319:41" pos:end="319:41">*</operator><operator pos:start="319:42" pos:end="319:42">*</operator><operator pos:start="319:43" pos:end="319:43">)</operator><name pos:start="319:44" pos:end="319:58"><name pos:start="319:44" pos:end="319:45">h1</name><operator pos:start="319:46" pos:end="319:47">-&gt;</operator><name pos:start="319:48" pos:end="319:58">sps_buffers</name></name></expr></argument>,

                                  <argument pos:start="321:35" pos:end="321:47"><expr pos:start="321:35" pos:end="321:47"><name pos:start="321:35" pos:end="321:47">MAX_SPS_COUNT</name></expr></argument>, <argument pos:start="321:50" pos:end="321:60"><expr pos:start="321:50" pos:end="321:60"><sizeof pos:start="321:50" pos:end="321:60">sizeof<argument_list pos:start="321:56" pos:end="321:60">(<argument pos:start="321:57" pos:end="321:59"><expr pos:start="321:57" pos:end="321:59"><name pos:start="321:57" pos:end="321:59">SPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="321:62" pos:end="321:62">)</operator> <operator pos:start="321:64" pos:end="321:64">&lt;</operator> <literal type="number" pos:start="321:66" pos:end="321:66">0</literal></expr>)</condition><block type="pseudo" pos:start="323:9" pos:end="323:19"><block_content pos:start="323:9" pos:end="323:19">

        <return pos:start="323:9" pos:end="323:19">return <expr pos:start="323:16" pos:end="323:18"><name pos:start="323:16" pos:end="323:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:21"><expr pos:start="325:5" pos:end="325:20"><name pos:start="325:5" pos:end="325:10"><name pos:start="325:5" pos:end="325:5">h</name><operator pos:start="325:6" pos:end="325:7">-&gt;</operator><name pos:start="325:8" pos:end="325:10">sps</name></name> <operator pos:start="325:12" pos:end="325:12">=</operator> <name pos:start="325:14" pos:end="325:20"><name pos:start="325:14" pos:end="325:15">h1</name><operator pos:start="325:16" pos:end="325:17">-&gt;</operator><name pos:start="325:18" pos:end="325:20">sps</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="327:5" pos:end="333:19"><if pos:start="327:5" pos:end="333:19">if <condition pos:start="327:8" pos:end="331:67">(<expr pos:start="327:9" pos:end="331:66"><operator pos:start="327:9" pos:end="327:9">(</operator><name pos:start="327:10" pos:end="327:12">ret</name> <operator pos:start="327:14" pos:end="327:14">=</operator> <call pos:start="327:16" pos:end="331:61"><name pos:start="327:16" pos:end="327:33">copy_parameter_set</name><argument_list pos:start="327:34" pos:end="331:61">(<argument pos:start="327:35" pos:end="327:57"><expr pos:start="327:35" pos:end="327:57"><operator pos:start="327:35" pos:end="327:35">(</operator><name pos:start="327:36" pos:end="327:39">void</name> <operator pos:start="327:41" pos:end="327:41">*</operator><operator pos:start="327:42" pos:end="327:42">*</operator><operator pos:start="327:43" pos:end="327:43">)</operator><name pos:start="327:44" pos:end="327:57"><name pos:start="327:44" pos:end="327:44">h</name><operator pos:start="327:45" pos:end="327:46">-&gt;</operator><name pos:start="327:47" pos:end="327:57">pps_buffers</name></name></expr></argument>,

                                  <argument pos:start="329:35" pos:end="329:58"><expr pos:start="329:35" pos:end="329:58"><operator pos:start="329:35" pos:end="329:35">(</operator><name pos:start="329:36" pos:end="329:39">void</name> <operator pos:start="329:41" pos:end="329:41">*</operator><operator pos:start="329:42" pos:end="329:42">*</operator><operator pos:start="329:43" pos:end="329:43">)</operator><name pos:start="329:44" pos:end="329:58"><name pos:start="329:44" pos:end="329:45">h1</name><operator pos:start="329:46" pos:end="329:47">-&gt;</operator><name pos:start="329:48" pos:end="329:58">pps_buffers</name></name></expr></argument>,

                                  <argument pos:start="331:35" pos:end="331:47"><expr pos:start="331:35" pos:end="331:47"><name pos:start="331:35" pos:end="331:47">MAX_PPS_COUNT</name></expr></argument>, <argument pos:start="331:50" pos:end="331:60"><expr pos:start="331:50" pos:end="331:60"><sizeof pos:start="331:50" pos:end="331:60">sizeof<argument_list pos:start="331:56" pos:end="331:60">(<argument pos:start="331:57" pos:end="331:59"><expr pos:start="331:57" pos:end="331:59"><name pos:start="331:57" pos:end="331:59">PPS</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="331:62" pos:end="331:62">)</operator> <operator pos:start="331:64" pos:end="331:64">&lt;</operator> <literal type="number" pos:start="331:66" pos:end="331:66">0</literal></expr>)</condition><block type="pseudo" pos:start="333:9" pos:end="333:19"><block_content pos:start="333:9" pos:end="333:19">

        <return pos:start="333:9" pos:end="333:19">return <expr pos:start="333:16" pos:end="333:18"><name pos:start="333:16" pos:end="333:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:21"><expr pos:start="335:5" pos:end="335:20"><name pos:start="335:5" pos:end="335:10"><name pos:start="335:5" pos:end="335:5">h</name><operator pos:start="335:6" pos:end="335:7">-&gt;</operator><name pos:start="335:8" pos:end="335:10">pps</name></name> <operator pos:start="335:12" pos:end="335:12">=</operator> <name pos:start="335:14" pos:end="335:20"><name pos:start="335:14" pos:end="335:15">h1</name><operator pos:start="335:16" pos:end="335:17">-&gt;</operator><name pos:start="335:18" pos:end="335:20">pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="339:5" pos:end="339:30">// Dequantization matrices</comment>

    <comment type="line" pos:start="341:5" pos:end="341:70">// FIXME these are big - can they be only copied when PPS changes?</comment>

    <expr_stmt pos:start="343:5" pos:end="343:56"><expr pos:start="343:5" pos:end="343:55"><call pos:start="343:5" pos:end="343:55"><name pos:start="343:5" pos:end="343:15">copy_fields</name><argument_list pos:start="343:16" pos:end="343:55">(<argument pos:start="343:17" pos:end="343:17"><expr pos:start="343:17" pos:end="343:17"><name pos:start="343:17" pos:end="343:17">h</name></expr></argument>, <argument pos:start="343:20" pos:end="343:21"><expr pos:start="343:20" pos:end="343:21"><name pos:start="343:20" pos:end="343:21">h1</name></expr></argument>, <argument pos:start="343:24" pos:end="343:38"><expr pos:start="343:24" pos:end="343:38"><name pos:start="343:24" pos:end="343:38">dequant4_buffer</name></expr></argument>, <argument pos:start="343:41" pos:end="343:54"><expr pos:start="343:41" pos:end="343:54"><name pos:start="343:41" pos:end="343:54">dequant4_coeff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="347:5" pos:end="351:80">for <control pos:start="347:9" pos:end="347:27">(<init pos:start="347:10" pos:end="347:15"><expr pos:start="347:10" pos:end="347:14"><name pos:start="347:10" pos:end="347:10">i</name> <operator pos:start="347:12" pos:end="347:12">=</operator> <literal type="number" pos:start="347:14" pos:end="347:14">0</literal></expr>;</init> <condition pos:start="347:17" pos:end="347:22"><expr pos:start="347:17" pos:end="347:21"><name pos:start="347:17" pos:end="347:17">i</name> <operator pos:start="347:19" pos:end="347:19">&lt;</operator> <literal type="number" pos:start="347:21" pos:end="347:21">6</literal></expr>;</condition> <incr pos:start="347:24" pos:end="347:26"><expr pos:start="347:24" pos:end="347:26"><name pos:start="347:24" pos:end="347:24">i</name><operator pos:start="347:25" pos:end="347:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="349:9" pos:end="351:80"><block_content pos:start="349:9" pos:end="351:80">

        <expr_stmt pos:start="349:9" pos:end="351:80"><expr pos:start="349:9" pos:end="351:79"><name pos:start="349:9" pos:end="349:28"><name pos:start="349:9" pos:end="349:9">h</name><operator pos:start="349:10" pos:end="349:11">-&gt;</operator><name pos:start="349:12" pos:end="349:25">dequant4_coeff</name><index pos:start="349:26" pos:end="349:28">[<expr pos:start="349:27" pos:end="349:27"><name pos:start="349:27" pos:end="349:27">i</name></expr>]</index></name> <operator pos:start="349:30" pos:end="349:30">=</operator> <name pos:start="349:32" pos:end="349:52"><name pos:start="349:32" pos:end="349:32">h</name><operator pos:start="349:33" pos:end="349:34">-&gt;</operator><name pos:start="349:35" pos:end="349:49">dequant4_buffer</name><index pos:start="349:50" pos:end="349:52">[<expr pos:start="349:51" pos:end="349:51"><literal type="number" pos:start="349:51" pos:end="349:51">0</literal></expr>]</index></name> <operator pos:start="349:54" pos:end="349:54">+</operator>

                               <operator pos:start="351:32" pos:end="351:32">(</operator><name pos:start="351:33" pos:end="351:53"><name pos:start="351:33" pos:end="351:34">h1</name><operator pos:start="351:35" pos:end="351:36">-&gt;</operator><name pos:start="351:37" pos:end="351:50">dequant4_coeff</name><index pos:start="351:51" pos:end="351:53">[<expr pos:start="351:52" pos:end="351:52"><name pos:start="351:52" pos:end="351:52">i</name></expr>]</index></name> <operator pos:start="351:55" pos:end="351:55">-</operator> <name pos:start="351:57" pos:end="351:78"><name pos:start="351:57" pos:end="351:58">h1</name><operator pos:start="351:59" pos:end="351:60">-&gt;</operator><name pos:start="351:61" pos:end="351:75">dequant4_buffer</name><index pos:start="351:76" pos:end="351:78">[<expr pos:start="351:77" pos:end="351:77"><literal type="number" pos:start="351:77" pos:end="351:77">0</literal></expr>]</index></name><operator pos:start="351:79" pos:end="351:79">)</operator></expr>;</expr_stmt></block_content></block></for>



    <for pos:start="355:5" pos:end="359:80">for <control pos:start="355:9" pos:end="355:27">(<init pos:start="355:10" pos:end="355:15"><expr pos:start="355:10" pos:end="355:14"><name pos:start="355:10" pos:end="355:10">i</name> <operator pos:start="355:12" pos:end="355:12">=</operator> <literal type="number" pos:start="355:14" pos:end="355:14">0</literal></expr>;</init> <condition pos:start="355:17" pos:end="355:22"><expr pos:start="355:17" pos:end="355:21"><name pos:start="355:17" pos:end="355:17">i</name> <operator pos:start="355:19" pos:end="355:19">&lt;</operator> <literal type="number" pos:start="355:21" pos:end="355:21">6</literal></expr>;</condition> <incr pos:start="355:24" pos:end="355:26"><expr pos:start="355:24" pos:end="355:26"><name pos:start="355:24" pos:end="355:24">i</name><operator pos:start="355:25" pos:end="355:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="357:9" pos:end="359:80"><block_content pos:start="357:9" pos:end="359:80">

        <expr_stmt pos:start="357:9" pos:end="359:80"><expr pos:start="357:9" pos:end="359:79"><name pos:start="357:9" pos:end="357:28"><name pos:start="357:9" pos:end="357:9">h</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:25">dequant8_coeff</name><index pos:start="357:26" pos:end="357:28">[<expr pos:start="357:27" pos:end="357:27"><name pos:start="357:27" pos:end="357:27">i</name></expr>]</index></name> <operator pos:start="357:30" pos:end="357:30">=</operator> <name pos:start="357:32" pos:end="357:52"><name pos:start="357:32" pos:end="357:32">h</name><operator pos:start="357:33" pos:end="357:34">-&gt;</operator><name pos:start="357:35" pos:end="357:49">dequant8_buffer</name><index pos:start="357:50" pos:end="357:52">[<expr pos:start="357:51" pos:end="357:51"><literal type="number" pos:start="357:51" pos:end="357:51">0</literal></expr>]</index></name> <operator pos:start="357:54" pos:end="357:54">+</operator>

                               <operator pos:start="359:32" pos:end="359:32">(</operator><name pos:start="359:33" pos:end="359:53"><name pos:start="359:33" pos:end="359:34">h1</name><operator pos:start="359:35" pos:end="359:36">-&gt;</operator><name pos:start="359:37" pos:end="359:50">dequant8_coeff</name><index pos:start="359:51" pos:end="359:53">[<expr pos:start="359:52" pos:end="359:52"><name pos:start="359:52" pos:end="359:52">i</name></expr>]</index></name> <operator pos:start="359:55" pos:end="359:55">-</operator> <name pos:start="359:57" pos:end="359:78"><name pos:start="359:57" pos:end="359:58">h1</name><operator pos:start="359:59" pos:end="359:60">-&gt;</operator><name pos:start="359:61" pos:end="359:75">dequant8_buffer</name><index pos:start="359:76" pos:end="359:78">[<expr pos:start="359:77" pos:end="359:77"><literal type="number" pos:start="359:77" pos:end="359:77">0</literal></expr>]</index></name><operator pos:start="359:79" pos:end="359:79">)</operator></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="363:5" pos:end="363:49"><expr pos:start="363:5" pos:end="363:48"><name pos:start="363:5" pos:end="363:24"><name pos:start="363:5" pos:end="363:5">h</name><operator pos:start="363:6" pos:end="363:7">-&gt;</operator><name pos:start="363:8" pos:end="363:24">dequant_coeff_pps</name></name> <operator pos:start="363:26" pos:end="363:26">=</operator> <name pos:start="363:28" pos:end="363:48"><name pos:start="363:28" pos:end="363:29">h1</name><operator pos:start="363:30" pos:end="363:31">-&gt;</operator><name pos:start="363:32" pos:end="363:48">dequant_coeff_pps</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="367:5" pos:end="367:17">// POC timing</comment>

    <expr_stmt pos:start="369:5" pos:end="369:50"><expr pos:start="369:5" pos:end="369:49"><call pos:start="369:5" pos:end="369:49"><name pos:start="369:5" pos:end="369:15">copy_fields</name><argument_list pos:start="369:16" pos:end="369:49">(<argument pos:start="369:17" pos:end="369:17"><expr pos:start="369:17" pos:end="369:17"><name pos:start="369:17" pos:end="369:17">h</name></expr></argument>, <argument pos:start="369:20" pos:end="369:21"><expr pos:start="369:20" pos:end="369:21"><name pos:start="369:20" pos:end="369:21">h1</name></expr></argument>, <argument pos:start="369:24" pos:end="369:30"><expr pos:start="369:24" pos:end="369:30"><name pos:start="369:24" pos:end="369:30">poc_lsb</name></expr></argument>, <argument pos:start="369:33" pos:end="369:48"><expr pos:start="369:33" pos:end="369:48"><name pos:start="369:33" pos:end="369:48">default_ref_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="373:5" pos:end="373:22">// reference lists</comment>

    <expr_stmt pos:start="375:5" pos:end="375:49"><expr pos:start="375:5" pos:end="375:48"><call pos:start="375:5" pos:end="375:48"><name pos:start="375:5" pos:end="375:15">copy_fields</name><argument_list pos:start="375:16" pos:end="375:48">(<argument pos:start="375:17" pos:end="375:17"><expr pos:start="375:17" pos:end="375:17"><name pos:start="375:17" pos:end="375:17">h</name></expr></argument>, <argument pos:start="375:20" pos:end="375:21"><expr pos:start="375:20" pos:end="375:21"><name pos:start="375:20" pos:end="375:21">h1</name></expr></argument>, <argument pos:start="375:24" pos:end="375:32"><expr pos:start="375:24" pos:end="375:32"><name pos:start="375:24" pos:end="375:32">short_ref</name></expr></argument>, <argument pos:start="375:35" pos:end="375:47"><expr pos:start="375:35" pos:end="375:47"><name pos:start="375:35" pos:end="375:47">current_slice</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="379:5" pos:end="379:63"><expr pos:start="379:5" pos:end="379:62"><call pos:start="379:5" pos:end="379:62"><name pos:start="379:5" pos:end="379:22">copy_picture_range</name><argument_list pos:start="379:23" pos:end="379:62">(<argument pos:start="379:24" pos:end="379:35"><expr pos:start="379:24" pos:end="379:35"><name pos:start="379:24" pos:end="379:35"><name pos:start="379:24" pos:end="379:24">h</name><operator pos:start="379:25" pos:end="379:26">-&gt;</operator><name pos:start="379:27" pos:end="379:35">short_ref</name></name></expr></argument>, <argument pos:start="379:38" pos:end="379:50"><expr pos:start="379:38" pos:end="379:50"><name pos:start="379:38" pos:end="379:50"><name pos:start="379:38" pos:end="379:39">h1</name><operator pos:start="379:40" pos:end="379:41">-&gt;</operator><name pos:start="379:42" pos:end="379:50">short_ref</name></name></expr></argument>, <argument pos:start="379:53" pos:end="379:54"><expr pos:start="379:53" pos:end="379:54"><literal type="number" pos:start="379:53" pos:end="379:54">32</literal></expr></argument>, <argument pos:start="379:57" pos:end="379:57"><expr pos:start="379:57" pos:end="379:57"><name pos:start="379:57" pos:end="379:57">h</name></expr></argument>, <argument pos:start="379:60" pos:end="379:61"><expr pos:start="379:60" pos:end="379:61"><name pos:start="379:60" pos:end="379:61">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:61"><expr pos:start="381:5" pos:end="381:60"><call pos:start="381:5" pos:end="381:60"><name pos:start="381:5" pos:end="381:22">copy_picture_range</name><argument_list pos:start="381:23" pos:end="381:60">(<argument pos:start="381:24" pos:end="381:34"><expr pos:start="381:24" pos:end="381:34"><name pos:start="381:24" pos:end="381:34"><name pos:start="381:24" pos:end="381:24">h</name><operator pos:start="381:25" pos:end="381:26">-&gt;</operator><name pos:start="381:27" pos:end="381:34">long_ref</name></name></expr></argument>, <argument pos:start="381:37" pos:end="381:48"><expr pos:start="381:37" pos:end="381:48"><name pos:start="381:37" pos:end="381:48"><name pos:start="381:37" pos:end="381:38">h1</name><operator pos:start="381:39" pos:end="381:40">-&gt;</operator><name pos:start="381:41" pos:end="381:48">long_ref</name></name></expr></argument>, <argument pos:start="381:51" pos:end="381:52"><expr pos:start="381:51" pos:end="381:52"><literal type="number" pos:start="381:51" pos:end="381:52">32</literal></expr></argument>, <argument pos:start="381:55" pos:end="381:55"><expr pos:start="381:55" pos:end="381:55"><name pos:start="381:55" pos:end="381:55">h</name></expr></argument>, <argument pos:start="381:58" pos:end="381:59"><expr pos:start="381:58" pos:end="381:59"><name pos:start="381:58" pos:end="381:59">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="383:5" pos:end="385:57"><expr pos:start="383:5" pos:end="385:56"><call pos:start="383:5" pos:end="385:56"><name pos:start="383:5" pos:end="383:22">copy_picture_range</name><argument_list pos:start="383:23" pos:end="385:56">(<argument pos:start="383:24" pos:end="383:37"><expr pos:start="383:24" pos:end="383:37"><name pos:start="383:24" pos:end="383:37"><name pos:start="383:24" pos:end="383:24">h</name><operator pos:start="383:25" pos:end="383:26">-&gt;</operator><name pos:start="383:27" pos:end="383:37">delayed_pic</name></name></expr></argument>, <argument pos:start="383:40" pos:end="383:54"><expr pos:start="383:40" pos:end="383:54"><name pos:start="383:40" pos:end="383:54"><name pos:start="383:40" pos:end="383:41">h1</name><operator pos:start="383:42" pos:end="383:43">-&gt;</operator><name pos:start="383:44" pos:end="383:54">delayed_pic</name></name></expr></argument>,

                       <argument pos:start="385:24" pos:end="385:48"><expr pos:start="385:24" pos:end="385:48"><name pos:start="385:24" pos:end="385:44">MAX_DELAYED_PIC_COUNT</name> <operator pos:start="385:46" pos:end="385:46">+</operator> <literal type="number" pos:start="385:48" pos:end="385:48">2</literal></expr></argument>, <argument pos:start="385:51" pos:end="385:51"><expr pos:start="385:51" pos:end="385:51"><name pos:start="385:51" pos:end="385:51">h</name></expr></argument>, <argument pos:start="385:54" pos:end="385:55"><expr pos:start="385:54" pos:end="385:55"><name pos:start="385:54" pos:end="385:55">h1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="389:5" pos:end="389:51"><expr pos:start="389:5" pos:end="389:50"><name pos:start="389:5" pos:end="389:22"><name pos:start="389:5" pos:end="389:5">h</name><operator pos:start="389:6" pos:end="389:7">-&gt;</operator><name pos:start="389:8" pos:end="389:22">frame_recovered</name></name>       <operator pos:start="389:30" pos:end="389:30">=</operator> <name pos:start="389:32" pos:end="389:50"><name pos:start="389:32" pos:end="389:33">h1</name><operator pos:start="389:34" pos:end="389:35">-&gt;</operator><name pos:start="389:36" pos:end="389:50">frame_recovered</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="393:5" pos:end="395:42"><if pos:start="393:5" pos:end="395:42">if <condition pos:start="393:8" pos:end="393:30">(<expr pos:start="393:9" pos:end="393:29"><name pos:start="393:9" pos:end="393:29">context_reinitialized</name></expr>)</condition><block type="pseudo" pos:start="395:9" pos:end="395:42"><block_content pos:start="395:9" pos:end="395:42">

        <expr_stmt pos:start="395:9" pos:end="395:42"><expr pos:start="395:9" pos:end="395:41"><call pos:start="395:9" pos:end="395:41"><name pos:start="395:9" pos:end="395:38">ff_h264_set_parameter_from_sps</name><argument_list pos:start="395:39" pos:end="395:41">(<argument pos:start="395:40" pos:end="395:40"><expr pos:start="395:40" pos:end="395:40"><name pos:start="395:40" pos:end="395:40">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="399:5" pos:end="401:17"><if pos:start="399:5" pos:end="401:17">if <condition pos:start="399:8" pos:end="399:24">(<expr pos:start="399:9" pos:end="399:23"><operator pos:start="399:9" pos:end="399:9">!</operator><name pos:start="399:10" pos:end="399:23"><name pos:start="399:10" pos:end="399:10">h</name><operator pos:start="399:11" pos:end="399:12">-&gt;</operator><name pos:start="399:13" pos:end="399:23">cur_pic_ptr</name></name></expr>)</condition><block type="pseudo" pos:start="401:9" pos:end="401:17"><block_content pos:start="401:9" pos:end="401:17">

        <return pos:start="401:9" pos:end="401:17">return <expr pos:start="401:16" pos:end="401:16"><literal type="number" pos:start="401:16" pos:end="401:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="405:5" pos:end="413:5"><if pos:start="405:5" pos:end="413:5">if <condition pos:start="405:8" pos:end="405:22">(<expr pos:start="405:9" pos:end="405:21"><operator pos:start="405:9" pos:end="405:9">!</operator><name pos:start="405:10" pos:end="405:21"><name pos:start="405:10" pos:end="405:10">h</name><operator pos:start="405:11" pos:end="405:12">-&gt;</operator><name pos:start="405:13" pos:end="405:21">droppable</name></name></expr>)</condition> <block pos:start="405:24" pos:end="413:5">{<block_content pos:start="407:9" pos:end="411:37">

        <expr_stmt pos:start="407:9" pos:end="407:73"><expr pos:start="407:9" pos:end="407:72"><name pos:start="407:9" pos:end="407:11">err</name> <operator pos:start="407:13" pos:end="407:13">=</operator> <call pos:start="407:15" pos:end="407:72"><name pos:start="407:15" pos:end="407:45">ff_h264_execute_ref_pic_marking</name><argument_list pos:start="407:46" pos:end="407:72">(<argument pos:start="407:47" pos:end="407:47"><expr pos:start="407:47" pos:end="407:47"><name pos:start="407:47" pos:end="407:47">h</name></expr></argument>, <argument pos:start="407:50" pos:end="407:56"><expr pos:start="407:50" pos:end="407:56"><name pos:start="407:50" pos:end="407:56"><name pos:start="407:50" pos:end="407:50">h</name><operator pos:start="407:51" pos:end="407:52">-&gt;</operator><name pos:start="407:53" pos:end="407:56">mmco</name></name></expr></argument>, <argument pos:start="407:59" pos:end="407:71"><expr pos:start="407:59" pos:end="407:71"><name pos:start="407:59" pos:end="407:71"><name pos:start="407:59" pos:end="407:59">h</name><operator pos:start="407:60" pos:end="407:61">-&gt;</operator><name pos:start="407:62" pos:end="407:71">mmco_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="409:9" pos:end="409:37"><expr pos:start="409:9" pos:end="409:36"><name pos:start="409:9" pos:end="409:23"><name pos:start="409:9" pos:end="409:9">h</name><operator pos:start="409:10" pos:end="409:11">-&gt;</operator><name pos:start="409:12" pos:end="409:23">prev_poc_msb</name></name> <operator pos:start="409:25" pos:end="409:25">=</operator> <name pos:start="409:27" pos:end="409:36"><name pos:start="409:27" pos:end="409:27">h</name><operator pos:start="409:28" pos:end="409:29">-&gt;</operator><name pos:start="409:30" pos:end="409:36">poc_msb</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="411:9" pos:end="411:37"><expr pos:start="411:9" pos:end="411:36"><name pos:start="411:9" pos:end="411:23"><name pos:start="411:9" pos:end="411:9">h</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:23">prev_poc_lsb</name></name> <operator pos:start="411:25" pos:end="411:25">=</operator> <name pos:start="411:27" pos:end="411:36"><name pos:start="411:27" pos:end="411:27">h</name><operator pos:start="411:28" pos:end="411:29">-&gt;</operator><name pos:start="411:30" pos:end="411:36">poc_lsb</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="415:5" pos:end="415:51"><expr pos:start="415:5" pos:end="415:50"><name pos:start="415:5" pos:end="415:28"><name pos:start="415:5" pos:end="415:5">h</name><operator pos:start="415:6" pos:end="415:7">-&gt;</operator><name pos:start="415:8" pos:end="415:28">prev_frame_num_offset</name></name> <operator pos:start="415:30" pos:end="415:30">=</operator> <name pos:start="415:32" pos:end="415:50"><name pos:start="415:32" pos:end="415:32">h</name><operator pos:start="415:33" pos:end="415:34">-&gt;</operator><name pos:start="415:35" pos:end="415:50">frame_num_offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="417:5" pos:end="417:44"><expr pos:start="417:5" pos:end="417:43"><name pos:start="417:5" pos:end="417:21"><name pos:start="417:5" pos:end="417:5">h</name><operator pos:start="417:6" pos:end="417:7">-&gt;</operator><name pos:start="417:8" pos:end="417:21">prev_frame_num</name></name>        <operator pos:start="417:30" pos:end="417:30">=</operator> <name pos:start="417:32" pos:end="417:43"><name pos:start="417:32" pos:end="417:32">h</name><operator pos:start="417:33" pos:end="417:34">-&gt;</operator><name pos:start="417:35" pos:end="417:43">frame_num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="419:5" pos:end="419:52"><expr pos:start="419:5" pos:end="419:51"><name pos:start="419:5" pos:end="419:19"><name pos:start="419:5" pos:end="419:5">h</name><operator pos:start="419:6" pos:end="419:7">-&gt;</operator><name pos:start="419:8" pos:end="419:19">outputed_poc</name></name>          <operator pos:start="419:30" pos:end="419:30">=</operator> <name pos:start="419:32" pos:end="419:51"><name pos:start="419:32" pos:end="419:32">h</name><operator pos:start="419:33" pos:end="419:34">-&gt;</operator><name pos:start="419:35" pos:end="419:51">next_outputed_poc</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="423:5" pos:end="423:50"><expr pos:start="423:5" pos:end="423:49"><name pos:start="423:5" pos:end="423:21"><name pos:start="423:5" pos:end="423:5">h</name><operator pos:start="423:6" pos:end="423:7">-&gt;</operator><name pos:start="423:8" pos:end="423:21">recovery_frame</name></name>        <operator pos:start="423:30" pos:end="423:30">=</operator> <name pos:start="423:32" pos:end="423:49"><name pos:start="423:32" pos:end="423:33">h1</name><operator pos:start="423:34" pos:end="423:35">-&gt;</operator><name pos:start="423:36" pos:end="423:49">recovery_frame</name></name></expr>;</expr_stmt>



    <return pos:start="427:5" pos:end="427:15">return <expr pos:start="427:12" pos:end="427:14"><name pos:start="427:12" pos:end="427:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
