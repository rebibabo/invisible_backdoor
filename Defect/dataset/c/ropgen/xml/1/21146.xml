<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21146.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:12">load_elf</name><parameter_list pos:start="1:13" pos:end="5:80">(<parameter pos:start="1:14" pos:end="1:33"><decl pos:start="1:14" pos:end="1:33"><type pos:start="1:14" pos:end="1:33"><specifier pos:start="1:14" pos:end="1:18">const</specifier> <name pos:start="1:20" pos:end="1:23">char</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:33">filename</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:77"><function_decl pos:start="1:36" pos:end="1:77"><type pos:start="1:36" pos:end="1:43"><name pos:start="1:36" pos:end="1:43">uint64_t</name></type> (<modifier pos:start="1:46" pos:end="1:46">*</modifier><name pos:start="1:47" pos:end="1:58">translate_fn</name>)<parameter_list pos:start="1:60" pos:end="1:77">(<parameter pos:start="1:61" pos:end="1:66"><decl pos:start="1:61" pos:end="1:66"><type pos:start="1:61" pos:end="1:66"><name pos:start="1:61" pos:end="1:64">void</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type></decl></parameter>, <parameter pos:start="1:69" pos:end="1:76"><decl pos:start="1:69" pos:end="1:76"><type pos:start="1:69" pos:end="1:76"><name pos:start="1:69" pos:end="1:76">uint64_t</name></type></decl></parameter>)</parameter_list></function_decl></parameter>,

             <parameter pos:start="3:14" pos:end="3:35"><decl pos:start="3:14" pos:end="3:35"><type pos:start="3:14" pos:end="3:35"><name pos:start="3:14" pos:end="3:17">void</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:35">translate_opaque</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:53"><decl pos:start="3:38" pos:end="3:53"><type pos:start="3:38" pos:end="3:53"><name pos:start="3:38" pos:end="3:45">uint64_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:53">pentry</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:72"><decl pos:start="3:56" pos:end="3:72"><type pos:start="3:56" pos:end="3:72"><name pos:start="3:56" pos:end="3:63">uint64_t</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:72">lowaddr</name></decl></parameter>,

             <parameter pos:start="5:14" pos:end="5:31"><decl pos:start="5:14" pos:end="5:31"><type pos:start="5:14" pos:end="5:31"><name pos:start="5:14" pos:end="5:21">uint64_t</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:31">highaddr</name></decl></parameter>, <parameter pos:start="5:34" pos:end="5:47"><decl pos:start="5:34" pos:end="5:47"><type pos:start="5:34" pos:end="5:47"><name pos:start="5:34" pos:end="5:36">int</name></type> <name pos:start="5:38" pos:end="5:47">big_endian</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:64"><decl pos:start="5:50" pos:end="5:64"><type pos:start="5:50" pos:end="5:64"><name pos:start="5:50" pos:end="5:52">int</name></type> <name pos:start="5:54" pos:end="5:64">elf_machine</name></decl></parameter>, <parameter pos:start="5:67" pos:end="5:79"><decl pos:start="5:67" pos:end="5:79"><type pos:start="5:67" pos:end="5:79"><name pos:start="5:67" pos:end="5:69">int</name></type> <name pos:start="5:71" pos:end="5:79">clear_lsb</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="99:1">{<block_content pos:start="9:5" pos:end="97:14">

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name></decl>, <decl pos:start="9:13" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:22">data_order</name></decl>, <decl pos:start="9:25" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:25" pos:end="9:41">target_data_order</name></decl>, <decl pos:start="9:44" pos:end="9:52"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:44" pos:end="9:52">must_swab</name></decl>, <decl pos:start="9:55" pos:end="9:57"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:55" pos:end="9:57">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:19">e_ident</name><index pos:start="11:20" pos:end="11:30">[<expr pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:29">EI_NIDENT</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:6">fd</name> <operator pos:start="15:8" pos:end="15:8">=</operator> <call pos:start="15:10" pos:end="15:44"><name pos:start="15:10" pos:end="15:13">open</name><argument_list pos:start="15:14" pos:end="15:44">(<argument pos:start="15:15" pos:end="15:22"><expr pos:start="15:15" pos:end="15:22"><name pos:start="15:15" pos:end="15:22">filename</name></expr></argument>, <argument pos:start="15:25" pos:end="15:43"><expr pos:start="15:25" pos:end="15:43"><name pos:start="15:25" pos:end="15:32">O_RDONLY</name> <operator pos:start="15:34" pos:end="15:34">|</operator> <name pos:start="15:36" pos:end="15:43">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:10">fd</name> <operator pos:start="17:12" pos:end="17:12">&lt;</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>)</condition> <block pos:start="17:17" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:18">

        <expr_stmt pos:start="19:9" pos:end="19:25"><expr pos:start="19:9" pos:end="19:24"><call pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:14">perror</name><argument_list pos:start="19:15" pos:end="19:24">(<argument pos:start="19:16" pos:end="19:23"><expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:62">(<expr pos:start="25:9" pos:end="25:61"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:12">read</name><argument_list pos:start="25:13" pos:end="25:42">(<argument pos:start="25:14" pos:end="25:15"><expr pos:start="25:14" pos:end="25:15"><name pos:start="25:14" pos:end="25:15">fd</name></expr></argument>, <argument pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:24"><name pos:start="25:18" pos:end="25:24">e_ident</name></expr></argument>, <argument pos:start="25:27" pos:end="25:41"><expr pos:start="25:27" pos:end="25:41"><sizeof pos:start="25:27" pos:end="25:41">sizeof<argument_list pos:start="25:33" pos:end="25:41">(<argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:40">e_ident</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="25:44" pos:end="25:45">!=</operator> <sizeof pos:start="25:47" pos:end="25:61">sizeof<argument_list pos:start="25:53" pos:end="25:61">(<argument pos:start="25:54" pos:end="25:60"><expr pos:start="25:54" pos:end="25:60"><name pos:start="25:54" pos:end="25:60">e_ident</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="40:0"><if pos:start="29:5" pos:end="40:0">if <condition pos:start="29:8" pos:end="35:30">(<expr pos:start="29:9" pos:end="35:29"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:15">e_ident</name><index pos:start="29:16" pos:end="29:18">[<expr pos:start="29:17" pos:end="29:17"><literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>]</index></name> <operator pos:start="29:20" pos:end="29:21">!=</operator> <name pos:start="29:23" pos:end="29:29">ELFMAG0</name> <operator pos:start="29:31" pos:end="29:32">||</operator>

        <name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:15">e_ident</name><index pos:start="31:16" pos:end="31:18">[<expr pos:start="31:17" pos:end="31:17"><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>]</index></name> <operator pos:start="31:20" pos:end="31:21">!=</operator> <name pos:start="31:23" pos:end="31:29">ELFMAG1</name> <operator pos:start="31:31" pos:end="31:32">||</operator>

        <name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:15">e_ident</name><index pos:start="33:16" pos:end="33:18">[<expr pos:start="33:17" pos:end="33:17"><literal type="number" pos:start="33:17" pos:end="33:17">2</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:21">!=</operator> <name pos:start="33:23" pos:end="33:29">ELFMAG2</name> <operator pos:start="33:31" pos:end="33:32">||</operator>

        <name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:15">e_ident</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><literal type="number" pos:start="35:17" pos:end="35:17">3</literal></expr>]</index></name> <operator pos:start="35:20" pos:end="35:21">!=</operator> <name pos:start="35:23" pos:end="35:29">ELFMAG3</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="40:0"><block_content pos:start="37:9" pos:end="40:0">

        <goto pos:start="37:9" pos:end="40:0">goto <name pos:start="37:14" pos:end="37:17">fail</name>;</goto></block_content></block></if></if_stmt>

<cpp:ifdef pos:start="39:1" pos:end="39:27">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:27">HOST_WORDS_BIGENDIAN</name></cpp:ifdef>

    <expr_stmt pos:start="41:5" pos:end="44:0"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:14">data_order</name> <operator pos:start="41:16" pos:end="41:16">=</operator> <name pos:start="41:18" pos:end="41:28">ELFDATA2MSB</name></expr>;</expr_stmt>

<cpp:else pos:start="43:1" pos:end="43:5">#<cpp:directive pos:start="43:2" pos:end="43:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="45:5" pos:end="48:0"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:14">data_order</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <name pos:start="45:18" pos:end="45:28">ELFDATA2LSB</name></expr>;</expr_stmt>

<cpp:endif pos:start="47:1" pos:end="47:6">#<cpp:directive pos:start="47:2" pos:end="47:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="49:5" pos:end="49:47"><expr pos:start="49:5" pos:end="49:46"><name pos:start="49:5" pos:end="49:13">must_swab</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:26">data_order</name> <operator pos:start="49:28" pos:end="49:29">!=</operator> <name pos:start="49:31" pos:end="49:46"><name pos:start="49:31" pos:end="49:37">e_ident</name><index pos:start="49:38" pos:end="49:46">[<expr pos:start="49:39" pos:end="49:45"><name pos:start="49:39" pos:end="49:45">EI_DATA</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:19">(<expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:18">big_endian</name></expr>)</condition> <block pos:start="51:21" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:40">

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:25">target_data_order</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:39">ELFDATA2MSB</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:40">

        <expr_stmt pos:start="57:9" pos:end="57:40"><expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:25">target_data_order</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:39">ELFDATA2LSB</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="63:5" pos:end="65:18"><if pos:start="63:5" pos:end="65:18">if <condition pos:start="63:8" pos:end="63:46">(<expr pos:start="63:9" pos:end="63:45"><name pos:start="63:9" pos:end="63:25">target_data_order</name> <operator pos:start="63:27" pos:end="63:28">!=</operator> <name pos:start="63:30" pos:end="63:45"><name pos:start="63:30" pos:end="63:36">e_ident</name><index pos:start="63:37" pos:end="63:45">[<expr pos:start="63:38" pos:end="63:44"><name pos:start="63:38" pos:end="63:44">EI_DATA</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:18"><block_content pos:start="65:9" pos:end="65:18">

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:9">lseek</name><argument_list pos:start="69:10" pos:end="69:26">(<argument pos:start="69:11" pos:end="69:12"><expr pos:start="69:11" pos:end="69:12"><name pos:start="69:11" pos:end="69:12">fd</name></expr></argument>, <argument pos:start="69:15" pos:end="69:15"><expr pos:start="69:15" pos:end="69:15"><literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr></argument>, <argument pos:start="69:18" pos:end="69:25"><expr pos:start="69:18" pos:end="69:25"><name pos:start="69:18" pos:end="69:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="83:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:40">(<expr pos:start="71:9" pos:end="71:39"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:15">e_ident</name><index pos:start="71:16" pos:end="71:25">[<expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">EI_CLASS</name></expr>]</index></name> <operator pos:start="71:27" pos:end="71:28">==</operator> <name pos:start="71:30" pos:end="71:39">ELFCLASS64</name></expr>)</condition> <block pos:start="71:42" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:76">

        <expr_stmt pos:start="73:9" pos:end="75:76"><expr pos:start="73:9" pos:end="75:75"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="75:75"><name pos:start="73:15" pos:end="73:24">load_elf64</name><argument_list pos:start="73:25" pos:end="75:75">(<argument pos:start="73:26" pos:end="73:33"><expr pos:start="73:26" pos:end="73:33"><name pos:start="73:26" pos:end="73:33">filename</name></expr></argument>, <argument pos:start="73:36" pos:end="73:37"><expr pos:start="73:36" pos:end="73:37"><name pos:start="73:36" pos:end="73:37">fd</name></expr></argument>, <argument pos:start="73:40" pos:end="73:51"><expr pos:start="73:40" pos:end="73:51"><name pos:start="73:40" pos:end="73:51">translate_fn</name></expr></argument>, <argument pos:start="73:54" pos:end="73:69"><expr pos:start="73:54" pos:end="73:69"><name pos:start="73:54" pos:end="73:69">translate_opaque</name></expr></argument>, <argument pos:start="73:72" pos:end="73:80"><expr pos:start="73:72" pos:end="73:80"><name pos:start="73:72" pos:end="73:80">must_swab</name></expr></argument>,

                         <argument pos:start="75:26" pos:end="75:31"><expr pos:start="75:26" pos:end="75:31"><name pos:start="75:26" pos:end="75:31">pentry</name></expr></argument>, <argument pos:start="75:34" pos:end="75:40"><expr pos:start="75:34" pos:end="75:40"><name pos:start="75:34" pos:end="75:40">lowaddr</name></expr></argument>, <argument pos:start="75:43" pos:end="75:50"><expr pos:start="75:43" pos:end="75:50"><name pos:start="75:43" pos:end="75:50">highaddr</name></expr></argument>, <argument pos:start="75:53" pos:end="75:63"><expr pos:start="75:53" pos:end="75:63"><name pos:start="75:53" pos:end="75:63">elf_machine</name></expr></argument>, <argument pos:start="75:66" pos:end="75:74"><expr pos:start="75:66" pos:end="75:74"><name pos:start="75:66" pos:end="75:74">clear_lsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="83:5">else <block pos:start="77:12" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:76">

        <expr_stmt pos:start="79:9" pos:end="81:76"><expr pos:start="79:9" pos:end="81:75"><name pos:start="79:9" pos:end="79:11">ret</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <call pos:start="79:15" pos:end="81:75"><name pos:start="79:15" pos:end="79:24">load_elf32</name><argument_list pos:start="79:25" pos:end="81:75">(<argument pos:start="79:26" pos:end="79:33"><expr pos:start="79:26" pos:end="79:33"><name pos:start="79:26" pos:end="79:33">filename</name></expr></argument>, <argument pos:start="79:36" pos:end="79:37"><expr pos:start="79:36" pos:end="79:37"><name pos:start="79:36" pos:end="79:37">fd</name></expr></argument>, <argument pos:start="79:40" pos:end="79:51"><expr pos:start="79:40" pos:end="79:51"><name pos:start="79:40" pos:end="79:51">translate_fn</name></expr></argument>, <argument pos:start="79:54" pos:end="79:69"><expr pos:start="79:54" pos:end="79:69"><name pos:start="79:54" pos:end="79:69">translate_opaque</name></expr></argument>, <argument pos:start="79:72" pos:end="79:80"><expr pos:start="79:72" pos:end="79:80"><name pos:start="79:72" pos:end="79:80">must_swab</name></expr></argument>,

                         <argument pos:start="81:26" pos:end="81:31"><expr pos:start="81:26" pos:end="81:31"><name pos:start="81:26" pos:end="81:31">pentry</name></expr></argument>, <argument pos:start="81:34" pos:end="81:40"><expr pos:start="81:34" pos:end="81:40"><name pos:start="81:34" pos:end="81:40">lowaddr</name></expr></argument>, <argument pos:start="81:43" pos:end="81:50"><expr pos:start="81:43" pos:end="81:50"><name pos:start="81:43" pos:end="81:50">highaddr</name></expr></argument>, <argument pos:start="81:53" pos:end="81:63"><expr pos:start="81:53" pos:end="81:63"><name pos:start="81:53" pos:end="81:63">elf_machine</name></expr></argument>, <argument pos:start="81:66" pos:end="81:74"><expr pos:start="81:66" pos:end="81:74"><name pos:start="81:66" pos:end="81:74">clear_lsb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:14"><expr pos:start="87:5" pos:end="87:13"><call pos:start="87:5" pos:end="87:13"><name pos:start="87:5" pos:end="87:9">close</name><argument_list pos:start="87:10" pos:end="87:13">(<argument pos:start="87:11" pos:end="87:12"><expr pos:start="87:11" pos:end="87:12"><name pos:start="87:11" pos:end="87:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:15">return <expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ret</name></expr>;</return>



 <label pos:start="93:2" pos:end="93:6"><name pos:start="93:2" pos:end="93:5">fail</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:14"><expr pos:start="95:5" pos:end="95:13"><call pos:start="95:5" pos:end="95:13"><name pos:start="95:5" pos:end="95:9">close</name><argument_list pos:start="95:10" pos:end="95:13">(<argument pos:start="95:11" pos:end="95:12"><expr pos:start="95:11" pos:end="95:12"><name pos:start="95:11" pos:end="95:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="97:5" pos:end="97:14">return <expr pos:start="97:12" pos:end="97:13"><operator pos:start="97:12" pos:end="97:12">-</operator><literal type="number" pos:start="97:13" pos:end="97:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
