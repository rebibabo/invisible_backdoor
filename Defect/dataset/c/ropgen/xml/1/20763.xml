<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20763.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:42">mpeg2_decode_block_intra</name><parameter_list pos:start="1:43" pos:end="1:84">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">MpegEncContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:69">int16_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">block</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:83"><decl pos:start="1:79" pos:end="1:83"><type pos:start="1:79" pos:end="1:83"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:83">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">level</name></decl>, <decl pos:start="5:16" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:17">dc</name></decl>, <decl pos:start="5:20" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:23">diff</name></decl>, <decl pos:start="5:26" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:26">i</name></decl>, <decl pos:start="5:29" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:29" pos:end="5:29">j</name></decl>, <decl pos:start="5:32" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:34">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">component</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:61"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier> <specifier pos:start="11:15" pos:end="11:19">const</specifier></type> <name pos:start="11:21" pos:end="11:29">scantable</name> <init pos:start="11:31" pos:end="11:61">= <expr pos:start="11:33" pos:end="11:61"><name pos:start="11:33" pos:end="11:61"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:50">intra_scantable</name><operator pos:start="11:51" pos:end="11:51">.</operator><name pos:start="11:52" pos:end="11:61">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:20"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:18">uint16_t</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:32">quant_matrix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">qscale</name> <init pos:start="15:22" pos:end="15:32">= <expr pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:32"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:32">qscale</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">mismatch</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:24">/* DC coefficient */</comment>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:9">n</name> <operator pos:start="23:11" pos:end="23:11">&lt;</operator> <literal type="number" pos:start="23:13" pos:end="23:13">4</literal></expr>)</condition> <block pos:start="23:16" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:22">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:20">quant_matrix</name> <operator pos:start="25:22" pos:end="25:22">=</operator> <name pos:start="25:24" pos:end="25:38"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:38">intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17">component</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="35:5">else <block pos:start="29:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:32">

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:20">quant_matrix</name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:45"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:45">chroma_intra_matrix</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:17">component</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:22">n</name> <operator pos:start="33:24" pos:end="33:24">&amp;</operator> <literal type="number" pos:start="33:26" pos:end="33:26">1</literal><operator pos:start="33:27" pos:end="33:27">)</operator> <operator pos:start="33:29" pos:end="33:29">+</operator> <literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:8">diff</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:39"><name pos:start="37:12" pos:end="37:20">decode_dc</name><argument_list pos:start="37:21" pos:end="37:39">(<argument pos:start="37:22" pos:end="37:27"><expr pos:start="37:22" pos:end="37:27"><operator pos:start="37:22" pos:end="37:22">&amp;</operator><name pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">gb</name></name></expr></argument>, <argument pos:start="37:30" pos:end="37:38"><expr pos:start="37:30" pos:end="37:38"><name pos:start="37:30" pos:end="37:38">component</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if <condition pos:start="39:8" pos:end="39:23">(<expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:12">diff</name> <operator pos:start="39:14" pos:end="39:15">&gt;=</operator> <literal type="number" pos:start="39:17" pos:end="39:22">0xffff</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:6">dc</name>  <operator pos:start="43:9" pos:end="43:9">=</operator> <name pos:start="43:11" pos:end="43:31"><name pos:start="43:11" pos:end="43:11">s</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:20">last_dc</name><index pos:start="43:21" pos:end="43:31">[<expr pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:30">component</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:15"><expr pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:6">dc</name> <operator pos:start="45:8" pos:end="45:9">+=</operator> <name pos:start="45:11" pos:end="45:14">diff</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:25"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:14">last_dc</name><index pos:start="47:15" pos:end="47:25">[<expr pos:start="47:16" pos:end="47:24"><name pos:start="47:16" pos:end="47:24">component</name></expr>]</index></name> <operator pos:start="47:27" pos:end="47:27">=</operator> <name pos:start="47:29" pos:end="47:30">dc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:9">block</name><index pos:start="49:10" pos:end="49:12">[<expr pos:start="49:11" pos:end="49:11"><literal type="number" pos:start="49:11" pos:end="49:11">0</literal></expr>]</index></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <name pos:start="49:16" pos:end="49:17">dc</name> <operator pos:start="49:19" pos:end="49:20">&lt;&lt;</operator> <operator pos:start="49:22" pos:end="49:22">(</operator><literal type="number" pos:start="49:23" pos:end="49:25">3</literal> <operator pos:start="49:25" pos:end="49:25">-</operator> <name pos:start="49:27" pos:end="49:47"><name pos:start="49:27" pos:end="49:27">s</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:47">intra_dc_precision</name></name><operator pos:start="49:48" pos:end="49:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><call pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:11">av_dlog</name><argument_list pos:start="51:12" pos:end="51:42">(<argument pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">avctx</name></name></expr></argument>, <argument pos:start="51:23" pos:end="51:31"><expr pos:start="51:23" pos:end="51:31"><literal type="string" pos:start="51:23" pos:end="51:31">"dc=%d\n"</literal></expr></argument>, <argument pos:start="51:34" pos:end="51:41"><expr pos:start="51:34" pos:end="51:41"><name pos:start="51:34" pos:end="51:41"><name pos:start="51:34" pos:end="51:38">block</name><index pos:start="51:39" pos:end="51:41">[<expr pos:start="51:40" pos:end="51:40"><literal type="number" pos:start="51:40" pos:end="51:40">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:12">mismatch</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:20">block</name><index pos:start="53:21" pos:end="53:23">[<expr pos:start="53:22" pos:end="53:22"><literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>]</index></name> <operator pos:start="53:25" pos:end="53:25">^</operator> <literal type="number" pos:start="53:27" pos:end="53:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:10"><expr pos:start="55:5" pos:end="55:9"><name pos:start="55:5" pos:end="55:5">i</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <literal type="number" pos:start="55:9" pos:end="55:9">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:26"><if pos:start="57:5" pos:end="59:26">if <condition pos:start="57:8" pos:end="57:28">(<expr pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:27">intra_vlc_format</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:26"><block_content pos:start="59:9" pos:end="59:26">

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:10">rl</name> <operator pos:start="59:12" pos:end="59:12">=</operator> <operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:25">ff_rl_mpeg2</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="61:5" pos:end="63:26">else<block type="pseudo" pos:start="63:9" pos:end="63:26"><block_content pos:start="63:9" pos:end="63:26">

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:10">rl</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <operator pos:start="63:14" pos:end="63:14">&amp;</operator><name pos:start="63:15" pos:end="63:25">ff_rl_mpeg1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <block pos:start="67:5" pos:end="143:5">{<block_content pos:start="69:9" pos:end="141:33">

        <expr_stmt pos:start="69:9" pos:end="69:32"><expr pos:start="69:9" pos:end="69:31"><call pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:19">OPEN_READER</name><argument_list pos:start="69:20" pos:end="69:31">(<argument pos:start="69:21" pos:end="69:22"><expr pos:start="69:21" pos:end="69:22"><name pos:start="69:21" pos:end="69:22">re</name></expr></argument>, <argument pos:start="69:25" pos:end="69:30"><expr pos:start="69:25" pos:end="69:30"><operator pos:start="69:25" pos:end="69:25">&amp;</operator><name pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:26">s</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="73:9" pos:end="139:9">for <control pos:start="73:13" pos:end="73:16">(<init pos:start="73:14" pos:end="73:14">;</init><condition pos:start="73:15" pos:end="73:15">;</condition><incr/>)</control> <block pos:start="73:18" pos:end="139:9">{<block_content pos:start="75:13" pos:end="137:30">

            <expr_stmt pos:start="75:13" pos:end="75:37"><expr pos:start="75:13" pos:end="75:36"><call pos:start="75:13" pos:end="75:36"><name pos:start="75:13" pos:end="75:24">UPDATE_CACHE</name><argument_list pos:start="75:25" pos:end="75:36">(<argument pos:start="75:26" pos:end="75:27"><expr pos:start="75:26" pos:end="75:27"><name pos:start="75:26" pos:end="75:27">re</name></expr></argument>, <argument pos:start="75:30" pos:end="75:35"><expr pos:start="75:30" pos:end="75:35"><operator pos:start="75:30" pos:end="75:30">&amp;</operator><name pos:start="75:31" pos:end="75:35"><name pos:start="75:31" pos:end="75:31">s</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:82"><expr pos:start="77:13" pos:end="77:81"><call pos:start="77:13" pos:end="77:81"><name pos:start="77:13" pos:end="77:22">GET_RL_VLC</name><argument_list pos:start="77:23" pos:end="77:81">(<argument pos:start="77:24" pos:end="77:28"><expr pos:start="77:24" pos:end="77:28"><name pos:start="77:24" pos:end="77:28">level</name></expr></argument>, <argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:33">run</name></expr></argument>, <argument pos:start="77:36" pos:end="77:37"><expr pos:start="77:36" pos:end="77:37"><name pos:start="77:36" pos:end="77:37">re</name></expr></argument>, <argument pos:start="77:40" pos:end="77:45"><expr pos:start="77:40" pos:end="77:45"><operator pos:start="77:40" pos:end="77:40">&amp;</operator><name pos:start="77:41" pos:end="77:45"><name pos:start="77:41" pos:end="77:41">s</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:45">gb</name></name></expr></argument>, <argument pos:start="77:48" pos:end="77:60"><expr pos:start="77:48" pos:end="77:60"><name pos:start="77:48" pos:end="77:60"><name pos:start="77:48" pos:end="77:49">rl</name><operator pos:start="77:50" pos:end="77:51">-&gt;</operator><name pos:start="77:52" pos:end="77:57">rl_vlc</name><index pos:start="77:58" pos:end="77:60">[<expr pos:start="77:59" pos:end="77:59"><literal type="number" pos:start="77:59" pos:end="77:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:63" pos:end="77:74"><expr pos:start="77:63" pos:end="77:74"><name pos:start="77:63" pos:end="77:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="77:77" pos:end="77:77"><expr pos:start="77:77" pos:end="77:77"><literal type="number" pos:start="77:77" pos:end="77:77">2</literal></expr></argument>, <argument pos:start="77:80" pos:end="77:80"><expr pos:start="77:80" pos:end="77:80"><literal type="number" pos:start="77:80" pos:end="77:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="81:13" pos:end="123:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:29">(<expr pos:start="81:17" pos:end="81:28"><name pos:start="81:17" pos:end="81:21">level</name> <operator pos:start="81:23" pos:end="81:24">==</operator> <literal type="number" pos:start="81:26" pos:end="81:28">127</literal></expr>)</condition> <block pos:start="81:31" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="85:15" pos:end="97:13">else if <condition pos:start="85:23" pos:end="85:34">(<expr pos:start="85:24" pos:end="85:33"><name pos:start="85:24" pos:end="85:28">level</name> <operator pos:start="85:30" pos:end="85:31">!=</operator> <literal type="number" pos:start="85:33" pos:end="85:33">0</literal></expr>)</condition> <block pos:start="85:36" pos:end="97:13">{<block_content pos:start="87:17" pos:end="95:46">

                <expr_stmt pos:start="87:17" pos:end="87:25"><expr pos:start="87:17" pos:end="87:24"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:20">+=</operator> <name pos:start="87:22" pos:end="87:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:34"><expr pos:start="89:17" pos:end="89:33"><name pos:start="89:17" pos:end="89:17">j</name>  <operator pos:start="89:20" pos:end="89:20">=</operator> <name pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:30">scantable</name><index pos:start="89:31" pos:end="89:33">[<expr pos:start="89:32" pos:end="89:32"><name pos:start="89:32" pos:end="89:32">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:64"><expr pos:start="91:17" pos:end="91:63"><name pos:start="91:17" pos:end="91:21">level</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:30">level</name> <operator pos:start="91:32" pos:end="91:32">*</operator> <name pos:start="91:34" pos:end="91:39">qscale</name> <operator pos:start="91:41" pos:end="91:41">*</operator> <name pos:start="91:43" pos:end="91:57"><name pos:start="91:43" pos:end="91:54">quant_matrix</name><index pos:start="91:55" pos:end="91:57">[<expr pos:start="91:56" pos:end="91:56"><name pos:start="91:56" pos:end="91:56">j</name></expr>]</index></name><operator pos:start="91:58" pos:end="91:58">)</operator> <operator pos:start="91:60" pos:end="91:61">&gt;&gt;</operator> <literal type="number" pos:start="91:63" pos:end="91:63">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:88"><expr pos:start="93:17" pos:end="93:87"><name pos:start="93:17" pos:end="93:21">level</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <operator pos:start="93:25" pos:end="93:25">(</operator><name pos:start="93:26" pos:end="93:30">level</name> <operator pos:start="93:32" pos:end="93:32">^</operator> <call pos:start="93:34" pos:end="93:58"><name pos:start="93:34" pos:end="93:43">SHOW_SBITS</name><argument_list pos:start="93:44" pos:end="93:58">(<argument pos:start="93:45" pos:end="93:46"><expr pos:start="93:45" pos:end="93:46"><name pos:start="93:45" pos:end="93:46">re</name></expr></argument>, <argument pos:start="93:49" pos:end="93:54"><expr pos:start="93:49" pos:end="93:54"><operator pos:start="93:49" pos:end="93:49">&amp;</operator><name pos:start="93:50" pos:end="93:54"><name pos:start="93:50" pos:end="93:50">s</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:54">gb</name></name></expr></argument>, <argument pos:start="93:57" pos:end="93:57"><expr pos:start="93:57" pos:end="93:57"><literal type="number" pos:start="93:57" pos:end="93:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="93:59" pos:end="93:59">)</operator> <operator pos:start="93:61" pos:end="93:61">-</operator> <call pos:start="93:63" pos:end="93:87"><name pos:start="93:63" pos:end="93:72">SHOW_SBITS</name><argument_list pos:start="93:73" pos:end="93:87">(<argument pos:start="93:74" pos:end="93:75"><expr pos:start="93:74" pos:end="93:75"><name pos:start="93:74" pos:end="93:75">re</name></expr></argument>, <argument pos:start="93:78" pos:end="93:83"><expr pos:start="93:78" pos:end="93:83"><operator pos:start="93:78" pos:end="93:78">&amp;</operator><name pos:start="93:79" pos:end="93:83"><name pos:start="93:79" pos:end="93:79">s</name><operator pos:start="93:80" pos:end="93:81">-&gt;</operator><name pos:start="93:82" pos:end="93:83">gb</name></name></expr></argument>, <argument pos:start="93:86" pos:end="93:86"><expr pos:start="93:86" pos:end="93:86"><literal type="number" pos:start="93:86" pos:end="93:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:46"><expr pos:start="95:17" pos:end="95:45"><call pos:start="95:17" pos:end="95:45"><name pos:start="95:17" pos:end="95:30">LAST_SKIP_BITS</name><argument_list pos:start="95:31" pos:end="95:45">(<argument pos:start="95:32" pos:end="95:33"><expr pos:start="95:32" pos:end="95:33"><name pos:start="95:32" pos:end="95:33">re</name></expr></argument>, <argument pos:start="95:36" pos:end="95:41"><expr pos:start="95:36" pos:end="95:41"><operator pos:start="95:36" pos:end="95:36">&amp;</operator><name pos:start="95:37" pos:end="95:41"><name pos:start="95:37" pos:end="95:37">s</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:41">gb</name></name></expr></argument>, <argument pos:start="95:44" pos:end="95:44"><expr pos:start="95:44" pos:end="95:44"><literal type="number" pos:start="95:44" pos:end="95:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="123:13">else <block pos:start="97:20" pos:end="123:13">{<block_content pos:start="101:17" pos:end="121:17">

                <comment type="block" pos:start="99:17" pos:end="99:28">/* escape */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:52"><expr pos:start="101:17" pos:end="101:51"><name pos:start="101:17" pos:end="101:19">run</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <call pos:start="101:23" pos:end="101:47"><name pos:start="101:23" pos:end="101:32">SHOW_UBITS</name><argument_list pos:start="101:33" pos:end="101:47">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">re</name></expr></argument>, <argument pos:start="101:38" pos:end="101:43"><expr pos:start="101:38" pos:end="101:43"><operator pos:start="101:38" pos:end="101:38">&amp;</operator><name pos:start="101:39" pos:end="101:43"><name pos:start="101:39" pos:end="101:39">s</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:43">gb</name></name></expr></argument>, <argument pos:start="101:46" pos:end="101:46"><expr pos:start="101:46" pos:end="101:46"><literal type="number" pos:start="101:46" pos:end="101:46">6</literal></expr></argument>)</argument_list></call> <operator pos:start="101:49" pos:end="101:49">+</operator> <literal type="number" pos:start="101:51" pos:end="101:51">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="101:54" pos:end="101:83"><expr pos:start="101:54" pos:end="101:82"><call pos:start="101:54" pos:end="101:82"><name pos:start="101:54" pos:end="101:67">LAST_SKIP_BITS</name><argument_list pos:start="101:68" pos:end="101:82">(<argument pos:start="101:69" pos:end="101:70"><expr pos:start="101:69" pos:end="101:70"><name pos:start="101:69" pos:end="101:70">re</name></expr></argument>, <argument pos:start="101:73" pos:end="101:78"><expr pos:start="101:73" pos:end="101:78"><operator pos:start="101:73" pos:end="101:73">&amp;</operator><name pos:start="101:74" pos:end="101:78"><name pos:start="101:74" pos:end="101:74">s</name><operator pos:start="101:75" pos:end="101:76">-&gt;</operator><name pos:start="101:77" pos:end="101:78">gb</name></name></expr></argument>, <argument pos:start="101:81" pos:end="101:81"><expr pos:start="101:81" pos:end="101:81"><literal type="number" pos:start="101:81" pos:end="101:81">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:41"><expr pos:start="103:17" pos:end="103:40"><call pos:start="103:17" pos:end="103:40"><name pos:start="103:17" pos:end="103:28">UPDATE_CACHE</name><argument_list pos:start="103:29" pos:end="103:40">(<argument pos:start="103:30" pos:end="103:31"><expr pos:start="103:30" pos:end="103:31"><name pos:start="103:30" pos:end="103:31">re</name></expr></argument>, <argument pos:start="103:34" pos:end="103:39"><expr pos:start="103:34" pos:end="103:39"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:39"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:51"><expr pos:start="105:17" pos:end="105:50"><name pos:start="105:17" pos:end="105:21">level</name> <operator pos:start="105:23" pos:end="105:23">=</operator> <call pos:start="105:25" pos:end="105:50"><name pos:start="105:25" pos:end="105:34">SHOW_SBITS</name><argument_list pos:start="105:35" pos:end="105:50">(<argument pos:start="105:36" pos:end="105:37"><expr pos:start="105:36" pos:end="105:37"><name pos:start="105:36" pos:end="105:37">re</name></expr></argument>, <argument pos:start="105:40" pos:end="105:45"><expr pos:start="105:40" pos:end="105:45"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:45"><name pos:start="105:41" pos:end="105:41">s</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:45">gb</name></name></expr></argument>, <argument pos:start="105:48" pos:end="105:49"><expr pos:start="105:48" pos:end="105:49"><literal type="number" pos:start="105:48" pos:end="105:49">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="105:53" pos:end="105:78"><expr pos:start="105:53" pos:end="105:77"><call pos:start="105:53" pos:end="105:77"><name pos:start="105:53" pos:end="105:61">SKIP_BITS</name><argument_list pos:start="105:62" pos:end="105:77">(<argument pos:start="105:63" pos:end="105:64"><expr pos:start="105:63" pos:end="105:64"><name pos:start="105:63" pos:end="105:64">re</name></expr></argument>, <argument pos:start="105:67" pos:end="105:72"><expr pos:start="105:67" pos:end="105:72"><operator pos:start="105:67" pos:end="105:67">&amp;</operator><name pos:start="105:68" pos:end="105:72"><name pos:start="105:68" pos:end="105:68">s</name><operator pos:start="105:69" pos:end="105:70">-&gt;</operator><name pos:start="105:71" pos:end="105:72">gb</name></name></expr></argument>, <argument pos:start="105:75" pos:end="105:76"><expr pos:start="105:75" pos:end="105:76"><literal type="number" pos:start="105:75" pos:end="105:76">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:25"><expr pos:start="107:17" pos:end="107:24"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:20">+=</operator> <name pos:start="107:22" pos:end="107:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:34"><expr pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:17">j</name>  <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:33"><name pos:start="109:22" pos:end="109:30">scantable</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><name pos:start="109:32" pos:end="109:32">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="111:17" pos:end="121:17"><if pos:start="111:17" pos:end="117:17">if <condition pos:start="111:20" pos:end="111:30">(<expr pos:start="111:21" pos:end="111:29"><name pos:start="111:21" pos:end="111:25">level</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <literal type="number" pos:start="111:29" pos:end="111:29">0</literal></expr>)</condition> <block pos:start="111:32" pos:end="117:17">{<block_content pos:start="113:21" pos:end="115:35">

                    <expr_stmt pos:start="113:21" pos:end="113:69"><expr pos:start="113:21" pos:end="113:68"><name pos:start="113:21" pos:end="113:25">level</name> <operator pos:start="113:27" pos:end="113:27">=</operator> <operator pos:start="113:29" pos:end="113:29">(</operator><operator pos:start="113:30" pos:end="113:30">-</operator><name pos:start="113:31" pos:end="113:35">level</name> <operator pos:start="113:37" pos:end="113:37">*</operator> <name pos:start="113:39" pos:end="113:44">qscale</name> <operator pos:start="113:46" pos:end="113:46">*</operator> <name pos:start="113:48" pos:end="113:62"><name pos:start="113:48" pos:end="113:59">quant_matrix</name><index pos:start="113:60" pos:end="113:62">[<expr pos:start="113:61" pos:end="113:61"><name pos:start="113:61" pos:end="113:61">j</name></expr>]</index></name><operator pos:start="113:63" pos:end="113:63">)</operator> <operator pos:start="113:65" pos:end="113:66">&gt;&gt;</operator> <literal type="number" pos:start="113:68" pos:end="113:68">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:35"><expr pos:start="115:21" pos:end="115:34"><name pos:start="115:21" pos:end="115:25">level</name> <operator pos:start="115:27" pos:end="115:27">=</operator> <operator pos:start="115:29" pos:end="115:29">-</operator><name pos:start="115:30" pos:end="115:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="117:19" pos:end="121:17">else <block pos:start="117:24" pos:end="121:17">{<block_content pos:start="119:21" pos:end="119:68">

                    <expr_stmt pos:start="119:21" pos:end="119:68"><expr pos:start="119:21" pos:end="119:67"><name pos:start="119:21" pos:end="119:25">level</name> <operator pos:start="119:27" pos:end="119:27">=</operator> <operator pos:start="119:29" pos:end="119:29">(</operator><name pos:start="119:30" pos:end="119:34">level</name> <operator pos:start="119:36" pos:end="119:36">*</operator> <name pos:start="119:38" pos:end="119:43">qscale</name> <operator pos:start="119:45" pos:end="119:45">*</operator> <name pos:start="119:47" pos:end="119:61"><name pos:start="119:47" pos:end="119:58">quant_matrix</name><index pos:start="119:59" pos:end="119:61">[<expr pos:start="119:60" pos:end="119:60"><name pos:start="119:60" pos:end="119:60">j</name></expr>]</index></name><operator pos:start="119:62" pos:end="119:62">)</operator> <operator pos:start="119:64" pos:end="119:65">&gt;&gt;</operator> <literal type="number" pos:start="119:67" pos:end="119:67">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="125:13" pos:end="131:13"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:23">(<expr pos:start="125:17" pos:end="125:22"><name pos:start="125:17" pos:end="125:17">i</name> <operator pos:start="125:19" pos:end="125:19">&gt;</operator> <literal type="number" pos:start="125:21" pos:end="125:22">63</literal></expr>)</condition> <block pos:start="125:25" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:26">

                <expr_stmt pos:start="127:17" pos:end="127:94"><expr pos:start="127:17" pos:end="127:93"><call pos:start="127:17" pos:end="127:93"><name pos:start="127:17" pos:end="127:22">av_log</name><argument_list pos:start="127:23" pos:end="127:93">(<argument pos:start="127:24" pos:end="127:31"><expr pos:start="127:24" pos:end="127:31"><name pos:start="127:24" pos:end="127:31"><name pos:start="127:24" pos:end="127:24">s</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:31">avctx</name></name></expr></argument>, <argument pos:start="127:34" pos:end="127:45"><expr pos:start="127:34" pos:end="127:45"><name pos:start="127:34" pos:end="127:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="127:48" pos:end="127:74"><expr pos:start="127:48" pos:end="127:74"><literal type="string" pos:start="127:48" pos:end="127:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="127:77" pos:end="127:83"><expr pos:start="127:77" pos:end="127:83"><name pos:start="127:77" pos:end="127:83"><name pos:start="127:77" pos:end="127:77">s</name><operator pos:start="127:78" pos:end="127:79">-&gt;</operator><name pos:start="127:80" pos:end="127:83">mb_x</name></name></expr></argument>, <argument pos:start="127:86" pos:end="127:92"><expr pos:start="127:86" pos:end="127:92"><name pos:start="127:86" pos:end="127:92"><name pos:start="127:86" pos:end="127:86">s</name><operator pos:start="127:87" pos:end="127:88">-&gt;</operator><name pos:start="127:89" pos:end="127:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="129:17" pos:end="129:26">return <expr pos:start="129:24" pos:end="129:25"><operator pos:start="129:24" pos:end="129:24">-</operator><literal type="number" pos:start="129:25" pos:end="129:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:20">mismatch</name> <operator pos:start="135:22" pos:end="135:23">^=</operator> <name pos:start="135:25" pos:end="135:29">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:30"><expr pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:20"><name pos:start="137:13" pos:end="137:17">block</name><index pos:start="137:18" pos:end="137:20">[<expr pos:start="137:19" pos:end="137:19"><name pos:start="137:19" pos:end="137:19">j</name></expr>]</index></name>  <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:29">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="141:9" pos:end="141:33"><expr pos:start="141:9" pos:end="141:32"><call pos:start="141:9" pos:end="141:32"><name pos:start="141:9" pos:end="141:20">CLOSE_READER</name><argument_list pos:start="141:21" pos:end="141:32">(<argument pos:start="141:22" pos:end="141:23"><expr pos:start="141:22" pos:end="141:23"><name pos:start="141:22" pos:end="141:23">re</name></expr></argument>, <argument pos:start="141:26" pos:end="141:31"><expr pos:start="141:26" pos:end="141:31"><operator pos:start="141:26" pos:end="141:26">&amp;</operator><name pos:start="141:27" pos:end="141:31"><name pos:start="141:27" pos:end="141:27">s</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:13"><name pos:start="145:5" pos:end="145:9">block</name><index pos:start="145:10" pos:end="145:13">[<expr pos:start="145:11" pos:end="145:12"><literal type="number" pos:start="145:11" pos:end="145:12">63</literal></expr>]</index></name> <operator pos:start="145:15" pos:end="145:16">^=</operator> <name pos:start="145:18" pos:end="145:25">mismatch</name> <operator pos:start="145:27" pos:end="145:27">&amp;</operator> <literal type="number" pos:start="145:29" pos:end="145:29">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="149:5" pos:end="149:31"><expr pos:start="149:5" pos:end="149:30"><name pos:start="149:5" pos:end="149:26"><name pos:start="149:5" pos:end="149:5">s</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:23">block_last_index</name><index pos:start="149:24" pos:end="149:26">[<expr pos:start="149:25" pos:end="149:25"><name pos:start="149:25" pos:end="149:25">n</name></expr>]</index></name> <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:30">i</name></expr>;</expr_stmt>

    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
