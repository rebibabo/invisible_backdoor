<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12266.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">acpi_load_old</name><parameter_list pos:start="1:25" pos:end="1:67">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:33">QEMUFile</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">f</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:66"><decl pos:start="1:53" pos:end="1:66"><type pos:start="1:53" pos:end="1:66"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:66">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:15">

    <decl_stmt pos:start="5:5" pos:end="5:29"><decl pos:start="5:5" pos:end="5:28"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PIIX4PMState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:28">= <expr pos:start="5:23" pos:end="5:28"><name pos:start="5:23" pos:end="5:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">temp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:37"><name pos:start="13:11" pos:end="13:25">pci_device_load</name><argument_list pos:start="13:26" pos:end="13:37">(<argument pos:start="13:27" pos:end="13:33"><expr pos:start="13:27" pos:end="13:33"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">dev</name></name></expr></argument>, <argument pos:start="13:36" pos:end="13:36"><expr pos:start="13:36" pos:end="13:36"><name pos:start="13:36" pos:end="13:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:13">&lt;</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>)</condition> <block pos:start="15:18" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:18">qemu_get_be16s</name><argument_list pos:start="21:19" pos:end="21:41">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">f</name></expr></argument>, <argument pos:start="21:23" pos:end="21:40"><expr pos:start="21:23" pos:end="21:40"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:40"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">ar</name><operator pos:start="21:29" pos:end="21:29">.</operator><name pos:start="21:30" pos:end="21:32">pm1</name><operator pos:start="21:33" pos:end="21:33">.</operator><name pos:start="21:34" pos:end="21:36">evt</name><operator pos:start="21:37" pos:end="21:37">.</operator><name pos:start="21:38" pos:end="21:40">sts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><call pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:18">qemu_get_be16s</name><argument_list pos:start="23:19" pos:end="23:40">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">f</name></expr></argument>, <argument pos:start="23:23" pos:end="23:39"><expr pos:start="23:23" pos:end="23:39"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:39"><name pos:start="23:24" pos:end="23:24">s</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:28">ar</name><operator pos:start="23:29" pos:end="23:29">.</operator><name pos:start="23:30" pos:end="23:32">pm1</name><operator pos:start="23:33" pos:end="23:33">.</operator><name pos:start="23:34" pos:end="23:36">evt</name><operator pos:start="23:37" pos:end="23:37">.</operator><name pos:start="23:38" pos:end="23:39">en</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><call pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:18">qemu_get_be16s</name><argument_list pos:start="25:19" pos:end="25:41">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">f</name></expr></argument>, <argument pos:start="25:23" pos:end="25:40"><expr pos:start="25:23" pos:end="25:40"><operator pos:start="25:23" pos:end="25:23">&amp;</operator><name pos:start="25:24" pos:end="25:40"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">ar</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:32">pm1</name><operator pos:start="25:33" pos:end="25:33">.</operator><name pos:start="25:34" pos:end="25:36">cnt</name><operator pos:start="25:37" pos:end="25:37">.</operator><name pos:start="25:38" pos:end="25:40">cnt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:57"><expr pos:start="29:5" pos:end="29:56"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:56"><name pos:start="29:11" pos:end="29:28">vmstate_load_state</name><argument_list pos:start="29:29" pos:end="29:56">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">f</name></expr></argument>, <argument pos:start="29:33" pos:end="29:44"><expr pos:start="29:33" pos:end="29:44"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:44">vmstate_apm</name></expr></argument>, <argument pos:start="29:47" pos:end="29:52"><expr pos:start="29:47" pos:end="29:52"><name pos:start="29:47" pos:end="29:52">opaque</name></expr></argument>, <argument pos:start="29:55" pos:end="29:55"><expr pos:start="29:55" pos:end="29:55"><literal type="number" pos:start="29:55" pos:end="29:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">ret</name></expr>)</condition> <block pos:start="31:14" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><call pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:18">qemu_get_timer</name><argument_list pos:start="39:19" pos:end="39:38">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">f</name></expr></argument>, <argument pos:start="39:23" pos:end="39:37"><expr pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:27">ar</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:31">tmr</name><operator pos:start="39:32" pos:end="39:32">.</operator><name pos:start="39:33" pos:end="39:37">timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><call pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:19">qemu_get_sbe64s</name><argument_list pos:start="41:20" pos:end="41:48">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">f</name></expr></argument>, <argument pos:start="41:24" pos:end="41:47"><expr pos:start="41:24" pos:end="41:47"><operator pos:start="41:24" pos:end="41:24">&amp;</operator><name pos:start="41:25" pos:end="41:47"><name pos:start="41:25" pos:end="41:25">s</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">ar</name><operator pos:start="41:30" pos:end="41:30">.</operator><name pos:start="41:31" pos:end="41:33">tmr</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:47">overflow_time</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><call pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:18">qemu_get_be16s</name><argument_list pos:start="45:19" pos:end="45:48">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">f</name></expr></argument>, <argument pos:start="45:23" pos:end="45:47"><expr pos:start="45:23" pos:end="45:47"><operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:31">uint16_t</name> <operator pos:start="45:33" pos:end="45:33">*</operator><operator pos:start="45:34" pos:end="45:34">)</operator><name pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:39">ar</name><operator pos:start="45:40" pos:end="45:40">.</operator><name pos:start="45:41" pos:end="45:43">gpe</name><operator pos:start="45:44" pos:end="45:44">.</operator><name pos:start="45:45" pos:end="45:47">sts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="47:5" pos:end="51:5">for <control pos:start="47:9" pos:end="47:27">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:21"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <literal type="number" pos:start="47:21" pos:end="47:21">3</literal></expr>;</condition> <incr pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:24">i</name><operator pos:start="47:25" pos:end="47:26">++</operator></expr></incr>)</control> <block pos:start="47:29" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:33">

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><call pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:22">qemu_get_be16s</name><argument_list pos:start="49:23" pos:end="49:32">(<argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">f</name></expr></argument>, <argument pos:start="49:27" pos:end="49:31"><expr pos:start="49:27" pos:end="49:31"><operator pos:start="49:27" pos:end="49:27">&amp;</operator><name pos:start="49:28" pos:end="49:31">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><call pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:18">qemu_get_be16s</name><argument_list pos:start="55:19" pos:end="55:47">(<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">f</name></expr></argument>, <argument pos:start="55:23" pos:end="55:46"><expr pos:start="55:23" pos:end="55:46"><operator pos:start="55:23" pos:end="55:23">(</operator><name pos:start="55:24" pos:end="55:31">uint16_t</name> <operator pos:start="55:33" pos:end="55:33">*</operator><operator pos:start="55:34" pos:end="55:34">)</operator><name pos:start="55:35" pos:end="55:46"><name pos:start="55:35" pos:end="55:35">s</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:39">ar</name><operator pos:start="55:40" pos:end="55:40">.</operator><name pos:start="55:41" pos:end="55:43">gpe</name><operator pos:start="55:44" pos:end="55:44">.</operator><name pos:start="55:45" pos:end="55:46">en</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="61:5">for <control pos:start="57:9" pos:end="57:27">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">3</literal></expr>;</condition> <incr pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:24">i</name><operator pos:start="57:25" pos:end="57:26">++</operator></expr></incr>)</control> <block pos:start="57:29" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:33">

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:22">qemu_get_be16s</name><argument_list pos:start="59:23" pos:end="59:32">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">f</name></expr></argument>, <argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:31">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="65:5" pos:end="65:64"><expr pos:start="65:5" pos:end="65:63"><name pos:start="65:5" pos:end="65:7">ret</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <call pos:start="65:11" pos:end="65:63"><name pos:start="65:11" pos:end="65:28">vmstate_load_state</name><argument_list pos:start="65:29" pos:end="65:63">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><name pos:start="65:30" pos:end="65:30">f</name></expr></argument>, <argument pos:start="65:33" pos:end="65:51"><expr pos:start="65:33" pos:end="65:51"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:51">vmstate_pci_status</name></expr></argument>, <argument pos:start="65:54" pos:end="65:59"><expr pos:start="65:54" pos:end="65:59"><name pos:start="65:54" pos:end="65:59">opaque</name></expr></argument>, <argument pos:start="65:62" pos:end="65:62"><expr pos:start="65:62" pos:end="65:62"><literal type="number" pos:start="65:62" pos:end="65:62">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
