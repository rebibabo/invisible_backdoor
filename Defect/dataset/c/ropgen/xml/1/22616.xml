<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22616.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">sad16_altivec</name><parameter_list pos:start="1:25" pos:end="1:85">(<parameter pos:start="1:26" pos:end="1:32"><decl pos:start="1:26" pos:end="1:32"><type pos:start="1:26" pos:end="1:32"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:32">v</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:41">uint8_t</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">pix1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">pix2</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:77"><decl pos:start="1:65" pos:end="1:77"><type pos:start="1:65" pos:end="1:77"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:77">line_size</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:84"><decl pos:start="1:80" pos:end="1:84"><type pos:start="1:80" pos:end="1:84"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:84">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:81"><decl pos:start="9:5" pos:end="9:80"><type pos:start="9:5" pos:end="9:29"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:16">vector</name> <name pos:start="9:18" pos:end="9:25">unsigned</name> <name pos:start="9:27" pos:end="9:29">int</name></type> <name pos:start="9:31" pos:end="9:34">zero</name> <init pos:start="9:36" pos:end="9:80">= <expr pos:start="9:38" pos:end="9:80"><operator pos:start="9:38" pos:end="9:38">(</operator><specifier pos:start="9:39" pos:end="9:43">const</specifier> <name pos:start="9:45" pos:end="9:50">vector</name> <name pos:start="9:52" pos:end="9:59">unsigned</name> <name pos:start="9:61" pos:end="9:63">int</name><operator pos:start="9:64" pos:end="9:64">)</operator><call pos:start="9:65" pos:end="9:80"><name pos:start="9:65" pos:end="9:77">vec_splat_u32</name><argument_list pos:start="9:78" pos:end="9:80">(<argument pos:start="9:79" pos:end="9:79"><expr pos:start="9:79" pos:end="9:79"><literal type="number" pos:start="9:79" pos:end="9:79">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:10">vector</name> <name pos:start="11:12" pos:end="11:19">unsigned</name> <name pos:start="11:21" pos:end="11:24">char</name></type> <name pos:start="11:26" pos:end="11:30">perm1</name></decl>, <decl pos:start="11:33" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:24"/><name pos:start="11:33" pos:end="11:37">perm2</name></decl>, <decl pos:start="11:40" pos:end="11:45"><type ref="prev" pos:start="11:5" pos:end="11:24"><modifier pos:start="11:40" pos:end="11:40">*</modifier></type><name pos:start="11:41" pos:end="11:45">pix1v</name></decl>, <decl pos:start="11:48" pos:end="11:53"><type ref="prev" pos:start="11:5" pos:end="11:24"><modifier pos:start="11:48" pos:end="11:48">*</modifier></type><name pos:start="11:49" pos:end="11:53">pix2v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:43"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:10">vector</name> <name pos:start="13:12" pos:end="13:19">unsigned</name> <name pos:start="13:21" pos:end="13:24">char</name></type> <name pos:start="13:26" pos:end="13:27">t1</name></decl>, <decl pos:start="13:30" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:24"/><name pos:start="13:30" pos:end="13:31">t2</name></decl>, <decl pos:start="13:34" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:24"/><name pos:start="13:34" pos:end="13:35">t3</name></decl>,<decl pos:start="13:37" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:24"/><name pos:start="13:37" pos:end="13:38">t4</name></decl>, <decl pos:start="13:41" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:24"/><name pos:start="13:41" pos:end="13:42">t5</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">vector</name> <name pos:start="15:12" pos:end="15:19">unsigned</name> <name pos:start="15:21" pos:end="15:23">int</name></type> <name pos:start="15:25" pos:end="15:27">sad</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">vector</name> <name pos:start="17:12" pos:end="17:17">signed</name> <name pos:start="17:19" pos:end="17:21">int</name></type> <name pos:start="17:23" pos:end="17:30">sumdiffs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:48"><expr pos:start="21:5" pos:end="21:47"><name pos:start="21:5" pos:end="21:7">sad</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator><name pos:start="21:12" pos:end="21:17">vector</name> <name pos:start="21:19" pos:end="21:26">unsigned</name> <name pos:start="21:28" pos:end="21:30">int</name><operator pos:start="21:31" pos:end="21:31">)</operator><call pos:start="21:32" pos:end="21:47"><name pos:start="21:32" pos:end="21:44">vec_splat_u32</name><argument_list pos:start="21:45" pos:end="21:47">(<argument pos:start="21:46" pos:end="21:46"><expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <for pos:start="27:5" pos:end="65:5">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">i</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">i</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:21">h</name></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">i</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control> <block pos:start="27:29" pos:end="65:5">{<block_content pos:start="31:9" pos:end="63:26">

        <comment type="block" pos:start="29:9" pos:end="29:62">/* Read potentially unaligned pixels into t1 and t2 */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:13">perm1</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:33"><name pos:start="31:17" pos:end="31:24">vec_lvsl</name><argument_list pos:start="31:25" pos:end="31:33">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr></argument>, <argument pos:start="31:29" pos:end="31:32"><expr pos:start="31:29" pos:end="31:32"><name pos:start="31:29" pos:end="31:32">pix1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:13">pix1v</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <operator pos:start="33:17" pos:end="33:17">(</operator><name pos:start="33:18" pos:end="33:23">vector</name> <name pos:start="33:25" pos:end="33:32">unsigned</name> <name pos:start="33:34" pos:end="33:37">char</name> <operator pos:start="33:39" pos:end="33:39">*</operator><operator pos:start="33:40" pos:end="33:40">)</operator> <name pos:start="33:42" pos:end="33:45">pix1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:13">perm2</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:24">vec_lvsl</name><argument_list pos:start="35:25" pos:end="35:33">(<argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr></argument>, <argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">pix2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:13">pix2v</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:23">vector</name> <name pos:start="37:25" pos:end="37:32">unsigned</name> <name pos:start="37:34" pos:end="37:37">char</name> <operator pos:start="37:39" pos:end="37:39">*</operator><operator pos:start="37:40" pos:end="37:40">)</operator> <name pos:start="37:42" pos:end="37:45">pix2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:10">t1</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:48"><name pos:start="39:14" pos:end="39:21">vec_perm</name><argument_list pos:start="39:22" pos:end="39:48">(<argument pos:start="39:23" pos:end="39:30"><expr pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:30"><name pos:start="39:23" pos:end="39:27">pix1v</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:37">pix1v</name><index pos:start="39:38" pos:end="39:40">[<expr pos:start="39:39" pos:end="39:39"><literal type="number" pos:start="39:39" pos:end="39:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:43" pos:end="39:47"><expr pos:start="39:43" pos:end="39:47"><name pos:start="39:43" pos:end="39:47">perm1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:10">t2</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <call pos:start="41:14" pos:end="41:48"><name pos:start="41:14" pos:end="41:21">vec_perm</name><argument_list pos:start="41:22" pos:end="41:48">(<argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:27">pix2v</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:33" pos:end="41:40"><expr pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:37">pix2v</name><index pos:start="41:38" pos:end="41:40">[<expr pos:start="41:39" pos:end="41:39"><literal type="number" pos:start="41:39" pos:end="41:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:43" pos:end="41:47"><expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:47">perm2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="45:9" pos:end="45:55">/* Calculate a sum of abs differences vector */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:10">t3</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <call pos:start="47:14" pos:end="47:28"><name pos:start="47:14" pos:end="47:20">vec_max</name><argument_list pos:start="47:21" pos:end="47:28">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">t1</name></expr></argument>, <argument pos:start="47:26" pos:end="47:27"><expr pos:start="47:26" pos:end="47:27"><name pos:start="47:26" pos:end="47:27">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:10">t4</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:28"><name pos:start="49:14" pos:end="49:20">vec_min</name><argument_list pos:start="49:21" pos:end="49:28">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">t1</name></expr></argument>, <argument pos:start="49:26" pos:end="49:27"><expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:10">t5</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <call pos:start="51:14" pos:end="51:28"><name pos:start="51:14" pos:end="51:20">vec_sub</name><argument_list pos:start="51:21" pos:end="51:28">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">t3</name></expr></argument>, <argument pos:start="51:26" pos:end="51:27"><expr pos:start="51:26" pos:end="51:27"><name pos:start="51:26" pos:end="51:27">t4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="55:9" pos:end="55:72">/* Add each 4 pixel group together and put 4 results into sad */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:11">sad</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:32"><name pos:start="57:15" pos:end="57:23">vec_sum4s</name><argument_list pos:start="57:24" pos:end="57:32">(<argument pos:start="57:25" pos:end="57:26"><expr pos:start="57:25" pos:end="57:26"><name pos:start="57:25" pos:end="57:26">t5</name></expr></argument>, <argument pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:31">sad</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:12">pix1</name> <operator pos:start="61:14" pos:end="61:15">+=</operator> <name pos:start="61:17" pos:end="61:25">line_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:12">pix2</name> <operator pos:start="63:14" pos:end="63:15">+=</operator> <name pos:start="63:17" pos:end="63:25">line_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="69:5" pos:end="69:65">/* Sum up the four partial sums, and put the result into s */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:75"><expr pos:start="71:5" pos:end="71:74"><name pos:start="71:5" pos:end="71:12">sumdiffs</name> <operator pos:start="71:14" pos:end="71:14">=</operator> <call pos:start="71:16" pos:end="71:74"><name pos:start="71:16" pos:end="71:23">vec_sums</name><argument_list pos:start="71:24" pos:end="71:74">(<argument pos:start="71:25" pos:end="71:47"><expr pos:start="71:25" pos:end="71:47"><operator pos:start="71:25" pos:end="71:25">(</operator><name pos:start="71:26" pos:end="71:31">vector</name> <name pos:start="71:33" pos:end="71:38">signed</name> <name pos:start="71:40" pos:end="71:42">int</name><operator pos:start="71:43" pos:end="71:43">)</operator> <name pos:start="71:45" pos:end="71:47">sad</name></expr></argument>, <argument pos:start="71:50" pos:end="71:73"><expr pos:start="71:50" pos:end="71:73"><operator pos:start="71:50" pos:end="71:50">(</operator><name pos:start="71:51" pos:end="71:56">vector</name> <name pos:start="71:58" pos:end="71:63">signed</name> <name pos:start="71:65" pos:end="71:67">int</name><operator pos:start="71:68" pos:end="71:68">)</operator> <name pos:start="71:70" pos:end="71:73">zero</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:38"><expr pos:start="73:5" pos:end="73:37"><name pos:start="73:5" pos:end="73:12">sumdiffs</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:37"><name pos:start="73:16" pos:end="73:24">vec_splat</name><argument_list pos:start="73:25" pos:end="73:37">(<argument pos:start="73:26" pos:end="73:33"><expr pos:start="73:26" pos:end="73:33"><name pos:start="73:26" pos:end="73:33">sumdiffs</name></expr></argument>, <argument pos:start="73:36" pos:end="73:36"><expr pos:start="73:36" pos:end="73:36"><literal type="number" pos:start="73:36" pos:end="73:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><call pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:11">vec_ste</name><argument_list pos:start="75:12" pos:end="75:28">(<argument pos:start="75:13" pos:end="75:20"><expr pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:20">sumdiffs</name></expr></argument>, <argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr></argument>, <argument pos:start="75:26" pos:end="75:27"><expr pos:start="75:26" pos:end="75:27"><operator pos:start="75:26" pos:end="75:26">&amp;</operator><name pos:start="75:27" pos:end="75:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><name pos:start="79:12" pos:end="79:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
