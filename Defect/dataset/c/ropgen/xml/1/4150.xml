<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4150.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">megasas_ld_get_info_submit</name><parameter_list pos:start="1:38" pos:end="3:54">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:48">SCSIDevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">sdev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">lun</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:53"><decl pos:start="3:39" pos:end="3:53"><type pos:start="3:39" pos:end="3:53"><name pos:start="3:39" pos:end="3:48">MegasasCmd</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:23">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">mfi_ld_info</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">info</name> <init pos:start="7:30" pos:end="7:43">= <expr pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:34">cmd</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:43">iov_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:20">dcmd_size</name> <init pos:start="9:22" pos:end="9:49">= <expr pos:start="9:24" pos:end="9:49"><sizeof pos:start="9:24" pos:end="9:49">sizeof<argument_list pos:start="9:30" pos:end="9:49">(<argument pos:start="9:31" pos:end="9:48"><expr pos:start="9:31" pos:end="9:48">struct <name pos:start="9:38" pos:end="9:48">mfi_ld_info</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:15">cdb</name><index pos:start="11:16" pos:end="11:18">[<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">SCSIRequest</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">ssize_t</name></type> <name pos:start="15:13" pos:end="15:15">len</name></decl>, <decl pos:start="15:18" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:18" pos:end="15:22">resid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:63"><decl pos:start="17:5" pos:end="17:62"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint16_t</name></type> <name pos:start="17:14" pos:end="17:20">sdev_id</name> <init pos:start="17:22" pos:end="17:62">= <expr pos:start="17:24" pos:end="17:62"><operator pos:start="17:24" pos:end="17:24">(</operator><operator pos:start="17:25" pos:end="17:25">(</operator><name pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:29">sdev</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:33">id</name></name> <operator pos:start="17:35" pos:end="17:35">&amp;</operator> <literal type="number" pos:start="17:37" pos:end="17:40">0xFF</literal><operator pos:start="17:41" pos:end="17:41">)</operator> <operator pos:start="17:43" pos:end="17:44">&lt;&lt;</operator> <literal type="number" pos:start="17:46" pos:end="17:46">8</literal><operator pos:start="17:47" pos:end="17:47">)</operator> <operator pos:start="17:49" pos:end="17:49">|</operator> <operator pos:start="17:51" pos:end="17:51">(</operator><name pos:start="17:52" pos:end="17:54">lun</name> <operator pos:start="17:56" pos:end="17:56">&amp;</operator> <literal type="number" pos:start="17:58" pos:end="17:61">0xFF</literal><operator pos:start="17:62" pos:end="17:62">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:21"><decl pos:start="19:5" pos:end="19:20"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:20">ld_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="63:5"><if pos:start="23:5" pos:end="63:5">if <condition pos:start="23:8" pos:end="23:22">(<expr pos:start="23:9" pos:end="23:21"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:12">cmd</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:21">iov_buf</name></name></expr>)</condition> <block pos:start="23:24" pos:end="63:5">{<block_content pos:start="25:9" pos:end="61:39">

        <expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">cmd</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:20">iov_buf</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="25:43"><name pos:start="25:24" pos:end="25:32">g_malloc0</name><argument_list pos:start="25:33" pos:end="25:43">(<argument pos:start="25:34" pos:end="25:42"><expr pos:start="25:34" pos:end="25:42"><name pos:start="25:34" pos:end="25:42">dcmd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:12">info</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:18">cmd</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:27">iov_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:29">megasas_setup_inquiry</name><argument_list pos:start="29:30" pos:end="29:66">(<argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">cdb</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><literal type="number" pos:start="29:36" pos:end="29:39">0x83</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:65"><expr pos:start="29:42" pos:end="29:65"><sizeof pos:start="29:42" pos:end="29:65">sizeof<argument_list pos:start="29:48" pos:end="29:65">(<argument pos:start="29:49" pos:end="29:64"><expr pos:start="29:49" pos:end="29:64"><name pos:start="29:49" pos:end="29:64"><name pos:start="29:49" pos:end="29:52">info</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:64">vpd_page83</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:11">req</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:59"><name pos:start="31:15" pos:end="31:26">scsi_req_new</name><argument_list pos:start="31:27" pos:end="31:59">(<argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">sdev</name></expr></argument>, <argument pos:start="31:34" pos:end="31:43"><expr pos:start="31:34" pos:end="31:43"><name pos:start="31:34" pos:end="31:43"><name pos:start="31:34" pos:end="31:36">cmd</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:43">index</name></name></expr></argument>, <argument pos:start="31:46" pos:end="31:48"><expr pos:start="31:46" pos:end="31:48"><name pos:start="31:46" pos:end="31:48">lun</name></expr></argument>, <argument pos:start="31:51" pos:end="31:53"><expr pos:start="31:51" pos:end="31:53"><name pos:start="31:51" pos:end="31:53">cdb</name></expr></argument>, <argument pos:start="31:56" pos:end="31:58"><expr pos:start="31:56" pos:end="31:58"><name pos:start="31:56" pos:end="31:58">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="45:9"><if pos:start="33:9" pos:end="45:9">if <condition pos:start="33:12" pos:end="33:17">(<expr pos:start="33:13" pos:end="33:16"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:16">req</name></expr>)</condition> <block pos:start="33:19" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:45">

            <expr_stmt pos:start="35:13" pos:end="37:75"><expr pos:start="35:13" pos:end="37:74"><call pos:start="35:13" pos:end="37:74"><name pos:start="35:13" pos:end="35:47">trace_megasas_dcmd_req_alloc_failed</name><argument_list pos:start="35:48" pos:end="37:74">(<argument pos:start="35:49" pos:end="35:58"><expr pos:start="35:49" pos:end="35:58"><name pos:start="35:49" pos:end="35:58"><name pos:start="35:49" pos:end="35:51">cmd</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:58">index</name></name></expr></argument>,

                                                <argument pos:start="37:49" pos:end="37:73"><expr pos:start="37:49" pos:end="37:73"><literal type="string" pos:start="37:49" pos:end="37:73">"LD get info vpd inquiry"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><call pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:18">g_free</name><argument_list pos:start="39:19" pos:end="39:32">(<argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:22">cmd</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:31">iov_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:32"><expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:15">cmd</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:24">iov_buf</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <name pos:start="41:28" pos:end="41:31">NULL</name></expr>;</expr_stmt>

            <return pos:start="43:13" pos:end="43:45">return <expr pos:start="43:20" pos:end="43:44"><name pos:start="43:20" pos:end="43:44">MFI_STAT_FLASH_ALLOC_FAIL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:75"><expr pos:start="47:9" pos:end="49:74"><call pos:start="47:9" pos:end="49:74"><name pos:start="47:9" pos:end="47:42">trace_megasas_dcmd_internal_submit</name><argument_list pos:start="47:43" pos:end="49:74">(<argument pos:start="47:44" pos:end="47:53"><expr pos:start="47:44" pos:end="47:53"><name pos:start="47:44" pos:end="47:53"><name pos:start="47:44" pos:end="47:46">cmd</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:53">index</name></name></expr></argument>,

                                           <argument pos:start="49:44" pos:end="49:68"><expr pos:start="49:44" pos:end="49:68"><literal type="string" pos:start="49:44" pos:end="49:68">"LD get info vpd inquiry"</literal></expr></argument>, <argument pos:start="49:71" pos:end="49:73"><expr pos:start="49:71" pos:end="49:73"><name pos:start="49:71" pos:end="49:73">lun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:36"><expr pos:start="51:9" pos:end="51:35"><name pos:start="51:9" pos:end="51:11">len</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:35"><name pos:start="51:15" pos:end="51:30">scsi_req_enqueue</name><argument_list pos:start="51:31" pos:end="51:35">(<argument pos:start="51:32" pos:end="51:34"><expr pos:start="51:32" pos:end="51:34"><name pos:start="51:32" pos:end="51:34">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if <condition pos:start="53:12" pos:end="53:20">(<expr pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:15">len</name> <operator pos:start="53:17" pos:end="53:17">&gt;</operator> <literal type="number" pos:start="53:19" pos:end="53:19">0</literal></expr>)</condition> <block pos:start="53:22" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:35">

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">cmd</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:25">iov_size</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:29">scsi_req_continue</name><argument_list pos:start="57:30" pos:end="57:34">(<argument pos:start="57:31" pos:end="57:33"><expr pos:start="57:31" pos:end="57:33"><name pos:start="57:31" pos:end="57:33">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="61:9" pos:end="61:39">return <expr pos:start="61:16" pos:end="61:38"><name pos:start="61:16" pos:end="61:38">MFI_STAT_INVALID_STATUS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:56"><expr pos:start="67:5" pos:end="67:55"><name pos:start="67:5" pos:end="67:32"><name pos:start="67:5" pos:end="67:8">info</name><operator pos:start="67:9" pos:end="67:10">-&gt;</operator><name pos:start="67:11" pos:end="67:19">ld_config</name><operator pos:start="67:20" pos:end="67:20">.</operator><name pos:start="67:21" pos:end="67:26">params</name><operator pos:start="67:27" pos:end="67:27">.</operator><name pos:start="67:28" pos:end="67:32">state</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:55">MFI_LD_STATE_OPTIMAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:52"><expr pos:start="69:5" pos:end="69:51"><name pos:start="69:5" pos:end="69:45"><name pos:start="69:5" pos:end="69:8">info</name><operator pos:start="69:9" pos:end="69:10">-&gt;</operator><name pos:start="69:11" pos:end="69:19">ld_config</name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:30">properties</name><operator pos:start="69:31" pos:end="69:31">.</operator><name pos:start="69:32" pos:end="69:33">ld</name><operator pos:start="69:34" pos:end="69:34">.</operator><name pos:start="69:35" pos:end="69:35">v</name><operator pos:start="69:36" pos:end="69:36">.</operator><name pos:start="69:37" pos:end="69:45">target_id</name></name> <operator pos:start="69:47" pos:end="69:47">=</operator> <name pos:start="69:49" pos:end="69:51">lun</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:43"><expr pos:start="71:5" pos:end="71:42"><name pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:8">info</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:19">ld_config</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:26">params</name><operator pos:start="71:27" pos:end="71:27">.</operator><name pos:start="71:28" pos:end="71:38">stripe_size</name></name> <operator pos:start="71:40" pos:end="71:40">=</operator> <literal type="number" pos:start="71:42" pos:end="71:42">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:37"><name pos:start="73:5" pos:end="73:8">info</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:19">ld_config</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:26">params</name><operator pos:start="73:27" pos:end="73:27">.</operator><name pos:start="73:28" pos:end="73:37">num_drives</name></name> <operator pos:start="73:39" pos:end="73:39">=</operator> <literal type="number" pos:start="73:41" pos:end="73:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:45"><expr pos:start="75:5" pos:end="75:44"><name pos:start="75:5" pos:end="75:40"><name pos:start="75:5" pos:end="75:8">info</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:19">ld_config</name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:26">params</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:40">is_consistent</name></name> <operator pos:start="75:42" pos:end="75:42">=</operator> <literal type="number" pos:start="75:44" pos:end="75:44">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:42">/* Logical device size is in blocks */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:47"><expr pos:start="79:5" pos:end="79:46"><call pos:start="79:5" pos:end="79:46"><name pos:start="79:5" pos:end="79:20">blk_get_geometry</name><argument_list pos:start="79:21" pos:end="79:46">(<argument pos:start="79:22" pos:end="79:35"><expr pos:start="79:22" pos:end="79:35"><name pos:start="79:22" pos:end="79:35"><name pos:start="79:22" pos:end="79:25">sdev</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:31">conf</name><operator pos:start="79:32" pos:end="79:32">.</operator><name pos:start="79:33" pos:end="79:35">blk</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:45"><expr pos:start="79:38" pos:end="79:45"><operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:45">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:8">info</name><operator pos:start="81:9" pos:end="81:10">-&gt;</operator><name pos:start="81:11" pos:end="81:14">size</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <call pos:start="81:18" pos:end="81:37"><name pos:start="81:18" pos:end="81:28">cpu_to_le64</name><argument_list pos:start="81:29" pos:end="81:37">(<argument pos:start="81:30" pos:end="81:36"><expr pos:start="81:30" pos:end="81:36"><name pos:start="81:30" pos:end="81:36">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:66"><expr pos:start="83:5" pos:end="83:65"><call pos:start="83:5" pos:end="83:65"><name pos:start="83:5" pos:end="83:10">memset</name><argument_list pos:start="83:11" pos:end="83:65">(<argument pos:start="83:12" pos:end="83:31"><expr pos:start="83:12" pos:end="83:31"><name pos:start="83:12" pos:end="83:31"><name pos:start="83:12" pos:end="83:15">info</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:26">ld_config</name><operator pos:start="83:27" pos:end="83:27">.</operator><name pos:start="83:28" pos:end="83:31">span</name></name></expr></argument>, <argument pos:start="83:34" pos:end="83:34"><expr pos:start="83:34" pos:end="83:34"><literal type="number" pos:start="83:34" pos:end="83:34">0</literal></expr></argument>, <argument pos:start="83:37" pos:end="83:64"><expr pos:start="83:37" pos:end="83:64"><sizeof pos:start="83:37" pos:end="83:64">sizeof<argument_list pos:start="83:43" pos:end="83:64">(<argument pos:start="83:44" pos:end="83:63"><expr pos:start="83:44" pos:end="83:63"><name pos:start="83:44" pos:end="83:63"><name pos:start="83:44" pos:end="83:47">info</name><operator pos:start="83:48" pos:end="83:49">-&gt;</operator><name pos:start="83:50" pos:end="83:58">ld_config</name><operator pos:start="83:59" pos:end="83:59">.</operator><name pos:start="83:60" pos:end="83:63">span</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:44"><expr pos:start="85:5" pos:end="85:43"><name pos:start="85:5" pos:end="85:27"><name pos:start="85:5" pos:end="85:8">info</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:19">ld_config</name><operator pos:start="85:20" pos:end="85:20">.</operator><name pos:start="85:21" pos:end="85:24">span</name><index pos:start="85:25" pos:end="85:27">[<expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>]</index></name><operator pos:start="85:28" pos:end="85:28">.</operator><name pos:start="85:29" pos:end="85:39">start_block</name> <operator pos:start="85:41" pos:end="85:41">=</operator> <literal type="number" pos:start="85:43" pos:end="85:43">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:52"><expr pos:start="87:5" pos:end="87:51"><name pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:8">info</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:19">ld_config</name><operator pos:start="87:20" pos:end="87:20">.</operator><name pos:start="87:21" pos:end="87:24">span</name><index pos:start="87:25" pos:end="87:27">[<expr pos:start="87:26" pos:end="87:26"><literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>]</index></name><operator pos:start="87:28" pos:end="87:28">.</operator><name pos:start="87:29" pos:end="87:38">num_blocks</name> <operator pos:start="87:40" pos:end="87:40">=</operator> <name pos:start="87:42" pos:end="87:51"><name pos:start="87:42" pos:end="87:45">info</name><operator pos:start="87:46" pos:end="87:47">-&gt;</operator><name pos:start="87:48" pos:end="87:51">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:61"><expr pos:start="89:5" pos:end="89:60"><name pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:8">info</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:19">ld_config</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:24">span</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>]</index></name><operator pos:start="89:28" pos:end="89:28">.</operator><name pos:start="89:29" pos:end="89:37">array_ref</name> <operator pos:start="89:39" pos:end="89:39">=</operator> <call pos:start="89:41" pos:end="89:60"><name pos:start="89:41" pos:end="89:51">cpu_to_le16</name><argument_list pos:start="89:52" pos:end="89:60">(<argument pos:start="89:53" pos:end="89:59"><expr pos:start="89:53" pos:end="89:59"><name pos:start="89:53" pos:end="89:59">sdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:61"><expr pos:start="93:5" pos:end="93:60"><name pos:start="93:5" pos:end="93:9">resid</name> <operator pos:start="93:11" pos:end="93:11">=</operator> <call pos:start="93:13" pos:end="93:60"><name pos:start="93:13" pos:end="93:24">dma_buf_read</name><argument_list pos:start="93:25" pos:end="93:60">(<argument pos:start="93:26" pos:end="93:37"><expr pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:37"><name pos:start="93:26" pos:end="93:28">cmd</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:37">iov_buf</name></name></expr></argument>, <argument pos:start="93:40" pos:end="93:48"><expr pos:start="93:40" pos:end="93:48"><name pos:start="93:40" pos:end="93:48">dcmd_size</name></expr></argument>, <argument pos:start="93:51" pos:end="93:59"><expr pos:start="93:51" pos:end="93:59"><operator pos:start="93:51" pos:end="93:51">&amp;</operator><name pos:start="93:52" pos:end="93:59"><name pos:start="93:52" pos:end="93:54">cmd</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:59">qsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:25"><expr pos:start="95:5" pos:end="95:24"><call pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:10">g_free</name><argument_list pos:start="95:11" pos:end="95:24">(<argument pos:start="95:12" pos:end="95:23"><expr pos:start="95:12" pos:end="95:23"><name pos:start="95:12" pos:end="95:23"><name pos:start="95:12" pos:end="95:14">cmd</name><operator pos:start="95:15" pos:end="95:16">-&gt;</operator><name pos:start="95:17" pos:end="95:23">iov_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:38"><expr pos:start="97:5" pos:end="97:37"><name pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:7">cmd</name><operator pos:start="97:8" pos:end="97:9">-&gt;</operator><name pos:start="97:10" pos:end="97:17">iov_size</name></name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:29">dcmd_size</name> <operator pos:start="97:31" pos:end="97:31">-</operator> <name pos:start="97:33" pos:end="97:37">resid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:24"><expr pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:7">cmd</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:16">iov_buf</name></name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:23">NULL</name></expr>;</expr_stmt>

    <return pos:start="101:5" pos:end="101:23">return <expr pos:start="101:12" pos:end="101:22"><name pos:start="101:12" pos:end="101:22">MFI_STAT_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
