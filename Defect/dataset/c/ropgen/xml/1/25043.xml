<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25043.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:20"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mace_decode_frame</name><parameter_list pos:start="1:29" pos:end="2:65">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>,
                             <parameter pos:start="2:30" pos:end="2:47"><decl pos:start="2:30" pos:end="2:47"><type pos:start="2:30" pos:end="2:47"><name pos:start="2:30" pos:end="2:32">int</name> <modifier pos:start="2:34" pos:end="2:34">*</modifier></type><name pos:start="2:35" pos:end="2:47">got_frame_ptr</name></decl></parameter>, <parameter pos:start="2:50" pos:end="2:64"><decl pos:start="2:50" pos:end="2:64"><type pos:start="2:50" pos:end="2:64"><name pos:start="2:50" pos:end="2:57">AVPacket</name> <modifier pos:start="2:59" pos:end="2:59">*</modifier></type><name pos:start="2:60" pos:end="2:64">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="31:20">{<block_content pos:start="4:5" pos:end="31:20">
    <decl_stmt pos:start="4:5" pos:end="4:30"><decl pos:start="4:5" pos:end="4:29"><type pos:start="4:5" pos:end="4:13"><name pos:start="4:5" pos:end="4:11">AVFrame</name> <modifier pos:start="4:13" pos:end="4:13">*</modifier></type><name pos:start="4:14" pos:end="4:18">frame</name>     <init pos:start="4:24" pos:end="4:29">= <expr pos:start="4:26" pos:end="4:29"><name pos:start="4:26" pos:end="4:29">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:11">int16_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier><modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:21">samples</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:40"><decl pos:start="8:5" pos:end="8:39"><type pos:start="8:5" pos:end="8:17"><name pos:start="8:5" pos:end="8:15">MACEContext</name> <modifier pos:start="8:17" pos:end="8:17">*</modifier></type><name pos:start="8:18" pos:end="8:20">ctx</name> <init pos:start="8:22" pos:end="8:39">= <expr pos:start="8:24" pos:end="8:39"><name pos:start="8:24" pos:end="8:39"><name pos:start="8:24" pos:end="8:28">avctx</name><operator pos:start="8:29" pos:end="8:30">-&gt;</operator><name pos:start="8:31" pos:end="8:39">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">l</name></decl>, <decl pos:start="9:21" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:21" pos:end="9:23">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:58"><decl pos:start="10:5" pos:end="10:57"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:16">is_mace3</name> <init pos:start="10:18" pos:end="10:57">= <expr pos:start="10:20" pos:end="10:57"><operator pos:start="10:20" pos:end="10:20">(</operator><name pos:start="10:21" pos:end="10:35"><name pos:start="10:21" pos:end="10:25">avctx</name><operator pos:start="10:26" pos:end="10:27">-&gt;</operator><name pos:start="10:28" pos:end="10:35">codec_id</name></name> <operator pos:start="10:37" pos:end="10:38">==</operator> <name pos:start="10:40" pos:end="10:56">AV_CODEC_ID_MACE3</name><operator pos:start="10:57" pos:end="10:57">)</operator></expr></init></decl>;</decl_stmt>
    <comment type="block" pos:start="11:5" pos:end="11:27">/* get output buffer */</comment>
    <expr_stmt pos:start="12:5" pos:end="12:75"><expr pos:start="12:5" pos:end="12:74"><name pos:start="12:5" pos:end="12:21"><name pos:start="12:5" pos:end="12:9">frame</name><operator pos:start="12:10" pos:end="12:11">-&gt;</operator><name pos:start="12:12" pos:end="12:21">nb_samples</name></name> <operator pos:start="12:23" pos:end="12:23">=</operator> <literal type="number" pos:start="12:25" pos:end="12:25">3</literal> <operator pos:start="12:27" pos:end="12:27">*</operator> <operator pos:start="12:29" pos:end="12:29">(</operator><name pos:start="12:30" pos:end="12:37">buf_size</name> <operator pos:start="12:39" pos:end="12:40">&lt;&lt;</operator> <operator pos:start="12:42" pos:end="12:42">(</operator><literal type="number" pos:start="12:43" pos:end="12:45">1</literal> <operator pos:start="12:45" pos:end="12:45">-</operator> <name pos:start="12:47" pos:end="12:54">is_mace3</name><operator pos:start="12:55" pos:end="12:55">)</operator><operator pos:start="12:56" pos:end="12:56">)</operator> <operator pos:start="12:58" pos:end="12:58">/</operator> <name pos:start="12:60" pos:end="12:74"><name pos:start="12:60" pos:end="12:64">avctx</name><operator pos:start="12:65" pos:end="12:66">-&gt;</operator><name pos:start="12:67" pos:end="12:74">channels</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="13:5" pos:end="14:19"><if pos:start="13:5" pos:end="14:19">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="13:45"><name pos:start="13:16" pos:end="13:28">ff_get_buffer</name><argument_list pos:start="13:29" pos:end="13:45">(<argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">avctx</name></expr></argument>, <argument pos:start="13:37" pos:end="13:41"><expr pos:start="13:37" pos:end="13:41"><name pos:start="13:37" pos:end="13:41">frame</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="13:46" pos:end="13:46">)</operator> <operator pos:start="13:48" pos:end="13:48">&lt;</operator> <literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr>)</condition><block type="pseudo" pos:start="14:9" pos:end="14:19"><block_content pos:start="14:9" pos:end="14:19">
        <return pos:start="14:9" pos:end="14:19">return <expr pos:start="14:16" pos:end="14:18"><name pos:start="14:16" pos:end="14:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:47"><expr pos:start="15:5" pos:end="15:46"><name pos:start="15:5" pos:end="15:11">samples</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">(</operator><name pos:start="15:16" pos:end="15:22">int16_t</name> <operator pos:start="15:24" pos:end="15:24">*</operator><operator pos:start="15:25" pos:end="15:25">*</operator><operator pos:start="15:26" pos:end="15:26">)</operator><name pos:start="15:27" pos:end="15:46"><name pos:start="15:27" pos:end="15:31">frame</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:46">extended_data</name></name></expr>;</expr_stmt>
    <for pos:start="16:5" pos:end="31:20">for<control pos:start="16:8" pos:end="16:40">(<init pos:start="16:9" pos:end="16:14"><expr pos:start="16:9" pos:end="16:13"><name pos:start="16:9" pos:end="16:9">i</name> <operator pos:start="16:11" pos:end="16:11">=</operator> <literal type="number" pos:start="16:13" pos:end="16:13">0</literal></expr>;</init> <condition pos:start="16:16" pos:end="16:35"><expr pos:start="16:16" pos:end="16:34"><name pos:start="16:16" pos:end="16:16">i</name> <operator pos:start="16:18" pos:end="16:18">&lt;</operator> <name pos:start="16:20" pos:end="16:34"><name pos:start="16:20" pos:end="16:24">avctx</name><operator pos:start="16:25" pos:end="16:26">-&gt;</operator><name pos:start="16:27" pos:end="16:34">channels</name></name></expr>;</condition> <incr pos:start="16:37" pos:end="16:39"><expr pos:start="16:37" pos:end="16:39"><name pos:start="16:37" pos:end="16:37">i</name><operator pos:start="16:38" pos:end="16:39">++</operator></expr></incr>)</control> <block pos:start="16:42" pos:end="31:20">{<block_content pos:start="17:9" pos:end="31:20">
        <decl_stmt pos:start="17:9" pos:end="17:37"><decl pos:start="17:9" pos:end="17:36"><type pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:15">int16_t</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:23">output</name> <init pos:start="17:25" pos:end="17:36">= <expr pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:33">samples</name><index pos:start="17:34" pos:end="17:36">[<expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <for pos:start="18:9" pos:end="31:20">for <control pos:start="18:13" pos:end="18:68">(<init pos:start="18:14" pos:end="18:17"><expr pos:start="18:14" pos:end="18:16"><name pos:start="18:14" pos:end="18:14">j</name><operator pos:start="18:15" pos:end="18:15">=</operator><literal type="number" pos:start="18:16" pos:end="18:16">0</literal></expr>;</init> <condition pos:start="18:19" pos:end="18:63"><expr pos:start="18:19" pos:end="18:62"><name pos:start="18:19" pos:end="18:19">j</name> <operator pos:start="18:21" pos:end="18:21">&lt;</operator> <name pos:start="18:23" pos:end="18:30">buf_size</name> <operator pos:start="18:32" pos:end="18:32">/</operator> <operator pos:start="18:34" pos:end="18:34">(</operator><name pos:start="18:35" pos:end="18:49"><name pos:start="18:35" pos:end="18:39">avctx</name><operator pos:start="18:40" pos:end="18:41">-&gt;</operator><name pos:start="18:42" pos:end="18:49">channels</name></name> <operator pos:start="18:51" pos:end="18:52">&lt;&lt;</operator> <name pos:start="18:54" pos:end="18:61">is_mace3</name><operator pos:start="18:62" pos:end="18:62">)</operator></expr>;</condition> <incr pos:start="18:65" pos:end="18:67"><expr pos:start="18:65" pos:end="18:67"><name pos:start="18:65" pos:end="18:65">j</name><operator pos:start="18:66" pos:end="18:67">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:13" pos:end="31:20"><block_content pos:start="19:13" pos:end="31:20">
            <for pos:start="19:13" pos:end="31:20">for <control pos:start="19:17" pos:end="19:47">(<init pos:start="19:18" pos:end="19:21"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:18">k</name><operator pos:start="19:19" pos:end="19:19">=</operator><literal type="number" pos:start="19:20" pos:end="19:20">0</literal></expr>;</init> <condition pos:start="19:23" pos:end="19:42"><expr pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:23">k</name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <operator pos:start="19:27" pos:end="19:27">(</operator><literal type="number" pos:start="19:28" pos:end="19:28">1</literal> <operator pos:start="19:30" pos:end="19:31">&lt;&lt;</operator> <name pos:start="19:33" pos:end="19:40">is_mace3</name><operator pos:start="19:41" pos:end="19:41">)</operator></expr>;</condition> <incr pos:start="19:44" pos:end="19:46"><expr pos:start="19:44" pos:end="19:46"><name pos:start="19:44" pos:end="19:44">k</name><operator pos:start="19:45" pos:end="19:46">++</operator></expr></incr>)</control> <block pos:start="19:49" pos:end="31:20">{<block_content pos:start="20:17" pos:end="31:20">
                <decl_stmt pos:start="20:17" pos:end="21:71"><decl pos:start="20:17" pos:end="21:70"><type pos:start="20:17" pos:end="20:23"><name pos:start="20:17" pos:end="20:23">uint8_t</name></type> <name pos:start="20:25" pos:end="20:27">pkt</name> <init pos:start="20:29" pos:end="21:70">= <expr pos:start="20:31" pos:end="21:70"><name pos:start="20:31" pos:end="21:70"><name pos:start="20:31" pos:end="20:33">buf</name><index pos:start="20:34" pos:end="21:70">[<expr pos:start="20:35" pos:end="21:69"><operator pos:start="20:35" pos:end="20:35">(</operator><name pos:start="20:36" pos:end="20:36">i</name> <operator pos:start="20:38" pos:end="20:39">&lt;&lt;</operator> <name pos:start="20:41" pos:end="20:48">is_mace3</name><operator pos:start="20:49" pos:end="20:49">)</operator> <operator pos:start="20:51" pos:end="20:51">+</operator>
                                  <operator pos:start="21:35" pos:end="21:35">(</operator><name pos:start="21:36" pos:end="21:36">j</name><operator pos:start="21:37" pos:end="21:37">*</operator><name pos:start="21:38" pos:end="21:52"><name pos:start="21:38" pos:end="21:42">avctx</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:52">channels</name></name> <operator pos:start="21:54" pos:end="21:55">&lt;&lt;</operator> <name pos:start="21:57" pos:end="21:64">is_mace3</name><operator pos:start="21:65" pos:end="21:65">)</operator> <operator pos:start="21:67" pos:end="21:67">+</operator> <name pos:start="21:69" pos:end="21:69">k</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
                <decl_stmt pos:start="22:17" pos:end="23:75"><decl pos:start="22:17" pos:end="23:74"><type pos:start="22:17" pos:end="22:23"><name pos:start="22:17" pos:end="22:23">uint8_t</name></type> <name pos:start="22:25" pos:end="22:33"><name pos:start="22:25" pos:end="22:27">val</name><index pos:start="22:28" pos:end="22:30">[<expr pos:start="22:29" pos:end="22:29"><literal type="number" pos:start="22:29" pos:end="22:29">2</literal></expr>]</index><index pos:start="22:31" pos:end="22:33">[<expr pos:start="22:32" pos:end="22:32"><literal type="number" pos:start="22:32" pos:end="22:32">3</literal></expr>]</index></name> <init pos:start="22:35" pos:end="23:74">= <expr pos:start="22:37" pos:end="23:74"><block pos:start="22:37" pos:end="23:74">{<expr pos:start="22:38" pos:end="22:73"><block pos:start="22:38" pos:end="22:73">{<expr pos:start="22:39" pos:end="22:46"><name pos:start="22:39" pos:end="22:41">pkt</name> <operator pos:start="22:43" pos:end="22:44">&gt;&gt;</operator> <literal type="number" pos:start="22:46" pos:end="22:46">5</literal></expr>, <expr pos:start="22:49" pos:end="22:62"><operator pos:start="22:49" pos:end="22:49">(</operator><name pos:start="22:50" pos:end="22:52">pkt</name> <operator pos:start="22:54" pos:end="22:55">&gt;&gt;</operator> <literal type="number" pos:start="22:57" pos:end="22:57">3</literal><operator pos:start="22:58" pos:end="22:58">)</operator> <operator pos:start="22:60" pos:end="22:60">&amp;</operator> <literal type="number" pos:start="22:62" pos:end="22:62">3</literal></expr>, <expr pos:start="22:65" pos:end="22:71"><name pos:start="22:65" pos:end="22:67">pkt</name> <operator pos:start="22:69" pos:end="22:69">&amp;</operator> <literal type="number" pos:start="22:71" pos:end="22:71">7</literal></expr> }</block></expr>,
                                     <expr pos:start="23:38" pos:end="23:73"><block pos:start="23:38" pos:end="23:73">{<expr pos:start="23:39" pos:end="23:45"><name pos:start="23:39" pos:end="23:41">pkt</name> <operator pos:start="23:43" pos:end="23:43">&amp;</operator> <literal type="number" pos:start="23:45" pos:end="23:45">7</literal></expr> , <expr pos:start="23:49" pos:end="23:62"><operator pos:start="23:49" pos:end="23:49">(</operator><name pos:start="23:50" pos:end="23:52">pkt</name> <operator pos:start="23:54" pos:end="23:55">&gt;&gt;</operator> <literal type="number" pos:start="23:57" pos:end="23:57">3</literal><operator pos:start="23:58" pos:end="23:58">)</operator> <operator pos:start="23:60" pos:end="23:60">&amp;</operator> <literal type="number" pos:start="23:62" pos:end="23:62">3</literal></expr>, <expr pos:start="23:65" pos:end="23:72"><name pos:start="23:65" pos:end="23:67">pkt</name> <operator pos:start="23:69" pos:end="23:70">&gt;&gt;</operator> <literal type="number" pos:start="23:72" pos:end="23:72">5</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>
                <for pos:start="24:17" pos:end="31:20">for <control pos:start="24:21" pos:end="24:37">(<init pos:start="24:22" pos:end="24:25"><expr pos:start="24:22" pos:end="24:24"><name pos:start="24:22" pos:end="24:22">l</name><operator pos:start="24:23" pos:end="24:23">=</operator><literal type="number" pos:start="24:24" pos:end="24:24">0</literal></expr>;</init> <condition pos:start="24:27" pos:end="24:32"><expr pos:start="24:27" pos:end="24:31"><name pos:start="24:27" pos:end="24:27">l</name> <operator pos:start="24:29" pos:end="24:29">&lt;</operator> <literal type="number" pos:start="24:31" pos:end="24:31">3</literal></expr>;</condition> <incr pos:start="24:34" pos:end="24:36"><expr pos:start="24:34" pos:end="24:36"><name pos:start="24:34" pos:end="24:34">l</name><operator pos:start="24:35" pos:end="24:36">++</operator></expr></incr>)</control> <block pos:start="24:39" pos:end="31:20">{<block_content pos:start="25:21" pos:end="31:20">
                    <if_stmt pos:start="25:21" pos:end="28:67"><if pos:start="25:21" pos:end="26:67">if <condition pos:start="25:24" pos:end="25:33">(<expr pos:start="25:25" pos:end="25:32"><name pos:start="25:25" pos:end="25:32">is_mace3</name></expr>)</condition><block type="pseudo" pos:start="26:25" pos:end="26:67"><block_content pos:start="26:25" pos:end="26:67">
                        <expr_stmt pos:start="26:25" pos:end="26:67"><expr pos:start="26:25" pos:end="26:66"><call pos:start="26:25" pos:end="26:66"><name pos:start="26:25" pos:end="26:30">chomp3</name><argument_list pos:start="26:31" pos:end="26:66">(<argument pos:start="26:32" pos:end="26:43"><expr pos:start="26:32" pos:end="26:43"><operator pos:start="26:32" pos:end="26:32">&amp;</operator><name pos:start="26:33" pos:end="26:43"><name pos:start="26:33" pos:end="26:35">ctx</name><operator pos:start="26:36" pos:end="26:37">-&gt;</operator><name pos:start="26:38" pos:end="26:40">chd</name><index pos:start="26:41" pos:end="26:43">[<expr pos:start="26:42" pos:end="26:42"><name pos:start="26:42" pos:end="26:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="26:46" pos:end="26:51"><expr pos:start="26:46" pos:end="26:51"><name pos:start="26:46" pos:end="26:51">output</name></expr></argument>, <argument pos:start="26:54" pos:end="26:62"><expr pos:start="26:54" pos:end="26:62"><name pos:start="26:54" pos:end="26:62"><name pos:start="26:54" pos:end="26:56">val</name><index pos:start="26:57" pos:end="26:59">[<expr pos:start="26:58" pos:end="26:58"><literal type="number" pos:start="26:58" pos:end="26:58">1</literal></expr>]</index><index pos:start="26:60" pos:end="26:62">[<expr pos:start="26:61" pos:end="26:61"><name pos:start="26:61" pos:end="26:61">l</name></expr>]</index></name></expr></argument>, <argument pos:start="26:65" pos:end="26:65"><expr pos:start="26:65" pos:end="26:65"><name pos:start="26:65" pos:end="26:65">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
                    <else pos:start="27:21" pos:end="28:67">else<block type="pseudo" pos:start="28:25" pos:end="28:67"><block_content pos:start="28:25" pos:end="28:67">
                        <expr_stmt pos:start="28:25" pos:end="28:67"><expr pos:start="28:25" pos:end="28:66"><call pos:start="28:25" pos:end="28:66"><name pos:start="28:25" pos:end="28:30">chomp6</name><argument_list pos:start="28:31" pos:end="28:66">(<argument pos:start="28:32" pos:end="28:43"><expr pos:start="28:32" pos:end="28:43"><operator pos:start="28:32" pos:end="28:32">&amp;</operator><name pos:start="28:33" pos:end="28:43"><name pos:start="28:33" pos:end="28:35">ctx</name><operator pos:start="28:36" pos:end="28:37">-&gt;</operator><name pos:start="28:38" pos:end="28:40">chd</name><index pos:start="28:41" pos:end="28:43">[<expr pos:start="28:42" pos:end="28:42"><name pos:start="28:42" pos:end="28:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="28:46" pos:end="28:51"><expr pos:start="28:46" pos:end="28:51"><name pos:start="28:46" pos:end="28:51">output</name></expr></argument>, <argument pos:start="28:54" pos:end="28:62"><expr pos:start="28:54" pos:end="28:62"><name pos:start="28:54" pos:end="28:62"><name pos:start="28:54" pos:end="28:56">val</name><index pos:start="28:57" pos:end="28:59">[<expr pos:start="28:58" pos:end="28:58"><literal type="number" pos:start="28:58" pos:end="28:58">0</literal></expr>]</index><index pos:start="28:60" pos:end="28:62">[<expr pos:start="28:61" pos:end="28:61"><name pos:start="28:61" pos:end="28:61">l</name></expr>]</index></name></expr></argument>, <argument pos:start="28:65" pos:end="28:65"><expr pos:start="28:65" pos:end="28:65"><name pos:start="28:65" pos:end="28:65">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
                    <expr_stmt pos:start="29:21" pos:end="29:48"><expr pos:start="29:21" pos:end="29:47"><name pos:start="29:21" pos:end="29:26">output</name> <operator pos:start="29:28" pos:end="29:29">+=</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal> <operator pos:start="29:33" pos:end="29:34">&lt;&lt;</operator> <operator pos:start="29:36" pos:end="29:36">(</operator><literal type="number" pos:start="29:37" pos:end="29:38">1</literal><operator pos:start="29:38" pos:end="29:38">-</operator><name pos:start="29:39" pos:end="29:46">is_mace3</name><operator pos:start="29:47" pos:end="29:47">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:23"><expr pos:start="30:5" pos:end="30:22"><operator pos:start="30:5" pos:end="30:5">*</operator><name pos:start="30:6" pos:end="30:18">got_frame_ptr</name> <operator pos:start="30:20" pos:end="30:20">=</operator> <literal type="number" pos:start="30:22" pos:end="30:22">1</literal></expr>;</expr_stmt>
    <return pos:start="31:5" pos:end="31:20">return <expr pos:start="31:12" pos:end="31:19"><name pos:start="31:12" pos:end="31:19">buf_size</name></expr>;</return></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></for></block_content></block></function></unit>
