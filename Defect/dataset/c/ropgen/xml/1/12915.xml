<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12915.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:50">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,

			<parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">data_size</name></decl></parameter>,

			<parameter pos:start="5:25" pos:end="5:35"><decl pos:start="5:25" pos:end="5:35"><type pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:29">UINT8</name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type> <name pos:start="5:33" pos:end="5:35">buf</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:49">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="275:1">{<block_content pos:start="9:5" pos:end="273:25">

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MPADecodeContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:23">s</name> <init pos:start="9:25" pos:end="9:42">= <expr pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">UINT32</name></type> <name pos:start="11:12" pos:end="11:17">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">UINT8</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:18">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:21">out_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">short</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:22">out_samples</name> <init pos:start="17:24" pos:end="17:29">= <expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><operator pos:start="21:5" pos:end="21:5">*</operator><name pos:start="21:6" pos:end="21:14">data_size</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:18"><expr pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:11">buf_ptr</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:17">buf</name></expr>;</expr_stmt>

    <while pos:start="25:5" pos:end="271:5">while <condition pos:start="25:11" pos:end="25:24">(<expr pos:start="25:12" pos:end="25:23"><name pos:start="25:12" pos:end="25:19">buf_size</name> <operator pos:start="25:21" pos:end="25:21">&gt;</operator> <literal type="number" pos:start="25:23" pos:end="25:23">0</literal></expr>)</condition> <block pos:start="25:26" pos:end="271:5">{<block_content pos:start="27:9" pos:end="269:14">

	<expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:26"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:26">inbuf_ptr</name></name> <operator pos:start="27:28" pos:end="27:28">-</operator> <name pos:start="27:30" pos:end="27:37"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:37">inbuf</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="29:9" pos:end="267:9"><if pos:start="29:9" pos:end="127:9">if <condition pos:start="29:12" pos:end="29:31">(<expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">frame_size</name></name> <operator pos:start="29:27" pos:end="29:28">==</operator> <literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>)</condition> <block pos:start="29:33" pos:end="127:9">{<block_content pos:start="35:13" pos:end="125:13">

            <comment type="block" pos:start="31:13" pos:end="33:58">/* special case for next header for first frame in free

               format case (XXX: find a simpler method) */</comment>

            <if_stmt pos:start="35:13" pos:end="51:13"><if pos:start="35:13" pos:end="51:13">if <condition pos:start="35:16" pos:end="35:48">(<expr pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:42"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:42">free_format_next_header</name></name> <operator pos:start="35:44" pos:end="35:45">!=</operator> <literal type="number" pos:start="35:47" pos:end="35:47">0</literal></expr>)</condition> <block pos:start="35:50" pos:end="51:13">{<block_content pos:start="37:17" pos:end="49:32">

                <expr_stmt pos:start="37:17" pos:end="37:63"><expr pos:start="37:17" pos:end="37:62"><name pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:24">inbuf</name><index pos:start="37:25" pos:end="37:27">[<expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>]</index></name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:56"><name pos:start="37:31" pos:end="37:31">s</name><operator pos:start="37:32" pos:end="37:33">-&gt;</operator><name pos:start="37:34" pos:end="37:56">free_format_next_header</name></name> <operator pos:start="37:58" pos:end="37:59">&gt;&gt;</operator> <literal type="number" pos:start="37:61" pos:end="37:62">24</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:63"><expr pos:start="39:17" pos:end="39:62"><name pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:24">inbuf</name><index pos:start="39:25" pos:end="39:27">[<expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>]</index></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:56"><name pos:start="39:31" pos:end="39:31">s</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:56">free_format_next_header</name></name> <operator pos:start="39:58" pos:end="39:59">&gt;&gt;</operator> <literal type="number" pos:start="39:61" pos:end="39:62">16</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:62"><expr pos:start="41:17" pos:end="41:61"><name pos:start="41:17" pos:end="41:27"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">inbuf</name><index pos:start="41:25" pos:end="41:27">[<expr pos:start="41:26" pos:end="41:26"><literal type="number" pos:start="41:26" pos:end="41:26">2</literal></expr>]</index></name> <operator pos:start="41:29" pos:end="41:29">=</operator> <name pos:start="41:31" pos:end="41:56"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:56">free_format_next_header</name></name> <operator pos:start="41:58" pos:end="41:59">&gt;&gt;</operator> <literal type="number" pos:start="41:61" pos:end="41:61">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:57"><expr pos:start="43:17" pos:end="43:56"><name pos:start="43:17" pos:end="43:27"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:24">inbuf</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">3</literal></expr>]</index></name> <operator pos:start="43:29" pos:end="43:29">=</operator> <name pos:start="43:31" pos:end="43:56"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:56">free_format_next_header</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:44"><expr pos:start="45:17" pos:end="45:43"><name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:28">inbuf_ptr</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:39"><name pos:start="45:32" pos:end="45:32">s</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:39">inbuf</name></name> <operator pos:start="45:41" pos:end="45:41">+</operator> <literal type="number" pos:start="45:43" pos:end="45:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:47"><expr pos:start="47:17" pos:end="47:46"><name pos:start="47:17" pos:end="47:42"><name pos:start="47:17" pos:end="47:17">s</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:42">free_format_next_header</name></name> <operator pos:start="47:44" pos:end="47:44">=</operator> <literal type="number" pos:start="47:46" pos:end="47:46">0</literal></expr>;</expr_stmt>

                <goto pos:start="49:17" pos:end="49:32">goto <name pos:start="49:22" pos:end="49:31">got_header</name>;</goto>

            </block_content>}</block></if></if_stmt>

	    <comment type="block" pos:start="53:13" pos:end="55:35">/* no header seen : find one. We need at least HEADER_SIZE

               bytes to parse it */</comment>

	    <expr_stmt pos:start="57:13" pos:end="57:36"><expr pos:start="57:13" pos:end="57:35"><name pos:start="57:13" pos:end="57:15">len</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:29">HEADER_SIZE</name> <operator pos:start="57:31" pos:end="57:31">-</operator> <name pos:start="57:33" pos:end="57:35">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="59:13" pos:end="73:13"><if pos:start="59:13" pos:end="61:31">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">len</name> <operator pos:start="59:21" pos:end="59:21">&gt;</operator> <name pos:start="59:23" pos:end="59:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:31"><block_content pos:start="61:17" pos:end="61:31">

		<expr_stmt pos:start="61:17" pos:end="61:31"><expr pos:start="61:17" pos:end="61:30"><name pos:start="61:17" pos:end="61:19">len</name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:30">buf_size</name></expr>;</expr_stmt></block_content></block></if>

	    <if type="elseif" pos:start="63:13" pos:end="73:13">else if <condition pos:start="63:21" pos:end="63:29">(<expr pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:24">len</name> <operator pos:start="63:26" pos:end="63:26">&gt;</operator> <literal type="number" pos:start="63:28" pos:end="63:28">0</literal></expr>)</condition> <block pos:start="63:31" pos:end="73:13">{<block_content pos:start="65:13" pos:end="71:36">

	    <expr_stmt pos:start="65:13" pos:end="65:47"><expr pos:start="65:13" pos:end="65:46"><call pos:start="65:13" pos:end="65:46"><name pos:start="65:13" pos:end="65:18">memcpy</name><argument_list pos:start="65:19" pos:end="65:46">(<argument pos:start="65:20" pos:end="65:31"><expr pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:20">s</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:40"><expr pos:start="65:34" pos:end="65:40"><name pos:start="65:34" pos:end="65:40">buf_ptr</name></expr></argument>, <argument pos:start="65:43" pos:end="65:45"><expr pos:start="65:43" pos:end="65:45"><name pos:start="65:43" pos:end="65:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="67:13" pos:end="67:27"><expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:19">buf_ptr</name> <operator pos:start="67:21" pos:end="67:22">+=</operator> <name pos:start="67:24" pos:end="67:26">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="69:13" pos:end="69:28"><expr pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:20">buf_size</name> <operator pos:start="69:22" pos:end="69:23">-=</operator> <name pos:start="69:25" pos:end="69:27">len</name></expr>;</expr_stmt>

		<expr_stmt pos:start="71:17" pos:end="71:36"><expr pos:start="71:17" pos:end="71:35"><name pos:start="71:17" pos:end="71:28"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:28">inbuf_ptr</name></name> <operator pos:start="71:30" pos:end="71:31">+=</operator> <name pos:start="71:33" pos:end="71:35">len</name></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

	    <if_stmt pos:start="75:13" pos:end="125:13"><if pos:start="75:13" pos:end="125:13">if <condition pos:start="75:16" pos:end="75:57">(<expr pos:start="75:17" pos:end="75:56"><operator pos:start="75:17" pos:end="75:17">(</operator><name pos:start="75:18" pos:end="75:29"><name pos:start="75:18" pos:end="75:18">s</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:29">inbuf_ptr</name></name> <operator pos:start="75:31" pos:end="75:31">-</operator> <name pos:start="75:33" pos:end="75:40"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:40">inbuf</name></name><operator pos:start="75:41" pos:end="75:41">)</operator> <operator pos:start="75:43" pos:end="75:44">&gt;=</operator> <name pos:start="75:46" pos:end="75:56">HEADER_SIZE</name></expr>)</condition> <block pos:start="75:59" pos:end="125:13">{<block_content pos:start="77:13" pos:end="123:17">

            <label pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:22">got_header</name>:</label>

		<expr_stmt pos:start="79:17" pos:end="81:53"><expr pos:start="79:17" pos:end="81:52"><name pos:start="79:17" pos:end="79:22">header</name> <operator pos:start="79:24" pos:end="79:24">=</operator> <operator pos:start="79:26" pos:end="79:26">(</operator><name pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:27">s</name><operator pos:start="79:28" pos:end="79:29">-&gt;</operator><name pos:start="79:30" pos:end="79:34">inbuf</name><index pos:start="79:35" pos:end="79:37">[<expr pos:start="79:36" pos:end="79:36"><literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr>]</index></name> <operator pos:start="79:39" pos:end="79:40">&lt;&lt;</operator> <literal type="number" pos:start="79:42" pos:end="79:43">24</literal><operator pos:start="79:44" pos:end="79:44">)</operator> <operator pos:start="79:46" pos:end="79:46">|</operator> <operator pos:start="79:48" pos:end="79:48">(</operator><name pos:start="79:49" pos:end="79:59"><name pos:start="79:49" pos:end="79:49">s</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:56">inbuf</name><index pos:start="79:57" pos:end="79:59">[<expr pos:start="79:58" pos:end="79:58"><literal type="number" pos:start="79:58" pos:end="79:58">1</literal></expr>]</index></name> <operator pos:start="79:61" pos:end="79:62">&lt;&lt;</operator> <literal type="number" pos:start="79:64" pos:end="79:65">16</literal><operator pos:start="79:66" pos:end="79:66">)</operator> <operator pos:start="79:68" pos:end="79:68">|</operator>

		    <operator pos:start="81:21" pos:end="81:21">(</operator><name pos:start="81:22" pos:end="81:32"><name pos:start="81:22" pos:end="81:22">s</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:29">inbuf</name><index pos:start="81:30" pos:end="81:32">[<expr pos:start="81:31" pos:end="81:31"><literal type="number" pos:start="81:31" pos:end="81:31">2</literal></expr>]</index></name> <operator pos:start="81:34" pos:end="81:35">&lt;&lt;</operator> <literal type="number" pos:start="81:37" pos:end="81:37">8</literal><operator pos:start="81:38" pos:end="81:38">)</operator> <operator pos:start="81:40" pos:end="81:40">|</operator> <name pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">inbuf</name><index pos:start="81:50" pos:end="81:52">[<expr pos:start="81:51" pos:end="81:51"><literal type="number" pos:start="81:51" pos:end="81:51">3</literal></expr>]</index></name></expr>;</expr_stmt>

		<if_stmt pos:start="83:17" pos:end="123:17"><if pos:start="83:17" pos:end="99:17">if <condition pos:start="83:20" pos:end="83:45">(<expr pos:start="83:21" pos:end="83:44"><call pos:start="83:21" pos:end="83:40"><name pos:start="83:21" pos:end="83:32">check_header</name><argument_list pos:start="83:33" pos:end="83:40">(<argument pos:start="83:34" pos:end="83:39"><expr pos:start="83:34" pos:end="83:39"><name pos:start="83:34" pos:end="83:39">header</name></expr></argument>)</argument_list></call> <operator pos:start="83:42" pos:end="83:42">&lt;</operator> <literal type="number" pos:start="83:44" pos:end="83:44">0</literal></expr>)</condition> <block pos:start="83:47" pos:end="99:17">{<block_content pos:start="87:21" pos:end="97:50">

		    <comment type="block" pos:start="85:21" pos:end="85:85">/* no sync found : move by one byte (inefficient, but simple!) */</comment>

		    <expr_stmt pos:start="87:21" pos:end="87:76"><expr pos:start="87:21" pos:end="87:75"><call pos:start="87:21" pos:end="87:75"><name pos:start="87:21" pos:end="87:26">memcpy</name><argument_list pos:start="87:27" pos:end="87:75">(<argument pos:start="87:28" pos:end="87:35"><expr pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:35"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:35">inbuf</name></name></expr></argument>, <argument pos:start="87:38" pos:end="87:49"><expr pos:start="87:38" pos:end="87:49"><name pos:start="87:38" pos:end="87:45"><name pos:start="87:38" pos:end="87:38">s</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:45">inbuf</name></name> <operator pos:start="87:47" pos:end="87:47">+</operator> <literal type="number" pos:start="87:49" pos:end="87:49">1</literal></expr></argument>, <argument pos:start="87:52" pos:end="87:74"><expr pos:start="87:52" pos:end="87:74"><name pos:start="87:52" pos:end="87:63"><name pos:start="87:52" pos:end="87:52">s</name><operator pos:start="87:53" pos:end="87:54">-&gt;</operator><name pos:start="87:55" pos:end="87:63">inbuf_ptr</name></name> <operator pos:start="87:65" pos:end="87:65">-</operator> <name pos:start="87:67" pos:end="87:74"><name pos:start="87:67" pos:end="87:67">s</name><operator pos:start="87:68" pos:end="87:69">-&gt;</operator><name pos:start="87:70" pos:end="87:74">inbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="89:21" pos:end="89:35"><expr pos:start="89:21" pos:end="89:34"><name pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:32">inbuf_ptr</name></name><operator pos:start="89:33" pos:end="89:34">--</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:49"><expr pos:start="91:21" pos:end="91:48"><call pos:start="91:21" pos:end="91:48"><name pos:start="91:21" pos:end="91:27">dprintf</name><argument_list pos:start="91:28" pos:end="91:48">(<argument pos:start="91:29" pos:end="91:39"><expr pos:start="91:29" pos:end="91:39"><literal type="string" pos:start="91:29" pos:end="91:39">"skip %x\n"</literal></expr></argument>, <argument pos:start="91:42" pos:end="91:47"><expr pos:start="91:42" pos:end="91:47"><name pos:start="91:42" pos:end="91:47">header</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="93:21" pos:end="95:46">/* reset free format frame size to give a chance

                       to get a new bitrate */</comment>

                    <expr_stmt pos:start="97:21" pos:end="97:50"><expr pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:45"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:45">free_format_frame_size</name></name> <operator pos:start="97:47" pos:end="97:47">=</operator> <literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr>;</expr_stmt>

		</block_content>}</block></if> <else pos:start="99:19" pos:end="123:17">else <block pos:start="99:24" pos:end="123:17">{<block_content pos:start="101:21" pos:end="121:21">

		    <if_stmt pos:start="101:21" pos:end="121:21"><if pos:start="101:21" pos:end="111:21">if <condition pos:start="101:24" pos:end="101:54">(<expr pos:start="101:25" pos:end="101:53"><call pos:start="101:25" pos:end="101:48"><name pos:start="101:25" pos:end="101:37">decode_header</name><argument_list pos:start="101:38" pos:end="101:48">(<argument pos:start="101:39" pos:end="101:39"><expr pos:start="101:39" pos:end="101:39"><name pos:start="101:39" pos:end="101:39">s</name></expr></argument>, <argument pos:start="101:42" pos:end="101:47"><expr pos:start="101:42" pos:end="101:47"><name pos:start="101:42" pos:end="101:47">header</name></expr></argument>)</argument_list></call> <operator pos:start="101:50" pos:end="101:51">==</operator> <literal type="number" pos:start="101:53" pos:end="101:53">1</literal></expr>)</condition> <block pos:start="101:56" pos:end="111:21">{<block_content pos:start="105:25" pos:end="109:39">

                        <comment type="block" pos:start="103:25" pos:end="103:61">/* free format: compute frame size */</comment>

                        <expr_stmt pos:start="105:25" pos:end="105:43"><expr pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:37"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:37">frame_size</name></name> <operator pos:start="105:39" pos:end="105:39">=</operator> <operator pos:start="105:41" pos:end="105:41">-</operator><literal type="number" pos:start="105:42" pos:end="105:42">1</literal></expr>;</expr_stmt>

			<expr_stmt pos:start="107:25" pos:end="107:80"><expr pos:start="107:25" pos:end="107:79"><call pos:start="107:25" pos:end="107:79"><name pos:start="107:25" pos:end="107:30">memcpy</name><argument_list pos:start="107:31" pos:end="107:79">(<argument pos:start="107:32" pos:end="107:39"><expr pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:32">s</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:39">inbuf</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:53"><expr pos:start="107:42" pos:end="107:53"><name pos:start="107:42" pos:end="107:49"><name pos:start="107:42" pos:end="107:42">s</name><operator pos:start="107:43" pos:end="107:44">-&gt;</operator><name pos:start="107:45" pos:end="107:49">inbuf</name></name> <operator pos:start="107:51" pos:end="107:51">+</operator> <literal type="number" pos:start="107:53" pos:end="107:53">1</literal></expr></argument>, <argument pos:start="107:56" pos:end="107:78"><expr pos:start="107:56" pos:end="107:78"><name pos:start="107:56" pos:end="107:67"><name pos:start="107:56" pos:end="107:56">s</name><operator pos:start="107:57" pos:end="107:58">-&gt;</operator><name pos:start="107:59" pos:end="107:67">inbuf_ptr</name></name> <operator pos:start="107:69" pos:end="107:69">-</operator> <name pos:start="107:71" pos:end="107:78"><name pos:start="107:71" pos:end="107:71">s</name><operator pos:start="107:72" pos:end="107:73">-&gt;</operator><name pos:start="107:74" pos:end="107:78">inbuf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="109:25" pos:end="109:39"><expr pos:start="109:25" pos:end="109:38"><name pos:start="109:25" pos:end="109:36"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:36">inbuf_ptr</name></name><operator pos:start="109:37" pos:end="109:38">--</operator></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="111:23" pos:end="121:21">else <block pos:start="111:28" pos:end="121:21">{<block_content pos:start="115:25" pos:end="119:54">

                        <comment type="block" pos:start="113:25" pos:end="113:47">/* update codec info */</comment>

                        <expr_stmt pos:start="115:25" pos:end="115:60"><expr pos:start="115:25" pos:end="115:59"><name pos:start="115:25" pos:end="115:42"><name pos:start="115:25" pos:end="115:29">avctx</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:42">sample_rate</name></name> <operator pos:start="115:44" pos:end="115:44">=</operator> <name pos:start="115:46" pos:end="115:59"><name pos:start="115:46" pos:end="115:46">s</name><operator pos:start="115:47" pos:end="115:48">-&gt;</operator><name pos:start="115:49" pos:end="115:59">sample_rate</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="117:25" pos:end="117:57"><expr pos:start="117:25" pos:end="117:56"><name pos:start="117:25" pos:end="117:39"><name pos:start="117:25" pos:end="117:29">avctx</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:39">channels</name></name> <operator pos:start="117:41" pos:end="117:41">=</operator> <name pos:start="117:43" pos:end="117:56"><name pos:start="117:43" pos:end="117:43">s</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:56">nb_channels</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="119:25" pos:end="119:54"><expr pos:start="119:25" pos:end="119:53"><name pos:start="119:25" pos:end="119:39"><name pos:start="119:25" pos:end="119:29">avctx</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:39">bit_rate</name></name> <operator pos:start="119:41" pos:end="119:41">=</operator> <name pos:start="119:43" pos:end="119:53"><name pos:start="119:43" pos:end="119:43">s</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:53">bit_rate</name></name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

		</block_content>}</block></else></if_stmt>

	    </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="127:11" pos:end="229:9">else if <condition pos:start="127:19" pos:end="127:39">(<expr pos:start="127:20" pos:end="127:38"><name pos:start="127:20" pos:end="127:32"><name pos:start="127:20" pos:end="127:20">s</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:32">frame_size</name></name> <operator pos:start="127:34" pos:end="127:35">==</operator> <operator pos:start="127:37" pos:end="127:37">-</operator><literal type="number" pos:start="127:38" pos:end="127:38">1</literal></expr>)</condition> <block pos:start="127:41" pos:end="229:9">{<block_content pos:start="131:13" pos:end="227:13">

            <comment type="block" pos:start="129:13" pos:end="129:68">/* free format : find next sync to compute frame size */</comment>

	    <expr_stmt pos:start="131:13" pos:end="131:49"><expr pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:15">len</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:42">MPA_MAX_CODED_FRAME_SIZE</name> <operator pos:start="131:44" pos:end="131:44">-</operator> <name pos:start="131:46" pos:end="131:48">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="133:13" pos:end="135:31"><if pos:start="133:13" pos:end="135:31">if <condition pos:start="133:16" pos:end="133:31">(<expr pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:19">len</name> <operator pos:start="133:21" pos:end="133:21">&gt;</operator> <name pos:start="133:23" pos:end="133:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:31"><block_content pos:start="135:17" pos:end="135:31">

		<expr_stmt pos:start="135:17" pos:end="135:31"><expr pos:start="135:17" pos:end="135:30"><name pos:start="135:17" pos:end="135:19">len</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="137:13" pos:end="227:13"><if pos:start="137:13" pos:end="143:13">if <condition pos:start="137:16" pos:end="137:25">(<expr pos:start="137:17" pos:end="137:24"><name pos:start="137:17" pos:end="137:19">len</name> <operator pos:start="137:21" pos:end="137:22">==</operator> <literal type="number" pos:start="137:24" pos:end="137:24">0</literal></expr>)</condition> <block pos:start="137:27" pos:end="143:13">{<block_content pos:start="141:17" pos:end="141:34">

                <comment type="block" pos:start="139:17" pos:end="139:44">/* frame too long: resync */</comment>

                <expr_stmt pos:start="141:17" pos:end="141:34"><expr pos:start="141:17" pos:end="141:33"><name pos:start="141:17" pos:end="141:29"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:29">frame_size</name></name> <operator pos:start="141:31" pos:end="141:31">=</operator> <literal type="number" pos:start="141:33" pos:end="141:33">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="143:15" pos:end="227:13">else <block pos:start="143:20" pos:end="227:13">{<block_content pos:start="145:17" pos:end="225:32">

                <decl_stmt pos:start="145:17" pos:end="145:32"><decl pos:start="145:17" pos:end="145:24"><type pos:start="145:17" pos:end="145:23"><name pos:start="145:17" pos:end="145:21">UINT8</name> <modifier pos:start="145:23" pos:end="145:23">*</modifier></type><name pos:start="145:24" pos:end="145:24">p</name></decl>, <decl pos:start="145:27" pos:end="145:31"><type ref="prev" pos:start="145:17" pos:end="145:23"><modifier pos:start="145:27" pos:end="145:27">*</modifier></type><name pos:start="145:28" pos:end="145:31">pend</name></decl>;</decl_stmt>

                <decl_stmt pos:start="147:17" pos:end="147:31"><decl pos:start="147:17" pos:end="147:30"><type pos:start="147:17" pos:end="147:22"><name pos:start="147:17" pos:end="147:22">UINT32</name></type> <name pos:start="147:24" pos:end="147:30">header1</name></decl>;</decl_stmt>

                <decl_stmt pos:start="149:17" pos:end="149:28"><decl pos:start="149:17" pos:end="149:27"><type pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">int</name></type> <name pos:start="149:21" pos:end="149:27">padding</name></decl>;</decl_stmt>



                <expr_stmt pos:start="153:17" pos:end="153:51"><expr pos:start="153:17" pos:end="153:50"><call pos:start="153:17" pos:end="153:50"><name pos:start="153:17" pos:end="153:22">memcpy</name><argument_list pos:start="153:23" pos:end="153:50">(<argument pos:start="153:24" pos:end="153:35"><expr pos:start="153:24" pos:end="153:35"><name pos:start="153:24" pos:end="153:35"><name pos:start="153:24" pos:end="153:24">s</name><operator pos:start="153:25" pos:end="153:26">-&gt;</operator><name pos:start="153:27" pos:end="153:35">inbuf_ptr</name></name></expr></argument>, <argument pos:start="153:38" pos:end="153:44"><expr pos:start="153:38" pos:end="153:44"><name pos:start="153:38" pos:end="153:44">buf_ptr</name></expr></argument>, <argument pos:start="153:47" pos:end="153:49"><expr pos:start="153:47" pos:end="153:49"><name pos:start="153:47" pos:end="153:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="155:17" pos:end="155:38">/* check for header */</comment>

                <expr_stmt pos:start="157:17" pos:end="157:37"><expr pos:start="157:17" pos:end="157:36"><name pos:start="157:17" pos:end="157:17">p</name> <operator pos:start="157:19" pos:end="157:19">=</operator> <name pos:start="157:21" pos:end="157:32"><name pos:start="157:21" pos:end="157:21">s</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:32">inbuf_ptr</name></name> <operator pos:start="157:34" pos:end="157:34">-</operator> <literal type="number" pos:start="157:36" pos:end="157:36">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:46"><expr pos:start="159:17" pos:end="159:45"><name pos:start="159:17" pos:end="159:20">pend</name> <operator pos:start="159:22" pos:end="159:22">=</operator> <name pos:start="159:24" pos:end="159:35"><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:26">-&gt;</operator><name pos:start="159:27" pos:end="159:35">inbuf_ptr</name></name> <operator pos:start="159:37" pos:end="159:37">+</operator> <name pos:start="159:39" pos:end="159:41">len</name> <operator pos:start="159:43" pos:end="159:43">-</operator> <literal type="number" pos:start="159:45" pos:end="159:45">4</literal></expr>;</expr_stmt>

                <while pos:start="161:17" pos:end="217:17">while <condition pos:start="161:23" pos:end="161:33">(<expr pos:start="161:24" pos:end="161:32"><name pos:start="161:24" pos:end="161:24">p</name> <operator pos:start="161:26" pos:end="161:27">&lt;=</operator> <name pos:start="161:29" pos:end="161:32">pend</name></expr>)</condition> <block pos:start="161:35" pos:end="217:17">{<block_content pos:start="163:21" pos:end="215:24">

                    <expr_stmt pos:start="163:21" pos:end="165:43"><expr pos:start="163:21" pos:end="165:42"><name pos:start="163:21" pos:end="163:26">header</name> <operator pos:start="163:28" pos:end="163:28">=</operator> <operator pos:start="163:30" pos:end="163:30">(</operator><name pos:start="163:31" pos:end="163:34"><name pos:start="163:31" pos:end="163:31">p</name><index pos:start="163:32" pos:end="163:34">[<expr pos:start="163:33" pos:end="163:33"><literal type="number" pos:start="163:33" pos:end="163:33">0</literal></expr>]</index></name> <operator pos:start="163:36" pos:end="163:37">&lt;&lt;</operator> <literal type="number" pos:start="163:39" pos:end="163:40">24</literal><operator pos:start="163:41" pos:end="163:41">)</operator> <operator pos:start="163:43" pos:end="163:43">|</operator> <operator pos:start="163:45" pos:end="163:45">(</operator><name pos:start="163:46" pos:end="163:49"><name pos:start="163:46" pos:end="163:46">p</name><index pos:start="163:47" pos:end="163:49">[<expr pos:start="163:48" pos:end="163:48"><literal type="number" pos:start="163:48" pos:end="163:48">1</literal></expr>]</index></name> <operator pos:start="163:51" pos:end="163:52">&lt;&lt;</operator> <literal type="number" pos:start="163:54" pos:end="163:55">16</literal><operator pos:start="163:56" pos:end="163:56">)</operator> <operator pos:start="163:58" pos:end="163:58">|</operator>

                        <operator pos:start="165:25" pos:end="165:25">(</operator><name pos:start="165:26" pos:end="165:29"><name pos:start="165:26" pos:end="165:26">p</name><index pos:start="165:27" pos:end="165:29">[<expr pos:start="165:28" pos:end="165:28"><literal type="number" pos:start="165:28" pos:end="165:28">2</literal></expr>]</index></name> <operator pos:start="165:31" pos:end="165:32">&lt;&lt;</operator> <literal type="number" pos:start="165:34" pos:end="165:34">8</literal><operator pos:start="165:35" pos:end="165:35">)</operator> <operator pos:start="165:37" pos:end="165:37">|</operator> <name pos:start="165:39" pos:end="165:42"><name pos:start="165:39" pos:end="165:39">p</name><index pos:start="165:40" pos:end="165:42">[<expr pos:start="165:41" pos:end="165:41"><literal type="number" pos:start="165:41" pos:end="165:41">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="169:57"><expr pos:start="167:21" pos:end="169:56"><name pos:start="167:21" pos:end="167:27">header1</name> <operator pos:start="167:29" pos:end="167:29">=</operator> <operator pos:start="167:31" pos:end="167:31">(</operator><name pos:start="167:32" pos:end="167:42"><name pos:start="167:32" pos:end="167:32">s</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:39">inbuf</name><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><literal type="number" pos:start="167:41" pos:end="167:41">0</literal></expr>]</index></name> <operator pos:start="167:44" pos:end="167:45">&lt;&lt;</operator> <literal type="number" pos:start="167:47" pos:end="167:48">24</literal><operator pos:start="167:49" pos:end="167:49">)</operator> <operator pos:start="167:51" pos:end="167:51">|</operator> <operator pos:start="167:53" pos:end="167:53">(</operator><name pos:start="167:54" pos:end="167:64"><name pos:start="167:54" pos:end="167:54">s</name><operator pos:start="167:55" pos:end="167:56">-&gt;</operator><name pos:start="167:57" pos:end="167:61">inbuf</name><index pos:start="167:62" pos:end="167:64">[<expr pos:start="167:63" pos:end="167:63"><literal type="number" pos:start="167:63" pos:end="167:63">1</literal></expr>]</index></name> <operator pos:start="167:66" pos:end="167:67">&lt;&lt;</operator> <literal type="number" pos:start="167:69" pos:end="167:70">16</literal><operator pos:start="167:71" pos:end="167:71">)</operator> <operator pos:start="167:73" pos:end="167:73">|</operator>

                        <operator pos:start="169:25" pos:end="169:25">(</operator><name pos:start="169:26" pos:end="169:36"><name pos:start="169:26" pos:end="169:26">s</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:33">inbuf</name><index pos:start="169:34" pos:end="169:36">[<expr pos:start="169:35" pos:end="169:35"><literal type="number" pos:start="169:35" pos:end="169:35">2</literal></expr>]</index></name> <operator pos:start="169:38" pos:end="169:39">&lt;&lt;</operator> <literal type="number" pos:start="169:41" pos:end="169:41">8</literal><operator pos:start="169:42" pos:end="169:42">)</operator> <operator pos:start="169:44" pos:end="169:44">|</operator> <name pos:start="169:46" pos:end="169:56"><name pos:start="169:46" pos:end="169:46">s</name><operator pos:start="169:47" pos:end="169:48">-&gt;</operator><name pos:start="169:49" pos:end="169:53">inbuf</name><index pos:start="169:54" pos:end="169:56">[<expr pos:start="169:55" pos:end="169:55"><literal type="number" pos:start="169:55" pos:end="169:55">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="171:21" pos:end="173:38">/* check with high probability that we have a

                       valid header */</comment>

                    <if_stmt pos:start="175:21" pos:end="213:21"><if pos:start="175:21" pos:end="213:21">if <condition pos:start="175:24" pos:end="177:53">(<expr pos:start="175:25" pos:end="177:52"><operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:31">header</name> <operator pos:start="175:33" pos:end="175:33">&amp;</operator> <name pos:start="175:35" pos:end="175:50">SAME_HEADER_MASK</name><operator pos:start="175:51" pos:end="175:51">)</operator> <operator pos:start="175:53" pos:end="175:54">==</operator>

                        <operator pos:start="177:25" pos:end="177:25">(</operator><name pos:start="177:26" pos:end="177:32">header1</name> <operator pos:start="177:34" pos:end="177:34">&amp;</operator> <name pos:start="177:36" pos:end="177:51">SAME_HEADER_MASK</name><operator pos:start="177:52" pos:end="177:52">)</operator></expr>)</condition> <block pos:start="177:55" pos:end="213:21">{<block_content pos:start="181:25" pos:end="211:39">

                        <comment type="block" pos:start="179:25" pos:end="179:59">/* header found: update pointers */</comment>

                        <expr_stmt pos:start="181:25" pos:end="181:53"><expr pos:start="181:25" pos:end="181:52"><name pos:start="181:25" pos:end="181:27">len</name> <operator pos:start="181:29" pos:end="181:29">=</operator> <operator pos:start="181:31" pos:end="181:31">(</operator><name pos:start="181:32" pos:end="181:32">p</name> <operator pos:start="181:34" pos:end="181:34">+</operator> <literal type="number" pos:start="181:36" pos:end="181:36">4</literal><operator pos:start="181:37" pos:end="181:37">)</operator> <operator pos:start="181:39" pos:end="181:39">-</operator> <name pos:start="181:41" pos:end="181:52"><name pos:start="181:41" pos:end="181:41">s</name><operator pos:start="181:42" pos:end="181:43">-&gt;</operator><name pos:start="181:44" pos:end="181:52">inbuf_ptr</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="183:25" pos:end="183:39"><expr pos:start="183:25" pos:end="183:38"><name pos:start="183:25" pos:end="183:31">buf_ptr</name> <operator pos:start="183:33" pos:end="183:34">+=</operator> <name pos:start="183:36" pos:end="183:38">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="185:25" pos:end="185:40"><expr pos:start="185:25" pos:end="185:39"><name pos:start="185:25" pos:end="185:32">buf_size</name> <operator pos:start="185:34" pos:end="185:35">-=</operator> <name pos:start="185:37" pos:end="185:39">len</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="187:25" pos:end="187:41"><expr pos:start="187:25" pos:end="187:40"><name pos:start="187:25" pos:end="187:36"><name pos:start="187:25" pos:end="187:25">s</name><operator pos:start="187:26" pos:end="187:27">-&gt;</operator><name pos:start="187:28" pos:end="187:36">inbuf_ptr</name></name> <operator pos:start="187:38" pos:end="187:38">=</operator> <name pos:start="187:40" pos:end="187:40">p</name></expr>;</expr_stmt>

                        <comment type="block" pos:start="189:25" pos:end="189:48">/* compute frame size */</comment>

                        <expr_stmt pos:start="191:25" pos:end="191:60"><expr pos:start="191:25" pos:end="191:59"><name pos:start="191:25" pos:end="191:50"><name pos:start="191:25" pos:end="191:25">s</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:50">free_format_next_header</name></name> <operator pos:start="191:52" pos:end="191:52">=</operator> <name pos:start="191:54" pos:end="191:59">header</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="193:76"><expr pos:start="193:25" pos:end="193:75"><name pos:start="193:25" pos:end="193:49"><name pos:start="193:25" pos:end="193:25">s</name><operator pos:start="193:26" pos:end="193:27">-&gt;</operator><name pos:start="193:28" pos:end="193:49">free_format_frame_size</name></name> <operator pos:start="193:51" pos:end="193:51">=</operator> <name pos:start="193:53" pos:end="193:64"><name pos:start="193:53" pos:end="193:53">s</name><operator pos:start="193:54" pos:end="193:55">-&gt;</operator><name pos:start="193:56" pos:end="193:64">inbuf_ptr</name></name> <operator pos:start="193:66" pos:end="193:66">-</operator> <name pos:start="193:68" pos:end="193:75"><name pos:start="193:68" pos:end="193:68">s</name><operator pos:start="193:69" pos:end="193:70">-&gt;</operator><name pos:start="193:71" pos:end="193:75">inbuf</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:53"><expr pos:start="195:25" pos:end="195:52"><name pos:start="195:25" pos:end="195:31">padding</name> <operator pos:start="195:33" pos:end="195:33">=</operator> <operator pos:start="195:35" pos:end="195:35">(</operator><name pos:start="195:36" pos:end="195:42">header1</name> <operator pos:start="195:44" pos:end="195:45">&gt;&gt;</operator> <literal type="number" pos:start="195:47" pos:end="195:47">9</literal><operator pos:start="195:48" pos:end="195:48">)</operator> <operator pos:start="195:50" pos:end="195:50">&amp;</operator> <literal type="number" pos:start="195:52" pos:end="195:52">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="197:25" pos:end="203:65"><if pos:start="197:25" pos:end="199:69">if <condition pos:start="197:28" pos:end="197:42">(<expr pos:start="197:29" pos:end="197:41"><name pos:start="197:29" pos:end="197:36"><name pos:start="197:29" pos:end="197:29">s</name><operator pos:start="197:30" pos:end="197:31">-&gt;</operator><name pos:start="197:32" pos:end="197:36">layer</name></name> <operator pos:start="197:38" pos:end="197:39">==</operator> <literal type="number" pos:start="197:41" pos:end="197:41">1</literal></expr>)</condition><block type="pseudo" pos:start="199:29" pos:end="199:69"><block_content pos:start="199:29" pos:end="199:69">

                            <expr_stmt pos:start="199:29" pos:end="199:69"><expr pos:start="199:29" pos:end="199:68"><name pos:start="199:29" pos:end="199:53"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:53">free_format_frame_size</name></name> <operator pos:start="199:55" pos:end="199:56">-=</operator> <name pos:start="199:58" pos:end="199:64">padding</name> <operator pos:start="199:66" pos:end="199:66">*</operator> <literal type="number" pos:start="199:68" pos:end="199:68">4</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="201:25" pos:end="203:65">else<block type="pseudo" pos:start="203:29" pos:end="203:65"><block_content pos:start="203:29" pos:end="203:65">

                            <expr_stmt pos:start="203:29" pos:end="203:65"><expr pos:start="203:29" pos:end="203:64"><name pos:start="203:29" pos:end="203:53"><name pos:start="203:29" pos:end="203:29">s</name><operator pos:start="203:30" pos:end="203:31">-&gt;</operator><name pos:start="203:32" pos:end="203:53">free_format_frame_size</name></name> <operator pos:start="203:55" pos:end="203:56">-=</operator> <name pos:start="203:58" pos:end="203:64">padding</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="205:25" pos:end="207:68"><expr pos:start="205:25" pos:end="207:67"><call pos:start="205:25" pos:end="207:67"><name pos:start="205:25" pos:end="205:31">dprintf</name><argument_list pos:start="205:32" pos:end="207:67">(<argument pos:start="205:33" pos:end="205:65"><expr pos:start="205:33" pos:end="205:65"><literal type="string" pos:start="205:33" pos:end="205:65">"free frame size=%d padding=%d\n"</literal></expr></argument>, 

                                <argument pos:start="207:33" pos:end="207:57"><expr pos:start="207:33" pos:end="207:57"><name pos:start="207:33" pos:end="207:57"><name pos:start="207:33" pos:end="207:33">s</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:57">free_format_frame_size</name></name></expr></argument>, <argument pos:start="207:60" pos:end="207:66"><expr pos:start="207:60" pos:end="207:66"><name pos:start="207:60" pos:end="207:66">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="209:25" pos:end="209:50"><expr pos:start="209:25" pos:end="209:49"><call pos:start="209:25" pos:end="209:49"><name pos:start="209:25" pos:end="209:37">decode_header</name><argument_list pos:start="209:38" pos:end="209:49">(<argument pos:start="209:39" pos:end="209:39"><expr pos:start="209:39" pos:end="209:39"><name pos:start="209:39" pos:end="209:39">s</name></expr></argument>, <argument pos:start="209:42" pos:end="209:48"><expr pos:start="209:42" pos:end="209:48"><name pos:start="209:42" pos:end="209:48">header1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <goto pos:start="211:25" pos:end="211:39">goto <name pos:start="211:30" pos:end="211:38">next_data</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="215:21" pos:end="215:24"><expr pos:start="215:21" pos:end="215:23"><name pos:start="215:21" pos:end="215:21">p</name><operator pos:start="215:22" pos:end="215:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

                <comment type="block" pos:start="219:17" pos:end="219:57">/* not found: simply increase pointers */</comment>

                <expr_stmt pos:start="221:17" pos:end="221:31"><expr pos:start="221:17" pos:end="221:30"><name pos:start="221:17" pos:end="221:23">buf_ptr</name> <operator pos:start="221:25" pos:end="221:26">+=</operator> <name pos:start="221:28" pos:end="221:30">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:36"><expr pos:start="223:17" pos:end="223:35"><name pos:start="223:17" pos:end="223:28"><name pos:start="223:17" pos:end="223:17">s</name><operator pos:start="223:18" pos:end="223:19">-&gt;</operator><name pos:start="223:20" pos:end="223:28">inbuf_ptr</name></name> <operator pos:start="223:30" pos:end="223:31">+=</operator> <name pos:start="223:33" pos:end="223:35">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:32"><expr pos:start="225:17" pos:end="225:31"><name pos:start="225:17" pos:end="225:24">buf_size</name> <operator pos:start="225:26" pos:end="225:27">-=</operator> <name pos:start="225:29" pos:end="225:31">len</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

	</block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="255:9">else if <condition pos:start="229:19" pos:end="229:39">(<expr pos:start="229:20" pos:end="229:38"><name pos:start="229:20" pos:end="229:22">len</name> <operator pos:start="229:24" pos:end="229:24">&lt;</operator> <name pos:start="229:26" pos:end="229:38"><name pos:start="229:26" pos:end="229:26">s</name><operator pos:start="229:27" pos:end="229:28">-&gt;</operator><name pos:start="229:29" pos:end="229:38">frame_size</name></name></expr>)</condition> <block pos:start="229:41" pos:end="255:9">{<block_content pos:start="231:13" pos:end="253:13">

            <if_stmt pos:start="231:13" pos:end="233:57"><if pos:start="231:13" pos:end="233:57">if <condition pos:start="231:16" pos:end="231:57">(<expr pos:start="231:17" pos:end="231:56"><name pos:start="231:17" pos:end="231:29"><name pos:start="231:17" pos:end="231:17">s</name><operator pos:start="231:18" pos:end="231:19">-&gt;</operator><name pos:start="231:20" pos:end="231:29">frame_size</name></name> <operator pos:start="231:31" pos:end="231:31">&gt;</operator> <name pos:start="231:33" pos:end="231:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>)</condition><block type="pseudo" pos:start="233:17" pos:end="233:57"><block_content pos:start="233:17" pos:end="233:57">

                <expr_stmt pos:start="233:17" pos:end="233:57"><expr pos:start="233:17" pos:end="233:56"><name pos:start="233:17" pos:end="233:29"><name pos:start="233:17" pos:end="233:17">s</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:29">frame_size</name></name> <operator pos:start="233:31" pos:end="233:31">=</operator> <name pos:start="233:33" pos:end="233:56">MPA_MAX_CODED_FRAME_SIZE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="235:13" pos:end="235:38"><expr pos:start="235:13" pos:end="235:37"><name pos:start="235:13" pos:end="235:15">len</name> <operator pos:start="235:17" pos:end="235:17">=</operator> <name pos:start="235:19" pos:end="235:31"><name pos:start="235:19" pos:end="235:19">s</name><operator pos:start="235:20" pos:end="235:21">-&gt;</operator><name pos:start="235:22" pos:end="235:31">frame_size</name></name> <operator pos:start="235:33" pos:end="235:33">-</operator> <name pos:start="235:35" pos:end="235:37">len</name></expr>;</expr_stmt>

	    <if_stmt pos:start="237:13" pos:end="253:13"><if pos:start="237:13" pos:end="239:31">if <condition pos:start="237:16" pos:end="237:31">(<expr pos:start="237:17" pos:end="237:30"><name pos:start="237:17" pos:end="237:19">len</name> <operator pos:start="237:21" pos:end="237:21">&gt;</operator> <name pos:start="237:23" pos:end="237:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="239:17" pos:end="239:31"><block_content pos:start="239:17" pos:end="239:31">

		<expr_stmt pos:start="239:17" pos:end="239:31"><expr pos:start="239:17" pos:end="239:30"><name pos:start="239:17" pos:end="239:19">len</name> <operator pos:start="239:21" pos:end="239:21">=</operator> <name pos:start="239:23" pos:end="239:30">buf_size</name></expr>;</expr_stmt></block_content></block></if>

	    <if type="elseif" pos:start="241:13" pos:end="253:13">else if <condition pos:start="241:21" pos:end="241:29">(<expr pos:start="241:22" pos:end="241:28"><name pos:start="241:22" pos:end="241:24">len</name> <operator pos:start="241:26" pos:end="241:26">&gt;</operator> <literal type="number" pos:start="241:28" pos:end="241:28">0</literal></expr>)</condition>

	    <block pos:start="243:13" pos:end="253:13">{<block_content pos:start="245:13" pos:end="251:28">

	    <expr_stmt pos:start="245:13" pos:end="245:47"><expr pos:start="245:13" pos:end="245:46"><call pos:start="245:13" pos:end="245:46"><name pos:start="245:13" pos:end="245:18">memcpy</name><argument_list pos:start="245:19" pos:end="245:46">(<argument pos:start="245:20" pos:end="245:31"><expr pos:start="245:20" pos:end="245:31"><name pos:start="245:20" pos:end="245:31"><name pos:start="245:20" pos:end="245:20">s</name><operator pos:start="245:21" pos:end="245:22">-&gt;</operator><name pos:start="245:23" pos:end="245:31">inbuf_ptr</name></name></expr></argument>, <argument pos:start="245:34" pos:end="245:40"><expr pos:start="245:34" pos:end="245:40"><name pos:start="245:34" pos:end="245:40">buf_ptr</name></expr></argument>, <argument pos:start="245:43" pos:end="245:45"><expr pos:start="245:43" pos:end="245:45"><name pos:start="245:43" pos:end="245:45">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="247:13" pos:end="247:27"><expr pos:start="247:13" pos:end="247:26"><name pos:start="247:13" pos:end="247:19">buf_ptr</name> <operator pos:start="247:21" pos:end="247:22">+=</operator> <name pos:start="247:24" pos:end="247:26">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="249:13" pos:end="249:32"><expr pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:24"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:24">inbuf_ptr</name></name> <operator pos:start="249:26" pos:end="249:27">+=</operator> <name pos:start="249:29" pos:end="249:31">len</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="251:13" pos:end="251:28"><expr pos:start="251:13" pos:end="251:27"><name pos:start="251:13" pos:end="251:20">buf_size</name> <operator pos:start="251:22" pos:end="251:23">-=</operator> <name pos:start="251:25" pos:end="251:27">len</name></expr>;</expr_stmt>

	    </block_content>}</block></if></if_stmt>

	</block_content>}</block></if> <else pos:start="255:11" pos:end="267:9">else <block pos:start="255:16" pos:end="267:9">{<block_content pos:start="257:13" pos:end="265:18">

            <expr_stmt pos:start="257:13" pos:end="257:55"><expr pos:start="257:13" pos:end="257:54"><name pos:start="257:13" pos:end="257:20">out_size</name> <operator pos:start="257:22" pos:end="257:22">=</operator> <call pos:start="257:24" pos:end="257:54"><name pos:start="257:24" pos:end="257:38">mp_decode_frame</name><argument_list pos:start="257:39" pos:end="257:54">(<argument pos:start="257:40" pos:end="257:40"><expr pos:start="257:40" pos:end="257:40"><name pos:start="257:40" pos:end="257:40">s</name></expr></argument>, <argument pos:start="257:43" pos:end="257:53"><expr pos:start="257:43" pos:end="257:53"><name pos:start="257:43" pos:end="257:53">out_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="259:13" pos:end="259:36"><expr pos:start="259:13" pos:end="259:35"><name pos:start="259:13" pos:end="259:24"><name pos:start="259:13" pos:end="259:13">s</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:24">inbuf_ptr</name></name> <operator pos:start="259:26" pos:end="259:26">=</operator> <name pos:start="259:28" pos:end="259:35"><name pos:start="259:28" pos:end="259:28">s</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:35">inbuf</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="261:13" pos:end="261:30"><expr pos:start="261:13" pos:end="261:29"><name pos:start="261:13" pos:end="261:25"><name pos:start="261:13" pos:end="261:13">s</name><operator pos:start="261:14" pos:end="261:15">-&gt;</operator><name pos:start="261:16" pos:end="261:25">frame_size</name></name> <operator pos:start="261:27" pos:end="261:27">=</operator> <literal type="number" pos:start="261:29" pos:end="261:29">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="263:13" pos:end="263:34"><expr pos:start="263:13" pos:end="263:33"><operator pos:start="263:13" pos:end="263:13">*</operator><name pos:start="263:14" pos:end="263:22">data_size</name> <operator pos:start="263:24" pos:end="263:24">=</operator> <name pos:start="263:26" pos:end="263:33">out_size</name></expr>;</expr_stmt>

	    <break pos:start="265:13" pos:end="265:18">break;</break>

	</block_content>}</block></else></if_stmt>

    <label pos:start="269:5" pos:end="269:14"><name pos:start="269:5" pos:end="269:13">next_data</name>:</label>

    </block_content>}</block></while>

    <return pos:start="273:5" pos:end="273:25">return <expr pos:start="273:12" pos:end="273:24"><name pos:start="273:12" pos:end="273:18">buf_ptr</name> <operator pos:start="273:20" pos:end="273:20">-</operator> <name pos:start="273:22" pos:end="273:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
