<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4868.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:36">(<parameter pos:start="1:19" pos:end="1:35"><decl pos:start="1:19" pos:end="1:35"><type pos:start="1:19" pos:end="1:32"><name pos:start="1:19" pos:end="1:30">CPUM68KState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">target_sigframe</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:33">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name> <init pos:start="7:26" pos:end="7:44">= <expr pos:start="7:28" pos:end="7:44"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:30">env</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:37">aregs</name><index pos:start="7:38" pos:end="7:40">[<expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">7</literal></expr>]</index></name> <operator pos:start="7:42" pos:end="7:42">-</operator> <literal type="number" pos:start="7:44" pos:end="7:44">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">target_sigset_t</name></type> <name pos:start="9:21" pos:end="9:30">target_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:16">set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">d0</name></decl>, <decl pos:start="13:13" pos:end="13:13"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:13" pos:end="13:13">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:61">(<expr pos:start="17:9" pos:end="17:60"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:60"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:60">(<argument pos:start="17:27" pos:end="17:37"><expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37">VERIFY_READ</name></expr></argument>, <argument pos:start="17:40" pos:end="17:44"><expr pos:start="17:40" pos:end="17:44"><name pos:start="17:40" pos:end="17:44">frame</name></expr></argument>, <argument pos:start="17:47" pos:end="17:56"><expr pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:56">frame_addr</name></expr></argument>, <argument pos:start="17:59" pos:end="17:59"><expr pos:start="17:59" pos:end="17:59"><literal type="number" pos:start="17:59" pos:end="17:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:29">/* set blocked signals */</comment>



    <if_stmt pos:start="27:5" pos:end="29:22"><if pos:start="27:5" pos:end="29:22">if <condition pos:start="27:8" pos:end="27:58">(<expr pos:start="27:9" pos:end="27:57"><call pos:start="27:9" pos:end="27:57"><name pos:start="27:9" pos:end="27:18">__get_user</name><argument_list pos:start="27:19" pos:end="27:57">(<argument pos:start="27:20" pos:end="27:36"><expr pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:36"><name pos:start="27:20" pos:end="27:29">target_set</name><operator pos:start="27:30" pos:end="27:30">.</operator><name pos:start="27:31" pos:end="27:33">sig</name><index pos:start="27:34" pos:end="27:36">[<expr pos:start="27:35" pos:end="27:35"><literal type="number" pos:start="27:35" pos:end="27:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:39" pos:end="27:56"><expr pos:start="27:39" pos:end="27:56"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:56"><name pos:start="27:40" pos:end="27:44">frame</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:48">sc</name><operator pos:start="27:49" pos:end="27:49">.</operator><name pos:start="27:50" pos:end="27:56">sc_mask</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:22"><block_content pos:start="29:9" pos:end="29:22">

        <goto pos:start="29:9" pos:end="29:22">goto <name pos:start="29:14" pos:end="29:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="33:5" pos:end="39:5">for<control pos:start="33:8" pos:end="33:42">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">1</literal></expr>;</init> <condition pos:start="33:16" pos:end="33:37"><expr pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:26">

        <if_stmt pos:start="35:9" pos:end="37:26"><if pos:start="35:9" pos:end="37:26">if <condition pos:start="35:12" pos:end="35:68">(<expr pos:start="35:13" pos:end="35:67"><call pos:start="35:13" pos:end="35:67"><name pos:start="35:13" pos:end="35:22">__get_user</name><argument_list pos:start="35:23" pos:end="35:67">(<argument pos:start="35:24" pos:end="35:40"><expr pos:start="35:24" pos:end="35:40"><name pos:start="35:24" pos:end="35:40"><name pos:start="35:24" pos:end="35:33">target_set</name><operator pos:start="35:34" pos:end="35:34">.</operator><name pos:start="35:35" pos:end="35:37">sig</name><index pos:start="35:38" pos:end="35:40">[<expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:43" pos:end="35:66"><expr pos:start="35:43" pos:end="35:66"><operator pos:start="35:43" pos:end="35:43">&amp;</operator><name pos:start="35:44" pos:end="35:66"><name pos:start="35:44" pos:end="35:48">frame</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:59">extramask</name><index pos:start="35:60" pos:end="35:66">[<expr pos:start="35:61" pos:end="35:65"><name pos:start="35:61" pos:end="35:61">i</name> <operator pos:start="35:63" pos:end="35:63">-</operator> <literal type="number" pos:start="35:65" pos:end="35:65">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:26"><block_content pos:start="37:13" pos:end="37:26">

            <goto pos:start="37:13" pos:end="37:26">goto <name pos:start="37:18" pos:end="37:25">badframe</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><call pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:34">target_to_host_sigset_internal</name><argument_list pos:start="43:35" pos:end="43:53">(<argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><operator pos:start="43:36" pos:end="43:36">&amp;</operator><name pos:start="43:37" pos:end="43:39">set</name></expr></argument>, <argument pos:start="43:42" pos:end="43:52"><expr pos:start="43:42" pos:end="43:52"><operator pos:start="43:42" pos:end="43:42">&amp;</operator><name pos:start="43:43" pos:end="43:52">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:44"><expr pos:start="45:5" pos:end="45:43"><call pos:start="45:5" pos:end="45:43"><name pos:start="45:5" pos:end="45:18">do_sigprocmask</name><argument_list pos:start="45:19" pos:end="45:43">(<argument pos:start="45:20" pos:end="45:30"><expr pos:start="45:20" pos:end="45:30"><name pos:start="45:20" pos:end="45:30">SIG_SETMASK</name></expr></argument>, <argument pos:start="45:33" pos:end="45:36"><expr pos:start="45:33" pos:end="45:36"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:36">set</name></expr></argument>, <argument pos:start="45:39" pos:end="45:42"><expr pos:start="45:39" pos:end="45:42"><name pos:start="45:39" pos:end="45:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:27">/* restore registers */</comment>



    <if_stmt pos:start="53:5" pos:end="55:22"><if pos:start="53:5" pos:end="55:22">if <condition pos:start="53:8" pos:end="53:49">(<expr pos:start="53:9" pos:end="53:48"><call pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:26">restore_sigcontext</name><argument_list pos:start="53:27" pos:end="53:48">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">env</name></expr></argument>, <argument pos:start="53:33" pos:end="53:42"><expr pos:start="53:33" pos:end="53:42"><operator pos:start="53:33" pos:end="53:33">&amp;</operator><name pos:start="53:34" pos:end="53:42"><name pos:start="53:34" pos:end="53:38">frame</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:42">sc</name></name></expr></argument>, <argument pos:start="53:45" pos:end="53:47"><expr pos:start="53:45" pos:end="53:47"><operator pos:start="53:45" pos:end="53:45">&amp;</operator><name pos:start="53:46" pos:end="53:47">d0</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:22"><block_content pos:start="55:9" pos:end="55:22">

        <goto pos:start="55:9" pos:end="55:22">goto <name pos:start="55:14" pos:end="55:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><call pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:22">unlock_user_struct</name><argument_list pos:start="59:23" pos:end="59:44">(<argument pos:start="59:24" pos:end="59:28"><expr pos:start="59:24" pos:end="59:28"><name pos:start="59:24" pos:end="59:28">frame</name></expr></argument>, <argument pos:start="59:31" pos:end="59:40"><expr pos:start="59:31" pos:end="59:40"><name pos:start="59:31" pos:end="59:40">frame_addr</name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><literal type="number" pos:start="59:43" pos:end="59:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:14">return <expr pos:start="61:12" pos:end="61:13"><name pos:start="61:12" pos:end="61:13">d0</name></expr>;</return>



<label pos:start="65:1" pos:end="65:9"><name pos:start="65:1" pos:end="65:8">badframe</name>:</label>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><call pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:22">unlock_user_struct</name><argument_list pos:start="67:23" pos:end="67:44">(<argument pos:start="67:24" pos:end="67:28"><expr pos:start="67:24" pos:end="67:28"><name pos:start="67:24" pos:end="67:28">frame</name></expr></argument>, <argument pos:start="67:31" pos:end="67:40"><expr pos:start="67:31" pos:end="67:40"><name pos:start="67:31" pos:end="67:40">frame_addr</name></expr></argument>, <argument pos:start="67:43" pos:end="67:43"><expr pos:start="67:43" pos:end="67:43"><literal type="number" pos:start="67:43" pos:end="67:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:30"><expr pos:start="69:5" pos:end="69:29"><call pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:13">force_sig</name><argument_list pos:start="69:14" pos:end="69:29">(<argument pos:start="69:15" pos:end="69:28"><expr pos:start="69:15" pos:end="69:28"><name pos:start="69:15" pos:end="69:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
