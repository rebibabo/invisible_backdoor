<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21122.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:22">block_job_create</name><parameter_list pos:start="1:23" pos:end="5:50">(<parameter pos:start="1:24" pos:end="1:51"><decl pos:start="1:24" pos:end="1:51"><type pos:start="1:24" pos:end="1:51"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:43">BlockJobDriver</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">driver</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:36"><decl pos:start="3:24" pos:end="3:36"><type pos:start="3:24" pos:end="3:36"><name pos:start="3:24" pos:end="3:30">int64_t</name></type> <name pos:start="3:32" pos:end="3:36">speed</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:61"><decl pos:start="3:39" pos:end="3:61"><type pos:start="3:39" pos:end="3:61"><name pos:start="3:39" pos:end="3:57">BlockCompletionFunc</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:61">cb</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:35"><decl pos:start="5:24" pos:end="5:35"><type pos:start="5:24" pos:end="5:35"><name pos:start="5:24" pos:end="5:27">void</name> <modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:35">opaque</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:49"><decl pos:start="5:38" pos:end="5:49"><type pos:start="5:38" pos:end="5:49"><name pos:start="5:38" pos:end="5:42">Error</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="97:1">{<block_content pos:start="9:5" pos:end="95:15">

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">BlockBackend</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BlockJob</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">job</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><call pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:14">(<argument pos:start="15:12" pos:end="15:13"><expr pos:start="15:12" pos:end="15:13"><name pos:start="15:12" pos:end="15:13">cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:10">bs</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:15">job</name></name></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:71"><expr pos:start="19:9" pos:end="19:70"><call pos:start="19:9" pos:end="19:70"><name pos:start="19:9" pos:end="19:18">error_setg</name><argument_list pos:start="19:19" pos:end="19:70">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">errp</name></expr></argument>, <argument pos:start="19:26" pos:end="19:43"><expr pos:start="19:26" pos:end="19:43"><name pos:start="19:26" pos:end="19:43">QERR_DEVICE_IN_USE</name></expr></argument>, <argument pos:start="19:46" pos:end="19:69"><expr pos:start="19:46" pos:end="19:69"><call pos:start="19:46" pos:end="19:69"><name pos:start="19:46" pos:end="19:65">bdrv_get_device_name</name><argument_list pos:start="19:66" pos:end="19:69">(<argument pos:start="19:67" pos:end="19:68"><expr pos:start="19:67" pos:end="19:68"><name pos:start="19:67" pos:end="19:68">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:20"><expr pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:7">blk</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:19"><name pos:start="27:11" pos:end="27:17">blk_new</name><argument_list pos:start="27:18" pos:end="27:19">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:17">blk_insert_bs</name><argument_list pos:start="29:18" pos:end="29:26">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">blk</name></expr></argument>, <argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:7">job</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:42"><name pos:start="33:11" pos:end="33:19">g_malloc0</name><argument_list pos:start="33:20" pos:end="33:42">(<argument pos:start="33:21" pos:end="33:41"><expr pos:start="33:21" pos:end="33:41"><name pos:start="33:21" pos:end="33:41"><name pos:start="33:21" pos:end="33:26">driver</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:41">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:54"><expr pos:start="35:5" pos:end="37:53"><call pos:start="35:5" pos:end="37:53"><name pos:start="35:5" pos:end="35:14">error_setg</name><argument_list pos:start="35:15" pos:end="37:53">(<argument pos:start="35:16" pos:end="35:28"><expr pos:start="35:16" pos:end="35:28"><operator pos:start="35:16" pos:end="35:16">&amp;</operator><name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:19">job</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">blocker</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:71"><expr pos:start="35:31" pos:end="35:71"><literal type="string" pos:start="35:31" pos:end="35:71">"block device is in use by block job: %s"</literal></expr></argument>,

               <argument pos:start="37:16" pos:end="37:52"><expr pos:start="37:16" pos:end="37:52"><name pos:start="37:16" pos:end="37:52"><name pos:start="37:16" pos:end="37:34">BlockJobType_lookup</name><index pos:start="37:35" pos:end="37:52">[<expr pos:start="37:36" pos:end="37:51"><name pos:start="37:36" pos:end="37:51"><name pos:start="37:36" pos:end="37:41">driver</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:51">job_type</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:21">bdrv_op_block_all</name><argument_list pos:start="39:22" pos:end="39:39">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">bs</name></expr></argument>, <argument pos:start="39:27" pos:end="39:38"><expr pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:29">job</name><operator pos:start="39:30" pos:end="39:31">-&gt;</operator><name pos:start="39:32" pos:end="39:38">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:63"><expr pos:start="41:5" pos:end="41:62"><call pos:start="41:5" pos:end="41:62"><name pos:start="41:5" pos:end="41:19">bdrv_op_unblock</name><argument_list pos:start="41:20" pos:end="41:62">(<argument pos:start="41:21" pos:end="41:22"><expr pos:start="41:21" pos:end="41:22"><name pos:start="41:21" pos:end="41:22">bs</name></expr></argument>, <argument pos:start="41:25" pos:end="41:47"><expr pos:start="41:25" pos:end="41:47"><name pos:start="41:25" pos:end="41:47">BLOCK_OP_TYPE_DATAPLANE</name></expr></argument>, <argument pos:start="41:50" pos:end="41:61"><expr pos:start="41:50" pos:end="41:61"><name pos:start="41:50" pos:end="41:61"><name pos:start="41:50" pos:end="41:52">job</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:61">blocker</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:7">job</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:15">driver</name></name>        <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:31">driver</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:60"><expr pos:start="47:5" pos:end="47:59"><name pos:start="47:5" pos:end="47:11"><name pos:start="47:5" pos:end="47:7">job</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:11">id</name></name>            <operator pos:start="47:24" pos:end="47:24">=</operator> <call pos:start="47:26" pos:end="47:59"><name pos:start="47:26" pos:end="47:33">g_strdup</name><argument_list pos:start="47:34" pos:end="47:59">(<argument pos:start="47:35" pos:end="47:58"><expr pos:start="47:35" pos:end="47:58"><call pos:start="47:35" pos:end="47:58"><name pos:start="47:35" pos:end="47:54">bdrv_get_device_name</name><argument_list pos:start="47:55" pos:end="47:58">(<argument pos:start="47:56" pos:end="47:57"><expr pos:start="47:56" pos:end="47:57"><name pos:start="47:56" pos:end="47:57">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:7">job</name><operator pos:start="49:8" pos:end="49:9">-&gt;</operator><name pos:start="49:10" pos:end="49:12">blk</name></name>           <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:28">blk</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:11"><name pos:start="51:5" pos:end="51:7">job</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:11">cb</name></name>            <operator pos:start="51:24" pos:end="51:24">=</operator> <name pos:start="51:26" pos:end="51:27">cb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:32"><expr pos:start="53:5" pos:end="53:31"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:7">job</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:15">opaque</name></name>        <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:31">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:30"><expr pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:13"><name pos:start="55:5" pos:end="55:7">job</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:13">busy</name></name>          <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:29">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:15"><name pos:start="57:5" pos:end="57:7">job</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:15">refcnt</name></name>        <operator pos:start="57:24" pos:end="57:24">=</operator> <literal type="number" pos:start="57:26" pos:end="57:26">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:18"><expr pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:6">bs</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:11">job</name></name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:17">job</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><call pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:21">QLIST_INSERT_HEAD</name><argument_list pos:start="63:22" pos:end="63:49">(<argument pos:start="63:23" pos:end="63:33"><expr pos:start="63:23" pos:end="63:33"><operator pos:start="63:23" pos:end="63:23">&amp;</operator><name pos:start="63:24" pos:end="63:33">block_jobs</name></expr></argument>, <argument pos:start="63:36" pos:end="63:38"><expr pos:start="63:36" pos:end="63:38"><name pos:start="63:36" pos:end="63:38">job</name></expr></argument>, <argument pos:start="63:41" pos:end="63:48"><expr pos:start="63:41" pos:end="63:48"><name pos:start="63:41" pos:end="63:48">job_list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="69:68"><expr pos:start="67:5" pos:end="69:67"><call pos:start="67:5" pos:end="69:67"><name pos:start="67:5" pos:end="67:32">blk_add_aio_context_notifier</name><argument_list pos:start="67:33" pos:end="69:67">(<argument pos:start="67:34" pos:end="67:36"><expr pos:start="67:34" pos:end="67:36"><name pos:start="67:34" pos:end="67:36">blk</name></expr></argument>, <argument pos:start="67:39" pos:end="67:68"><expr pos:start="67:39" pos:end="67:68"><name pos:start="67:39" pos:end="67:68">block_job_attached_aio_context</name></expr></argument>,

                                 <argument pos:start="69:34" pos:end="69:61"><expr pos:start="69:34" pos:end="69:61"><name pos:start="69:34" pos:end="69:61">block_job_detach_aio_context</name></expr></argument>, <argument pos:start="69:64" pos:end="69:66"><expr pos:start="69:64" pos:end="69:66"><name pos:start="69:64" pos:end="69:66">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:67">/* Only set speed when necessary to avoid NotSupported error */</comment>

    <if_stmt pos:start="75:5" pos:end="93:5"><if pos:start="75:5" pos:end="93:5">if <condition pos:start="75:8" pos:end="75:19">(<expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:13">speed</name> <operator pos:start="75:15" pos:end="75:16">!=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>)</condition> <block pos:start="75:21" pos:end="93:5">{<block_content pos:start="77:9" pos:end="91:9">

        <decl_stmt pos:start="77:9" pos:end="77:32"><decl pos:start="77:9" pos:end="77:31"><type pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:13">Error</name> <modifier pos:start="77:15" pos:end="77:15">*</modifier></type><name pos:start="77:16" pos:end="77:24">local_err</name> <init pos:start="77:26" pos:end="77:31">= <expr pos:start="77:28" pos:end="77:31"><name pos:start="77:28" pos:end="77:31">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:52"><expr pos:start="81:9" pos:end="81:51"><call pos:start="81:9" pos:end="81:51"><name pos:start="81:9" pos:end="81:27">block_job_set_speed</name><argument_list pos:start="81:28" pos:end="81:51">(<argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">job</name></expr></argument>, <argument pos:start="81:34" pos:end="81:38"><expr pos:start="81:34" pos:end="81:38"><name pos:start="81:34" pos:end="81:38">speed</name></expr></argument>, <argument pos:start="81:41" pos:end="81:50"><expr pos:start="81:41" pos:end="81:50"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:50">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:22">(<expr pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:21">local_err</name></expr>)</condition> <block pos:start="83:24" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:24">

            <expr_stmt pos:start="85:13" pos:end="85:33"><expr pos:start="85:13" pos:end="85:32"><call pos:start="85:13" pos:end="85:32"><name pos:start="85:13" pos:end="85:27">block_job_unref</name><argument_list pos:start="85:28" pos:end="85:32">(<argument pos:start="85:29" pos:end="85:31"><expr pos:start="85:29" pos:end="85:31"><name pos:start="85:29" pos:end="85:31">job</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:45"><expr pos:start="87:13" pos:end="87:44"><call pos:start="87:13" pos:end="87:44"><name pos:start="87:13" pos:end="87:27">error_propagate</name><argument_list pos:start="87:28" pos:end="87:44">(<argument pos:start="87:29" pos:end="87:32"><expr pos:start="87:29" pos:end="87:32"><name pos:start="87:29" pos:end="87:32">errp</name></expr></argument>, <argument pos:start="87:35" pos:end="87:43"><expr pos:start="87:35" pos:end="87:43"><name pos:start="87:35" pos:end="87:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:24">return <expr pos:start="89:20" pos:end="89:23"><name pos:start="89:20" pos:end="89:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="95:5" pos:end="95:15">return <expr pos:start="95:12" pos:end="95:14"><name pos:start="95:12" pos:end="95:14">job</name></expr>;</return>

</block_content>}</block></function>
</unit>
