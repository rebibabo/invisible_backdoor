<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25502.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">wav_parse_fmt_tag</name><parameter_list pos:start="1:29" pos:end="1:77">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:56">int64_t</name></type> <name pos:start="1:58" pos:end="1:61">size</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:76"><decl pos:start="1:64" pos:end="1:76"><type pos:start="1:64" pos:end="1:76"><name pos:start="1:64" pos:end="1:71">AVStream</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier><modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:76">st</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:26">/* parse fmt header */</comment>

    <expr_stmt pos:start="13:5" pos:end="13:30"><expr pos:start="13:5" pos:end="13:29"><operator pos:start="13:5" pos:end="13:5">*</operator><name pos:start="13:6" pos:end="13:7">st</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:29"><name pos:start="13:11" pos:end="13:23">av_new_stream</name><argument_list pos:start="13:24" pos:end="13:29">(<argument pos:start="13:25" pos:end="13:25"><expr pos:start="13:25" pos:end="13:25"><name pos:start="13:25" pos:end="13:25">s</name></expr></argument>, <argument pos:start="13:28" pos:end="13:28"><expr pos:start="13:28" pos:end="13:28"><literal type="number" pos:start="13:28" pos:end="13:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:31"><if pos:start="15:5" pos:end="17:31">if <condition pos:start="15:8" pos:end="15:13">(<expr pos:start="15:9" pos:end="15:12"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">*</operator><name pos:start="15:11" pos:end="15:12">st</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:31"><block_content pos:start="17:9" pos:end="17:31">

        <return pos:start="17:9" pos:end="17:31">return <expr pos:start="17:16" pos:end="17:30"><call pos:start="17:16" pos:end="17:30"><name pos:start="17:16" pos:end="17:22">AVERROR</name><argument_list pos:start="17:23" pos:end="17:30">(<argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:45"><name pos:start="21:5" pos:end="21:21">ff_get_wav_header</name><argument_list pos:start="21:22" pos:end="21:45">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">pb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:38"><expr pos:start="21:27" pos:end="21:38"><name pos:start="21:27" pos:end="21:38"><operator pos:start="21:27" pos:end="21:27">(</operator><operator pos:start="21:28" pos:end="21:28">*</operator><name pos:start="21:29" pos:end="21:30">st</name><operator pos:start="21:31" pos:end="21:31">)</operator><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:38">codec</name></name></expr></argument>, <argument pos:start="21:41" pos:end="21:44"><expr pos:start="21:41" pos:end="21:44"><name pos:start="21:41" pos:end="21:44">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:19"><if pos:start="23:5" pos:end="25:19">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:19"><block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:23"><operator pos:start="27:5" pos:end="27:5">(</operator><operator pos:start="27:6" pos:end="27:6">*</operator><name pos:start="27:7" pos:end="27:8">st</name><operator pos:start="27:9" pos:end="27:9">)</operator><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:23">need_parsing</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:45">AVSTREAM_PARSE_FULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:59"><expr pos:start="31:5" pos:end="31:58"><call pos:start="31:5" pos:end="31:58"><name pos:start="31:5" pos:end="31:19">av_set_pts_info</name><argument_list pos:start="31:20" pos:end="31:58">(<argument pos:start="31:21" pos:end="31:23"><expr pos:start="31:21" pos:end="31:23"><operator pos:start="31:21" pos:end="31:21">*</operator><name pos:start="31:22" pos:end="31:23">st</name></expr></argument>, <argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><literal type="number" pos:start="31:26" pos:end="31:27">64</literal></expr></argument>, <argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><literal type="number" pos:start="31:30" pos:end="31:30">1</literal></expr></argument>, <argument pos:start="31:33" pos:end="31:57"><expr pos:start="31:33" pos:end="31:57"><name pos:start="31:33" pos:end="31:57"><operator pos:start="31:33" pos:end="31:33">(</operator><operator pos:start="31:34" pos:end="31:34">*</operator><name pos:start="31:35" pos:end="31:36">st</name><operator pos:start="31:37" pos:end="31:37">)</operator><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:57"><name pos:start="31:40" pos:end="31:44">codec</name><operator pos:start="31:45" pos:end="31:46">-&gt;</operator><name pos:start="31:47" pos:end="31:57">sample_rate</name></name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
