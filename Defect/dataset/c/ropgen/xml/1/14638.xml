<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14638.c" pos:tabs="8"><function pos:start="1:1" pos:end="479:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decompress_p</name><parameter_list pos:start="1:24" pos:end="5:54">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:32">uint32_t</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:37">dst</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:51"><decl pos:start="3:40" pos:end="3:51"><type pos:start="3:40" pos:end="3:51"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:51">linesize</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:38"><decl pos:start="5:25" pos:end="5:38"><type pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:32">uint32_t</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">prev</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:53"><decl pos:start="5:41" pos:end="5:53"><type pos:start="5:41" pos:end="5:53"><name pos:start="5:41" pos:end="5:43">int</name></type> <name pos:start="5:45" pos:end="5:53">plinesize</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="479:1">{<block_content pos:start="9:5" pos:end="477:13">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">SCPRContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:18">s</name> <init pos:start="9:20" pos:end="9:37">= <expr pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:37"><name pos:start="9:22" pos:end="9:26">avctx</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">GetByteContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:22">gb</name> <init pos:start="11:24" pos:end="11:31">= <expr pos:start="11:26" pos:end="11:31"><operator pos:start="11:26" pos:end="11:26">&amp;</operator><name pos:start="11:27" pos:end="11:31"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:51"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>, <decl pos:start="13:14" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:17">temp</name></decl>, <decl pos:start="13:20" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:22">min</name></decl>, <decl pos:start="13:25" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:27">max</name></decl>, <decl pos:start="13:30" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:30" pos:end="13:30">x</name></decl>, <decl pos:start="13:33" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:33" pos:end="13:33">y</name></decl>, <decl pos:start="13:36" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:36" pos:end="13:37">cx</name> <init pos:start="13:39" pos:end="13:41">= <expr pos:start="13:41" pos:end="13:41"><literal type="number" pos:start="13:41" pos:end="13:41">0</literal></expr></init></decl>, <decl pos:start="13:44" pos:end="13:50"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:46">cx1</name> <init pos:start="13:48" pos:end="13:50">= <expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:43"><decl pos:start="15:5" pos:end="15:42"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">backstep</name> <init pos:start="15:18" pos:end="15:42">= <expr pos:start="15:20" pos:end="15:42"><name pos:start="15:20" pos:end="15:27">linesize</name> <operator pos:start="15:29" pos:end="15:29">-</operator> <name pos:start="15:31" pos:end="15:42"><name pos:start="15:31" pos:end="15:35">avctx</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:42">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:35"><decl pos:start="17:5" pos:end="17:34"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:21">cxshift</name> <init pos:start="17:23" pos:end="17:34">= <expr pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:34"><name pos:start="17:25" pos:end="17:25">s</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:34">cxshift</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="23:17"><if pos:start="21:5" pos:end="23:17">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:28">bytestream2_get_byte</name><argument_list pos:start="21:29" pos:end="21:32">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">gb</name></expr></argument>)</argument_list></call> <operator pos:start="21:34" pos:end="21:35">==</operator> <literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:28"><expr pos:start="25:5" pos:end="25:27"><call pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:20">bytestream2_skip</name><argument_list pos:start="25:21" pos:end="25:27">(<argument pos:start="25:22" pos:end="25:23"><expr pos:start="25:22" pos:end="25:23"><name pos:start="25:22" pos:end="25:23">gb</name></expr></argument>, <argument pos:start="25:26" pos:end="25:26"><expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><call pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:19">init_rangecoder</name><argument_list pos:start="27:20" pos:end="27:31">(<argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><operator pos:start="27:21" pos:end="27:21">&amp;</operator><name pos:start="27:22" pos:end="27:26"><name pos:start="27:22" pos:end="27:22">s</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:26">rc</name></name></expr></argument>, <argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:57"><expr pos:start="31:5" pos:end="31:56"><name pos:start="31:5" pos:end="31:7">ret</name>  <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:56"><name pos:start="31:12" pos:end="31:23">decode_value</name><argument_list pos:start="31:24" pos:end="31:56">(<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">s</name></expr></argument>, <argument pos:start="31:28" pos:end="31:41"><expr pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:41"><name pos:start="31:28" pos:end="31:28">s</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:41">range_model</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:46"><expr pos:start="31:44" pos:end="31:46"><literal type="number" pos:start="31:44" pos:end="31:46">256</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:49"><expr pos:start="31:49" pos:end="31:49"><literal type="number" pos:start="31:49" pos:end="31:49">1</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:55"><expr pos:start="31:52" pos:end="31:55"><operator pos:start="31:52" pos:end="31:52">&amp;</operator><name pos:start="31:53" pos:end="31:55">min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:58"><expr pos:start="33:5" pos:end="33:57"><name pos:start="33:5" pos:end="33:7">ret</name> <operator pos:start="33:9" pos:end="33:10">|=</operator> <call pos:start="33:12" pos:end="33:57"><name pos:start="33:12" pos:end="33:23">decode_value</name><argument_list pos:start="33:24" pos:end="33:57">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">s</name></expr></argument>, <argument pos:start="33:28" pos:end="33:41"><expr pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:41"><name pos:start="33:28" pos:end="33:28">s</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:41">range_model</name></name></expr></argument>, <argument pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><literal type="number" pos:start="33:44" pos:end="33:46">256</literal></expr></argument>, <argument pos:start="33:49" pos:end="33:49"><expr pos:start="33:49" pos:end="33:49"><literal type="number" pos:start="33:49" pos:end="33:49">1</literal></expr></argument>, <argument pos:start="33:52" pos:end="33:56"><expr pos:start="33:52" pos:end="33:56"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:56">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:7">min</name> <operator pos:start="35:9" pos:end="35:10">+=</operator> <name pos:start="35:12" pos:end="35:15">temp</name> <operator pos:start="35:17" pos:end="35:18">&lt;&lt;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:57"><expr pos:start="37:5" pos:end="37:56"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:10">|=</operator> <call pos:start="37:12" pos:end="37:56"><name pos:start="37:12" pos:end="37:23">decode_value</name><argument_list pos:start="37:24" pos:end="37:56">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">s</name></expr></argument>, <argument pos:start="37:28" pos:end="37:41"><expr pos:start="37:28" pos:end="37:41"><name pos:start="37:28" pos:end="37:41"><name pos:start="37:28" pos:end="37:28">s</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:41">range_model</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:46"><expr pos:start="37:44" pos:end="37:46"><literal type="number" pos:start="37:44" pos:end="37:46">256</literal></expr></argument>, <argument pos:start="37:49" pos:end="37:49"><expr pos:start="37:49" pos:end="37:49"><literal type="number" pos:start="37:49" pos:end="37:49">1</literal></expr></argument>, <argument pos:start="37:52" pos:end="37:55"><expr pos:start="37:52" pos:end="37:55"><operator pos:start="37:52" pos:end="37:52">&amp;</operator><name pos:start="37:53" pos:end="37:55">max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:58"><expr pos:start="39:5" pos:end="39:57"><name pos:start="39:5" pos:end="39:7">ret</name> <operator pos:start="39:9" pos:end="39:10">|=</operator> <call pos:start="39:12" pos:end="39:57"><name pos:start="39:12" pos:end="39:23">decode_value</name><argument_list pos:start="39:24" pos:end="39:57">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">s</name></expr></argument>, <argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:41">range_model</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><literal type="number" pos:start="39:44" pos:end="39:46">256</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">1</literal></expr></argument>, <argument pos:start="39:52" pos:end="39:56"><expr pos:start="39:52" pos:end="39:56"><operator pos:start="39:52" pos:end="39:52">&amp;</operator><name pos:start="39:53" pos:end="39:56">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:21"><expr pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:7">max</name> <operator pos:start="47:9" pos:end="47:10">+=</operator> <name pos:start="47:12" pos:end="47:15">temp</name> <operator pos:start="47:17" pos:end="47:18">&lt;&lt;</operator> <literal type="number" pos:start="47:20" pos:end="47:20">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><call pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:10">memset</name><argument_list pos:start="49:11" pos:end="49:57">(<argument pos:start="49:12" pos:end="49:20"><expr pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:20"><name pos:start="49:12" pos:end="49:12">s</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:20">blocks</name></name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">0</literal></expr></argument>, <argument pos:start="49:26" pos:end="49:56"><expr pos:start="49:26" pos:end="49:56"><sizeof pos:start="49:26" pos:end="49:43">sizeof<argument_list pos:start="49:32" pos:end="49:43">(<argument pos:start="49:33" pos:end="49:42"><expr pos:start="49:33" pos:end="49:42"><operator pos:start="49:33" pos:end="49:33">*</operator><name pos:start="49:34" pos:end="49:42"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:42">blocks</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="49:45" pos:end="49:45">*</operator> <name pos:start="49:47" pos:end="49:56"><name pos:start="49:47" pos:end="49:47">s</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:56">nbcount</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="53:5" pos:end="75:5">while <condition pos:start="53:11" pos:end="53:22">(<expr pos:start="53:12" pos:end="53:21"><name pos:start="53:12" pos:end="53:14">min</name> <operator pos:start="53:16" pos:end="53:17">&lt;=</operator> <name pos:start="53:19" pos:end="53:21">max</name></expr>)</condition> <block pos:start="53:24" pos:end="75:5">{<block_content pos:start="55:9" pos:end="73:9">

        <decl_stmt pos:start="55:9" pos:end="55:24"><decl pos:start="55:9" pos:end="55:16"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:16">fill</name></decl>, <decl pos:start="55:19" pos:end="55:23"><type ref="prev" pos:start="55:9" pos:end="55:11"/><name pos:start="55:19" pos:end="55:23">count</name></decl>;</decl_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:63"><expr pos:start="59:9" pos:end="59:62"><name pos:start="59:9" pos:end="59:11">ret</name>  <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:62"><name pos:start="59:16" pos:end="59:27">decode_value</name><argument_list pos:start="59:28" pos:end="59:62">(<argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><name pos:start="59:29" pos:end="59:29">s</name></expr></argument>, <argument pos:start="59:32" pos:end="59:44"><expr pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:32">s</name><operator pos:start="59:33" pos:end="59:34">-&gt;</operator><name pos:start="59:35" pos:end="59:44">fill_model</name></name></expr></argument>,  <argument pos:start="59:48" pos:end="59:48"><expr pos:start="59:48" pos:end="59:48"><literal type="number" pos:start="59:48" pos:end="59:48">5</literal></expr></argument>,   <argument pos:start="59:53" pos:end="59:54"><expr pos:start="59:53" pos:end="59:54"><literal type="number" pos:start="59:53" pos:end="59:54">10</literal></expr></argument>, <argument pos:start="59:57" pos:end="59:61"><expr pos:start="59:57" pos:end="59:61"><operator pos:start="59:57" pos:end="59:57">&amp;</operator><name pos:start="59:58" pos:end="59:61">fill</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:64"><expr pos:start="61:9" pos:end="61:63"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:14">|=</operator> <call pos:start="61:16" pos:end="61:63"><name pos:start="61:16" pos:end="61:27">decode_value</name><argument_list pos:start="61:28" pos:end="61:63">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">s</name></expr></argument>, <argument pos:start="61:32" pos:end="61:45"><expr pos:start="61:32" pos:end="61:45"><name pos:start="61:32" pos:end="61:45"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:45">count_model</name></name></expr></argument>, <argument pos:start="61:48" pos:end="61:50"><expr pos:start="61:48" pos:end="61:50"><literal type="number" pos:start="61:48" pos:end="61:50">256</literal></expr></argument>, <argument pos:start="61:53" pos:end="61:54"><expr pos:start="61:53" pos:end="61:54"><literal type="number" pos:start="61:53" pos:end="61:54">20</literal></expr></argument>, <argument pos:start="61:57" pos:end="61:62"><expr pos:start="61:57" pos:end="61:62"><operator pos:start="61:57" pos:end="61:57">&amp;</operator><name pos:start="61:58" pos:end="61:62">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="65:23"><if pos:start="63:9" pos:end="65:23">if <condition pos:start="63:12" pos:end="63:20">(<expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:15">ret</name> <operator pos:start="63:17" pos:end="63:17">&lt;</operator> <literal type="number" pos:start="63:19" pos:end="63:19">0</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:23"><block_content pos:start="65:13" pos:end="65:23">

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <while pos:start="69:9" pos:end="73:9">while <condition pos:start="69:15" pos:end="69:47">(<expr pos:start="69:16" pos:end="69:46"><name pos:start="69:16" pos:end="69:44"><name pos:start="69:16" pos:end="69:18">min</name> <argument_list type="generic" pos:start="69:20" pos:end="69:44">&lt; <argument pos:start="69:22" pos:end="69:42"><expr pos:start="69:22" pos:end="69:42"><name pos:start="69:22" pos:end="69:31"><name pos:start="69:22" pos:end="69:22">s</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:31">nbcount</name></name> <operator pos:start="69:33" pos:end="69:34">&amp;&amp;</operator> <name pos:start="69:36" pos:end="69:40">count</name><operator pos:start="69:41" pos:end="69:42">--</operator></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="69:46" pos:end="69:46">0</literal></expr>)</condition> <block pos:start="69:49" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:36">

            <expr_stmt pos:start="71:13" pos:end="71:36"><expr pos:start="71:13" pos:end="71:35"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:21">blocks</name><index pos:start="71:22" pos:end="71:28">[<expr pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:25">min</name><operator pos:start="71:26" pos:end="71:27">++</operator></expr>]</index></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:35">fill</name></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>



    <for pos:start="79:5" pos:end="473:5">for <control pos:start="79:9" pos:end="79:32">(<init pos:start="79:10" pos:end="79:15"><expr pos:start="79:10" pos:end="79:14"><name pos:start="79:10" pos:end="79:10">y</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <literal type="number" pos:start="79:14" pos:end="79:14">0</literal></expr>;</init> <condition pos:start="79:17" pos:end="79:27"><expr pos:start="79:17" pos:end="79:26"><name pos:start="79:17" pos:end="79:17">y</name> <operator pos:start="79:19" pos:end="79:19">&lt;</operator> <name pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:21">s</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:26">nby</name></name></expr>;</condition> <incr pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:29">y</name><operator pos:start="79:30" pos:end="79:31">++</operator></expr></incr>)</control> <block pos:start="79:34" pos:end="473:5">{<block_content pos:start="81:9" pos:end="471:9">

        <for pos:start="81:9" pos:end="471:9">for <control pos:start="81:13" pos:end="81:36">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">x</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:31"><expr pos:start="81:21" pos:end="81:30"><name pos:start="81:21" pos:end="81:21">x</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <name pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:30">nbx</name></name></expr>;</condition> <incr pos:start="81:33" pos:end="81:35"><expr pos:start="81:33" pos:end="81:35"><name pos:start="81:33" pos:end="81:33">x</name><operator pos:start="81:34" pos:end="81:35">++</operator></expr></incr>)</control> <block pos:start="81:38" pos:end="471:9">{<block_content pos:start="83:13" pos:end="469:13">

            <decl_stmt pos:start="83:13" pos:end="83:53"><decl pos:start="83:13" pos:end="83:23"><type pos:start="83:13" pos:end="83:15"><name pos:start="83:13" pos:end="83:15">int</name></type> <name pos:start="83:17" pos:end="83:19">sy1</name> <init pos:start="83:21" pos:end="83:23">= <expr pos:start="83:23" pos:end="83:23"><literal type="number" pos:start="83:23" pos:end="83:23">0</literal></expr></init></decl>, <decl pos:start="83:26" pos:end="83:33"><type ref="prev" pos:start="83:13" pos:end="83:15"/><name pos:start="83:26" pos:end="83:28">sy2</name> <init pos:start="83:30" pos:end="83:33">= <expr pos:start="83:32" pos:end="83:33"><literal type="number" pos:start="83:32" pos:end="83:33">16</literal></expr></init></decl>, <decl pos:start="83:36" pos:end="83:42"><type ref="prev" pos:start="83:13" pos:end="83:15"/><name pos:start="83:36" pos:end="83:38">sx1</name> <init pos:start="83:40" pos:end="83:42">= <expr pos:start="83:42" pos:end="83:42"><literal type="number" pos:start="83:42" pos:end="83:42">0</literal></expr></init></decl>, <decl pos:start="83:45" pos:end="83:52"><type ref="prev" pos:start="83:13" pos:end="83:15"/><name pos:start="83:45" pos:end="83:47">sx2</name> <init pos:start="83:49" pos:end="83:52">= <expr pos:start="83:51" pos:end="83:52"><literal type="number" pos:start="83:51" pos:end="83:52">16</literal></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="87:13" pos:end="89:25"><if pos:start="87:13" pos:end="89:25">if <condition pos:start="87:16" pos:end="87:47">(<expr pos:start="87:17" pos:end="87:46"><name pos:start="87:17" pos:end="87:41"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:25">blocks</name><index pos:start="87:26" pos:end="87:41">[<expr pos:start="87:27" pos:end="87:40"><name pos:start="87:27" pos:end="87:27">y</name> <operator pos:start="87:29" pos:end="87:29">*</operator> <name pos:start="87:31" pos:end="87:36"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:36">nbx</name></name> <operator pos:start="87:38" pos:end="87:38">+</operator> <name pos:start="87:40" pos:end="87:40">x</name></expr>]</index></name> <operator pos:start="87:43" pos:end="87:44">==</operator> <literal type="number" pos:start="87:46" pos:end="87:46">0</literal></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:25"><block_content pos:start="89:17" pos:end="89:25">

                <continue pos:start="89:17" pos:end="89:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="93:13" pos:end="113:13"><if pos:start="93:13" pos:end="113:13">if <condition pos:start="93:16" pos:end="93:58">(<expr pos:start="93:17" pos:end="93:57"><operator pos:start="93:17" pos:end="93:17">(</operator><operator pos:start="93:18" pos:end="93:18">(</operator><name pos:start="93:19" pos:end="93:43"><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:27">blocks</name><index pos:start="93:28" pos:end="93:43">[<expr pos:start="93:29" pos:end="93:42"><name pos:start="93:29" pos:end="93:29">y</name> <operator pos:start="93:31" pos:end="93:31">*</operator> <name pos:start="93:33" pos:end="93:38"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:38">nbx</name></name> <operator pos:start="93:40" pos:end="93:40">+</operator> <name pos:start="93:42" pos:end="93:42">x</name></expr>]</index></name> <operator pos:start="93:45" pos:end="93:45">-</operator> <literal type="number" pos:start="93:47" pos:end="93:47">1</literal><operator pos:start="93:48" pos:end="93:48">)</operator> <operator pos:start="93:50" pos:end="93:50">&amp;</operator> <literal type="number" pos:start="93:52" pos:end="93:52">1</literal><operator pos:start="93:53" pos:end="93:53">)</operator> <operator pos:start="93:55" pos:end="93:55">&gt;</operator> <literal type="number" pos:start="93:57" pos:end="93:57">0</literal></expr>)</condition> <block pos:start="93:60" pos:end="113:13">{<block_content pos:start="95:17" pos:end="111:22">

                <expr_stmt pos:start="95:17" pos:end="95:71"><expr pos:start="95:17" pos:end="95:70"><name pos:start="95:17" pos:end="95:19">ret</name>  <operator pos:start="95:22" pos:end="95:22">=</operator> <call pos:start="95:24" pos:end="95:70"><name pos:start="95:24" pos:end="95:35">decode_value</name><argument_list pos:start="95:36" pos:end="95:70">(<argument pos:start="95:37" pos:end="95:37"><expr pos:start="95:37" pos:end="95:37"><name pos:start="95:37" pos:end="95:37">s</name></expr></argument>, <argument pos:start="95:40" pos:end="95:54"><expr pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:40">s</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:51">sxy_model</name><index pos:start="95:52" pos:end="95:54">[<expr pos:start="95:53" pos:end="95:53"><literal type="number" pos:start="95:53" pos:end="95:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:57" pos:end="95:58"><expr pos:start="95:57" pos:end="95:58"><literal type="number" pos:start="95:57" pos:end="95:58">16</literal></expr></argument>, <argument pos:start="95:61" pos:end="95:63"><expr pos:start="95:61" pos:end="95:63"><literal type="number" pos:start="95:61" pos:end="95:63">100</literal></expr></argument>, <argument pos:start="95:66" pos:end="95:69"><expr pos:start="95:66" pos:end="95:69"><operator pos:start="95:66" pos:end="95:66">&amp;</operator><name pos:start="95:67" pos:end="95:69">sx1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:71"><expr pos:start="97:17" pos:end="97:70"><name pos:start="97:17" pos:end="97:19">ret</name> <operator pos:start="97:21" pos:end="97:22">|=</operator> <call pos:start="97:24" pos:end="97:70"><name pos:start="97:24" pos:end="97:35">decode_value</name><argument_list pos:start="97:36" pos:end="97:70">(<argument pos:start="97:37" pos:end="97:37"><expr pos:start="97:37" pos:end="97:37"><name pos:start="97:37" pos:end="97:37">s</name></expr></argument>, <argument pos:start="97:40" pos:end="97:54"><expr pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:54"><name pos:start="97:40" pos:end="97:40">s</name><operator pos:start="97:41" pos:end="97:42">-&gt;</operator><name pos:start="97:43" pos:end="97:51">sxy_model</name><index pos:start="97:52" pos:end="97:54">[<expr pos:start="97:53" pos:end="97:53"><literal type="number" pos:start="97:53" pos:end="97:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:57" pos:end="97:58"><expr pos:start="97:57" pos:end="97:58"><literal type="number" pos:start="97:57" pos:end="97:58">16</literal></expr></argument>, <argument pos:start="97:61" pos:end="97:63"><expr pos:start="97:61" pos:end="97:63"><literal type="number" pos:start="97:61" pos:end="97:63">100</literal></expr></argument>, <argument pos:start="97:66" pos:end="97:69"><expr pos:start="97:66" pos:end="97:69"><operator pos:start="97:66" pos:end="97:66">&amp;</operator><name pos:start="97:67" pos:end="97:69">sy1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:71"><expr pos:start="99:17" pos:end="99:70"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:22">|=</operator> <call pos:start="99:24" pos:end="99:70"><name pos:start="99:24" pos:end="99:35">decode_value</name><argument_list pos:start="99:36" pos:end="99:70">(<argument pos:start="99:37" pos:end="99:37"><expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">s</name></expr></argument>, <argument pos:start="99:40" pos:end="99:54"><expr pos:start="99:40" pos:end="99:54"><name pos:start="99:40" pos:end="99:54"><name pos:start="99:40" pos:end="99:40">s</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:51">sxy_model</name><index pos:start="99:52" pos:end="99:54">[<expr pos:start="99:53" pos:end="99:53"><literal type="number" pos:start="99:53" pos:end="99:53">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:57" pos:end="99:58"><expr pos:start="99:57" pos:end="99:58"><literal type="number" pos:start="99:57" pos:end="99:58">16</literal></expr></argument>, <argument pos:start="99:61" pos:end="99:63"><expr pos:start="99:61" pos:end="99:63"><literal type="number" pos:start="99:61" pos:end="99:63">100</literal></expr></argument>, <argument pos:start="99:66" pos:end="99:69"><expr pos:start="99:66" pos:end="99:69"><operator pos:start="99:66" pos:end="99:66">&amp;</operator><name pos:start="99:67" pos:end="99:69">sx2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:71"><expr pos:start="101:17" pos:end="101:70"><name pos:start="101:17" pos:end="101:19">ret</name> <operator pos:start="101:21" pos:end="101:22">|=</operator> <call pos:start="101:24" pos:end="101:70"><name pos:start="101:24" pos:end="101:35">decode_value</name><argument_list pos:start="101:36" pos:end="101:70">(<argument pos:start="101:37" pos:end="101:37"><expr pos:start="101:37" pos:end="101:37"><name pos:start="101:37" pos:end="101:37">s</name></expr></argument>, <argument pos:start="101:40" pos:end="101:54"><expr pos:start="101:40" pos:end="101:54"><name pos:start="101:40" pos:end="101:54"><name pos:start="101:40" pos:end="101:40">s</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:51">sxy_model</name><index pos:start="101:52" pos:end="101:54">[<expr pos:start="101:53" pos:end="101:53"><literal type="number" pos:start="101:53" pos:end="101:53">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="101:57" pos:end="101:58"><expr pos:start="101:57" pos:end="101:58"><literal type="number" pos:start="101:57" pos:end="101:58">16</literal></expr></argument>, <argument pos:start="101:61" pos:end="101:63"><expr pos:start="101:61" pos:end="101:63"><literal type="number" pos:start="101:61" pos:end="101:63">100</literal></expr></argument>, <argument pos:start="101:66" pos:end="101:69"><expr pos:start="101:66" pos:end="101:69"><operator pos:start="101:66" pos:end="101:66">&amp;</operator><name pos:start="101:67" pos:end="101:69">sy2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="103:17" pos:end="105:31"><if pos:start="103:17" pos:end="105:31">if <condition pos:start="103:20" pos:end="103:28">(<expr pos:start="103:21" pos:end="103:27"><name pos:start="103:21" pos:end="103:23">ret</name> <operator pos:start="103:25" pos:end="103:25">&lt;</operator> <literal type="number" pos:start="103:27" pos:end="103:27">0</literal></expr>)</condition><block type="pseudo" pos:start="105:21" pos:end="105:31"><block_content pos:start="105:21" pos:end="105:31">

                    <return pos:start="105:21" pos:end="105:31">return <expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">ret</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="109:17" pos:end="109:22"><expr pos:start="109:17" pos:end="109:21"><name pos:start="109:17" pos:end="109:19">sx2</name><operator pos:start="109:20" pos:end="109:21">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:22"><expr pos:start="111:17" pos:end="111:21"><name pos:start="111:17" pos:end="111:19">sy2</name><operator pos:start="111:20" pos:end="111:21">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="469:13"><if pos:start="115:13" pos:end="157:13">if <condition pos:start="115:16" pos:end="115:58">(<expr pos:start="115:17" pos:end="115:57"><operator pos:start="115:17" pos:end="115:17">(</operator><operator pos:start="115:18" pos:end="115:18">(</operator><name pos:start="115:19" pos:end="115:43"><name pos:start="115:19" pos:end="115:19">s</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:27">blocks</name><index pos:start="115:28" pos:end="115:43">[<expr pos:start="115:29" pos:end="115:42"><name pos:start="115:29" pos:end="115:29">y</name> <operator pos:start="115:31" pos:end="115:31">*</operator> <name pos:start="115:33" pos:end="115:38"><name pos:start="115:33" pos:end="115:33">s</name><operator pos:start="115:34" pos:end="115:35">-&gt;</operator><name pos:start="115:36" pos:end="115:38">nbx</name></name> <operator pos:start="115:40" pos:end="115:40">+</operator> <name pos:start="115:42" pos:end="115:42">x</name></expr>]</index></name> <operator pos:start="115:45" pos:end="115:45">-</operator> <literal type="number" pos:start="115:47" pos:end="115:47">1</literal><operator pos:start="115:48" pos:end="115:48">)</operator> <operator pos:start="115:50" pos:end="115:50">&amp;</operator> <literal type="number" pos:start="115:52" pos:end="115:52">2</literal><operator pos:start="115:53" pos:end="115:53">)</operator> <operator pos:start="115:55" pos:end="115:55">&gt;</operator> <literal type="number" pos:start="115:57" pos:end="115:57">0</literal></expr>)</condition> <block pos:start="115:60" pos:end="157:13">{<block_content pos:start="117:17" pos:end="155:17">

                <decl_stmt pos:start="117:17" pos:end="117:51"><decl pos:start="117:17" pos:end="117:21"><type pos:start="117:17" pos:end="117:19"><name pos:start="117:17" pos:end="117:19">int</name></type> <name pos:start="117:21" pos:end="117:21">i</name></decl>, <decl pos:start="117:24" pos:end="117:24"><type ref="prev" pos:start="117:17" pos:end="117:19"/><name pos:start="117:24" pos:end="117:24">j</name></decl>, <decl pos:start="117:27" pos:end="117:37"><type ref="prev" pos:start="117:17" pos:end="117:19"/><name pos:start="117:27" pos:end="117:28">by</name> <init pos:start="117:30" pos:end="117:37">= <expr pos:start="117:32" pos:end="117:37"><name pos:start="117:32" pos:end="117:32">y</name> <operator pos:start="117:34" pos:end="117:34">*</operator> <literal type="number" pos:start="117:36" pos:end="117:37">16</literal></expr></init></decl>, <decl pos:start="117:40" pos:end="117:50"><type ref="prev" pos:start="117:17" pos:end="117:19"/><name pos:start="117:40" pos:end="117:41">bx</name> <init pos:start="117:43" pos:end="117:50">= <expr pos:start="117:45" pos:end="117:50"><name pos:start="117:45" pos:end="117:45">x</name> <operator pos:start="117:47" pos:end="117:47">*</operator> <literal type="number" pos:start="117:49" pos:end="117:50">16</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="119:17" pos:end="119:29"><decl pos:start="119:17" pos:end="119:23"><type pos:start="119:17" pos:end="119:19"><name pos:start="119:17" pos:end="119:19">int</name></type> <name pos:start="119:21" pos:end="119:23">mvx</name></decl>, <decl pos:start="119:26" pos:end="119:28"><type ref="prev" pos:start="119:17" pos:end="119:19"/><name pos:start="119:26" pos:end="119:28">mvy</name></decl>;</decl_stmt>



                <expr_stmt pos:start="123:17" pos:end="123:71"><expr pos:start="123:17" pos:end="123:70"><name pos:start="123:17" pos:end="123:19">ret</name>  <operator pos:start="123:22" pos:end="123:22">=</operator> <call pos:start="123:24" pos:end="123:70"><name pos:start="123:24" pos:end="123:35">decode_value</name><argument_list pos:start="123:36" pos:end="123:70">(<argument pos:start="123:37" pos:end="123:37"><expr pos:start="123:37" pos:end="123:37"><name pos:start="123:37" pos:end="123:37">s</name></expr></argument>, <argument pos:start="123:40" pos:end="123:53"><expr pos:start="123:40" pos:end="123:53"><name pos:start="123:40" pos:end="123:53"><name pos:start="123:40" pos:end="123:40">s</name><operator pos:start="123:41" pos:end="123:42">-&gt;</operator><name pos:start="123:43" pos:end="123:50">mv_model</name><index pos:start="123:51" pos:end="123:53">[<expr pos:start="123:52" pos:end="123:52"><literal type="number" pos:start="123:52" pos:end="123:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="123:56" pos:end="123:58"><expr pos:start="123:56" pos:end="123:58"><literal type="number" pos:start="123:56" pos:end="123:58">512</literal></expr></argument>, <argument pos:start="123:61" pos:end="123:63"><expr pos:start="123:61" pos:end="123:63"><literal type="number" pos:start="123:61" pos:end="123:63">100</literal></expr></argument>, <argument pos:start="123:66" pos:end="123:69"><expr pos:start="123:66" pos:end="123:69"><operator pos:start="123:66" pos:end="123:66">&amp;</operator><name pos:start="123:67" pos:end="123:69">mvx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="125:71"><expr pos:start="125:17" pos:end="125:70"><name pos:start="125:17" pos:end="125:19">ret</name> <operator pos:start="125:21" pos:end="125:22">|=</operator> <call pos:start="125:24" pos:end="125:70"><name pos:start="125:24" pos:end="125:35">decode_value</name><argument_list pos:start="125:36" pos:end="125:70">(<argument pos:start="125:37" pos:end="125:37"><expr pos:start="125:37" pos:end="125:37"><name pos:start="125:37" pos:end="125:37">s</name></expr></argument>, <argument pos:start="125:40" pos:end="125:53"><expr pos:start="125:40" pos:end="125:53"><name pos:start="125:40" pos:end="125:53"><name pos:start="125:40" pos:end="125:40">s</name><operator pos:start="125:41" pos:end="125:42">-&gt;</operator><name pos:start="125:43" pos:end="125:50">mv_model</name><index pos:start="125:51" pos:end="125:53">[<expr pos:start="125:52" pos:end="125:52"><literal type="number" pos:start="125:52" pos:end="125:52">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:56" pos:end="125:58"><expr pos:start="125:56" pos:end="125:58"><literal type="number" pos:start="125:56" pos:end="125:58">512</literal></expr></argument>, <argument pos:start="125:61" pos:end="125:63"><expr pos:start="125:61" pos:end="125:63"><literal type="number" pos:start="125:61" pos:end="125:63">100</literal></expr></argument>, <argument pos:start="125:66" pos:end="125:69"><expr pos:start="125:66" pos:end="125:69"><operator pos:start="125:66" pos:end="125:66">&amp;</operator><name pos:start="125:67" pos:end="125:69">mvy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="127:17" pos:end="129:31"><if pos:start="127:17" pos:end="129:31">if <condition pos:start="127:20" pos:end="127:28">(<expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:23">ret</name> <operator pos:start="127:25" pos:end="127:25">&lt;</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>)</condition><block type="pseudo" pos:start="129:21" pos:end="129:31"><block_content pos:start="129:21" pos:end="129:31">

                    <return pos:start="129:21" pos:end="129:31">return <expr pos:start="129:28" pos:end="129:30"><name pos:start="129:28" pos:end="129:30">ret</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="133:17" pos:end="133:27"><expr pos:start="133:17" pos:end="133:26"><name pos:start="133:17" pos:end="133:19">mvx</name> <operator pos:start="133:21" pos:end="133:22">-=</operator> <literal type="number" pos:start="133:24" pos:end="133:26">256</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="135:17" pos:end="135:27"><expr pos:start="135:17" pos:end="135:26"><name pos:start="135:17" pos:end="135:19">mvy</name> <operator pos:start="135:21" pos:end="135:22">-=</operator> <literal type="number" pos:start="135:24" pos:end="135:26">256</literal></expr>;</expr_stmt>



                <if_stmt pos:start="139:17" pos:end="143:47"><if pos:start="139:17" pos:end="143:47">if <condition pos:start="139:20" pos:end="141:86">(<expr pos:start="139:21" pos:end="141:85"><name pos:start="139:21" pos:end="139:22">by</name> <operator pos:start="139:24" pos:end="139:24">+</operator> <name pos:start="139:26" pos:end="139:28">mvy</name> <operator pos:start="139:30" pos:end="139:30">+</operator> <name pos:start="139:32" pos:end="139:34">sy1</name> <operator pos:start="139:36" pos:end="139:36">&lt;</operator> <literal type="number" pos:start="139:38" pos:end="139:38">0</literal> <operator pos:start="139:40" pos:end="139:41">||</operator> <name pos:start="139:43" pos:end="139:44">bx</name> <operator pos:start="139:46" pos:end="139:46">+</operator> <name pos:start="139:48" pos:end="139:50">mvx</name> <operator pos:start="139:52" pos:end="139:52">+</operator> <name pos:start="139:54" pos:end="139:56">sx1</name> <operator pos:start="139:58" pos:end="139:58">&lt;</operator> <literal type="number" pos:start="139:60" pos:end="139:60">0</literal> <operator pos:start="139:62" pos:end="139:63">||</operator>

                    <name pos:start="141:21" pos:end="141:22">by</name> <operator pos:start="141:24" pos:end="141:24">+</operator> <name pos:start="141:26" pos:end="141:28">mvy</name> <operator pos:start="141:30" pos:end="141:30">+</operator> <name pos:start="141:32" pos:end="141:34">sy1</name> <operator pos:start="141:36" pos:end="141:37">&gt;=</operator> <name pos:start="141:39" pos:end="141:51"><name pos:start="141:39" pos:end="141:43">avctx</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:51">height</name></name> <operator pos:start="141:53" pos:end="141:54">||</operator> <name pos:start="141:56" pos:end="141:57">bx</name> <operator pos:start="141:59" pos:end="141:59">+</operator> <name pos:start="141:61" pos:end="141:63">mvx</name> <operator pos:start="141:65" pos:end="141:65">+</operator> <name pos:start="141:67" pos:end="141:69">sx1</name> <operator pos:start="141:71" pos:end="141:72">&gt;=</operator> <name pos:start="141:74" pos:end="141:85"><name pos:start="141:74" pos:end="141:78">avctx</name><operator pos:start="141:79" pos:end="141:80">-&gt;</operator><name pos:start="141:81" pos:end="141:85">width</name></name></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:47"><block_content pos:start="143:21" pos:end="143:47">

                    <return pos:start="143:21" pos:end="143:47">return <expr pos:start="143:28" pos:end="143:46"><name pos:start="143:28" pos:end="143:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <for pos:start="147:17" pos:end="155:17">for <control pos:start="147:21" pos:end="147:121">(<init pos:start="147:22" pos:end="147:27"><expr pos:start="147:22" pos:end="147:26"><name pos:start="147:22" pos:end="147:22">i</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <literal type="number" pos:start="147:26" pos:end="147:26">0</literal></expr>;</init> <condition pos:start="147:29" pos:end="147:116"><expr pos:start="147:29" pos:end="147:115"><name pos:start="147:29" pos:end="147:29">i</name> <operator pos:start="147:31" pos:end="147:31">&lt;</operator> <name pos:start="147:33" pos:end="147:35">sy2</name> <operator pos:start="147:37" pos:end="147:37">-</operator> <name pos:start="147:39" pos:end="147:41">sy1</name> <operator pos:start="147:43" pos:end="147:44">&amp;&amp;</operator> <operator pos:start="147:46" pos:end="147:46">(</operator><name pos:start="147:47" pos:end="147:48">by</name> <operator pos:start="147:50" pos:end="147:50">+</operator> <name pos:start="147:52" pos:end="147:54">sy1</name> <operator pos:start="147:56" pos:end="147:56">+</operator> <name pos:start="147:58" pos:end="147:58">i</name><operator pos:start="147:59" pos:end="147:59">)</operator> <operator pos:start="147:61" pos:end="147:61">&lt;</operator> <name pos:start="147:63" pos:end="147:75"><name pos:start="147:63" pos:end="147:67">avctx</name><operator pos:start="147:68" pos:end="147:69">-&gt;</operator><name pos:start="147:70" pos:end="147:75">height</name></name> <operator pos:start="147:77" pos:end="147:78">&amp;&amp;</operator> <operator pos:start="147:80" pos:end="147:80">(</operator><name pos:start="147:81" pos:end="147:82">by</name> <operator pos:start="147:84" pos:end="147:84">+</operator> <name pos:start="147:86" pos:end="147:88">mvy</name> <operator pos:start="147:90" pos:end="147:90">+</operator> <name pos:start="147:92" pos:end="147:94">sy1</name> <operator pos:start="147:96" pos:end="147:96">+</operator> <name pos:start="147:98" pos:end="147:98">i</name><operator pos:start="147:99" pos:end="147:99">)</operator> <operator pos:start="147:101" pos:end="147:101">&lt;</operator> <name pos:start="147:103" pos:end="147:115"><name pos:start="147:103" pos:end="147:107">avctx</name><operator pos:start="147:108" pos:end="147:109">-&gt;</operator><name pos:start="147:110" pos:end="147:115">height</name></name></expr>;</condition> <incr pos:start="147:118" pos:end="147:120"><expr pos:start="147:118" pos:end="147:120"><name pos:start="147:118" pos:end="147:118">i</name><operator pos:start="147:119" pos:end="147:120">++</operator></expr></incr>)</control> <block pos:start="147:123" pos:end="155:17">{<block_content pos:start="149:21" pos:end="153:21">

                    <for pos:start="149:21" pos:end="153:21">for <control pos:start="149:25" pos:end="149:123">(<init pos:start="149:26" pos:end="149:31"><expr pos:start="149:26" pos:end="149:30"><name pos:start="149:26" pos:end="149:26">j</name> <operator pos:start="149:28" pos:end="149:28">=</operator> <literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>;</init> <condition pos:start="149:33" pos:end="149:118"><expr pos:start="149:33" pos:end="149:117"><name pos:start="149:33" pos:end="149:33">j</name> <operator pos:start="149:35" pos:end="149:35">&lt;</operator> <name pos:start="149:37" pos:end="149:39">sx2</name> <operator pos:start="149:41" pos:end="149:41">-</operator> <name pos:start="149:43" pos:end="149:45">sx1</name> <operator pos:start="149:47" pos:end="149:48">&amp;&amp;</operator> <operator pos:start="149:50" pos:end="149:50">(</operator><name pos:start="149:51" pos:end="149:52">bx</name> <operator pos:start="149:54" pos:end="149:54">+</operator> <name pos:start="149:56" pos:end="149:58">sx1</name> <operator pos:start="149:60" pos:end="149:60">+</operator> <name pos:start="149:62" pos:end="149:62">j</name><operator pos:start="149:63" pos:end="149:63">)</operator> <operator pos:start="149:65" pos:end="149:65">&lt;</operator> <name pos:start="149:67" pos:end="149:78"><name pos:start="149:67" pos:end="149:71">avctx</name><operator pos:start="149:72" pos:end="149:73">-&gt;</operator><name pos:start="149:74" pos:end="149:78">width</name></name> <operator pos:start="149:80" pos:end="149:81">&amp;&amp;</operator> <operator pos:start="149:83" pos:end="149:83">(</operator><name pos:start="149:84" pos:end="149:85">bx</name> <operator pos:start="149:87" pos:end="149:87">+</operator> <name pos:start="149:89" pos:end="149:91">mvx</name> <operator pos:start="149:93" pos:end="149:93">+</operator> <name pos:start="149:95" pos:end="149:97">sx1</name> <operator pos:start="149:99" pos:end="149:99">+</operator> <name pos:start="149:101" pos:end="149:101">j</name><operator pos:start="149:102" pos:end="149:102">)</operator> <operator pos:start="149:104" pos:end="149:104">&lt;</operator> <name pos:start="149:106" pos:end="149:117"><name pos:start="149:106" pos:end="149:110">avctx</name><operator pos:start="149:111" pos:end="149:112">-&gt;</operator><name pos:start="149:113" pos:end="149:117">width</name></name></expr>;</condition> <incr pos:start="149:120" pos:end="149:122"><expr pos:start="149:120" pos:end="149:122"><name pos:start="149:120" pos:end="149:120">j</name><operator pos:start="149:121" pos:end="149:122">++</operator></expr></incr>)</control> <block pos:start="149:125" pos:end="153:21">{<block_content pos:start="151:25" pos:end="151:132">

                        <expr_stmt pos:start="151:25" pos:end="151:132"><expr pos:start="151:25" pos:end="151:131"><name pos:start="151:25" pos:end="151:69"><name pos:start="151:25" pos:end="151:27">dst</name><index pos:start="151:28" pos:end="151:69">[<expr pos:start="151:29" pos:end="151:68"><operator pos:start="151:29" pos:end="151:29">(</operator><name pos:start="151:30" pos:end="151:31">by</name> <operator pos:start="151:33" pos:end="151:33">+</operator> <name pos:start="151:35" pos:end="151:35">i</name> <operator pos:start="151:37" pos:end="151:37">+</operator> <name pos:start="151:39" pos:end="151:41">sy1</name><operator pos:start="151:42" pos:end="151:42">)</operator> <operator pos:start="151:44" pos:end="151:44">*</operator> <name pos:start="151:46" pos:end="151:53">linesize</name> <operator pos:start="151:55" pos:end="151:55">+</operator> <name pos:start="151:57" pos:end="151:58">bx</name> <operator pos:start="151:60" pos:end="151:60">+</operator> <name pos:start="151:62" pos:end="151:64">sx1</name> <operator pos:start="151:66" pos:end="151:66">+</operator> <name pos:start="151:68" pos:end="151:68">j</name></expr>]</index></name> <operator pos:start="151:71" pos:end="151:71">=</operator> <name pos:start="151:73" pos:end="151:131"><name pos:start="151:73" pos:end="151:76">prev</name><index pos:start="151:77" pos:end="151:131">[<expr pos:start="151:78" pos:end="151:130"><operator pos:start="151:78" pos:end="151:78">(</operator><name pos:start="151:79" pos:end="151:80">by</name> <operator pos:start="151:82" pos:end="151:82">+</operator> <name pos:start="151:84" pos:end="151:86">mvy</name> <operator pos:start="151:88" pos:end="151:88">+</operator> <name pos:start="151:90" pos:end="151:92">sy1</name> <operator pos:start="151:94" pos:end="151:94">+</operator> <name pos:start="151:96" pos:end="151:96">i</name><operator pos:start="151:97" pos:end="151:97">)</operator> <operator pos:start="151:99" pos:end="151:99">*</operator> <name pos:start="151:101" pos:end="151:109">plinesize</name> <operator pos:start="151:111" pos:end="151:111">+</operator> <name pos:start="151:113" pos:end="151:114">bx</name> <operator pos:start="151:116" pos:end="151:116">+</operator> <name pos:start="151:118" pos:end="151:120">sx1</name> <operator pos:start="151:122" pos:end="151:122">+</operator> <name pos:start="151:124" pos:end="151:126">mvx</name> <operator pos:start="151:128" pos:end="151:128">+</operator> <name pos:start="151:130" pos:end="151:130">j</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if> <else pos:start="157:15" pos:end="469:13">else <block pos:start="157:20" pos:end="469:13">{<block_content pos:start="159:17" pos:end="467:17">

                <decl_stmt pos:start="159:17" pos:end="159:74"><decl pos:start="159:17" pos:end="159:23"><type pos:start="159:17" pos:end="159:19"><name pos:start="159:17" pos:end="159:19">int</name></type> <name pos:start="159:21" pos:end="159:23">run</name></decl>, <decl pos:start="159:26" pos:end="159:26"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:26" pos:end="159:26">r</name></decl>, <decl pos:start="159:29" pos:end="159:29"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:29" pos:end="159:29">g</name></decl>, <decl pos:start="159:32" pos:end="159:32"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:32" pos:end="159:32">b</name></decl>, <decl pos:start="159:35" pos:end="159:35"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:35" pos:end="159:35">z</name></decl>, <decl pos:start="159:38" pos:end="159:54"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:38" pos:end="159:39">bx</name> <init pos:start="159:41" pos:end="159:54">= <expr pos:start="159:43" pos:end="159:54"><name pos:start="159:43" pos:end="159:43">x</name> <operator pos:start="159:45" pos:end="159:45">*</operator> <literal type="number" pos:start="159:47" pos:end="159:50">16</literal> <operator pos:start="159:50" pos:end="159:50">+</operator> <name pos:start="159:52" pos:end="159:54">sx1</name></expr></init></decl>, <decl pos:start="159:57" pos:end="159:73"><type ref="prev" pos:start="159:17" pos:end="159:19"/><name pos:start="159:57" pos:end="159:58">by</name> <init pos:start="159:60" pos:end="159:73">= <expr pos:start="159:62" pos:end="159:73"><name pos:start="159:62" pos:end="159:62">y</name> <operator pos:start="159:64" pos:end="159:64">*</operator> <literal type="number" pos:start="159:66" pos:end="159:69">16</literal> <operator pos:start="159:69" pos:end="159:69">+</operator> <name pos:start="159:71" pos:end="159:73">sy1</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="161:17" pos:end="161:40"><decl pos:start="161:17" pos:end="161:28"><type pos:start="161:17" pos:end="161:24"><name pos:start="161:17" pos:end="161:24">unsigned</name></type> <name pos:start="161:26" pos:end="161:28">clr</name></decl>, <decl pos:start="161:31" pos:end="161:39"><type ref="prev" pos:start="161:17" pos:end="161:24"/><name pos:start="161:31" pos:end="161:35">ptype</name> <init pos:start="161:37" pos:end="161:39">= <expr pos:start="161:39" pos:end="161:39"><literal type="number" pos:start="161:39" pos:end="161:39">0</literal></expr></init></decl>;</decl_stmt>



                <for pos:start="165:17" pos:end="467:17">for <control pos:start="165:21" pos:end="165:64">(<init pos:start="165:22" pos:end="165:22">;</init> <condition pos:start="165:24" pos:end="165:63"><expr pos:start="165:24" pos:end="165:62"><name pos:start="165:24" pos:end="165:25">by</name> <operator pos:start="165:27" pos:end="165:27">&lt;</operator> <name pos:start="165:29" pos:end="165:29">y</name> <operator pos:start="165:31" pos:end="165:31">*</operator> <literal type="number" pos:start="165:33" pos:end="165:36">16</literal> <operator pos:start="165:36" pos:end="165:36">+</operator> <name pos:start="165:38" pos:end="165:40">sy2</name> <operator pos:start="165:42" pos:end="165:43">&amp;&amp;</operator> <name pos:start="165:45" pos:end="165:46">by</name> <operator pos:start="165:48" pos:end="165:48">&lt;</operator> <name pos:start="165:50" pos:end="165:62"><name pos:start="165:50" pos:end="165:54">avctx</name><operator pos:start="165:55" pos:end="165:56">-&gt;</operator><name pos:start="165:57" pos:end="165:62">height</name></name></expr>;</condition><incr/>)</control> <block pos:start="165:66" pos:end="467:17">{<block_content pos:start="167:21" pos:end="465:21">

                    <expr_stmt pos:start="167:21" pos:end="167:79"><expr pos:start="167:21" pos:end="167:78"><name pos:start="167:21" pos:end="167:23">ret</name> <operator pos:start="167:25" pos:end="167:25">=</operator> <call pos:start="167:27" pos:end="167:78"><name pos:start="167:27" pos:end="167:38">decode_value</name><argument_list pos:start="167:39" pos:end="167:78">(<argument pos:start="167:40" pos:end="167:40"><expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">s</name></expr></argument>, <argument pos:start="167:43" pos:end="167:60"><expr pos:start="167:43" pos:end="167:60"><name pos:start="167:43" pos:end="167:60"><name pos:start="167:43" pos:end="167:43">s</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:53">op_model</name><index pos:start="167:54" pos:end="167:60">[<expr pos:start="167:55" pos:end="167:59"><name pos:start="167:55" pos:end="167:59">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="167:63" pos:end="167:63"><expr pos:start="167:63" pos:end="167:63"><literal type="number" pos:start="167:63" pos:end="167:63">6</literal></expr></argument>, <argument pos:start="167:66" pos:end="167:69"><expr pos:start="167:66" pos:end="167:69"><literal type="number" pos:start="167:66" pos:end="167:69">1000</literal></expr></argument>, <argument pos:start="167:72" pos:end="167:77"><expr pos:start="167:72" pos:end="167:77"><operator pos:start="167:72" pos:end="167:72">&amp;</operator><name pos:start="167:73" pos:end="167:77">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="169:21" pos:end="205:21"><if pos:start="169:21" pos:end="205:21">if <condition pos:start="169:24" pos:end="169:35">(<expr pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:29">ptype</name> <operator pos:start="169:31" pos:end="169:32">==</operator> <literal type="number" pos:start="169:34" pos:end="169:34">0</literal></expr>)</condition> <block pos:start="169:37" pos:end="205:21">{<block_content pos:start="171:25" pos:end="203:55">

                        <expr_stmt pos:start="171:25" pos:end="171:84"><expr pos:start="171:25" pos:end="171:83"><name pos:start="171:25" pos:end="171:27">ret</name> <operator pos:start="171:29" pos:end="171:29">=</operator> <call pos:start="171:31" pos:end="171:83"><name pos:start="171:31" pos:end="171:41">decode_unit</name><argument_list pos:start="171:42" pos:end="171:83">(<argument pos:start="171:43" pos:end="171:43"><expr pos:start="171:43" pos:end="171:43"><name pos:start="171:43" pos:end="171:43">s</name></expr></argument>, <argument pos:start="171:46" pos:end="171:73"><expr pos:start="171:46" pos:end="171:73"><operator pos:start="171:46" pos:end="171:46">&amp;</operator><name pos:start="171:47" pos:end="171:73"><name pos:start="171:47" pos:end="171:47">s</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:60">pixel_model</name><index pos:start="171:61" pos:end="171:63">[<expr pos:start="171:62" pos:end="171:62"><literal type="number" pos:start="171:62" pos:end="171:62">0</literal></expr>]</index><index pos:start="171:64" pos:end="171:73">[<expr pos:start="171:65" pos:end="171:72"><name pos:start="171:65" pos:end="171:66">cx</name> <operator pos:start="171:68" pos:end="171:68">+</operator> <name pos:start="171:70" pos:end="171:72">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="171:76" pos:end="171:78"><expr pos:start="171:76" pos:end="171:78"><literal type="number" pos:start="171:76" pos:end="171:78">400</literal></expr></argument>, <argument pos:start="171:81" pos:end="171:82"><expr pos:start="171:81" pos:end="171:82"><operator pos:start="171:81" pos:end="171:81">&amp;</operator><name pos:start="171:82" pos:end="171:82">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="173:25" pos:end="175:39"><if pos:start="173:25" pos:end="175:39">if <condition pos:start="173:28" pos:end="173:36">(<expr pos:start="173:29" pos:end="173:35"><name pos:start="173:29" pos:end="173:31">ret</name> <operator pos:start="173:33" pos:end="173:33">&lt;</operator> <literal type="number" pos:start="173:35" pos:end="173:35">0</literal></expr>)</condition><block type="pseudo" pos:start="175:29" pos:end="175:39"><block_content pos:start="175:29" pos:end="175:39">

                            <return pos:start="175:29" pos:end="175:39">return <expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:38">ret</name></expr>;</return></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="179:25" pos:end="179:48"><expr pos:start="179:25" pos:end="179:47"><name pos:start="179:25" pos:end="179:27">cx1</name> <operator pos:start="179:29" pos:end="179:29">=</operator> <operator pos:start="179:31" pos:end="179:31">(</operator><name pos:start="179:32" pos:end="179:33">cx</name> <operator pos:start="179:35" pos:end="179:36">&lt;&lt;</operator> <literal type="number" pos:start="179:38" pos:end="179:38">6</literal><operator pos:start="179:39" pos:end="179:39">)</operator> <operator pos:start="179:41" pos:end="179:41">&amp;</operator> <literal type="number" pos:start="179:43" pos:end="179:47">0xFC0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="181:25" pos:end="181:42"><expr pos:start="181:25" pos:end="181:41"><name pos:start="181:25" pos:end="181:26">cx</name> <operator pos:start="181:28" pos:end="181:28">=</operator> <name pos:start="181:30" pos:end="181:30">r</name> <operator pos:start="181:32" pos:end="181:33">&gt;&gt;</operator> <name pos:start="181:35" pos:end="181:41">cxshift</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="183:25" pos:end="183:84"><expr pos:start="183:25" pos:end="183:83"><name pos:start="183:25" pos:end="183:27">ret</name> <operator pos:start="183:29" pos:end="183:29">=</operator> <call pos:start="183:31" pos:end="183:83"><name pos:start="183:31" pos:end="183:41">decode_unit</name><argument_list pos:start="183:42" pos:end="183:83">(<argument pos:start="183:43" pos:end="183:43"><expr pos:start="183:43" pos:end="183:43"><name pos:start="183:43" pos:end="183:43">s</name></expr></argument>, <argument pos:start="183:46" pos:end="183:73"><expr pos:start="183:46" pos:end="183:73"><operator pos:start="183:46" pos:end="183:46">&amp;</operator><name pos:start="183:47" pos:end="183:73"><name pos:start="183:47" pos:end="183:47">s</name><operator pos:start="183:48" pos:end="183:49">-&gt;</operator><name pos:start="183:50" pos:end="183:60">pixel_model</name><index pos:start="183:61" pos:end="183:63">[<expr pos:start="183:62" pos:end="183:62"><literal type="number" pos:start="183:62" pos:end="183:62">1</literal></expr>]</index><index pos:start="183:64" pos:end="183:73">[<expr pos:start="183:65" pos:end="183:72"><name pos:start="183:65" pos:end="183:66">cx</name> <operator pos:start="183:68" pos:end="183:68">+</operator> <name pos:start="183:70" pos:end="183:72">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="183:76" pos:end="183:78"><expr pos:start="183:76" pos:end="183:78"><literal type="number" pos:start="183:76" pos:end="183:78">400</literal></expr></argument>, <argument pos:start="183:81" pos:end="183:82"><expr pos:start="183:81" pos:end="183:82"><operator pos:start="183:81" pos:end="183:81">&amp;</operator><name pos:start="183:82" pos:end="183:82">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="185:25" pos:end="187:39"><if pos:start="185:25" pos:end="187:39">if <condition pos:start="185:28" pos:end="185:36">(<expr pos:start="185:29" pos:end="185:35"><name pos:start="185:29" pos:end="185:31">ret</name> <operator pos:start="185:33" pos:end="185:33">&lt;</operator> <literal type="number" pos:start="185:35" pos:end="185:35">0</literal></expr>)</condition><block type="pseudo" pos:start="187:29" pos:end="187:39"><block_content pos:start="187:29" pos:end="187:39">

                            <return pos:start="187:29" pos:end="187:39">return <expr pos:start="187:36" pos:end="187:38"><name pos:start="187:36" pos:end="187:38">ret</name></expr>;</return></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="191:25" pos:end="191:48"><expr pos:start="191:25" pos:end="191:47"><name pos:start="191:25" pos:end="191:27">cx1</name> <operator pos:start="191:29" pos:end="191:29">=</operator> <operator pos:start="191:31" pos:end="191:31">(</operator><name pos:start="191:32" pos:end="191:33">cx</name> <operator pos:start="191:35" pos:end="191:36">&lt;&lt;</operator> <literal type="number" pos:start="191:38" pos:end="191:38">6</literal><operator pos:start="191:39" pos:end="191:39">)</operator> <operator pos:start="191:41" pos:end="191:41">&amp;</operator> <literal type="number" pos:start="191:43" pos:end="191:47">0xFC0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="193:25" pos:end="193:42"><expr pos:start="193:25" pos:end="193:41"><name pos:start="193:25" pos:end="193:26">cx</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <name pos:start="193:30" pos:end="193:30">g</name> <operator pos:start="193:32" pos:end="193:33">&gt;&gt;</operator> <name pos:start="193:35" pos:end="193:41">cxshift</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="195:25" pos:end="195:84"><expr pos:start="195:25" pos:end="195:83"><name pos:start="195:25" pos:end="195:27">ret</name> <operator pos:start="195:29" pos:end="195:29">=</operator> <call pos:start="195:31" pos:end="195:83"><name pos:start="195:31" pos:end="195:41">decode_unit</name><argument_list pos:start="195:42" pos:end="195:83">(<argument pos:start="195:43" pos:end="195:43"><expr pos:start="195:43" pos:end="195:43"><name pos:start="195:43" pos:end="195:43">s</name></expr></argument>, <argument pos:start="195:46" pos:end="195:73"><expr pos:start="195:46" pos:end="195:73"><operator pos:start="195:46" pos:end="195:46">&amp;</operator><name pos:start="195:47" pos:end="195:73"><name pos:start="195:47" pos:end="195:47">s</name><operator pos:start="195:48" pos:end="195:49">-&gt;</operator><name pos:start="195:50" pos:end="195:60">pixel_model</name><index pos:start="195:61" pos:end="195:63">[<expr pos:start="195:62" pos:end="195:62"><literal type="number" pos:start="195:62" pos:end="195:62">2</literal></expr>]</index><index pos:start="195:64" pos:end="195:73">[<expr pos:start="195:65" pos:end="195:72"><name pos:start="195:65" pos:end="195:66">cx</name> <operator pos:start="195:68" pos:end="195:68">+</operator> <name pos:start="195:70" pos:end="195:72">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="195:76" pos:end="195:78"><expr pos:start="195:76" pos:end="195:78"><literal type="number" pos:start="195:76" pos:end="195:78">400</literal></expr></argument>, <argument pos:start="195:81" pos:end="195:82"><expr pos:start="195:81" pos:end="195:82"><operator pos:start="195:81" pos:end="195:81">&amp;</operator><name pos:start="195:82" pos:end="195:82">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="197:25" pos:end="199:39"><if pos:start="197:25" pos:end="199:39">if <condition pos:start="197:28" pos:end="197:36">(<expr pos:start="197:29" pos:end="197:35"><name pos:start="197:29" pos:end="197:31">ret</name> <operator pos:start="197:33" pos:end="197:33">&lt;</operator> <literal type="number" pos:start="197:35" pos:end="197:35">0</literal></expr>)</condition><block type="pseudo" pos:start="199:29" pos:end="199:39"><block_content pos:start="199:29" pos:end="199:39">

                            <return pos:start="199:29" pos:end="199:39">return <expr pos:start="199:36" pos:end="199:38"><name pos:start="199:36" pos:end="199:38">ret</name></expr>;</return></block_content></block></if></if_stmt>



                        <expr_stmt pos:start="203:25" pos:end="203:55"><expr pos:start="203:25" pos:end="203:54"><name pos:start="203:25" pos:end="203:27">clr</name> <operator pos:start="203:29" pos:end="203:29">=</operator> <operator pos:start="203:31" pos:end="203:31">(</operator><name pos:start="203:32" pos:end="203:32">b</name> <operator pos:start="203:34" pos:end="203:35">&lt;&lt;</operator> <literal type="number" pos:start="203:37" pos:end="203:38">16</literal><operator pos:start="203:39" pos:end="203:39">)</operator> <operator pos:start="203:41" pos:end="203:41">+</operator> <operator pos:start="203:43" pos:end="203:43">(</operator><name pos:start="203:44" pos:end="203:44">g</name> <operator pos:start="203:46" pos:end="203:47">&lt;&lt;</operator> <literal type="number" pos:start="203:49" pos:end="203:49">8</literal><operator pos:start="203:50" pos:end="203:50">)</operator> <operator pos:start="203:52" pos:end="203:52">+</operator> <name pos:start="203:54" pos:end="203:54">r</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <if_stmt pos:start="207:21" pos:end="209:51"><if pos:start="207:21" pos:end="209:51">if <condition pos:start="207:24" pos:end="207:34">(<expr pos:start="207:25" pos:end="207:33"><name pos:start="207:25" pos:end="207:29">ptype</name> <operator pos:start="207:31" pos:end="207:31">&gt;</operator> <literal type="number" pos:start="207:33" pos:end="207:33">5</literal></expr>)</condition><block type="pseudo" pos:start="209:25" pos:end="209:51"><block_content pos:start="209:25" pos:end="209:51">

                        <return pos:start="209:25" pos:end="209:51">return <expr pos:start="209:32" pos:end="209:50"><name pos:start="209:32" pos:end="209:50">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="211:21" pos:end="211:79"><expr pos:start="211:21" pos:end="211:78"><name pos:start="211:21" pos:end="211:23">ret</name> <operator pos:start="211:25" pos:end="211:25">=</operator> <call pos:start="211:27" pos:end="211:78"><name pos:start="211:27" pos:end="211:38">decode_value</name><argument_list pos:start="211:39" pos:end="211:78">(<argument pos:start="211:40" pos:end="211:40"><expr pos:start="211:40" pos:end="211:40"><name pos:start="211:40" pos:end="211:40">s</name></expr></argument>, <argument pos:start="211:43" pos:end="211:61"><expr pos:start="211:43" pos:end="211:61"><name pos:start="211:43" pos:end="211:61"><name pos:start="211:43" pos:end="211:43">s</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:54">run_model</name><index pos:start="211:55" pos:end="211:61">[<expr pos:start="211:56" pos:end="211:60"><name pos:start="211:56" pos:end="211:60">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="211:64" pos:end="211:66"><expr pos:start="211:64" pos:end="211:66"><literal type="number" pos:start="211:64" pos:end="211:66">256</literal></expr></argument>, <argument pos:start="211:69" pos:end="211:71"><expr pos:start="211:69" pos:end="211:71"><literal type="number" pos:start="211:69" pos:end="211:71">400</literal></expr></argument>, <argument pos:start="211:74" pos:end="211:77"><expr pos:start="211:74" pos:end="211:77"><operator pos:start="211:74" pos:end="211:74">&amp;</operator><name pos:start="211:75" pos:end="211:77">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="213:21" pos:end="215:35"><if pos:start="213:21" pos:end="215:35">if <condition pos:start="213:24" pos:end="213:32">(<expr pos:start="213:25" pos:end="213:31"><name pos:start="213:25" pos:end="213:27">ret</name> <operator pos:start="213:29" pos:end="213:29">&lt;</operator> <literal type="number" pos:start="213:31" pos:end="213:31">0</literal></expr>)</condition><block type="pseudo" pos:start="215:25" pos:end="215:35"><block_content pos:start="215:25" pos:end="215:35">

                        <return pos:start="215:25" pos:end="215:35">return <expr pos:start="215:32" pos:end="215:34"><name pos:start="215:32" pos:end="215:34">ret</name></expr>;</return></block_content></block></if></if_stmt>



                    <switch pos:start="219:21" pos:end="449:21">switch <condition pos:start="219:28" pos:end="219:34">(<expr pos:start="219:29" pos:end="219:33"><name pos:start="219:29" pos:end="219:33">ptype</name></expr>)</condition> <block pos:start="219:36" pos:end="449:21">{<block_content pos:start="221:21" pos:end="447:30">

                    <case pos:start="221:21" pos:end="221:27">case <expr pos:start="221:26" pos:end="221:26"><literal type="number" pos:start="221:26" pos:end="221:26">0</literal></expr>:</case>

                        <while pos:start="223:25" pos:end="243:25">while <condition pos:start="223:31" pos:end="223:41">(<expr pos:start="223:32" pos:end="223:40"><name pos:start="223:32" pos:end="223:34">run</name><operator pos:start="223:35" pos:end="223:36">--</operator> <operator pos:start="223:38" pos:end="223:38">&gt;</operator> <literal type="number" pos:start="223:40" pos:end="223:40">0</literal></expr>)</condition> <block pos:start="223:43" pos:end="243:25">{<block_content pos:start="225:29" pos:end="241:29">

                            <if_stmt pos:start="225:29" pos:end="227:59"><if pos:start="225:29" pos:end="227:59">if <condition pos:start="225:32" pos:end="225:52">(<expr pos:start="225:33" pos:end="225:51"><name pos:start="225:33" pos:end="225:34">by</name> <operator pos:start="225:36" pos:end="225:37">&gt;=</operator> <name pos:start="225:39" pos:end="225:51"><name pos:start="225:39" pos:end="225:43">avctx</name><operator pos:start="225:44" pos:end="225:45">-&gt;</operator><name pos:start="225:46" pos:end="225:51">height</name></name></expr>)</condition><block type="pseudo" pos:start="227:33" pos:end="227:59"><block_content pos:start="227:33" pos:end="227:59">

                                <return pos:start="227:33" pos:end="227:59">return <expr pos:start="227:40" pos:end="227:58"><name pos:start="227:40" pos:end="227:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="231:29" pos:end="231:58"><expr pos:start="231:29" pos:end="231:57"><name pos:start="231:29" pos:end="231:51"><name pos:start="231:29" pos:end="231:31">dst</name><index pos:start="231:32" pos:end="231:51">[<expr pos:start="231:33" pos:end="231:50"><name pos:start="231:33" pos:end="231:34">by</name> <operator pos:start="231:36" pos:end="231:36">*</operator> <name pos:start="231:38" pos:end="231:45">linesize</name> <operator pos:start="231:47" pos:end="231:47">+</operator> <name pos:start="231:49" pos:end="231:50">bx</name></expr>]</index></name> <operator pos:start="231:53" pos:end="231:53">=</operator> <name pos:start="231:55" pos:end="231:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="233:29" pos:end="233:33"><expr pos:start="233:29" pos:end="233:32"><name pos:start="233:29" pos:end="233:30">bx</name><operator pos:start="233:31" pos:end="233:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="235:29" pos:end="241:29"><if pos:start="235:29" pos:end="241:29">if <condition pos:start="235:32" pos:end="235:73">(<expr pos:start="235:33" pos:end="235:72"><name pos:start="235:33" pos:end="235:34">bx</name> <operator pos:start="235:36" pos:end="235:37">&gt;=</operator> <name pos:start="235:39" pos:end="235:39">x</name> <operator pos:start="235:41" pos:end="235:41">*</operator> <literal type="number" pos:start="235:43" pos:end="235:46">16</literal> <operator pos:start="235:46" pos:end="235:46">+</operator> <name pos:start="235:48" pos:end="235:50">sx2</name> <operator pos:start="235:52" pos:end="235:53">||</operator> <name pos:start="235:55" pos:end="235:56">bx</name> <operator pos:start="235:58" pos:end="235:59">&gt;=</operator> <name pos:start="235:61" pos:end="235:72"><name pos:start="235:61" pos:end="235:65">avctx</name><operator pos:start="235:66" pos:end="235:67">-&gt;</operator><name pos:start="235:68" pos:end="235:72">width</name></name></expr>)</condition> <block pos:start="235:75" pos:end="241:29">{<block_content pos:start="237:33" pos:end="239:37">

                                <expr_stmt pos:start="237:33" pos:end="237:50"><expr pos:start="237:33" pos:end="237:49"><name pos:start="237:33" pos:end="237:34">bx</name> <operator pos:start="237:36" pos:end="237:36">=</operator> <name pos:start="237:38" pos:end="237:38">x</name> <operator pos:start="237:40" pos:end="237:40">*</operator> <literal type="number" pos:start="237:42" pos:end="237:45">16</literal> <operator pos:start="237:45" pos:end="237:45">+</operator> <name pos:start="237:47" pos:end="237:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="239:33" pos:end="239:37"><expr pos:start="239:33" pos:end="239:36"><name pos:start="239:33" pos:end="239:34">by</name><operator pos:start="239:35" pos:end="239:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="245:25" pos:end="245:30">break;</break>

                    <case pos:start="247:21" pos:end="247:27">case <expr pos:start="247:26" pos:end="247:26"><literal type="number" pos:start="247:26" pos:end="247:26">1</literal></expr>:</case>

                        <while pos:start="249:25" pos:end="287:25">while <condition pos:start="249:31" pos:end="249:41">(<expr pos:start="249:32" pos:end="249:40"><name pos:start="249:32" pos:end="249:34">run</name><operator pos:start="249:35" pos:end="249:36">--</operator> <operator pos:start="249:38" pos:end="249:38">&gt;</operator> <literal type="number" pos:start="249:40" pos:end="249:40">0</literal></expr>)</condition> <block pos:start="249:43" pos:end="287:25">{<block_content pos:start="251:29" pos:end="285:29">

                            <if_stmt pos:start="251:29" pos:end="263:29"><if pos:start="251:29" pos:end="259:29">if <condition pos:start="251:32" pos:end="251:40">(<expr pos:start="251:33" pos:end="251:39"><name pos:start="251:33" pos:end="251:34">bx</name> <operator pos:start="251:36" pos:end="251:37">==</operator> <literal type="number" pos:start="251:39" pos:end="251:39">0</literal></expr>)</condition> <block pos:start="251:42" pos:end="259:29">{<block_content pos:start="253:33" pos:end="257:45">

                                <if_stmt pos:start="253:33" pos:end="255:63"><if pos:start="253:33" pos:end="255:63">if <condition pos:start="253:36" pos:end="253:43">(<expr pos:start="253:37" pos:end="253:42"><name pos:start="253:37" pos:end="253:38">by</name> <operator pos:start="253:40" pos:end="253:40">&lt;</operator> <literal type="number" pos:start="253:42" pos:end="253:42">1</literal></expr>)</condition><block type="pseudo" pos:start="255:37" pos:end="255:63"><block_content pos:start="255:37" pos:end="255:63">

                                    <return pos:start="255:37" pos:end="255:63">return <expr pos:start="255:44" pos:end="255:62"><name pos:start="255:44" pos:end="255:62">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

                                <expr_stmt pos:start="257:33" pos:end="257:45"><expr pos:start="257:33" pos:end="257:44"><name pos:start="257:33" pos:end="257:33">z</name> <operator pos:start="257:35" pos:end="257:35">=</operator> <name pos:start="257:37" pos:end="257:44">backstep</name></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="259:31" pos:end="263:29">else <block pos:start="259:36" pos:end="263:29">{<block_content pos:start="261:33" pos:end="261:38">

                                <expr_stmt pos:start="261:33" pos:end="261:38"><expr pos:start="261:33" pos:end="261:37"><name pos:start="261:33" pos:end="261:33">z</name> <operator pos:start="261:35" pos:end="261:35">=</operator> <literal type="number" pos:start="261:37" pos:end="261:37">0</literal></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>



                            <if_stmt pos:start="267:29" pos:end="269:59"><if pos:start="267:29" pos:end="269:59">if <condition pos:start="267:32" pos:end="267:52">(<expr pos:start="267:33" pos:end="267:51"><name pos:start="267:33" pos:end="267:34">by</name> <operator pos:start="267:36" pos:end="267:37">&gt;=</operator> <name pos:start="267:39" pos:end="267:51"><name pos:start="267:39" pos:end="267:43">avctx</name><operator pos:start="267:44" pos:end="267:45">-&gt;</operator><name pos:start="267:46" pos:end="267:51">height</name></name></expr>)</condition><block type="pseudo" pos:start="269:33" pos:end="269:59"><block_content pos:start="269:33" pos:end="269:59">

                                <return pos:start="269:33" pos:end="269:59">return <expr pos:start="269:40" pos:end="269:58"><name pos:start="269:40" pos:end="269:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="273:29" pos:end="273:66"><expr pos:start="273:29" pos:end="273:65"><name pos:start="273:29" pos:end="273:31">clr</name> <operator pos:start="273:33" pos:end="273:33">=</operator> <name pos:start="273:35" pos:end="273:65"><name pos:start="273:35" pos:end="273:37">dst</name><index pos:start="273:38" pos:end="273:65">[<expr pos:start="273:39" pos:end="273:64"><name pos:start="273:39" pos:end="273:40">by</name> <operator pos:start="273:42" pos:end="273:42">*</operator> <name pos:start="273:44" pos:end="273:51">linesize</name> <operator pos:start="273:53" pos:end="273:53">+</operator> <name pos:start="273:55" pos:end="273:56">bx</name> <operator pos:start="273:58" pos:end="273:58">-</operator> <literal type="number" pos:start="273:60" pos:end="273:62">1</literal> <operator pos:start="273:62" pos:end="273:62">-</operator> <name pos:start="273:64" pos:end="273:64">z</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="275:29" pos:end="275:58"><expr pos:start="275:29" pos:end="275:57"><name pos:start="275:29" pos:end="275:51"><name pos:start="275:29" pos:end="275:31">dst</name><index pos:start="275:32" pos:end="275:51">[<expr pos:start="275:33" pos:end="275:50"><name pos:start="275:33" pos:end="275:34">by</name> <operator pos:start="275:36" pos:end="275:36">*</operator> <name pos:start="275:38" pos:end="275:45">linesize</name> <operator pos:start="275:47" pos:end="275:47">+</operator> <name pos:start="275:49" pos:end="275:50">bx</name></expr>]</index></name> <operator pos:start="275:53" pos:end="275:53">=</operator> <name pos:start="275:55" pos:end="275:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="277:29" pos:end="277:33"><expr pos:start="277:29" pos:end="277:32"><name pos:start="277:29" pos:end="277:30">bx</name><operator pos:start="277:31" pos:end="277:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="279:29" pos:end="285:29"><if pos:start="279:29" pos:end="285:29">if <condition pos:start="279:32" pos:end="279:73">(<expr pos:start="279:33" pos:end="279:72"><name pos:start="279:33" pos:end="279:34">bx</name> <operator pos:start="279:36" pos:end="279:37">&gt;=</operator> <name pos:start="279:39" pos:end="279:39">x</name> <operator pos:start="279:41" pos:end="279:41">*</operator> <literal type="number" pos:start="279:43" pos:end="279:46">16</literal> <operator pos:start="279:46" pos:end="279:46">+</operator> <name pos:start="279:48" pos:end="279:50">sx2</name> <operator pos:start="279:52" pos:end="279:53">||</operator> <name pos:start="279:55" pos:end="279:56">bx</name> <operator pos:start="279:58" pos:end="279:59">&gt;=</operator> <name pos:start="279:61" pos:end="279:72"><name pos:start="279:61" pos:end="279:65">avctx</name><operator pos:start="279:66" pos:end="279:67">-&gt;</operator><name pos:start="279:68" pos:end="279:72">width</name></name></expr>)</condition> <block pos:start="279:75" pos:end="285:29">{<block_content pos:start="281:33" pos:end="283:37">

                                <expr_stmt pos:start="281:33" pos:end="281:50"><expr pos:start="281:33" pos:end="281:49"><name pos:start="281:33" pos:end="281:34">bx</name> <operator pos:start="281:36" pos:end="281:36">=</operator> <name pos:start="281:38" pos:end="281:38">x</name> <operator pos:start="281:40" pos:end="281:40">*</operator> <literal type="number" pos:start="281:42" pos:end="281:45">16</literal> <operator pos:start="281:45" pos:end="281:45">+</operator> <name pos:start="281:47" pos:end="281:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="283:33" pos:end="283:37"><expr pos:start="283:33" pos:end="283:36"><name pos:start="283:33" pos:end="283:34">by</name><operator pos:start="283:35" pos:end="283:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="289:25" pos:end="289:30">break;</break>

                    <case pos:start="291:21" pos:end="291:27">case <expr pos:start="291:26" pos:end="291:26"><literal type="number" pos:start="291:26" pos:end="291:26">2</literal></expr>:</case>

                        <while pos:start="293:25" pos:end="315:25">while <condition pos:start="293:31" pos:end="293:41">(<expr pos:start="293:32" pos:end="293:40"><name pos:start="293:32" pos:end="293:34">run</name><operator pos:start="293:35" pos:end="293:36">--</operator> <operator pos:start="293:38" pos:end="293:38">&gt;</operator> <literal type="number" pos:start="293:40" pos:end="293:40">0</literal></expr>)</condition> <block pos:start="293:43" pos:end="315:25">{<block_content pos:start="295:29" pos:end="313:29">

                            <if_stmt pos:start="295:29" pos:end="297:59"><if pos:start="295:29" pos:end="297:59">if <condition pos:start="295:32" pos:end="295:62">(<expr pos:start="295:33" pos:end="295:61"><name pos:start="295:33" pos:end="295:34">by</name> <operator pos:start="295:36" pos:end="295:36">&lt;</operator> <literal type="number" pos:start="295:38" pos:end="295:38">1</literal> <operator pos:start="295:40" pos:end="295:41">||</operator> <name pos:start="295:43" pos:end="295:44">by</name> <operator pos:start="295:46" pos:end="295:47">&gt;=</operator> <name pos:start="295:49" pos:end="295:61"><name pos:start="295:49" pos:end="295:53">avctx</name><operator pos:start="295:54" pos:end="295:55">-&gt;</operator><name pos:start="295:56" pos:end="295:61">height</name></name></expr>)</condition><block type="pseudo" pos:start="297:33" pos:end="297:59"><block_content pos:start="297:33" pos:end="297:59">

                                <return pos:start="297:33" pos:end="297:59">return <expr pos:start="297:40" pos:end="297:58"><name pos:start="297:40" pos:end="297:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="301:29" pos:end="301:64"><expr pos:start="301:29" pos:end="301:63"><name pos:start="301:29" pos:end="301:31">clr</name> <operator pos:start="301:33" pos:end="301:33">=</operator> <name pos:start="301:35" pos:end="301:63"><name pos:start="301:35" pos:end="301:37">dst</name><index pos:start="301:38" pos:end="301:63">[<expr pos:start="301:39" pos:end="301:62"><operator pos:start="301:39" pos:end="301:39">(</operator><name pos:start="301:40" pos:end="301:41">by</name> <operator pos:start="301:43" pos:end="301:43">-</operator> <literal type="number" pos:start="301:45" pos:end="301:45">1</literal><operator pos:start="301:46" pos:end="301:46">)</operator> <operator pos:start="301:48" pos:end="301:48">*</operator> <name pos:start="301:50" pos:end="301:57">linesize</name> <operator pos:start="301:59" pos:end="301:59">+</operator> <name pos:start="301:61" pos:end="301:62">bx</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="303:29" pos:end="303:58"><expr pos:start="303:29" pos:end="303:57"><name pos:start="303:29" pos:end="303:51"><name pos:start="303:29" pos:end="303:31">dst</name><index pos:start="303:32" pos:end="303:51">[<expr pos:start="303:33" pos:end="303:50"><name pos:start="303:33" pos:end="303:34">by</name> <operator pos:start="303:36" pos:end="303:36">*</operator> <name pos:start="303:38" pos:end="303:45">linesize</name> <operator pos:start="303:47" pos:end="303:47">+</operator> <name pos:start="303:49" pos:end="303:50">bx</name></expr>]</index></name> <operator pos:start="303:53" pos:end="303:53">=</operator> <name pos:start="303:55" pos:end="303:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="305:29" pos:end="305:33"><expr pos:start="305:29" pos:end="305:32"><name pos:start="305:29" pos:end="305:30">bx</name><operator pos:start="305:31" pos:end="305:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="307:29" pos:end="313:29"><if pos:start="307:29" pos:end="313:29">if <condition pos:start="307:32" pos:end="307:73">(<expr pos:start="307:33" pos:end="307:72"><name pos:start="307:33" pos:end="307:34">bx</name> <operator pos:start="307:36" pos:end="307:37">&gt;=</operator> <name pos:start="307:39" pos:end="307:39">x</name> <operator pos:start="307:41" pos:end="307:41">*</operator> <literal type="number" pos:start="307:43" pos:end="307:46">16</literal> <operator pos:start="307:46" pos:end="307:46">+</operator> <name pos:start="307:48" pos:end="307:50">sx2</name> <operator pos:start="307:52" pos:end="307:53">||</operator> <name pos:start="307:55" pos:end="307:56">bx</name> <operator pos:start="307:58" pos:end="307:59">&gt;=</operator> <name pos:start="307:61" pos:end="307:72"><name pos:start="307:61" pos:end="307:65">avctx</name><operator pos:start="307:66" pos:end="307:67">-&gt;</operator><name pos:start="307:68" pos:end="307:72">width</name></name></expr>)</condition> <block pos:start="307:75" pos:end="313:29">{<block_content pos:start="309:33" pos:end="311:37">

                                <expr_stmt pos:start="309:33" pos:end="309:50"><expr pos:start="309:33" pos:end="309:49"><name pos:start="309:33" pos:end="309:34">bx</name> <operator pos:start="309:36" pos:end="309:36">=</operator> <name pos:start="309:38" pos:end="309:38">x</name> <operator pos:start="309:40" pos:end="309:40">*</operator> <literal type="number" pos:start="309:42" pos:end="309:45">16</literal> <operator pos:start="309:45" pos:end="309:45">+</operator> <name pos:start="309:47" pos:end="309:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="311:33" pos:end="311:37"><expr pos:start="311:33" pos:end="311:36"><name pos:start="311:33" pos:end="311:34">by</name><operator pos:start="311:35" pos:end="311:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="317:25" pos:end="317:30">break;</break>

                    <case pos:start="319:21" pos:end="319:27">case <expr pos:start="319:26" pos:end="319:26"><literal type="number" pos:start="319:26" pos:end="319:26">3</literal></expr>:</case>

                        <while pos:start="321:25" pos:end="343:25">while <condition pos:start="321:31" pos:end="321:41">(<expr pos:start="321:32" pos:end="321:40"><name pos:start="321:32" pos:end="321:34">run</name><operator pos:start="321:35" pos:end="321:36">--</operator> <operator pos:start="321:38" pos:end="321:38">&gt;</operator> <literal type="number" pos:start="321:40" pos:end="321:40">0</literal></expr>)</condition> <block pos:start="321:43" pos:end="343:25">{<block_content pos:start="323:29" pos:end="341:29">

                            <if_stmt pos:start="323:29" pos:end="325:59"><if pos:start="323:29" pos:end="325:59">if <condition pos:start="323:32" pos:end="323:52">(<expr pos:start="323:33" pos:end="323:51"><name pos:start="323:33" pos:end="323:34">by</name> <operator pos:start="323:36" pos:end="323:37">&gt;=</operator> <name pos:start="323:39" pos:end="323:51"><name pos:start="323:39" pos:end="323:43">avctx</name><operator pos:start="323:44" pos:end="323:45">-&gt;</operator><name pos:start="323:46" pos:end="323:51">height</name></name></expr>)</condition><block type="pseudo" pos:start="325:33" pos:end="325:59"><block_content pos:start="325:33" pos:end="325:59">

                                <return pos:start="325:33" pos:end="325:59">return <expr pos:start="325:40" pos:end="325:58"><name pos:start="325:40" pos:end="325:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <expr_stmt pos:start="329:29" pos:end="329:60"><expr pos:start="329:29" pos:end="329:59"><name pos:start="329:29" pos:end="329:31">clr</name> <operator pos:start="329:33" pos:end="329:33">=</operator> <name pos:start="329:35" pos:end="329:59"><name pos:start="329:35" pos:end="329:38">prev</name><index pos:start="329:39" pos:end="329:59">[<expr pos:start="329:40" pos:end="329:58"><name pos:start="329:40" pos:end="329:41">by</name> <operator pos:start="329:43" pos:end="329:43">*</operator> <name pos:start="329:45" pos:end="329:53">plinesize</name> <operator pos:start="329:55" pos:end="329:55">+</operator> <name pos:start="329:57" pos:end="329:58">bx</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="331:29" pos:end="331:58"><expr pos:start="331:29" pos:end="331:57"><name pos:start="331:29" pos:end="331:51"><name pos:start="331:29" pos:end="331:31">dst</name><index pos:start="331:32" pos:end="331:51">[<expr pos:start="331:33" pos:end="331:50"><name pos:start="331:33" pos:end="331:34">by</name> <operator pos:start="331:36" pos:end="331:36">*</operator> <name pos:start="331:38" pos:end="331:45">linesize</name> <operator pos:start="331:47" pos:end="331:47">+</operator> <name pos:start="331:49" pos:end="331:50">bx</name></expr>]</index></name> <operator pos:start="331:53" pos:end="331:53">=</operator> <name pos:start="331:55" pos:end="331:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="333:29" pos:end="333:33"><expr pos:start="333:29" pos:end="333:32"><name pos:start="333:29" pos:end="333:30">bx</name><operator pos:start="333:31" pos:end="333:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="335:29" pos:end="341:29"><if pos:start="335:29" pos:end="341:29">if <condition pos:start="335:32" pos:end="335:73">(<expr pos:start="335:33" pos:end="335:72"><name pos:start="335:33" pos:end="335:34">bx</name> <operator pos:start="335:36" pos:end="335:37">&gt;=</operator> <name pos:start="335:39" pos:end="335:39">x</name> <operator pos:start="335:41" pos:end="335:41">*</operator> <literal type="number" pos:start="335:43" pos:end="335:46">16</literal> <operator pos:start="335:46" pos:end="335:46">+</operator> <name pos:start="335:48" pos:end="335:50">sx2</name> <operator pos:start="335:52" pos:end="335:53">||</operator> <name pos:start="335:55" pos:end="335:56">bx</name> <operator pos:start="335:58" pos:end="335:59">&gt;=</operator> <name pos:start="335:61" pos:end="335:72"><name pos:start="335:61" pos:end="335:65">avctx</name><operator pos:start="335:66" pos:end="335:67">-&gt;</operator><name pos:start="335:68" pos:end="335:72">width</name></name></expr>)</condition> <block pos:start="335:75" pos:end="341:29">{<block_content pos:start="337:33" pos:end="339:37">

                                <expr_stmt pos:start="337:33" pos:end="337:50"><expr pos:start="337:33" pos:end="337:49"><name pos:start="337:33" pos:end="337:34">bx</name> <operator pos:start="337:36" pos:end="337:36">=</operator> <name pos:start="337:38" pos:end="337:38">x</name> <operator pos:start="337:40" pos:end="337:40">*</operator> <literal type="number" pos:start="337:42" pos:end="337:45">16</literal> <operator pos:start="337:45" pos:end="337:45">+</operator> <name pos:start="337:47" pos:end="337:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="339:33" pos:end="339:37"><expr pos:start="339:33" pos:end="339:36"><name pos:start="339:33" pos:end="339:34">by</name><operator pos:start="339:35" pos:end="339:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="345:25" pos:end="345:30">break;</break>

                    <case pos:start="347:21" pos:end="347:27">case <expr pos:start="347:26" pos:end="347:26"><literal type="number" pos:start="347:26" pos:end="347:26">4</literal></expr>:</case>

                        <while pos:start="349:25" pos:end="405:25">while <condition pos:start="349:31" pos:end="349:41">(<expr pos:start="349:32" pos:end="349:40"><name pos:start="349:32" pos:end="349:34">run</name><operator pos:start="349:35" pos:end="349:36">--</operator> <operator pos:start="349:38" pos:end="349:38">&gt;</operator> <literal type="number" pos:start="349:40" pos:end="349:40">0</literal></expr>)</condition> <block pos:start="349:43" pos:end="405:25">{<block_content pos:start="351:29" pos:end="403:29">

                            <decl_stmt pos:start="351:29" pos:end="351:59"><decl pos:start="351:29" pos:end="351:58"><type pos:start="351:29" pos:end="351:37"><name pos:start="351:29" pos:end="351:35">uint8_t</name> <modifier pos:start="351:37" pos:end="351:37">*</modifier></type><name pos:start="351:38" pos:end="351:41">odst</name> <init pos:start="351:43" pos:end="351:58">= <expr pos:start="351:45" pos:end="351:58"><operator pos:start="351:45" pos:end="351:45">(</operator><name pos:start="351:46" pos:end="351:52">uint8_t</name> <operator pos:start="351:54" pos:end="351:54">*</operator><operator pos:start="351:55" pos:end="351:55">)</operator><name pos:start="351:56" pos:end="351:58">dst</name></expr></init></decl>;</decl_stmt>



                            <if_stmt pos:start="355:29" pos:end="357:59"><if pos:start="355:29" pos:end="357:59">if <condition pos:start="355:32" pos:end="355:62">(<expr pos:start="355:33" pos:end="355:61"><name pos:start="355:33" pos:end="355:34">by</name> <operator pos:start="355:36" pos:end="355:36">&lt;</operator> <literal type="number" pos:start="355:38" pos:end="355:38">1</literal> <operator pos:start="355:40" pos:end="355:41">||</operator> <name pos:start="355:43" pos:end="355:44">by</name> <operator pos:start="355:46" pos:end="355:47">&gt;=</operator> <name pos:start="355:49" pos:end="355:61"><name pos:start="355:49" pos:end="355:53">avctx</name><operator pos:start="355:54" pos:end="355:55">-&gt;</operator><name pos:start="355:56" pos:end="355:61">height</name></name></expr>)</condition><block type="pseudo" pos:start="357:33" pos:end="357:59"><block_content pos:start="357:33" pos:end="357:59">

                                <return pos:start="357:33" pos:end="357:59">return <expr pos:start="357:40" pos:end="357:58"><name pos:start="357:40" pos:end="357:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <if_stmt pos:start="361:29" pos:end="369:29"><if pos:start="361:29" pos:end="365:29">if <condition pos:start="361:32" pos:end="361:40">(<expr pos:start="361:33" pos:end="361:39"><name pos:start="361:33" pos:end="361:34">bx</name> <operator pos:start="361:36" pos:end="361:37">==</operator> <literal type="number" pos:start="361:39" pos:end="361:39">0</literal></expr>)</condition> <block pos:start="361:42" pos:end="365:29">{<block_content pos:start="363:33" pos:end="363:45">

                                <expr_stmt pos:start="363:33" pos:end="363:45"><expr pos:start="363:33" pos:end="363:44"><name pos:start="363:33" pos:end="363:33">z</name> <operator pos:start="363:35" pos:end="363:35">=</operator> <name pos:start="363:37" pos:end="363:44">backstep</name></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="365:31" pos:end="369:29">else <block pos:start="365:36" pos:end="369:29">{<block_content pos:start="367:33" pos:end="367:38">

                                <expr_stmt pos:start="367:33" pos:end="367:38"><expr pos:start="367:33" pos:end="367:37"><name pos:start="367:33" pos:end="367:33">z</name> <operator pos:start="367:35" pos:end="367:35">=</operator> <literal type="number" pos:start="367:37" pos:end="367:37">0</literal></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>



                            <expr_stmt pos:start="373:29" pos:end="377:77"><expr pos:start="373:29" pos:end="377:76"><name pos:start="373:29" pos:end="373:29">r</name> <operator pos:start="373:31" pos:end="373:31">=</operator> <name pos:start="373:33" pos:end="373:68"><name pos:start="373:33" pos:end="373:36">odst</name><index pos:start="373:37" pos:end="373:68">[<expr pos:start="373:38" pos:end="373:67"><operator pos:start="373:38" pos:end="373:38">(</operator><operator pos:start="373:39" pos:end="373:39">(</operator><name pos:start="373:40" pos:end="373:41">by</name> <operator pos:start="373:43" pos:end="373:43">-</operator> <literal type="number" pos:start="373:45" pos:end="373:45">1</literal><operator pos:start="373:46" pos:end="373:46">)</operator> <operator pos:start="373:48" pos:end="373:48">*</operator> <name pos:start="373:50" pos:end="373:57">linesize</name> <operator pos:start="373:59" pos:end="373:59">+</operator> <name pos:start="373:61" pos:end="373:62">bx</name><operator pos:start="373:63" pos:end="373:63">)</operator> <operator pos:start="373:65" pos:end="373:65">*</operator> <literal type="number" pos:start="373:67" pos:end="373:67">4</literal></expr>]</index></name> <operator pos:start="373:70" pos:end="373:70">+</operator>

                                <name pos:start="375:33" pos:end="375:70"><name pos:start="375:33" pos:end="375:36">odst</name><index pos:start="375:37" pos:end="375:70">[<expr pos:start="375:38" pos:end="375:69"><operator pos:start="375:38" pos:end="375:38">(</operator><name pos:start="375:39" pos:end="375:40">by</name> <operator pos:start="375:42" pos:end="375:42">*</operator> <name pos:start="375:44" pos:end="375:51">linesize</name> <operator pos:start="375:53" pos:end="375:53">+</operator> <name pos:start="375:55" pos:end="375:56">bx</name> <operator pos:start="375:58" pos:end="375:58">-</operator> <literal type="number" pos:start="375:60" pos:end="375:62">1</literal> <operator pos:start="375:62" pos:end="375:62">-</operator> <name pos:start="375:64" pos:end="375:64">z</name><operator pos:start="375:65" pos:end="375:65">)</operator> <operator pos:start="375:67" pos:end="375:67">*</operator> <literal type="number" pos:start="375:69" pos:end="375:69">4</literal></expr>]</index></name> <operator pos:start="375:72" pos:end="375:72">-</operator>

                                <name pos:start="377:33" pos:end="377:76"><name pos:start="377:33" pos:end="377:36">odst</name><index pos:start="377:37" pos:end="377:76">[<expr pos:start="377:38" pos:end="377:75"><operator pos:start="377:38" pos:end="377:38">(</operator><operator pos:start="377:39" pos:end="377:39">(</operator><name pos:start="377:40" pos:end="377:41">by</name> <operator pos:start="377:43" pos:end="377:43">-</operator> <literal type="number" pos:start="377:45" pos:end="377:45">1</literal><operator pos:start="377:46" pos:end="377:46">)</operator> <operator pos:start="377:48" pos:end="377:48">*</operator> <name pos:start="377:50" pos:end="377:57">linesize</name> <operator pos:start="377:59" pos:end="377:59">+</operator> <name pos:start="377:61" pos:end="377:62">bx</name> <operator pos:start="377:64" pos:end="377:64">-</operator> <literal type="number" pos:start="377:66" pos:end="377:68">1</literal> <operator pos:start="377:68" pos:end="377:68">-</operator> <name pos:start="377:70" pos:end="377:70">z</name><operator pos:start="377:71" pos:end="377:71">)</operator> <operator pos:start="377:73" pos:end="377:73">*</operator> <literal type="number" pos:start="377:75" pos:end="377:75">4</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="379:29" pos:end="383:81"><expr pos:start="379:29" pos:end="383:80"><name pos:start="379:29" pos:end="379:29">g</name> <operator pos:start="379:31" pos:end="379:31">=</operator> <name pos:start="379:33" pos:end="379:72"><name pos:start="379:33" pos:end="379:36">odst</name><index pos:start="379:37" pos:end="379:72">[<expr pos:start="379:38" pos:end="379:71"><operator pos:start="379:38" pos:end="379:38">(</operator><operator pos:start="379:39" pos:end="379:39">(</operator><name pos:start="379:40" pos:end="379:41">by</name> <operator pos:start="379:43" pos:end="379:43">-</operator> <literal type="number" pos:start="379:45" pos:end="379:45">1</literal><operator pos:start="379:46" pos:end="379:46">)</operator> <operator pos:start="379:48" pos:end="379:48">*</operator> <name pos:start="379:50" pos:end="379:57">linesize</name> <operator pos:start="379:59" pos:end="379:59">+</operator> <name pos:start="379:61" pos:end="379:62">bx</name><operator pos:start="379:63" pos:end="379:63">)</operator> <operator pos:start="379:65" pos:end="379:65">*</operator> <literal type="number" pos:start="379:67" pos:end="379:69">4</literal> <operator pos:start="379:69" pos:end="379:69">+</operator> <literal type="number" pos:start="379:71" pos:end="379:71">1</literal></expr>]</index></name> <operator pos:start="379:74" pos:end="379:74">+</operator>

                                <name pos:start="381:33" pos:end="381:74"><name pos:start="381:33" pos:end="381:36">odst</name><index pos:start="381:37" pos:end="381:74">[<expr pos:start="381:38" pos:end="381:73"><operator pos:start="381:38" pos:end="381:38">(</operator><name pos:start="381:39" pos:end="381:40">by</name> <operator pos:start="381:42" pos:end="381:42">*</operator> <name pos:start="381:44" pos:end="381:51">linesize</name> <operator pos:start="381:53" pos:end="381:53">+</operator> <name pos:start="381:55" pos:end="381:56">bx</name> <operator pos:start="381:58" pos:end="381:58">-</operator> <literal type="number" pos:start="381:60" pos:end="381:62">1</literal> <operator pos:start="381:62" pos:end="381:62">-</operator> <name pos:start="381:64" pos:end="381:64">z</name><operator pos:start="381:65" pos:end="381:65">)</operator> <operator pos:start="381:67" pos:end="381:67">*</operator> <literal type="number" pos:start="381:69" pos:end="381:71">4</literal> <operator pos:start="381:71" pos:end="381:71">+</operator> <literal type="number" pos:start="381:73" pos:end="381:73">1</literal></expr>]</index></name> <operator pos:start="381:76" pos:end="381:76">-</operator>

                                <name pos:start="383:33" pos:end="383:80"><name pos:start="383:33" pos:end="383:36">odst</name><index pos:start="383:37" pos:end="383:80">[<expr pos:start="383:38" pos:end="383:79"><operator pos:start="383:38" pos:end="383:38">(</operator><operator pos:start="383:39" pos:end="383:39">(</operator><name pos:start="383:40" pos:end="383:41">by</name> <operator pos:start="383:43" pos:end="383:43">-</operator> <literal type="number" pos:start="383:45" pos:end="383:45">1</literal><operator pos:start="383:46" pos:end="383:46">)</operator> <operator pos:start="383:48" pos:end="383:48">*</operator> <name pos:start="383:50" pos:end="383:57">linesize</name> <operator pos:start="383:59" pos:end="383:59">+</operator> <name pos:start="383:61" pos:end="383:62">bx</name> <operator pos:start="383:64" pos:end="383:64">-</operator> <literal type="number" pos:start="383:66" pos:end="383:68">1</literal> <operator pos:start="383:68" pos:end="383:68">-</operator> <name pos:start="383:70" pos:end="383:70">z</name><operator pos:start="383:71" pos:end="383:71">)</operator> <operator pos:start="383:73" pos:end="383:73">*</operator> <literal type="number" pos:start="383:75" pos:end="383:77">4</literal> <operator pos:start="383:77" pos:end="383:77">+</operator> <literal type="number" pos:start="383:79" pos:end="383:79">1</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="385:29" pos:end="389:81"><expr pos:start="385:29" pos:end="389:80"><name pos:start="385:29" pos:end="385:29">b</name> <operator pos:start="385:31" pos:end="385:31">=</operator> <name pos:start="385:33" pos:end="385:72"><name pos:start="385:33" pos:end="385:36">odst</name><index pos:start="385:37" pos:end="385:72">[<expr pos:start="385:38" pos:end="385:71"><operator pos:start="385:38" pos:end="385:38">(</operator><operator pos:start="385:39" pos:end="385:39">(</operator><name pos:start="385:40" pos:end="385:41">by</name> <operator pos:start="385:43" pos:end="385:43">-</operator> <literal type="number" pos:start="385:45" pos:end="385:45">1</literal><operator pos:start="385:46" pos:end="385:46">)</operator> <operator pos:start="385:48" pos:end="385:48">*</operator> <name pos:start="385:50" pos:end="385:57">linesize</name> <operator pos:start="385:59" pos:end="385:59">+</operator> <name pos:start="385:61" pos:end="385:62">bx</name><operator pos:start="385:63" pos:end="385:63">)</operator> <operator pos:start="385:65" pos:end="385:65">*</operator> <literal type="number" pos:start="385:67" pos:end="385:69">4</literal> <operator pos:start="385:69" pos:end="385:69">+</operator> <literal type="number" pos:start="385:71" pos:end="385:71">2</literal></expr>]</index></name> <operator pos:start="385:74" pos:end="385:74">+</operator>

                                <name pos:start="387:33" pos:end="387:74"><name pos:start="387:33" pos:end="387:36">odst</name><index pos:start="387:37" pos:end="387:74">[<expr pos:start="387:38" pos:end="387:73"><operator pos:start="387:38" pos:end="387:38">(</operator><name pos:start="387:39" pos:end="387:40">by</name> <operator pos:start="387:42" pos:end="387:42">*</operator> <name pos:start="387:44" pos:end="387:51">linesize</name> <operator pos:start="387:53" pos:end="387:53">+</operator> <name pos:start="387:55" pos:end="387:56">bx</name> <operator pos:start="387:58" pos:end="387:58">-</operator> <literal type="number" pos:start="387:60" pos:end="387:62">1</literal> <operator pos:start="387:62" pos:end="387:62">-</operator> <name pos:start="387:64" pos:end="387:64">z</name><operator pos:start="387:65" pos:end="387:65">)</operator> <operator pos:start="387:67" pos:end="387:67">*</operator> <literal type="number" pos:start="387:69" pos:end="387:71">4</literal> <operator pos:start="387:71" pos:end="387:71">+</operator> <literal type="number" pos:start="387:73" pos:end="387:73">2</literal></expr>]</index></name> <operator pos:start="387:76" pos:end="387:76">-</operator>

                                <name pos:start="389:33" pos:end="389:80"><name pos:start="389:33" pos:end="389:36">odst</name><index pos:start="389:37" pos:end="389:80">[<expr pos:start="389:38" pos:end="389:79"><operator pos:start="389:38" pos:end="389:38">(</operator><operator pos:start="389:39" pos:end="389:39">(</operator><name pos:start="389:40" pos:end="389:41">by</name> <operator pos:start="389:43" pos:end="389:43">-</operator> <literal type="number" pos:start="389:45" pos:end="389:45">1</literal><operator pos:start="389:46" pos:end="389:46">)</operator> <operator pos:start="389:48" pos:end="389:48">*</operator> <name pos:start="389:50" pos:end="389:57">linesize</name> <operator pos:start="389:59" pos:end="389:59">+</operator> <name pos:start="389:61" pos:end="389:62">bx</name> <operator pos:start="389:64" pos:end="389:64">-</operator> <literal type="number" pos:start="389:66" pos:end="389:68">1</literal> <operator pos:start="389:68" pos:end="389:68">-</operator> <name pos:start="389:70" pos:end="389:70">z</name><operator pos:start="389:71" pos:end="389:71">)</operator> <operator pos:start="389:73" pos:end="389:73">*</operator> <literal type="number" pos:start="389:75" pos:end="389:77">4</literal> <operator pos:start="389:77" pos:end="389:77">+</operator> <literal type="number" pos:start="389:79" pos:end="389:79">2</literal></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="391:29" pos:end="391:86"><expr pos:start="391:29" pos:end="391:85"><name pos:start="391:29" pos:end="391:31">clr</name> <operator pos:start="391:33" pos:end="391:33">=</operator> <operator pos:start="391:35" pos:end="391:35">(</operator><operator pos:start="391:36" pos:end="391:36">(</operator><name pos:start="391:37" pos:end="391:37">b</name> <operator pos:start="391:39" pos:end="391:39">&amp;</operator> <literal type="number" pos:start="391:41" pos:end="391:44">0xFF</literal><operator pos:start="391:45" pos:end="391:45">)</operator> <operator pos:start="391:47" pos:end="391:48">&lt;&lt;</operator> <literal type="number" pos:start="391:50" pos:end="391:51">16</literal><operator pos:start="391:52" pos:end="391:52">)</operator> <operator pos:start="391:54" pos:end="391:54">+</operator> <operator pos:start="391:56" pos:end="391:56">(</operator><operator pos:start="391:57" pos:end="391:57">(</operator><name pos:start="391:58" pos:end="391:58">g</name> <operator pos:start="391:60" pos:end="391:60">&amp;</operator> <literal type="number" pos:start="391:62" pos:end="391:65">0xFF</literal><operator pos:start="391:66" pos:end="391:66">)</operator> <operator pos:start="391:68" pos:end="391:69">&lt;&lt;</operator> <literal type="number" pos:start="391:71" pos:end="391:71">8</literal><operator pos:start="391:72" pos:end="391:72">)</operator> <operator pos:start="391:74" pos:end="391:74">+</operator> <operator pos:start="391:76" pos:end="391:76">(</operator><name pos:start="391:77" pos:end="391:77">r</name> <operator pos:start="391:79" pos:end="391:79">&amp;</operator> <literal type="number" pos:start="391:81" pos:end="391:84">0xFF</literal><operator pos:start="391:85" pos:end="391:85">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="393:29" pos:end="393:58"><expr pos:start="393:29" pos:end="393:57"><name pos:start="393:29" pos:end="393:51"><name pos:start="393:29" pos:end="393:31">dst</name><index pos:start="393:32" pos:end="393:51">[<expr pos:start="393:33" pos:end="393:50"><name pos:start="393:33" pos:end="393:34">by</name> <operator pos:start="393:36" pos:end="393:36">*</operator> <name pos:start="393:38" pos:end="393:45">linesize</name> <operator pos:start="393:47" pos:end="393:47">+</operator> <name pos:start="393:49" pos:end="393:50">bx</name></expr>]</index></name> <operator pos:start="393:53" pos:end="393:53">=</operator> <name pos:start="393:55" pos:end="393:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="395:29" pos:end="395:33"><expr pos:start="395:29" pos:end="395:32"><name pos:start="395:29" pos:end="395:30">bx</name><operator pos:start="395:31" pos:end="395:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="397:29" pos:end="403:29"><if pos:start="397:29" pos:end="403:29">if <condition pos:start="397:32" pos:end="397:73">(<expr pos:start="397:33" pos:end="397:72"><name pos:start="397:33" pos:end="397:34">bx</name> <operator pos:start="397:36" pos:end="397:37">&gt;=</operator> <name pos:start="397:39" pos:end="397:39">x</name> <operator pos:start="397:41" pos:end="397:41">*</operator> <literal type="number" pos:start="397:43" pos:end="397:46">16</literal> <operator pos:start="397:46" pos:end="397:46">+</operator> <name pos:start="397:48" pos:end="397:50">sx2</name> <operator pos:start="397:52" pos:end="397:53">||</operator> <name pos:start="397:55" pos:end="397:56">bx</name> <operator pos:start="397:58" pos:end="397:59">&gt;=</operator> <name pos:start="397:61" pos:end="397:72"><name pos:start="397:61" pos:end="397:65">avctx</name><operator pos:start="397:66" pos:end="397:67">-&gt;</operator><name pos:start="397:68" pos:end="397:72">width</name></name></expr>)</condition> <block pos:start="397:75" pos:end="403:29">{<block_content pos:start="399:33" pos:end="401:37">

                                <expr_stmt pos:start="399:33" pos:end="399:50"><expr pos:start="399:33" pos:end="399:49"><name pos:start="399:33" pos:end="399:34">bx</name> <operator pos:start="399:36" pos:end="399:36">=</operator> <name pos:start="399:38" pos:end="399:38">x</name> <operator pos:start="399:40" pos:end="399:40">*</operator> <literal type="number" pos:start="399:42" pos:end="399:45">16</literal> <operator pos:start="399:45" pos:end="399:45">+</operator> <name pos:start="399:47" pos:end="399:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="401:33" pos:end="401:37"><expr pos:start="401:33" pos:end="401:36"><name pos:start="401:33" pos:end="401:34">by</name><operator pos:start="401:35" pos:end="401:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="407:25" pos:end="407:30">break;</break>

                    <case pos:start="409:21" pos:end="409:27">case <expr pos:start="409:26" pos:end="409:26"><literal type="number" pos:start="409:26" pos:end="409:26">5</literal></expr>:</case>

                        <while pos:start="411:25" pos:end="445:25">while <condition pos:start="411:31" pos:end="411:41">(<expr pos:start="411:32" pos:end="411:40"><name pos:start="411:32" pos:end="411:34">run</name><operator pos:start="411:35" pos:end="411:36">--</operator> <operator pos:start="411:38" pos:end="411:38">&gt;</operator> <literal type="number" pos:start="411:40" pos:end="411:40">0</literal></expr>)</condition> <block pos:start="411:43" pos:end="445:25">{<block_content pos:start="413:29" pos:end="443:29">

                            <if_stmt pos:start="413:29" pos:end="415:59"><if pos:start="413:29" pos:end="415:59">if <condition pos:start="413:32" pos:end="413:62">(<expr pos:start="413:33" pos:end="413:61"><name pos:start="413:33" pos:end="413:34">by</name> <operator pos:start="413:36" pos:end="413:36">&lt;</operator> <literal type="number" pos:start="413:38" pos:end="413:38">1</literal> <operator pos:start="413:40" pos:end="413:41">||</operator> <name pos:start="413:43" pos:end="413:44">by</name> <operator pos:start="413:46" pos:end="413:47">&gt;=</operator> <name pos:start="413:49" pos:end="413:61"><name pos:start="413:49" pos:end="413:53">avctx</name><operator pos:start="413:54" pos:end="413:55">-&gt;</operator><name pos:start="413:56" pos:end="413:61">height</name></name></expr>)</condition><block type="pseudo" pos:start="415:33" pos:end="415:59"><block_content pos:start="415:33" pos:end="415:59">

                                <return pos:start="415:33" pos:end="415:59">return <expr pos:start="415:40" pos:end="415:58"><name pos:start="415:40" pos:end="415:58">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                            <if_stmt pos:start="419:29" pos:end="427:29"><if pos:start="419:29" pos:end="423:29">if <condition pos:start="419:32" pos:end="419:40">(<expr pos:start="419:33" pos:end="419:39"><name pos:start="419:33" pos:end="419:34">bx</name> <operator pos:start="419:36" pos:end="419:37">==</operator> <literal type="number" pos:start="419:39" pos:end="419:39">0</literal></expr>)</condition> <block pos:start="419:42" pos:end="423:29">{<block_content pos:start="421:33" pos:end="421:45">

                                <expr_stmt pos:start="421:33" pos:end="421:45"><expr pos:start="421:33" pos:end="421:44"><name pos:start="421:33" pos:end="421:33">z</name> <operator pos:start="421:35" pos:end="421:35">=</operator> <name pos:start="421:37" pos:end="421:44">backstep</name></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="423:31" pos:end="427:29">else <block pos:start="423:36" pos:end="427:29">{<block_content pos:start="425:33" pos:end="425:38">

                                <expr_stmt pos:start="425:33" pos:end="425:38"><expr pos:start="425:33" pos:end="425:37"><name pos:start="425:33" pos:end="425:33">z</name> <operator pos:start="425:35" pos:end="425:35">=</operator> <literal type="number" pos:start="425:37" pos:end="425:37">0</literal></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>



                            <expr_stmt pos:start="431:29" pos:end="431:72"><expr pos:start="431:29" pos:end="431:71"><name pos:start="431:29" pos:end="431:31">clr</name> <operator pos:start="431:33" pos:end="431:33">=</operator> <name pos:start="431:35" pos:end="431:71"><name pos:start="431:35" pos:end="431:37">dst</name><index pos:start="431:38" pos:end="431:71">[<expr pos:start="431:39" pos:end="431:70"><operator pos:start="431:39" pos:end="431:39">(</operator><name pos:start="431:40" pos:end="431:41">by</name> <operator pos:start="431:43" pos:end="431:43">-</operator> <literal type="number" pos:start="431:45" pos:end="431:45">1</literal><operator pos:start="431:46" pos:end="431:46">)</operator> <operator pos:start="431:48" pos:end="431:48">*</operator> <name pos:start="431:50" pos:end="431:57">linesize</name> <operator pos:start="431:59" pos:end="431:59">+</operator> <name pos:start="431:61" pos:end="431:62">bx</name> <operator pos:start="431:64" pos:end="431:64">-</operator> <literal type="number" pos:start="431:66" pos:end="431:68">1</literal> <operator pos:start="431:68" pos:end="431:68">-</operator> <name pos:start="431:70" pos:end="431:70">z</name></expr>]</index></name></expr>;</expr_stmt>

                            <expr_stmt pos:start="433:29" pos:end="433:58"><expr pos:start="433:29" pos:end="433:57"><name pos:start="433:29" pos:end="433:51"><name pos:start="433:29" pos:end="433:31">dst</name><index pos:start="433:32" pos:end="433:51">[<expr pos:start="433:33" pos:end="433:50"><name pos:start="433:33" pos:end="433:34">by</name> <operator pos:start="433:36" pos:end="433:36">*</operator> <name pos:start="433:38" pos:end="433:45">linesize</name> <operator pos:start="433:47" pos:end="433:47">+</operator> <name pos:start="433:49" pos:end="433:50">bx</name></expr>]</index></name> <operator pos:start="433:53" pos:end="433:53">=</operator> <name pos:start="433:55" pos:end="433:57">clr</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="435:29" pos:end="435:33"><expr pos:start="435:29" pos:end="435:32"><name pos:start="435:29" pos:end="435:30">bx</name><operator pos:start="435:31" pos:end="435:32">++</operator></expr>;</expr_stmt>

                            <if_stmt pos:start="437:29" pos:end="443:29"><if pos:start="437:29" pos:end="443:29">if <condition pos:start="437:32" pos:end="437:73">(<expr pos:start="437:33" pos:end="437:72"><name pos:start="437:33" pos:end="437:34">bx</name> <operator pos:start="437:36" pos:end="437:37">&gt;=</operator> <name pos:start="437:39" pos:end="437:39">x</name> <operator pos:start="437:41" pos:end="437:41">*</operator> <literal type="number" pos:start="437:43" pos:end="437:46">16</literal> <operator pos:start="437:46" pos:end="437:46">+</operator> <name pos:start="437:48" pos:end="437:50">sx2</name> <operator pos:start="437:52" pos:end="437:53">||</operator> <name pos:start="437:55" pos:end="437:56">bx</name> <operator pos:start="437:58" pos:end="437:59">&gt;=</operator> <name pos:start="437:61" pos:end="437:72"><name pos:start="437:61" pos:end="437:65">avctx</name><operator pos:start="437:66" pos:end="437:67">-&gt;</operator><name pos:start="437:68" pos:end="437:72">width</name></name></expr>)</condition> <block pos:start="437:75" pos:end="443:29">{<block_content pos:start="439:33" pos:end="441:37">

                                <expr_stmt pos:start="439:33" pos:end="439:50"><expr pos:start="439:33" pos:end="439:49"><name pos:start="439:33" pos:end="439:34">bx</name> <operator pos:start="439:36" pos:end="439:36">=</operator> <name pos:start="439:38" pos:end="439:38">x</name> <operator pos:start="439:40" pos:end="439:40">*</operator> <literal type="number" pos:start="439:42" pos:end="439:45">16</literal> <operator pos:start="439:45" pos:end="439:45">+</operator> <name pos:start="439:47" pos:end="439:49">sx1</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="441:33" pos:end="441:37"><expr pos:start="441:33" pos:end="441:36"><name pos:start="441:33" pos:end="441:34">by</name><operator pos:start="441:35" pos:end="441:36">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></while>

                        <break pos:start="447:25" pos:end="447:30">break;</break>

                    </block_content>}</block></switch>



                    <if_stmt pos:start="453:21" pos:end="465:21"><if pos:start="453:21" pos:end="459:21">if <condition pos:start="453:24" pos:end="453:59">(<expr pos:start="453:25" pos:end="453:58"><name pos:start="453:25" pos:end="453:52"><name pos:start="453:25" pos:end="453:29">avctx</name><operator pos:start="453:30" pos:end="453:31">-&gt;</operator><name pos:start="453:32" pos:end="453:52">bits_per_coded_sample</name></name> <operator pos:start="453:54" pos:end="453:55">==</operator> <literal type="number" pos:start="453:57" pos:end="453:58">16</literal></expr>)</condition> <block pos:start="453:61" pos:end="459:21">{<block_content pos:start="455:25" pos:end="457:52">

                        <expr_stmt pos:start="455:25" pos:end="455:50"><expr pos:start="455:25" pos:end="455:49"><name pos:start="455:25" pos:end="455:27">cx1</name> <operator pos:start="455:29" pos:end="455:29">=</operator> <operator pos:start="455:31" pos:end="455:31">(</operator><name pos:start="455:32" pos:end="455:34">clr</name> <operator pos:start="455:36" pos:end="455:36">&amp;</operator> <literal type="number" pos:start="455:38" pos:end="455:43">0x3F00</literal><operator pos:start="455:44" pos:end="455:44">)</operator> <operator pos:start="455:46" pos:end="455:47">&gt;&gt;</operator> <literal type="number" pos:start="455:49" pos:end="455:49">2</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="457:25" pos:end="457:52"><expr pos:start="457:25" pos:end="457:51"><name pos:start="457:25" pos:end="457:26">cx</name> <operator pos:start="457:28" pos:end="457:28">=</operator> <operator pos:start="457:30" pos:end="457:30">(</operator><name pos:start="457:31" pos:end="457:33">clr</name> <operator pos:start="457:35" pos:end="457:35">&amp;</operator> <literal type="number" pos:start="457:37" pos:end="457:44">0xFFFFFF</literal><operator pos:start="457:45" pos:end="457:45">)</operator> <operator pos:start="457:47" pos:end="457:48">&gt;&gt;</operator> <literal type="number" pos:start="457:50" pos:end="457:51">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="459:23" pos:end="465:21">else <block pos:start="459:28" pos:end="465:21">{<block_content pos:start="461:25" pos:end="463:52">

                        <expr_stmt pos:start="461:25" pos:end="461:50"><expr pos:start="461:25" pos:end="461:49"><name pos:start="461:25" pos:end="461:27">cx1</name> <operator pos:start="461:29" pos:end="461:29">=</operator> <operator pos:start="461:31" pos:end="461:31">(</operator><name pos:start="461:32" pos:end="461:34">clr</name> <operator pos:start="461:36" pos:end="461:36">&amp;</operator> <literal type="number" pos:start="461:38" pos:end="461:43">0xFC00</literal><operator pos:start="461:44" pos:end="461:44">)</operator> <operator pos:start="461:46" pos:end="461:47">&gt;&gt;</operator> <literal type="number" pos:start="461:49" pos:end="461:49">4</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="463:25" pos:end="463:52"><expr pos:start="463:25" pos:end="463:51"><name pos:start="463:25" pos:end="463:26">cx</name> <operator pos:start="463:28" pos:end="463:28">=</operator> <operator pos:start="463:30" pos:end="463:30">(</operator><name pos:start="463:31" pos:end="463:33">clr</name> <operator pos:start="463:35" pos:end="463:35">&amp;</operator> <literal type="number" pos:start="463:37" pos:end="463:44">0xFFFFFF</literal><operator pos:start="463:45" pos:end="463:45">)</operator> <operator pos:start="463:47" pos:end="463:48">&gt;&gt;</operator> <literal type="number" pos:start="463:50" pos:end="463:51">18</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="477:5" pos:end="477:13">return <expr pos:start="477:12" pos:end="477:12"><literal type="number" pos:start="477:12" pos:end="477:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
