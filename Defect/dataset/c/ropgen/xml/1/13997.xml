<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13997.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">mv88w8618_eth_write</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:52">hwaddr</name></type> <name pos:start="1:54" pos:end="1:59">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:61"><decl pos:start="3:49" pos:end="3:61"><type pos:start="3:49" pos:end="3:61"><name pos:start="3:49" pos:end="3:56">unsigned</name></type> <name pos:start="3:58" pos:end="3:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="101:1">{<block_content pos:start="7:5" pos:end="99:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">mv88w8618_eth_state</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:35">= <expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="99:5">switch <condition pos:start="11:12" pos:end="11:19">(<expr pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:18">offset</name></expr>)</condition> <block pos:start="11:21" pos:end="99:5">{<block_content pos:start="13:5" pos:end="97:14">

    <case pos:start="13:5" pos:end="13:21">case <expr pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:20">MP_ETH_SMIR</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:24"><expr pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">smir</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:23">value</name></expr>;</expr_stmt>

        <break pos:start="17:9" pos:end="17:14">break;</break>



    <case pos:start="21:5" pos:end="21:21">case <expr pos:start="21:10" pos:end="21:20"><name pos:start="21:10" pos:end="21:20">MP_ETH_PCXR</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:67"><expr pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:22">vlan_header</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <operator pos:start="23:26" pos:end="23:26">(</operator><operator pos:start="23:27" pos:end="23:27">(</operator><name pos:start="23:28" pos:end="23:32">value</name> <operator pos:start="23:34" pos:end="23:35">&gt;&gt;</operator> <name pos:start="23:37" pos:end="23:56">MP_ETH_PCXR_2BSM_BIT</name><operator pos:start="23:57" pos:end="23:57">)</operator> <operator pos:start="23:59" pos:end="23:59">&amp;</operator> <literal type="number" pos:start="23:61" pos:end="23:61">1</literal><operator pos:start="23:62" pos:end="23:62">)</operator> <operator pos:start="23:64" pos:end="23:64">*</operator> <literal type="number" pos:start="23:66" pos:end="23:66">2</literal></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>



    <case pos:start="29:5" pos:end="29:22">case <expr pos:start="29:10" pos:end="29:21"><name pos:start="29:10" pos:end="29:21">MP_ETH_SDCMR</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:36">(<expr pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:17">value</name> <operator pos:start="31:19" pos:end="31:19">&amp;</operator> <name pos:start="31:21" pos:end="31:35">MP_ETH_CMD_TXHI</name></expr>)</condition> <block pos:start="31:38" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:27">

            <expr_stmt pos:start="33:13" pos:end="33:27"><expr pos:start="33:13" pos:end="33:26"><call pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:20">eth_send</name><argument_list pos:start="33:21" pos:end="33:26">(<argument pos:start="33:22" pos:end="33:22"><expr pos:start="33:22" pos:end="33:22"><name pos:start="33:22" pos:end="33:22">s</name></expr></argument>, <argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:36">(<expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:17">value</name> <operator pos:start="37:19" pos:end="37:19">&amp;</operator> <name pos:start="37:21" pos:end="37:35">MP_ETH_CMD_TXLO</name></expr>)</condition> <block pos:start="37:38" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:27">

            <expr_stmt pos:start="39:13" pos:end="39:27"><expr pos:start="39:13" pos:end="39:26"><call pos:start="39:13" pos:end="39:26"><name pos:start="39:13" pos:end="39:20">eth_send</name><argument_list pos:start="39:21" pos:end="39:26">(<argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">s</name></expr></argument>, <argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:75">(<expr pos:start="43:13" pos:end="43:74"><name pos:start="43:13" pos:end="43:17">value</name> <operator pos:start="43:19" pos:end="43:19">&amp;</operator> <operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:36">MP_ETH_CMD_TXHI</name> <operator pos:start="43:38" pos:end="43:38">|</operator> <name pos:start="43:40" pos:end="43:54">MP_ETH_CMD_TXLO</name><operator pos:start="43:55" pos:end="43:55">)</operator> <operator pos:start="43:57" pos:end="43:58">&amp;&amp;</operator> <name pos:start="43:60" pos:end="43:65"><name pos:start="43:60" pos:end="43:60">s</name><operator pos:start="43:61" pos:end="43:62">-&gt;</operator><name pos:start="43:63" pos:end="43:65">icr</name></name> <operator pos:start="43:67" pos:end="43:67">&amp;</operator> <name pos:start="43:69" pos:end="43:74"><name pos:start="43:69" pos:end="43:69">s</name><operator pos:start="43:70" pos:end="43:71">-&gt;</operator><name pos:start="43:72" pos:end="43:74">imr</name></name></expr>)</condition> <block pos:start="43:77" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:35">

            <expr_stmt pos:start="45:13" pos:end="45:35"><expr pos:start="45:13" pos:end="45:34"><call pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:26">qemu_irq_raise</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:33">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:20">case <expr pos:start="53:10" pos:end="53:19"><name pos:start="53:10" pos:end="53:19">MP_ETH_ICR</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:24"><expr pos:start="55:9" pos:end="55:23"><name pos:start="55:9" pos:end="55:14"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:14">icr</name></name> <operator pos:start="55:16" pos:end="55:17">&amp;=</operator> <name pos:start="55:19" pos:end="55:23">value</name></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>



    <case pos:start="61:5" pos:end="61:20">case <expr pos:start="61:10" pos:end="61:19"><name pos:start="61:10" pos:end="61:19">MP_ETH_IMR</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:14">imr</name></name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:28">(<expr pos:start="65:13" pos:end="65:27"><name pos:start="65:13" pos:end="65:18"><name pos:start="65:13" pos:end="65:13">s</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:18">icr</name></name> <operator pos:start="65:20" pos:end="65:20">&amp;</operator> <name pos:start="65:22" pos:end="65:27"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:27">imr</name></name></expr>)</condition> <block pos:start="65:30" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:35">

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><call pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:26">qemu_irq_raise</name><argument_list pos:start="67:27" pos:end="67:34">(<argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:33"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:33">irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>



    <case pos:start="75:5" pos:end="75:39">case <expr pos:start="75:10" pos:end="75:38"><name pos:start="75:10" pos:end="75:21">MP_ETH_FRDP0</name> <operator pos:start="75:23" pos:end="75:25">...</operator> <name pos:start="75:27" pos:end="75:38">MP_ETH_FRDP3</name></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:56"><expr pos:start="77:9" pos:end="77:55"><name pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">frx_queue</name><index pos:start="77:21" pos:end="77:47">[<expr pos:start="77:22" pos:end="77:46"><operator pos:start="77:22" pos:end="77:22">(</operator><name pos:start="77:23" pos:end="77:28">offset</name> <operator pos:start="77:30" pos:end="77:30">-</operator> <name pos:start="77:32" pos:end="77:43">MP_ETH_FRDP0</name><operator pos:start="77:44" pos:end="77:44">)</operator><operator pos:start="77:45" pos:end="77:45">/</operator><literal type="number" pos:start="77:46" pos:end="77:46">4</literal></expr>]</index></name> <operator pos:start="77:49" pos:end="77:49">=</operator> <name pos:start="77:51" pos:end="77:55">value</name></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>



    <case pos:start="83:5" pos:end="83:39">case <expr pos:start="83:10" pos:end="83:38"><name pos:start="83:10" pos:end="83:21">MP_ETH_CRDP0</name> <operator pos:start="83:23" pos:end="83:25">...</operator> <name pos:start="83:27" pos:end="83:38">MP_ETH_CRDP3</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="87:57"><expr pos:start="85:9" pos:end="87:56"><name pos:start="85:9" pos:end="85:46"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:19">rx_queue</name><index pos:start="85:20" pos:end="85:46">[<expr pos:start="85:21" pos:end="85:45"><operator pos:start="85:21" pos:end="85:21">(</operator><name pos:start="85:22" pos:end="85:27">offset</name> <operator pos:start="85:29" pos:end="85:29">-</operator> <name pos:start="85:31" pos:end="85:42">MP_ETH_CRDP0</name><operator pos:start="85:43" pos:end="85:43">)</operator><operator pos:start="85:44" pos:end="85:44">/</operator><literal type="number" pos:start="85:45" pos:end="85:45">4</literal></expr>]</index></name> <operator pos:start="85:48" pos:end="85:48">=</operator>

            <name pos:start="87:13" pos:end="87:48"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:21">cur_rx</name><index pos:start="87:22" pos:end="87:48">[<expr pos:start="87:23" pos:end="87:47"><operator pos:start="87:23" pos:end="87:23">(</operator><name pos:start="87:24" pos:end="87:29">offset</name> <operator pos:start="87:31" pos:end="87:31">-</operator> <name pos:start="87:33" pos:end="87:44">MP_ETH_CRDP0</name><operator pos:start="87:45" pos:end="87:45">)</operator><operator pos:start="87:46" pos:end="87:46">/</operator><literal type="number" pos:start="87:47" pos:end="87:47">4</literal></expr>]</index></name> <operator pos:start="87:50" pos:end="87:50">=</operator> <name pos:start="87:52" pos:end="87:56">value</name></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>



    <case pos:start="93:5" pos:end="93:39">case <expr pos:start="93:10" pos:end="93:38"><name pos:start="93:10" pos:end="93:21">MP_ETH_CTDP0</name> <operator pos:start="93:23" pos:end="93:25">...</operator> <name pos:start="93:27" pos:end="93:38">MP_ETH_CTDP3</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:55"><expr pos:start="95:9" pos:end="95:54"><name pos:start="95:9" pos:end="95:46"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:19">tx_queue</name><index pos:start="95:20" pos:end="95:46">[<expr pos:start="95:21" pos:end="95:45"><operator pos:start="95:21" pos:end="95:21">(</operator><name pos:start="95:22" pos:end="95:27">offset</name> <operator pos:start="95:29" pos:end="95:29">-</operator> <name pos:start="95:31" pos:end="95:42">MP_ETH_CTDP0</name><operator pos:start="95:43" pos:end="95:43">)</operator><operator pos:start="95:44" pos:end="95:44">/</operator><literal type="number" pos:start="95:45" pos:end="95:45">4</literal></expr>]</index></name> <operator pos:start="95:48" pos:end="95:48">=</operator> <name pos:start="95:50" pos:end="95:54">value</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
