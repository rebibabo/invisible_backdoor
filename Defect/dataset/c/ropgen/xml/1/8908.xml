<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8908.c" pos:tabs="8"><function pos:start="1:1" pos:end="66:16"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">dv_extract_audio</name><parameter_list pos:start="1:28" pos:end="2:49">(<parameter pos:start="1:29" pos:end="1:42"><decl pos:start="1:29" pos:end="1:42"><type pos:start="1:29" pos:end="1:42"><name pos:start="1:29" pos:end="1:35">uint8_t</name><modifier pos:start="1:36" pos:end="1:36">*</modifier></type> <name pos:start="1:38" pos:end="1:42">frame</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:51">uint8_t</name><modifier pos:start="1:52" pos:end="1:52">*</modifier></type> <name pos:start="1:54" pos:end="1:60"><name pos:start="1:54" pos:end="1:57">ppcm</name><index pos:start="1:58" pos:end="1:60">[<expr pos:start="1:59" pos:end="1:59"><literal type="number" pos:start="1:59" pos:end="1:59">4</literal></expr>]</index></name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:48"><decl pos:start="2:29" pos:end="2:48"><type pos:start="2:29" pos:end="2:48"><specifier pos:start="2:29" pos:end="2:33">const</specifier> <name pos:start="2:35" pos:end="2:43">DVprofile</name> <modifier pos:start="2:45" pos:end="2:45">*</modifier></type><name pos:start="2:46" pos:end="2:48">sys</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="66:16">{<block_content pos:start="4:5" pos:end="66:16">
    <decl_stmt pos:start="4:5" pos:end="4:61"><decl pos:start="4:5" pos:end="4:12"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:12">size</name></decl>, <decl pos:start="4:15" pos:end="4:18"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:15" pos:end="4:18">chan</name></decl>, <decl pos:start="4:21" pos:end="4:21"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:21" pos:end="4:21">i</name></decl>, <decl pos:start="4:24" pos:end="4:24"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:24" pos:end="4:24">j</name></decl>, <decl pos:start="4:27" pos:end="4:27"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:27" pos:end="4:27">d</name></decl>, <decl pos:start="4:30" pos:end="4:31"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:30" pos:end="4:31">of</name></decl>, <decl pos:start="4:34" pos:end="4:38"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:34" pos:end="4:38">smpls</name></decl>, <decl pos:start="4:41" pos:end="4:44"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:41" pos:end="4:44">freq</name></decl>, <decl pos:start="4:47" pos:end="4:51"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:47" pos:end="4:51">quant</name></decl>, <decl pos:start="4:54" pos:end="4:60"><type ref="prev" pos:start="4:5" pos:end="4:7"/><name pos:start="4:54" pos:end="4:60">half_ch</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint16_t</name></type> <name pos:start="5:14" pos:end="5:15">lc</name></decl>, <decl pos:start="5:18" pos:end="5:19"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:18" pos:end="5:19">rc</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:27"><decl pos:start="6:5" pos:end="6:26"><type pos:start="6:5" pos:end="6:18"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:17">uint8_t</name><modifier pos:start="6:18" pos:end="6:18">*</modifier></type> <name pos:start="6:20" pos:end="6:26">as_pack</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">pcm</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:13"/><name pos:start="7:19" pos:end="7:22">ipcm</name></decl>;</decl_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:54"><expr pos:start="8:5" pos:end="8:53"><name pos:start="8:5" pos:end="8:11">as_pack</name> <operator pos:start="8:13" pos:end="8:13">=</operator> <call pos:start="8:15" pos:end="8:53"><name pos:start="8:15" pos:end="8:29">dv_extract_pack</name><argument_list pos:start="8:30" pos:end="8:53">(<argument pos:start="8:31" pos:end="8:35"><expr pos:start="8:31" pos:end="8:35"><name pos:start="8:31" pos:end="8:35">frame</name></expr></argument>, <argument pos:start="8:38" pos:end="8:52"><expr pos:start="8:38" pos:end="8:52"><name pos:start="8:38" pos:end="8:52">dv_audio_source</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="9:5" pos:end="10:17"><if pos:start="9:5" pos:end="10:17">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:16">as_pack</name></expr>)</condition><block type="pseudo" pos:start="10:9" pos:end="10:17"><block_content pos:start="10:9" pos:end="10:17">    <comment type="block" pos:start="9:22" pos:end="9:37">/* No audio ? */</comment>
        <return pos:start="10:9" pos:end="10:17">return <expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:9">smpls</name> <operator pos:start="11:11" pos:end="11:11">=</operator>  <name pos:start="11:14" pos:end="11:23"><name pos:start="11:14" pos:end="11:20">as_pack</name><index pos:start="11:21" pos:end="11:23">[<expr pos:start="11:22" pos:end="11:22"><literal type="number" pos:start="11:22" pos:end="11:22">1</literal></expr>]</index></name> <operator pos:start="11:25" pos:end="11:25">&amp;</operator> <literal type="number" pos:start="11:27" pos:end="11:30">0x3f</literal></expr>;</expr_stmt>       <comment type="block" pos:start="11:39" pos:end="11:80">/* samples in this frame - min. samples */</comment>
    <expr_stmt pos:start="12:5" pos:end="12:37"><expr pos:start="12:5" pos:end="12:36"><name pos:start="12:5" pos:end="12:8">freq</name>  <operator pos:start="12:11" pos:end="12:11">=</operator> <operator pos:start="12:13" pos:end="12:13">(</operator><name pos:start="12:14" pos:end="12:23"><name pos:start="12:14" pos:end="12:20">as_pack</name><index pos:start="12:21" pos:end="12:23">[<expr pos:start="12:22" pos:end="12:22"><literal type="number" pos:start="12:22" pos:end="12:22">4</literal></expr>]</index></name> <operator pos:start="12:25" pos:end="12:26">&gt;&gt;</operator> <literal type="number" pos:start="12:28" pos:end="12:28">3</literal><operator pos:start="12:29" pos:end="12:29">)</operator> <operator pos:start="12:31" pos:end="12:31">&amp;</operator> <literal type="number" pos:start="12:33" pos:end="12:36">0x07</literal></expr>;</expr_stmt> <comment type="block" pos:start="12:39" pos:end="12:77">/* 0 - 48kHz, 1 - 44,1kHz, 2 - 32kHz */</comment>
    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:9">quant</name> <operator pos:start="13:11" pos:end="13:11">=</operator>  <name pos:start="13:14" pos:end="13:23"><name pos:start="13:14" pos:end="13:20">as_pack</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">4</literal></expr>]</index></name> <operator pos:start="13:25" pos:end="13:25">&amp;</operator> <literal type="number" pos:start="13:27" pos:end="13:30">0x07</literal></expr>;</expr_stmt>       <comment type="block" pos:start="13:39" pos:end="13:81">/* 0 - 16bit linear, 1 - 12bit nonlinear */</comment>
    <if_stmt pos:start="14:5" pos:end="15:18"><if pos:start="14:5" pos:end="15:18">if <condition pos:start="14:8" pos:end="14:18">(<expr pos:start="14:9" pos:end="14:17"><name pos:start="14:9" pos:end="14:13">quant</name> <operator pos:start="14:15" pos:end="14:15">&gt;</operator> <literal type="number" pos:start="14:17" pos:end="14:17">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">
        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="15:20" pos:end="15:49">/* unsupported quantization */</comment>
    <if_stmt pos:start="16:5" pos:end="17:54"><if pos:start="16:5" pos:end="17:54">if <condition pos:start="16:8" pos:end="16:51">(<expr pos:start="16:9" pos:end="16:50"><name pos:start="16:9" pos:end="16:12">freq</name> <operator pos:start="16:14" pos:end="16:15">&gt;=</operator> <call pos:start="16:17" pos:end="16:50"><name pos:start="16:17" pos:end="16:30">FF_ARRAY_ELEMS</name><argument_list pos:start="16:31" pos:end="16:50">(<argument pos:start="16:32" pos:end="16:49"><expr pos:start="16:32" pos:end="16:49"><name pos:start="16:32" pos:end="16:49">dv_audio_frequency</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:5" pos:end="17:54"><block_content pos:start="17:5" pos:end="17:54">
    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:8">size</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:15">sys</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:34">audio_min_samples</name><index pos:start="17:35" pos:end="17:40">[<expr pos:start="17:36" pos:end="17:39"><name pos:start="17:36" pos:end="17:39">freq</name></expr>]</index></name> <operator pos:start="17:42" pos:end="17:42">+</operator> <name pos:start="17:44" pos:end="17:48">smpls</name><operator pos:start="17:49" pos:end="17:49">)</operator> <operator pos:start="17:51" pos:end="17:51">*</operator> <literal type="number" pos:start="17:53" pos:end="17:53">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="17:56" pos:end="17:72">/* 2ch, 2bytes */</comment>
    <expr_stmt pos:start="18:5" pos:end="18:35"><expr pos:start="18:5" pos:end="18:34"><name pos:start="18:5" pos:end="18:11">half_ch</name> <operator pos:start="18:13" pos:end="18:13">=</operator> <name pos:start="18:15" pos:end="18:30"><name pos:start="18:15" pos:end="18:17">sys</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:30">difseg_size</name></name> <operator pos:start="18:32" pos:end="18:32">/</operator> <literal type="number" pos:start="18:34" pos:end="18:34">2</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="19:5" pos:end="20:35">/* We work with 720p frames split in half, thus even frames have
     * channels 0,1 and odd 2,3. */</comment>
    <expr_stmt pos:start="21:5" pos:end="21:62"><expr pos:start="21:5" pos:end="21:61"><name pos:start="21:5" pos:end="21:8">ipcm</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <ternary pos:start="21:12" pos:end="21:61"><condition pos:start="21:12" pos:end="21:55"><expr pos:start="21:12" pos:end="21:53"><operator pos:start="21:12" pos:end="21:12">(</operator><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:15">sys</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:23">height</name></name> <operator pos:start="21:25" pos:end="21:26">==</operator> <literal type="number" pos:start="21:28" pos:end="21:30">720</literal> <operator pos:start="21:32" pos:end="21:33">&amp;&amp;</operator> <operator pos:start="21:35" pos:end="21:35">!</operator><operator pos:start="21:36" pos:end="21:36">(</operator><name pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:41">frame</name><index pos:start="21:42" pos:end="21:44">[<expr pos:start="21:43" pos:end="21:43"><literal type="number" pos:start="21:43" pos:end="21:43">1</literal></expr>]</index></name> <operator pos:start="21:46" pos:end="21:46">&amp;</operator> <literal type="number" pos:start="21:48" pos:end="21:51">0x0C</literal><operator pos:start="21:52" pos:end="21:52">)</operator><operator pos:start="21:53" pos:end="21:53">)</operator></expr> ?</condition><then pos:start="21:57" pos:end="21:57"> <expr pos:start="21:57" pos:end="21:57"><literal type="number" pos:start="21:57" pos:end="21:57">2</literal></expr> </then><else pos:start="21:59" pos:end="21:61">: <expr pos:start="21:61" pos:end="21:61"><literal type="number" pos:start="21:61" pos:end="21:61">0</literal></expr></else></ternary></expr>;</expr_stmt>
    <comment type="block" pos:start="22:5" pos:end="22:30">/* for each DIF channel */</comment>
    <for pos:start="23:5" pos:end="66:16">for <control pos:start="23:9" pos:end="23:49">(<init pos:start="23:10" pos:end="23:18"><expr pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:13">chan</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</init> <condition pos:start="23:20" pos:end="23:41"><expr pos:start="23:20" pos:end="23:40"><name pos:start="23:20" pos:end="23:23">chan</name> <operator pos:start="23:25" pos:end="23:25">&lt;</operator> <name pos:start="23:27" pos:end="23:40"><name pos:start="23:27" pos:end="23:29">sys</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:40">n_difchan</name></name></expr>;</condition> <incr pos:start="23:43" pos:end="23:48"><expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:46">chan</name><operator pos:start="23:47" pos:end="23:48">++</operator></expr></incr>)</control> <block pos:start="23:51" pos:end="66:16">{<block_content pos:start="24:9" pos:end="66:16">
        <expr_stmt pos:start="24:9" pos:end="24:27"><expr pos:start="24:9" pos:end="24:26"><call pos:start="24:9" pos:end="24:26"><name pos:start="24:9" pos:end="24:18">av_assert0</name><argument_list pos:start="24:19" pos:end="24:26">(<argument pos:start="24:20" pos:end="24:25"><expr pos:start="24:20" pos:end="24:25"><name pos:start="24:20" pos:end="24:23">ipcm</name><operator pos:start="24:24" pos:end="24:24">&lt;</operator><literal type="number" pos:start="24:25" pos:end="24:25">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:27"><expr pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:11">pcm</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:18">ppcm</name><index pos:start="25:19" pos:end="25:26">[<expr pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:23">ipcm</name><operator pos:start="25:24" pos:end="25:25">++</operator></expr>]</index></name></expr>;</expr_stmt>
        <if_stmt pos:start="26:9" pos:end="27:18"><if pos:start="26:9" pos:end="27:18">if <condition pos:start="26:12" pos:end="26:17">(<expr pos:start="26:13" pos:end="26:16"><operator pos:start="26:13" pos:end="26:13">!</operator><name pos:start="26:14" pos:end="26:16">pcm</name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:18"><block_content pos:start="27:13" pos:end="27:18">
            <break pos:start="27:13" pos:end="27:18">break;</break></block_content></block></if></if_stmt>
        <comment type="block" pos:start="28:9" pos:end="28:34">/* for each DIF segment */</comment>
        <for pos:start="29:9" pos:end="66:16">for <control pos:start="29:13" pos:end="29:46">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:41"><expr pos:start="29:21" pos:end="29:40"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <name pos:start="29:25" pos:end="29:40"><name pos:start="29:25" pos:end="29:27">sys</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:40">difseg_size</name></name></expr>;</condition> <incr pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:43">i</name><operator pos:start="29:44" pos:end="29:45">++</operator></expr></incr>)</control> <block pos:start="29:48" pos:end="66:16">{<block_content pos:start="30:13" pos:end="66:16">
            <expr_stmt pos:start="30:13" pos:end="30:28"><expr pos:start="30:13" pos:end="30:27"><name pos:start="30:13" pos:end="30:17">frame</name> <operator pos:start="30:19" pos:end="30:20">+=</operator> <literal type="number" pos:start="30:22" pos:end="30:22">6</literal> <operator pos:start="30:24" pos:end="30:24">*</operator> <literal type="number" pos:start="30:26" pos:end="30:27">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="30:30" pos:end="30:58">/* skip DIF segment header */</comment>
            <if_stmt pos:start="31:13" pos:end="66:16"><if pos:start="31:13" pos:end="66:16">if <condition pos:start="31:16" pos:end="31:43">(<expr pos:start="31:17" pos:end="31:42"><name pos:start="31:17" pos:end="31:21">quant</name> <operator pos:start="31:23" pos:end="31:24">==</operator> <literal type="number" pos:start="31:26" pos:end="31:26">1</literal> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator> <name pos:start="31:31" pos:end="31:31">i</name> <operator pos:start="31:33" pos:end="31:34">==</operator> <name pos:start="31:36" pos:end="31:42">half_ch</name></expr>)</condition> <block pos:start="31:45" pos:end="66:16">{<block_content pos:start="33:17" pos:end="66:16">
                <comment type="block" pos:start="32:17" pos:end="32:59">/* next stereo channel (12bit mode only) */</comment>
                <expr_stmt pos:start="33:17" pos:end="33:35"><expr pos:start="33:17" pos:end="33:34"><call pos:start="33:17" pos:end="33:34"><name pos:start="33:17" pos:end="33:26">av_assert0</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:31">ipcm</name><operator pos:start="33:32" pos:end="33:32">&lt;</operator><literal type="number" pos:start="33:33" pos:end="33:33">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="34:17" pos:end="34:35"><expr pos:start="34:17" pos:end="34:34"><name pos:start="34:17" pos:end="34:19">pcm</name> <operator pos:start="34:21" pos:end="34:21">=</operator> <name pos:start="34:23" pos:end="34:34"><name pos:start="34:23" pos:end="34:26">ppcm</name><index pos:start="34:27" pos:end="34:34">[<expr pos:start="34:28" pos:end="34:33"><name pos:start="34:28" pos:end="34:31">ipcm</name><operator pos:start="34:32" pos:end="34:33">++</operator></expr>]</index></name></expr>;</expr_stmt>
                <if_stmt pos:start="35:17" pos:end="36:26"><if pos:start="35:17" pos:end="36:26">if <condition pos:start="35:20" pos:end="35:25">(<expr pos:start="35:21" pos:end="35:24"><operator pos:start="35:21" pos:end="35:21">!</operator><name pos:start="35:22" pos:end="35:24">pcm</name></expr>)</condition><block type="pseudo" pos:start="36:21" pos:end="36:26"><block_content pos:start="36:21" pos:end="36:26">
                    <break pos:start="36:21" pos:end="36:26">break;</break></block_content></block></if></if_stmt>
            <comment type="block" pos:start="37:13" pos:end="37:38">/* for each AV sequence */</comment>
            <for pos:start="38:13" pos:end="66:16">for <control pos:start="38:17" pos:end="38:35">(<init pos:start="38:18" pos:end="38:23"><expr pos:start="38:18" pos:end="38:22"><name pos:start="38:18" pos:end="38:18">j</name> <operator pos:start="38:20" pos:end="38:20">=</operator> <literal type="number" pos:start="38:22" pos:end="38:22">0</literal></expr>;</init> <condition pos:start="38:25" pos:end="38:30"><expr pos:start="38:25" pos:end="38:29"><name pos:start="38:25" pos:end="38:25">j</name> <operator pos:start="38:27" pos:end="38:27">&lt;</operator> <literal type="number" pos:start="38:29" pos:end="38:29">9</literal></expr>;</condition> <incr pos:start="38:32" pos:end="38:34"><expr pos:start="38:32" pos:end="38:34"><name pos:start="38:32" pos:end="38:32">j</name><operator pos:start="38:33" pos:end="38:34">++</operator></expr></incr>)</control> <block pos:start="38:37" pos:end="66:16">{<block_content pos:start="39:17" pos:end="66:16">
                <for pos:start="39:17" pos:end="66:16">for <control pos:start="39:21" pos:end="39:43">(<init pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:26"><name pos:start="39:22" pos:end="39:22">d</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">8</literal></expr>;</init> <condition pos:start="39:29" pos:end="39:35"><expr pos:start="39:29" pos:end="39:34"><name pos:start="39:29" pos:end="39:29">d</name> <operator pos:start="39:31" pos:end="39:31">&lt;</operator> <literal type="number" pos:start="39:33" pos:end="39:34">80</literal></expr>;</condition> <incr pos:start="39:37" pos:end="39:42"><expr pos:start="39:37" pos:end="39:42"><name pos:start="39:37" pos:end="39:37">d</name> <operator pos:start="39:39" pos:end="39:40">+=</operator> <literal type="number" pos:start="39:42" pos:end="39:42">2</literal></expr></incr>)</control> <block pos:start="39:45" pos:end="66:16">{<block_content pos:start="40:21" pos:end="66:16">
                    <if_stmt pos:start="40:21" pos:end="66:16"><if pos:start="40:21" pos:end="48:21">if <condition pos:start="40:24" pos:end="40:35">(<expr pos:start="40:25" pos:end="40:34"><name pos:start="40:25" pos:end="40:29">quant</name> <operator pos:start="40:31" pos:end="40:32">==</operator> <literal type="number" pos:start="40:34" pos:end="40:34">0</literal></expr>)</condition> <block pos:start="40:37" pos:end="48:21">{<block_content pos:start="41:25" pos:end="47:44">  <comment type="block" pos:start="40:40" pos:end="40:63">/* 16bit quantization */</comment>
                        <expr_stmt pos:start="41:25" pos:end="41:88"><expr pos:start="41:25" pos:end="41:87"><name pos:start="41:25" pos:end="41:26">of</name> <operator pos:start="41:28" pos:end="41:28">=</operator> <name pos:start="41:30" pos:end="41:53"><name pos:start="41:30" pos:end="41:32">sys</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:47">audio_shuffle</name><index pos:start="41:48" pos:end="41:50">[<expr pos:start="41:49" pos:end="41:49"><name pos:start="41:49" pos:end="41:49">i</name></expr>]</index><index pos:start="41:51" pos:end="41:53">[<expr pos:start="41:52" pos:end="41:52"><name pos:start="41:52" pos:end="41:52">j</name></expr>]</index></name> <operator pos:start="41:55" pos:end="41:55">+</operator> <operator pos:start="41:57" pos:end="41:57">(</operator><name pos:start="41:58" pos:end="41:58">d</name> <operator pos:start="41:60" pos:end="41:60">-</operator> <literal type="number" pos:start="41:62" pos:end="41:62">8</literal><operator pos:start="41:63" pos:end="41:63">)</operator> <operator pos:start="41:65" pos:end="41:65">/</operator> <literal type="number" pos:start="41:67" pos:end="41:67">2</literal> <operator pos:start="41:69" pos:end="41:69">*</operator> <name pos:start="41:71" pos:end="41:87"><name pos:start="41:71" pos:end="41:73">sys</name><operator pos:start="41:74" pos:end="41:75">-&gt;</operator><name pos:start="41:76" pos:end="41:87">audio_stride</name></name></expr>;</expr_stmt>
                        <if_stmt pos:start="42:25" pos:end="43:37"><if pos:start="42:25" pos:end="43:37">if <condition pos:start="42:28" pos:end="42:41">(<expr pos:start="42:29" pos:end="42:40"><name pos:start="42:29" pos:end="42:30">of</name><operator pos:start="42:31" pos:end="42:31">*</operator><literal type="number" pos:start="42:32" pos:end="42:32">2</literal> <operator pos:start="42:34" pos:end="42:35">&gt;=</operator> <name pos:start="42:37" pos:end="42:40">size</name></expr>)</condition><block type="pseudo" pos:start="43:29" pos:end="43:37"><block_content pos:start="43:29" pos:end="43:37">
                            <continue pos:start="43:29" pos:end="43:37">continue;</continue></block_content></block></if></if_stmt>
                        <expr_stmt pos:start="44:25" pos:end="44:49"><expr pos:start="44:25" pos:end="44:48"><name pos:start="44:25" pos:end="44:33"><name pos:start="44:25" pos:end="44:27">pcm</name><index pos:start="44:28" pos:end="44:33">[<expr pos:start="44:29" pos:end="44:32"><name pos:start="44:29" pos:end="44:30">of</name><operator pos:start="44:31" pos:end="44:31">*</operator><literal type="number" pos:start="44:32" pos:end="44:32">2</literal></expr>]</index></name>   <operator pos:start="44:37" pos:end="44:37">=</operator> <name pos:start="44:39" pos:end="44:48"><name pos:start="44:39" pos:end="44:43">frame</name><index pos:start="44:44" pos:end="44:48">[<expr pos:start="44:45" pos:end="44:47"><name pos:start="44:45" pos:end="44:45">d</name><operator pos:start="44:46" pos:end="44:46">+</operator><literal type="number" pos:start="44:47" pos:end="44:47">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="44:51" pos:end="44:82">// FIXME: maybe we have to admit</comment>
                        <expr_stmt pos:start="45:25" pos:end="45:47"><expr pos:start="45:25" pos:end="45:46"><name pos:start="45:25" pos:end="45:35"><name pos:start="45:25" pos:end="45:27">pcm</name><index pos:start="45:28" pos:end="45:35">[<expr pos:start="45:29" pos:end="45:34"><name pos:start="45:29" pos:end="45:30">of</name><operator pos:start="45:31" pos:end="45:31">*</operator><literal type="number" pos:start="45:32" pos:end="45:32">2</literal><operator pos:start="45:33" pos:end="45:33">+</operator><literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <name pos:start="45:39" pos:end="45:46"><name pos:start="45:39" pos:end="45:43">frame</name><index pos:start="45:44" pos:end="45:46">[<expr pos:start="45:45" pos:end="45:45"><name pos:start="45:45" pos:end="45:45">d</name></expr>]</index></name></expr>;</expr_stmt>   <comment type="line" pos:start="45:51" pos:end="45:87">//        that DV is a big-endian PCM</comment>
                        <if_stmt pos:start="46:25" pos:end="47:44"><if pos:start="46:25" pos:end="47:44">if <condition pos:start="46:28" pos:end="46:69">(<expr pos:start="46:29" pos:end="46:68"><name pos:start="46:29" pos:end="46:39"><name pos:start="46:29" pos:end="46:31">pcm</name><index pos:start="46:32" pos:end="46:39">[<expr pos:start="46:33" pos:end="46:38"><name pos:start="46:33" pos:end="46:34">of</name><operator pos:start="46:35" pos:end="46:35">*</operator><literal type="number" pos:start="46:36" pos:end="46:36">2</literal><operator pos:start="46:37" pos:end="46:37">+</operator><literal type="number" pos:start="46:38" pos:end="46:38">1</literal></expr>]</index></name> <operator pos:start="46:41" pos:end="46:42">==</operator> <literal type="number" pos:start="46:44" pos:end="46:47">0x80</literal> <operator pos:start="46:49" pos:end="46:50">&amp;&amp;</operator> <name pos:start="46:52" pos:end="46:60"><name pos:start="46:52" pos:end="46:54">pcm</name><index pos:start="46:55" pos:end="46:60">[<expr pos:start="46:56" pos:end="46:59"><name pos:start="46:56" pos:end="46:57">of</name><operator pos:start="46:58" pos:end="46:58">*</operator><literal type="number" pos:start="46:59" pos:end="46:59">2</literal></expr>]</index></name> <operator pos:start="46:62" pos:end="46:63">==</operator> <literal type="number" pos:start="46:65" pos:end="46:68">0x00</literal></expr>)</condition><block type="pseudo" pos:start="47:29" pos:end="47:44"><block_content pos:start="47:29" pos:end="47:44">
                            <expr_stmt pos:start="47:29" pos:end="47:44"><expr pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:31">pcm</name><index pos:start="47:32" pos:end="47:39">[<expr pos:start="47:33" pos:end="47:38"><name pos:start="47:33" pos:end="47:34">of</name><operator pos:start="47:35" pos:end="47:35">*</operator><literal type="number" pos:start="47:36" pos:end="47:36">2</literal><operator pos:start="47:37" pos:end="47:37">+</operator><literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr>]</index></name> <operator pos:start="47:41" pos:end="47:41">=</operator> <literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
                    </block_content>}</block></if> <else pos:start="48:23" pos:end="66:16">else <block pos:start="48:28" pos:end="66:16">{<block_content pos:start="49:25" pos:end="66:16">           <comment type="block" pos:start="48:40" pos:end="48:63">/* 12bit quantization */</comment>
                        <expr_stmt pos:start="49:25" pos:end="50:57"><expr pos:start="49:25" pos:end="50:56"><name pos:start="49:25" pos:end="49:26">lc</name> <operator pos:start="49:28" pos:end="49:28">=</operator> <operator pos:start="49:30" pos:end="49:30">(</operator><operator pos:start="49:31" pos:end="49:31">(</operator><name pos:start="49:32" pos:end="49:39">uint16_t</name><operator pos:start="49:40" pos:end="49:40">)</operator><name pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:45">frame</name><index pos:start="49:46" pos:end="49:48">[<expr pos:start="49:47" pos:end="49:47"><name pos:start="49:47" pos:end="49:47">d</name></expr>]</index></name>   <operator pos:start="49:52" pos:end="49:53">&lt;&lt;</operator> <literal type="number" pos:start="49:55" pos:end="49:55">4</literal><operator pos:start="49:56" pos:end="49:56">)</operator> <operator pos:start="49:58" pos:end="49:58">|</operator>
                             <operator pos:start="50:30" pos:end="50:30">(</operator><operator pos:start="50:31" pos:end="50:31">(</operator><name pos:start="50:32" pos:end="50:39">uint16_t</name><operator pos:start="50:40" pos:end="50:40">)</operator><name pos:start="50:41" pos:end="50:50"><name pos:start="50:41" pos:end="50:45">frame</name><index pos:start="50:46" pos:end="50:50">[<expr pos:start="50:47" pos:end="50:49"><name pos:start="50:47" pos:end="50:47">d</name><operator pos:start="50:48" pos:end="50:48">+</operator><literal type="number" pos:start="50:49" pos:end="50:49">2</literal></expr>]</index></name> <operator pos:start="50:52" pos:end="50:53">&gt;&gt;</operator> <literal type="number" pos:start="50:55" pos:end="50:55">4</literal><operator pos:start="50:56" pos:end="50:56">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="51:25" pos:end="52:59"><expr pos:start="51:25" pos:end="52:58"><name pos:start="51:25" pos:end="51:26">rc</name> <operator pos:start="51:28" pos:end="51:28">=</operator> <operator pos:start="51:30" pos:end="51:30">(</operator><operator pos:start="51:31" pos:end="51:31">(</operator><name pos:start="51:32" pos:end="51:39">uint16_t</name><operator pos:start="51:40" pos:end="51:40">)</operator><name pos:start="51:41" pos:end="51:50"><name pos:start="51:41" pos:end="51:45">frame</name><index pos:start="51:46" pos:end="51:50">[<expr pos:start="51:47" pos:end="51:49"><name pos:start="51:47" pos:end="51:47">d</name><operator pos:start="51:48" pos:end="51:48">+</operator><literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr>]</index></name> <operator pos:start="51:52" pos:end="51:53">&lt;&lt;</operator> <literal type="number" pos:start="51:55" pos:end="51:55">4</literal><operator pos:start="51:56" pos:end="51:56">)</operator> <operator pos:start="51:58" pos:end="51:58">|</operator>
                             <operator pos:start="52:30" pos:end="52:30">(</operator><operator pos:start="52:31" pos:end="52:31">(</operator><name pos:start="52:32" pos:end="52:39">uint16_t</name><operator pos:start="52:40" pos:end="52:40">)</operator><name pos:start="52:41" pos:end="52:50"><name pos:start="52:41" pos:end="52:45">frame</name><index pos:start="52:46" pos:end="52:50">[<expr pos:start="52:47" pos:end="52:49"><name pos:start="52:47" pos:end="52:47">d</name><operator pos:start="52:48" pos:end="52:48">+</operator><literal type="number" pos:start="52:49" pos:end="52:49">2</literal></expr>]</index></name> <operator pos:start="52:52" pos:end="52:52">&amp;</operator> <literal type="number" pos:start="52:54" pos:end="52:57">0x0f</literal><operator pos:start="52:58" pos:end="52:58">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="53:25" pos:end="53:69"><expr pos:start="53:25" pos:end="53:68"><name pos:start="53:25" pos:end="53:26">lc</name> <operator pos:start="53:28" pos:end="53:28">=</operator> <operator pos:start="53:30" pos:end="53:30">(</operator><ternary pos:start="53:31" pos:end="53:67"><condition pos:start="53:31" pos:end="53:43"><expr pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:32">lc</name> <operator pos:start="53:34" pos:end="53:35">==</operator> <literal type="number" pos:start="53:37" pos:end="53:41">0x800</literal></expr> ?</condition><then pos:start="53:45" pos:end="53:45"> <expr pos:start="53:45" pos:end="53:45"><literal type="number" pos:start="53:45" pos:end="53:45">0</literal></expr> </then><else pos:start="53:47" pos:end="53:67">: <expr pos:start="53:49" pos:end="53:67"><call pos:start="53:49" pos:end="53:67"><name pos:start="53:49" pos:end="53:63">dv_audio_12to16</name><argument_list pos:start="53:64" pos:end="53:67">(<argument pos:start="53:65" pos:end="53:66"><expr pos:start="53:65" pos:end="53:66"><name pos:start="53:65" pos:end="53:66">lc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="53:68" pos:end="53:68">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="54:25" pos:end="54:69"><expr pos:start="54:25" pos:end="54:68"><name pos:start="54:25" pos:end="54:26">rc</name> <operator pos:start="54:28" pos:end="54:28">=</operator> <operator pos:start="54:30" pos:end="54:30">(</operator><ternary pos:start="54:31" pos:end="54:67"><condition pos:start="54:31" pos:end="54:43"><expr pos:start="54:31" pos:end="54:41"><name pos:start="54:31" pos:end="54:32">rc</name> <operator pos:start="54:34" pos:end="54:35">==</operator> <literal type="number" pos:start="54:37" pos:end="54:41">0x800</literal></expr> ?</condition><then pos:start="54:45" pos:end="54:45"> <expr pos:start="54:45" pos:end="54:45"><literal type="number" pos:start="54:45" pos:end="54:45">0</literal></expr> </then><else pos:start="54:47" pos:end="54:67">: <expr pos:start="54:49" pos:end="54:67"><call pos:start="54:49" pos:end="54:67"><name pos:start="54:49" pos:end="54:63">dv_audio_12to16</name><argument_list pos:start="54:64" pos:end="54:67">(<argument pos:start="54:65" pos:end="54:66"><expr pos:start="54:65" pos:end="54:66"><name pos:start="54:65" pos:end="54:66">rc</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="54:68" pos:end="54:68">)</operator></expr>;</expr_stmt>
                        <expr_stmt pos:start="55:25" pos:end="55:96"><expr pos:start="55:25" pos:end="55:95"><name pos:start="55:25" pos:end="55:26">of</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <name pos:start="55:30" pos:end="55:61"><name pos:start="55:30" pos:end="55:32">sys</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:47">audio_shuffle</name><index pos:start="55:48" pos:end="55:58">[<expr pos:start="55:49" pos:end="55:57"><name pos:start="55:49" pos:end="55:49">i</name><operator pos:start="55:50" pos:end="55:50">%</operator><name pos:start="55:51" pos:end="55:57">half_ch</name></expr>]</index><index pos:start="55:59" pos:end="55:61">[<expr pos:start="55:60" pos:end="55:60"><name pos:start="55:60" pos:end="55:60">j</name></expr>]</index></name> <operator pos:start="55:63" pos:end="55:63">+</operator> <operator pos:start="55:65" pos:end="55:65">(</operator><name pos:start="55:66" pos:end="55:66">d</name> <operator pos:start="55:68" pos:end="55:68">-</operator> <literal type="number" pos:start="55:70" pos:end="55:70">8</literal><operator pos:start="55:71" pos:end="55:71">)</operator> <operator pos:start="55:73" pos:end="55:73">/</operator> <literal type="number" pos:start="55:75" pos:end="55:75">3</literal> <operator pos:start="55:77" pos:end="55:77">*</operator> <name pos:start="55:79" pos:end="55:95"><name pos:start="55:79" pos:end="55:81">sys</name><operator pos:start="55:82" pos:end="55:83">-&gt;</operator><name pos:start="55:84" pos:end="55:95">audio_stride</name></name></expr>;</expr_stmt>
                        <if_stmt pos:start="56:25" pos:end="57:37"><if pos:start="56:25" pos:end="57:37">if <condition pos:start="56:28" pos:end="56:41">(<expr pos:start="56:29" pos:end="56:40"><name pos:start="56:29" pos:end="56:30">of</name><operator pos:start="56:31" pos:end="56:31">*</operator><literal type="number" pos:start="56:32" pos:end="56:32">2</literal> <operator pos:start="56:34" pos:end="56:35">&gt;=</operator> <name pos:start="56:37" pos:end="56:40">size</name></expr>)</condition><block type="pseudo" pos:start="57:29" pos:end="57:37"><block_content pos:start="57:29" pos:end="57:37">
                            <continue pos:start="57:29" pos:end="57:37">continue;</continue></block_content></block></if></if_stmt>
                        <expr_stmt pos:start="58:25" pos:end="58:48"><expr pos:start="58:25" pos:end="58:47"><name pos:start="58:25" pos:end="58:33"><name pos:start="58:25" pos:end="58:27">pcm</name><index pos:start="58:28" pos:end="58:33">[<expr pos:start="58:29" pos:end="58:32"><name pos:start="58:29" pos:end="58:30">of</name><operator pos:start="58:31" pos:end="58:31">*</operator><literal type="number" pos:start="58:32" pos:end="58:32">2</literal></expr>]</index></name>   <operator pos:start="58:37" pos:end="58:37">=</operator> <name pos:start="58:39" pos:end="58:40">lc</name> <operator pos:start="58:42" pos:end="58:42">&amp;</operator> <literal type="number" pos:start="58:44" pos:end="58:47">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="58:50" pos:end="58:81">// FIXME: maybe we have to admit</comment>
                        <expr_stmt pos:start="59:25" pos:end="59:46"><expr pos:start="59:25" pos:end="59:45"><name pos:start="59:25" pos:end="59:35"><name pos:start="59:25" pos:end="59:27">pcm</name><index pos:start="59:28" pos:end="59:35">[<expr pos:start="59:29" pos:end="59:34"><name pos:start="59:29" pos:end="59:30">of</name><operator pos:start="59:31" pos:end="59:31">*</operator><literal type="number" pos:start="59:32" pos:end="59:32">2</literal><operator pos:start="59:33" pos:end="59:33">+</operator><literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">=</operator> <name pos:start="59:39" pos:end="59:40">lc</name> <operator pos:start="59:42" pos:end="59:43">&gt;&gt;</operator> <literal type="number" pos:start="59:45" pos:end="59:45">8</literal></expr>;</expr_stmt>   <comment type="line" pos:start="59:50" pos:end="59:86">//        that DV is a big-endian PCM</comment>
                        <expr_stmt pos:start="60:25" pos:end="61:60"><expr pos:start="60:25" pos:end="61:59"><name pos:start="60:25" pos:end="60:26">of</name> <operator pos:start="60:28" pos:end="60:28">=</operator> <name pos:start="60:30" pos:end="60:69"><name pos:start="60:30" pos:end="60:32">sys</name><operator pos:start="60:33" pos:end="60:34">-&gt;</operator><name pos:start="60:35" pos:end="60:47">audio_shuffle</name><index pos:start="60:48" pos:end="60:66">[<expr pos:start="60:49" pos:end="60:65"><name pos:start="60:49" pos:end="60:49">i</name><operator pos:start="60:50" pos:end="60:50">%</operator><name pos:start="60:51" pos:end="60:57">half_ch</name><operator pos:start="60:58" pos:end="60:58">+</operator><name pos:start="60:59" pos:end="60:65">half_ch</name></expr>]</index><index pos:start="60:67" pos:end="60:69">[<expr pos:start="60:68" pos:end="60:68"><name pos:start="60:68" pos:end="60:68">j</name></expr>]</index></name> <operator pos:start="60:71" pos:end="60:71">+</operator>
                            <operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:30">d</name> <operator pos:start="61:32" pos:end="61:32">-</operator> <literal type="number" pos:start="61:34" pos:end="61:34">8</literal><operator pos:start="61:35" pos:end="61:35">)</operator> <operator pos:start="61:37" pos:end="61:37">/</operator> <literal type="number" pos:start="61:39" pos:end="61:39">3</literal> <operator pos:start="61:41" pos:end="61:41">*</operator> <name pos:start="61:43" pos:end="61:59"><name pos:start="61:43" pos:end="61:45">sys</name><operator pos:start="61:46" pos:end="61:47">-&gt;</operator><name pos:start="61:48" pos:end="61:59">audio_stride</name></name></expr>;</expr_stmt>
                        <expr_stmt pos:start="62:25" pos:end="62:48"><expr pos:start="62:25" pos:end="62:47"><name pos:start="62:25" pos:end="62:33"><name pos:start="62:25" pos:end="62:27">pcm</name><index pos:start="62:28" pos:end="62:33">[<expr pos:start="62:29" pos:end="62:32"><name pos:start="62:29" pos:end="62:30">of</name><operator pos:start="62:31" pos:end="62:31">*</operator><literal type="number" pos:start="62:32" pos:end="62:32">2</literal></expr>]</index></name>   <operator pos:start="62:37" pos:end="62:37">=</operator> <name pos:start="62:39" pos:end="62:40">rc</name> <operator pos:start="62:42" pos:end="62:42">&amp;</operator> <literal type="number" pos:start="62:44" pos:end="62:47">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="62:50" pos:end="62:81">// FIXME: maybe we have to admit</comment>
                        <expr_stmt pos:start="63:25" pos:end="63:46"><expr pos:start="63:25" pos:end="63:45"><name pos:start="63:25" pos:end="63:35"><name pos:start="63:25" pos:end="63:27">pcm</name><index pos:start="63:28" pos:end="63:35">[<expr pos:start="63:29" pos:end="63:34"><name pos:start="63:29" pos:end="63:30">of</name><operator pos:start="63:31" pos:end="63:31">*</operator><literal type="number" pos:start="63:32" pos:end="63:32">2</literal><operator pos:start="63:33" pos:end="63:33">+</operator><literal type="number" pos:start="63:34" pos:end="63:34">1</literal></expr>]</index></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:40">rc</name> <operator pos:start="63:42" pos:end="63:43">&gt;&gt;</operator> <literal type="number" pos:start="63:45" pos:end="63:45">8</literal></expr>;</expr_stmt>   <comment type="line" pos:start="63:50" pos:end="63:86">//        that DV is a big-endian PCM</comment>
                        <expr_stmt pos:start="64:25" pos:end="64:28"><expr pos:start="64:25" pos:end="64:27"><operator pos:start="64:25" pos:end="64:26">++</operator><name pos:start="64:27" pos:end="64:27">d</name></expr>;</expr_stmt>
                <expr_stmt pos:start="65:17" pos:end="65:33"><expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:21">frame</name> <operator pos:start="65:23" pos:end="65:24">+=</operator> <literal type="number" pos:start="65:26" pos:end="65:27">16</literal> <operator pos:start="65:29" pos:end="65:29">*</operator> <literal type="number" pos:start="65:31" pos:end="65:32">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:35" pos:end="65:67">/* 15 Video DIFs + 1 Audio DIF */</comment>
    <return pos:start="66:5" pos:end="66:16">return <expr pos:start="66:12" pos:end="66:15"><name pos:start="66:12" pos:end="66:15">size</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></for></block_content></block></for></block_content></block></if></if_stmt></block_content></block></for></block_content></block></for></block_content></block></function></unit>
