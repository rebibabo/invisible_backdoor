<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6336.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:40">ff_rv34_decode_update_thread_context</name><parameter_list pos:start="1:41" pos:end="1:88">(<parameter pos:start="1:42" pos:end="1:60"><decl pos:start="1:42" pos:end="1:60"><type pos:start="1:42" pos:end="1:60"><name pos:start="1:42" pos:end="1:55">AVCodecContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">dst</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:87"><decl pos:start="1:63" pos:end="1:87"><type pos:start="1:63" pos:end="1:87"><specifier pos:start="1:63" pos:end="1:67">const</specifier> <name pos:start="1:69" pos:end="1:82">AVCodecContext</name> <modifier pos:start="1:84" pos:end="1:84">*</modifier></type><name pos:start="1:85" pos:end="1:87">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">RV34DecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">r</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:38"><name pos:start="5:25" pos:end="5:27">dst</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>, <decl pos:start="5:41" pos:end="5:60"><type ref="prev" pos:start="5:5" pos:end="5:20"><modifier pos:start="5:41" pos:end="5:41">*</modifier></type><name pos:start="5:42" pos:end="5:43">r1</name> <init pos:start="5:45" pos:end="5:60">= <expr pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:49">src</name><operator pos:start="5:50" pos:end="5:51">-&gt;</operator><name pos:start="5:52" pos:end="5:60">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:58"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier> <specifier pos:start="7:22" pos:end="7:26">const</specifier></type> <name pos:start="7:28" pos:end="7:28">s</name> <init pos:start="7:30" pos:end="7:36">= <expr pos:start="7:32" pos:end="7:36"><operator pos:start="7:32" pos:end="7:32">&amp;</operator><name pos:start="7:33" pos:end="7:36"><name pos:start="7:33" pos:end="7:33">r</name><operator pos:start="7:34" pos:end="7:35">-&gt;</operator><name pos:start="7:36" pos:end="7:36">s</name></name></expr></init></decl>, <decl pos:start="7:39" pos:end="7:57"><type ref="prev" pos:start="7:5" pos:end="7:26"><modifier pos:start="7:39" pos:end="7:39">*</modifier></type> const <name pos:start="7:47" pos:end="7:48">s1</name> <init pos:start="7:50" pos:end="7:57">= <expr pos:start="7:52" pos:end="7:57"><operator pos:start="7:52" pos:end="7:52">&amp;</operator><name pos:start="7:53" pos:end="7:57"><name pos:start="7:53" pos:end="7:54">r1</name><operator pos:start="7:55" pos:end="7:56">-&gt;</operator><name pos:start="7:57" pos:end="7:57">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if <condition pos:start="13:8" pos:end="13:47">(<expr pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:11">dst</name> <operator pos:start="13:13" pos:end="13:14">==</operator> <name pos:start="13:16" pos:end="13:18">src</name> <operator pos:start="13:20" pos:end="13:21">||</operator> <operator pos:start="13:23" pos:end="13:23">!</operator><name pos:start="13:24" pos:end="13:46"><name pos:start="13:24" pos:end="13:25">s1</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:46">context_initialized</name></name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="35:5">if <condition pos:start="19:8" pos:end="19:57">(<expr pos:start="19:9" pos:end="19:56"><name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:17">height</name></name> <operator pos:start="19:19" pos:end="19:20">!=</operator> <name pos:start="19:22" pos:end="19:31"><name pos:start="19:22" pos:end="19:23">s1</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:31">height</name></name> <operator pos:start="19:33" pos:end="19:34">||</operator> <name pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:43">width</name></name> <operator pos:start="19:45" pos:end="19:46">!=</operator> <name pos:start="19:48" pos:end="19:56"><name pos:start="19:48" pos:end="19:49">s1</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:56">width</name></name></expr>)</condition> <block pos:start="19:59" pos:end="35:5">{<block_content pos:start="21:9" pos:end="33:23">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><call pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:25">ff_MPV_common_end</name><argument_list pos:start="21:26" pos:end="21:28">(<argument pos:start="21:27" pos:end="21:27"><expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:31"><expr pos:start="23:9" pos:end="23:30"><name pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:17">height</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:22">s1</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:30">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:16">width</name></name>  <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:22">s1</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:29">width</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:46">(<expr pos:start="27:13" pos:end="27:45"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:16">err</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:40"><name pos:start="27:20" pos:end="27:37">ff_MPV_common_init</name><argument_list pos:start="27:38" pos:end="27:40">(<argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><name pos:start="27:39" pos:end="27:39">s</name></expr></argument>)</argument_list></call><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">&lt;</operator> <literal type="number" pos:start="27:45" pos:end="27:45">0</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">err</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="33:23"><if pos:start="31:9" pos:end="33:23">if <condition pos:start="31:12" pos:end="31:48">(<expr pos:start="31:13" pos:end="31:47"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:16">err</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:42"><name pos:start="31:20" pos:end="31:39">rv34_decoder_realloc</name><argument_list pos:start="31:40" pos:end="31:42">(<argument pos:start="31:41" pos:end="31:41"><expr pos:start="31:41" pos:end="31:41"><name pos:start="31:41" pos:end="31:41">r</name></expr></argument>)</argument_list></call><operator pos:start="31:43" pos:end="31:43">)</operator> <operator pos:start="31:45" pos:end="31:45">&lt;</operator> <literal type="number" pos:start="31:47" pos:end="31:47">0</literal></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:23"><block_content pos:start="33:13" pos:end="33:23">

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="41:19"><if pos:start="39:5" pos:end="41:19">if <condition pos:start="39:8" pos:end="39:56">(<expr pos:start="39:9" pos:end="39:55"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">err</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:54"><name pos:start="39:16" pos:end="39:44">ff_mpeg_update_thread_context</name><argument_list pos:start="39:45" pos:end="39:54">(<argument pos:start="39:46" pos:end="39:48"><expr pos:start="39:46" pos:end="39:48"><name pos:start="39:46" pos:end="39:48">dst</name></expr></argument>, <argument pos:start="39:51" pos:end="39:53"><expr pos:start="39:51" pos:end="39:53"><name pos:start="39:51" pos:end="39:53">src</name></expr></argument>)</argument_list></call><operator pos:start="39:55" pos:end="39:55">)</operator></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:14"><name pos:start="45:5" pos:end="45:5">r</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:14">cur_pts</name></name>  <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:29"><name pos:start="45:19" pos:end="45:20">r1</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:29">cur_pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:31"><expr pos:start="47:5" pos:end="47:30"><name pos:start="47:5" pos:end="47:15"><name pos:start="47:5" pos:end="47:5">r</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:15">last_pts</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <name pos:start="47:19" pos:end="47:30"><name pos:start="47:19" pos:end="47:20">r1</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:30">last_pts</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:5">r</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:15">next_pts</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:20">r1</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:30">next_pts</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:37"><expr pos:start="53:5" pos:end="53:36"><call pos:start="53:5" pos:end="53:36"><name pos:start="53:5" pos:end="53:10">memset</name><argument_list pos:start="53:11" pos:end="53:36">(<argument pos:start="53:12" pos:end="53:17"><expr pos:start="53:12" pos:end="53:17"><operator pos:start="53:12" pos:end="53:12">&amp;</operator><name pos:start="53:13" pos:end="53:17"><name pos:start="53:13" pos:end="53:13">r</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:17">si</name></name></expr></argument>, <argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr></argument>, <argument pos:start="53:23" pos:end="53:35"><expr pos:start="53:23" pos:end="53:35"><sizeof pos:start="53:23" pos:end="53:35">sizeof<argument_list pos:start="53:29" pos:end="53:35">(<argument pos:start="53:30" pos:end="53:34"><expr pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:34"><name pos:start="53:30" pos:end="53:30">r</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:34">si</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="59:77">/* necessary since it is it the condition checked for in decode_slice

     * to call ff_MPV_frame_start. cmp. comment at the end of decode_frame */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:26"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:26">current_picture_ptr</name></name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:33">NULL</name></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
