<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26143.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">adx_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="19:13">{<block_content pos:start="3:5" pos:end="19:13">
    <decl_stmt pos:start="3:5" pos:end="3:40"><decl pos:start="3:5" pos:end="3:39"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:21">ADXDemuxerContext</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:24">c</name> <init pos:start="3:26" pos:end="3:39">= <expr pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:28">s</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:39">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:49"><decl pos:start="4:5" pos:end="4:48"><type pos:start="4:5" pos:end="4:20"><name pos:start="4:5" pos:end="4:18">AVCodecContext</name> <modifier pos:start="4:20" pos:end="4:20">*</modifier></type><name pos:start="4:21" pos:end="4:25">avctx</name> <init pos:start="4:27" pos:end="4:48">= <expr pos:start="4:29" pos:end="4:48"><name pos:start="4:29" pos:end="4:41"><name pos:start="4:29" pos:end="4:29">s</name><operator pos:start="4:30" pos:end="4:31">-&gt;</operator><name pos:start="4:32" pos:end="4:38">streams</name><index pos:start="4:39" pos:end="4:41">[<expr pos:start="4:40" pos:end="4:40"><literal type="number" pos:start="4:40" pos:end="4:40">0</literal></expr>]</index></name><operator pos:start="4:42" pos:end="4:43">-&gt;</operator><name pos:start="4:44" pos:end="4:48">codec</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">size</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:40"><expr pos:start="6:5" pos:end="6:39"><name pos:start="6:5" pos:end="6:8">size</name> <operator pos:start="6:10" pos:end="6:10">=</operator> <name pos:start="6:12" pos:end="6:21">BLOCK_SIZE</name> <operator pos:start="6:23" pos:end="6:23">*</operator> <name pos:start="6:25" pos:end="6:39"><name pos:start="6:25" pos:end="6:29">avctx</name><operator pos:start="6:30" pos:end="6:31">-&gt;</operator><name pos:start="6:32" pos:end="6:39">channels</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:7">pkt</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:12">pos</name></name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:31"><name pos:start="7:16" pos:end="7:24">avio_tell</name><argument_list pos:start="7:25" pos:end="7:31">(<argument pos:start="7:26" pos:end="7:30"><expr pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="8:5" pos:end="8:26"><expr pos:start="8:5" pos:end="8:25"><name pos:start="8:5" pos:end="8:21"><name pos:start="8:5" pos:end="8:7">pkt</name><operator pos:start="8:8" pos:end="8:9">-&gt;</operator><name pos:start="8:10" pos:end="8:21">stream_index</name></name> <operator pos:start="8:23" pos:end="8:23">=</operator> <literal type="number" pos:start="8:25" pos:end="8:25">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:42"><expr pos:start="9:5" pos:end="9:41"><name pos:start="9:5" pos:end="9:7">ret</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:41"><name pos:start="9:11" pos:end="9:23">av_get_packet</name><argument_list pos:start="9:24" pos:end="9:41">(<argument pos:start="9:25" pos:end="9:29"><expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></argument>, <argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">pkt</name></expr></argument>, <argument pos:start="9:37" pos:end="9:40"><expr pos:start="9:37" pos:end="9:40"><name pos:start="9:37" pos:end="9:40">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="19:13"><if pos:start="10:5" pos:end="19:13">if <condition pos:start="10:8" pos:end="10:20">(<expr pos:start="10:9" pos:end="10:19"><name pos:start="10:9" pos:end="10:11">ret</name> <operator pos:start="10:13" pos:end="10:14">!=</operator> <name pos:start="10:16" pos:end="10:19">size</name></expr>)</condition> <block pos:start="10:22" pos:end="19:13">{<block_content pos:start="11:9" pos:end="19:13">
        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:22">av_free_packet</name><argument_list pos:start="11:23" pos:end="11:27">(<argument pos:start="11:24" pos:end="11:26"><expr pos:start="11:24" pos:end="11:26"><name pos:start="11:24" pos:end="11:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="12:9" pos:end="12:44">return <expr pos:start="12:16" pos:end="12:43"><ternary pos:start="12:16" pos:end="12:43"><condition pos:start="12:16" pos:end="12:24"><expr pos:start="12:16" pos:end="12:22"><name pos:start="12:16" pos:end="12:18">ret</name> <operator pos:start="12:20" pos:end="12:20">&lt;</operator> <literal type="number" pos:start="12:22" pos:end="12:22">0</literal></expr> ?</condition><then pos:start="12:26" pos:end="12:28"> <expr pos:start="12:26" pos:end="12:28"><name pos:start="12:26" pos:end="12:28">ret</name></expr> </then><else pos:start="12:30" pos:end="12:43">: <expr pos:start="12:32" pos:end="12:43"><call pos:start="12:32" pos:end="12:43"><name pos:start="12:32" pos:end="12:38">AVERROR</name><argument_list pos:start="12:39" pos:end="12:43">(<argument pos:start="12:40" pos:end="12:42"><expr pos:start="12:40" pos:end="12:42"><name pos:start="12:40" pos:end="12:42">EIO</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return>
    <if_stmt pos:start="13:5" pos:end="19:13"><if pos:start="13:5" pos:end="19:13">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:15">AV_RB16</name><argument_list pos:start="13:16" pos:end="13:26">(<argument pos:start="13:17" pos:end="13:25"><expr pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:25"><name pos:start="13:17" pos:end="13:19">pkt</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:25">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:28" pos:end="13:28">&amp;</operator> <literal type="number" pos:start="13:30" pos:end="13:35">0x8000</literal></expr>)</condition> <block pos:start="13:38" pos:end="19:13">{<block_content pos:start="14:9" pos:end="19:13">
        <expr_stmt pos:start="14:9" pos:end="14:28"><expr pos:start="14:9" pos:end="14:27"><call pos:start="14:9" pos:end="14:27"><name pos:start="14:9" pos:end="14:22">av_free_packet</name><argument_list pos:start="14:23" pos:end="14:27">(<argument pos:start="14:24" pos:end="14:26"><expr pos:start="14:24" pos:end="14:26"><name pos:start="14:24" pos:end="14:26">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26">AVERROR_EOF</name></expr>;</return>
    <expr_stmt pos:start="16:5" pos:end="16:25"><expr pos:start="16:5" pos:end="16:24"><name pos:start="16:5" pos:end="16:13"><name pos:start="16:5" pos:end="16:7">pkt</name><operator pos:start="16:8" pos:end="16:9">-&gt;</operator><name pos:start="16:10" pos:end="16:13">size</name></name>     <operator pos:start="16:19" pos:end="16:19">=</operator> <name pos:start="16:21" pos:end="16:24">size</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:7">pkt</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:17">duration</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:55"><expr pos:start="18:5" pos:end="18:54"><name pos:start="18:5" pos:end="18:12"><name pos:start="18:5" pos:end="18:7">pkt</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:12">pts</name></name>      <operator pos:start="18:19" pos:end="18:19">=</operator> <operator pos:start="18:21" pos:end="18:21">(</operator><name pos:start="18:22" pos:end="18:29"><name pos:start="18:22" pos:end="18:24">pkt</name><operator pos:start="18:25" pos:end="18:26">-&gt;</operator><name pos:start="18:27" pos:end="18:29">pos</name></name> <operator pos:start="18:31" pos:end="18:31">-</operator> <name pos:start="18:33" pos:end="18:46"><name pos:start="18:33" pos:end="18:33">c</name><operator pos:start="18:34" pos:end="18:35">-&gt;</operator><name pos:start="18:36" pos:end="18:46">header_size</name></name><operator pos:start="18:47" pos:end="18:47">)</operator> <operator pos:start="18:49" pos:end="18:49">/</operator> <name pos:start="18:51" pos:end="18:54">size</name></expr>;</expr_stmt>
    <return pos:start="19:5" pos:end="19:13">return <expr pos:start="19:12" pos:end="19:12"><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
