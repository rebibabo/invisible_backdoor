<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5063.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">srt_to_ass</name><parameter_list pos:start="1:23" pos:end="3:70">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:54">AVBPrint</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">dst</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:37"><decl pos:start="3:24" pos:end="3:37"><type pos:start="3:24" pos:end="3:37"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:37">in</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:45"><decl pos:start="3:40" pos:end="3:45"><type pos:start="3:40" pos:end="3:45"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:45">x1</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:53"><decl pos:start="3:48" pos:end="3:53"><type pos:start="3:48" pos:end="3:53"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:53">y1</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:61"><decl pos:start="3:56" pos:end="3:61"><type pos:start="3:56" pos:end="3:61"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:61">x2</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:69"><decl pos:start="3:64" pos:end="3:69"><type pos:start="3:64" pos:end="3:69"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:69">y2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:41">

    <if_stmt pos:start="7:5" pos:end="41:5"><if pos:start="7:5" pos:end="41:5">if <condition pos:start="7:8" pos:end="7:27">(<expr pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:10">x1</name> <operator pos:start="7:12" pos:end="7:13">&gt;=</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal> <operator pos:start="7:17" pos:end="7:18">&amp;&amp;</operator> <name pos:start="7:20" pos:end="7:21">y1</name> <operator pos:start="7:23" pos:end="7:24">&gt;=</operator> <literal type="number" pos:start="7:26" pos:end="7:26">0</literal></expr>)</condition> <block pos:start="7:29" pos:end="41:5">{<block_content pos:start="15:9" pos:end="39:9">

        <comment type="block" pos:start="9:9" pos:end="11:59">/* XXX: here we rescale coordinate assuming they are in DVD resolution

         * (720x480) since we don't have anything better */</comment>



        <if_stmt pos:start="15:9" pos:end="39:9"><if pos:start="15:9" pos:end="29:9">if <condition pos:start="15:12" pos:end="15:81">(<expr pos:start="15:13" pos:end="15:80"><name pos:start="15:13" pos:end="15:14">x2</name> <operator pos:start="15:16" pos:end="15:17">&gt;=</operator> <literal type="number" pos:start="15:19" pos:end="15:19">0</literal> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:25">y2</name> <operator pos:start="15:27" pos:end="15:28">&gt;=</operator> <literal type="number" pos:start="15:30" pos:end="15:30">0</literal> <operator pos:start="15:32" pos:end="15:33">&amp;&amp;</operator> <operator pos:start="15:35" pos:end="15:35">(</operator><name pos:start="15:36" pos:end="15:37">x2</name> <operator pos:start="15:39" pos:end="15:40">!=</operator> <name pos:start="15:42" pos:end="15:43">x1</name> <operator pos:start="15:45" pos:end="15:46">||</operator> <name pos:start="15:48" pos:end="15:49">y2</name> <operator pos:start="15:51" pos:end="15:52">!=</operator> <name pos:start="15:54" pos:end="15:55">y1</name><operator pos:start="15:56" pos:end="15:56">)</operator> <operator pos:start="15:58" pos:end="15:59">&amp;&amp;</operator> <name pos:start="15:61" pos:end="15:62">x2</name> <operator pos:start="15:64" pos:end="15:65">&gt;=</operator> <name pos:start="15:67" pos:end="15:68">x1</name> <operator pos:start="15:70" pos:end="15:71">&amp;&amp;</operator> <name pos:start="15:73" pos:end="15:74">y2</name> <operator pos:start="15:76" pos:end="15:77">&gt;=</operator> <name pos:start="15:79" pos:end="15:80">y1</name></expr>)</condition> <block pos:start="15:83" pos:end="29:9">{<block_content pos:start="19:13" pos:end="27:73">

            <comment type="block" pos:start="17:13" pos:end="17:87">/* text rectangle defined, write the text at the center of the rectangle */</comment>

            <decl_stmt pos:start="19:13" pos:end="19:44"><decl pos:start="19:13" pos:end="19:43"><type pos:start="19:13" pos:end="19:21"><specifier pos:start="19:13" pos:end="19:17">const</specifier> <name pos:start="19:19" pos:end="19:21">int</name></type> <name pos:start="19:23" pos:end="19:24">cx</name> <init pos:start="19:26" pos:end="19:43">= <expr pos:start="19:28" pos:end="19:43"><name pos:start="19:28" pos:end="19:29">x1</name> <operator pos:start="19:31" pos:end="19:31">+</operator> <operator pos:start="19:33" pos:end="19:33">(</operator><name pos:start="19:34" pos:end="19:35">x2</name> <operator pos:start="19:37" pos:end="19:37">-</operator> <name pos:start="19:39" pos:end="19:40">x1</name><operator pos:start="19:41" pos:end="19:41">)</operator><operator pos:start="19:42" pos:end="19:42">/</operator><literal type="number" pos:start="19:43" pos:end="19:43">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:44"><decl pos:start="21:13" pos:end="21:43"><type pos:start="21:13" pos:end="21:21"><specifier pos:start="21:13" pos:end="21:17">const</specifier> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:24">cy</name> <init pos:start="21:26" pos:end="21:43">= <expr pos:start="21:28" pos:end="21:43"><name pos:start="21:28" pos:end="21:29">y1</name> <operator pos:start="21:31" pos:end="21:31">+</operator> <operator pos:start="21:33" pos:end="21:33">(</operator><name pos:start="21:34" pos:end="21:35">y2</name> <operator pos:start="21:37" pos:end="21:37">-</operator> <name pos:start="21:39" pos:end="21:40">y1</name><operator pos:start="21:41" pos:end="21:41">)</operator><operator pos:start="21:42" pos:end="21:42">/</operator><literal type="number" pos:start="21:43" pos:end="21:43">2</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:65"><decl pos:start="23:13" pos:end="23:64"><type pos:start="23:13" pos:end="23:21"><specifier pos:start="23:13" pos:end="23:17">const</specifier> <name pos:start="23:19" pos:end="23:21">int</name></type> <name pos:start="23:23" pos:end="23:30">scaled_x</name> <init pos:start="23:32" pos:end="23:64">= <expr pos:start="23:34" pos:end="23:64"><name pos:start="23:34" pos:end="23:35">cx</name> <operator pos:start="23:37" pos:end="23:37">*</operator> <name pos:start="23:39" pos:end="23:58">ASS_DEFAULT_PLAYRESX</name> <operator pos:start="23:60" pos:end="23:60">/</operator> <literal type="number" pos:start="23:62" pos:end="23:64">720</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:65"><decl pos:start="25:13" pos:end="25:64"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:30">scaled_y</name> <init pos:start="25:32" pos:end="25:64">= <expr pos:start="25:34" pos:end="25:64"><name pos:start="25:34" pos:end="25:35">cy</name> <operator pos:start="25:37" pos:end="25:37">*</operator> <name pos:start="25:39" pos:end="25:58">ASS_DEFAULT_PLAYRESY</name> <operator pos:start="25:60" pos:end="25:60">/</operator> <literal type="number" pos:start="25:62" pos:end="25:64">480</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:73"><expr pos:start="27:13" pos:end="27:72"><call pos:start="27:13" pos:end="27:72"><name pos:start="27:13" pos:end="27:22">av_bprintf</name><argument_list pos:start="27:23" pos:end="27:72">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">dst</name></expr></argument>, <argument pos:start="27:29" pos:end="27:51"><expr pos:start="27:29" pos:end="27:51"><literal type="string" pos:start="27:29" pos:end="27:51">"{\\an5}{\\pos(%d,%d)}"</literal></expr></argument>, <argument pos:start="27:54" pos:end="27:61"><expr pos:start="27:54" pos:end="27:61"><name pos:start="27:54" pos:end="27:61">scaled_x</name></expr></argument>, <argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71">scaled_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="39:9">else <block pos:start="29:16" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:73">

            <comment type="block" pos:start="31:13" pos:end="31:81">/* only the top left corner, assume the text starts in that corner */</comment>

            <decl_stmt pos:start="33:13" pos:end="33:65"><decl pos:start="33:13" pos:end="33:64"><type pos:start="33:13" pos:end="33:21"><specifier pos:start="33:13" pos:end="33:17">const</specifier> <name pos:start="33:19" pos:end="33:21">int</name></type> <name pos:start="33:23" pos:end="33:30">scaled_x</name> <init pos:start="33:32" pos:end="33:64">= <expr pos:start="33:34" pos:end="33:64"><name pos:start="33:34" pos:end="33:35">x1</name> <operator pos:start="33:37" pos:end="33:37">*</operator> <name pos:start="33:39" pos:end="33:58">ASS_DEFAULT_PLAYRESX</name> <operator pos:start="33:60" pos:end="33:60">/</operator> <literal type="number" pos:start="33:62" pos:end="33:64">720</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:65"><decl pos:start="35:13" pos:end="35:64"><type pos:start="35:13" pos:end="35:21"><specifier pos:start="35:13" pos:end="35:17">const</specifier> <name pos:start="35:19" pos:end="35:21">int</name></type> <name pos:start="35:23" pos:end="35:30">scaled_y</name> <init pos:start="35:32" pos:end="35:64">= <expr pos:start="35:34" pos:end="35:64"><name pos:start="35:34" pos:end="35:35">y1</name> <operator pos:start="35:37" pos:end="35:37">*</operator> <name pos:start="35:39" pos:end="35:58">ASS_DEFAULT_PLAYRESY</name> <operator pos:start="35:60" pos:end="35:60">/</operator> <literal type="number" pos:start="35:62" pos:end="35:64">480</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:73"><expr pos:start="37:13" pos:end="37:72"><call pos:start="37:13" pos:end="37:72"><name pos:start="37:13" pos:end="37:22">av_bprintf</name><argument_list pos:start="37:23" pos:end="37:72">(<argument pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">dst</name></expr></argument>, <argument pos:start="37:29" pos:end="37:51"><expr pos:start="37:29" pos:end="37:51"><literal type="string" pos:start="37:29" pos:end="37:51">"{\\an1}{\\pos(%d,%d)}"</literal></expr></argument>, <argument pos:start="37:54" pos:end="37:61"><expr pos:start="37:54" pos:end="37:61"><name pos:start="37:54" pos:end="37:61">scaled_x</name></expr></argument>, <argument pos:start="37:64" pos:end="37:71"><expr pos:start="37:64" pos:end="37:71"><name pos:start="37:64" pos:end="37:71">scaled_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:24">ff_htmlmarkup_to_ass</name><argument_list pos:start="45:25" pos:end="45:40">(<argument pos:start="45:26" pos:end="45:30"><expr pos:start="45:26" pos:end="45:30"><name pos:start="45:26" pos:end="45:30">avctx</name></expr></argument>, <argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">dst</name></expr></argument>, <argument pos:start="45:38" pos:end="45:39"><expr pos:start="45:38" pos:end="45:39"><name pos:start="45:38" pos:end="45:39">in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
