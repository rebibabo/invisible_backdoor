<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10675.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">visit_type_TestStruct</name><parameter_list pos:start="1:34" pos:end="3:65">(<parameter pos:start="1:35" pos:end="1:44"><decl pos:start="1:35" pos:end="1:44"><type pos:start="1:35" pos:end="1:44"><name pos:start="1:35" pos:end="1:41">Visitor</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">v</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:62"><decl pos:start="1:47" pos:end="1:62"><type pos:start="1:47" pos:end="1:62"><name pos:start="1:47" pos:end="1:56">TestStruct</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">obj</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:50"><decl pos:start="3:35" pos:end="3:50"><type pos:start="3:35" pos:end="3:50"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:44">char</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">name</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:64"><decl pos:start="3:53" pos:end="3:64"><type pos:start="3:53" pos:end="3:64"><name pos:start="3:53" pos:end="3:57">Error</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier><modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:64">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:31">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:29"><expr pos:start="11:5" pos:end="13:28"><call pos:start="11:5" pos:end="13:28"><name pos:start="11:5" pos:end="11:22">visit_start_struct</name><argument_list pos:start="11:23" pos:end="13:28">(<argument pos:start="11:24" pos:end="11:24"><expr pos:start="11:24" pos:end="11:24"><name pos:start="11:24" pos:end="11:24">v</name></expr></argument>, <argument pos:start="11:27" pos:end="11:38"><expr pos:start="11:27" pos:end="11:38"><operator pos:start="11:27" pos:end="11:27">(</operator><name pos:start="11:28" pos:end="11:31">void</name> <operator pos:start="11:33" pos:end="11:33">*</operator><operator pos:start="11:34" pos:end="11:34">*</operator><operator pos:start="11:35" pos:end="11:35">)</operator><name pos:start="11:36" pos:end="11:38">obj</name></expr></argument>, <argument pos:start="11:41" pos:end="11:52"><expr pos:start="11:41" pos:end="11:52"><literal type="string" pos:start="11:41" pos:end="11:52">"TestStruct"</literal></expr></argument>, <argument pos:start="11:55" pos:end="11:58"><expr pos:start="11:55" pos:end="11:58"><name pos:start="11:55" pos:end="11:58">name</name></expr></argument>, <argument pos:start="11:61" pos:end="11:78"><expr pos:start="11:61" pos:end="11:78"><sizeof pos:start="11:61" pos:end="11:78">sizeof<argument_list pos:start="11:67" pos:end="11:78">(<argument pos:start="11:68" pos:end="11:77"><expr pos:start="11:68" pos:end="11:77"><name pos:start="11:68" pos:end="11:77">TestStruct</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                       <argument pos:start="13:24" pos:end="13:27"><expr pos:start="13:24" pos:end="13:27"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:27">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:12">(<expr pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">err</name></expr>)</condition> <block pos:start="15:14" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <goto pos:start="17:9" pos:end="17:17">goto <name pos:start="17:14" pos:end="17:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:18">visit_type_int</name><argument_list pos:start="23:19" pos:end="23:56">(<argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><name pos:start="23:20" pos:end="23:20">v</name></expr></argument>, <argument pos:start="23:23" pos:end="23:38"><expr pos:start="23:23" pos:end="23:38"><operator pos:start="23:23" pos:end="23:23">&amp;</operator><name pos:start="23:24" pos:end="23:38"><operator pos:start="23:24" pos:end="23:24">(</operator><operator pos:start="23:25" pos:end="23:25">*</operator><name pos:start="23:26" pos:end="23:28">obj</name><operator pos:start="23:29" pos:end="23:29">)</operator><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:38">integer</name></name></expr></argument>, <argument pos:start="23:41" pos:end="23:49"><expr pos:start="23:41" pos:end="23:49"><literal type="string" pos:start="23:41" pos:end="23:49">"integer"</literal></expr></argument>, <argument pos:start="23:52" pos:end="23:55"><expr pos:start="23:52" pos:end="23:55"><operator pos:start="23:52" pos:end="23:52">&amp;</operator><name pos:start="23:53" pos:end="23:55">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><call pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:19">visit_type_bool</name><argument_list pos:start="25:20" pos:end="25:57">(<argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><name pos:start="25:21" pos:end="25:21">v</name></expr></argument>, <argument pos:start="25:24" pos:end="25:39"><expr pos:start="25:24" pos:end="25:39"><operator pos:start="25:24" pos:end="25:24">&amp;</operator><name pos:start="25:25" pos:end="25:39"><operator pos:start="25:25" pos:end="25:25">(</operator><operator pos:start="25:26" pos:end="25:26">*</operator><name pos:start="25:27" pos:end="25:29">obj</name><operator pos:start="25:30" pos:end="25:30">)</operator><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:39">boolean</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:50"><expr pos:start="25:42" pos:end="25:50"><literal type="string" pos:start="25:42" pos:end="25:50">"boolean"</literal></expr></argument>, <argument pos:start="25:53" pos:end="25:56"><expr pos:start="25:53" pos:end="25:56"><operator pos:start="25:53" pos:end="25:53">&amp;</operator><name pos:start="25:54" pos:end="25:56">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><call pos:start="27:5" pos:end="27:54"><name pos:start="27:5" pos:end="27:18">visit_type_str</name><argument_list pos:start="27:19" pos:end="27:54">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">v</name></expr></argument>, <argument pos:start="27:23" pos:end="27:37"><expr pos:start="27:23" pos:end="27:37"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:37"><operator pos:start="27:24" pos:end="27:24">(</operator><operator pos:start="27:25" pos:end="27:25">*</operator><name pos:start="27:26" pos:end="27:28">obj</name><operator pos:start="27:29" pos:end="27:29">)</operator><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:37">string</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><literal type="string" pos:start="27:40" pos:end="27:47">"string"</literal></expr></argument>, <argument pos:start="27:50" pos:end="27:53"><expr pos:start="27:50" pos:end="27:53"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:53">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:30"><expr pos:start="31:5" pos:end="31:29"><call pos:start="31:5" pos:end="31:29"><name pos:start="31:5" pos:end="31:20">visit_end_struct</name><argument_list pos:start="31:21" pos:end="31:29">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">v</name></expr></argument>, <argument pos:start="31:25" pos:end="31:28"><expr pos:start="31:25" pos:end="31:28"><operator pos:start="31:25" pos:end="31:25">&amp;</operator><name pos:start="31:26" pos:end="31:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="35:1" pos:end="35:4"><name pos:start="35:1" pos:end="35:3">out</name>:</label>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><call pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:19">error_propagate</name><argument_list pos:start="37:20" pos:end="37:30">(<argument pos:start="37:21" pos:end="37:24"><expr pos:start="37:21" pos:end="37:24"><name pos:start="37:21" pos:end="37:24">errp</name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><name pos:start="37:27" pos:end="37:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
