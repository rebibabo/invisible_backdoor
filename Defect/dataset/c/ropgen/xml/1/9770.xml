<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9770.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:25">vfp_set_fpscr</name>)<parameter_list pos:start="1:27" pos:end="1:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:54">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:54">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">changed</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:44"><expr pos:start="11:5" pos:end="11:43"><name pos:start="11:5" pos:end="11:11">changed</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:43"><name pos:start="11:15" pos:end="11:17">env</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:22">vfp</name><operator pos:start="11:23" pos:end="11:23">.</operator><name pos:start="11:24" pos:end="11:28">xregs</name><index pos:start="11:29" pos:end="11:43">[<expr pos:start="11:30" pos:end="11:42"><name pos:start="11:30" pos:end="11:42">ARM_VFP_FPSCR</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">vfp</name><operator pos:start="13:13" pos:end="13:13">.</operator><name pos:start="13:14" pos:end="13:18">xregs</name><index pos:start="13:19" pos:end="13:33">[<expr pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:32">ARM_VFP_FPSCR</name></expr>]</index></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <operator pos:start="13:37" pos:end="13:37">(</operator><name pos:start="13:38" pos:end="13:40">val</name> <operator pos:start="13:42" pos:end="13:42">&amp;</operator> <literal type="number" pos:start="13:44" pos:end="13:53">0xffc8ffff</literal><operator pos:start="13:54" pos:end="13:54">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">vfp</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:20">vec_len</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:27">val</name> <operator pos:start="15:29" pos:end="15:30">&gt;&gt;</operator> <literal type="number" pos:start="15:32" pos:end="15:33">16</literal><operator pos:start="15:34" pos:end="15:34">)</operator> <operator pos:start="15:36" pos:end="15:36">&amp;</operator> <literal type="number" pos:start="15:38" pos:end="15:38">7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">vfp</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:23">vec_stride</name></name> <operator pos:start="17:25" pos:end="17:25">=</operator> <operator pos:start="17:27" pos:end="17:27">(</operator><name pos:start="17:28" pos:end="17:30">val</name> <operator pos:start="17:32" pos:end="17:33">&gt;&gt;</operator> <literal type="number" pos:start="17:35" pos:end="17:36">20</literal><operator pos:start="17:37" pos:end="17:37">)</operator> <operator pos:start="17:39" pos:end="17:39">&amp;</operator> <literal type="number" pos:start="17:41" pos:end="17:41">3</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:11">changed</name> <operator pos:start="21:13" pos:end="21:14">^=</operator> <name pos:start="21:16" pos:end="21:18">val</name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="57:5"><if pos:start="23:5" pos:end="57:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:15">changed</name> <operator pos:start="23:17" pos:end="23:17">&amp;</operator> <operator pos:start="23:19" pos:end="23:19">(</operator><literal type="number" pos:start="23:20" pos:end="23:20">3</literal> <operator pos:start="23:22" pos:end="23:23">&lt;&lt;</operator> <literal type="number" pos:start="23:25" pos:end="23:26">22</literal><operator pos:start="23:27" pos:end="23:27">)</operator></expr>)</condition> <block pos:start="23:30" pos:end="57:5">{<block_content pos:start="25:9" pos:end="55:56">

        <expr_stmt pos:start="25:9" pos:end="25:28"><expr pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:16">val</name> <operator pos:start="25:18" pos:end="25:19">&gt;&gt;</operator> <literal type="number" pos:start="25:21" pos:end="25:22">22</literal><operator pos:start="25:23" pos:end="25:23">)</operator> <operator pos:start="25:25" pos:end="25:25">&amp;</operator> <literal type="number" pos:start="25:27" pos:end="25:27">3</literal></expr>;</expr_stmt>

        <switch pos:start="27:9" pos:end="53:9">switch <condition pos:start="27:16" pos:end="27:18">(<expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">i</name></expr>)</condition> <block pos:start="27:20" pos:end="53:9">{<block_content pos:start="29:9" pos:end="51:18">

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:13">i</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:40">float_round_nearest_even</name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:15">case <expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:13">i</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <name pos:start="37:17" pos:end="37:30">float_round_up</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:15">case <expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">2</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:13">i</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:32">float_round_down</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:15">case <expr pos:start="47:14" pos:end="47:14"><literal type="number" pos:start="47:14" pos:end="47:14">3</literal></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:36"><expr pos:start="49:13" pos:end="49:35"><name pos:start="49:13" pos:end="49:13">i</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:35">float_round_to_zero</name></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="55:9" pos:end="55:56"><expr pos:start="55:9" pos:end="55:55"><call pos:start="55:9" pos:end="55:55"><name pos:start="55:9" pos:end="55:31">set_float_rounding_mode</name><argument_list pos:start="55:32" pos:end="55:55">(<argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">i</name></expr></argument>, <argument pos:start="55:36" pos:end="55:54"><expr pos:start="55:36" pos:end="55:54"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:54"><name pos:start="55:37" pos:end="55:39">env</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:44">vfp</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:54">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="61:71"><if pos:start="59:5" pos:end="61:71">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><name pos:start="59:9" pos:end="59:15">changed</name> <operator pos:start="59:17" pos:end="59:17">&amp;</operator> <operator pos:start="59:19" pos:end="59:19">(</operator><literal type="number" pos:start="59:20" pos:end="59:20">1</literal> <operator pos:start="59:22" pos:end="59:23">&lt;&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:26">24</literal><operator pos:start="59:27" pos:end="59:27">)</operator></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:71"><block_content pos:start="61:9" pos:end="61:71">

        <expr_stmt pos:start="61:9" pos:end="61:71"><expr pos:start="61:9" pos:end="61:70"><call pos:start="61:9" pos:end="61:70"><name pos:start="61:9" pos:end="61:25">set_flush_to_zero</name><argument_list pos:start="61:26" pos:end="61:70">(<argument pos:start="61:27" pos:end="61:48"><expr pos:start="61:27" pos:end="61:48"><operator pos:start="61:27" pos:end="61:27">(</operator><name pos:start="61:28" pos:end="61:30">val</name> <operator pos:start="61:32" pos:end="61:32">&amp;</operator> <operator pos:start="61:34" pos:end="61:34">(</operator><literal type="number" pos:start="61:35" pos:end="61:35">1</literal> <operator pos:start="61:37" pos:end="61:38">&lt;&lt;</operator> <literal type="number" pos:start="61:40" pos:end="61:41">24</literal><operator pos:start="61:42" pos:end="61:42">)</operator><operator pos:start="61:43" pos:end="61:43">)</operator> <operator pos:start="61:45" pos:end="61:46">!=</operator> <literal type="number" pos:start="61:48" pos:end="61:48">0</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:69"><expr pos:start="61:51" pos:end="61:69"><operator pos:start="61:51" pos:end="61:51">&amp;</operator><name pos:start="61:52" pos:end="61:69"><name pos:start="61:52" pos:end="61:54">env</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:59">vfp</name><operator pos:start="61:60" pos:end="61:60">.</operator><name pos:start="61:61" pos:end="61:69">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="65:74"><if pos:start="63:5" pos:end="65:74">if <condition pos:start="63:8" pos:end="63:28">(<expr pos:start="63:9" pos:end="63:27"><name pos:start="63:9" pos:end="63:15">changed</name> <operator pos:start="63:17" pos:end="63:17">&amp;</operator> <operator pos:start="63:19" pos:end="63:19">(</operator><literal type="number" pos:start="63:20" pos:end="63:20">1</literal> <operator pos:start="63:22" pos:end="63:23">&lt;&lt;</operator> <literal type="number" pos:start="63:25" pos:end="63:26">25</literal><operator pos:start="63:27" pos:end="63:27">)</operator></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:74"><block_content pos:start="65:9" pos:end="65:74">

        <expr_stmt pos:start="65:9" pos:end="65:74"><expr pos:start="65:9" pos:end="65:73"><call pos:start="65:9" pos:end="65:73"><name pos:start="65:9" pos:end="65:28">set_default_nan_mode</name><argument_list pos:start="65:29" pos:end="65:73">(<argument pos:start="65:30" pos:end="65:51"><expr pos:start="65:30" pos:end="65:51"><operator pos:start="65:30" pos:end="65:30">(</operator><name pos:start="65:31" pos:end="65:33">val</name> <operator pos:start="65:35" pos:end="65:35">&amp;</operator> <operator pos:start="65:37" pos:end="65:37">(</operator><literal type="number" pos:start="65:38" pos:end="65:38">1</literal> <operator pos:start="65:40" pos:end="65:41">&lt;&lt;</operator> <literal type="number" pos:start="65:43" pos:end="65:44">25</literal><operator pos:start="65:45" pos:end="65:45">)</operator><operator pos:start="65:46" pos:end="65:46">)</operator> <operator pos:start="65:48" pos:end="65:49">!=</operator> <literal type="number" pos:start="65:51" pos:end="65:51">0</literal></expr></argument>, <argument pos:start="65:54" pos:end="65:72"><expr pos:start="65:54" pos:end="65:72"><operator pos:start="65:54" pos:end="65:54">&amp;</operator><name pos:start="65:55" pos:end="65:72"><name pos:start="65:55" pos:end="65:57">env</name><operator pos:start="65:58" pos:end="65:59">-&gt;</operator><name pos:start="65:60" pos:end="65:62">vfp</name><operator pos:start="65:63" pos:end="65:63">.</operator><name pos:start="65:64" pos:end="65:72">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:36"><expr pos:start="69:5" pos:end="69:35"><name pos:start="69:5" pos:end="69:5">i</name> <operator pos:start="69:7" pos:end="69:7">=</operator> <call pos:start="69:9" pos:end="69:35"><name pos:start="69:9" pos:end="69:30">vfp_exceptbits_to_host</name><argument_list pos:start="69:31" pos:end="69:35">(<argument pos:start="69:32" pos:end="69:34"><expr pos:start="69:32" pos:end="69:34"><name pos:start="69:32" pos:end="69:34">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:54"><expr pos:start="71:5" pos:end="71:53"><call pos:start="71:5" pos:end="71:53"><name pos:start="71:5" pos:end="71:29">set_float_exception_flags</name><argument_list pos:start="71:30" pos:end="71:53">(<argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">i</name></expr></argument>, <argument pos:start="71:34" pos:end="71:52"><expr pos:start="71:34" pos:end="71:52"><operator pos:start="71:34" pos:end="71:34">&amp;</operator><name pos:start="71:35" pos:end="71:52"><name pos:start="71:35" pos:end="71:37">env</name><operator pos:start="71:38" pos:end="71:39">-&gt;</operator><name pos:start="71:40" pos:end="71:42">vfp</name><operator pos:start="71:43" pos:end="71:43">.</operator><name pos:start="71:44" pos:end="71:52">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
