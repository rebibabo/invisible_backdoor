<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8832.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_mpeg4_decode_picture_header</name><parameter_list pos:start="1:35" pos:end="1:73">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">GetBitContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">startcode</name></decl>, <decl pos:start="5:20" pos:end="5:20"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:20">v</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:32">/* search next start code */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:18">align_get_bits</name><argument_list pos:start="11:19" pos:end="11:22">(<argument pos:start="11:20" pos:end="11:21"><expr pos:start="11:20" pos:end="11:21"><name pos:start="11:20" pos:end="11:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="23:5"><if pos:start="15:5" pos:end="23:5">if<condition pos:start="15:7" pos:end="15:85">(<expr pos:start="15:8" pos:end="15:84"><name pos:start="15:8" pos:end="15:26"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:15">avctx</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:26">codec_tag</name></name> <operator pos:start="15:28" pos:end="15:29">==</operator> <call pos:start="15:31" pos:end="15:51"><name pos:start="15:31" pos:end="15:43">ff_get_fourcc</name><argument_list pos:start="15:44" pos:end="15:51">(<argument pos:start="15:45" pos:end="15:50"><expr pos:start="15:45" pos:end="15:50"><literal type="string" pos:start="15:45" pos:end="15:50">"WV1F"</literal></expr></argument>)</argument_list></call> <operator pos:start="15:53" pos:end="15:54">&amp;&amp;</operator> <call pos:start="15:56" pos:end="15:72"><name pos:start="15:56" pos:end="15:64">show_bits</name><argument_list pos:start="15:65" pos:end="15:72">(<argument pos:start="15:66" pos:end="15:67"><expr pos:start="15:66" pos:end="15:67"><name pos:start="15:66" pos:end="15:67">gb</name></expr></argument>, <argument pos:start="15:70" pos:end="15:71"><expr pos:start="15:70" pos:end="15:71"><literal type="number" pos:start="15:70" pos:end="15:71">24</literal></expr></argument>)</argument_list></call> <operator pos:start="15:74" pos:end="15:75">==</operator> <literal type="number" pos:start="15:77" pos:end="15:84">0x575630</literal></expr>)</condition><block pos:start="15:86" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:44">

        <expr_stmt pos:start="17:9" pos:end="17:26"><expr pos:start="17:9" pos:end="17:25"><call pos:start="17:9" pos:end="17:25"><name pos:start="17:9" pos:end="17:17">skip_bits</name><argument_list pos:start="17:18" pos:end="17:25">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">gb</name></expr></argument>, <argument pos:start="17:23" pos:end="17:24"><expr pos:start="17:23" pos:end="17:24"><literal type="number" pos:start="17:23" pos:end="17:24">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:44"><if pos:start="19:9" pos:end="21:44">if<condition pos:start="19:11" pos:end="19:35">(<expr pos:start="19:12" pos:end="19:34"><call pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:19">get_bits</name><argument_list pos:start="19:20" pos:end="19:26">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">gb</name></expr></argument>, <argument pos:start="19:25" pos:end="19:25"><expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">8</literal></expr></argument>)</argument_list></call> <operator pos:start="19:28" pos:end="19:29">==</operator> <literal type="number" pos:start="19:31" pos:end="19:34">0xF0</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:44"><block_content pos:start="21:13" pos:end="21:44">

            <return pos:start="21:13" pos:end="21:44">return <expr pos:start="21:20" pos:end="21:43"><call pos:start="21:20" pos:end="21:43"><name pos:start="21:20" pos:end="21:36">decode_vop_header</name><argument_list pos:start="21:37" pos:end="21:43">(<argument pos:start="21:38" pos:end="21:38"><expr pos:start="21:38" pos:end="21:38"><name pos:start="21:38" pos:end="21:38">s</name></expr></argument>, <argument pos:start="21:41" pos:end="21:42"><expr pos:start="21:41" pos:end="21:42"><name pos:start="21:41" pos:end="21:42">gb</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:13">startcode</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <literal type="number" pos:start="27:17" pos:end="27:20">0xff</literal></expr>;</expr_stmt>

    <for pos:start="29:5" pos:end="155:5">for<control pos:start="29:8" pos:end="29:11">(<init pos:start="29:9" pos:end="29:9">;</init><condition pos:start="29:10" pos:end="29:10">;</condition><incr/>)</control> <block pos:start="29:13" pos:end="155:5">{<block_content pos:start="31:9" pos:end="153:25">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:9">v</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:20">get_bits</name><argument_list pos:start="31:21" pos:end="31:27">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">gb</name></expr></argument>, <argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:56"><expr pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:17">startcode</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><operator pos:start="33:22" pos:end="33:22">(</operator><name pos:start="33:23" pos:end="33:31">startcode</name> <operator pos:start="33:33" pos:end="33:34">&lt;&lt;</operator> <literal type="number" pos:start="33:36" pos:end="33:36">8</literal><operator pos:start="33:37" pos:end="33:37">)</operator> <operator pos:start="33:39" pos:end="33:39">|</operator> <name pos:start="33:41" pos:end="33:41">v</name><operator pos:start="33:42" pos:end="33:42">)</operator> <operator pos:start="33:44" pos:end="33:44">&amp;</operator> <literal type="number" pos:start="33:46" pos:end="33:55">0xffffffff</literal></expr>;</expr_stmt>

        

        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="49:9">if<condition pos:start="37:11" pos:end="37:50">(<expr pos:start="37:12" pos:end="37:49"><call pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:25">get_bits_count</name><argument_list pos:start="37:26" pos:end="37:29">(<argument pos:start="37:27" pos:end="37:28"><expr pos:start="37:27" pos:end="37:28"><name pos:start="37:27" pos:end="37:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="37:31" pos:end="37:32">&gt;=</operator> <name pos:start="37:34" pos:end="37:49"><name pos:start="37:34" pos:end="37:35">gb</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:49">size_in_bits</name></name></expr>)</condition><block pos:start="37:51" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:26">

            <if_stmt pos:start="39:13" pos:end="47:26"><if pos:start="39:13" pos:end="45:13">if<condition pos:start="39:15" pos:end="39:73">(<expr pos:start="39:16" pos:end="39:72"><name pos:start="39:16" pos:end="39:31"><name pos:start="39:16" pos:end="39:17">gb</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:31">size_in_bits</name></name><operator pos:start="39:32" pos:end="39:33">==</operator><literal type="number" pos:start="39:34" pos:end="39:34">8</literal> <operator pos:start="39:36" pos:end="39:37">&amp;&amp;</operator> <operator pos:start="39:39" pos:end="39:39">(</operator><name pos:start="39:40" pos:end="39:54"><name pos:start="39:40" pos:end="39:40">s</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:54">divx_version</name></name> <operator pos:start="39:56" pos:end="39:57">||</operator> <name pos:start="39:59" pos:end="39:71"><name pos:start="39:59" pos:end="39:59">s</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:71">xvid_build</name></name><operator pos:start="39:72" pos:end="39:72">)</operator></expr>)</condition><block pos:start="39:74" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:37">

                <expr_stmt pos:start="41:17" pos:end="41:84"><expr pos:start="41:17" pos:end="41:83"><call pos:start="41:17" pos:end="41:83"><name pos:start="41:17" pos:end="41:22">av_log</name><argument_list pos:start="41:23" pos:end="41:83">(<argument pos:start="41:24" pos:end="41:31"><expr pos:start="41:24" pos:end="41:31"><name pos:start="41:24" pos:end="41:31"><name pos:start="41:24" pos:end="41:24">s</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:31">avctx</name></name></expr></argument>, <argument pos:start="41:34" pos:end="41:45"><expr pos:start="41:34" pos:end="41:45"><name pos:start="41:34" pos:end="41:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:48" pos:end="41:64"><expr pos:start="41:48" pos:end="41:64"><literal type="string" pos:start="41:48" pos:end="41:64">"frame skip %d\n"</literal></expr></argument>, <argument pos:start="41:67" pos:end="41:82"><expr pos:start="41:67" pos:end="41:82"><name pos:start="41:67" pos:end="41:82"><name pos:start="41:67" pos:end="41:68">gb</name><operator pos:start="41:69" pos:end="41:70">-&gt;</operator><name pos:start="41:71" pos:end="41:82">size_in_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="43:17" pos:end="43:37">return <expr pos:start="43:24" pos:end="43:36"><name pos:start="43:24" pos:end="43:36">FRAME_SKIPPED</name></expr>;</return> <comment type="line" pos:start="43:39" pos:end="43:48">//divx bug</comment>

            </block_content>}</block></if><else pos:start="45:14" pos:end="47:26">else<block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></else></if_stmt> <comment type="line" pos:start="47:28" pos:end="47:42">//end of stream</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="53:9" pos:end="55:21"><if pos:start="53:9" pos:end="55:21">if<condition pos:start="53:11" pos:end="53:43">(<expr pos:start="53:12" pos:end="53:42"><operator pos:start="53:12" pos:end="53:12">(</operator><name pos:start="53:13" pos:end="53:21">startcode</name><operator pos:start="53:22" pos:end="53:22">&amp;</operator><literal type="number" pos:start="53:23" pos:end="53:32">0xFFFFFF00</literal><operator pos:start="53:33" pos:end="53:33">)</operator> <operator pos:start="53:35" pos:end="53:36">!=</operator> <literal type="number" pos:start="53:38" pos:end="53:42">0x100</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:21"><block_content pos:start="55:13" pos:end="55:21">

            <continue pos:start="55:13" pos:end="55:21">continue;</continue></block_content></block></if></if_stmt> <comment type="line" pos:start="55:23" pos:end="55:36">//no startcode</comment>

        

        <if_stmt pos:start="59:9" pos:end="119:9"><if pos:start="59:9" pos:end="119:9">if<condition pos:start="59:11" pos:end="59:46">(<expr pos:start="59:12" pos:end="59:45"><name pos:start="59:12" pos:end="59:26"><name pos:start="59:12" pos:end="59:12">s</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:19">avctx</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:26">debug</name></name><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:45">FF_DEBUG_STARTCODE</name></expr>)</condition><block pos:start="59:47" pos:end="119:9">{<block_content pos:start="61:13" pos:end="117:75">

            <expr_stmt pos:start="61:13" pos:end="61:73"><expr pos:start="61:13" pos:end="61:72"><call pos:start="61:13" pos:end="61:72"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:72">(<argument pos:start="61:20" pos:end="61:27"><expr pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:27"><name pos:start="61:20" pos:end="61:20">s</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:27">avctx</name></name></expr></argument>, <argument pos:start="61:30" pos:end="61:41"><expr pos:start="61:30" pos:end="61:41"><name pos:start="61:30" pos:end="61:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:44" pos:end="61:60"><expr pos:start="61:44" pos:end="61:60"><literal type="string" pos:start="61:44" pos:end="61:60">"startcode: %3X "</literal></expr></argument>, <argument pos:start="61:63" pos:end="61:71"><expr pos:start="61:63" pos:end="61:71"><name pos:start="61:63" pos:end="61:71">startcode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="115:85"><if pos:start="63:13" pos:end="63:91">if     <condition pos:start="63:20" pos:end="63:37">(<expr pos:start="63:21" pos:end="63:36"><name pos:start="63:21" pos:end="63:29">startcode</name><operator pos:start="63:30" pos:end="63:31">&lt;=</operator><literal type="number" pos:start="63:32" pos:end="63:36">0x11F</literal></expr>)</condition><block type="pseudo" pos:start="63:39" pos:end="63:91"><block_content pos:start="63:39" pos:end="63:91"> <expr_stmt pos:start="63:39" pos:end="63:91"><expr pos:start="63:39" pos:end="63:90"><call pos:start="63:39" pos:end="63:90"><name pos:start="63:39" pos:end="63:44">av_log</name><argument_list pos:start="63:45" pos:end="63:90">(<argument pos:start="63:46" pos:end="63:53"><expr pos:start="63:46" pos:end="63:53"><name pos:start="63:46" pos:end="63:53"><name pos:start="63:46" pos:end="63:46">s</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:53">avctx</name></name></expr></argument>, <argument pos:start="63:56" pos:end="63:67"><expr pos:start="63:56" pos:end="63:67"><name pos:start="63:56" pos:end="63:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="63:70" pos:end="63:89"><expr pos:start="63:70" pos:end="63:89"><literal type="string" pos:start="63:70" pos:end="63:89">"Video Object Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="65:13" pos:end="65:97">else if<condition pos:start="65:20" pos:end="65:37">(<expr pos:start="65:21" pos:end="65:36"><name pos:start="65:21" pos:end="65:29">startcode</name><operator pos:start="65:30" pos:end="65:31">&lt;=</operator><literal type="number" pos:start="65:32" pos:end="65:36">0x12F</literal></expr>)</condition><block type="pseudo" pos:start="65:39" pos:end="65:97"><block_content pos:start="65:39" pos:end="65:97"> <expr_stmt pos:start="65:39" pos:end="65:97"><expr pos:start="65:39" pos:end="65:96"><call pos:start="65:39" pos:end="65:96"><name pos:start="65:39" pos:end="65:44">av_log</name><argument_list pos:start="65:45" pos:end="65:96">(<argument pos:start="65:46" pos:end="65:53"><expr pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:53"><name pos:start="65:46" pos:end="65:46">s</name><operator pos:start="65:47" pos:end="65:48">-&gt;</operator><name pos:start="65:49" pos:end="65:53">avctx</name></name></expr></argument>, <argument pos:start="65:56" pos:end="65:67"><expr pos:start="65:56" pos:end="65:67"><name pos:start="65:56" pos:end="65:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:70" pos:end="65:95"><expr pos:start="65:70" pos:end="65:95"><literal type="string" pos:start="65:70" pos:end="65:95">"Video Object Layer Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="67:13" pos:end="67:81">else if<condition pos:start="67:20" pos:end="67:37">(<expr pos:start="67:21" pos:end="67:36"><name pos:start="67:21" pos:end="67:29">startcode</name><operator pos:start="67:30" pos:end="67:31">&lt;=</operator><literal type="number" pos:start="67:32" pos:end="67:36">0x13F</literal></expr>)</condition><block type="pseudo" pos:start="67:39" pos:end="67:81"><block_content pos:start="67:39" pos:end="67:81"> <expr_stmt pos:start="67:39" pos:end="67:81"><expr pos:start="67:39" pos:end="67:80"><call pos:start="67:39" pos:end="67:80"><name pos:start="67:39" pos:end="67:44">av_log</name><argument_list pos:start="67:45" pos:end="67:80">(<argument pos:start="67:46" pos:end="67:53"><expr pos:start="67:46" pos:end="67:53"><name pos:start="67:46" pos:end="67:53"><name pos:start="67:46" pos:end="67:46">s</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:53">avctx</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:67"><expr pos:start="67:56" pos:end="67:67"><name pos:start="67:56" pos:end="67:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:70" pos:end="67:79"><expr pos:start="67:70" pos:end="67:79"><literal type="string" pos:start="67:70" pos:end="67:79">"Reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="69:13" pos:end="69:85">else if<condition pos:start="69:20" pos:end="69:37">(<expr pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:29">startcode</name><operator pos:start="69:30" pos:end="69:31">&lt;=</operator><literal type="number" pos:start="69:32" pos:end="69:36">0x15F</literal></expr>)</condition><block type="pseudo" pos:start="69:39" pos:end="69:85"><block_content pos:start="69:39" pos:end="69:85"> <expr_stmt pos:start="69:39" pos:end="69:85"><expr pos:start="69:39" pos:end="69:84"><call pos:start="69:39" pos:end="69:84"><name pos:start="69:39" pos:end="69:44">av_log</name><argument_list pos:start="69:45" pos:end="69:84">(<argument pos:start="69:46" pos:end="69:53"><expr pos:start="69:46" pos:end="69:53"><name pos:start="69:46" pos:end="69:53"><name pos:start="69:46" pos:end="69:46">s</name><operator pos:start="69:47" pos:end="69:48">-&gt;</operator><name pos:start="69:49" pos:end="69:53">avctx</name></name></expr></argument>, <argument pos:start="69:56" pos:end="69:67"><expr pos:start="69:56" pos:end="69:67"><name pos:start="69:56" pos:end="69:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="69:70" pos:end="69:83"><expr pos:start="69:70" pos:end="69:83"><literal type="string" pos:start="69:70" pos:end="69:83">"FGS bp start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="71:13" pos:end="71:81">else if<condition pos:start="71:20" pos:end="71:37">(<expr pos:start="71:21" pos:end="71:36"><name pos:start="71:21" pos:end="71:29">startcode</name><operator pos:start="71:30" pos:end="71:31">&lt;=</operator><literal type="number" pos:start="71:32" pos:end="71:36">0x1AF</literal></expr>)</condition><block type="pseudo" pos:start="71:39" pos:end="71:81"><block_content pos:start="71:39" pos:end="71:81"> <expr_stmt pos:start="71:39" pos:end="71:81"><expr pos:start="71:39" pos:end="71:80"><call pos:start="71:39" pos:end="71:80"><name pos:start="71:39" pos:end="71:44">av_log</name><argument_list pos:start="71:45" pos:end="71:80">(<argument pos:start="71:46" pos:end="71:53"><expr pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:53"><name pos:start="71:46" pos:end="71:46">s</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:53">avctx</name></name></expr></argument>, <argument pos:start="71:56" pos:end="71:67"><expr pos:start="71:56" pos:end="71:67"><name pos:start="71:56" pos:end="71:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="71:70" pos:end="71:79"><expr pos:start="71:70" pos:end="71:79"><literal type="string" pos:start="71:70" pos:end="71:79">"Reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="73:13" pos:end="73:96">else if<condition pos:start="73:20" pos:end="73:37">(<expr pos:start="73:21" pos:end="73:36"><name pos:start="73:21" pos:end="73:29">startcode</name><operator pos:start="73:30" pos:end="73:31">==</operator><literal type="number" pos:start="73:32" pos:end="73:36">0x1B0</literal></expr>)</condition><block type="pseudo" pos:start="73:39" pos:end="73:96"><block_content pos:start="73:39" pos:end="73:96"> <expr_stmt pos:start="73:39" pos:end="73:96"><expr pos:start="73:39" pos:end="73:95"><call pos:start="73:39" pos:end="73:95"><name pos:start="73:39" pos:end="73:44">av_log</name><argument_list pos:start="73:45" pos:end="73:95">(<argument pos:start="73:46" pos:end="73:53"><expr pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:53"><name pos:start="73:46" pos:end="73:46">s</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:53">avctx</name></name></expr></argument>, <argument pos:start="73:56" pos:end="73:67"><expr pos:start="73:56" pos:end="73:67"><name pos:start="73:56" pos:end="73:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:70" pos:end="73:94"><expr pos:start="73:70" pos:end="73:94"><literal type="string" pos:start="73:70" pos:end="73:94">"Visual Object Seq Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="75:13" pos:end="75:94">else if<condition pos:start="75:20" pos:end="75:37">(<expr pos:start="75:21" pos:end="75:36"><name pos:start="75:21" pos:end="75:29">startcode</name><operator pos:start="75:30" pos:end="75:31">==</operator><literal type="number" pos:start="75:32" pos:end="75:36">0x1B1</literal></expr>)</condition><block type="pseudo" pos:start="75:39" pos:end="75:94"><block_content pos:start="75:39" pos:end="75:94"> <expr_stmt pos:start="75:39" pos:end="75:94"><expr pos:start="75:39" pos:end="75:93"><call pos:start="75:39" pos:end="75:93"><name pos:start="75:39" pos:end="75:44">av_log</name><argument_list pos:start="75:45" pos:end="75:93">(<argument pos:start="75:46" pos:end="75:53"><expr pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:46">s</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:53">avctx</name></name></expr></argument>, <argument pos:start="75:56" pos:end="75:67"><expr pos:start="75:56" pos:end="75:67"><name pos:start="75:56" pos:end="75:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="75:70" pos:end="75:92"><expr pos:start="75:70" pos:end="75:92"><literal type="string" pos:start="75:70" pos:end="75:92">"Visual Object Seq End"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="77:13" pos:end="77:82">else if<condition pos:start="77:20" pos:end="77:37">(<expr pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:29">startcode</name><operator pos:start="77:30" pos:end="77:31">==</operator><literal type="number" pos:start="77:32" pos:end="77:36">0x1B2</literal></expr>)</condition><block type="pseudo" pos:start="77:39" pos:end="77:82"><block_content pos:start="77:39" pos:end="77:82"> <expr_stmt pos:start="77:39" pos:end="77:82"><expr pos:start="77:39" pos:end="77:81"><call pos:start="77:39" pos:end="77:81"><name pos:start="77:39" pos:end="77:44">av_log</name><argument_list pos:start="77:45" pos:end="77:81">(<argument pos:start="77:46" pos:end="77:53"><expr pos:start="77:46" pos:end="77:53"><name pos:start="77:46" pos:end="77:53"><name pos:start="77:46" pos:end="77:46">s</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:53">avctx</name></name></expr></argument>, <argument pos:start="77:56" pos:end="77:67"><expr pos:start="77:56" pos:end="77:67"><name pos:start="77:56" pos:end="77:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="77:70" pos:end="77:80"><expr pos:start="77:70" pos:end="77:80"><literal type="string" pos:start="77:70" pos:end="77:80">"User Data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="79:13" pos:end="79:91">else if<condition pos:start="79:20" pos:end="79:37">(<expr pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:29">startcode</name><operator pos:start="79:30" pos:end="79:31">==</operator><literal type="number" pos:start="79:32" pos:end="79:36">0x1B3</literal></expr>)</condition><block type="pseudo" pos:start="79:39" pos:end="79:91"><block_content pos:start="79:39" pos:end="79:91"> <expr_stmt pos:start="79:39" pos:end="79:91"><expr pos:start="79:39" pos:end="79:90"><call pos:start="79:39" pos:end="79:90"><name pos:start="79:39" pos:end="79:44">av_log</name><argument_list pos:start="79:45" pos:end="79:90">(<argument pos:start="79:46" pos:end="79:53"><expr pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:53"><name pos:start="79:46" pos:end="79:46">s</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:53">avctx</name></name></expr></argument>, <argument pos:start="79:56" pos:end="79:67"><expr pos:start="79:56" pos:end="79:67"><name pos:start="79:56" pos:end="79:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:70" pos:end="79:89"><expr pos:start="79:70" pos:end="79:89"><literal type="string" pos:start="79:70" pos:end="79:89">"Group of VOP start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="81:13" pos:end="81:92">else if<condition pos:start="81:20" pos:end="81:37">(<expr pos:start="81:21" pos:end="81:36"><name pos:start="81:21" pos:end="81:29">startcode</name><operator pos:start="81:30" pos:end="81:31">==</operator><literal type="number" pos:start="81:32" pos:end="81:36">0x1B4</literal></expr>)</condition><block type="pseudo" pos:start="81:39" pos:end="81:92"><block_content pos:start="81:39" pos:end="81:92"> <expr_stmt pos:start="81:39" pos:end="81:92"><expr pos:start="81:39" pos:end="81:91"><call pos:start="81:39" pos:end="81:91"><name pos:start="81:39" pos:end="81:44">av_log</name><argument_list pos:start="81:45" pos:end="81:91">(<argument pos:start="81:46" pos:end="81:53"><expr pos:start="81:46" pos:end="81:53"><name pos:start="81:46" pos:end="81:53"><name pos:start="81:46" pos:end="81:46">s</name><operator pos:start="81:47" pos:end="81:48">-&gt;</operator><name pos:start="81:49" pos:end="81:53">avctx</name></name></expr></argument>, <argument pos:start="81:56" pos:end="81:67"><expr pos:start="81:56" pos:end="81:67"><name pos:start="81:56" pos:end="81:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:70" pos:end="81:90"><expr pos:start="81:70" pos:end="81:90"><literal type="string" pos:start="81:70" pos:end="81:90">"Video Session Error"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="83:13" pos:end="83:92">else if<condition pos:start="83:20" pos:end="83:37">(<expr pos:start="83:21" pos:end="83:36"><name pos:start="83:21" pos:end="83:29">startcode</name><operator pos:start="83:30" pos:end="83:31">==</operator><literal type="number" pos:start="83:32" pos:end="83:36">0x1B5</literal></expr>)</condition><block type="pseudo" pos:start="83:39" pos:end="83:92"><block_content pos:start="83:39" pos:end="83:92"> <expr_stmt pos:start="83:39" pos:end="83:92"><expr pos:start="83:39" pos:end="83:91"><call pos:start="83:39" pos:end="83:91"><name pos:start="83:39" pos:end="83:44">av_log</name><argument_list pos:start="83:45" pos:end="83:91">(<argument pos:start="83:46" pos:end="83:53"><expr pos:start="83:46" pos:end="83:53"><name pos:start="83:46" pos:end="83:53"><name pos:start="83:46" pos:end="83:46">s</name><operator pos:start="83:47" pos:end="83:48">-&gt;</operator><name pos:start="83:49" pos:end="83:53">avctx</name></name></expr></argument>, <argument pos:start="83:56" pos:end="83:67"><expr pos:start="83:56" pos:end="83:67"><name pos:start="83:56" pos:end="83:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="83:70" pos:end="83:90"><expr pos:start="83:70" pos:end="83:90"><literal type="string" pos:start="83:70" pos:end="83:90">"Visual Object Start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="85:13" pos:end="85:97">else if<condition pos:start="85:20" pos:end="85:37">(<expr pos:start="85:21" pos:end="85:36"><name pos:start="85:21" pos:end="85:29">startcode</name><operator pos:start="85:30" pos:end="85:31">==</operator><literal type="number" pos:start="85:32" pos:end="85:36">0x1B6</literal></expr>)</condition><block type="pseudo" pos:start="85:39" pos:end="85:97"><block_content pos:start="85:39" pos:end="85:97"> <expr_stmt pos:start="85:39" pos:end="85:97"><expr pos:start="85:39" pos:end="85:96"><call pos:start="85:39" pos:end="85:96"><name pos:start="85:39" pos:end="85:44">av_log</name><argument_list pos:start="85:45" pos:end="85:96">(<argument pos:start="85:46" pos:end="85:53"><expr pos:start="85:46" pos:end="85:53"><name pos:start="85:46" pos:end="85:53"><name pos:start="85:46" pos:end="85:46">s</name><operator pos:start="85:47" pos:end="85:48">-&gt;</operator><name pos:start="85:49" pos:end="85:53">avctx</name></name></expr></argument>, <argument pos:start="85:56" pos:end="85:67"><expr pos:start="85:56" pos:end="85:67"><name pos:start="85:56" pos:end="85:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="85:70" pos:end="85:95"><expr pos:start="85:70" pos:end="85:95"><literal type="string" pos:start="85:70" pos:end="85:95">"Video Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="87:13" pos:end="87:84">else if<condition pos:start="87:20" pos:end="87:37">(<expr pos:start="87:21" pos:end="87:36"><name pos:start="87:21" pos:end="87:29">startcode</name><operator pos:start="87:30" pos:end="87:31">==</operator><literal type="number" pos:start="87:32" pos:end="87:36">0x1B7</literal></expr>)</condition><block type="pseudo" pos:start="87:39" pos:end="87:84"><block_content pos:start="87:39" pos:end="87:84"> <expr_stmt pos:start="87:39" pos:end="87:84"><expr pos:start="87:39" pos:end="87:83"><call pos:start="87:39" pos:end="87:83"><name pos:start="87:39" pos:end="87:44">av_log</name><argument_list pos:start="87:45" pos:end="87:83">(<argument pos:start="87:46" pos:end="87:53"><expr pos:start="87:46" pos:end="87:53"><name pos:start="87:46" pos:end="87:53"><name pos:start="87:46" pos:end="87:46">s</name><operator pos:start="87:47" pos:end="87:48">-&gt;</operator><name pos:start="87:49" pos:end="87:53">avctx</name></name></expr></argument>, <argument pos:start="87:56" pos:end="87:67"><expr pos:start="87:56" pos:end="87:67"><name pos:start="87:56" pos:end="87:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:70" pos:end="87:82"><expr pos:start="87:70" pos:end="87:82"><literal type="string" pos:start="87:70" pos:end="87:82">"slice start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="89:13" pos:end="89:88">else if<condition pos:start="89:20" pos:end="89:37">(<expr pos:start="89:21" pos:end="89:36"><name pos:start="89:21" pos:end="89:29">startcode</name><operator pos:start="89:30" pos:end="89:31">==</operator><literal type="number" pos:start="89:32" pos:end="89:36">0x1B8</literal></expr>)</condition><block type="pseudo" pos:start="89:39" pos:end="89:88"><block_content pos:start="89:39" pos:end="89:88"> <expr_stmt pos:start="89:39" pos:end="89:88"><expr pos:start="89:39" pos:end="89:87"><call pos:start="89:39" pos:end="89:87"><name pos:start="89:39" pos:end="89:44">av_log</name><argument_list pos:start="89:45" pos:end="89:87">(<argument pos:start="89:46" pos:end="89:53"><expr pos:start="89:46" pos:end="89:53"><name pos:start="89:46" pos:end="89:53"><name pos:start="89:46" pos:end="89:46">s</name><operator pos:start="89:47" pos:end="89:48">-&gt;</operator><name pos:start="89:49" pos:end="89:53">avctx</name></name></expr></argument>, <argument pos:start="89:56" pos:end="89:67"><expr pos:start="89:56" pos:end="89:67"><name pos:start="89:56" pos:end="89:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="89:70" pos:end="89:86"><expr pos:start="89:70" pos:end="89:86"><literal type="string" pos:start="89:70" pos:end="89:86">"extension start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="91:13" pos:end="91:82">else if<condition pos:start="91:20" pos:end="91:37">(<expr pos:start="91:21" pos:end="91:36"><name pos:start="91:21" pos:end="91:29">startcode</name><operator pos:start="91:30" pos:end="91:31">==</operator><literal type="number" pos:start="91:32" pos:end="91:36">0x1B9</literal></expr>)</condition><block type="pseudo" pos:start="91:39" pos:end="91:82"><block_content pos:start="91:39" pos:end="91:82"> <expr_stmt pos:start="91:39" pos:end="91:82"><expr pos:start="91:39" pos:end="91:81"><call pos:start="91:39" pos:end="91:81"><name pos:start="91:39" pos:end="91:44">av_log</name><argument_list pos:start="91:45" pos:end="91:81">(<argument pos:start="91:46" pos:end="91:53"><expr pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:53"><name pos:start="91:46" pos:end="91:46">s</name><operator pos:start="91:47" pos:end="91:48">-&gt;</operator><name pos:start="91:49" pos:end="91:53">avctx</name></name></expr></argument>, <argument pos:start="91:56" pos:end="91:67"><expr pos:start="91:56" pos:end="91:67"><name pos:start="91:56" pos:end="91:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="91:70" pos:end="91:80"><expr pos:start="91:70" pos:end="91:80"><literal type="string" pos:start="91:70" pos:end="91:80">"fgs start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="93:13" pos:end="93:89">else if<condition pos:start="93:20" pos:end="93:37">(<expr pos:start="93:21" pos:end="93:36"><name pos:start="93:21" pos:end="93:29">startcode</name><operator pos:start="93:30" pos:end="93:31">==</operator><literal type="number" pos:start="93:32" pos:end="93:36">0x1BA</literal></expr>)</condition><block type="pseudo" pos:start="93:39" pos:end="93:89"><block_content pos:start="93:39" pos:end="93:89"> <expr_stmt pos:start="93:39" pos:end="93:89"><expr pos:start="93:39" pos:end="93:88"><call pos:start="93:39" pos:end="93:88"><name pos:start="93:39" pos:end="93:44">av_log</name><argument_list pos:start="93:45" pos:end="93:88">(<argument pos:start="93:46" pos:end="93:53"><expr pos:start="93:46" pos:end="93:53"><name pos:start="93:46" pos:end="93:53"><name pos:start="93:46" pos:end="93:46">s</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:53">avctx</name></name></expr></argument>, <argument pos:start="93:56" pos:end="93:67"><expr pos:start="93:56" pos:end="93:67"><name pos:start="93:56" pos:end="93:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:70" pos:end="93:87"><expr pos:start="93:70" pos:end="93:87"><literal type="string" pos:start="93:70" pos:end="93:87">"FBA Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="95:13" pos:end="95:95">else if<condition pos:start="95:20" pos:end="95:37">(<expr pos:start="95:21" pos:end="95:36"><name pos:start="95:21" pos:end="95:29">startcode</name><operator pos:start="95:30" pos:end="95:31">==</operator><literal type="number" pos:start="95:32" pos:end="95:36">0x1BB</literal></expr>)</condition><block type="pseudo" pos:start="95:39" pos:end="95:95"><block_content pos:start="95:39" pos:end="95:95"> <expr_stmt pos:start="95:39" pos:end="95:95"><expr pos:start="95:39" pos:end="95:94"><call pos:start="95:39" pos:end="95:94"><name pos:start="95:39" pos:end="95:44">av_log</name><argument_list pos:start="95:45" pos:end="95:94">(<argument pos:start="95:46" pos:end="95:53"><expr pos:start="95:46" pos:end="95:53"><name pos:start="95:46" pos:end="95:53"><name pos:start="95:46" pos:end="95:46">s</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:53">avctx</name></name></expr></argument>, <argument pos:start="95:56" pos:end="95:67"><expr pos:start="95:56" pos:end="95:67"><name pos:start="95:56" pos:end="95:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="95:70" pos:end="95:93"><expr pos:start="95:70" pos:end="95:93"><literal type="string" pos:start="95:70" pos:end="95:93">"FBA Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="97:13" pos:end="97:90">else if<condition pos:start="97:20" pos:end="97:37">(<expr pos:start="97:21" pos:end="97:36"><name pos:start="97:21" pos:end="97:29">startcode</name><operator pos:start="97:30" pos:end="97:31">==</operator><literal type="number" pos:start="97:32" pos:end="97:36">0x1BC</literal></expr>)</condition><block type="pseudo" pos:start="97:39" pos:end="97:90"><block_content pos:start="97:39" pos:end="97:90"> <expr_stmt pos:start="97:39" pos:end="97:90"><expr pos:start="97:39" pos:end="97:89"><call pos:start="97:39" pos:end="97:89"><name pos:start="97:39" pos:end="97:44">av_log</name><argument_list pos:start="97:45" pos:end="97:89">(<argument pos:start="97:46" pos:end="97:53"><expr pos:start="97:46" pos:end="97:53"><name pos:start="97:46" pos:end="97:53"><name pos:start="97:46" pos:end="97:46">s</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:53">avctx</name></name></expr></argument>, <argument pos:start="97:56" pos:end="97:67"><expr pos:start="97:56" pos:end="97:67"><name pos:start="97:56" pos:end="97:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="97:70" pos:end="97:88"><expr pos:start="97:70" pos:end="97:88"><literal type="string" pos:start="97:70" pos:end="97:88">"Mesh Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="99:13" pos:end="99:96">else if<condition pos:start="99:20" pos:end="99:37">(<expr pos:start="99:21" pos:end="99:36"><name pos:start="99:21" pos:end="99:29">startcode</name><operator pos:start="99:30" pos:end="99:31">==</operator><literal type="number" pos:start="99:32" pos:end="99:36">0x1BD</literal></expr>)</condition><block type="pseudo" pos:start="99:39" pos:end="99:96"><block_content pos:start="99:39" pos:end="99:96"> <expr_stmt pos:start="99:39" pos:end="99:96"><expr pos:start="99:39" pos:end="99:95"><call pos:start="99:39" pos:end="99:95"><name pos:start="99:39" pos:end="99:44">av_log</name><argument_list pos:start="99:45" pos:end="99:95">(<argument pos:start="99:46" pos:end="99:53"><expr pos:start="99:46" pos:end="99:53"><name pos:start="99:46" pos:end="99:53"><name pos:start="99:46" pos:end="99:46">s</name><operator pos:start="99:47" pos:end="99:48">-&gt;</operator><name pos:start="99:49" pos:end="99:53">avctx</name></name></expr></argument>, <argument pos:start="99:56" pos:end="99:67"><expr pos:start="99:56" pos:end="99:67"><name pos:start="99:56" pos:end="99:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="99:70" pos:end="99:94"><expr pos:start="99:70" pos:end="99:94"><literal type="string" pos:start="99:70" pos:end="99:94">"Mesh Object Plane start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="101:13" pos:end="101:99">else if<condition pos:start="101:20" pos:end="101:37">(<expr pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:29">startcode</name><operator pos:start="101:30" pos:end="101:31">==</operator><literal type="number" pos:start="101:32" pos:end="101:36">0x1BE</literal></expr>)</condition><block type="pseudo" pos:start="101:39" pos:end="101:99"><block_content pos:start="101:39" pos:end="101:99"> <expr_stmt pos:start="101:39" pos:end="101:99"><expr pos:start="101:39" pos:end="101:98"><call pos:start="101:39" pos:end="101:98"><name pos:start="101:39" pos:end="101:44">av_log</name><argument_list pos:start="101:45" pos:end="101:98">(<argument pos:start="101:46" pos:end="101:53"><expr pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:53"><name pos:start="101:46" pos:end="101:46">s</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:53">avctx</name></name></expr></argument>, <argument pos:start="101:56" pos:end="101:67"><expr pos:start="101:56" pos:end="101:67"><name pos:start="101:56" pos:end="101:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="101:70" pos:end="101:97"><expr pos:start="101:70" pos:end="101:97"><literal type="string" pos:start="101:70" pos:end="101:97">"Still Texture Object start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="103:13" pos:end="103:100">else if<condition pos:start="103:20" pos:end="103:37">(<expr pos:start="103:21" pos:end="103:36"><name pos:start="103:21" pos:end="103:29">startcode</name><operator pos:start="103:30" pos:end="103:31">==</operator><literal type="number" pos:start="103:32" pos:end="103:36">0x1BF</literal></expr>)</condition><block type="pseudo" pos:start="103:39" pos:end="103:100"><block_content pos:start="103:39" pos:end="103:100"> <expr_stmt pos:start="103:39" pos:end="103:100"><expr pos:start="103:39" pos:end="103:99"><call pos:start="103:39" pos:end="103:99"><name pos:start="103:39" pos:end="103:44">av_log</name><argument_list pos:start="103:45" pos:end="103:99">(<argument pos:start="103:46" pos:end="103:53"><expr pos:start="103:46" pos:end="103:53"><name pos:start="103:46" pos:end="103:53"><name pos:start="103:46" pos:end="103:46">s</name><operator pos:start="103:47" pos:end="103:48">-&gt;</operator><name pos:start="103:49" pos:end="103:53">avctx</name></name></expr></argument>, <argument pos:start="103:56" pos:end="103:67"><expr pos:start="103:56" pos:end="103:67"><name pos:start="103:56" pos:end="103:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:70" pos:end="103:98"><expr pos:start="103:70" pos:end="103:98"><literal type="string" pos:start="103:70" pos:end="103:98">"Texture Spatial Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="105:13" pos:end="105:96">else if<condition pos:start="105:20" pos:end="105:37">(<expr pos:start="105:21" pos:end="105:36"><name pos:start="105:21" pos:end="105:29">startcode</name><operator pos:start="105:30" pos:end="105:31">==</operator><literal type="number" pos:start="105:32" pos:end="105:36">0x1C0</literal></expr>)</condition><block type="pseudo" pos:start="105:39" pos:end="105:96"><block_content pos:start="105:39" pos:end="105:96"> <expr_stmt pos:start="105:39" pos:end="105:96"><expr pos:start="105:39" pos:end="105:95"><call pos:start="105:39" pos:end="105:95"><name pos:start="105:39" pos:end="105:44">av_log</name><argument_list pos:start="105:45" pos:end="105:95">(<argument pos:start="105:46" pos:end="105:53"><expr pos:start="105:46" pos:end="105:53"><name pos:start="105:46" pos:end="105:53"><name pos:start="105:46" pos:end="105:46">s</name><operator pos:start="105:47" pos:end="105:48">-&gt;</operator><name pos:start="105:49" pos:end="105:53">avctx</name></name></expr></argument>, <argument pos:start="105:56" pos:end="105:67"><expr pos:start="105:56" pos:end="105:67"><name pos:start="105:56" pos:end="105:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:70" pos:end="105:94"><expr pos:start="105:70" pos:end="105:94"><literal type="string" pos:start="105:70" pos:end="105:94">"Texture SNR Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="107:13" pos:end="107:91">else if<condition pos:start="107:20" pos:end="107:37">(<expr pos:start="107:21" pos:end="107:36"><name pos:start="107:21" pos:end="107:29">startcode</name><operator pos:start="107:30" pos:end="107:31">==</operator><literal type="number" pos:start="107:32" pos:end="107:36">0x1C1</literal></expr>)</condition><block type="pseudo" pos:start="107:39" pos:end="107:91"><block_content pos:start="107:39" pos:end="107:91"> <expr_stmt pos:start="107:39" pos:end="107:91"><expr pos:start="107:39" pos:end="107:90"><call pos:start="107:39" pos:end="107:90"><name pos:start="107:39" pos:end="107:44">av_log</name><argument_list pos:start="107:45" pos:end="107:90">(<argument pos:start="107:46" pos:end="107:53"><expr pos:start="107:46" pos:end="107:53"><name pos:start="107:46" pos:end="107:53"><name pos:start="107:46" pos:end="107:46">s</name><operator pos:start="107:47" pos:end="107:48">-&gt;</operator><name pos:start="107:49" pos:end="107:53">avctx</name></name></expr></argument>, <argument pos:start="107:56" pos:end="107:67"><expr pos:start="107:56" pos:end="107:67"><name pos:start="107:56" pos:end="107:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="107:70" pos:end="107:89"><expr pos:start="107:70" pos:end="107:89"><literal type="string" pos:start="107:70" pos:end="107:89">"Texture Tile start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="109:13" pos:end="109:98">else if<condition pos:start="109:20" pos:end="109:37">(<expr pos:start="109:21" pos:end="109:36"><name pos:start="109:21" pos:end="109:29">startcode</name><operator pos:start="109:30" pos:end="109:31">==</operator><literal type="number" pos:start="109:32" pos:end="109:36">0x1C2</literal></expr>)</condition><block type="pseudo" pos:start="109:39" pos:end="109:98"><block_content pos:start="109:39" pos:end="109:98"> <expr_stmt pos:start="109:39" pos:end="109:98"><expr pos:start="109:39" pos:end="109:97"><call pos:start="109:39" pos:end="109:97"><name pos:start="109:39" pos:end="109:44">av_log</name><argument_list pos:start="109:45" pos:end="109:97">(<argument pos:start="109:46" pos:end="109:53"><expr pos:start="109:46" pos:end="109:53"><name pos:start="109:46" pos:end="109:53"><name pos:start="109:46" pos:end="109:46">s</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:53">avctx</name></name></expr></argument>, <argument pos:start="109:56" pos:end="109:67"><expr pos:start="109:56" pos:end="109:67"><name pos:start="109:56" pos:end="109:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:70" pos:end="109:96"><expr pos:start="109:70" pos:end="109:96"><literal type="string" pos:start="109:70" pos:end="109:96">"Texture Shape Layer start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="111:13" pos:end="111:87">else if<condition pos:start="111:20" pos:end="111:37">(<expr pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:29">startcode</name><operator pos:start="111:30" pos:end="111:31">==</operator><literal type="number" pos:start="111:32" pos:end="111:36">0x1C3</literal></expr>)</condition><block type="pseudo" pos:start="111:39" pos:end="111:87"><block_content pos:start="111:39" pos:end="111:87"> <expr_stmt pos:start="111:39" pos:end="111:87"><expr pos:start="111:39" pos:end="111:86"><call pos:start="111:39" pos:end="111:86"><name pos:start="111:39" pos:end="111:44">av_log</name><argument_list pos:start="111:45" pos:end="111:86">(<argument pos:start="111:46" pos:end="111:53"><expr pos:start="111:46" pos:end="111:53"><name pos:start="111:46" pos:end="111:53"><name pos:start="111:46" pos:end="111:46">s</name><operator pos:start="111:47" pos:end="111:48">-&gt;</operator><name pos:start="111:49" pos:end="111:53">avctx</name></name></expr></argument>, <argument pos:start="111:56" pos:end="111:67"><expr pos:start="111:56" pos:end="111:67"><name pos:start="111:56" pos:end="111:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="111:70" pos:end="111:85"><expr pos:start="111:70" pos:end="111:85"><literal type="string" pos:start="111:70" pos:end="111:85">"stuffing start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="113:13" pos:end="113:81">else if<condition pos:start="113:20" pos:end="113:37">(<expr pos:start="113:21" pos:end="113:36"><name pos:start="113:21" pos:end="113:29">startcode</name><operator pos:start="113:30" pos:end="113:31">&lt;=</operator><literal type="number" pos:start="113:32" pos:end="113:36">0x1C5</literal></expr>)</condition><block type="pseudo" pos:start="113:39" pos:end="113:81"><block_content pos:start="113:39" pos:end="113:81"> <expr_stmt pos:start="113:39" pos:end="113:81"><expr pos:start="113:39" pos:end="113:80"><call pos:start="113:39" pos:end="113:80"><name pos:start="113:39" pos:end="113:44">av_log</name><argument_list pos:start="113:45" pos:end="113:80">(<argument pos:start="113:46" pos:end="113:53"><expr pos:start="113:46" pos:end="113:53"><name pos:start="113:46" pos:end="113:53"><name pos:start="113:46" pos:end="113:46">s</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:53">avctx</name></name></expr></argument>, <argument pos:start="113:56" pos:end="113:67"><expr pos:start="113:56" pos:end="113:67"><name pos:start="113:56" pos:end="113:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="113:70" pos:end="113:79"><expr pos:start="113:70" pos:end="113:79"><literal type="string" pos:start="113:70" pos:end="113:79">"reserved"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="115:13" pos:end="115:85">else if<condition pos:start="115:20" pos:end="115:37">(<expr pos:start="115:21" pos:end="115:36"><name pos:start="115:21" pos:end="115:29">startcode</name><operator pos:start="115:30" pos:end="115:31">&lt;=</operator><literal type="number" pos:start="115:32" pos:end="115:36">0x1FF</literal></expr>)</condition><block type="pseudo" pos:start="115:39" pos:end="115:85"><block_content pos:start="115:39" pos:end="115:85"> <expr_stmt pos:start="115:39" pos:end="115:85"><expr pos:start="115:39" pos:end="115:84"><call pos:start="115:39" pos:end="115:84"><name pos:start="115:39" pos:end="115:44">av_log</name><argument_list pos:start="115:45" pos:end="115:84">(<argument pos:start="115:46" pos:end="115:53"><expr pos:start="115:46" pos:end="115:53"><name pos:start="115:46" pos:end="115:53"><name pos:start="115:46" pos:end="115:46">s</name><operator pos:start="115:47" pos:end="115:48">-&gt;</operator><name pos:start="115:49" pos:end="115:53">avctx</name></name></expr></argument>, <argument pos:start="115:56" pos:end="115:67"><expr pos:start="115:56" pos:end="115:67"><name pos:start="115:56" pos:end="115:67">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:70" pos:end="115:83"><expr pos:start="115:70" pos:end="115:83"><literal type="string" pos:start="115:70" pos:end="115:83">"System start"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:75"><expr pos:start="117:13" pos:end="117:74"><call pos:start="117:13" pos:end="117:74"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="117:74">(<argument pos:start="117:20" pos:end="117:27"><expr pos:start="117:20" pos:end="117:27"><name pos:start="117:20" pos:end="117:27"><name pos:start="117:20" pos:end="117:20">s</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:27">avctx</name></name></expr></argument>, <argument pos:start="117:30" pos:end="117:41"><expr pos:start="117:30" pos:end="117:41"><name pos:start="117:30" pos:end="117:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="117:44" pos:end="117:53"><expr pos:start="117:44" pos:end="117:53"><literal type="string" pos:start="117:44" pos:end="117:53">" at %d\n"</literal></expr></argument>, <argument pos:start="117:56" pos:end="117:73"><expr pos:start="117:56" pos:end="117:73"><call pos:start="117:56" pos:end="117:73"><name pos:start="117:56" pos:end="117:69">get_bits_count</name><argument_list pos:start="117:70" pos:end="117:73">(<argument pos:start="117:71" pos:end="117:72"><expr pos:start="117:71" pos:end="117:72"><name pos:start="117:71" pos:end="117:72">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="123:9" pos:end="147:9"><if pos:start="123:9" pos:end="129:9">if<condition pos:start="123:11" pos:end="123:52">(<expr pos:start="123:12" pos:end="123:51"><name pos:start="123:12" pos:end="123:20">startcode</name> <operator pos:start="123:22" pos:end="123:23">&gt;=</operator> <literal type="number" pos:start="123:25" pos:end="123:29">0x120</literal> <operator pos:start="123:31" pos:end="123:32">&amp;&amp;</operator> <name pos:start="123:34" pos:end="123:42">startcode</name> <operator pos:start="123:44" pos:end="123:45">&lt;=</operator> <literal type="number" pos:start="123:47" pos:end="123:51">0x12F</literal></expr>)</condition><block pos:start="123:53" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:26">

            <if_stmt pos:start="125:13" pos:end="127:26"><if pos:start="125:13" pos:end="127:26">if<condition pos:start="125:15" pos:end="125:44">(<expr pos:start="125:16" pos:end="125:43"><call pos:start="125:16" pos:end="125:39"><name pos:start="125:16" pos:end="125:32">decode_vol_header</name><argument_list pos:start="125:33" pos:end="125:39">(<argument pos:start="125:34" pos:end="125:34"><expr pos:start="125:34" pos:end="125:34"><name pos:start="125:34" pos:end="125:34">s</name></expr></argument>, <argument pos:start="125:37" pos:end="125:38"><expr pos:start="125:37" pos:end="125:38"><name pos:start="125:37" pos:end="125:38">gb</name></expr></argument>)</argument_list></call> <operator pos:start="125:41" pos:end="125:41">&lt;</operator> <literal type="number" pos:start="125:43" pos:end="125:43">0</literal></expr>)</condition><block type="pseudo" pos:start="127:17" pos:end="127:26"><block_content pos:start="127:17" pos:end="127:26"> 

                <return pos:start="127:17" pos:end="127:26">return <expr pos:start="127:24" pos:end="127:25"><operator pos:start="127:24" pos:end="127:24">-</operator><literal type="number" pos:start="127:25" pos:end="127:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="131:9" pos:end="135:9">else if<condition pos:start="131:16" pos:end="131:49">(<expr pos:start="131:17" pos:end="131:48"><name pos:start="131:17" pos:end="131:25">startcode</name> <operator pos:start="131:27" pos:end="131:28">==</operator> <name pos:start="131:30" pos:end="131:48">USER_DATA_STARTCODE</name></expr>)</condition><block pos:start="131:50" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:36">

            <expr_stmt pos:start="133:13" pos:end="133:36"><expr pos:start="133:13" pos:end="133:35"><call pos:start="133:13" pos:end="133:35"><name pos:start="133:13" pos:end="133:28">decode_user_data</name><argument_list pos:start="133:29" pos:end="133:35">(<argument pos:start="133:30" pos:end="133:30"><expr pos:start="133:30" pos:end="133:30"><name pos:start="133:30" pos:end="133:30">s</name></expr></argument>, <argument pos:start="133:33" pos:end="133:34"><expr pos:start="133:33" pos:end="133:34"><name pos:start="133:33" pos:end="133:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="137:9" pos:end="141:9">else if<condition pos:start="137:16" pos:end="137:43">(<expr pos:start="137:17" pos:end="137:42"><name pos:start="137:17" pos:end="137:25">startcode</name> <operator pos:start="137:27" pos:end="137:28">==</operator> <name pos:start="137:30" pos:end="137:42">GOP_STARTCODE</name></expr>)</condition><block pos:start="137:44" pos:end="141:9">{<block_content pos:start="139:13" pos:end="139:43">

            <expr_stmt pos:start="139:13" pos:end="139:43"><expr pos:start="139:13" pos:end="139:42"><call pos:start="139:13" pos:end="139:42"><name pos:start="139:13" pos:end="139:35">mpeg4_decode_gop_header</name><argument_list pos:start="139:36" pos:end="139:42">(<argument pos:start="139:37" pos:end="139:37"><expr pos:start="139:37" pos:end="139:37"><name pos:start="139:37" pos:end="139:37">s</name></expr></argument>, <argument pos:start="139:40" pos:end="139:41"><expr pos:start="139:40" pos:end="139:41"><name pos:start="139:40" pos:end="139:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if>

        <if type="elseif" pos:start="143:9" pos:end="147:9">else if<condition pos:start="143:16" pos:end="143:43">(<expr pos:start="143:17" pos:end="143:42"><name pos:start="143:17" pos:end="143:25">startcode</name> <operator pos:start="143:27" pos:end="143:28">==</operator> <name pos:start="143:30" pos:end="143:42">VOP_STARTCODE</name></expr>)</condition><block pos:start="143:44" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:44">

            <return pos:start="145:13" pos:end="145:44">return <expr pos:start="145:20" pos:end="145:43"><call pos:start="145:20" pos:end="145:43"><name pos:start="145:20" pos:end="145:36">decode_vop_header</name><argument_list pos:start="145:37" pos:end="145:43">(<argument pos:start="145:38" pos:end="145:38"><expr pos:start="145:38" pos:end="145:38"><name pos:start="145:38" pos:end="145:38">s</name></expr></argument>, <argument pos:start="145:41" pos:end="145:42"><expr pos:start="145:41" pos:end="145:42"><name pos:start="145:41" pos:end="145:42">gb</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:27"><expr pos:start="151:9" pos:end="151:26"><call pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:22">align_get_bits</name><argument_list pos:start="151:23" pos:end="151:26">(<argument pos:start="151:24" pos:end="151:25"><expr pos:start="151:24" pos:end="151:25"><name pos:start="151:24" pos:end="151:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:25"><expr pos:start="153:9" pos:end="153:24"><name pos:start="153:9" pos:end="153:17">startcode</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <literal type="number" pos:start="153:21" pos:end="153:24">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
