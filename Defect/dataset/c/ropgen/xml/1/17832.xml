<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17832.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">fic_decode_slice</name><parameter_list pos:start="1:28" pos:end="1:63">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:62"><decl pos:start="1:52" pos:end="1:62"><type pos:start="1:52" pos:end="1:62"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">tdata</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">FICContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ctx</name>        <init pos:start="5:28" pos:end="5:45">= <expr pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:34">avctx</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FICThreadContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:26">tctx</name> <init pos:start="7:28" pos:end="7:34">= <expr pos:start="7:30" pos:end="7:34"><name pos:start="7:30" pos:end="7:34">tdata</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">src</name> <init pos:start="11:18" pos:end="11:28">= <expr pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:23">tctx</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:28">src</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">slice_h</name>  <init pos:start="13:18" pos:end="13:32">= <expr pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:23">tctx</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:32">slice_h</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">src_size</name> <init pos:start="15:18" pos:end="15:33">= <expr pos:start="15:20" pos:end="15:33"><name pos:start="15:20" pos:end="15:33"><name pos:start="15:20" pos:end="15:23">tctx</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:33">src_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">y_off</name>    <init pos:start="17:18" pos:end="17:30">= <expr pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:23">tctx</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:30">y_off</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">x</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">y</name></decl>, <decl pos:start="19:15" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:15">p</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:17">init_get_bits</name><argument_list pos:start="23:18" pos:end="23:41">(<argument pos:start="23:19" pos:end="23:21"><expr pos:start="23:19" pos:end="23:21"><operator pos:start="23:19" pos:end="23:19">&amp;</operator><name pos:start="23:20" pos:end="23:21">gb</name></expr></argument>, <argument pos:start="23:24" pos:end="23:26"><expr pos:start="23:24" pos:end="23:26"><name pos:start="23:24" pos:end="23:26">src</name></expr></argument>, <argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:36">src_size</name> <operator pos:start="23:38" pos:end="23:38">*</operator> <literal type="number" pos:start="23:40" pos:end="23:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="55:5">for <control pos:start="27:9" pos:end="27:27">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">p</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:22"><expr pos:start="27:17" pos:end="27:21"><name pos:start="27:17" pos:end="27:17">p</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <literal type="number" pos:start="27:21" pos:end="27:21">3</literal></expr>;</condition> <incr pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:24">p</name><operator pos:start="27:25" pos:end="27:26">++</operator></expr></incr>)</control> <block pos:start="27:29" pos:end="55:5">{<block_content pos:start="29:9" pos:end="53:9">

        <decl_stmt pos:start="29:9" pos:end="29:47"><decl pos:start="29:9" pos:end="29:46"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:18">stride</name>   <init pos:start="29:22" pos:end="29:46">= <expr pos:start="29:24" pos:end="29:46"><name pos:start="29:24" pos:end="29:46"><name pos:start="29:24" pos:end="29:26">ctx</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:33">frame</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:43">linesize</name><index pos:start="29:44" pos:end="29:46">[<expr pos:start="29:45" pos:end="29:45"><name pos:start="29:45" pos:end="29:45">p</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:69"><decl pos:start="31:9" pos:end="31:68"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:15">uint8_t</name><modifier pos:start="31:16" pos:end="31:16">*</modifier></type> <name pos:start="31:18" pos:end="31:20">dst</name> <init pos:start="31:22" pos:end="31:68">= <expr pos:start="31:24" pos:end="31:68"><name pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:26">ctx</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:33">frame</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">data</name><index pos:start="31:40" pos:end="31:42">[<expr pos:start="31:41" pos:end="31:41"><name pos:start="31:41" pos:end="31:41">p</name></expr>]</index></name> <operator pos:start="31:44" pos:end="31:44">+</operator> <operator pos:start="31:46" pos:end="31:46">(</operator><name pos:start="31:47" pos:end="31:51">y_off</name> <operator pos:start="31:53" pos:end="31:54">&gt;&gt;</operator> <operator pos:start="31:56" pos:end="31:56">!</operator><operator pos:start="31:57" pos:end="31:57">!</operator><name pos:start="31:58" pos:end="31:58">p</name><operator pos:start="31:59" pos:end="31:59">)</operator> <operator pos:start="31:61" pos:end="31:61">*</operator> <name pos:start="31:63" pos:end="31:68">stride</name></expr></init></decl>;</decl_stmt>



        <for pos:start="35:9" pos:end="53:9">for <control pos:start="35:13" pos:end="35:49">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">y</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:41"><expr pos:start="35:21" pos:end="35:40"><name pos:start="35:21" pos:end="35:21">y</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <operator pos:start="35:25" pos:end="35:25">(</operator><name pos:start="35:26" pos:end="35:32">slice_h</name> <operator pos:start="35:34" pos:end="35:35">&gt;&gt;</operator> <operator pos:start="35:37" pos:end="35:37">!</operator><operator pos:start="35:38" pos:end="35:38">!</operator><name pos:start="35:39" pos:end="35:39">p</name><operator pos:start="35:40" pos:end="35:40">)</operator></expr>;</condition> <incr pos:start="35:43" pos:end="35:48"><expr pos:start="35:43" pos:end="35:48"><name pos:start="35:43" pos:end="35:43">y</name> <operator pos:start="35:45" pos:end="35:46">+=</operator> <literal type="number" pos:start="35:48" pos:end="35:48">8</literal></expr></incr>)</control> <block pos:start="35:51" pos:end="53:9">{<block_content pos:start="37:13" pos:end="51:30">

            <for pos:start="37:13" pos:end="47:13">for <control pos:start="37:17" pos:end="37:64">(<init pos:start="37:18" pos:end="37:23"><expr pos:start="37:18" pos:end="37:22"><name pos:start="37:18" pos:end="37:18">x</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:56"><expr pos:start="37:25" pos:end="37:55"><name pos:start="37:25" pos:end="37:25">x</name> <operator pos:start="37:27" pos:end="37:27">&lt;</operator> <operator pos:start="37:29" pos:end="37:29">(</operator><name pos:start="37:30" pos:end="37:47"><name pos:start="37:30" pos:end="37:32">ctx</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:47">aligned_width</name></name> <operator pos:start="37:49" pos:end="37:50">&gt;&gt;</operator> <operator pos:start="37:52" pos:end="37:52">!</operator><operator pos:start="37:53" pos:end="37:53">!</operator><name pos:start="37:54" pos:end="37:54">p</name><operator pos:start="37:55" pos:end="37:55">)</operator></expr>;</condition> <incr pos:start="37:58" pos:end="37:63"><expr pos:start="37:58" pos:end="37:63"><name pos:start="37:58" pos:end="37:58">x</name> <operator pos:start="37:60" pos:end="37:61">+=</operator> <literal type="number" pos:start="37:63" pos:end="37:63">8</literal></expr></incr>)</control> <block pos:start="37:66" pos:end="47:13">{<block_content pos:start="39:17" pos:end="45:31">

                <decl_stmt pos:start="39:17" pos:end="39:24"><decl pos:start="39:17" pos:end="39:23"><type pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">int</name></type> <name pos:start="39:21" pos:end="39:23">ret</name></decl>;</decl_stmt>



                <if_stmt pos:start="43:17" pos:end="45:31"><if pos:start="43:17" pos:end="45:31">if <condition pos:start="43:20" pos:end="43:90">(<expr pos:start="43:21" pos:end="43:89"><operator pos:start="43:21" pos:end="43:21">(</operator><name pos:start="43:22" pos:end="43:24">ret</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:83"><name pos:start="43:28" pos:end="43:43">fic_decode_block</name><argument_list pos:start="43:44" pos:end="43:83">(<argument pos:start="43:45" pos:end="43:47"><expr pos:start="43:45" pos:end="43:47"><name pos:start="43:45" pos:end="43:47">ctx</name></expr></argument>, <argument pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><operator pos:start="43:50" pos:end="43:50">&amp;</operator><name pos:start="43:51" pos:end="43:52">gb</name></expr></argument>, <argument pos:start="43:55" pos:end="43:61"><expr pos:start="43:55" pos:end="43:61"><name pos:start="43:55" pos:end="43:57">dst</name> <operator pos:start="43:59" pos:end="43:59">+</operator> <name pos:start="43:61" pos:end="43:61">x</name></expr></argument>, <argument pos:start="43:64" pos:end="43:69"><expr pos:start="43:64" pos:end="43:69"><name pos:start="43:64" pos:end="43:69">stride</name></expr></argument>, <argument pos:start="43:72" pos:end="43:82"><expr pos:start="43:72" pos:end="43:82"><name pos:start="43:72" pos:end="43:82"><name pos:start="43:72" pos:end="43:75">tctx</name><operator pos:start="43:76" pos:end="43:77">-&gt;</operator><name pos:start="43:78" pos:end="43:82">block</name></name></expr></argument>)</argument_list></call><operator pos:start="43:84" pos:end="43:84">)</operator> <operator pos:start="43:86" pos:end="43:87">!=</operator> <literal type="number" pos:start="43:89" pos:end="43:89">0</literal></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:31"><block_content pos:start="45:21" pos:end="45:31">

                    <return pos:start="45:21" pos:end="45:31">return <expr pos:start="45:28" pos:end="45:30"><name pos:start="45:28" pos:end="45:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="51:13" pos:end="51:30"><expr pos:start="51:13" pos:end="51:29"><name pos:start="51:13" pos:end="51:15">dst</name> <operator pos:start="51:17" pos:end="51:18">+=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">8</literal> <operator pos:start="51:22" pos:end="51:22">*</operator> <name pos:start="51:24" pos:end="51:29">stride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
