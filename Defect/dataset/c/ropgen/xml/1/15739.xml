<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15739.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:35">gen_sradi</name> <parameter_list pos:start="1:37" pos:end="1:62">(<parameter pos:start="1:38" pos:end="1:54"><decl pos:start="1:38" pos:end="1:54"><type pos:start="1:38" pos:end="1:54"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:61"><decl pos:start="1:57" pos:end="1:61"><type pos:start="1:57" pos:end="1:61"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:61">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:51">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">sh</name> <init pos:start="5:12" pos:end="5:39">= <expr pos:start="5:14" pos:end="5:39"><call pos:start="5:14" pos:end="5:28"><name pos:start="5:14" pos:end="5:15">SH</name><argument_list pos:start="5:16" pos:end="5:28">(<argument pos:start="5:17" pos:end="5:27"><expr pos:start="5:17" pos:end="5:27"><name pos:start="5:17" pos:end="5:27"><name pos:start="5:17" pos:end="5:19">ctx</name><operator pos:start="5:20" pos:end="5:21">-&gt;</operator><name pos:start="5:22" pos:end="5:27">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="5:30" pos:end="5:30">+</operator> <operator pos:start="5:32" pos:end="5:32">(</operator><name pos:start="5:33" pos:end="5:33">n</name> <operator pos:start="5:35" pos:end="5:36">&lt;&lt;</operator> <literal type="number" pos:start="5:38" pos:end="5:38">5</literal><operator pos:start="5:39" pos:end="5:39">)</operator></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="43:5"><if pos:start="7:5" pos:end="37:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:10">sh</name> <operator pos:start="7:12" pos:end="7:13">!=</operator> <literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr>)</condition> <block pos:start="7:18" pos:end="37:5">{<block_content pos:start="9:9" pos:end="35:80">

        <decl_stmt pos:start="9:9" pos:end="9:19"><decl pos:start="9:9" pos:end="9:14"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:14">l1</name></decl>, <decl pos:start="9:17" pos:end="9:18"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:17" pos:end="9:18">l2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">TCGv</name></type> <name pos:start="11:14" pos:end="11:15">t0</name></decl>;</decl_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:29"><expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:10">l1</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <call pos:start="13:14" pos:end="13:28"><name pos:start="13:14" pos:end="13:26">gen_new_label</name><argument_list pos:start="13:27" pos:end="13:28">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:10">l2</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:28"><name pos:start="15:14" pos:end="15:26">gen_new_label</name><argument_list pos:start="15:27" pos:end="15:28">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:73"><expr pos:start="17:9" pos:end="17:72"><call pos:start="17:9" pos:end="17:72"><name pos:start="17:9" pos:end="17:26">tcg_gen_brcondi_tl</name><argument_list pos:start="17:27" pos:end="17:72">(<argument pos:start="17:28" pos:end="17:38"><expr pos:start="17:28" pos:end="17:38"><name pos:start="17:28" pos:end="17:38">TCG_COND_GE</name></expr></argument>, <argument pos:start="17:41" pos:end="17:64"><expr pos:start="17:41" pos:end="17:64"><name pos:start="17:41" pos:end="17:64"><name pos:start="17:41" pos:end="17:47">cpu_gpr</name><index pos:start="17:48" pos:end="17:64">[<expr pos:start="17:49" pos:end="17:63"><call pos:start="17:49" pos:end="17:63"><name pos:start="17:49" pos:end="17:50">rS</name><argument_list pos:start="17:51" pos:end="17:63">(<argument pos:start="17:52" pos:end="17:62"><expr pos:start="17:52" pos:end="17:62"><name pos:start="17:52" pos:end="17:62"><name pos:start="17:52" pos:end="17:54">ctx</name><operator pos:start="17:55" pos:end="17:56">-&gt;</operator><name pos:start="17:57" pos:end="17:62">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="17:67" pos:end="17:67"><expr pos:start="17:67" pos:end="17:67"><literal type="number" pos:start="17:67" pos:end="17:67">0</literal></expr></argument>, <argument pos:start="17:70" pos:end="17:71"><expr pos:start="17:70" pos:end="17:71"><name pos:start="17:70" pos:end="17:71">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:10">t0</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:38"><name pos:start="19:14" pos:end="19:25">tcg_temp_new</name><argument_list pos:start="19:26" pos:end="19:38">(<argument pos:start="19:27" pos:end="19:37"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:72"><expr pos:start="21:9" pos:end="21:71"><call pos:start="21:9" pos:end="21:71"><name pos:start="21:9" pos:end="21:23">tcg_gen_andi_tl</name><argument_list pos:start="21:24" pos:end="21:71">(<argument pos:start="21:25" pos:end="21:26"><expr pos:start="21:25" pos:end="21:26"><name pos:start="21:25" pos:end="21:26">t0</name></expr></argument>, <argument pos:start="21:29" pos:end="21:52"><expr pos:start="21:29" pos:end="21:52"><name pos:start="21:29" pos:end="21:52"><name pos:start="21:29" pos:end="21:35">cpu_gpr</name><index pos:start="21:36" pos:end="21:52">[<expr pos:start="21:37" pos:end="21:51"><call pos:start="21:37" pos:end="21:51"><name pos:start="21:37" pos:end="21:38">rS</name><argument_list pos:start="21:39" pos:end="21:51">(<argument pos:start="21:40" pos:end="21:50"><expr pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:50"><name pos:start="21:40" pos:end="21:42">ctx</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:50">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="21:55" pos:end="21:70"><expr pos:start="21:55" pos:end="21:70"><operator pos:start="21:55" pos:end="21:55">(</operator><literal type="number" pos:start="21:56" pos:end="21:59">1ULL</literal> <operator pos:start="21:61" pos:end="21:62">&lt;&lt;</operator> <name pos:start="21:64" pos:end="21:65">sh</name><operator pos:start="21:66" pos:end="21:66">)</operator> <operator pos:start="21:68" pos:end="21:68">-</operator> <literal type="number" pos:start="21:70" pos:end="21:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:51"><expr pos:start="23:9" pos:end="23:50"><call pos:start="23:9" pos:end="23:50"><name pos:start="23:9" pos:end="23:26">tcg_gen_brcondi_tl</name><argument_list pos:start="23:27" pos:end="23:50">(<argument pos:start="23:28" pos:end="23:38"><expr pos:start="23:28" pos:end="23:38"><name pos:start="23:28" pos:end="23:38">TCG_COND_EQ</name></expr></argument>, <argument pos:start="23:41" pos:end="23:42"><expr pos:start="23:41" pos:end="23:42"><name pos:start="23:41" pos:end="23:42">t0</name></expr></argument>, <argument pos:start="23:45" pos:end="23:45"><expr pos:start="23:45" pos:end="23:45"><literal type="number" pos:start="23:45" pos:end="23:45">0</literal></expr></argument>, <argument pos:start="23:48" pos:end="23:49"><expr pos:start="23:48" pos:end="23:49"><name pos:start="23:48" pos:end="23:49">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><call pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:22">tcg_gen_ori_tl</name><argument_list pos:start="25:23" pos:end="25:53">(<argument pos:start="25:24" pos:end="25:30"><expr pos:start="25:24" pos:end="25:30"><name pos:start="25:24" pos:end="25:30">cpu_xer</name></expr></argument>, <argument pos:start="25:33" pos:end="25:39"><expr pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:39">cpu_xer</name></expr></argument>, <argument pos:start="25:42" pos:end="25:52"><expr pos:start="25:42" pos:end="25:52"><literal type="number" pos:start="25:42" pos:end="25:42">1</literal> <operator pos:start="25:44" pos:end="25:45">&lt;&lt;</operator> <name pos:start="25:47" pos:end="25:52">XER_CA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><call pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:18">tcg_gen_br</name><argument_list pos:start="27:19" pos:end="27:22">(<argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><name pos:start="27:20" pos:end="27:21">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><call pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21">gen_set_label</name><argument_list pos:start="29:22" pos:end="29:25">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:23">tcg_gen_andi_tl</name><argument_list pos:start="31:24" pos:end="31:57">(<argument pos:start="31:25" pos:end="31:31"><expr pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:31">cpu_xer</name></expr></argument>, <argument pos:start="31:34" pos:end="31:40"><expr pos:start="31:34" pos:end="31:40"><name pos:start="31:34" pos:end="31:40">cpu_xer</name></expr></argument>, <argument pos:start="31:43" pos:end="31:56"><expr pos:start="31:43" pos:end="31:56"><operator pos:start="31:43" pos:end="31:43">~</operator><operator pos:start="31:44" pos:end="31:44">(</operator><literal type="number" pos:start="31:45" pos:end="31:45">1</literal> <operator pos:start="31:47" pos:end="31:48">&lt;&lt;</operator> <name pos:start="31:50" pos:end="31:55">XER_CA</name><operator pos:start="31:56" pos:end="31:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><call pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:21">gen_set_label</name><argument_list pos:start="33:22" pos:end="33:25">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:80"><expr pos:start="35:9" pos:end="35:79"><call pos:start="35:9" pos:end="35:79"><name pos:start="35:9" pos:end="35:23">tcg_gen_sari_tl</name><argument_list pos:start="35:24" pos:end="35:79">(<argument pos:start="35:25" pos:end="35:48"><expr pos:start="35:25" pos:end="35:48"><name pos:start="35:25" pos:end="35:48"><name pos:start="35:25" pos:end="35:31">cpu_gpr</name><index pos:start="35:32" pos:end="35:48">[<expr pos:start="35:33" pos:end="35:47"><call pos:start="35:33" pos:end="35:47"><name pos:start="35:33" pos:end="35:34">rA</name><argument_list pos:start="35:35" pos:end="35:47">(<argument pos:start="35:36" pos:end="35:46"><expr pos:start="35:36" pos:end="35:46"><name pos:start="35:36" pos:end="35:46"><name pos:start="35:36" pos:end="35:38">ctx</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:46">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="35:51" pos:end="35:74"><expr pos:start="35:51" pos:end="35:74"><name pos:start="35:51" pos:end="35:74"><name pos:start="35:51" pos:end="35:57">cpu_gpr</name><index pos:start="35:58" pos:end="35:74">[<expr pos:start="35:59" pos:end="35:73"><call pos:start="35:59" pos:end="35:73"><name pos:start="35:59" pos:end="35:60">rS</name><argument_list pos:start="35:61" pos:end="35:73">(<argument pos:start="35:62" pos:end="35:72"><expr pos:start="35:62" pos:end="35:72"><name pos:start="35:62" pos:end="35:72"><name pos:start="35:62" pos:end="35:64">ctx</name><operator pos:start="35:65" pos:end="35:66">-&gt;</operator><name pos:start="35:67" pos:end="35:72">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="35:77" pos:end="35:78"><expr pos:start="35:77" pos:end="35:78"><name pos:start="35:77" pos:end="35:78">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="43:5">else <block pos:start="37:12" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:58">

        <expr_stmt pos:start="39:9" pos:end="39:75"><expr pos:start="39:9" pos:end="39:74"><call pos:start="39:9" pos:end="39:74"><name pos:start="39:9" pos:end="39:22">tcg_gen_mov_tl</name><argument_list pos:start="39:23" pos:end="39:74">(<argument pos:start="39:24" pos:end="39:47"><expr pos:start="39:24" pos:end="39:47"><name pos:start="39:24" pos:end="39:47"><name pos:start="39:24" pos:end="39:30">cpu_gpr</name><index pos:start="39:31" pos:end="39:47">[<expr pos:start="39:32" pos:end="39:46"><call pos:start="39:32" pos:end="39:46"><name pos:start="39:32" pos:end="39:33">rA</name><argument_list pos:start="39:34" pos:end="39:46">(<argument pos:start="39:35" pos:end="39:45"><expr pos:start="39:35" pos:end="39:45"><name pos:start="39:35" pos:end="39:45"><name pos:start="39:35" pos:end="39:37">ctx</name><operator pos:start="39:38" pos:end="39:39">-&gt;</operator><name pos:start="39:40" pos:end="39:45">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="39:50" pos:end="39:73"><expr pos:start="39:50" pos:end="39:73"><name pos:start="39:50" pos:end="39:73"><name pos:start="39:50" pos:end="39:56">cpu_gpr</name><index pos:start="39:57" pos:end="39:73">[<expr pos:start="39:58" pos:end="39:72"><call pos:start="39:58" pos:end="39:72"><name pos:start="39:58" pos:end="39:59">rS</name><argument_list pos:start="39:60" pos:end="39:72">(<argument pos:start="39:61" pos:end="39:71"><expr pos:start="39:61" pos:end="39:71"><name pos:start="39:61" pos:end="39:71"><name pos:start="39:61" pos:end="39:63">ctx</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:71">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:58"><expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:23">tcg_gen_andi_tl</name><argument_list pos:start="41:24" pos:end="41:57">(<argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31">cpu_xer</name></expr></argument>, <argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">cpu_xer</name></expr></argument>, <argument pos:start="41:43" pos:end="41:56"><expr pos:start="41:43" pos:end="41:56"><operator pos:start="41:43" pos:end="41:43">~</operator><operator pos:start="41:44" pos:end="41:44">(</operator><literal type="number" pos:start="41:45" pos:end="41:45">1</literal> <operator pos:start="41:47" pos:end="41:48">&lt;&lt;</operator> <name pos:start="41:50" pos:end="41:55">XER_CA</name><operator pos:start="41:56" pos:end="41:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="45:5" pos:end="47:51"><if pos:start="45:5" pos:end="47:51">if <condition pos:start="45:8" pos:end="45:39">(<expr pos:start="45:9" pos:end="45:38"><call pos:start="45:9" pos:end="45:38"><name pos:start="45:9" pos:end="45:16">unlikely</name><argument_list pos:start="45:17" pos:end="45:38">(<argument pos:start="45:18" pos:end="45:37"><expr pos:start="45:18" pos:end="45:37"><call pos:start="45:18" pos:end="45:32"><name pos:start="45:18" pos:end="45:19">Rc</name><argument_list pos:start="45:20" pos:end="45:32">(<argument pos:start="45:21" pos:end="45:31"><expr pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:31"><name pos:start="45:21" pos:end="45:23">ctx</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:31">opcode</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:34" pos:end="45:35">!=</operator> <literal type="number" pos:start="45:37" pos:end="45:37">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:51"><block_content pos:start="47:9" pos:end="47:51">

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><call pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:19">gen_set_Rc0</name><argument_list pos:start="47:20" pos:end="47:50">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">ctx</name></expr></argument>, <argument pos:start="47:26" pos:end="47:49"><expr pos:start="47:26" pos:end="47:49"><name pos:start="47:26" pos:end="47:49"><name pos:start="47:26" pos:end="47:32">cpu_gpr</name><index pos:start="47:33" pos:end="47:49">[<expr pos:start="47:34" pos:end="47:48"><call pos:start="47:34" pos:end="47:48"><name pos:start="47:34" pos:end="47:35">rA</name><argument_list pos:start="47:36" pos:end="47:48">(<argument pos:start="47:37" pos:end="47:47"><expr pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:39">ctx</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:47">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
