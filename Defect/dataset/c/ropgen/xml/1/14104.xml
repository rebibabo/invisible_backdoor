<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14104.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">kvm_check_many_ioeventfds</name><parameter_list pos:start="1:37" pos:end="1:42">(<parameter pos:start="1:38" pos:end="1:41"><decl pos:start="1:38" pos:end="1:41"><type pos:start="1:38" pos:end="1:41"><name pos:start="1:38" pos:end="1:41">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="21:5" pos:end="70:0">

    <comment type="block" pos:start="5:5" pos:end="17:7">/* Userspace can use ioeventfd for io notification.  This requires a host

     * that supports eventfd(2) and an I/O thread; since eventfd does not

     * support SIGIO it cannot interrupt the vcpu.

     *

     * Older kernels have a 6 device limit on the KVM io bus.  Find out so we

     * can avoid creating too many ioeventfds.

     */</comment>

<cpp:if pos:start="19:1" pos:end="19:55">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:11">defined</name><argument_list pos:start="19:12" pos:end="19:27">(<argument pos:start="19:13" pos:end="19:26"><expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:26">CONFIG_EVENTFD</name></expr></argument>)</argument_list></call> <operator pos:start="19:29" pos:end="19:30">&amp;&amp;</operator> <call pos:start="19:32" pos:end="19:55"><name pos:start="19:32" pos:end="19:38">defined</name><argument_list pos:start="19:39" pos:end="19:55">(<argument pos:start="19:40" pos:end="19:54"><expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54">CONFIG_IOTHREAD</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:18">ioeventfds</name><index pos:start="21:19" pos:end="21:21">[<expr pos:start="21:20" pos:end="21:20"><literal type="number" pos:start="21:20" pos:end="21:20">7</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:9"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:9">i</name></decl>, <decl pos:start="23:12" pos:end="23:18"><type ref="prev" pos:start="23:5" pos:end="23:7"/><name pos:start="23:12" pos:end="23:14">ret</name> <init pos:start="23:16" pos:end="23:18">= <expr pos:start="23:18" pos:end="23:18"><literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="25:5" pos:end="45:5">for <control pos:start="25:9" pos:end="25:48">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:43"><expr pos:start="25:17" pos:end="25:42"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <call pos:start="25:21" pos:end="25:42"><name pos:start="25:21" pos:end="25:30">ARRAY_SIZE</name><argument_list pos:start="25:31" pos:end="25:42">(<argument pos:start="25:32" pos:end="25:41"><expr pos:start="25:32" pos:end="25:41"><name pos:start="25:32" pos:end="25:41">ioeventfds</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:45">i</name><operator pos:start="25:46" pos:end="25:47">++</operator></expr></incr>)</control> <block pos:start="25:50" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:9">

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:18">ioeventfds</name><index pos:start="27:19" pos:end="27:21">[<expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">i</name></expr>]</index></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="27:47"><name pos:start="27:25" pos:end="27:31">eventfd</name><argument_list pos:start="27:32" pos:end="27:47">(<argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><literal type="number" pos:start="27:33" pos:end="27:33">0</literal></expr></argument>, <argument pos:start="27:36" pos:end="27:46"><expr pos:start="27:36" pos:end="27:46"><name pos:start="27:36" pos:end="27:46">EFD_CLOEXEC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:30">(<expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:22">ioeventfds</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name> <operator pos:start="29:27" pos:end="29:27">&lt;</operator> <literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>)</condition> <block pos:start="29:32" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:18">

            <break pos:start="31:13" pos:end="31:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:68"><expr pos:start="35:9" pos:end="35:67"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:67"><name pos:start="35:15" pos:end="35:40">kvm_set_ioeventfd_pio_word</name><argument_list pos:start="35:41" pos:end="35:67">(<argument pos:start="35:42" pos:end="35:54"><expr pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:54"><name pos:start="35:42" pos:end="35:51">ioeventfds</name><index pos:start="35:52" pos:end="35:54">[<expr pos:start="35:53" pos:end="35:53"><name pos:start="35:53" pos:end="35:53">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:57" pos:end="35:57"><expr pos:start="35:57" pos:end="35:57"><literal type="number" pos:start="35:57" pos:end="35:57">0</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:60"><expr pos:start="35:60" pos:end="35:60"><name pos:start="35:60" pos:end="35:60">i</name></expr></argument>, <argument pos:start="35:63" pos:end="35:66"><expr pos:start="35:63" pos:end="35:66"><name pos:start="35:63" pos:end="35:66">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:20">(<expr pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:18">

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><call pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:17">close</name><argument_list pos:start="39:18" pos:end="39:32">(<argument pos:start="39:19" pos:end="39:31"><expr pos:start="39:19" pos:end="39:31"><name pos:start="39:19" pos:end="39:31"><name pos:start="39:19" pos:end="39:28">ioeventfds</name><index pos:start="39:29" pos:end="39:31">[<expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="49:5" pos:end="49:58">/* Decide whether many devices are supported or not */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:7">ret</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <name pos:start="51:11" pos:end="51:11">i</name> <operator pos:start="51:13" pos:end="51:14">==</operator> <call pos:start="51:16" pos:end="51:37"><name pos:start="51:16" pos:end="51:25">ARRAY_SIZE</name><argument_list pos:start="51:26" pos:end="51:37">(<argument pos:start="51:27" pos:end="51:36"><expr pos:start="51:27" pos:end="51:36"><name pos:start="51:27" pos:end="51:36">ioeventfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="55:5" pos:end="61:5">while <condition pos:start="55:11" pos:end="55:19">(<expr pos:start="55:12" pos:end="55:18"><name pos:start="55:12" pos:end="55:12">i</name><operator pos:start="55:13" pos:end="55:14">--</operator> <operator pos:start="55:16" pos:end="55:16">&gt;</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>)</condition> <block pos:start="55:21" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:29">

        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><call pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:34">kvm_set_ioeventfd_pio_word</name><argument_list pos:start="57:35" pos:end="57:62">(<argument pos:start="57:36" pos:end="57:48"><expr pos:start="57:36" pos:end="57:48"><name pos:start="57:36" pos:end="57:48"><name pos:start="57:36" pos:end="57:45">ioeventfds</name><index pos:start="57:46" pos:end="57:48">[<expr pos:start="57:47" pos:end="57:47"><name pos:start="57:47" pos:end="57:47">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:51" pos:end="57:51"><expr pos:start="57:51" pos:end="57:51"><literal type="number" pos:start="57:51" pos:end="57:51">0</literal></expr></argument>, <argument pos:start="57:54" pos:end="57:54"><expr pos:start="57:54" pos:end="57:54"><name pos:start="57:54" pos:end="57:54">i</name></expr></argument>, <argument pos:start="57:57" pos:end="57:61"><expr pos:start="57:57" pos:end="57:61"><name pos:start="57:57" pos:end="57:61">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:13">close</name><argument_list pos:start="59:14" pos:end="59:28">(<argument pos:start="59:15" pos:end="59:27"><expr pos:start="59:15" pos:end="59:27"><name pos:start="59:15" pos:end="59:27"><name pos:start="59:15" pos:end="59:24">ioeventfds</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="63:5" pos:end="66:0">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

<cpp:else pos:start="65:1" pos:end="65:5">#<cpp:directive pos:start="65:2" pos:end="65:5">else</cpp:directive></cpp:else>

    <return pos:start="67:5" pos:end="70:0">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

<cpp:endif pos:start="69:1" pos:end="69:6">#<cpp:directive pos:start="69:2" pos:end="69:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
