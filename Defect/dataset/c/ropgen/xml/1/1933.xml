<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1933.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">bdrv_open_common</name><parameter_list pos:start="1:28" pos:end="3:62">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:72"><decl pos:start="1:51" pos:end="1:72"><type pos:start="1:51" pos:end="1:72"><name pos:start="1:51" pos:end="1:66">BlockDriverState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">file</name></decl></parameter>,

    <parameter pos:start="3:5" pos:end="3:18"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:18"><name pos:start="3:5" pos:end="3:9">QDict</name> <modifier pos:start="3:11" pos:end="3:11">*</modifier></type><name pos:start="3:12" pos:end="3:18">options</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:29"><decl pos:start="3:21" pos:end="3:29"><type pos:start="3:21" pos:end="3:29"><name pos:start="3:21" pos:end="3:23">int</name></type> <name pos:start="3:25" pos:end="3:29">flags</name></decl></parameter>, <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:42">BlockDriver</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">drv</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:54">Error</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier><modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="203:1">{<block_content pos:start="7:5" pos:end="201:15">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:23">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:20">local_err</name> <init pos:start="11:22" pos:end="11:27">= <expr pos:start="11:24" pos:end="11:27"><name pos:start="11:24" pos:end="11:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:23">(<argument pos:start="15:12" pos:end="15:22"><expr pos:start="15:12" pos:end="15:22"><name pos:start="15:12" pos:end="15:14">drv</name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <name pos:start="15:19" pos:end="15:22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><call pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:10">assert</name><argument_list pos:start="17:11" pos:end="17:28">(<argument pos:start="17:12" pos:end="17:27"><expr pos:start="17:12" pos:end="17:27"><name pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:13">bs</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:19">file</name></name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:54"><expr pos:start="19:5" pos:end="19:53"><call pos:start="19:5" pos:end="19:53"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:53">(<argument pos:start="19:12" pos:end="19:52"><expr pos:start="19:12" pos:end="19:52"><name pos:start="19:12" pos:end="19:18">options</name> <operator pos:start="19:20" pos:end="19:21">!=</operator> <name pos:start="19:23" pos:end="19:26">NULL</name> <operator pos:start="19:28" pos:end="19:29">&amp;&amp;</operator> <name pos:start="19:31" pos:end="19:41"><name pos:start="19:31" pos:end="19:32">bs</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:41">options</name></name> <operator pos:start="19:43" pos:end="19:44">!=</operator> <name pos:start="19:46" pos:end="19:52">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:12">file</name> <operator pos:start="23:14" pos:end="23:15">!=</operator> <name pos:start="23:17" pos:end="23:20">NULL</name></expr>)</condition> <block pos:start="23:23" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:34">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:16">filename</name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:33"><name pos:start="25:20" pos:end="25:23">file</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:33">filename</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="31:5">else <block pos:start="27:12" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:58">

        <expr_stmt pos:start="29:9" pos:end="29:58"><expr pos:start="29:9" pos:end="29:57"><name pos:start="29:9" pos:end="29:16">filename</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:57"><name pos:start="29:20" pos:end="29:36">qdict_get_try_str</name><argument_list pos:start="29:37" pos:end="29:57">(<argument pos:start="29:38" pos:end="29:44"><expr pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:44">options</name></expr></argument>, <argument pos:start="29:47" pos:end="29:56"><expr pos:start="29:47" pos:end="29:56"><literal type="string" pos:start="29:47" pos:end="29:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:72"><expr pos:start="35:5" pos:end="35:71"><call pos:start="35:5" pos:end="35:71"><name pos:start="35:5" pos:end="35:26">trace_bdrv_open_common</name><argument_list pos:start="35:27" pos:end="35:71">(<argument pos:start="35:28" pos:end="35:29"><expr pos:start="35:28" pos:end="35:29"><name pos:start="35:28" pos:end="35:29">bs</name></expr></argument>, <argument pos:start="35:32" pos:end="35:45"><expr pos:start="35:32" pos:end="35:45"><ternary pos:start="35:32" pos:end="35:45"><condition pos:start="35:32" pos:end="35:41"><expr pos:start="35:32" pos:end="35:39"><name pos:start="35:32" pos:end="35:39">filename</name></expr> ?</condition><then/><else pos:start="35:42" pos:end="35:45">: <expr pos:start="35:44" pos:end="35:45"><literal type="string" pos:start="35:44" pos:end="35:45">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="35:48" pos:end="35:52"><expr pos:start="35:48" pos:end="35:52"><name pos:start="35:48" pos:end="35:52">flags</name></expr></argument>, <argument pos:start="35:55" pos:end="35:70"><expr pos:start="35:55" pos:end="35:70"><name pos:start="35:55" pos:end="35:70"><name pos:start="35:55" pos:end="35:57">drv</name><operator pos:start="35:58" pos:end="35:59">-&gt;</operator><name pos:start="35:60" pos:end="35:70">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="39:5" pos:end="43:33">/* bdrv_open() with directly using a protocol as drv. This layer is already

     * opened, so assign it to bs (while file becomes a closed BlockDriverState)

     * and return immediately. */</comment>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:44">(<expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:12">file</name> <operator pos:start="45:14" pos:end="45:15">!=</operator> <name pos:start="45:17" pos:end="45:20">NULL</name> <operator pos:start="45:22" pos:end="45:23">&amp;&amp;</operator> <name pos:start="45:25" pos:end="45:43"><name pos:start="45:25" pos:end="45:27">drv</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:43">bdrv_file_open</name></name></expr>)</condition> <block pos:start="45:46" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:17">bdrv_swap</name><argument_list pos:start="47:18" pos:end="47:27">(<argument pos:start="47:19" pos:end="47:22"><expr pos:start="47:19" pos:end="47:22"><name pos:start="47:19" pos:end="47:22">file</name></expr></argument>, <argument pos:start="47:25" pos:end="47:26"><expr pos:start="47:25" pos:end="47:26"><name pos:start="47:25" pos:end="47:26">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:17">return <expr pos:start="49:16" pos:end="49:16"><literal type="number" pos:start="49:16" pos:end="49:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:6">bs</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:18">open_flags</name></name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:26">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:31"><expr pos:start="57:5" pos:end="57:30"><name pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:6">bs</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:24">buffer_alignment</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <literal type="number" pos:start="57:28" pos:end="57:30">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:6">bs</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:23">zero_beyond_eof</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:30">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:14">open_flags</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:43"><name pos:start="61:18" pos:end="61:32">bdrv_open_flags</name><argument_list pos:start="61:33" pos:end="61:43">(<argument pos:start="61:34" pos:end="61:35"><expr pos:start="61:34" pos:end="61:35"><name pos:start="61:34" pos:end="61:35">bs</name></expr></argument>, <argument pos:start="61:38" pos:end="61:42"><expr pos:start="61:38" pos:end="61:42"><name pos:start="61:38" pos:end="61:42">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:48"><expr pos:start="63:5" pos:end="63:47"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:6">bs</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:17">read_only</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <operator pos:start="63:21" pos:end="63:21">!</operator><operator pos:start="63:22" pos:end="63:22">(</operator><name pos:start="63:23" pos:end="63:32">open_flags</name> <operator pos:start="63:34" pos:end="63:34">&amp;</operator> <name pos:start="63:36" pos:end="63:46">BDRV_O_RDWR</name><operator pos:start="63:47" pos:end="63:47">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:71">(<expr pos:start="67:9" pos:end="67:70"><name pos:start="67:9" pos:end="67:26">use_bdrv_whitelist</name> <operator pos:start="67:28" pos:end="67:29">&amp;&amp;</operator> <operator pos:start="67:31" pos:end="67:31">!</operator><call pos:start="67:32" pos:end="67:70"><name pos:start="67:32" pos:end="67:50">bdrv_is_whitelisted</name><argument_list pos:start="67:51" pos:end="67:70">(<argument pos:start="67:52" pos:end="67:54"><expr pos:start="67:52" pos:end="67:54"><name pos:start="67:52" pos:end="67:54">drv</name></expr></argument>, <argument pos:start="67:57" pos:end="67:69"><expr pos:start="67:57" pos:end="67:69"><name pos:start="67:57" pos:end="67:69"><name pos:start="67:57" pos:end="67:58">bs</name><operator pos:start="67:59" pos:end="67:60">-&gt;</operator><name pos:start="67:61" pos:end="67:69">read_only</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:73" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:24">

        <expr_stmt pos:start="69:9" pos:end="69:77"><expr pos:start="69:9" pos:end="69:76"><call pos:start="69:9" pos:end="69:76"><name pos:start="69:9" pos:end="69:18">error_setg</name><argument_list pos:start="69:19" pos:end="69:76">(<argument pos:start="69:20" pos:end="69:23"><expr pos:start="69:20" pos:end="69:23"><name pos:start="69:20" pos:end="69:23">errp</name></expr></argument>, <argument pos:start="69:26" pos:end="69:57"><expr pos:start="69:26" pos:end="69:57"><literal type="string" pos:start="69:26" pos:end="69:57">"Driver '%s' is not whitelisted"</literal></expr></argument>, <argument pos:start="69:60" pos:end="69:75"><expr pos:start="69:60" pos:end="69:75"><name pos:start="69:60" pos:end="69:75"><name pos:start="69:60" pos:end="69:62">drv</name><operator pos:start="69:63" pos:end="69:64">-&gt;</operator><name pos:start="69:65" pos:end="69:75">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:24">return <expr pos:start="71:16" pos:end="71:23"><operator pos:start="71:16" pos:end="71:16">-</operator><name pos:start="71:17" pos:end="71:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><call pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:10">assert</name><argument_list pos:start="77:11" pos:end="77:33">(<argument pos:start="77:12" pos:end="77:32"><expr pos:start="77:12" pos:end="77:32"><name pos:start="77:12" pos:end="77:27"><name pos:start="77:12" pos:end="77:13">bs</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:27">copy_on_read</name></name> <operator pos:start="77:29" pos:end="77:30">==</operator> <literal type="number" pos:start="77:32" pos:end="77:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:36" pos:end="77:79">/* bdrv_new() and bdrv_close() make it so */</comment>

    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:56">(<expr pos:start="79:9" pos:end="79:55"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:22"><name pos:start="79:10" pos:end="79:11">bs</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:22">read_only</name></name> <operator pos:start="79:24" pos:end="79:25">&amp;&amp;</operator> <operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:32">flags</name> <operator pos:start="79:34" pos:end="79:34">&amp;</operator> <name pos:start="79:36" pos:end="79:54">BDRV_O_COPY_ON_READ</name><operator pos:start="79:55" pos:end="79:55">)</operator></expr>)</condition> <block pos:start="79:58" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:37">

        <expr_stmt pos:start="81:9" pos:end="81:37"><expr pos:start="81:9" pos:end="81:36"><call pos:start="81:9" pos:end="81:36"><name pos:start="81:9" pos:end="81:32">bdrv_enable_copy_on_read</name><argument_list pos:start="81:33" pos:end="81:36">(<argument pos:start="81:34" pos:end="81:35"><expr pos:start="81:34" pos:end="81:35"><name pos:start="81:34" pos:end="81:35">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:25">(<expr pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:16">filename</name> <operator pos:start="87:18" pos:end="87:19">!=</operator> <name pos:start="87:21" pos:end="87:24">NULL</name></expr>)</condition> <block pos:start="87:27" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:62">

        <expr_stmt pos:start="89:9" pos:end="89:62"><expr pos:start="89:9" pos:end="89:61"><call pos:start="89:9" pos:end="89:61"><name pos:start="89:9" pos:end="89:15">pstrcpy</name><argument_list pos:start="89:16" pos:end="89:61">(<argument pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:28"><name pos:start="89:17" pos:end="89:18">bs</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:28">filename</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:50"><expr pos:start="89:31" pos:end="89:50"><sizeof pos:start="89:31" pos:end="89:50">sizeof<argument_list pos:start="89:37" pos:end="89:50">(<argument pos:start="89:38" pos:end="89:49"><expr pos:start="89:38" pos:end="89:49"><name pos:start="89:38" pos:end="89:49"><name pos:start="89:38" pos:end="89:39">bs</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:49">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="89:53" pos:end="89:60"><expr pos:start="89:53" pos:end="89:60"><name pos:start="89:53" pos:end="89:60">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="91:7" pos:end="95:5">else <block pos:start="91:12" pos:end="95:5">{<block_content pos:start="93:9" pos:end="93:31">

        <expr_stmt pos:start="93:9" pos:end="93:31"><expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:23"><name pos:start="93:9" pos:end="93:10">bs</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:20">filename</name><index pos:start="93:21" pos:end="93:23">[<expr pos:start="93:22" pos:end="93:22"><literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>]</index></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <literal type="char" pos:start="93:27" pos:end="93:30">'\0'</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:18"><expr pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:6">bs</name><operator pos:start="99:7" pos:end="99:8">-&gt;</operator><name pos:start="99:9" pos:end="99:11">drv</name></name> <operator pos:start="99:13" pos:end="99:13">=</operator> <name pos:start="99:15" pos:end="99:17">drv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:47"><expr pos:start="101:5" pos:end="101:46"><name pos:start="101:5" pos:end="101:14"><name pos:start="101:5" pos:end="101:6">bs</name><operator pos:start="101:7" pos:end="101:8">-&gt;</operator><name pos:start="101:9" pos:end="101:14">opaque</name></name> <operator pos:start="101:16" pos:end="101:16">=</operator> <call pos:start="101:18" pos:end="101:46"><name pos:start="101:18" pos:end="101:26">g_malloc0</name><argument_list pos:start="101:27" pos:end="101:46">(<argument pos:start="101:28" pos:end="101:45"><expr pos:start="101:28" pos:end="101:45"><name pos:start="101:28" pos:end="101:45"><name pos:start="101:28" pos:end="101:30">drv</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:45">instance_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:57"><expr pos:start="105:5" pos:end="105:56"><name pos:start="105:5" pos:end="105:26"><name pos:start="105:5" pos:end="105:6">bs</name><operator pos:start="105:7" pos:end="105:8">-&gt;</operator><name pos:start="105:9" pos:end="105:26">enable_write_cache</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <operator pos:start="105:30" pos:end="105:30">!</operator><operator pos:start="105:31" pos:end="105:31">!</operator><operator pos:start="105:32" pos:end="105:32">(</operator><name pos:start="105:33" pos:end="105:37">flags</name> <operator pos:start="105:39" pos:end="105:39">&amp;</operator> <name pos:start="105:41" pos:end="105:55">BDRV_O_CACHE_WB</name><operator pos:start="105:56" pos:end="105:56">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="109:5" pos:end="109:61">/* Open the image, either directly or using a protocol */</comment>

    <if_stmt pos:start="111:5" pos:end="137:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:28">(<expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:11">drv</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:27">bdrv_file_open</name></name></expr>)</condition> <block pos:start="111:30" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:71">

        <expr_stmt pos:start="113:9" pos:end="113:29"><expr pos:start="113:9" pos:end="113:28"><call pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:14">assert</name><argument_list pos:start="113:15" pos:end="113:28">(<argument pos:start="113:16" pos:end="113:27"><expr pos:start="113:16" pos:end="113:27"><name pos:start="113:16" pos:end="113:19">file</name> <operator pos:start="113:21" pos:end="113:22">==</operator> <name pos:start="113:24" pos:end="113:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:62"><expr pos:start="115:9" pos:end="115:61"><call pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:14">assert</name><argument_list pos:start="115:15" pos:end="115:61">(<argument pos:start="115:16" pos:end="115:60"><expr pos:start="115:16" pos:end="115:60"><operator pos:start="115:16" pos:end="115:16">!</operator><name pos:start="115:17" pos:end="115:40"><name pos:start="115:17" pos:end="115:19">drv</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:40">bdrv_needs_filename</name></name> <operator pos:start="115:42" pos:end="115:43">||</operator> <name pos:start="115:45" pos:end="115:52">filename</name> <operator pos:start="115:54" pos:end="115:55">!=</operator> <name pos:start="115:57" pos:end="115:60">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:71"><expr pos:start="117:9" pos:end="117:70"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:70"><name pos:start="117:15" pos:end="117:33"><name pos:start="117:15" pos:end="117:17">drv</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:33">bdrv_file_open</name></name><argument_list pos:start="117:34" pos:end="117:70">(<argument pos:start="117:35" pos:end="117:36"><expr pos:start="117:35" pos:end="117:36"><name pos:start="117:35" pos:end="117:36">bs</name></expr></argument>, <argument pos:start="117:39" pos:end="117:45"><expr pos:start="117:39" pos:end="117:45"><name pos:start="117:39" pos:end="117:45">options</name></expr></argument>, <argument pos:start="117:48" pos:end="117:57"><expr pos:start="117:48" pos:end="117:57"><name pos:start="117:48" pos:end="117:57">open_flags</name></expr></argument>, <argument pos:start="117:60" pos:end="117:69"><expr pos:start="117:60" pos:end="117:69"><operator pos:start="117:60" pos:end="117:60">&amp;</operator><name pos:start="117:61" pos:end="117:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="137:5">else <block pos:start="119:12" pos:end="137:5">{<block_content pos:start="121:9" pos:end="135:66">

        <if_stmt pos:start="121:9" pos:end="131:9"><if pos:start="121:9" pos:end="131:9">if <condition pos:start="121:12" pos:end="121:25">(<expr pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:16">file</name> <operator pos:start="121:18" pos:end="121:19">==</operator> <name pos:start="121:21" pos:end="121:24">NULL</name></expr>)</condition> <block pos:start="121:27" pos:end="131:9">{<block_content pos:start="123:13" pos:end="129:31">

            <expr_stmt pos:start="123:13" pos:end="125:59"><expr pos:start="123:13" pos:end="125:58"><call pos:start="123:13" pos:end="125:58"><name pos:start="123:13" pos:end="123:22">error_setg</name><argument_list pos:start="123:23" pos:end="125:58">(<argument pos:start="123:24" pos:end="123:27"><expr pos:start="123:24" pos:end="123:27"><name pos:start="123:24" pos:end="123:27">errp</name></expr></argument>, <argument pos:start="123:30" pos:end="125:39"><expr pos:start="123:30" pos:end="125:39"><literal type="string" pos:start="123:30" pos:end="123:72">"Can't use '%s' as a block driver for the "</literal>

                       <literal type="string" pos:start="125:24" pos:end="125:39">"protocol level"</literal></expr></argument>, <argument pos:start="125:42" pos:end="125:57"><expr pos:start="125:42" pos:end="125:57"><name pos:start="125:42" pos:end="125:57"><name pos:start="125:42" pos:end="125:44">drv</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:57">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:26"><expr pos:start="127:13" pos:end="127:25"><name pos:start="127:13" pos:end="127:15">ret</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <operator pos:start="127:19" pos:end="127:19">-</operator><name pos:start="127:20" pos:end="127:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="129:13" pos:end="129:31">goto <name pos:start="129:18" pos:end="129:30">free_and_fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:16"><name pos:start="133:9" pos:end="133:10">bs</name><operator pos:start="133:11" pos:end="133:12">-&gt;</operator><name pos:start="133:13" pos:end="133:16">file</name></name> <operator pos:start="133:18" pos:end="133:18">=</operator> <name pos:start="133:20" pos:end="133:23">file</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:66"><expr pos:start="135:9" pos:end="135:65"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:65"><name pos:start="135:15" pos:end="135:28"><name pos:start="135:15" pos:end="135:17">drv</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:28">bdrv_open</name></name><argument_list pos:start="135:29" pos:end="135:65">(<argument pos:start="135:30" pos:end="135:31"><expr pos:start="135:30" pos:end="135:31"><name pos:start="135:30" pos:end="135:31">bs</name></expr></argument>, <argument pos:start="135:34" pos:end="135:40"><expr pos:start="135:34" pos:end="135:40"><name pos:start="135:34" pos:end="135:40">options</name></expr></argument>, <argument pos:start="135:43" pos:end="135:52"><expr pos:start="135:43" pos:end="135:52"><name pos:start="135:43" pos:end="135:52">open_flags</name></expr></argument>, <argument pos:start="135:55" pos:end="135:64"><expr pos:start="135:55" pos:end="135:64"><operator pos:start="135:55" pos:end="135:55">&amp;</operator><name pos:start="135:56" pos:end="135:64">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="141:5" pos:end="159:5"><if pos:start="141:5" pos:end="159:5">if <condition pos:start="141:8" pos:end="141:16">(<expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">&lt;</operator> <literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>)</condition> <block pos:start="141:18" pos:end="159:5">{<block_content pos:start="143:9" pos:end="157:27">

        <if_stmt pos:start="143:9" pos:end="155:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:37">(<expr pos:start="143:13" pos:end="143:36"><call pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:24">error_is_set</name><argument_list pos:start="143:25" pos:end="143:36">(<argument pos:start="143:26" pos:end="143:35"><expr pos:start="143:26" pos:end="143:35"><operator pos:start="143:26" pos:end="143:26">&amp;</operator><name pos:start="143:27" pos:end="143:35">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="143:39" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:45">

            <expr_stmt pos:start="145:13" pos:end="145:45"><expr pos:start="145:13" pos:end="145:44"><call pos:start="145:13" pos:end="145:44"><name pos:start="145:13" pos:end="145:27">error_propagate</name><argument_list pos:start="145:28" pos:end="145:44">(<argument pos:start="145:29" pos:end="145:32"><expr pos:start="145:29" pos:end="145:32"><name pos:start="145:29" pos:end="145:32">errp</name></expr></argument>, <argument pos:start="145:35" pos:end="145:43"><expr pos:start="145:35" pos:end="145:43"><name pos:start="145:35" pos:end="145:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="147:11" pos:end="151:9">else if <condition pos:start="147:19" pos:end="147:35">(<expr pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:34"><name pos:start="147:20" pos:end="147:21">bs</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:31">filename</name><index pos:start="147:32" pos:end="147:34">[<expr pos:start="147:33" pos:end="147:33"><literal type="number" pos:start="147:33" pos:end="147:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="147:37" pos:end="151:9">{<block_content pos:start="149:13" pos:end="149:78">

            <expr_stmt pos:start="149:13" pos:end="149:78"><expr pos:start="149:13" pos:end="149:77"><call pos:start="149:13" pos:end="149:77"><name pos:start="149:13" pos:end="149:28">error_setg_errno</name><argument_list pos:start="149:29" pos:end="149:77">(<argument pos:start="149:30" pos:end="149:33"><expr pos:start="149:30" pos:end="149:33"><name pos:start="149:30" pos:end="149:33">errp</name></expr></argument>, <argument pos:start="149:36" pos:end="149:39"><expr pos:start="149:36" pos:end="149:39"><operator pos:start="149:36" pos:end="149:36">-</operator><name pos:start="149:37" pos:end="149:39">ret</name></expr></argument>, <argument pos:start="149:42" pos:end="149:62"><expr pos:start="149:42" pos:end="149:62"><literal type="string" pos:start="149:42" pos:end="149:62">"Could not open '%s'"</literal></expr></argument>, <argument pos:start="149:65" pos:end="149:76"><expr pos:start="149:65" pos:end="149:76"><name pos:start="149:65" pos:end="149:76"><name pos:start="149:65" pos:end="149:66">bs</name><operator pos:start="149:67" pos:end="149:68">-&gt;</operator><name pos:start="149:69" pos:end="149:76">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="151:11" pos:end="155:9">else <block pos:start="151:16" pos:end="155:9">{<block_content pos:start="153:13" pos:end="153:65">

            <expr_stmt pos:start="153:13" pos:end="153:65"><expr pos:start="153:13" pos:end="153:64"><call pos:start="153:13" pos:end="153:64"><name pos:start="153:13" pos:end="153:28">error_setg_errno</name><argument_list pos:start="153:29" pos:end="153:64">(<argument pos:start="153:30" pos:end="153:33"><expr pos:start="153:30" pos:end="153:33"><name pos:start="153:30" pos:end="153:33">errp</name></expr></argument>, <argument pos:start="153:36" pos:end="153:39"><expr pos:start="153:36" pos:end="153:39"><operator pos:start="153:36" pos:end="153:36">-</operator><name pos:start="153:37" pos:end="153:39">ret</name></expr></argument>, <argument pos:start="153:42" pos:end="153:63"><expr pos:start="153:42" pos:end="153:63"><literal type="string" pos:start="153:42" pos:end="153:63">"Could not open image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <goto pos:start="157:9" pos:end="157:27">goto <name pos:start="157:14" pos:end="157:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:55"><expr pos:start="163:5" pos:end="163:54"><name pos:start="163:5" pos:end="163:7">ret</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <call pos:start="163:11" pos:end="163:54"><name pos:start="163:11" pos:end="163:31">refresh_total_sectors</name><argument_list pos:start="163:32" pos:end="163:54">(<argument pos:start="163:33" pos:end="163:34"><expr pos:start="163:33" pos:end="163:34"><name pos:start="163:33" pos:end="163:34">bs</name></expr></argument>, <argument pos:start="163:37" pos:end="163:53"><expr pos:start="163:37" pos:end="163:53"><name pos:start="163:37" pos:end="163:53"><name pos:start="163:37" pos:end="163:38">bs</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:53">total_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="176:0"><if pos:start="165:5" pos:end="176:0">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">&lt;</operator> <literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>)</condition> <block pos:start="165:18" pos:end="176:0">{<block_content pos:start="167:9" pos:end="169:27">

        <expr_stmt pos:start="167:9" pos:end="167:77"><expr pos:start="167:9" pos:end="167:76"><call pos:start="167:9" pos:end="167:76"><name pos:start="167:9" pos:end="167:24">error_setg_errno</name><argument_list pos:start="167:25" pos:end="167:76">(<argument pos:start="167:26" pos:end="167:29"><expr pos:start="167:26" pos:end="167:29"><name pos:start="167:26" pos:end="167:29">errp</name></expr></argument>, <argument pos:start="167:32" pos:end="167:35"><expr pos:start="167:32" pos:end="167:35"><operator pos:start="167:32" pos:end="167:32">-</operator><name pos:start="167:33" pos:end="167:35">ret</name></expr></argument>, <argument pos:start="167:38" pos:end="167:75"><expr pos:start="167:38" pos:end="167:75"><literal type="string" pos:start="167:38" pos:end="167:75">"Could not refresh total sector count"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:27">goto <name pos:start="169:14" pos:end="169:26">free_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="175:1" pos:end="175:14">#<cpp:directive pos:start="175:2" pos:end="175:7">ifndef</cpp:directive> <name pos:start="175:9" pos:end="175:14">_WIN32</name></cpp:ifndef>

    <if_stmt pos:start="177:5" pos:end="186:0"><if pos:start="177:5" pos:end="186:0">if <condition pos:start="177:8" pos:end="177:25">(<expr pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:10">bs</name><operator pos:start="177:11" pos:end="177:12">-&gt;</operator><name pos:start="177:13" pos:end="177:24">is_temporary</name></name></expr>)</condition> <block pos:start="177:27" pos:end="186:0">{<block_content pos:start="179:9" pos:end="181:29">

        <expr_stmt pos:start="179:9" pos:end="179:40"><expr pos:start="179:9" pos:end="179:39"><call pos:start="179:9" pos:end="179:39"><name pos:start="179:9" pos:end="179:14">assert</name><argument_list pos:start="179:15" pos:end="179:39">(<argument pos:start="179:16" pos:end="179:38"><expr pos:start="179:16" pos:end="179:38"><name pos:start="179:16" pos:end="179:30"><name pos:start="179:16" pos:end="179:17">bs</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:27">filename</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><literal type="number" pos:start="179:29" pos:end="179:29">0</literal></expr>]</index></name> <operator pos:start="179:32" pos:end="179:33">!=</operator> <literal type="char" pos:start="179:35" pos:end="179:38">'\0'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:29"><expr pos:start="181:9" pos:end="181:28"><call pos:start="181:9" pos:end="181:28"><name pos:start="181:9" pos:end="181:14">unlink</name><argument_list pos:start="181:15" pos:end="181:28">(<argument pos:start="181:16" pos:end="181:27"><expr pos:start="181:16" pos:end="181:27"><name pos:start="181:16" pos:end="181:27"><name pos:start="181:16" pos:end="181:17">bs</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:27">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

    <return pos:start="187:5" pos:end="187:13">return <expr pos:start="187:12" pos:end="187:12"><literal type="number" pos:start="187:12" pos:end="187:12">0</literal></expr>;</return>



<label pos:start="191:1" pos:end="191:14"><name pos:start="191:1" pos:end="191:13">free_and_fail</name>:</label>

    <expr_stmt pos:start="193:5" pos:end="193:20"><expr pos:start="193:5" pos:end="193:19"><name pos:start="193:5" pos:end="193:12"><name pos:start="193:5" pos:end="193:6">bs</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:12">file</name></name> <operator pos:start="193:14" pos:end="193:14">=</operator> <name pos:start="193:16" pos:end="193:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:23"><expr pos:start="195:5" pos:end="195:22"><call pos:start="195:5" pos:end="195:22"><name pos:start="195:5" pos:end="195:10">g_free</name><argument_list pos:start="195:11" pos:end="195:22">(<argument pos:start="195:12" pos:end="195:21"><expr pos:start="195:12" pos:end="195:21"><name pos:start="195:12" pos:end="195:21"><name pos:start="195:12" pos:end="195:13">bs</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:21">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:22"><expr pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:14"><name pos:start="197:5" pos:end="197:6">bs</name><operator pos:start="197:7" pos:end="197:8">-&gt;</operator><name pos:start="197:9" pos:end="197:14">opaque</name></name> <operator pos:start="197:16" pos:end="197:16">=</operator> <name pos:start="197:18" pos:end="197:21">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:19"><expr pos:start="199:5" pos:end="199:18"><name pos:start="199:5" pos:end="199:11"><name pos:start="199:5" pos:end="199:6">bs</name><operator pos:start="199:7" pos:end="199:8">-&gt;</operator><name pos:start="199:9" pos:end="199:11">drv</name></name> <operator pos:start="199:13" pos:end="199:13">=</operator> <name pos:start="199:15" pos:end="199:18">NULL</name></expr>;</expr_stmt>

    <return pos:start="201:5" pos:end="201:15">return <expr pos:start="201:12" pos:end="201:14"><name pos:start="201:12" pos:end="201:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
