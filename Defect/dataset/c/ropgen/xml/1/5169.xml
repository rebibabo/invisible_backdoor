<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5169.c" pos:tabs="8"><function pos:start="1:1" pos:end="451:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_mjpeg_decode_frame</name><parameter_list pos:start="1:26" pos:end="3:42">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:47"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:59"><decl pos:start="1:50" pos:end="1:59"><type pos:start="1:50" pos:end="1:59"><name pos:start="1:50" pos:end="1:53">void</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">data</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:75"><decl pos:start="1:62" pos:end="1:75"><type pos:start="1:62" pos:end="1:75"><name pos:start="1:62" pos:end="1:64">int</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:75">data_size</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:41"><decl pos:start="3:27" pos:end="3:41"><type pos:start="3:27" pos:end="3:41"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:41">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="451:1">{<block_content pos:start="7:5" pos:end="449:25">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name>       <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:30">avpkt</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:44"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">MJpegDecodeContext</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:25">s</name> <init pos:start="11:27" pos:end="11:44">= <expr pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:44"><name pos:start="11:29" pos:end="11:33">avctx</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name></decl>, <decl pos:start="13:29" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:29" pos:end="13:29">*</modifier></type><name pos:start="13:30" pos:end="13:36">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:36">unescaped_buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:26">unescaped_buf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">start_code</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:16"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:16">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:11">AVFrame</name> <modifier pos:start="25:13" pos:end="25:13">*</modifier></type><name pos:start="25:14" pos:end="25:20">picture</name> <init pos:start="25:22" pos:end="25:27">= <expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">data</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:18">got_picture</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="29:25" pos:end="29:72">// picture from previous image can not be reused</comment>

    <expr_stmt pos:start="31:5" pos:end="31:18"><expr pos:start="31:5" pos:end="31:17"><name pos:start="31:5" pos:end="31:11">buf_ptr</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:17">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:11">buf_end</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:17">buf</name> <operator pos:start="33:19" pos:end="33:19">+</operator> <name pos:start="33:21" pos:end="33:28">buf_size</name></expr>;</expr_stmt>

    <while pos:start="35:5" pos:end="321:5">while <condition pos:start="35:11" pos:end="35:29">(<expr pos:start="35:12" pos:end="35:28"><name pos:start="35:12" pos:end="35:18">buf_ptr</name> <operator pos:start="35:20" pos:end="35:20">&lt;</operator> <name pos:start="35:22" pos:end="35:28">buf_end</name></expr>)</condition> <block pos:start="35:31" pos:end="321:5">{<block_content pos:start="39:9" pos:end="319:9">

        <comment type="block" pos:start="37:9" pos:end="37:36">/* find start next marker */</comment>

        <expr_stmt pos:start="39:9" pos:end="43:63"><expr pos:start="39:9" pos:end="43:62"><name pos:start="39:9" pos:end="39:18">start_code</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="43:62"><name pos:start="39:22" pos:end="39:41">ff_mjpeg_find_marker</name><argument_list pos:start="39:42" pos:end="43:62">(<argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><name pos:start="39:43" pos:end="39:43">s</name></expr></argument>, <argument pos:start="39:46" pos:end="39:53"><expr pos:start="39:46" pos:end="39:53"><operator pos:start="39:46" pos:end="39:46">&amp;</operator><name pos:start="39:47" pos:end="39:53">buf_ptr</name></expr></argument>, <argument pos:start="39:56" pos:end="39:62"><expr pos:start="39:56" pos:end="39:62"><name pos:start="39:56" pos:end="39:62">buf_end</name></expr></argument>,

                                          <argument pos:start="41:43" pos:end="41:60"><expr pos:start="41:43" pos:end="41:60"><operator pos:start="41:43" pos:end="41:43">&amp;</operator><name pos:start="41:44" pos:end="41:60">unescaped_buf_ptr</name></expr></argument>,

                                          <argument pos:start="43:43" pos:end="43:61"><expr pos:start="43:43" pos:end="43:61"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:61">unescaped_buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="45:9" pos:end="45:17">/* EOF */</comment>

        <if_stmt pos:start="47:9" pos:end="319:9"><if pos:start="47:9" pos:end="51:9">if <condition pos:start="47:12" pos:end="47:27">(<expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:22">start_code</name> <operator pos:start="47:24" pos:end="47:24">&lt;</operator> <literal type="number" pos:start="47:26" pos:end="47:26">0</literal></expr>)</condition> <block pos:start="47:29" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:25">

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">the_end</name>;</goto>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="59:9">else if <condition pos:start="51:19" pos:end="51:49">(<expr pos:start="51:20" pos:end="51:48"><name pos:start="51:20" pos:end="51:37">unescaped_buf_size</name> <operator pos:start="51:39" pos:end="51:39">&gt;</operator> <operator pos:start="51:41" pos:end="51:41">(</operator><literal type="number" pos:start="51:42" pos:end="51:43">1U</literal><operator pos:start="51:44" pos:end="51:45">&lt;&lt;</operator><literal type="number" pos:start="51:46" pos:end="51:47">29</literal><operator pos:start="51:48" pos:end="51:48">)</operator></expr>)</condition> <block pos:start="51:51" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:39">

            <expr_stmt pos:start="53:13" pos:end="55:61"><expr pos:start="53:13" pos:end="55:60"><call pos:start="53:13" pos:end="55:60"><name pos:start="53:13" pos:end="53:18">av_log</name><argument_list pos:start="53:19" pos:end="55:60">(<argument pos:start="53:20" pos:end="53:24"><expr pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:24">avctx</name></expr></argument>, <argument pos:start="53:27" pos:end="53:38"><expr pos:start="53:27" pos:end="53:38"><name pos:start="53:27" pos:end="53:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:41" pos:end="53:96"><expr pos:start="53:41" pos:end="53:96"><literal type="string" pos:start="53:41" pos:end="53:96">"MJPEG packet 0x%x too big (0x%x/0x%x), corrupt data?\n"</literal></expr></argument>,

                   <argument pos:start="55:20" pos:end="55:29"><expr pos:start="55:20" pos:end="55:29"><name pos:start="55:20" pos:end="55:29">start_code</name></expr></argument>, <argument pos:start="55:32" pos:end="55:49"><expr pos:start="55:32" pos:end="55:49"><name pos:start="55:32" pos:end="55:49">unescaped_buf_size</name></expr></argument>, <argument pos:start="55:52" pos:end="55:59"><expr pos:start="55:52" pos:end="55:59"><name pos:start="55:52" pos:end="55:59">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:39">return <expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="59:11" pos:end="319:9">else <block pos:start="59:16" pos:end="319:9">{<block_content pos:start="61:13" pos:end="317:77">

            <expr_stmt pos:start="61:13" pos:end="63:50"><expr pos:start="61:13" pos:end="63:49"><call pos:start="61:13" pos:end="63:49"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="63:49">(<argument pos:start="61:20" pos:end="61:24"><expr pos:start="61:20" pos:end="61:24"><name pos:start="61:20" pos:end="61:24">avctx</name></expr></argument>, <argument pos:start="61:27" pos:end="61:38"><expr pos:start="61:27" pos:end="61:38"><name pos:start="61:27" pos:end="61:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:41" pos:end="61:75"><expr pos:start="61:41" pos:end="61:75"><literal type="string" pos:start="61:41" pos:end="61:75">"marker=%x avail_size_in_buf=%td\n"</literal></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:29"><expr pos:start="63:20" pos:end="63:29"><name pos:start="63:20" pos:end="63:29">start_code</name></expr></argument>, <argument pos:start="63:32" pos:end="63:48"><expr pos:start="63:32" pos:end="63:48"><name pos:start="63:32" pos:end="63:38">buf_end</name> <operator pos:start="63:40" pos:end="63:40">-</operator> <name pos:start="63:42" pos:end="63:48">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:77"><expr pos:start="67:13" pos:end="67:76"><call pos:start="67:13" pos:end="67:76"><name pos:start="67:13" pos:end="67:25">init_get_bits</name><argument_list pos:start="67:26" pos:end="67:76">(<argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:32">gb</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:51"><expr pos:start="67:35" pos:end="67:51"><name pos:start="67:35" pos:end="67:51">unescaped_buf_ptr</name></expr></argument>, <argument pos:start="67:54" pos:end="67:75"><expr pos:start="67:54" pos:end="67:75"><name pos:start="67:54" pos:end="67:71">unescaped_buf_size</name> <operator pos:start="67:73" pos:end="67:73">*</operator> <literal type="number" pos:start="67:75" pos:end="67:75">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:39"><expr pos:start="71:13" pos:end="71:38"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:25">start_code</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:38">start_code</name></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="75:75"><if pos:start="73:13" pos:end="75:75">if <condition pos:start="73:16" pos:end="73:53">(<expr pos:start="73:17" pos:end="73:52"><name pos:start="73:17" pos:end="73:31"><name pos:start="73:17" pos:end="73:17">s</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:24">avctx</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:31">debug</name></name> <operator pos:start="73:33" pos:end="73:33">&amp;</operator> <name pos:start="73:35" pos:end="73:52">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:75"><block_content pos:start="75:17" pos:end="75:75">

                <expr_stmt pos:start="75:17" pos:end="75:75"><expr pos:start="75:17" pos:end="75:74"><call pos:start="75:17" pos:end="75:74"><name pos:start="75:17" pos:end="75:22">av_log</name><argument_list pos:start="75:23" pos:end="75:74">(<argument pos:start="75:24" pos:end="75:28"><expr pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:28">avctx</name></expr></argument>, <argument pos:start="75:31" pos:end="75:42"><expr pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="75:45" pos:end="75:61"><expr pos:start="75:45" pos:end="75:61"><literal type="string" pos:start="75:45" pos:end="75:61">"startcode: %X\n"</literal></expr></argument>, <argument pos:start="75:64" pos:end="75:73"><expr pos:start="75:64" pos:end="75:73"><name pos:start="75:64" pos:end="75:73">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <comment type="block" pos:start="79:13" pos:end="79:33">/* process markers */</comment>

            <if_stmt pos:start="81:13" pos:end="97:36"><if pos:start="81:13" pos:end="85:66">if <condition pos:start="81:16" pos:end="81:57">(<expr pos:start="81:17" pos:end="81:56"><name pos:start="81:17" pos:end="81:26">start_code</name> <operator pos:start="81:28" pos:end="81:29">&gt;=</operator> <literal type="number" pos:start="81:31" pos:end="81:34">0xd0</literal> <operator pos:start="81:36" pos:end="81:37">&amp;&amp;</operator> <name pos:start="81:39" pos:end="81:48">start_code</name> <operator pos:start="81:50" pos:end="81:51">&lt;=</operator> <literal type="number" pos:start="81:53" pos:end="81:56">0xd7</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="85:66"><block_content pos:start="83:17" pos:end="85:66">

                <expr_stmt pos:start="83:17" pos:end="85:66"><expr pos:start="83:17" pos:end="85:65"><call pos:start="83:17" pos:end="85:65"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="85:65">(<argument pos:start="83:24" pos:end="83:28"><expr pos:start="83:24" pos:end="83:28"><name pos:start="83:24" pos:end="83:28">avctx</name></expr></argument>, <argument pos:start="83:31" pos:end="83:42"><expr pos:start="83:31" pos:end="83:42"><name pos:start="83:31" pos:end="83:42">AV_LOG_DEBUG</name></expr></argument>,

                       <argument pos:start="85:24" pos:end="85:45"><expr pos:start="85:24" pos:end="85:45"><literal type="string" pos:start="85:24" pos:end="85:45">"restart marker: %d\n"</literal></expr></argument>, <argument pos:start="85:48" pos:end="85:64"><expr pos:start="85:48" pos:end="85:64"><name pos:start="85:48" pos:end="85:57">start_code</name> <operator pos:start="85:59" pos:end="85:59">&amp;</operator> <literal type="number" pos:start="85:61" pos:end="85:64">0x0f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <comment type="block" pos:start="87:17" pos:end="87:32">/* APP fields */</comment>

            <if type="elseif" pos:start="89:13" pos:end="91:36">else if <condition pos:start="89:21" pos:end="89:63">(<expr pos:start="89:22" pos:end="89:62"><name pos:start="89:22" pos:end="89:31">start_code</name> <operator pos:start="89:33" pos:end="89:34">&gt;=</operator> <name pos:start="89:36" pos:end="89:39">APP0</name> <operator pos:start="89:41" pos:end="89:42">&amp;&amp;</operator> <name pos:start="89:44" pos:end="89:53">start_code</name> <operator pos:start="89:55" pos:end="89:56">&lt;=</operator> <name pos:start="89:58" pos:end="89:62">APP15</name></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:36"><block_content pos:start="91:17" pos:end="91:36">

                <expr_stmt pos:start="91:17" pos:end="91:36"><expr pos:start="91:17" pos:end="91:35"><call pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:32">mjpeg_decode_app</name><argument_list pos:start="91:33" pos:end="91:35">(<argument pos:start="91:34" pos:end="91:34"><expr pos:start="91:34" pos:end="91:34"><name pos:start="91:34" pos:end="91:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <comment type="block" pos:start="93:17" pos:end="93:29">/* Comment */</comment>

            <if type="elseif" pos:start="95:13" pos:end="97:36">else if <condition pos:start="95:21" pos:end="95:39">(<expr pos:start="95:22" pos:end="95:38"><name pos:start="95:22" pos:end="95:31">start_code</name> <operator pos:start="95:33" pos:end="95:34">==</operator> <name pos:start="95:36" pos:end="95:38">COM</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:36"><block_content pos:start="97:17" pos:end="97:36">

                <expr_stmt pos:start="97:17" pos:end="97:36"><expr pos:start="97:17" pos:end="97:35"><call pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:32">mjpeg_decode_com</name><argument_list pos:start="97:33" pos:end="97:35">(<argument pos:start="97:34" pos:end="97:34"><expr pos:start="97:34" pos:end="97:34"><name pos:start="97:34" pos:end="97:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <switch pos:start="101:13" pos:end="305:13">switch <condition pos:start="101:20" pos:end="101:31">(<expr pos:start="101:21" pos:end="101:30"><name pos:start="101:21" pos:end="101:30">start_code</name></expr>)</condition> <block pos:start="101:33" pos:end="305:13">{<block_content pos:start="103:13" pos:end="303:22">

            <case pos:start="103:13" pos:end="103:21">case <expr pos:start="103:18" pos:end="103:20"><name pos:start="103:18" pos:end="103:20">SOI</name></expr>:</case>

                <expr_stmt pos:start="105:17" pos:end="105:40"><expr pos:start="105:17" pos:end="105:39"><name pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:35">restart_interval</name></name> <operator pos:start="105:37" pos:end="105:37">=</operator> <literal type="number" pos:start="105:39" pos:end="105:39">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:40"><expr pos:start="107:17" pos:end="107:39"><name pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:17">s</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:32">restart_count</name></name>    <operator pos:start="107:37" pos:end="107:37">=</operator> <literal type="number" pos:start="107:39" pos:end="107:39">0</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="109:17" pos:end="109:42">/* nothing to do on SOI */</comment>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            <case pos:start="113:13" pos:end="113:21">case <expr pos:start="113:18" pos:end="113:20"><name pos:start="113:18" pos:end="113:20">DQT</name></expr>:</case>

                <expr_stmt pos:start="115:17" pos:end="115:39"><expr pos:start="115:17" pos:end="115:38"><call pos:start="115:17" pos:end="115:38"><name pos:start="115:17" pos:end="115:35">ff_mjpeg_decode_dqt</name><argument_list pos:start="115:36" pos:end="115:38">(<argument pos:start="115:37" pos:end="115:37"><expr pos:start="115:37" pos:end="115:37"><name pos:start="115:37" pos:end="115:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="117:17" pos:end="117:22">break;</break>

            <case pos:start="119:13" pos:end="119:21">case <expr pos:start="119:18" pos:end="119:20"><name pos:start="119:18" pos:end="119:20">DHT</name></expr>:</case>

                <if_stmt pos:start="121:17" pos:end="127:17"><if pos:start="121:17" pos:end="127:17">if <condition pos:start="121:20" pos:end="121:55">(<expr pos:start="121:21" pos:end="121:54"><operator pos:start="121:21" pos:end="121:21">(</operator><name pos:start="121:22" pos:end="121:24">ret</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <call pos:start="121:28" pos:end="121:49"><name pos:start="121:28" pos:end="121:46">ff_mjpeg_decode_dht</name><argument_list pos:start="121:47" pos:end="121:49">(<argument pos:start="121:48" pos:end="121:48"><expr pos:start="121:48" pos:end="121:48"><name pos:start="121:48" pos:end="121:48">s</name></expr></argument>)</argument_list></call><operator pos:start="121:50" pos:end="121:50">)</operator> <operator pos:start="121:52" pos:end="121:52">&lt;</operator> <literal type="number" pos:start="121:54" pos:end="121:54">0</literal></expr>)</condition> <block pos:start="121:57" pos:end="127:17">{<block_content pos:start="123:21" pos:end="125:31">

                    <expr_stmt pos:start="123:21" pos:end="123:80"><expr pos:start="123:21" pos:end="123:79"><call pos:start="123:21" pos:end="123:79"><name pos:start="123:21" pos:end="123:26">av_log</name><argument_list pos:start="123:27" pos:end="123:79">(<argument pos:start="123:28" pos:end="123:32"><expr pos:start="123:28" pos:end="123:32"><name pos:start="123:28" pos:end="123:32">avctx</name></expr></argument>, <argument pos:start="123:35" pos:end="123:46"><expr pos:start="123:35" pos:end="123:46"><name pos:start="123:35" pos:end="123:46">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:49" pos:end="123:78"><expr pos:start="123:49" pos:end="123:78"><literal type="string" pos:start="123:49" pos:end="123:78">"huffman table decode error\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="125:21" pos:end="125:31">return <expr pos:start="125:28" pos:end="125:30"><name pos:start="125:28" pos:end="125:30">ret</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <break pos:start="129:17" pos:end="129:22">break;</break>

            <case pos:start="131:13" pos:end="131:22">case <expr pos:start="131:18" pos:end="131:21"><name pos:start="131:18" pos:end="131:21">SOF0</name></expr>:</case>

            <case pos:start="133:13" pos:end="133:22">case <expr pos:start="133:18" pos:end="133:21"><name pos:start="133:18" pos:end="133:21">SOF1</name></expr>:</case>

                <expr_stmt pos:start="135:17" pos:end="135:35"><expr pos:start="135:17" pos:end="135:34"><name pos:start="135:17" pos:end="135:27"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:27">lossless</name></name>    <operator pos:start="135:32" pos:end="135:32">=</operator> <literal type="number" pos:start="135:34" pos:end="135:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:35"><expr pos:start="137:17" pos:end="137:34"><name pos:start="137:17" pos:end="137:21"><name pos:start="137:17" pos:end="137:17">s</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:21">ls</name></name>          <operator pos:start="137:32" pos:end="137:32">=</operator> <literal type="number" pos:start="137:34" pos:end="137:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:35"><expr pos:start="139:17" pos:end="139:34"><name pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:30">progressive</name></name> <operator pos:start="139:32" pos:end="139:32">=</operator> <literal type="number" pos:start="139:34" pos:end="139:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="141:17" pos:end="143:31"><if pos:start="141:17" pos:end="143:31">if <condition pos:start="141:20" pos:end="141:55">(<expr pos:start="141:21" pos:end="141:54"><operator pos:start="141:21" pos:end="141:21">(</operator><name pos:start="141:22" pos:end="141:24">ret</name> <operator pos:start="141:26" pos:end="141:26">=</operator> <call pos:start="141:28" pos:end="141:49"><name pos:start="141:28" pos:end="141:46">ff_mjpeg_decode_sof</name><argument_list pos:start="141:47" pos:end="141:49">(<argument pos:start="141:48" pos:end="141:48"><expr pos:start="141:48" pos:end="141:48"><name pos:start="141:48" pos:end="141:48">s</name></expr></argument>)</argument_list></call><operator pos:start="141:50" pos:end="141:50">)</operator> <operator pos:start="141:52" pos:end="141:52">&lt;</operator> <literal type="number" pos:start="141:54" pos:end="141:54">0</literal></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:31"><block_content pos:start="143:21" pos:end="143:31">

                    <return pos:start="143:21" pos:end="143:31">return <expr pos:start="143:28" pos:end="143:30"><name pos:start="143:28" pos:end="143:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="145:17" pos:end="145:22">break;</break>

            <case pos:start="147:13" pos:end="147:22">case <expr pos:start="147:18" pos:end="147:21"><name pos:start="147:18" pos:end="147:21">SOF2</name></expr>:</case>

                <expr_stmt pos:start="149:17" pos:end="149:35"><expr pos:start="149:17" pos:end="149:34"><name pos:start="149:17" pos:end="149:27"><name pos:start="149:17" pos:end="149:17">s</name><operator pos:start="149:18" pos:end="149:19">-&gt;</operator><name pos:start="149:20" pos:end="149:27">lossless</name></name>    <operator pos:start="149:32" pos:end="149:32">=</operator> <literal type="number" pos:start="149:34" pos:end="149:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:35"><expr pos:start="151:17" pos:end="151:34"><name pos:start="151:17" pos:end="151:21"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:21">ls</name></name>          <operator pos:start="151:32" pos:end="151:32">=</operator> <literal type="number" pos:start="151:34" pos:end="151:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:35"><expr pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:30"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:30">progressive</name></name> <operator pos:start="153:32" pos:end="153:32">=</operator> <literal type="number" pos:start="153:34" pos:end="153:34">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="157:31"><if pos:start="155:17" pos:end="157:31">if <condition pos:start="155:20" pos:end="155:55">(<expr pos:start="155:21" pos:end="155:54"><operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:24">ret</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:49"><name pos:start="155:28" pos:end="155:46">ff_mjpeg_decode_sof</name><argument_list pos:start="155:47" pos:end="155:49">(<argument pos:start="155:48" pos:end="155:48"><expr pos:start="155:48" pos:end="155:48"><name pos:start="155:48" pos:end="155:48">s</name></expr></argument>)</argument_list></call><operator pos:start="155:50" pos:end="155:50">)</operator> <operator pos:start="155:52" pos:end="155:52">&lt;</operator> <literal type="number" pos:start="155:54" pos:end="155:54">0</literal></expr>)</condition><block type="pseudo" pos:start="157:21" pos:end="157:31"><block_content pos:start="157:21" pos:end="157:31">

                    <return pos:start="157:21" pos:end="157:31">return <expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            <case pos:start="161:13" pos:end="161:22">case <expr pos:start="161:18" pos:end="161:21"><name pos:start="161:18" pos:end="161:21">SOF3</name></expr>:</case>

                <expr_stmt pos:start="163:17" pos:end="163:35"><expr pos:start="163:17" pos:end="163:34"><name pos:start="163:17" pos:end="163:27"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">lossless</name></name>    <operator pos:start="163:32" pos:end="163:32">=</operator> <literal type="number" pos:start="163:34" pos:end="163:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:35"><expr pos:start="165:17" pos:end="165:34"><name pos:start="165:17" pos:end="165:21"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:21">ls</name></name>          <operator pos:start="165:32" pos:end="165:32">=</operator> <literal type="number" pos:start="165:34" pos:end="165:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:35"><expr pos:start="167:17" pos:end="167:34"><name pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:30">progressive</name></name> <operator pos:start="167:32" pos:end="167:32">=</operator> <literal type="number" pos:start="167:34" pos:end="167:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="169:17" pos:end="171:31"><if pos:start="169:17" pos:end="171:31">if <condition pos:start="169:20" pos:end="169:55">(<expr pos:start="169:21" pos:end="169:54"><operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:24">ret</name> <operator pos:start="169:26" pos:end="169:26">=</operator> <call pos:start="169:28" pos:end="169:49"><name pos:start="169:28" pos:end="169:46">ff_mjpeg_decode_sof</name><argument_list pos:start="169:47" pos:end="169:49">(<argument pos:start="169:48" pos:end="169:48"><expr pos:start="169:48" pos:end="169:48"><name pos:start="169:48" pos:end="169:48">s</name></expr></argument>)</argument_list></call><operator pos:start="169:50" pos:end="169:50">)</operator> <operator pos:start="169:52" pos:end="169:52">&lt;</operator> <literal type="number" pos:start="169:54" pos:end="169:54">0</literal></expr>)</condition><block type="pseudo" pos:start="171:21" pos:end="171:31"><block_content pos:start="171:21" pos:end="171:31">

                    <return pos:start="171:21" pos:end="171:31">return <expr pos:start="171:28" pos:end="171:30"><name pos:start="171:28" pos:end="171:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="173:17" pos:end="173:22">break;</break>

            <case pos:start="175:13" pos:end="175:23">case <expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:22">SOF48</name></expr>:</case>

                <expr_stmt pos:start="177:17" pos:end="177:35"><expr pos:start="177:17" pos:end="177:34"><name pos:start="177:17" pos:end="177:27"><name pos:start="177:17" pos:end="177:17">s</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:27">lossless</name></name>    <operator pos:start="177:32" pos:end="177:32">=</operator> <literal type="number" pos:start="177:34" pos:end="177:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="179:17" pos:end="179:35"><expr pos:start="179:17" pos:end="179:34"><name pos:start="179:17" pos:end="179:21"><name pos:start="179:17" pos:end="179:17">s</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:21">ls</name></name>          <operator pos:start="179:32" pos:end="179:32">=</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="181:17" pos:end="181:35"><expr pos:start="181:17" pos:end="181:34"><name pos:start="181:17" pos:end="181:30"><name pos:start="181:17" pos:end="181:17">s</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:30">progressive</name></name> <operator pos:start="181:32" pos:end="181:32">=</operator> <literal type="number" pos:start="181:34" pos:end="181:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="183:17" pos:end="185:31"><if pos:start="183:17" pos:end="185:31">if <condition pos:start="183:20" pos:end="183:55">(<expr pos:start="183:21" pos:end="183:54"><operator pos:start="183:21" pos:end="183:21">(</operator><name pos:start="183:22" pos:end="183:24">ret</name> <operator pos:start="183:26" pos:end="183:26">=</operator> <call pos:start="183:28" pos:end="183:49"><name pos:start="183:28" pos:end="183:46">ff_mjpeg_decode_sof</name><argument_list pos:start="183:47" pos:end="183:49">(<argument pos:start="183:48" pos:end="183:48"><expr pos:start="183:48" pos:end="183:48"><name pos:start="183:48" pos:end="183:48">s</name></expr></argument>)</argument_list></call><operator pos:start="183:50" pos:end="183:50">)</operator> <operator pos:start="183:52" pos:end="183:52">&lt;</operator> <literal type="number" pos:start="183:54" pos:end="183:54">0</literal></expr>)</condition><block type="pseudo" pos:start="185:21" pos:end="185:31"><block_content pos:start="185:21" pos:end="185:31">

                    <return pos:start="185:21" pos:end="185:31">return <expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="187:17" pos:end="187:22">break;</break>

            <case pos:start="189:13" pos:end="189:21">case <expr pos:start="189:18" pos:end="189:20"><name pos:start="189:18" pos:end="189:20">LSE</name></expr>:</case>

                <if_stmt pos:start="191:17" pos:end="195:31"><if pos:start="191:17" pos:end="195:31">if <condition pos:start="191:20" pos:end="193:56">(<expr pos:start="191:21" pos:end="193:55"><operator pos:start="191:21" pos:end="191:21">!</operator><name pos:start="191:22" pos:end="191:42">CONFIG_JPEGLS_DECODER</name> <operator pos:start="191:44" pos:end="191:45">||</operator>

                    <operator pos:start="193:21" pos:end="193:21">(</operator><name pos:start="193:22" pos:end="193:24">ret</name> <operator pos:start="193:26" pos:end="193:26">=</operator> <call pos:start="193:28" pos:end="193:50"><name pos:start="193:28" pos:end="193:47">ff_jpegls_decode_lse</name><argument_list pos:start="193:48" pos:end="193:50">(<argument pos:start="193:49" pos:end="193:49"><expr pos:start="193:49" pos:end="193:49"><name pos:start="193:49" pos:end="193:49">s</name></expr></argument>)</argument_list></call><operator pos:start="193:51" pos:end="193:51">)</operator> <operator pos:start="193:53" pos:end="193:53">&lt;</operator> <literal type="number" pos:start="193:55" pos:end="193:55">0</literal></expr>)</condition><block type="pseudo" pos:start="195:21" pos:end="195:31"><block_content pos:start="195:21" pos:end="195:31">

                    <return pos:start="195:21" pos:end="195:31">return <expr pos:start="195:28" pos:end="195:30"><name pos:start="195:28" pos:end="195:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="197:17" pos:end="197:22">break;</break>

            <case pos:start="199:13" pos:end="199:21">case <expr pos:start="199:18" pos:end="199:20"><name pos:start="199:18" pos:end="199:20">EOI</name></expr>:</case>

<label pos:start="201:1" pos:end="201:11"><name pos:start="201:1" pos:end="201:10">eoi_parser</name>:</label>

                <expr_stmt pos:start="203:17" pos:end="203:32"><expr pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:27"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:27">cur_scan</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <literal type="number" pos:start="203:31" pos:end="203:31">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="205:17" pos:end="213:17"><if pos:start="205:17" pos:end="213:17">if <condition pos:start="205:20" pos:end="205:36">(<expr pos:start="205:21" pos:end="205:35"><operator pos:start="205:21" pos:end="205:21">!</operator><name pos:start="205:22" pos:end="205:35"><name pos:start="205:22" pos:end="205:22">s</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:35">got_picture</name></name></expr>)</condition> <block pos:start="205:38" pos:end="213:17">{<block_content pos:start="207:21" pos:end="211:26">

                    <expr_stmt pos:start="207:21" pos:end="209:67"><expr pos:start="207:21" pos:end="209:66"><call pos:start="207:21" pos:end="209:66"><name pos:start="207:21" pos:end="207:26">av_log</name><argument_list pos:start="207:27" pos:end="209:66">(<argument pos:start="207:28" pos:end="207:32"><expr pos:start="207:28" pos:end="207:32"><name pos:start="207:28" pos:end="207:32">avctx</name></expr></argument>, <argument pos:start="207:35" pos:end="207:48"><expr pos:start="207:35" pos:end="207:48"><name pos:start="207:35" pos:end="207:48">AV_LOG_WARNING</name></expr></argument>,

                           <argument pos:start="209:28" pos:end="209:65"><expr pos:start="209:28" pos:end="209:65"><literal type="string" pos:start="209:28" pos:end="209:65">"Found EOI before any SOF, ignoring\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="211:21" pos:end="211:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="215:17" pos:end="225:17"><if pos:start="215:17" pos:end="225:17">if <condition pos:start="215:20" pos:end="215:34">(<expr pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:33"><name pos:start="215:21" pos:end="215:21">s</name><operator pos:start="215:22" pos:end="215:23">-&gt;</operator><name pos:start="215:24" pos:end="215:33">interlaced</name></name></expr>)</condition> <block pos:start="215:36" pos:end="225:17">{<block_content pos:start="217:21" pos:end="223:30">

                    <expr_stmt pos:start="217:21" pos:end="217:41"><expr pos:start="217:21" pos:end="217:40"><name pos:start="217:21" pos:end="217:35"><name pos:start="217:21" pos:end="217:21">s</name><operator pos:start="217:22" pos:end="217:23">-&gt;</operator><name pos:start="217:24" pos:end="217:35">bottom_field</name></name> <operator pos:start="217:37" pos:end="217:38">^=</operator> <literal type="number" pos:start="217:40" pos:end="217:40">1</literal></expr>;</expr_stmt>

                    <comment type="block" pos:start="219:21" pos:end="219:70">/* if not bottom field, do not output image yet */</comment>

                    <if_stmt pos:start="221:21" pos:end="223:30"><if pos:start="221:21" pos:end="223:30">if <condition pos:start="221:24" pos:end="221:66">(<expr pos:start="221:25" pos:end="221:65"><name pos:start="221:25" pos:end="221:39"><name pos:start="221:25" pos:end="221:25">s</name><operator pos:start="221:26" pos:end="221:27">-&gt;</operator><name pos:start="221:28" pos:end="221:39">bottom_field</name></name> <operator pos:start="221:41" pos:end="221:42">==</operator> <operator pos:start="221:44" pos:end="221:44">!</operator><name pos:start="221:45" pos:end="221:65"><name pos:start="221:45" pos:end="221:45">s</name><operator pos:start="221:46" pos:end="221:47">-&gt;</operator><name pos:start="221:48" pos:end="221:65">interlace_polarity</name></name></expr>)</condition><block type="pseudo" pos:start="223:25" pos:end="223:30"><block_content pos:start="223:25" pos:end="223:30">

                        <break pos:start="223:25" pos:end="223:30">break;</break></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:49"><expr pos:start="227:21" pos:end="227:48"><operator pos:start="227:21" pos:end="227:21">*</operator><name pos:start="227:22" pos:end="227:28">picture</name>   <operator pos:start="227:32" pos:end="227:32">=</operator> <operator pos:start="227:34" pos:end="227:34">*</operator><name pos:start="227:35" pos:end="227:48"><name pos:start="227:35" pos:end="227:35">s</name><operator pos:start="227:36" pos:end="227:37">-&gt;</operator><name pos:start="227:38" pos:end="227:48">picture_ptr</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:49"><expr pos:start="229:21" pos:end="229:48"><operator pos:start="229:21" pos:end="229:21">*</operator><name pos:start="229:22" pos:end="229:30">data_size</name> <operator pos:start="229:32" pos:end="229:32">=</operator> <sizeof pos:start="229:34" pos:end="229:48">sizeof<argument_list pos:start="229:40" pos:end="229:48">(<argument pos:start="229:41" pos:end="229:47"><expr pos:start="229:41" pos:end="229:47"><name pos:start="229:41" pos:end="229:47">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



                    <if_stmt pos:start="233:21" pos:end="257:21"><if pos:start="233:21" pos:end="257:21">if <condition pos:start="233:24" pos:end="233:37">(<expr pos:start="233:25" pos:end="233:36"><operator pos:start="233:25" pos:end="233:25">!</operator><name pos:start="233:26" pos:end="233:36"><name pos:start="233:26" pos:end="233:26">s</name><operator pos:start="233:27" pos:end="233:28">-&gt;</operator><name pos:start="233:29" pos:end="233:36">lossless</name></name></expr>)</condition> <block pos:start="233:39" pos:end="257:21">{<block_content pos:start="235:25" pos:end="255:57">

                        <expr_stmt pos:start="235:25" pos:end="239:69"><expr pos:start="235:25" pos:end="239:68"><name pos:start="235:25" pos:end="235:40"><name pos:start="235:25" pos:end="235:31">picture</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:40">quality</name></name>      <operator pos:start="235:47" pos:end="235:47">=</operator> <call pos:start="235:49" pos:end="239:68"><name pos:start="235:49" pos:end="235:54">FFMAX3</name><argument_list pos:start="235:55" pos:end="239:68">(<argument pos:start="235:56" pos:end="235:67"><expr pos:start="235:56" pos:end="235:67"><name pos:start="235:56" pos:end="235:67"><name pos:start="235:56" pos:end="235:56">s</name><operator pos:start="235:57" pos:end="235:58">-&gt;</operator><name pos:start="235:59" pos:end="235:64">qscale</name><index pos:start="235:65" pos:end="235:67">[<expr pos:start="235:66" pos:end="235:66"><literal type="number" pos:start="235:66" pos:end="235:66">0</literal></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="237:56" pos:end="237:67"><expr pos:start="237:56" pos:end="237:67"><name pos:start="237:56" pos:end="237:67"><name pos:start="237:56" pos:end="237:56">s</name><operator pos:start="237:57" pos:end="237:58">-&gt;</operator><name pos:start="237:59" pos:end="237:64">qscale</name><index pos:start="237:65" pos:end="237:67">[<expr pos:start="237:66" pos:end="237:66"><literal type="number" pos:start="237:66" pos:end="237:66">1</literal></expr>]</index></name></expr></argument>,

                                                       <argument pos:start="239:56" pos:end="239:67"><expr pos:start="239:56" pos:end="239:67"><name pos:start="239:56" pos:end="239:67"><name pos:start="239:56" pos:end="239:56">s</name><operator pos:start="239:57" pos:end="239:58">-&gt;</operator><name pos:start="239:59" pos:end="239:64">qscale</name><index pos:start="239:65" pos:end="239:67">[<expr pos:start="239:66" pos:end="239:66"><literal type="number" pos:start="239:66" pos:end="239:66">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="241:25" pos:end="241:50"><expr pos:start="241:25" pos:end="241:49"><name pos:start="241:25" pos:end="241:40"><name pos:start="241:25" pos:end="241:31">picture</name><operator pos:start="241:32" pos:end="241:33">-&gt;</operator><name pos:start="241:34" pos:end="241:40">qstride</name></name>      <operator pos:start="241:47" pos:end="241:47">=</operator> <literal type="number" pos:start="241:49" pos:end="241:49">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="243:25" pos:end="243:64"><expr pos:start="243:25" pos:end="243:63"><name pos:start="243:25" pos:end="243:45"><name pos:start="243:25" pos:end="243:31">picture</name><operator pos:start="243:32" pos:end="243:33">-&gt;</operator><name pos:start="243:34" pos:end="243:45">qscale_table</name></name> <operator pos:start="243:47" pos:end="243:47">=</operator> <name pos:start="243:49" pos:end="243:63"><name pos:start="243:49" pos:end="243:49">s</name><operator pos:start="243:50" pos:end="243:51">-&gt;</operator><name pos:start="243:52" pos:end="243:63">qscale_table</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="245:25" pos:end="247:53"><expr pos:start="245:25" pos:end="247:52"><call pos:start="245:25" pos:end="247:52"><name pos:start="245:25" pos:end="245:30">memset</name><argument_list pos:start="245:31" pos:end="247:52">(<argument pos:start="245:32" pos:end="245:52"><expr pos:start="245:32" pos:end="245:52"><name pos:start="245:32" pos:end="245:52"><name pos:start="245:32" pos:end="245:38">picture</name><operator pos:start="245:39" pos:end="245:40">-&gt;</operator><name pos:start="245:41" pos:end="245:52">qscale_table</name></name></expr></argument>, <argument pos:start="245:55" pos:end="245:70"><expr pos:start="245:55" pos:end="245:70"><name pos:start="245:55" pos:end="245:70"><name pos:start="245:55" pos:end="245:61">picture</name><operator pos:start="245:62" pos:end="245:63">-&gt;</operator><name pos:start="245:64" pos:end="245:70">quality</name></name></expr></argument>,

                               <argument pos:start="247:32" pos:end="247:51"><expr pos:start="247:32" pos:end="247:51"><operator pos:start="247:32" pos:end="247:32">(</operator><name pos:start="247:33" pos:end="247:40"><name pos:start="247:33" pos:end="247:33">s</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:40">width</name></name> <operator pos:start="247:42" pos:end="247:42">+</operator> <literal type="number" pos:start="247:44" pos:end="247:45">15</literal><operator pos:start="247:46" pos:end="247:46">)</operator> <operator pos:start="247:48" pos:end="247:48">/</operator> <literal type="number" pos:start="247:50" pos:end="247:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="249:25" pos:end="253:65"><if pos:start="249:25" pos:end="253:65">if <condition pos:start="249:28" pos:end="249:55">(<expr pos:start="249:29" pos:end="249:54"><name pos:start="249:29" pos:end="249:40"><name pos:start="249:29" pos:end="249:33">avctx</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:40">debug</name></name> <operator pos:start="249:42" pos:end="249:42">&amp;</operator> <name pos:start="249:44" pos:end="249:54">FF_DEBUG_QP</name></expr>)</condition><block type="pseudo" pos:start="251:29" pos:end="253:65"><block_content pos:start="251:29" pos:end="253:65">

                            <expr_stmt pos:start="251:29" pos:end="253:65"><expr pos:start="251:29" pos:end="253:64"><call pos:start="251:29" pos:end="253:64"><name pos:start="251:29" pos:end="251:34">av_log</name><argument_list pos:start="251:35" pos:end="253:64">(<argument pos:start="251:36" pos:end="251:40"><expr pos:start="251:36" pos:end="251:40"><name pos:start="251:36" pos:end="251:40">avctx</name></expr></argument>, <argument pos:start="251:43" pos:end="251:54"><expr pos:start="251:43" pos:end="251:54"><name pos:start="251:43" pos:end="251:54">AV_LOG_DEBUG</name></expr></argument>,

                                   <argument pos:start="253:36" pos:end="253:45"><expr pos:start="253:36" pos:end="253:45"><literal type="string" pos:start="253:36" pos:end="253:45">"QP: %d\n"</literal></expr></argument>, <argument pos:start="253:48" pos:end="253:63"><expr pos:start="253:48" pos:end="253:63"><name pos:start="253:48" pos:end="253:63"><name pos:start="253:48" pos:end="253:54">picture</name><operator pos:start="253:55" pos:end="253:56">-&gt;</operator><name pos:start="253:57" pos:end="253:63">quality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="255:25" pos:end="255:57"><expr pos:start="255:25" pos:end="255:56"><name pos:start="255:25" pos:end="255:40"><name pos:start="255:25" pos:end="255:31">picture</name><operator pos:start="255:32" pos:end="255:33">-&gt;</operator><name pos:start="255:34" pos:end="255:40">quality</name></name> <operator pos:start="255:42" pos:end="255:43">*=</operator> <name pos:start="255:45" pos:end="255:56">FF_QP2LAMBDA</name></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                <goto pos:start="261:17" pos:end="261:29">goto <name pos:start="261:22" pos:end="261:28">the_end</name>;</goto>

            <case pos:start="263:13" pos:end="263:21">case <expr pos:start="263:18" pos:end="263:20"><name pos:start="263:18" pos:end="263:20">SOS</name></expr>:</case>

                <if_stmt pos:start="265:17" pos:end="269:31"><if pos:start="265:17" pos:end="269:31">if <condition pos:start="265:20" pos:end="267:61">(<expr pos:start="265:21" pos:end="267:60"><operator pos:start="265:21" pos:end="265:21">(</operator><name pos:start="265:22" pos:end="265:24">ret</name> <operator pos:start="265:26" pos:end="265:26">=</operator> <call pos:start="265:28" pos:end="265:61"><name pos:start="265:28" pos:end="265:46">ff_mjpeg_decode_sos</name><argument_list pos:start="265:47" pos:end="265:61">(<argument pos:start="265:48" pos:end="265:48"><expr pos:start="265:48" pos:end="265:48"><name pos:start="265:48" pos:end="265:48">s</name></expr></argument>, <argument pos:start="265:51" pos:end="265:54"><expr pos:start="265:51" pos:end="265:54"><name pos:start="265:51" pos:end="265:54">NULL</name></expr></argument>, <argument pos:start="265:57" pos:end="265:60"><expr pos:start="265:57" pos:end="265:60"><name pos:start="265:57" pos:end="265:60">NULL</name></expr></argument>)</argument_list></call><operator pos:start="265:62" pos:end="265:62">)</operator> <operator pos:start="265:64" pos:end="265:64">&lt;</operator> <literal type="number" pos:start="265:66" pos:end="265:66">0</literal> <operator pos:start="265:68" pos:end="265:69">&amp;&amp;</operator>

                    <operator pos:start="267:21" pos:end="267:21">(</operator><name pos:start="267:22" pos:end="267:43"><name pos:start="267:22" pos:end="267:26">avctx</name><operator pos:start="267:27" pos:end="267:28">-&gt;</operator><name pos:start="267:29" pos:end="267:43">err_recognition</name></name> <operator pos:start="267:45" pos:end="267:45">&amp;</operator> <name pos:start="267:47" pos:end="267:59">AV_EF_EXPLODE</name><operator pos:start="267:60" pos:end="267:60">)</operator></expr>)</condition><block type="pseudo" pos:start="269:21" pos:end="269:31"><block_content pos:start="269:21" pos:end="269:31">

                    <return pos:start="269:21" pos:end="269:31">return <expr pos:start="269:28" pos:end="269:30"><name pos:start="269:28" pos:end="269:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="271:17" pos:end="271:22">break;</break>

            <case pos:start="273:13" pos:end="273:21">case <expr pos:start="273:18" pos:end="273:20"><name pos:start="273:18" pos:end="273:20">DRI</name></expr>:</case>

                <expr_stmt pos:start="275:17" pos:end="275:36"><expr pos:start="275:17" pos:end="275:35"><call pos:start="275:17" pos:end="275:35"><name pos:start="275:17" pos:end="275:32">mjpeg_decode_dri</name><argument_list pos:start="275:33" pos:end="275:35">(<argument pos:start="275:34" pos:end="275:34"><expr pos:start="275:34" pos:end="275:34"><name pos:start="275:34" pos:end="275:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="277:17" pos:end="277:22">break;</break>

            <case pos:start="279:13" pos:end="279:22">case <expr pos:start="279:18" pos:end="279:21"><name pos:start="279:18" pos:end="279:21">SOF5</name></expr>:</case>

            <case pos:start="281:13" pos:end="281:22">case <expr pos:start="281:18" pos:end="281:21"><name pos:start="281:18" pos:end="281:21">SOF6</name></expr>:</case>

            <case pos:start="283:13" pos:end="283:22">case <expr pos:start="283:18" pos:end="283:21"><name pos:start="283:18" pos:end="283:21">SOF7</name></expr>:</case>

            <case pos:start="285:13" pos:end="285:22">case <expr pos:start="285:18" pos:end="285:21"><name pos:start="285:18" pos:end="285:21">SOF9</name></expr>:</case>

            <case pos:start="287:13" pos:end="287:23">case <expr pos:start="287:18" pos:end="287:22"><name pos:start="287:18" pos:end="287:22">SOF10</name></expr>:</case>

            <case pos:start="289:13" pos:end="289:23">case <expr pos:start="289:18" pos:end="289:22"><name pos:start="289:18" pos:end="289:22">SOF11</name></expr>:</case>

            <case pos:start="291:13" pos:end="291:23">case <expr pos:start="291:18" pos:end="291:22"><name pos:start="291:18" pos:end="291:22">SOF13</name></expr>:</case>

            <case pos:start="293:13" pos:end="293:23">case <expr pos:start="293:18" pos:end="293:22"><name pos:start="293:18" pos:end="293:22">SOF14</name></expr>:</case>

            <case pos:start="295:13" pos:end="295:23">case <expr pos:start="295:18" pos:end="295:22"><name pos:start="295:18" pos:end="295:22">SOF15</name></expr>:</case>

            <case pos:start="297:13" pos:end="297:21">case <expr pos:start="297:18" pos:end="297:20"><name pos:start="297:18" pos:end="297:20">JPG</name></expr>:</case>

                <expr_stmt pos:start="299:17" pos:end="301:76"><expr pos:start="299:17" pos:end="301:75"><call pos:start="299:17" pos:end="301:75"><name pos:start="299:17" pos:end="299:22">av_log</name><argument_list pos:start="299:23" pos:end="301:75">(<argument pos:start="299:24" pos:end="299:28"><expr pos:start="299:24" pos:end="299:28"><name pos:start="299:24" pos:end="299:28">avctx</name></expr></argument>, <argument pos:start="299:31" pos:end="299:42"><expr pos:start="299:31" pos:end="299:42"><name pos:start="299:31" pos:end="299:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="301:24" pos:end="301:62"><expr pos:start="301:24" pos:end="301:62"><literal type="string" pos:start="301:24" pos:end="301:62">"mjpeg: unsupported coding type (%x)\n"</literal></expr></argument>, <argument pos:start="301:65" pos:end="301:74"><expr pos:start="301:65" pos:end="301:74"><name pos:start="301:65" pos:end="301:74">start_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="303:17" pos:end="303:22">break;</break>

            </block_content>}</block></switch>



            <comment type="block" pos:start="309:13" pos:end="309:40">/* eof process start code */</comment>

            <expr_stmt pos:start="311:13" pos:end="311:56"><expr pos:start="311:13" pos:end="311:55"><name pos:start="311:13" pos:end="311:19">buf_ptr</name> <operator pos:start="311:21" pos:end="311:22">+=</operator> <operator pos:start="311:24" pos:end="311:24">(</operator><call pos:start="311:25" pos:end="311:46"><name pos:start="311:25" pos:end="311:38">get_bits_count</name><argument_list pos:start="311:39" pos:end="311:46">(<argument pos:start="311:40" pos:end="311:45"><expr pos:start="311:40" pos:end="311:45"><operator pos:start="311:40" pos:end="311:40">&amp;</operator><name pos:start="311:41" pos:end="311:45"><name pos:start="311:41" pos:end="311:41">s</name><operator pos:start="311:42" pos:end="311:43">-&gt;</operator><name pos:start="311:44" pos:end="311:45">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="311:48" pos:end="311:48">+</operator> <literal type="number" pos:start="311:50" pos:end="311:50">7</literal><operator pos:start="311:51" pos:end="311:51">)</operator> <operator pos:start="311:53" pos:end="311:53">/</operator> <literal type="number" pos:start="311:55" pos:end="311:55">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="317:77"><expr pos:start="313:13" pos:end="317:76"><call pos:start="313:13" pos:end="317:76"><name pos:start="313:13" pos:end="313:18">av_log</name><argument_list pos:start="313:19" pos:end="317:76">(<argument pos:start="313:20" pos:end="313:24"><expr pos:start="313:20" pos:end="313:24"><name pos:start="313:20" pos:end="313:24">avctx</name></expr></argument>, <argument pos:start="313:27" pos:end="313:38"><expr pos:start="313:27" pos:end="313:38"><name pos:start="313:27" pos:end="313:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="315:20" pos:end="315:60"><expr pos:start="315:20" pos:end="315:60"><literal type="string" pos:start="315:20" pos:end="315:60">"marker parser used %d bytes (%d bits)\n"</literal></expr></argument>,

                   <argument pos:start="317:20" pos:end="317:51"><expr pos:start="317:20" pos:end="317:51"><operator pos:start="317:20" pos:end="317:20">(</operator><call pos:start="317:21" pos:end="317:42"><name pos:start="317:21" pos:end="317:34">get_bits_count</name><argument_list pos:start="317:35" pos:end="317:42">(<argument pos:start="317:36" pos:end="317:41"><expr pos:start="317:36" pos:end="317:41"><operator pos:start="317:36" pos:end="317:36">&amp;</operator><name pos:start="317:37" pos:end="317:41"><name pos:start="317:37" pos:end="317:37">s</name><operator pos:start="317:38" pos:end="317:39">-&gt;</operator><name pos:start="317:40" pos:end="317:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="317:44" pos:end="317:44">+</operator> <literal type="number" pos:start="317:46" pos:end="317:46">7</literal><operator pos:start="317:47" pos:end="317:47">)</operator> <operator pos:start="317:49" pos:end="317:49">/</operator> <literal type="number" pos:start="317:51" pos:end="317:51">8</literal></expr></argument>, <argument pos:start="317:54" pos:end="317:75"><expr pos:start="317:54" pos:end="317:75"><call pos:start="317:54" pos:end="317:75"><name pos:start="317:54" pos:end="317:67">get_bits_count</name><argument_list pos:start="317:68" pos:end="317:75">(<argument pos:start="317:69" pos:end="317:74"><expr pos:start="317:69" pos:end="317:74"><operator pos:start="317:69" pos:end="317:69">&amp;</operator><name pos:start="317:70" pos:end="317:74"><name pos:start="317:70" pos:end="317:70">s</name><operator pos:start="317:71" pos:end="317:72">-&gt;</operator><name pos:start="317:73" pos:end="317:74">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="323:5" pos:end="329:5"><if pos:start="323:5" pos:end="329:5">if <condition pos:start="323:8" pos:end="323:23">(<expr pos:start="323:9" pos:end="323:22"><name pos:start="323:9" pos:end="323:22"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:22">got_picture</name></name></expr>)</condition> <block pos:start="323:25" pos:end="329:5">{<block_content pos:start="325:9" pos:end="327:24">

        <expr_stmt pos:start="325:9" pos:end="325:66"><expr pos:start="325:9" pos:end="325:65"><call pos:start="325:9" pos:end="325:65"><name pos:start="325:9" pos:end="325:14">av_log</name><argument_list pos:start="325:15" pos:end="325:65">(<argument pos:start="325:16" pos:end="325:20"><expr pos:start="325:16" pos:end="325:20"><name pos:start="325:16" pos:end="325:20">avctx</name></expr></argument>, <argument pos:start="325:23" pos:end="325:36"><expr pos:start="325:23" pos:end="325:36"><name pos:start="325:23" pos:end="325:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="325:39" pos:end="325:64"><expr pos:start="325:39" pos:end="325:64"><literal type="string" pos:start="325:39" pos:end="325:64">"EOI missing, emulating\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="327:9" pos:end="327:24">goto <name pos:start="327:14" pos:end="327:23">eoi_parser</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:65"><expr pos:start="331:5" pos:end="331:64"><call pos:start="331:5" pos:end="331:64"><name pos:start="331:5" pos:end="331:10">av_log</name><argument_list pos:start="331:11" pos:end="331:64">(<argument pos:start="331:12" pos:end="331:16"><expr pos:start="331:12" pos:end="331:16"><name pos:start="331:12" pos:end="331:16">avctx</name></expr></argument>, <argument pos:start="331:19" pos:end="331:30"><expr pos:start="331:19" pos:end="331:30"><name pos:start="331:19" pos:end="331:30">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="331:33" pos:end="331:63"><expr pos:start="331:33" pos:end="331:63"><literal type="string" pos:start="331:33" pos:end="331:63">"No JPEG data found in image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="333:5" pos:end="333:31">return <expr pos:start="333:12" pos:end="333:30"><name pos:start="333:12" pos:end="333:30">AVERROR_INVALIDDATA</name></expr>;</return>

<label pos:start="335:1" pos:end="335:8"><name pos:start="335:1" pos:end="335:7">the_end</name>:</label>

    <if_stmt pos:start="337:5" pos:end="359:5"><if pos:start="337:5" pos:end="359:5">if <condition pos:start="337:8" pos:end="337:21">(<expr pos:start="337:9" pos:end="337:20"><name pos:start="337:9" pos:end="337:20"><name pos:start="337:9" pos:end="337:9">s</name><operator pos:start="337:10" pos:end="337:11">-&gt;</operator><name pos:start="337:12" pos:end="337:20">upscale_h</name></name></expr>)</condition> <block pos:start="337:23" pos:end="359:5">{<block_content pos:start="339:9" pos:end="357:9">

        <decl_stmt pos:start="339:9" pos:end="339:59"><decl pos:start="339:9" pos:end="339:58"><type pos:start="339:9" pos:end="339:17"><name pos:start="339:9" pos:end="339:15">uint8_t</name> <modifier pos:start="339:17" pos:end="339:17">*</modifier></type><name pos:start="339:18" pos:end="339:21">line</name> <init pos:start="339:23" pos:end="339:58">= <expr pos:start="339:25" pos:end="339:58"><name pos:start="339:25" pos:end="339:58"><name pos:start="339:25" pos:end="339:25">s</name><operator pos:start="339:26" pos:end="339:27">-&gt;</operator><name pos:start="339:28" pos:end="339:38">picture_ptr</name><operator pos:start="339:39" pos:end="339:40">-&gt;</operator><name pos:start="339:41" pos:end="339:44">data</name><index pos:start="339:45" pos:end="339:58">[<expr pos:start="339:46" pos:end="339:57"><name pos:start="339:46" pos:end="339:57"><name pos:start="339:46" pos:end="339:46">s</name><operator pos:start="339:47" pos:end="339:48">-&gt;</operator><name pos:start="339:49" pos:end="339:57">upscale_h</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="341:9" pos:end="347:57"><expr pos:start="341:9" pos:end="347:56"><call pos:start="341:9" pos:end="347:56"><name pos:start="341:9" pos:end="341:18">av_assert0</name><argument_list pos:start="341:19" pos:end="347:56">(<argument pos:start="341:20" pos:end="347:55"><expr pos:start="341:20" pos:end="347:55"><name pos:start="341:20" pos:end="341:33"><name pos:start="341:20" pos:end="341:24">avctx</name><operator pos:start="341:25" pos:end="341:26">-&gt;</operator><name pos:start="341:27" pos:end="341:33">pix_fmt</name></name> <operator pos:start="341:35" pos:end="341:36">==</operator> <name pos:start="341:38" pos:end="341:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="341:58" pos:end="341:59">||</operator>

                   <name pos:start="343:20" pos:end="343:33"><name pos:start="343:20" pos:end="343:24">avctx</name><operator pos:start="343:25" pos:end="343:26">-&gt;</operator><name pos:start="343:27" pos:end="343:33">pix_fmt</name></name> <operator pos:start="343:35" pos:end="343:36">==</operator> <name pos:start="343:38" pos:end="343:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="343:58" pos:end="343:59">||</operator>

                   <name pos:start="345:20" pos:end="345:33"><name pos:start="345:20" pos:end="345:24">avctx</name><operator pos:start="345:25" pos:end="345:26">-&gt;</operator><name pos:start="345:27" pos:end="345:33">pix_fmt</name></name> <operator pos:start="345:35" pos:end="345:36">==</operator> <name pos:start="345:38" pos:end="345:56">AV_PIX_FMT_YUVJ440P</name> <operator pos:start="345:58" pos:end="345:59">||</operator>

                   <name pos:start="347:20" pos:end="347:33"><name pos:start="347:20" pos:end="347:24">avctx</name><operator pos:start="347:25" pos:end="347:26">-&gt;</operator><name pos:start="347:27" pos:end="347:33">pix_fmt</name></name> <operator pos:start="347:35" pos:end="347:36">==</operator> <name pos:start="347:38" pos:end="347:55">AV_PIX_FMT_YUV440P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="349:9" pos:end="357:9">for <control pos:start="349:13" pos:end="349:46">(<init pos:start="349:14" pos:end="349:19"><expr pos:start="349:14" pos:end="349:18"><name pos:start="349:14" pos:end="349:14">i</name> <operator pos:start="349:16" pos:end="349:16">=</operator> <literal type="number" pos:start="349:18" pos:end="349:18">0</literal></expr>;</init> <condition pos:start="349:21" pos:end="349:41"><expr pos:start="349:21" pos:end="349:40"><name pos:start="349:21" pos:end="349:21">i</name> <operator pos:start="349:23" pos:end="349:23">&lt;</operator> <name pos:start="349:25" pos:end="349:40"><name pos:start="349:25" pos:end="349:25">s</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:40">chroma_height</name></name></expr>;</condition> <incr pos:start="349:43" pos:end="349:45"><expr pos:start="349:43" pos:end="349:45"><name pos:start="349:43" pos:end="349:43">i</name><operator pos:start="349:44" pos:end="349:45">++</operator></expr></incr>)</control> <block pos:start="349:48" pos:end="357:9">{<block_content pos:start="351:13" pos:end="355:46">

            <for pos:start="351:13" pos:end="353:77">for <control pos:start="351:17" pos:end="351:54">(<init pos:start="351:18" pos:end="351:38"><expr pos:start="351:18" pos:end="351:37"><name pos:start="351:18" pos:end="351:22">index</name> <operator pos:start="351:24" pos:end="351:24">=</operator> <name pos:start="351:26" pos:end="351:33"><name pos:start="351:26" pos:end="351:26">s</name><operator pos:start="351:27" pos:end="351:28">-&gt;</operator><name pos:start="351:29" pos:end="351:33">width</name></name> <operator pos:start="351:35" pos:end="351:35">-</operator> <literal type="number" pos:start="351:37" pos:end="351:37">1</literal></expr>;</init> <condition pos:start="351:40" pos:end="351:45"><expr pos:start="351:40" pos:end="351:44"><name pos:start="351:40" pos:end="351:44">index</name></expr>;</condition> <incr pos:start="351:47" pos:end="351:53"><expr pos:start="351:47" pos:end="351:53"><name pos:start="351:47" pos:end="351:51">index</name><operator pos:start="351:52" pos:end="351:53">--</operator></expr></incr>)</control><block type="pseudo" pos:start="353:17" pos:end="353:77"><block_content pos:start="353:17" pos:end="353:77">

                <expr_stmt pos:start="353:17" pos:end="353:77"><expr pos:start="353:17" pos:end="353:76"><name pos:start="353:17" pos:end="353:27"><name pos:start="353:17" pos:end="353:20">line</name><index pos:start="353:21" pos:end="353:27">[<expr pos:start="353:22" pos:end="353:26"><name pos:start="353:22" pos:end="353:26">index</name></expr>]</index></name> <operator pos:start="353:29" pos:end="353:29">=</operator> <operator pos:start="353:31" pos:end="353:31">(</operator><name pos:start="353:32" pos:end="353:46"><name pos:start="353:32" pos:end="353:35">line</name><index pos:start="353:36" pos:end="353:46">[<expr pos:start="353:37" pos:end="353:45"><name pos:start="353:37" pos:end="353:41">index</name> <operator pos:start="353:43" pos:end="353:43">/</operator> <literal type="number" pos:start="353:45" pos:end="353:45">2</literal></expr>]</index></name> <operator pos:start="353:48" pos:end="353:48">+</operator> <name pos:start="353:50" pos:end="353:70"><name pos:start="353:50" pos:end="353:53">line</name><index pos:start="353:54" pos:end="353:70">[<expr pos:start="353:55" pos:end="353:69"><operator pos:start="353:55" pos:end="353:55">(</operator><name pos:start="353:56" pos:end="353:60">index</name> <operator pos:start="353:62" pos:end="353:62">+</operator> <literal type="number" pos:start="353:64" pos:end="353:64">1</literal><operator pos:start="353:65" pos:end="353:65">)</operator> <operator pos:start="353:67" pos:end="353:67">/</operator> <literal type="number" pos:start="353:69" pos:end="353:69">2</literal></expr>]</index></name><operator pos:start="353:71" pos:end="353:71">)</operator> <operator pos:start="353:73" pos:end="353:74">&gt;&gt;</operator> <literal type="number" pos:start="353:76" pos:end="353:76">1</literal></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="355:13" pos:end="355:46"><expr pos:start="355:13" pos:end="355:45"><name pos:start="355:13" pos:end="355:16">line</name> <operator pos:start="355:18" pos:end="355:19">+=</operator> <name pos:start="355:21" pos:end="355:45"><name pos:start="355:21" pos:end="355:21">s</name><operator pos:start="355:22" pos:end="355:23">-&gt;</operator><name pos:start="355:24" pos:end="355:31">linesize</name><index pos:start="355:32" pos:end="355:45">[<expr pos:start="355:33" pos:end="355:44"><name pos:start="355:33" pos:end="355:44"><name pos:start="355:33" pos:end="355:33">s</name><operator pos:start="355:34" pos:end="355:35">-&gt;</operator><name pos:start="355:36" pos:end="355:44">upscale_h</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="361:5" pos:end="395:5"><if pos:start="361:5" pos:end="395:5">if <condition pos:start="361:8" pos:end="361:21">(<expr pos:start="361:9" pos:end="361:20"><name pos:start="361:9" pos:end="361:20"><name pos:start="361:9" pos:end="361:9">s</name><operator pos:start="361:10" pos:end="361:11">-&gt;</operator><name pos:start="361:12" pos:end="361:20">upscale_v</name></name></expr>)</condition> <block pos:start="361:23" pos:end="395:5">{<block_content pos:start="363:9" pos:end="393:9">

        <decl_stmt pos:start="363:9" pos:end="363:117"><decl pos:start="363:9" pos:end="363:116"><type pos:start="363:9" pos:end="363:17"><name pos:start="363:9" pos:end="363:15">uint8_t</name> <modifier pos:start="363:17" pos:end="363:17">*</modifier></type><name pos:start="363:18" pos:end="363:20">dst</name> <init pos:start="363:22" pos:end="363:116">= <expr pos:start="363:24" pos:end="363:116"><operator pos:start="363:24" pos:end="363:24">&amp;</operator><operator pos:start="363:25" pos:end="363:25">(</operator><operator pos:start="363:26" pos:end="363:26">(</operator><name pos:start="363:27" pos:end="363:33">uint8_t</name> <operator pos:start="363:35" pos:end="363:35">*</operator><operator pos:start="363:36" pos:end="363:36">)</operator><name pos:start="363:37" pos:end="363:70"><name pos:start="363:37" pos:end="363:37">s</name><operator pos:start="363:38" pos:end="363:39">-&gt;</operator><name pos:start="363:40" pos:end="363:50">picture_ptr</name><operator pos:start="363:51" pos:end="363:52">-&gt;</operator><name pos:start="363:53" pos:end="363:56">data</name><index pos:start="363:57" pos:end="363:70">[<expr pos:start="363:58" pos:end="363:69"><name pos:start="363:58" pos:end="363:69"><name pos:start="363:58" pos:end="363:58">s</name><operator pos:start="363:59" pos:end="363:60">-&gt;</operator><name pos:start="363:61" pos:end="363:69">upscale_v</name></name></expr>]</index></name><operator pos:start="363:71" pos:end="363:71">)</operator><index pos:start="363:72" pos:end="363:116">[<expr pos:start="363:73" pos:end="363:115"><operator pos:start="363:73" pos:end="363:73">(</operator><name pos:start="363:74" pos:end="363:82"><name pos:start="363:74" pos:end="363:74">s</name><operator pos:start="363:75" pos:end="363:76">-&gt;</operator><name pos:start="363:77" pos:end="363:82">height</name></name> <operator pos:start="363:84" pos:end="363:84">-</operator> <literal type="number" pos:start="363:86" pos:end="363:86">1</literal><operator pos:start="363:87" pos:end="363:87">)</operator> <operator pos:start="363:89" pos:end="363:89">*</operator> <name pos:start="363:91" pos:end="363:115"><name pos:start="363:91" pos:end="363:91">s</name><operator pos:start="363:92" pos:end="363:93">-&gt;</operator><name pos:start="363:94" pos:end="363:101">linesize</name><index pos:start="363:102" pos:end="363:115">[<expr pos:start="363:103" pos:end="363:114"><name pos:start="363:103" pos:end="363:114"><name pos:start="363:103" pos:end="363:103">s</name><operator pos:start="363:104" pos:end="363:105">-&gt;</operator><name pos:start="363:106" pos:end="363:114">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="365:9" pos:end="371:57"><expr pos:start="365:9" pos:end="371:56"><call pos:start="365:9" pos:end="371:56"><name pos:start="365:9" pos:end="365:18">av_assert0</name><argument_list pos:start="365:19" pos:end="371:56">(<argument pos:start="365:20" pos:end="371:55"><expr pos:start="365:20" pos:end="371:55"><name pos:start="365:20" pos:end="365:33"><name pos:start="365:20" pos:end="365:24">avctx</name><operator pos:start="365:25" pos:end="365:26">-&gt;</operator><name pos:start="365:27" pos:end="365:33">pix_fmt</name></name> <operator pos:start="365:35" pos:end="365:36">==</operator> <name pos:start="365:38" pos:end="365:56">AV_PIX_FMT_YUVJ444P</name> <operator pos:start="365:58" pos:end="365:59">||</operator>

                   <name pos:start="367:20" pos:end="367:33"><name pos:start="367:20" pos:end="367:24">avctx</name><operator pos:start="367:25" pos:end="367:26">-&gt;</operator><name pos:start="367:27" pos:end="367:33">pix_fmt</name></name> <operator pos:start="367:35" pos:end="367:36">==</operator> <name pos:start="367:38" pos:end="367:55">AV_PIX_FMT_YUV444P</name>  <operator pos:start="367:58" pos:end="367:59">||</operator>

                   <name pos:start="369:20" pos:end="369:33"><name pos:start="369:20" pos:end="369:24">avctx</name><operator pos:start="369:25" pos:end="369:26">-&gt;</operator><name pos:start="369:27" pos:end="369:33">pix_fmt</name></name> <operator pos:start="369:35" pos:end="369:36">==</operator> <name pos:start="369:38" pos:end="369:56">AV_PIX_FMT_YUVJ422P</name> <operator pos:start="369:58" pos:end="369:59">||</operator>

                   <name pos:start="371:20" pos:end="371:33"><name pos:start="371:20" pos:end="371:24">avctx</name><operator pos:start="371:25" pos:end="371:26">-&gt;</operator><name pos:start="371:27" pos:end="371:33">pix_fmt</name></name> <operator pos:start="371:35" pos:end="371:36">==</operator> <name pos:start="371:38" pos:end="371:55">AV_PIX_FMT_YUV422P</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="373:9" pos:end="393:9">for <control pos:start="373:13" pos:end="373:39">(<init pos:start="373:14" pos:end="373:31"><expr pos:start="373:14" pos:end="373:30"><name pos:start="373:14" pos:end="373:14">i</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <name pos:start="373:18" pos:end="373:26"><name pos:start="373:18" pos:end="373:18">s</name><operator pos:start="373:19" pos:end="373:20">-&gt;</operator><name pos:start="373:21" pos:end="373:26">height</name></name> <operator pos:start="373:28" pos:end="373:28">-</operator> <literal type="number" pos:start="373:30" pos:end="373:30">1</literal></expr>;</init> <condition pos:start="373:33" pos:end="373:34"><expr pos:start="373:33" pos:end="373:33"><name pos:start="373:33" pos:end="373:33">i</name></expr>;</condition> <incr pos:start="373:36" pos:end="373:38"><expr pos:start="373:36" pos:end="373:38"><name pos:start="373:36" pos:end="373:36">i</name><operator pos:start="373:37" pos:end="373:38">--</operator></expr></incr>)</control> <block pos:start="373:41" pos:end="393:9">{<block_content pos:start="375:13" pos:end="391:45">

            <decl_stmt pos:start="375:13" pos:end="375:112"><decl pos:start="375:13" pos:end="375:111"><type pos:start="375:13" pos:end="375:21"><name pos:start="375:13" pos:end="375:19">uint8_t</name> <modifier pos:start="375:21" pos:end="375:21">*</modifier></type><name pos:start="375:22" pos:end="375:25">src1</name> <init pos:start="375:27" pos:end="375:111">= <expr pos:start="375:29" pos:end="375:111"><operator pos:start="375:29" pos:end="375:29">&amp;</operator><operator pos:start="375:30" pos:end="375:30">(</operator><operator pos:start="375:31" pos:end="375:31">(</operator><name pos:start="375:32" pos:end="375:38">uint8_t</name> <operator pos:start="375:40" pos:end="375:40">*</operator><operator pos:start="375:41" pos:end="375:41">)</operator><name pos:start="375:42" pos:end="375:75"><name pos:start="375:42" pos:end="375:42">s</name><operator pos:start="375:43" pos:end="375:44">-&gt;</operator><name pos:start="375:45" pos:end="375:55">picture_ptr</name><operator pos:start="375:56" pos:end="375:57">-&gt;</operator><name pos:start="375:58" pos:end="375:61">data</name><index pos:start="375:62" pos:end="375:75">[<expr pos:start="375:63" pos:end="375:74"><name pos:start="375:63" pos:end="375:74"><name pos:start="375:63" pos:end="375:63">s</name><operator pos:start="375:64" pos:end="375:65">-&gt;</operator><name pos:start="375:66" pos:end="375:74">upscale_v</name></name></expr>]</index></name><operator pos:start="375:76" pos:end="375:76">)</operator><index pos:start="375:77" pos:end="375:111">[<expr pos:start="375:78" pos:end="375:110"><name pos:start="375:78" pos:end="375:78">i</name> <operator pos:start="375:80" pos:end="375:80">/</operator> <literal type="number" pos:start="375:82" pos:end="375:82">2</literal> <operator pos:start="375:84" pos:end="375:84">*</operator> <name pos:start="375:86" pos:end="375:110"><name pos:start="375:86" pos:end="375:86">s</name><operator pos:start="375:87" pos:end="375:88">-&gt;</operator><name pos:start="375:89" pos:end="375:96">linesize</name><index pos:start="375:97" pos:end="375:110">[<expr pos:start="375:98" pos:end="375:109"><name pos:start="375:98" pos:end="375:109"><name pos:start="375:98" pos:end="375:98">s</name><operator pos:start="375:99" pos:end="375:100">-&gt;</operator><name pos:start="375:101" pos:end="375:109">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="377:13" pos:end="377:118"><decl pos:start="377:13" pos:end="377:117"><type pos:start="377:13" pos:end="377:21"><name pos:start="377:13" pos:end="377:19">uint8_t</name> <modifier pos:start="377:21" pos:end="377:21">*</modifier></type><name pos:start="377:22" pos:end="377:25">src2</name> <init pos:start="377:27" pos:end="377:117">= <expr pos:start="377:29" pos:end="377:117"><operator pos:start="377:29" pos:end="377:29">&amp;</operator><operator pos:start="377:30" pos:end="377:30">(</operator><operator pos:start="377:31" pos:end="377:31">(</operator><name pos:start="377:32" pos:end="377:38">uint8_t</name> <operator pos:start="377:40" pos:end="377:40">*</operator><operator pos:start="377:41" pos:end="377:41">)</operator><name pos:start="377:42" pos:end="377:75"><name pos:start="377:42" pos:end="377:42">s</name><operator pos:start="377:43" pos:end="377:44">-&gt;</operator><name pos:start="377:45" pos:end="377:55">picture_ptr</name><operator pos:start="377:56" pos:end="377:57">-&gt;</operator><name pos:start="377:58" pos:end="377:61">data</name><index pos:start="377:62" pos:end="377:75">[<expr pos:start="377:63" pos:end="377:74"><name pos:start="377:63" pos:end="377:74"><name pos:start="377:63" pos:end="377:63">s</name><operator pos:start="377:64" pos:end="377:65">-&gt;</operator><name pos:start="377:66" pos:end="377:74">upscale_v</name></name></expr>]</index></name><operator pos:start="377:76" pos:end="377:76">)</operator><index pos:start="377:77" pos:end="377:117">[<expr pos:start="377:78" pos:end="377:116"><operator pos:start="377:78" pos:end="377:78">(</operator><name pos:start="377:79" pos:end="377:79">i</name> <operator pos:start="377:81" pos:end="377:81">+</operator> <literal type="number" pos:start="377:83" pos:end="377:83">1</literal><operator pos:start="377:84" pos:end="377:84">)</operator> <operator pos:start="377:86" pos:end="377:86">/</operator> <literal type="number" pos:start="377:88" pos:end="377:88">2</literal> <operator pos:start="377:90" pos:end="377:90">*</operator> <name pos:start="377:92" pos:end="377:116"><name pos:start="377:92" pos:end="377:92">s</name><operator pos:start="377:93" pos:end="377:94">-&gt;</operator><name pos:start="377:95" pos:end="377:102">linesize</name><index pos:start="377:103" pos:end="377:116">[<expr pos:start="377:104" pos:end="377:115"><name pos:start="377:104" pos:end="377:115"><name pos:start="377:104" pos:end="377:104">s</name><operator pos:start="377:105" pos:end="377:106">-&gt;</operator><name pos:start="377:107" pos:end="377:115">upscale_v</name></name></expr>]</index></name></expr>]</index></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="379:13" pos:end="389:13"><if pos:start="379:13" pos:end="383:13">if <condition pos:start="379:16" pos:end="379:29">(<expr pos:start="379:17" pos:end="379:28"><name pos:start="379:17" pos:end="379:20">src1</name> <operator pos:start="379:22" pos:end="379:23">==</operator> <name pos:start="379:25" pos:end="379:28">src2</name></expr>)</condition> <block pos:start="379:31" pos:end="383:13">{<block_content pos:start="381:17" pos:end="381:44">

                <expr_stmt pos:start="381:17" pos:end="381:44"><expr pos:start="381:17" pos:end="381:43"><call pos:start="381:17" pos:end="381:43"><name pos:start="381:17" pos:end="381:22">memcpy</name><argument_list pos:start="381:23" pos:end="381:43">(<argument pos:start="381:24" pos:end="381:26"><expr pos:start="381:24" pos:end="381:26"><name pos:start="381:24" pos:end="381:26">dst</name></expr></argument>, <argument pos:start="381:29" pos:end="381:32"><expr pos:start="381:29" pos:end="381:32"><name pos:start="381:29" pos:end="381:32">src1</name></expr></argument>, <argument pos:start="381:35" pos:end="381:42"><expr pos:start="381:35" pos:end="381:42"><name pos:start="381:35" pos:end="381:42"><name pos:start="381:35" pos:end="381:35">s</name><operator pos:start="381:36" pos:end="381:37">-&gt;</operator><name pos:start="381:38" pos:end="381:42">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="383:15" pos:end="389:13">else <block pos:start="383:20" pos:end="389:13">{<block_content pos:start="385:17" pos:end="387:66">

                <for pos:start="385:17" pos:end="387:66">for <control pos:start="385:21" pos:end="385:58">(<init pos:start="385:22" pos:end="385:31"><expr pos:start="385:22" pos:end="385:30"><name pos:start="385:22" pos:end="385:26">index</name> <operator pos:start="385:28" pos:end="385:28">=</operator> <literal type="number" pos:start="385:30" pos:end="385:30">0</literal></expr>;</init> <condition pos:start="385:33" pos:end="385:49"><expr pos:start="385:33" pos:end="385:48"><name pos:start="385:33" pos:end="385:37">index</name> <operator pos:start="385:39" pos:end="385:39">&lt;</operator> <name pos:start="385:41" pos:end="385:48"><name pos:start="385:41" pos:end="385:41">s</name><operator pos:start="385:42" pos:end="385:43">-&gt;</operator><name pos:start="385:44" pos:end="385:48">width</name></name></expr>;</condition> <incr pos:start="385:51" pos:end="385:57"><expr pos:start="385:51" pos:end="385:57"><name pos:start="385:51" pos:end="385:55">index</name><operator pos:start="385:56" pos:end="385:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="387:21" pos:end="387:66"><block_content pos:start="387:21" pos:end="387:66">

                    <expr_stmt pos:start="387:21" pos:end="387:66"><expr pos:start="387:21" pos:end="387:65"><name pos:start="387:21" pos:end="387:30"><name pos:start="387:21" pos:end="387:23">dst</name><index pos:start="387:24" pos:end="387:30">[<expr pos:start="387:25" pos:end="387:29"><name pos:start="387:25" pos:end="387:29">index</name></expr>]</index></name> <operator pos:start="387:32" pos:end="387:32">=</operator> <operator pos:start="387:34" pos:end="387:34">(</operator><name pos:start="387:35" pos:end="387:45"><name pos:start="387:35" pos:end="387:38">src1</name><index pos:start="387:39" pos:end="387:45">[<expr pos:start="387:40" pos:end="387:44"><name pos:start="387:40" pos:end="387:44">index</name></expr>]</index></name> <operator pos:start="387:47" pos:end="387:47">+</operator> <name pos:start="387:49" pos:end="387:59"><name pos:start="387:49" pos:end="387:52">src2</name><index pos:start="387:53" pos:end="387:59">[<expr pos:start="387:54" pos:end="387:58"><name pos:start="387:54" pos:end="387:58">index</name></expr>]</index></name><operator pos:start="387:60" pos:end="387:60">)</operator> <operator pos:start="387:62" pos:end="387:63">&gt;&gt;</operator> <literal type="number" pos:start="387:65" pos:end="387:65">1</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:45"><expr pos:start="391:13" pos:end="391:44"><name pos:start="391:13" pos:end="391:15">dst</name> <operator pos:start="391:17" pos:end="391:18">-=</operator> <name pos:start="391:20" pos:end="391:44"><name pos:start="391:20" pos:end="391:20">s</name><operator pos:start="391:21" pos:end="391:22">-&gt;</operator><name pos:start="391:23" pos:end="391:30">linesize</name><index pos:start="391:31" pos:end="391:44">[<expr pos:start="391:32" pos:end="391:43"><name pos:start="391:32" pos:end="391:43"><name pos:start="391:32" pos:end="391:32">s</name><operator pos:start="391:33" pos:end="391:34">-&gt;</operator><name pos:start="391:35" pos:end="391:43">upscale_v</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="397:5" pos:end="439:5"><if pos:start="397:5" pos:end="439:5">if <condition pos:start="397:8" pos:end="397:62">(<expr pos:start="397:9" pos:end="397:61"><name pos:start="397:9" pos:end="397:18"><name pos:start="397:9" pos:end="397:9">s</name><operator pos:start="397:10" pos:end="397:11">-&gt;</operator><name pos:start="397:12" pos:end="397:18">flipped</name></name> <operator pos:start="397:20" pos:end="397:21">&amp;&amp;</operator> <operator pos:start="397:23" pos:end="397:23">(</operator><name pos:start="397:24" pos:end="397:38"><name pos:start="397:24" pos:end="397:24">s</name><operator pos:start="397:25" pos:end="397:26">-&gt;</operator><name pos:start="397:27" pos:end="397:31">avctx</name><operator pos:start="397:32" pos:end="397:33">-&gt;</operator><name pos:start="397:34" pos:end="397:38">flags</name></name> <operator pos:start="397:40" pos:end="397:40">&amp;</operator> <name pos:start="397:42" pos:end="397:60">CODEC_FLAG_EMU_EDGE</name><operator pos:start="397:61" pos:end="397:61">)</operator></expr>)</condition> <block pos:start="397:64" pos:end="439:5">{<block_content pos:start="399:9" pos:end="437:9">

        <decl_stmt pos:start="399:9" pos:end="399:30"><decl pos:start="399:9" pos:end="399:18"><type pos:start="399:9" pos:end="399:11"><name pos:start="399:9" pos:end="399:11">int</name></type> <name pos:start="399:13" pos:end="399:18">hshift</name></decl>, <decl pos:start="399:21" pos:end="399:26"><type ref="prev" pos:start="399:9" pos:end="399:11"/><name pos:start="399:21" pos:end="399:26">vshift</name></decl>, <decl pos:start="399:29" pos:end="399:29"><type ref="prev" pos:start="399:9" pos:end="399:11"/><name pos:start="399:29" pos:end="399:29">j</name></decl>;</decl_stmt>

        <expr_stmt pos:start="401:9" pos:end="401:75"><expr pos:start="401:9" pos:end="401:74"><call pos:start="401:9" pos:end="401:74"><name pos:start="401:9" pos:end="401:37">avcodec_get_chroma_sub_sample</name><argument_list pos:start="401:38" pos:end="401:74">(<argument pos:start="401:39" pos:end="401:55"><expr pos:start="401:39" pos:end="401:55"><name pos:start="401:39" pos:end="401:55"><name pos:start="401:39" pos:end="401:39">s</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:46">avctx</name><operator pos:start="401:47" pos:end="401:48">-&gt;</operator><name pos:start="401:49" pos:end="401:55">pix_fmt</name></name></expr></argument>, <argument pos:start="401:58" pos:end="401:64"><expr pos:start="401:58" pos:end="401:64"><operator pos:start="401:58" pos:end="401:58">&amp;</operator><name pos:start="401:59" pos:end="401:64">hshift</name></expr></argument>, <argument pos:start="401:67" pos:end="401:73"><expr pos:start="401:67" pos:end="401:73"><operator pos:start="401:67" pos:end="401:67">&amp;</operator><name pos:start="401:68" pos:end="401:73">vshift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="403:9" pos:end="437:9">for <control pos:start="403:13" pos:end="403:39">(<init pos:start="403:14" pos:end="403:21"><expr pos:start="403:14" pos:end="403:20"><name pos:start="403:14" pos:end="403:18">index</name><operator pos:start="403:19" pos:end="403:19">=</operator><literal type="number" pos:start="403:20" pos:end="403:20">0</literal></expr>;</init> <condition pos:start="403:23" pos:end="403:30"><expr pos:start="403:23" pos:end="403:29"><name pos:start="403:23" pos:end="403:27">index</name><operator pos:start="403:28" pos:end="403:28">&lt;</operator><literal type="number" pos:start="403:29" pos:end="403:29">4</literal></expr>;</condition> <incr pos:start="403:32" pos:end="403:38"><expr pos:start="403:32" pos:end="403:38"><name pos:start="403:32" pos:end="403:36">index</name><operator pos:start="403:37" pos:end="403:38">++</operator></expr></incr>)</control> <block pos:start="403:41" pos:end="437:9">{<block_content pos:start="405:13" pos:end="435:13">

            <decl_stmt pos:start="405:13" pos:end="405:55"><decl pos:start="405:13" pos:end="405:54"><type pos:start="405:13" pos:end="405:21"><name pos:start="405:13" pos:end="405:19">uint8_t</name> <modifier pos:start="405:21" pos:end="405:21">*</modifier></type><name pos:start="405:22" pos:end="405:24">dst</name> <init pos:start="405:26" pos:end="405:54">= <expr pos:start="405:28" pos:end="405:54"><name pos:start="405:28" pos:end="405:54"><name pos:start="405:28" pos:end="405:28">s</name><operator pos:start="405:29" pos:end="405:30">-&gt;</operator><name pos:start="405:31" pos:end="405:41">picture_ptr</name><operator pos:start="405:42" pos:end="405:43">-&gt;</operator><name pos:start="405:44" pos:end="405:47">data</name><index pos:start="405:48" pos:end="405:54">[<expr pos:start="405:49" pos:end="405:53"><name pos:start="405:49" pos:end="405:53">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="407:13" pos:end="407:29"><decl pos:start="407:13" pos:end="407:28"><type pos:start="407:13" pos:end="407:15"><name pos:start="407:13" pos:end="407:15">int</name></type> <name pos:start="407:17" pos:end="407:17">w</name> <init pos:start="407:19" pos:end="407:28">= <expr pos:start="407:21" pos:end="407:28"><name pos:start="407:21" pos:end="407:28"><name pos:start="407:21" pos:end="407:21">s</name><operator pos:start="407:22" pos:end="407:23">-&gt;</operator><name pos:start="407:24" pos:end="407:28">width</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="409:13" pos:end="409:30"><decl pos:start="409:13" pos:end="409:29"><type pos:start="409:13" pos:end="409:15"><name pos:start="409:13" pos:end="409:15">int</name></type> <name pos:start="409:17" pos:end="409:17">h</name> <init pos:start="409:19" pos:end="409:29">= <expr pos:start="409:21" pos:end="409:29"><name pos:start="409:21" pos:end="409:29"><name pos:start="409:21" pos:end="409:21">s</name><operator pos:start="409:22" pos:end="409:23">-&gt;</operator><name pos:start="409:24" pos:end="409:29">height</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="411:13" pos:end="417:13"><if pos:start="411:13" pos:end="417:13">if<condition pos:start="411:15" pos:end="411:32">(<expr pos:start="411:16" pos:end="411:31"><name pos:start="411:16" pos:end="411:20">index</name> <operator pos:start="411:22" pos:end="411:23">&amp;&amp;</operator> <name pos:start="411:25" pos:end="411:29">index</name><operator pos:start="411:30" pos:end="411:30">&lt;</operator><literal type="number" pos:start="411:31" pos:end="411:31">3</literal></expr>)</condition><block pos:start="411:33" pos:end="417:13">{<block_content pos:start="413:17" pos:end="415:38">

                <expr_stmt pos:start="413:17" pos:end="413:38"><expr pos:start="413:17" pos:end="413:37"><name pos:start="413:17" pos:end="413:17">w</name> <operator pos:start="413:19" pos:end="413:19">=</operator> <operator pos:start="413:21" pos:end="413:21">-</operator><operator pos:start="413:22" pos:end="413:22">(</operator><operator pos:start="413:23" pos:end="413:23">(</operator><operator pos:start="413:24" pos:end="413:24">-</operator><name pos:start="413:25" pos:end="413:25">w</name><operator pos:start="413:26" pos:end="413:26">)</operator> <operator pos:start="413:28" pos:end="413:29">&gt;&gt;</operator> <name pos:start="413:31" pos:end="413:36">hshift</name><operator pos:start="413:37" pos:end="413:37">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:38"><expr pos:start="415:17" pos:end="415:37"><name pos:start="415:17" pos:end="415:17">h</name> <operator pos:start="415:19" pos:end="415:19">=</operator> <operator pos:start="415:21" pos:end="415:21">-</operator><operator pos:start="415:22" pos:end="415:22">(</operator><operator pos:start="415:23" pos:end="415:23">(</operator><operator pos:start="415:24" pos:end="415:24">-</operator><name pos:start="415:25" pos:end="415:25">h</name><operator pos:start="415:26" pos:end="415:26">)</operator> <operator pos:start="415:28" pos:end="415:29">&gt;&gt;</operator> <name pos:start="415:31" pos:end="415:36">vshift</name><operator pos:start="415:37" pos:end="415:37">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="419:13" pos:end="435:13"><if pos:start="419:13" pos:end="435:13">if<condition pos:start="419:15" pos:end="419:19">(<expr pos:start="419:16" pos:end="419:18"><name pos:start="419:16" pos:end="419:18">dst</name></expr>)</condition><block pos:start="419:20" pos:end="435:13">{<block_content pos:start="421:17" pos:end="433:17">

                <decl_stmt pos:start="421:17" pos:end="421:63"><decl pos:start="421:17" pos:end="421:62"><type pos:start="421:17" pos:end="421:25"><name pos:start="421:17" pos:end="421:23">uint8_t</name> <modifier pos:start="421:25" pos:end="421:25">*</modifier></type><name pos:start="421:26" pos:end="421:29">dst2</name> <init pos:start="421:31" pos:end="421:62">= <expr pos:start="421:33" pos:end="421:62"><name pos:start="421:33" pos:end="421:35">dst</name> <operator pos:start="421:37" pos:end="421:37">+</operator> <name pos:start="421:39" pos:end="421:56"><name pos:start="421:39" pos:end="421:39">s</name><operator pos:start="421:40" pos:end="421:41">-&gt;</operator><name pos:start="421:42" pos:end="421:49">linesize</name><index pos:start="421:50" pos:end="421:56">[<expr pos:start="421:51" pos:end="421:55"><name pos:start="421:51" pos:end="421:55">index</name></expr>]</index></name><operator pos:start="421:57" pos:end="421:57">*</operator><operator pos:start="421:58" pos:end="421:58">(</operator><name pos:start="421:59" pos:end="421:59">h</name><operator pos:start="421:60" pos:end="421:60">-</operator><literal type="number" pos:start="421:61" pos:end="421:61">1</literal><operator pos:start="421:62" pos:end="421:62">)</operator></expr></init></decl>;</decl_stmt>

                <for pos:start="423:17" pos:end="433:17">for <control pos:start="423:21" pos:end="423:37">(<init pos:start="423:22" pos:end="423:25"><expr pos:start="423:22" pos:end="423:24"><name pos:start="423:22" pos:end="423:22">i</name><operator pos:start="423:23" pos:end="423:23">=</operator><literal type="number" pos:start="423:24" pos:end="423:24">0</literal></expr>;</init> <condition pos:start="423:27" pos:end="423:32"><expr pos:start="423:27" pos:end="423:31"><name pos:start="423:27" pos:end="423:27">i</name><operator pos:start="423:28" pos:end="423:28">&lt;</operator><name pos:start="423:29" pos:end="423:29">h</name><operator pos:start="423:30" pos:end="423:30">/</operator><literal type="number" pos:start="423:31" pos:end="423:31">2</literal></expr>;</condition> <incr pos:start="423:34" pos:end="423:36"><expr pos:start="423:34" pos:end="423:36"><name pos:start="423:34" pos:end="423:34">i</name><operator pos:start="423:35" pos:end="423:36">++</operator></expr></incr>)</control> <block pos:start="423:39" pos:end="433:17">{<block_content pos:start="425:21" pos:end="431:47">

                    <for pos:start="425:21" pos:end="427:53">for <control pos:start="425:25" pos:end="425:39">(<init pos:start="425:26" pos:end="425:29"><expr pos:start="425:26" pos:end="425:28"><name pos:start="425:26" pos:end="425:26">j</name><operator pos:start="425:27" pos:end="425:27">=</operator><literal type="number" pos:start="425:28" pos:end="425:28">0</literal></expr>;</init> <condition pos:start="425:31" pos:end="425:34"><expr pos:start="425:31" pos:end="425:33"><name pos:start="425:31" pos:end="425:31">j</name><operator pos:start="425:32" pos:end="425:32">&lt;</operator><name pos:start="425:33" pos:end="425:33">w</name></expr>;</condition> <incr pos:start="425:36" pos:end="425:38"><expr pos:start="425:36" pos:end="425:38"><name pos:start="425:36" pos:end="425:36">j</name><operator pos:start="425:37" pos:end="425:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="427:25" pos:end="427:53"><block_content pos:start="427:25" pos:end="427:53">

                        <expr_stmt pos:start="427:25" pos:end="427:53"><expr pos:start="427:25" pos:end="427:52"><call pos:start="427:25" pos:end="427:52"><name pos:start="427:25" pos:end="427:30">FFSWAP</name><argument_list pos:start="427:31" pos:end="427:52">(<argument pos:start="427:32" pos:end="427:34"><expr pos:start="427:32" pos:end="427:34"><name pos:start="427:32" pos:end="427:34">int</name></expr></argument>, <argument pos:start="427:37" pos:end="427:42"><expr pos:start="427:37" pos:end="427:42"><name pos:start="427:37" pos:end="427:42"><name pos:start="427:37" pos:end="427:39">dst</name><index pos:start="427:40" pos:end="427:42">[<expr pos:start="427:41" pos:end="427:41"><name pos:start="427:41" pos:end="427:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="427:45" pos:end="427:51"><expr pos:start="427:45" pos:end="427:51"><name pos:start="427:45" pos:end="427:51"><name pos:start="427:45" pos:end="427:48">dst2</name><index pos:start="427:49" pos:end="427:51">[<expr pos:start="427:50" pos:end="427:50"><name pos:start="427:50" pos:end="427:50">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="429:21" pos:end="429:47"><expr pos:start="429:21" pos:end="429:46"><name pos:start="429:21" pos:end="429:23">dst</name>  <operator pos:start="429:26" pos:end="429:27">+=</operator> <name pos:start="429:29" pos:end="429:46"><name pos:start="429:29" pos:end="429:29">s</name><operator pos:start="429:30" pos:end="429:31">-&gt;</operator><name pos:start="429:32" pos:end="429:39">linesize</name><index pos:start="429:40" pos:end="429:46">[<expr pos:start="429:41" pos:end="429:45"><name pos:start="429:41" pos:end="429:45">index</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="431:21" pos:end="431:47"><expr pos:start="431:21" pos:end="431:46"><name pos:start="431:21" pos:end="431:24">dst2</name> <operator pos:start="431:26" pos:end="431:27">-=</operator> <name pos:start="431:29" pos:end="431:46"><name pos:start="431:29" pos:end="431:29">s</name><operator pos:start="431:30" pos:end="431:31">-&gt;</operator><name pos:start="431:32" pos:end="431:39">linesize</name><index pos:start="431:40" pos:end="431:46">[<expr pos:start="431:41" pos:end="431:45"><name pos:start="431:41" pos:end="431:45">index</name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="443:5" pos:end="445:30"><expr pos:start="443:5" pos:end="445:29"><call pos:start="443:5" pos:end="445:29"><name pos:start="443:5" pos:end="443:10">av_log</name><argument_list pos:start="443:11" pos:end="445:29">(<argument pos:start="443:12" pos:end="443:16"><expr pos:start="443:12" pos:end="443:16"><name pos:start="443:12" pos:end="443:16">avctx</name></expr></argument>, <argument pos:start="443:19" pos:end="443:30"><expr pos:start="443:19" pos:end="443:30"><name pos:start="443:19" pos:end="443:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="443:33" pos:end="443:65"><expr pos:start="443:33" pos:end="443:65"><literal type="string" pos:start="443:33" pos:end="443:65">"decode frame unused %td bytes\n"</literal></expr></argument>,

           <argument pos:start="445:12" pos:end="445:28"><expr pos:start="445:12" pos:end="445:28"><name pos:start="445:12" pos:end="445:18">buf_end</name> <operator pos:start="445:20" pos:end="445:20">-</operator> <name pos:start="445:22" pos:end="445:28">buf_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" pos:start="447:1" pos:end="447:29">//  return buf_end - buf_ptr;</comment>

    <return pos:start="449:5" pos:end="449:25">return <expr pos:start="449:12" pos:end="449:24"><name pos:start="449:12" pos:end="449:18">buf_ptr</name> <operator pos:start="449:20" pos:end="449:20">-</operator> <name pos:start="449:22" pos:end="449:24">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
