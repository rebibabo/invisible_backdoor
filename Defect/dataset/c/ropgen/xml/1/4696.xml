<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4696.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qemu_rbd_create</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">filename</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">QemuOpts</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">opts</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:70">Error</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier><modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:77">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:17">bytes</name> <init pos:start="7:19" pos:end="7:21">= <expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:19">objsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">obj_order</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:20">pool</name></decl>, <decl pos:start="13:23" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:27">name</name></decl>, <decl pos:start="13:30" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:30" pos:end="13:30">*</modifier></type><name pos:start="13:31" pos:end="13:34">conf</name></decl>, <decl pos:start="13:37" pos:end="13:47"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:47">clientname</name></decl>, <decl pos:start="13:50" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:16"><modifier pos:start="13:50" pos:end="13:50">*</modifier></type><name pos:start="13:51" pos:end="13:58">keypairs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:24">secretid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">rados_t</name></type> <name pos:start="17:13" pos:end="17:19">cluster</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">rados_ioctx_t</name></type> <name pos:start="19:19" pos:end="19:24">io_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:26"><decl pos:start="21:5" pos:end="21:25"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">QDict</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:18">options</name> <init pos:start="21:20" pos:end="21:25">= <expr pos:start="21:22" pos:end="21:25"><name pos:start="21:22" pos:end="21:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:12">secretid</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:52"><name pos:start="27:16" pos:end="27:27">qemu_opt_get</name><argument_list pos:start="27:28" pos:end="27:52">(<argument pos:start="27:29" pos:end="27:32"><expr pos:start="27:29" pos:end="27:32"><name pos:start="27:29" pos:end="27:32">opts</name></expr></argument>, <argument pos:start="27:35" pos:end="27:51"><expr pos:start="27:35" pos:end="27:51"><literal type="string" pos:start="27:35" pos:end="27:51">"password-secret"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:26">/* Read out options */</comment>

    <expr_stmt pos:start="33:5" pos:end="35:39"><expr pos:start="33:5" pos:end="35:38"><name pos:start="33:5" pos:end="33:9">bytes</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <call pos:start="33:13" pos:end="35:38"><name pos:start="33:13" pos:end="33:20">ROUND_UP</name><argument_list pos:start="33:21" pos:end="35:38">(<argument pos:start="33:22" pos:end="33:67"><expr pos:start="33:22" pos:end="33:67"><call pos:start="33:22" pos:end="33:67"><name pos:start="33:22" pos:end="33:42">qemu_opt_get_size_del</name><argument_list pos:start="33:43" pos:end="33:67">(<argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><name pos:start="33:44" pos:end="33:47">opts</name></expr></argument>, <argument pos:start="33:50" pos:end="33:63"><expr pos:start="33:50" pos:end="33:63"><name pos:start="33:50" pos:end="33:63">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="33:66" pos:end="33:66"><expr pos:start="33:66" pos:end="33:66"><literal type="number" pos:start="33:66" pos:end="33:66">0</literal></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="35:22" pos:end="35:37"><expr pos:start="35:22" pos:end="35:37"><name pos:start="35:22" pos:end="35:37">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:69"><expr pos:start="37:5" pos:end="37:68"><name pos:start="37:5" pos:end="37:11">objsize</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:68"><name pos:start="37:15" pos:end="37:35">qemu_opt_get_size_del</name><argument_list pos:start="37:36" pos:end="37:68">(<argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><name pos:start="37:37" pos:end="37:40">opts</name></expr></argument>, <argument pos:start="37:43" pos:end="37:64"><expr pos:start="37:43" pos:end="37:64"><name pos:start="37:43" pos:end="37:64">BLOCK_OPT_CLUSTER_SIZE</name></expr></argument>, <argument pos:start="37:67" pos:end="37:67"><expr pos:start="37:67" pos:end="37:67"><literal type="number" pos:start="37:67" pos:end="37:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="63:5"><if pos:start="39:5" pos:end="63:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">objsize</name></expr>)</condition> <block pos:start="39:18" pos:end="63:5">{<block_content pos:start="41:9" pos:end="61:35">

        <if_stmt pos:start="41:9" pos:end="49:9"><if pos:start="41:9" pos:end="49:9">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:20">objsize</name> <operator pos:start="41:22" pos:end="41:22">-</operator> <literal type="number" pos:start="41:24" pos:end="41:24">1</literal><operator pos:start="41:25" pos:end="41:25">)</operator> <operator pos:start="41:27" pos:end="41:27">&amp;</operator> <name pos:start="41:29" pos:end="41:35">objsize</name></expr>)</condition> <block pos:start="41:38" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:22">    <comment type="block" pos:start="41:43" pos:end="41:65">/* not a power of 2? */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:64"><expr pos:start="43:13" pos:end="43:63"><call pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:22">error_setg</name><argument_list pos:start="43:23" pos:end="43:63">(<argument pos:start="43:24" pos:end="43:27"><expr pos:start="43:24" pos:end="43:27"><name pos:start="43:24" pos:end="43:27">errp</name></expr></argument>, <argument pos:start="43:30" pos:end="43:62"><expr pos:start="43:30" pos:end="43:62"><literal type="string" pos:start="43:30" pos:end="43:62">"obj size needs to be power of 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:26"><expr pos:start="45:13" pos:end="45:25"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <operator pos:start="45:19" pos:end="45:19">-</operator><name pos:start="45:20" pos:end="45:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="47:13" pos:end="47:22">goto <name pos:start="47:18" pos:end="47:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="51:9" pos:end="59:9"><if pos:start="51:9" pos:end="59:9">if <condition pos:start="51:12" pos:end="51:27">(<expr pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:19">objsize</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <literal type="number" pos:start="51:23" pos:end="51:26">4096</literal></expr>)</condition> <block pos:start="51:29" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:22">

            <expr_stmt pos:start="53:13" pos:end="53:51"><expr pos:start="53:13" pos:end="53:50"><call pos:start="53:13" pos:end="53:50"><name pos:start="53:13" pos:end="53:22">error_setg</name><argument_list pos:start="53:23" pos:end="53:50">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">errp</name></expr></argument>, <argument pos:start="53:30" pos:end="53:49"><expr pos:start="53:30" pos:end="53:49"><literal type="string" pos:start="53:30" pos:end="53:49">"obj size too small"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <operator pos:start="55:19" pos:end="55:19">-</operator><name pos:start="55:20" pos:end="55:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:22">goto <name pos:start="57:18" pos:end="57:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:35"><expr pos:start="61:9" pos:end="61:34"><name pos:start="61:9" pos:end="61:17">obj_order</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:25">ctz32</name><argument_list pos:start="61:26" pos:end="61:34">(<argument pos:start="61:27" pos:end="61:33"><expr pos:start="61:27" pos:end="61:33"><name pos:start="61:27" pos:end="61:33">objsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:26"><expr pos:start="67:5" pos:end="67:25"><name pos:start="67:5" pos:end="67:11">options</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:25"><name pos:start="67:15" pos:end="67:23">qdict_new</name><argument_list pos:start="67:24" pos:end="67:25">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:59"><expr pos:start="69:5" pos:end="69:58"><call pos:start="69:5" pos:end="69:58"><name pos:start="69:5" pos:end="69:27">qemu_rbd_parse_filename</name><argument_list pos:start="69:28" pos:end="69:58">(<argument pos:start="69:29" pos:end="69:36"><expr pos:start="69:29" pos:end="69:36"><name pos:start="69:29" pos:end="69:36">filename</name></expr></argument>, <argument pos:start="69:39" pos:end="69:45"><expr pos:start="69:39" pos:end="69:45"><name pos:start="69:39" pos:end="69:45">options</name></expr></argument>, <argument pos:start="69:48" pos:end="69:57"><expr pos:start="69:48" pos:end="69:57"><operator pos:start="69:48" pos:end="69:48">&amp;</operator><name pos:start="69:49" pos:end="69:57">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:17">local_err</name></expr>)</condition> <block pos:start="71:20" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:18">

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <operator pos:start="73:15" pos:end="73:15">-</operator><name pos:start="73:16" pos:end="73:21">EINVAL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><call pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:23">error_propagate</name><argument_list pos:start="75:24" pos:end="75:40">(<argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">errp</name></expr></argument>, <argument pos:start="75:31" pos:end="75:39"><expr pos:start="75:31" pos:end="75:39"><name pos:start="75:31" pos:end="75:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>









    <expr_stmt pos:start="89:5" pos:end="89:52"><expr pos:start="89:5" pos:end="89:51"><name pos:start="89:5" pos:end="89:8">pool</name>       <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:51"><name pos:start="89:18" pos:end="89:34">qdict_get_try_str</name><argument_list pos:start="89:35" pos:end="89:51">(<argument pos:start="89:36" pos:end="89:42"><expr pos:start="89:36" pos:end="89:42"><name pos:start="89:36" pos:end="89:42">options</name></expr></argument>, <argument pos:start="89:45" pos:end="89:50"><expr pos:start="89:45" pos:end="89:50"><literal type="string" pos:start="89:45" pos:end="89:50">"pool"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:52"><expr pos:start="91:5" pos:end="91:51"><name pos:start="91:5" pos:end="91:8">conf</name>       <operator pos:start="91:16" pos:end="91:16">=</operator> <call pos:start="91:18" pos:end="91:51"><name pos:start="91:18" pos:end="91:34">qdict_get_try_str</name><argument_list pos:start="91:35" pos:end="91:51">(<argument pos:start="91:36" pos:end="91:42"><expr pos:start="91:36" pos:end="91:42"><name pos:start="91:36" pos:end="91:42">options</name></expr></argument>, <argument pos:start="91:45" pos:end="91:50"><expr pos:start="91:45" pos:end="91:50"><literal type="string" pos:start="91:45" pos:end="91:50">"conf"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:52"><expr pos:start="93:5" pos:end="93:51"><name pos:start="93:5" pos:end="93:14">clientname</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:51"><name pos:start="93:18" pos:end="93:34">qdict_get_try_str</name><argument_list pos:start="93:35" pos:end="93:51">(<argument pos:start="93:36" pos:end="93:42"><expr pos:start="93:36" pos:end="93:42"><name pos:start="93:36" pos:end="93:42">options</name></expr></argument>, <argument pos:start="93:45" pos:end="93:50"><expr pos:start="93:45" pos:end="93:50"><literal type="string" pos:start="93:45" pos:end="93:50">"user"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:53"><expr pos:start="95:5" pos:end="95:52"><name pos:start="95:5" pos:end="95:8">name</name>       <operator pos:start="95:16" pos:end="95:16">=</operator> <call pos:start="95:18" pos:end="95:52"><name pos:start="95:18" pos:end="95:34">qdict_get_try_str</name><argument_list pos:start="95:35" pos:end="95:52">(<argument pos:start="95:36" pos:end="95:42"><expr pos:start="95:36" pos:end="95:42"><name pos:start="95:36" pos:end="95:42">options</name></expr></argument>, <argument pos:start="95:45" pos:end="95:51"><expr pos:start="95:45" pos:end="95:51"><literal type="string" pos:start="95:45" pos:end="95:51">"image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:63"><expr pos:start="97:5" pos:end="97:62"><name pos:start="97:5" pos:end="97:12">keypairs</name>   <operator pos:start="97:16" pos:end="97:16">=</operator> <call pos:start="97:18" pos:end="97:62"><name pos:start="97:18" pos:end="97:34">qdict_get_try_str</name><argument_list pos:start="97:35" pos:end="97:62">(<argument pos:start="97:36" pos:end="97:42"><expr pos:start="97:36" pos:end="97:42"><name pos:start="97:36" pos:end="97:42">options</name></expr></argument>, <argument pos:start="97:45" pos:end="97:61"><expr pos:start="97:45" pos:end="97:61"><literal type="string" pos:start="97:45" pos:end="97:61">"=keyvalue-pairs"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:45"><expr pos:start="101:5" pos:end="101:44"><name pos:start="101:5" pos:end="101:7">ret</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <call pos:start="101:11" pos:end="101:44"><name pos:start="101:11" pos:end="101:22">rados_create</name><argument_list pos:start="101:23" pos:end="101:44">(<argument pos:start="101:24" pos:end="101:31"><expr pos:start="101:24" pos:end="101:31"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:31">cluster</name></expr></argument>, <argument pos:start="101:34" pos:end="101:43"><expr pos:start="101:34" pos:end="101:43"><name pos:start="101:34" pos:end="101:43">clientname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:16">(<expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">&lt;</operator> <literal type="number" pos:start="103:15" pos:end="103:15">0</literal></expr>)</condition> <block pos:start="103:18" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:18">

        <expr_stmt pos:start="105:9" pos:end="105:59"><expr pos:start="105:9" pos:end="105:58"><call pos:start="105:9" pos:end="105:58"><name pos:start="105:9" pos:end="105:24">error_setg_errno</name><argument_list pos:start="105:25" pos:end="105:58">(<argument pos:start="105:26" pos:end="105:29"><expr pos:start="105:26" pos:end="105:29"><name pos:start="105:26" pos:end="105:29">errp</name></expr></argument>, <argument pos:start="105:32" pos:end="105:35"><expr pos:start="105:32" pos:end="105:35"><operator pos:start="105:32" pos:end="105:32">-</operator><name pos:start="105:33" pos:end="105:35">ret</name></expr></argument>, <argument pos:start="105:38" pos:end="105:57"><expr pos:start="105:38" pos:end="105:57"><literal type="string" pos:start="105:38" pos:end="105:57">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:18">goto <name pos:start="107:14" pos:end="107:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="113:5" pos:end="113:65">/* try default location when conf=NULL, but ignore failure */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:46"><expr pos:start="115:5" pos:end="115:45"><name pos:start="115:5" pos:end="115:7">ret</name> <operator pos:start="115:9" pos:end="115:9">=</operator> <call pos:start="115:11" pos:end="115:45"><name pos:start="115:11" pos:end="115:30">rados_conf_read_file</name><argument_list pos:start="115:31" pos:end="115:45">(<argument pos:start="115:32" pos:end="115:38"><expr pos:start="115:32" pos:end="115:38"><name pos:start="115:32" pos:end="115:38">cluster</name></expr></argument>, <argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="125:5"><if pos:start="117:5" pos:end="125:5">if <condition pos:start="117:8" pos:end="117:24">(<expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:12">conf</name> <operator pos:start="117:14" pos:end="117:15">&amp;&amp;</operator> <name pos:start="117:17" pos:end="117:19">ret</name> <operator pos:start="117:21" pos:end="117:21">&lt;</operator> <literal type="number" pos:start="117:23" pos:end="117:23">0</literal></expr>)</condition> <block pos:start="117:26" pos:end="125:5">{<block_content pos:start="119:9" pos:end="123:22">

        <expr_stmt pos:start="119:9" pos:end="119:73"><expr pos:start="119:9" pos:end="119:72"><call pos:start="119:9" pos:end="119:72"><name pos:start="119:9" pos:end="119:24">error_setg_errno</name><argument_list pos:start="119:25" pos:end="119:72">(<argument pos:start="119:26" pos:end="119:29"><expr pos:start="119:26" pos:end="119:29"><name pos:start="119:26" pos:end="119:29">errp</name></expr></argument>, <argument pos:start="119:32" pos:end="119:35"><expr pos:start="119:32" pos:end="119:35"><operator pos:start="119:32" pos:end="119:32">-</operator><name pos:start="119:33" pos:end="119:35">ret</name></expr></argument>, <argument pos:start="119:38" pos:end="119:65"><expr pos:start="119:38" pos:end="119:65"><literal type="string" pos:start="119:38" pos:end="119:65">"error reading conf file %s"</literal></expr></argument>, <argument pos:start="119:68" pos:end="119:71"><expr pos:start="119:68" pos:end="119:71"><name pos:start="119:68" pos:end="119:71">conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:19"><expr pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <operator pos:start="121:15" pos:end="121:15">-</operator><name pos:start="121:16" pos:end="121:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="123:9" pos:end="123:22">goto <name pos:start="123:14" pos:end="123:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:57"><expr pos:start="129:5" pos:end="129:56"><name pos:start="129:5" pos:end="129:7">ret</name> <operator pos:start="129:9" pos:end="129:9">=</operator> <call pos:start="129:11" pos:end="129:56"><name pos:start="129:11" pos:end="129:31">qemu_rbd_set_keypairs</name><argument_list pos:start="129:32" pos:end="129:56">(<argument pos:start="129:33" pos:end="129:39"><expr pos:start="129:33" pos:end="129:39"><name pos:start="129:33" pos:end="129:39">cluster</name></expr></argument>, <argument pos:start="129:42" pos:end="129:49"><expr pos:start="129:42" pos:end="129:49"><name pos:start="129:42" pos:end="129:49">keypairs</name></expr></argument>, <argument pos:start="129:52" pos:end="129:55"><expr pos:start="129:52" pos:end="129:55"><name pos:start="129:52" pos:end="129:55">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="131:5" pos:end="137:5"><if pos:start="131:5" pos:end="137:5">if <condition pos:start="131:8" pos:end="131:16">(<expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:11">ret</name> <operator pos:start="131:13" pos:end="131:13">&lt;</operator> <literal type="number" pos:start="131:15" pos:end="131:15">0</literal></expr>)</condition> <block pos:start="131:18" pos:end="137:5">{<block_content pos:start="133:9" pos:end="135:22">

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:11">ret</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <operator pos:start="133:15" pos:end="133:15">-</operator><name pos:start="133:16" pos:end="133:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="135:9" pos:end="135:22">goto <name pos:start="135:14" pos:end="135:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="141:5" pos:end="147:5"><if pos:start="141:5" pos:end="147:5">if <condition pos:start="141:8" pos:end="141:55">(<expr pos:start="141:9" pos:end="141:54"><call pos:start="141:9" pos:end="141:50"><name pos:start="141:9" pos:end="141:25">qemu_rbd_set_auth</name><argument_list pos:start="141:26" pos:end="141:50">(<argument pos:start="141:27" pos:end="141:33"><expr pos:start="141:27" pos:end="141:33"><name pos:start="141:27" pos:end="141:33">cluster</name></expr></argument>, <argument pos:start="141:36" pos:end="141:43"><expr pos:start="141:36" pos:end="141:43"><name pos:start="141:36" pos:end="141:43">secretid</name></expr></argument>, <argument pos:start="141:46" pos:end="141:49"><expr pos:start="141:46" pos:end="141:49"><name pos:start="141:46" pos:end="141:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="141:52" pos:end="141:52">&lt;</operator> <literal type="number" pos:start="141:54" pos:end="141:54">0</literal></expr>)</condition> <block pos:start="141:57" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:22">

        <expr_stmt pos:start="143:9" pos:end="143:19"><expr pos:start="143:9" pos:end="143:18"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <operator pos:start="143:15" pos:end="143:15">-</operator><name pos:start="143:16" pos:end="143:18">EIO</name></expr>;</expr_stmt>

        <goto pos:start="145:9" pos:end="145:22">goto <name pos:start="145:14" pos:end="145:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:33"><expr pos:start="151:5" pos:end="151:32"><name pos:start="151:5" pos:end="151:7">ret</name> <operator pos:start="151:9" pos:end="151:9">=</operator> <call pos:start="151:11" pos:end="151:32"><name pos:start="151:11" pos:end="151:23">rados_connect</name><argument_list pos:start="151:24" pos:end="151:32">(<argument pos:start="151:25" pos:end="151:31"><expr pos:start="151:25" pos:end="151:31"><name pos:start="151:25" pos:end="151:31">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="159:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:16">(<expr pos:start="153:9" pos:end="153:15"><name pos:start="153:9" pos:end="153:11">ret</name> <operator pos:start="153:13" pos:end="153:13">&lt;</operator> <literal type="number" pos:start="153:15" pos:end="153:15">0</literal></expr>)</condition> <block pos:start="153:18" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:22">

        <expr_stmt pos:start="155:9" pos:end="155:57"><expr pos:start="155:9" pos:end="155:56"><call pos:start="155:9" pos:end="155:56"><name pos:start="155:9" pos:end="155:24">error_setg_errno</name><argument_list pos:start="155:25" pos:end="155:56">(<argument pos:start="155:26" pos:end="155:29"><expr pos:start="155:26" pos:end="155:29"><name pos:start="155:26" pos:end="155:29">errp</name></expr></argument>, <argument pos:start="155:32" pos:end="155:35"><expr pos:start="155:32" pos:end="155:35"><operator pos:start="155:32" pos:end="155:32">-</operator><name pos:start="155:33" pos:end="155:35">ret</name></expr></argument>, <argument pos:start="155:38" pos:end="155:55"><expr pos:start="155:38" pos:end="155:55"><literal type="string" pos:start="155:38" pos:end="155:55">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="157:9" pos:end="157:22">goto <name pos:start="157:14" pos:end="157:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:53"><expr pos:start="163:5" pos:end="163:52"><name pos:start="163:5" pos:end="163:7">ret</name> <operator pos:start="163:9" pos:end="163:9">=</operator> <call pos:start="163:11" pos:end="163:52"><name pos:start="163:11" pos:end="163:28">rados_ioctx_create</name><argument_list pos:start="163:29" pos:end="163:52">(<argument pos:start="163:30" pos:end="163:36"><expr pos:start="163:30" pos:end="163:36"><name pos:start="163:30" pos:end="163:36">cluster</name></expr></argument>, <argument pos:start="163:39" pos:end="163:42"><expr pos:start="163:39" pos:end="163:42"><name pos:start="163:39" pos:end="163:42">pool</name></expr></argument>, <argument pos:start="163:45" pos:end="163:51"><expr pos:start="163:45" pos:end="163:51"><operator pos:start="163:45" pos:end="163:45">&amp;</operator><name pos:start="163:46" pos:end="163:51">io_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="165:5" pos:end="171:5"><if pos:start="165:5" pos:end="171:5">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">&lt;</operator> <literal type="number" pos:start="165:15" pos:end="165:15">0</literal></expr>)</condition> <block pos:start="165:18" pos:end="171:5">{<block_content pos:start="167:9" pos:end="169:22">

        <expr_stmt pos:start="167:9" pos:end="167:68"><expr pos:start="167:9" pos:end="167:67"><call pos:start="167:9" pos:end="167:67"><name pos:start="167:9" pos:end="167:24">error_setg_errno</name><argument_list pos:start="167:25" pos:end="167:67">(<argument pos:start="167:26" pos:end="167:29"><expr pos:start="167:26" pos:end="167:29"><name pos:start="167:26" pos:end="167:29">errp</name></expr></argument>, <argument pos:start="167:32" pos:end="167:35"><expr pos:start="167:32" pos:end="167:35"><operator pos:start="167:32" pos:end="167:32">-</operator><name pos:start="167:33" pos:end="167:35">ret</name></expr></argument>, <argument pos:start="167:38" pos:end="167:60"><expr pos:start="167:38" pos:end="167:60"><literal type="string" pos:start="167:38" pos:end="167:60">"error opening pool %s"</literal></expr></argument>, <argument pos:start="167:63" pos:end="167:66"><expr pos:start="167:63" pos:end="167:66"><name pos:start="167:63" pos:end="167:66">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="169:9" pos:end="169:22">goto <name pos:start="169:14" pos:end="169:21">shutdown</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="175:5" pos:end="175:54"><expr pos:start="175:5" pos:end="175:53"><name pos:start="175:5" pos:end="175:7">ret</name> <operator pos:start="175:9" pos:end="175:9">=</operator> <call pos:start="175:11" pos:end="175:53"><name pos:start="175:11" pos:end="175:20">rbd_create</name><argument_list pos:start="175:21" pos:end="175:53">(<argument pos:start="175:22" pos:end="175:27"><expr pos:start="175:22" pos:end="175:27"><name pos:start="175:22" pos:end="175:27">io_ctx</name></expr></argument>, <argument pos:start="175:30" pos:end="175:33"><expr pos:start="175:30" pos:end="175:33"><name pos:start="175:30" pos:end="175:33">name</name></expr></argument>, <argument pos:start="175:36" pos:end="175:40"><expr pos:start="175:36" pos:end="175:40"><name pos:start="175:36" pos:end="175:40">bytes</name></expr></argument>, <argument pos:start="175:43" pos:end="175:52"><expr pos:start="175:43" pos:end="175:52"><operator pos:start="175:43" pos:end="175:43">&amp;</operator><name pos:start="175:44" pos:end="175:52">obj_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="177:5" pos:end="181:5"><if pos:start="177:5" pos:end="181:5">if <condition pos:start="177:8" pos:end="177:16">(<expr pos:start="177:9" pos:end="177:15"><name pos:start="177:9" pos:end="177:11">ret</name> <operator pos:start="177:13" pos:end="177:13">&lt;</operator> <literal type="number" pos:start="177:15" pos:end="177:15">0</literal></expr>)</condition> <block pos:start="177:18" pos:end="181:5">{<block_content pos:start="179:9" pos:end="179:57">

        <expr_stmt pos:start="179:9" pos:end="179:57"><expr pos:start="179:9" pos:end="179:56"><call pos:start="179:9" pos:end="179:56"><name pos:start="179:9" pos:end="179:24">error_setg_errno</name><argument_list pos:start="179:25" pos:end="179:56">(<argument pos:start="179:26" pos:end="179:29"><expr pos:start="179:26" pos:end="179:29"><name pos:start="179:26" pos:end="179:29">errp</name></expr></argument>, <argument pos:start="179:32" pos:end="179:35"><expr pos:start="179:32" pos:end="179:35"><operator pos:start="179:32" pos:end="179:32">-</operator><name pos:start="179:33" pos:end="179:35">ret</name></expr></argument>, <argument pos:start="179:38" pos:end="179:55"><expr pos:start="179:38" pos:end="179:55"><literal type="string" pos:start="179:38" pos:end="179:55">"error rbd create"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:32"><expr pos:start="185:5" pos:end="185:31"><call pos:start="185:5" pos:end="185:31"><name pos:start="185:5" pos:end="185:23">rados_ioctx_destroy</name><argument_list pos:start="185:24" pos:end="185:31">(<argument pos:start="185:25" pos:end="185:30"><expr pos:start="185:25" pos:end="185:30"><name pos:start="185:25" pos:end="185:30">io_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="189:1" pos:end="189:9"><name pos:start="189:1" pos:end="189:8">shutdown</name>:</label>

    <expr_stmt pos:start="191:5" pos:end="191:28"><expr pos:start="191:5" pos:end="191:27"><call pos:start="191:5" pos:end="191:27"><name pos:start="191:5" pos:end="191:18">rados_shutdown</name><argument_list pos:start="191:19" pos:end="191:27">(<argument pos:start="191:20" pos:end="191:26"><expr pos:start="191:20" pos:end="191:26"><name pos:start="191:20" pos:end="191:26">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="195:1" pos:end="195:5"><name pos:start="195:1" pos:end="195:4">exit</name>:</label>

    <expr_stmt pos:start="197:5" pos:end="197:21"><expr pos:start="197:5" pos:end="197:20"><call pos:start="197:5" pos:end="197:20"><name pos:start="197:5" pos:end="197:11">QDECREF</name><argument_list pos:start="197:12" pos:end="197:20">(<argument pos:start="197:13" pos:end="197:19"><expr pos:start="197:13" pos:end="197:19"><name pos:start="197:13" pos:end="197:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="199:5" pos:end="199:15">return <expr pos:start="199:12" pos:end="199:14"><name pos:start="199:12" pos:end="199:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
