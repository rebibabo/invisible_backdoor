<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8885.c" pos:tabs="8"><function pos:start="1:1" pos:end="491:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">cpu_ppc_handle_mmu_fault</name> <parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">CPUState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><name pos:start="1:46" pos:end="1:57">target_ulong</name></type> <name pos:start="1:59" pos:end="1:65">address</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:73"><decl pos:start="1:68" pos:end="1:73"><type pos:start="1:68" pos:end="1:73"><name pos:start="1:68" pos:end="1:70">int</name></type> <name pos:start="1:72" pos:end="1:73">rw</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:41"><decl pos:start="3:31" pos:end="3:41"><type pos:start="3:31" pos:end="3:41"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:41">is_user</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:57"><decl pos:start="3:44" pos:end="3:57"><type pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:57">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="491:1">{<block_content pos:start="7:5" pos:end="489:15">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">mmu_ctx_t</name></type> <name pos:start="7:15" pos:end="7:17">ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">access_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="23:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:10">rw</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">2</literal></expr>)</condition> <block pos:start="15:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:34">

        <comment type="block" pos:start="17:9" pos:end="17:25">/* code access */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:15"><expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:10">rw</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:19">access_type</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:33">ACCESS_CODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="35:5">else <block pos:start="23:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="31:33">

        <comment type="block" pos:start="25:9" pos:end="25:25">/* data access */</comment>

        <comment type="block" pos:start="27:9" pos:end="29:23">/* XXX: put correct access by using cpu_restore_state()

           correctly */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:19">access_type</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:32">ACCESS_INT</name></expr>;</expr_stmt>

        <comment type="line" pos:start="33:9" pos:end="33:49">//        access_type = env-&gt;access_type;</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:71"><expr pos:start="37:5" pos:end="37:70"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:70"><name pos:start="37:11" pos:end="37:30">get_physical_address</name><argument_list pos:start="37:31" pos:end="37:70">(<argument pos:start="37:32" pos:end="37:34"><expr pos:start="37:32" pos:end="37:34"><name pos:start="37:32" pos:end="37:34">env</name></expr></argument>, <argument pos:start="37:37" pos:end="37:40"><expr pos:start="37:37" pos:end="37:40"><operator pos:start="37:37" pos:end="37:37">&amp;</operator><name pos:start="37:38" pos:end="37:40">ctx</name></expr></argument>, <argument pos:start="37:43" pos:end="37:49"><expr pos:start="37:43" pos:end="37:49"><name pos:start="37:43" pos:end="37:49">address</name></expr></argument>, <argument pos:start="37:52" pos:end="37:53"><expr pos:start="37:52" pos:end="37:53"><name pos:start="37:52" pos:end="37:53">rw</name></expr></argument>, <argument pos:start="37:56" pos:end="37:66"><expr pos:start="37:56" pos:end="37:66"><name pos:start="37:56" pos:end="37:66">access_type</name></expr></argument>, <argument pos:start="37:69" pos:end="37:69"><expr pos:start="37:69" pos:end="37:69"><literal type="number" pos:start="37:69" pos:end="37:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="485:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:14">==</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition> <block pos:start="39:19" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:48">

        <expr_stmt pos:start="41:9" pos:end="45:48"><expr pos:start="41:9" pos:end="45:47"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="45:47"><name pos:start="41:15" pos:end="41:26">tlb_set_page</name><argument_list pos:start="41:27" pos:end="45:47">(<argument pos:start="41:28" pos:end="41:30"><expr pos:start="41:28" pos:end="41:30"><name pos:start="41:28" pos:end="41:30">env</name></expr></argument>, <argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><name pos:start="41:33" pos:end="41:39">address</name> <operator pos:start="41:41" pos:end="41:41">&amp;</operator> <name pos:start="41:43" pos:end="41:58">TARGET_PAGE_MASK</name></expr></argument>,

                           <argument pos:start="43:28" pos:end="43:55"><expr pos:start="43:28" pos:end="43:55"><name pos:start="43:28" pos:end="43:36"><name pos:start="43:28" pos:end="43:30">ctx</name><operator pos:start="43:31" pos:end="43:31">.</operator><name pos:start="43:32" pos:end="43:36">raddr</name></name> <operator pos:start="43:38" pos:end="43:38">&amp;</operator> <name pos:start="43:40" pos:end="43:55">TARGET_PAGE_MASK</name></expr></argument>, <argument pos:start="43:58" pos:end="43:65"><expr pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:65"><name pos:start="43:58" pos:end="43:60">ctx</name><operator pos:start="43:61" pos:end="43:61">.</operator><name pos:start="43:62" pos:end="43:65">prot</name></name></expr></argument>,

                           <argument pos:start="45:28" pos:end="45:34"><expr pos:start="45:28" pos:end="45:34"><name pos:start="45:28" pos:end="45:34">is_user</name></expr></argument>, <argument pos:start="45:37" pos:end="45:46"><expr pos:start="45:37" pos:end="45:46"><name pos:start="45:37" pos:end="45:46">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="47:7" pos:end="485:5">else if <condition pos:start="47:15" pos:end="47:23">(<expr pos:start="47:16" pos:end="47:22"><name pos:start="47:16" pos:end="47:18">ret</name> <operator pos:start="47:20" pos:end="47:20">&lt;</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>)</condition> <block pos:start="47:25" pos:end="485:5">{<block_content pos:start="51:9" pos:end="483:16">

<cpp:if pos:start="49:1" pos:end="49:23">#<cpp:directive pos:start="49:2" pos:end="49:3">if</cpp:directive> <expr pos:start="49:5" pos:end="49:23"><call pos:start="49:5" pos:end="49:23"><name pos:start="49:5" pos:end="49:11">defined</name> <argument_list pos:start="49:13" pos:end="49:23">(<argument pos:start="49:14" pos:end="49:22"><expr pos:start="49:14" pos:end="49:22"><name pos:start="49:14" pos:end="49:22">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <if_stmt pos:start="51:9" pos:end="56:0"><if pos:start="51:9" pos:end="56:0">if <condition pos:start="51:12" pos:end="51:26">(<expr pos:start="51:13" pos:end="51:25"><name pos:start="51:13" pos:end="51:20">loglevel</name> <operator pos:start="51:22" pos:end="51:23">!=</operator> <literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="56:0"><block_content pos:start="53:13" pos:end="56:0">

            <expr_stmt pos:start="53:13" pos:end="56:0"><expr pos:start="53:13" pos:end="53:52"><call pos:start="53:13" pos:end="53:52"><name pos:start="53:13" pos:end="53:26">cpu_dump_state</name><argument_list pos:start="53:27" pos:end="53:52">(<argument pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:30">env</name></expr></argument>, <argument pos:start="53:33" pos:end="53:39"><expr pos:start="53:33" pos:end="53:39"><name pos:start="53:33" pos:end="53:39">logfile</name></expr></argument>, <argument pos:start="53:42" pos:end="53:48"><expr pos:start="53:42" pos:end="53:48"><name pos:start="53:42" pos:end="53:48">fprintf</name></expr></argument>, <argument pos:start="53:51" pos:end="53:51"><expr pos:start="53:51" pos:end="53:51"><literal type="number" pos:start="53:51" pos:end="53:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="55:1" pos:end="55:6">#<cpp:directive pos:start="55:2" pos:end="55:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="57:9" pos:end="482:0"><if pos:start="57:9" pos:end="205:9">if <condition pos:start="57:12" pos:end="57:39">(<expr pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:23">access_type</name> <operator pos:start="57:25" pos:end="57:26">==</operator> <name pos:start="57:28" pos:end="57:38">ACCESS_CODE</name></expr>)</condition> <block pos:start="57:41" pos:end="205:9">{<block_content pos:start="59:13" pos:end="203:13">

            <switch pos:start="59:13" pos:end="203:13">switch <condition pos:start="59:20" pos:end="59:24">(<expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">ret</name></expr>)</condition> <block pos:start="59:26" pos:end="203:13">{<block_content pos:start="61:13" pos:end="202:0">

            <case pos:start="61:13" pos:end="61:20">case <expr pos:start="61:18" pos:end="61:19"><operator pos:start="61:18" pos:end="61:18">-</operator><literal type="number" pos:start="61:19" pos:end="61:19">1</literal></expr>:</case>

                <comment type="block" pos:start="63:17" pos:end="63:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="65:17" pos:end="153:17">switch <condition pos:start="65:24" pos:end="65:39">(<expr pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:38"><name pos:start="65:25" pos:end="65:27">env</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:38">mmu_model</name></name></expr>)</condition> <block pos:start="65:41" pos:end="153:17">{<block_content pos:start="67:17" pos:end="151:30">

                <case pos:start="67:17" pos:end="67:42">case <expr pos:start="67:22" pos:end="67:41"><name pos:start="67:22" pos:end="67:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <expr_stmt pos:start="69:21" pos:end="69:62"><expr pos:start="69:21" pos:end="69:61"><name pos:start="69:21" pos:end="69:40"><name pos:start="69:21" pos:end="69:23">env</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:40">exception_index</name></name> <operator pos:start="69:42" pos:end="69:42">=</operator> <name pos:start="69:44" pos:end="69:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:46"><expr pos:start="71:21" pos:end="71:45"><name pos:start="71:21" pos:end="71:35"><name pos:start="71:21" pos:end="71:23">env</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:35">error_code</name></name> <operator pos:start="71:37" pos:end="71:37">=</operator> <literal type="number" pos:start="71:39" pos:end="71:39">1</literal> <operator pos:start="71:41" pos:end="71:42">&lt;&lt;</operator> <literal type="number" pos:start="71:44" pos:end="71:45">18</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="73:21" pos:end="73:50"><expr pos:start="73:21" pos:end="73:49"><name pos:start="73:21" pos:end="73:39"><name pos:start="73:21" pos:end="73:23">env</name><operator pos:start="73:24" pos:end="73:25">-&gt;</operator><name pos:start="73:26" pos:end="73:28">spr</name><index pos:start="73:29" pos:end="73:39">[<expr pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:38">SPR_IMISS</name></expr>]</index></name> <operator pos:start="73:41" pos:end="73:41">=</operator> <name pos:start="73:43" pos:end="73:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="75:21" pos:end="75:63"><expr pos:start="75:21" pos:end="75:62"><name pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:28">spr</name><index pos:start="75:29" pos:end="75:38">[<expr pos:start="75:30" pos:end="75:37"><name pos:start="75:30" pos:end="75:37">SPR_ICMP</name></expr>]</index></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <literal type="number" pos:start="75:42" pos:end="75:51">0x80000000</literal> <operator pos:start="75:53" pos:end="75:53">|</operator> <name pos:start="75:55" pos:end="75:62"><name pos:start="75:55" pos:end="75:57">ctx</name><operator pos:start="75:58" pos:end="75:58">.</operator><name pos:start="75:59" pos:end="75:62">ptem</name></name></expr>;</expr_stmt>

                    <goto pos:start="77:21" pos:end="77:34">goto <name pos:start="77:26" pos:end="77:33">tlb_miss</name>;</goto>

                <case pos:start="79:17" pos:end="79:43">case <expr pos:start="79:22" pos:end="79:42"><name pos:start="79:22" pos:end="79:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <expr_stmt pos:start="81:21" pos:end="81:62"><expr pos:start="81:21" pos:end="81:61"><name pos:start="81:21" pos:end="81:40"><name pos:start="81:21" pos:end="81:23">env</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:40">exception_index</name></name> <operator pos:start="81:42" pos:end="81:42">=</operator> <name pos:start="81:44" pos:end="81:61">POWERPC_EXCP_IFTLB</name></expr>;</expr_stmt>

                    <goto pos:start="83:21" pos:end="83:39">goto <name pos:start="83:26" pos:end="83:38">tlb_miss_74xx</name>;</goto>

                <case pos:start="85:17" pos:end="85:42">case <expr pos:start="85:22" pos:end="85:41"><name pos:start="85:22" pos:end="85:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="87:17" pos:end="87:44">case <expr pos:start="87:22" pos:end="87:43"><name pos:start="87:22" pos:end="87:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="89:21" pos:end="89:61"><expr pos:start="89:21" pos:end="89:60"><name pos:start="89:21" pos:end="89:40"><name pos:start="89:21" pos:end="89:23">env</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:40">exception_index</name></name> <operator pos:start="89:42" pos:end="89:42">=</operator> <name pos:start="89:44" pos:end="89:60">POWERPC_EXCP_ITLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:40"><expr pos:start="91:21" pos:end="91:39"><name pos:start="91:21" pos:end="91:35"><name pos:start="91:21" pos:end="91:23">env</name><operator pos:start="91:24" pos:end="91:25">-&gt;</operator><name pos:start="91:26" pos:end="91:35">error_code</name></name> <operator pos:start="91:37" pos:end="91:37">=</operator> <literal type="number" pos:start="91:39" pos:end="91:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:53"><expr pos:start="93:21" pos:end="93:52"><name pos:start="93:21" pos:end="93:42"><name pos:start="93:21" pos:end="93:23">env</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:28">spr</name><index pos:start="93:29" pos:end="93:42">[<expr pos:start="93:30" pos:end="93:41"><name pos:start="93:30" pos:end="93:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="93:44" pos:end="93:44">=</operator> <name pos:start="93:46" pos:end="93:52">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="95:21" pos:end="95:55"><expr pos:start="95:21" pos:end="95:54"><name pos:start="95:21" pos:end="95:41"><name pos:start="95:21" pos:end="95:23">env</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:28">spr</name><index pos:start="95:29" pos:end="95:41">[<expr pos:start="95:30" pos:end="95:40"><name pos:start="95:30" pos:end="95:40">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="95:43" pos:end="95:43">=</operator> <literal type="number" pos:start="95:45" pos:end="95:54">0x00000000</literal></expr>;</expr_stmt>

                    <break pos:start="97:21" pos:end="97:26">break;</break>

                <case pos:start="99:17" pos:end="102:0">case <expr pos:start="99:22" pos:end="99:36"><name pos:start="99:22" pos:end="99:36">POWERPC_MMU_32B</name></expr>:</case>

<cpp:if pos:start="101:1" pos:end="101:25">#<cpp:directive pos:start="101:2" pos:end="101:3">if</cpp:directive> <expr pos:start="101:5" pos:end="101:25"><call pos:start="101:5" pos:end="101:25"><name pos:start="101:5" pos:end="101:11">defined</name><argument_list pos:start="101:12" pos:end="101:25">(<argument pos:start="101:13" pos:end="101:24"><expr pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="103:17" pos:end="103:37">case <expr pos:start="103:22" pos:end="103:36"><name pos:start="103:22" pos:end="103:36">POWERPC_MMU_64B</name></expr>:</case>

                <case pos:start="105:17" pos:end="108:0">case <expr pos:start="105:22" pos:end="105:41"><name pos:start="105:22" pos:end="105:41">POWERPC_MMU_64BRIDGE</name></expr>:</case>

<cpp:endif pos:start="107:1" pos:end="107:6">#<cpp:directive pos:start="107:2" pos:end="107:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="109:21" pos:end="109:60"><expr pos:start="109:21" pos:end="109:59"><name pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:23">env</name><operator pos:start="109:24" pos:end="109:25">-&gt;</operator><name pos:start="109:26" pos:end="109:40">exception_index</name></name> <operator pos:start="109:42" pos:end="109:42">=</operator> <name pos:start="109:44" pos:end="109:59">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:49"><expr pos:start="111:21" pos:end="111:48"><name pos:start="111:21" pos:end="111:35"><name pos:start="111:21" pos:end="111:23">env</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:35">error_code</name></name> <operator pos:start="111:37" pos:end="111:37">=</operator> <literal type="number" pos:start="111:39" pos:end="111:48">0x40000000</literal></expr>;</expr_stmt>

                    <break pos:start="113:21" pos:end="113:26">break;</break>

                <case pos:start="115:17" pos:end="115:37">case <expr pos:start="115:22" pos:end="115:36"><name pos:start="115:22" pos:end="115:36">POWERPC_MMU_601</name></expr>:</case>

                    <comment type="block" pos:start="117:21" pos:end="117:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="119:21" pos:end="119:66"><expr pos:start="119:21" pos:end="119:65"><call pos:start="119:21" pos:end="119:65"><name pos:start="119:21" pos:end="119:29">cpu_abort</name><argument_list pos:start="119:30" pos:end="119:65">(<argument pos:start="119:31" pos:end="119:33"><expr pos:start="119:31" pos:end="119:33"><name pos:start="119:31" pos:end="119:33">env</name></expr></argument>, <argument pos:start="119:36" pos:end="119:64"><expr pos:start="119:36" pos:end="119:64"><literal type="string" pos:start="119:36" pos:end="119:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="121:21" pos:end="121:30">return <expr pos:start="121:28" pos:end="121:29"><operator pos:start="121:28" pos:end="121:28">-</operator><literal type="number" pos:start="121:29" pos:end="121:29">1</literal></expr>;</return>

                <case pos:start="123:17" pos:end="123:39">case <expr pos:start="123:22" pos:end="123:38"><name pos:start="123:22" pos:end="123:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="125:21" pos:end="125:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="127:21" pos:end="127:66"><expr pos:start="127:21" pos:end="127:65"><call pos:start="127:21" pos:end="127:65"><name pos:start="127:21" pos:end="127:29">cpu_abort</name><argument_list pos:start="127:30" pos:end="127:65">(<argument pos:start="127:31" pos:end="127:33"><expr pos:start="127:31" pos:end="127:33"><name pos:start="127:31" pos:end="127:33">env</name></expr></argument>, <argument pos:start="127:36" pos:end="127:64"><expr pos:start="127:36" pos:end="127:64"><literal type="string" pos:start="127:36" pos:end="127:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="129:21" pos:end="129:30">return <expr pos:start="129:28" pos:end="129:29"><operator pos:start="129:28" pos:end="129:28">-</operator><literal type="number" pos:start="129:29" pos:end="129:29">1</literal></expr>;</return>

                <case pos:start="131:17" pos:end="131:43">case <expr pos:start="131:22" pos:end="131:42"><name pos:start="131:22" pos:end="131:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="133:21" pos:end="133:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="135:21" pos:end="135:66"><expr pos:start="135:21" pos:end="135:65"><call pos:start="135:21" pos:end="135:65"><name pos:start="135:21" pos:end="135:29">cpu_abort</name><argument_list pos:start="135:30" pos:end="135:65">(<argument pos:start="135:31" pos:end="135:33"><expr pos:start="135:31" pos:end="135:33"><name pos:start="135:31" pos:end="135:33">env</name></expr></argument>, <argument pos:start="135:36" pos:end="135:64"><expr pos:start="135:36" pos:end="135:64"><literal type="string" pos:start="135:36" pos:end="135:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="137:21" pos:end="137:30">return <expr pos:start="137:28" pos:end="137:29"><operator pos:start="137:28" pos:end="137:28">-</operator><literal type="number" pos:start="137:29" pos:end="137:29">1</literal></expr>;</return>

                <case pos:start="139:17" pos:end="139:42">case <expr pos:start="139:22" pos:end="139:41"><name pos:start="139:22" pos:end="139:41">POWERPC_MMU_REAL_4xx</name></expr>:</case>

                    <expr_stmt pos:start="141:21" pos:end="143:46"><expr pos:start="141:21" pos:end="143:45"><call pos:start="141:21" pos:end="143:45"><name pos:start="141:21" pos:end="141:29">cpu_abort</name><argument_list pos:start="141:30" pos:end="143:45">(<argument pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:33">env</name></expr></argument>, <argument pos:start="141:36" pos:end="143:44"><expr pos:start="141:36" pos:end="143:44"><literal type="string" pos:start="141:36" pos:end="141:76">"PowerPC 401 should never raise any MMU "</literal>

                              <literal type="string" pos:start="143:31" pos:end="143:44">"exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="145:21" pos:end="145:30">return <expr pos:start="145:28" pos:end="145:29"><operator pos:start="145:28" pos:end="145:28">-</operator><literal type="number" pos:start="145:29" pos:end="145:29">1</literal></expr>;</return>

                <default pos:start="147:17" pos:end="147:24">default:</default>

                    <expr_stmt pos:start="149:21" pos:end="149:69"><expr pos:start="149:21" pos:end="149:68"><call pos:start="149:21" pos:end="149:68"><name pos:start="149:21" pos:end="149:29">cpu_abort</name><argument_list pos:start="149:30" pos:end="149:68">(<argument pos:start="149:31" pos:end="149:33"><expr pos:start="149:31" pos:end="149:33"><name pos:start="149:31" pos:end="149:33">env</name></expr></argument>, <argument pos:start="149:36" pos:end="149:67"><expr pos:start="149:36" pos:end="149:67"><literal type="string" pos:start="149:36" pos:end="149:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="151:21" pos:end="151:30">return <expr pos:start="151:28" pos:end="151:29"><operator pos:start="151:28" pos:end="151:28">-</operator><literal type="number" pos:start="151:29" pos:end="151:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:20">case <expr pos:start="157:18" pos:end="157:19"><operator pos:start="157:18" pos:end="157:18">-</operator><literal type="number" pos:start="157:19" pos:end="157:19">2</literal></expr>:</case>

                <comment type="block" pos:start="159:17" pos:end="159:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="161:17" pos:end="161:56"><expr pos:start="161:17" pos:end="161:55"><name pos:start="161:17" pos:end="161:36"><name pos:start="161:17" pos:end="161:19">env</name><operator pos:start="161:20" pos:end="161:21">-&gt;</operator><name pos:start="161:22" pos:end="161:36">exception_index</name></name> <operator pos:start="161:38" pos:end="161:38">=</operator> <name pos:start="161:40" pos:end="161:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:45"><expr pos:start="163:17" pos:end="163:44"><name pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:19">env</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:31">error_code</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <literal type="number" pos:start="163:35" pos:end="163:44">0x08000000</literal></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:20">case <expr pos:start="167:18" pos:end="167:19"><operator pos:start="167:18" pos:end="167:18">-</operator><literal type="number" pos:start="167:19" pos:end="167:19">3</literal></expr>:</case>

                <comment type="block" pos:start="169:17" pos:end="169:53">/* No execute protection violation */</comment>

                <expr_stmt pos:start="171:17" pos:end="171:56"><expr pos:start="171:17" pos:end="171:55"><name pos:start="171:17" pos:end="171:36"><name pos:start="171:17" pos:end="171:19">env</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:36">exception_index</name></name> <operator pos:start="171:38" pos:end="171:38">=</operator> <name pos:start="171:40" pos:end="171:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:45"><expr pos:start="173:17" pos:end="173:44"><name pos:start="173:17" pos:end="173:31"><name pos:start="173:17" pos:end="173:19">env</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:31">error_code</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <literal type="number" pos:start="173:35" pos:end="173:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="175:17" pos:end="175:22">break;</break>

            <case pos:start="177:13" pos:end="177:20">case <expr pos:start="177:18" pos:end="177:19"><operator pos:start="177:18" pos:end="177:18">-</operator><literal type="number" pos:start="177:19" pos:end="177:19">4</literal></expr>:</case>

                <comment type="block" pos:start="179:17" pos:end="179:44">/* Direct store exception */</comment>

                <comment type="block" pos:start="181:17" pos:end="181:68">/* No code fetch is allowed in direct-store areas */</comment>

                <expr_stmt pos:start="183:17" pos:end="183:56"><expr pos:start="183:17" pos:end="183:55"><name pos:start="183:17" pos:end="183:36"><name pos:start="183:17" pos:end="183:19">env</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:36">exception_index</name></name> <operator pos:start="183:38" pos:end="183:38">=</operator> <name pos:start="183:40" pos:end="183:55">POWERPC_EXCP_ISI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:45"><expr pos:start="185:17" pos:end="185:44"><name pos:start="185:17" pos:end="185:31"><name pos:start="185:17" pos:end="185:19">env</name><operator pos:start="185:20" pos:end="185:21">-&gt;</operator><name pos:start="185:22" pos:end="185:31">error_code</name></name> <operator pos:start="185:33" pos:end="185:33">=</operator> <literal type="number" pos:start="185:35" pos:end="185:44">0x10000000</literal></expr>;</expr_stmt>

                <break pos:start="187:17" pos:end="190:0">break;</break>

<cpp:if pos:start="189:1" pos:end="189:25">#<cpp:directive pos:start="189:2" pos:end="189:3">if</cpp:directive> <expr pos:start="189:5" pos:end="189:25"><call pos:start="189:5" pos:end="189:25"><name pos:start="189:5" pos:end="189:11">defined</name><argument_list pos:start="189:12" pos:end="189:25">(<argument pos:start="189:13" pos:end="189:24"><expr pos:start="189:13" pos:end="189:24"><name pos:start="189:13" pos:end="189:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="191:13" pos:end="191:20">case <expr pos:start="191:18" pos:end="191:19"><operator pos:start="191:18" pos:end="191:18">-</operator><literal type="number" pos:start="191:19" pos:end="191:19">5</literal></expr>:</case>

                <comment type="block" pos:start="193:17" pos:end="193:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="195:17" pos:end="195:57"><expr pos:start="195:17" pos:end="195:56"><name pos:start="195:17" pos:end="195:36"><name pos:start="195:17" pos:end="195:19">env</name><operator pos:start="195:20" pos:end="195:21">-&gt;</operator><name pos:start="195:22" pos:end="195:36">exception_index</name></name> <operator pos:start="195:38" pos:end="195:38">=</operator> <name pos:start="195:40" pos:end="195:56">POWERPC_EXCP_ISEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:36"><expr pos:start="197:17" pos:end="197:35"><name pos:start="197:17" pos:end="197:31"><name pos:start="197:17" pos:end="197:19">env</name><operator pos:start="197:20" pos:end="197:21">-&gt;</operator><name pos:start="197:22" pos:end="197:31">error_code</name></name> <operator pos:start="197:33" pos:end="197:33">=</operator> <literal type="number" pos:start="197:35" pos:end="197:35">0</literal></expr>;</expr_stmt>

                <break pos:start="199:17" pos:end="202:0">break;</break>

<cpp:endif pos:start="201:1" pos:end="201:6">#<cpp:directive pos:start="201:2" pos:end="201:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></if> <else pos:start="205:11" pos:end="482:0">else <block pos:start="205:16" pos:end="482:0">{<block_content pos:start="207:13" pos:end="471:13">

            <switch pos:start="207:13" pos:end="471:13">switch <condition pos:start="207:20" pos:end="207:24">(<expr pos:start="207:21" pos:end="207:23"><name pos:start="207:21" pos:end="207:23">ret</name></expr>)</condition> <block pos:start="207:26" pos:end="471:13">{<block_content pos:start="209:13" pos:end="470:0">

            <case pos:start="209:13" pos:end="209:20">case <expr pos:start="209:18" pos:end="209:19"><operator pos:start="209:18" pos:end="209:18">-</operator><literal type="number" pos:start="209:19" pos:end="209:19">1</literal></expr>:</case>

                <comment type="block" pos:start="211:17" pos:end="211:54">/* No matches in page tables or TLB */</comment>

                <switch pos:start="213:17" pos:end="355:17">switch <condition pos:start="213:24" pos:end="213:39">(<expr pos:start="213:25" pos:end="213:38"><name pos:start="213:25" pos:end="213:38"><name pos:start="213:25" pos:end="213:27">env</name><operator pos:start="213:28" pos:end="213:29">-&gt;</operator><name pos:start="213:30" pos:end="213:38">mmu_model</name></name></expr>)</condition> <block pos:start="213:41" pos:end="355:17">{<block_content pos:start="215:17" pos:end="353:30">

                <case pos:start="215:17" pos:end="215:42">case <expr pos:start="215:22" pos:end="215:41"><name pos:start="215:22" pos:end="215:41">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

                    <if_stmt pos:start="217:21" pos:end="229:21"><if pos:start="217:21" pos:end="223:21">if <condition pos:start="217:24" pos:end="217:32">(<expr pos:start="217:25" pos:end="217:31"><name pos:start="217:25" pos:end="217:26">rw</name> <operator pos:start="217:28" pos:end="217:29">==</operator> <literal type="number" pos:start="217:31" pos:end="217:31">1</literal></expr>)</condition> <block pos:start="217:34" pos:end="223:21">{<block_content pos:start="219:25" pos:end="221:50">

                        <expr_stmt pos:start="219:25" pos:end="219:66"><expr pos:start="219:25" pos:end="219:65"><name pos:start="219:25" pos:end="219:44"><name pos:start="219:25" pos:end="219:27">env</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:44">exception_index</name></name> <operator pos:start="219:46" pos:end="219:46">=</operator> <name pos:start="219:48" pos:end="219:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="221:25" pos:end="221:50"><expr pos:start="221:25" pos:end="221:49"><name pos:start="221:25" pos:end="221:39"><name pos:start="221:25" pos:end="221:27">env</name><operator pos:start="221:28" pos:end="221:29">-&gt;</operator><name pos:start="221:30" pos:end="221:39">error_code</name></name> <operator pos:start="221:41" pos:end="221:41">=</operator> <literal type="number" pos:start="221:43" pos:end="221:43">1</literal> <operator pos:start="221:45" pos:end="221:46">&lt;&lt;</operator> <literal type="number" pos:start="221:48" pos:end="221:49">16</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="223:23" pos:end="229:21">else <block pos:start="223:28" pos:end="229:21">{<block_content pos:start="225:25" pos:end="227:44">

                        <expr_stmt pos:start="225:25" pos:end="225:66"><expr pos:start="225:25" pos:end="225:65"><name pos:start="225:25" pos:end="225:44"><name pos:start="225:25" pos:end="225:27">env</name><operator pos:start="225:28" pos:end="225:29">-&gt;</operator><name pos:start="225:30" pos:end="225:44">exception_index</name></name> <operator pos:start="225:46" pos:end="225:46">=</operator> <name pos:start="225:48" pos:end="225:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="227:25" pos:end="227:44"><expr pos:start="227:25" pos:end="227:43"><name pos:start="227:25" pos:end="227:39"><name pos:start="227:25" pos:end="227:27">env</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:39">error_code</name></name> <operator pos:start="227:41" pos:end="227:41">=</operator> <literal type="number" pos:start="227:43" pos:end="227:43">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:50"><expr pos:start="231:21" pos:end="231:49"><name pos:start="231:21" pos:end="231:39"><name pos:start="231:21" pos:end="231:23">env</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:28">spr</name><index pos:start="231:29" pos:end="231:39">[<expr pos:start="231:30" pos:end="231:38"><name pos:start="231:30" pos:end="231:38">SPR_DMISS</name></expr>]</index></name> <operator pos:start="231:41" pos:end="231:41">=</operator> <name pos:start="231:43" pos:end="231:49">address</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:63"><expr pos:start="233:21" pos:end="233:62"><name pos:start="233:21" pos:end="233:38"><name pos:start="233:21" pos:end="233:23">env</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:28">spr</name><index pos:start="233:29" pos:end="233:38">[<expr pos:start="233:30" pos:end="233:37"><name pos:start="233:30" pos:end="233:37">SPR_DCMP</name></expr>]</index></name> <operator pos:start="233:40" pos:end="233:40">=</operator> <literal type="number" pos:start="233:42" pos:end="233:51">0x80000000</literal> <operator pos:start="233:53" pos:end="233:53">|</operator> <name pos:start="233:55" pos:end="233:62"><name pos:start="233:55" pos:end="233:57">ctx</name><operator pos:start="233:58" pos:end="233:58">.</operator><name pos:start="233:59" pos:end="233:62">ptem</name></name></expr>;</expr_stmt>

                <label pos:start="235:17" pos:end="235:25"><name pos:start="235:17" pos:end="235:24">tlb_miss</name>:</label>

                    <expr_stmt pos:start="237:21" pos:end="237:53"><expr pos:start="237:21" pos:end="237:52"><name pos:start="237:21" pos:end="237:35"><name pos:start="237:21" pos:end="237:23">env</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:35">error_code</name></name> <operator pos:start="237:37" pos:end="237:38">|=</operator> <name pos:start="237:40" pos:end="237:46"><name pos:start="237:40" pos:end="237:42">ctx</name><operator pos:start="237:43" pos:end="237:43">.</operator><name pos:start="237:44" pos:end="237:46">key</name></name> <operator pos:start="237:48" pos:end="237:49">&lt;&lt;</operator> <literal type="number" pos:start="237:51" pos:end="237:52">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="239:57"><expr pos:start="239:21" pos:end="239:56"><name pos:start="239:21" pos:end="239:39"><name pos:start="239:21" pos:end="239:23">env</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:28">spr</name><index pos:start="239:29" pos:end="239:39">[<expr pos:start="239:30" pos:end="239:38"><name pos:start="239:30" pos:end="239:38">SPR_HASH1</name></expr>]</index></name> <operator pos:start="239:41" pos:end="239:41">=</operator> <name pos:start="239:43" pos:end="239:56"><name pos:start="239:43" pos:end="239:45">ctx</name><operator pos:start="239:46" pos:end="239:46">.</operator><name pos:start="239:47" pos:end="239:53">pg_addr</name><index pos:start="239:54" pos:end="239:56">[<expr pos:start="239:55" pos:end="239:55"><literal type="number" pos:start="239:55" pos:end="239:55">0</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="241:21" pos:end="241:57"><expr pos:start="241:21" pos:end="241:56"><name pos:start="241:21" pos:end="241:39"><name pos:start="241:21" pos:end="241:23">env</name><operator pos:start="241:24" pos:end="241:25">-&gt;</operator><name pos:start="241:26" pos:end="241:28">spr</name><index pos:start="241:29" pos:end="241:39">[<expr pos:start="241:30" pos:end="241:38"><name pos:start="241:30" pos:end="241:38">SPR_HASH2</name></expr>]</index></name> <operator pos:start="241:41" pos:end="241:41">=</operator> <name pos:start="241:43" pos:end="241:56"><name pos:start="241:43" pos:end="241:45">ctx</name><operator pos:start="241:46" pos:end="241:46">.</operator><name pos:start="241:47" pos:end="241:53">pg_addr</name><index pos:start="241:54" pos:end="241:56">[<expr pos:start="241:55" pos:end="241:55"><literal type="number" pos:start="241:55" pos:end="241:55">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <break pos:start="243:21" pos:end="243:26">break;</break>

                <case pos:start="245:17" pos:end="245:43">case <expr pos:start="245:22" pos:end="245:42"><name pos:start="245:22" pos:end="245:42">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

                    <if_stmt pos:start="247:21" pos:end="255:21"><if pos:start="247:21" pos:end="251:21">if <condition pos:start="247:24" pos:end="247:32">(<expr pos:start="247:25" pos:end="247:31"><name pos:start="247:25" pos:end="247:26">rw</name> <operator pos:start="247:28" pos:end="247:29">==</operator> <literal type="number" pos:start="247:31" pos:end="247:31">1</literal></expr>)</condition> <block pos:start="247:34" pos:end="251:21">{<block_content pos:start="249:25" pos:end="249:66">

                        <expr_stmt pos:start="249:25" pos:end="249:66"><expr pos:start="249:25" pos:end="249:65"><name pos:start="249:25" pos:end="249:44"><name pos:start="249:25" pos:end="249:27">env</name><operator pos:start="249:28" pos:end="249:29">-&gt;</operator><name pos:start="249:30" pos:end="249:44">exception_index</name></name> <operator pos:start="249:46" pos:end="249:46">=</operator> <name pos:start="249:48" pos:end="249:65">POWERPC_EXCP_DSTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="251:23" pos:end="255:21">else <block pos:start="251:28" pos:end="255:21">{<block_content pos:start="253:25" pos:end="253:66">

                        <expr_stmt pos:start="253:25" pos:end="253:66"><expr pos:start="253:25" pos:end="253:65"><name pos:start="253:25" pos:end="253:44"><name pos:start="253:25" pos:end="253:27">env</name><operator pos:start="253:28" pos:end="253:29">-&gt;</operator><name pos:start="253:30" pos:end="253:44">exception_index</name></name> <operator pos:start="253:46" pos:end="253:46">=</operator> <name pos:start="253:48" pos:end="253:65">POWERPC_EXCP_DLTLB</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                <label pos:start="257:17" pos:end="257:30"><name pos:start="257:17" pos:end="257:29">tlb_miss_74xx</name>:</label>

                    <comment type="block" pos:start="259:21" pos:end="259:49">/* Implement LRU algorithm */</comment>

                    <expr_stmt pos:start="261:21" pos:end="261:52"><expr pos:start="261:21" pos:end="261:51"><name pos:start="261:21" pos:end="261:35"><name pos:start="261:21" pos:end="261:23">env</name><operator pos:start="261:24" pos:end="261:25">-&gt;</operator><name pos:start="261:26" pos:end="261:35">error_code</name></name> <operator pos:start="261:37" pos:end="261:37">=</operator> <name pos:start="261:39" pos:end="261:45"><name pos:start="261:39" pos:end="261:41">ctx</name><operator pos:start="261:42" pos:end="261:42">.</operator><name pos:start="261:43" pos:end="261:45">key</name></name> <operator pos:start="261:47" pos:end="261:48">&lt;&lt;</operator> <literal type="number" pos:start="261:50" pos:end="261:51">19</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="263:21" pos:end="265:67"><expr pos:start="263:21" pos:end="265:66"><name pos:start="263:21" pos:end="263:41"><name pos:start="263:21" pos:end="263:23">env</name><operator pos:start="263:24" pos:end="263:25">-&gt;</operator><name pos:start="263:26" pos:end="263:28">spr</name><index pos:start="263:29" pos:end="263:41">[<expr pos:start="263:30" pos:end="263:40"><name pos:start="263:30" pos:end="263:40">SPR_TLBMISS</name></expr>]</index></name> <operator pos:start="263:43" pos:end="263:43">=</operator> <operator pos:start="263:45" pos:end="263:45">(</operator><name pos:start="263:46" pos:end="263:52">address</name> <operator pos:start="263:54" pos:end="263:54">&amp;</operator> <operator pos:start="263:56" pos:end="263:56">~</operator><operator pos:start="263:57" pos:end="263:57">(</operator><operator pos:start="263:58" pos:end="263:58">(</operator><name pos:start="263:59" pos:end="263:70">target_ulong</name><operator pos:start="263:71" pos:end="263:71">)</operator><literal type="number" pos:start="263:72" pos:end="263:74">0x3</literal><operator pos:start="263:75" pos:end="263:75">)</operator><operator pos:start="263:76" pos:end="263:76">)</operator> <operator pos:start="263:78" pos:end="263:78">|</operator>

                        <operator pos:start="265:25" pos:end="265:25">(</operator><operator pos:start="265:26" pos:end="265:26">(</operator><name pos:start="265:27" pos:end="265:39"><name pos:start="265:27" pos:end="265:29">env</name><operator pos:start="265:30" pos:end="265:31">-&gt;</operator><name pos:start="265:32" pos:end="265:39">last_way</name></name> <operator pos:start="265:41" pos:end="265:41">+</operator> <literal type="number" pos:start="265:43" pos:end="265:43">1</literal><operator pos:start="265:44" pos:end="265:44">)</operator> <operator pos:start="265:46" pos:end="265:46">&amp;</operator> <operator pos:start="265:48" pos:end="265:48">(</operator><name pos:start="265:49" pos:end="265:60"><name pos:start="265:49" pos:end="265:51">env</name><operator pos:start="265:52" pos:end="265:53">-&gt;</operator><name pos:start="265:54" pos:end="265:60">nb_ways</name></name> <operator pos:start="265:62" pos:end="265:62">-</operator> <literal type="number" pos:start="265:64" pos:end="265:64">1</literal><operator pos:start="265:65" pos:end="265:65">)</operator><operator pos:start="265:66" pos:end="265:66">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="267:21" pos:end="267:64"><expr pos:start="267:21" pos:end="267:63"><name pos:start="267:21" pos:end="267:39"><name pos:start="267:21" pos:end="267:23">env</name><operator pos:start="267:24" pos:end="267:25">-&gt;</operator><name pos:start="267:26" pos:end="267:28">spr</name><index pos:start="267:29" pos:end="267:39">[<expr pos:start="267:30" pos:end="267:38"><name pos:start="267:30" pos:end="267:38">SPR_PTEHI</name></expr>]</index></name> <operator pos:start="267:41" pos:end="267:41">=</operator> <literal type="number" pos:start="267:43" pos:end="267:52">0x80000000</literal> <operator pos:start="267:54" pos:end="267:54">|</operator> <name pos:start="267:56" pos:end="267:63"><name pos:start="267:56" pos:end="267:58">ctx</name><operator pos:start="267:59" pos:end="267:59">.</operator><name pos:start="267:60" pos:end="267:63">ptem</name></name></expr>;</expr_stmt>

                    <break pos:start="269:21" pos:end="269:26">break;</break>

                <case pos:start="271:17" pos:end="271:42">case <expr pos:start="271:22" pos:end="271:41"><name pos:start="271:22" pos:end="271:41">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

                <case pos:start="273:17" pos:end="273:44">case <expr pos:start="273:22" pos:end="273:43"><name pos:start="273:22" pos:end="273:43">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

                    <expr_stmt pos:start="275:21" pos:end="275:61"><expr pos:start="275:21" pos:end="275:60"><name pos:start="275:21" pos:end="275:40"><name pos:start="275:21" pos:end="275:23">env</name><operator pos:start="275:24" pos:end="275:25">-&gt;</operator><name pos:start="275:26" pos:end="275:40">exception_index</name></name> <operator pos:start="275:42" pos:end="275:42">=</operator> <name pos:start="275:44" pos:end="275:60">POWERPC_EXCP_DTLB</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:40"><expr pos:start="277:21" pos:end="277:39"><name pos:start="277:21" pos:end="277:35"><name pos:start="277:21" pos:end="277:23">env</name><operator pos:start="277:24" pos:end="277:25">-&gt;</operator><name pos:start="277:26" pos:end="277:35">error_code</name></name> <operator pos:start="277:37" pos:end="277:37">=</operator> <literal type="number" pos:start="277:39" pos:end="277:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:53"><expr pos:start="279:21" pos:end="279:52"><name pos:start="279:21" pos:end="279:42"><name pos:start="279:21" pos:end="279:23">env</name><operator pos:start="279:24" pos:end="279:25">-&gt;</operator><name pos:start="279:26" pos:end="279:28">spr</name><index pos:start="279:29" pos:end="279:42">[<expr pos:start="279:30" pos:end="279:41"><name pos:start="279:30" pos:end="279:41">SPR_40x_DEAR</name></expr>]</index></name> <operator pos:start="279:44" pos:end="279:44">=</operator> <name pos:start="279:46" pos:end="279:52">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="281:21" pos:end="287:59"><if pos:start="281:21" pos:end="283:59">if <condition pos:start="281:24" pos:end="281:27">(<expr pos:start="281:25" pos:end="281:26"><name pos:start="281:25" pos:end="281:26">rw</name></expr>)</condition><block type="pseudo" pos:start="283:25" pos:end="283:59"><block_content pos:start="283:25" pos:end="283:59">

                        <expr_stmt pos:start="283:25" pos:end="283:59"><expr pos:start="283:25" pos:end="283:58"><name pos:start="283:25" pos:end="283:45"><name pos:start="283:25" pos:end="283:27">env</name><operator pos:start="283:28" pos:end="283:29">-&gt;</operator><name pos:start="283:30" pos:end="283:32">spr</name><index pos:start="283:33" pos:end="283:45">[<expr pos:start="283:34" pos:end="283:44"><name pos:start="283:34" pos:end="283:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="283:47" pos:end="283:47">=</operator> <literal type="number" pos:start="283:49" pos:end="283:58">0x00800000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="285:21" pos:end="287:59">else<block type="pseudo" pos:start="287:25" pos:end="287:59"><block_content pos:start="287:25" pos:end="287:59">

                        <expr_stmt pos:start="287:25" pos:end="287:59"><expr pos:start="287:25" pos:end="287:58"><name pos:start="287:25" pos:end="287:45"><name pos:start="287:25" pos:end="287:27">env</name><operator pos:start="287:28" pos:end="287:29">-&gt;</operator><name pos:start="287:30" pos:end="287:32">spr</name><index pos:start="287:33" pos:end="287:45">[<expr pos:start="287:34" pos:end="287:44"><name pos:start="287:34" pos:end="287:44">SPR_40x_ESR</name></expr>]</index></name> <operator pos:start="287:47" pos:end="287:47">=</operator> <literal type="number" pos:start="287:49" pos:end="287:58">0x00000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="289:21" pos:end="289:26">break;</break>

                <case pos:start="291:17" pos:end="294:0">case <expr pos:start="291:22" pos:end="291:36"><name pos:start="291:22" pos:end="291:36">POWERPC_MMU_32B</name></expr>:</case>

<cpp:if pos:start="293:1" pos:end="293:25">#<cpp:directive pos:start="293:2" pos:end="293:3">if</cpp:directive> <expr pos:start="293:5" pos:end="293:25"><call pos:start="293:5" pos:end="293:25"><name pos:start="293:5" pos:end="293:11">defined</name><argument_list pos:start="293:12" pos:end="293:25">(<argument pos:start="293:13" pos:end="293:24"><expr pos:start="293:13" pos:end="293:24"><name pos:start="293:13" pos:end="293:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <case pos:start="295:17" pos:end="295:37">case <expr pos:start="295:22" pos:end="295:36"><name pos:start="295:22" pos:end="295:36">POWERPC_MMU_64B</name></expr>:</case>

                <case pos:start="297:17" pos:end="300:0">case <expr pos:start="297:22" pos:end="297:41"><name pos:start="297:22" pos:end="297:41">POWERPC_MMU_64BRIDGE</name></expr>:</case>

<cpp:endif pos:start="299:1" pos:end="299:6">#<cpp:directive pos:start="299:2" pos:end="299:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="301:21" pos:end="301:60"><expr pos:start="301:21" pos:end="301:59"><name pos:start="301:21" pos:end="301:40"><name pos:start="301:21" pos:end="301:23">env</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:40">exception_index</name></name> <operator pos:start="301:42" pos:end="301:42">=</operator> <name pos:start="301:44" pos:end="301:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="303:21" pos:end="303:40"><expr pos:start="303:21" pos:end="303:39"><name pos:start="303:21" pos:end="303:35"><name pos:start="303:21" pos:end="303:23">env</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:35">error_code</name></name> <operator pos:start="303:37" pos:end="303:37">=</operator> <literal type="number" pos:start="303:39" pos:end="303:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="305:21" pos:end="305:48"><expr pos:start="305:21" pos:end="305:47"><name pos:start="305:21" pos:end="305:37"><name pos:start="305:21" pos:end="305:23">env</name><operator pos:start="305:24" pos:end="305:25">-&gt;</operator><name pos:start="305:26" pos:end="305:28">spr</name><index pos:start="305:29" pos:end="305:37">[<expr pos:start="305:30" pos:end="305:36"><name pos:start="305:30" pos:end="305:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="305:39" pos:end="305:39">=</operator> <name pos:start="305:41" pos:end="305:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="307:21" pos:end="313:57"><if pos:start="307:21" pos:end="309:57">if <condition pos:start="307:24" pos:end="307:32">(<expr pos:start="307:25" pos:end="307:31"><name pos:start="307:25" pos:end="307:26">rw</name> <operator pos:start="307:28" pos:end="307:29">==</operator> <literal type="number" pos:start="307:31" pos:end="307:31">1</literal></expr>)</condition><block type="pseudo" pos:start="309:25" pos:end="309:57"><block_content pos:start="309:25" pos:end="309:57">

                        <expr_stmt pos:start="309:25" pos:end="309:57"><expr pos:start="309:25" pos:end="309:56"><name pos:start="309:25" pos:end="309:43"><name pos:start="309:25" pos:end="309:27">env</name><operator pos:start="309:28" pos:end="309:29">-&gt;</operator><name pos:start="309:30" pos:end="309:32">spr</name><index pos:start="309:33" pos:end="309:43">[<expr pos:start="309:34" pos:end="309:42"><name pos:start="309:34" pos:end="309:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="309:45" pos:end="309:45">=</operator> <literal type="number" pos:start="309:47" pos:end="309:56">0x42000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="311:21" pos:end="313:57">else<block type="pseudo" pos:start="313:25" pos:end="313:57"><block_content pos:start="313:25" pos:end="313:57">

                        <expr_stmt pos:start="313:25" pos:end="313:57"><expr pos:start="313:25" pos:end="313:56"><name pos:start="313:25" pos:end="313:43"><name pos:start="313:25" pos:end="313:27">env</name><operator pos:start="313:28" pos:end="313:29">-&gt;</operator><name pos:start="313:30" pos:end="313:32">spr</name><index pos:start="313:33" pos:end="313:43">[<expr pos:start="313:34" pos:end="313:42"><name pos:start="313:34" pos:end="313:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="313:45" pos:end="313:45">=</operator> <literal type="number" pos:start="313:47" pos:end="313:56">0x40000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="315:21" pos:end="315:26">break;</break>

                <case pos:start="317:17" pos:end="317:37">case <expr pos:start="317:22" pos:end="317:36"><name pos:start="317:22" pos:end="317:36">POWERPC_MMU_601</name></expr>:</case>

                    <comment type="block" pos:start="319:21" pos:end="319:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="321:21" pos:end="321:66"><expr pos:start="321:21" pos:end="321:65"><call pos:start="321:21" pos:end="321:65"><name pos:start="321:21" pos:end="321:29">cpu_abort</name><argument_list pos:start="321:30" pos:end="321:65">(<argument pos:start="321:31" pos:end="321:33"><expr pos:start="321:31" pos:end="321:33"><name pos:start="321:31" pos:end="321:33">env</name></expr></argument>, <argument pos:start="321:36" pos:end="321:64"><expr pos:start="321:36" pos:end="321:64"><literal type="string" pos:start="321:36" pos:end="321:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="323:21" pos:end="323:30">return <expr pos:start="323:28" pos:end="323:29"><operator pos:start="323:28" pos:end="323:28">-</operator><literal type="number" pos:start="323:29" pos:end="323:29">1</literal></expr>;</return>

                <case pos:start="325:17" pos:end="325:39">case <expr pos:start="325:22" pos:end="325:38"><name pos:start="325:22" pos:end="325:38">POWERPC_MMU_BOOKE</name></expr>:</case>

                    <comment type="block" pos:start="327:21" pos:end="327:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="329:21" pos:end="329:66"><expr pos:start="329:21" pos:end="329:65"><call pos:start="329:21" pos:end="329:65"><name pos:start="329:21" pos:end="329:29">cpu_abort</name><argument_list pos:start="329:30" pos:end="329:65">(<argument pos:start="329:31" pos:end="329:33"><expr pos:start="329:31" pos:end="329:33"><name pos:start="329:31" pos:end="329:33">env</name></expr></argument>, <argument pos:start="329:36" pos:end="329:64"><expr pos:start="329:36" pos:end="329:64"><literal type="string" pos:start="329:36" pos:end="329:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="331:21" pos:end="331:30">return <expr pos:start="331:28" pos:end="331:29"><operator pos:start="331:28" pos:end="331:28">-</operator><literal type="number" pos:start="331:29" pos:end="331:29">1</literal></expr>;</return>

                <case pos:start="333:17" pos:end="333:43">case <expr pos:start="333:22" pos:end="333:42"><name pos:start="333:22" pos:end="333:42">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

                    <comment type="block" pos:start="335:21" pos:end="335:35">/* XXX: TODO */</comment>

                    <expr_stmt pos:start="337:21" pos:end="337:66"><expr pos:start="337:21" pos:end="337:65"><call pos:start="337:21" pos:end="337:65"><name pos:start="337:21" pos:end="337:29">cpu_abort</name><argument_list pos:start="337:30" pos:end="337:65">(<argument pos:start="337:31" pos:end="337:33"><expr pos:start="337:31" pos:end="337:33"><name pos:start="337:31" pos:end="337:33">env</name></expr></argument>, <argument pos:start="337:36" pos:end="337:64"><expr pos:start="337:36" pos:end="337:64"><literal type="string" pos:start="337:36" pos:end="337:64">"MMU model not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="339:21" pos:end="339:30">return <expr pos:start="339:28" pos:end="339:29"><operator pos:start="339:28" pos:end="339:28">-</operator><literal type="number" pos:start="339:29" pos:end="339:29">1</literal></expr>;</return>

                <case pos:start="341:17" pos:end="341:42">case <expr pos:start="341:22" pos:end="341:41"><name pos:start="341:22" pos:end="341:41">POWERPC_MMU_REAL_4xx</name></expr>:</case>

                    <expr_stmt pos:start="343:21" pos:end="345:46"><expr pos:start="343:21" pos:end="345:45"><call pos:start="343:21" pos:end="345:45"><name pos:start="343:21" pos:end="343:29">cpu_abort</name><argument_list pos:start="343:30" pos:end="345:45">(<argument pos:start="343:31" pos:end="343:33"><expr pos:start="343:31" pos:end="343:33"><name pos:start="343:31" pos:end="343:33">env</name></expr></argument>, <argument pos:start="343:36" pos:end="345:44"><expr pos:start="343:36" pos:end="345:44"><literal type="string" pos:start="343:36" pos:end="343:76">"PowerPC 401 should never raise any MMU "</literal>

                              <literal type="string" pos:start="345:31" pos:end="345:44">"exceptions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="347:21" pos:end="347:30">return <expr pos:start="347:28" pos:end="347:29"><operator pos:start="347:28" pos:end="347:28">-</operator><literal type="number" pos:start="347:29" pos:end="347:29">1</literal></expr>;</return>

                <default pos:start="349:17" pos:end="349:24">default:</default>

                    <expr_stmt pos:start="351:21" pos:end="351:69"><expr pos:start="351:21" pos:end="351:68"><call pos:start="351:21" pos:end="351:68"><name pos:start="351:21" pos:end="351:29">cpu_abort</name><argument_list pos:start="351:30" pos:end="351:68">(<argument pos:start="351:31" pos:end="351:33"><expr pos:start="351:31" pos:end="351:33"><name pos:start="351:31" pos:end="351:33">env</name></expr></argument>, <argument pos:start="351:36" pos:end="351:67"><expr pos:start="351:36" pos:end="351:67"><literal type="string" pos:start="351:36" pos:end="351:67">"Unknown or invalid MMU model\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="353:21" pos:end="353:30">return <expr pos:start="353:28" pos:end="353:29"><operator pos:start="353:28" pos:end="353:28">-</operator><literal type="number" pos:start="353:29" pos:end="353:29">1</literal></expr>;</return>

                </block_content>}</block></switch>

                <break pos:start="357:17" pos:end="357:22">break;</break>

            <case pos:start="359:13" pos:end="359:20">case <expr pos:start="359:18" pos:end="359:19"><operator pos:start="359:18" pos:end="359:18">-</operator><literal type="number" pos:start="359:19" pos:end="359:19">2</literal></expr>:</case>

                <comment type="block" pos:start="361:17" pos:end="361:45">/* Access rights violation */</comment>

                <expr_stmt pos:start="363:17" pos:end="363:56"><expr pos:start="363:17" pos:end="363:55"><name pos:start="363:17" pos:end="363:36"><name pos:start="363:17" pos:end="363:19">env</name><operator pos:start="363:20" pos:end="363:21">-&gt;</operator><name pos:start="363:22" pos:end="363:36">exception_index</name></name> <operator pos:start="363:38" pos:end="363:38">=</operator> <name pos:start="363:40" pos:end="363:55">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:36"><expr pos:start="365:17" pos:end="365:35"><name pos:start="365:17" pos:end="365:31"><name pos:start="365:17" pos:end="365:19">env</name><operator pos:start="365:20" pos:end="365:21">-&gt;</operator><name pos:start="365:22" pos:end="365:31">error_code</name></name> <operator pos:start="365:33" pos:end="365:33">=</operator> <literal type="number" pos:start="365:35" pos:end="365:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:44"><expr pos:start="367:17" pos:end="367:43"><name pos:start="367:17" pos:end="367:33"><name pos:start="367:17" pos:end="367:19">env</name><operator pos:start="367:20" pos:end="367:21">-&gt;</operator><name pos:start="367:22" pos:end="367:24">spr</name><index pos:start="367:25" pos:end="367:33">[<expr pos:start="367:26" pos:end="367:32"><name pos:start="367:26" pos:end="367:32">SPR_DAR</name></expr>]</index></name> <operator pos:start="367:35" pos:end="367:35">=</operator> <name pos:start="367:37" pos:end="367:43">address</name></expr>;</expr_stmt>

                <if_stmt pos:start="369:17" pos:end="375:53"><if pos:start="369:17" pos:end="371:53">if <condition pos:start="369:20" pos:end="369:28">(<expr pos:start="369:21" pos:end="369:27"><name pos:start="369:21" pos:end="369:22">rw</name> <operator pos:start="369:24" pos:end="369:25">==</operator> <literal type="number" pos:start="369:27" pos:end="369:27">1</literal></expr>)</condition><block type="pseudo" pos:start="371:21" pos:end="371:53"><block_content pos:start="371:21" pos:end="371:53">

                    <expr_stmt pos:start="371:21" pos:end="371:53"><expr pos:start="371:21" pos:end="371:52"><name pos:start="371:21" pos:end="371:39"><name pos:start="371:21" pos:end="371:23">env</name><operator pos:start="371:24" pos:end="371:25">-&gt;</operator><name pos:start="371:26" pos:end="371:28">spr</name><index pos:start="371:29" pos:end="371:39">[<expr pos:start="371:30" pos:end="371:38"><name pos:start="371:30" pos:end="371:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="371:41" pos:end="371:41">=</operator> <literal type="number" pos:start="371:43" pos:end="371:52">0x0A000000</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="373:17" pos:end="375:53">else<block type="pseudo" pos:start="375:21" pos:end="375:53"><block_content pos:start="375:21" pos:end="375:53">

                    <expr_stmt pos:start="375:21" pos:end="375:53"><expr pos:start="375:21" pos:end="375:52"><name pos:start="375:21" pos:end="375:39"><name pos:start="375:21" pos:end="375:23">env</name><operator pos:start="375:24" pos:end="375:25">-&gt;</operator><name pos:start="375:26" pos:end="375:28">spr</name><index pos:start="375:29" pos:end="375:39">[<expr pos:start="375:30" pos:end="375:38"><name pos:start="375:30" pos:end="375:38">SPR_DSISR</name></expr>]</index></name> <operator pos:start="375:41" pos:end="375:41">=</operator> <literal type="number" pos:start="375:43" pos:end="375:52">0x08000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="377:17" pos:end="377:22">break;</break>

            <case pos:start="379:13" pos:end="379:20">case <expr pos:start="379:18" pos:end="379:19"><operator pos:start="379:18" pos:end="379:18">-</operator><literal type="number" pos:start="379:19" pos:end="379:19">4</literal></expr>:</case>

                <comment type="block" pos:start="381:17" pos:end="381:44">/* Direct store exception */</comment>

                <switch pos:start="383:17" pos:end="451:17">switch <condition pos:start="383:24" pos:end="383:36">(<expr pos:start="383:25" pos:end="383:35"><name pos:start="383:25" pos:end="383:35">access_type</name></expr>)</condition> <block pos:start="383:38" pos:end="451:17">{<block_content pos:start="385:17" pos:end="449:26">

                <case pos:start="385:17" pos:end="385:34">case <expr pos:start="385:22" pos:end="385:33"><name pos:start="385:22" pos:end="385:33">ACCESS_FLOAT</name></expr>:</case>

                    <comment type="block" pos:start="387:21" pos:end="387:51">/* Floating point load/store */</comment>

                    <expr_stmt pos:start="389:21" pos:end="389:62"><expr pos:start="389:21" pos:end="389:61"><name pos:start="389:21" pos:end="389:40"><name pos:start="389:21" pos:end="389:23">env</name><operator pos:start="389:24" pos:end="389:25">-&gt;</operator><name pos:start="389:26" pos:end="389:40">exception_index</name></name> <operator pos:start="389:42" pos:end="389:42">=</operator> <name pos:start="389:44" pos:end="389:61">POWERPC_EXCP_ALIGN</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="391:21" pos:end="391:60"><expr pos:start="391:21" pos:end="391:59"><name pos:start="391:21" pos:end="391:35"><name pos:start="391:21" pos:end="391:23">env</name><operator pos:start="391:24" pos:end="391:25">-&gt;</operator><name pos:start="391:26" pos:end="391:35">error_code</name></name> <operator pos:start="391:37" pos:end="391:37">=</operator> <name pos:start="391:39" pos:end="391:59">POWERPC_EXCP_ALIGN_FP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:48"><expr pos:start="393:21" pos:end="393:47"><name pos:start="393:21" pos:end="393:37"><name pos:start="393:21" pos:end="393:23">env</name><operator pos:start="393:24" pos:end="393:25">-&gt;</operator><name pos:start="393:26" pos:end="393:28">spr</name><index pos:start="393:29" pos:end="393:37">[<expr pos:start="393:30" pos:end="393:36"><name pos:start="393:30" pos:end="393:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="393:39" pos:end="393:39">=</operator> <name pos:start="393:41" pos:end="393:47">address</name></expr>;</expr_stmt>

                    <break pos:start="395:21" pos:end="395:26">break;</break>

                <case pos:start="397:17" pos:end="397:32">case <expr pos:start="397:22" pos:end="397:31"><name pos:start="397:22" pos:end="397:31">ACCESS_RES</name></expr>:</case>

                    <comment type="block" pos:start="399:21" pos:end="399:48">/* lwarx, ldarx or stwcx. */</comment>

                    <expr_stmt pos:start="401:21" pos:end="401:60"><expr pos:start="401:21" pos:end="401:59"><name pos:start="401:21" pos:end="401:40"><name pos:start="401:21" pos:end="401:23">env</name><operator pos:start="401:24" pos:end="401:25">-&gt;</operator><name pos:start="401:26" pos:end="401:40">exception_index</name></name> <operator pos:start="401:42" pos:end="401:42">=</operator> <name pos:start="401:44" pos:end="401:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="403:21" pos:end="403:40"><expr pos:start="403:21" pos:end="403:39"><name pos:start="403:21" pos:end="403:35"><name pos:start="403:21" pos:end="403:23">env</name><operator pos:start="403:24" pos:end="403:25">-&gt;</operator><name pos:start="403:26" pos:end="403:35">error_code</name></name> <operator pos:start="403:37" pos:end="403:37">=</operator> <literal type="number" pos:start="403:39" pos:end="403:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="405:21" pos:end="405:48"><expr pos:start="405:21" pos:end="405:47"><name pos:start="405:21" pos:end="405:37"><name pos:start="405:21" pos:end="405:23">env</name><operator pos:start="405:24" pos:end="405:25">-&gt;</operator><name pos:start="405:26" pos:end="405:28">spr</name><index pos:start="405:29" pos:end="405:37">[<expr pos:start="405:30" pos:end="405:36"><name pos:start="405:30" pos:end="405:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="405:39" pos:end="405:39">=</operator> <name pos:start="405:41" pos:end="405:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="407:21" pos:end="413:57"><if pos:start="407:21" pos:end="409:57">if <condition pos:start="407:24" pos:end="407:32">(<expr pos:start="407:25" pos:end="407:31"><name pos:start="407:25" pos:end="407:26">rw</name> <operator pos:start="407:28" pos:end="407:29">==</operator> <literal type="number" pos:start="407:31" pos:end="407:31">1</literal></expr>)</condition><block type="pseudo" pos:start="409:25" pos:end="409:57"><block_content pos:start="409:25" pos:end="409:57">

                        <expr_stmt pos:start="409:25" pos:end="409:57"><expr pos:start="409:25" pos:end="409:56"><name pos:start="409:25" pos:end="409:43"><name pos:start="409:25" pos:end="409:27">env</name><operator pos:start="409:28" pos:end="409:29">-&gt;</operator><name pos:start="409:30" pos:end="409:32">spr</name><index pos:start="409:33" pos:end="409:43">[<expr pos:start="409:34" pos:end="409:42"><name pos:start="409:34" pos:end="409:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="409:45" pos:end="409:45">=</operator> <literal type="number" pos:start="409:47" pos:end="409:56">0x06000000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="411:21" pos:end="413:57">else<block type="pseudo" pos:start="413:25" pos:end="413:57"><block_content pos:start="413:25" pos:end="413:57">

                        <expr_stmt pos:start="413:25" pos:end="413:57"><expr pos:start="413:25" pos:end="413:56"><name pos:start="413:25" pos:end="413:43"><name pos:start="413:25" pos:end="413:27">env</name><operator pos:start="413:28" pos:end="413:29">-&gt;</operator><name pos:start="413:30" pos:end="413:32">spr</name><index pos:start="413:33" pos:end="413:43">[<expr pos:start="413:34" pos:end="413:42"><name pos:start="413:34" pos:end="413:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="413:45" pos:end="413:45">=</operator> <literal type="number" pos:start="413:47" pos:end="413:56">0x04000000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="415:21" pos:end="415:26">break;</break>

                <case pos:start="417:17" pos:end="417:32">case <expr pos:start="417:22" pos:end="417:31"><name pos:start="417:22" pos:end="417:31">ACCESS_EXT</name></expr>:</case>

                    <comment type="block" pos:start="419:21" pos:end="419:40">/* eciwx or ecowx */</comment>

                    <expr_stmt pos:start="421:21" pos:end="421:60"><expr pos:start="421:21" pos:end="421:59"><name pos:start="421:21" pos:end="421:40"><name pos:start="421:21" pos:end="421:23">env</name><operator pos:start="421:24" pos:end="421:25">-&gt;</operator><name pos:start="421:26" pos:end="421:40">exception_index</name></name> <operator pos:start="421:42" pos:end="421:42">=</operator> <name pos:start="421:44" pos:end="421:59">POWERPC_EXCP_DSI</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="423:21" pos:end="423:40"><expr pos:start="423:21" pos:end="423:39"><name pos:start="423:21" pos:end="423:35"><name pos:start="423:21" pos:end="423:23">env</name><operator pos:start="423:24" pos:end="423:25">-&gt;</operator><name pos:start="423:26" pos:end="423:35">error_code</name></name> <operator pos:start="423:37" pos:end="423:37">=</operator> <literal type="number" pos:start="423:39" pos:end="423:39">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="425:21" pos:end="425:48"><expr pos:start="425:21" pos:end="425:47"><name pos:start="425:21" pos:end="425:37"><name pos:start="425:21" pos:end="425:23">env</name><operator pos:start="425:24" pos:end="425:25">-&gt;</operator><name pos:start="425:26" pos:end="425:28">spr</name><index pos:start="425:29" pos:end="425:37">[<expr pos:start="425:30" pos:end="425:36"><name pos:start="425:30" pos:end="425:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="425:39" pos:end="425:39">=</operator> <name pos:start="425:41" pos:end="425:47">address</name></expr>;</expr_stmt>

                    <if_stmt pos:start="427:21" pos:end="433:57"><if pos:start="427:21" pos:end="429:57">if <condition pos:start="427:24" pos:end="427:32">(<expr pos:start="427:25" pos:end="427:31"><name pos:start="427:25" pos:end="427:26">rw</name> <operator pos:start="427:28" pos:end="427:29">==</operator> <literal type="number" pos:start="427:31" pos:end="427:31">1</literal></expr>)</condition><block type="pseudo" pos:start="429:25" pos:end="429:57"><block_content pos:start="429:25" pos:end="429:57">

                        <expr_stmt pos:start="429:25" pos:end="429:57"><expr pos:start="429:25" pos:end="429:56"><name pos:start="429:25" pos:end="429:43"><name pos:start="429:25" pos:end="429:27">env</name><operator pos:start="429:28" pos:end="429:29">-&gt;</operator><name pos:start="429:30" pos:end="429:32">spr</name><index pos:start="429:33" pos:end="429:43">[<expr pos:start="429:34" pos:end="429:42"><name pos:start="429:34" pos:end="429:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="429:45" pos:end="429:45">=</operator> <literal type="number" pos:start="429:47" pos:end="429:56">0x06100000</literal></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="431:21" pos:end="433:57">else<block type="pseudo" pos:start="433:25" pos:end="433:57"><block_content pos:start="433:25" pos:end="433:57">

                        <expr_stmt pos:start="433:25" pos:end="433:57"><expr pos:start="433:25" pos:end="433:56"><name pos:start="433:25" pos:end="433:43"><name pos:start="433:25" pos:end="433:27">env</name><operator pos:start="433:28" pos:end="433:29">-&gt;</operator><name pos:start="433:30" pos:end="433:32">spr</name><index pos:start="433:33" pos:end="433:43">[<expr pos:start="433:34" pos:end="433:42"><name pos:start="433:34" pos:end="433:42">SPR_DSISR</name></expr>]</index></name> <operator pos:start="433:45" pos:end="433:45">=</operator> <literal type="number" pos:start="433:47" pos:end="433:56">0x04100000</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <break pos:start="435:21" pos:end="435:26">break;</break>

                <default pos:start="437:17" pos:end="437:24">default:</default>

                    <expr_stmt pos:start="439:21" pos:end="439:65"><expr pos:start="439:21" pos:end="439:64"><call pos:start="439:21" pos:end="439:64"><name pos:start="439:21" pos:end="439:26">printf</name><argument_list pos:start="439:27" pos:end="439:64">(<argument pos:start="439:28" pos:end="439:58"><expr pos:start="439:28" pos:end="439:58"><literal type="string" pos:start="439:28" pos:end="439:58">"DSI: invalid exception (%d)\n"</literal></expr></argument>, <argument pos:start="439:61" pos:end="439:63"><expr pos:start="439:61" pos:end="439:63"><name pos:start="439:61" pos:end="439:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="441:21" pos:end="441:64"><expr pos:start="441:21" pos:end="441:63"><name pos:start="441:21" pos:end="441:40"><name pos:start="441:21" pos:end="441:23">env</name><operator pos:start="441:24" pos:end="441:25">-&gt;</operator><name pos:start="441:26" pos:end="441:40">exception_index</name></name> <operator pos:start="441:42" pos:end="441:42">=</operator> <name pos:start="441:44" pos:end="441:63">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="443:21" pos:end="445:70"><expr pos:start="443:21" pos:end="445:69"><name pos:start="443:21" pos:end="443:35"><name pos:start="443:21" pos:end="443:23">env</name><operator pos:start="443:24" pos:end="443:25">-&gt;</operator><name pos:start="443:26" pos:end="443:35">error_code</name></name> <operator pos:start="443:37" pos:end="443:37">=</operator>

                        <name pos:start="445:25" pos:end="445:42">POWERPC_EXCP_INVAL</name> <operator pos:start="445:44" pos:end="445:44">|</operator> <name pos:start="445:46" pos:end="445:69">POWERPC_EXCP_INVAL_INVAL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="447:21" pos:end="447:48"><expr pos:start="447:21" pos:end="447:47"><name pos:start="447:21" pos:end="447:37"><name pos:start="447:21" pos:end="447:23">env</name><operator pos:start="447:24" pos:end="447:25">-&gt;</operator><name pos:start="447:26" pos:end="447:28">spr</name><index pos:start="447:29" pos:end="447:37">[<expr pos:start="447:30" pos:end="447:36"><name pos:start="447:30" pos:end="447:36">SPR_DAR</name></expr>]</index></name> <operator pos:start="447:39" pos:end="447:39">=</operator> <name pos:start="447:41" pos:end="447:47">address</name></expr>;</expr_stmt>

                    <break pos:start="449:21" pos:end="449:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="453:17" pos:end="456:0">break;</break>

<cpp:if pos:start="455:1" pos:end="455:25">#<cpp:directive pos:start="455:2" pos:end="455:3">if</cpp:directive> <expr pos:start="455:5" pos:end="455:25"><call pos:start="455:5" pos:end="455:25"><name pos:start="455:5" pos:end="455:11">defined</name><argument_list pos:start="455:12" pos:end="455:25">(<argument pos:start="455:13" pos:end="455:24"><expr pos:start="455:13" pos:end="455:24"><name pos:start="455:13" pos:end="455:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <case pos:start="457:13" pos:end="457:20">case <expr pos:start="457:18" pos:end="457:19"><operator pos:start="457:18" pos:end="457:18">-</operator><literal type="number" pos:start="457:19" pos:end="457:19">5</literal></expr>:</case>

                <comment type="block" pos:start="459:17" pos:end="459:47">/* No match in segment table */</comment>

                <expr_stmt pos:start="461:17" pos:end="461:57"><expr pos:start="461:17" pos:end="461:56"><name pos:start="461:17" pos:end="461:36"><name pos:start="461:17" pos:end="461:19">env</name><operator pos:start="461:20" pos:end="461:21">-&gt;</operator><name pos:start="461:22" pos:end="461:36">exception_index</name></name> <operator pos:start="461:38" pos:end="461:38">=</operator> <name pos:start="461:40" pos:end="461:56">POWERPC_EXCP_DSEG</name></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:36"><expr pos:start="463:17" pos:end="463:35"><name pos:start="463:17" pos:end="463:31"><name pos:start="463:17" pos:end="463:19">env</name><operator pos:start="463:20" pos:end="463:21">-&gt;</operator><name pos:start="463:22" pos:end="463:31">error_code</name></name> <operator pos:start="463:33" pos:end="463:33">=</operator> <literal type="number" pos:start="463:35" pos:end="463:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="465:17" pos:end="465:44"><expr pos:start="465:17" pos:end="465:43"><name pos:start="465:17" pos:end="465:33"><name pos:start="465:17" pos:end="465:19">env</name><operator pos:start="465:20" pos:end="465:21">-&gt;</operator><name pos:start="465:22" pos:end="465:24">spr</name><index pos:start="465:25" pos:end="465:33">[<expr pos:start="465:26" pos:end="465:32"><name pos:start="465:26" pos:end="465:32">SPR_DAR</name></expr>]</index></name> <operator pos:start="465:35" pos:end="465:35">=</operator> <name pos:start="465:37" pos:end="465:43">address</name></expr>;</expr_stmt>

                <break pos:start="467:17" pos:end="470:0">break;</break>

<cpp:endif pos:start="469:1" pos:end="469:6">#<cpp:directive pos:start="469:2" pos:end="469:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

<cpp:if pos:start="475:1" pos:end="475:5">#<cpp:directive pos:start="475:2" pos:end="475:3">if</cpp:directive> <expr pos:start="475:5" pos:end="475:5"><literal type="number" pos:start="475:5" pos:end="475:5">0</literal></expr></cpp:if>

        printf("%s: set exception to %d %02x\n", __func__,

               env-&gt;exception, env-&gt;error_code);

<cpp:endif pos:start="481:1" pos:end="481:6">#<cpp:directive pos:start="481:2" pos:end="481:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="483:9" pos:end="483:16"><expr pos:start="483:9" pos:end="483:15"><name pos:start="483:9" pos:end="483:11">ret</name> <operator pos:start="483:13" pos:end="483:13">=</operator> <literal type="number" pos:start="483:15" pos:end="483:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="489:5" pos:end="489:15">return <expr pos:start="489:12" pos:end="489:14"><name pos:start="489:12" pos:end="489:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
