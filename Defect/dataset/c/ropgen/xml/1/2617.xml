<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2617.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">protocol_client_auth_sasl_step_len</name><parameter_list pos:start="1:46" pos:end="1:86">(<parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:54">VncState</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">vs</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:73"><decl pos:start="1:61" pos:end="1:73"><type pos:start="1:61" pos:end="1:73"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">data</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:85"><decl pos:start="1:76" pos:end="1:85"><type pos:start="1:76" pos:end="1:85"><name pos:start="1:76" pos:end="1:81">size_t</name></type> <name pos:start="1:83" pos:end="1:85">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">steplen</name> <init pos:start="5:22" pos:end="5:40">= <expr pos:start="5:24" pos:end="5:40"><call pos:start="5:24" pos:end="5:40"><name pos:start="5:24" pos:end="5:31">read_u32</name><argument_list pos:start="5:32" pos:end="5:40">(<argument pos:start="5:33" pos:end="5:36"><expr pos:start="5:33" pos:end="5:36"><name pos:start="5:33" pos:end="5:36">data</name></expr></argument>, <argument pos:start="5:39" pos:end="5:39"><expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:51"><expr pos:start="7:5" pos:end="7:50"><call pos:start="7:5" pos:end="7:50"><name pos:start="7:5" pos:end="7:13">VNC_DEBUG</name><argument_list pos:start="7:14" pos:end="7:50">(<argument pos:start="7:15" pos:end="7:40"><expr pos:start="7:15" pos:end="7:40"><literal type="string" pos:start="7:15" pos:end="7:40">"Got client step len %d\n"</literal></expr></argument>, <argument pos:start="7:43" pos:end="7:49"><expr pos:start="7:43" pos:end="7:49"><name pos:start="7:43" pos:end="7:49">steplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:15">steplen</name> <operator pos:start="9:17" pos:end="9:17">&gt;</operator> <name pos:start="9:19" pos:end="9:35">SASL_DATA_MAX_LEN</name></expr>)</condition> <block pos:start="9:38" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:18">

        <expr_stmt pos:start="11:9" pos:end="11:54"><expr pos:start="11:9" pos:end="11:53"><call pos:start="11:9" pos:end="11:53"><name pos:start="11:9" pos:end="11:17">VNC_DEBUG</name><argument_list pos:start="11:18" pos:end="11:53">(<argument pos:start="11:19" pos:end="11:43"><expr pos:start="11:19" pos:end="11:43"><literal type="string" pos:start="11:19" pos:end="11:43">"Too much SASL data %d\n"</literal></expr></argument>, <argument pos:start="11:46" pos:end="11:52"><expr pos:start="11:46" pos:end="11:52"><name pos:start="11:46" pos:end="11:52">steplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:29"><expr pos:start="13:9" pos:end="13:28"><call pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:24">vnc_client_error</name><argument_list pos:start="13:25" pos:end="13:28">(<argument pos:start="13:26" pos:end="13:27"><expr pos:start="13:26" pos:end="13:27"><name pos:start="13:26" pos:end="13:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:67"><if pos:start="21:5" pos:end="23:59">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:15">steplen</name> <operator pos:start="21:17" pos:end="21:18">==</operator> <literal type="number" pos:start="21:20" pos:end="21:20">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:59"><block_content pos:start="23:9" pos:end="23:59">

        <return pos:start="23:9" pos:end="23:59">return <expr pos:start="23:16" pos:end="23:58"><call pos:start="23:16" pos:end="23:58"><name pos:start="23:16" pos:end="23:45">protocol_client_auth_sasl_step</name><argument_list pos:start="23:46" pos:end="23:58">(<argument pos:start="23:47" pos:end="23:48"><expr pos:start="23:47" pos:end="23:48"><name pos:start="23:47" pos:end="23:48">vs</name></expr></argument>, <argument pos:start="23:51" pos:end="23:54"><expr pos:start="23:51" pos:end="23:54"><name pos:start="23:51" pos:end="23:54">NULL</name></expr></argument>, <argument pos:start="23:57" pos:end="23:57"><expr pos:start="23:57" pos:end="23:57"><literal type="number" pos:start="23:57" pos:end="23:57">0</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="25:5" pos:end="27:67">else<block type="pseudo" pos:start="27:9" pos:end="27:67"><block_content pos:start="27:9" pos:end="27:67">

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:21">vnc_read_when</name><argument_list pos:start="27:22" pos:end="27:66">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><name pos:start="27:23" pos:end="27:24">vs</name></expr></argument>, <argument pos:start="27:27" pos:end="27:56"><expr pos:start="27:27" pos:end="27:56"><name pos:start="27:27" pos:end="27:56">protocol_client_auth_sasl_step</name></expr></argument>, <argument pos:start="27:59" pos:end="27:65"><expr pos:start="27:59" pos:end="27:65"><name pos:start="27:59" pos:end="27:65">steplen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
