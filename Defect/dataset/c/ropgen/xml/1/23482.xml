<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23482.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">amv_encode_picture</name><parameter_list pos:start="1:30" pos:end="3:70">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:51"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">AVPacket</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:66">pkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:52"><decl pos:start="3:31" pos:end="3:52"><type pos:start="3:31" pos:end="3:52"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:43">AVFrame</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:52">pic_arg</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:69"><decl pos:start="3:55" pos:end="3:69"><type pos:start="3:55" pos:end="3:69"><name pos:start="3:55" pos:end="3:57">int</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:69">got_packet</name></decl></parameter>)</parameter_list>



<block pos:start="7:1" pos:end="69:1">{<block_content pos:start="9:5" pos:end="67:15">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">MpegEncContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:14"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">chroma_h_shift</name></decl>, <decl pos:start="15:25" pos:end="15:38"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:38">chroma_v_shift</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:87"><expr pos:start="19:5" pos:end="19:86"><call pos:start="19:5" pos:end="19:86"><name pos:start="19:5" pos:end="19:36">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="19:37" pos:end="19:86">(<argument pos:start="19:38" pos:end="19:51"><expr pos:start="19:38" pos:end="19:51"><name pos:start="19:38" pos:end="19:51"><name pos:start="19:38" pos:end="19:42">avctx</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:51">pix_fmt</name></name></expr></argument>, <argument pos:start="19:54" pos:end="19:68"><expr pos:start="19:54" pos:end="19:68"><operator pos:start="19:54" pos:end="19:54">&amp;</operator><name pos:start="19:55" pos:end="19:68">chroma_h_shift</name></expr></argument>, <argument pos:start="19:71" pos:end="19:85"><expr pos:start="19:71" pos:end="19:85"><operator pos:start="19:71" pos:end="19:71">&amp;</operator><name pos:start="19:72" pos:end="19:85">chroma_v_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="23:5" pos:end="23:44">//CODEC_FLAG_EMU_EDGE have to be cleared</comment>

    <if_stmt pos:start="25:5" pos:end="27:31"><if pos:start="25:5" pos:end="27:31">if<condition pos:start="25:7" pos:end="25:45">(<expr pos:start="25:8" pos:end="25:44"><name pos:start="25:8" pos:end="25:22"><name pos:start="25:8" pos:end="25:8">s</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:15">avctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:22">flags</name></name> <operator pos:start="25:24" pos:end="25:24">&amp;</operator> <name pos:start="25:26" pos:end="25:44">CODEC_FLAG_EMU_EDGE</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:31"><block_content pos:start="27:9" pos:end="27:31">

        <return pos:start="27:9" pos:end="27:31">return <expr pos:start="27:16" pos:end="27:30"><call pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:22">AVERROR</name><argument_list pos:start="27:23" pos:end="27:30">(<argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">height</name></name> <operator pos:start="31:23" pos:end="31:23">&amp;</operator> <literal type="number" pos:start="31:25" pos:end="31:26">15</literal></expr>)</condition> <block pos:start="31:29" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:31">

        <expr_stmt pos:start="33:9" pos:end="37:82"><expr pos:start="33:9" pos:end="37:81"><call pos:start="33:9" pos:end="37:81"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="37:81">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="37:80"><expr pos:start="35:16" pos:end="37:80"><literal type="string" pos:start="35:16" pos:end="35:61">"Height must be a multiple of 16, also note, "</literal>

               <literal type="string" pos:start="37:16" pos:end="37:80">"if you have a AMV sample thats mod 16 != 0, please contact us\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:34"><expr pos:start="45:5" pos:end="45:33"><name pos:start="45:5" pos:end="45:7">pic</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:33"><name pos:start="45:11" pos:end="45:24">av_frame_clone</name><argument_list pos:start="45:25" pos:end="45:33">(<argument pos:start="45:26" pos:end="45:32"><expr pos:start="45:26" pos:end="45:32"><name pos:start="45:26" pos:end="45:32">pic_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="49:31"><if pos:start="47:5" pos:end="49:31">if <condition pos:start="47:8" pos:end="47:13">(<expr pos:start="47:9" pos:end="47:12"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:12">pic</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:31"><block_content pos:start="49:9" pos:end="49:31">

        <return pos:start="49:9" pos:end="49:31">return <expr pos:start="49:16" pos:end="49:30"><call pos:start="49:16" pos:end="49:30"><name pos:start="49:16" pos:end="49:22">AVERROR</name><argument_list pos:start="49:23" pos:end="49:30">(<argument pos:start="49:24" pos:end="49:29"><expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <comment type="line" pos:start="51:5" pos:end="51:43">//picture should be flipped upside-down</comment>

    <for pos:start="53:5" pos:end="61:5">for<control pos:start="53:8" pos:end="53:24">(<init pos:start="53:9" pos:end="53:12"><expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator><literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</init> <condition pos:start="53:14" pos:end="53:19"><expr pos:start="53:14" pos:end="53:18"><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">&lt;</operator> <literal type="number" pos:start="53:18" pos:end="53:18">3</literal></expr>;</condition> <incr pos:start="53:21" pos:end="53:23"><expr pos:start="53:21" pos:end="53:23"><name pos:start="53:21" pos:end="53:21">i</name><operator pos:start="53:22" pos:end="53:23">++</operator></expr></incr>)</control> <block pos:start="53:26" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:31">

        <decl_stmt pos:start="55:9" pos:end="55:50"><decl pos:start="55:9" pos:end="55:49"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:19">vsample</name> <init pos:start="55:21" pos:end="55:49">= <expr pos:start="55:23" pos:end="55:49"><ternary pos:start="55:23" pos:end="55:49"><condition pos:start="55:23" pos:end="55:25"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">i</name></expr> ?</condition><then pos:start="55:27" pos:end="55:45"> <expr pos:start="55:27" pos:end="55:45"><literal type="number" pos:start="55:27" pos:end="55:27">2</literal> <operator pos:start="55:29" pos:end="55:30">&gt;&gt;</operator> <name pos:start="55:32" pos:end="55:45">chroma_v_shift</name></expr> </then><else pos:start="55:47" pos:end="55:49">: <expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:104"><expr pos:start="57:9" pos:end="57:103"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:11">pic</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:17">data</name><index pos:start="57:18" pos:end="57:20">[<expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">i</name></expr>]</index></name> <operator pos:start="57:22" pos:end="57:23">+=</operator> <operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:41"><name pos:start="57:26" pos:end="57:28">pic</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:38">linesize</name><index pos:start="57:39" pos:end="57:41">[<expr pos:start="57:40" pos:end="57:40"><name pos:start="57:40" pos:end="57:40">i</name></expr>]</index></name> <operator pos:start="57:43" pos:end="57:43">*</operator> <operator pos:start="57:45" pos:end="57:45">(</operator><name pos:start="57:46" pos:end="57:52">vsample</name> <operator pos:start="57:54" pos:end="57:54">*</operator> <operator pos:start="57:56" pos:end="57:56">(</operator><literal type="number" pos:start="57:57" pos:end="57:57">8</literal> <operator pos:start="57:59" pos:end="57:59">*</operator> <name pos:start="57:61" pos:end="57:72"><name pos:start="57:61" pos:end="57:61">s</name><operator pos:start="57:62" pos:end="57:63">-&gt;</operator><name pos:start="57:64" pos:end="57:72">mb_height</name></name> <operator pos:start="57:74" pos:end="57:74">-</operator><operator pos:start="57:75" pos:end="57:75">(</operator><operator pos:start="57:76" pos:end="57:76">(</operator><name pos:start="57:77" pos:end="57:85"><name pos:start="57:77" pos:end="57:77">s</name><operator pos:start="57:78" pos:end="57:79">-&gt;</operator><name pos:start="57:80" pos:end="57:85">height</name></name><operator pos:start="57:86" pos:end="57:86">/</operator><name pos:start="57:87" pos:end="57:91">V_MAX</name><operator pos:start="57:92" pos:end="57:92">)</operator><operator pos:start="57:93" pos:end="57:93">&amp;</operator><literal type="number" pos:start="57:94" pos:end="57:94">7</literal><operator pos:start="57:95" pos:end="57:95">)</operator><operator pos:start="57:96" pos:end="57:96">)</operator> <operator pos:start="57:98" pos:end="57:98">-</operator> <literal type="number" pos:start="57:100" pos:end="57:100">1</literal> <operator pos:start="57:102" pos:end="57:102">)</operator><operator pos:start="57:103" pos:end="57:103">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:11">pic</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:21">linesize</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">i</name></expr>]</index></name> <operator pos:start="59:26" pos:end="59:27">*=</operator> <operator pos:start="59:29" pos:end="59:29">-</operator><literal type="number" pos:start="59:30" pos:end="59:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="63:5" pos:end="63:61"><expr pos:start="63:5" pos:end="63:60"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:60"><name pos:start="63:11" pos:end="63:31">ff_MPV_encode_picture</name><argument_list pos:start="63:32" pos:end="63:60">(<argument pos:start="63:33" pos:end="63:37"><expr pos:start="63:33" pos:end="63:37"><name pos:start="63:33" pos:end="63:37">avctx</name></expr></argument>, <argument pos:start="63:40" pos:end="63:42"><expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:42">pkt</name></expr></argument>, <argument pos:start="63:45" pos:end="63:47"><expr pos:start="63:45" pos:end="63:47"><name pos:start="63:45" pos:end="63:47">pic</name></expr></argument>, <argument pos:start="63:50" pos:end="63:59"><expr pos:start="63:50" pos:end="63:59"><name pos:start="63:50" pos:end="63:59">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:17">av_frame_free</name><argument_list pos:start="65:18" pos:end="65:23">(<argument pos:start="65:19" pos:end="65:22"><expr pos:start="65:19" pos:end="65:22"><operator pos:start="65:19" pos:end="65:19">&amp;</operator><name pos:start="65:20" pos:end="65:22">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:15">return <expr pos:start="67:12" pos:end="67:14"><name pos:start="67:12" pos:end="67:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
