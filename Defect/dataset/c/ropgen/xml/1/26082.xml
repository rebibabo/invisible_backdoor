<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26082.c" pos:tabs="8"><function pos:start="1:1" pos:end="46:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:23">copy</name><parameter_list pos:start="1:24" pos:end="1:47">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">LZOContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">c</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:46"><decl pos:start="1:40" pos:end="1:46"><type pos:start="1:40" pos:end="1:46"><name pos:start="1:40" pos:end="1:42">int</name></type> <name pos:start="1:44" pos:end="1:46">cnt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="46:1">{<block_content pos:start="5:5" pos:end="44:23">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:28"><specifier pos:start="5:5" pos:end="5:12">register</specifier> <specifier pos:start="5:14" pos:end="5:18">const</specifier> <name pos:start="5:20" pos:end="5:26">uint8_t</name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:31">src</name> <init pos:start="5:33" pos:end="5:39">= <expr pos:start="5:35" pos:end="5:39"><name pos:start="5:35" pos:end="5:39"><name pos:start="5:35" pos:end="5:35">c</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:39">in</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:22"><specifier pos:start="7:5" pos:end="7:12">register</specifier> <name pos:start="7:14" pos:end="7:20">uint8_t</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">dst</name>       <init pos:start="7:33" pos:end="7:40">= <expr pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:40"><name pos:start="7:35" pos:end="7:35">c</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:40">out</name></name></expr></init></decl>;</decl_stmt>


    <if_stmt pos:start="10:5" pos:end="16:5"><if pos:start="10:5" pos:end="16:5">if <condition pos:start="10:8" pos:end="10:30">(<expr pos:start="10:9" pos:end="10:29"><name pos:start="10:9" pos:end="10:11">cnt</name> <operator pos:start="10:13" pos:end="10:13">&gt;</operator> <name pos:start="10:15" pos:end="10:23"><name pos:start="10:15" pos:end="10:15">c</name><operator pos:start="10:16" pos:end="10:17">-&gt;</operator><name pos:start="10:18" pos:end="10:23">in_end</name></name> <operator pos:start="10:25" pos:end="10:25">-</operator> <name pos:start="10:27" pos:end="10:29">src</name></expr>)</condition> <block pos:start="10:32" pos:end="16:5">{<block_content pos:start="12:9" pos:end="14:42">

        <expr_stmt pos:start="12:9" pos:end="12:46"><expr pos:start="12:9" pos:end="12:45"><name pos:start="12:9" pos:end="12:11">cnt</name>       <operator pos:start="12:19" pos:end="12:19">=</operator> <call pos:start="12:21" pos:end="12:45"><name pos:start="12:21" pos:end="12:25">FFMAX</name><argument_list pos:start="12:26" pos:end="12:45">(<argument pos:start="12:27" pos:end="12:41"><expr pos:start="12:27" pos:end="12:41"><name pos:start="12:27" pos:end="12:35"><name pos:start="12:27" pos:end="12:27">c</name><operator pos:start="12:28" pos:end="12:29">-&gt;</operator><name pos:start="12:30" pos:end="12:35">in_end</name></name> <operator pos:start="12:37" pos:end="12:37">-</operator> <name pos:start="12:39" pos:end="12:41">src</name></expr></argument>, <argument pos:start="12:44" pos:end="12:44"><expr pos:start="12:44" pos:end="12:44"><literal type="number" pos:start="12:44" pos:end="12:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="14:9" pos:end="14:42"><expr pos:start="14:9" pos:end="14:41"><name pos:start="14:9" pos:end="14:16"><name pos:start="14:9" pos:end="14:9">c</name><operator pos:start="14:10" pos:end="14:11">-&gt;</operator><name pos:start="14:12" pos:end="14:16">error</name></name> <operator pos:start="14:18" pos:end="14:19">|=</operator> <name pos:start="14:21" pos:end="14:41">AV_LZO_INPUT_DEPLETED</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="18:5" pos:end="27:0"><if pos:start="18:5" pos:end="27:0">if <condition pos:start="18:8" pos:end="18:31">(<expr pos:start="18:9" pos:end="18:30"><name pos:start="18:9" pos:end="18:11">cnt</name> <operator pos:start="18:13" pos:end="18:13">&gt;</operator> <name pos:start="18:15" pos:end="18:24"><name pos:start="18:15" pos:end="18:15">c</name><operator pos:start="18:16" pos:end="18:17">-&gt;</operator><name pos:start="18:18" pos:end="18:24">out_end</name></name> <operator pos:start="18:26" pos:end="18:26">-</operator> <name pos:start="18:28" pos:end="18:30">dst</name></expr>)</condition> <block pos:start="18:33" pos:end="27:0">{<block_content pos:start="20:9" pos:end="22:39">

        <expr_stmt pos:start="20:9" pos:end="20:47"><expr pos:start="20:9" pos:end="20:46"><name pos:start="20:9" pos:end="20:11">cnt</name>       <operator pos:start="20:19" pos:end="20:19">=</operator> <call pos:start="20:21" pos:end="20:46"><name pos:start="20:21" pos:end="20:25">FFMAX</name><argument_list pos:start="20:26" pos:end="20:46">(<argument pos:start="20:27" pos:end="20:42"><expr pos:start="20:27" pos:end="20:42"><name pos:start="20:27" pos:end="20:36"><name pos:start="20:27" pos:end="20:27">c</name><operator pos:start="20:28" pos:end="20:29">-&gt;</operator><name pos:start="20:30" pos:end="20:36">out_end</name></name> <operator pos:start="20:38" pos:end="20:38">-</operator> <name pos:start="20:40" pos:end="20:42">dst</name></expr></argument>, <argument pos:start="20:45" pos:end="20:45"><expr pos:start="20:45" pos:end="20:45"><literal type="number" pos:start="20:45" pos:end="20:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="22:9" pos:end="22:39"><expr pos:start="22:9" pos:end="22:38"><name pos:start="22:9" pos:end="22:16"><name pos:start="22:9" pos:end="22:9">c</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:16">error</name></name> <operator pos:start="22:18" pos:end="22:19">|=</operator> <name pos:start="22:21" pos:end="22:38">AV_LZO_OUTPUT_FULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="26:1" pos:end="26:51">#<cpp:directive pos:start="26:2" pos:end="26:3">if</cpp:directive> <expr pos:start="26:5" pos:end="26:51"><call pos:start="26:5" pos:end="26:25"><name pos:start="26:5" pos:end="26:11">defined</name><argument_list pos:start="26:12" pos:end="26:25">(<argument pos:start="26:13" pos:end="26:24"><expr pos:start="26:13" pos:end="26:24"><name pos:start="26:13" pos:end="26:24">INBUF_PADDED</name></expr></argument>)</argument_list></call> <operator pos:start="26:27" pos:end="26:28">&amp;&amp;</operator> <call pos:start="26:30" pos:end="26:51"><name pos:start="26:30" pos:end="26:36">defined</name><argument_list pos:start="26:37" pos:end="26:51">(<argument pos:start="26:38" pos:end="26:50"><expr pos:start="26:38" pos:end="26:50"><name pos:start="26:38" pos:end="26:50">OUTBUF_PADDED</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="28:5" pos:end="28:25"><expr pos:start="28:5" pos:end="28:24"><call pos:start="28:5" pos:end="28:24"><name pos:start="28:5" pos:end="28:14">AV_COPY32U</name><argument_list pos:start="28:15" pos:end="28:24">(<argument pos:start="28:16" pos:end="28:18"><expr pos:start="28:16" pos:end="28:18"><name pos:start="28:16" pos:end="28:18">dst</name></expr></argument>, <argument pos:start="28:21" pos:end="28:23"><expr pos:start="28:21" pos:end="28:23"><name pos:start="28:21" pos:end="28:23">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="30:5" pos:end="30:13"><expr pos:start="30:5" pos:end="30:12"><name pos:start="30:5" pos:end="30:7">src</name> <operator pos:start="30:9" pos:end="30:10">+=</operator> <literal type="number" pos:start="30:12" pos:end="30:12">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="32:5" pos:end="32:13"><expr pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">dst</name> <operator pos:start="32:9" pos:end="32:10">+=</operator> <literal type="number" pos:start="32:12" pos:end="32:12">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:13"><expr pos:start="34:5" pos:end="34:12"><name pos:start="34:5" pos:end="34:7">cnt</name> <operator pos:start="34:9" pos:end="34:10">-=</operator> <literal type="number" pos:start="34:12" pos:end="34:12">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="36:5" pos:end="40:26"><if pos:start="36:5" pos:end="40:26">if <condition pos:start="36:8" pos:end="39:0">(<expr pos:start="36:9" pos:end="36:15"><name pos:start="36:9" pos:end="36:11">cnt</name> <operator pos:start="36:13" pos:end="36:13">&gt;</operator> <literal type="number" pos:start="36:15" pos:end="36:15">0</literal></expr>)</condition><block type="pseudo" pos:start="40:5" pos:end="40:26"><block_content pos:start="40:5" pos:end="40:26">

<cpp:endif pos:start="38:1" pos:end="38:6">#<cpp:directive pos:start="38:2" pos:end="38:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="40:5" pos:end="40:26"><expr pos:start="40:5" pos:end="40:25"><call pos:start="40:5" pos:end="40:25"><name pos:start="40:5" pos:end="40:10">memcpy</name><argument_list pos:start="40:11" pos:end="40:25">(<argument pos:start="40:12" pos:end="40:14"><expr pos:start="40:12" pos:end="40:14"><name pos:start="40:12" pos:end="40:14">dst</name></expr></argument>, <argument pos:start="40:17" pos:end="40:19"><expr pos:start="40:17" pos:end="40:19"><name pos:start="40:17" pos:end="40:19">src</name></expr></argument>, <argument pos:start="40:22" pos:end="40:24"><expr pos:start="40:22" pos:end="40:24"><name pos:start="40:22" pos:end="40:24">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="42:5" pos:end="42:23"><expr pos:start="42:5" pos:end="42:22"><name pos:start="42:5" pos:end="42:9"><name pos:start="42:5" pos:end="42:5">c</name><operator pos:start="42:6" pos:end="42:7">-&gt;</operator><name pos:start="42:8" pos:end="42:9">in</name></name>  <operator pos:start="42:12" pos:end="42:12">=</operator> <name pos:start="42:14" pos:end="42:16">src</name> <operator pos:start="42:18" pos:end="42:18">+</operator> <name pos:start="42:20" pos:end="42:22">cnt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="44:5" pos:end="44:23"><expr pos:start="44:5" pos:end="44:22"><name pos:start="44:5" pos:end="44:10"><name pos:start="44:5" pos:end="44:5">c</name><operator pos:start="44:6" pos:end="44:7">-&gt;</operator><name pos:start="44:8" pos:end="44:10">out</name></name> <operator pos:start="44:12" pos:end="44:12">=</operator> <name pos:start="44:14" pos:end="44:16">dst</name> <operator pos:start="44:18" pos:end="44:18">+</operator> <name pos:start="44:20" pos:end="44:22">cnt</name></expr>;</expr_stmt>

</block_content>}</block></function></unit>
