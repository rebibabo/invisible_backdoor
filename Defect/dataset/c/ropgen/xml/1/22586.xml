<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22586.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:42">filter_common</name><parameter_list pos:start="1:43" pos:end="3:54">(<parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">p</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:64">ptrdiff_t</name></type> <name pos:start="1:66" pos:end="1:71">stride</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:53">is4tap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:5">

    <decl_stmt pos:start="7:5" pos:end="9:18"><decl pos:start="7:5" pos:end="9:9"><type pos:start="7:5" pos:end="9:7"><name pos:start="7:5" pos:end="7:15">LOAD_PIXELS</name>

    <name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">a</name></decl>, <decl pos:start="9:12" pos:end="9:13"><type ref="prev" pos:start="7:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:13">f1</name></decl>, <decl pos:start="9:16" pos:end="9:17"><type ref="prev" pos:start="7:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:17">f2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">cm</name> <init pos:start="11:23" pos:end="11:50">= <expr pos:start="11:25" pos:end="11:50"><name pos:start="11:25" pos:end="11:35">ff_crop_tab</name> <operator pos:start="11:37" pos:end="11:37">+</operator> <name pos:start="11:39" pos:end="11:50">MAX_NEG_CROP</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:5">a</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <literal type="number" pos:start="15:9" pos:end="15:9">3</literal> <operator pos:start="15:11" pos:end="15:11">*</operator> <operator pos:start="15:13" pos:end="15:13">(</operator><name pos:start="15:14" pos:end="15:15">q0</name> <operator pos:start="15:17" pos:end="15:17">-</operator> <name pos:start="15:19" pos:end="15:20">p0</name><operator pos:start="15:21" pos:end="15:21">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="21:32"><if pos:start="19:5" pos:end="21:32">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:14">is4tap</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:32"><block_content pos:start="21:9" pos:end="21:32">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:9">a</name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <call pos:start="21:14" pos:end="21:31"><name pos:start="21:14" pos:end="21:22">clip_int8</name><argument_list pos:start="21:23" pos:end="21:31">(<argument pos:start="21:24" pos:end="21:30"><expr pos:start="21:24" pos:end="21:30"><name pos:start="21:24" pos:end="21:25">p1</name> <operator pos:start="21:27" pos:end="21:27">-</operator> <name pos:start="21:29" pos:end="21:30">q1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:5">a</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <call pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:17">clip_int8</name><argument_list pos:start="25:18" pos:end="25:20">(<argument pos:start="25:19" pos:end="25:19"><expr pos:start="25:19" pos:end="25:19"><name pos:start="25:19" pos:end="25:19">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:53">// We deviate from the spec here with c(a+3) &gt;&gt; 3</comment>

    <comment type="line" pos:start="31:5" pos:end="31:37">// since that's what libvpx does.</comment>

    <expr_stmt pos:start="33:5" pos:end="33:32"><expr pos:start="33:5" pos:end="33:31"><name pos:start="33:5" pos:end="33:6">f1</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:26"><name pos:start="33:10" pos:end="33:14">FFMIN</name><argument_list pos:start="33:15" pos:end="33:26">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">a</name> <operator pos:start="33:18" pos:end="33:18">+</operator> <literal type="number" pos:start="33:20" pos:end="33:20">4</literal></expr></argument>, <argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><literal type="number" pos:start="33:23" pos:end="33:25">127</literal></expr></argument>)</argument_list></call> <operator pos:start="33:28" pos:end="33:29">&gt;&gt;</operator> <literal type="number" pos:start="33:31" pos:end="33:31">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:32"><expr pos:start="35:5" pos:end="35:31"><name pos:start="35:5" pos:end="35:6">f2</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:26"><name pos:start="35:10" pos:end="35:14">FFMIN</name><argument_list pos:start="35:15" pos:end="35:26">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">a</name> <operator pos:start="35:18" pos:end="35:18">+</operator> <literal type="number" pos:start="35:20" pos:end="35:20">3</literal></expr></argument>, <argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><literal type="number" pos:start="35:23" pos:end="35:25">127</literal></expr></argument>)</argument_list></call> <operator pos:start="35:28" pos:end="35:29">&gt;&gt;</operator> <literal type="number" pos:start="35:31" pos:end="35:31">3</literal></expr>;</expr_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:62">// Despite what the spec says, we do need to clamp here to</comment>

    <comment type="line" pos:start="41:5" pos:end="41:31">// be bitexact with libvpx.</comment>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:5">p</name><index pos:start="43:6" pos:end="43:18">[<expr pos:start="43:7" pos:end="43:17"><operator pos:start="43:7" pos:end="43:7">-</operator><literal type="number" pos:start="43:8" pos:end="43:8">1</literal> <operator pos:start="43:10" pos:end="43:10">*</operator> <name pos:start="43:12" pos:end="43:17">stride</name></expr>]</index></name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:32"><name pos:start="43:22" pos:end="43:23">cm</name><index pos:start="43:24" pos:end="43:32">[<expr pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:26">p0</name> <operator pos:start="43:28" pos:end="43:28">+</operator> <name pos:start="43:30" pos:end="43:31">f2</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:5">p</name><index pos:start="45:6" pos:end="45:18">[ <expr pos:start="45:8" pos:end="45:17"><literal type="number" pos:start="45:8" pos:end="45:8">0</literal> <operator pos:start="45:10" pos:end="45:10">*</operator> <name pos:start="45:12" pos:end="45:17">stride</name></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:32"><name pos:start="45:22" pos:end="45:23">cm</name><index pos:start="45:24" pos:end="45:32">[<expr pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:26">q0</name> <operator pos:start="45:28" pos:end="45:28">-</operator> <name pos:start="45:30" pos:end="45:31">f1</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="line" pos:start="49:5" pos:end="49:64">// only used for _inner on blocks without high edge variance</comment>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:15">is4tap</name></expr>)</condition> <block pos:start="51:18" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:36">

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">a</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:15">f1</name> <operator pos:start="53:17" pos:end="53:17">+</operator> <literal type="number" pos:start="53:19" pos:end="53:19">1</literal><operator pos:start="53:20" pos:end="53:20">)</operator> <operator pos:start="53:22" pos:end="53:23">&gt;&gt;</operator> <literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:9">p</name><index pos:start="55:10" pos:end="55:22">[<expr pos:start="55:11" pos:end="55:21"><operator pos:start="55:11" pos:end="55:11">-</operator><literal type="number" pos:start="55:12" pos:end="55:12">2</literal> <operator pos:start="55:14" pos:end="55:14">*</operator> <name pos:start="55:16" pos:end="55:21">stride</name></expr>]</index></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <name pos:start="55:26" pos:end="55:35"><name pos:start="55:26" pos:end="55:27">cm</name><index pos:start="55:28" pos:end="55:35">[<expr pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:30">p1</name> <operator pos:start="55:32" pos:end="55:32">+</operator> <name pos:start="55:34" pos:end="55:34">a</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:36"><expr pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:9">p</name><index pos:start="57:10" pos:end="57:22">[ <expr pos:start="57:12" pos:end="57:21"><literal type="number" pos:start="57:12" pos:end="57:12">1</literal> <operator pos:start="57:14" pos:end="57:14">*</operator> <name pos:start="57:16" pos:end="57:21">stride</name></expr>]</index></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:35"><name pos:start="57:26" pos:end="57:27">cm</name><index pos:start="57:28" pos:end="57:35">[<expr pos:start="57:29" pos:end="57:34"><name pos:start="57:29" pos:end="57:30">q1</name> <operator pos:start="57:32" pos:end="57:32">-</operator> <name pos:start="57:34" pos:end="57:34">a</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
