<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7289.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">parse_mb_skip</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">Wmv2Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">w</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">mb_x</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:18">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier><specifier pos:start="7:21" pos:end="7:25">const</specifier></type> <name pos:start="7:27" pos:end="7:27">s</name> <init pos:start="7:29" pos:end="7:35">= <expr pos:start="7:31" pos:end="7:35"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:35"><name pos:start="7:32" pos:end="7:32">w</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:35">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:62"><decl pos:start="9:5" pos:end="9:61"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:12">uint32_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier><specifier pos:start="9:15" pos:end="9:19">const</specifier></type> <name pos:start="9:21" pos:end="9:27">mb_type</name> <init pos:start="9:29" pos:end="9:61">= <expr pos:start="9:31" pos:end="9:61"><name pos:start="9:31" pos:end="9:61"><name pos:start="9:31" pos:end="9:31">s</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:52">current_picture_ptr</name><operator pos:start="9:53" pos:end="9:54">-&gt;</operator><name pos:start="9:55" pos:end="9:61">mb_type</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:39"><expr pos:start="13:5" pos:end="13:38"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:5">w</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:16">skip_type</name></name> <operator pos:start="13:18" pos:end="13:18">=</operator> <call pos:start="13:20" pos:end="13:38"><name pos:start="13:20" pos:end="13:27">get_bits</name><argument_list pos:start="13:28" pos:end="13:38">(<argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><operator pos:start="13:29" pos:end="13:29">&amp;</operator><name pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:34">gb</name></name></expr></argument>, <argument pos:start="13:37" pos:end="13:37"><expr pos:start="13:37" pos:end="13:37"><literal type="number" pos:start="13:37" pos:end="13:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="93:5">switch <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:13">w</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:24">skip_type</name></name></expr>)</condition> <block pos:start="15:27" pos:end="93:5">{<block_content pos:start="17:5" pos:end="91:14">

    <case pos:start="17:5" pos:end="17:24">case <expr pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:23">SKIP_TYPE_NONE</name></expr>:</case>

        <for pos:start="19:9" pos:end="25:47">for <control pos:start="19:13" pos:end="19:51">(<init pos:start="19:14" pos:end="19:22"><expr pos:start="19:14" pos:end="19:21"><name pos:start="19:14" pos:end="19:17">mb_y</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:21">0</literal></expr>;</init> <condition pos:start="19:24" pos:end="19:43"><expr pos:start="19:24" pos:end="19:42"><name pos:start="19:24" pos:end="19:27">mb_y</name> <operator pos:start="19:29" pos:end="19:29">&lt;</operator> <name pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:42">mb_height</name></name></expr>;</condition> <incr pos:start="19:45" pos:end="19:50"><expr pos:start="19:45" pos:end="19:50"><name pos:start="19:45" pos:end="19:48">mb_y</name><operator pos:start="19:49" pos:end="19:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:13" pos:end="25:47"><block_content pos:start="21:13" pos:end="25:47">

            <for pos:start="21:13" pos:end="25:47">for <control pos:start="21:17" pos:end="21:54">(<init pos:start="21:18" pos:end="21:26"><expr pos:start="21:18" pos:end="21:25"><name pos:start="21:18" pos:end="21:21">mb_x</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</init> <condition pos:start="21:28" pos:end="21:46"><expr pos:start="21:28" pos:end="21:45"><name pos:start="21:28" pos:end="21:31">mb_x</name> <operator pos:start="21:33" pos:end="21:33">&lt;</operator> <name pos:start="21:35" pos:end="21:45"><name pos:start="21:35" pos:end="21:35">s</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:45">mb_width</name></name></expr>;</condition> <incr pos:start="21:48" pos:end="21:53"><expr pos:start="21:48" pos:end="21:53"><name pos:start="21:48" pos:end="21:51">mb_x</name><operator pos:start="21:52" pos:end="21:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:17" pos:end="25:47"><block_content pos:start="23:17" pos:end="25:47">

                <expr_stmt pos:start="23:17" pos:end="25:47"><expr pos:start="23:17" pos:end="25:46"><name pos:start="23:17" pos:end="23:51"><name pos:start="23:17" pos:end="23:23">mb_type</name><index pos:start="23:24" pos:end="23:51">[<expr pos:start="23:25" pos:end="23:50"><name pos:start="23:25" pos:end="23:28">mb_y</name> <operator pos:start="23:30" pos:end="23:30">*</operator> <name pos:start="23:32" pos:end="23:43"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:43">mb_stride</name></name> <operator pos:start="23:45" pos:end="23:45">+</operator> <name pos:start="23:47" pos:end="23:50">mb_x</name></expr>]</index></name> <operator pos:start="23:53" pos:end="23:53">=</operator>

                    <name pos:start="25:21" pos:end="25:33">MB_TYPE_16x16</name> <operator pos:start="25:35" pos:end="25:35">|</operator> <name pos:start="25:37" pos:end="25:46">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:24">case <expr pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:23">SKIP_TYPE_MPEG</name></expr>:</case>

        <for pos:start="31:9" pos:end="37:88">for <control pos:start="31:13" pos:end="31:51">(<init pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:17">mb_y</name> <operator pos:start="31:19" pos:end="31:19">=</operator> <literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr>;</init> <condition pos:start="31:24" pos:end="31:43"><expr pos:start="31:24" pos:end="31:42"><name pos:start="31:24" pos:end="31:27">mb_y</name> <operator pos:start="31:29" pos:end="31:29">&lt;</operator> <name pos:start="31:31" pos:end="31:42"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:42">mb_height</name></name></expr>;</condition> <incr pos:start="31:45" pos:end="31:50"><expr pos:start="31:45" pos:end="31:50"><name pos:start="31:45" pos:end="31:48">mb_y</name><operator pos:start="31:49" pos:end="31:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="33:13" pos:end="37:88"><block_content pos:start="33:13" pos:end="37:88">

            <for pos:start="33:13" pos:end="37:88">for <control pos:start="33:17" pos:end="33:54">(<init pos:start="33:18" pos:end="33:26"><expr pos:start="33:18" pos:end="33:25"><name pos:start="33:18" pos:end="33:21">mb_x</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr>;</init> <condition pos:start="33:28" pos:end="33:46"><expr pos:start="33:28" pos:end="33:45"><name pos:start="33:28" pos:end="33:31">mb_x</name> <operator pos:start="33:33" pos:end="33:33">&lt;</operator> <name pos:start="33:35" pos:end="33:45"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:45">mb_width</name></name></expr>;</condition> <incr pos:start="33:48" pos:end="33:53"><expr pos:start="33:48" pos:end="33:53"><name pos:start="33:48" pos:end="33:51">mb_x</name><operator pos:start="33:52" pos:end="33:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:17" pos:end="37:88"><block_content pos:start="35:17" pos:end="37:88">

                <expr_stmt pos:start="35:17" pos:end="37:88"><expr pos:start="35:17" pos:end="37:87"><name pos:start="35:17" pos:end="35:51"><name pos:start="35:17" pos:end="35:23">mb_type</name><index pos:start="35:24" pos:end="35:51">[<expr pos:start="35:25" pos:end="35:50"><name pos:start="35:25" pos:end="35:28">mb_y</name> <operator pos:start="35:30" pos:end="35:30">*</operator> <name pos:start="35:32" pos:end="35:43"><name pos:start="35:32" pos:end="35:32">s</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:43">mb_stride</name></name> <operator pos:start="35:45" pos:end="35:45">+</operator> <name pos:start="35:47" pos:end="35:50">mb_x</name></expr>]</index></name> <operator pos:start="35:53" pos:end="35:53">=</operator>

                    <operator pos:start="37:21" pos:end="37:21">(</operator><ternary pos:start="37:22" pos:end="37:57"><condition pos:start="37:22" pos:end="37:40"><expr pos:start="37:22" pos:end="37:38"><call pos:start="37:22" pos:end="37:38"><name pos:start="37:22" pos:end="37:30">get_bits1</name><argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="37:42" pos:end="37:53"> <expr pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:53">MB_TYPE_SKIP</name></expr> </then><else pos:start="37:55" pos:end="37:57">: <expr pos:start="37:57" pos:end="37:57"><literal type="number" pos:start="37:57" pos:end="37:57">0</literal></expr></else></ternary><operator pos:start="37:58" pos:end="37:58">)</operator> <operator pos:start="37:60" pos:end="37:60">|</operator> <name pos:start="37:62" pos:end="37:74">MB_TYPE_16x16</name> <operator pos:start="37:76" pos:end="37:76">|</operator> <name pos:start="37:78" pos:end="37:87">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">SKIP_TYPE_ROW</name></expr>:</case>

        <for pos:start="43:9" pos:end="63:9">for <control pos:start="43:13" pos:end="43:51">(<init pos:start="43:14" pos:end="43:22"><expr pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:17">mb_y</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>;</init> <condition pos:start="43:24" pos:end="43:43"><expr pos:start="43:24" pos:end="43:42"><name pos:start="43:24" pos:end="43:27">mb_y</name> <operator pos:start="43:29" pos:end="43:29">&lt;</operator> <name pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:42">mb_height</name></name></expr>;</condition> <incr pos:start="43:45" pos:end="43:50"><expr pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:48">mb_y</name><operator pos:start="43:49" pos:end="43:50">++</operator></expr></incr>)</control> <block pos:start="43:53" pos:end="63:9">{<block_content pos:start="45:13" pos:end="61:13">

            <if_stmt pos:start="45:13" pos:end="61:13"><if pos:start="45:13" pos:end="53:13">if <condition pos:start="45:16" pos:end="45:34">(<expr pos:start="45:17" pos:end="45:33"><call pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:25">get_bits1</name><argument_list pos:start="45:26" pos:end="45:33">(<argument pos:start="45:27" pos:end="45:32"><expr pos:start="45:27" pos:end="45:32"><operator pos:start="45:27" pos:end="45:27">&amp;</operator><name pos:start="45:28" pos:end="45:32"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:36" pos:end="53:13">{<block_content pos:start="47:17" pos:end="51:66">

                <for pos:start="47:17" pos:end="51:66">for <control pos:start="47:21" pos:end="47:58">(<init pos:start="47:22" pos:end="47:30"><expr pos:start="47:22" pos:end="47:29"><name pos:start="47:22" pos:end="47:25">mb_x</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <literal type="number" pos:start="47:29" pos:end="47:29">0</literal></expr>;</init> <condition pos:start="47:32" pos:end="47:50"><expr pos:start="47:32" pos:end="47:49"><name pos:start="47:32" pos:end="47:35">mb_x</name> <operator pos:start="47:37" pos:end="47:37">&lt;</operator> <name pos:start="47:39" pos:end="47:49"><name pos:start="47:39" pos:end="47:39">s</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:49">mb_width</name></name></expr>;</condition> <incr pos:start="47:52" pos:end="47:57"><expr pos:start="47:52" pos:end="47:57"><name pos:start="47:52" pos:end="47:55">mb_x</name><operator pos:start="47:56" pos:end="47:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="49:21" pos:end="51:66"><block_content pos:start="49:21" pos:end="51:66">

                    <expr_stmt pos:start="49:21" pos:end="51:66"><expr pos:start="49:21" pos:end="51:65"><name pos:start="49:21" pos:end="49:55"><name pos:start="49:21" pos:end="49:27">mb_type</name><index pos:start="49:28" pos:end="49:55">[<expr pos:start="49:29" pos:end="49:54"><name pos:start="49:29" pos:end="49:32">mb_y</name> <operator pos:start="49:34" pos:end="49:34">*</operator> <name pos:start="49:36" pos:end="49:47"><name pos:start="49:36" pos:end="49:36">s</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:47">mb_stride</name></name> <operator pos:start="49:49" pos:end="49:49">+</operator> <name pos:start="49:51" pos:end="49:54">mb_x</name></expr>]</index></name> <operator pos:start="49:57" pos:end="49:57">=</operator>

                        <name pos:start="51:25" pos:end="51:36">MB_TYPE_SKIP</name> <operator pos:start="51:38" pos:end="51:38">|</operator> <name pos:start="51:40" pos:end="51:52">MB_TYPE_16x16</name> <operator pos:start="51:54" pos:end="51:54">|</operator> <name pos:start="51:56" pos:end="51:65">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="53:15" pos:end="61:13">else <block pos:start="53:20" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:92">

                <for pos:start="55:17" pos:end="59:92">for <control pos:start="55:21" pos:end="55:58">(<init pos:start="55:22" pos:end="55:30"><expr pos:start="55:22" pos:end="55:29"><name pos:start="55:22" pos:end="55:25">mb_x</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr>;</init> <condition pos:start="55:32" pos:end="55:50"><expr pos:start="55:32" pos:end="55:49"><name pos:start="55:32" pos:end="55:35">mb_x</name> <operator pos:start="55:37" pos:end="55:37">&lt;</operator> <name pos:start="55:39" pos:end="55:49"><name pos:start="55:39" pos:end="55:39">s</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:49">mb_width</name></name></expr>;</condition> <incr pos:start="55:52" pos:end="55:57"><expr pos:start="55:52" pos:end="55:57"><name pos:start="55:52" pos:end="55:55">mb_x</name><operator pos:start="55:56" pos:end="55:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:21" pos:end="59:92"><block_content pos:start="57:21" pos:end="59:92">

                    <expr_stmt pos:start="57:21" pos:end="59:92"><expr pos:start="57:21" pos:end="59:91"><name pos:start="57:21" pos:end="57:55"><name pos:start="57:21" pos:end="57:27">mb_type</name><index pos:start="57:28" pos:end="57:55">[<expr pos:start="57:29" pos:end="57:54"><name pos:start="57:29" pos:end="57:32">mb_y</name> <operator pos:start="57:34" pos:end="57:34">*</operator> <name pos:start="57:36" pos:end="57:47"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:47">mb_stride</name></name> <operator pos:start="57:49" pos:end="57:49">+</operator> <name pos:start="57:51" pos:end="57:54">mb_x</name></expr>]</index></name> <operator pos:start="57:57" pos:end="57:57">=</operator>

                        <operator pos:start="59:25" pos:end="59:25">(</operator><ternary pos:start="59:26" pos:end="59:61"><condition pos:start="59:26" pos:end="59:44"><expr pos:start="59:26" pos:end="59:42"><call pos:start="59:26" pos:end="59:42"><name pos:start="59:26" pos:end="59:34">get_bits1</name><argument_list pos:start="59:35" pos:end="59:42">(<argument pos:start="59:36" pos:end="59:41"><expr pos:start="59:36" pos:end="59:41"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:41"><name pos:start="59:37" pos:end="59:37">s</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:41">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="59:46" pos:end="59:57"> <expr pos:start="59:46" pos:end="59:57"><name pos:start="59:46" pos:end="59:57">MB_TYPE_SKIP</name></expr> </then><else pos:start="59:59" pos:end="59:61">: <expr pos:start="59:61" pos:end="59:61"><literal type="number" pos:start="59:61" pos:end="59:61">0</literal></expr></else></ternary><operator pos:start="59:62" pos:end="59:62">)</operator> <operator pos:start="59:64" pos:end="59:64">|</operator> <name pos:start="59:66" pos:end="59:78">MB_TYPE_16x16</name> <operator pos:start="59:80" pos:end="59:80">|</operator> <name pos:start="59:82" pos:end="59:91">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:23">case <expr pos:start="67:10" pos:end="67:22"><name pos:start="67:10" pos:end="67:22">SKIP_TYPE_COL</name></expr>:</case>

        <for pos:start="69:9" pos:end="89:9">for <control pos:start="69:13" pos:end="69:50">(<init pos:start="69:14" pos:end="69:22"><expr pos:start="69:14" pos:end="69:21"><name pos:start="69:14" pos:end="69:17">mb_x</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>;</init> <condition pos:start="69:24" pos:end="69:42"><expr pos:start="69:24" pos:end="69:41"><name pos:start="69:24" pos:end="69:27">mb_x</name> <operator pos:start="69:29" pos:end="69:29">&lt;</operator> <name pos:start="69:31" pos:end="69:41"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:41">mb_width</name></name></expr>;</condition> <incr pos:start="69:44" pos:end="69:49"><expr pos:start="69:44" pos:end="69:49"><name pos:start="69:44" pos:end="69:47">mb_x</name><operator pos:start="69:48" pos:end="69:49">++</operator></expr></incr>)</control> <block pos:start="69:52" pos:end="89:9">{<block_content pos:start="71:13" pos:end="87:13">

            <if_stmt pos:start="71:13" pos:end="87:13"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:34">(<expr pos:start="71:17" pos:end="71:33"><call pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:25">get_bits1</name><argument_list pos:start="71:26" pos:end="71:33">(<argument pos:start="71:27" pos:end="71:32"><expr pos:start="71:27" pos:end="71:32"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:32"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:32">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:36" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:66">

                <for pos:start="73:17" pos:end="77:66">for <control pos:start="73:21" pos:end="73:59">(<init pos:start="73:22" pos:end="73:30"><expr pos:start="73:22" pos:end="73:29"><name pos:start="73:22" pos:end="73:25">mb_y</name> <operator pos:start="73:27" pos:end="73:27">=</operator> <literal type="number" pos:start="73:29" pos:end="73:29">0</literal></expr>;</init> <condition pos:start="73:32" pos:end="73:51"><expr pos:start="73:32" pos:end="73:50"><name pos:start="73:32" pos:end="73:35">mb_y</name> <operator pos:start="73:37" pos:end="73:37">&lt;</operator> <name pos:start="73:39" pos:end="73:50"><name pos:start="73:39" pos:end="73:39">s</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:50">mb_height</name></name></expr>;</condition> <incr pos:start="73:53" pos:end="73:58"><expr pos:start="73:53" pos:end="73:58"><name pos:start="73:53" pos:end="73:56">mb_y</name><operator pos:start="73:57" pos:end="73:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:21" pos:end="77:66"><block_content pos:start="75:21" pos:end="77:66">

                    <expr_stmt pos:start="75:21" pos:end="77:66"><expr pos:start="75:21" pos:end="77:65"><name pos:start="75:21" pos:end="75:55"><name pos:start="75:21" pos:end="75:27">mb_type</name><index pos:start="75:28" pos:end="75:55">[<expr pos:start="75:29" pos:end="75:54"><name pos:start="75:29" pos:end="75:32">mb_y</name> <operator pos:start="75:34" pos:end="75:34">*</operator> <name pos:start="75:36" pos:end="75:47"><name pos:start="75:36" pos:end="75:36">s</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:47">mb_stride</name></name> <operator pos:start="75:49" pos:end="75:49">+</operator> <name pos:start="75:51" pos:end="75:54">mb_x</name></expr>]</index></name> <operator pos:start="75:57" pos:end="75:57">=</operator>

                        <name pos:start="77:25" pos:end="77:36">MB_TYPE_SKIP</name> <operator pos:start="77:38" pos:end="77:38">|</operator> <name pos:start="77:40" pos:end="77:52">MB_TYPE_16x16</name> <operator pos:start="77:54" pos:end="77:54">|</operator> <name pos:start="77:56" pos:end="77:65">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="87:13">else <block pos:start="79:20" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:92">

                <for pos:start="81:17" pos:end="85:92">for <control pos:start="81:21" pos:end="81:59">(<init pos:start="81:22" pos:end="81:30"><expr pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:25">mb_y</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">0</literal></expr>;</init> <condition pos:start="81:32" pos:end="81:51"><expr pos:start="81:32" pos:end="81:50"><name pos:start="81:32" pos:end="81:35">mb_y</name> <operator pos:start="81:37" pos:end="81:37">&lt;</operator> <name pos:start="81:39" pos:end="81:50"><name pos:start="81:39" pos:end="81:39">s</name><operator pos:start="81:40" pos:end="81:41">-&gt;</operator><name pos:start="81:42" pos:end="81:50">mb_height</name></name></expr>;</condition> <incr pos:start="81:53" pos:end="81:58"><expr pos:start="81:53" pos:end="81:58"><name pos:start="81:53" pos:end="81:56">mb_y</name><operator pos:start="81:57" pos:end="81:58">++</operator></expr></incr>)</control><block type="pseudo" pos:start="83:21" pos:end="85:92"><block_content pos:start="83:21" pos:end="85:92">

                    <expr_stmt pos:start="83:21" pos:end="85:92"><expr pos:start="83:21" pos:end="85:91"><name pos:start="83:21" pos:end="83:55"><name pos:start="83:21" pos:end="83:27">mb_type</name><index pos:start="83:28" pos:end="83:55">[<expr pos:start="83:29" pos:end="83:54"><name pos:start="83:29" pos:end="83:32">mb_y</name> <operator pos:start="83:34" pos:end="83:34">*</operator> <name pos:start="83:36" pos:end="83:47"><name pos:start="83:36" pos:end="83:36">s</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:47">mb_stride</name></name> <operator pos:start="83:49" pos:end="83:49">+</operator> <name pos:start="83:51" pos:end="83:54">mb_x</name></expr>]</index></name> <operator pos:start="83:57" pos:end="83:57">=</operator>

                        <operator pos:start="85:25" pos:end="85:25">(</operator><ternary pos:start="85:26" pos:end="85:61"><condition pos:start="85:26" pos:end="85:44"><expr pos:start="85:26" pos:end="85:42"><call pos:start="85:26" pos:end="85:42"><name pos:start="85:26" pos:end="85:34">get_bits1</name><argument_list pos:start="85:35" pos:end="85:42">(<argument pos:start="85:36" pos:end="85:41"><expr pos:start="85:36" pos:end="85:41"><operator pos:start="85:36" pos:end="85:36">&amp;</operator><name pos:start="85:37" pos:end="85:41"><name pos:start="85:37" pos:end="85:37">s</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:41">gb</name></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="85:46" pos:end="85:57"> <expr pos:start="85:46" pos:end="85:57"><name pos:start="85:46" pos:end="85:57">MB_TYPE_SKIP</name></expr> </then><else pos:start="85:59" pos:end="85:61">: <expr pos:start="85:61" pos:end="85:61"><literal type="number" pos:start="85:61" pos:end="85:61">0</literal></expr></else></ternary><operator pos:start="85:62" pos:end="85:62">)</operator> <operator pos:start="85:64" pos:end="85:64">|</operator> <name pos:start="85:66" pos:end="85:78">MB_TYPE_16x16</name> <operator pos:start="85:80" pos:end="85:80">|</operator> <name pos:start="85:82" pos:end="85:91">MB_TYPE_L0</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
