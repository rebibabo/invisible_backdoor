<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8713.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:12">target_ulong</name></type> <name pos:start="1:14" pos:end="1:28">spapr_rtas_call</name><parameter_list pos:start="1:29" pos:end="5:62">(<parameter pos:start="1:30" pos:end="1:44"><decl pos:start="1:30" pos:end="1:44"><type pos:start="1:30" pos:end="1:44"><name pos:start="1:30" pos:end="1:39">PowerPCCPU</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">cpu</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><name pos:start="1:47" pos:end="1:62">sPAPREnvironment</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">spapr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:43"><decl pos:start="3:30" pos:end="3:43"><type pos:start="3:30" pos:end="3:43"><name pos:start="3:30" pos:end="3:37">uint32_t</name></type> <name pos:start="3:39" pos:end="3:43">token</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:59"><decl pos:start="3:46" pos:end="3:59"><type pos:start="3:46" pos:end="3:59"><name pos:start="3:46" pos:end="3:53">uint32_t</name></type> <name pos:start="3:55" pos:end="3:59">nargs</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:78"><decl pos:start="3:62" pos:end="3:78"><type pos:start="3:62" pos:end="3:78"><name pos:start="3:62" pos:end="3:73">target_ulong</name></type> <name pos:start="3:75" pos:end="3:78">args</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:42"><decl pos:start="5:30" pos:end="5:42"><type pos:start="5:30" pos:end="5:42"><name pos:start="5:30" pos:end="5:37">uint32_t</name></type> <name pos:start="5:39" pos:end="5:42">nret</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:61"><decl pos:start="5:45" pos:end="5:61"><type pos:start="5:45" pos:end="5:61"><name pos:start="5:45" pos:end="5:56">target_ulong</name></type> <name pos:start="5:58" pos:end="5:61">rets</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:23">

    <if_stmt pos:start="9:5" pos:end="25:5"><if pos:start="9:5" pos:end="25:5">if <condition pos:start="9:8" pos:end="11:46">(<expr pos:start="9:9" pos:end="11:45"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:14">token</name> <operator pos:start="9:16" pos:end="9:17">&gt;=</operator> <name pos:start="9:19" pos:end="9:28">TOKEN_BASE</name><operator pos:start="9:29" pos:end="9:29">)</operator>

        <operator pos:start="11:9" pos:end="11:10">&amp;&amp;</operator> <operator pos:start="11:12" pos:end="11:12">(</operator><operator pos:start="11:13" pos:end="11:13">(</operator><name pos:start="11:14" pos:end="11:18">token</name> <operator pos:start="11:20" pos:end="11:20">-</operator> <name pos:start="11:22" pos:end="11:31">TOKEN_BASE</name><operator pos:start="11:32" pos:end="11:32">)</operator> <operator pos:start="11:34" pos:end="11:34">&lt;</operator> <name pos:start="11:36" pos:end="11:44">TOKEN_MAX</name><operator pos:start="11:45" pos:end="11:45">)</operator></expr>)</condition> <block pos:start="11:48" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:9">

        <decl_stmt pos:start="13:9" pos:end="13:67"><decl pos:start="13:9" pos:end="13:66"><type pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:14">struct</name> <name pos:start="13:16" pos:end="13:24">rtas_call</name></name> <modifier pos:start="13:26" pos:end="13:26">*</modifier></type><name pos:start="13:27" pos:end="13:30">call</name> <init pos:start="13:32" pos:end="13:66">= <expr pos:start="13:34" pos:end="13:66"><name pos:start="13:34" pos:end="13:43">rtas_table</name> <operator pos:start="13:45" pos:end="13:45">+</operator> <operator pos:start="13:47" pos:end="13:47">(</operator><name pos:start="13:48" pos:end="13:52">token</name> <operator pos:start="13:54" pos:end="13:54">-</operator> <name pos:start="13:56" pos:end="13:65">TOKEN_BASE</name><operator pos:start="13:66" pos:end="13:66">)</operator></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:21">(<expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:16">call</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:20">fn</name></name></expr>)</condition> <block pos:start="17:23" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:29">

            <expr_stmt pos:start="19:13" pos:end="19:65"><expr pos:start="19:13" pos:end="19:64"><call pos:start="19:13" pos:end="19:64"><name pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:16">call</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:20">fn</name></name><argument_list pos:start="19:21" pos:end="19:64">(<argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">cpu</name></expr></argument>, <argument pos:start="19:27" pos:end="19:31"><expr pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:31">spapr</name></expr></argument>, <argument pos:start="19:34" pos:end="19:38"><expr pos:start="19:34" pos:end="19:38"><name pos:start="19:34" pos:end="19:38">token</name></expr></argument>, <argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">nargs</name></expr></argument>, <argument pos:start="19:48" pos:end="19:51"><expr pos:start="19:48" pos:end="19:51"><name pos:start="19:48" pos:end="19:51">args</name></expr></argument>, <argument pos:start="19:54" pos:end="19:57"><expr pos:start="19:54" pos:end="19:57"><name pos:start="19:54" pos:end="19:57">nret</name></expr></argument>, <argument pos:start="19:60" pos:end="19:63"><expr pos:start="19:60" pos:end="19:63"><name pos:start="19:60" pos:end="19:63">rets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:29">return <expr pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:28">H_SUCCESS</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="35:38">/* HACK: Some Linux early debug code uses RTAS display-character,

     * but assumes the token value is 0xa (which it is on some real

     * machines) without looking it up in the device tree.  This

     * special case makes this work */</comment>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:13">token</name> <operator pos:start="37:15" pos:end="37:16">==</operator> <literal type="number" pos:start="37:18" pos:end="37:20">0xa</literal></expr>)</condition> <block pos:start="37:23" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:25">

        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:30">rtas_display_character</name><argument_list pos:start="39:31" pos:end="39:72">(<argument pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:34">cpu</name></expr></argument>, <argument pos:start="39:37" pos:end="39:41"><expr pos:start="39:37" pos:end="39:41"><name pos:start="39:37" pos:end="39:41">spapr</name></expr></argument>, <argument pos:start="39:44" pos:end="39:46"><expr pos:start="39:44" pos:end="39:46"><literal type="number" pos:start="39:44" pos:end="39:46">0xa</literal></expr></argument>, <argument pos:start="39:49" pos:end="39:53"><expr pos:start="39:49" pos:end="39:53"><name pos:start="39:49" pos:end="39:53">nargs</name></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">args</name></expr></argument>, <argument pos:start="39:62" pos:end="39:65"><expr pos:start="39:62" pos:end="39:65"><name pos:start="39:62" pos:end="39:65">nret</name></expr></argument>, <argument pos:start="39:68" pos:end="39:71"><expr pos:start="39:68" pos:end="39:71"><name pos:start="39:68" pos:end="39:71">rets</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:25">return <expr pos:start="41:16" pos:end="41:24"><name pos:start="41:16" pos:end="41:24">H_SUCCESS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:54"><expr pos:start="47:5" pos:end="47:53"><call pos:start="47:5" pos:end="47:53"><name pos:start="47:5" pos:end="47:17">hcall_dprintf</name><argument_list pos:start="47:18" pos:end="47:53">(<argument pos:start="47:19" pos:end="47:45"><expr pos:start="47:19" pos:end="47:45"><literal type="string" pos:start="47:19" pos:end="47:45">"Unknown RTAS token 0x%x\n"</literal></expr></argument>, <argument pos:start="47:48" pos:end="47:52"><expr pos:start="47:48" pos:end="47:52"><name pos:start="47:48" pos:end="47:52">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:43"><expr pos:start="49:5" pos:end="49:42"><call pos:start="49:5" pos:end="49:42"><name pos:start="49:5" pos:end="49:11">rtas_st</name><argument_list pos:start="49:12" pos:end="49:42">(<argument pos:start="49:13" pos:end="49:16"><expr pos:start="49:13" pos:end="49:16"><name pos:start="49:13" pos:end="49:16">rets</name></expr></argument>, <argument pos:start="49:19" pos:end="49:19"><expr pos:start="49:19" pos:end="49:19"><literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr></argument>, <argument pos:start="49:22" pos:end="49:41"><expr pos:start="49:22" pos:end="49:41"><name pos:start="49:22" pos:end="49:41">RTAS_OUT_PARAM_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:23">return <expr pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:22">H_PARAMETER</name></expr>;</return>

</block_content>}</block></function>
</unit>
