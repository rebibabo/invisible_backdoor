<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25662.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">celt_header</name><parameter_list pos:start="1:23" pos:end="1:51">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:50"><decl pos:start="1:44" pos:end="1:50"><type pos:start="1:44" pos:end="1:50"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:50">idx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:14">ogg</name></name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ogg</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">ogg_stream</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:25">os</name> <init pos:start="7:27" pos:end="7:46">= <expr pos:start="7:29" pos:end="7:46"><name pos:start="7:29" pos:end="7:40"><name pos:start="7:29" pos:end="7:31">ogg</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:40">streams</name></name> <operator pos:start="7:42" pos:end="7:42">+</operator> <name pos:start="7:44" pos:end="7:46">idx</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:34">= <expr pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:34"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:34">[<expr pos:start="9:31" pos:end="9:33"><name pos:start="9:31" pos:end="9:33">idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:26">oggcelt_private</name></name> <modifier pos:start="11:28" pos:end="11:28">*</modifier></type><name pos:start="11:29" pos:end="11:32">priv</name> <init pos:start="11:34" pos:end="11:46">= <expr pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:37">os</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:46">private</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:38"><decl pos:start="13:5" pos:end="13:37"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:14">p</name> <init pos:start="13:16" pos:end="13:37">= <expr pos:start="13:18" pos:end="13:37"><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:19">os</name><operator pos:start="13:20" pos:end="13:21">-&gt;</operator><name pos:start="13:22" pos:end="13:24">buf</name></name> <operator pos:start="13:26" pos:end="13:26">+</operator> <name pos:start="13:28" pos:end="13:37"><name pos:start="13:28" pos:end="13:29">os</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:37">pstart</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="99:5"><if pos:start="17:5" pos:end="83:5">if <condition pos:start="17:8" pos:end="19:65">(<expr pos:start="17:9" pos:end="19:64"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:10">os</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:17">psize</name></name> <operator pos:start="17:19" pos:end="17:20">==</operator> <literal type="number" pos:start="17:22" pos:end="17:23">60</literal> <operator pos:start="17:25" pos:end="17:26">&amp;&amp;</operator>

        <operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:64"><name pos:start="19:10" pos:end="19:15">memcmp</name><argument_list pos:start="19:16" pos:end="19:64">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">p</name></expr></argument>, <argument pos:start="19:20" pos:end="19:38"><expr pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:32">ff_celt_codec</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:38">magic</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:63"><expr pos:start="19:41" pos:end="19:63"><name pos:start="19:41" pos:end="19:63"><name pos:start="19:41" pos:end="19:53">ff_celt_codec</name><operator pos:start="19:54" pos:end="19:54">.</operator><name pos:start="19:55" pos:end="19:63">magicsize</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:67" pos:end="83:5">{<block_content pos:start="25:9" pos:end="81:17">

        <comment type="block" pos:start="21:9" pos:end="21:25">/* Main header */</comment>



        <decl_stmt pos:start="25:9" pos:end="25:51"><decl pos:start="25:9" pos:end="25:24"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">uint32_t</name></type> <name pos:start="25:18" pos:end="25:24">version</name></decl>, <decl pos:start="25:27" pos:end="25:37"><type ref="prev" pos:start="25:9" pos:end="25:16"/><name pos:start="25:27" pos:end="25:37">sample_rate</name></decl>, <decl pos:start="25:40" pos:end="25:50"><type ref="prev" pos:start="25:9" pos:end="25:16"/><name pos:start="25:40" pos:end="25:50">nb_channels</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:40"><decl pos:start="27:9" pos:end="27:24"><type pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:16">uint32_t</name></type> <name pos:start="27:18" pos:end="27:24">overlap</name></decl>, <decl pos:start="27:27" pos:end="27:39"><type ref="prev" pos:start="27:9" pos:end="27:16"/><name pos:start="27:27" pos:end="27:39">extra_headers</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:57"><expr pos:start="31:9" pos:end="31:56"><name pos:start="31:9" pos:end="31:12">priv</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:56"><name pos:start="31:16" pos:end="31:24">av_malloc</name><argument_list pos:start="31:25" pos:end="31:56">(<argument pos:start="31:26" pos:end="31:55"><expr pos:start="31:26" pos:end="31:55"><sizeof pos:start="31:26" pos:end="31:55">sizeof<argument_list pos:start="31:32" pos:end="31:55">(<argument pos:start="31:33" pos:end="31:54"><expr pos:start="31:33" pos:end="31:54">struct <name pos:start="31:40" pos:end="31:54">oggcelt_private</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:35"><if pos:start="33:9" pos:end="35:35">if <condition pos:start="33:12" pos:end="33:18">(<expr pos:start="33:13" pos:end="33:17"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:17">priv</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:35"><block_content pos:start="35:13" pos:end="35:35">

            <return pos:start="35:13" pos:end="35:35">return <expr pos:start="35:20" pos:end="35:34"><call pos:start="35:20" pos:end="35:34"><name pos:start="35:20" pos:end="35:26">AVERROR</name><argument_list pos:start="35:27" pos:end="35:34">(<argument pos:start="35:28" pos:end="35:33"><expr pos:start="35:28" pos:end="35:33"><name pos:start="35:28" pos:end="35:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:71">(<expr pos:start="37:13" pos:end="37:70"><call pos:start="37:13" pos:end="37:66"><name pos:start="37:13" pos:end="37:30">ff_alloc_extradata</name><argument_list pos:start="37:31" pos:end="37:66">(<argument pos:start="37:32" pos:end="37:43"><expr pos:start="37:32" pos:end="37:43"><name pos:start="37:32" pos:end="37:43"><name pos:start="37:32" pos:end="37:33">st</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:43">codecpar</name></name></expr></argument>, <argument pos:start="37:46" pos:end="37:65"><expr pos:start="37:46" pos:end="37:65"><literal type="number" pos:start="37:46" pos:end="37:46">2</literal> <operator pos:start="37:48" pos:end="37:48">*</operator> <sizeof pos:start="37:50" pos:end="37:65">sizeof<argument_list pos:start="37:56" pos:end="37:65">(<argument pos:start="37:57" pos:end="37:64"><expr pos:start="37:57" pos:end="37:64"><name pos:start="37:57" pos:end="37:64">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="37:68" pos:end="37:68">&lt;</operator> <literal type="number" pos:start="37:70" pos:end="37:70">0</literal></expr>)</condition> <block pos:start="37:73" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:35">

            <expr_stmt pos:start="39:13" pos:end="39:26"><expr pos:start="39:13" pos:end="39:25"><call pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:19">av_free</name><argument_list pos:start="39:20" pos:end="39:25">(<argument pos:start="39:21" pos:end="39:24"><expr pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">priv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:35">return <expr pos:start="41:20" pos:end="41:34"><call pos:start="41:20" pos:end="41:34"><name pos:start="41:20" pos:end="41:26">AVERROR</name><argument_list pos:start="41:27" pos:end="41:34">(<argument pos:start="41:28" pos:end="41:33"><expr pos:start="41:28" pos:end="41:33"><name pos:start="41:28" pos:end="41:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:15">version</name>          <operator pos:start="45:26" pos:end="45:26">=</operator> <call pos:start="45:28" pos:end="45:42"><name pos:start="45:28" pos:end="45:34">AV_RL32</name><argument_list pos:start="45:35" pos:end="45:42">(<argument pos:start="45:36" pos:end="45:41"><expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:36">p</name> <operator pos:start="45:38" pos:end="45:38">+</operator> <literal type="number" pos:start="45:40" pos:end="45:41">28</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:46">/* unused header size field skipped */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:19">sample_rate</name>      <operator pos:start="49:26" pos:end="49:26">=</operator> <call pos:start="49:28" pos:end="49:42"><name pos:start="49:28" pos:end="49:34">AV_RL32</name><argument_list pos:start="49:35" pos:end="49:42">(<argument pos:start="49:36" pos:end="49:41"><expr pos:start="49:36" pos:end="49:41"><name pos:start="49:36" pos:end="49:36">p</name> <operator pos:start="49:38" pos:end="49:38">+</operator> <literal type="number" pos:start="49:40" pos:end="49:41">36</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:19">nb_channels</name>      <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:42"><name pos:start="51:28" pos:end="51:34">AV_RL32</name><argument_list pos:start="51:35" pos:end="51:42">(<argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><name pos:start="51:36" pos:end="51:36">p</name> <operator pos:start="51:38" pos:end="51:38">+</operator> <literal type="number" pos:start="51:40" pos:end="51:41">40</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:15">overlap</name>          <operator pos:start="53:26" pos:end="53:26">=</operator> <call pos:start="53:28" pos:end="53:42"><name pos:start="53:28" pos:end="53:34">AV_RL32</name><argument_list pos:start="53:35" pos:end="53:42">(<argument pos:start="53:36" pos:end="53:41"><expr pos:start="53:36" pos:end="53:41"><name pos:start="53:36" pos:end="53:36">p</name> <operator pos:start="53:38" pos:end="53:38">+</operator> <literal type="number" pos:start="53:40" pos:end="53:41">48</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="55:9" pos:end="55:51">/* unused bytes per packet field skipped */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:43"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:21">extra_headers</name>    <operator pos:start="57:26" pos:end="57:26">=</operator> <call pos:start="57:28" pos:end="57:42"><name pos:start="57:28" pos:end="57:34">AV_RL32</name><argument_list pos:start="57:35" pos:end="57:42">(<argument pos:start="57:36" pos:end="57:41"><expr pos:start="57:36" pos:end="57:41"><name pos:start="57:36" pos:end="57:36">p</name> <operator pos:start="57:38" pos:end="57:38">+</operator> <literal type="number" pos:start="57:40" pos:end="57:41">56</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:58"><expr pos:start="59:9" pos:end="59:57"><name pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:10">st</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:20">codecpar</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:32">codec_type</name></name>     <operator pos:start="59:38" pos:end="59:38">=</operator> <name pos:start="59:40" pos:end="59:57">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:56"><expr pos:start="61:9" pos:end="61:55"><name pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:10">st</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:20">codecpar</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:30">codec_id</name></name>       <operator pos:start="61:38" pos:end="61:38">=</operator> <name pos:start="61:40" pos:end="61:55">AV_CODEC_ID_CELT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:33"><name pos:start="63:9" pos:end="63:10">st</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:20">codecpar</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:33">sample_rate</name></name>    <operator pos:start="63:38" pos:end="63:38">=</operator> <name pos:start="63:40" pos:end="63:50">sample_rate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:51"><expr pos:start="65:9" pos:end="65:50"><name pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:10">st</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:20">codecpar</name><operator pos:start="65:21" pos:end="65:22">-&gt;</operator><name pos:start="65:23" pos:end="65:30">channels</name></name>       <operator pos:start="65:38" pos:end="65:38">=</operator> <name pos:start="65:40" pos:end="65:50">nb_channels</name></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:56"><if pos:start="67:9" pos:end="69:56">if <condition pos:start="67:12" pos:end="67:24">(<expr pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:23">sample_rate</name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:56"><block_content pos:start="69:13" pos:end="69:56">

            <expr_stmt pos:start="69:13" pos:end="69:56"><expr pos:start="69:13" pos:end="69:55"><call pos:start="69:13" pos:end="69:55"><name pos:start="69:13" pos:end="69:31">avpriv_set_pts_info</name><argument_list pos:start="69:32" pos:end="69:55">(<argument pos:start="69:33" pos:end="69:34"><expr pos:start="69:33" pos:end="69:34"><name pos:start="69:33" pos:end="69:34">st</name></expr></argument>, <argument pos:start="69:37" pos:end="69:38"><expr pos:start="69:37" pos:end="69:38"><literal type="number" pos:start="69:37" pos:end="69:38">64</literal></expr></argument>, <argument pos:start="69:41" pos:end="69:41"><expr pos:start="69:41" pos:end="69:41"><literal type="number" pos:start="69:41" pos:end="69:41">1</literal></expr></argument>, <argument pos:start="69:44" pos:end="69:54"><expr pos:start="69:44" pos:end="69:54"><name pos:start="69:44" pos:end="69:54">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:54"><expr pos:start="71:9" pos:end="71:53"><name pos:start="71:9" pos:end="71:32"><name pos:start="71:9" pos:end="71:12">priv</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:32">extra_headers_left</name></name>  <operator pos:start="71:35" pos:end="71:35">=</operator> <literal type="number" pos:start="71:37" pos:end="71:39">1</literal> <operator pos:start="71:39" pos:end="71:39">+</operator> <name pos:start="71:41" pos:end="71:53">extra_headers</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:15">av_free</name><argument_list pos:start="73:16" pos:end="73:28">(<argument pos:start="73:17" pos:end="73:27"><expr pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:18">os</name><operator pos:start="73:19" pos:end="73:20">-&gt;</operator><name pos:start="73:21" pos:end="73:27">private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:27"><expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:10">os</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:19">private</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:26">priv</name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:54"><expr pos:start="77:9" pos:end="77:53"><call pos:start="77:9" pos:end="77:53"><name pos:start="77:9" pos:end="77:15">AV_WL32</name><argument_list pos:start="77:16" pos:end="77:53">(<argument pos:start="77:17" pos:end="77:43"><expr pos:start="77:17" pos:end="77:43"><name pos:start="77:17" pos:end="77:39"><name pos:start="77:17" pos:end="77:18">st</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:28">codecpar</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:39">extradata</name></name> <operator pos:start="77:41" pos:end="77:41">+</operator> <literal type="number" pos:start="77:43" pos:end="77:43">0</literal></expr></argument>, <argument pos:start="77:46" pos:end="77:52"><expr pos:start="77:46" pos:end="77:52"><name pos:start="77:46" pos:end="77:52">overlap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:54"><expr pos:start="79:9" pos:end="79:53"><call pos:start="79:9" pos:end="79:53"><name pos:start="79:9" pos:end="79:15">AV_WL32</name><argument_list pos:start="79:16" pos:end="79:53">(<argument pos:start="79:17" pos:end="79:43"><expr pos:start="79:17" pos:end="79:43"><name pos:start="79:17" pos:end="79:39"><name pos:start="79:17" pos:end="79:18">st</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:28">codecpar</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:39">extradata</name></name> <operator pos:start="79:41" pos:end="79:41">+</operator> <literal type="number" pos:start="79:43" pos:end="79:43">4</literal></expr></argument>, <argument pos:start="79:46" pos:end="79:52"><expr pos:start="79:46" pos:end="79:52"><name pos:start="79:46" pos:end="79:52">version</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:17">return <expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">1</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="95:5">else if <condition pos:start="83:15" pos:end="83:48">(<expr pos:start="83:16" pos:end="83:47"><name pos:start="83:16" pos:end="83:19">priv</name> <operator pos:start="83:21" pos:end="83:22">&amp;&amp;</operator> <name pos:start="83:24" pos:end="83:47"><name pos:start="83:24" pos:end="83:27">priv</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:47">extra_headers_left</name></name></expr>)</condition> <block pos:start="83:50" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:17">

        <comment type="block" pos:start="85:9" pos:end="85:43">/* Extra headers (vorbiscomment) */</comment>



        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><call pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:32">ff_vorbis_stream_comment</name><argument_list pos:start="89:33" pos:end="89:53">(<argument pos:start="89:34" pos:end="89:34"><expr pos:start="89:34" pos:end="89:34"><name pos:start="89:34" pos:end="89:34">s</name></expr></argument>, <argument pos:start="89:37" pos:end="89:38"><expr pos:start="89:37" pos:end="89:38"><name pos:start="89:37" pos:end="89:38">st</name></expr></argument>, <argument pos:start="89:41" pos:end="89:41"><expr pos:start="89:41" pos:end="89:41"><name pos:start="89:41" pos:end="89:41">p</name></expr></argument>, <argument pos:start="89:44" pos:end="89:52"><expr pos:start="89:44" pos:end="89:52"><name pos:start="89:44" pos:end="89:52"><name pos:start="89:44" pos:end="89:45">os</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:52">psize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:12">priv</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:32">extra_headers_left</name></name><operator pos:start="91:33" pos:end="91:34">--</operator></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:17">return <expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="99:5">else <block pos:start="95:12" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:17">

        <return pos:start="97:9" pos:end="97:17">return <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
