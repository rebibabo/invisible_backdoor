<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19443.c" pos:tabs="8"><function pos:start="1:1" pos:end="1200:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gen_dmtc0</name><parameter_list pos:start="1:22" pos:end="1:68">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">ctx</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:49"><decl pos:start="1:42" pos:end="1:49"><type pos:start="1:42" pos:end="1:49"><name pos:start="1:42" pos:end="1:45">TCGv</name></type> <name pos:start="1:47" pos:end="1:49">arg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">reg</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:67"><decl pos:start="1:61" pos:end="1:67"><type pos:start="1:61" pos:end="1:67"><name pos:start="1:61" pos:end="1:63">int</name></type> <name pos:start="1:65" pos:end="1:67">sel</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="1200:1">{<block_content pos:start="5:5" pos:end="1198:73">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">rn</name> <init pos:start="5:20" pos:end="5:30">= <expr pos:start="5:22" pos:end="5:30"><literal type="string" pos:start="5:22" pos:end="5:30">"invalid"</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:36"><if pos:start="9:5" pos:end="11:36">if <condition pos:start="9:8" pos:end="9:17">(<expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:11">sel</name> <operator pos:start="9:13" pos:end="9:14">!=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:36"><block_content pos:start="11:9" pos:end="11:36">

        <expr_stmt pos:start="11:9" pos:end="11:36"><expr pos:start="11:9" pos:end="11:35"><call pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:18">check_insn</name><argument_list pos:start="11:19" pos:end="11:35">(<argument pos:start="11:20" pos:end="11:22"><expr pos:start="11:20" pos:end="11:22"><name pos:start="11:20" pos:end="11:22">ctx</name></expr></argument>, <argument pos:start="11:25" pos:end="11:34"><expr pos:start="11:25" pos:end="11:34"><name pos:start="11:25" pos:end="11:34">ISA_MIPS64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:23"><name pos:start="15:9" pos:end="15:11">ctx</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:15">tb</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:23">cflags</name></name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <name pos:start="15:27" pos:end="15:39">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="15:42" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:23">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><call pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:20">gen_io_start</name><argument_list pos:start="17:21" pos:end="17:22">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="23:5" pos:end="1176:5">switch <condition pos:start="23:12" pos:end="23:16">(<expr pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">reg</name></expr>)</condition> <block pos:start="23:18" pos:end="1176:5">{<block_content pos:start="25:5" pos:end="1174:31">

    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal></expr>:</case>

        <switch pos:start="27:9" pos:end="73:9">switch <condition pos:start="27:16" pos:end="27:20">(<expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">sel</name></expr>)</condition> <block pos:start="27:22" pos:end="73:9">{<block_content pos:start="29:9" pos:end="71:35">

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:48"><expr pos:start="31:13" pos:end="31:47"><call pos:start="31:13" pos:end="31:47"><name pos:start="31:13" pos:end="31:33">gen_helper_mtc0_index</name><argument_list pos:start="31:34" pos:end="31:47">(<argument pos:start="31:35" pos:end="31:41"><expr pos:start="31:35" pos:end="31:41"><name pos:start="31:35" pos:end="31:41">cpu_env</name></expr></argument>, <argument pos:start="31:44" pos:end="31:46"><expr pos:start="31:44" pos:end="31:46"><name pos:start="31:44" pos:end="31:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:14">rn</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="string" pos:start="33:18" pos:end="33:24">"Index"</literal></expr>;</expr_stmt>


        <case pos:start="36:9" pos:end="36:15">case <expr pos:start="36:14" pos:end="36:14"><literal type="number" pos:start="36:14" pos:end="36:14">1</literal></expr>:</case>

            <expr_stmt pos:start="38:13" pos:end="38:48"><expr pos:start="38:13" pos:end="38:47"><call pos:start="38:13" pos:end="38:47"><name pos:start="38:13" pos:end="38:21">CP0_CHECK</name><argument_list pos:start="38:22" pos:end="38:47">(<argument pos:start="38:23" pos:end="38:46"><expr pos:start="38:23" pos:end="38:46"><name pos:start="38:23" pos:end="38:37"><name pos:start="38:23" pos:end="38:25">ctx</name><operator pos:start="38:26" pos:end="38:27">-&gt;</operator><name pos:start="38:28" pos:end="38:37">insn_flags</name></name> <operator pos:start="38:39" pos:end="38:39">&amp;</operator> <name pos:start="38:41" pos:end="38:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="40:13" pos:end="40:53"><expr pos:start="40:13" pos:end="40:52"><call pos:start="40:13" pos:end="40:52"><name pos:start="40:13" pos:end="40:38">gen_helper_mtc0_mvpcontrol</name><argument_list pos:start="40:39" pos:end="40:52">(<argument pos:start="40:40" pos:end="40:46"><expr pos:start="40:40" pos:end="40:46"><name pos:start="40:40" pos:end="40:46">cpu_env</name></expr></argument>, <argument pos:start="40:49" pos:end="40:51"><expr pos:start="40:49" pos:end="40:51"><name pos:start="40:49" pos:end="40:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="42:13" pos:end="42:30"><expr pos:start="42:13" pos:end="42:29"><name pos:start="42:13" pos:end="42:14">rn</name> <operator pos:start="42:16" pos:end="42:16">=</operator> <literal type="string" pos:start="42:18" pos:end="42:29">"MVPControl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="46:13" pos:end="46:48"><expr pos:start="46:13" pos:end="46:47"><call pos:start="46:13" pos:end="46:47"><name pos:start="46:13" pos:end="46:21">CP0_CHECK</name><argument_list pos:start="46:22" pos:end="46:47">(<argument pos:start="46:23" pos:end="46:46"><expr pos:start="46:23" pos:end="46:46"><name pos:start="46:23" pos:end="46:37"><name pos:start="46:23" pos:end="46:25">ctx</name><operator pos:start="46:26" pos:end="46:27">-&gt;</operator><name pos:start="46:28" pos:end="46:37">insn_flags</name></name> <operator pos:start="46:39" pos:end="46:39">&amp;</operator> <name pos:start="46:41" pos:end="46:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="48:13" pos:end="48:25">/* ignored */</comment>

            <expr_stmt pos:start="50:13" pos:end="50:28"><expr pos:start="50:13" pos:end="50:27"><name pos:start="50:13" pos:end="50:14">rn</name> <operator pos:start="50:16" pos:end="50:16">=</operator> <literal type="string" pos:start="50:18" pos:end="50:27">"MVPConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="54:13" pos:end="54:48"><expr pos:start="54:13" pos:end="54:47"><call pos:start="54:13" pos:end="54:47"><name pos:start="54:13" pos:end="54:21">CP0_CHECK</name><argument_list pos:start="54:22" pos:end="54:47">(<argument pos:start="54:23" pos:end="54:46"><expr pos:start="54:23" pos:end="54:46"><name pos:start="54:23" pos:end="54:37"><name pos:start="54:23" pos:end="54:25">ctx</name><operator pos:start="54:26" pos:end="54:27">-&gt;</operator><name pos:start="54:28" pos:end="54:37">insn_flags</name></name> <operator pos:start="54:39" pos:end="54:39">&amp;</operator> <name pos:start="54:41" pos:end="54:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="56:13" pos:end="56:25">/* ignored */</comment>

            <expr_stmt pos:start="58:13" pos:end="58:28"><expr pos:start="58:13" pos:end="58:27"><name pos:start="58:13" pos:end="58:14">rn</name> <operator pos:start="58:16" pos:end="58:16">=</operator> <literal type="string" pos:start="58:18" pos:end="58:27">"MVPConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="62:13" pos:end="62:31"><expr pos:start="62:13" pos:end="62:30"><call pos:start="62:13" pos:end="62:30"><name pos:start="62:13" pos:end="62:21">CP0_CHECK</name><argument_list pos:start="62:22" pos:end="62:30">(<argument pos:start="62:23" pos:end="62:29"><expr pos:start="62:23" pos:end="62:29"><name pos:start="62:23" pos:end="62:29"><name pos:start="62:23" pos:end="62:25">ctx</name><operator pos:start="62:26" pos:end="62:27">-&gt;</operator><name pos:start="62:28" pos:end="62:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="64:13" pos:end="64:25">/* ignored */</comment>

            <expr_stmt pos:start="66:13" pos:end="66:29"><expr pos:start="66:13" pos:end="66:28"><name pos:start="66:13" pos:end="66:14">rn</name> <operator pos:start="66:16" pos:end="66:16">=</operator> <literal type="string" pos:start="66:18" pos:end="66:28">"VPControl"</literal></expr>;</expr_stmt>


        <default pos:start="69:9" pos:end="69:16">default:</default>

            <goto pos:start="71:13" pos:end="71:35">goto <name pos:start="71:18" pos:end="71:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="76:5" pos:end="76:11">case <expr pos:start="76:10" pos:end="76:10"><literal type="number" pos:start="76:10" pos:end="76:10">1</literal></expr>:</case>

        <switch pos:start="78:9" pos:end="151:9">switch <condition pos:start="78:16" pos:end="78:20">(<expr pos:start="78:17" pos:end="78:19"><name pos:start="78:17" pos:end="78:19">sel</name></expr>)</condition> <block pos:start="78:22" pos:end="151:9">{<block_content pos:start="80:9" pos:end="149:35">

        <case pos:start="80:9" pos:end="80:15">case <expr pos:start="80:14" pos:end="80:14"><literal type="number" pos:start="80:14" pos:end="80:14">0</literal></expr>:</case>

            <comment type="block" pos:start="82:13" pos:end="82:25">/* ignored */</comment>

            <expr_stmt pos:start="84:13" pos:end="84:26"><expr pos:start="84:13" pos:end="84:25"><name pos:start="84:13" pos:end="84:14">rn</name> <operator pos:start="84:16" pos:end="84:16">=</operator> <literal type="string" pos:start="84:18" pos:end="84:25">"Random"</literal></expr>;</expr_stmt>


        <case pos:start="87:9" pos:end="87:15">case <expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr>:</case>

            <expr_stmt pos:start="89:13" pos:end="89:48"><expr pos:start="89:13" pos:end="89:47"><call pos:start="89:13" pos:end="89:47"><name pos:start="89:13" pos:end="89:21">CP0_CHECK</name><argument_list pos:start="89:22" pos:end="89:47">(<argument pos:start="89:23" pos:end="89:46"><expr pos:start="89:23" pos:end="89:46"><name pos:start="89:23" pos:end="89:37"><name pos:start="89:23" pos:end="89:25">ctx</name><operator pos:start="89:26" pos:end="89:27">-&gt;</operator><name pos:start="89:28" pos:end="89:37">insn_flags</name></name> <operator pos:start="89:39" pos:end="89:39">&amp;</operator> <name pos:start="89:41" pos:end="89:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:53"><expr pos:start="91:13" pos:end="91:52"><call pos:start="91:13" pos:end="91:52"><name pos:start="91:13" pos:end="91:38">gen_helper_mtc0_vpecontrol</name><argument_list pos:start="91:39" pos:end="91:52">(<argument pos:start="91:40" pos:end="91:46"><expr pos:start="91:40" pos:end="91:46"><name pos:start="91:40" pos:end="91:46">cpu_env</name></expr></argument>, <argument pos:start="91:49" pos:end="91:51"><expr pos:start="91:49" pos:end="91:51"><name pos:start="91:49" pos:end="91:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:30"><expr pos:start="93:13" pos:end="93:29"><name pos:start="93:13" pos:end="93:14">rn</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="string" pos:start="93:18" pos:end="93:29">"VPEControl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:21">CP0_CHECK</name><argument_list pos:start="97:22" pos:end="97:47">(<argument pos:start="97:23" pos:end="97:46"><expr pos:start="97:23" pos:end="97:46"><name pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:25">ctx</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:37">insn_flags</name></name> <operator pos:start="97:39" pos:end="97:39">&amp;</operator> <name pos:start="97:41" pos:end="97:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><call pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:36">gen_helper_mtc0_vpeconf0</name><argument_list pos:start="99:37" pos:end="99:50">(<argument pos:start="99:38" pos:end="99:44"><expr pos:start="99:38" pos:end="99:44"><name pos:start="99:38" pos:end="99:44">cpu_env</name></expr></argument>, <argument pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:28"><expr pos:start="101:13" pos:end="101:27"><name pos:start="101:13" pos:end="101:14">rn</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="string" pos:start="101:18" pos:end="101:27">"VPEConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:48"><expr pos:start="105:13" pos:end="105:47"><call pos:start="105:13" pos:end="105:47"><name pos:start="105:13" pos:end="105:21">CP0_CHECK</name><argument_list pos:start="105:22" pos:end="105:47">(<argument pos:start="105:23" pos:end="105:46"><expr pos:start="105:23" pos:end="105:46"><name pos:start="105:23" pos:end="105:37"><name pos:start="105:23" pos:end="105:25">ctx</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:37">insn_flags</name></name> <operator pos:start="105:39" pos:end="105:39">&amp;</operator> <name pos:start="105:41" pos:end="105:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:51"><expr pos:start="107:13" pos:end="107:50"><call pos:start="107:13" pos:end="107:50"><name pos:start="107:13" pos:end="107:36">gen_helper_mtc0_vpeconf1</name><argument_list pos:start="107:37" pos:end="107:50">(<argument pos:start="107:38" pos:end="107:44"><expr pos:start="107:38" pos:end="107:44"><name pos:start="107:38" pos:end="107:44">cpu_env</name></expr></argument>, <argument pos:start="107:47" pos:end="107:49"><expr pos:start="107:47" pos:end="107:49"><name pos:start="107:47" pos:end="107:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:28"><expr pos:start="109:13" pos:end="109:27"><name pos:start="109:13" pos:end="109:14">rn</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="string" pos:start="109:18" pos:end="109:27">"VPEConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="113:13" pos:end="113:48"><expr pos:start="113:13" pos:end="113:47"><call pos:start="113:13" pos:end="113:47"><name pos:start="113:13" pos:end="113:21">CP0_CHECK</name><argument_list pos:start="113:22" pos:end="113:47">(<argument pos:start="113:23" pos:end="113:46"><expr pos:start="113:23" pos:end="113:46"><name pos:start="113:23" pos:end="113:37"><name pos:start="113:23" pos:end="113:25">ctx</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:37">insn_flags</name></name> <operator pos:start="113:39" pos:end="113:39">&amp;</operator> <name pos:start="113:41" pos:end="113:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:48"><call pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:34">gen_helper_mtc0_yqmask</name><argument_list pos:start="115:35" pos:end="115:48">(<argument pos:start="115:36" pos:end="115:42"><expr pos:start="115:36" pos:end="115:42"><name pos:start="115:36" pos:end="115:42">cpu_env</name></expr></argument>, <argument pos:start="115:45" pos:end="115:47"><expr pos:start="115:45" pos:end="115:47"><name pos:start="115:45" pos:end="115:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:26"><expr pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:14">rn</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <literal type="string" pos:start="117:18" pos:end="117:25">"YQMask"</literal></expr>;</expr_stmt>


        <case pos:start="120:9" pos:end="120:15">case <expr pos:start="120:14" pos:end="120:14"><literal type="number" pos:start="120:14" pos:end="120:14">5</literal></expr>:</case>

            <expr_stmt pos:start="122:13" pos:end="122:48"><expr pos:start="122:13" pos:end="122:47"><call pos:start="122:13" pos:end="122:47"><name pos:start="122:13" pos:end="122:21">CP0_CHECK</name><argument_list pos:start="122:22" pos:end="122:47">(<argument pos:start="122:23" pos:end="122:46"><expr pos:start="122:23" pos:end="122:46"><name pos:start="122:23" pos:end="122:37"><name pos:start="122:23" pos:end="122:25">ctx</name><operator pos:start="122:26" pos:end="122:27">-&gt;</operator><name pos:start="122:28" pos:end="122:37">insn_flags</name></name> <operator pos:start="122:39" pos:end="122:39">&amp;</operator> <name pos:start="122:41" pos:end="122:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="124:13" pos:end="124:81"><expr pos:start="124:13" pos:end="124:80"><call pos:start="124:13" pos:end="124:80"><name pos:start="124:13" pos:end="124:25">tcg_gen_st_tl</name><argument_list pos:start="124:26" pos:end="124:80">(<argument pos:start="124:27" pos:end="124:29"><expr pos:start="124:27" pos:end="124:29"><name pos:start="124:27" pos:end="124:29">arg</name></expr></argument>, <argument pos:start="124:32" pos:end="124:38"><expr pos:start="124:32" pos:end="124:38"><name pos:start="124:32" pos:end="124:38">cpu_env</name></expr></argument>, <argument pos:start="124:41" pos:end="124:79"><expr pos:start="124:41" pos:end="124:79"><call pos:start="124:41" pos:end="124:79"><name pos:start="124:41" pos:end="124:48">offsetof</name><argument_list pos:start="124:49" pos:end="124:79">(<argument pos:start="124:50" pos:end="124:61"><expr pos:start="124:50" pos:end="124:61"><name pos:start="124:50" pos:end="124:61">CPUMIPSState</name></expr></argument>, <argument pos:start="124:64" pos:end="124:78"><expr pos:start="124:64" pos:end="124:78"><name pos:start="124:64" pos:end="124:78">CP0_VPESchedule</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="126:13" pos:end="126:31"><expr pos:start="126:13" pos:end="126:30"><name pos:start="126:13" pos:end="126:14">rn</name> <operator pos:start="126:16" pos:end="126:16">=</operator> <literal type="string" pos:start="126:18" pos:end="126:30">"VPESchedule"</literal></expr>;</expr_stmt>


        <case pos:start="129:9" pos:end="129:15">case <expr pos:start="129:14" pos:end="129:14"><literal type="number" pos:start="129:14" pos:end="129:14">6</literal></expr>:</case>

            <expr_stmt pos:start="131:13" pos:end="131:48"><expr pos:start="131:13" pos:end="131:47"><call pos:start="131:13" pos:end="131:47"><name pos:start="131:13" pos:end="131:21">CP0_CHECK</name><argument_list pos:start="131:22" pos:end="131:47">(<argument pos:start="131:23" pos:end="131:46"><expr pos:start="131:23" pos:end="131:46"><name pos:start="131:23" pos:end="131:37"><name pos:start="131:23" pos:end="131:25">ctx</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:37">insn_flags</name></name> <operator pos:start="131:39" pos:end="131:39">&amp;</operator> <name pos:start="131:41" pos:end="131:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:82"><expr pos:start="133:13" pos:end="133:81"><call pos:start="133:13" pos:end="133:81"><name pos:start="133:13" pos:end="133:25">tcg_gen_st_tl</name><argument_list pos:start="133:26" pos:end="133:81">(<argument pos:start="133:27" pos:end="133:29"><expr pos:start="133:27" pos:end="133:29"><name pos:start="133:27" pos:end="133:29">arg</name></expr></argument>, <argument pos:start="133:32" pos:end="133:38"><expr pos:start="133:32" pos:end="133:38"><name pos:start="133:32" pos:end="133:38">cpu_env</name></expr></argument>, <argument pos:start="133:41" pos:end="133:80"><expr pos:start="133:41" pos:end="133:80"><call pos:start="133:41" pos:end="133:80"><name pos:start="133:41" pos:end="133:48">offsetof</name><argument_list pos:start="133:49" pos:end="133:80">(<argument pos:start="133:50" pos:end="133:61"><expr pos:start="133:50" pos:end="133:61"><name pos:start="133:50" pos:end="133:61">CPUMIPSState</name></expr></argument>, <argument pos:start="133:64" pos:end="133:79"><expr pos:start="133:64" pos:end="133:79"><name pos:start="133:64" pos:end="133:79">CP0_VPEScheFBack</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:32"><expr pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:14">rn</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <literal type="string" pos:start="135:18" pos:end="135:31">"VPEScheFBack"</literal></expr>;</expr_stmt>


        <case pos:start="138:9" pos:end="138:15">case <expr pos:start="138:14" pos:end="138:14"><literal type="number" pos:start="138:14" pos:end="138:14">7</literal></expr>:</case>

            <expr_stmt pos:start="140:13" pos:end="140:48"><expr pos:start="140:13" pos:end="140:47"><call pos:start="140:13" pos:end="140:47"><name pos:start="140:13" pos:end="140:21">CP0_CHECK</name><argument_list pos:start="140:22" pos:end="140:47">(<argument pos:start="140:23" pos:end="140:46"><expr pos:start="140:23" pos:end="140:46"><name pos:start="140:23" pos:end="140:37"><name pos:start="140:23" pos:end="140:25">ctx</name><operator pos:start="140:26" pos:end="140:27">-&gt;</operator><name pos:start="140:28" pos:end="140:37">insn_flags</name></name> <operator pos:start="140:39" pos:end="140:39">&amp;</operator> <name pos:start="140:41" pos:end="140:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="142:13" pos:end="142:49"><expr pos:start="142:13" pos:end="142:48"><call pos:start="142:13" pos:end="142:48"><name pos:start="142:13" pos:end="142:34">gen_helper_mtc0_vpeopt</name><argument_list pos:start="142:35" pos:end="142:48">(<argument pos:start="142:36" pos:end="142:42"><expr pos:start="142:36" pos:end="142:42"><name pos:start="142:36" pos:end="142:42">cpu_env</name></expr></argument>, <argument pos:start="142:45" pos:end="142:47"><expr pos:start="142:45" pos:end="142:47"><name pos:start="142:45" pos:end="142:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="144:13" pos:end="144:26"><expr pos:start="144:13" pos:end="144:25"><name pos:start="144:13" pos:end="144:14">rn</name> <operator pos:start="144:16" pos:end="144:16">=</operator> <literal type="string" pos:start="144:18" pos:end="144:25">"VPEOpt"</literal></expr>;</expr_stmt>


        <default pos:start="147:9" pos:end="147:16">default:</default>

            <goto pos:start="149:13" pos:end="149:35">goto <name pos:start="149:18" pos:end="149:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="155:9" pos:end="228:9">switch <condition pos:start="155:16" pos:end="155:20">(<expr pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">sel</name></expr>)</condition> <block pos:start="155:22" pos:end="228:9">{<block_content pos:start="157:9" pos:end="226:35">

        <case pos:start="157:9" pos:end="157:15">case <expr pos:start="157:14" pos:end="157:14"><literal type="number" pos:start="157:14" pos:end="157:14">0</literal></expr>:</case>

            <expr_stmt pos:start="159:13" pos:end="159:52"><expr pos:start="159:13" pos:end="159:51"><call pos:start="159:13" pos:end="159:51"><name pos:start="159:13" pos:end="159:37">gen_helper_dmtc0_entrylo0</name><argument_list pos:start="159:38" pos:end="159:51">(<argument pos:start="159:39" pos:end="159:45"><expr pos:start="159:39" pos:end="159:45"><name pos:start="159:39" pos:end="159:45">cpu_env</name></expr></argument>, <argument pos:start="159:48" pos:end="159:50"><expr pos:start="159:48" pos:end="159:50"><name pos:start="159:48" pos:end="159:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:28"><expr pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:14">rn</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <literal type="string" pos:start="161:18" pos:end="161:27">"EntryLo0"</literal></expr>;</expr_stmt>


        <case pos:start="164:9" pos:end="164:15">case <expr pos:start="164:14" pos:end="164:14"><literal type="number" pos:start="164:14" pos:end="164:14">1</literal></expr>:</case>

            <expr_stmt pos:start="166:13" pos:end="166:48"><expr pos:start="166:13" pos:end="166:47"><call pos:start="166:13" pos:end="166:47"><name pos:start="166:13" pos:end="166:21">CP0_CHECK</name><argument_list pos:start="166:22" pos:end="166:47">(<argument pos:start="166:23" pos:end="166:46"><expr pos:start="166:23" pos:end="166:46"><name pos:start="166:23" pos:end="166:37"><name pos:start="166:23" pos:end="166:25">ctx</name><operator pos:start="166:26" pos:end="166:27">-&gt;</operator><name pos:start="166:28" pos:end="166:37">insn_flags</name></name> <operator pos:start="166:39" pos:end="166:39">&amp;</operator> <name pos:start="166:41" pos:end="166:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="168:13" pos:end="168:51"><expr pos:start="168:13" pos:end="168:50"><call pos:start="168:13" pos:end="168:50"><name pos:start="168:13" pos:end="168:36">gen_helper_mtc0_tcstatus</name><argument_list pos:start="168:37" pos:end="168:50">(<argument pos:start="168:38" pos:end="168:44"><expr pos:start="168:38" pos:end="168:44"><name pos:start="168:38" pos:end="168:44">cpu_env</name></expr></argument>, <argument pos:start="168:47" pos:end="168:49"><expr pos:start="168:47" pos:end="168:49"><name pos:start="168:47" pos:end="168:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="170:13" pos:end="170:28"><expr pos:start="170:13" pos:end="170:27"><name pos:start="170:13" pos:end="170:14">rn</name> <operator pos:start="170:16" pos:end="170:16">=</operator> <literal type="string" pos:start="170:18" pos:end="170:27">"TCStatus"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="174:13" pos:end="174:48"><expr pos:start="174:13" pos:end="174:47"><call pos:start="174:13" pos:end="174:47"><name pos:start="174:13" pos:end="174:21">CP0_CHECK</name><argument_list pos:start="174:22" pos:end="174:47">(<argument pos:start="174:23" pos:end="174:46"><expr pos:start="174:23" pos:end="174:46"><name pos:start="174:23" pos:end="174:37"><name pos:start="174:23" pos:end="174:25">ctx</name><operator pos:start="174:26" pos:end="174:27">-&gt;</operator><name pos:start="174:28" pos:end="174:37">insn_flags</name></name> <operator pos:start="174:39" pos:end="174:39">&amp;</operator> <name pos:start="174:41" pos:end="174:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="176:13" pos:end="176:49"><expr pos:start="176:13" pos:end="176:48"><call pos:start="176:13" pos:end="176:48"><name pos:start="176:13" pos:end="176:34">gen_helper_mtc0_tcbind</name><argument_list pos:start="176:35" pos:end="176:48">(<argument pos:start="176:36" pos:end="176:42"><expr pos:start="176:36" pos:end="176:42"><name pos:start="176:36" pos:end="176:42">cpu_env</name></expr></argument>, <argument pos:start="176:45" pos:end="176:47"><expr pos:start="176:45" pos:end="176:47"><name pos:start="176:45" pos:end="176:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="178:13" pos:end="178:26"><expr pos:start="178:13" pos:end="178:25"><name pos:start="178:13" pos:end="178:14">rn</name> <operator pos:start="178:16" pos:end="178:16">=</operator> <literal type="string" pos:start="178:18" pos:end="178:25">"TCBind"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="182:13" pos:end="182:48"><expr pos:start="182:13" pos:end="182:47"><call pos:start="182:13" pos:end="182:47"><name pos:start="182:13" pos:end="182:21">CP0_CHECK</name><argument_list pos:start="182:22" pos:end="182:47">(<argument pos:start="182:23" pos:end="182:46"><expr pos:start="182:23" pos:end="182:46"><name pos:start="182:23" pos:end="182:37"><name pos:start="182:23" pos:end="182:25">ctx</name><operator pos:start="182:26" pos:end="182:27">-&gt;</operator><name pos:start="182:28" pos:end="182:37">insn_flags</name></name> <operator pos:start="182:39" pos:end="182:39">&amp;</operator> <name pos:start="182:41" pos:end="182:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="184:13" pos:end="184:52"><expr pos:start="184:13" pos:end="184:51"><call pos:start="184:13" pos:end="184:51"><name pos:start="184:13" pos:end="184:37">gen_helper_mtc0_tcrestart</name><argument_list pos:start="184:38" pos:end="184:51">(<argument pos:start="184:39" pos:end="184:45"><expr pos:start="184:39" pos:end="184:45"><name pos:start="184:39" pos:end="184:45">cpu_env</name></expr></argument>, <argument pos:start="184:48" pos:end="184:50"><expr pos:start="184:48" pos:end="184:50"><name pos:start="184:48" pos:end="184:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="186:13" pos:end="186:29"><expr pos:start="186:13" pos:end="186:28"><name pos:start="186:13" pos:end="186:14">rn</name> <operator pos:start="186:16" pos:end="186:16">=</operator> <literal type="string" pos:start="186:18" pos:end="186:28">"TCRestart"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="190:13" pos:end="190:48"><expr pos:start="190:13" pos:end="190:47"><call pos:start="190:13" pos:end="190:47"><name pos:start="190:13" pos:end="190:21">CP0_CHECK</name><argument_list pos:start="190:22" pos:end="190:47">(<argument pos:start="190:23" pos:end="190:46"><expr pos:start="190:23" pos:end="190:46"><name pos:start="190:23" pos:end="190:37"><name pos:start="190:23" pos:end="190:25">ctx</name><operator pos:start="190:26" pos:end="190:27">-&gt;</operator><name pos:start="190:28" pos:end="190:37">insn_flags</name></name> <operator pos:start="190:39" pos:end="190:39">&amp;</operator> <name pos:start="190:41" pos:end="190:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="192:13" pos:end="192:49"><expr pos:start="192:13" pos:end="192:48"><call pos:start="192:13" pos:end="192:48"><name pos:start="192:13" pos:end="192:34">gen_helper_mtc0_tchalt</name><argument_list pos:start="192:35" pos:end="192:48">(<argument pos:start="192:36" pos:end="192:42"><expr pos:start="192:36" pos:end="192:42"><name pos:start="192:36" pos:end="192:42">cpu_env</name></expr></argument>, <argument pos:start="192:45" pos:end="192:47"><expr pos:start="192:45" pos:end="192:47"><name pos:start="192:45" pos:end="192:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="194:13" pos:end="194:26"><expr pos:start="194:13" pos:end="194:25"><name pos:start="194:13" pos:end="194:14">rn</name> <operator pos:start="194:16" pos:end="194:16">=</operator> <literal type="string" pos:start="194:18" pos:end="194:25">"TCHalt"</literal></expr>;</expr_stmt>


        <case pos:start="197:9" pos:end="197:15">case <expr pos:start="197:14" pos:end="197:14"><literal type="number" pos:start="197:14" pos:end="197:14">5</literal></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:48"><expr pos:start="199:13" pos:end="199:47"><call pos:start="199:13" pos:end="199:47"><name pos:start="199:13" pos:end="199:21">CP0_CHECK</name><argument_list pos:start="199:22" pos:end="199:47">(<argument pos:start="199:23" pos:end="199:46"><expr pos:start="199:23" pos:end="199:46"><name pos:start="199:23" pos:end="199:37"><name pos:start="199:23" pos:end="199:25">ctx</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:37">insn_flags</name></name> <operator pos:start="199:39" pos:end="199:39">&amp;</operator> <name pos:start="199:41" pos:end="199:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:52"><expr pos:start="201:13" pos:end="201:51"><call pos:start="201:13" pos:end="201:51"><name pos:start="201:13" pos:end="201:37">gen_helper_mtc0_tccontext</name><argument_list pos:start="201:38" pos:end="201:51">(<argument pos:start="201:39" pos:end="201:45"><expr pos:start="201:39" pos:end="201:45"><name pos:start="201:39" pos:end="201:45">cpu_env</name></expr></argument>, <argument pos:start="201:48" pos:end="201:50"><expr pos:start="201:48" pos:end="201:50"><name pos:start="201:48" pos:end="201:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:29"><expr pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:14">rn</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <literal type="string" pos:start="203:18" pos:end="203:28">"TCContext"</literal></expr>;</expr_stmt>


        <case pos:start="206:9" pos:end="206:15">case <expr pos:start="206:14" pos:end="206:14"><literal type="number" pos:start="206:14" pos:end="206:14">6</literal></expr>:</case>

            <expr_stmt pos:start="208:13" pos:end="208:48"><expr pos:start="208:13" pos:end="208:47"><call pos:start="208:13" pos:end="208:47"><name pos:start="208:13" pos:end="208:21">CP0_CHECK</name><argument_list pos:start="208:22" pos:end="208:47">(<argument pos:start="208:23" pos:end="208:46"><expr pos:start="208:23" pos:end="208:46"><name pos:start="208:23" pos:end="208:37"><name pos:start="208:23" pos:end="208:25">ctx</name><operator pos:start="208:26" pos:end="208:27">-&gt;</operator><name pos:start="208:28" pos:end="208:37">insn_flags</name></name> <operator pos:start="208:39" pos:end="208:39">&amp;</operator> <name pos:start="208:41" pos:end="208:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="210:13" pos:end="210:53"><expr pos:start="210:13" pos:end="210:52"><call pos:start="210:13" pos:end="210:52"><name pos:start="210:13" pos:end="210:38">gen_helper_mtc0_tcschedule</name><argument_list pos:start="210:39" pos:end="210:52">(<argument pos:start="210:40" pos:end="210:46"><expr pos:start="210:40" pos:end="210:46"><name pos:start="210:40" pos:end="210:46">cpu_env</name></expr></argument>, <argument pos:start="210:49" pos:end="210:51"><expr pos:start="210:49" pos:end="210:51"><name pos:start="210:49" pos:end="210:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="212:13" pos:end="212:30"><expr pos:start="212:13" pos:end="212:29"><name pos:start="212:13" pos:end="212:14">rn</name> <operator pos:start="212:16" pos:end="212:16">=</operator> <literal type="string" pos:start="212:18" pos:end="212:29">"TCSchedule"</literal></expr>;</expr_stmt>


        <case pos:start="215:9" pos:end="215:15">case <expr pos:start="215:14" pos:end="215:14"><literal type="number" pos:start="215:14" pos:end="215:14">7</literal></expr>:</case>

            <expr_stmt pos:start="217:13" pos:end="217:48"><expr pos:start="217:13" pos:end="217:47"><call pos:start="217:13" pos:end="217:47"><name pos:start="217:13" pos:end="217:21">CP0_CHECK</name><argument_list pos:start="217:22" pos:end="217:47">(<argument pos:start="217:23" pos:end="217:46"><expr pos:start="217:23" pos:end="217:46"><name pos:start="217:23" pos:end="217:37"><name pos:start="217:23" pos:end="217:25">ctx</name><operator pos:start="217:26" pos:end="217:27">-&gt;</operator><name pos:start="217:28" pos:end="217:37">insn_flags</name></name> <operator pos:start="217:39" pos:end="217:39">&amp;</operator> <name pos:start="217:41" pos:end="217:46">ASE_MT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:54"><expr pos:start="219:13" pos:end="219:53"><call pos:start="219:13" pos:end="219:53"><name pos:start="219:13" pos:end="219:39">gen_helper_mtc0_tcschefback</name><argument_list pos:start="219:40" pos:end="219:53">(<argument pos:start="219:41" pos:end="219:47"><expr pos:start="219:41" pos:end="219:47"><name pos:start="219:41" pos:end="219:47">cpu_env</name></expr></argument>, <argument pos:start="219:50" pos:end="219:52"><expr pos:start="219:50" pos:end="219:52"><name pos:start="219:50" pos:end="219:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:31"><expr pos:start="221:13" pos:end="221:30"><name pos:start="221:13" pos:end="221:14">rn</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="string" pos:start="221:18" pos:end="221:30">"TCScheFBack"</literal></expr>;</expr_stmt>


        <default pos:start="224:9" pos:end="224:16">default:</default>

            <goto pos:start="226:13" pos:end="226:35">goto <name pos:start="226:18" pos:end="226:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="232:9" pos:end="254:9">switch <condition pos:start="232:16" pos:end="232:20">(<expr pos:start="232:17" pos:end="232:19"><name pos:start="232:17" pos:end="232:19">sel</name></expr>)</condition> <block pos:start="232:22" pos:end="254:9">{<block_content pos:start="234:9" pos:end="252:35">

        <case pos:start="234:9" pos:end="234:15">case <expr pos:start="234:14" pos:end="234:14"><literal type="number" pos:start="234:14" pos:end="234:14">0</literal></expr>:</case>

            <expr_stmt pos:start="236:13" pos:end="236:52"><expr pos:start="236:13" pos:end="236:51"><call pos:start="236:13" pos:end="236:51"><name pos:start="236:13" pos:end="236:37">gen_helper_dmtc0_entrylo1</name><argument_list pos:start="236:38" pos:end="236:51">(<argument pos:start="236:39" pos:end="236:45"><expr pos:start="236:39" pos:end="236:45"><name pos:start="236:39" pos:end="236:45">cpu_env</name></expr></argument>, <argument pos:start="236:48" pos:end="236:50"><expr pos:start="236:48" pos:end="236:50"><name pos:start="236:48" pos:end="236:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="238:13" pos:end="238:28"><expr pos:start="238:13" pos:end="238:27"><name pos:start="238:13" pos:end="238:14">rn</name> <operator pos:start="238:16" pos:end="238:16">=</operator> <literal type="string" pos:start="238:18" pos:end="238:27">"EntryLo1"</literal></expr>;</expr_stmt>


        <case pos:start="241:9" pos:end="241:15">case <expr pos:start="241:14" pos:end="241:14"><literal type="number" pos:start="241:14" pos:end="241:14">1</literal></expr>:</case>

            <expr_stmt pos:start="243:13" pos:end="243:31"><expr pos:start="243:13" pos:end="243:30"><call pos:start="243:13" pos:end="243:30"><name pos:start="243:13" pos:end="243:21">CP0_CHECK</name><argument_list pos:start="243:22" pos:end="243:30">(<argument pos:start="243:23" pos:end="243:29"><expr pos:start="243:23" pos:end="243:29"><name pos:start="243:23" pos:end="243:29"><name pos:start="243:23" pos:end="243:25">ctx</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:29">vp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="245:13" pos:end="245:25">/* ignored */</comment>

            <expr_stmt pos:start="247:13" pos:end="247:32"><expr pos:start="247:13" pos:end="247:31"><name pos:start="247:13" pos:end="247:14">rn</name> <operator pos:start="247:16" pos:end="247:16">=</operator> <literal type="string" pos:start="247:18" pos:end="247:31">"GlobalNumber"</literal></expr>;</expr_stmt>


        <default pos:start="250:9" pos:end="250:16">default:</default>

            <goto pos:start="252:13" pos:end="252:35">goto <name pos:start="252:18" pos:end="252:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>



        <switch pos:start="258:9" pos:end="289:9">switch <condition pos:start="258:16" pos:end="258:20">(<expr pos:start="258:17" pos:end="258:19"><name pos:start="258:17" pos:end="258:19">sel</name></expr>)</condition> <block pos:start="258:22" pos:end="289:9">{<block_content pos:start="260:9" pos:end="287:35">

        <case pos:start="260:9" pos:end="260:15">case <expr pos:start="260:14" pos:end="260:14"><literal type="number" pos:start="260:14" pos:end="260:14">0</literal></expr>:</case>

            <expr_stmt pos:start="262:13" pos:end="262:50"><expr pos:start="262:13" pos:end="262:49"><call pos:start="262:13" pos:end="262:49"><name pos:start="262:13" pos:end="262:35">gen_helper_mtc0_context</name><argument_list pos:start="262:36" pos:end="262:49">(<argument pos:start="262:37" pos:end="262:43"><expr pos:start="262:37" pos:end="262:43"><name pos:start="262:37" pos:end="262:43">cpu_env</name></expr></argument>, <argument pos:start="262:46" pos:end="262:48"><expr pos:start="262:46" pos:end="262:48"><name pos:start="262:46" pos:end="262:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="264:13" pos:end="264:27"><expr pos:start="264:13" pos:end="264:26"><name pos:start="264:13" pos:end="264:14">rn</name> <operator pos:start="264:16" pos:end="264:16">=</operator> <literal type="string" pos:start="264:18" pos:end="264:26">"Context"</literal></expr>;</expr_stmt>


        <case pos:start="267:9" pos:end="267:15">case <expr pos:start="267:14" pos:end="267:14"><literal type="number" pos:start="267:14" pos:end="267:14">1</literal></expr>:</case>

<comment type="line" pos:start="269:1" pos:end="269:77">//           gen_helper_mtc0_contextconfig(cpu_env, arg); /* SmartMIPS ASE */</comment>

            <expr_stmt pos:start="271:13" pos:end="271:33"><expr pos:start="271:13" pos:end="271:32"><name pos:start="271:13" pos:end="271:14">rn</name> <operator pos:start="271:16" pos:end="271:16">=</operator> <literal type="string" pos:start="271:18" pos:end="271:32">"ContextConfig"</literal></expr>;</expr_stmt>

            <goto pos:start="273:13" pos:end="273:35">goto <name pos:start="273:18" pos:end="273:34">cp0_unimplemented</name>;</goto>


            <expr_stmt pos:start="276:13" pos:end="276:33"><expr pos:start="276:13" pos:end="276:32"><call pos:start="276:13" pos:end="276:32"><name pos:start="276:13" pos:end="276:21">CP0_CHECK</name><argument_list pos:start="276:22" pos:end="276:32">(<argument pos:start="276:23" pos:end="276:31"><expr pos:start="276:23" pos:end="276:31"><name pos:start="276:23" pos:end="276:31"><name pos:start="276:23" pos:end="276:25">ctx</name><operator pos:start="276:26" pos:end="276:27">-&gt;</operator><name pos:start="276:28" pos:end="276:31">ulri</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="278:13" pos:end="280:75"><expr pos:start="278:13" pos:end="280:74"><call pos:start="278:13" pos:end="280:74"><name pos:start="278:13" pos:end="278:25">tcg_gen_st_tl</name><argument_list pos:start="278:26" pos:end="280:74">(<argument pos:start="278:27" pos:end="278:29"><expr pos:start="278:27" pos:end="278:29"><name pos:start="278:27" pos:end="278:29">arg</name></expr></argument>, <argument pos:start="278:32" pos:end="278:38"><expr pos:start="278:32" pos:end="278:38"><name pos:start="278:32" pos:end="278:38">cpu_env</name></expr></argument>,

                          <argument pos:start="280:27" pos:end="280:73"><expr pos:start="280:27" pos:end="280:73"><call pos:start="280:27" pos:end="280:73"><name pos:start="280:27" pos:end="280:34">offsetof</name><argument_list pos:start="280:35" pos:end="280:73">(<argument pos:start="280:36" pos:end="280:47"><expr pos:start="280:36" pos:end="280:47"><name pos:start="280:36" pos:end="280:47">CPUMIPSState</name></expr></argument>, <argument pos:start="280:50" pos:end="280:72"><expr pos:start="280:50" pos:end="280:72"><name pos:start="280:50" pos:end="280:72"><name pos:start="280:50" pos:end="280:58">active_tc</name><operator pos:start="280:59" pos:end="280:59">.</operator><name pos:start="280:60" pos:end="280:72">CP0_UserLocal</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="282:13" pos:end="282:29"><expr pos:start="282:13" pos:end="282:28"><name pos:start="282:13" pos:end="282:14">rn</name> <operator pos:start="282:16" pos:end="282:16">=</operator> <literal type="string" pos:start="282:18" pos:end="282:28">"UserLocal"</literal></expr>;</expr_stmt>


        <default pos:start="285:9" pos:end="285:16">default:</default>

            <goto pos:start="287:13" pos:end="287:35">goto <name pos:start="287:18" pos:end="287:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="292:5" pos:end="292:11">case <expr pos:start="292:10" pos:end="292:10"><literal type="number" pos:start="292:10" pos:end="292:10">5</literal></expr>:</case>

        <switch pos:start="294:9" pos:end="331:9">switch <condition pos:start="294:16" pos:end="294:20">(<expr pos:start="294:17" pos:end="294:19"><name pos:start="294:17" pos:end="294:19">sel</name></expr>)</condition> <block pos:start="294:22" pos:end="331:9">{<block_content pos:start="296:9" pos:end="329:35">

        <case pos:start="296:9" pos:end="296:15">case <expr pos:start="296:14" pos:end="296:14"><literal type="number" pos:start="296:14" pos:end="296:14">0</literal></expr>:</case>

            <expr_stmt pos:start="298:13" pos:end="298:51"><expr pos:start="298:13" pos:end="298:50"><call pos:start="298:13" pos:end="298:50"><name pos:start="298:13" pos:end="298:36">gen_helper_mtc0_pagemask</name><argument_list pos:start="298:37" pos:end="298:50">(<argument pos:start="298:38" pos:end="298:44"><expr pos:start="298:38" pos:end="298:44"><name pos:start="298:38" pos:end="298:44">cpu_env</name></expr></argument>, <argument pos:start="298:47" pos:end="298:49"><expr pos:start="298:47" pos:end="298:49"><name pos:start="298:47" pos:end="298:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="300:13" pos:end="300:28"><expr pos:start="300:13" pos:end="300:27"><name pos:start="300:13" pos:end="300:14">rn</name> <operator pos:start="300:16" pos:end="300:16">=</operator> <literal type="string" pos:start="300:18" pos:end="300:27">"PageMask"</literal></expr>;</expr_stmt>


        <case pos:start="303:9" pos:end="303:15">case <expr pos:start="303:14" pos:end="303:14"><literal type="number" pos:start="303:14" pos:end="303:14">1</literal></expr>:</case>

            <expr_stmt pos:start="305:13" pos:end="305:42"><expr pos:start="305:13" pos:end="305:41"><call pos:start="305:13" pos:end="305:41"><name pos:start="305:13" pos:end="305:22">check_insn</name><argument_list pos:start="305:23" pos:end="305:41">(<argument pos:start="305:24" pos:end="305:26"><expr pos:start="305:24" pos:end="305:26"><name pos:start="305:24" pos:end="305:26">ctx</name></expr></argument>, <argument pos:start="305:29" pos:end="305:40"><expr pos:start="305:29" pos:end="305:40"><name pos:start="305:29" pos:end="305:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:52"><expr pos:start="307:13" pos:end="307:51"><call pos:start="307:13" pos:end="307:51"><name pos:start="307:13" pos:end="307:37">gen_helper_mtc0_pagegrain</name><argument_list pos:start="307:38" pos:end="307:51">(<argument pos:start="307:39" pos:end="307:45"><expr pos:start="307:39" pos:end="307:45"><name pos:start="307:39" pos:end="307:45">cpu_env</name></expr></argument>, <argument pos:start="307:48" pos:end="307:50"><expr pos:start="307:48" pos:end="307:50"><name pos:start="307:48" pos:end="307:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:29"><expr pos:start="309:13" pos:end="309:28"><name pos:start="309:13" pos:end="309:14">rn</name> <operator pos:start="309:16" pos:end="309:16">=</operator> <literal type="string" pos:start="309:18" pos:end="309:28">"PageGrain"</literal></expr>;</expr_stmt>

















        <default pos:start="327:9" pos:end="327:16">default:</default>

            <goto pos:start="329:13" pos:end="329:35">goto <name pos:start="329:18" pos:end="329:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="334:5" pos:end="334:11">case <expr pos:start="334:10" pos:end="334:10"><literal type="number" pos:start="334:10" pos:end="334:10">6</literal></expr>:</case>

        <switch pos:start="336:9" pos:end="391:9">switch <condition pos:start="336:16" pos:end="336:20">(<expr pos:start="336:17" pos:end="336:19"><name pos:start="336:17" pos:end="336:19">sel</name></expr>)</condition> <block pos:start="336:22" pos:end="391:9">{<block_content pos:start="338:9" pos:end="389:35">

        <case pos:start="338:9" pos:end="338:15">case <expr pos:start="338:14" pos:end="338:14"><literal type="number" pos:start="338:14" pos:end="338:14">0</literal></expr>:</case>

            <expr_stmt pos:start="340:13" pos:end="340:48"><expr pos:start="340:13" pos:end="340:47"><call pos:start="340:13" pos:end="340:47"><name pos:start="340:13" pos:end="340:33">gen_helper_mtc0_wired</name><argument_list pos:start="340:34" pos:end="340:47">(<argument pos:start="340:35" pos:end="340:41"><expr pos:start="340:35" pos:end="340:41"><name pos:start="340:35" pos:end="340:41">cpu_env</name></expr></argument>, <argument pos:start="340:44" pos:end="340:46"><expr pos:start="340:44" pos:end="340:46"><name pos:start="340:44" pos:end="340:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="342:13" pos:end="342:25"><expr pos:start="342:13" pos:end="342:24"><name pos:start="342:13" pos:end="342:14">rn</name> <operator pos:start="342:16" pos:end="342:16">=</operator> <literal type="string" pos:start="342:18" pos:end="342:24">"Wired"</literal></expr>;</expr_stmt>


        <case pos:start="345:9" pos:end="345:15">case <expr pos:start="345:14" pos:end="345:14"><literal type="number" pos:start="345:14" pos:end="345:14">1</literal></expr>:</case>

            <expr_stmt pos:start="347:13" pos:end="347:42"><expr pos:start="347:13" pos:end="347:41"><call pos:start="347:13" pos:end="347:41"><name pos:start="347:13" pos:end="347:22">check_insn</name><argument_list pos:start="347:23" pos:end="347:41">(<argument pos:start="347:24" pos:end="347:26"><expr pos:start="347:24" pos:end="347:26"><name pos:start="347:24" pos:end="347:26">ctx</name></expr></argument>, <argument pos:start="347:29" pos:end="347:40"><expr pos:start="347:29" pos:end="347:40"><name pos:start="347:29" pos:end="347:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:51"><expr pos:start="349:13" pos:end="349:50"><call pos:start="349:13" pos:end="349:50"><name pos:start="349:13" pos:end="349:36">gen_helper_mtc0_srsconf0</name><argument_list pos:start="349:37" pos:end="349:50">(<argument pos:start="349:38" pos:end="349:44"><expr pos:start="349:38" pos:end="349:44"><name pos:start="349:38" pos:end="349:44">cpu_env</name></expr></argument>, <argument pos:start="349:47" pos:end="349:49"><expr pos:start="349:47" pos:end="349:49"><name pos:start="349:47" pos:end="349:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:28"><expr pos:start="351:13" pos:end="351:27"><name pos:start="351:13" pos:end="351:14">rn</name> <operator pos:start="351:16" pos:end="351:16">=</operator> <literal type="string" pos:start="351:18" pos:end="351:27">"SRSConf0"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="355:13" pos:end="355:42"><expr pos:start="355:13" pos:end="355:41"><call pos:start="355:13" pos:end="355:41"><name pos:start="355:13" pos:end="355:22">check_insn</name><argument_list pos:start="355:23" pos:end="355:41">(<argument pos:start="355:24" pos:end="355:26"><expr pos:start="355:24" pos:end="355:26"><name pos:start="355:24" pos:end="355:26">ctx</name></expr></argument>, <argument pos:start="355:29" pos:end="355:40"><expr pos:start="355:29" pos:end="355:40"><name pos:start="355:29" pos:end="355:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="357:51"><expr pos:start="357:13" pos:end="357:50"><call pos:start="357:13" pos:end="357:50"><name pos:start="357:13" pos:end="357:36">gen_helper_mtc0_srsconf1</name><argument_list pos:start="357:37" pos:end="357:50">(<argument pos:start="357:38" pos:end="357:44"><expr pos:start="357:38" pos:end="357:44"><name pos:start="357:38" pos:end="357:44">cpu_env</name></expr></argument>, <argument pos:start="357:47" pos:end="357:49"><expr pos:start="357:47" pos:end="357:49"><name pos:start="357:47" pos:end="357:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:28"><expr pos:start="359:13" pos:end="359:27"><name pos:start="359:13" pos:end="359:14">rn</name> <operator pos:start="359:16" pos:end="359:16">=</operator> <literal type="string" pos:start="359:18" pos:end="359:27">"SRSConf1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="363:13" pos:end="363:42"><expr pos:start="363:13" pos:end="363:41"><call pos:start="363:13" pos:end="363:41"><name pos:start="363:13" pos:end="363:22">check_insn</name><argument_list pos:start="363:23" pos:end="363:41">(<argument pos:start="363:24" pos:end="363:26"><expr pos:start="363:24" pos:end="363:26"><name pos:start="363:24" pos:end="363:26">ctx</name></expr></argument>, <argument pos:start="363:29" pos:end="363:40"><expr pos:start="363:29" pos:end="363:40"><name pos:start="363:29" pos:end="363:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:51"><expr pos:start="365:13" pos:end="365:50"><call pos:start="365:13" pos:end="365:50"><name pos:start="365:13" pos:end="365:36">gen_helper_mtc0_srsconf2</name><argument_list pos:start="365:37" pos:end="365:50">(<argument pos:start="365:38" pos:end="365:44"><expr pos:start="365:38" pos:end="365:44"><name pos:start="365:38" pos:end="365:44">cpu_env</name></expr></argument>, <argument pos:start="365:47" pos:end="365:49"><expr pos:start="365:47" pos:end="365:49"><name pos:start="365:47" pos:end="365:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:28"><expr pos:start="367:13" pos:end="367:27"><name pos:start="367:13" pos:end="367:14">rn</name> <operator pos:start="367:16" pos:end="367:16">=</operator> <literal type="string" pos:start="367:18" pos:end="367:27">"SRSConf2"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="371:13" pos:end="371:42"><expr pos:start="371:13" pos:end="371:41"><call pos:start="371:13" pos:end="371:41"><name pos:start="371:13" pos:end="371:22">check_insn</name><argument_list pos:start="371:23" pos:end="371:41">(<argument pos:start="371:24" pos:end="371:26"><expr pos:start="371:24" pos:end="371:26"><name pos:start="371:24" pos:end="371:26">ctx</name></expr></argument>, <argument pos:start="371:29" pos:end="371:40"><expr pos:start="371:29" pos:end="371:40"><name pos:start="371:29" pos:end="371:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:51"><expr pos:start="373:13" pos:end="373:50"><call pos:start="373:13" pos:end="373:50"><name pos:start="373:13" pos:end="373:36">gen_helper_mtc0_srsconf3</name><argument_list pos:start="373:37" pos:end="373:50">(<argument pos:start="373:38" pos:end="373:44"><expr pos:start="373:38" pos:end="373:44"><name pos:start="373:38" pos:end="373:44">cpu_env</name></expr></argument>, <argument pos:start="373:47" pos:end="373:49"><expr pos:start="373:47" pos:end="373:49"><name pos:start="373:47" pos:end="373:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:28"><expr pos:start="375:13" pos:end="375:27"><name pos:start="375:13" pos:end="375:14">rn</name> <operator pos:start="375:16" pos:end="375:16">=</operator> <literal type="string" pos:start="375:18" pos:end="375:27">"SRSConf3"</literal></expr>;</expr_stmt>


        <case pos:start="378:9" pos:end="378:15">case <expr pos:start="378:14" pos:end="378:14"><literal type="number" pos:start="378:14" pos:end="378:14">5</literal></expr>:</case>

            <expr_stmt pos:start="380:13" pos:end="380:42"><expr pos:start="380:13" pos:end="380:41"><call pos:start="380:13" pos:end="380:41"><name pos:start="380:13" pos:end="380:22">check_insn</name><argument_list pos:start="380:23" pos:end="380:41">(<argument pos:start="380:24" pos:end="380:26"><expr pos:start="380:24" pos:end="380:26"><name pos:start="380:24" pos:end="380:26">ctx</name></expr></argument>, <argument pos:start="380:29" pos:end="380:40"><expr pos:start="380:29" pos:end="380:40"><name pos:start="380:29" pos:end="380:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="382:13" pos:end="382:51"><expr pos:start="382:13" pos:end="382:50"><call pos:start="382:13" pos:end="382:50"><name pos:start="382:13" pos:end="382:36">gen_helper_mtc0_srsconf4</name><argument_list pos:start="382:37" pos:end="382:50">(<argument pos:start="382:38" pos:end="382:44"><expr pos:start="382:38" pos:end="382:44"><name pos:start="382:38" pos:end="382:44">cpu_env</name></expr></argument>, <argument pos:start="382:47" pos:end="382:49"><expr pos:start="382:47" pos:end="382:49"><name pos:start="382:47" pos:end="382:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="384:13" pos:end="384:28"><expr pos:start="384:13" pos:end="384:27"><name pos:start="384:13" pos:end="384:14">rn</name> <operator pos:start="384:16" pos:end="384:16">=</operator> <literal type="string" pos:start="384:18" pos:end="384:27">"SRSConf4"</literal></expr>;</expr_stmt>


        <default pos:start="387:9" pos:end="387:16">default:</default>

            <goto pos:start="389:13" pos:end="389:35">goto <name pos:start="389:18" pos:end="389:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="394:5" pos:end="394:11">case <expr pos:start="394:10" pos:end="394:10"><literal type="number" pos:start="394:10" pos:end="394:10">7</literal></expr>:</case>

        <switch pos:start="396:9" pos:end="413:9">switch <condition pos:start="396:16" pos:end="396:20">(<expr pos:start="396:17" pos:end="396:19"><name pos:start="396:17" pos:end="396:19">sel</name></expr>)</condition> <block pos:start="396:22" pos:end="413:9">{<block_content pos:start="398:9" pos:end="411:35">

        <case pos:start="398:9" pos:end="398:15">case <expr pos:start="398:14" pos:end="398:14"><literal type="number" pos:start="398:14" pos:end="398:14">0</literal></expr>:</case>

            <expr_stmt pos:start="400:13" pos:end="400:42"><expr pos:start="400:13" pos:end="400:41"><call pos:start="400:13" pos:end="400:41"><name pos:start="400:13" pos:end="400:22">check_insn</name><argument_list pos:start="400:23" pos:end="400:41">(<argument pos:start="400:24" pos:end="400:26"><expr pos:start="400:24" pos:end="400:26"><name pos:start="400:24" pos:end="400:26">ctx</name></expr></argument>, <argument pos:start="400:29" pos:end="400:40"><expr pos:start="400:29" pos:end="400:40"><name pos:start="400:29" pos:end="400:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="402:13" pos:end="402:49"><expr pos:start="402:13" pos:end="402:48"><call pos:start="402:13" pos:end="402:48"><name pos:start="402:13" pos:end="402:34">gen_helper_mtc0_hwrena</name><argument_list pos:start="402:35" pos:end="402:48">(<argument pos:start="402:36" pos:end="402:42"><expr pos:start="402:36" pos:end="402:42"><name pos:start="402:36" pos:end="402:42">cpu_env</name></expr></argument>, <argument pos:start="402:45" pos:end="402:47"><expr pos:start="402:45" pos:end="402:47"><name pos:start="402:45" pos:end="402:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="404:13" pos:end="404:34"><expr pos:start="404:13" pos:end="404:33"><name pos:start="404:13" pos:end="404:23"><name pos:start="404:13" pos:end="404:15">ctx</name><operator pos:start="404:16" pos:end="404:17">-&gt;</operator><name pos:start="404:18" pos:end="404:23">bstate</name></name> <operator pos:start="404:25" pos:end="404:25">=</operator> <name pos:start="404:27" pos:end="404:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="406:13" pos:end="406:26"><expr pos:start="406:13" pos:end="406:25"><name pos:start="406:13" pos:end="406:14">rn</name> <operator pos:start="406:16" pos:end="406:16">=</operator> <literal type="string" pos:start="406:18" pos:end="406:25">"HWREna"</literal></expr>;</expr_stmt>


        <default pos:start="409:9" pos:end="409:16">default:</default>

            <goto pos:start="411:13" pos:end="411:35">goto <name pos:start="411:18" pos:end="411:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="416:5" pos:end="416:11">case <expr pos:start="416:10" pos:end="416:10"><literal type="number" pos:start="416:10" pos:end="416:10">8</literal></expr>:</case>

        <switch pos:start="418:9" pos:end="444:9">switch <condition pos:start="418:16" pos:end="418:20">(<expr pos:start="418:17" pos:end="418:19"><name pos:start="418:17" pos:end="418:19">sel</name></expr>)</condition> <block pos:start="418:22" pos:end="444:9">{<block_content pos:start="420:9" pos:end="442:35">

        <case pos:start="420:9" pos:end="420:15">case <expr pos:start="420:14" pos:end="420:14"><literal type="number" pos:start="420:14" pos:end="420:14">0</literal></expr>:</case>

            <comment type="block" pos:start="422:13" pos:end="422:25">/* ignored */</comment>

            <expr_stmt pos:start="424:13" pos:end="424:28"><expr pos:start="424:13" pos:end="424:27"><name pos:start="424:13" pos:end="424:14">rn</name> <operator pos:start="424:16" pos:end="424:16">=</operator> <literal type="string" pos:start="424:18" pos:end="424:27">"BadVAddr"</literal></expr>;</expr_stmt>


        <case pos:start="427:9" pos:end="427:15">case <expr pos:start="427:14" pos:end="427:14"><literal type="number" pos:start="427:14" pos:end="427:14">1</literal></expr>:</case>

            <comment type="block" pos:start="429:13" pos:end="429:25">/* ignored */</comment>

            <expr_stmt pos:start="431:13" pos:end="431:28"><expr pos:start="431:13" pos:end="431:27"><name pos:start="431:13" pos:end="431:14">rn</name> <operator pos:start="431:16" pos:end="431:16">=</operator> <literal type="string" pos:start="431:18" pos:end="431:27">"BadInstr"</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="435:13" pos:end="435:25">/* ignored */</comment>

            <expr_stmt pos:start="437:13" pos:end="437:29"><expr pos:start="437:13" pos:end="437:28"><name pos:start="437:13" pos:end="437:14">rn</name> <operator pos:start="437:16" pos:end="437:16">=</operator> <literal type="string" pos:start="437:18" pos:end="437:28">"BadInstrP"</literal></expr>;</expr_stmt>


        <default pos:start="440:9" pos:end="440:16">default:</default>

            <goto pos:start="442:13" pos:end="442:35">goto <name pos:start="442:18" pos:end="442:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="447:5" pos:end="447:11">case <expr pos:start="447:10" pos:end="447:10"><literal type="number" pos:start="447:10" pos:end="447:10">9</literal></expr>:</case>

        <switch pos:start="449:9" pos:end="464:9">switch <condition pos:start="449:16" pos:end="449:20">(<expr pos:start="449:17" pos:end="449:19"><name pos:start="449:17" pos:end="449:19">sel</name></expr>)</condition> <block pos:start="449:22" pos:end="464:9">{<block_content pos:start="451:9" pos:end="462:35">

        <case pos:start="451:9" pos:end="451:15">case <expr pos:start="451:14" pos:end="451:14"><literal type="number" pos:start="451:14" pos:end="451:14">0</literal></expr>:</case>

            <expr_stmt pos:start="453:13" pos:end="453:48"><expr pos:start="453:13" pos:end="453:47"><call pos:start="453:13" pos:end="453:47"><name pos:start="453:13" pos:end="453:33">gen_helper_mtc0_count</name><argument_list pos:start="453:34" pos:end="453:47">(<argument pos:start="453:35" pos:end="453:41"><expr pos:start="453:35" pos:end="453:41"><name pos:start="453:35" pos:end="453:41">cpu_env</name></expr></argument>, <argument pos:start="453:44" pos:end="453:46"><expr pos:start="453:44" pos:end="453:46"><name pos:start="453:44" pos:end="453:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="455:13" pos:end="455:25"><expr pos:start="455:13" pos:end="455:24"><name pos:start="455:13" pos:end="455:14">rn</name> <operator pos:start="455:16" pos:end="455:16">=</operator> <literal type="string" pos:start="455:18" pos:end="455:24">"Count"</literal></expr>;</expr_stmt>


        <comment type="block" pos:start="458:9" pos:end="458:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="460:9" pos:end="460:16">default:</default>

            <goto pos:start="462:13" pos:end="462:35">goto <name pos:start="462:18" pos:end="462:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="466:9" pos:end="466:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="468:9" pos:end="468:30"><expr pos:start="468:9" pos:end="468:29"><name pos:start="468:9" pos:end="468:19"><name pos:start="468:9" pos:end="468:11">ctx</name><operator pos:start="468:12" pos:end="468:13">-&gt;</operator><name pos:start="468:14" pos:end="468:19">bstate</name></name> <operator pos:start="468:21" pos:end="468:21">=</operator> <name pos:start="468:23" pos:end="468:29">BS_STOP</name></expr>;</expr_stmt>


    <case pos:start="471:5" pos:end="471:12">case <expr pos:start="471:10" pos:end="471:11"><literal type="number" pos:start="471:10" pos:end="471:11">10</literal></expr>:</case>

        <switch pos:start="473:9" pos:end="486:9">switch <condition pos:start="473:16" pos:end="473:20">(<expr pos:start="473:17" pos:end="473:19"><name pos:start="473:17" pos:end="473:19">sel</name></expr>)</condition> <block pos:start="473:22" pos:end="486:9">{<block_content pos:start="475:9" pos:end="484:35">

        <case pos:start="475:9" pos:end="475:15">case <expr pos:start="475:14" pos:end="475:14"><literal type="number" pos:start="475:14" pos:end="475:14">0</literal></expr>:</case>

            <expr_stmt pos:start="477:13" pos:end="477:50"><expr pos:start="477:13" pos:end="477:49"><call pos:start="477:13" pos:end="477:49"><name pos:start="477:13" pos:end="477:35">gen_helper_mtc0_entryhi</name><argument_list pos:start="477:36" pos:end="477:49">(<argument pos:start="477:37" pos:end="477:43"><expr pos:start="477:37" pos:end="477:43"><name pos:start="477:37" pos:end="477:43">cpu_env</name></expr></argument>, <argument pos:start="477:46" pos:end="477:48"><expr pos:start="477:46" pos:end="477:48"><name pos:start="477:46" pos:end="477:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:27"><expr pos:start="479:13" pos:end="479:26"><name pos:start="479:13" pos:end="479:14">rn</name> <operator pos:start="479:16" pos:end="479:16">=</operator> <literal type="string" pos:start="479:18" pos:end="479:26">"EntryHi"</literal></expr>;</expr_stmt>


        <default pos:start="482:9" pos:end="482:16">default:</default>

            <goto pos:start="484:13" pos:end="484:35">goto <name pos:start="484:18" pos:end="484:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="489:5" pos:end="489:12">case <expr pos:start="489:10" pos:end="489:11"><literal type="number" pos:start="489:10" pos:end="489:11">11</literal></expr>:</case>

        <switch pos:start="491:9" pos:end="506:9">switch <condition pos:start="491:16" pos:end="491:20">(<expr pos:start="491:17" pos:end="491:19"><name pos:start="491:17" pos:end="491:19">sel</name></expr>)</condition> <block pos:start="491:22" pos:end="506:9">{<block_content pos:start="493:9" pos:end="504:35">

        <case pos:start="493:9" pos:end="493:15">case <expr pos:start="493:14" pos:end="493:14"><literal type="number" pos:start="493:14" pos:end="493:14">0</literal></expr>:</case>

            <expr_stmt pos:start="495:13" pos:end="495:50"><expr pos:start="495:13" pos:end="495:49"><call pos:start="495:13" pos:end="495:49"><name pos:start="495:13" pos:end="495:35">gen_helper_mtc0_compare</name><argument_list pos:start="495:36" pos:end="495:49">(<argument pos:start="495:37" pos:end="495:43"><expr pos:start="495:37" pos:end="495:43"><name pos:start="495:37" pos:end="495:43">cpu_env</name></expr></argument>, <argument pos:start="495:46" pos:end="495:48"><expr pos:start="495:46" pos:end="495:48"><name pos:start="495:46" pos:end="495:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:27"><expr pos:start="497:13" pos:end="497:26"><name pos:start="497:13" pos:end="497:14">rn</name> <operator pos:start="497:16" pos:end="497:16">=</operator> <literal type="string" pos:start="497:18" pos:end="497:26">"Compare"</literal></expr>;</expr_stmt>


        <comment type="block" pos:start="500:9" pos:end="500:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="502:9" pos:end="502:16">default:</default>

            <goto pos:start="504:13" pos:end="504:35">goto <name pos:start="504:18" pos:end="504:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="508:9" pos:end="508:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="510:9" pos:end="510:30"><expr pos:start="510:9" pos:end="510:29"><name pos:start="510:9" pos:end="510:19"><name pos:start="510:9" pos:end="510:11">ctx</name><operator pos:start="510:12" pos:end="510:13">-&gt;</operator><name pos:start="510:14" pos:end="510:19">bstate</name></name> <operator pos:start="510:21" pos:end="510:21">=</operator> <name pos:start="510:23" pos:end="510:29">BS_STOP</name></expr>;</expr_stmt>


    <case pos:start="513:5" pos:end="513:12">case <expr pos:start="513:10" pos:end="513:11"><literal type="number" pos:start="513:10" pos:end="513:11">12</literal></expr>:</case>

        <switch pos:start="515:9" pos:end="573:9">switch <condition pos:start="515:16" pos:end="515:20">(<expr pos:start="515:17" pos:end="515:19"><name pos:start="515:17" pos:end="515:19">sel</name></expr>)</condition> <block pos:start="515:22" pos:end="573:9">{<block_content pos:start="517:9" pos:end="571:35">

        <case pos:start="517:9" pos:end="517:15">case <expr pos:start="517:14" pos:end="517:14"><literal type="number" pos:start="517:14" pos:end="517:14">0</literal></expr>:</case>

            <expr_stmt pos:start="519:13" pos:end="519:35"><expr pos:start="519:13" pos:end="519:34"><call pos:start="519:13" pos:end="519:34"><name pos:start="519:13" pos:end="519:26">save_cpu_state</name><argument_list pos:start="519:27" pos:end="519:34">(<argument pos:start="519:28" pos:end="519:30"><expr pos:start="519:28" pos:end="519:30"><name pos:start="519:28" pos:end="519:30">ctx</name></expr></argument>, <argument pos:start="519:33" pos:end="519:33"><expr pos:start="519:33" pos:end="519:33"><literal type="number" pos:start="519:33" pos:end="519:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:49"><expr pos:start="521:13" pos:end="521:48"><call pos:start="521:13" pos:end="521:48"><name pos:start="521:13" pos:end="521:34">gen_helper_mtc0_status</name><argument_list pos:start="521:35" pos:end="521:48">(<argument pos:start="521:36" pos:end="521:42"><expr pos:start="521:36" pos:end="521:42"><name pos:start="521:36" pos:end="521:42">cpu_env</name></expr></argument>, <argument pos:start="521:45" pos:end="521:47"><expr pos:start="521:45" pos:end="521:47"><name pos:start="521:45" pos:end="521:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="523:13" pos:end="523:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="525:13" pos:end="525:37"><expr pos:start="525:13" pos:end="525:36"><call pos:start="525:13" pos:end="525:36"><name pos:start="525:13" pos:end="525:23">gen_save_pc</name><argument_list pos:start="525:24" pos:end="525:36">(<argument pos:start="525:25" pos:end="525:35"><expr pos:start="525:25" pos:end="525:35"><name pos:start="525:25" pos:end="525:31"><name pos:start="525:25" pos:end="525:27">ctx</name><operator pos:start="525:28" pos:end="525:29">-&gt;</operator><name pos:start="525:30" pos:end="525:31">pc</name></name> <operator pos:start="525:33" pos:end="525:33">+</operator> <literal type="number" pos:start="525:35" pos:end="525:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:34"><expr pos:start="527:13" pos:end="527:33"><name pos:start="527:13" pos:end="527:23"><name pos:start="527:13" pos:end="527:15">ctx</name><operator pos:start="527:16" pos:end="527:17">-&gt;</operator><name pos:start="527:18" pos:end="527:23">bstate</name></name> <operator pos:start="527:25" pos:end="527:25">=</operator> <name pos:start="527:27" pos:end="527:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="529:13" pos:end="529:26"><expr pos:start="529:13" pos:end="529:25"><name pos:start="529:13" pos:end="529:14">rn</name> <operator pos:start="529:16" pos:end="529:16">=</operator> <literal type="string" pos:start="529:18" pos:end="529:25">"Status"</literal></expr>;</expr_stmt>


        <case pos:start="532:9" pos:end="532:15">case <expr pos:start="532:14" pos:end="532:14"><literal type="number" pos:start="532:14" pos:end="532:14">1</literal></expr>:</case>

            <expr_stmt pos:start="534:13" pos:end="534:42"><expr pos:start="534:13" pos:end="534:41"><call pos:start="534:13" pos:end="534:41"><name pos:start="534:13" pos:end="534:22">check_insn</name><argument_list pos:start="534:23" pos:end="534:41">(<argument pos:start="534:24" pos:end="534:26"><expr pos:start="534:24" pos:end="534:26"><name pos:start="534:24" pos:end="534:26">ctx</name></expr></argument>, <argument pos:start="534:29" pos:end="534:40"><expr pos:start="534:29" pos:end="534:40"><name pos:start="534:29" pos:end="534:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="536:13" pos:end="536:49"><expr pos:start="536:13" pos:end="536:48"><call pos:start="536:13" pos:end="536:48"><name pos:start="536:13" pos:end="536:34">gen_helper_mtc0_intctl</name><argument_list pos:start="536:35" pos:end="536:48">(<argument pos:start="536:36" pos:end="536:42"><expr pos:start="536:36" pos:end="536:42"><name pos:start="536:36" pos:end="536:42">cpu_env</name></expr></argument>, <argument pos:start="536:45" pos:end="536:47"><expr pos:start="536:45" pos:end="536:47"><name pos:start="536:45" pos:end="536:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="538:13" pos:end="538:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="540:13" pos:end="540:34"><expr pos:start="540:13" pos:end="540:33"><name pos:start="540:13" pos:end="540:23"><name pos:start="540:13" pos:end="540:15">ctx</name><operator pos:start="540:16" pos:end="540:17">-&gt;</operator><name pos:start="540:18" pos:end="540:23">bstate</name></name> <operator pos:start="540:25" pos:end="540:25">=</operator> <name pos:start="540:27" pos:end="540:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="542:13" pos:end="542:26"><expr pos:start="542:13" pos:end="542:25"><name pos:start="542:13" pos:end="542:14">rn</name> <operator pos:start="542:16" pos:end="542:16">=</operator> <literal type="string" pos:start="542:18" pos:end="542:25">"IntCtl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="546:13" pos:end="546:42"><expr pos:start="546:13" pos:end="546:41"><call pos:start="546:13" pos:end="546:41"><name pos:start="546:13" pos:end="546:22">check_insn</name><argument_list pos:start="546:23" pos:end="546:41">(<argument pos:start="546:24" pos:end="546:26"><expr pos:start="546:24" pos:end="546:26"><name pos:start="546:24" pos:end="546:26">ctx</name></expr></argument>, <argument pos:start="546:29" pos:end="546:40"><expr pos:start="546:29" pos:end="546:40"><name pos:start="546:29" pos:end="546:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="548:13" pos:end="548:49"><expr pos:start="548:13" pos:end="548:48"><call pos:start="548:13" pos:end="548:48"><name pos:start="548:13" pos:end="548:34">gen_helper_mtc0_srsctl</name><argument_list pos:start="548:35" pos:end="548:48">(<argument pos:start="548:36" pos:end="548:42"><expr pos:start="548:36" pos:end="548:42"><name pos:start="548:36" pos:end="548:42">cpu_env</name></expr></argument>, <argument pos:start="548:45" pos:end="548:47"><expr pos:start="548:45" pos:end="548:47"><name pos:start="548:45" pos:end="548:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="550:13" pos:end="550:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="552:13" pos:end="552:34"><expr pos:start="552:13" pos:end="552:33"><name pos:start="552:13" pos:end="552:23"><name pos:start="552:13" pos:end="552:15">ctx</name><operator pos:start="552:16" pos:end="552:17">-&gt;</operator><name pos:start="552:18" pos:end="552:23">bstate</name></name> <operator pos:start="552:25" pos:end="552:25">=</operator> <name pos:start="552:27" pos:end="552:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="554:13" pos:end="554:26"><expr pos:start="554:13" pos:end="554:25"><name pos:start="554:13" pos:end="554:14">rn</name> <operator pos:start="554:16" pos:end="554:16">=</operator> <literal type="string" pos:start="554:18" pos:end="554:25">"SRSCtl"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="558:13" pos:end="558:42"><expr pos:start="558:13" pos:end="558:41"><call pos:start="558:13" pos:end="558:41"><name pos:start="558:13" pos:end="558:22">check_insn</name><argument_list pos:start="558:23" pos:end="558:41">(<argument pos:start="558:24" pos:end="558:26"><expr pos:start="558:24" pos:end="558:26"><name pos:start="558:24" pos:end="558:26">ctx</name></expr></argument>, <argument pos:start="558:29" pos:end="558:40"><expr pos:start="558:29" pos:end="558:40"><name pos:start="558:29" pos:end="558:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="560:13" pos:end="560:70"><expr pos:start="560:13" pos:end="560:69"><call pos:start="560:13" pos:end="560:69"><name pos:start="560:13" pos:end="560:28">gen_mtc0_store32</name><argument_list pos:start="560:29" pos:end="560:69">(<argument pos:start="560:30" pos:end="560:32"><expr pos:start="560:30" pos:end="560:32"><name pos:start="560:30" pos:end="560:32">arg</name></expr></argument>, <argument pos:start="560:35" pos:end="560:68"><expr pos:start="560:35" pos:end="560:68"><call pos:start="560:35" pos:end="560:68"><name pos:start="560:35" pos:end="560:42">offsetof</name><argument_list pos:start="560:43" pos:end="560:68">(<argument pos:start="560:44" pos:end="560:55"><expr pos:start="560:44" pos:end="560:55"><name pos:start="560:44" pos:end="560:55">CPUMIPSState</name></expr></argument>, <argument pos:start="560:58" pos:end="560:67"><expr pos:start="560:58" pos:end="560:67"><name pos:start="560:58" pos:end="560:67">CP0_SRSMap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="562:13" pos:end="562:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="564:13" pos:end="564:34"><expr pos:start="564:13" pos:end="564:33"><name pos:start="564:13" pos:end="564:23"><name pos:start="564:13" pos:end="564:15">ctx</name><operator pos:start="564:16" pos:end="564:17">-&gt;</operator><name pos:start="564:18" pos:end="564:23">bstate</name></name> <operator pos:start="564:25" pos:end="564:25">=</operator> <name pos:start="564:27" pos:end="564:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="566:13" pos:end="566:26"><expr pos:start="566:13" pos:end="566:25"><name pos:start="566:13" pos:end="566:14">rn</name> <operator pos:start="566:16" pos:end="566:16">=</operator> <literal type="string" pos:start="566:18" pos:end="566:25">"SRSMap"</literal></expr>;</expr_stmt>


        <default pos:start="569:9" pos:end="569:16">default:</default>

            <goto pos:start="571:13" pos:end="571:35">goto <name pos:start="571:18" pos:end="571:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="576:5" pos:end="576:12">case <expr pos:start="576:10" pos:end="576:11"><literal type="number" pos:start="576:10" pos:end="576:11">13</literal></expr>:</case>

        <switch pos:start="578:9" pos:end="613:9">switch <condition pos:start="578:16" pos:end="578:20">(<expr pos:start="578:17" pos:end="578:19"><name pos:start="578:17" pos:end="578:19">sel</name></expr>)</condition> <block pos:start="578:22" pos:end="613:9">{<block_content pos:start="580:9" pos:end="611:35">

        <case pos:start="580:9" pos:end="580:15">case <expr pos:start="580:14" pos:end="580:14"><literal type="number" pos:start="580:14" pos:end="580:14">0</literal></expr>:</case>

            <expr_stmt pos:start="582:13" pos:end="582:35"><expr pos:start="582:13" pos:end="582:34"><call pos:start="582:13" pos:end="582:34"><name pos:start="582:13" pos:end="582:26">save_cpu_state</name><argument_list pos:start="582:27" pos:end="582:34">(<argument pos:start="582:28" pos:end="582:30"><expr pos:start="582:28" pos:end="582:30"><name pos:start="582:28" pos:end="582:30">ctx</name></expr></argument>, <argument pos:start="582:33" pos:end="582:33"><expr pos:start="582:33" pos:end="582:33"><literal type="number" pos:start="582:33" pos:end="582:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="584:13" pos:end="586:29">/* Mark as an IO operation because we may trigger a software

               interrupt.  */</comment>

            <if_stmt pos:start="588:13" pos:end="592:13"><if pos:start="588:13" pos:end="592:13">if <condition pos:start="588:16" pos:end="588:48">(<expr pos:start="588:17" pos:end="588:47"><name pos:start="588:17" pos:end="588:31"><name pos:start="588:17" pos:end="588:19">ctx</name><operator pos:start="588:20" pos:end="588:21">-&gt;</operator><name pos:start="588:22" pos:end="588:23">tb</name><operator pos:start="588:24" pos:end="588:25">-&gt;</operator><name pos:start="588:26" pos:end="588:31">cflags</name></name> <operator pos:start="588:33" pos:end="588:33">&amp;</operator> <name pos:start="588:35" pos:end="588:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="588:50" pos:end="592:13">{<block_content pos:start="590:17" pos:end="590:31">

                <expr_stmt pos:start="590:17" pos:end="590:31"><expr pos:start="590:17" pos:end="590:30"><call pos:start="590:17" pos:end="590:30"><name pos:start="590:17" pos:end="590:28">gen_io_start</name><argument_list pos:start="590:29" pos:end="590:30">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="594:13" pos:end="594:48"><expr pos:start="594:13" pos:end="594:47"><call pos:start="594:13" pos:end="594:47"><name pos:start="594:13" pos:end="594:33">gen_helper_mtc0_cause</name><argument_list pos:start="594:34" pos:end="594:47">(<argument pos:start="594:35" pos:end="594:41"><expr pos:start="594:35" pos:end="594:41"><name pos:start="594:35" pos:end="594:41">cpu_env</name></expr></argument>, <argument pos:start="594:44" pos:end="594:46"><expr pos:start="594:44" pos:end="594:46"><name pos:start="594:44" pos:end="594:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="596:13" pos:end="600:13"><if pos:start="596:13" pos:end="600:13">if <condition pos:start="596:16" pos:end="596:48">(<expr pos:start="596:17" pos:end="596:47"><name pos:start="596:17" pos:end="596:31"><name pos:start="596:17" pos:end="596:19">ctx</name><operator pos:start="596:20" pos:end="596:21">-&gt;</operator><name pos:start="596:22" pos:end="596:23">tb</name><operator pos:start="596:24" pos:end="596:25">-&gt;</operator><name pos:start="596:26" pos:end="596:31">cflags</name></name> <operator pos:start="596:33" pos:end="596:33">&amp;</operator> <name pos:start="596:35" pos:end="596:47">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="596:50" pos:end="600:13">{<block_content pos:start="598:17" pos:end="598:29">

                <expr_stmt pos:start="598:17" pos:end="598:29"><expr pos:start="598:17" pos:end="598:28"><call pos:start="598:17" pos:end="598:28"><name pos:start="598:17" pos:end="598:26">gen_io_end</name><argument_list pos:start="598:27" pos:end="598:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="602:13" pos:end="602:72">/* Stop translation as we may have triggered an intetrupt */</comment>

            <expr_stmt pos:start="604:13" pos:end="604:34"><expr pos:start="604:13" pos:end="604:33"><name pos:start="604:13" pos:end="604:23"><name pos:start="604:13" pos:end="604:15">ctx</name><operator pos:start="604:16" pos:end="604:17">-&gt;</operator><name pos:start="604:18" pos:end="604:23">bstate</name></name> <operator pos:start="604:25" pos:end="604:25">=</operator> <name pos:start="604:27" pos:end="604:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="606:13" pos:end="606:25"><expr pos:start="606:13" pos:end="606:24"><name pos:start="606:13" pos:end="606:14">rn</name> <operator pos:start="606:16" pos:end="606:16">=</operator> <literal type="string" pos:start="606:18" pos:end="606:24">"Cause"</literal></expr>;</expr_stmt>


        <default pos:start="609:9" pos:end="609:16">default:</default>

            <goto pos:start="611:13" pos:end="611:35">goto <name pos:start="611:18" pos:end="611:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="616:5" pos:end="616:12">case <expr pos:start="616:10" pos:end="616:11"><literal type="number" pos:start="616:10" pos:end="616:11">14</literal></expr>:</case>

        <switch pos:start="618:9" pos:end="631:9">switch <condition pos:start="618:16" pos:end="618:20">(<expr pos:start="618:17" pos:end="618:19"><name pos:start="618:17" pos:end="618:19">sel</name></expr>)</condition> <block pos:start="618:22" pos:end="631:9">{<block_content pos:start="620:9" pos:end="629:35">

        <case pos:start="620:9" pos:end="620:15">case <expr pos:start="620:14" pos:end="620:14"><literal type="number" pos:start="620:14" pos:end="620:14">0</literal></expr>:</case>

            <expr_stmt pos:start="622:13" pos:end="622:73"><expr pos:start="622:13" pos:end="622:72"><call pos:start="622:13" pos:end="622:72"><name pos:start="622:13" pos:end="622:25">tcg_gen_st_tl</name><argument_list pos:start="622:26" pos:end="622:72">(<argument pos:start="622:27" pos:end="622:29"><expr pos:start="622:27" pos:end="622:29"><name pos:start="622:27" pos:end="622:29">arg</name></expr></argument>, <argument pos:start="622:32" pos:end="622:38"><expr pos:start="622:32" pos:end="622:38"><name pos:start="622:32" pos:end="622:38">cpu_env</name></expr></argument>, <argument pos:start="622:41" pos:end="622:71"><expr pos:start="622:41" pos:end="622:71"><call pos:start="622:41" pos:end="622:71"><name pos:start="622:41" pos:end="622:48">offsetof</name><argument_list pos:start="622:49" pos:end="622:71">(<argument pos:start="622:50" pos:end="622:61"><expr pos:start="622:50" pos:end="622:61"><name pos:start="622:50" pos:end="622:61">CPUMIPSState</name></expr></argument>, <argument pos:start="622:64" pos:end="622:70"><expr pos:start="622:64" pos:end="622:70"><name pos:start="622:64" pos:end="622:70">CP0_EPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="624:13" pos:end="624:23"><expr pos:start="624:13" pos:end="624:22"><name pos:start="624:13" pos:end="624:14">rn</name> <operator pos:start="624:16" pos:end="624:16">=</operator> <literal type="string" pos:start="624:18" pos:end="624:22">"EPC"</literal></expr>;</expr_stmt>


        <default pos:start="627:9" pos:end="627:16">default:</default>

            <goto pos:start="629:13" pos:end="629:35">goto <name pos:start="629:18" pos:end="629:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="634:5" pos:end="634:12">case <expr pos:start="634:10" pos:end="634:11"><literal type="number" pos:start="634:10" pos:end="634:11">15</literal></expr>:</case>

        <switch pos:start="636:9" pos:end="658:9">switch <condition pos:start="636:16" pos:end="636:20">(<expr pos:start="636:17" pos:end="636:19"><name pos:start="636:17" pos:end="636:19">sel</name></expr>)</condition> <block pos:start="636:22" pos:end="658:9">{<block_content pos:start="638:9" pos:end="656:35">

        <case pos:start="638:9" pos:end="638:15">case <expr pos:start="638:14" pos:end="638:14"><literal type="number" pos:start="638:14" pos:end="638:14">0</literal></expr>:</case>

            <comment type="block" pos:start="640:13" pos:end="640:25">/* ignored */</comment>

            <expr_stmt pos:start="642:13" pos:end="642:24"><expr pos:start="642:13" pos:end="642:23"><name pos:start="642:13" pos:end="642:14">rn</name> <operator pos:start="642:16" pos:end="642:16">=</operator> <literal type="string" pos:start="642:18" pos:end="642:23">"PRid"</literal></expr>;</expr_stmt>


        <case pos:start="645:9" pos:end="645:15">case <expr pos:start="645:14" pos:end="645:14"><literal type="number" pos:start="645:14" pos:end="645:14">1</literal></expr>:</case>

            <expr_stmt pos:start="647:13" pos:end="647:42"><expr pos:start="647:13" pos:end="647:41"><call pos:start="647:13" pos:end="647:41"><name pos:start="647:13" pos:end="647:22">check_insn</name><argument_list pos:start="647:23" pos:end="647:41">(<argument pos:start="647:24" pos:end="647:26"><expr pos:start="647:24" pos:end="647:26"><name pos:start="647:24" pos:end="647:26">ctx</name></expr></argument>, <argument pos:start="647:29" pos:end="647:40"><expr pos:start="647:29" pos:end="647:40"><name pos:start="647:29" pos:end="647:40">ISA_MIPS32R2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="649:13" pos:end="649:48"><expr pos:start="649:13" pos:end="649:47"><call pos:start="649:13" pos:end="649:47"><name pos:start="649:13" pos:end="649:33">gen_helper_mtc0_ebase</name><argument_list pos:start="649:34" pos:end="649:47">(<argument pos:start="649:35" pos:end="649:41"><expr pos:start="649:35" pos:end="649:41"><name pos:start="649:35" pos:end="649:41">cpu_env</name></expr></argument>, <argument pos:start="649:44" pos:end="649:46"><expr pos:start="649:44" pos:end="649:46"><name pos:start="649:44" pos:end="649:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="651:13" pos:end="651:25"><expr pos:start="651:13" pos:end="651:24"><name pos:start="651:13" pos:end="651:14">rn</name> <operator pos:start="651:16" pos:end="651:16">=</operator> <literal type="string" pos:start="651:18" pos:end="651:24">"EBase"</literal></expr>;</expr_stmt>


        <default pos:start="654:9" pos:end="654:16">default:</default>

            <goto pos:start="656:13" pos:end="656:35">goto <name pos:start="656:18" pos:end="656:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="661:5" pos:end="661:12">case <expr pos:start="661:10" pos:end="661:11"><literal type="number" pos:start="661:10" pos:end="661:11">16</literal></expr>:</case>

        <switch pos:start="663:9" pos:end="728:9">switch <condition pos:start="663:16" pos:end="663:20">(<expr pos:start="663:17" pos:end="663:19"><name pos:start="663:17" pos:end="663:19">sel</name></expr>)</condition> <block pos:start="663:22" pos:end="728:9">{<block_content pos:start="665:9" pos:end="726:35">

        <case pos:start="665:9" pos:end="665:15">case <expr pos:start="665:14" pos:end="665:14"><literal type="number" pos:start="665:14" pos:end="665:14">0</literal></expr>:</case>

            <expr_stmt pos:start="667:13" pos:end="667:50"><expr pos:start="667:13" pos:end="667:49"><call pos:start="667:13" pos:end="667:49"><name pos:start="667:13" pos:end="667:35">gen_helper_mtc0_config0</name><argument_list pos:start="667:36" pos:end="667:49">(<argument pos:start="667:37" pos:end="667:43"><expr pos:start="667:37" pos:end="667:43"><name pos:start="667:37" pos:end="667:43">cpu_env</name></expr></argument>, <argument pos:start="667:46" pos:end="667:48"><expr pos:start="667:46" pos:end="667:48"><name pos:start="667:46" pos:end="667:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="669:13" pos:end="669:26"><expr pos:start="669:13" pos:end="669:25"><name pos:start="669:13" pos:end="669:14">rn</name> <operator pos:start="669:16" pos:end="669:16">=</operator> <literal type="string" pos:start="669:18" pos:end="669:25">"Config"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="671:13" pos:end="671:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="673:13" pos:end="673:34"><expr pos:start="673:13" pos:end="673:33"><name pos:start="673:13" pos:end="673:23"><name pos:start="673:13" pos:end="673:15">ctx</name><operator pos:start="673:16" pos:end="673:17">-&gt;</operator><name pos:start="673:18" pos:end="673:23">bstate</name></name> <operator pos:start="673:25" pos:end="673:25">=</operator> <name pos:start="673:27" pos:end="673:33">BS_STOP</name></expr>;</expr_stmt>


        <case pos:start="676:9" pos:end="676:15">case <expr pos:start="676:14" pos:end="676:14"><literal type="number" pos:start="676:14" pos:end="676:14">1</literal></expr>:</case>

            <comment type="block" pos:start="678:13" pos:end="678:36">/* ignored, read only */</comment>

            <expr_stmt pos:start="680:13" pos:end="680:27"><expr pos:start="680:13" pos:end="680:26"><name pos:start="680:13" pos:end="680:14">rn</name> <operator pos:start="680:16" pos:end="680:16">=</operator> <literal type="string" pos:start="680:18" pos:end="680:26">"Config1"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="684:13" pos:end="684:50"><expr pos:start="684:13" pos:end="684:49"><call pos:start="684:13" pos:end="684:49"><name pos:start="684:13" pos:end="684:35">gen_helper_mtc0_config2</name><argument_list pos:start="684:36" pos:end="684:49">(<argument pos:start="684:37" pos:end="684:43"><expr pos:start="684:37" pos:end="684:43"><name pos:start="684:37" pos:end="684:43">cpu_env</name></expr></argument>, <argument pos:start="684:46" pos:end="684:48"><expr pos:start="684:46" pos:end="684:48"><name pos:start="684:46" pos:end="684:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="686:13" pos:end="686:27"><expr pos:start="686:13" pos:end="686:26"><name pos:start="686:13" pos:end="686:14">rn</name> <operator pos:start="686:16" pos:end="686:16">=</operator> <literal type="string" pos:start="686:18" pos:end="686:26">"Config2"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="688:13" pos:end="688:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="690:13" pos:end="690:34"><expr pos:start="690:13" pos:end="690:33"><name pos:start="690:13" pos:end="690:23"><name pos:start="690:13" pos:end="690:15">ctx</name><operator pos:start="690:16" pos:end="690:17">-&gt;</operator><name pos:start="690:18" pos:end="690:23">bstate</name></name> <operator pos:start="690:25" pos:end="690:25">=</operator> <name pos:start="690:27" pos:end="690:33">BS_STOP</name></expr>;</expr_stmt>



            <expr_stmt pos:start="694:13" pos:end="694:50"><expr pos:start="694:13" pos:end="694:49"><call pos:start="694:13" pos:end="694:49"><name pos:start="694:13" pos:end="694:35">gen_helper_mtc0_config3</name><argument_list pos:start="694:36" pos:end="694:49">(<argument pos:start="694:37" pos:end="694:43"><expr pos:start="694:37" pos:end="694:43"><name pos:start="694:37" pos:end="694:43">cpu_env</name></expr></argument>, <argument pos:start="694:46" pos:end="694:48"><expr pos:start="694:46" pos:end="694:48"><name pos:start="694:46" pos:end="694:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="696:13" pos:end="696:27"><expr pos:start="696:13" pos:end="696:26"><name pos:start="696:13" pos:end="696:14">rn</name> <operator pos:start="696:16" pos:end="696:16">=</operator> <literal type="string" pos:start="696:18" pos:end="696:26">"Config3"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="698:13" pos:end="698:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="700:13" pos:end="700:34"><expr pos:start="700:13" pos:end="700:33"><name pos:start="700:13" pos:end="700:23"><name pos:start="700:13" pos:end="700:15">ctx</name><operator pos:start="700:16" pos:end="700:17">-&gt;</operator><name pos:start="700:18" pos:end="700:23">bstate</name></name> <operator pos:start="700:25" pos:end="700:25">=</operator> <name pos:start="700:27" pos:end="700:33">BS_STOP</name></expr>;</expr_stmt>



            <comment type="block" pos:start="704:13" pos:end="704:35">/* currently ignored */</comment>

            <expr_stmt pos:start="706:13" pos:end="706:27"><expr pos:start="706:13" pos:end="706:26"><name pos:start="706:13" pos:end="706:14">rn</name> <operator pos:start="706:16" pos:end="706:16">=</operator> <literal type="string" pos:start="706:18" pos:end="706:26">"Config4"</literal></expr>;</expr_stmt>


        <case pos:start="709:9" pos:end="709:15">case <expr pos:start="709:14" pos:end="709:14"><literal type="number" pos:start="709:14" pos:end="709:14">5</literal></expr>:</case>

            <expr_stmt pos:start="711:13" pos:end="711:50"><expr pos:start="711:13" pos:end="711:49"><call pos:start="711:13" pos:end="711:49"><name pos:start="711:13" pos:end="711:35">gen_helper_mtc0_config5</name><argument_list pos:start="711:36" pos:end="711:49">(<argument pos:start="711:37" pos:end="711:43"><expr pos:start="711:37" pos:end="711:43"><name pos:start="711:37" pos:end="711:43">cpu_env</name></expr></argument>, <argument pos:start="711:46" pos:end="711:48"><expr pos:start="711:46" pos:end="711:48"><name pos:start="711:46" pos:end="711:48">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="713:13" pos:end="713:27"><expr pos:start="713:13" pos:end="713:26"><name pos:start="713:13" pos:end="713:14">rn</name> <operator pos:start="713:16" pos:end="713:16">=</operator> <literal type="string" pos:start="713:18" pos:end="713:26">"Config5"</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="715:13" pos:end="715:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="717:13" pos:end="717:34"><expr pos:start="717:13" pos:end="717:33"><name pos:start="717:13" pos:end="717:23"><name pos:start="717:13" pos:end="717:15">ctx</name><operator pos:start="717:16" pos:end="717:17">-&gt;</operator><name pos:start="717:18" pos:end="717:23">bstate</name></name> <operator pos:start="717:25" pos:end="717:25">=</operator> <name pos:start="717:27" pos:end="717:33">BS_STOP</name></expr>;</expr_stmt>


        <comment type="block" pos:start="720:9" pos:end="720:46">/* 6,7 are implementation dependent */</comment>

        <default pos:start="722:9" pos:end="722:16">default:</default>

            <expr_stmt pos:start="724:13" pos:end="724:43"><expr pos:start="724:13" pos:end="724:42"><name pos:start="724:13" pos:end="724:14">rn</name> <operator pos:start="724:16" pos:end="724:16">=</operator> <literal type="string" pos:start="724:18" pos:end="724:42">"Invalid config selector"</literal></expr>;</expr_stmt>

            <goto pos:start="726:13" pos:end="726:35">goto <name pos:start="726:18" pos:end="726:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="731:5" pos:end="731:12">case <expr pos:start="731:10" pos:end="731:11"><literal type="number" pos:start="731:10" pos:end="731:11">17</literal></expr>:</case>

        <switch pos:start="733:9" pos:end="763:9">switch <condition pos:start="733:16" pos:end="733:20">(<expr pos:start="733:17" pos:end="733:19"><name pos:start="733:17" pos:end="733:19">sel</name></expr>)</condition> <block pos:start="733:22" pos:end="763:9">{<block_content pos:start="735:9" pos:end="761:35">

        <case pos:start="735:9" pos:end="735:15">case <expr pos:start="735:14" pos:end="735:14"><literal type="number" pos:start="735:14" pos:end="735:14">0</literal></expr>:</case>

            <expr_stmt pos:start="737:13" pos:end="737:49"><expr pos:start="737:13" pos:end="737:48"><call pos:start="737:13" pos:end="737:48"><name pos:start="737:13" pos:end="737:34">gen_helper_mtc0_lladdr</name><argument_list pos:start="737:35" pos:end="737:48">(<argument pos:start="737:36" pos:end="737:42"><expr pos:start="737:36" pos:end="737:42"><name pos:start="737:36" pos:end="737:42">cpu_env</name></expr></argument>, <argument pos:start="737:45" pos:end="737:47"><expr pos:start="737:45" pos:end="737:47"><name pos:start="737:45" pos:end="737:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="739:13" pos:end="739:26"><expr pos:start="739:13" pos:end="739:25"><name pos:start="739:13" pos:end="739:14">rn</name> <operator pos:start="739:16" pos:end="739:16">=</operator> <literal type="string" pos:start="739:18" pos:end="739:25">"LLAddr"</literal></expr>;</expr_stmt>


        <case pos:start="742:9" pos:end="742:15">case <expr pos:start="742:14" pos:end="742:14"><literal type="number" pos:start="742:14" pos:end="742:14">1</literal></expr>:</case>

            <expr_stmt pos:start="744:13" pos:end="744:32"><expr pos:start="744:13" pos:end="744:31"><call pos:start="744:13" pos:end="744:31"><name pos:start="744:13" pos:end="744:21">CP0_CHECK</name><argument_list pos:start="744:22" pos:end="744:31">(<argument pos:start="744:23" pos:end="744:30"><expr pos:start="744:23" pos:end="744:30"><name pos:start="744:23" pos:end="744:30"><name pos:start="744:23" pos:end="744:25">ctx</name><operator pos:start="744:26" pos:end="744:27">-&gt;</operator><name pos:start="744:28" pos:end="744:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="746:13" pos:end="746:47"><expr pos:start="746:13" pos:end="746:46"><call pos:start="746:13" pos:end="746:46"><name pos:start="746:13" pos:end="746:32">gen_helper_mtc0_maar</name><argument_list pos:start="746:33" pos:end="746:46">(<argument pos:start="746:34" pos:end="746:40"><expr pos:start="746:34" pos:end="746:40"><name pos:start="746:34" pos:end="746:40">cpu_env</name></expr></argument>, <argument pos:start="746:43" pos:end="746:45"><expr pos:start="746:43" pos:end="746:45"><name pos:start="746:43" pos:end="746:45">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="748:13" pos:end="748:24"><expr pos:start="748:13" pos:end="748:23"><name pos:start="748:13" pos:end="748:14">rn</name> <operator pos:start="748:16" pos:end="748:16">=</operator> <literal type="string" pos:start="748:18" pos:end="748:23">"MAAR"</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="752:13" pos:end="752:32"><expr pos:start="752:13" pos:end="752:31"><call pos:start="752:13" pos:end="752:31"><name pos:start="752:13" pos:end="752:21">CP0_CHECK</name><argument_list pos:start="752:22" pos:end="752:31">(<argument pos:start="752:23" pos:end="752:30"><expr pos:start="752:23" pos:end="752:30"><name pos:start="752:23" pos:end="752:30"><name pos:start="752:23" pos:end="752:25">ctx</name><operator pos:start="752:26" pos:end="752:27">-&gt;</operator><name pos:start="752:28" pos:end="752:30">mrp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="754:13" pos:end="754:48"><expr pos:start="754:13" pos:end="754:47"><call pos:start="754:13" pos:end="754:47"><name pos:start="754:13" pos:end="754:33">gen_helper_mtc0_maari</name><argument_list pos:start="754:34" pos:end="754:47">(<argument pos:start="754:35" pos:end="754:41"><expr pos:start="754:35" pos:end="754:41"><name pos:start="754:35" pos:end="754:41">cpu_env</name></expr></argument>, <argument pos:start="754:44" pos:end="754:46"><expr pos:start="754:44" pos:end="754:46"><name pos:start="754:44" pos:end="754:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="756:13" pos:end="756:25"><expr pos:start="756:13" pos:end="756:24"><name pos:start="756:13" pos:end="756:14">rn</name> <operator pos:start="756:16" pos:end="756:16">=</operator> <literal type="string" pos:start="756:18" pos:end="756:24">"MAARI"</literal></expr>;</expr_stmt>


        <default pos:start="759:9" pos:end="759:16">default:</default>

            <goto pos:start="761:13" pos:end="761:35">goto <name pos:start="761:18" pos:end="761:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="766:5" pos:end="766:12">case <expr pos:start="766:10" pos:end="766:11"><literal type="number" pos:start="766:10" pos:end="766:11">18</literal></expr>:</case>

        <switch pos:start="768:9" pos:end="781:9">switch <condition pos:start="768:16" pos:end="768:20">(<expr pos:start="768:17" pos:end="768:19"><name pos:start="768:17" pos:end="768:19">sel</name></expr>)</condition> <block pos:start="768:22" pos:end="781:9">{<block_content pos:start="770:9" pos:end="779:35">

        <case pos:start="770:9" pos:end="770:21">case <expr pos:start="770:14" pos:end="770:20"><literal type="number" pos:start="770:14" pos:end="770:14">0</literal> <operator pos:start="770:16" pos:end="770:18">...</operator> <literal type="number" pos:start="770:20" pos:end="770:20">7</literal></expr>:</case>

            <expr_stmt pos:start="772:13" pos:end="772:52"><expr pos:start="772:13" pos:end="772:51"><call pos:start="772:13" pos:end="772:51"><name pos:start="772:13" pos:end="772:27">gen_helper_0e1i</name><argument_list pos:start="772:28" pos:end="772:51">(<argument pos:start="772:29" pos:end="772:40"><expr pos:start="772:29" pos:end="772:40"><name pos:start="772:29" pos:end="772:40">mtc0_watchlo</name></expr></argument>, <argument pos:start="772:43" pos:end="772:45"><expr pos:start="772:43" pos:end="772:45"><name pos:start="772:43" pos:end="772:45">arg</name></expr></argument>, <argument pos:start="772:48" pos:end="772:50"><expr pos:start="772:48" pos:end="772:50"><name pos:start="772:48" pos:end="772:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="774:13" pos:end="774:27"><expr pos:start="774:13" pos:end="774:26"><name pos:start="774:13" pos:end="774:14">rn</name> <operator pos:start="774:16" pos:end="774:16">=</operator> <literal type="string" pos:start="774:18" pos:end="774:26">"WatchLo"</literal></expr>;</expr_stmt>


        <default pos:start="777:9" pos:end="777:16">default:</default>

            <goto pos:start="779:13" pos:end="779:35">goto <name pos:start="779:18" pos:end="779:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="784:5" pos:end="784:12">case <expr pos:start="784:10" pos:end="784:11"><literal type="number" pos:start="784:10" pos:end="784:11">19</literal></expr>:</case>

        <switch pos:start="786:9" pos:end="799:9">switch <condition pos:start="786:16" pos:end="786:20">(<expr pos:start="786:17" pos:end="786:19"><name pos:start="786:17" pos:end="786:19">sel</name></expr>)</condition> <block pos:start="786:22" pos:end="799:9">{<block_content pos:start="788:9" pos:end="797:35">

        <case pos:start="788:9" pos:end="788:21">case <expr pos:start="788:14" pos:end="788:20"><literal type="number" pos:start="788:14" pos:end="788:14">0</literal> <operator pos:start="788:16" pos:end="788:18">...</operator> <literal type="number" pos:start="788:20" pos:end="788:20">7</literal></expr>:</case>

            <expr_stmt pos:start="790:13" pos:end="790:52"><expr pos:start="790:13" pos:end="790:51"><call pos:start="790:13" pos:end="790:51"><name pos:start="790:13" pos:end="790:27">gen_helper_0e1i</name><argument_list pos:start="790:28" pos:end="790:51">(<argument pos:start="790:29" pos:end="790:40"><expr pos:start="790:29" pos:end="790:40"><name pos:start="790:29" pos:end="790:40">mtc0_watchhi</name></expr></argument>, <argument pos:start="790:43" pos:end="790:45"><expr pos:start="790:43" pos:end="790:45"><name pos:start="790:43" pos:end="790:45">arg</name></expr></argument>, <argument pos:start="790:48" pos:end="790:50"><expr pos:start="790:48" pos:end="790:50"><name pos:start="790:48" pos:end="790:50">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="792:13" pos:end="792:27"><expr pos:start="792:13" pos:end="792:26"><name pos:start="792:13" pos:end="792:14">rn</name> <operator pos:start="792:16" pos:end="792:16">=</operator> <literal type="string" pos:start="792:18" pos:end="792:26">"WatchHi"</literal></expr>;</expr_stmt>


        <default pos:start="795:9" pos:end="795:16">default:</default>

            <goto pos:start="797:13" pos:end="797:35">goto <name pos:start="797:18" pos:end="797:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="802:5" pos:end="802:12">case <expr pos:start="802:10" pos:end="802:11"><literal type="number" pos:start="802:10" pos:end="802:11">20</literal></expr>:</case>

        <switch pos:start="804:9" pos:end="819:9">switch <condition pos:start="804:16" pos:end="804:20">(<expr pos:start="804:17" pos:end="804:19"><name pos:start="804:17" pos:end="804:19">sel</name></expr>)</condition> <block pos:start="804:22" pos:end="819:9">{<block_content pos:start="806:9" pos:end="817:35">

        <case pos:start="806:9" pos:end="806:15">case <expr pos:start="806:14" pos:end="806:14"><literal type="number" pos:start="806:14" pos:end="806:14">0</literal></expr>:</case>

            <expr_stmt pos:start="808:13" pos:end="808:39"><expr pos:start="808:13" pos:end="808:38"><call pos:start="808:13" pos:end="808:38"><name pos:start="808:13" pos:end="808:22">check_insn</name><argument_list pos:start="808:23" pos:end="808:38">(<argument pos:start="808:24" pos:end="808:26"><expr pos:start="808:24" pos:end="808:26"><name pos:start="808:24" pos:end="808:26">ctx</name></expr></argument>, <argument pos:start="808:29" pos:end="808:37"><expr pos:start="808:29" pos:end="808:37"><name pos:start="808:29" pos:end="808:37">ISA_MIPS3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="810:13" pos:end="810:51"><expr pos:start="810:13" pos:end="810:50"><call pos:start="810:13" pos:end="810:50"><name pos:start="810:13" pos:end="810:36">gen_helper_mtc0_xcontext</name><argument_list pos:start="810:37" pos:end="810:50">(<argument pos:start="810:38" pos:end="810:44"><expr pos:start="810:38" pos:end="810:44"><name pos:start="810:38" pos:end="810:44">cpu_env</name></expr></argument>, <argument pos:start="810:47" pos:end="810:49"><expr pos:start="810:47" pos:end="810:49"><name pos:start="810:47" pos:end="810:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="812:13" pos:end="812:28"><expr pos:start="812:13" pos:end="812:27"><name pos:start="812:13" pos:end="812:14">rn</name> <operator pos:start="812:16" pos:end="812:16">=</operator> <literal type="string" pos:start="812:18" pos:end="812:27">"XContext"</literal></expr>;</expr_stmt>


        <default pos:start="815:9" pos:end="815:16">default:</default>

            <goto pos:start="817:13" pos:end="817:35">goto <name pos:start="817:18" pos:end="817:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="822:5" pos:end="822:12">case <expr pos:start="822:10" pos:end="822:11"><literal type="number" pos:start="822:10" pos:end="822:11">21</literal></expr>:</case>

       <comment type="block" pos:start="824:8" pos:end="824:72">/* Officially reserved, but sel 0 is used for R1x000 framemask */</comment>

        <expr_stmt pos:start="826:9" pos:end="826:53"><expr pos:start="826:9" pos:end="826:52"><call pos:start="826:9" pos:end="826:52"><name pos:start="826:9" pos:end="826:17">CP0_CHECK</name><argument_list pos:start="826:18" pos:end="826:52">(<argument pos:start="826:19" pos:end="826:51"><expr pos:start="826:19" pos:end="826:51"><operator pos:start="826:19" pos:end="826:19">!</operator><operator pos:start="826:20" pos:end="826:20">(</operator><name pos:start="826:21" pos:end="826:35"><name pos:start="826:21" pos:end="826:23">ctx</name><operator pos:start="826:24" pos:end="826:25">-&gt;</operator><name pos:start="826:26" pos:end="826:35">insn_flags</name></name> <operator pos:start="826:37" pos:end="826:37">&amp;</operator> <name pos:start="826:39" pos:end="826:50">ISA_MIPS32R6</name><operator pos:start="826:51" pos:end="826:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="828:9" pos:end="841:9">switch <condition pos:start="828:16" pos:end="828:20">(<expr pos:start="828:17" pos:end="828:19"><name pos:start="828:17" pos:end="828:19">sel</name></expr>)</condition> <block pos:start="828:22" pos:end="841:9">{<block_content pos:start="830:9" pos:end="839:35">

        <case pos:start="830:9" pos:end="830:15">case <expr pos:start="830:14" pos:end="830:14"><literal type="number" pos:start="830:14" pos:end="830:14">0</literal></expr>:</case>

            <expr_stmt pos:start="832:13" pos:end="832:52"><expr pos:start="832:13" pos:end="832:51"><call pos:start="832:13" pos:end="832:51"><name pos:start="832:13" pos:end="832:37">gen_helper_mtc0_framemask</name><argument_list pos:start="832:38" pos:end="832:51">(<argument pos:start="832:39" pos:end="832:45"><expr pos:start="832:39" pos:end="832:45"><name pos:start="832:39" pos:end="832:45">cpu_env</name></expr></argument>, <argument pos:start="832:48" pos:end="832:50"><expr pos:start="832:48" pos:end="832:50"><name pos:start="832:48" pos:end="832:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="834:13" pos:end="834:29"><expr pos:start="834:13" pos:end="834:28"><name pos:start="834:13" pos:end="834:14">rn</name> <operator pos:start="834:16" pos:end="834:16">=</operator> <literal type="string" pos:start="834:18" pos:end="834:28">"Framemask"</literal></expr>;</expr_stmt>


        <default pos:start="837:9" pos:end="837:16">default:</default>

            <goto pos:start="839:13" pos:end="839:35">goto <name pos:start="839:18" pos:end="839:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="844:5" pos:end="844:12">case <expr pos:start="844:10" pos:end="844:11"><literal type="number" pos:start="844:10" pos:end="844:11">22</literal></expr>:</case>

        <comment type="block" pos:start="846:9" pos:end="846:21">/* ignored */</comment>

        <expr_stmt pos:start="848:9" pos:end="848:26"><expr pos:start="848:9" pos:end="848:25"><name pos:start="848:9" pos:end="848:10">rn</name> <operator pos:start="848:12" pos:end="848:12">=</operator> <literal type="string" pos:start="848:14" pos:end="848:25">"Diagnostic"</literal></expr>;</expr_stmt> <comment type="block" pos:start="848:28" pos:end="848:57">/* implementation dependent */</comment>


    <case pos:start="851:5" pos:end="851:12">case <expr pos:start="851:10" pos:end="851:11"><literal type="number" pos:start="851:10" pos:end="851:11">23</literal></expr>:</case>

        <switch pos:start="853:9" pos:end="917:9">switch <condition pos:start="853:16" pos:end="853:20">(<expr pos:start="853:17" pos:end="853:19"><name pos:start="853:17" pos:end="853:19">sel</name></expr>)</condition> <block pos:start="853:22" pos:end="917:9">{<block_content pos:start="855:9" pos:end="915:35">

        <case pos:start="855:9" pos:end="855:15">case <expr pos:start="855:14" pos:end="855:14"><literal type="number" pos:start="855:14" pos:end="855:14">0</literal></expr>:</case>

            <expr_stmt pos:start="857:13" pos:end="857:48"><expr pos:start="857:13" pos:end="857:47"><call pos:start="857:13" pos:end="857:47"><name pos:start="857:13" pos:end="857:33">gen_helper_mtc0_debug</name><argument_list pos:start="857:34" pos:end="857:47">(<argument pos:start="857:35" pos:end="857:41"><expr pos:start="857:35" pos:end="857:41"><name pos:start="857:35" pos:end="857:41">cpu_env</name></expr></argument>, <argument pos:start="857:44" pos:end="857:46"><expr pos:start="857:44" pos:end="857:46"><name pos:start="857:44" pos:end="857:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="857:50" pos:end="857:68">/* EJTAG support */</comment>

            <comment type="block" pos:start="859:13" pos:end="859:74">/* BS_STOP isn't good enough here, hflags may have changed. */</comment>

            <expr_stmt pos:start="861:13" pos:end="861:37"><expr pos:start="861:13" pos:end="861:36"><call pos:start="861:13" pos:end="861:36"><name pos:start="861:13" pos:end="861:23">gen_save_pc</name><argument_list pos:start="861:24" pos:end="861:36">(<argument pos:start="861:25" pos:end="861:35"><expr pos:start="861:25" pos:end="861:35"><name pos:start="861:25" pos:end="861:31"><name pos:start="861:25" pos:end="861:27">ctx</name><operator pos:start="861:28" pos:end="861:29">-&gt;</operator><name pos:start="861:30" pos:end="861:31">pc</name></name> <operator pos:start="861:33" pos:end="861:33">+</operator> <literal type="number" pos:start="861:35" pos:end="861:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="863:13" pos:end="863:34"><expr pos:start="863:13" pos:end="863:33"><name pos:start="863:13" pos:end="863:23"><name pos:start="863:13" pos:end="863:15">ctx</name><operator pos:start="863:16" pos:end="863:17">-&gt;</operator><name pos:start="863:18" pos:end="863:23">bstate</name></name> <operator pos:start="863:25" pos:end="863:25">=</operator> <name pos:start="863:27" pos:end="863:33">BS_EXCP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="865:13" pos:end="865:25"><expr pos:start="865:13" pos:end="865:24"><name pos:start="865:13" pos:end="865:14">rn</name> <operator pos:start="865:16" pos:end="865:16">=</operator> <literal type="string" pos:start="865:18" pos:end="865:24">"Debug"</literal></expr>;</expr_stmt>


        <case pos:start="868:9" pos:end="868:15">case <expr pos:start="868:14" pos:end="868:14"><literal type="number" pos:start="868:14" pos:end="868:14">1</literal></expr>:</case>

<comment type="line" pos:start="870:1" pos:end="870:79">//            gen_helper_mtc0_tracecontrol(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="872:13" pos:end="872:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="874:13" pos:end="874:34"><expr pos:start="874:13" pos:end="874:33"><name pos:start="874:13" pos:end="874:23"><name pos:start="874:13" pos:end="874:15">ctx</name><operator pos:start="874:16" pos:end="874:17">-&gt;</operator><name pos:start="874:18" pos:end="874:23">bstate</name></name> <operator pos:start="874:25" pos:end="874:25">=</operator> <name pos:start="874:27" pos:end="874:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="876:13" pos:end="876:32"><expr pos:start="876:13" pos:end="876:31"><name pos:start="876:13" pos:end="876:14">rn</name> <operator pos:start="876:16" pos:end="876:16">=</operator> <literal type="string" pos:start="876:18" pos:end="876:31">"TraceControl"</literal></expr>;</expr_stmt>

            <goto pos:start="878:13" pos:end="878:35">goto <name pos:start="878:18" pos:end="878:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="881:1" pos:end="881:80">//            gen_helper_mtc0_tracecontrol2(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="883:13" pos:end="883:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="885:13" pos:end="885:34"><expr pos:start="885:13" pos:end="885:33"><name pos:start="885:13" pos:end="885:23"><name pos:start="885:13" pos:end="885:15">ctx</name><operator pos:start="885:16" pos:end="885:17">-&gt;</operator><name pos:start="885:18" pos:end="885:23">bstate</name></name> <operator pos:start="885:25" pos:end="885:25">=</operator> <name pos:start="885:27" pos:end="885:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="887:13" pos:end="887:33"><expr pos:start="887:13" pos:end="887:32"><name pos:start="887:13" pos:end="887:14">rn</name> <operator pos:start="887:16" pos:end="887:16">=</operator> <literal type="string" pos:start="887:18" pos:end="887:32">"TraceControl2"</literal></expr>;</expr_stmt>

            <goto pos:start="889:13" pos:end="889:35">goto <name pos:start="889:18" pos:end="889:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="892:1" pos:end="892:80">//            gen_helper_mtc0_usertracedata(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="894:13" pos:end="894:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="896:13" pos:end="896:34"><expr pos:start="896:13" pos:end="896:33"><name pos:start="896:13" pos:end="896:23"><name pos:start="896:13" pos:end="896:15">ctx</name><operator pos:start="896:16" pos:end="896:17">-&gt;</operator><name pos:start="896:18" pos:end="896:23">bstate</name></name> <operator pos:start="896:25" pos:end="896:25">=</operator> <name pos:start="896:27" pos:end="896:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="898:13" pos:end="898:33"><expr pos:start="898:13" pos:end="898:32"><name pos:start="898:13" pos:end="898:14">rn</name> <operator pos:start="898:16" pos:end="898:16">=</operator> <literal type="string" pos:start="898:18" pos:end="898:32">"UserTraceData"</literal></expr>;</expr_stmt>

            <goto pos:start="900:13" pos:end="900:35">goto <name pos:start="900:18" pos:end="900:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="903:1" pos:end="903:75">//            gen_helper_mtc0_tracebpc(cpu_env, arg); /* PDtrace support */</comment>

            <comment type="block" pos:start="905:13" pos:end="905:77">/* Stop translation as we may have switched the execution mode */</comment>

            <expr_stmt pos:start="907:13" pos:end="907:34"><expr pos:start="907:13" pos:end="907:33"><name pos:start="907:13" pos:end="907:23"><name pos:start="907:13" pos:end="907:15">ctx</name><operator pos:start="907:16" pos:end="907:17">-&gt;</operator><name pos:start="907:18" pos:end="907:23">bstate</name></name> <operator pos:start="907:25" pos:end="907:25">=</operator> <name pos:start="907:27" pos:end="907:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="909:13" pos:end="909:28"><expr pos:start="909:13" pos:end="909:27"><name pos:start="909:13" pos:end="909:14">rn</name> <operator pos:start="909:16" pos:end="909:16">=</operator> <literal type="string" pos:start="909:18" pos:end="909:27">"TraceBPC"</literal></expr>;</expr_stmt>

            <goto pos:start="911:13" pos:end="911:35">goto <name pos:start="911:18" pos:end="911:34">cp0_unimplemented</name>;</goto>

        <default pos:start="913:9" pos:end="913:16">default:</default>

            <goto pos:start="915:13" pos:end="915:35">goto <name pos:start="915:18" pos:end="915:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="920:5" pos:end="920:12">case <expr pos:start="920:10" pos:end="920:11"><literal type="number" pos:start="920:10" pos:end="920:11">24</literal></expr>:</case>

        <switch pos:start="922:9" pos:end="937:9">switch <condition pos:start="922:16" pos:end="922:20">(<expr pos:start="922:17" pos:end="922:19"><name pos:start="922:17" pos:end="922:19">sel</name></expr>)</condition> <block pos:start="922:22" pos:end="937:9">{<block_content pos:start="924:9" pos:end="935:35">

        <case pos:start="924:9" pos:end="924:15">case <expr pos:start="924:14" pos:end="924:14"><literal type="number" pos:start="924:14" pos:end="924:14">0</literal></expr>:</case>

            <comment type="block" pos:start="926:13" pos:end="926:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="928:13" pos:end="928:74"><expr pos:start="928:13" pos:end="928:73"><call pos:start="928:13" pos:end="928:73"><name pos:start="928:13" pos:end="928:25">tcg_gen_st_tl</name><argument_list pos:start="928:26" pos:end="928:73">(<argument pos:start="928:27" pos:end="928:29"><expr pos:start="928:27" pos:end="928:29"><name pos:start="928:27" pos:end="928:29">arg</name></expr></argument>, <argument pos:start="928:32" pos:end="928:38"><expr pos:start="928:32" pos:end="928:38"><name pos:start="928:32" pos:end="928:38">cpu_env</name></expr></argument>, <argument pos:start="928:41" pos:end="928:72"><expr pos:start="928:41" pos:end="928:72"><call pos:start="928:41" pos:end="928:72"><name pos:start="928:41" pos:end="928:48">offsetof</name><argument_list pos:start="928:49" pos:end="928:72">(<argument pos:start="928:50" pos:end="928:61"><expr pos:start="928:50" pos:end="928:61"><name pos:start="928:50" pos:end="928:61">CPUMIPSState</name></expr></argument>, <argument pos:start="928:64" pos:end="928:71"><expr pos:start="928:64" pos:end="928:71"><name pos:start="928:64" pos:end="928:71">CP0_DEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="930:13" pos:end="930:24"><expr pos:start="930:13" pos:end="930:23"><name pos:start="930:13" pos:end="930:14">rn</name> <operator pos:start="930:16" pos:end="930:16">=</operator> <literal type="string" pos:start="930:18" pos:end="930:23">"DEPC"</literal></expr>;</expr_stmt>


        <default pos:start="933:9" pos:end="933:16">default:</default>

            <goto pos:start="935:13" pos:end="935:35">goto <name pos:start="935:18" pos:end="935:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="940:5" pos:end="940:12">case <expr pos:start="940:10" pos:end="940:11"><literal type="number" pos:start="940:10" pos:end="940:11">25</literal></expr>:</case>

        <switch pos:start="942:9" pos:end="1008:9">switch <condition pos:start="942:16" pos:end="942:20">(<expr pos:start="942:17" pos:end="942:19"><name pos:start="942:17" pos:end="942:19">sel</name></expr>)</condition> <block pos:start="942:22" pos:end="1008:9">{<block_content pos:start="944:9" pos:end="1006:35">

        <case pos:start="944:9" pos:end="944:15">case <expr pos:start="944:14" pos:end="944:14"><literal type="number" pos:start="944:14" pos:end="944:14">0</literal></expr>:</case>

            <expr_stmt pos:start="946:13" pos:end="946:55"><expr pos:start="946:13" pos:end="946:54"><call pos:start="946:13" pos:end="946:54"><name pos:start="946:13" pos:end="946:40">gen_helper_mtc0_performance0</name><argument_list pos:start="946:41" pos:end="946:54">(<argument pos:start="946:42" pos:end="946:48"><expr pos:start="946:42" pos:end="946:48"><name pos:start="946:42" pos:end="946:48">cpu_env</name></expr></argument>, <argument pos:start="946:51" pos:end="946:53"><expr pos:start="946:51" pos:end="946:53"><name pos:start="946:51" pos:end="946:53">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="948:13" pos:end="948:32"><expr pos:start="948:13" pos:end="948:31"><name pos:start="948:13" pos:end="948:14">rn</name> <operator pos:start="948:16" pos:end="948:16">=</operator> <literal type="string" pos:start="948:18" pos:end="948:31">"Performance0"</literal></expr>;</expr_stmt>


        <case pos:start="951:9" pos:end="951:15">case <expr pos:start="951:14" pos:end="951:14"><literal type="number" pos:start="951:14" pos:end="951:14">1</literal></expr>:</case>

<comment type="line" pos:start="953:1" pos:end="953:57">//            gen_helper_mtc0_performance1(cpu_env, arg);</comment>

            <expr_stmt pos:start="955:13" pos:end="955:32"><expr pos:start="955:13" pos:end="955:31"><name pos:start="955:13" pos:end="955:14">rn</name> <operator pos:start="955:16" pos:end="955:16">=</operator> <literal type="string" pos:start="955:18" pos:end="955:31">"Performance1"</literal></expr>;</expr_stmt>

            <goto pos:start="957:13" pos:end="957:35">goto <name pos:start="957:18" pos:end="957:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="960:1" pos:end="960:57">//            gen_helper_mtc0_performance2(cpu_env, arg);</comment>

            <expr_stmt pos:start="962:13" pos:end="962:32"><expr pos:start="962:13" pos:end="962:31"><name pos:start="962:13" pos:end="962:14">rn</name> <operator pos:start="962:16" pos:end="962:16">=</operator> <literal type="string" pos:start="962:18" pos:end="962:31">"Performance2"</literal></expr>;</expr_stmt>

            <goto pos:start="964:13" pos:end="964:35">goto <name pos:start="964:18" pos:end="964:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="967:1" pos:end="967:57">//            gen_helper_mtc0_performance3(cpu_env, arg);</comment>

            <expr_stmt pos:start="969:13" pos:end="969:32"><expr pos:start="969:13" pos:end="969:31"><name pos:start="969:13" pos:end="969:14">rn</name> <operator pos:start="969:16" pos:end="969:16">=</operator> <literal type="string" pos:start="969:18" pos:end="969:31">"Performance3"</literal></expr>;</expr_stmt>

            <goto pos:start="971:13" pos:end="971:35">goto <name pos:start="971:18" pos:end="971:34">cp0_unimplemented</name>;</goto>


<comment type="line" pos:start="974:1" pos:end="974:57">//            gen_helper_mtc0_performance4(cpu_env, arg);</comment>

            <expr_stmt pos:start="976:13" pos:end="976:32"><expr pos:start="976:13" pos:end="976:31"><name pos:start="976:13" pos:end="976:14">rn</name> <operator pos:start="976:16" pos:end="976:16">=</operator> <literal type="string" pos:start="976:18" pos:end="976:31">"Performance4"</literal></expr>;</expr_stmt>

            <goto pos:start="978:13" pos:end="978:35">goto <name pos:start="978:18" pos:end="978:34">cp0_unimplemented</name>;</goto>

        <case pos:start="980:9" pos:end="980:15">case <expr pos:start="980:14" pos:end="980:14"><literal type="number" pos:start="980:14" pos:end="980:14">5</literal></expr>:</case>

<comment type="line" pos:start="982:1" pos:end="982:57">//            gen_helper_mtc0_performance5(cpu_env, arg);</comment>

            <expr_stmt pos:start="984:13" pos:end="984:32"><expr pos:start="984:13" pos:end="984:31"><name pos:start="984:13" pos:end="984:14">rn</name> <operator pos:start="984:16" pos:end="984:16">=</operator> <literal type="string" pos:start="984:18" pos:end="984:31">"Performance5"</literal></expr>;</expr_stmt>

            <goto pos:start="986:13" pos:end="986:35">goto <name pos:start="986:18" pos:end="986:34">cp0_unimplemented</name>;</goto>

        <case pos:start="988:9" pos:end="988:15">case <expr pos:start="988:14" pos:end="988:14"><literal type="number" pos:start="988:14" pos:end="988:14">6</literal></expr>:</case>

<comment type="line" pos:start="990:1" pos:end="990:57">//            gen_helper_mtc0_performance6(cpu_env, arg);</comment>

            <expr_stmt pos:start="992:13" pos:end="992:32"><expr pos:start="992:13" pos:end="992:31"><name pos:start="992:13" pos:end="992:14">rn</name> <operator pos:start="992:16" pos:end="992:16">=</operator> <literal type="string" pos:start="992:18" pos:end="992:31">"Performance6"</literal></expr>;</expr_stmt>

            <goto pos:start="994:13" pos:end="994:35">goto <name pos:start="994:18" pos:end="994:34">cp0_unimplemented</name>;</goto>

        <case pos:start="996:9" pos:end="996:15">case <expr pos:start="996:14" pos:end="996:14"><literal type="number" pos:start="996:14" pos:end="996:14">7</literal></expr>:</case>

<comment type="line" pos:start="998:1" pos:end="998:57">//            gen_helper_mtc0_performance7(cpu_env, arg);</comment>

            <expr_stmt pos:start="1000:13" pos:end="1000:32"><expr pos:start="1000:13" pos:end="1000:31"><name pos:start="1000:13" pos:end="1000:14">rn</name> <operator pos:start="1000:16" pos:end="1000:16">=</operator> <literal type="string" pos:start="1000:18" pos:end="1000:31">"Performance7"</literal></expr>;</expr_stmt>

            <goto pos:start="1002:13" pos:end="1002:35">goto <name pos:start="1002:18" pos:end="1002:34">cp0_unimplemented</name>;</goto>

        <default pos:start="1004:9" pos:end="1004:16">default:</default>

            <goto pos:start="1006:13" pos:end="1006:35">goto <name pos:start="1006:18" pos:end="1006:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1011:5" pos:end="1011:12">case <expr pos:start="1011:10" pos:end="1011:11"><literal type="number" pos:start="1011:10" pos:end="1011:11">26</literal></expr>:</case>

        <switch pos:start="1013:9" pos:end="1028:9">switch <condition pos:start="1013:16" pos:end="1013:20">(<expr pos:start="1013:17" pos:end="1013:19"><name pos:start="1013:17" pos:end="1013:19">sel</name></expr>)</condition> <block pos:start="1013:22" pos:end="1028:9">{<block_content pos:start="1015:9" pos:end="1026:35">

        <case pos:start="1015:9" pos:end="1015:15">case <expr pos:start="1015:14" pos:end="1015:14"><literal type="number" pos:start="1015:14" pos:end="1015:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1017:13" pos:end="1017:49"><expr pos:start="1017:13" pos:end="1017:48"><call pos:start="1017:13" pos:end="1017:48"><name pos:start="1017:13" pos:end="1017:34">gen_helper_mtc0_errctl</name><argument_list pos:start="1017:35" pos:end="1017:48">(<argument pos:start="1017:36" pos:end="1017:42"><expr pos:start="1017:36" pos:end="1017:42"><name pos:start="1017:36" pos:end="1017:42">cpu_env</name></expr></argument>, <argument pos:start="1017:45" pos:end="1017:47"><expr pos:start="1017:45" pos:end="1017:47"><name pos:start="1017:45" pos:end="1017:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1019:13" pos:end="1019:34"><expr pos:start="1019:13" pos:end="1019:33"><name pos:start="1019:13" pos:end="1019:23"><name pos:start="1019:13" pos:end="1019:15">ctx</name><operator pos:start="1019:16" pos:end="1019:17">-&gt;</operator><name pos:start="1019:18" pos:end="1019:23">bstate</name></name> <operator pos:start="1019:25" pos:end="1019:25">=</operator> <name pos:start="1019:27" pos:end="1019:33">BS_STOP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="1021:13" pos:end="1021:26"><expr pos:start="1021:13" pos:end="1021:25"><name pos:start="1021:13" pos:end="1021:14">rn</name> <operator pos:start="1021:16" pos:end="1021:16">=</operator> <literal type="string" pos:start="1021:18" pos:end="1021:25">"ErrCtl"</literal></expr>;</expr_stmt>


        <default pos:start="1024:9" pos:end="1024:16">default:</default>

            <goto pos:start="1026:13" pos:end="1026:35">goto <name pos:start="1026:18" pos:end="1026:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1031:5" pos:end="1031:12">case <expr pos:start="1031:10" pos:end="1031:11"><literal type="number" pos:start="1031:10" pos:end="1031:11">27</literal></expr>:</case>

        <switch pos:start="1033:9" pos:end="1046:9">switch <condition pos:start="1033:16" pos:end="1033:20">(<expr pos:start="1033:17" pos:end="1033:19"><name pos:start="1033:17" pos:end="1033:19">sel</name></expr>)</condition> <block pos:start="1033:22" pos:end="1046:9">{<block_content pos:start="1035:9" pos:end="1044:35">

        <case pos:start="1035:9" pos:end="1035:21">case <expr pos:start="1035:14" pos:end="1035:20"><literal type="number" pos:start="1035:14" pos:end="1035:14">0</literal> <operator pos:start="1035:16" pos:end="1035:18">...</operator> <literal type="number" pos:start="1035:20" pos:end="1035:20">3</literal></expr>:</case>

            <comment type="block" pos:start="1037:13" pos:end="1037:25">/* ignored */</comment>

            <expr_stmt pos:start="1039:13" pos:end="1039:28"><expr pos:start="1039:13" pos:end="1039:27"><name pos:start="1039:13" pos:end="1039:14">rn</name> <operator pos:start="1039:16" pos:end="1039:16">=</operator> <literal type="string" pos:start="1039:18" pos:end="1039:27">"CacheErr"</literal></expr>;</expr_stmt>


        <default pos:start="1042:9" pos:end="1042:16">default:</default>

            <goto pos:start="1044:13" pos:end="1044:35">goto <name pos:start="1044:18" pos:end="1044:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1049:5" pos:end="1049:12">case <expr pos:start="1049:10" pos:end="1049:11"><literal type="number" pos:start="1049:10" pos:end="1049:11">28</literal></expr>:</case>

        <switch pos:start="1051:9" pos:end="1080:9">switch <condition pos:start="1051:16" pos:end="1051:20">(<expr pos:start="1051:17" pos:end="1051:19"><name pos:start="1051:17" pos:end="1051:19">sel</name></expr>)</condition> <block pos:start="1051:22" pos:end="1080:9">{<block_content pos:start="1053:9" pos:end="1078:35">

        <case pos:start="1053:9" pos:end="1053:15">case <expr pos:start="1053:14" pos:end="1053:14"><literal type="number" pos:start="1053:14" pos:end="1053:14">0</literal></expr>:</case>



        <case pos:start="1057:9" pos:end="1057:15">case <expr pos:start="1057:14" pos:end="1057:14"><literal type="number" pos:start="1057:14" pos:end="1057:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1059:13" pos:end="1059:48"><expr pos:start="1059:13" pos:end="1059:47"><call pos:start="1059:13" pos:end="1059:47"><name pos:start="1059:13" pos:end="1059:33">gen_helper_mtc0_taglo</name><argument_list pos:start="1059:34" pos:end="1059:47">(<argument pos:start="1059:35" pos:end="1059:41"><expr pos:start="1059:35" pos:end="1059:41"><name pos:start="1059:35" pos:end="1059:41">cpu_env</name></expr></argument>, <argument pos:start="1059:44" pos:end="1059:46"><expr pos:start="1059:44" pos:end="1059:46"><name pos:start="1059:44" pos:end="1059:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1061:13" pos:end="1061:25"><expr pos:start="1061:13" pos:end="1061:24"><name pos:start="1061:13" pos:end="1061:14">rn</name> <operator pos:start="1061:16" pos:end="1061:16">=</operator> <literal type="string" pos:start="1061:18" pos:end="1061:24">"TagLo"</literal></expr>;</expr_stmt>


        <case pos:start="1064:9" pos:end="1064:15">case <expr pos:start="1064:14" pos:end="1064:14"><literal type="number" pos:start="1064:14" pos:end="1064:14">1</literal></expr>:</case>


        <case pos:start="1067:9" pos:end="1067:15">case <expr pos:start="1067:14" pos:end="1067:14"><literal type="number" pos:start="1067:14" pos:end="1067:14">5</literal></expr>:</case>

        <case pos:start="1069:9" pos:end="1069:15">case <expr pos:start="1069:14" pos:end="1069:14"><literal type="number" pos:start="1069:14" pos:end="1069:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1071:13" pos:end="1071:49"><expr pos:start="1071:13" pos:end="1071:48"><call pos:start="1071:13" pos:end="1071:48"><name pos:start="1071:13" pos:end="1071:34">gen_helper_mtc0_datalo</name><argument_list pos:start="1071:35" pos:end="1071:48">(<argument pos:start="1071:36" pos:end="1071:42"><expr pos:start="1071:36" pos:end="1071:42"><name pos:start="1071:36" pos:end="1071:42">cpu_env</name></expr></argument>, <argument pos:start="1071:45" pos:end="1071:47"><expr pos:start="1071:45" pos:end="1071:47"><name pos:start="1071:45" pos:end="1071:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1073:13" pos:end="1073:26"><expr pos:start="1073:13" pos:end="1073:25"><name pos:start="1073:13" pos:end="1073:14">rn</name> <operator pos:start="1073:16" pos:end="1073:16">=</operator> <literal type="string" pos:start="1073:18" pos:end="1073:25">"DataLo"</literal></expr>;</expr_stmt>


        <default pos:start="1076:9" pos:end="1076:16">default:</default>

            <goto pos:start="1078:13" pos:end="1078:35">goto <name pos:start="1078:18" pos:end="1078:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1083:5" pos:end="1083:12">case <expr pos:start="1083:10" pos:end="1083:11"><literal type="number" pos:start="1083:10" pos:end="1083:11">29</literal></expr>:</case>

        <switch pos:start="1085:9" pos:end="1116:9">switch <condition pos:start="1085:16" pos:end="1085:20">(<expr pos:start="1085:17" pos:end="1085:19"><name pos:start="1085:17" pos:end="1085:19">sel</name></expr>)</condition> <block pos:start="1085:22" pos:end="1116:9">{<block_content pos:start="1087:9" pos:end="1114:35">

        <case pos:start="1087:9" pos:end="1087:15">case <expr pos:start="1087:14" pos:end="1087:14"><literal type="number" pos:start="1087:14" pos:end="1087:14">0</literal></expr>:</case>



        <case pos:start="1091:9" pos:end="1091:15">case <expr pos:start="1091:14" pos:end="1091:14"><literal type="number" pos:start="1091:14" pos:end="1091:14">6</literal></expr>:</case>

            <expr_stmt pos:start="1093:13" pos:end="1093:48"><expr pos:start="1093:13" pos:end="1093:47"><call pos:start="1093:13" pos:end="1093:47"><name pos:start="1093:13" pos:end="1093:33">gen_helper_mtc0_taghi</name><argument_list pos:start="1093:34" pos:end="1093:47">(<argument pos:start="1093:35" pos:end="1093:41"><expr pos:start="1093:35" pos:end="1093:41"><name pos:start="1093:35" pos:end="1093:41">cpu_env</name></expr></argument>, <argument pos:start="1093:44" pos:end="1093:46"><expr pos:start="1093:44" pos:end="1093:46"><name pos:start="1093:44" pos:end="1093:46">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:25"><expr pos:start="1095:13" pos:end="1095:24"><name pos:start="1095:13" pos:end="1095:14">rn</name> <operator pos:start="1095:16" pos:end="1095:16">=</operator> <literal type="string" pos:start="1095:18" pos:end="1095:24">"TagHi"</literal></expr>;</expr_stmt>


        <case pos:start="1098:9" pos:end="1098:15">case <expr pos:start="1098:14" pos:end="1098:14"><literal type="number" pos:start="1098:14" pos:end="1098:14">1</literal></expr>:</case>


        <case pos:start="1101:9" pos:end="1101:15">case <expr pos:start="1101:14" pos:end="1101:14"><literal type="number" pos:start="1101:14" pos:end="1101:14">5</literal></expr>:</case>

        <case pos:start="1103:9" pos:end="1103:15">case <expr pos:start="1103:14" pos:end="1103:14"><literal type="number" pos:start="1103:14" pos:end="1103:14">7</literal></expr>:</case>

            <expr_stmt pos:start="1105:13" pos:end="1105:49"><expr pos:start="1105:13" pos:end="1105:48"><call pos:start="1105:13" pos:end="1105:48"><name pos:start="1105:13" pos:end="1105:34">gen_helper_mtc0_datahi</name><argument_list pos:start="1105:35" pos:end="1105:48">(<argument pos:start="1105:36" pos:end="1105:42"><expr pos:start="1105:36" pos:end="1105:42"><name pos:start="1105:36" pos:end="1105:42">cpu_env</name></expr></argument>, <argument pos:start="1105:45" pos:end="1105:47"><expr pos:start="1105:45" pos:end="1105:47"><name pos:start="1105:45" pos:end="1105:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1107:13" pos:end="1107:26"><expr pos:start="1107:13" pos:end="1107:25"><name pos:start="1107:13" pos:end="1107:14">rn</name> <operator pos:start="1107:16" pos:end="1107:16">=</operator> <literal type="string" pos:start="1107:18" pos:end="1107:25">"DataHi"</literal></expr>;</expr_stmt>


        <default pos:start="1110:9" pos:end="1110:16">default:</default>

            <expr_stmt pos:start="1112:13" pos:end="1112:31"><expr pos:start="1112:13" pos:end="1112:30"><name pos:start="1112:13" pos:end="1112:14">rn</name> <operator pos:start="1112:16" pos:end="1112:16">=</operator> <literal type="string" pos:start="1112:18" pos:end="1112:30">"invalid sel"</literal></expr>;</expr_stmt>

            <goto pos:start="1114:13" pos:end="1114:35">goto <name pos:start="1114:18" pos:end="1114:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1119:5" pos:end="1119:12">case <expr pos:start="1119:10" pos:end="1119:11"><literal type="number" pos:start="1119:10" pos:end="1119:11">30</literal></expr>:</case>

        <switch pos:start="1121:9" pos:end="1134:9">switch <condition pos:start="1121:16" pos:end="1121:20">(<expr pos:start="1121:17" pos:end="1121:19"><name pos:start="1121:17" pos:end="1121:19">sel</name></expr>)</condition> <block pos:start="1121:22" pos:end="1134:9">{<block_content pos:start="1123:9" pos:end="1132:35">

        <case pos:start="1123:9" pos:end="1123:15">case <expr pos:start="1123:14" pos:end="1123:14"><literal type="number" pos:start="1123:14" pos:end="1123:14">0</literal></expr>:</case>

            <expr_stmt pos:start="1125:13" pos:end="1125:78"><expr pos:start="1125:13" pos:end="1125:77"><call pos:start="1125:13" pos:end="1125:77"><name pos:start="1125:13" pos:end="1125:25">tcg_gen_st_tl</name><argument_list pos:start="1125:26" pos:end="1125:77">(<argument pos:start="1125:27" pos:end="1125:29"><expr pos:start="1125:27" pos:end="1125:29"><name pos:start="1125:27" pos:end="1125:29">arg</name></expr></argument>, <argument pos:start="1125:32" pos:end="1125:38"><expr pos:start="1125:32" pos:end="1125:38"><name pos:start="1125:32" pos:end="1125:38">cpu_env</name></expr></argument>, <argument pos:start="1125:41" pos:end="1125:76"><expr pos:start="1125:41" pos:end="1125:76"><call pos:start="1125:41" pos:end="1125:76"><name pos:start="1125:41" pos:end="1125:48">offsetof</name><argument_list pos:start="1125:49" pos:end="1125:76">(<argument pos:start="1125:50" pos:end="1125:61"><expr pos:start="1125:50" pos:end="1125:61"><name pos:start="1125:50" pos:end="1125:61">CPUMIPSState</name></expr></argument>, <argument pos:start="1125:64" pos:end="1125:75"><expr pos:start="1125:64" pos:end="1125:75"><name pos:start="1125:64" pos:end="1125:75">CP0_ErrorEPC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1127:13" pos:end="1127:28"><expr pos:start="1127:13" pos:end="1127:27"><name pos:start="1127:13" pos:end="1127:14">rn</name> <operator pos:start="1127:16" pos:end="1127:16">=</operator> <literal type="string" pos:start="1127:18" pos:end="1127:27">"ErrorEPC"</literal></expr>;</expr_stmt>


        <default pos:start="1130:9" pos:end="1130:16">default:</default>

            <goto pos:start="1132:13" pos:end="1132:35">goto <name pos:start="1132:18" pos:end="1132:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>


    <case pos:start="1137:5" pos:end="1137:12">case <expr pos:start="1137:10" pos:end="1137:11"><literal type="number" pos:start="1137:10" pos:end="1137:11">31</literal></expr>:</case>

        <switch pos:start="1139:9" pos:end="1165:9">switch <condition pos:start="1139:16" pos:end="1139:20">(<expr pos:start="1139:17" pos:end="1139:19"><name pos:start="1139:17" pos:end="1139:19">sel</name></expr>)</condition> <block pos:start="1139:22" pos:end="1165:9">{<block_content pos:start="1141:9" pos:end="1163:35">

        <case pos:start="1141:9" pos:end="1141:15">case <expr pos:start="1141:14" pos:end="1141:14"><literal type="number" pos:start="1141:14" pos:end="1141:14">0</literal></expr>:</case>

            <comment type="block" pos:start="1143:13" pos:end="1143:31">/* EJTAG support */</comment>

            <expr_stmt pos:start="1145:13" pos:end="1145:70"><expr pos:start="1145:13" pos:end="1145:69"><call pos:start="1145:13" pos:end="1145:69"><name pos:start="1145:13" pos:end="1145:28">gen_mtc0_store32</name><argument_list pos:start="1145:29" pos:end="1145:69">(<argument pos:start="1145:30" pos:end="1145:32"><expr pos:start="1145:30" pos:end="1145:32"><name pos:start="1145:30" pos:end="1145:32">arg</name></expr></argument>, <argument pos:start="1145:35" pos:end="1145:68"><expr pos:start="1145:35" pos:end="1145:68"><call pos:start="1145:35" pos:end="1145:68"><name pos:start="1145:35" pos:end="1145:42">offsetof</name><argument_list pos:start="1145:43" pos:end="1145:68">(<argument pos:start="1145:44" pos:end="1145:55"><expr pos:start="1145:44" pos:end="1145:55"><name pos:start="1145:44" pos:end="1145:55">CPUMIPSState</name></expr></argument>, <argument pos:start="1145:58" pos:end="1145:67"><expr pos:start="1145:58" pos:end="1145:67"><name pos:start="1145:58" pos:end="1145:67">CP0_DESAVE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1147:13" pos:end="1147:26"><expr pos:start="1147:13" pos:end="1147:25"><name pos:start="1147:13" pos:end="1147:14">rn</name> <operator pos:start="1147:16" pos:end="1147:16">=</operator> <literal type="string" pos:start="1147:18" pos:end="1147:25">"DESAVE"</literal></expr>;</expr_stmt>


        <case pos:start="1150:9" pos:end="1150:21">case <expr pos:start="1150:14" pos:end="1150:20"><literal type="number" pos:start="1150:14" pos:end="1150:14">2</literal> <operator pos:start="1150:16" pos:end="1150:18">...</operator> <literal type="number" pos:start="1150:20" pos:end="1150:20">7</literal></expr>:</case>

            <expr_stmt pos:start="1152:13" pos:end="1152:51"><expr pos:start="1152:13" pos:end="1152:50"><call pos:start="1152:13" pos:end="1152:50"><name pos:start="1152:13" pos:end="1152:21">CP0_CHECK</name><argument_list pos:start="1152:22" pos:end="1152:50">(<argument pos:start="1152:23" pos:end="1152:49"><expr pos:start="1152:23" pos:end="1152:49"><name pos:start="1152:23" pos:end="1152:36"><name pos:start="1152:23" pos:end="1152:25">ctx</name><operator pos:start="1152:26" pos:end="1152:27">-&gt;</operator><name pos:start="1152:28" pos:end="1152:36">kscrexist</name></name> <operator pos:start="1152:38" pos:end="1152:38">&amp;</operator> <operator pos:start="1152:40" pos:end="1152:40">(</operator><literal type="number" pos:start="1152:41" pos:end="1152:41">1</literal> <operator pos:start="1152:43" pos:end="1152:44">&lt;&lt;</operator> <name pos:start="1152:46" pos:end="1152:48">sel</name><operator pos:start="1152:49" pos:end="1152:49">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1154:13" pos:end="1156:71"><expr pos:start="1154:13" pos:end="1156:70"><call pos:start="1154:13" pos:end="1156:70"><name pos:start="1154:13" pos:end="1154:25">tcg_gen_st_tl</name><argument_list pos:start="1154:26" pos:end="1156:70">(<argument pos:start="1154:27" pos:end="1154:29"><expr pos:start="1154:27" pos:end="1154:29"><name pos:start="1154:27" pos:end="1154:29">arg</name></expr></argument>, <argument pos:start="1154:32" pos:end="1154:38"><expr pos:start="1154:32" pos:end="1154:38"><name pos:start="1154:32" pos:end="1154:38">cpu_env</name></expr></argument>,

                          <argument pos:start="1156:27" pos:end="1156:69"><expr pos:start="1156:27" pos:end="1156:69"><call pos:start="1156:27" pos:end="1156:69"><name pos:start="1156:27" pos:end="1156:34">offsetof</name><argument_list pos:start="1156:35" pos:end="1156:69">(<argument pos:start="1156:36" pos:end="1156:47"><expr pos:start="1156:36" pos:end="1156:47"><name pos:start="1156:36" pos:end="1156:47">CPUMIPSState</name></expr></argument>, <argument pos:start="1156:50" pos:end="1156:68"><expr pos:start="1156:50" pos:end="1156:68"><name pos:start="1156:50" pos:end="1156:68"><name pos:start="1156:50" pos:end="1156:61">CP0_KScratch</name><index pos:start="1156:62" pos:end="1156:68">[<expr pos:start="1156:63" pos:end="1156:67"><name pos:start="1156:63" pos:end="1156:65">sel</name><operator pos:start="1156:66" pos:end="1156:66">-</operator><literal type="number" pos:start="1156:67" pos:end="1156:67">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1158:13" pos:end="1158:28"><expr pos:start="1158:13" pos:end="1158:27"><name pos:start="1158:13" pos:end="1158:14">rn</name> <operator pos:start="1158:16" pos:end="1158:16">=</operator> <literal type="string" pos:start="1158:18" pos:end="1158:27">"KScratch"</literal></expr>;</expr_stmt>


        <default pos:start="1161:9" pos:end="1161:16">default:</default>

            <goto pos:start="1163:13" pos:end="1163:35">goto <name pos:start="1163:18" pos:end="1163:34">cp0_unimplemented</name>;</goto>

        </block_content>}</block></switch>

        <comment type="block" pos:start="1167:9" pos:end="1167:73">/* Stop translation as we may have switched the execution mode */</comment>

        <expr_stmt pos:start="1169:9" pos:end="1169:30"><expr pos:start="1169:9" pos:end="1169:29"><name pos:start="1169:9" pos:end="1169:19"><name pos:start="1169:9" pos:end="1169:11">ctx</name><operator pos:start="1169:12" pos:end="1169:13">-&gt;</operator><name pos:start="1169:14" pos:end="1169:19">bstate</name></name> <operator pos:start="1169:21" pos:end="1169:21">=</operator> <name pos:start="1169:23" pos:end="1169:29">BS_STOP</name></expr>;</expr_stmt>


    <default pos:start="1172:5" pos:end="1172:12">default:</default>

        <goto pos:start="1174:9" pos:end="1174:31">goto <name pos:start="1174:14" pos:end="1174:30">cp0_unimplemented</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="1178:5" pos:end="1178:51"><expr pos:start="1178:5" pos:end="1178:50"><call pos:start="1178:5" pos:end="1178:50"><name pos:start="1178:5" pos:end="1178:27">trace_mips_translate_c0</name><argument_list pos:start="1178:28" pos:end="1178:50">(<argument pos:start="1178:29" pos:end="1178:35"><expr pos:start="1178:29" pos:end="1178:35"><literal type="string" pos:start="1178:29" pos:end="1178:35">"dmtc0"</literal></expr></argument>, <argument pos:start="1178:38" pos:end="1178:39"><expr pos:start="1178:38" pos:end="1178:39"><name pos:start="1178:38" pos:end="1178:39">rn</name></expr></argument>, <argument pos:start="1178:42" pos:end="1178:44"><expr pos:start="1178:42" pos:end="1178:44"><name pos:start="1178:42" pos:end="1178:44">reg</name></expr></argument>, <argument pos:start="1178:47" pos:end="1178:49"><expr pos:start="1178:47" pos:end="1178:49"><name pos:start="1178:47" pos:end="1178:49">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="1182:5" pos:end="1182:70">/* For simplicity assume that all writes can cause interrupts.  */</comment>

    <if_stmt pos:start="1184:5" pos:end="1190:5"><if pos:start="1184:5" pos:end="1190:5">if <condition pos:start="1184:8" pos:end="1184:40">(<expr pos:start="1184:9" pos:end="1184:39"><name pos:start="1184:9" pos:end="1184:23"><name pos:start="1184:9" pos:end="1184:11">ctx</name><operator pos:start="1184:12" pos:end="1184:13">-&gt;</operator><name pos:start="1184:14" pos:end="1184:15">tb</name><operator pos:start="1184:16" pos:end="1184:17">-&gt;</operator><name pos:start="1184:18" pos:end="1184:23">cflags</name></name> <operator pos:start="1184:25" pos:end="1184:25">&amp;</operator> <name pos:start="1184:27" pos:end="1184:39">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="1184:42" pos:end="1190:5">{<block_content pos:start="1186:9" pos:end="1188:30">

        <expr_stmt pos:start="1186:9" pos:end="1186:21"><expr pos:start="1186:9" pos:end="1186:20"><call pos:start="1186:9" pos:end="1186:20"><name pos:start="1186:9" pos:end="1186:18">gen_io_end</name><argument_list pos:start="1186:19" pos:end="1186:20">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="1188:9" pos:end="1188:30"><expr pos:start="1188:9" pos:end="1188:29"><name pos:start="1188:9" pos:end="1188:19"><name pos:start="1188:9" pos:end="1188:11">ctx</name><operator pos:start="1188:12" pos:end="1188:13">-&gt;</operator><name pos:start="1188:14" pos:end="1188:19">bstate</name></name> <operator pos:start="1188:21" pos:end="1188:21">=</operator> <name pos:start="1188:23" pos:end="1188:29">BS_STOP</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="1192:5" pos:end="1192:11">return;</return>



<label pos:start="1196:1" pos:end="1196:18"><name pos:start="1196:1" pos:end="1196:17">cp0_unimplemented</name>:</label>

    <expr_stmt pos:start="1198:5" pos:end="1198:73"><expr pos:start="1198:5" pos:end="1198:72"><call pos:start="1198:5" pos:end="1198:72"><name pos:start="1198:5" pos:end="1198:17">qemu_log_mask</name><argument_list pos:start="1198:18" pos:end="1198:72">(<argument pos:start="1198:19" pos:end="1198:27"><expr pos:start="1198:19" pos:end="1198:27"><name pos:start="1198:19" pos:end="1198:27">LOG_UNIMP</name></expr></argument>, <argument pos:start="1198:30" pos:end="1198:57"><expr pos:start="1198:30" pos:end="1198:57"><literal type="string" pos:start="1198:30" pos:end="1198:57">"dmtc0 %s (reg %d sel %d)\n"</literal></expr></argument>, <argument pos:start="1198:60" pos:end="1198:61"><expr pos:start="1198:60" pos:end="1198:61"><name pos:start="1198:60" pos:end="1198:61">rn</name></expr></argument>, <argument pos:start="1198:64" pos:end="1198:66"><expr pos:start="1198:64" pos:end="1198:66"><name pos:start="1198:64" pos:end="1198:66">reg</name></expr></argument>, <argument pos:start="1198:69" pos:end="1198:71"><expr pos:start="1198:69" pos:end="1198:71"><name pos:start="1198:69" pos:end="1198:71">sel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function></unit>
