<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16102.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mp3_read_probe</name><parameter_list pos:start="1:26" pos:end="1:41">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:39"><name pos:start="1:27" pos:end="1:37">AVProbeData</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:36">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">max_frames</name></decl>, <decl pos:start="5:21" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:32">first_frames</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">fsize</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">frames</name></decl>, <decl pos:start="7:24" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:34">sample_rate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:19">header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">buf</name></decl>, <decl pos:start="11:19" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:23">buf2</name></decl>, <decl pos:start="11:26" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:29">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">AVCodecContext</name></type> <name pos:start="13:20" pos:end="13:24">avctx</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:37"><if pos:start="17:5" pos:end="19:37">if<condition pos:start="17:7" pos:end="17:27">(<expr pos:start="17:8" pos:end="17:26"><call pos:start="17:8" pos:end="17:26"><name pos:start="17:8" pos:end="17:18">id3v2_match</name><argument_list pos:start="17:19" pos:end="17:26">(<argument pos:start="17:20" pos:end="17:25"><expr pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:25"><name pos:start="17:20" pos:end="17:20">p</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:25">buf</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:37"><block_content pos:start="19:9" pos:end="19:37">

        <return pos:start="19:9" pos:end="19:37">return <expr pos:start="19:16" pos:end="19:36"><name pos:start="19:16" pos:end="19:32">AVPROBE_SCORE_MAX</name><operator pos:start="19:33" pos:end="19:33">/</operator><literal type="number" pos:start="19:34" pos:end="19:35">2</literal><operator pos:start="19:35" pos:end="19:35">+</operator><literal type="number" pos:start="19:36" pos:end="19:36">1</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line" pos:start="19:39" pos:end="19:128">// this must be less than mpeg-ps because some retards put id3v2 tags before mpeg-ps files</comment>



    <expr_stmt pos:start="23:5" pos:end="23:19"><expr pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:14">max_frames</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:17"><expr pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:7">buf</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:16"><name pos:start="25:11" pos:end="25:11">p</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:16">buf</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:7">end</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:13">buf</name> <operator pos:start="27:15" pos:end="27:15">+</operator> <call pos:start="27:17" pos:end="27:59"><name pos:start="27:17" pos:end="27:21">FFMIN</name><argument_list pos:start="27:22" pos:end="27:59">(<argument pos:start="27:23" pos:end="27:26"><expr pos:start="27:23" pos:end="27:26"><literal type="number" pos:start="27:23" pos:end="27:26">4096</literal></expr></argument>, <argument pos:start="27:29" pos:end="27:58"><expr pos:start="27:29" pos:end="27:58"><name pos:start="27:29" pos:end="27:39"><name pos:start="27:29" pos:end="27:29">p</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:39">buf_size</name></name> <operator pos:start="27:41" pos:end="27:41">-</operator> <sizeof pos:start="27:43" pos:end="27:58">sizeof<argument_list pos:start="27:49" pos:end="27:58">(<argument pos:start="27:50" pos:end="27:57"><expr pos:start="27:50" pos:end="27:57"><name pos:start="27:50" pos:end="27:57">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="31:5" pos:end="57:5">for<control pos:start="31:8" pos:end="31:27">(<init pos:start="31:9" pos:end="31:9">;</init> <condition pos:start="31:11" pos:end="31:20"><expr pos:start="31:11" pos:end="31:19"><name pos:start="31:11" pos:end="31:13">buf</name> <operator pos:start="31:15" pos:end="31:15">&lt;</operator> <name pos:start="31:17" pos:end="31:19">end</name></expr>;</condition> <incr pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:24">buf</name><operator pos:start="31:25" pos:end="31:26">++</operator></expr></incr>)</control> <block pos:start="31:29" pos:end="57:5">{<block_content pos:start="33:9" pos:end="55:33">

        <expr_stmt pos:start="33:9" pos:end="33:19"><expr pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:12">buf2</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <name pos:start="33:16" pos:end="33:18">buf</name></expr>;</expr_stmt>



        <for pos:start="37:9" pos:end="49:9">for<control pos:start="37:12" pos:end="37:45">(<init pos:start="37:13" pos:end="37:23"><expr pos:start="37:13" pos:end="37:22"><name pos:start="37:13" pos:end="37:18">frames</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>;</init> <condition pos:start="37:25" pos:end="37:35"><expr pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:28">buf2</name> <operator pos:start="37:30" pos:end="37:30">&lt;</operator> <name pos:start="37:32" pos:end="37:34">end</name></expr>;</condition> <incr pos:start="37:37" pos:end="37:44"><expr pos:start="37:37" pos:end="37:44"><name pos:start="37:37" pos:end="37:42">frames</name><operator pos:start="37:43" pos:end="37:44">++</operator></expr></incr>)</control> <block pos:start="37:47" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:26">

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:18">header</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:34"><name pos:start="39:22" pos:end="39:28">AV_RB32</name><argument_list pos:start="39:29" pos:end="39:34">(<argument pos:start="39:30" pos:end="39:33"><expr pos:start="39:30" pos:end="39:33"><name pos:start="39:30" pos:end="39:33">buf2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:71"><expr pos:start="41:13" pos:end="41:70"><name pos:start="41:13" pos:end="41:17">fsize</name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="41:70"><name pos:start="41:21" pos:end="41:40">ff_mpa_decode_header</name><argument_list pos:start="41:41" pos:end="41:70">(<argument pos:start="41:42" pos:end="41:47"><expr pos:start="41:42" pos:end="41:47"><operator pos:start="41:42" pos:end="41:42">&amp;</operator><name pos:start="41:43" pos:end="41:47">avctx</name></expr></argument>, <argument pos:start="41:50" pos:end="41:55"><expr pos:start="41:50" pos:end="41:55"><name pos:start="41:50" pos:end="41:55">header</name></expr></argument>, <argument pos:start="41:58" pos:end="41:69"><expr pos:start="41:58" pos:end="41:69"><operator pos:start="41:58" pos:end="41:58">&amp;</operator><name pos:start="41:59" pos:end="41:69">sample_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:22"><if pos:start="43:13" pos:end="45:22">if<condition pos:start="43:15" pos:end="43:25">(<expr pos:start="43:16" pos:end="43:24"><name pos:start="43:16" pos:end="43:20">fsize</name> <operator pos:start="43:22" pos:end="43:22">&lt;</operator> <literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:22"><block_content pos:start="45:17" pos:end="45:22">

                <break pos:start="45:17" pos:end="45:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:16">buf2</name> <operator pos:start="47:18" pos:end="47:19">+=</operator> <name pos:start="47:21" pos:end="47:25">fsize</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="51:9" pos:end="51:47"><expr pos:start="51:9" pos:end="51:46"><name pos:start="51:9" pos:end="51:18">max_frames</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="51:46"><name pos:start="51:22" pos:end="51:26">FFMAX</name><argument_list pos:start="51:27" pos:end="51:46">(<argument pos:start="51:28" pos:end="51:37"><expr pos:start="51:28" pos:end="51:37"><name pos:start="51:28" pos:end="51:37">max_frames</name></expr></argument>, <argument pos:start="51:40" pos:end="51:45"><expr pos:start="51:40" pos:end="51:45"><name pos:start="51:40" pos:end="51:45">frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:33"><if pos:start="53:9" pos:end="55:33">if<condition pos:start="53:11" pos:end="53:25">(<expr pos:start="53:12" pos:end="53:24"><name pos:start="53:12" pos:end="53:14">buf</name> <operator pos:start="53:16" pos:end="53:17">==</operator> <name pos:start="53:19" pos:end="53:24"><name pos:start="53:19" pos:end="53:19">p</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:24">buf</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:33"><block_content pos:start="55:13" pos:end="55:33">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:24">first_frames</name><operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:32">frames</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="59:5" pos:end="65:36"><if pos:start="59:5" pos:end="59:56">if   <condition pos:start="59:10" pos:end="59:26">(<expr pos:start="59:11" pos:end="59:25"><name pos:start="59:11" pos:end="59:22">first_frames</name><operator pos:start="59:23" pos:end="59:24">&gt;=</operator><literal type="number" pos:start="59:25" pos:end="59:25">3</literal></expr>)</condition><block type="pseudo" pos:start="59:28" pos:end="59:56"><block_content pos:start="59:28" pos:end="59:56"> <return pos:start="59:28" pos:end="59:56">return <expr pos:start="59:35" pos:end="59:55"><name pos:start="59:35" pos:end="59:51">AVPROBE_SCORE_MAX</name><operator pos:start="59:52" pos:end="59:52">/</operator><literal type="number" pos:start="59:53" pos:end="59:54">2</literal><operator pos:start="59:54" pos:end="59:54">+</operator><literal type="number" pos:start="59:55" pos:end="59:55">1</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="61:5" pos:end="61:54">else if<condition pos:start="61:12" pos:end="61:26">(<expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:22">max_frames</name><operator pos:start="61:23" pos:end="61:24">&gt;=</operator><literal type="number" pos:start="61:25" pos:end="61:25">3</literal></expr>)</condition><block type="pseudo" pos:start="61:28" pos:end="61:54"><block_content pos:start="61:28" pos:end="61:54"> <return pos:start="61:28" pos:end="61:54">return <expr pos:start="61:35" pos:end="61:53"><name pos:start="61:35" pos:end="61:51">AVPROBE_SCORE_MAX</name><operator pos:start="61:52" pos:end="61:52">/</operator><literal type="number" pos:start="61:53" pos:end="61:53">4</literal></expr>;</return></block_content></block></if>

    <if type="elseif" pos:start="63:5" pos:end="63:36">else if<condition pos:start="63:12" pos:end="63:26">(<expr pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:22">max_frames</name><operator pos:start="63:23" pos:end="63:24">&gt;=</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>)</condition><block type="pseudo" pos:start="63:28" pos:end="63:36"><block_content pos:start="63:28" pos:end="63:36"> <return pos:start="63:28" pos:end="63:36">return <expr pos:start="63:35" pos:end="63:35"><literal type="number" pos:start="63:35" pos:end="63:35">1</literal></expr>;</return></block_content></block></if>

    <else pos:start="65:5" pos:end="65:36">else<block type="pseudo" pos:start="65:28" pos:end="65:36"><block_content pos:start="65:28" pos:end="65:36">                   <return pos:start="65:28" pos:end="65:36">return <expr pos:start="65:35" pos:end="65:35"><literal type="number" pos:start="65:35" pos:end="65:35">0</literal></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
