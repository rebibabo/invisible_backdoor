<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5545.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">vncws_handshake_read</name><parameter_list pos:start="1:26" pos:end="1:39">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:32"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:26"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:26">handshake_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">long</name></type> <name pos:start="9:10" pos:end="9:12">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:40"><expr pos:start="11:5" pos:end="11:39"><call pos:start="11:5" pos:end="11:39"><name pos:start="11:5" pos:end="11:18">buffer_reserve</name><argument_list pos:start="11:19" pos:end="11:39">(<argument pos:start="11:20" pos:end="11:32"><expr pos:start="11:20" pos:end="11:32"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:22">vs</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:32">ws_input</name></name></expr></argument>, <argument pos:start="11:35" pos:end="11:38"><expr pos:start="11:35" pos:end="11:38"><literal type="number" pos:start="11:35" pos:end="11:38">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:67"><expr pos:start="13:5" pos:end="13:66"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:66"><name pos:start="13:11" pos:end="13:29">vnc_client_read_buf</name><argument_list pos:start="13:30" pos:end="13:66">(<argument pos:start="13:31" pos:end="13:32"><expr pos:start="13:31" pos:end="13:32"><name pos:start="13:31" pos:end="13:32">vs</name></expr></argument>, <argument pos:start="13:35" pos:end="13:59"><expr pos:start="13:35" pos:end="13:59"><call pos:start="13:35" pos:end="13:59"><name pos:start="13:35" pos:end="13:44">buffer_end</name><argument_list pos:start="13:45" pos:end="13:59">(<argument pos:start="13:46" pos:end="13:58"><expr pos:start="13:46" pos:end="13:58"><operator pos:start="13:46" pos:end="13:46">&amp;</operator><name pos:start="13:47" pos:end="13:58"><name pos:start="13:47" pos:end="13:48">vs</name><operator pos:start="13:49" pos:end="13:50">-&gt;</operator><name pos:start="13:51" pos:end="13:58">ws_input</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:62" pos:end="13:65"><expr pos:start="13:62" pos:end="13:65"><literal type="number" pos:start="13:62" pos:end="13:65">4096</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:13">(<expr pos:start="17:9" pos:end="17:12"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:12">ret</name></expr>)</condition> <block pos:start="17:15" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:15">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:28">(<expr pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:14">vs</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">csock</name></name> <operator pos:start="19:23" pos:end="19:24">==</operator> <operator pos:start="19:26" pos:end="19:26">-</operator><literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>)</condition> <block pos:start="19:30" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:38">

            <expr_stmt pos:start="21:13" pos:end="21:38"><expr pos:start="21:13" pos:end="21:37"><call pos:start="21:13" pos:end="21:37"><name pos:start="21:13" pos:end="21:33">vnc_disconnect_finish</name><argument_list pos:start="21:34" pos:end="21:37">(<argument pos:start="21:35" pos:end="21:36"><expr pos:start="21:35" pos:end="21:36"><name pos:start="21:35" pos:end="21:36">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">vs</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">ws_input</name><operator pos:start="29:17" pos:end="29:17">.</operator><name pos:start="29:18" pos:end="29:23">offset</name></name> <operator pos:start="29:25" pos:end="29:26">+=</operator> <name pos:start="29:28" pos:end="29:30">ret</name></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:51"><expr pos:start="33:5" pos:end="35:50"><name pos:start="33:5" pos:end="33:17">handshake_end</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:28">uint8_t</name> <operator pos:start="33:30" pos:end="33:30">*</operator><operator pos:start="33:31" pos:end="33:31">)</operator><call pos:start="33:32" pos:end="35:50"><name pos:start="33:32" pos:end="33:43">g_strstr_len</name><argument_list pos:start="33:44" pos:end="35:50">(<argument pos:start="33:45" pos:end="33:71"><expr pos:start="33:45" pos:end="33:71"><operator pos:start="33:45" pos:end="33:45">(</operator><name pos:start="33:46" pos:end="33:49">char</name> <operator pos:start="33:51" pos:end="33:51">*</operator><operator pos:start="33:52" pos:end="33:52">)</operator><name pos:start="33:53" pos:end="33:71"><name pos:start="33:53" pos:end="33:54">vs</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:64">ws_input</name><operator pos:start="33:65" pos:end="33:65">.</operator><name pos:start="33:66" pos:end="33:71">buffer</name></name></expr></argument>,

            <argument pos:start="35:13" pos:end="35:31"><expr pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:31"><name pos:start="35:13" pos:end="35:14">vs</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:24">ws_input</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:31">offset</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:49"><expr pos:start="35:34" pos:end="35:49"><name pos:start="35:34" pos:end="35:49">WS_HANDSHAKE_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if <condition pos:start="37:8" pos:end="37:22">(<expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:21">handshake_end</name></expr>)</condition> <block pos:start="37:24" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:42">

        <expr_stmt pos:start="39:9" pos:end="39:73"><expr pos:start="39:9" pos:end="39:72"><call pos:start="39:9" pos:end="39:72"><name pos:start="39:9" pos:end="39:28">qemu_set_fd_handler2</name><argument_list pos:start="39:29" pos:end="39:72">(<argument pos:start="39:30" pos:end="39:38"><expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:31">vs</name><operator pos:start="39:32" pos:end="39:33">-&gt;</operator><name pos:start="39:34" pos:end="39:38">csock</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:44"><expr pos:start="39:41" pos:end="39:44"><name pos:start="39:41" pos:end="39:44">NULL</name></expr></argument>, <argument pos:start="39:47" pos:end="39:61"><expr pos:start="39:47" pos:end="39:61"><name pos:start="39:47" pos:end="39:61">vnc_client_read</name></expr></argument>, <argument pos:start="39:64" pos:end="39:67"><expr pos:start="39:64" pos:end="39:67"><name pos:start="39:64" pos:end="39:67">NULL</name></expr></argument>, <argument pos:start="39:70" pos:end="39:71"><expr pos:start="39:70" pos:end="39:71"><name pos:start="39:70" pos:end="39:71">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:78"><expr pos:start="41:9" pos:end="41:77"><call pos:start="41:9" pos:end="41:77"><name pos:start="41:9" pos:end="41:31">vncws_process_handshake</name><argument_list pos:start="41:32" pos:end="41:77">(<argument pos:start="41:33" pos:end="41:34"><expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">vs</name></expr></argument>, <argument pos:start="41:37" pos:end="41:55"><expr pos:start="41:37" pos:end="41:55"><name pos:start="41:37" pos:end="41:55"><name pos:start="41:37" pos:end="41:38">vs</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:48">ws_input</name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:55">buffer</name></name></expr></argument>, <argument pos:start="41:58" pos:end="41:76"><expr pos:start="41:58" pos:end="41:76"><name pos:start="41:58" pos:end="41:76"><name pos:start="41:58" pos:end="41:59">vs</name><operator pos:start="41:60" pos:end="41:61">-&gt;</operator><name pos:start="41:62" pos:end="41:69">ws_input</name><operator pos:start="41:70" pos:end="41:70">.</operator><name pos:start="41:71" pos:end="41:76">offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="45:42"><expr pos:start="43:9" pos:end="45:41"><call pos:start="43:9" pos:end="45:41"><name pos:start="43:9" pos:end="43:22">buffer_advance</name><argument_list pos:start="43:23" pos:end="45:41">(<argument pos:start="43:24" pos:end="43:36"><expr pos:start="43:24" pos:end="43:36"><operator pos:start="43:24" pos:end="43:24">&amp;</operator><name pos:start="43:25" pos:end="43:36"><name pos:start="43:25" pos:end="43:26">vs</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:36">ws_input</name></name></expr></argument>, <argument pos:start="43:39" pos:end="45:40"><expr pos:start="43:39" pos:end="45:40"><name pos:start="43:39" pos:end="43:51">handshake_end</name> <operator pos:start="43:53" pos:end="43:53">-</operator> <name pos:start="43:55" pos:end="43:73"><name pos:start="43:55" pos:end="43:56">vs</name><operator pos:start="43:57" pos:end="43:58">-&gt;</operator><name pos:start="43:59" pos:end="43:66">ws_input</name><operator pos:start="43:67" pos:end="43:67">.</operator><name pos:start="43:68" pos:end="43:73">buffer</name></name> <operator pos:start="43:75" pos:end="43:75">+</operator>

                <call pos:start="45:17" pos:end="45:40"><name pos:start="45:17" pos:end="45:22">strlen</name><argument_list pos:start="45:23" pos:end="45:40">(<argument pos:start="45:24" pos:end="45:39"><expr pos:start="45:24" pos:end="45:39"><name pos:start="45:24" pos:end="45:39">WS_HANDSHAKE_END</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
