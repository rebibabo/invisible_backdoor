<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17527.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">helper_stsw</name><parameter_list pos:start="1:17" pos:end="3:30">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><name pos:start="1:18" pos:end="1:28">CPUPPCState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:47">target_ulong</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:65">nb</name></decl></parameter>,

                 <parameter pos:start="3:18" pos:end="3:29"><decl pos:start="3:18" pos:end="3:29"><type pos:start="3:18" pos:end="3:29"><name pos:start="3:18" pos:end="3:25">uint32_t</name></type> <name pos:start="3:27" pos:end="3:29">reg</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:5">

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">sh</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="19:5">for <control pos:start="11:9" pos:end="11:27">(<init pos:start="11:10" pos:end="11:10">;</init> <condition pos:start="11:12" pos:end="11:18"><expr pos:start="11:12" pos:end="11:17"><name pos:start="11:12" pos:end="11:13">nb</name> <operator pos:start="11:15" pos:end="11:15">&gt;</operator> <literal type="number" pos:start="11:17" pos:end="11:17">3</literal></expr>;</condition> <incr pos:start="11:20" pos:end="11:26"><expr pos:start="11:20" pos:end="11:26"><name pos:start="11:20" pos:end="11:21">nb</name> <operator pos:start="11:23" pos:end="11:24">-=</operator> <literal type="number" pos:start="11:26" pos:end="11:26">4</literal></expr></incr>)</control> <block pos:start="11:29" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:38">

        <expr_stmt pos:start="13:9" pos:end="13:47"><expr pos:start="13:9" pos:end="13:46"><call pos:start="13:9" pos:end="13:46"><name pos:start="13:9" pos:end="13:20">cpu_stl_data</name><argument_list pos:start="13:21" pos:end="13:46">(<argument pos:start="13:22" pos:end="13:24"><expr pos:start="13:22" pos:end="13:24"><name pos:start="13:22" pos:end="13:24">env</name></expr></argument>, <argument pos:start="13:27" pos:end="13:30"><expr pos:start="13:27" pos:end="13:30"><name pos:start="13:27" pos:end="13:30">addr</name></expr></argument>, <argument pos:start="13:33" pos:end="13:45"><expr pos:start="13:33" pos:end="13:45"><name pos:start="13:33" pos:end="13:45"><name pos:start="13:33" pos:end="13:35">env</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:40">gpr</name><index pos:start="13:41" pos:end="13:45">[<expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">reg</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:11">reg</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">(</operator><name pos:start="15:16" pos:end="15:18">reg</name> <operator pos:start="15:20" pos:end="15:20">+</operator> <literal type="number" pos:start="15:22" pos:end="15:22">1</literal><operator pos:start="15:23" pos:end="15:23">)</operator> <operator pos:start="15:25" pos:end="15:25">%</operator> <literal type="number" pos:start="15:27" pos:end="15:28">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:38"><expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:12">addr</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:37"><name pos:start="17:16" pos:end="17:23">addr_add</name><argument_list pos:start="17:24" pos:end="17:37">(<argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">env</name></expr></argument>, <argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">addr</name></expr></argument>, <argument pos:start="17:36" pos:end="17:36"><expr pos:start="17:36" pos:end="17:36"><literal type="number" pos:start="17:36" pos:end="17:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><call pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:16">unlikely</name><argument_list pos:start="21:17" pos:end="21:24">(<argument pos:start="21:18" pos:end="21:23"><expr pos:start="21:18" pos:end="21:23"><name pos:start="21:18" pos:end="21:19">nb</name> <operator pos:start="21:21" pos:end="21:21">&gt;</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:27" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:9">

        <for pos:start="23:9" pos:end="29:9">for <control pos:start="23:13" pos:end="23:44">(<init pos:start="23:14" pos:end="23:21"><expr pos:start="23:14" pos:end="23:20"><name pos:start="23:14" pos:end="23:15">sh</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <literal type="number" pos:start="23:19" pos:end="23:20">24</literal></expr>;</init> <condition pos:start="23:23" pos:end="23:29"><expr pos:start="23:23" pos:end="23:28"><name pos:start="23:23" pos:end="23:24">nb</name> <operator pos:start="23:26" pos:end="23:26">&gt;</operator> <literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>;</condition> <incr pos:start="23:31" pos:end="23:43"><expr pos:start="23:31" pos:end="23:34"><name pos:start="23:31" pos:end="23:32">nb</name><operator pos:start="23:33" pos:end="23:34">--</operator></expr><operator pos:start="23:35" pos:end="23:35">,</operator> <expr pos:start="23:37" pos:end="23:43"><name pos:start="23:37" pos:end="23:38">sh</name> <operator pos:start="23:40" pos:end="23:41">-=</operator> <literal type="number" pos:start="23:43" pos:end="23:43">8</literal></expr></incr>)</control> <block pos:start="23:46" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:42">

            <expr_stmt pos:start="25:13" pos:end="25:66"><expr pos:start="25:13" pos:end="25:65"><call pos:start="25:13" pos:end="25:65"><name pos:start="25:13" pos:end="25:24">cpu_stb_data</name><argument_list pos:start="25:25" pos:end="25:65">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">env</name></expr></argument>, <argument pos:start="25:31" pos:end="25:34"><expr pos:start="25:31" pos:end="25:34"><name pos:start="25:31" pos:end="25:34">addr</name></expr></argument>, <argument pos:start="25:37" pos:end="25:64"><expr pos:start="25:37" pos:end="25:64"><operator pos:start="25:37" pos:end="25:37">(</operator><name pos:start="25:38" pos:end="25:50"><name pos:start="25:38" pos:end="25:40">env</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:45">gpr</name><index pos:start="25:46" pos:end="25:50">[<expr pos:start="25:47" pos:end="25:49"><name pos:start="25:47" pos:end="25:49">reg</name></expr>]</index></name> <operator pos:start="25:52" pos:end="25:53">&gt;&gt;</operator> <name pos:start="25:55" pos:end="25:56">sh</name><operator pos:start="25:57" pos:end="25:57">)</operator> <operator pos:start="25:59" pos:end="25:59">&amp;</operator> <literal type="number" pos:start="25:61" pos:end="25:64">0xFF</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:42"><expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:16">addr</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:41"><name pos:start="27:20" pos:end="27:27">addr_add</name><argument_list pos:start="27:28" pos:end="27:41">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">env</name></expr></argument>, <argument pos:start="27:34" pos:end="27:37"><expr pos:start="27:34" pos:end="27:37"><name pos:start="27:34" pos:end="27:37">addr</name></expr></argument>, <argument pos:start="27:40" pos:end="27:40"><expr pos:start="27:40" pos:end="27:40"><literal type="number" pos:start="27:40" pos:end="27:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
