<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21017.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">mov_write_video_tag</name><parameter_list pos:start="1:31" pos:end="1:66">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:44">ByteIOContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">pb</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:65"><decl pos:start="1:51" pos:end="1:65"><type pos:start="1:51" pos:end="1:65"><name pos:start="1:51" pos:end="1:58">MOVTrack</name><modifier pos:start="1:59" pos:end="1:59">*</modifier></type> <name pos:start="1:61" pos:end="1:65">track</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:32">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">pos</name> <init pos:start="5:13" pos:end="5:27">= <expr pos:start="5:15" pos:end="5:27"><call pos:start="5:15" pos:end="5:27"><name pos:start="5:15" pos:end="5:23">url_ftell</name><argument_list pos:start="5:24" pos:end="5:27">(<argument pos:start="5:25" pos:end="5:26"><expr pos:start="5:25" pos:end="5:26"><name pos:start="5:25" pos:end="5:26">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:28"><name pos:start="7:10" pos:end="7:24">compressor_name</name><index pos:start="7:25" pos:end="7:28">[<expr pos:start="7:26" pos:end="7:27"><literal type="number" pos:start="7:26" pos:end="7:27">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">tag</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><call pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">put_be32</name><argument_list pos:start="13:13" pos:end="13:19">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>, <argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:22" pos:end="13:31">/* size */</comment>



    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:7">tag</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:31"><name pos:start="17:11" pos:end="17:15">track</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:20">enc</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:31">codec_tag</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:67"><if pos:start="19:5" pos:end="21:67">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">tag</name></expr>)</condition><block type="pseudo" pos:start="21:5" pos:end="21:67"><block_content pos:start="21:5" pos:end="21:67">

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:7">tag</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:66"><name pos:start="21:11" pos:end="21:23">codec_get_tag</name><argument_list pos:start="21:24" pos:end="21:66">(<argument pos:start="21:25" pos:end="21:43"><expr pos:start="21:25" pos:end="21:43"><name pos:start="21:25" pos:end="21:43">codec_movvideo_tags</name></expr></argument>, <argument pos:start="21:46" pos:end="21:65"><expr pos:start="21:46" pos:end="21:65"><name pos:start="21:46" pos:end="21:65"><name pos:start="21:46" pos:end="21:50">track</name><operator pos:start="21:51" pos:end="21:52">-&gt;</operator><name pos:start="21:53" pos:end="21:55">enc</name><operator pos:start="21:56" pos:end="21:57">-&gt;</operator><name pos:start="21:58" pos:end="21:65">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="23:5" pos:end="23:51">// if no mac fcc found, try with Microsoft tags</comment>

    <if_stmt pos:start="25:5" pos:end="27:66"><if pos:start="25:5" pos:end="27:66">if <condition pos:start="25:8" pos:end="25:13">(<expr pos:start="25:9" pos:end="25:12"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:12">tag</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:66"><block_content pos:start="27:9" pos:end="27:66">

	<expr_stmt pos:start="27:9" pos:end="27:66"><expr pos:start="27:9" pos:end="27:65"><name pos:start="27:9" pos:end="27:11">tag</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:65"><name pos:start="27:15" pos:end="27:27">codec_get_tag</name><argument_list pos:start="27:28" pos:end="27:65">(<argument pos:start="27:29" pos:end="27:42"><expr pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:42">codec_bmp_tags</name></expr></argument>, <argument pos:start="27:45" pos:end="27:64"><expr pos:start="27:45" pos:end="27:64"><name pos:start="27:45" pos:end="27:64"><name pos:start="27:45" pos:end="27:49">track</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:54">enc</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:64">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:12">put_le32</name><argument_list pos:start="29:13" pos:end="29:21">(<argument pos:start="29:14" pos:end="29:15"><expr pos:start="29:14" pos:end="29:15"><name pos:start="29:14" pos:end="29:15">pb</name></expr></argument>, <argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="29:24" pos:end="29:46">// store it byteswapped</comment>



    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><call pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:12">put_be32</name><argument_list pos:start="33:13" pos:end="33:19">(<argument pos:start="33:14" pos:end="33:15"><expr pos:start="33:14" pos:end="33:15"><name pos:start="33:14" pos:end="33:15">pb</name></expr></argument>, <argument pos:start="33:18" pos:end="33:18"><expr pos:start="33:18" pos:end="33:18"><literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="33:22" pos:end="33:35">/* Reserved */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><call pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:12">put_be16</name><argument_list pos:start="35:13" pos:end="35:19">(<argument pos:start="35:14" pos:end="35:15"><expr pos:start="35:14" pos:end="35:15"><name pos:start="35:14" pos:end="35:15">pb</name></expr></argument>, <argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:22" pos:end="35:35">/* Reserved */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:20"><expr pos:start="37:5" pos:end="37:19"><call pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:12">put_be16</name><argument_list pos:start="37:13" pos:end="37:19">(<argument pos:start="37:14" pos:end="37:15"><expr pos:start="37:14" pos:end="37:15"><name pos:start="37:14" pos:end="37:15">pb</name></expr></argument>, <argument pos:start="37:18" pos:end="37:18"><expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:22" pos:end="37:47">/* Data-reference index */</comment>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><call pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:12">put_be16</name><argument_list pos:start="41:13" pos:end="41:19">(<argument pos:start="41:14" pos:end="41:15"><expr pos:start="41:14" pos:end="41:15"><name pos:start="41:14" pos:end="41:15">pb</name></expr></argument>, <argument pos:start="41:18" pos:end="41:18"><expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:22" pos:end="41:47">/* Codec stream version */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><call pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:12">put_be16</name><argument_list pos:start="43:13" pos:end="43:19">(<argument pos:start="43:14" pos:end="43:15"><expr pos:start="43:14" pos:end="43:15"><name pos:start="43:14" pos:end="43:15">pb</name></expr></argument>, <argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="43:22" pos:end="43:53">/* Codec stream revision (=0) */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><call pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:11">put_tag</name><argument_list pos:start="45:12" pos:end="45:23">(<argument pos:start="45:13" pos:end="45:14"><expr pos:start="45:13" pos:end="45:14"><name pos:start="45:13" pos:end="45:14">pb</name></expr></argument>, <argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><literal type="string" pos:start="45:17" pos:end="45:22">"FFMP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:26" pos:end="45:37">/* Vendor */</comment>

    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:49">(<expr pos:start="47:8" pos:end="47:48"><name pos:start="47:8" pos:end="47:27"><name pos:start="47:8" pos:end="47:12">track</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:17">enc</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:27">codec_id</name></name> <operator pos:start="47:29" pos:end="47:30">==</operator> <name pos:start="47:32" pos:end="47:48">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="47:51" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:28">

        <expr_stmt pos:start="49:9" pos:end="49:24"><expr pos:start="49:9" pos:end="49:23"><call pos:start="49:9" pos:end="49:23"><name pos:start="49:9" pos:end="49:16">put_be32</name><argument_list pos:start="49:17" pos:end="49:23">(<argument pos:start="49:18" pos:end="49:19"><expr pos:start="49:18" pos:end="49:19"><name pos:start="49:18" pos:end="49:19">pb</name></expr></argument>, <argument pos:start="49:22" pos:end="49:22"><expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:26" pos:end="49:47">/* Temporal Quality */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:28"><expr pos:start="51:9" pos:end="51:27"><call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:16">put_be32</name><argument_list pos:start="51:17" pos:end="51:27">(<argument pos:start="51:18" pos:end="51:19"><expr pos:start="51:18" pos:end="51:19"><name pos:start="51:18" pos:end="51:19">pb</name></expr></argument>, <argument pos:start="51:22" pos:end="51:26"><expr pos:start="51:22" pos:end="51:26"><literal type="number" pos:start="51:22" pos:end="51:26">0x400</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:30" pos:end="51:60">/* Spatial Quality = lossless*/</comment>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="59:5">else <block pos:start="53:12" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:28">

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><call pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:16">put_be32</name><argument_list pos:start="55:17" pos:end="55:27">(<argument pos:start="55:18" pos:end="55:19"><expr pos:start="55:18" pos:end="55:19"><name pos:start="55:18" pos:end="55:19">pb</name></expr></argument>, <argument pos:start="55:22" pos:end="55:26"><expr pos:start="55:22" pos:end="55:26"><literal type="number" pos:start="55:22" pos:end="55:26">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="55:30" pos:end="55:60">/* Temporal Quality = normal */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:28"><expr pos:start="57:9" pos:end="57:27"><call pos:start="57:9" pos:end="57:27"><name pos:start="57:9" pos:end="57:16">put_be32</name><argument_list pos:start="57:17" pos:end="57:27">(<argument pos:start="57:18" pos:end="57:19"><expr pos:start="57:18" pos:end="57:19"><name pos:start="57:18" pos:end="57:19">pb</name></expr></argument>, <argument pos:start="57:22" pos:end="57:26"><expr pos:start="57:22" pos:end="57:26"><literal type="number" pos:start="57:22" pos:end="57:26">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:30" pos:end="57:59">/* Spatial Quality = normal */</comment>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:36"><expr pos:start="61:5" pos:end="61:35"><call pos:start="61:5" pos:end="61:35"><name pos:start="61:5" pos:end="61:12">put_be16</name><argument_list pos:start="61:13" pos:end="61:35">(<argument pos:start="61:14" pos:end="61:15"><expr pos:start="61:14" pos:end="61:15"><name pos:start="61:14" pos:end="61:15">pb</name></expr></argument>, <argument pos:start="61:18" pos:end="61:34"><expr pos:start="61:18" pos:end="61:34"><name pos:start="61:18" pos:end="61:34"><name pos:start="61:18" pos:end="61:22">track</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:27">enc</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:34">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:38" pos:end="61:54">/* Video width */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><call pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:12">put_be16</name><argument_list pos:start="63:13" pos:end="63:36">(<argument pos:start="63:14" pos:end="63:15"><expr pos:start="63:14" pos:end="63:15"><name pos:start="63:14" pos:end="63:15">pb</name></expr></argument>, <argument pos:start="63:18" pos:end="63:35"><expr pos:start="63:18" pos:end="63:35"><name pos:start="63:18" pos:end="63:35"><name pos:start="63:18" pos:end="63:22">track</name><operator pos:start="63:23" pos:end="63:24">-&gt;</operator><name pos:start="63:25" pos:end="63:27">enc</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:35">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="63:39" pos:end="63:56">/* Video height */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><call pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:12">put_be32</name><argument_list pos:start="65:13" pos:end="65:28">(<argument pos:start="65:14" pos:end="65:15"><expr pos:start="65:14" pos:end="65:15"><name pos:start="65:14" pos:end="65:15">pb</name></expr></argument>, <argument pos:start="65:18" pos:end="65:27"><expr pos:start="65:18" pos:end="65:27"><literal type="number" pos:start="65:18" pos:end="65:27">0x00480000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:31" pos:end="65:63">/* Horizontal resolution 72dpi */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><call pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:12">put_be32</name><argument_list pos:start="67:13" pos:end="67:28">(<argument pos:start="67:14" pos:end="67:15"><expr pos:start="67:14" pos:end="67:15"><name pos:start="67:14" pos:end="67:15">pb</name></expr></argument>, <argument pos:start="67:18" pos:end="67:27"><expr pos:start="67:18" pos:end="67:27"><literal type="number" pos:start="67:18" pos:end="67:27">0x00480000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:31" pos:end="67:61">/* Vertical resolution 72dpi */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><call pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:12">put_be32</name><argument_list pos:start="69:13" pos:end="69:19">(<argument pos:start="69:14" pos:end="69:15"><expr pos:start="69:14" pos:end="69:15"><name pos:start="69:14" pos:end="69:15">pb</name></expr></argument>, <argument pos:start="69:18" pos:end="69:18"><expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:22" pos:end="69:42">/* Data size (= 0) */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><call pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:12">put_be16</name><argument_list pos:start="71:13" pos:end="71:19">(<argument pos:start="71:14" pos:end="71:15"><expr pos:start="71:14" pos:end="71:15"><name pos:start="71:14" pos:end="71:15">pb</name></expr></argument>, <argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><literal type="number" pos:start="71:18" pos:end="71:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:22" pos:end="71:44">/* Frame count (= 1) */</comment>

    

    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><call pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:10">memset</name><argument_list pos:start="75:11" pos:end="75:32">(<argument pos:start="75:12" pos:end="75:26"><expr pos:start="75:12" pos:end="75:26"><name pos:start="75:12" pos:end="75:26">compressor_name</name></expr></argument>,<argument pos:start="75:28" pos:end="75:28"><expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">0</literal></expr></argument>,<argument pos:start="75:30" pos:end="75:31"><expr pos:start="75:30" pos:end="75:31"><literal type="number" pos:start="75:30" pos:end="75:31">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:60"><if pos:start="77:5" pos:end="79:60">if <condition pos:start="77:8" pos:end="77:32">(<expr pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:13">track</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:18">enc</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:25">codec</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:31">name</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:60"><block_content pos:start="79:9" pos:end="79:60">

        <expr_stmt pos:start="79:9" pos:end="79:60"><expr pos:start="79:9" pos:end="79:59"><call pos:start="79:9" pos:end="79:59"><name pos:start="79:9" pos:end="79:15">strncpy</name><argument_list pos:start="79:16" pos:end="79:59">(<argument pos:start="79:17" pos:end="79:31"><expr pos:start="79:17" pos:end="79:31"><name pos:start="79:17" pos:end="79:31">compressor_name</name></expr></argument>,<argument pos:start="79:33" pos:end="79:55"><expr pos:start="79:33" pos:end="79:55"><name pos:start="79:33" pos:end="79:55"><name pos:start="79:33" pos:end="79:37">track</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:42">enc</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:49">codec</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:55">name</name></name></expr></argument>,<argument pos:start="79:57" pos:end="79:58"><expr pos:start="79:57" pos:end="79:58"><literal type="number" pos:start="79:57" pos:end="79:58">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><call pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:12">put_byte</name><argument_list pos:start="81:13" pos:end="81:52">(<argument pos:start="81:14" pos:end="81:15"><expr pos:start="81:14" pos:end="81:15"><name pos:start="81:14" pos:end="81:15">pb</name></expr></argument>, <argument pos:start="81:18" pos:end="81:50"><expr pos:start="81:18" pos:end="81:50"><call pos:start="81:18" pos:end="81:50"><name pos:start="81:18" pos:end="81:22">FFMAX</name><argument_list pos:start="81:23" pos:end="81:50">(<argument pos:start="81:24" pos:end="81:46"><expr pos:start="81:24" pos:end="81:46"><call pos:start="81:24" pos:end="81:46"><name pos:start="81:24" pos:end="81:29">strlen</name><argument_list pos:start="81:30" pos:end="81:46">(<argument pos:start="81:31" pos:end="81:45"><expr pos:start="81:31" pos:end="81:45"><name pos:start="81:31" pos:end="81:45">compressor_name</name></expr></argument>)</argument_list></call></expr></argument>,<argument pos:start="81:48" pos:end="81:49"><expr pos:start="81:48" pos:end="81:49"><literal type="number" pos:start="81:48" pos:end="81:49">32</literal></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><call pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:14">put_buffer</name><argument_list pos:start="83:15" pos:end="83:39">(<argument pos:start="83:16" pos:end="83:17"><expr pos:start="83:16" pos:end="83:17"><name pos:start="83:16" pos:end="83:17">pb</name></expr></argument>, <argument pos:start="83:20" pos:end="83:34"><expr pos:start="83:20" pos:end="83:34"><name pos:start="83:20" pos:end="83:34">compressor_name</name></expr></argument>, <argument pos:start="83:37" pos:end="83:38"><expr pos:start="83:37" pos:end="83:38"><literal type="number" pos:start="83:37" pos:end="83:38">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <expr_stmt pos:start="87:5" pos:end="87:23"><expr pos:start="87:5" pos:end="87:22"><call pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:12">put_be16</name><argument_list pos:start="87:13" pos:end="87:22">(<argument pos:start="87:14" pos:end="87:15"><expr pos:start="87:14" pos:end="87:15"><name pos:start="87:14" pos:end="87:15">pb</name></expr></argument>, <argument pos:start="87:18" pos:end="87:21"><expr pos:start="87:18" pos:end="87:21"><literal type="number" pos:start="87:18" pos:end="87:21">0x18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:25" pos:end="87:38">/* Reserved */</comment>

    <expr_stmt pos:start="89:5" pos:end="89:25"><expr pos:start="89:5" pos:end="89:24"><call pos:start="89:5" pos:end="89:24"><name pos:start="89:5" pos:end="89:12">put_be16</name><argument_list pos:start="89:13" pos:end="89:24">(<argument pos:start="89:14" pos:end="89:15"><expr pos:start="89:14" pos:end="89:15"><name pos:start="89:14" pos:end="89:15">pb</name></expr></argument>, <argument pos:start="89:18" pos:end="89:23"><expr pos:start="89:18" pos:end="89:23"><literal type="number" pos:start="89:18" pos:end="89:23">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:27" pos:end="89:40">/* Reserved */</comment>

    <if_stmt pos:start="91:5" pos:end="101:31"><if pos:start="91:5" pos:end="93:38">if<condition pos:start="91:7" pos:end="91:46">(<expr pos:start="91:8" pos:end="91:45"><name pos:start="91:8" pos:end="91:27"><name pos:start="91:8" pos:end="91:12">track</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:17">enc</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:27">codec_id</name></name> <operator pos:start="91:29" pos:end="91:30">==</operator> <name pos:start="91:32" pos:end="91:45">CODEC_ID_MPEG4</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:38"><block_content pos:start="93:9" pos:end="93:38">

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><call pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:26">mov_write_esds_tag</name><argument_list pos:start="93:27" pos:end="93:37">(<argument pos:start="93:28" pos:end="93:29"><expr pos:start="93:28" pos:end="93:29"><name pos:start="93:28" pos:end="93:29">pb</name></expr></argument>, <argument pos:start="93:32" pos:end="93:36"><expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:36">track</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="95:5" pos:end="97:31">else if<condition pos:start="95:12" pos:end="95:50">(<expr pos:start="95:13" pos:end="95:49"><name pos:start="95:13" pos:end="95:32"><name pos:start="95:13" pos:end="95:17">track</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:22">enc</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:32">codec_id</name></name> <operator pos:start="95:34" pos:end="95:35">==</operator> <name pos:start="95:37" pos:end="95:49">CODEC_ID_H263</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:31"><block_content pos:start="97:9" pos:end="97:31">

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><call pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:26">mov_write_d263_tag</name><argument_list pos:start="97:27" pos:end="97:30">(<argument pos:start="97:28" pos:end="97:29"><expr pos:start="97:28" pos:end="97:29"><name pos:start="97:28" pos:end="97:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="99:5" pos:end="101:31">else if<condition pos:start="99:12" pos:end="99:50">(<expr pos:start="99:13" pos:end="99:49"><name pos:start="99:13" pos:end="99:32"><name pos:start="99:13" pos:end="99:17">track</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:22">enc</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:32">codec_id</name></name> <operator pos:start="99:34" pos:end="99:35">==</operator> <name pos:start="99:37" pos:end="99:49">CODEC_ID_SVQ3</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:31"><block_content pos:start="101:9" pos:end="101:31">

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><call pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:26">mov_write_svq3_tag</name><argument_list pos:start="101:27" pos:end="101:30">(<argument pos:start="101:28" pos:end="101:29"><expr pos:start="101:28" pos:end="101:29"><name pos:start="101:28" pos:end="101:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>    



    <return pos:start="105:5" pos:end="105:32">return <expr pos:start="105:12" pos:end="105:31"><call pos:start="105:12" pos:end="105:31"><name pos:start="105:12" pos:end="105:21">updateSize</name> <argument_list pos:start="105:23" pos:end="105:31">(<argument pos:start="105:24" pos:end="105:25"><expr pos:start="105:24" pos:end="105:25"><name pos:start="105:24" pos:end="105:25">pb</name></expr></argument>, <argument pos:start="105:28" pos:end="105:30"><expr pos:start="105:28" pos:end="105:30"><name pos:start="105:28" pos:end="105:30">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
