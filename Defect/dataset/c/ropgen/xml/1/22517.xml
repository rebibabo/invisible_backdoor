<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22517.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">av_opencl_init</name><parameter_list pos:start="1:19" pos:end="1:78">(<parameter pos:start="1:20" pos:end="1:40"><decl pos:start="1:20" pos:end="1:40"><type pos:start="1:20" pos:end="1:40"><name pos:start="1:20" pos:end="1:31">AVDictionary</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">options</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:77"><decl pos:start="1:43" pos:end="1:77"><type pos:start="1:43" pos:end="1:77"><name pos:start="1:43" pos:end="1:61">AVOpenCLExternalEnv</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:77">ext_opencl_env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">AVDictionaryEntry</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:38">opt_build_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:41">opt_platform_entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVDictionaryEntry</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:39">opt_device_entry</name></decl>;</decl_stmt>

    <macro pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:15">LOCK_OPENCL</name></macro>

    <if_stmt pos:start="15:5" pos:end="45:5"><if pos:start="15:5" pos:end="45:5">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:16">gpu_env</name><operator pos:start="15:17" pos:end="15:17">.</operator><name pos:start="15:18" pos:end="15:27">init_count</name></name></expr>)</condition> <block pos:start="15:30" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:21">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:26">opt_platform_entry</name> <operator pos:start="17:28" pos:end="17:28">=</operator> <call pos:start="17:30" pos:end="17:74"><name pos:start="17:30" pos:end="17:40">av_dict_get</name><argument_list pos:start="17:41" pos:end="17:74">(<argument pos:start="17:42" pos:end="17:48"><expr pos:start="17:42" pos:end="17:48"><name pos:start="17:42" pos:end="17:48">options</name></expr></argument>, <argument pos:start="17:51" pos:end="17:64"><expr pos:start="17:51" pos:end="17:64"><literal type="string" pos:start="17:51" pos:end="17:64">"platform_idx"</literal></expr></argument>, <argument pos:start="17:67" pos:end="17:70"><expr pos:start="17:67" pos:end="17:70"><name pos:start="17:67" pos:end="17:70">NULL</name></expr></argument>, <argument pos:start="17:73" pos:end="17:73"><expr pos:start="17:73" pos:end="17:73"><literal type="number" pos:start="17:73" pos:end="17:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:73"><expr pos:start="19:9" pos:end="19:72"><name pos:start="19:9" pos:end="19:24">opt_device_entry</name>   <operator pos:start="19:28" pos:end="19:28">=</operator> <call pos:start="19:30" pos:end="19:72"><name pos:start="19:30" pos:end="19:40">av_dict_get</name><argument_list pos:start="19:41" pos:end="19:72">(<argument pos:start="19:42" pos:end="19:48"><expr pos:start="19:42" pos:end="19:48"><name pos:start="19:42" pos:end="19:48">options</name></expr></argument>, <argument pos:start="19:51" pos:end="19:62"><expr pos:start="19:51" pos:end="19:62"><literal type="string" pos:start="19:51" pos:end="19:62">"device_idx"</literal></expr></argument>, <argument pos:start="19:65" pos:end="19:68"><expr pos:start="19:65" pos:end="19:68"><name pos:start="19:65" pos:end="19:68">NULL</name></expr></argument>, <argument pos:start="19:71" pos:end="19:71"><expr pos:start="19:71" pos:end="19:71"><literal type="number" pos:start="19:71" pos:end="19:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="21:9" pos:end="21:56">/* initialize devices, context, command_queue */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:52"><expr pos:start="23:9" pos:end="23:51"><name pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:15">gpu_env</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:33">usr_spec_dev_info</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:46">platform_idx</name></name> <operator pos:start="23:48" pos:end="23:48">=</operator> <operator pos:start="23:50" pos:end="23:50">-</operator><literal type="number" pos:start="23:51" pos:end="23:51">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:15">gpu_env</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:33">usr_spec_dev_info</name><operator pos:start="25:34" pos:end="25:34">.</operator><name pos:start="25:35" pos:end="25:41">dev_idx</name></name> <operator pos:start="25:43" pos:end="25:43">=</operator> <operator pos:start="25:45" pos:end="25:45">-</operator><literal type="number" pos:start="25:46" pos:end="25:46">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:31">(<expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:30">opt_platform_entry</name></expr>)</condition> <block pos:start="27:33" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:97">

            <expr_stmt pos:start="29:13" pos:end="29:97"><expr pos:start="29:13" pos:end="29:96"><name pos:start="29:13" pos:end="29:50"><name pos:start="29:13" pos:end="29:19">gpu_env</name><operator pos:start="29:20" pos:end="29:20">.</operator><name pos:start="29:21" pos:end="29:37">usr_spec_dev_info</name><operator pos:start="29:38" pos:end="29:38">.</operator><name pos:start="29:39" pos:end="29:50">platform_idx</name></name> <operator pos:start="29:52" pos:end="29:52">=</operator> <call pos:start="29:54" pos:end="29:96"><name pos:start="29:54" pos:end="29:59">strtol</name><argument_list pos:start="29:60" pos:end="29:96">(<argument pos:start="29:61" pos:end="29:85"><expr pos:start="29:61" pos:end="29:85"><name pos:start="29:61" pos:end="29:85"><name pos:start="29:61" pos:end="29:78">opt_platform_entry</name><operator pos:start="29:79" pos:end="29:80">-&gt;</operator><name pos:start="29:81" pos:end="29:85">value</name></name></expr></argument>, <argument pos:start="29:88" pos:end="29:91"><expr pos:start="29:88" pos:end="29:91"><name pos:start="29:88" pos:end="29:91">NULL</name></expr></argument>, <argument pos:start="29:94" pos:end="29:95"><expr pos:start="29:94" pos:end="29:95"><literal type="number" pos:start="29:94" pos:end="29:95">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:9"><if pos:start="33:9" pos:end="37:9">if <condition pos:start="33:12" pos:end="33:29">(<expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:28">opt_device_entry</name></expr>)</condition> <block pos:start="33:31" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:90">

            <expr_stmt pos:start="35:13" pos:end="35:90"><expr pos:start="35:13" pos:end="35:89"><name pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:19">gpu_env</name><operator pos:start="35:20" pos:end="35:20">.</operator><name pos:start="35:21" pos:end="35:37">usr_spec_dev_info</name><operator pos:start="35:38" pos:end="35:38">.</operator><name pos:start="35:39" pos:end="35:45">dev_idx</name></name> <operator pos:start="35:47" pos:end="35:47">=</operator> <call pos:start="35:49" pos:end="35:89"><name pos:start="35:49" pos:end="35:54">strtol</name><argument_list pos:start="35:55" pos:end="35:89">(<argument pos:start="35:56" pos:end="35:78"><expr pos:start="35:56" pos:end="35:78"><name pos:start="35:56" pos:end="35:78"><name pos:start="35:56" pos:end="35:71">opt_device_entry</name><operator pos:start="35:72" pos:end="35:73">-&gt;</operator><name pos:start="35:74" pos:end="35:78">value</name></name></expr></argument>, <argument pos:start="35:81" pos:end="35:84"><expr pos:start="35:81" pos:end="35:84"><name pos:start="35:81" pos:end="35:84">NULL</name></expr></argument>, <argument pos:start="35:87" pos:end="35:88"><expr pos:start="35:87" pos:end="35:88"><literal type="number" pos:start="35:87" pos:end="35:88">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:56"><expr pos:start="39:9" pos:end="39:55"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:55"><name pos:start="39:15" pos:end="39:29">init_opencl_env</name><argument_list pos:start="39:30" pos:end="39:55">(<argument pos:start="39:31" pos:end="39:38"><expr pos:start="39:31" pos:end="39:38"><operator pos:start="39:31" pos:end="39:31">&amp;</operator><name pos:start="39:32" pos:end="39:38">gpu_env</name></expr></argument>, <argument pos:start="39:41" pos:end="39:54"><expr pos:start="39:41" pos:end="39:54"><name pos:start="39:41" pos:end="39:54">ext_opencl_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="43:21"><if pos:start="41:9" pos:end="43:21">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:21"><block_content pos:start="43:13" pos:end="43:21">

            <goto pos:start="43:13" pos:end="43:21">goto <name pos:start="43:18" pos:end="43:20">end</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:53">/*initialize program, kernel_name, kernel_count*/</comment>

    <expr_stmt pos:start="49:5" pos:end="49:69"><expr pos:start="49:5" pos:end="49:68"><name pos:start="49:5" pos:end="49:19">opt_build_entry</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <call pos:start="49:23" pos:end="49:68"><name pos:start="49:23" pos:end="49:33">av_dict_get</name><argument_list pos:start="49:34" pos:end="49:68">(<argument pos:start="49:35" pos:end="49:41"><expr pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:41">options</name></expr></argument>, <argument pos:start="49:44" pos:end="49:58"><expr pos:start="49:44" pos:end="49:58"><literal type="string" pos:start="49:44" pos:end="49:58">"build_options"</literal></expr></argument>, <argument pos:start="49:61" pos:end="49:64"><expr pos:start="49:61" pos:end="49:64"><name pos:start="49:61" pos:end="49:64">NULL</name></expr></argument>, <argument pos:start="49:67" pos:end="49:67"><expr pos:start="49:67" pos:end="49:67"><literal type="number" pos:start="49:67" pos:end="49:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:50"><if pos:start="51:5" pos:end="53:68">if <condition pos:start="51:8" pos:end="51:24">(<expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:23">opt_build_entry</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:68"><block_content pos:start="53:9" pos:end="53:68">

        <expr_stmt pos:start="53:9" pos:end="53:68"><expr pos:start="53:9" pos:end="53:67"><name pos:start="53:9" pos:end="53:11">ret</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:67"><name pos:start="53:15" pos:end="53:33">compile_kernel_file</name><argument_list pos:start="53:34" pos:end="53:67">(<argument pos:start="53:35" pos:end="53:42"><expr pos:start="53:35" pos:end="53:42"><operator pos:start="53:35" pos:end="53:35">&amp;</operator><name pos:start="53:36" pos:end="53:42">gpu_env</name></expr></argument>, <argument pos:start="53:45" pos:end="53:66"><expr pos:start="53:45" pos:end="53:66"><name pos:start="53:45" pos:end="53:66"><name pos:start="53:45" pos:end="53:59">opt_build_entry</name><operator pos:start="53:60" pos:end="53:61">-&gt;</operator><name pos:start="53:62" pos:end="53:66">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:50">else<block type="pseudo" pos:start="57:9" pos:end="57:50"><block_content pos:start="57:9" pos:end="57:50">

        <expr_stmt pos:start="57:9" pos:end="57:50"><expr pos:start="57:9" pos:end="57:49"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="57:49"><name pos:start="57:15" pos:end="57:33">compile_kernel_file</name><argument_list pos:start="57:34" pos:end="57:49">(<argument pos:start="57:35" pos:end="57:42"><expr pos:start="57:35" pos:end="57:42"><operator pos:start="57:35" pos:end="57:35">&amp;</operator><name pos:start="57:36" pos:end="57:42">gpu_env</name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="59:5" pos:end="61:17"><if pos:start="59:5" pos:end="61:17">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:17"><block_content pos:start="61:9" pos:end="61:17">

        <goto pos:start="61:9" pos:end="61:17">goto <name pos:start="61:14" pos:end="61:16">end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><call pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:14">av_assert1</name><argument_list pos:start="63:15" pos:end="63:45">(<argument pos:start="63:16" pos:end="63:44"><expr pos:start="63:16" pos:end="63:44"><name pos:start="63:16" pos:end="63:40"><name pos:start="63:16" pos:end="63:22">gpu_env</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:40">kernel_code_count</name></name> <operator pos:start="63:42" pos:end="63:42">&gt;</operator> <literal type="number" pos:start="63:44" pos:end="63:44">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:25"><expr pos:start="65:5" pos:end="65:24"><name pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:11">gpu_env</name><operator pos:start="65:12" pos:end="65:12">.</operator><name pos:start="65:13" pos:end="65:22">init_count</name></name><operator pos:start="65:23" pos:end="65:24">++</operator></expr>;</expr_stmt>



<label pos:start="69:1" pos:end="69:4"><name pos:start="69:1" pos:end="69:3">end</name>:</label>

    <macro pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:17">UNLOCK_OPENCL</name></macro>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
