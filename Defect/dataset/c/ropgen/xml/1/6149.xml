<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6149.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:33">hyscale</name>)<parameter_list pos:start="1:35" pos:end="9:62">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:48"><name pos:start="1:36" pos:end="1:45">SwsContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">c</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">uint16_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">dst</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:77">dstWidth</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:97"><decl pos:start="1:80" pos:end="1:97"><type pos:start="1:80" pos:end="1:97"><specifier pos:start="1:80" pos:end="1:84">const</specifier> <name pos:start="1:86" pos:end="1:92">uint8_t</name> <modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:97">src</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:107"><decl pos:start="1:100" pos:end="1:107"><type pos:start="1:100" pos:end="1:107"><name pos:start="1:100" pos:end="1:102">int</name></type> <name pos:start="1:104" pos:end="1:107">srcW</name></decl></parameter>, <parameter pos:start="1:110" pos:end="1:117"><decl pos:start="1:110" pos:end="1:117"><type pos:start="1:110" pos:end="1:117"><name pos:start="1:110" pos:end="1:112">int</name></type> <name pos:start="1:114" pos:end="1:117">xInc</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:60"><decl pos:start="3:36" pos:end="3:60"><type pos:start="3:36" pos:end="3:60"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:48">int16_t</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:60">hLumFilter</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:63"><decl pos:start="5:36" pos:end="5:63"><type pos:start="5:36" pos:end="5:63"><specifier pos:start="5:36" pos:end="5:40">const</specifier> <name pos:start="5:42" pos:end="5:48">int16_t</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:63">hLumFilterPos</name></decl></parameter>, <parameter pos:start="5:66" pos:end="5:83"><decl pos:start="5:66" pos:end="5:83"><type pos:start="5:66" pos:end="5:83"><name pos:start="5:66" pos:end="5:68">int</name></type> <name pos:start="5:70" pos:end="5:83">hLumFilterSize</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:60"><decl pos:start="7:36" pos:end="7:60"><type pos:start="7:36" pos:end="7:60"><name pos:start="7:36" pos:end="7:42">uint8_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:60">formatConvBuffer</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:48"><decl pos:start="9:36" pos:end="9:48"><type pos:start="9:36" pos:end="9:48"><name pos:start="9:36" pos:end="9:43">uint32_t</name> <modifier pos:start="9:45" pos:end="9:45">*</modifier></type><name pos:start="9:46" pos:end="9:48">pal</name></decl></parameter>, <parameter pos:start="9:51" pos:end="9:61"><decl pos:start="9:51" pos:end="9:61"><type pos:start="9:51" pos:end="9:61"><name pos:start="9:51" pos:end="9:53">int</name></type> <name pos:start="9:55" pos:end="9:61">isAlpha</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="49:1">{<block_content pos:start="13:5" pos:end="47:36">

    <function_decl pos:start="13:5" pos:end="13:104"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">void</name></type> (<modifier pos:start="13:11" pos:end="13:11">*</modifier><name pos:start="13:12" pos:end="13:17">toYV12</name>)<parameter_list pos:start="13:19" pos:end="13:63">(<parameter pos:start="13:20" pos:end="13:28"><decl pos:start="13:20" pos:end="13:28"><type pos:start="13:20" pos:end="13:28"><name pos:start="13:20" pos:end="13:26">uint8_t</name> <modifier pos:start="13:28" pos:end="13:28">*</modifier></type></decl></parameter>, <parameter pos:start="13:31" pos:end="13:45"><decl pos:start="13:31" pos:end="13:45"><type pos:start="13:31" pos:end="13:45"><specifier pos:start="13:31" pos:end="13:35">const</specifier> <name pos:start="13:37" pos:end="13:43">uint8_t</name> <modifier pos:start="13:45" pos:end="13:45">*</modifier></type></decl></parameter>, <parameter pos:start="13:48" pos:end="13:50"><decl pos:start="13:48" pos:end="13:50"><type pos:start="13:48" pos:end="13:50"><name pos:start="13:48" pos:end="13:50">int</name></type></decl></parameter>, <parameter pos:start="13:53" pos:end="13:62"><decl pos:start="13:53" pos:end="13:62"><type pos:start="13:53" pos:end="13:62"><name pos:start="13:53" pos:end="13:60">uint32_t</name> <modifier pos:start="13:62" pos:end="13:62">*</modifier></type></decl></parameter>)</parameter_list> <init pos:start="13:65" pos:end="13:103">= <expr pos:start="13:67" pos:end="13:88"><ternary pos:start="13:67" pos:end="13:88"><condition pos:start="13:67" pos:end="13:75"><expr pos:start="13:67" pos:end="13:73"><name pos:start="13:67" pos:end="13:73">isAlpha</name></expr> ?</condition><then pos:start="13:77" pos:end="13:88"> <expr pos:start="13:77" pos:end="13:88"><name pos:start="13:77" pos:end="13:88"><name pos:start="13:77" pos:end="13:77">c</name><operator pos:start="13:78" pos:end="13:79">-&gt;</operator><name pos:start="13:80" pos:end="13:88">alpToYV12</name></name></expr></then></ternary></expr> <operator pos:start="13:90" pos:end="13:90">:</operator> <expr pos:start="13:92" pos:end="13:103"><name pos:start="13:92" pos:end="13:103"><name pos:start="13:92" pos:end="13:92">c</name><operator pos:start="13:93" pos:end="13:94">-&gt;</operator><name pos:start="13:95" pos:end="13:103">lumToYV12</name></name></expr></init>;</function_decl>

    <function_decl pos:start="15:5" pos:end="15:80"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">void</name></type> (<modifier pos:start="15:11" pos:end="15:11">*</modifier><name pos:start="15:12" pos:end="15:23">convertRange</name>)<parameter_list pos:start="15:25" pos:end="15:41">(<parameter pos:start="15:26" pos:end="15:35"><decl pos:start="15:26" pos:end="15:35"><type pos:start="15:26" pos:end="15:35"><name pos:start="15:26" pos:end="15:33">uint16_t</name> <modifier pos:start="15:35" pos:end="15:35">*</modifier></type></decl></parameter>, <parameter pos:start="15:38" pos:end="15:40"><decl pos:start="15:38" pos:end="15:40"><type pos:start="15:38" pos:end="15:40"><name pos:start="15:38" pos:end="15:40">int</name></type></decl></parameter>)</parameter_list> <init pos:start="15:43" pos:end="15:79">= <expr pos:start="15:45" pos:end="15:58"><ternary pos:start="15:45" pos:end="15:58"><condition pos:start="15:45" pos:end="15:53"><expr pos:start="15:45" pos:end="15:51"><name pos:start="15:45" pos:end="15:51">isAlpha</name></expr> ?</condition><then pos:start="15:55" pos:end="15:58"> <expr pos:start="15:55" pos:end="15:58"><name pos:start="15:55" pos:end="15:58">NULL</name></expr></then></ternary></expr> <operator pos:start="15:60" pos:end="15:60">:</operator> <expr pos:start="15:62" pos:end="15:79"><name pos:start="15:62" pos:end="15:79"><name pos:start="15:62" pos:end="15:62">c</name><operator pos:start="15:63" pos:end="15:64">-&gt;</operator><name pos:start="15:65" pos:end="15:79">lumConvertRange</name></name></expr></init>;</function_decl>



    <expr_stmt pos:start="19:5" pos:end="19:55"><expr pos:start="19:5" pos:end="19:54"><name pos:start="19:5" pos:end="19:7">src</name> <operator pos:start="19:9" pos:end="19:10">+=</operator> <ternary pos:start="19:12" pos:end="19:54"><condition pos:start="19:12" pos:end="19:20"><expr pos:start="19:12" pos:end="19:18"><name pos:start="19:12" pos:end="19:18">isAlpha</name></expr> ?</condition><then pos:start="19:22" pos:end="19:36"> <expr pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:22">c</name><operator pos:start="19:23" pos:end="19:24">-&gt;</operator><name pos:start="19:25" pos:end="19:36">alpSrcOffset</name></name></expr> </then><else pos:start="19:38" pos:end="19:54">: <expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:40">c</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:54">lumSrcOffset</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:15">(<expr pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:14">toYV12</name></expr>)</condition> <block pos:start="23:17" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:30">

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><call pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:14">toYV12</name><argument_list pos:start="25:15" pos:end="25:48">(<argument pos:start="25:16" pos:end="25:31"><expr pos:start="25:16" pos:end="25:31"><name pos:start="25:16" pos:end="25:31">formatConvBuffer</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">src</name></expr></argument>, <argument pos:start="25:39" pos:end="25:42"><expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:42">srcW</name></expr></argument>, <argument pos:start="25:45" pos:end="25:47"><expr pos:start="25:45" pos:end="25:47"><name pos:start="25:45" pos:end="25:47">pal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:11">src</name><operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:29">formatConvBuffer</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:24"><name pos:start="33:10" pos:end="33:10">c</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:24">hyscale_fast</name></name></expr>)</condition> <block pos:start="33:27" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:93">

        <expr_stmt pos:start="35:9" pos:end="35:93"><expr pos:start="35:9" pos:end="35:92"><call pos:start="35:9" pos:end="35:92"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:9">c</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:17">hScale</name></name><argument_list pos:start="35:18" pos:end="35:92">(<argument pos:start="35:19" pos:end="35:21"><expr pos:start="35:19" pos:end="35:21"><name pos:start="35:19" pos:end="35:21">dst</name></expr></argument>, <argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:31">dstWidth</name></expr></argument>, <argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">src</name></expr></argument>, <argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">srcW</name></expr></argument>, <argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:48">xInc</name></expr></argument>, <argument pos:start="35:51" pos:end="35:60"><expr pos:start="35:51" pos:end="35:60"><name pos:start="35:51" pos:end="35:60">hLumFilter</name></expr></argument>, <argument pos:start="35:63" pos:end="35:75"><expr pos:start="35:63" pos:end="35:75"><name pos:start="35:63" pos:end="35:75">hLumFilterPos</name></expr></argument>, <argument pos:start="35:78" pos:end="35:91"><expr pos:start="35:78" pos:end="35:91"><name pos:start="35:78" pos:end="35:91">hLumFilterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="41:5">else <block pos:start="37:12" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:59"> <comment type="line" pos:start="37:14" pos:end="37:54">// fast bilinear upscale / crap downscale</comment>

        <expr_stmt pos:start="39:9" pos:end="39:59"><expr pos:start="39:9" pos:end="39:58"><call pos:start="39:9" pos:end="39:58"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:9">c</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:23">hyscale_fast</name></name><argument_list pos:start="39:24" pos:end="39:58">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">c</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:30">dst</name></expr></argument>, <argument pos:start="39:33" pos:end="39:40"><expr pos:start="39:33" pos:end="39:40"><name pos:start="39:33" pos:end="39:40">dstWidth</name></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">src</name></expr></argument>, <argument pos:start="39:48" pos:end="39:51"><expr pos:start="39:48" pos:end="39:51"><name pos:start="39:48" pos:end="39:51">srcW</name></expr></argument>, <argument pos:start="39:54" pos:end="39:57"><expr pos:start="39:54" pos:end="39:57"><name pos:start="39:54" pos:end="39:57">xInc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="45:5" pos:end="47:36"><if pos:start="45:5" pos:end="47:36">if <condition pos:start="45:8" pos:end="45:21">(<expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:20">convertRange</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:36"><block_content pos:start="47:9" pos:end="47:36">

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><call pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:20">convertRange</name><argument_list pos:start="47:21" pos:end="47:35">(<argument pos:start="47:22" pos:end="47:24"><expr pos:start="47:22" pos:end="47:24"><name pos:start="47:22" pos:end="47:24">dst</name></expr></argument>, <argument pos:start="47:27" pos:end="47:34"><expr pos:start="47:27" pos:end="47:34"><name pos:start="47:27" pos:end="47:34">dstWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
