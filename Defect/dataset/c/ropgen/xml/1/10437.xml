<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10437.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">ehci_state_waitlisthead</name><parameter_list pos:start="1:35" pos:end="1:63">(<parameter pos:start="1:36" pos:end="1:50"><decl pos:start="1:36" pos:end="1:50"><type pos:start="1:36" pos:end="1:50"><name pos:start="1:36" pos:end="1:44">EHCIState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">ehci</name></decl></parameter>,  <parameter pos:start="1:54" pos:end="1:62"><decl pos:start="1:54" pos:end="1:62"><type pos:start="1:54" pos:end="1:62"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:62">async</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:17">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">EHCIqh</name></type> <name pos:start="5:12" pos:end="5:13">qh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name> <init pos:start="7:11" pos:end="7:13">= <expr pos:start="7:13" pos:end="7:13"><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">again</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">entry</name> <init pos:start="11:20" pos:end="11:40">= <expr pos:start="11:22" pos:end="11:40"><name pos:start="11:22" pos:end="11:40"><name pos:start="11:22" pos:end="11:25">ehci</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:40">asynclistaddr</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:53">/* set reclamation flag at start event (4.8.6) */</comment>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:14">(<expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:13">async</name></expr>)</condition> <block pos:start="17:16" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:42">

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:23">ehci_set_usbsts</name><argument_list pos:start="19:24" pos:end="19:41">(<argument pos:start="19:25" pos:end="19:28"><expr pos:start="19:25" pos:end="19:28"><name pos:start="19:25" pos:end="19:28">ehci</name></expr></argument>, <argument pos:start="19:31" pos:end="19:40"><expr pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:40">USBSTS_REC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><call pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:26">ehci_queues_rip_unused</name><argument_list pos:start="25:27" pos:end="25:39">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">ehci</name></expr></argument>, <argument pos:start="25:34" pos:end="25:38"><expr pos:start="25:34" pos:end="25:38"><name pos:start="25:34" pos:end="25:38">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:46">/*  Find the head of the list (4.9.1.1) */</comment>

    <for pos:start="31:5" pos:end="71:5">for<control pos:start="31:8" pos:end="31:31">(<init pos:start="31:9" pos:end="31:14"><expr pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">i</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <literal type="number" pos:start="31:13" pos:end="31:13">0</literal></expr>;</init> <condition pos:start="31:16" pos:end="31:26"><expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">i</name> <operator pos:start="31:18" pos:end="31:18">&lt;</operator> <name pos:start="31:20" pos:end="31:25">MAX_QH</name></expr>;</condition> <incr pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:28">i</name><operator pos:start="31:29" pos:end="31:30">++</operator></expr></incr>)</control> <block pos:start="31:33" pos:end="71:5">{<block_content pos:start="33:9" pos:end="69:9">

        <expr_stmt pos:start="33:9" pos:end="35:40"><expr pos:start="33:9" pos:end="35:39"><call pos:start="33:9" pos:end="35:39"><name pos:start="33:9" pos:end="33:18">get_dwords</name><argument_list pos:start="33:19" pos:end="35:39">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">ehci</name></expr></argument>, <argument pos:start="33:26" pos:end="33:41"><expr pos:start="33:26" pos:end="33:41"><call pos:start="33:26" pos:end="33:41"><name pos:start="33:26" pos:end="33:34">NLPTR_GET</name><argument_list pos:start="33:35" pos:end="33:41">(<argument pos:start="33:36" pos:end="33:40"><expr pos:start="33:36" pos:end="33:40"><name pos:start="33:36" pos:end="33:40">entry</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:44" pos:end="33:59"><expr pos:start="33:44" pos:end="33:59"><operator pos:start="33:44" pos:end="33:44">(</operator><name pos:start="33:45" pos:end="33:52">uint32_t</name> <operator pos:start="33:54" pos:end="33:54">*</operator><operator pos:start="33:55" pos:end="33:55">)</operator> <operator pos:start="33:57" pos:end="33:57">&amp;</operator><name pos:start="33:58" pos:end="33:59">qh</name></expr></argument>,

                   <argument pos:start="35:20" pos:end="35:38"><expr pos:start="35:20" pos:end="35:38"><sizeof pos:start="35:20" pos:end="35:33">sizeof<argument_list pos:start="35:26" pos:end="35:33">(<argument pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:32">EHCIqh</name></expr></argument>)</argument_list></sizeof> <operator pos:start="35:35" pos:end="35:36">&gt;&gt;</operator> <literal type="number" pos:start="35:38" pos:end="35:38">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><call pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:21">ehci_trace_qh</name><argument_list pos:start="37:22" pos:end="37:50">(<argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:26">NULL</name></expr></argument>, <argument pos:start="37:29" pos:end="37:44"><expr pos:start="37:29" pos:end="37:44"><call pos:start="37:29" pos:end="37:44"><name pos:start="37:29" pos:end="37:37">NLPTR_GET</name><argument_list pos:start="37:38" pos:end="37:44">(<argument pos:start="37:39" pos:end="37:43"><expr pos:start="37:39" pos:end="37:43"><name pos:start="37:39" pos:end="37:43">entry</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="37:47" pos:end="37:49"><expr pos:start="37:47" pos:end="37:49"><operator pos:start="37:47" pos:end="37:47">&amp;</operator><name pos:start="37:48" pos:end="37:49">qh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="59:9"><if pos:start="41:9" pos:end="59:9">if <condition pos:start="41:12" pos:end="41:36">(<expr pos:start="41:13" pos:end="41:35"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:14">qh</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:21">epchar</name></name> <operator pos:start="41:23" pos:end="41:23">&amp;</operator> <name pos:start="41:25" pos:end="41:35">QH_EPCHAR_H</name></expr>)</condition> <block pos:start="41:38" pos:end="59:9">{<block_content pos:start="43:13" pos:end="57:21">

            <if_stmt pos:start="43:13" pos:end="47:13"><if pos:start="43:13" pos:end="47:13">if <condition pos:start="43:16" pos:end="43:22">(<expr pos:start="43:17" pos:end="43:21"><name pos:start="43:17" pos:end="43:21">async</name></expr>)</condition> <block pos:start="43:24" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:46">

                <expr_stmt pos:start="45:17" pos:end="45:46"><expr pos:start="45:17" pos:end="45:45"><name pos:start="45:17" pos:end="45:21">entry</name> <operator pos:start="45:23" pos:end="45:24">|=</operator> <operator pos:start="45:26" pos:end="45:26">(</operator><name pos:start="45:27" pos:end="45:39">NLPTR_TYPE_QH</name> <operator pos:start="45:41" pos:end="45:42">&lt;&lt;</operator> <literal type="number" pos:start="45:44" pos:end="45:44">1</literal><operator pos:start="45:45" pos:end="45:45">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="51:13" pos:end="51:52"><expr pos:start="51:13" pos:end="51:51"><call pos:start="51:13" pos:end="51:51"><name pos:start="51:13" pos:end="51:31">ehci_set_fetch_addr</name><argument_list pos:start="51:32" pos:end="51:51">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">ehci</name></expr></argument>, <argument pos:start="51:39" pos:end="51:43"><expr pos:start="51:39" pos:end="51:43"><name pos:start="51:39" pos:end="51:43">async</name></expr></argument>, <argument pos:start="51:46" pos:end="51:50"><expr pos:start="51:46" pos:end="51:50"><name pos:start="51:46" pos:end="51:50">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:56"><expr pos:start="53:13" pos:end="53:55"><call pos:start="53:13" pos:end="53:55"><name pos:start="53:13" pos:end="53:26">ehci_set_state</name><argument_list pos:start="53:27" pos:end="53:55">(<argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><name pos:start="53:28" pos:end="53:31">ehci</name></expr></argument>, <argument pos:start="53:34" pos:end="53:38"><expr pos:start="53:34" pos:end="53:38"><name pos:start="53:34" pos:end="53:38">async</name></expr></argument>, <argument pos:start="53:41" pos:end="53:54"><expr pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:54">EST_FETCHENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:17">again</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

            <goto pos:start="57:13" pos:end="57:21">goto <name pos:start="57:18" pos:end="57:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:13">entry</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:23"><name pos:start="63:17" pos:end="63:18">qh</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:23">next</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if <condition pos:start="65:12" pos:end="65:41">(<expr pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:17">entry</name> <operator pos:start="65:19" pos:end="65:20">==</operator> <name pos:start="65:22" pos:end="65:40"><name pos:start="65:22" pos:end="65:25">ehci</name><operator pos:start="65:26" pos:end="65:27">-&gt;</operator><name pos:start="65:28" pos:end="65:40">asynclistaddr</name></name></expr>)</condition> <block pos:start="65:43" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:18">

            <break pos:start="67:13" pos:end="67:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="75:5" pos:end="75:33">/* no head found for list. */</comment>



    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><call pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:18">ehci_set_state</name><argument_list pos:start="79:19" pos:end="79:43">(<argument pos:start="79:20" pos:end="79:23"><expr pos:start="79:20" pos:end="79:23"><name pos:start="79:20" pos:end="79:23">ehci</name></expr></argument>, <argument pos:start="79:26" pos:end="79:30"><expr pos:start="79:26" pos:end="79:30"><name pos:start="79:26" pos:end="79:30">async</name></expr></argument>, <argument pos:start="79:33" pos:end="79:42"><expr pos:start="79:33" pos:end="79:42"><name pos:start="79:33" pos:end="79:42">EST_ACTIVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="83:1" pos:end="83:4"><name pos:start="83:1" pos:end="83:3">out</name>:</label>

    <return pos:start="85:5" pos:end="85:17">return <expr pos:start="85:12" pos:end="85:16"><name pos:start="85:12" pos:end="85:16">again</name></expr>;</return>

</block_content>}</block></function>
</unit>
