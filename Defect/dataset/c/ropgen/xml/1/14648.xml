<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14648.c" pos:tabs="8"><function pos:start="1:1" pos:end="276:15"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">encode_dvd_subtitles</name><parameter_list pos:start="1:32" pos:end="5:52">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:47"><decl pos:start="3:33" pos:end="3:47"><type pos:start="3:33" pos:end="3:47"><name pos:start="3:33" pos:end="3:39">uint8_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:47">outbuf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:64">outbuf_size</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:51"><decl pos:start="5:33" pos:end="5:51"><type pos:start="5:33" pos:end="5:51"><specifier pos:start="5:33" pos:end="5:37">const</specifier> <name pos:start="5:39" pos:end="5:48">AVSubtitle</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:51">h</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="276:15">{<block_content pos:start="9:5" pos:end="276:15">

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:22">DVDSubtitleContext</name> <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:28">dvdc</name> <init pos:start="9:30" pos:end="9:47">= <expr pos:start="9:32" pos:end="9:47"><name pos:start="9:32" pos:end="9:47"><name pos:start="9:32" pos:end="9:36">avctx</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:47">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">q</name></decl>, <decl pos:start="11:17" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:13"><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">qq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:15">offset1</name></decl>, <decl pos:start="13:18" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:18" pos:end="13:24">offset2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:16">rects</name> <init pos:start="15:18" pos:end="15:31">= <expr pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:20">h</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:31">num_rects</name></name></expr></init></decl>, <decl pos:start="15:34" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:34" pos:end="15:36">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:45"><decl pos:start="17:5" pos:end="17:44"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:36"><name pos:start="17:14" pos:end="17:32">global_palette_hits</name><index pos:start="17:33" pos:end="17:36">[<expr pos:start="17:34" pos:end="17:35"><literal type="number" pos:start="17:34" pos:end="17:35">33</literal></expr>]</index></name> <init pos:start="17:38" pos:end="17:44">= <expr pos:start="17:40" pos:end="17:44"><block pos:start="17:40" pos:end="17:44">{ <expr pos:start="17:42" pos:end="17:42"><literal type="number" pos:start="17:42" pos:end="17:42">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17"><name pos:start="19:9" pos:end="19:12">cmap</name><index pos:start="19:13" pos:end="19:17">[<expr pos:start="19:14" pos:end="19:16"><literal type="number" pos:start="19:14" pos:end="19:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:19">out_palette</name><index pos:start="21:20" pos:end="21:22">[<expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:21"><decl pos:start="23:5" pos:end="23:20"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:17">out_alpha</name><index pos:start="23:18" pos:end="23:20">[<expr pos:start="23:19" pos:end="23:19"><literal type="number" pos:start="23:19" pos:end="23:19">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:25"><decl pos:start="25:5" pos:end="25:24"><type pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:18">AVSubtitleRect</name></type> <name pos:start="25:20" pos:end="25:24">vrect</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:31"><decl pos:start="27:5" pos:end="27:30"><type pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:11">uint8_t</name> <modifier pos:start="27:13" pos:end="27:13">*</modifier></type><name pos:start="27:14" pos:end="27:23">vrect_data</name> <init pos:start="27:25" pos:end="27:30">= <expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:15"><decl pos:start="29:5" pos:end="29:10"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:10">x2</name></decl>, <decl pos:start="29:13" pos:end="29:14"><type ref="prev" pos:start="29:5" pos:end="29:7"/><name pos:start="29:13" pos:end="29:14">y2</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="41:25"><if pos:start="33:5" pos:end="41:25">if <condition pos:start="33:8" pos:end="33:39">(<expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:13">rects</name> <operator pos:start="33:15" pos:end="33:16">==</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal> <operator pos:start="33:20" pos:end="33:21">||</operator> <name pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:23">h</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">rects</name></name> <operator pos:start="33:32" pos:end="33:33">==</operator> <name pos:start="33:35" pos:end="33:38">NULL</name></expr>)</condition><block type="pseudo" pos:start="41:5" pos:end="41:25"><block_content pos:start="41:5" pos:end="41:25">







    <expr_stmt pos:start="41:5" pos:end="41:25"><expr pos:start="41:5" pos:end="41:24"><name pos:start="41:5" pos:end="41:9">vrect</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">*</operator><name pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:14">h</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:21">rects</name><index pos:start="41:22" pos:end="41:24">[<expr pos:start="41:23" pos:end="41:23"><literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="276:15"><if pos:start="45:5" pos:end="276:15">if <condition pos:start="45:8" pos:end="45:18">(<expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:13">rects</name> <operator pos:start="45:15" pos:end="45:15">&gt;</operator> <literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>)</condition> <block pos:start="45:20" pos:end="276:15">{<block_content pos:start="55:9" pos:end="276:15">

        <comment type="block" pos:start="47:9" pos:end="53:77">/* DVD subtitles can have only one rectangle: build a virtual

           rectangle containing all actual rectangles.

           The data of the rectangles will be copied later, when the palette

           is decided, because the rectangles may have different palettes. */</comment>

        <decl_stmt pos:start="55:9" pos:end="55:64"><decl pos:start="55:9" pos:end="55:33"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:16">xmin</name> <init pos:start="55:18" pos:end="55:33">= <expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:20">h</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:27">rects</name><index pos:start="55:28" pos:end="55:30">[<expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr>]</index></name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:33">x</name></expr></init></decl>, <decl pos:start="55:36" pos:end="55:63"><type ref="prev" pos:start="55:9" pos:end="55:11"/><name pos:start="55:36" pos:end="55:39">xmax</name> <init pos:start="55:41" pos:end="55:63">= <expr pos:start="55:43" pos:end="55:63"><name pos:start="55:43" pos:end="55:46">xmin</name> <operator pos:start="55:48" pos:end="55:48">+</operator> <name pos:start="55:50" pos:end="55:60"><name pos:start="55:50" pos:end="55:50">h</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:57">rects</name><index pos:start="55:58" pos:end="55:60">[<expr pos:start="55:59" pos:end="55:59"><literal type="number" pos:start="55:59" pos:end="55:59">0</literal></expr>]</index></name><operator pos:start="55:61" pos:end="55:62">-&gt;</operator><name pos:start="55:63" pos:end="55:63">w</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="57:9" pos:end="57:64"><decl pos:start="57:9" pos:end="57:33"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:16">ymin</name> <init pos:start="57:18" pos:end="57:33">= <expr pos:start="57:20" pos:end="57:33"><name pos:start="57:20" pos:end="57:30"><name pos:start="57:20" pos:end="57:20">h</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:27">rects</name><index pos:start="57:28" pos:end="57:30">[<expr pos:start="57:29" pos:end="57:29"><literal type="number" pos:start="57:29" pos:end="57:29">0</literal></expr>]</index></name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:33">y</name></expr></init></decl>, <decl pos:start="57:36" pos:end="57:63"><type ref="prev" pos:start="57:9" pos:end="57:11"/><name pos:start="57:36" pos:end="57:39">ymax</name> <init pos:start="57:41" pos:end="57:63">= <expr pos:start="57:43" pos:end="57:63"><name pos:start="57:43" pos:end="57:46">ymin</name> <operator pos:start="57:48" pos:end="57:48">+</operator> <name pos:start="57:50" pos:end="57:60"><name pos:start="57:50" pos:end="57:50">h</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:57">rects</name><index pos:start="57:58" pos:end="57:60">[<expr pos:start="57:59" pos:end="57:59"><literal type="number" pos:start="57:59" pos:end="57:59">0</literal></expr>]</index></name><operator pos:start="57:61" pos:end="57:62">-&gt;</operator><name pos:start="57:63" pos:end="57:63">h</name></expr></init></decl>;</decl_stmt>

        <for pos:start="59:9" pos:end="276:15">for <control pos:start="59:13" pos:end="59:35">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">1</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:30"><expr pos:start="59:21" pos:end="59:29"><name pos:start="59:21" pos:end="59:21">i</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:29">rects</name></expr>;</condition> <incr pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:32">i</name><operator pos:start="59:33" pos:end="59:34">++</operator></expr></incr>)</control> <block pos:start="59:37" pos:end="276:15">{<block_content pos:start="61:13" pos:end="276:15">

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:16">xmin</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <call pos:start="61:20" pos:end="61:46"><name pos:start="61:20" pos:end="61:24">FFMIN</name><argument_list pos:start="61:25" pos:end="61:46">(<argument pos:start="61:26" pos:end="61:29"><expr pos:start="61:26" pos:end="61:29"><name pos:start="61:26" pos:end="61:29">xmin</name></expr></argument>, <argument pos:start="61:32" pos:end="61:45"><expr pos:start="61:32" pos:end="61:45"><name pos:start="61:32" pos:end="61:42"><name pos:start="61:32" pos:end="61:32">h</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:39">rects</name><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">i</name></expr>]</index></name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:45">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:47"><expr pos:start="63:13" pos:end="63:46"><name pos:start="63:13" pos:end="63:16">ymin</name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:46"><name pos:start="63:20" pos:end="63:24">FFMIN</name><argument_list pos:start="63:25" pos:end="63:46">(<argument pos:start="63:26" pos:end="63:29"><expr pos:start="63:26" pos:end="63:29"><name pos:start="63:26" pos:end="63:29">ymin</name></expr></argument>, <argument pos:start="63:32" pos:end="63:45"><expr pos:start="63:32" pos:end="63:45"><name pos:start="63:32" pos:end="63:42"><name pos:start="63:32" pos:end="63:32">h</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:39">rects</name><index pos:start="63:40" pos:end="63:42">[<expr pos:start="63:41" pos:end="63:41"><name pos:start="63:41" pos:end="63:41">i</name></expr>]</index></name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:45">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:64"><expr pos:start="65:13" pos:end="65:63"><name pos:start="65:13" pos:end="65:16">xmax</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <call pos:start="65:20" pos:end="65:63"><name pos:start="65:20" pos:end="65:24">FFMAX</name><argument_list pos:start="65:25" pos:end="65:63">(<argument pos:start="65:26" pos:end="65:29"><expr pos:start="65:26" pos:end="65:29"><name pos:start="65:26" pos:end="65:29">xmax</name></expr></argument>, <argument pos:start="65:32" pos:end="65:62"><expr pos:start="65:32" pos:end="65:62"><name pos:start="65:32" pos:end="65:42"><name pos:start="65:32" pos:end="65:32">h</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:39">rects</name><index pos:start="65:40" pos:end="65:42">[<expr pos:start="65:41" pos:end="65:41"><name pos:start="65:41" pos:end="65:41">i</name></expr>]</index></name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:45">x</name> <operator pos:start="65:47" pos:end="65:47">+</operator> <name pos:start="65:49" pos:end="65:59"><name pos:start="65:49" pos:end="65:49">h</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:56">rects</name><index pos:start="65:57" pos:end="65:59">[<expr pos:start="65:58" pos:end="65:58"><name pos:start="65:58" pos:end="65:58">i</name></expr>]</index></name><operator pos:start="65:60" pos:end="65:61">-&gt;</operator><name pos:start="65:62" pos:end="65:62">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:64"><expr pos:start="67:13" pos:end="67:63"><name pos:start="67:13" pos:end="67:16">ymax</name> <operator pos:start="67:18" pos:end="67:18">=</operator> <call pos:start="67:20" pos:end="67:63"><name pos:start="67:20" pos:end="67:24">FFMAX</name><argument_list pos:start="67:25" pos:end="67:63">(<argument pos:start="67:26" pos:end="67:29"><expr pos:start="67:26" pos:end="67:29"><name pos:start="67:26" pos:end="67:29">ymax</name></expr></argument>, <argument pos:start="67:32" pos:end="67:62"><expr pos:start="67:32" pos:end="67:62"><name pos:start="67:32" pos:end="67:42"><name pos:start="67:32" pos:end="67:32">h</name><operator pos:start="67:33" pos:end="67:34">-&gt;</operator><name pos:start="67:35" pos:end="67:39">rects</name><index pos:start="67:40" pos:end="67:42">[<expr pos:start="67:41" pos:end="67:41"><name pos:start="67:41" pos:end="67:41">i</name></expr>]</index></name><operator pos:start="67:43" pos:end="67:44">-&gt;</operator><name pos:start="67:45" pos:end="67:45">y</name> <operator pos:start="67:47" pos:end="67:47">+</operator> <name pos:start="67:49" pos:end="67:59"><name pos:start="67:49" pos:end="67:49">h</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:56">rects</name><index pos:start="67:57" pos:end="67:59">[<expr pos:start="67:58" pos:end="67:58"><name pos:start="67:58" pos:end="67:58">i</name></expr>]</index></name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:62">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="70:9" pos:end="70:23"><expr pos:start="70:9" pos:end="70:22"><name pos:start="70:9" pos:end="70:15"><name pos:start="70:9" pos:end="70:13">vrect</name><operator pos:start="70:14" pos:end="70:14">.</operator><name pos:start="70:15" pos:end="70:15">x</name></name> <operator pos:start="70:17" pos:end="70:17">=</operator> <name pos:start="70:19" pos:end="70:22">xmin</name></expr>;</expr_stmt>

        <expr_stmt pos:start="72:9" pos:end="72:23"><expr pos:start="72:9" pos:end="72:22"><name pos:start="72:9" pos:end="72:15"><name pos:start="72:9" pos:end="72:13">vrect</name><operator pos:start="72:14" pos:end="72:14">.</operator><name pos:start="72:15" pos:end="72:15">y</name></name> <operator pos:start="72:17" pos:end="72:17">=</operator> <name pos:start="72:19" pos:end="72:22">ymin</name></expr>;</expr_stmt>

        <expr_stmt pos:start="74:9" pos:end="74:30"><expr pos:start="74:9" pos:end="74:29"><name pos:start="74:9" pos:end="74:15"><name pos:start="74:9" pos:end="74:13">vrect</name><operator pos:start="74:14" pos:end="74:14">.</operator><name pos:start="74:15" pos:end="74:15">w</name></name> <operator pos:start="74:17" pos:end="74:17">=</operator> <name pos:start="74:19" pos:end="74:22">xmax</name> <operator pos:start="74:24" pos:end="74:24">-</operator> <name pos:start="74:26" pos:end="74:29">xmin</name></expr>;</expr_stmt>

        <expr_stmt pos:start="76:9" pos:end="76:30"><expr pos:start="76:9" pos:end="76:29"><name pos:start="76:9" pos:end="76:15"><name pos:start="76:9" pos:end="76:13">vrect</name><operator pos:start="76:14" pos:end="76:14">.</operator><name pos:start="76:15" pos:end="76:15">h</name></name> <operator pos:start="76:17" pos:end="76:17">=</operator> <name pos:start="76:19" pos:end="76:22">ymax</name> <operator pos:start="76:24" pos:end="76:24">-</operator> <name pos:start="76:26" pos:end="76:29">ymin</name></expr>;</expr_stmt>

        <if_stmt pos:start="78:9" pos:end="80:23"><if pos:start="78:9" pos:end="80:23">if <condition pos:start="78:12" pos:end="78:72">(<expr pos:start="78:13" pos:end="78:71"><operator pos:start="78:13" pos:end="78:13">(</operator><name pos:start="78:14" pos:end="78:16">ret</name> <operator pos:start="78:18" pos:end="78:18">=</operator> <call pos:start="78:20" pos:end="78:66"><name pos:start="78:20" pos:end="78:38">av_image_check_size</name><argument_list pos:start="78:39" pos:end="78:66">(<argument pos:start="78:40" pos:end="78:46"><expr pos:start="78:40" pos:end="78:46"><name pos:start="78:40" pos:end="78:46"><name pos:start="78:40" pos:end="78:44">vrect</name><operator pos:start="78:45" pos:end="78:45">.</operator><name pos:start="78:46" pos:end="78:46">w</name></name></expr></argument>, <argument pos:start="78:49" pos:end="78:55"><expr pos:start="78:49" pos:end="78:55"><name pos:start="78:49" pos:end="78:55"><name pos:start="78:49" pos:end="78:53">vrect</name><operator pos:start="78:54" pos:end="78:54">.</operator><name pos:start="78:55" pos:end="78:55">h</name></name></expr></argument>, <argument pos:start="78:58" pos:end="78:58"><expr pos:start="78:58" pos:end="78:58"><literal type="number" pos:start="78:58" pos:end="78:58">0</literal></expr></argument>, <argument pos:start="78:61" pos:end="78:65"><expr pos:start="78:61" pos:end="78:65"><name pos:start="78:61" pos:end="78:65">avctx</name></expr></argument>)</argument_list></call><operator pos:start="78:67" pos:end="78:67">)</operator> <operator pos:start="78:69" pos:end="78:69">&lt;</operator> <literal type="number" pos:start="78:71" pos:end="78:71">0</literal></expr>)</condition><block type="pseudo" pos:start="80:13" pos:end="80:23"><block_content pos:start="80:13" pos:end="80:23">

            <return pos:start="80:13" pos:end="80:23">return <expr pos:start="80:20" pos:end="80:22"><name pos:start="80:20" pos:end="80:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="84:9" pos:end="84:71">/* Count pixels outside the virtual rectangle as transparent */</comment>

        <expr_stmt pos:start="86:9" pos:end="86:51"><expr pos:start="86:9" pos:end="86:50"><name pos:start="86:9" pos:end="86:30"><name pos:start="86:9" pos:end="86:27">global_palette_hits</name><index pos:start="86:28" pos:end="86:30">[<expr pos:start="86:29" pos:end="86:29"><literal type="number" pos:start="86:29" pos:end="86:29">0</literal></expr>]</index></name> <operator pos:start="86:32" pos:end="86:32">=</operator> <name pos:start="86:34" pos:end="86:40"><name pos:start="86:34" pos:end="86:38">vrect</name><operator pos:start="86:39" pos:end="86:39">.</operator><name pos:start="86:40" pos:end="86:40">w</name></name> <operator pos:start="86:42" pos:end="86:42">*</operator> <name pos:start="86:44" pos:end="86:50"><name pos:start="86:44" pos:end="86:48">vrect</name><operator pos:start="86:49" pos:end="86:49">.</operator><name pos:start="86:50" pos:end="86:50">h</name></name></expr>;</expr_stmt>


            <expr_stmt pos:start="89:13" pos:end="89:70"><expr pos:start="89:13" pos:end="89:69"><name pos:start="89:13" pos:end="89:34"><name pos:start="89:13" pos:end="89:31">global_palette_hits</name><index pos:start="89:32" pos:end="89:34">[<expr pos:start="89:33" pos:end="89:33"><literal type="number" pos:start="89:33" pos:end="89:33">0</literal></expr>]</index></name> <operator pos:start="89:36" pos:end="89:37">-=</operator> <name pos:start="89:39" pos:end="89:49"><name pos:start="89:39" pos:end="89:39">h</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:46">rects</name><index pos:start="89:47" pos:end="89:49">[<expr pos:start="89:48" pos:end="89:48"><name pos:start="89:48" pos:end="89:48">i</name></expr>]</index></name><operator pos:start="89:50" pos:end="89:51">-&gt;</operator><name pos:start="89:52" pos:end="89:52">w</name> <operator pos:start="89:54" pos:end="89:54">*</operator> <name pos:start="89:56" pos:end="89:66"><name pos:start="89:56" pos:end="89:56">h</name><operator pos:start="89:57" pos:end="89:58">-&gt;</operator><name pos:start="89:59" pos:end="89:63">rects</name><index pos:start="89:64" pos:end="89:66">[<expr pos:start="89:65" pos:end="89:65"><name pos:start="89:65" pos:end="89:65">i</name></expr>]</index></name><operator pos:start="89:67" pos:end="89:68">-&gt;</operator><name pos:start="89:69" pos:end="89:69">h</name></expr>;</expr_stmt>





        <expr_stmt pos:start="95:9" pos:end="95:62"><expr pos:start="95:9" pos:end="95:61"><call pos:start="95:9" pos:end="95:61"><name pos:start="95:9" pos:end="95:20">count_colors</name><argument_list pos:start="95:21" pos:end="95:61">(<argument pos:start="95:22" pos:end="95:26"><expr pos:start="95:22" pos:end="95:26"><name pos:start="95:22" pos:end="95:26">avctx</name></expr></argument>, <argument pos:start="95:29" pos:end="95:47"><expr pos:start="95:29" pos:end="95:47"><name pos:start="95:29" pos:end="95:47">global_palette_hits</name></expr></argument>, <argument pos:start="95:50" pos:end="95:60"><expr pos:start="95:50" pos:end="95:60"><name pos:start="95:50" pos:end="95:60"><name pos:start="95:50" pos:end="95:50">h</name><operator pos:start="95:51" pos:end="95:52">-&gt;</operator><name pos:start="95:53" pos:end="95:57">rects</name><index pos:start="95:58" pos:end="95:60">[<expr pos:start="95:59" pos:end="95:59"><name pos:start="95:59" pos:end="95:59">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:71"><expr pos:start="97:5" pos:end="97:70"><call pos:start="97:5" pos:end="97:70"><name pos:start="97:5" pos:end="97:18">select_palette</name><argument_list pos:start="97:19" pos:end="97:70">(<argument pos:start="97:20" pos:end="97:24"><expr pos:start="97:20" pos:end="97:24"><name pos:start="97:20" pos:end="97:24">avctx</name></expr></argument>, <argument pos:start="97:27" pos:end="97:37"><expr pos:start="97:27" pos:end="97:37"><name pos:start="97:27" pos:end="97:37">out_palette</name></expr></argument>, <argument pos:start="97:40" pos:end="97:48"><expr pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:48">out_alpha</name></expr></argument>, <argument pos:start="97:51" pos:end="97:69"><expr pos:start="97:51" pos:end="97:69"><name pos:start="97:51" pos:end="97:69">global_palette_hits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="101:5" pos:end="276:15"><if pos:start="101:5" pos:end="276:15">if <condition pos:start="101:8" pos:end="101:18">(<expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:13">rects</name> <operator pos:start="101:15" pos:end="101:15">&gt;</operator> <literal type="number" pos:start="101:17" pos:end="101:17">1</literal></expr>)</condition> <block pos:start="101:20" pos:end="276:15">{<block_content pos:start="103:9" pos:end="276:15">

        <if_stmt pos:start="103:9" pos:end="105:35"><if pos:start="103:9" pos:end="105:35">if <condition pos:start="103:12" pos:end="103:56">(<expr pos:start="103:13" pos:end="103:55"><operator pos:start="103:13" pos:end="103:13">!</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:24">vrect_data</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <call pos:start="103:28" pos:end="103:54"><name pos:start="103:28" pos:end="103:36">av_calloc</name><argument_list pos:start="103:37" pos:end="103:54">(<argument pos:start="103:38" pos:end="103:44"><expr pos:start="103:38" pos:end="103:44"><name pos:start="103:38" pos:end="103:44"><name pos:start="103:38" pos:end="103:42">vrect</name><operator pos:start="103:43" pos:end="103:43">.</operator><name pos:start="103:44" pos:end="103:44">w</name></name></expr></argument>, <argument pos:start="103:47" pos:end="103:53"><expr pos:start="103:47" pos:end="103:53"><name pos:start="103:47" pos:end="103:53"><name pos:start="103:47" pos:end="103:51">vrect</name><operator pos:start="103:52" pos:end="103:52">.</operator><name pos:start="103:53" pos:end="103:53">h</name></name></expr></argument>)</argument_list></call><operator pos:start="103:55" pos:end="103:55">)</operator></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:35"><block_content pos:start="105:13" pos:end="105:35">

            <return pos:start="105:13" pos:end="105:35">return <expr pos:start="105:20" pos:end="105:34"><call pos:start="105:20" pos:end="105:34"><name pos:start="105:20" pos:end="105:26">AVERROR</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:44"><expr pos:start="107:9" pos:end="107:43"><name pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:13">vrect</name><operator pos:start="107:14" pos:end="107:14">.</operator><name pos:start="107:15" pos:end="107:18">pict</name><operator pos:start="107:19" pos:end="107:19">.</operator><name pos:start="107:20" pos:end="107:23">data</name>    <index pos:start="107:28" pos:end="107:30">[<expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">0</literal></expr>]</index></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <name pos:start="107:34" pos:end="107:43">vrect_data</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:13">vrect</name><operator pos:start="109:14" pos:end="109:14">.</operator><name pos:start="109:15" pos:end="109:18">pict</name><operator pos:start="109:19" pos:end="109:19">.</operator><name pos:start="109:20" pos:end="109:27">linesize</name><index pos:start="109:28" pos:end="109:30">[<expr pos:start="109:29" pos:end="109:29"><literal type="number" pos:start="109:29" pos:end="109:29">0</literal></expr>]</index></name> <operator pos:start="109:32" pos:end="109:32">=</operator> <name pos:start="109:34" pos:end="109:40"><name pos:start="109:34" pos:end="109:38">vrect</name><operator pos:start="109:39" pos:end="109:39">.</operator><name pos:start="109:40" pos:end="109:40">w</name></name></expr>;</expr_stmt>

        <for pos:start="111:9" pos:end="124:5">for <control pos:start="111:13" pos:end="111:35">(<init pos:start="111:14" pos:end="111:19"><expr pos:start="111:14" pos:end="111:18"><name pos:start="111:14" pos:end="111:14">i</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <literal type="number" pos:start="111:18" pos:end="111:18">0</literal></expr>;</init> <condition pos:start="111:21" pos:end="111:30"><expr pos:start="111:21" pos:end="111:29"><name pos:start="111:21" pos:end="111:21">i</name> <operator pos:start="111:23" pos:end="111:23">&lt;</operator> <name pos:start="111:25" pos:end="111:29">rects</name></expr>;</condition> <incr pos:start="111:32" pos:end="111:34"><expr pos:start="111:32" pos:end="111:34"><name pos:start="111:32" pos:end="111:32">i</name><operator pos:start="111:33" pos:end="111:34">++</operator></expr></incr>)</control> <block pos:start="111:37" pos:end="124:5">{<block_content pos:start="113:13" pos:end="122:24">

            <expr_stmt pos:start="113:13" pos:end="115:52"><expr pos:start="113:13" pos:end="115:51"><call pos:start="113:13" pos:end="115:51"><name pos:start="113:13" pos:end="113:27">build_color_map</name><argument_list pos:start="113:28" pos:end="115:51">(<argument pos:start="113:29" pos:end="113:33"><expr pos:start="113:29" pos:end="113:33"><name pos:start="113:29" pos:end="113:33">avctx</name></expr></argument>, <argument pos:start="113:36" pos:end="113:39"><expr pos:start="113:36" pos:end="113:39"><name pos:start="113:36" pos:end="113:39">cmap</name></expr></argument>, <argument pos:start="113:42" pos:end="113:78"><expr pos:start="113:42" pos:end="113:78"><operator pos:start="113:42" pos:end="113:42">(</operator><name pos:start="113:43" pos:end="113:50">uint32_t</name> <operator pos:start="113:52" pos:end="113:52">*</operator><operator pos:start="113:53" pos:end="113:53">)</operator><name pos:start="113:54" pos:end="113:64"><name pos:start="113:54" pos:end="113:54">h</name><operator pos:start="113:55" pos:end="113:56">-&gt;</operator><name pos:start="113:57" pos:end="113:61">rects</name><index pos:start="113:62" pos:end="113:64">[<expr pos:start="113:63" pos:end="113:63"><name pos:start="113:63" pos:end="113:63">i</name></expr>]</index></name><operator pos:start="113:65" pos:end="113:66">-&gt;</operator><name pos:start="113:67" pos:end="113:78"><name pos:start="113:67" pos:end="113:70">pict</name><operator pos:start="113:71" pos:end="113:71">.</operator><name pos:start="113:72" pos:end="113:75">data</name><index pos:start="113:76" pos:end="113:78">[<expr pos:start="113:77" pos:end="113:77"><literal type="number" pos:start="113:77" pos:end="113:77">1</literal></expr>]</index></name></expr></argument>,

                            <argument pos:start="115:29" pos:end="115:39"><expr pos:start="115:29" pos:end="115:39"><name pos:start="115:29" pos:end="115:39">out_palette</name></expr></argument>, <argument pos:start="115:42" pos:end="115:50"><expr pos:start="115:42" pos:end="115:50"><name pos:start="115:42" pos:end="115:50">out_alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:54"><expr pos:start="117:13" pos:end="117:53"><call pos:start="117:13" pos:end="117:53"><name pos:start="117:13" pos:end="117:26">copy_rectangle</name><argument_list pos:start="117:27" pos:end="117:53">(<argument pos:start="117:28" pos:end="117:33"><expr pos:start="117:28" pos:end="117:33"><operator pos:start="117:28" pos:end="117:28">&amp;</operator><name pos:start="117:29" pos:end="117:33">vrect</name></expr></argument>, <argument pos:start="117:36" pos:end="117:46"><expr pos:start="117:36" pos:end="117:46"><name pos:start="117:36" pos:end="117:46"><name pos:start="117:36" pos:end="117:36">h</name><operator pos:start="117:37" pos:end="117:38">-&gt;</operator><name pos:start="117:39" pos:end="117:43">rects</name><index pos:start="117:44" pos:end="117:46">[<expr pos:start="117:45" pos:end="117:45"><name pos:start="117:45" pos:end="117:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="117:49" pos:end="117:52"><expr pos:start="117:49" pos:end="117:52"><name pos:start="117:49" pos:end="117:52">cmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <for pos:start="120:9" pos:end="122:24">for <control pos:start="120:13" pos:end="120:31">(<init pos:start="120:14" pos:end="120:19"><expr pos:start="120:14" pos:end="120:18"><name pos:start="120:14" pos:end="120:14">i</name> <operator pos:start="120:16" pos:end="120:16">=</operator> <literal type="number" pos:start="120:18" pos:end="120:18">0</literal></expr>;</init> <condition pos:start="120:21" pos:end="120:26"><expr pos:start="120:21" pos:end="120:25"><name pos:start="120:21" pos:end="120:21">i</name> <operator pos:start="120:23" pos:end="120:23">&lt;</operator> <literal type="number" pos:start="120:25" pos:end="120:25">4</literal></expr>;</condition> <incr pos:start="120:28" pos:end="120:30"><expr pos:start="120:28" pos:end="120:30"><name pos:start="120:28" pos:end="120:28">i</name><operator pos:start="120:29" pos:end="120:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="122:13" pos:end="122:24"><block_content pos:start="122:13" pos:end="122:24">

            <expr_stmt pos:start="122:13" pos:end="122:24"><expr pos:start="122:13" pos:end="122:23"><name pos:start="122:13" pos:end="122:19"><name pos:start="122:13" pos:end="122:16">cmap</name><index pos:start="122:17" pos:end="122:19">[<expr pos:start="122:18" pos:end="122:18"><name pos:start="122:18" pos:end="122:18">i</name></expr>]</index></name> <operator pos:start="122:21" pos:end="122:21">=</operator> <name pos:start="122:23" pos:end="122:23">i</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for> <if_stmt pos:start="124:7" pos:end="276:15"><else pos:start="124:7" pos:end="276:15">else <block pos:start="124:12" pos:end="276:15">{<block_content pos:start="126:9" pos:end="276:15">

        <expr_stmt pos:start="126:9" pos:end="128:48"><expr pos:start="126:9" pos:end="128:47"><call pos:start="126:9" pos:end="128:47"><name pos:start="126:9" pos:end="126:23">build_color_map</name><argument_list pos:start="126:24" pos:end="128:47">(<argument pos:start="126:25" pos:end="126:29"><expr pos:start="126:25" pos:end="126:29"><name pos:start="126:25" pos:end="126:29">avctx</name></expr></argument>, <argument pos:start="126:32" pos:end="126:35"><expr pos:start="126:32" pos:end="126:35"><name pos:start="126:32" pos:end="126:35">cmap</name></expr></argument>, <argument pos:start="126:38" pos:end="126:74"><expr pos:start="126:38" pos:end="126:74"><operator pos:start="126:38" pos:end="126:38">(</operator><name pos:start="126:39" pos:end="126:46">uint32_t</name> <operator pos:start="126:48" pos:end="126:48">*</operator><operator pos:start="126:49" pos:end="126:49">)</operator><name pos:start="126:50" pos:end="126:60"><name pos:start="126:50" pos:end="126:50">h</name><operator pos:start="126:51" pos:end="126:52">-&gt;</operator><name pos:start="126:53" pos:end="126:57">rects</name><index pos:start="126:58" pos:end="126:60">[<expr pos:start="126:59" pos:end="126:59"><literal type="number" pos:start="126:59" pos:end="126:59">0</literal></expr>]</index></name><operator pos:start="126:61" pos:end="126:62">-&gt;</operator><name pos:start="126:63" pos:end="126:74"><name pos:start="126:63" pos:end="126:66">pict</name><operator pos:start="126:67" pos:end="126:67">.</operator><name pos:start="126:68" pos:end="126:71">data</name><index pos:start="126:72" pos:end="126:74">[<expr pos:start="126:73" pos:end="126:73"><literal type="number" pos:start="126:73" pos:end="126:73">1</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="128:25" pos:end="128:35"><expr pos:start="128:25" pos:end="128:35"><name pos:start="128:25" pos:end="128:35">out_palette</name></expr></argument>, <argument pos:start="128:38" pos:end="128:46"><expr pos:start="128:38" pos:end="128:46"><name pos:start="128:38" pos:end="128:46">out_alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="133:5" pos:end="133:53"><expr pos:start="133:5" pos:end="133:52"><call pos:start="133:5" pos:end="133:52"><name pos:start="133:5" pos:end="133:10">av_log</name><argument_list pos:start="133:11" pos:end="133:52">(<argument pos:start="133:12" pos:end="133:16"><expr pos:start="133:12" pos:end="133:16"><name pos:start="133:12" pos:end="133:16">avctx</name></expr></argument>, <argument pos:start="133:19" pos:end="133:30"><expr pos:start="133:19" pos:end="133:30"><name pos:start="133:19" pos:end="133:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="133:33" pos:end="133:51"><expr pos:start="133:33" pos:end="133:51"><literal type="string" pos:start="133:33" pos:end="133:51">"Selected palette:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="135:5" pos:end="141:50">for <control pos:start="135:9" pos:end="135:27">(<init pos:start="135:10" pos:end="135:15"><expr pos:start="135:10" pos:end="135:14"><name pos:start="135:10" pos:end="135:10">i</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <literal type="number" pos:start="135:14" pos:end="135:14">0</literal></expr>;</init> <condition pos:start="135:17" pos:end="135:22"><expr pos:start="135:17" pos:end="135:21"><name pos:start="135:17" pos:end="135:17">i</name> <operator pos:start="135:19" pos:end="135:19">&lt;</operator> <literal type="number" pos:start="135:21" pos:end="135:21">4</literal></expr>;</condition> <incr pos:start="135:24" pos:end="135:26"><expr pos:start="135:24" pos:end="135:26"><name pos:start="135:24" pos:end="135:24">i</name><operator pos:start="135:25" pos:end="135:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="137:9" pos:end="141:50"><block_content pos:start="137:9" pos:end="141:50">

        <expr_stmt pos:start="137:9" pos:end="141:50"><expr pos:start="137:9" pos:end="141:49"><call pos:start="137:9" pos:end="141:49"><name pos:start="137:9" pos:end="137:14">av_log</name><argument_list pos:start="137:15" pos:end="141:49">(<argument pos:start="137:16" pos:end="137:20"><expr pos:start="137:16" pos:end="137:20"><name pos:start="137:16" pos:end="137:20">avctx</name></expr></argument>, <argument pos:start="137:23" pos:end="137:34"><expr pos:start="137:23" pos:end="137:34"><name pos:start="137:23" pos:end="137:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="137:37" pos:end="137:63"><expr pos:start="137:37" pos:end="137:63"><literal type="string" pos:start="137:37" pos:end="137:63">" 0x%06x@@%02x (0x%x,0x%x)"</literal></expr></argument>,

               <argument pos:start="139:16" pos:end="139:51"><expr pos:start="139:16" pos:end="139:51"><name pos:start="139:16" pos:end="139:51"><name pos:start="139:16" pos:end="139:19">dvdc</name><operator pos:start="139:20" pos:end="139:21">-&gt;</operator><name pos:start="139:22" pos:end="139:35">global_palette</name><index pos:start="139:36" pos:end="139:51">[<expr pos:start="139:37" pos:end="139:50"><name pos:start="139:37" pos:end="139:50"><name pos:start="139:37" pos:end="139:47">out_palette</name><index pos:start="139:48" pos:end="139:50">[<expr pos:start="139:49" pos:end="139:49"><name pos:start="139:49" pos:end="139:49">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="139:54" pos:end="139:65"><expr pos:start="139:54" pos:end="139:65"><name pos:start="139:54" pos:end="139:65"><name pos:start="139:54" pos:end="139:62">out_alpha</name><index pos:start="139:63" pos:end="139:65">[<expr pos:start="139:64" pos:end="139:64"><name pos:start="139:64" pos:end="139:64">i</name></expr>]</index></name></expr></argument>,

               <argument pos:start="141:16" pos:end="141:29"><expr pos:start="141:16" pos:end="141:29"><name pos:start="141:16" pos:end="141:29"><name pos:start="141:16" pos:end="141:26">out_palette</name><index pos:start="141:27" pos:end="141:29">[<expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">i</name></expr>]</index></name></expr></argument>, <argument pos:start="141:32" pos:end="141:48"><expr pos:start="141:32" pos:end="141:48"><name pos:start="141:32" pos:end="141:43"><name pos:start="141:32" pos:end="141:40">out_alpha</name><index pos:start="141:41" pos:end="141:43">[<expr pos:start="141:42" pos:end="141:42"><name pos:start="141:42" pos:end="141:42">i</name></expr>]</index></name> <operator pos:start="141:45" pos:end="141:46">&gt;&gt;</operator> <literal type="number" pos:start="141:48" pos:end="141:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="143:5" pos:end="143:38"><expr pos:start="143:5" pos:end="143:37"><call pos:start="143:5" pos:end="143:37"><name pos:start="143:5" pos:end="143:10">av_log</name><argument_list pos:start="143:11" pos:end="143:37">(<argument pos:start="143:12" pos:end="143:16"><expr pos:start="143:12" pos:end="143:16"><name pos:start="143:12" pos:end="143:16">avctx</name></expr></argument>, <argument pos:start="143:19" pos:end="143:30"><expr pos:start="143:19" pos:end="143:30"><name pos:start="143:19" pos:end="143:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="143:33" pos:end="143:36"><expr pos:start="143:33" pos:end="143:36"><literal type="string" pos:start="143:33" pos:end="143:36">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="147:5" pos:end="147:24">// encode data block</comment>

    <expr_stmt pos:start="149:5" pos:end="149:19"><expr pos:start="149:5" pos:end="149:18"><name pos:start="149:5" pos:end="149:5">q</name> <operator pos:start="149:7" pos:end="149:7">=</operator> <name pos:start="149:9" pos:end="149:14">outbuf</name> <operator pos:start="149:16" pos:end="149:16">+</operator> <literal type="number" pos:start="149:18" pos:end="149:18">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:25"><expr pos:start="151:5" pos:end="151:24"><name pos:start="151:5" pos:end="151:11">offset1</name> <operator pos:start="151:13" pos:end="151:13">=</operator> <name pos:start="151:15" pos:end="151:15">q</name> <operator pos:start="151:17" pos:end="151:17">-</operator> <name pos:start="151:19" pos:end="151:24">outbuf</name></expr>;</expr_stmt>

    <comment type="line" pos:start="153:5" pos:end="153:58">// worst case memory requirement: 1 nibble per pixel..</comment>

    <if_stmt pos:start="155:5" pos:end="276:15"><if pos:start="155:5" pos:end="276:15">if <condition pos:start="155:8" pos:end="155:69">(<expr pos:start="155:9" pos:end="155:68"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:10">q</name> <operator pos:start="155:12" pos:end="155:12">-</operator> <name pos:start="155:14" pos:end="155:19">outbuf</name><operator pos:start="155:20" pos:end="155:20">)</operator> <operator pos:start="155:22" pos:end="155:22">+</operator> <name pos:start="155:24" pos:end="155:30"><name pos:start="155:24" pos:end="155:28">vrect</name><operator pos:start="155:29" pos:end="155:29">.</operator><name pos:start="155:30" pos:end="155:30">w</name></name> <operator pos:start="155:32" pos:end="155:32">*</operator> <name pos:start="155:34" pos:end="155:40"><name pos:start="155:34" pos:end="155:38">vrect</name><operator pos:start="155:39" pos:end="155:39">.</operator><name pos:start="155:40" pos:end="155:40">h</name></name> <operator pos:start="155:42" pos:end="155:42">/</operator> <literal type="number" pos:start="155:44" pos:end="155:46">2</literal> <operator pos:start="155:46" pos:end="155:46">+</operator> <literal type="number" pos:start="155:48" pos:end="155:51">17</literal> <operator pos:start="155:51" pos:end="155:51">+</operator> <literal type="number" pos:start="155:53" pos:end="155:54">21</literal> <operator pos:start="155:56" pos:end="155:56">&gt;</operator> <name pos:start="155:58" pos:end="155:68">outbuf_size</name></expr>)</condition> <block pos:start="155:71" pos:end="276:15">{<block_content pos:start="157:9" pos:end="276:15">

        <expr_stmt pos:start="157:9" pos:end="157:61"><expr pos:start="157:9" pos:end="157:60"><call pos:start="157:9" pos:end="157:60"><name pos:start="157:9" pos:end="157:14">av_log</name><argument_list pos:start="157:15" pos:end="157:60">(<argument pos:start="157:16" pos:end="157:19"><expr pos:start="157:16" pos:end="157:19"><name pos:start="157:16" pos:end="157:19">NULL</name></expr></argument>, <argument pos:start="157:22" pos:end="157:33"><expr pos:start="157:22" pos:end="157:33"><name pos:start="157:22" pos:end="157:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="157:36" pos:end="157:59"><expr pos:start="157:36" pos:end="157:59"><literal type="string" pos:start="157:36" pos:end="157:59">"dvd_subtitle too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:39"><expr pos:start="159:9" pos:end="159:38"><name pos:start="159:9" pos:end="159:11">ret</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <name pos:start="159:15" pos:end="159:38">AVERROR_BUFFER_TOO_SMALL</name></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:18">goto <name pos:start="161:14" pos:end="161:17">fail</name>;</goto>


    <expr_stmt pos:start="164:5" pos:end="166:54"><expr pos:start="164:5" pos:end="166:53"><call pos:start="164:5" pos:end="166:53"><name pos:start="164:5" pos:end="164:18">dvd_encode_rle</name><argument_list pos:start="164:19" pos:end="166:53">(<argument pos:start="164:20" pos:end="164:21"><expr pos:start="164:20" pos:end="164:21"><operator pos:start="164:20" pos:end="164:20">&amp;</operator><name pos:start="164:21" pos:end="164:21">q</name></expr></argument>, <argument pos:start="164:24" pos:end="164:41"><expr pos:start="164:24" pos:end="164:41"><name pos:start="164:24" pos:end="164:41"><name pos:start="164:24" pos:end="164:28">vrect</name><operator pos:start="164:29" pos:end="164:29">.</operator><name pos:start="164:30" pos:end="164:33">pict</name><operator pos:start="164:34" pos:end="164:34">.</operator><name pos:start="164:35" pos:end="164:38">data</name><index pos:start="164:39" pos:end="164:41">[<expr pos:start="164:40" pos:end="164:40"><literal type="number" pos:start="164:40" pos:end="164:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="164:44" pos:end="164:54"><expr pos:start="164:44" pos:end="164:54"><name pos:start="164:44" pos:end="164:50"><name pos:start="164:44" pos:end="164:48">vrect</name><operator pos:start="164:49" pos:end="164:49">.</operator><name pos:start="164:50" pos:end="164:50">w</name></name> <operator pos:start="164:52" pos:end="164:52">*</operator> <literal type="number" pos:start="164:54" pos:end="164:54">2</literal></expr></argument>,

                   <argument pos:start="166:20" pos:end="166:26"><expr pos:start="166:20" pos:end="166:26"><name pos:start="166:20" pos:end="166:26"><name pos:start="166:20" pos:end="166:24">vrect</name><operator pos:start="166:25" pos:end="166:25">.</operator><name pos:start="166:26" pos:end="166:26">w</name></name></expr></argument>, <argument pos:start="166:29" pos:end="166:46"><expr pos:start="166:29" pos:end="166:46"><operator pos:start="166:29" pos:end="166:29">(</operator><name pos:start="166:30" pos:end="166:36"><name pos:start="166:30" pos:end="166:34">vrect</name><operator pos:start="166:35" pos:end="166:35">.</operator><name pos:start="166:36" pos:end="166:36">h</name></name> <operator pos:start="166:38" pos:end="166:38">+</operator> <literal type="number" pos:start="166:40" pos:end="166:40">1</literal><operator pos:start="166:41" pos:end="166:41">)</operator> <operator pos:start="166:43" pos:end="166:44">&gt;&gt;</operator> <literal type="number" pos:start="166:46" pos:end="166:46">1</literal></expr></argument>, <argument pos:start="166:49" pos:end="166:52"><expr pos:start="166:49" pos:end="166:52"><name pos:start="166:49" pos:end="166:52">cmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="168:5" pos:end="168:25"><expr pos:start="168:5" pos:end="168:24"><name pos:start="168:5" pos:end="168:11">offset2</name> <operator pos:start="168:13" pos:end="168:13">=</operator> <name pos:start="168:15" pos:end="168:15">q</name> <operator pos:start="168:17" pos:end="168:17">-</operator> <name pos:start="168:19" pos:end="168:24">outbuf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="170:5" pos:end="172:48"><expr pos:start="170:5" pos:end="172:47"><call pos:start="170:5" pos:end="172:47"><name pos:start="170:5" pos:end="170:18">dvd_encode_rle</name><argument_list pos:start="170:19" pos:end="172:47">(<argument pos:start="170:20" pos:end="170:21"><expr pos:start="170:20" pos:end="170:21"><operator pos:start="170:20" pos:end="170:20">&amp;</operator><name pos:start="170:21" pos:end="170:21">q</name></expr></argument>, <argument pos:start="170:24" pos:end="170:51"><expr pos:start="170:24" pos:end="170:51"><name pos:start="170:24" pos:end="170:41"><name pos:start="170:24" pos:end="170:28">vrect</name><operator pos:start="170:29" pos:end="170:29">.</operator><name pos:start="170:30" pos:end="170:33">pict</name><operator pos:start="170:34" pos:end="170:34">.</operator><name pos:start="170:35" pos:end="170:38">data</name><index pos:start="170:39" pos:end="170:41">[<expr pos:start="170:40" pos:end="170:40"><literal type="number" pos:start="170:40" pos:end="170:40">0</literal></expr>]</index></name> <operator pos:start="170:43" pos:end="170:43">+</operator> <name pos:start="170:45" pos:end="170:51"><name pos:start="170:45" pos:end="170:49">vrect</name><operator pos:start="170:50" pos:end="170:50">.</operator><name pos:start="170:51" pos:end="170:51">w</name></name></expr></argument>, <argument pos:start="170:54" pos:end="170:64"><expr pos:start="170:54" pos:end="170:64"><name pos:start="170:54" pos:end="170:60"><name pos:start="170:54" pos:end="170:58">vrect</name><operator pos:start="170:59" pos:end="170:59">.</operator><name pos:start="170:60" pos:end="170:60">w</name></name> <operator pos:start="170:62" pos:end="170:62">*</operator> <literal type="number" pos:start="170:64" pos:end="170:64">2</literal></expr></argument>,

                   <argument pos:start="172:20" pos:end="172:26"><expr pos:start="172:20" pos:end="172:26"><name pos:start="172:20" pos:end="172:26"><name pos:start="172:20" pos:end="172:24">vrect</name><operator pos:start="172:25" pos:end="172:25">.</operator><name pos:start="172:26" pos:end="172:26">w</name></name></expr></argument>, <argument pos:start="172:29" pos:end="172:40"><expr pos:start="172:29" pos:end="172:40"><name pos:start="172:29" pos:end="172:35"><name pos:start="172:29" pos:end="172:33">vrect</name><operator pos:start="172:34" pos:end="172:34">.</operator><name pos:start="172:35" pos:end="172:35">h</name></name> <operator pos:start="172:37" pos:end="172:38">&gt;&gt;</operator> <literal type="number" pos:start="172:40" pos:end="172:40">1</literal></expr></argument>, <argument pos:start="172:43" pos:end="172:46"><expr pos:start="172:43" pos:end="172:46"><name pos:start="172:43" pos:end="172:46">cmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="176:5" pos:end="176:27">// set data packet size</comment>

    <expr_stmt pos:start="178:5" pos:end="178:20"><expr pos:start="178:5" pos:end="178:19"><name pos:start="178:5" pos:end="178:6">qq</name> <operator pos:start="178:8" pos:end="178:8">=</operator> <name pos:start="178:10" pos:end="178:15">outbuf</name> <operator pos:start="178:17" pos:end="178:17">+</operator> <literal type="number" pos:start="178:19" pos:end="178:19">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="180:5" pos:end="180:41"><expr pos:start="180:5" pos:end="180:40"><call pos:start="180:5" pos:end="180:40"><name pos:start="180:5" pos:end="180:23">bytestream_put_be16</name><argument_list pos:start="180:24" pos:end="180:40">(<argument pos:start="180:25" pos:end="180:27"><expr pos:start="180:25" pos:end="180:27"><operator pos:start="180:25" pos:end="180:25">&amp;</operator><name pos:start="180:26" pos:end="180:27">qq</name></expr></argument>, <argument pos:start="180:30" pos:end="180:39"><expr pos:start="180:30" pos:end="180:39"><name pos:start="180:30" pos:end="180:30">q</name> <operator pos:start="180:32" pos:end="180:32">-</operator> <name pos:start="180:34" pos:end="180:39">outbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="184:5" pos:end="184:33">// send start display command</comment>

    <expr_stmt pos:start="186:5" pos:end="186:62"><expr pos:start="186:5" pos:end="186:61"><call pos:start="186:5" pos:end="186:61"><name pos:start="186:5" pos:end="186:23">bytestream_put_be16</name><argument_list pos:start="186:24" pos:end="186:61">(<argument pos:start="186:25" pos:end="186:26"><expr pos:start="186:25" pos:end="186:26"><operator pos:start="186:25" pos:end="186:25">&amp;</operator><name pos:start="186:26" pos:end="186:26">q</name></expr></argument>, <argument pos:start="186:29" pos:end="186:60"><expr pos:start="186:29" pos:end="186:60"><operator pos:start="186:29" pos:end="186:29">(</operator><name pos:start="186:30" pos:end="186:50"><name pos:start="186:30" pos:end="186:30">h</name><operator pos:start="186:31" pos:end="186:32">-&gt;</operator><name pos:start="186:33" pos:end="186:50">start_display_time</name></name><operator pos:start="186:51" pos:end="186:51">*</operator><literal type="number" pos:start="186:52" pos:end="186:53">90</literal><operator pos:start="186:54" pos:end="186:54">)</operator> <operator pos:start="186:56" pos:end="186:57">&gt;&gt;</operator> <literal type="number" pos:start="186:59" pos:end="186:60">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="188:5" pos:end="188:64"><expr pos:start="188:5" pos:end="188:63"><call pos:start="188:5" pos:end="188:63"><name pos:start="188:5" pos:end="188:23">bytestream_put_be16</name><argument_list pos:start="188:24" pos:end="188:63">(<argument pos:start="188:25" pos:end="188:26"><expr pos:start="188:25" pos:end="188:26"><operator pos:start="188:25" pos:end="188:25">&amp;</operator><name pos:start="188:26" pos:end="188:26">q</name></expr></argument>, <argument pos:start="188:29" pos:end="188:62"><expr pos:start="188:29" pos:end="188:62"><operator pos:start="188:29" pos:end="188:29">(</operator><name pos:start="188:30" pos:end="188:30">q</name> <operator pos:start="188:32" pos:end="188:32">-</operator> <name pos:start="188:34" pos:end="188:39">outbuf</name><operator pos:start="188:40" pos:end="188:40">)</operator> <comment type="block" pos:start="188:42" pos:end="188:49">/*- 2 */</comment> <operator pos:start="188:51" pos:end="188:51">+</operator> <literal type="number" pos:start="188:53" pos:end="188:55">8</literal> <operator pos:start="188:55" pos:end="188:55">+</operator> <literal type="number" pos:start="188:57" pos:end="188:60">12</literal> <operator pos:start="188:60" pos:end="188:60">+</operator> <literal type="number" pos:start="188:62" pos:end="188:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="190:5" pos:end="190:16"><expr pos:start="190:5" pos:end="190:15"><operator pos:start="190:5" pos:end="190:5">*</operator><name pos:start="190:6" pos:end="190:6">q</name><operator pos:start="190:7" pos:end="190:8">++</operator> <operator pos:start="190:10" pos:end="190:10">=</operator> <literal type="number" pos:start="190:12" pos:end="190:15">0x03</literal></expr>;</expr_stmt> <comment type="line" pos:start="190:18" pos:end="190:39">// palette - 4 nibbles</comment>

    <expr_stmt pos:start="192:5" pos:end="192:50"><expr pos:start="192:5" pos:end="192:49"><operator pos:start="192:5" pos:end="192:5">*</operator><name pos:start="192:6" pos:end="192:6">q</name><operator pos:start="192:7" pos:end="192:8">++</operator> <operator pos:start="192:10" pos:end="192:10">=</operator> <operator pos:start="192:12" pos:end="192:12">(</operator><name pos:start="192:13" pos:end="192:26"><name pos:start="192:13" pos:end="192:23">out_palette</name><index pos:start="192:24" pos:end="192:26">[<expr pos:start="192:25" pos:end="192:25"><literal type="number" pos:start="192:25" pos:end="192:25">3</literal></expr>]</index></name> <operator pos:start="192:28" pos:end="192:29">&lt;&lt;</operator> <literal type="number" pos:start="192:31" pos:end="192:31">4</literal><operator pos:start="192:32" pos:end="192:32">)</operator> <operator pos:start="192:34" pos:end="192:34">|</operator> <name pos:start="192:36" pos:end="192:49"><name pos:start="192:36" pos:end="192:46">out_palette</name><index pos:start="192:47" pos:end="192:49">[<expr pos:start="192:48" pos:end="192:48"><literal type="number" pos:start="192:48" pos:end="192:48">2</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="194:5" pos:end="194:50"><expr pos:start="194:5" pos:end="194:49"><operator pos:start="194:5" pos:end="194:5">*</operator><name pos:start="194:6" pos:end="194:6">q</name><operator pos:start="194:7" pos:end="194:8">++</operator> <operator pos:start="194:10" pos:end="194:10">=</operator> <operator pos:start="194:12" pos:end="194:12">(</operator><name pos:start="194:13" pos:end="194:26"><name pos:start="194:13" pos:end="194:23">out_palette</name><index pos:start="194:24" pos:end="194:26">[<expr pos:start="194:25" pos:end="194:25"><literal type="number" pos:start="194:25" pos:end="194:25">1</literal></expr>]</index></name> <operator pos:start="194:28" pos:end="194:29">&lt;&lt;</operator> <literal type="number" pos:start="194:31" pos:end="194:31">4</literal><operator pos:start="194:32" pos:end="194:32">)</operator> <operator pos:start="194:34" pos:end="194:34">|</operator> <name pos:start="194:36" pos:end="194:49"><name pos:start="194:36" pos:end="194:46">out_palette</name><index pos:start="194:47" pos:end="194:49">[<expr pos:start="194:48" pos:end="194:48"><literal type="number" pos:start="194:48" pos:end="194:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="196:5" pos:end="196:16"><expr pos:start="196:5" pos:end="196:15"><operator pos:start="196:5" pos:end="196:5">*</operator><name pos:start="196:6" pos:end="196:6">q</name><operator pos:start="196:7" pos:end="196:8">++</operator> <operator pos:start="196:10" pos:end="196:10">=</operator> <literal type="number" pos:start="196:12" pos:end="196:15">0x04</literal></expr>;</expr_stmt> <comment type="line" pos:start="196:18" pos:end="196:37">// alpha - 4 nibbles</comment>

    <expr_stmt pos:start="198:5" pos:end="198:55"><expr pos:start="198:5" pos:end="198:54"><operator pos:start="198:5" pos:end="198:5">*</operator><name pos:start="198:6" pos:end="198:6">q</name><operator pos:start="198:7" pos:end="198:8">++</operator> <operator pos:start="198:10" pos:end="198:10">=</operator> <operator pos:start="198:12" pos:end="198:12">(</operator><name pos:start="198:13" pos:end="198:24"><name pos:start="198:13" pos:end="198:21">out_alpha</name><index pos:start="198:22" pos:end="198:24">[<expr pos:start="198:23" pos:end="198:23"><literal type="number" pos:start="198:23" pos:end="198:23">3</literal></expr>]</index></name> <operator pos:start="198:26" pos:end="198:26">&amp;</operator> <literal type="number" pos:start="198:28" pos:end="198:31">0xF0</literal><operator pos:start="198:32" pos:end="198:32">)</operator> <operator pos:start="198:34" pos:end="198:34">|</operator> <operator pos:start="198:36" pos:end="198:36">(</operator><name pos:start="198:37" pos:end="198:48"><name pos:start="198:37" pos:end="198:45">out_alpha</name><index pos:start="198:46" pos:end="198:48">[<expr pos:start="198:47" pos:end="198:47"><literal type="number" pos:start="198:47" pos:end="198:47">2</literal></expr>]</index></name> <operator pos:start="198:50" pos:end="198:51">&gt;&gt;</operator> <literal type="number" pos:start="198:53" pos:end="198:53">4</literal><operator pos:start="198:54" pos:end="198:54">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="200:5" pos:end="200:55"><expr pos:start="200:5" pos:end="200:54"><operator pos:start="200:5" pos:end="200:5">*</operator><name pos:start="200:6" pos:end="200:6">q</name><operator pos:start="200:7" pos:end="200:8">++</operator> <operator pos:start="200:10" pos:end="200:10">=</operator> <operator pos:start="200:12" pos:end="200:12">(</operator><name pos:start="200:13" pos:end="200:24"><name pos:start="200:13" pos:end="200:21">out_alpha</name><index pos:start="200:22" pos:end="200:24">[<expr pos:start="200:23" pos:end="200:23"><literal type="number" pos:start="200:23" pos:end="200:23">1</literal></expr>]</index></name> <operator pos:start="200:26" pos:end="200:26">&amp;</operator> <literal type="number" pos:start="200:28" pos:end="200:31">0xF0</literal><operator pos:start="200:32" pos:end="200:32">)</operator> <operator pos:start="200:34" pos:end="200:34">|</operator> <operator pos:start="200:36" pos:end="200:36">(</operator><name pos:start="200:37" pos:end="200:48"><name pos:start="200:37" pos:end="200:45">out_alpha</name><index pos:start="200:46" pos:end="200:48">[<expr pos:start="200:47" pos:end="200:47"><literal type="number" pos:start="200:47" pos:end="200:47">0</literal></expr>]</index></name> <operator pos:start="200:50" pos:end="200:51">&gt;&gt;</operator> <literal type="number" pos:start="200:53" pos:end="200:53">4</literal><operator pos:start="200:54" pos:end="200:54">)</operator></expr>;</expr_stmt>



    <comment type="line" pos:start="204:5" pos:end="204:24">// 12 bytes per rect</comment>

    <expr_stmt pos:start="206:5" pos:end="206:31"><expr pos:start="206:5" pos:end="206:30"><name pos:start="206:5" pos:end="206:6">x2</name> <operator pos:start="206:8" pos:end="206:8">=</operator> <name pos:start="206:10" pos:end="206:16"><name pos:start="206:10" pos:end="206:14">vrect</name><operator pos:start="206:15" pos:end="206:15">.</operator><name pos:start="206:16" pos:end="206:16">x</name></name> <operator pos:start="206:18" pos:end="206:18">+</operator> <name pos:start="206:20" pos:end="206:26"><name pos:start="206:20" pos:end="206:24">vrect</name><operator pos:start="206:25" pos:end="206:25">.</operator><name pos:start="206:26" pos:end="206:26">w</name></name> <operator pos:start="206:28" pos:end="206:28">-</operator> <literal type="number" pos:start="206:30" pos:end="206:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="208:5" pos:end="208:31"><expr pos:start="208:5" pos:end="208:30"><name pos:start="208:5" pos:end="208:6">y2</name> <operator pos:start="208:8" pos:end="208:8">=</operator> <name pos:start="208:10" pos:end="208:16"><name pos:start="208:10" pos:end="208:14">vrect</name><operator pos:start="208:15" pos:end="208:15">.</operator><name pos:start="208:16" pos:end="208:16">y</name></name> <operator pos:start="208:18" pos:end="208:18">+</operator> <name pos:start="208:20" pos:end="208:26"><name pos:start="208:20" pos:end="208:24">vrect</name><operator pos:start="208:25" pos:end="208:25">.</operator><name pos:start="208:26" pos:end="208:26">h</name></name> <operator pos:start="208:28" pos:end="208:28">-</operator> <literal type="number" pos:start="208:30" pos:end="208:30">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="212:5" pos:end="212:16"><expr pos:start="212:5" pos:end="212:15"><operator pos:start="212:5" pos:end="212:5">*</operator><name pos:start="212:6" pos:end="212:6">q</name><operator pos:start="212:7" pos:end="212:8">++</operator> <operator pos:start="212:10" pos:end="212:10">=</operator> <literal type="number" pos:start="212:12" pos:end="212:15">0x05</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="214:5" pos:end="214:25">// x1 x2 -&gt; 6 nibbles</comment>

    <expr_stmt pos:start="216:5" pos:end="216:24"><expr pos:start="216:5" pos:end="216:23"><operator pos:start="216:5" pos:end="216:5">*</operator><name pos:start="216:6" pos:end="216:6">q</name><operator pos:start="216:7" pos:end="216:8">++</operator> <operator pos:start="216:10" pos:end="216:10">=</operator> <name pos:start="216:12" pos:end="216:18"><name pos:start="216:12" pos:end="216:16">vrect</name><operator pos:start="216:17" pos:end="216:17">.</operator><name pos:start="216:18" pos:end="216:18">x</name></name> <operator pos:start="216:20" pos:end="216:21">&gt;&gt;</operator> <literal type="number" pos:start="216:23" pos:end="216:23">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="218:5" pos:end="218:46"><expr pos:start="218:5" pos:end="218:45"><operator pos:start="218:5" pos:end="218:5">*</operator><name pos:start="218:6" pos:end="218:6">q</name><operator pos:start="218:7" pos:end="218:8">++</operator> <operator pos:start="218:10" pos:end="218:10">=</operator> <operator pos:start="218:12" pos:end="218:12">(</operator><name pos:start="218:13" pos:end="218:19"><name pos:start="218:13" pos:end="218:17">vrect</name><operator pos:start="218:18" pos:end="218:18">.</operator><name pos:start="218:19" pos:end="218:19">x</name></name> <operator pos:start="218:21" pos:end="218:22">&lt;&lt;</operator> <literal type="number" pos:start="218:24" pos:end="218:24">4</literal><operator pos:start="218:25" pos:end="218:25">)</operator> <operator pos:start="218:27" pos:end="218:27">|</operator> <operator pos:start="218:29" pos:end="218:29">(</operator><operator pos:start="218:30" pos:end="218:30">(</operator><name pos:start="218:31" pos:end="218:32">x2</name> <operator pos:start="218:34" pos:end="218:35">&gt;&gt;</operator> <literal type="number" pos:start="218:37" pos:end="218:37">8</literal><operator pos:start="218:38" pos:end="218:38">)</operator> <operator pos:start="218:40" pos:end="218:40">&amp;</operator> <literal type="number" pos:start="218:42" pos:end="218:44">0xf</literal><operator pos:start="218:45" pos:end="218:45">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="220:5" pos:end="220:14"><expr pos:start="220:5" pos:end="220:13"><operator pos:start="220:5" pos:end="220:5">*</operator><name pos:start="220:6" pos:end="220:6">q</name><operator pos:start="220:7" pos:end="220:8">++</operator> <operator pos:start="220:10" pos:end="220:10">=</operator> <name pos:start="220:12" pos:end="220:13">x2</name></expr>;</expr_stmt>

    <comment type="line" pos:start="222:5" pos:end="222:25">// y1 y2 -&gt; 6 nibbles</comment>

    <expr_stmt pos:start="224:5" pos:end="224:24"><expr pos:start="224:5" pos:end="224:23"><operator pos:start="224:5" pos:end="224:5">*</operator><name pos:start="224:6" pos:end="224:6">q</name><operator pos:start="224:7" pos:end="224:8">++</operator> <operator pos:start="224:10" pos:end="224:10">=</operator> <name pos:start="224:12" pos:end="224:18"><name pos:start="224:12" pos:end="224:16">vrect</name><operator pos:start="224:17" pos:end="224:17">.</operator><name pos:start="224:18" pos:end="224:18">y</name></name> <operator pos:start="224:20" pos:end="224:21">&gt;&gt;</operator> <literal type="number" pos:start="224:23" pos:end="224:23">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="226:5" pos:end="226:46"><expr pos:start="226:5" pos:end="226:45"><operator pos:start="226:5" pos:end="226:5">*</operator><name pos:start="226:6" pos:end="226:6">q</name><operator pos:start="226:7" pos:end="226:8">++</operator> <operator pos:start="226:10" pos:end="226:10">=</operator> <operator pos:start="226:12" pos:end="226:12">(</operator><name pos:start="226:13" pos:end="226:19"><name pos:start="226:13" pos:end="226:17">vrect</name><operator pos:start="226:18" pos:end="226:18">.</operator><name pos:start="226:19" pos:end="226:19">y</name></name> <operator pos:start="226:21" pos:end="226:22">&lt;&lt;</operator> <literal type="number" pos:start="226:24" pos:end="226:24">4</literal><operator pos:start="226:25" pos:end="226:25">)</operator> <operator pos:start="226:27" pos:end="226:27">|</operator> <operator pos:start="226:29" pos:end="226:29">(</operator><operator pos:start="226:30" pos:end="226:30">(</operator><name pos:start="226:31" pos:end="226:32">y2</name> <operator pos:start="226:34" pos:end="226:35">&gt;&gt;</operator> <literal type="number" pos:start="226:37" pos:end="226:37">8</literal><operator pos:start="226:38" pos:end="226:38">)</operator> <operator pos:start="226:40" pos:end="226:40">&amp;</operator> <literal type="number" pos:start="226:42" pos:end="226:44">0xf</literal><operator pos:start="226:45" pos:end="226:45">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="228:5" pos:end="228:14"><expr pos:start="228:5" pos:end="228:13"><operator pos:start="228:5" pos:end="228:5">*</operator><name pos:start="228:6" pos:end="228:6">q</name><operator pos:start="228:7" pos:end="228:8">++</operator> <operator pos:start="228:10" pos:end="228:10">=</operator> <name pos:start="228:12" pos:end="228:13">y2</name></expr>;</expr_stmt>



    <expr_stmt pos:start="232:5" pos:end="232:16"><expr pos:start="232:5" pos:end="232:15"><operator pos:start="232:5" pos:end="232:5">*</operator><name pos:start="232:6" pos:end="232:6">q</name><operator pos:start="232:7" pos:end="232:8">++</operator> <operator pos:start="232:10" pos:end="232:10">=</operator> <literal type="number" pos:start="232:12" pos:end="232:15">0x06</literal></expr>;</expr_stmt>

    <comment type="line" pos:start="234:5" pos:end="234:23">// offset1, offset2</comment>

    <expr_stmt pos:start="236:5" pos:end="236:37"><expr pos:start="236:5" pos:end="236:36"><call pos:start="236:5" pos:end="236:36"><name pos:start="236:5" pos:end="236:23">bytestream_put_be16</name><argument_list pos:start="236:24" pos:end="236:36">(<argument pos:start="236:25" pos:end="236:26"><expr pos:start="236:25" pos:end="236:26"><operator pos:start="236:25" pos:end="236:25">&amp;</operator><name pos:start="236:26" pos:end="236:26">q</name></expr></argument>, <argument pos:start="236:29" pos:end="236:35"><expr pos:start="236:29" pos:end="236:35"><name pos:start="236:29" pos:end="236:35">offset1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="238:5" pos:end="238:37"><expr pos:start="238:5" pos:end="238:36"><call pos:start="238:5" pos:end="238:36"><name pos:start="238:5" pos:end="238:23">bytestream_put_be16</name><argument_list pos:start="238:24" pos:end="238:36">(<argument pos:start="238:25" pos:end="238:26"><expr pos:start="238:25" pos:end="238:26"><operator pos:start="238:25" pos:end="238:25">&amp;</operator><name pos:start="238:26" pos:end="238:26">q</name></expr></argument>, <argument pos:start="238:29" pos:end="238:35"><expr pos:start="238:29" pos:end="238:35"><name pos:start="238:29" pos:end="238:35">offset2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="242:5" pos:end="242:16"><expr pos:start="242:5" pos:end="242:15"><operator pos:start="242:5" pos:end="242:5">*</operator><name pos:start="242:6" pos:end="242:6">q</name><operator pos:start="242:7" pos:end="242:8">++</operator> <operator pos:start="242:10" pos:end="242:10">=</operator> <literal type="number" pos:start="242:12" pos:end="242:15">0x01</literal></expr>;</expr_stmt> <comment type="line" pos:start="242:18" pos:end="242:33">// start command</comment>

    <expr_stmt pos:start="244:5" pos:end="244:16"><expr pos:start="244:5" pos:end="244:15"><operator pos:start="244:5" pos:end="244:5">*</operator><name pos:start="244:6" pos:end="244:6">q</name><operator pos:start="244:7" pos:end="244:8">++</operator> <operator pos:start="244:10" pos:end="244:10">=</operator> <literal type="number" pos:start="244:12" pos:end="244:15">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="244:18" pos:end="244:39">// terminating command</comment>



    <comment type="line" pos:start="248:5" pos:end="248:37">// send stop display command last</comment>

    <expr_stmt pos:start="250:5" pos:end="250:60"><expr pos:start="250:5" pos:end="250:59"><call pos:start="250:5" pos:end="250:59"><name pos:start="250:5" pos:end="250:23">bytestream_put_be16</name><argument_list pos:start="250:24" pos:end="250:59">(<argument pos:start="250:25" pos:end="250:26"><expr pos:start="250:25" pos:end="250:26"><operator pos:start="250:25" pos:end="250:25">&amp;</operator><name pos:start="250:26" pos:end="250:26">q</name></expr></argument>, <argument pos:start="250:29" pos:end="250:58"><expr pos:start="250:29" pos:end="250:58"><operator pos:start="250:29" pos:end="250:29">(</operator><name pos:start="250:30" pos:end="250:48"><name pos:start="250:30" pos:end="250:30">h</name><operator pos:start="250:31" pos:end="250:32">-&gt;</operator><name pos:start="250:33" pos:end="250:48">end_display_time</name></name><operator pos:start="250:49" pos:end="250:49">*</operator><literal type="number" pos:start="250:50" pos:end="250:51">90</literal><operator pos:start="250:52" pos:end="250:52">)</operator> <operator pos:start="250:54" pos:end="250:55">&gt;&gt;</operator> <literal type="number" pos:start="250:57" pos:end="250:58">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="252:5" pos:end="252:54"><expr pos:start="252:5" pos:end="252:53"><call pos:start="252:5" pos:end="252:53"><name pos:start="252:5" pos:end="252:23">bytestream_put_be16</name><argument_list pos:start="252:24" pos:end="252:53">(<argument pos:start="252:25" pos:end="252:26"><expr pos:start="252:25" pos:end="252:26"><operator pos:start="252:25" pos:end="252:25">&amp;</operator><name pos:start="252:26" pos:end="252:26">q</name></expr></argument>, <argument pos:start="252:29" pos:end="252:44"><expr pos:start="252:29" pos:end="252:44"><operator pos:start="252:29" pos:end="252:29">(</operator><name pos:start="252:30" pos:end="252:30">q</name> <operator pos:start="252:32" pos:end="252:32">-</operator> <name pos:start="252:34" pos:end="252:39">outbuf</name><operator pos:start="252:40" pos:end="252:40">)</operator> <operator pos:start="252:42" pos:end="252:42">-</operator> <literal type="number" pos:start="252:44" pos:end="252:44">2</literal></expr></argument> <comment type="block" pos:start="252:46" pos:end="252:52">/*+ 4*/</comment>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="254:5" pos:end="254:16"><expr pos:start="254:5" pos:end="254:15"><operator pos:start="254:5" pos:end="254:5">*</operator><name pos:start="254:6" pos:end="254:6">q</name><operator pos:start="254:7" pos:end="254:8">++</operator> <operator pos:start="254:10" pos:end="254:10">=</operator> <literal type="number" pos:start="254:12" pos:end="254:15">0x02</literal></expr>;</expr_stmt> <comment type="line" pos:start="254:18" pos:end="254:27">// set end</comment>

    <expr_stmt pos:start="256:5" pos:end="256:16"><expr pos:start="256:5" pos:end="256:15"><operator pos:start="256:5" pos:end="256:5">*</operator><name pos:start="256:6" pos:end="256:6">q</name><operator pos:start="256:7" pos:end="256:8">++</operator> <operator pos:start="256:10" pos:end="256:10">=</operator> <literal type="number" pos:start="256:12" pos:end="256:15">0xff</literal></expr>;</expr_stmt> <comment type="line" pos:start="256:18" pos:end="256:39">// terminating command</comment>



    <expr_stmt pos:start="260:5" pos:end="260:16"><expr pos:start="260:5" pos:end="260:15"><name pos:start="260:5" pos:end="260:6">qq</name> <operator pos:start="260:8" pos:end="260:8">=</operator> <name pos:start="260:10" pos:end="260:15">outbuf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="262:5" pos:end="262:41"><expr pos:start="262:5" pos:end="262:40"><call pos:start="262:5" pos:end="262:40"><name pos:start="262:5" pos:end="262:23">bytestream_put_be16</name><argument_list pos:start="262:24" pos:end="262:40">(<argument pos:start="262:25" pos:end="262:27"><expr pos:start="262:25" pos:end="262:27"><operator pos:start="262:25" pos:end="262:25">&amp;</operator><name pos:start="262:26" pos:end="262:27">qq</name></expr></argument>, <argument pos:start="262:30" pos:end="262:39"><expr pos:start="262:30" pos:end="262:39"><name pos:start="262:30" pos:end="262:30">q</name> <operator pos:start="262:32" pos:end="262:32">-</operator> <name pos:start="262:34" pos:end="262:39">outbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="266:5" pos:end="266:73"><expr pos:start="266:5" pos:end="266:72"><call pos:start="266:5" pos:end="266:72"><name pos:start="266:5" pos:end="266:10">av_log</name><argument_list pos:start="266:11" pos:end="266:72">(<argument pos:start="266:12" pos:end="266:15"><expr pos:start="266:12" pos:end="266:15"><name pos:start="266:12" pos:end="266:15">NULL</name></expr></argument>, <argument pos:start="266:18" pos:end="266:29"><expr pos:start="266:18" pos:end="266:29"><name pos:start="266:18" pos:end="266:29">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="266:32" pos:end="266:59"><expr pos:start="266:32" pos:end="266:59"><literal type="string" pos:start="266:32" pos:end="266:59">"subtitle_packet size=%td\n"</literal></expr></argument>, <argument pos:start="266:62" pos:end="266:71"><expr pos:start="266:62" pos:end="266:71"><name pos:start="266:62" pos:end="266:62">q</name> <operator pos:start="266:64" pos:end="266:64">-</operator> <name pos:start="266:66" pos:end="266:71">outbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="268:5" pos:end="268:21"><expr pos:start="268:5" pos:end="268:20"><name pos:start="268:5" pos:end="268:7">ret</name> <operator pos:start="268:9" pos:end="268:9">=</operator> <name pos:start="268:11" pos:end="268:11">q</name> <operator pos:start="268:13" pos:end="268:13">-</operator> <name pos:start="268:15" pos:end="268:20">outbuf</name></expr>;</expr_stmt>



<label pos:start="272:1" pos:end="272:5"><name pos:start="272:1" pos:end="272:4">fail</name>:</label>

    <expr_stmt pos:start="274:5" pos:end="274:24"><expr pos:start="274:5" pos:end="274:23"><call pos:start="274:5" pos:end="274:23"><name pos:start="274:5" pos:end="274:11">av_free</name><argument_list pos:start="274:12" pos:end="274:23">(<argument pos:start="274:13" pos:end="274:22"><expr pos:start="274:13" pos:end="274:22"><name pos:start="274:13" pos:end="274:22">vrect_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="276:5" pos:end="276:15">return <expr pos:start="276:12" pos:end="276:14"><name pos:start="276:12" pos:end="276:14">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function>
</unit>
