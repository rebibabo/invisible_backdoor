<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11578.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mjpeg_decode_scan</name><parameter_list pos:start="1:29" pos:end="1:86">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:47">MJpegDecodeContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">s</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:69">nb_components</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:77"><decl pos:start="1:72" pos:end="1:77"><type pos:start="1:72" pos:end="1:77"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:77">Ah</name></decl></parameter>, <parameter pos:start="1:80" pos:end="1:85"><decl pos:start="1:80" pos:end="1:85"><type pos:start="1:80" pos:end="1:85"><name pos:start="1:80" pos:end="1:82">int</name></type> <name pos:start="1:84" pos:end="1:85">Al</name></decl></parameter>)</parameter_list><block pos:start="1:87" pos:end="151:1">{<block_content pos:start="3:5" pos:end="149:13">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:15"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:15">mb_x</name></decl>, <decl pos:start="3:18" pos:end="3:21"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:18" pos:end="3:21">mb_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:11">uint8_t</name><modifier pos:start="5:12" pos:end="5:12">*</modifier></type> <name pos:start="5:14" pos:end="5:33"><name pos:start="5:14" pos:end="5:17">data</name><index pos:start="5:18" pos:end="5:33">[<expr pos:start="5:19" pos:end="5:32"><name pos:start="5:19" pos:end="5:32">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:32"><name pos:start="7:9" pos:end="7:16">linesize</name><index pos:start="7:17" pos:end="7:32">[<expr pos:start="7:18" pos:end="7:31"><name pos:start="7:18" pos:end="7:31">MAX_COMPONENTS</name></expr>]</index></name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for<control pos:start="11:8" pos:end="11:36">(<init pos:start="11:9" pos:end="11:12"><expr pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:9">i</name><operator pos:start="11:10" pos:end="11:10">=</operator><literal type="number" pos:start="11:11" pos:end="11:11">0</literal></expr>;</init> <condition pos:start="11:14" pos:end="11:31"><expr pos:start="11:14" pos:end="11:30"><name pos:start="11:14" pos:end="11:14">i</name> <operator pos:start="11:16" pos:end="11:16">&lt;</operator> <name pos:start="11:18" pos:end="11:30">nb_components</name></expr>;</condition> <incr pos:start="11:33" pos:end="11:35"><expr pos:start="11:33" pos:end="11:35"><name pos:start="11:33" pos:end="11:33">i</name><operator pos:start="11:34" pos:end="11:35">++</operator></expr></incr>)</control> <block pos:start="11:38" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <decl_stmt pos:start="13:9" pos:end="13:33"><decl pos:start="13:9" pos:end="13:32"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:13">c</name> <init pos:start="13:15" pos:end="13:32">= <expr pos:start="13:17" pos:end="13:32"><name pos:start="13:17" pos:end="13:32"><name pos:start="13:17" pos:end="13:17">s</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:29">comp_index</name><index pos:start="13:30" pos:end="13:32">[<expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:37"><expr pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:15"><name pos:start="15:9" pos:end="15:12">data</name><index pos:start="15:13" pos:end="15:15">[<expr pos:start="15:14" pos:end="15:14"><name pos:start="15:14" pos:end="15:14">c</name></expr>]</index></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:36"><name pos:start="15:19" pos:end="15:19">s</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:28">picture</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:33">data</name><index pos:start="15:34" pos:end="15:36">[<expr pos:start="15:35" pos:end="15:35"><name pos:start="15:35" pos:end="15:35">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:35"><expr pos:start="17:9" pos:end="17:34"><name pos:start="17:9" pos:end="17:19"><name pos:start="17:9" pos:end="17:16">linesize</name><index pos:start="17:17" pos:end="17:19">[<expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">c</name></expr>]</index></name><operator pos:start="17:20" pos:end="17:20">=</operator><name pos:start="17:21" pos:end="17:34"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:31">linesize</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><name pos:start="17:33" pos:end="17:33">c</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:25">coefs_finished</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">c</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:31">|=</operator> <literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="31:9"><if pos:start="21:9" pos:end="31:9">if<condition pos:start="21:11" pos:end="21:22">(<expr pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:21"><name pos:start="21:12" pos:end="21:12">s</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:21">flipped</name></name></expr>)</condition> <block pos:start="21:24" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:30">

            <comment type="line" pos:start="23:13" pos:end="23:66">//picture should be flipped upside-down for this codec</comment>

            <expr_stmt pos:start="25:13" pos:end="25:61"><expr pos:start="25:13" pos:end="25:60"><call pos:start="25:13" pos:end="25:60"><name pos:start="25:13" pos:end="25:18">assert</name><argument_list pos:start="25:19" pos:end="25:60">(<argument pos:start="25:20" pos:end="25:59"><expr pos:start="25:20" pos:end="25:59"><operator pos:start="25:20" pos:end="25:20">!</operator><operator pos:start="25:21" pos:end="25:21">(</operator><name pos:start="25:22" pos:end="25:36"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:29">avctx</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:36">flags</name></name> <operator pos:start="25:38" pos:end="25:38">&amp;</operator> <name pos:start="25:40" pos:end="25:58">CODEC_FLAG_EMU_EDGE</name><operator pos:start="25:59" pos:end="25:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:108"><expr pos:start="27:13" pos:end="27:107"><name pos:start="27:13" pos:end="27:19"><name pos:start="27:13" pos:end="27:16">data</name><index pos:start="27:17" pos:end="27:19">[<expr pos:start="27:18" pos:end="27:18"><name pos:start="27:18" pos:end="27:18">c</name></expr>]</index></name> <operator pos:start="27:21" pos:end="27:22">+=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:35"><name pos:start="27:25" pos:end="27:32">linesize</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><name pos:start="27:34" pos:end="27:34">c</name></expr>]</index></name> <operator pos:start="27:37" pos:end="27:37">*</operator> <operator pos:start="27:39" pos:end="27:39">(</operator><name pos:start="27:40" pos:end="27:53"><name pos:start="27:40" pos:end="27:40">s</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:50">v_scount</name><index pos:start="27:51" pos:end="27:53">[<expr pos:start="27:52" pos:end="27:52"><name pos:start="27:52" pos:end="27:52">i</name></expr>]</index></name> <operator pos:start="27:55" pos:end="27:55">*</operator> <operator pos:start="27:57" pos:end="27:57">(</operator><literal type="number" pos:start="27:58" pos:end="27:58">8</literal> <operator pos:start="27:60" pos:end="27:60">*</operator> <name pos:start="27:62" pos:end="27:73"><name pos:start="27:62" pos:end="27:62">s</name><operator pos:start="27:63" pos:end="27:64">-&gt;</operator><name pos:start="27:65" pos:end="27:73">mb_height</name></name> <operator pos:start="27:75" pos:end="27:75">-</operator><operator pos:start="27:76" pos:end="27:76">(</operator><operator pos:start="27:77" pos:end="27:77">(</operator><name pos:start="27:78" pos:end="27:86"><name pos:start="27:78" pos:end="27:78">s</name><operator pos:start="27:79" pos:end="27:80">-&gt;</operator><name pos:start="27:81" pos:end="27:86">height</name></name><operator pos:start="27:87" pos:end="27:87">/</operator><name pos:start="27:88" pos:end="27:95"><name pos:start="27:88" pos:end="27:88">s</name><operator pos:start="27:89" pos:end="27:90">-&gt;</operator><name pos:start="27:91" pos:end="27:95">v_max</name></name><operator pos:start="27:96" pos:end="27:96">)</operator><operator pos:start="27:97" pos:end="27:97">&amp;</operator><literal type="number" pos:start="27:98" pos:end="27:98">7</literal><operator pos:start="27:99" pos:end="27:99">)</operator><operator pos:start="27:100" pos:end="27:100">)</operator> <operator pos:start="27:102" pos:end="27:102">-</operator> <literal type="number" pos:start="27:104" pos:end="27:104">1</literal> <operator pos:start="27:106" pos:end="27:106">)</operator><operator pos:start="27:107" pos:end="27:107">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:29"><name pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:20">linesize</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">c</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:26">*=</operator> <operator pos:start="29:28" pos:end="29:28">-</operator><literal type="number" pos:start="29:29" pos:end="29:29">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <for pos:start="37:5" pos:end="147:5">for<control pos:start="37:8" pos:end="37:46">(<init pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:12">mb_y</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</init> <condition pos:start="37:19" pos:end="37:38"><expr pos:start="37:19" pos:end="37:37"><name pos:start="37:19" pos:end="37:22">mb_y</name> <operator pos:start="37:24" pos:end="37:24">&lt;</operator> <name pos:start="37:26" pos:end="37:37"><name pos:start="37:26" pos:end="37:26">s</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:37">mb_height</name></name></expr>;</condition> <incr pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><name pos:start="37:40" pos:end="37:43">mb_y</name><operator pos:start="37:44" pos:end="37:45">++</operator></expr></incr>)</control> <block pos:start="37:48" pos:end="147:5">{<block_content pos:start="39:9" pos:end="145:9">

        <for pos:start="39:9" pos:end="145:9">for<control pos:start="39:12" pos:end="39:49">(<init pos:start="39:13" pos:end="39:21"><expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:16">mb_x</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</init> <condition pos:start="39:23" pos:end="39:41"><expr pos:start="39:23" pos:end="39:40"><name pos:start="39:23" pos:end="39:26">mb_x</name> <operator pos:start="39:28" pos:end="39:28">&lt;</operator> <name pos:start="39:30" pos:end="39:40"><name pos:start="39:30" pos:end="39:30">s</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:40">mb_width</name></name></expr>;</condition> <incr pos:start="39:43" pos:end="39:48"><expr pos:start="39:43" pos:end="39:48"><name pos:start="39:43" pos:end="39:46">mb_x</name><operator pos:start="39:47" pos:end="39:48">++</operator></expr></incr>)</control> <block pos:start="39:51" pos:end="145:9">{<block_content pos:start="41:13" pos:end="143:13">

            <if_stmt pos:start="41:13" pos:end="43:55"><if pos:start="41:13" pos:end="43:55">if <condition pos:start="41:16" pos:end="41:57">(<expr pos:start="41:17" pos:end="41:56"><name pos:start="41:17" pos:end="41:35"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:35">restart_interval</name></name> <operator pos:start="41:37" pos:end="41:38">&amp;&amp;</operator> <operator pos:start="41:40" pos:end="41:40">!</operator><name pos:start="41:41" pos:end="41:56"><name pos:start="41:41" pos:end="41:41">s</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:56">restart_count</name></name></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:55"><block_content pos:start="43:17" pos:end="43:55">

                <expr_stmt pos:start="43:17" pos:end="43:55"><expr pos:start="43:17" pos:end="43:54"><name pos:start="43:17" pos:end="43:32"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:32">restart_count</name></name> <operator pos:start="43:34" pos:end="43:34">=</operator> <name pos:start="43:36" pos:end="43:54"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:54">restart_interval</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <for pos:start="47:13" pos:end="129:13">for<control pos:start="47:16" pos:end="47:40">(<init pos:start="47:17" pos:end="47:20"><expr pos:start="47:17" pos:end="47:19"><name pos:start="47:17" pos:end="47:17">i</name><operator pos:start="47:18" pos:end="47:18">=</operator><literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>;</init><condition pos:start="47:21" pos:end="47:36"><expr pos:start="47:21" pos:end="47:35"><name pos:start="47:21" pos:end="47:21">i</name><operator pos:start="47:22" pos:end="47:22">&lt;</operator><name pos:start="47:23" pos:end="47:35">nb_components</name></expr>;</condition><incr pos:start="47:37" pos:end="47:39"><expr pos:start="47:37" pos:end="47:39"><name pos:start="47:37" pos:end="47:37">i</name><operator pos:start="47:38" pos:end="47:39">++</operator></expr></incr>)</control> <block pos:start="47:42" pos:end="129:13">{<block_content pos:start="49:17" pos:end="127:17">

                <decl_stmt pos:start="49:17" pos:end="49:29"><decl pos:start="49:17" pos:end="49:28"><type pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:23">uint8_t</name> <modifier pos:start="49:25" pos:end="49:25">*</modifier></type><name pos:start="49:26" pos:end="49:28">ptr</name></decl>;</decl_stmt>

                <decl_stmt pos:start="51:17" pos:end="51:40"><decl pos:start="51:17" pos:end="51:21"><type pos:start="51:17" pos:end="51:19"><name pos:start="51:17" pos:end="51:19">int</name></type> <name pos:start="51:21" pos:end="51:21">n</name></decl>, <decl pos:start="51:24" pos:end="51:24"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:24" pos:end="51:24">h</name></decl>, <decl pos:start="51:27" pos:end="51:27"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:27" pos:end="51:27">v</name></decl>, <decl pos:start="51:30" pos:end="51:30"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:30" pos:end="51:30">x</name></decl>, <decl pos:start="51:33" pos:end="51:33"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:33" pos:end="51:33">y</name></decl>, <decl pos:start="51:36" pos:end="51:36"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:36" pos:end="51:36">c</name></decl>, <decl pos:start="51:39" pos:end="51:39"><type ref="prev" pos:start="51:17" pos:end="51:19"/><name pos:start="51:39" pos:end="51:39">j</name></decl>;</decl_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:36"><expr pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:17">n</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:35"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:32">nb_blocks</name><index pos:start="53:33" pos:end="53:35">[<expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:37"><expr pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:17">c</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <name pos:start="55:21" pos:end="55:36"><name pos:start="55:21" pos:end="55:21">s</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:33">comp_index</name><index pos:start="55:34" pos:end="55:36">[<expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:35"><expr pos:start="57:17" pos:end="57:34"><name pos:start="57:17" pos:end="57:17">h</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:31">h_scount</name><index pos:start="57:32" pos:end="57:34">[<expr pos:start="57:33" pos:end="57:33"><name pos:start="57:33" pos:end="57:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:35"><expr pos:start="59:17" pos:end="59:34"><name pos:start="59:17" pos:end="59:17">v</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:34"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:31">v_scount</name><index pos:start="59:32" pos:end="59:34">[<expr pos:start="59:33" pos:end="59:33"><name pos:start="59:33" pos:end="59:33">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:22"><expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:17">x</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:22"><expr pos:start="63:17" pos:end="63:21"><name pos:start="63:17" pos:end="63:17">y</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">0</literal></expr>;</expr_stmt>

                <for pos:start="65:17" pos:end="127:17">for<control pos:start="65:20" pos:end="65:32">(<init pos:start="65:21" pos:end="65:24"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:21">j</name><operator pos:start="65:22" pos:end="65:22">=</operator><literal type="number" pos:start="65:23" pos:end="65:23">0</literal></expr>;</init><condition pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:25">j</name><operator pos:start="65:26" pos:end="65:26">&lt;</operator><name pos:start="65:27" pos:end="65:27">n</name></expr>;</condition><incr pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:29">j</name><operator pos:start="65:30" pos:end="65:31">++</operator></expr></incr>)</control> <block pos:start="65:34" pos:end="127:17">{<block_content pos:start="67:21" pos:end="125:21">

                    <expr_stmt pos:start="67:21" pos:end="71:65"><expr pos:start="67:21" pos:end="71:64"><name pos:start="67:21" pos:end="67:23">ptr</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:30">data</name><index pos:start="67:31" pos:end="67:33">[<expr pos:start="67:32" pos:end="67:32"><name pos:start="67:32" pos:end="67:32">c</name></expr>]</index></name> <operator pos:start="67:35" pos:end="67:35">+</operator>

                        <operator pos:start="69:25" pos:end="69:25">(</operator><operator pos:start="69:26" pos:end="69:26">(</operator><operator pos:start="69:27" pos:end="69:27">(</operator><name pos:start="69:28" pos:end="69:38"><name pos:start="69:28" pos:end="69:35">linesize</name><index pos:start="69:36" pos:end="69:38">[<expr pos:start="69:37" pos:end="69:37"><name pos:start="69:37" pos:end="69:37">c</name></expr>]</index></name> <operator pos:start="69:40" pos:end="69:40">*</operator> <operator pos:start="69:42" pos:end="69:42">(</operator><name pos:start="69:43" pos:end="69:43">v</name> <operator pos:start="69:45" pos:end="69:45">*</operator> <name pos:start="69:47" pos:end="69:50">mb_y</name> <operator pos:start="69:52" pos:end="69:52">+</operator> <name pos:start="69:54" pos:end="69:54">y</name><operator pos:start="69:55" pos:end="69:55">)</operator> <operator pos:start="69:57" pos:end="69:57">*</operator> <literal type="number" pos:start="69:59" pos:end="69:59">8</literal><operator pos:start="69:60" pos:end="69:60">)</operator> <operator pos:start="69:62" pos:end="69:62">+</operator>

                        <operator pos:start="71:25" pos:end="71:25">(</operator><name pos:start="71:26" pos:end="71:26">h</name> <operator pos:start="71:28" pos:end="71:28">*</operator> <name pos:start="71:30" pos:end="71:33">mb_x</name> <operator pos:start="71:35" pos:end="71:35">+</operator> <name pos:start="71:37" pos:end="71:37">x</name><operator pos:start="71:38" pos:end="71:38">)</operator> <operator pos:start="71:40" pos:end="71:40">*</operator> <literal type="number" pos:start="71:42" pos:end="71:42">8</literal><operator pos:start="71:43" pos:end="71:43">)</operator> <operator pos:start="71:45" pos:end="71:46">&gt;&gt;</operator> <name pos:start="71:48" pos:end="71:63"><name pos:start="71:48" pos:end="71:48">s</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:55">avctx</name><operator pos:start="71:56" pos:end="71:57">-&gt;</operator><name pos:start="71:58" pos:end="71:63">lowres</name></name><operator pos:start="71:64" pos:end="71:64">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="73:21" pos:end="75:48"><if pos:start="73:21" pos:end="75:48">if<condition pos:start="73:23" pos:end="73:56">(<expr pos:start="73:24" pos:end="73:55"><name pos:start="73:24" pos:end="73:36"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:36">interlaced</name></name> <operator pos:start="73:38" pos:end="73:39">&amp;&amp;</operator> <name pos:start="73:41" pos:end="73:55"><name pos:start="73:41" pos:end="73:41">s</name><operator pos:start="73:42" pos:end="73:43">-&gt;</operator><name pos:start="73:44" pos:end="73:55">bottom_field</name></name></expr>)</condition><block type="pseudo" pos:start="75:25" pos:end="75:48"><block_content pos:start="75:25" pos:end="75:48">

                        <expr_stmt pos:start="75:25" pos:end="75:48"><expr pos:start="75:25" pos:end="75:47"><name pos:start="75:25" pos:end="75:27">ptr</name> <operator pos:start="75:29" pos:end="75:30">+=</operator> <name pos:start="75:32" pos:end="75:42"><name pos:start="75:32" pos:end="75:39">linesize</name><index pos:start="75:40" pos:end="75:42">[<expr pos:start="75:41" pos:end="75:41"><name pos:start="75:41" pos:end="75:41">c</name></expr>]</index></name> <operator pos:start="75:44" pos:end="75:45">&gt;&gt;</operator> <literal type="number" pos:start="75:47" pos:end="75:47">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="77:21" pos:end="113:21"><if pos:start="77:21" pos:end="95:21">if<condition pos:start="77:23" pos:end="77:39">(<expr pos:start="77:24" pos:end="77:38"><operator pos:start="77:24" pos:end="77:24">!</operator><name pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:25">s</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:38">progressive</name></name></expr>)</condition> <block pos:start="77:41" pos:end="95:21">{<block_content pos:start="79:25" pos:end="93:68">

                        <expr_stmt pos:start="79:25" pos:end="79:53"><expr pos:start="79:25" pos:end="79:52"><call pos:start="79:25" pos:end="79:52"><name pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:25">s</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:30">dsp</name><operator pos:start="79:31" pos:end="79:31">.</operator><name pos:start="79:32" pos:end="79:42">clear_block</name></name><argument_list pos:start="79:43" pos:end="79:52">(<argument pos:start="79:44" pos:end="79:51"><expr pos:start="79:44" pos:end="79:51"><name pos:start="79:44" pos:end="79:51"><name pos:start="79:44" pos:end="79:44">s</name><operator pos:start="79:45" pos:end="79:46">-&gt;</operator><name pos:start="79:47" pos:end="79:51">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="81:25" pos:end="91:25"><if pos:start="81:25" pos:end="91:25">if<condition pos:start="81:27" pos:end="85:81">(<expr pos:start="81:28" pos:end="85:80"><call pos:start="81:28" pos:end="85:76"><name pos:start="81:28" pos:end="81:39">decode_block</name><argument_list pos:start="81:40" pos:end="85:76">(<argument pos:start="81:41" pos:end="81:41"><expr pos:start="81:41" pos:end="81:41"><name pos:start="81:41" pos:end="81:41">s</name></expr></argument>, <argument pos:start="81:44" pos:end="81:51"><expr pos:start="81:44" pos:end="81:51"><name pos:start="81:44" pos:end="81:51"><name pos:start="81:44" pos:end="81:44">s</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:51">block</name></name></expr></argument>, <argument pos:start="81:54" pos:end="81:54"><expr pos:start="81:54" pos:end="81:54"><name pos:start="81:54" pos:end="81:54">i</name></expr></argument>,

                                     <argument pos:start="83:38" pos:end="83:51"><expr pos:start="83:38" pos:end="83:51"><name pos:start="83:38" pos:end="83:51"><name pos:start="83:38" pos:end="83:38">s</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:48">dc_index</name><index pos:start="83:49" pos:end="83:51">[<expr pos:start="83:50" pos:end="83:50"><name pos:start="83:50" pos:end="83:50">i</name></expr>]</index></name></expr></argument>, <argument pos:start="83:54" pos:end="83:67"><expr pos:start="83:54" pos:end="83:67"><name pos:start="83:54" pos:end="83:67"><name pos:start="83:54" pos:end="83:54">s</name><operator pos:start="83:55" pos:end="83:56">-&gt;</operator><name pos:start="83:57" pos:end="83:64">ac_index</name><index pos:start="83:65" pos:end="83:67">[<expr pos:start="83:66" pos:end="83:66"><name pos:start="83:66" pos:end="83:66">i</name></expr>]</index></name></expr></argument>,

                                     <argument pos:start="85:38" pos:end="85:75"><expr pos:start="85:38" pos:end="85:75"><name pos:start="85:38" pos:end="85:75"><name pos:start="85:38" pos:end="85:38">s</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:54">quant_matrixes</name><index pos:start="85:55" pos:end="85:75">[ <expr pos:start="85:57" pos:end="85:73"><name pos:start="85:57" pos:end="85:73"><name pos:start="85:57" pos:end="85:57">s</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:70">quant_index</name><index pos:start="85:71" pos:end="85:73">[<expr pos:start="85:72" pos:end="85:72"><name pos:start="85:72" pos:end="85:72">c</name></expr>]</index></name></expr> ]</index></name></expr></argument>)</argument_list></call> <operator pos:start="85:78" pos:end="85:78">&lt;</operator> <literal type="number" pos:start="85:80" pos:end="85:80">0</literal></expr>)</condition> <block pos:start="85:83" pos:end="91:25">{<block_content pos:start="87:29" pos:end="89:38">

                            <expr_stmt pos:start="87:29" pos:end="87:92"><expr pos:start="87:29" pos:end="87:91"><call pos:start="87:29" pos:end="87:91"><name pos:start="87:29" pos:end="87:34">av_log</name><argument_list pos:start="87:35" pos:end="87:91">(<argument pos:start="87:36" pos:end="87:43"><expr pos:start="87:36" pos:end="87:43"><name pos:start="87:36" pos:end="87:43"><name pos:start="87:36" pos:end="87:36">s</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:43">avctx</name></name></expr></argument>, <argument pos:start="87:46" pos:end="87:57"><expr pos:start="87:46" pos:end="87:57"><name pos:start="87:46" pos:end="87:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:60" pos:end="87:78"><expr pos:start="87:60" pos:end="87:78"><literal type="string" pos:start="87:60" pos:end="87:78">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="87:81" pos:end="87:84"><expr pos:start="87:81" pos:end="87:84"><name pos:start="87:81" pos:end="87:84">mb_y</name></expr></argument>, <argument pos:start="87:87" pos:end="87:90"><expr pos:start="87:87" pos:end="87:90"><name pos:start="87:87" pos:end="87:90">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="89:29" pos:end="89:38">return <expr pos:start="89:36" pos:end="89:37"><operator pos:start="89:36" pos:end="89:36">-</operator><literal type="number" pos:start="89:37" pos:end="89:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="93:25" pos:end="93:68"><expr pos:start="93:25" pos:end="93:67"><call pos:start="93:25" pos:end="93:67"><name pos:start="93:25" pos:end="93:39"><name pos:start="93:25" pos:end="93:25">s</name><operator pos:start="93:26" pos:end="93:27">-&gt;</operator><name pos:start="93:28" pos:end="93:30">dsp</name><operator pos:start="93:31" pos:end="93:31">.</operator><name pos:start="93:32" pos:end="93:39">idct_put</name></name><argument_list pos:start="93:40" pos:end="93:67">(<argument pos:start="93:41" pos:end="93:43"><expr pos:start="93:41" pos:end="93:43"><name pos:start="93:41" pos:end="93:43">ptr</name></expr></argument>, <argument pos:start="93:46" pos:end="93:56"><expr pos:start="93:46" pos:end="93:56"><name pos:start="93:46" pos:end="93:56"><name pos:start="93:46" pos:end="93:53">linesize</name><index pos:start="93:54" pos:end="93:56">[<expr pos:start="93:55" pos:end="93:55"><name pos:start="93:55" pos:end="93:55">c</name></expr>]</index></name></expr></argument>, <argument pos:start="93:59" pos:end="93:66"><expr pos:start="93:59" pos:end="93:66"><name pos:start="93:59" pos:end="93:66"><name pos:start="93:59" pos:end="93:59">s</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:66">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="95:23" pos:end="113:21">else <block pos:start="95:28" pos:end="113:21">{<block_content pos:start="97:25" pos:end="111:25">

                        <decl_stmt pos:start="97:25" pos:end="97:93"><decl pos:start="97:25" pos:end="97:92"><type pos:start="97:25" pos:end="97:27"><name pos:start="97:25" pos:end="97:27">int</name></type> <name pos:start="97:29" pos:end="97:37">block_idx</name> <init pos:start="97:39" pos:end="97:92">= <expr pos:start="97:41" pos:end="97:92"><name pos:start="97:41" pos:end="97:58"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:55">block_stride</name><index pos:start="97:56" pos:end="97:58">[<expr pos:start="97:57" pos:end="97:57"><name pos:start="97:57" pos:end="97:57">c</name></expr>]</index></name> <operator pos:start="97:60" pos:end="97:60">*</operator> <operator pos:start="97:62" pos:end="97:62">(</operator><name pos:start="97:63" pos:end="97:63">v</name> <operator pos:start="97:65" pos:end="97:65">*</operator> <name pos:start="97:67" pos:end="97:70">mb_y</name> <operator pos:start="97:72" pos:end="97:72">+</operator> <name pos:start="97:74" pos:end="97:74">y</name><operator pos:start="97:75" pos:end="97:75">)</operator> <operator pos:start="97:77" pos:end="97:77">+</operator> <operator pos:start="97:79" pos:end="97:79">(</operator><name pos:start="97:80" pos:end="97:80">h</name> <operator pos:start="97:82" pos:end="97:82">*</operator> <name pos:start="97:84" pos:end="97:87">mb_x</name> <operator pos:start="97:89" pos:end="97:89">+</operator> <name pos:start="97:91" pos:end="97:91">x</name><operator pos:start="97:92" pos:end="97:92">)</operator></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="99:25" pos:end="99:65"><decl pos:start="99:25" pos:end="99:64"><type pos:start="99:25" pos:end="99:33"><name pos:start="99:25" pos:end="99:31">DCTELEM</name> <modifier pos:start="99:33" pos:end="99:33">*</modifier></type><name pos:start="99:34" pos:end="99:38">block</name> <init pos:start="99:40" pos:end="99:64">= <expr pos:start="99:42" pos:end="99:64"><name pos:start="99:42" pos:end="99:64"><name pos:start="99:42" pos:end="99:42">s</name><operator pos:start="99:43" pos:end="99:44">-&gt;</operator><name pos:start="99:45" pos:end="99:50">blocks</name><index pos:start="99:51" pos:end="99:53">[<expr pos:start="99:52" pos:end="99:52"><name pos:start="99:52" pos:end="99:52">c</name></expr>]</index><index pos:start="99:54" pos:end="99:64">[<expr pos:start="99:55" pos:end="99:63"><name pos:start="99:55" pos:end="99:63">block_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="101:25" pos:end="111:25"><if pos:start="101:25" pos:end="103:108">if<condition pos:start="101:27" pos:end="101:30">(<expr pos:start="101:28" pos:end="101:29"><name pos:start="101:28" pos:end="101:29">Ah</name></expr>)</condition><block type="pseudo" pos:start="103:29" pos:end="103:108"><block_content pos:start="103:29" pos:end="103:108">

                            <expr_stmt pos:start="103:29" pos:end="103:108"><expr pos:start="103:29" pos:end="103:107"><name pos:start="103:29" pos:end="103:36"><name pos:start="103:29" pos:end="103:33">block</name><index pos:start="103:34" pos:end="103:36">[<expr pos:start="103:35" pos:end="103:35"><literal type="number" pos:start="103:35" pos:end="103:35">0</literal></expr>]</index></name> <operator pos:start="103:38" pos:end="103:39">+=</operator> <call pos:start="103:41" pos:end="103:57"><name pos:start="103:41" pos:end="103:49">get_bits1</name><argument_list pos:start="103:50" pos:end="103:57">(<argument pos:start="103:51" pos:end="103:56"><expr pos:start="103:51" pos:end="103:56"><operator pos:start="103:51" pos:end="103:51">&amp;</operator><name pos:start="103:52" pos:end="103:56"><name pos:start="103:52" pos:end="103:52">s</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:56">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="103:59" pos:end="103:59">*</operator> <name pos:start="103:61" pos:end="103:101"><name pos:start="103:61" pos:end="103:61">s</name><operator pos:start="103:62" pos:end="103:63">-&gt;</operator><name pos:start="103:64" pos:end="103:77">quant_matrixes</name><index pos:start="103:78" pos:end="103:98">[ <expr pos:start="103:80" pos:end="103:96"><name pos:start="103:80" pos:end="103:96"><name pos:start="103:80" pos:end="103:80">s</name><operator pos:start="103:81" pos:end="103:82">-&gt;</operator><name pos:start="103:83" pos:end="103:93">quant_index</name><index pos:start="103:94" pos:end="103:96">[<expr pos:start="103:95" pos:end="103:95"><name pos:start="103:95" pos:end="103:95">c</name></expr>]</index></name></expr> ]</index><index pos:start="103:99" pos:end="103:101">[<expr pos:start="103:100" pos:end="103:100"><literal type="number" pos:start="103:100" pos:end="103:100">0</literal></expr>]</index></name> <operator pos:start="103:103" pos:end="103:104">&lt;&lt;</operator> <name pos:start="103:106" pos:end="103:107">Al</name></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="105:25" pos:end="111:25">else if<condition pos:start="105:32" pos:end="105:131">(<expr pos:start="105:33" pos:end="105:130"><call pos:start="105:33" pos:end="105:126"><name pos:start="105:33" pos:end="105:53">decode_dc_progressive</name><argument_list pos:start="105:54" pos:end="105:126">(<argument pos:start="105:55" pos:end="105:55"><expr pos:start="105:55" pos:end="105:55"><name pos:start="105:55" pos:end="105:55">s</name></expr></argument>, <argument pos:start="105:58" pos:end="105:62"><expr pos:start="105:58" pos:end="105:62"><name pos:start="105:58" pos:end="105:62">block</name></expr></argument>, <argument pos:start="105:65" pos:end="105:65"><expr pos:start="105:65" pos:end="105:65"><name pos:start="105:65" pos:end="105:65">i</name></expr></argument>, <argument pos:start="105:68" pos:end="105:81"><expr pos:start="105:68" pos:end="105:81"><name pos:start="105:68" pos:end="105:81"><name pos:start="105:68" pos:end="105:68">s</name><operator pos:start="105:69" pos:end="105:70">-&gt;</operator><name pos:start="105:71" pos:end="105:78">dc_index</name><index pos:start="105:79" pos:end="105:81">[<expr pos:start="105:80" pos:end="105:80"><name pos:start="105:80" pos:end="105:80">i</name></expr>]</index></name></expr></argument>, <argument pos:start="105:84" pos:end="105:121"><expr pos:start="105:84" pos:end="105:121"><name pos:start="105:84" pos:end="105:121"><name pos:start="105:84" pos:end="105:84">s</name><operator pos:start="105:85" pos:end="105:86">-&gt;</operator><name pos:start="105:87" pos:end="105:100">quant_matrixes</name><index pos:start="105:101" pos:end="105:121">[ <expr pos:start="105:103" pos:end="105:119"><name pos:start="105:103" pos:end="105:119"><name pos:start="105:103" pos:end="105:103">s</name><operator pos:start="105:104" pos:end="105:105">-&gt;</operator><name pos:start="105:106" pos:end="105:116">quant_index</name><index pos:start="105:117" pos:end="105:119">[<expr pos:start="105:118" pos:end="105:118"><name pos:start="105:118" pos:end="105:118">c</name></expr>]</index></name></expr> ]</index></name></expr></argument>, <argument pos:start="105:124" pos:end="105:125"><expr pos:start="105:124" pos:end="105:125"><name pos:start="105:124" pos:end="105:125">Al</name></expr></argument>)</argument_list></call> <operator pos:start="105:128" pos:end="105:128">&lt;</operator> <literal type="number" pos:start="105:130" pos:end="105:130">0</literal></expr>)</condition> <block pos:start="105:133" pos:end="111:25">{<block_content pos:start="107:29" pos:end="109:38">

                            <expr_stmt pos:start="107:29" pos:end="107:92"><expr pos:start="107:29" pos:end="107:91"><call pos:start="107:29" pos:end="107:91"><name pos:start="107:29" pos:end="107:34">av_log</name><argument_list pos:start="107:35" pos:end="107:91">(<argument pos:start="107:36" pos:end="107:43"><expr pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:43"><name pos:start="107:36" pos:end="107:36">s</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:43">avctx</name></name></expr></argument>, <argument pos:start="107:46" pos:end="107:57"><expr pos:start="107:46" pos:end="107:57"><name pos:start="107:46" pos:end="107:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:60" pos:end="107:78"><expr pos:start="107:60" pos:end="107:78"><literal type="string" pos:start="107:60" pos:end="107:78">"error y=%d x=%d\n"</literal></expr></argument>, <argument pos:start="107:81" pos:end="107:84"><expr pos:start="107:81" pos:end="107:84"><name pos:start="107:81" pos:end="107:84">mb_y</name></expr></argument>, <argument pos:start="107:87" pos:end="107:90"><expr pos:start="107:87" pos:end="107:90"><name pos:start="107:87" pos:end="107:90">mb_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="109:29" pos:end="109:38">return <expr pos:start="109:36" pos:end="109:37"><operator pos:start="109:36" pos:end="109:36">-</operator><literal type="number" pos:start="109:37" pos:end="109:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

<comment type="line" pos:start="115:1" pos:end="115:90">//                    av_log(s-&gt;avctx, AV_LOG_DEBUG, "mb: %d %d processed\n", mb_y, mb_x);</comment>

<comment type="line" pos:start="117:1" pos:end="117:137">//av_log(NULL, AV_LOG_DEBUG, "%d %d %d %d %d %d %d %d \n", mb_x, mb_y, x, y, c, s-&gt;bottom_field, (v * mb_y + y) * 8, (h * mb_x + x) * 8);</comment>

                    <if_stmt pos:start="119:21" pos:end="125:21"><if pos:start="119:21" pos:end="125:21">if <condition pos:start="119:24" pos:end="119:33">(<expr pos:start="119:25" pos:end="119:32"><operator pos:start="119:25" pos:end="119:26">++</operator><name pos:start="119:27" pos:end="119:27">x</name> <operator pos:start="119:29" pos:end="119:30">==</operator> <name pos:start="119:32" pos:end="119:32">h</name></expr>)</condition> <block pos:start="119:35" pos:end="125:21">{<block_content pos:start="121:25" pos:end="123:28">

                        <expr_stmt pos:start="121:25" pos:end="121:30"><expr pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:25">x</name> <operator pos:start="121:27" pos:end="121:27">=</operator> <literal type="number" pos:start="121:29" pos:end="121:29">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="123:25" pos:end="123:28"><expr pos:start="123:25" pos:end="123:27"><name pos:start="123:25" pos:end="123:25">y</name><operator pos:start="123:26" pos:end="123:27">++</operator></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <if_stmt pos:start="133:13" pos:end="143:13"><if pos:start="133:13" pos:end="143:13">if <condition pos:start="133:16" pos:end="133:59">(<expr pos:start="133:17" pos:end="133:58"><name pos:start="133:17" pos:end="133:35"><name pos:start="133:17" pos:end="133:17">s</name><operator pos:start="133:18" pos:end="133:19">-&gt;</operator><name pos:start="133:20" pos:end="133:35">restart_interval</name></name> <operator pos:start="133:37" pos:end="133:38">&amp;&amp;</operator> <operator pos:start="133:40" pos:end="133:40">!</operator><operator pos:start="133:41" pos:end="133:42">--</operator><name pos:start="133:43" pos:end="133:58"><name pos:start="133:43" pos:end="133:43">s</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:58">restart_count</name></name></expr>)</condition> <block pos:start="133:61" pos:end="143:13">{<block_content pos:start="135:17" pos:end="141:41">

                <expr_stmt pos:start="135:17" pos:end="135:39"><expr pos:start="135:17" pos:end="135:38"><call pos:start="135:17" pos:end="135:38"><name pos:start="135:17" pos:end="135:30">align_get_bits</name><argument_list pos:start="135:31" pos:end="135:38">(<argument pos:start="135:32" pos:end="135:37"><expr pos:start="135:32" pos:end="135:37"><operator pos:start="135:32" pos:end="135:32">&amp;</operator><name pos:start="135:33" pos:end="135:37"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="137:17" pos:end="137:38"><expr pos:start="137:17" pos:end="137:37"><call pos:start="137:17" pos:end="137:37"><name pos:start="137:17" pos:end="137:25">skip_bits</name><argument_list pos:start="137:26" pos:end="137:37">(<argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><operator pos:start="137:27" pos:end="137:27">&amp;</operator><name pos:start="137:28" pos:end="137:32"><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:32">gb</name></name></expr></argument>, <argument pos:start="137:35" pos:end="137:36"><expr pos:start="137:35" pos:end="137:36"><literal type="number" pos:start="137:35" pos:end="137:36">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:40" pos:end="137:54">/* skip RSTn */</comment>

                <for pos:start="139:17" pos:end="141:41">for <control pos:start="139:21" pos:end="139:47">(<init pos:start="139:22" pos:end="139:25"><expr pos:start="139:22" pos:end="139:24"><name pos:start="139:22" pos:end="139:22">i</name><operator pos:start="139:23" pos:end="139:23">=</operator><literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>;</init> <condition pos:start="139:27" pos:end="139:42"><expr pos:start="139:27" pos:end="139:41"><name pos:start="139:27" pos:end="139:27">i</name><operator pos:start="139:28" pos:end="139:28">&lt;</operator><name pos:start="139:29" pos:end="139:41">nb_components</name></expr>;</condition> <incr pos:start="139:44" pos:end="139:46"><expr pos:start="139:44" pos:end="139:46"><name pos:start="139:44" pos:end="139:44">i</name><operator pos:start="139:45" pos:end="139:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="141:21" pos:end="141:41"><block_content pos:start="141:21" pos:end="141:41"> <comment type="block" pos:start="139:49" pos:end="139:62">/* reset dc */</comment>

                    <expr_stmt pos:start="141:21" pos:end="141:41"><expr pos:start="141:21" pos:end="141:40"><name pos:start="141:21" pos:end="141:33"><name pos:start="141:21" pos:end="141:21">s</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:30">last_dc</name><index pos:start="141:31" pos:end="141:33">[<expr pos:start="141:32" pos:end="141:32"><name pos:start="141:32" pos:end="141:32">i</name></expr>]</index></name> <operator pos:start="141:35" pos:end="141:35">=</operator> <literal type="number" pos:start="141:37" pos:end="141:40">1024</literal></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
