<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4517.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">bdrv_open</name><parameter_list pos:start="1:14" pos:end="3:31">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><name pos:start="1:15" pos:end="1:30">BlockDriverState</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:34">bs</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:56"><decl pos:start="1:37" pos:end="1:56"><type pos:start="1:37" pos:end="1:56"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:56">filename</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:67"><decl pos:start="1:59" pos:end="1:67"><type pos:start="1:59" pos:end="1:67"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:67">flags</name></decl></parameter>,

              <parameter pos:start="3:15" pos:end="3:30"><decl pos:start="3:15" pos:end="3:30"><type pos:start="3:15" pos:end="3:30"><name pos:start="3:15" pos:end="3:25">BlockDriver</name> <modifier pos:start="3:27" pos:end="3:27">*</modifier></type><name pos:start="3:28" pos:end="3:30">drv</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="247:1">{<block_content pos:start="7:5" pos:end="245:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:31"><name pos:start="9:10" pos:end="9:21">tmp_filename</name><index pos:start="9:22" pos:end="9:31">[<expr pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:30">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="119:5"><if pos:start="13:5" pos:end="119:5">if <condition pos:start="13:8" pos:end="13:32">(<expr pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:13">flags</name> <operator pos:start="13:15" pos:end="13:15">&amp;</operator> <name pos:start="13:17" pos:end="13:31">BDRV_O_SNAPSHOT</name></expr>)</condition> <block pos:start="13:34" pos:end="119:5">{<block_content pos:start="15:9" pos:end="117:29">

        <decl_stmt pos:start="15:9" pos:end="15:30"><decl pos:start="15:9" pos:end="15:29"><type pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:24">BlockDriverState</name> <modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:29">bs1</name></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:27"><decl pos:start="17:9" pos:end="17:26"><type pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:15">int64_t</name></type> <name pos:start="17:17" pos:end="17:26">total_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="19:9" pos:end="19:28"><decl pos:start="19:9" pos:end="19:27"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:23">is_protocol</name> <init pos:start="19:25" pos:end="19:27">= <expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:32"><decl pos:start="21:9" pos:end="21:31"><type pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:19">BlockDriver</name> <modifier pos:start="21:21" pos:end="21:21">*</modifier></type><name pos:start="21:22" pos:end="21:31">bdrv_qcow2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:37"><decl pos:start="23:9" pos:end="23:36"><type pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:27">QEMUOptionParameter</name> <modifier pos:start="23:29" pos:end="23:29">*</modifier></type><name pos:start="23:30" pos:end="23:36">options</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:40"><decl pos:start="25:9" pos:end="25:39"><type pos:start="25:9" pos:end="25:12"><name pos:start="25:9" pos:end="25:12">char</name></type> <name pos:start="25:14" pos:end="25:39"><name pos:start="25:14" pos:end="25:29">backing_filename</name><index pos:start="25:30" pos:end="25:39">[<expr pos:start="25:31" pos:end="25:38"><name pos:start="25:31" pos:end="25:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



        <comment type="block" pos:start="29:9" pos:end="31:52">/* if snapshot, we create a temporary backing file and open it

           instead of opening 'filename' directly */</comment>



        <comment type="block" pos:start="35:9" pos:end="35:48">/* if there is a backing file, use it */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:11">bs1</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:22">bdrv_new</name><argument_list pos:start="37:23" pos:end="37:26">(<argument pos:start="37:24" pos:end="37:25"><expr pos:start="37:24" pos:end="37:25"><literal type="string" pos:start="37:24" pos:end="37:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:47"><expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:46"><name pos:start="39:15" pos:end="39:23">bdrv_open</name><argument_list pos:start="39:24" pos:end="39:46">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">bs1</name></expr></argument>, <argument pos:start="39:30" pos:end="39:37"><expr pos:start="39:30" pos:end="39:37"><name pos:start="39:30" pos:end="39:37">filename</name></expr></argument>, <argument pos:start="39:40" pos:end="39:40"><expr pos:start="39:40" pos:end="39:40"><literal type="number" pos:start="39:40" pos:end="39:40">0</literal></expr></argument>, <argument pos:start="39:43" pos:end="39:45"><expr pos:start="39:43" pos:end="39:45"><name pos:start="39:43" pos:end="39:45">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:20">(<expr pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:15">ret</name> <operator pos:start="41:17" pos:end="41:17">&lt;</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>)</condition> <block pos:start="41:22" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:23">

            <expr_stmt pos:start="43:13" pos:end="43:29"><expr pos:start="43:13" pos:end="43:28"><call pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:23">bdrv_delete</name><argument_list pos:start="43:24" pos:end="43:28">(<argument pos:start="43:25" pos:end="43:27"><expr pos:start="43:25" pos:end="43:27"><name pos:start="43:25" pos:end="43:27">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:23">return <expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:18">total_size</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:40"><name pos:start="49:22" pos:end="49:35">bdrv_getlength</name><argument_list pos:start="49:36" pos:end="49:40">(<argument pos:start="49:37" pos:end="49:39"><expr pos:start="49:37" pos:end="49:39"><name pos:start="49:37" pos:end="49:39">bs1</name></expr></argument>)</argument_list></call> <operator pos:start="49:42" pos:end="49:42">&amp;</operator> <name pos:start="49:44" pos:end="49:59">BDRV_SECTOR_MASK</name></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="55:28"><if pos:start="53:9" pos:end="55:28">if <condition pos:start="53:12" pos:end="53:48">(<expr pos:start="53:13" pos:end="53:47"><name pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:15">bs1</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:20">drv</name></name> <operator pos:start="53:22" pos:end="53:23">&amp;&amp;</operator> <name pos:start="53:25" pos:end="53:47"><name pos:start="53:25" pos:end="53:27">bs1</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:32">drv</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:47">protocol_name</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:28"><block_content pos:start="55:13" pos:end="55:28">

            <expr_stmt pos:start="55:13" pos:end="55:28"><expr pos:start="55:13" pos:end="55:27"><name pos:start="55:13" pos:end="55:23">is_protocol</name> <operator pos:start="55:25" pos:end="55:25">=</operator> <literal type="number" pos:start="55:27" pos:end="55:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><call pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:19">bdrv_delete</name><argument_list pos:start="59:20" pos:end="59:24">(<argument pos:start="59:21" pos:end="59:23"><expr pos:start="59:21" pos:end="59:23"><name pos:start="59:21" pos:end="59:23">bs1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:61"><expr pos:start="63:9" pos:end="63:60"><call pos:start="63:9" pos:end="63:60"><name pos:start="63:9" pos:end="63:24">get_tmp_filename</name><argument_list pos:start="63:25" pos:end="63:60">(<argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">tmp_filename</name></expr></argument>, <argument pos:start="63:40" pos:end="63:59"><expr pos:start="63:40" pos:end="63:59"><sizeof pos:start="63:40" pos:end="63:59">sizeof<argument_list pos:start="63:46" pos:end="63:59">(<argument pos:start="63:47" pos:end="63:58"><expr pos:start="63:47" pos:end="63:58"><name pos:start="63:47" pos:end="63:58">tmp_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="67:9" pos:end="67:52">/* Real path is meaningless for protocols */</comment>

        <if_stmt pos:start="69:9" pos:end="77:26"><if pos:start="69:9" pos:end="73:37">if <condition pos:start="69:12" pos:end="69:24">(<expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:23">is_protocol</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="73:37"><block_content pos:start="71:13" pos:end="73:37">

            <expr_stmt pos:start="71:13" pos:end="73:37"><expr pos:start="71:13" pos:end="73:36"><call pos:start="71:13" pos:end="73:36"><name pos:start="71:13" pos:end="71:20">snprintf</name><argument_list pos:start="71:21" pos:end="73:36">(<argument pos:start="71:22" pos:end="71:37"><expr pos:start="71:22" pos:end="71:37"><name pos:start="71:22" pos:end="71:37">backing_filename</name></expr></argument>, <argument pos:start="71:40" pos:end="71:63"><expr pos:start="71:40" pos:end="71:63"><sizeof pos:start="71:40" pos:end="71:63">sizeof<argument_list pos:start="71:46" pos:end="71:63">(<argument pos:start="71:47" pos:end="71:62"><expr pos:start="71:47" pos:end="71:62"><name pos:start="71:47" pos:end="71:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="73:22" pos:end="73:25"><expr pos:start="73:22" pos:end="73:25"><literal type="string" pos:start="73:22" pos:end="73:25">"%s"</literal></expr></argument>, <argument pos:start="73:28" pos:end="73:35"><expr pos:start="73:28" pos:end="73:35"><name pos:start="73:28" pos:end="73:35">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="75:9" pos:end="77:26">else if <condition pos:start="75:17" pos:end="75:55">(<expr pos:start="75:18" pos:end="75:54"><operator pos:start="75:18" pos:end="75:18">!</operator><call pos:start="75:19" pos:end="75:54"><name pos:start="75:19" pos:end="75:26">realpath</name><argument_list pos:start="75:27" pos:end="75:54">(<argument pos:start="75:28" pos:end="75:35"><expr pos:start="75:28" pos:end="75:35"><name pos:start="75:28" pos:end="75:35">filename</name></expr></argument>, <argument pos:start="75:38" pos:end="75:53"><expr pos:start="75:38" pos:end="75:53"><name pos:start="75:38" pos:end="75:53">backing_filename</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="77:13" pos:end="77:26"><block_content pos:start="77:13" pos:end="77:26">

            <return pos:start="77:13" pos:end="77:26">return <expr pos:start="77:20" pos:end="77:25"><operator pos:start="77:20" pos:end="77:20">-</operator><name pos:start="77:21" pos:end="77:25">errno</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:47"><expr pos:start="81:9" pos:end="81:46"><name pos:start="81:9" pos:end="81:18">bdrv_qcow2</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:46"><name pos:start="81:22" pos:end="81:37">bdrv_find_format</name><argument_list pos:start="81:38" pos:end="81:46">(<argument pos:start="81:39" pos:end="81:45"><expr pos:start="81:39" pos:end="81:45"><literal type="string" pos:start="81:39" pos:end="81:45">"qcow2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:80"><expr pos:start="83:9" pos:end="83:79"><name pos:start="83:9" pos:end="83:15">options</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:79"><name pos:start="83:19" pos:end="83:41">parse_option_parameters</name><argument_list pos:start="83:42" pos:end="83:79">(<argument pos:start="83:43" pos:end="83:44"><expr pos:start="83:43" pos:end="83:44"><literal type="string" pos:start="83:43" pos:end="83:44">""</literal></expr></argument>, <argument pos:start="83:47" pos:end="83:72"><expr pos:start="83:47" pos:end="83:72"><name pos:start="83:47" pos:end="83:72"><name pos:start="83:47" pos:end="83:56">bdrv_qcow2</name><operator pos:start="83:57" pos:end="83:58">-&gt;</operator><name pos:start="83:59" pos:end="83:72">create_options</name></name></expr></argument>, <argument pos:start="83:75" pos:end="83:78"><expr pos:start="83:75" pos:end="83:78"><name pos:start="83:75" pos:end="83:78">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:70"><expr pos:start="87:9" pos:end="87:69"><call pos:start="87:9" pos:end="87:69"><name pos:start="87:9" pos:end="87:32">set_option_parameter_int</name><argument_list pos:start="87:33" pos:end="87:69">(<argument pos:start="87:34" pos:end="87:40"><expr pos:start="87:34" pos:end="87:40"><name pos:start="87:34" pos:end="87:40">options</name></expr></argument>, <argument pos:start="87:43" pos:end="87:56"><expr pos:start="87:43" pos:end="87:56"><name pos:start="87:43" pos:end="87:56">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="87:59" pos:end="87:68"><expr pos:start="87:59" pos:end="87:68"><name pos:start="87:59" pos:end="87:68">total_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:80"><expr pos:start="89:9" pos:end="89:79"><call pos:start="89:9" pos:end="89:79"><name pos:start="89:9" pos:end="89:28">set_option_parameter</name><argument_list pos:start="89:29" pos:end="89:79">(<argument pos:start="89:30" pos:end="89:36"><expr pos:start="89:30" pos:end="89:36"><name pos:start="89:30" pos:end="89:36">options</name></expr></argument>, <argument pos:start="89:39" pos:end="89:60"><expr pos:start="89:39" pos:end="89:60"><name pos:start="89:39" pos:end="89:60">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="89:63" pos:end="89:78"><expr pos:start="89:63" pos:end="89:78"><name pos:start="89:63" pos:end="89:78">backing_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="97:9"><if pos:start="91:9" pos:end="97:9">if <condition pos:start="91:12" pos:end="91:16">(<expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">drv</name></expr>)</condition> <block pos:start="91:18" pos:end="97:9">{<block_content pos:start="93:13" pos:end="95:34">

            <expr_stmt pos:start="93:13" pos:end="95:34"><expr pos:start="93:13" pos:end="95:33"><call pos:start="93:13" pos:end="95:33"><name pos:start="93:13" pos:end="93:32">set_option_parameter</name><argument_list pos:start="93:33" pos:end="95:33">(<argument pos:start="93:34" pos:end="93:40"><expr pos:start="93:34" pos:end="93:40"><name pos:start="93:34" pos:end="93:40">options</name></expr></argument>, <argument pos:start="93:43" pos:end="93:63"><expr pos:start="93:43" pos:end="93:63"><name pos:start="93:43" pos:end="93:63">BLOCK_OPT_BACKING_FMT</name></expr></argument>,

                <argument pos:start="95:17" pos:end="95:32"><expr pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:32"><name pos:start="95:17" pos:end="95:19">drv</name><operator pos:start="95:20" pos:end="95:21">-&gt;</operator><name pos:start="95:22" pos:end="95:32">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:61"><expr pos:start="101:9" pos:end="101:60"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:60"><name pos:start="101:15" pos:end="101:25">bdrv_create</name><argument_list pos:start="101:26" pos:end="101:60">(<argument pos:start="101:27" pos:end="101:36"><expr pos:start="101:27" pos:end="101:36"><name pos:start="101:27" pos:end="101:36">bdrv_qcow2</name></expr></argument>, <argument pos:start="101:39" pos:end="101:50"><expr pos:start="101:39" pos:end="101:50"><name pos:start="101:39" pos:end="101:50">tmp_filename</name></expr></argument>, <argument pos:start="101:53" pos:end="101:59"><expr pos:start="101:53" pos:end="101:59"><name pos:start="101:53" pos:end="101:59">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:40"><expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:39"><name pos:start="103:9" pos:end="103:30">free_option_parameters</name><argument_list pos:start="103:31" pos:end="103:39">(<argument pos:start="103:32" pos:end="103:38"><expr pos:start="103:32" pos:end="103:38"><name pos:start="103:32" pos:end="103:38">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="105:9" pos:end="109:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:20">(<expr pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">&lt;</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>)</condition> <block pos:start="105:22" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:23">

            <return pos:start="107:13" pos:end="107:23">return <expr pos:start="107:20" pos:end="107:22"><name pos:start="107:20" pos:end="107:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="113:9" pos:end="113:32"><expr pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:16">filename</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <name pos:start="113:20" pos:end="113:31">tmp_filename</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:25"><expr pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:11">drv</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <name pos:start="115:15" pos:end="115:24">bdrv_qcow2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:29"><expr pos:start="117:9" pos:end="117:28"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:10">bs</name><operator pos:start="117:11" pos:end="117:12">-&gt;</operator><name pos:start="117:13" pos:end="117:24">is_temporary</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <literal type="number" pos:start="117:28" pos:end="117:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:44">/* Find the right image format driver */</comment>

    <if_stmt pos:start="125:5" pos:end="129:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:13">(<expr pos:start="125:9" pos:end="125:12"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:12">drv</name></expr>)</condition> <block pos:start="125:15" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:48">

        <expr_stmt pos:start="127:9" pos:end="127:48"><expr pos:start="127:9" pos:end="127:47"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <call pos:start="127:15" pos:end="127:47"><name pos:start="127:15" pos:end="127:31">find_image_format</name><argument_list pos:start="127:32" pos:end="127:47">(<argument pos:start="127:33" pos:end="127:40"><expr pos:start="127:33" pos:end="127:40"><name pos:start="127:33" pos:end="127:40">filename</name></expr></argument>, <argument pos:start="127:43" pos:end="127:46"><expr pos:start="127:43" pos:end="127:46"><operator pos:start="127:43" pos:end="127:43">&amp;</operator><name pos:start="127:44" pos:end="127:46">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="133:5" pos:end="137:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:13">(<expr pos:start="133:9" pos:end="133:12"><operator pos:start="133:9" pos:end="133:9">!</operator><name pos:start="133:10" pos:end="133:12">drv</name></expr>)</condition> <block pos:start="133:15" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:29">

        <goto pos:start="135:9" pos:end="135:29">goto <name pos:start="135:14" pos:end="135:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:24">/* Open the image */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:53"><expr pos:start="143:5" pos:end="143:52"><name pos:start="143:5" pos:end="143:7">ret</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:52"><name pos:start="143:11" pos:end="143:26">bdrv_open_common</name><argument_list pos:start="143:27" pos:end="143:52">(<argument pos:start="143:28" pos:end="143:29"><expr pos:start="143:28" pos:end="143:29"><name pos:start="143:28" pos:end="143:29">bs</name></expr></argument>, <argument pos:start="143:32" pos:end="143:39"><expr pos:start="143:32" pos:end="143:39"><name pos:start="143:32" pos:end="143:39">filename</name></expr></argument>, <argument pos:start="143:42" pos:end="143:46"><expr pos:start="143:42" pos:end="143:46"><name pos:start="143:42" pos:end="143:46">flags</name></expr></argument>, <argument pos:start="143:49" pos:end="143:51"><expr pos:start="143:49" pos:end="143:51"><name pos:start="143:49" pos:end="143:51">drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="149:5"><if pos:start="145:5" pos:end="149:5">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">&lt;</operator> <literal type="number" pos:start="145:15" pos:end="145:15">0</literal></expr>)</condition> <block pos:start="145:18" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:29">

        <goto pos:start="147:9" pos:end="147:29">goto <name pos:start="147:14" pos:end="147:28">unlink_and_fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="153:5" pos:end="153:44">/* If there is a backing file, use it */</comment>

    <if_stmt pos:start="155:5" pos:end="211:5"><if pos:start="155:5" pos:end="211:5">if <condition pos:start="155:8" pos:end="155:72">(<expr pos:start="155:9" pos:end="155:71"><operator pos:start="155:9" pos:end="155:9">(</operator><name pos:start="155:10" pos:end="155:14">flags</name> <operator pos:start="155:16" pos:end="155:16">&amp;</operator> <name pos:start="155:18" pos:end="155:34">BDRV_O_NO_BACKING</name><operator pos:start="155:35" pos:end="155:35">)</operator> <operator pos:start="155:37" pos:end="155:38">==</operator> <literal type="number" pos:start="155:40" pos:end="155:40">0</literal> <operator pos:start="155:42" pos:end="155:43">&amp;&amp;</operator> <name pos:start="155:45" pos:end="155:63"><name pos:start="155:45" pos:end="155:46">bs</name><operator pos:start="155:47" pos:end="155:48">-&gt;</operator><name pos:start="155:49" pos:end="155:60">backing_file</name><index pos:start="155:61" pos:end="155:63">[<expr pos:start="155:62" pos:end="155:62"><literal type="number" pos:start="155:62" pos:end="155:62">0</literal></expr>]</index></name> <operator pos:start="155:65" pos:end="155:66">!=</operator> <literal type="char" pos:start="155:68" pos:end="155:71">'\0'</literal></expr>)</condition> <block pos:start="155:74" pos:end="211:5">{<block_content pos:start="157:9" pos:end="209:9">

        <decl_stmt pos:start="157:9" pos:end="157:40"><decl pos:start="157:9" pos:end="157:39"><type pos:start="157:9" pos:end="157:12"><name pos:start="157:9" pos:end="157:12">char</name></type> <name pos:start="157:14" pos:end="157:39"><name pos:start="157:14" pos:end="157:29">backing_filename</name><index pos:start="157:30" pos:end="157:39">[<expr pos:start="157:31" pos:end="157:38"><name pos:start="157:31" pos:end="157:38">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="159:23"><decl pos:start="159:9" pos:end="159:22"><type pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:11">int</name></type> <name pos:start="159:13" pos:end="159:22">back_flags</name></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:37"><decl pos:start="161:9" pos:end="161:36"><type pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:19">BlockDriver</name> <modifier pos:start="161:21" pos:end="161:21">*</modifier></type><name pos:start="161:22" pos:end="161:29">back_drv</name> <init pos:start="161:31" pos:end="161:36">= <expr pos:start="161:33" pos:end="161:36"><name pos:start="161:33" pos:end="161:36">NULL</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="165:9" pos:end="165:38"><expr pos:start="165:9" pos:end="165:37"><name pos:start="165:9" pos:end="165:22"><name pos:start="165:9" pos:end="165:10">bs</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:22">backing_hd</name></name> <operator pos:start="165:24" pos:end="165:24">=</operator> <call pos:start="165:26" pos:end="165:37"><name pos:start="165:26" pos:end="165:33">bdrv_new</name><argument_list pos:start="165:34" pos:end="165:37">(<argument pos:start="165:35" pos:end="165:36"><expr pos:start="165:35" pos:end="165:36"><literal type="string" pos:start="165:35" pos:end="165:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="169:65"><expr pos:start="167:9" pos:end="169:64"><call pos:start="167:9" pos:end="169:64"><name pos:start="167:9" pos:end="167:38">bdrv_get_full_backing_filename</name><argument_list pos:start="167:39" pos:end="169:64">(<argument pos:start="167:40" pos:end="167:41"><expr pos:start="167:40" pos:end="167:41"><name pos:start="167:40" pos:end="167:41">bs</name></expr></argument>, <argument pos:start="167:44" pos:end="167:59"><expr pos:start="167:44" pos:end="167:59"><name pos:start="167:44" pos:end="167:59">backing_filename</name></expr></argument>,

                                       <argument pos:start="169:40" pos:end="169:63"><expr pos:start="169:40" pos:end="169:63"><sizeof pos:start="169:40" pos:end="169:63">sizeof<argument_list pos:start="169:46" pos:end="169:63">(<argument pos:start="169:47" pos:end="169:62"><expr pos:start="169:47" pos:end="169:62"><name pos:start="169:47" pos:end="169:62">backing_filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="173:9" pos:end="177:9"><if pos:start="173:9" pos:end="177:9">if <condition pos:start="173:12" pos:end="173:42">(<expr pos:start="173:13" pos:end="173:41"><name pos:start="173:13" pos:end="173:33"><name pos:start="173:13" pos:end="173:14">bs</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:30">backing_format</name><index pos:start="173:31" pos:end="173:33">[<expr pos:start="173:32" pos:end="173:32"><literal type="number" pos:start="173:32" pos:end="173:32">0</literal></expr>]</index></name> <operator pos:start="173:35" pos:end="173:36">!=</operator> <literal type="char" pos:start="173:38" pos:end="173:41">'\0'</literal></expr>)</condition> <block pos:start="173:44" pos:end="177:9">{<block_content pos:start="175:13" pos:end="175:60">

            <expr_stmt pos:start="175:13" pos:end="175:60"><expr pos:start="175:13" pos:end="175:59"><name pos:start="175:13" pos:end="175:20">back_drv</name> <operator pos:start="175:22" pos:end="175:22">=</operator> <call pos:start="175:24" pos:end="175:59"><name pos:start="175:24" pos:end="175:39">bdrv_find_format</name><argument_list pos:start="175:40" pos:end="175:59">(<argument pos:start="175:41" pos:end="175:58"><expr pos:start="175:41" pos:end="175:58"><name pos:start="175:41" pos:end="175:58"><name pos:start="175:41" pos:end="175:42">bs</name><operator pos:start="175:43" pos:end="175:44">-&gt;</operator><name pos:start="175:45" pos:end="175:58">backing_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="181:9" pos:end="181:51">/* backing files always opened read-only */</comment>

        <expr_stmt pos:start="183:9" pos:end="185:73"><expr pos:start="183:9" pos:end="185:72"><name pos:start="183:9" pos:end="183:18">back_flags</name> <operator pos:start="183:20" pos:end="183:20">=</operator>

            <name pos:start="185:13" pos:end="185:17">flags</name> <operator pos:start="185:19" pos:end="185:19">&amp;</operator> <operator pos:start="185:21" pos:end="185:21">~</operator><operator pos:start="185:22" pos:end="185:22">(</operator><name pos:start="185:23" pos:end="185:33">BDRV_O_RDWR</name> <operator pos:start="185:35" pos:end="185:35">|</operator> <name pos:start="185:37" pos:end="185:51">BDRV_O_SNAPSHOT</name> <operator pos:start="185:53" pos:end="185:53">|</operator> <name pos:start="185:55" pos:end="185:71">BDRV_O_NO_BACKING</name><operator pos:start="185:72" pos:end="185:72">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:80"><expr pos:start="189:9" pos:end="189:79"><name pos:start="189:9" pos:end="189:11">ret</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <call pos:start="189:15" pos:end="189:79"><name pos:start="189:15" pos:end="189:23">bdrv_open</name><argument_list pos:start="189:24" pos:end="189:79">(<argument pos:start="189:25" pos:end="189:38"><expr pos:start="189:25" pos:end="189:38"><name pos:start="189:25" pos:end="189:38"><name pos:start="189:25" pos:end="189:26">bs</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:38">backing_hd</name></name></expr></argument>, <argument pos:start="189:41" pos:end="189:56"><expr pos:start="189:41" pos:end="189:56"><name pos:start="189:41" pos:end="189:56">backing_filename</name></expr></argument>, <argument pos:start="189:59" pos:end="189:68"><expr pos:start="189:59" pos:end="189:68"><name pos:start="189:59" pos:end="189:68">back_flags</name></expr></argument>, <argument pos:start="189:71" pos:end="189:78"><expr pos:start="189:71" pos:end="189:78"><name pos:start="189:71" pos:end="189:78">back_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if <condition pos:start="191:12" pos:end="191:20">(<expr pos:start="191:13" pos:end="191:19"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">&lt;</operator> <literal type="number" pos:start="191:19" pos:end="191:19">0</literal></expr>)</condition> <block pos:start="191:22" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:23">

            <expr_stmt pos:start="193:13" pos:end="193:27"><expr pos:start="193:13" pos:end="193:26"><call pos:start="193:13" pos:end="193:26"><name pos:start="193:13" pos:end="193:22">bdrv_close</name><argument_list pos:start="193:23" pos:end="193:26">(<argument pos:start="193:24" pos:end="193:25"><expr pos:start="193:24" pos:end="193:25"><name pos:start="193:24" pos:end="193:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="195:13" pos:end="195:23">return <expr pos:start="195:20" pos:end="195:22"><name pos:start="195:20" pos:end="195:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="209:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:29">(<expr pos:start="199:13" pos:end="199:28"><name pos:start="199:13" pos:end="199:28"><name pos:start="199:13" pos:end="199:14">bs</name><operator pos:start="199:15" pos:end="199:16">-&gt;</operator><name pos:start="199:17" pos:end="199:28">is_temporary</name></name></expr>)</condition> <block pos:start="199:31" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:68">

            <expr_stmt pos:start="201:13" pos:end="201:68"><expr pos:start="201:13" pos:end="201:67"><name pos:start="201:13" pos:end="201:42"><name pos:start="201:13" pos:end="201:14">bs</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:26">backing_hd</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:42">keep_read_only</name></name> <operator pos:start="201:44" pos:end="201:44">=</operator> <operator pos:start="201:46" pos:end="201:46">!</operator><operator pos:start="201:47" pos:end="201:47">(</operator><name pos:start="201:48" pos:end="201:52">flags</name> <operator pos:start="201:54" pos:end="201:54">&amp;</operator> <name pos:start="201:56" pos:end="201:66">BDRV_O_RDWR</name><operator pos:start="201:67" pos:end="201:67">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="209:9">else <block pos:start="203:16" pos:end="209:9">{<block_content pos:start="207:13" pos:end="207:64">

            <comment type="block" pos:start="205:13" pos:end="205:51">/* base image inherits from "parent" */</comment>

            <expr_stmt pos:start="207:13" pos:end="207:64"><expr pos:start="207:13" pos:end="207:63"><name pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:14">bs</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:26">backing_hd</name><operator pos:start="207:27" pos:end="207:28">-&gt;</operator><name pos:start="207:29" pos:end="207:42">keep_read_only</name></name> <operator pos:start="207:44" pos:end="207:44">=</operator> <name pos:start="207:46" pos:end="207:63"><name pos:start="207:46" pos:end="207:47">bs</name><operator pos:start="207:48" pos:end="207:49">-&gt;</operator><name pos:start="207:50" pos:end="207:63">keep_read_only</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:31">(<expr pos:start="215:9" pos:end="215:30"><operator pos:start="215:9" pos:end="215:9">!</operator><call pos:start="215:10" pos:end="215:30"><name pos:start="215:10" pos:end="215:26">bdrv_key_required</name><argument_list pos:start="215:27" pos:end="215:30">(<argument pos:start="215:28" pos:end="215:29"><expr pos:start="215:28" pos:end="215:29"><name pos:start="215:28" pos:end="215:29">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="215:33" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:43">

        <expr_stmt pos:start="217:9" pos:end="217:43"><expr pos:start="217:9" pos:end="217:42"><call pos:start="217:9" pos:end="217:42"><name pos:start="217:9" pos:end="217:32">bdrv_dev_change_media_cb</name><argument_list pos:start="217:33" pos:end="217:42">(<argument pos:start="217:34" pos:end="217:35"><expr pos:start="217:34" pos:end="217:35"><name pos:start="217:34" pos:end="217:35">bs</name></expr></argument>, <argument pos:start="217:38" pos:end="217:41"><expr pos:start="217:38" pos:end="217:41"><name pos:start="217:38" pos:end="217:41">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="223:5" pos:end="223:36">/* throttling disk I/O limits */</comment>

    <if_stmt pos:start="225:5" pos:end="229:5"><if pos:start="225:5" pos:end="229:5">if <condition pos:start="225:8" pos:end="225:30">(<expr pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:29"><name pos:start="225:9" pos:end="225:10">bs</name><operator pos:start="225:11" pos:end="225:12">-&gt;</operator><name pos:start="225:13" pos:end="225:29">io_limits_enabled</name></name></expr>)</condition> <block pos:start="225:32" pos:end="229:5">{<block_content pos:start="227:9" pos:end="227:34">

        <expr_stmt pos:start="227:9" pos:end="227:34"><expr pos:start="227:9" pos:end="227:33"><call pos:start="227:9" pos:end="227:33"><name pos:start="227:9" pos:end="227:29">bdrv_io_limits_enable</name><argument_list pos:start="227:30" pos:end="227:33">(<argument pos:start="227:31" pos:end="227:32"><expr pos:start="227:31" pos:end="227:32"><name pos:start="227:31" pos:end="227:32">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="233:5" pos:end="233:13">return <expr pos:start="233:12" pos:end="233:12"><literal type="number" pos:start="233:12" pos:end="233:12">0</literal></expr>;</return>



<label pos:start="237:1" pos:end="237:16"><name pos:start="237:1" pos:end="237:15">unlink_and_fail</name>:</label>

    <if_stmt pos:start="239:5" pos:end="243:5"><if pos:start="239:5" pos:end="243:5">if <condition pos:start="239:8" pos:end="239:25">(<expr pos:start="239:9" pos:end="239:24"><name pos:start="239:9" pos:end="239:24"><name pos:start="239:9" pos:end="239:10">bs</name><operator pos:start="239:11" pos:end="239:12">-&gt;</operator><name pos:start="239:13" pos:end="239:24">is_temporary</name></name></expr>)</condition> <block pos:start="239:27" pos:end="243:5">{<block_content pos:start="241:9" pos:end="241:25">

        <expr_stmt pos:start="241:9" pos:end="241:25"><expr pos:start="241:9" pos:end="241:24"><call pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:14">unlink</name><argument_list pos:start="241:15" pos:end="241:24">(<argument pos:start="241:16" pos:end="241:23"><expr pos:start="241:16" pos:end="241:23"><name pos:start="241:16" pos:end="241:23">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="245:5" pos:end="245:15">return <expr pos:start="245:12" pos:end="245:14"><name pos:start="245:12" pos:end="245:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
