<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3148.c" pos:tabs="8"><function pos:start="1:1" pos:end="68:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">digic_load_rom</name><parameter_list pos:start="1:27" pos:end="3:69">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">DigicBoardState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:58"><decl pos:start="1:48" pos:end="1:58"><type pos:start="1:48" pos:end="1:58"><name pos:start="1:48" pos:end="1:53">hwaddr</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:42"><decl pos:start="3:28" pos:end="3:42"><type pos:start="3:28" pos:end="3:42"><name pos:start="3:28" pos:end="3:33">hwaddr</name></type> <name pos:start="3:35" pos:end="3:42">max_size</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:68"><decl pos:start="3:45" pos:end="3:68"><type pos:start="3:45" pos:end="3:68"><specifier pos:start="3:45" pos:end="3:49">const</specifier> <name pos:start="3:51" pos:end="3:54">char</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:68">def_filename</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="68:1">{<block_content pos:start="7:5" pos:end="66:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">target_long</name></type> <name pos:start="7:17" pos:end="7:24">rom_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="13:24">(<expr pos:start="13:9" pos:end="13:23"><call pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:21">qtest_enabled</name><argument_list pos:start="13:22" pos:end="13:23">()</argument_list></call></expr>)</condition> <block pos:start="13:26" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:15">

        <comment type="block" pos:start="15:9" pos:end="19:11">/* qtest runs no code so don't attempt a ROM load which

         * could fail and result in a spurious test failure.

         */</comment>

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17">bios_name</name></expr>)</condition> <block pos:start="27:20" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:29">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:16">filename</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:28">bios_name</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:32">

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:16">filename</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:31">def_filename</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="39:5" pos:end="66:5"><if pos:start="39:5" pos:end="66:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:16">filename</name></expr>)</condition> <block pos:start="39:19" pos:end="66:5">{<block_content pos:start="41:9" pos:end="63:9">

        <decl_stmt pos:start="41:9" pos:end="41:65"><decl pos:start="41:9" pos:end="41:64"><type pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">char</name> <modifier pos:start="41:14" pos:end="41:14">*</modifier></type><name pos:start="41:15" pos:end="41:16">fn</name> <init pos:start="41:18" pos:end="41:64">= <expr pos:start="41:20" pos:end="41:64"><call pos:start="41:20" pos:end="41:64"><name pos:start="41:20" pos:end="41:33">qemu_find_file</name><argument_list pos:start="41:34" pos:end="41:64">(<argument pos:start="41:35" pos:end="41:53"><expr pos:start="41:35" pos:end="41:53"><name pos:start="41:35" pos:end="41:53">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="41:56" pos:end="41:63"><expr pos:start="41:56" pos:end="41:63"><name pos:start="41:56" pos:end="41:63">filename</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:16">(<expr pos:start="45:13" pos:end="45:15"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:15">fn</name></expr>)</condition> <block pos:start="45:18" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:20">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><call pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:24">error_report</name><argument_list pos:start="47:25" pos:end="47:67">(<argument pos:start="47:26" pos:end="47:56"><expr pos:start="47:26" pos:end="47:56"><literal type="string" pos:start="47:26" pos:end="47:56">"Couldn't find rom image '%s'."</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:66"><expr pos:start="47:59" pos:end="47:66"><name pos:start="47:59" pos:end="47:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:19"><call pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:16">exit</name><argument_list pos:start="49:17" pos:end="49:19">(<argument pos:start="49:18" pos:end="49:18"><expr pos:start="49:18" pos:end="49:18"><literal type="number" pos:start="49:18" pos:end="49:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:59"><expr pos:start="55:9" pos:end="55:58"><name pos:start="55:9" pos:end="55:16">rom_size</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:58"><name pos:start="55:20" pos:end="55:38">load_image_targphys</name><argument_list pos:start="55:39" pos:end="55:58">(<argument pos:start="55:40" pos:end="55:41"><expr pos:start="55:40" pos:end="55:41"><name pos:start="55:40" pos:end="55:41">fn</name></expr></argument>, <argument pos:start="55:44" pos:end="55:47"><expr pos:start="55:44" pos:end="55:47"><name pos:start="55:44" pos:end="55:47">addr</name></expr></argument>, <argument pos:start="55:50" pos:end="55:57"><expr pos:start="55:50" pos:end="55:57"><name pos:start="55:50" pos:end="55:57">max_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:48">(<expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:38"><name pos:start="57:13" pos:end="57:20">rom_size</name> <argument_list type="generic" pos:start="57:22" pos:end="57:38">&lt; <argument pos:start="57:24" pos:end="57:36"><expr pos:start="57:24" pos:end="57:36"><literal type="number" pos:start="57:24" pos:end="57:24">0</literal> <operator pos:start="57:26" pos:end="57:27">||</operator> <name pos:start="57:29" pos:end="57:36">rom_size</name></expr></argument> &gt;</argument_list></name> <name pos:start="57:40" pos:end="57:47">max_size</name></expr>)</condition> <block pos:start="57:50" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:20">

            <expr_stmt pos:start="59:13" pos:end="59:68"><expr pos:start="59:13" pos:end="59:67"><call pos:start="59:13" pos:end="59:67"><name pos:start="59:13" pos:end="59:24">error_report</name><argument_list pos:start="59:25" pos:end="59:67">(<argument pos:start="59:26" pos:end="59:56"><expr pos:start="59:26" pos:end="59:56"><literal type="string" pos:start="59:26" pos:end="59:56">"Couldn't load rom image '%s'."</literal></expr></argument>, <argument pos:start="59:59" pos:end="59:66"><expr pos:start="59:59" pos:end="59:66"><name pos:start="59:59" pos:end="59:66">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:20"><expr pos:start="61:13" pos:end="61:19"><call pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:16">exit</name><argument_list pos:start="61:17" pos:end="61:19">(<argument pos:start="61:18" pos:end="61:18"><expr pos:start="61:18" pos:end="61:18"><literal type="number" pos:start="61:18" pos:end="61:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>


    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
