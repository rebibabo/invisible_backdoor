<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23834.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">bdrv_query_info</name><parameter_list pos:start="1:28" pos:end="3:41">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:40">BlockBackend</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">blk</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:65"><decl pos:start="1:48" pos:end="1:65"><type pos:start="1:48" pos:end="1:65"><name pos:start="1:48" pos:end="1:56">BlockInfo</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">p_info</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:33">Error</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier><modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:40">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:30">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">BlockInfo</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:19">info</name> <init pos:start="7:21" pos:end="7:46">= <expr pos:start="7:23" pos:end="7:46"><call pos:start="7:23" pos:end="7:46"><name pos:start="7:23" pos:end="7:31">g_malloc0</name><argument_list pos:start="7:32" pos:end="7:46">(<argument pos:start="7:33" pos:end="7:45"><expr pos:start="7:33" pos:end="7:45"><sizeof pos:start="7:33" pos:end="7:45">sizeof<argument_list pos:start="7:39" pos:end="7:45">(<argument pos:start="7:40" pos:end="7:44"><expr pos:start="7:40" pos:end="7:44"><operator pos:start="7:40" pos:end="7:40">*</operator><name pos:start="7:41" pos:end="7:44">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name> <init pos:start="9:26" pos:end="9:38">= <expr pos:start="9:28" pos:end="9:38"><call pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:33">blk_bs</name><argument_list pos:start="9:34" pos:end="9:38">(<argument pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:37">blk</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDriverState</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">bs0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:13">ImageInfo</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier><modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:28">p_image_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:20">local_err</name> <init pos:start="15:22" pos:end="15:27">= <expr pos:start="15:24" pos:end="15:27"><name pos:start="15:24" pos:end="15:27">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:43"><expr pos:start="17:5" pos:end="17:42"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:8">info</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:16">device</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <call pos:start="17:20" pos:end="17:42"><name pos:start="17:20" pos:end="17:27">g_strdup</name><argument_list pos:start="17:28" pos:end="17:42">(<argument pos:start="17:29" pos:end="17:41"><expr pos:start="17:29" pos:end="17:41"><call pos:start="17:29" pos:end="17:41"><name pos:start="17:29" pos:end="17:36">blk_name</name><argument_list pos:start="17:37" pos:end="17:41">(<argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">blk</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">info</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:14">type</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:36"><name pos:start="19:18" pos:end="19:25">g_strdup</name><argument_list pos:start="19:26" pos:end="19:36">(<argument pos:start="19:27" pos:end="19:35"><expr pos:start="19:27" pos:end="19:35"><literal type="string" pos:start="19:27" pos:end="19:35">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:8">info</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:16">locked</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:43">blk_dev_is_medium_locked</name><argument_list pos:start="21:44" pos:end="21:48">(<argument pos:start="21:45" pos:end="21:47"><expr pos:start="21:45" pos:end="21:47"><name pos:start="21:45" pos:end="21:47">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:55"><expr pos:start="23:5" pos:end="23:54"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:8">info</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:19">removable</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:54"><name pos:start="23:23" pos:end="23:49">blk_dev_has_removable_media</name><argument_list pos:start="23:50" pos:end="23:54">(<argument pos:start="23:51" pos:end="23:53"><expr pos:start="23:51" pos:end="23:53"><name pos:start="23:51" pos:end="23:53">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:41">(<expr pos:start="27:9" pos:end="27:40"><call pos:start="27:9" pos:end="27:40"><name pos:start="27:9" pos:end="27:35">blk_dev_has_removable_media</name><argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">blk</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:43" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:52">

        <expr_stmt pos:start="29:9" pos:end="29:35"><expr pos:start="29:9" pos:end="29:34"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:12">info</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:27">has_tray_open</name></name> <operator pos:start="29:29" pos:end="29:29">=</operator> <name pos:start="29:31" pos:end="29:34">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:52"><expr pos:start="31:9" pos:end="31:51"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:12">info</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:23">tray_open</name></name> <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:51"><name pos:start="31:27" pos:end="31:46">blk_dev_is_tray_open</name><argument_list pos:start="31:47" pos:end="31:51">(<argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:32">bdrv_iostatus_is_enabled</name><argument_list pos:start="37:33" pos:end="37:36">(<argument pos:start="37:34" pos:end="37:35"><expr pos:start="37:34" pos:end="37:35"><name pos:start="37:34" pos:end="37:35">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:39" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:39">

        <expr_stmt pos:start="39:9" pos:end="39:35"><expr pos:start="39:9" pos:end="39:34"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:12">info</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:27">has_io_status</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:34">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:12">info</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:23">io_status</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:38"><name pos:start="41:27" pos:end="41:28">bs</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:38">iostatus</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:41">(<expr pos:start="47:9" pos:end="47:40"><operator pos:start="47:9" pos:end="47:9">!</operator><call pos:start="47:10" pos:end="47:40"><name pos:start="47:10" pos:end="47:20">QLIST_EMPTY</name><argument_list pos:start="47:21" pos:end="47:40">(<argument pos:start="47:22" pos:end="47:39"><expr pos:start="47:22" pos:end="47:39"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:39"><name pos:start="47:23" pos:end="47:24">bs</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:39">dirty_bitmaps</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:43" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:59">

        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:12">info</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:31">has_dirty_bitmaps</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:38">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:59"><expr pos:start="51:9" pos:end="51:58"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:12">info</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:27">dirty_bitmaps</name></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <call pos:start="51:31" pos:end="51:58"><name pos:start="51:31" pos:end="51:54">bdrv_query_dirty_bitmaps</name><argument_list pos:start="51:55" pos:end="51:58">(<argument pos:start="51:56" pos:end="51:57"><expr pos:start="51:56" pos:end="51:57"><name pos:start="51:56" pos:end="51:57">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="97:5"><if pos:start="57:5" pos:end="97:5">if <condition pos:start="57:8" pos:end="57:16">(<expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:10">bs</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:15">drv</name></name></expr>)</condition> <block pos:start="57:18" pos:end="97:5">{<block_content pos:start="59:9" pos:end="95:9">

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:12">info</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:26">has_inserted</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <name pos:start="59:30" pos:end="59:33">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:52"><expr pos:start="61:9" pos:end="61:51"><name pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:12">info</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:22">inserted</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:51"><name pos:start="61:26" pos:end="61:47">bdrv_block_device_info</name><argument_list pos:start="61:48" pos:end="61:51">(<argument pos:start="61:49" pos:end="61:50"><expr pos:start="61:49" pos:end="61:50"><name pos:start="61:49" pos:end="61:50">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:17"><expr pos:start="65:9" pos:end="65:16"><name pos:start="65:9" pos:end="65:11">bs0</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:16">bs</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:46"><expr pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:20">p_image_info</name> <operator pos:start="67:22" pos:end="67:22">=</operator> <operator pos:start="67:24" pos:end="67:24">&amp;</operator><name pos:start="67:25" pos:end="67:45"><name pos:start="67:25" pos:end="67:28">info</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:38">inserted</name><operator pos:start="67:39" pos:end="67:40">-&gt;</operator><name pos:start="67:41" pos:end="67:45">image</name></name></expr>;</expr_stmt>

        <while pos:start="69:9" pos:end="95:9">while <condition pos:start="69:15" pos:end="69:17">(<expr pos:start="69:16" pos:end="69:16"><literal type="number" pos:start="69:16" pos:end="69:16">1</literal></expr>)</condition> <block pos:start="69:19" pos:end="95:9">{<block_content pos:start="71:13" pos:end="93:13">

            <expr_stmt pos:start="71:13" pos:end="71:65"><expr pos:start="71:13" pos:end="71:64"><call pos:start="71:13" pos:end="71:64"><name pos:start="71:13" pos:end="71:33">bdrv_query_image_info</name><argument_list pos:start="71:34" pos:end="71:64">(<argument pos:start="71:35" pos:end="71:37"><expr pos:start="71:35" pos:end="71:37"><name pos:start="71:35" pos:end="71:37">bs0</name></expr></argument>, <argument pos:start="71:40" pos:end="71:51"><expr pos:start="71:40" pos:end="71:51"><name pos:start="71:40" pos:end="71:51">p_image_info</name></expr></argument>, <argument pos:start="71:54" pos:end="71:63"><expr pos:start="71:54" pos:end="71:63"><operator pos:start="71:54" pos:end="71:54">&amp;</operator><name pos:start="71:55" pos:end="71:63">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:26">(<expr pos:start="73:17" pos:end="73:25"><name pos:start="73:17" pos:end="73:25">local_err</name></expr>)</condition> <block pos:start="73:28" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:25">

                <expr_stmt pos:start="75:17" pos:end="75:49"><expr pos:start="75:17" pos:end="75:48"><call pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:31">error_propagate</name><argument_list pos:start="75:32" pos:end="75:48">(<argument pos:start="75:33" pos:end="75:36"><expr pos:start="75:33" pos:end="75:36"><name pos:start="75:33" pos:end="75:36">errp</name></expr></argument>, <argument pos:start="75:39" pos:end="75:47"><expr pos:start="75:39" pos:end="75:47"><name pos:start="75:39" pos:end="75:47">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="77:17" pos:end="77:25">goto <name pos:start="77:22" pos:end="77:24">err</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="81:13" pos:end="93:13"><if pos:start="81:13" pos:end="89:13">if <condition pos:start="81:16" pos:end="81:44">(<expr pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">bs0</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:24">drv</name></name> <operator pos:start="81:26" pos:end="81:27">&amp;&amp;</operator> <name pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:31">bs0</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:43">backing_hd</name></name></expr>)</condition> <block pos:start="81:46" pos:end="89:13">{<block_content pos:start="83:17" pos:end="87:65">

                <expr_stmt pos:start="83:17" pos:end="83:38"><expr pos:start="83:17" pos:end="83:37"><name pos:start="83:17" pos:end="83:19">bs0</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:25">bs0</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:37">backing_hd</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:58"><expr pos:start="85:17" pos:end="85:57"><name pos:start="85:17" pos:end="85:50"><operator pos:start="85:17" pos:end="85:17">(</operator><operator pos:start="85:18" pos:end="85:18">*</operator><name pos:start="85:19" pos:end="85:30">p_image_info</name><operator pos:start="85:31" pos:end="85:31">)</operator><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:50">has_backing_image</name></name> <operator pos:start="85:52" pos:end="85:52">=</operator> <name pos:start="85:54" pos:end="85:57">true</name></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:65"><expr pos:start="87:17" pos:end="87:64"><name pos:start="87:17" pos:end="87:28">p_image_info</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <operator pos:start="87:32" pos:end="87:32">&amp;</operator><operator pos:start="87:33" pos:end="87:33">(</operator><name pos:start="87:34" pos:end="87:63"><operator pos:start="87:34" pos:end="87:34">(</operator><operator pos:start="87:35" pos:end="87:35">*</operator><name pos:start="87:36" pos:end="87:47">p_image_info</name><operator pos:start="87:48" pos:end="87:48">)</operator><operator pos:start="87:49" pos:end="87:50">-&gt;</operator><name pos:start="87:51" pos:end="87:63">backing_image</name></name><operator pos:start="87:64" pos:end="87:64">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="89:15" pos:end="93:13">else <block pos:start="89:20" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:19"><expr pos:start="101:5" pos:end="101:18"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:11">p_info</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:18">info</name></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:11">return;</return>



 <label pos:start="107:2" pos:end="107:5"><name pos:start="107:2" pos:end="107:4">err</name>:</label>

    <expr_stmt pos:start="109:5" pos:end="109:30"><expr pos:start="109:5" pos:end="109:29"><call pos:start="109:5" pos:end="109:29"><name pos:start="109:5" pos:end="109:23">qapi_free_BlockInfo</name><argument_list pos:start="109:24" pos:end="109:29">(<argument pos:start="109:25" pos:end="109:28"><expr pos:start="109:25" pos:end="109:28"><name pos:start="109:25" pos:end="109:28">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
