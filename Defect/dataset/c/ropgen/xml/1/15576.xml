<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15576.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:17">ff_load_image</name><parameter_list pos:start="1:18" pos:end="5:54">(<parameter pos:start="1:19" pos:end="1:34"><decl pos:start="1:19" pos:end="1:34"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:25">uint8_t</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:34"><name pos:start="1:28" pos:end="1:31">data</name><index pos:start="1:32" pos:end="1:34">[<expr pos:start="1:33" pos:end="1:33"><literal type="number" pos:start="1:33" pos:end="1:33">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:39">int</name></type> <name pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:48">linesize</name><index pos:start="1:49" pos:end="1:51">[<expr pos:start="1:50" pos:end="1:50"><literal type="number" pos:start="1:50" pos:end="1:50">4</literal></expr>]</index></name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:24"><decl pos:start="3:19" pos:end="3:24"><type pos:start="3:19" pos:end="3:24"><name pos:start="3:19" pos:end="3:21">int</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:24">w</name></decl></parameter>, <parameter pos:start="3:27" pos:end="3:32"><decl pos:start="3:27" pos:end="3:32"><type pos:start="3:27" pos:end="3:32"><name pos:start="3:27" pos:end="3:29">int</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:32">h</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:61"><decl pos:start="3:35" pos:end="3:61"><type pos:start="3:35" pos:end="3:61"><name pos:start="3:35" pos:end="3:52"><name pos:start="3:35" pos:end="3:38">enum</name> <name pos:start="3:40" pos:end="3:52">AVPixelFormat</name></name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:61">pix_fmt</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:38"><decl pos:start="5:19" pos:end="5:38"><type pos:start="5:19" pos:end="5:38"><specifier pos:start="5:19" pos:end="5:23">const</specifier> <name pos:start="5:25" pos:end="5:28">char</name> <modifier pos:start="5:30" pos:end="5:30">*</modifier></type><name pos:start="5:31" pos:end="5:38">filename</name></decl></parameter>, <parameter pos:start="5:41" pos:end="5:53"><decl pos:start="5:41" pos:end="5:53"><type pos:start="5:41" pos:end="5:53"><name pos:start="5:41" pos:end="5:44">void</name> <modifier pos:start="5:46" pos:end="5:46">*</modifier></type><name pos:start="5:47" pos:end="5:53">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="147:1">{<block_content pos:start="9:5" pos:end="145:15">

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">AVInputFormat</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">iformat</name> <init pos:start="9:28" pos:end="9:33">= <expr pos:start="9:30" pos:end="9:33"><name pos:start="9:30" pos:end="9:33">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">AVFormatContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:31">format_ctx</name> <init pos:start="11:33" pos:end="11:38">= <expr pos:start="11:35" pos:end="11:38"><name pos:start="11:35" pos:end="11:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVCodec</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:18">AVCodecContext</name> <modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:29">codec_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:18">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:21">frame_decoded</name></decl>, <decl pos:start="19:24" pos:end="19:30"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:26">ret</name> <init pos:start="19:28" pos:end="19:30">= <expr pos:start="19:30" pos:end="19:30"><literal type="number" pos:start="19:30" pos:end="19:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">AVPacket</name></type> <name pos:start="21:14" pos:end="21:16">pkt</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:19">av_register_all</name><argument_list pos:start="25:20" pos:end="25:21">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:11">iformat</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:44"><name pos:start="29:15" pos:end="29:34">av_find_input_format</name><argument_list pos:start="29:35" pos:end="29:44">(<argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><literal type="string" pos:start="29:36" pos:end="29:43">"image2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:78">(<expr pos:start="31:9" pos:end="31:77"><operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:72"><name pos:start="31:16" pos:end="31:34">avformat_open_input</name><argument_list pos:start="31:35" pos:end="31:72">(<argument pos:start="31:36" pos:end="31:46"><expr pos:start="31:36" pos:end="31:46"><operator pos:start="31:36" pos:end="31:36">&amp;</operator><name pos:start="31:37" pos:end="31:46">format_ctx</name></expr></argument>, <argument pos:start="31:49" pos:end="31:56"><expr pos:start="31:49" pos:end="31:56"><name pos:start="31:49" pos:end="31:56">filename</name></expr></argument>, <argument pos:start="31:59" pos:end="31:65"><expr pos:start="31:59" pos:end="31:65"><name pos:start="31:59" pos:end="31:65">iformat</name></expr></argument>, <argument pos:start="31:68" pos:end="31:71"><expr pos:start="31:68" pos:end="31:71"><name pos:start="31:68" pos:end="31:71">NULL</name></expr></argument>)</argument_list></call><operator pos:start="31:73" pos:end="31:73">)</operator> <operator pos:start="31:75" pos:end="31:75">&lt;</operator> <literal type="number" pos:start="31:77" pos:end="31:77">0</literal></expr>)</condition> <block pos:start="31:80" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:19">

        <expr_stmt pos:start="33:9" pos:end="35:61"><expr pos:start="33:9" pos:end="35:60"><call pos:start="33:9" pos:end="35:60"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:60">(<argument pos:start="33:16" pos:end="33:22"><expr pos:start="33:16" pos:end="33:22"><name pos:start="33:16" pos:end="33:22">log_ctx</name></expr></argument>, <argument pos:start="33:25" pos:end="33:36"><expr pos:start="33:25" pos:end="33:36"><name pos:start="33:25" pos:end="33:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:49"><expr pos:start="35:16" pos:end="35:49"><literal type="string" pos:start="35:16" pos:end="35:49">"Failed to open input file '%s'\n"</literal></expr></argument>, <argument pos:start="35:52" pos:end="35:59"><expr pos:start="35:52" pos:end="35:59"><name pos:start="35:52" pos:end="35:59">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:19">return <expr pos:start="37:16" pos:end="37:18"><name pos:start="37:16" pos:end="37:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:13">codec_ctx</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <name pos:start="43:17" pos:end="43:38"><name pos:start="43:17" pos:end="43:26">format_ctx</name><operator pos:start="43:27" pos:end="43:28">-&gt;</operator><name pos:start="43:29" pos:end="43:35">streams</name><index pos:start="43:36" pos:end="43:38">[<expr pos:start="43:37" pos:end="43:37"><literal type="number" pos:start="43:37" pos:end="43:37">0</literal></expr>]</index></name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:45">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:9">codec</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <call pos:start="45:13" pos:end="45:53"><name pos:start="45:13" pos:end="45:32">avcodec_find_decoder</name><argument_list pos:start="45:33" pos:end="45:53">(<argument pos:start="45:34" pos:end="45:52"><expr pos:start="45:34" pos:end="45:52"><name pos:start="45:34" pos:end="45:52"><name pos:start="45:34" pos:end="45:42">codec_ctx</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:52">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:15">(<expr pos:start="47:9" pos:end="47:14"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:14">codec</name></expr>)</condition> <block pos:start="47:17" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:17">

        <expr_stmt pos:start="49:9" pos:end="49:64"><expr pos:start="49:9" pos:end="49:63"><call pos:start="49:9" pos:end="49:63"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:63">(<argument pos:start="49:16" pos:end="49:22"><expr pos:start="49:16" pos:end="49:22"><name pos:start="49:16" pos:end="49:22">log_ctx</name></expr></argument>, <argument pos:start="49:25" pos:end="49:36"><expr pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:39" pos:end="49:62"><expr pos:start="49:39" pos:end="49:62"><literal type="string" pos:start="49:39" pos:end="49:62">"Failed to find codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:29"><name pos:start="51:15" pos:end="51:21">AVERROR</name><argument_list pos:start="51:22" pos:end="51:29">(<argument pos:start="51:23" pos:end="51:28"><expr pos:start="51:23" pos:end="51:28"><name pos:start="51:23" pos:end="51:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:58">(<expr pos:start="59:9" pos:end="59:57"><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:12">ret</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:52"><name pos:start="59:16" pos:end="59:28">avcodec_open2</name><argument_list pos:start="59:29" pos:end="59:52">(<argument pos:start="59:30" pos:end="59:38"><expr pos:start="59:30" pos:end="59:38"><name pos:start="59:30" pos:end="59:38">codec_ctx</name></expr></argument>, <argument pos:start="59:41" pos:end="59:45"><expr pos:start="59:41" pos:end="59:45"><name pos:start="59:41" pos:end="59:45">codec</name></expr></argument>, <argument pos:start="59:48" pos:end="59:51"><expr pos:start="59:48" pos:end="59:51"><name pos:start="59:48" pos:end="59:51">NULL</name></expr></argument>)</argument_list></call><operator pos:start="59:53" pos:end="59:53">)</operator> <operator pos:start="59:55" pos:end="59:55">&lt;</operator> <literal type="number" pos:start="59:57" pos:end="59:57">0</literal></expr>)</condition> <block pos:start="59:60" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:17">

        <expr_stmt pos:start="61:9" pos:end="61:64"><expr pos:start="61:9" pos:end="61:63"><call pos:start="61:9" pos:end="61:63"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:63">(<argument pos:start="61:16" pos:end="61:22"><expr pos:start="61:16" pos:end="61:22"><name pos:start="61:16" pos:end="61:22">log_ctx</name></expr></argument>, <argument pos:start="61:25" pos:end="61:36"><expr pos:start="61:25" pos:end="61:36"><name pos:start="61:25" pos:end="61:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:39" pos:end="61:62"><expr pos:start="61:39" pos:end="61:62"><literal type="string" pos:start="61:39" pos:end="61:62">"Failed to open codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:42">(<expr pos:start="69:9" pos:end="69:40"><operator pos:start="69:9" pos:end="69:9">!</operator><operator pos:start="69:10" pos:end="69:10">(</operator><name pos:start="69:11" pos:end="69:15">frame</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:39"><name pos:start="69:19" pos:end="69:37">avcodec_alloc_frame</name><argument_list pos:start="69:38" pos:end="69:39">()</argument_list></call><operator pos:start="69:40" pos:end="69:40">)</operator></expr> )</condition> <block pos:start="69:44" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:17">

        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><call pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:64">(<argument pos:start="71:16" pos:end="71:22"><expr pos:start="71:16" pos:end="71:22"><name pos:start="71:16" pos:end="71:22">log_ctx</name></expr></argument>, <argument pos:start="71:25" pos:end="71:36"><expr pos:start="71:25" pos:end="71:36"><name pos:start="71:25" pos:end="71:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:39" pos:end="71:63"><expr pos:start="71:39" pos:end="71:63"><literal type="string" pos:start="71:39" pos:end="71:63">"Failed to alloc frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:30"><expr pos:start="73:9" pos:end="73:29"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:29"><name pos:start="73:15" pos:end="73:21">AVERROR</name><argument_list pos:start="73:22" pos:end="73:29">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><name pos:start="73:23" pos:end="73:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="75:9" pos:end="75:17">goto <name pos:start="75:14" pos:end="75:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:42"><expr pos:start="81:5" pos:end="81:41"><name pos:start="81:5" pos:end="81:7">ret</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:41"><name pos:start="81:11" pos:end="81:23">av_read_frame</name><argument_list pos:start="81:24" pos:end="81:41">(<argument pos:start="81:25" pos:end="81:34"><expr pos:start="81:25" pos:end="81:34"><name pos:start="81:25" pos:end="81:34">format_ctx</name></expr></argument>, <argument pos:start="81:37" pos:end="81:40"><expr pos:start="81:37" pos:end="81:40"><operator pos:start="81:37" pos:end="81:37">&amp;</operator><name pos:start="81:38" pos:end="81:40">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:16">(<expr pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">&lt;</operator> <literal type="number" pos:start="83:15" pos:end="83:15">0</literal></expr>)</condition> <block pos:start="83:18" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:17">

        <expr_stmt pos:start="85:9" pos:end="85:74"><expr pos:start="85:9" pos:end="85:73"><call pos:start="85:9" pos:end="85:73"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:73">(<argument pos:start="85:16" pos:end="85:22"><expr pos:start="85:16" pos:end="85:22"><name pos:start="85:16" pos:end="85:22">log_ctx</name></expr></argument>, <argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:39" pos:end="85:72"><expr pos:start="85:39" pos:end="85:72"><literal type="string" pos:start="85:39" pos:end="85:72">"Failed to read frame from file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="87:9" pos:end="87:17">goto <name pos:start="87:14" pos:end="87:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:72"><expr pos:start="93:5" pos:end="93:71"><name pos:start="93:5" pos:end="93:7">ret</name> <operator pos:start="93:9" pos:end="93:9">=</operator> <call pos:start="93:11" pos:end="93:71"><name pos:start="93:11" pos:end="93:31">avcodec_decode_video2</name><argument_list pos:start="93:32" pos:end="93:71">(<argument pos:start="93:33" pos:end="93:41"><expr pos:start="93:33" pos:end="93:41"><name pos:start="93:33" pos:end="93:41">codec_ctx</name></expr></argument>, <argument pos:start="93:44" pos:end="93:48"><expr pos:start="93:44" pos:end="93:48"><name pos:start="93:44" pos:end="93:48">frame</name></expr></argument>, <argument pos:start="93:51" pos:end="93:64"><expr pos:start="93:51" pos:end="93:64"><operator pos:start="93:51" pos:end="93:51">&amp;</operator><name pos:start="93:52" pos:end="93:64">frame_decoded</name></expr></argument>, <argument pos:start="93:67" pos:end="93:70"><expr pos:start="93:67" pos:end="93:70"><operator pos:start="93:67" pos:end="93:67">&amp;</operator><name pos:start="93:68" pos:end="93:70">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="101:5"><if pos:start="95:5" pos:end="101:5">if <condition pos:start="95:8" pos:end="95:34">(<expr pos:start="95:9" pos:end="95:33"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">&lt;</operator> <literal type="number" pos:start="95:15" pos:end="95:15">0</literal> <operator pos:start="95:17" pos:end="95:18">||</operator> <operator pos:start="95:20" pos:end="95:20">!</operator><name pos:start="95:21" pos:end="95:33">frame_decoded</name></expr>)</condition> <block pos:start="95:36" pos:end="101:5">{<block_content pos:start="97:9" pos:end="99:17">

        <expr_stmt pos:start="97:9" pos:end="97:76"><expr pos:start="97:9" pos:end="97:75"><call pos:start="97:9" pos:end="97:75"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="97:75">(<argument pos:start="97:16" pos:end="97:22"><expr pos:start="97:16" pos:end="97:22"><name pos:start="97:16" pos:end="97:22">log_ctx</name></expr></argument>, <argument pos:start="97:25" pos:end="97:36"><expr pos:start="97:25" pos:end="97:36"><name pos:start="97:25" pos:end="97:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:39" pos:end="97:74"><expr pos:start="97:39" pos:end="97:74"><literal type="string" pos:start="97:39" pos:end="97:74">"Failed to decode image from file\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="99:9" pos:end="99:17">goto <name pos:start="99:14" pos:end="99:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:12"><expr pos:start="103:5" pos:end="103:11"><name pos:start="103:5" pos:end="103:7">ret</name> <operator pos:start="103:9" pos:end="103:9">=</operator> <literal type="number" pos:start="103:11" pos:end="103:11">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><operator pos:start="107:5" pos:end="107:5">*</operator><name pos:start="107:6" pos:end="107:6">w</name>       <operator pos:start="107:14" pos:end="107:14">=</operator> <name pos:start="107:16" pos:end="107:27"><name pos:start="107:16" pos:end="107:20">frame</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:27">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><operator pos:start="109:5" pos:end="109:5">*</operator><name pos:start="109:6" pos:end="109:6">h</name>       <operator pos:start="109:14" pos:end="109:14">=</operator> <name pos:start="109:16" pos:end="109:28"><name pos:start="109:16" pos:end="109:20">frame</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:28">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:29"><expr pos:start="111:5" pos:end="111:28"><operator pos:start="111:5" pos:end="111:5">*</operator><name pos:start="111:6" pos:end="111:12">pix_fmt</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <name pos:start="111:16" pos:end="111:28"><name pos:start="111:16" pos:end="111:20">frame</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:28">format</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:17"><if pos:start="115:5" pos:end="117:17">if <condition pos:start="115:8" pos:end="115:73">(<expr pos:start="115:9" pos:end="115:72"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:12">ret</name> <operator pos:start="115:14" pos:end="115:14">=</operator> <call pos:start="115:16" pos:end="115:67"><name pos:start="115:16" pos:end="115:29">av_image_alloc</name><argument_list pos:start="115:30" pos:end="115:67">(<argument pos:start="115:31" pos:end="115:34"><expr pos:start="115:31" pos:end="115:34"><name pos:start="115:31" pos:end="115:34">data</name></expr></argument>, <argument pos:start="115:37" pos:end="115:44"><expr pos:start="115:37" pos:end="115:44"><name pos:start="115:37" pos:end="115:44">linesize</name></expr></argument>, <argument pos:start="115:47" pos:end="115:48"><expr pos:start="115:47" pos:end="115:48"><operator pos:start="115:47" pos:end="115:47">*</operator><name pos:start="115:48" pos:end="115:48">w</name></expr></argument>, <argument pos:start="115:51" pos:end="115:52"><expr pos:start="115:51" pos:end="115:52"><operator pos:start="115:51" pos:end="115:51">*</operator><name pos:start="115:52" pos:end="115:52">h</name></expr></argument>, <argument pos:start="115:55" pos:end="115:62"><expr pos:start="115:55" pos:end="115:62"><operator pos:start="115:55" pos:end="115:55">*</operator><name pos:start="115:56" pos:end="115:62">pix_fmt</name></expr></argument>, <argument pos:start="115:65" pos:end="115:66"><expr pos:start="115:65" pos:end="115:66"><literal type="number" pos:start="115:65" pos:end="115:66">16</literal></expr></argument>)</argument_list></call><operator pos:start="115:68" pos:end="115:68">)</operator> <operator pos:start="115:70" pos:end="115:70">&lt;</operator> <literal type="number" pos:start="115:72" pos:end="115:72">0</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:17"><block_content pos:start="117:9" pos:end="117:17">

        <goto pos:start="117:9" pos:end="117:17">goto <name pos:start="117:14" pos:end="117:16">end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:12"><expr pos:start="119:5" pos:end="119:11"><name pos:start="119:5" pos:end="119:7">ret</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <literal type="number" pos:start="119:11" pos:end="119:11">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:100"><expr pos:start="123:5" pos:end="123:99"><call pos:start="123:5" pos:end="123:99"><name pos:start="123:5" pos:end="123:17">av_image_copy</name><argument_list pos:start="123:18" pos:end="123:99">(<argument pos:start="123:19" pos:end="123:22"><expr pos:start="123:19" pos:end="123:22"><name pos:start="123:19" pos:end="123:22">data</name></expr></argument>, <argument pos:start="123:25" pos:end="123:32"><expr pos:start="123:25" pos:end="123:32"><name pos:start="123:25" pos:end="123:32">linesize</name></expr></argument>, <argument pos:start="123:35" pos:end="123:63"><expr pos:start="123:35" pos:end="123:63"><operator pos:start="123:35" pos:end="123:35">(</operator><specifier pos:start="123:36" pos:end="123:40">const</specifier> <name pos:start="123:42" pos:end="123:48">uint8_t</name> <operator pos:start="123:50" pos:end="123:50">*</operator><operator pos:start="123:51" pos:end="123:51">*</operator><operator pos:start="123:52" pos:end="123:52">)</operator><name pos:start="123:53" pos:end="123:63"><name pos:start="123:53" pos:end="123:57">frame</name><operator pos:start="123:58" pos:end="123:59">-&gt;</operator><name pos:start="123:60" pos:end="123:63">data</name></name></expr></argument>, <argument pos:start="123:66" pos:end="123:80"><expr pos:start="123:66" pos:end="123:80"><name pos:start="123:66" pos:end="123:80"><name pos:start="123:66" pos:end="123:70">frame</name><operator pos:start="123:71" pos:end="123:72">-&gt;</operator><name pos:start="123:73" pos:end="123:80">linesize</name></name></expr></argument>, <argument pos:start="123:83" pos:end="123:90"><expr pos:start="123:83" pos:end="123:90"><operator pos:start="123:83" pos:end="123:83">*</operator><name pos:start="123:84" pos:end="123:90">pix_fmt</name></expr></argument>, <argument pos:start="123:93" pos:end="123:94"><expr pos:start="123:93" pos:end="123:94"><operator pos:start="123:93" pos:end="123:93">*</operator><name pos:start="123:94" pos:end="123:94">w</name></expr></argument>, <argument pos:start="123:97" pos:end="123:98"><expr pos:start="123:97" pos:end="123:98"><operator pos:start="123:97" pos:end="123:97">*</operator><name pos:start="123:98" pos:end="123:98">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="127:1" pos:end="127:4"><name pos:start="127:1" pos:end="127:3">end</name>:</label>

    <if_stmt pos:start="129:5" pos:end="131:33"><if pos:start="129:5" pos:end="131:33">if <condition pos:start="129:8" pos:end="129:18">(<expr pos:start="129:9" pos:end="129:17"><name pos:start="129:9" pos:end="129:17">codec_ctx</name></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:33"><block_content pos:start="131:9" pos:end="131:33">

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><call pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:21">avcodec_close</name><argument_list pos:start="131:22" pos:end="131:32">(<argument pos:start="131:23" pos:end="131:31"><expr pos:start="131:23" pos:end="131:31"><name pos:start="131:23" pos:end="131:31">codec_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="133:5" pos:end="135:42"><if pos:start="133:5" pos:end="135:42">if <condition pos:start="133:8" pos:end="133:19">(<expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:18">format_ctx</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:42"><block_content pos:start="135:9" pos:end="135:42">

        <expr_stmt pos:start="135:9" pos:end="135:42"><expr pos:start="135:9" pos:end="135:41"><call pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:28">avformat_close_input</name><argument_list pos:start="135:29" pos:end="135:41">(<argument pos:start="135:30" pos:end="135:40"><expr pos:start="135:30" pos:end="135:40"><operator pos:start="135:30" pos:end="135:30">&amp;</operator><name pos:start="135:31" pos:end="135:40">format_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:21"><expr pos:start="137:5" pos:end="137:20"><call pos:start="137:5" pos:end="137:20"><name pos:start="137:5" pos:end="137:12">av_freep</name><argument_list pos:start="137:13" pos:end="137:20">(<argument pos:start="137:14" pos:end="137:19"><expr pos:start="137:14" pos:end="137:19"><operator pos:start="137:14" pos:end="137:14">&amp;</operator><name pos:start="137:15" pos:end="137:19">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="143:83"><if pos:start="141:5" pos:end="143:83">if <condition pos:start="141:8" pos:end="141:16">(<expr pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:11">ret</name> <operator pos:start="141:13" pos:end="141:13">&lt;</operator> <literal type="number" pos:start="141:15" pos:end="141:15">0</literal></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:83"><block_content pos:start="143:9" pos:end="143:83">

        <expr_stmt pos:start="143:9" pos:end="143:83"><expr pos:start="143:9" pos:end="143:82"><call pos:start="143:9" pos:end="143:82"><name pos:start="143:9" pos:end="143:14">av_log</name><argument_list pos:start="143:15" pos:end="143:82">(<argument pos:start="143:16" pos:end="143:22"><expr pos:start="143:16" pos:end="143:22"><name pos:start="143:16" pos:end="143:22">log_ctx</name></expr></argument>, <argument pos:start="143:25" pos:end="143:36"><expr pos:start="143:25" pos:end="143:36"><name pos:start="143:25" pos:end="143:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:39" pos:end="143:71"><expr pos:start="143:39" pos:end="143:71"><literal type="string" pos:start="143:39" pos:end="143:71">"Error loading image file '%s'\n"</literal></expr></argument>, <argument pos:start="143:74" pos:end="143:81"><expr pos:start="143:74" pos:end="143:81"><name pos:start="143:74" pos:end="143:81">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="145:5" pos:end="145:15">return <expr pos:start="145:12" pos:end="145:14"><name pos:start="145:12" pos:end="145:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
