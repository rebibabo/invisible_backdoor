<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26714.c" pos:tabs="8"><function pos:start="1:1" pos:end="257:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="3:60">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:51">void</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">data</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:42"><decl pos:start="3:29" pos:end="3:42"><type pos:start="3:29" pos:end="3:42"><name pos:start="3:29" pos:end="3:31">int</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:42">data_size</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:59"><decl pos:start="3:45" pos:end="3:59"><type pos:start="3:45" pos:end="3:59"><name pos:start="3:45" pos:end="3:52">AVPacket</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:59">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="257:1">{<block_content pos:start="7:5" pos:end="255:20">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">buf</name> <init pos:start="7:24" pos:end="7:36">= <expr pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:36"><name pos:start="7:26" pos:end="7:30">avpkt</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">buf_size</name> <init pos:start="9:18" pos:end="9:30">= <expr pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:30"><name pos:start="9:20" pos:end="9:24">avpkt</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:21">C93DecoderContext</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier> <specifier pos:start="11:25" pos:end="11:29">const</specifier></type> <name pos:start="11:31" pos:end="11:33">c93</name> <init pos:start="11:35" pos:end="11:52">= <expr pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:52"><name pos:start="11:37" pos:end="11:41">avctx</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:52">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:61"><decl pos:start="13:5" pos:end="13:60"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier> <specifier pos:start="13:15" pos:end="13:19">const</specifier></type> <name pos:start="13:21" pos:end="13:26">newpic</name> <init pos:start="13:28" pos:end="13:60">= <expr pos:start="13:30" pos:end="13:60"><operator pos:start="13:30" pos:end="13:30">&amp;</operator><name pos:start="13:31" pos:end="13:60"><name pos:start="13:31" pos:end="13:33">c93</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:43">pictures</name><index pos:start="13:44" pos:end="13:60">[<expr pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:59"><name pos:start="13:45" pos:end="13:47">c93</name><operator pos:start="13:48" pos:end="13:49">-&gt;</operator><name pos:start="13:50" pos:end="13:59">currentpic</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:62"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier> <specifier pos:start="15:15" pos:end="15:19">const</specifier></type> <name pos:start="15:21" pos:end="15:26">oldpic</name> <init pos:start="15:28" pos:end="15:62">= <expr pos:start="15:30" pos:end="15:62"><operator pos:start="15:30" pos:end="15:30">&amp;</operator><name pos:start="15:31" pos:end="15:62"><name pos:start="15:31" pos:end="15:33">c93</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:43">pictures</name><index pos:start="15:44" pos:end="15:62">[<expr pos:start="15:45" pos:end="15:61"><name pos:start="15:45" pos:end="15:59"><name pos:start="15:45" pos:end="15:47">c93</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:59">currentpic</name></name><operator pos:start="15:60" pos:end="15:60">^</operator><literal type="number" pos:start="15:61" pos:end="15:61">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">AVFrame</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:20">picture</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">out</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:14"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:14">stride</name></decl>, <decl pos:start="21:17" pos:end="21:17"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:17" pos:end="21:17">i</name></decl>, <decl pos:start="21:20" pos:end="21:20"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:20" pos:end="21:20">x</name></decl>, <decl pos:start="21:23" pos:end="21:23"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:23" pos:end="21:23">y</name></decl>, <decl pos:start="21:26" pos:end="21:31"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:26" pos:end="21:27">bt</name> <init pos:start="21:29" pos:end="21:31">= <expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:7">c93</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:19">currentpic</name></name> <operator pos:start="25:21" pos:end="25:22">^=</operator> <literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:10">newpic</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:21">reference</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="33:77"><expr pos:start="31:5" pos:end="33:76"><name pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:10">newpic</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:24">buffer_hints</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:48">FF_BUFFER_HINTS_VALID</name> <operator pos:start="31:50" pos:end="31:50">|</operator> <name pos:start="31:52" pos:end="31:75">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="31:77" pos:end="31:77">|</operator>

                         <name pos:start="33:26" pos:end="33:49">FF_BUFFER_HINTS_REUSABLE</name> <operator pos:start="33:51" pos:end="33:51">|</operator> <name pos:start="33:53" pos:end="33:76">FF_BUFFER_HINTS_READABLE</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:27">reget_buffer</name></name><argument_list pos:start="35:28" pos:end="35:42">(<argument pos:start="35:29" pos:end="35:33"><expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:33">avctx</name></expr></argument>, <argument pos:start="35:36" pos:end="35:41"><expr pos:start="35:36" pos:end="35:41"><name pos:start="35:36" pos:end="35:41">newpic</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:45" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:63"><expr pos:start="37:9" pos:end="37:62"><call pos:start="37:9" pos:end="37:62"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:62">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20">avctx</name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:61"><expr pos:start="37:37" pos:end="37:61"><literal type="string" pos:start="37:37" pos:end="37:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:10">stride</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:32"><name pos:start="45:14" pos:end="45:19">newpic</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:29">linesize</name><index pos:start="45:30" pos:end="45:32">[<expr pos:start="45:31" pos:end="45:31"><literal type="number" pos:start="45:31" pos:end="45:31">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="61:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:33">(<expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:11">buf</name><index pos:start="49:12" pos:end="49:14">[<expr pos:start="49:13" pos:end="49:13"><literal type="number" pos:start="49:13" pos:end="49:13">0</literal></expr>]</index></name> <operator pos:start="49:16" pos:end="49:16">&amp;</operator> <name pos:start="49:18" pos:end="49:32">C93_FIRST_FRAME</name></expr>)</condition> <block pos:start="49:35" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:30">

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:14">newpic</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:25">pict_type</name></name> <operator pos:start="51:27" pos:end="51:27">=</operator> <name pos:start="51:29" pos:end="51:45">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:14">newpic</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:25">key_frame</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="61:5">else <block pos:start="55:12" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:30">

        <expr_stmt pos:start="57:9" pos:end="57:46"><expr pos:start="57:9" pos:end="57:45"><name pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:14">newpic</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">pict_type</name></name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:45">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:14">newpic</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:25">key_frame</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="83:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="65:33">(<expr pos:start="65:9" pos:end="65:32"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:12">buf</name><operator pos:start="65:13" pos:end="65:14">++</operator> <operator pos:start="65:16" pos:end="65:16">&amp;</operator> <name pos:start="65:18" pos:end="65:32">C93_HAS_PALETTE</name></expr>)</condition> <block pos:start="65:35" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <decl_stmt pos:start="67:9" pos:end="67:57"><decl pos:start="67:9" pos:end="67:56"><type pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:16">uint32_t</name> <modifier pos:start="67:18" pos:end="67:18">*</modifier></type><name pos:start="67:19" pos:end="67:25">palette</name> <init pos:start="67:27" pos:end="67:56">= <expr pos:start="67:29" pos:end="67:56"><operator pos:start="67:29" pos:end="67:29">(</operator><name pos:start="67:30" pos:end="67:37">uint32_t</name> <operator pos:start="67:39" pos:end="67:39">*</operator><operator pos:start="67:40" pos:end="67:40">)</operator> <name pos:start="67:42" pos:end="67:56"><name pos:start="67:42" pos:end="67:47">newpic</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:53">data</name><index pos:start="67:54" pos:end="67:56">[<expr pos:start="67:55" pos:end="67:55"><literal type="number" pos:start="67:55" pos:end="67:55">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="69:9" pos:end="69:57"><decl pos:start="69:9" pos:end="69:56"><type pos:start="69:9" pos:end="69:23"><specifier pos:start="69:9" pos:end="69:13">const</specifier> <name pos:start="69:15" pos:end="69:21">uint8_t</name> <modifier pos:start="69:23" pos:end="69:23">*</modifier></type><name pos:start="69:24" pos:end="69:29">palbuf</name> <init pos:start="69:31" pos:end="69:56">= <expr pos:start="69:33" pos:end="69:56"><name pos:start="69:33" pos:end="69:35">buf</name> <operator pos:start="69:37" pos:end="69:37">+</operator> <name pos:start="69:39" pos:end="69:46">buf_size</name> <operator pos:start="69:48" pos:end="69:48">-</operator> <literal type="number" pos:start="69:50" pos:end="69:54">768</literal> <operator pos:start="69:54" pos:end="69:54">-</operator> <literal type="number" pos:start="69:56" pos:end="69:56">1</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="71:9" pos:end="75:9">for <control pos:start="71:13" pos:end="71:33">(<init pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:18"><name pos:start="71:14" pos:end="71:14">i</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <literal type="number" pos:start="71:18" pos:end="71:18">0</literal></expr>;</init> <condition pos:start="71:21" pos:end="71:28"><expr pos:start="71:21" pos:end="71:27"><name pos:start="71:21" pos:end="71:21">i</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <literal type="number" pos:start="71:25" pos:end="71:27">256</literal></expr>;</condition> <incr pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:30">i</name><operator pos:start="71:31" pos:end="71:32">++</operator></expr></incr>)</control> <block pos:start="71:35" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:54">

            <expr_stmt pos:start="73:13" pos:end="73:54"><expr pos:start="73:13" pos:end="73:53"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:19">palette</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><name pos:start="73:21" pos:end="73:21">i</name></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:53"><name pos:start="73:26" pos:end="73:44">bytestream_get_be24</name><argument_list pos:start="73:45" pos:end="73:53">(<argument pos:start="73:46" pos:end="73:52"><expr pos:start="73:46" pos:end="73:52"><operator pos:start="73:46" pos:end="73:46">&amp;</operator><name pos:start="73:47" pos:end="73:52">palbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="77:7" pos:end="83:5">else <block pos:start="77:12" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:62">

        <if_stmt pos:start="79:9" pos:end="81:62"><if pos:start="79:9" pos:end="81:62">if <condition pos:start="79:12" pos:end="79:28">(<expr pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:18">oldpic</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:24">data</name><index pos:start="79:25" pos:end="79:27">[<expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:62"><block_content pos:start="81:13" pos:end="81:62">

            <expr_stmt pos:start="81:13" pos:end="81:62"><expr pos:start="81:13" pos:end="81:61"><call pos:start="81:13" pos:end="81:61"><name pos:start="81:13" pos:end="81:18">memcpy</name><argument_list pos:start="81:19" pos:end="81:61">(<argument pos:start="81:20" pos:end="81:34"><expr pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:25">newpic</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:31">data</name><index pos:start="81:32" pos:end="81:34">[<expr pos:start="81:33" pos:end="81:33"><literal type="number" pos:start="81:33" pos:end="81:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:37" pos:end="81:51"><expr pos:start="81:37" pos:end="81:51"><name pos:start="81:37" pos:end="81:51"><name pos:start="81:37" pos:end="81:42">oldpic</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:48">data</name><index pos:start="81:49" pos:end="81:51">[<expr pos:start="81:50" pos:end="81:50"><literal type="number" pos:start="81:50" pos:end="81:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:54" pos:end="81:60"><expr pos:start="81:54" pos:end="81:60"><literal type="number" pos:start="81:54" pos:end="81:56">256</literal> <operator pos:start="81:58" pos:end="81:58">*</operator> <literal type="number" pos:start="81:60" pos:end="81:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <for pos:start="87:5" pos:end="245:5">for <control pos:start="87:9" pos:end="87:35">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">y</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:27"><expr pos:start="87:17" pos:end="87:26"><name pos:start="87:17" pos:end="87:17">y</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:26">HEIGHT</name></expr>;</condition> <incr pos:start="87:29" pos:end="87:34"><expr pos:start="87:29" pos:end="87:34"><name pos:start="87:29" pos:end="87:29">y</name> <operator pos:start="87:31" pos:end="87:32">+=</operator> <literal type="number" pos:start="87:34" pos:end="87:34">8</literal></expr></incr>)</control> <block pos:start="87:37" pos:end="245:5">{<block_content pos:start="89:9" pos:end="243:9">

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:11">out</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <name pos:start="89:15" pos:end="89:29"><name pos:start="89:15" pos:end="89:20">newpic</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:26">data</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr>]</index></name> <operator pos:start="89:31" pos:end="89:31">+</operator> <name pos:start="89:33" pos:end="89:33">y</name> <operator pos:start="89:35" pos:end="89:35">*</operator> <name pos:start="89:37" pos:end="89:42">stride</name></expr>;</expr_stmt>

        <for pos:start="91:9" pos:end="243:9">for <control pos:start="91:13" pos:end="91:38">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">x</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:30"><expr pos:start="91:21" pos:end="91:29"><name pos:start="91:21" pos:end="91:21">x</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:29">WIDTH</name></expr>;</condition> <incr pos:start="91:32" pos:end="91:37"><expr pos:start="91:32" pos:end="91:37"><name pos:start="91:32" pos:end="91:32">x</name> <operator pos:start="91:34" pos:end="91:35">+=</operator> <literal type="number" pos:start="91:37" pos:end="91:37">8</literal></expr></incr>)</control> <block pos:start="91:40" pos:end="243:9">{<block_content pos:start="93:13" pos:end="241:21">

            <decl_stmt pos:start="93:13" pos:end="93:49"><decl pos:start="93:13" pos:end="93:48"><type pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:19">uint8_t</name> <modifier pos:start="93:21" pos:end="93:21">*</modifier></type><name pos:start="93:22" pos:end="93:30">copy_from</name> <init pos:start="93:32" pos:end="93:48">= <expr pos:start="93:34" pos:end="93:48"><name pos:start="93:34" pos:end="93:48"><name pos:start="93:34" pos:end="93:39">oldpic</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:45">data</name><index pos:start="93:46" pos:end="93:48">[<expr pos:start="93:47" pos:end="93:47"><literal type="number" pos:start="93:47" pos:end="93:47">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="95:13" pos:end="95:35"><decl pos:start="95:13" pos:end="95:31"><type pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:20">unsigned</name> <name pos:start="95:22" pos:end="95:24">int</name></type> <name pos:start="95:26" pos:end="95:31">offset</name></decl>, <decl pos:start="95:34" pos:end="95:34"><type ref="prev" pos:start="95:13" pos:end="95:24"/><name pos:start="95:34" pos:end="95:34">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:37"><decl pos:start="97:13" pos:end="97:27"><type pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:19">uint8_t</name></type> <name pos:start="97:21" pos:end="97:27"><name pos:start="97:21" pos:end="97:24">cols</name><index pos:start="97:25" pos:end="97:27">[<expr pos:start="97:26" pos:end="97:26"><literal type="number" pos:start="97:26" pos:end="97:26">4</literal></expr>]</index></name></decl>, <decl pos:start="97:30" pos:end="97:36"><type ref="prev" pos:start="97:13" pos:end="97:19"/><name pos:start="97:30" pos:end="97:36"><name pos:start="97:30" pos:end="97:33">grps</name><index pos:start="97:34" pos:end="97:36">[<expr pos:start="97:35" pos:end="97:35"><literal type="number" pos:start="97:35" pos:end="97:35">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="99:13" pos:end="99:36"><decl pos:start="99:13" pos:end="99:35"><type pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:24">C93BlockType</name></type> <name pos:start="99:26" pos:end="99:35">block_type</name></decl>;</decl_stmt>



            <if_stmt pos:start="103:13" pos:end="105:28"><if pos:start="103:13" pos:end="105:28">if <condition pos:start="103:16" pos:end="103:20">(<expr pos:start="103:17" pos:end="103:19"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:19">bt</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:28"><block_content pos:start="105:17" pos:end="105:28">

                <expr_stmt pos:start="105:17" pos:end="105:28"><expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:18">bt</name> <operator pos:start="105:20" pos:end="105:20">=</operator> <operator pos:start="105:22" pos:end="105:22">*</operator><name pos:start="105:23" pos:end="105:25">buf</name><operator pos:start="105:26" pos:end="105:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:34"><expr pos:start="109:13" pos:end="109:33"><name pos:start="109:13" pos:end="109:22">block_type</name><operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:26">bt</name> <operator pos:start="109:28" pos:end="109:28">&amp;</operator> <literal type="number" pos:start="109:30" pos:end="109:33">0x0F</literal></expr>;</expr_stmt>

            <switch pos:start="111:13" pos:end="237:13">switch <condition pos:start="111:20" pos:end="111:31">(<expr pos:start="111:21" pos:end="111:30"><name pos:start="111:21" pos:end="111:30">block_type</name></expr>)</condition> <block pos:start="111:33" pos:end="237:13">{<block_content pos:start="113:13" pos:end="235:26">

            <case pos:start="113:13" pos:end="113:35">case <expr pos:start="113:18" pos:end="113:34"><name pos:start="113:18" pos:end="113:34">C93_8X8_FROM_PREV</name></expr>:</case>

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:22">offset</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:50"><name pos:start="115:26" pos:end="115:44">bytestream_get_le16</name><argument_list pos:start="115:45" pos:end="115:50">(<argument pos:start="115:46" pos:end="115:49"><expr pos:start="115:46" pos:end="115:49"><operator pos:start="115:46" pos:end="115:46">&amp;</operator><name pos:start="115:47" pos:end="115:49">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="117:17" pos:end="119:30"><if pos:start="117:17" pos:end="119:30">if <condition pos:start="117:20" pos:end="117:73">(<expr pos:start="117:21" pos:end="117:72"><call pos:start="117:21" pos:end="117:72"><name pos:start="117:21" pos:end="117:30">copy_block</name><argument_list pos:start="117:31" pos:end="117:72">(<argument pos:start="117:32" pos:end="117:36"><expr pos:start="117:32" pos:end="117:36"><name pos:start="117:32" pos:end="117:36">avctx</name></expr></argument>, <argument pos:start="117:39" pos:end="117:41"><expr pos:start="117:39" pos:end="117:41"><name pos:start="117:39" pos:end="117:41">out</name></expr></argument>, <argument pos:start="117:44" pos:end="117:52"><expr pos:start="117:44" pos:end="117:52"><name pos:start="117:44" pos:end="117:52">copy_from</name></expr></argument>, <argument pos:start="117:55" pos:end="117:60"><expr pos:start="117:55" pos:end="117:60"><name pos:start="117:55" pos:end="117:60">offset</name></expr></argument>, <argument pos:start="117:63" pos:end="117:63"><expr pos:start="117:63" pos:end="117:63"><literal type="number" pos:start="117:63" pos:end="117:63">8</literal></expr></argument>, <argument pos:start="117:66" pos:end="117:71"><expr pos:start="117:66" pos:end="117:71"><name pos:start="117:66" pos:end="117:71">stride</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="119:21" pos:end="119:30"><block_content pos:start="119:21" pos:end="119:30">

                    <return pos:start="119:21" pos:end="119:30">return <expr pos:start="119:28" pos:end="119:29"><operator pos:start="119:28" pos:end="119:28">-</operator><literal type="number" pos:start="119:29" pos:end="119:29">1</literal></expr>;</return></block_content></block></if></if_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>



            <case pos:start="125:13" pos:end="125:35">case <expr pos:start="125:18" pos:end="125:34"><name pos:start="125:18" pos:end="125:34">C93_4X4_FROM_CURR</name></expr>:</case>

                <expr_stmt pos:start="127:17" pos:end="127:44"><expr pos:start="127:17" pos:end="127:43"><name pos:start="127:17" pos:end="127:25">copy_from</name> <operator pos:start="127:27" pos:end="127:27">=</operator> <name pos:start="127:29" pos:end="127:43"><name pos:start="127:29" pos:end="127:34">newpic</name><operator pos:start="127:35" pos:end="127:36">-&gt;</operator><name pos:start="127:37" pos:end="127:40">data</name><index pos:start="127:41" pos:end="127:43">[<expr pos:start="127:42" pos:end="127:42"><literal type="number" pos:start="127:42" pos:end="127:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <case pos:start="129:13" pos:end="129:35">case <expr pos:start="129:18" pos:end="129:34"><name pos:start="129:18" pos:end="129:34">C93_4X4_FROM_PREV</name></expr>:</case>

                <for pos:start="131:17" pos:end="145:17">for <control pos:start="131:21" pos:end="131:42">(<init pos:start="131:22" pos:end="131:27"><expr pos:start="131:22" pos:end="131:26"><name pos:start="131:22" pos:end="131:22">j</name> <operator pos:start="131:24" pos:end="131:24">=</operator> <literal type="number" pos:start="131:26" pos:end="131:26">0</literal></expr>;</init> <condition pos:start="131:29" pos:end="131:34"><expr pos:start="131:29" pos:end="131:33"><name pos:start="131:29" pos:end="131:29">j</name> <operator pos:start="131:31" pos:end="131:31">&lt;</operator> <literal type="number" pos:start="131:33" pos:end="131:33">8</literal></expr>;</condition> <incr pos:start="131:36" pos:end="131:41"><expr pos:start="131:36" pos:end="131:41"><name pos:start="131:36" pos:end="131:36">j</name> <operator pos:start="131:38" pos:end="131:39">+=</operator> <literal type="number" pos:start="131:41" pos:end="131:41">4</literal></expr></incr>)</control> <block pos:start="131:44" pos:end="145:17">{<block_content pos:start="133:21" pos:end="143:21">

                    <for pos:start="133:21" pos:end="143:21">for <control pos:start="133:25" pos:end="133:46">(<init pos:start="133:26" pos:end="133:31"><expr pos:start="133:26" pos:end="133:30"><name pos:start="133:26" pos:end="133:26">i</name> <operator pos:start="133:28" pos:end="133:28">=</operator> <literal type="number" pos:start="133:30" pos:end="133:30">0</literal></expr>;</init> <condition pos:start="133:33" pos:end="133:38"><expr pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:33">i</name> <operator pos:start="133:35" pos:end="133:35">&lt;</operator> <literal type="number" pos:start="133:37" pos:end="133:37">8</literal></expr>;</condition> <incr pos:start="133:40" pos:end="133:45"><expr pos:start="133:40" pos:end="133:45"><name pos:start="133:40" pos:end="133:40">i</name> <operator pos:start="133:42" pos:end="133:43">+=</operator> <literal type="number" pos:start="133:45" pos:end="133:45">4</literal></expr></incr>)</control> <block pos:start="133:48" pos:end="143:21">{<block_content pos:start="135:25" pos:end="141:38">

                        <expr_stmt pos:start="135:25" pos:end="135:59"><expr pos:start="135:25" pos:end="135:58"><name pos:start="135:25" pos:end="135:30">offset</name> <operator pos:start="135:32" pos:end="135:32">=</operator> <call pos:start="135:34" pos:end="135:58"><name pos:start="135:34" pos:end="135:52">bytestream_get_le16</name><argument_list pos:start="135:53" pos:end="135:58">(<argument pos:start="135:54" pos:end="135:57"><expr pos:start="135:54" pos:end="135:57"><operator pos:start="135:54" pos:end="135:54">&amp;</operator><name pos:start="135:55" pos:end="135:57">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="137:25" pos:end="141:38"><if pos:start="137:25" pos:end="141:38">if <condition pos:start="137:28" pos:end="139:73">(<expr pos:start="137:29" pos:end="139:72"><call pos:start="137:29" pos:end="139:72"><name pos:start="137:29" pos:end="137:38">copy_block</name><argument_list pos:start="137:39" pos:end="139:72">(<argument pos:start="137:40" pos:end="137:44"><expr pos:start="137:40" pos:end="137:44"><name pos:start="137:40" pos:end="137:44">avctx</name></expr></argument>, <argument pos:start="137:47" pos:end="137:62"><expr pos:start="137:47" pos:end="137:62"><operator pos:start="137:47" pos:end="137:47">&amp;</operator><name pos:start="137:48" pos:end="137:62"><name pos:start="137:48" pos:end="137:50">out</name><index pos:start="137:51" pos:end="137:62">[<expr pos:start="137:52" pos:end="137:61"><name pos:start="137:52" pos:end="137:52">j</name><operator pos:start="137:53" pos:end="137:53">*</operator><name pos:start="137:54" pos:end="137:59">stride</name><operator pos:start="137:60" pos:end="137:60">+</operator><name pos:start="137:61" pos:end="137:61">i</name></expr>]</index></name></expr></argument>,

                                           <argument pos:start="139:44" pos:end="139:52"><expr pos:start="139:44" pos:end="139:52"><name pos:start="139:44" pos:end="139:52">copy_from</name></expr></argument>, <argument pos:start="139:55" pos:end="139:60"><expr pos:start="139:55" pos:end="139:60"><name pos:start="139:55" pos:end="139:60">offset</name></expr></argument>, <argument pos:start="139:63" pos:end="139:63"><expr pos:start="139:63" pos:end="139:63"><literal type="number" pos:start="139:63" pos:end="139:63">4</literal></expr></argument>, <argument pos:start="139:66" pos:end="139:71"><expr pos:start="139:66" pos:end="139:71"><name pos:start="139:66" pos:end="139:71">stride</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:29" pos:end="141:38"><block_content pos:start="141:29" pos:end="141:38">

                            <return pos:start="141:29" pos:end="141:38">return <expr pos:start="141:36" pos:end="141:37"><operator pos:start="141:36" pos:end="141:36">-</operator><literal type="number" pos:start="141:37" pos:end="141:37">1</literal></expr>;</return></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="147:17" pos:end="147:22">break;</break>



            <case pos:start="151:13" pos:end="151:32">case <expr pos:start="151:18" pos:end="151:31"><name pos:start="151:18" pos:end="151:31">C93_8X8_2COLOR</name></expr>:</case>

                <expr_stmt pos:start="153:17" pos:end="153:53"><expr pos:start="153:17" pos:end="153:52"><call pos:start="153:17" pos:end="153:52"><name pos:start="153:17" pos:end="153:37">bytestream_get_buffer</name><argument_list pos:start="153:38" pos:end="153:52">(<argument pos:start="153:39" pos:end="153:42"><expr pos:start="153:39" pos:end="153:42"><operator pos:start="153:39" pos:end="153:39">&amp;</operator><name pos:start="153:40" pos:end="153:42">buf</name></expr></argument>, <argument pos:start="153:45" pos:end="153:48"><expr pos:start="153:45" pos:end="153:48"><name pos:start="153:45" pos:end="153:48">cols</name></expr></argument>, <argument pos:start="153:51" pos:end="153:51"><expr pos:start="153:51" pos:end="153:51"><literal type="number" pos:start="153:51" pos:end="153:51">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="155:17" pos:end="161:17">for <control pos:start="155:21" pos:end="155:39">(<init pos:start="155:22" pos:end="155:27"><expr pos:start="155:22" pos:end="155:26"><name pos:start="155:22" pos:end="155:22">i</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>;</init> <condition pos:start="155:29" pos:end="155:34"><expr pos:start="155:29" pos:end="155:33"><name pos:start="155:29" pos:end="155:29">i</name> <operator pos:start="155:31" pos:end="155:31">&lt;</operator> <literal type="number" pos:start="155:33" pos:end="155:33">8</literal></expr>;</condition> <incr pos:start="155:36" pos:end="155:38"><expr pos:start="155:36" pos:end="155:38"><name pos:start="155:36" pos:end="155:36">i</name><operator pos:start="155:37" pos:end="155:38">++</operator></expr></incr>)</control> <block pos:start="155:41" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:51">

                    <expr_stmt pos:start="157:21" pos:end="159:51"><expr pos:start="157:21" pos:end="159:50"><call pos:start="157:21" pos:end="159:50"><name pos:start="157:21" pos:end="157:32">draw_n_color</name><argument_list pos:start="157:33" pos:end="159:50">(<argument pos:start="157:34" pos:end="157:47"><expr pos:start="157:34" pos:end="157:47"><name pos:start="157:34" pos:end="157:36">out</name> <operator pos:start="157:38" pos:end="157:38">+</operator> <name pos:start="157:40" pos:end="157:40">i</name><operator pos:start="157:41" pos:end="157:41">*</operator><name pos:start="157:42" pos:end="157:47">stride</name></expr></argument>, <argument pos:start="157:50" pos:end="157:55"><expr pos:start="157:50" pos:end="157:55"><name pos:start="157:50" pos:end="157:55">stride</name></expr></argument>, <argument pos:start="157:58" pos:end="157:58"><expr pos:start="157:58" pos:end="157:58"><literal type="number" pos:start="157:58" pos:end="157:58">8</literal></expr></argument>, <argument pos:start="157:61" pos:end="157:61"><expr pos:start="157:61" pos:end="157:61"><literal type="number" pos:start="157:61" pos:end="157:61">1</literal></expr></argument>, <argument pos:start="157:64" pos:end="157:64"><expr pos:start="157:64" pos:end="157:64"><literal type="number" pos:start="157:64" pos:end="157:64">1</literal></expr></argument>, <argument pos:start="157:67" pos:end="157:70"><expr pos:start="157:67" pos:end="157:70"><name pos:start="157:67" pos:end="157:70">cols</name></expr></argument>,

                                     <argument pos:start="159:38" pos:end="159:41"><expr pos:start="159:38" pos:end="159:41"><name pos:start="159:38" pos:end="159:41">NULL</name></expr></argument>, <argument pos:start="159:44" pos:end="159:49"><expr pos:start="159:44" pos:end="159:49"><operator pos:start="159:44" pos:end="159:44">*</operator><name pos:start="159:45" pos:end="159:47">buf</name><operator pos:start="159:48" pos:end="159:49">++</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>



                <break pos:start="165:17" pos:end="165:22">break;</break>



            <case pos:start="169:13" pos:end="169:32">case <expr pos:start="169:18" pos:end="169:31"><name pos:start="169:18" pos:end="169:31">C93_4X4_2COLOR</name></expr>:</case>

            <case pos:start="171:13" pos:end="171:32">case <expr pos:start="171:18" pos:end="171:31"><name pos:start="171:18" pos:end="171:31">C93_4X4_4COLOR</name></expr>:</case>

            <case pos:start="173:13" pos:end="173:36">case <expr pos:start="173:18" pos:end="173:35"><name pos:start="173:18" pos:end="173:35">C93_4X4_4COLOR_GRP</name></expr>:</case>

                <for pos:start="175:17" pos:end="207:17">for <control pos:start="175:21" pos:end="175:42">(<init pos:start="175:22" pos:end="175:27"><expr pos:start="175:22" pos:end="175:26"><name pos:start="175:22" pos:end="175:22">j</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="number" pos:start="175:26" pos:end="175:26">0</literal></expr>;</init> <condition pos:start="175:29" pos:end="175:34"><expr pos:start="175:29" pos:end="175:33"><name pos:start="175:29" pos:end="175:29">j</name> <operator pos:start="175:31" pos:end="175:31">&lt;</operator> <literal type="number" pos:start="175:33" pos:end="175:33">8</literal></expr>;</condition> <incr pos:start="175:36" pos:end="175:41"><expr pos:start="175:36" pos:end="175:41"><name pos:start="175:36" pos:end="175:36">j</name> <operator pos:start="175:38" pos:end="175:39">+=</operator> <literal type="number" pos:start="175:41" pos:end="175:41">4</literal></expr></incr>)</control> <block pos:start="175:44" pos:end="207:17">{<block_content pos:start="177:21" pos:end="205:21">

                    <for pos:start="177:21" pos:end="205:21">for <control pos:start="177:25" pos:end="177:46">(<init pos:start="177:26" pos:end="177:31"><expr pos:start="177:26" pos:end="177:30"><name pos:start="177:26" pos:end="177:26">i</name> <operator pos:start="177:28" pos:end="177:28">=</operator> <literal type="number" pos:start="177:30" pos:end="177:30">0</literal></expr>;</init> <condition pos:start="177:33" pos:end="177:38"><expr pos:start="177:33" pos:end="177:37"><name pos:start="177:33" pos:end="177:33">i</name> <operator pos:start="177:35" pos:end="177:35">&lt;</operator> <literal type="number" pos:start="177:37" pos:end="177:37">8</literal></expr>;</condition> <incr pos:start="177:40" pos:end="177:45"><expr pos:start="177:40" pos:end="177:45"><name pos:start="177:40" pos:end="177:40">i</name> <operator pos:start="177:42" pos:end="177:43">+=</operator> <literal type="number" pos:start="177:45" pos:end="177:45">4</literal></expr></incr>)</control> <block pos:start="177:48" pos:end="205:21">{<block_content pos:start="179:25" pos:end="203:25">

                        <if_stmt pos:start="179:25" pos:end="203:25"><if pos:start="179:25" pos:end="187:25">if <condition pos:start="179:28" pos:end="179:57">(<expr pos:start="179:29" pos:end="179:56"><name pos:start="179:29" pos:end="179:38">block_type</name> <operator pos:start="179:40" pos:end="179:41">==</operator> <name pos:start="179:43" pos:end="179:56">C93_4X4_2COLOR</name></expr>)</condition> <block pos:start="179:59" pos:end="187:25">{<block_content pos:start="181:29" pos:end="185:78">

                            <expr_stmt pos:start="181:29" pos:end="181:65"><expr pos:start="181:29" pos:end="181:64"><call pos:start="181:29" pos:end="181:64"><name pos:start="181:29" pos:end="181:49">bytestream_get_buffer</name><argument_list pos:start="181:50" pos:end="181:64">(<argument pos:start="181:51" pos:end="181:54"><expr pos:start="181:51" pos:end="181:54"><operator pos:start="181:51" pos:end="181:51">&amp;</operator><name pos:start="181:52" pos:end="181:54">buf</name></expr></argument>, <argument pos:start="181:57" pos:end="181:60"><expr pos:start="181:57" pos:end="181:60"><name pos:start="181:57" pos:end="181:60">cols</name></expr></argument>, <argument pos:start="181:63" pos:end="181:63"><expr pos:start="181:63" pos:end="181:63"><literal type="number" pos:start="181:63" pos:end="181:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="183:29" pos:end="185:78"><expr pos:start="183:29" pos:end="185:77"><call pos:start="183:29" pos:end="185:77"><name pos:start="183:29" pos:end="183:40">draw_n_color</name><argument_list pos:start="183:41" pos:end="185:77">(<argument pos:start="183:42" pos:end="183:59"><expr pos:start="183:42" pos:end="183:59"><name pos:start="183:42" pos:end="183:44">out</name> <operator pos:start="183:46" pos:end="183:46">+</operator> <name pos:start="183:48" pos:end="183:48">i</name> <operator pos:start="183:50" pos:end="183:50">+</operator> <name pos:start="183:52" pos:end="183:52">j</name><operator pos:start="183:53" pos:end="183:53">*</operator><name pos:start="183:54" pos:end="183:59">stride</name></expr></argument>, <argument pos:start="183:62" pos:end="183:67"><expr pos:start="183:62" pos:end="183:67"><name pos:start="183:62" pos:end="183:67">stride</name></expr></argument>, <argument pos:start="183:70" pos:end="183:70"><expr pos:start="183:70" pos:end="183:70"><literal type="number" pos:start="183:70" pos:end="183:70">4</literal></expr></argument>, <argument pos:start="183:73" pos:end="183:73"><expr pos:start="183:73" pos:end="183:73"><literal type="number" pos:start="183:73" pos:end="183:73">4</literal></expr></argument>,

                                    <argument pos:start="185:37" pos:end="185:37"><expr pos:start="185:37" pos:end="185:37"><literal type="number" pos:start="185:37" pos:end="185:37">1</literal></expr></argument>, <argument pos:start="185:40" pos:end="185:43"><expr pos:start="185:40" pos:end="185:43"><name pos:start="185:40" pos:end="185:43">cols</name></expr></argument>, <argument pos:start="185:46" pos:end="185:49"><expr pos:start="185:46" pos:end="185:49"><name pos:start="185:46" pos:end="185:49">NULL</name></expr></argument>, <argument pos:start="185:52" pos:end="185:76"><expr pos:start="185:52" pos:end="185:76"><call pos:start="185:52" pos:end="185:76"><name pos:start="185:52" pos:end="185:70">bytestream_get_le16</name><argument_list pos:start="185:71" pos:end="185:76">(<argument pos:start="185:72" pos:end="185:75"><expr pos:start="185:72" pos:end="185:75"><operator pos:start="185:72" pos:end="185:72">&amp;</operator><name pos:start="185:73" pos:end="185:75">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="187:27" pos:end="195:25">else if <condition pos:start="187:35" pos:end="187:64">(<expr pos:start="187:36" pos:end="187:63"><name pos:start="187:36" pos:end="187:45">block_type</name> <operator pos:start="187:47" pos:end="187:48">==</operator> <name pos:start="187:50" pos:end="187:63">C93_4X4_4COLOR</name></expr>)</condition> <block pos:start="187:66" pos:end="195:25">{<block_content pos:start="189:29" pos:end="193:78">

                            <expr_stmt pos:start="189:29" pos:end="189:65"><expr pos:start="189:29" pos:end="189:64"><call pos:start="189:29" pos:end="189:64"><name pos:start="189:29" pos:end="189:49">bytestream_get_buffer</name><argument_list pos:start="189:50" pos:end="189:64">(<argument pos:start="189:51" pos:end="189:54"><expr pos:start="189:51" pos:end="189:54"><operator pos:start="189:51" pos:end="189:51">&amp;</operator><name pos:start="189:52" pos:end="189:54">buf</name></expr></argument>, <argument pos:start="189:57" pos:end="189:60"><expr pos:start="189:57" pos:end="189:60"><name pos:start="189:57" pos:end="189:60">cols</name></expr></argument>, <argument pos:start="189:63" pos:end="189:63"><expr pos:start="189:63" pos:end="189:63"><literal type="number" pos:start="189:63" pos:end="189:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="191:29" pos:end="193:78"><expr pos:start="191:29" pos:end="193:77"><call pos:start="191:29" pos:end="193:77"><name pos:start="191:29" pos:end="191:40">draw_n_color</name><argument_list pos:start="191:41" pos:end="193:77">(<argument pos:start="191:42" pos:end="191:59"><expr pos:start="191:42" pos:end="191:59"><name pos:start="191:42" pos:end="191:44">out</name> <operator pos:start="191:46" pos:end="191:46">+</operator> <name pos:start="191:48" pos:end="191:48">i</name> <operator pos:start="191:50" pos:end="191:50">+</operator> <name pos:start="191:52" pos:end="191:52">j</name><operator pos:start="191:53" pos:end="191:53">*</operator><name pos:start="191:54" pos:end="191:59">stride</name></expr></argument>, <argument pos:start="191:62" pos:end="191:67"><expr pos:start="191:62" pos:end="191:67"><name pos:start="191:62" pos:end="191:67">stride</name></expr></argument>, <argument pos:start="191:70" pos:end="191:70"><expr pos:start="191:70" pos:end="191:70"><literal type="number" pos:start="191:70" pos:end="191:70">4</literal></expr></argument>, <argument pos:start="191:73" pos:end="191:73"><expr pos:start="191:73" pos:end="191:73"><literal type="number" pos:start="191:73" pos:end="191:73">4</literal></expr></argument>,

                                    <argument pos:start="193:37" pos:end="193:37"><expr pos:start="193:37" pos:end="193:37"><literal type="number" pos:start="193:37" pos:end="193:37">2</literal></expr></argument>, <argument pos:start="193:40" pos:end="193:43"><expr pos:start="193:40" pos:end="193:43"><name pos:start="193:40" pos:end="193:43">cols</name></expr></argument>, <argument pos:start="193:46" pos:end="193:49"><expr pos:start="193:46" pos:end="193:49"><name pos:start="193:46" pos:end="193:49">NULL</name></expr></argument>, <argument pos:start="193:52" pos:end="193:76"><expr pos:start="193:52" pos:end="193:76"><call pos:start="193:52" pos:end="193:76"><name pos:start="193:52" pos:end="193:70">bytestream_get_le32</name><argument_list pos:start="193:71" pos:end="193:76">(<argument pos:start="193:72" pos:end="193:75"><expr pos:start="193:72" pos:end="193:75"><operator pos:start="193:72" pos:end="193:72">&amp;</operator><name pos:start="193:73" pos:end="193:75">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="195:27" pos:end="203:25">else <block pos:start="195:32" pos:end="203:25">{<block_content pos:start="197:29" pos:end="201:78">

                            <expr_stmt pos:start="197:29" pos:end="197:65"><expr pos:start="197:29" pos:end="197:64"><call pos:start="197:29" pos:end="197:64"><name pos:start="197:29" pos:end="197:49">bytestream_get_buffer</name><argument_list pos:start="197:50" pos:end="197:64">(<argument pos:start="197:51" pos:end="197:54"><expr pos:start="197:51" pos:end="197:54"><operator pos:start="197:51" pos:end="197:51">&amp;</operator><name pos:start="197:52" pos:end="197:54">buf</name></expr></argument>, <argument pos:start="197:57" pos:end="197:60"><expr pos:start="197:57" pos:end="197:60"><name pos:start="197:57" pos:end="197:60">grps</name></expr></argument>, <argument pos:start="197:63" pos:end="197:63"><expr pos:start="197:63" pos:end="197:63"><literal type="number" pos:start="197:63" pos:end="197:63">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="199:29" pos:end="201:78"><expr pos:start="199:29" pos:end="201:77"><call pos:start="199:29" pos:end="201:77"><name pos:start="199:29" pos:end="199:40">draw_n_color</name><argument_list pos:start="199:41" pos:end="201:77">(<argument pos:start="199:42" pos:end="199:59"><expr pos:start="199:42" pos:end="199:59"><name pos:start="199:42" pos:end="199:44">out</name> <operator pos:start="199:46" pos:end="199:46">+</operator> <name pos:start="199:48" pos:end="199:48">i</name> <operator pos:start="199:50" pos:end="199:50">+</operator> <name pos:start="199:52" pos:end="199:52">j</name><operator pos:start="199:53" pos:end="199:53">*</operator><name pos:start="199:54" pos:end="199:59">stride</name></expr></argument>, <argument pos:start="199:62" pos:end="199:67"><expr pos:start="199:62" pos:end="199:67"><name pos:start="199:62" pos:end="199:67">stride</name></expr></argument>, <argument pos:start="199:70" pos:end="199:70"><expr pos:start="199:70" pos:end="199:70"><literal type="number" pos:start="199:70" pos:end="199:70">4</literal></expr></argument>, <argument pos:start="199:73" pos:end="199:73"><expr pos:start="199:73" pos:end="199:73"><literal type="number" pos:start="199:73" pos:end="199:73">4</literal></expr></argument>,

                                    <argument pos:start="201:37" pos:end="201:37"><expr pos:start="201:37" pos:end="201:37"><literal type="number" pos:start="201:37" pos:end="201:37">1</literal></expr></argument>, <argument pos:start="201:40" pos:end="201:43"><expr pos:start="201:40" pos:end="201:43"><name pos:start="201:40" pos:end="201:43">cols</name></expr></argument>, <argument pos:start="201:46" pos:end="201:49"><expr pos:start="201:46" pos:end="201:49"><name pos:start="201:46" pos:end="201:49">grps</name></expr></argument>, <argument pos:start="201:52" pos:end="201:76"><expr pos:start="201:52" pos:end="201:76"><call pos:start="201:52" pos:end="201:76"><name pos:start="201:52" pos:end="201:70">bytestream_get_le16</name><argument_list pos:start="201:71" pos:end="201:76">(<argument pos:start="201:72" pos:end="201:75"><expr pos:start="201:72" pos:end="201:75"><operator pos:start="201:72" pos:end="201:72">&amp;</operator><name pos:start="201:73" pos:end="201:75">buf</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

                <break pos:start="209:17" pos:end="209:22">break;</break>



            <case pos:start="213:13" pos:end="213:26">case <expr pos:start="213:18" pos:end="213:25"><name pos:start="213:18" pos:end="213:25">C93_NOOP</name></expr>:</case>

                <break pos:start="215:17" pos:end="215:22">break;</break>



            <case pos:start="219:13" pos:end="219:31">case <expr pos:start="219:18" pos:end="219:30"><name pos:start="219:18" pos:end="219:30">C93_8X8_INTRA</name></expr>:</case>

                <for pos:start="221:17" pos:end="223:67">for <control pos:start="221:21" pos:end="221:39">(<init pos:start="221:22" pos:end="221:27"><expr pos:start="221:22" pos:end="221:26"><name pos:start="221:22" pos:end="221:22">j</name> <operator pos:start="221:24" pos:end="221:24">=</operator> <literal type="number" pos:start="221:26" pos:end="221:26">0</literal></expr>;</init> <condition pos:start="221:29" pos:end="221:34"><expr pos:start="221:29" pos:end="221:33"><name pos:start="221:29" pos:end="221:29">j</name> <operator pos:start="221:31" pos:end="221:31">&lt;</operator> <literal type="number" pos:start="221:33" pos:end="221:33">8</literal></expr>;</condition> <incr pos:start="221:36" pos:end="221:38"><expr pos:start="221:36" pos:end="221:38"><name pos:start="221:36" pos:end="221:36">j</name><operator pos:start="221:37" pos:end="221:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="223:21" pos:end="223:67"><block_content pos:start="223:21" pos:end="223:67">

                    <expr_stmt pos:start="223:21" pos:end="223:67"><expr pos:start="223:21" pos:end="223:66"><call pos:start="223:21" pos:end="223:66"><name pos:start="223:21" pos:end="223:41">bytestream_get_buffer</name><argument_list pos:start="223:42" pos:end="223:66">(<argument pos:start="223:43" pos:end="223:46"><expr pos:start="223:43" pos:end="223:46"><operator pos:start="223:43" pos:end="223:43">&amp;</operator><name pos:start="223:44" pos:end="223:46">buf</name></expr></argument>, <argument pos:start="223:49" pos:end="223:62"><expr pos:start="223:49" pos:end="223:62"><name pos:start="223:49" pos:end="223:51">out</name> <operator pos:start="223:53" pos:end="223:53">+</operator> <name pos:start="223:55" pos:end="223:55">j</name><operator pos:start="223:56" pos:end="223:56">*</operator><name pos:start="223:57" pos:end="223:62">stride</name></expr></argument>, <argument pos:start="223:65" pos:end="223:65"><expr pos:start="223:65" pos:end="223:65"><literal type="number" pos:start="223:65" pos:end="223:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <break pos:start="225:17" pos:end="225:22">break;</break>



            <default pos:start="229:13" pos:end="229:20">default:</default>

                <expr_stmt pos:start="231:17" pos:end="233:41"><expr pos:start="231:17" pos:end="233:40"><call pos:start="231:17" pos:end="233:40"><name pos:start="231:17" pos:end="231:22">av_log</name><argument_list pos:start="231:23" pos:end="233:40">(<argument pos:start="231:24" pos:end="231:28"><expr pos:start="231:24" pos:end="231:28"><name pos:start="231:24" pos:end="231:28">avctx</name></expr></argument>, <argument pos:start="231:31" pos:end="231:42"><expr pos:start="231:31" pos:end="231:42"><name pos:start="231:31" pos:end="231:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="231:45" pos:end="231:75"><expr pos:start="231:45" pos:end="231:75"><literal type="string" pos:start="231:45" pos:end="231:75">"unexpected type %x at %dx%d\n"</literal></expr></argument>,

                       <argument pos:start="233:24" pos:end="233:33"><expr pos:start="233:24" pos:end="233:33"><name pos:start="233:24" pos:end="233:33">block_type</name></expr></argument>, <argument pos:start="233:36" pos:end="233:36"><expr pos:start="233:36" pos:end="233:36"><name pos:start="233:36" pos:end="233:36">x</name></expr></argument>, <argument pos:start="233:39" pos:end="233:39"><expr pos:start="233:39" pos:end="233:39"><name pos:start="233:39" pos:end="233:39">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="235:17" pos:end="235:26">return <expr pos:start="235:24" pos:end="235:25"><operator pos:start="235:24" pos:end="235:24">-</operator><literal type="number" pos:start="235:25" pos:end="235:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

            <expr_stmt pos:start="239:13" pos:end="239:21"><expr pos:start="239:13" pos:end="239:20"><name pos:start="239:13" pos:end="239:14">bt</name> <operator pos:start="239:16" pos:end="239:18">&gt;&gt;=</operator> <literal type="number" pos:start="239:20" pos:end="239:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:21"><expr pos:start="241:13" pos:end="241:20"><name pos:start="241:13" pos:end="241:15">out</name> <operator pos:start="241:17" pos:end="241:18">+=</operator> <literal type="number" pos:start="241:20" pos:end="241:20">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="249:5" pos:end="249:23"><expr pos:start="249:5" pos:end="249:22"><operator pos:start="249:5" pos:end="249:5">*</operator><name pos:start="249:6" pos:end="249:12">picture</name> <operator pos:start="249:14" pos:end="249:14">=</operator> <operator pos:start="249:16" pos:end="249:16">*</operator><name pos:start="249:17" pos:end="249:22">newpic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:33"><expr pos:start="251:5" pos:end="251:32"><operator pos:start="251:5" pos:end="251:5">*</operator><name pos:start="251:6" pos:end="251:14">data_size</name> <operator pos:start="251:16" pos:end="251:16">=</operator> <sizeof pos:start="251:18" pos:end="251:32">sizeof<argument_list pos:start="251:24" pos:end="251:32">(<argument pos:start="251:25" pos:end="251:31"><expr pos:start="251:25" pos:end="251:31"><name pos:start="251:25" pos:end="251:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="255:5" pos:end="255:20">return <expr pos:start="255:12" pos:end="255:19"><name pos:start="255:12" pos:end="255:19">buf_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
