<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14627.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">virtio_bus_device_plugged</name><parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:43">VirtIODevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">vdev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:56">Error</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:5">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">qdev</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><call pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:30">DEVICE</name><argument_list pos:start="5:31" pos:end="5:36">(<argument pos:start="5:32" pos:end="5:35"><expr pos:start="5:32" pos:end="5:35"><name pos:start="5:32" pos:end="5:35">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:52"><decl pos:start="7:5" pos:end="7:51"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">BusState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:18">qbus</name> <init pos:start="7:20" pos:end="7:51">= <expr pos:start="7:22" pos:end="7:51"><call pos:start="7:22" pos:end="7:51"><name pos:start="7:22" pos:end="7:24">BUS</name><argument_list pos:start="7:25" pos:end="7:51">(<argument pos:start="7:26" pos:end="7:50"><expr pos:start="7:26" pos:end="7:50"><call pos:start="7:26" pos:end="7:50"><name pos:start="7:26" pos:end="7:44">qdev_get_parent_bus</name><argument_list pos:start="7:45" pos:end="7:50">(<argument pos:start="7:46" pos:end="7:49"><expr pos:start="7:46" pos:end="7:49"><name pos:start="7:46" pos:end="7:49">qdev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">VirtioBusState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">bus</name> <init pos:start="9:25" pos:end="9:42">= <expr pos:start="9:27" pos:end="9:42"><call pos:start="9:27" pos:end="9:42"><name pos:start="9:27" pos:end="9:36">VIRTIO_BUS</name><argument_list pos:start="9:37" pos:end="9:42">(<argument pos:start="9:38" pos:end="9:41"><expr pos:start="9:38" pos:end="9:41"><name pos:start="9:38" pos:end="9:41">qbus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:54"><decl pos:start="11:5" pos:end="11:53"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">VirtioBusClass</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">klass</name> <init pos:start="11:27" pos:end="11:53">= <expr pos:start="11:29" pos:end="11:53"><call pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:48">VIRTIO_BUS_GET_CLASS</name><argument_list pos:start="11:49" pos:end="11:53">(<argument pos:start="11:50" pos:end="11:52"><expr pos:start="11:50" pos:end="11:52"><name pos:start="11:50" pos:end="11:52">bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:58"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">VirtioDeviceClass</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:26">vdc</name> <init pos:start="13:28" pos:end="13:58">= <expr pos:start="13:30" pos:end="13:58"><call pos:start="13:30" pos:end="13:58"><name pos:start="13:30" pos:end="13:52">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="13:53" pos:end="13:58">(<argument pos:start="13:54" pos:end="13:57"><expr pos:start="13:54" pos:end="13:57"><name pos:start="13:54" pos:end="13:57">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:76"><decl pos:start="15:5" pos:end="15:75"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:18">has_iommu</name> <init pos:start="15:20" pos:end="15:75">= <expr pos:start="15:22" pos:end="15:75"><call pos:start="15:22" pos:end="15:75"><name pos:start="15:22" pos:end="15:44">virtio_host_has_feature</name><argument_list pos:start="15:45" pos:end="15:75">(<argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">vdev</name></expr></argument>, <argument pos:start="15:52" pos:end="15:74"><expr pos:start="15:52" pos:end="15:74"><name pos:start="15:52" pos:end="15:74">VIRTIO_F_IOMMU_PLATFORM</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:11">DPRINTF</name><argument_list pos:start="19:12" pos:end="19:45">(<argument pos:start="19:13" pos:end="19:32"><expr pos:start="19:13" pos:end="19:32"><literal type="string" pos:start="19:13" pos:end="19:32">"%s: plug device.\n"</literal></expr></argument>, <argument pos:start="19:35" pos:end="19:44"><expr pos:start="19:35" pos:end="19:44"><name pos:start="19:35" pos:end="19:44"><name pos:start="19:35" pos:end="19:38">qbus</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:44">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:35">(<expr pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:13">klass</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:26">pre_plugged</name></name> <operator pos:start="23:28" pos:end="23:29">!=</operator> <name pos:start="23:31" pos:end="23:34">NULL</name></expr>)</condition> <block pos:start="23:37" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:47">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:13">klass</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">pre_plugged</name></name><argument_list pos:start="25:27" pos:end="25:46">(<argument pos:start="25:28" pos:end="25:39"><expr pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:39"><name pos:start="25:28" pos:end="25:31">qbus</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:39">parent</name></name></expr></argument>, <argument pos:start="25:42" pos:end="25:45"><expr pos:start="25:42" pos:end="25:45"><name pos:start="25:42" pos:end="25:45">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:49">/* Get the features of the plugged device. */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><call pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:10">assert</name><argument_list pos:start="33:11" pos:end="33:37">(<argument pos:start="33:12" pos:end="33:36"><expr pos:start="33:12" pos:end="33:36"><name pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:14">vdc</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:28">get_features</name></name> <operator pos:start="33:30" pos:end="33:31">!=</operator> <name pos:start="33:33" pos:end="33:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:50"><expr pos:start="35:5" pos:end="37:49"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:8">vdev</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:23">host_features</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="37:49"><name pos:start="35:27" pos:end="35:43"><name pos:start="35:27" pos:end="35:29">vdc</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:43">get_features</name></name><argument_list pos:start="35:44" pos:end="37:49">(<argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:48">vdev</name></expr></argument>, <argument pos:start="35:51" pos:end="35:69"><expr pos:start="35:51" pos:end="35:69"><name pos:start="35:51" pos:end="35:69"><name pos:start="35:51" pos:end="35:54">vdev</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:69">host_features</name></name></expr></argument>,

                                            <argument pos:start="37:45" pos:end="37:48"><expr pos:start="37:45" pos:end="37:48"><name pos:start="37:45" pos:end="37:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:38">(<expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:13">klass</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:29">device_plugged</name></name> <operator pos:start="41:31" pos:end="41:32">!=</operator> <name pos:start="41:34" pos:end="41:37">NULL</name></expr>)</condition> <block pos:start="41:40" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:50">

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:13">klass</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:29">device_plugged</name></name><argument_list pos:start="43:30" pos:end="43:49">(<argument pos:start="43:31" pos:end="43:42"><expr pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:42"><name pos:start="43:31" pos:end="43:34">qbus</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:42">parent</name></name></expr></argument>, <argument pos:start="43:45" pos:end="43:48"><expr pos:start="43:45" pos:end="43:48"><name pos:start="43:45" pos:end="43:48">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="59:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:47">(<expr pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:13">klass</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:25">get_dma_as</name></name> <operator pos:start="49:27" pos:end="49:28">!=</operator> <name pos:start="49:30" pos:end="49:33">NULL</name> <operator pos:start="49:35" pos:end="49:36">&amp;&amp;</operator> <name pos:start="49:38" pos:end="49:46">has_iommu</name></expr>)</condition> <block pos:start="49:49" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:55">

        <expr_stmt pos:start="51:9" pos:end="51:74"><expr pos:start="51:9" pos:end="51:73"><call pos:start="51:9" pos:end="51:73"><name pos:start="51:9" pos:end="51:26">virtio_add_feature</name><argument_list pos:start="51:27" pos:end="51:73">(<argument pos:start="51:28" pos:end="51:47"><expr pos:start="51:28" pos:end="51:47"><operator pos:start="51:28" pos:end="51:28">&amp;</operator><name pos:start="51:29" pos:end="51:47"><name pos:start="51:29" pos:end="51:32">vdev</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:47">host_features</name></name></expr></argument>, <argument pos:start="51:50" pos:end="51:72"><expr pos:start="51:50" pos:end="51:72"><name pos:start="51:50" pos:end="51:72">VIRTIO_F_IOMMU_PLATFORM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:55"><expr pos:start="53:9" pos:end="53:54"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">vdev</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:20">dma_as</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:54"><name pos:start="53:24" pos:end="53:40"><name pos:start="53:24" pos:end="53:28">klass</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:40">get_dma_as</name></name><argument_list pos:start="53:41" pos:end="53:54">(<argument pos:start="53:42" pos:end="53:53"><expr pos:start="53:42" pos:end="53:53"><name pos:start="53:42" pos:end="53:53"><name pos:start="53:42" pos:end="53:45">qbus</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:53">parent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="59:5">else <block pos:start="55:12" pos:end="59:5">{<block_content pos:start="57:9" pos:end="57:45">

        <expr_stmt pos:start="57:9" pos:end="57:45"><expr pos:start="57:9" pos:end="57:44"><name pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:12">vdev</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:20">dma_as</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:44">address_space_memory</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
