<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3169.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">dec_divu</name><parameter_list pos:start="1:21" pos:end="1:38">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:65">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">l1</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:60"><expr pos:start="9:5" pos:end="9:59"><call pos:start="9:5" pos:end="9:59"><name pos:start="9:5" pos:end="9:11">LOG_DIS</name><argument_list pos:start="9:12" pos:end="9:59">(<argument pos:start="9:13" pos:end="9:34"><expr pos:start="9:13" pos:end="9:34"><literal type="string" pos:start="9:13" pos:end="9:34">"divu r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="9:37" pos:end="9:42"><expr pos:start="9:37" pos:end="9:42"><name pos:start="9:37" pos:end="9:42"><name pos:start="9:37" pos:end="9:38">dc</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:42">r2</name></name></expr></argument>, <argument pos:start="9:45" pos:end="9:50"><expr pos:start="9:45" pos:end="9:50"><name pos:start="9:45" pos:end="9:50"><name pos:start="9:45" pos:end="9:46">dc</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:50">r0</name></name></expr></argument>, <argument pos:start="9:53" pos:end="9:58"><expr pos:start="9:53" pos:end="9:58"><name pos:start="9:53" pos:end="9:58"><name pos:start="9:53" pos:end="9:54">dc</name><operator pos:start="9:55" pos:end="9:56">-&gt;</operator><name pos:start="9:57" pos:end="9:58">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:51">(<expr pos:start="13:9" pos:end="13:50"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:27"><name pos:start="13:11" pos:end="13:12">dc</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">env</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:27">features</name></name> <operator pos:start="13:29" pos:end="13:29">&amp;</operator> <name pos:start="13:31" pos:end="13:49">LM32_FEATURE_DIVIDE</name><operator pos:start="13:50" pos:end="13:50">)</operator></expr>)</condition> <block pos:start="13:53" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:66">

        <expr_stmt pos:start="15:9" pos:end="15:66"><expr pos:start="15:9" pos:end="15:65"><call pos:start="15:9" pos:end="15:65"><name pos:start="15:9" pos:end="15:17">cpu_abort</name><argument_list pos:start="15:18" pos:end="15:65">(<argument pos:start="15:19" pos:end="15:25"><expr pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:20">dc</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:25">env</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:64"><expr pos:start="15:28" pos:end="15:64"><literal type="string" pos:start="15:28" pos:end="15:64">"hardware divider is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:6">l1</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:22">gen_new_label</name><argument_list pos:start="21:23" pos:end="21:24">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:58"><expr pos:start="23:5" pos:end="23:57"><call pos:start="23:5" pos:end="23:57"><name pos:start="23:5" pos:end="23:22">tcg_gen_brcondi_tl</name><argument_list pos:start="23:23" pos:end="23:57">(<argument pos:start="23:24" pos:end="23:34"><expr pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="23:37" pos:end="23:49"><expr pos:start="23:37" pos:end="23:49"><name pos:start="23:37" pos:end="23:49"><name pos:start="23:37" pos:end="23:41">cpu_R</name><index pos:start="23:42" pos:end="23:49">[<expr pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:48"><name pos:start="23:43" pos:end="23:44">dc</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:48">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="23:52" pos:end="23:52"><expr pos:start="23:52" pos:end="23:52"><literal type="number" pos:start="23:52" pos:end="23:52">0</literal></expr></argument>, <argument pos:start="23:55" pos:end="23:56"><expr pos:start="23:55" pos:end="23:56"><name pos:start="23:55" pos:end="23:56">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:36"><expr pos:start="25:5" pos:end="25:35"><call pos:start="25:5" pos:end="25:35"><name pos:start="25:5" pos:end="25:19">tcg_gen_movi_tl</name><argument_list pos:start="25:20" pos:end="25:35">(<argument pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:26"><name pos:start="25:21" pos:end="25:26">cpu_pc</name></expr></argument>, <argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:30">dc</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:51"><expr pos:start="27:5" pos:end="27:50"><call pos:start="27:5" pos:end="27:50"><name pos:start="27:5" pos:end="27:25">t_gen_raise_exception</name><argument_list pos:start="27:26" pos:end="27:50">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">dc</name></expr></argument>, <argument pos:start="27:31" pos:end="27:49"><expr pos:start="27:31" pos:end="27:49"><name pos:start="27:31" pos:end="27:49">EXCP_DIVIDE_BY_ZERO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:17">gen_set_label</name><argument_list pos:start="29:18" pos:end="29:21">(<argument pos:start="29:19" pos:end="29:20"><expr pos:start="29:19" pos:end="29:20"><name pos:start="29:19" pos:end="29:20">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:65"><expr pos:start="31:5" pos:end="31:64"><call pos:start="31:5" pos:end="31:64"><name pos:start="31:5" pos:end="31:19">tcg_gen_divu_tl</name><argument_list pos:start="31:20" pos:end="31:64">(<argument pos:start="31:21" pos:end="31:33"><expr pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:33"><name pos:start="31:21" pos:end="31:25">cpu_R</name><index pos:start="31:26" pos:end="31:33">[<expr pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:32"><name pos:start="31:27" pos:end="31:28">dc</name><operator pos:start="31:29" pos:end="31:30">-&gt;</operator><name pos:start="31:31" pos:end="31:32">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:36" pos:end="31:48"><expr pos:start="31:36" pos:end="31:48"><name pos:start="31:36" pos:end="31:48"><name pos:start="31:36" pos:end="31:40">cpu_R</name><index pos:start="31:41" pos:end="31:48">[<expr pos:start="31:42" pos:end="31:47"><name pos:start="31:42" pos:end="31:47"><name pos:start="31:42" pos:end="31:43">dc</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:47">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="31:51" pos:end="31:63"><expr pos:start="31:51" pos:end="31:63"><name pos:start="31:51" pos:end="31:63"><name pos:start="31:51" pos:end="31:55">cpu_R</name><index pos:start="31:56" pos:end="31:63">[<expr pos:start="31:57" pos:end="31:62"><name pos:start="31:57" pos:end="31:62"><name pos:start="31:57" pos:end="31:58">dc</name><operator pos:start="31:59" pos:end="31:60">-&gt;</operator><name pos:start="31:61" pos:end="31:62">r1</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
