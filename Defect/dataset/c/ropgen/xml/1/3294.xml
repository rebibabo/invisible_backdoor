<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3294.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">convert_zp2tf</name><parameter_list pos:start="1:25" pos:end="1:60">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:40">AVFilterContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">ctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:59">channels</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AudioIIRContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:34">= <expr pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:34"><name pos:start="5:26" pos:end="5:28">ctx</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:34">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">ch</name></decl>, <decl pos:start="7:13" pos:end="7:13"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:13">i</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">j</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:21">ret</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="81:5">for <control pos:start="11:9" pos:end="11:37">(<init pos:start="11:10" pos:end="11:16"><expr pos:start="11:10" pos:end="11:15"><name pos:start="11:10" pos:end="11:11">ch</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</init> <condition pos:start="11:18" pos:end="11:31"><expr pos:start="11:18" pos:end="11:30"><name pos:start="11:18" pos:end="11:19">ch</name> <operator pos:start="11:21" pos:end="11:21">&lt;</operator> <name pos:start="11:23" pos:end="11:30">channels</name></expr>;</condition> <incr pos:start="11:33" pos:end="11:36"><expr pos:start="11:33" pos:end="11:36"><name pos:start="11:33" pos:end="11:34">ch</name><operator pos:start="11:35" pos:end="11:36">++</operator></expr></incr>)</control> <block pos:start="11:39" pos:end="81:5">{<block_content pos:start="13:9" pos:end="79:22">

        <decl_stmt pos:start="13:9" pos:end="13:38"><decl pos:start="13:9" pos:end="13:37"><type pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:18">IIRChannel</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:23">iir</name> <init pos:start="13:25" pos:end="13:37">= <expr pos:start="13:27" pos:end="13:37"><operator pos:start="13:27" pos:end="13:27">&amp;</operator><name pos:start="13:28" pos:end="13:37"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:33">iir</name><index pos:start="13:34" pos:end="13:37">[<expr pos:start="13:35" pos:end="13:36"><name pos:start="13:35" pos:end="13:36">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:28"><decl pos:start="15:9" pos:end="15:20"><type pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:14">double</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">topc</name></decl>, <decl pos:start="15:23" pos:end="15:27"><type ref="prev" pos:start="15:9" pos:end="15:16"><modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">botc</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:65"><expr pos:start="19:9" pos:end="19:64"><name pos:start="19:9" pos:end="19:12">topc</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:64"><name pos:start="19:16" pos:end="19:24">av_calloc</name><argument_list pos:start="19:25" pos:end="19:64">(<argument pos:start="19:26" pos:end="19:48"><expr pos:start="19:26" pos:end="19:48"><operator pos:start="19:26" pos:end="19:26">(</operator><name pos:start="19:27" pos:end="19:39"><name pos:start="19:27" pos:end="19:29">iir</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:36">nb_ab</name><index pos:start="19:37" pos:end="19:39">[<expr pos:start="19:38" pos:end="19:38"><literal type="number" pos:start="19:38" pos:end="19:38">0</literal></expr>]</index></name> <operator pos:start="19:41" pos:end="19:41">+</operator> <literal type="number" pos:start="19:43" pos:end="19:43">1</literal><operator pos:start="19:44" pos:end="19:44">)</operator> <operator pos:start="19:46" pos:end="19:46">*</operator> <literal type="number" pos:start="19:48" pos:end="19:48">2</literal></expr></argument>, <argument pos:start="19:51" pos:end="19:63"><expr pos:start="19:51" pos:end="19:63"><sizeof pos:start="19:51" pos:end="19:63">sizeof<argument_list pos:start="19:57" pos:end="19:63">(<argument pos:start="19:58" pos:end="19:62"><expr pos:start="19:58" pos:end="19:62"><operator pos:start="19:58" pos:end="19:58">*</operator><name pos:start="19:59" pos:end="19:62">topc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:65"><expr pos:start="21:9" pos:end="21:64"><name pos:start="21:9" pos:end="21:12">botc</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:64"><name pos:start="21:16" pos:end="21:24">av_calloc</name><argument_list pos:start="21:25" pos:end="21:64">(<argument pos:start="21:26" pos:end="21:48"><expr pos:start="21:26" pos:end="21:48"><operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:29">iir</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:36">nb_ab</name><index pos:start="21:37" pos:end="21:39">[<expr pos:start="21:38" pos:end="21:38"><literal type="number" pos:start="21:38" pos:end="21:38">1</literal></expr>]</index></name> <operator pos:start="21:41" pos:end="21:41">+</operator> <literal type="number" pos:start="21:43" pos:end="21:43">1</literal><operator pos:start="21:44" pos:end="21:44">)</operator> <operator pos:start="21:46" pos:end="21:46">*</operator> <literal type="number" pos:start="21:48" pos:end="21:48">2</literal></expr></argument>, <argument pos:start="21:51" pos:end="21:63"><expr pos:start="21:51" pos:end="21:63"><sizeof pos:start="21:51" pos:end="21:63">sizeof<argument_list pos:start="21:57" pos:end="21:63">(<argument pos:start="21:58" pos:end="21:62"><expr pos:start="21:58" pos:end="21:62"><operator pos:start="21:58" pos:end="21:58">*</operator><name pos:start="21:59" pos:end="21:62">botc</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:35"><if pos:start="23:9" pos:end="25:35">if <condition pos:start="23:12" pos:end="23:27">(<expr pos:start="23:13" pos:end="23:26"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:17">topc</name> <operator pos:start="23:19" pos:end="23:20">||</operator> <operator pos:start="23:22" pos:end="23:22">!</operator><name pos:start="23:23" pos:end="23:26">botc</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:35"><block_content pos:start="25:13" pos:end="25:35">

            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:59"><expr pos:start="29:9" pos:end="29:58"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:58"><name pos:start="29:15" pos:end="29:20">expand</name><argument_list pos:start="29:21" pos:end="29:58">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">ctx</name></expr></argument>, <argument pos:start="29:27" pos:end="29:36"><expr pos:start="29:27" pos:end="29:36"><name pos:start="29:27" pos:end="29:36"><name pos:start="29:27" pos:end="29:29">iir</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:33">ab</name><index pos:start="29:34" pos:end="29:36">[<expr pos:start="29:35" pos:end="29:35"><literal type="number" pos:start="29:35" pos:end="29:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:39" pos:end="29:51"><expr pos:start="29:39" pos:end="29:51"><name pos:start="29:39" pos:end="29:51"><name pos:start="29:39" pos:end="29:41">iir</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:48">nb_ab</name><index pos:start="29:49" pos:end="29:51">[<expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:54" pos:end="29:57"><expr pos:start="29:54" pos:end="29:57"><name pos:start="29:54" pos:end="29:57">botc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="39:9"><if pos:start="31:9" pos:end="39:9">if <condition pos:start="31:12" pos:end="31:20">(<expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">&lt;</operator> <literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr>)</condition> <block pos:start="31:22" pos:end="39:9">{<block_content pos:start="33:13" pos:end="37:23">

            <expr_stmt pos:start="33:13" pos:end="33:26"><expr pos:start="33:13" pos:end="33:25"><call pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:19">av_free</name><argument_list pos:start="33:20" pos:end="33:25">(<argument pos:start="33:21" pos:end="33:24"><expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">topc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:25"><call pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:19">av_free</name><argument_list pos:start="35:20" pos:end="35:25">(<argument pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:24"><name pos:start="35:21" pos:end="35:24">botc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:58"><name pos:start="43:15" pos:end="43:20">expand</name><argument_list pos:start="43:21" pos:end="43:58">(<argument pos:start="43:22" pos:end="43:24"><expr pos:start="43:22" pos:end="43:24"><name pos:start="43:22" pos:end="43:24">ctx</name></expr></argument>, <argument pos:start="43:27" pos:end="43:36"><expr pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:36"><name pos:start="43:27" pos:end="43:29">iir</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:33">ab</name><index pos:start="43:34" pos:end="43:36">[<expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:39" pos:end="43:51"><expr pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:51"><name pos:start="43:39" pos:end="43:41">iir</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:48">nb_ab</name><index pos:start="43:49" pos:end="43:51">[<expr pos:start="43:50" pos:end="43:50"><literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="43:54" pos:end="43:57"><expr pos:start="43:54" pos:end="43:57"><name pos:start="43:54" pos:end="43:57">topc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="53:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition> <block pos:start="45:22" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:23">

            <expr_stmt pos:start="47:13" pos:end="47:26"><expr pos:start="47:13" pos:end="47:25"><call pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:19">av_free</name><argument_list pos:start="47:20" pos:end="47:25">(<argument pos:start="47:21" pos:end="47:24"><expr pos:start="47:21" pos:end="47:24"><name pos:start="47:21" pos:end="47:24">topc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:26"><expr pos:start="49:13" pos:end="49:25"><call pos:start="49:13" pos:end="49:25"><name pos:start="49:13" pos:end="49:19">av_free</name><argument_list pos:start="49:20" pos:end="49:25">(<argument pos:start="49:21" pos:end="49:24"><expr pos:start="49:21" pos:end="49:24"><name pos:start="49:21" pos:end="49:24">botc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="57:9" pos:end="61:9">for <control pos:start="57:13" pos:end="57:56">(<init pos:start="57:14" pos:end="57:38"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">j</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr><operator pos:start="57:19" pos:end="57:19">,</operator> <expr pos:start="57:21" pos:end="57:37"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:37"><name pos:start="57:25" pos:end="57:27">iir</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:34">nb_ab</name><index pos:start="57:35" pos:end="57:37">[<expr pos:start="57:36" pos:end="57:36"><literal type="number" pos:start="57:36" pos:end="57:36">1</literal></expr>]</index></name></expr>;</init> <condition pos:start="57:40" pos:end="57:46"><expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:40">i</name> <operator pos:start="57:42" pos:end="57:43">&gt;=</operator> <literal type="number" pos:start="57:45" pos:end="57:45">0</literal></expr>;</condition> <incr pos:start="57:48" pos:end="57:55"><expr pos:start="57:48" pos:end="57:50"><name pos:start="57:48" pos:end="57:48">j</name><operator pos:start="57:49" pos:end="57:50">++</operator></expr><operator pos:start="57:51" pos:end="57:51">,</operator> <expr pos:start="57:53" pos:end="57:55"><name pos:start="57:53" pos:end="57:53">i</name><operator pos:start="57:54" pos:end="57:55">--</operator></expr></incr>)</control> <block pos:start="57:58" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:40">

            <expr_stmt pos:start="59:13" pos:end="59:40"><expr pos:start="59:13" pos:end="59:39"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">iir</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">ab</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>]</index><index pos:start="59:23" pos:end="59:25">[<expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">j</name></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:32">topc</name><index pos:start="59:33" pos:end="59:39">[<expr pos:start="59:34" pos:end="59:38"><literal type="number" pos:start="59:34" pos:end="59:34">2</literal> <operator pos:start="59:36" pos:end="59:36">*</operator> <name pos:start="59:38" pos:end="59:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="63:9" pos:end="63:24"><expr pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:11">iir</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:18">nb_ab</name><index pos:start="63:19" pos:end="63:21">[<expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>]</index></name><operator pos:start="63:22" pos:end="63:23">++</operator></expr>;</expr_stmt>



        <for pos:start="67:9" pos:end="71:9">for <control pos:start="67:13" pos:end="67:56">(<init pos:start="67:14" pos:end="67:38"><expr pos:start="67:14" pos:end="67:18"><name pos:start="67:14" pos:end="67:14">j</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr><operator pos:start="67:19" pos:end="67:19">,</operator> <expr pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:21">i</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:37"><name pos:start="67:25" pos:end="67:27">iir</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:34">nb_ab</name><index pos:start="67:35" pos:end="67:37">[<expr pos:start="67:36" pos:end="67:36"><literal type="number" pos:start="67:36" pos:end="67:36">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="67:40" pos:end="67:46"><expr pos:start="67:40" pos:end="67:45"><name pos:start="67:40" pos:end="67:40">i</name> <operator pos:start="67:42" pos:end="67:43">&gt;=</operator> <literal type="number" pos:start="67:45" pos:end="67:45">0</literal></expr>;</condition> <incr pos:start="67:48" pos:end="67:55"><expr pos:start="67:48" pos:end="67:50"><name pos:start="67:48" pos:end="67:48">j</name><operator pos:start="67:49" pos:end="67:50">++</operator></expr><operator pos:start="67:51" pos:end="67:51">,</operator> <expr pos:start="67:53" pos:end="67:55"><name pos:start="67:53" pos:end="67:53">i</name><operator pos:start="67:54" pos:end="67:55">--</operator></expr></incr>)</control> <block pos:start="67:58" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:40">

            <expr_stmt pos:start="69:13" pos:end="69:40"><expr pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:15">iir</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">ab</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>]</index><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">j</name></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:32">botc</name><index pos:start="69:33" pos:end="69:39">[<expr pos:start="69:34" pos:end="69:38"><literal type="number" pos:start="69:34" pos:end="69:34">2</literal> <operator pos:start="69:36" pos:end="69:36">*</operator> <name pos:start="69:38" pos:end="69:38">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="73:9" pos:end="73:24"><expr pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:11">iir</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:18">nb_ab</name><index pos:start="73:19" pos:end="73:21">[<expr pos:start="73:20" pos:end="73:20"><literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>]</index></name><operator pos:start="73:22" pos:end="73:23">++</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:22"><expr pos:start="77:9" pos:end="77:21"><call pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:15">av_free</name><argument_list pos:start="77:16" pos:end="77:21">(<argument pos:start="77:17" pos:end="77:20"><expr pos:start="77:17" pos:end="77:20"><name pos:start="77:17" pos:end="77:20">topc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:22"><expr pos:start="79:9" pos:end="79:21"><call pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:15">av_free</name><argument_list pos:start="79:16" pos:end="79:21">(<argument pos:start="79:17" pos:end="79:20"><expr pos:start="79:17" pos:end="79:20"><name pos:start="79:17" pos:end="79:20">botc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><literal type="number" pos:start="85:12" pos:end="85:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
