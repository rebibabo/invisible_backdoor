<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3094.c" pos:tabs="8"><function pos:start="1:1" pos:end="239:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">rtp_write_header</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="239:1">{<block_content pos:start="5:5" pos:end="237:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">RTPMuxContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:36">= <expr pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:36"><name pos:start="5:24" pos:end="5:25">s1</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:27"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:23">max_packet_size</name></decl>, <decl pos:start="7:26" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:26" pos:end="7:26">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:10">s1</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:22">nb_streams</name></name> <operator pos:start="13:24" pos:end="13:25">!=</operator> <literal type="number" pos:start="13:27" pos:end="13:27">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:6">st</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <name pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:11">s1</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:20">streams</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:42"><name pos:start="19:10" pos:end="19:21">is_supported</name><argument_list pos:start="19:22" pos:end="19:42">(<argument pos:start="19:23" pos:end="19:41"><expr pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:41"><name pos:start="19:23" pos:end="19:24">st</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:31">codec</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:41">codec_id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:45" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:18">

        <expr_stmt pos:start="21:9" pos:end="21:80"><expr pos:start="21:9" pos:end="21:79"><call pos:start="21:9" pos:end="21:79"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:79">(<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">s1</name></expr></argument>, <argument pos:start="21:20" pos:end="21:31"><expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:34" pos:end="21:57"><expr pos:start="21:34" pos:end="21:57"><literal type="string" pos:start="21:34" pos:end="21:57">"Unsupported codec %x\n"</literal></expr></argument>, <argument pos:start="21:60" pos:end="21:78"><expr pos:start="21:60" pos:end="21:78"><name pos:start="21:60" pos:end="21:78"><name pos:start="21:60" pos:end="21:61">st</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:68">codec</name><operator pos:start="21:69" pos:end="21:70">-&gt;</operator><name pos:start="21:71" pos:end="21:78">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="25:9" pos:end="25:18">return <expr pos:start="25:16" pos:end="25:17"><operator pos:start="25:16" pos:end="25:16">-</operator><literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:65"><if pos:start="31:5" pos:end="33:65">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:23">payload_type</name></name> <operator pos:start="31:25" pos:end="31:25">&lt;</operator> <literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:65"><block_content pos:start="33:9" pos:end="33:65">

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:23">payload_type</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:64"><name pos:start="33:27" pos:end="33:49">ff_rtp_get_payload_type</name><argument_list pos:start="33:50" pos:end="33:64">(<argument pos:start="33:51" pos:end="33:52"><expr pos:start="33:51" pos:end="33:52"><name pos:start="33:51" pos:end="33:52">s1</name></expr></argument>, <argument pos:start="33:55" pos:end="33:63"><expr pos:start="33:55" pos:end="33:63"><name pos:start="33:55" pos:end="33:63"><name pos:start="33:55" pos:end="33:56">st</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:63">codec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:21">base_timestamp</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <call pos:start="35:25" pos:end="35:44"><name pos:start="35:25" pos:end="35:42">av_get_random_seed</name><argument_list pos:start="35:43" pos:end="35:44">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">timestamp</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <name pos:start="37:20" pos:end="37:36"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:36">base_timestamp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:20">cur_timestamp</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <literal type="number" pos:start="39:24" pos:end="39:24">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:11"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:11">ssrc</name></name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:34"><name pos:start="41:15" pos:end="41:32">av_get_random_seed</name><argument_list pos:start="41:33" pos:end="41:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:24"><expr pos:start="43:5" pos:end="43:23"><name pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:19">first_packet</name></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <literal type="number" pos:start="43:23" pos:end="43:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:26"><name pos:start="45:5" pos:end="45:5">s</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:26">first_rtcp_ntp_time</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <call pos:start="45:30" pos:end="45:42"><name pos:start="45:30" pos:end="45:40">ff_ntp_time</name><argument_list pos:start="45:41" pos:end="45:42">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:47"><if pos:start="47:5" pos:end="53:47">if <condition pos:start="47:8" pos:end="47:32">(<expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:10">s1</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:31">start_time_realtime</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="53:47"><block_content pos:start="51:9" pos:end="53:47">

        <comment type="block" pos:start="49:9" pos:end="49:55">/* Round the NTP time to whole milliseconds. */</comment>

        <expr_stmt pos:start="51:9" pos:end="53:47"><expr pos:start="51:9" pos:end="53:46"><name pos:start="51:9" pos:end="51:30"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:30">first_rtcp_ntp_time</name></name> <operator pos:start="51:32" pos:end="51:32">=</operator> <operator pos:start="51:34" pos:end="51:34">(</operator><name pos:start="51:35" pos:end="51:57"><name pos:start="51:35" pos:end="51:36">s1</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:57">start_time_realtime</name></name> <operator pos:start="51:59" pos:end="51:59">/</operator> <literal type="number" pos:start="51:61" pos:end="51:64">1000</literal><operator pos:start="51:65" pos:end="51:65">)</operator> <operator pos:start="51:67" pos:end="51:67">*</operator> <literal type="number" pos:start="51:69" pos:end="51:74">1000</literal> <operator pos:start="51:74" pos:end="51:74">+</operator>

                                 <name pos:start="53:34" pos:end="53:46">NTP_OFFSET_US</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:19">max_packet_size</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:45"><name pos:start="57:23" pos:end="57:24">s1</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">pb</name><operator pos:start="57:29" pos:end="57:30">-&gt;</operator><name pos:start="57:31" pos:end="57:45">max_packet_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="61:28"><if pos:start="59:5" pos:end="61:28">if <condition pos:start="59:8" pos:end="59:30">(<expr pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:23">max_packet_size</name> <operator pos:start="59:25" pos:end="59:26">&lt;=</operator> <literal type="number" pos:start="59:28" pos:end="59:29">12</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:28"><block_content pos:start="61:9" pos:end="61:28">

        <return pos:start="61:9" pos:end="61:28">return <expr pos:start="61:16" pos:end="61:27"><call pos:start="61:16" pos:end="61:27"><name pos:start="61:16" pos:end="61:22">AVERROR</name><argument_list pos:start="61:23" pos:end="61:27">(<argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><name pos:start="61:24" pos:end="61:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:40"><expr pos:start="63:5" pos:end="63:39"><name pos:start="63:5" pos:end="63:10"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:10">buf</name></name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:39"><name pos:start="63:14" pos:end="63:22">av_malloc</name><argument_list pos:start="63:23" pos:end="63:39">(<argument pos:start="63:24" pos:end="63:38"><expr pos:start="63:24" pos:end="63:38"><name pos:start="63:24" pos:end="63:38">max_packet_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:23">(<expr pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:14">buf</name></name> <operator pos:start="65:16" pos:end="65:17">==</operator> <name pos:start="65:19" pos:end="65:22">NULL</name></expr>)</condition> <block pos:start="65:25" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:31">

        <return pos:start="67:9" pos:end="67:31">return <expr pos:start="67:16" pos:end="67:30"><call pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:22">AVERROR</name><argument_list pos:start="67:23" pos:end="67:30">(<argument pos:start="67:24" pos:end="67:29"><expr pos:start="67:24" pos:end="67:29"><name pos:start="67:24" pos:end="67:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:47"><expr pos:start="71:5" pos:end="71:46"><name pos:start="71:5" pos:end="71:23"><name pos:start="71:5" pos:end="71:5">s</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:23">max_payload_size</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <name pos:start="71:27" pos:end="71:41">max_packet_size</name> <operator pos:start="71:43" pos:end="71:43">-</operator> <literal type="number" pos:start="71:45" pos:end="71:46">12</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:33"><expr pos:start="75:5" pos:end="75:32"><name pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:28">max_frames_per_packet</name></name> <operator pos:start="75:30" pos:end="75:30">=</operator> <literal type="number" pos:start="75:32" pos:end="75:32">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="101:5"><if pos:start="77:5" pos:end="101:5">if <condition pos:start="77:8" pos:end="77:22">(<expr pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:10">s1</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:21">max_delay</name></name></expr>)</condition> <block pos:start="77:24" pos:end="101:5">{<block_content pos:start="79:9" pos:end="99:9">

        <if_stmt pos:start="79:9" pos:end="91:9"><if pos:start="79:9" pos:end="91:9">if <condition pos:start="79:12" pos:end="79:56">(<expr pos:start="79:13" pos:end="79:55"><name pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:14">st</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:21">codec</name><operator pos:start="79:22" pos:end="79:23">-&gt;</operator><name pos:start="79:24" pos:end="79:33">codec_type</name></name> <operator pos:start="79:35" pos:end="79:36">==</operator> <name pos:start="79:38" pos:end="79:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="79:58" pos:end="91:9">{<block_content pos:start="81:13" pos:end="89:13">

            <if_stmt pos:start="81:13" pos:end="89:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:43">(<expr pos:start="81:17" pos:end="81:42"><name pos:start="81:17" pos:end="81:37"><name pos:start="81:17" pos:end="81:18">st</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:25">codec</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:37">frame_size</name></name> <operator pos:start="81:39" pos:end="81:40">==</operator> <literal type="number" pos:start="81:42" pos:end="81:42">0</literal></expr>)</condition> <block pos:start="81:45" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:87">

                <expr_stmt pos:start="83:17" pos:end="83:87"><expr pos:start="83:17" pos:end="83:86"><call pos:start="83:17" pos:end="83:86"><name pos:start="83:17" pos:end="83:22">av_log</name><argument_list pos:start="83:23" pos:end="83:86">(<argument pos:start="83:24" pos:end="83:25"><expr pos:start="83:24" pos:end="83:25"><name pos:start="83:24" pos:end="83:25">s1</name></expr></argument>, <argument pos:start="83:28" pos:end="83:39"><expr pos:start="83:28" pos:end="83:39"><name pos:start="83:28" pos:end="83:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="83:42" pos:end="83:85"><expr pos:start="83:42" pos:end="83:85"><literal type="string" pos:start="83:42" pos:end="83:85">"Cannot respect max delay: frame size = 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="85:15" pos:end="89:13">else <block pos:start="85:20" pos:end="89:13">{<block_content pos:start="87:17" pos:end="87:150">

                <expr_stmt pos:start="87:17" pos:end="87:150"><expr pos:start="87:17" pos:end="87:149"><name pos:start="87:17" pos:end="87:40"><name pos:start="87:17" pos:end="87:17">s</name><operator pos:start="87:18" pos:end="87:19">-&gt;</operator><name pos:start="87:20" pos:end="87:40">max_frames_per_packet</name></name> <operator pos:start="87:42" pos:end="87:42">=</operator> <call pos:start="87:44" pos:end="87:149"><name pos:start="87:44" pos:end="87:57">av_rescale_rnd</name><argument_list pos:start="87:58" pos:end="87:149">(<argument pos:start="87:59" pos:end="87:71"><expr pos:start="87:59" pos:end="87:71"><name pos:start="87:59" pos:end="87:71"><name pos:start="87:59" pos:end="87:60">s1</name><operator pos:start="87:61" pos:end="87:62">-&gt;</operator><name pos:start="87:63" pos:end="87:71">max_delay</name></name></expr></argument>, <argument pos:start="87:74" pos:end="87:95"><expr pos:start="87:74" pos:end="87:95"><name pos:start="87:74" pos:end="87:95"><name pos:start="87:74" pos:end="87:75">st</name><operator pos:start="87:76" pos:end="87:77">-&gt;</operator><name pos:start="87:78" pos:end="87:82">codec</name><operator pos:start="87:83" pos:end="87:84">-&gt;</operator><name pos:start="87:85" pos:end="87:95">sample_rate</name></name></expr></argument>, <argument pos:start="87:98" pos:end="87:133"><expr pos:start="87:98" pos:end="87:133"><name pos:start="87:98" pos:end="87:109">AV_TIME_BASE</name> <operator pos:start="87:111" pos:end="87:111">*</operator> <name pos:start="87:113" pos:end="87:133"><name pos:start="87:113" pos:end="87:114">st</name><operator pos:start="87:115" pos:end="87:116">-&gt;</operator><name pos:start="87:117" pos:end="87:121">codec</name><operator pos:start="87:122" pos:end="87:123">-&gt;</operator><name pos:start="87:124" pos:end="87:133">frame_size</name></name></expr></argument>, <argument pos:start="87:136" pos:end="87:148"><expr pos:start="87:136" pos:end="87:148"><name pos:start="87:136" pos:end="87:148">AV_ROUND_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:56">(<expr pos:start="93:13" pos:end="93:55"><name pos:start="93:13" pos:end="93:33"><name pos:start="93:13" pos:end="93:14">st</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:21">codec</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:33">codec_type</name></name> <operator pos:start="93:35" pos:end="93:36">==</operator> <name pos:start="93:38" pos:end="93:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="93:58" pos:end="99:9">{<block_content pos:start="97:13" pos:end="97:115">

            <comment type="block" pos:start="95:13" pos:end="95:53">/* FIXME: We should round down here... */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:115"><expr pos:start="97:13" pos:end="97:114"><name pos:start="97:13" pos:end="97:36"><name pos:start="97:13" pos:end="97:13">s</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:36">max_frames_per_packet</name></name> <operator pos:start="97:38" pos:end="97:38">=</operator> <macro pos:start="97:40" pos:end="97:114"><name pos:start="97:40" pos:end="97:51">av_rescale_q</name><argument_list pos:start="97:52" pos:end="97:114">(<argument pos:start="97:53" pos:end="97:65">s1-&gt;max_delay</argument>, <argument pos:start="97:68" pos:end="97:81">(AVRational){<literal type="number" pos:start="97:81" pos:end="97:81">1</literal></argument>, <argument pos:start="97:84" pos:end="97:91"><literal type="number" pos:start="97:84" pos:end="97:90">1000000</literal>}</argument>, <argument pos:start="97:94" pos:end="97:113">st-&gt;codec-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:42"><expr pos:start="105:5" pos:end="105:41"><call pos:start="105:5" pos:end="105:41"><name pos:start="105:5" pos:end="105:23">avpriv_set_pts_info</name><argument_list pos:start="105:24" pos:end="105:41">(<argument pos:start="105:25" pos:end="105:26"><expr pos:start="105:25" pos:end="105:26"><name pos:start="105:25" pos:end="105:26">st</name></expr></argument>, <argument pos:start="105:29" pos:end="105:30"><expr pos:start="105:29" pos:end="105:30"><literal type="number" pos:start="105:29" pos:end="105:30">32</literal></expr></argument>, <argument pos:start="105:33" pos:end="105:33"><expr pos:start="105:33" pos:end="105:33"><literal type="number" pos:start="105:33" pos:end="105:33">1</literal></expr></argument>, <argument pos:start="105:36" pos:end="105:40"><expr pos:start="105:36" pos:end="105:40"><literal type="number" pos:start="105:36" pos:end="105:40">90000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="107:5" pos:end="233:5">switch<condition pos:start="107:11" pos:end="107:31">(<expr pos:start="107:12" pos:end="107:30"><name pos:start="107:12" pos:end="107:30"><name pos:start="107:12" pos:end="107:13">st</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">codec</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:30">codec_id</name></name></expr>)</condition> <block pos:start="107:33" pos:end="233:5">{<block_content pos:start="109:5" pos:end="231:14">

    <case pos:start="109:5" pos:end="109:22">case <expr pos:start="109:10" pos:end="109:21"><name pos:start="109:10" pos:end="109:21">CODEC_ID_MP2</name></expr>:</case>

    <case pos:start="111:5" pos:end="111:22">case <expr pos:start="111:10" pos:end="111:21"><name pos:start="111:10" pos:end="111:21">CODEC_ID_MP3</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:32"><expr pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:18"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:18">buf_ptr</name></name> <operator pos:start="113:20" pos:end="113:20">=</operator> <name pos:start="113:22" pos:end="113:27"><name pos:start="113:22" pos:end="113:22">s</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:27">buf</name></name> <operator pos:start="113:29" pos:end="113:29">+</operator> <literal type="number" pos:start="113:31" pos:end="113:31">4</literal></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:29">case <expr pos:start="117:10" pos:end="117:28"><name pos:start="117:10" pos:end="117:28">CODEC_ID_MPEG1VIDEO</name></expr>:</case>

    <case pos:start="119:5" pos:end="119:29">case <expr pos:start="119:10" pos:end="119:28"><name pos:start="119:10" pos:end="119:28">CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:26">case <expr pos:start="123:10" pos:end="123:25"><name pos:start="123:10" pos:end="123:25">CODEC_ID_MPEG2TS</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:9">n</name> <operator pos:start="125:11" pos:end="125:11">=</operator> <name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:31">max_payload_size</name></name> <operator pos:start="125:33" pos:end="125:33">/</operator> <name pos:start="125:35" pos:end="125:48">TS_PACKET_SIZE</name></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="129:18"><if pos:start="127:9" pos:end="129:18">if <condition pos:start="127:12" pos:end="127:18">(<expr pos:start="127:13" pos:end="127:17"><name pos:start="127:13" pos:end="127:13">n</name> <operator pos:start="127:15" pos:end="127:15">&lt;</operator> <literal type="number" pos:start="127:17" pos:end="127:17">1</literal></expr>)</condition><block type="pseudo" pos:start="129:13" pos:end="129:18"><block_content pos:start="129:13" pos:end="129:18">

            <expr_stmt pos:start="129:13" pos:end="129:18"><expr pos:start="129:13" pos:end="129:17"><name pos:start="129:13" pos:end="129:13">n</name> <operator pos:start="129:15" pos:end="129:15">=</operator> <literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:49"><expr pos:start="131:9" pos:end="131:48"><name pos:start="131:9" pos:end="131:27"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:27">max_payload_size</name></name> <operator pos:start="131:29" pos:end="131:29">=</operator> <name pos:start="131:31" pos:end="131:31">n</name> <operator pos:start="131:33" pos:end="131:33">*</operator> <name pos:start="131:35" pos:end="131:48">TS_PACKET_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:28"><expr pos:start="133:9" pos:end="133:27"><name pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:18">buf_ptr</name></name> <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:27"><name pos:start="133:22" pos:end="133:22">s</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:27">buf</name></name></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:23">case <expr pos:start="137:10" pos:end="137:22"><name pos:start="137:10" pos:end="137:22">CODEC_ID_H264</name></expr>:</case>

        <comment type="block" pos:start="139:9" pos:end="139:40">/* check for H.264 MP4 syntax */</comment>

        <if_stmt pos:start="141:9" pos:end="145:9"><if pos:start="141:9" pos:end="145:9">if <condition pos:start="141:12" pos:end="141:74">(<expr pos:start="141:13" pos:end="141:73"><name pos:start="141:13" pos:end="141:37"><name pos:start="141:13" pos:end="141:14">st</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:21">codec</name><operator pos:start="141:22" pos:end="141:23">-&gt;</operator><name pos:start="141:24" pos:end="141:37">extradata_size</name></name> <operator pos:start="141:39" pos:end="141:39">&gt;</operator> <literal type="number" pos:start="141:41" pos:end="141:41">4</literal> <operator pos:start="141:43" pos:end="141:44">&amp;&amp;</operator> <name pos:start="141:46" pos:end="141:68"><name pos:start="141:46" pos:end="141:47">st</name><operator pos:start="141:48" pos:end="141:49">-&gt;</operator><name pos:start="141:50" pos:end="141:54">codec</name><operator pos:start="141:55" pos:end="141:56">-&gt;</operator><name pos:start="141:57" pos:end="141:65">extradata</name><index pos:start="141:66" pos:end="141:68">[<expr pos:start="141:67" pos:end="141:67"><literal type="number" pos:start="141:67" pos:end="141:67">0</literal></expr>]</index></name> <operator pos:start="141:70" pos:end="141:71">==</operator> <literal type="number" pos:start="141:73" pos:end="141:73">1</literal></expr>)</condition> <block pos:start="141:76" pos:end="145:9">{<block_content pos:start="143:13" pos:end="143:70">

            <expr_stmt pos:start="143:13" pos:end="143:70"><expr pos:start="143:13" pos:end="143:69"><name pos:start="143:13" pos:end="143:30"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:30">nal_length_size</name></name> <operator pos:start="143:32" pos:end="143:32">=</operator> <operator pos:start="143:34" pos:end="143:34">(</operator><name pos:start="143:35" pos:end="143:57"><name pos:start="143:35" pos:end="143:36">st</name><operator pos:start="143:37" pos:end="143:38">-&gt;</operator><name pos:start="143:39" pos:end="143:43">codec</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:54">extradata</name><index pos:start="143:55" pos:end="143:57">[<expr pos:start="143:56" pos:end="143:56"><literal type="number" pos:start="143:56" pos:end="143:56">4</literal></expr>]</index></name> <operator pos:start="143:59" pos:end="143:59">&amp;</operator> <literal type="number" pos:start="143:61" pos:end="143:64">0x03</literal><operator pos:start="143:65" pos:end="143:65">)</operator> <operator pos:start="143:67" pos:end="143:67">+</operator> <literal type="number" pos:start="143:69" pos:end="143:69">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:25">case <expr pos:start="149:10" pos:end="149:24"><name pos:start="149:10" pos:end="149:24">CODEC_ID_VORBIS</name></expr>:</case>

    <case pos:start="151:5" pos:end="151:25">case <expr pos:start="151:10" pos:end="151:24"><name pos:start="151:10" pos:end="151:24">CODEC_ID_THEORA</name></expr>:</case>

        <if_stmt pos:start="153:9" pos:end="153:69"><if pos:start="153:9" pos:end="153:69">if <condition pos:start="153:12" pos:end="153:38">(<expr pos:start="153:13" pos:end="153:37"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:37"><name pos:start="153:14" pos:end="153:14">s</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:37">max_frames_per_packet</name></name></expr>)</condition><block type="pseudo" pos:start="153:40" pos:end="153:69"><block_content pos:start="153:40" pos:end="153:69"> <expr_stmt pos:start="153:40" pos:end="153:69"><expr pos:start="153:40" pos:end="153:68"><name pos:start="153:40" pos:end="153:63"><name pos:start="153:40" pos:end="153:40">s</name><operator pos:start="153:41" pos:end="153:42">-&gt;</operator><name pos:start="153:43" pos:end="153:63">max_frames_per_packet</name></name> <operator pos:start="153:65" pos:end="153:65">=</operator> <literal type="number" pos:start="153:67" pos:end="153:68">15</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:76"><expr pos:start="155:9" pos:end="155:75"><name pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:32">max_frames_per_packet</name></name> <operator pos:start="155:34" pos:end="155:34">=</operator> <call pos:start="155:36" pos:end="155:75"><name pos:start="155:36" pos:end="155:42">av_clip</name><argument_list pos:start="155:43" pos:end="155:75">(<argument pos:start="155:44" pos:end="155:67"><expr pos:start="155:44" pos:end="155:67"><name pos:start="155:44" pos:end="155:67"><name pos:start="155:44" pos:end="155:44">s</name><operator pos:start="155:45" pos:end="155:46">-&gt;</operator><name pos:start="155:47" pos:end="155:67">max_frames_per_packet</name></name></expr></argument>, <argument pos:start="155:70" pos:end="155:70"><expr pos:start="155:70" pos:end="155:70"><literal type="number" pos:start="155:70" pos:end="155:70">1</literal></expr></argument>, <argument pos:start="155:73" pos:end="155:74"><expr pos:start="155:73" pos:end="155:74"><literal type="number" pos:start="155:73" pos:end="155:74">15</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:33"><expr pos:start="157:9" pos:end="157:32"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:27">max_payload_size</name></name> <operator pos:start="157:29" pos:end="157:30">-=</operator> <literal type="number" pos:start="157:32" pos:end="157:32">6</literal></expr>;</expr_stmt> <comment type="line" pos:start="157:35" pos:end="157:74">// ident+frag+tdt/vdt+pkt_num+pkt_length</comment>

        <expr_stmt pos:start="159:9" pos:end="159:26"><expr pos:start="159:9" pos:end="159:25"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:9">s</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:21">num_frames</name></name> <operator pos:start="159:23" pos:end="159:23">=</operator> <literal type="number" pos:start="159:25" pos:end="159:25">0</literal></expr>;</expr_stmt>

        <goto pos:start="161:9" pos:end="161:25">goto <name pos:start="161:14" pos:end="161:24">defaultcase</name>;</goto>

    <case pos:start="163:5" pos:end="163:22">case <expr pos:start="163:10" pos:end="163:21"><name pos:start="163:10" pos:end="163:21">CODEC_ID_VP8</name></expr>:</case>

        <expr_stmt pos:start="165:9" pos:end="167:80"><expr pos:start="165:9" pos:end="167:79"><call pos:start="165:9" pos:end="167:79"><name pos:start="165:9" pos:end="165:14">av_log</name><argument_list pos:start="165:15" pos:end="167:79">(<argument pos:start="165:16" pos:end="165:17"><expr pos:start="165:16" pos:end="165:17"><name pos:start="165:16" pos:end="165:17">s1</name></expr></argument>, <argument pos:start="165:20" pos:end="165:31"><expr pos:start="165:20" pos:end="165:31"><name pos:start="165:20" pos:end="165:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="165:34" pos:end="167:78"><expr pos:start="165:34" pos:end="167:78"><literal type="string" pos:start="165:34" pos:end="165:69">"RTP VP8 payload implementation is "</literal>

                                 <literal type="string" pos:start="167:34" pos:end="167:78">"incompatible with the latest spec drafts.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:29">case <expr pos:start="171:10" pos:end="171:28"><name pos:start="171:10" pos:end="171:28">CODEC_ID_ADPCM_G722</name></expr>:</case>

        <comment type="block" pos:start="173:9" pos:end="175:67">/* Due to a historical error, the clock rate for G722 in RTP is

         * 8000, even if the sample rate is 16000. See RFC 3551. */</comment>

        <expr_stmt pos:start="177:9" pos:end="177:45"><expr pos:start="177:9" pos:end="177:44"><call pos:start="177:9" pos:end="177:44"><name pos:start="177:9" pos:end="177:27">avpriv_set_pts_info</name><argument_list pos:start="177:28" pos:end="177:44">(<argument pos:start="177:29" pos:end="177:30"><expr pos:start="177:29" pos:end="177:30"><name pos:start="177:29" pos:end="177:30">st</name></expr></argument>, <argument pos:start="177:33" pos:end="177:34"><expr pos:start="177:33" pos:end="177:34"><literal type="number" pos:start="177:33" pos:end="177:34">32</literal></expr></argument>, <argument pos:start="177:37" pos:end="177:37"><expr pos:start="177:37" pos:end="177:37"><literal type="number" pos:start="177:37" pos:end="177:37">1</literal></expr></argument>, <argument pos:start="177:40" pos:end="177:43"><expr pos:start="177:40" pos:end="177:43"><literal type="number" pos:start="177:40" pos:end="177:43">8000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="179:9" pos:end="179:14">break;</break>

    <case pos:start="181:5" pos:end="181:25">case <expr pos:start="181:10" pos:end="181:24"><name pos:start="181:10" pos:end="181:24">CODEC_ID_AMR_NB</name></expr>:</case>

    <case pos:start="183:5" pos:end="183:25">case <expr pos:start="183:10" pos:end="183:24"><name pos:start="183:10" pos:end="183:24">CODEC_ID_AMR_WB</name></expr>:</case>

        <if_stmt pos:start="185:9" pos:end="187:42"><if pos:start="185:9" pos:end="187:42">if <condition pos:start="185:12" pos:end="185:38">(<expr pos:start="185:13" pos:end="185:37"><operator pos:start="185:13" pos:end="185:13">!</operator><name pos:start="185:14" pos:end="185:37"><name pos:start="185:14" pos:end="185:14">s</name><operator pos:start="185:15" pos:end="185:16">-&gt;</operator><name pos:start="185:17" pos:end="185:37">max_frames_per_packet</name></name></expr>)</condition><block type="pseudo" pos:start="187:13" pos:end="187:42"><block_content pos:start="187:13" pos:end="187:42">

            <expr_stmt pos:start="187:13" pos:end="187:42"><expr pos:start="187:13" pos:end="187:41"><name pos:start="187:13" pos:end="187:36"><name pos:start="187:13" pos:end="187:13">s</name><operator pos:start="187:14" pos:end="187:15">-&gt;</operator><name pos:start="187:16" pos:end="187:36">max_frames_per_packet</name></name> <operator pos:start="187:38" pos:end="187:38">=</operator> <literal type="number" pos:start="187:40" pos:end="187:41">12</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="189:9" pos:end="195:19"><if pos:start="189:9" pos:end="191:19">if <condition pos:start="189:12" pos:end="189:51">(<expr pos:start="189:13" pos:end="189:50"><name pos:start="189:13" pos:end="189:31"><name pos:start="189:13" pos:end="189:14">st</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:21">codec</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:31">codec_id</name></name> <operator pos:start="189:33" pos:end="189:34">==</operator> <name pos:start="189:36" pos:end="189:50">CODEC_ID_AMR_NB</name></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:19"><block_content pos:start="191:13" pos:end="191:19">

            <expr_stmt pos:start="191:13" pos:end="191:19"><expr pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">n</name> <operator pos:start="191:15" pos:end="191:15">=</operator> <literal type="number" pos:start="191:17" pos:end="191:18">31</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="193:9" pos:end="195:19">else<block type="pseudo" pos:start="195:13" pos:end="195:19"><block_content pos:start="195:13" pos:end="195:19">

            <expr_stmt pos:start="195:13" pos:end="195:19"><expr pos:start="195:13" pos:end="195:18"><name pos:start="195:13" pos:end="195:13">n</name> <operator pos:start="195:15" pos:end="195:15">=</operator> <literal type="number" pos:start="195:17" pos:end="195:18">61</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <comment type="block" pos:start="197:9" pos:end="197:68">/* max_header_toc_size + the largest AMR payload must fit */</comment>

        <if_stmt pos:start="199:9" pos:end="205:9"><if pos:start="199:9" pos:end="205:9">if <condition pos:start="199:12" pos:end="199:67">(<expr pos:start="199:13" pos:end="199:66"><literal type="number" pos:start="199:13" pos:end="199:15">1</literal> <operator pos:start="199:15" pos:end="199:15">+</operator> <name pos:start="199:17" pos:end="199:40"><name pos:start="199:17" pos:end="199:17">s</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:40">max_frames_per_packet</name></name> <operator pos:start="199:42" pos:end="199:42">+</operator> <name pos:start="199:44" pos:end="199:44">n</name> <operator pos:start="199:46" pos:end="199:46">&gt;</operator> <name pos:start="199:48" pos:end="199:66"><name pos:start="199:48" pos:end="199:48">s</name><operator pos:start="199:49" pos:end="199:50">-&gt;</operator><name pos:start="199:51" pos:end="199:66">max_payload_size</name></name></expr>)</condition> <block pos:start="199:69" pos:end="205:9">{<block_content pos:start="201:13" pos:end="203:22">

            <expr_stmt pos:start="201:13" pos:end="201:81"><expr pos:start="201:13" pos:end="201:80"><call pos:start="201:13" pos:end="201:80"><name pos:start="201:13" pos:end="201:18">av_log</name><argument_list pos:start="201:19" pos:end="201:80">(<argument pos:start="201:20" pos:end="201:21"><expr pos:start="201:20" pos:end="201:21"><name pos:start="201:20" pos:end="201:21">s1</name></expr></argument>, <argument pos:start="201:24" pos:end="201:35"><expr pos:start="201:24" pos:end="201:35"><name pos:start="201:24" pos:end="201:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="201:38" pos:end="201:79"><expr pos:start="201:38" pos:end="201:79"><literal type="string" pos:start="201:38" pos:end="201:79">"RTP max payload size too small for AMR\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="203:13" pos:end="203:22">return <expr pos:start="203:20" pos:end="203:21"><operator pos:start="203:20" pos:end="203:20">-</operator><literal type="number" pos:start="203:21" pos:end="203:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="207:9" pos:end="213:9"><if pos:start="207:9" pos:end="213:9">if <condition pos:start="207:12" pos:end="207:37">(<expr pos:start="207:13" pos:end="207:36"><name pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:14">st</name><operator pos:start="207:15" pos:end="207:16">-&gt;</operator><name pos:start="207:17" pos:end="207:21">codec</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:31">channels</name></name> <operator pos:start="207:33" pos:end="207:34">!=</operator> <literal type="number" pos:start="207:36" pos:end="207:36">1</literal></expr>)</condition> <block pos:start="207:39" pos:end="213:9">{<block_content pos:start="209:13" pos:end="211:22">

            <expr_stmt pos:start="209:13" pos:end="209:65"><expr pos:start="209:13" pos:end="209:64"><call pos:start="209:13" pos:end="209:64"><name pos:start="209:13" pos:end="209:18">av_log</name><argument_list pos:start="209:19" pos:end="209:64">(<argument pos:start="209:20" pos:end="209:21"><expr pos:start="209:20" pos:end="209:21"><name pos:start="209:20" pos:end="209:21">s1</name></expr></argument>, <argument pos:start="209:24" pos:end="209:35"><expr pos:start="209:24" pos:end="209:35"><name pos:start="209:24" pos:end="209:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="209:38" pos:end="209:63"><expr pos:start="209:38" pos:end="209:63"><literal type="string" pos:start="209:38" pos:end="209:63">"Only mono is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:22">return <expr pos:start="211:20" pos:end="211:21"><operator pos:start="211:20" pos:end="211:20">-</operator><literal type="number" pos:start="211:21" pos:end="211:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    <case pos:start="215:5" pos:end="215:22">case <expr pos:start="215:10" pos:end="215:21"><name pos:start="215:10" pos:end="215:21">CODEC_ID_AAC</name></expr>:</case>

        <expr_stmt pos:start="217:9" pos:end="217:26"><expr pos:start="217:9" pos:end="217:25"><name pos:start="217:9" pos:end="217:21"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:21">num_frames</name></name> <operator pos:start="217:23" pos:end="217:23">=</operator> <literal type="number" pos:start="217:25" pos:end="217:25">0</literal></expr>;</expr_stmt>

    <default pos:start="219:5" pos:end="219:12">default:</default>

<label pos:start="221:1" pos:end="221:12"><name pos:start="221:1" pos:end="221:11">defaultcase</name>:</label>

        <if_stmt pos:start="223:9" pos:end="227:9"><if pos:start="223:9" pos:end="227:9">if <condition pos:start="223:12" pos:end="223:56">(<expr pos:start="223:13" pos:end="223:55"><name pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:14">st</name><operator pos:start="223:15" pos:end="223:16">-&gt;</operator><name pos:start="223:17" pos:end="223:21">codec</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:33">codec_type</name></name> <operator pos:start="223:35" pos:end="223:36">==</operator> <name pos:start="223:38" pos:end="223:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="223:58" pos:end="227:9">{<block_content pos:start="225:13" pos:end="225:67">

            <expr_stmt pos:start="225:13" pos:end="225:67"><expr pos:start="225:13" pos:end="225:66"><call pos:start="225:13" pos:end="225:66"><name pos:start="225:13" pos:end="225:31">avpriv_set_pts_info</name><argument_list pos:start="225:32" pos:end="225:66">(<argument pos:start="225:33" pos:end="225:34"><expr pos:start="225:33" pos:end="225:34"><name pos:start="225:33" pos:end="225:34">st</name></expr></argument>, <argument pos:start="225:37" pos:end="225:38"><expr pos:start="225:37" pos:end="225:38"><literal type="number" pos:start="225:37" pos:end="225:38">32</literal></expr></argument>, <argument pos:start="225:41" pos:end="225:41"><expr pos:start="225:41" pos:end="225:41"><literal type="number" pos:start="225:41" pos:end="225:41">1</literal></expr></argument>, <argument pos:start="225:44" pos:end="225:65"><expr pos:start="225:44" pos:end="225:65"><name pos:start="225:44" pos:end="225:65"><name pos:start="225:44" pos:end="225:45">st</name><operator pos:start="225:46" pos:end="225:47">-&gt;</operator><name pos:start="225:48" pos:end="225:52">codec</name><operator pos:start="225:53" pos:end="225:54">-&gt;</operator><name pos:start="225:55" pos:end="225:65">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:28"><expr pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:18"><name pos:start="229:9" pos:end="229:9">s</name><operator pos:start="229:10" pos:end="229:11">-&gt;</operator><name pos:start="229:12" pos:end="229:18">buf_ptr</name></name> <operator pos:start="229:20" pos:end="229:20">=</operator> <name pos:start="229:22" pos:end="229:27"><name pos:start="229:22" pos:end="229:22">s</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:27">buf</name></name></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="237:5" pos:end="237:13">return <expr pos:start="237:12" pos:end="237:12"><literal type="number" pos:start="237:12" pos:end="237:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
