<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25871.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">serial_update_parameters</name><parameter_list pos:start="1:37" pos:end="1:52">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:48">SerialState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:48">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">speed</name></decl>, <decl pos:start="5:16" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:16" pos:end="5:21">parity</name></decl>, <decl pos:start="5:24" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:32">data_bits</name></decl>, <decl pos:start="5:35" pos:end="5:43"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:35" pos:end="5:43">stop_bits</name></decl>, <decl pos:start="5:46" pos:end="5:55"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:46" pos:end="5:55">frame_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23">QEMUSerialSetParams</name></type> <name pos:start="7:25" pos:end="7:27">ssp</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:24">(<expr pos:start="11:9" pos:end="11:23"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">s</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">divider</name></name> <operator pos:start="11:20" pos:end="11:21">==</operator> <literal type="number" pos:start="11:23" pos:end="11:23">0</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:20">/* Start bit. */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:14">frame_size</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="39:5"><if pos:start="21:5" pos:end="35:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:14">lcr</name></name> <operator pos:start="21:16" pos:end="21:16">&amp;</operator> <literal type="number" pos:start="21:18" pos:end="21:21">0x08</literal></expr>)</condition> <block pos:start="21:24" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:25">

        <comment type="block" pos:start="23:9" pos:end="23:25">/* Parity bit. */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:18">frame_size</name><operator pos:start="25:19" pos:end="25:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="33:25"><if pos:start="27:9" pos:end="29:25">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:18"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:18">lcr</name></name> <operator pos:start="27:20" pos:end="27:20">&amp;</operator> <literal type="number" pos:start="27:22" pos:end="27:25">0x10</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:25"><block_content pos:start="29:13" pos:end="29:25">

            <expr_stmt pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:18">parity</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="char" pos:start="29:22" pos:end="29:24">'E'</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="31:9" pos:end="33:25">else<block type="pseudo" pos:start="33:13" pos:end="33:25"><block_content pos:start="33:13" pos:end="33:25">

            <expr_stmt pos:start="33:13" pos:end="33:25"><expr pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:18">parity</name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="char" pos:start="33:22" pos:end="33:24">'O'</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:13" pos:end="37:25">

            <expr_stmt pos:start="37:13" pos:end="37:25"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:18">parity</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="char" pos:start="37:22" pos:end="37:24">'N'</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="41:5" pos:end="47:22"><if pos:start="41:5" pos:end="43:22">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:14">lcr</name></name> <operator pos:start="41:16" pos:end="41:16">&amp;</operator> <literal type="number" pos:start="41:18" pos:end="41:21">0x04</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:22"><block_content pos:start="43:9" pos:end="43:22">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17">stop_bits</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="45:5" pos:end="47:22">else<block type="pseudo" pos:start="47:9" pos:end="47:22"><block_content pos:start="47:9" pos:end="47:22">

        <expr_stmt pos:start="47:9" pos:end="47:22"><expr pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17">stop_bits</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <literal type="number" pos:start="47:21" pos:end="47:21">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:13">data_bits</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <operator pos:start="51:17" pos:end="51:17">(</operator><name pos:start="51:18" pos:end="51:23"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">lcr</name></name> <operator pos:start="51:25" pos:end="51:25">&amp;</operator> <literal type="number" pos:start="51:27" pos:end="51:30">0x03</literal><operator pos:start="51:31" pos:end="51:31">)</operator> <operator pos:start="51:33" pos:end="51:33">+</operator> <literal type="number" pos:start="51:35" pos:end="51:35">5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:14">frame_size</name> <operator pos:start="53:16" pos:end="53:17">+=</operator> <name pos:start="53:19" pos:end="53:27">data_bits</name> <operator pos:start="53:29" pos:end="53:29">+</operator> <name pos:start="53:31" pos:end="53:39">stop_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:9">speed</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:13">s</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:23">baudbase</name></name> <operator pos:start="55:25" pos:end="55:25">/</operator> <name pos:start="55:27" pos:end="55:36"><name pos:start="55:27" pos:end="55:27">s</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:36">divider</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:22"><expr pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:7">ssp</name><operator pos:start="57:8" pos:end="57:8">.</operator><name pos:start="57:9" pos:end="57:13">speed</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:21">speed</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:24"><expr pos:start="59:5" pos:end="59:23"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:7">ssp</name><operator pos:start="59:8" pos:end="59:8">.</operator><name pos:start="59:9" pos:end="59:14">parity</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:23">parity</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:7">ssp</name><operator pos:start="61:8" pos:end="61:8">.</operator><name pos:start="61:9" pos:end="61:17">data_bits</name></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:29">data_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:30"><expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:7">ssp</name><operator pos:start="63:8" pos:end="63:8">.</operator><name pos:start="63:9" pos:end="63:17">stop_bits</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:29">stop_bits</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:75"><expr pos:start="65:5" pos:end="65:74"><name pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:25">char_transmit_time</name></name> <operator pos:start="65:27" pos:end="65:27">=</operator>  <operator pos:start="65:30" pos:end="65:30">(</operator><name pos:start="65:31" pos:end="65:52">NANOSECONDS_PER_SECOND</name> <operator pos:start="65:54" pos:end="65:54">/</operator> <name pos:start="65:56" pos:end="65:60">speed</name><operator pos:start="65:61" pos:end="65:61">)</operator> <operator pos:start="65:63" pos:end="65:63">*</operator> <name pos:start="65:65" pos:end="65:74">frame_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:65"><expr pos:start="67:5" pos:end="67:64"><call pos:start="67:5" pos:end="67:64"><name pos:start="67:5" pos:end="67:21">qemu_chr_fe_ioctl</name><argument_list pos:start="67:22" pos:end="67:64">(<argument pos:start="67:23" pos:end="67:28"><expr pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:28">chr</name></name></expr></argument>, <argument pos:start="67:31" pos:end="67:57"><expr pos:start="67:31" pos:end="67:57"><name pos:start="67:31" pos:end="67:57">CHR_IOCTL_SERIAL_SET_PARAMS</name></expr></argument>, <argument pos:start="67:60" pos:end="67:63"><expr pos:start="67:60" pos:end="67:63"><operator pos:start="67:60" pos:end="67:60">&amp;</operator><name pos:start="67:61" pos:end="67:63">ssp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:48"><expr pos:start="71:5" pos:end="73:47"><call pos:start="71:5" pos:end="73:47"><name pos:start="71:5" pos:end="71:11">DPRINTF</name><argument_list pos:start="71:12" pos:end="73:47">(<argument pos:start="71:13" pos:end="71:50"><expr pos:start="71:13" pos:end="71:50"><literal type="string" pos:start="71:13" pos:end="71:50">"speed=%d parity=%c data=%d stop=%d\n"</literal></expr></argument>,

           <argument pos:start="73:12" pos:end="73:16"><expr pos:start="73:12" pos:end="73:16"><name pos:start="73:12" pos:end="73:16">speed</name></expr></argument>, <argument pos:start="73:19" pos:end="73:24"><expr pos:start="73:19" pos:end="73:24"><name pos:start="73:19" pos:end="73:24">parity</name></expr></argument>, <argument pos:start="73:27" pos:end="73:35"><expr pos:start="73:27" pos:end="73:35"><name pos:start="73:27" pos:end="73:35">data_bits</name></expr></argument>, <argument pos:start="73:38" pos:end="73:46"><expr pos:start="73:38" pos:end="73:46"><name pos:start="73:38" pos:end="73:46">stop_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
