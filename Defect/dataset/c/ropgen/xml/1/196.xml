<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/196.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">load_input_picture</name><parameter_list pos:start="1:30" pos:end="1:66">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:65"><decl pos:start="1:50" pos:end="1:65"><type pos:start="1:50" pos:end="1:65"><name pos:start="1:50" pos:end="1:56">AVFrame</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">pic_arg</name></decl></parameter>)</parameter_list><block pos:start="1:67" pos:end="171:1">{<block_content pos:start="3:5" pos:end="169:13">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:21"><type pos:start="3:5" pos:end="3:13"><name pos:start="3:5" pos:end="3:11">AVFrame</name> <modifier pos:start="3:13" pos:end="3:13">*</modifier></type><name pos:start="3:14" pos:end="3:16">pic</name><init pos:start="3:17" pos:end="3:21">=<expr pos:start="3:18" pos:end="3:21"><name pos:start="3:18" pos:end="3:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">encoding_delay</name><init pos:start="7:29" pos:end="7:45">= <expr pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:31">s</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:45">max_b_frames</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">direct</name><init pos:start="9:15" pos:end="9:16">=<expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">1</literal></expr></init></decl>;</decl_stmt>

    

  <if_stmt pos:start="13:3" pos:end="153:3"><if pos:start="13:3" pos:end="153:3">if<condition pos:start="13:5" pos:end="13:13">(<expr pos:start="13:6" pos:end="13:12"><name pos:start="13:6" pos:end="13:12">pic_arg</name></expr>)</condition><block pos:start="13:14" pos:end="153:3">{<block_content pos:start="15:5" pos:end="149:98">

    <if_stmt pos:start="15:5" pos:end="15:74"><if pos:start="15:5" pos:end="15:74">if<condition pos:start="15:7" pos:end="15:64">(<expr pos:start="15:8" pos:end="15:63"><name pos:start="15:8" pos:end="15:21">encoding_delay</name> <operator pos:start="15:23" pos:end="15:24">&amp;&amp;</operator> <operator pos:start="15:26" pos:end="15:26">!</operator><operator pos:start="15:27" pos:end="15:27">(</operator><name pos:start="15:28" pos:end="15:35"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:35">flags</name></name><operator pos:start="15:36" pos:end="15:36">&amp;</operator><name pos:start="15:37" pos:end="15:62">CODEC_FLAG_INPUT_PRESERVED</name><operator pos:start="15:63" pos:end="15:63">)</operator></expr>)</condition><block type="pseudo" pos:start="15:66" pos:end="15:74"><block_content pos:start="15:66" pos:end="15:74"> <expr_stmt pos:start="15:66" pos:end="15:74"><expr pos:start="15:66" pos:end="15:73"><name pos:start="15:66" pos:end="15:71">direct</name><operator pos:start="15:72" pos:end="15:72">=</operator><literal type="number" pos:start="15:73" pos:end="15:73">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="17:53"><if pos:start="17:5" pos:end="17:53">if<condition pos:start="17:7" pos:end="17:43">(<expr pos:start="17:8" pos:end="17:42"><name pos:start="17:8" pos:end="17:27"><name pos:start="17:8" pos:end="17:14">pic_arg</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:24">linesize</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>]</index></name> <operator pos:start="17:29" pos:end="17:30">!=</operator> <name pos:start="17:32" pos:end="17:42"><name pos:start="17:32" pos:end="17:32">s</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:42">linesize</name></name></expr>)</condition><block type="pseudo" pos:start="17:45" pos:end="17:53"><block_content pos:start="17:45" pos:end="17:53"> <expr_stmt pos:start="17:45" pos:end="17:53"><expr pos:start="17:45" pos:end="17:52"><name pos:start="17:45" pos:end="17:50">direct</name><operator pos:start="17:51" pos:end="17:51">=</operator><literal type="number" pos:start="17:52" pos:end="17:52">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="19:55"><if pos:start="19:5" pos:end="19:55">if<condition pos:start="19:7" pos:end="19:45">(<expr pos:start="19:8" pos:end="19:44"><name pos:start="19:8" pos:end="19:27"><name pos:start="19:8" pos:end="19:14">pic_arg</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:24">linesize</name><index pos:start="19:25" pos:end="19:27">[<expr pos:start="19:26" pos:end="19:26"><literal type="number" pos:start="19:26" pos:end="19:26">1</literal></expr>]</index></name> <operator pos:start="19:29" pos:end="19:30">!=</operator> <name pos:start="19:32" pos:end="19:44"><name pos:start="19:32" pos:end="19:32">s</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:44">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="19:47" pos:end="19:55"><block_content pos:start="19:47" pos:end="19:55"> <expr_stmt pos:start="19:47" pos:end="19:55"><expr pos:start="19:47" pos:end="19:54"><name pos:start="19:47" pos:end="19:52">direct</name><operator pos:start="19:53" pos:end="19:53">=</operator><literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="21:55"><if pos:start="21:5" pos:end="21:55">if<condition pos:start="21:7" pos:end="21:45">(<expr pos:start="21:8" pos:end="21:44"><name pos:start="21:8" pos:end="21:27"><name pos:start="21:8" pos:end="21:14">pic_arg</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:24">linesize</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">2</literal></expr>]</index></name> <operator pos:start="21:29" pos:end="21:30">!=</operator> <name pos:start="21:32" pos:end="21:44"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:44">uvlinesize</name></name></expr>)</condition><block type="pseudo" pos:start="21:47" pos:end="21:55"><block_content pos:start="21:47" pos:end="21:55"> <expr_stmt pos:start="21:47" pos:end="21:55"><expr pos:start="21:47" pos:end="21:54"><name pos:start="21:47" pos:end="21:52">direct</name><operator pos:start="21:53" pos:end="21:53">=</operator><literal type="number" pos:start="21:54" pos:end="21:54">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

  

<comment type="line" pos:start="25:1" pos:end="25:101">//    printf("%d %d %d %d\n",pic_arg-&gt;linesize[0], pic_arg-&gt;linesize[1], s-&gt;linesize, s-&gt;uvlinesize);</comment>

    

    <if_stmt pos:start="29:5" pos:end="137:5"><if pos:start="29:5" pos:end="51:5">if<condition pos:start="29:7" pos:end="29:14">(<expr pos:start="29:8" pos:end="29:13"><name pos:start="29:8" pos:end="29:13">direct</name></expr>)</condition><block pos:start="29:15" pos:end="51:5">{<block_content pos:start="31:9" pos:end="49:43">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:9">i</name><operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:36"><name pos:start="31:12" pos:end="31:30">find_unused_picture</name><argument_list pos:start="31:31" pos:end="31:36">(<argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><name pos:start="31:32" pos:end="31:32">s</name></expr></argument>, <argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><literal type="number" pos:start="31:35" pos:end="31:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:11">pic</name><operator pos:start="35:12" pos:end="35:12">=</operator> <operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:21">AVFrame</name><operator pos:start="35:22" pos:end="35:22">*</operator><operator pos:start="35:23" pos:end="35:23">)</operator><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:34">picture</name><index pos:start="35:35" pos:end="35:37">[<expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:11">pic</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:22">reference</name></name><operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="number" pos:start="37:25" pos:end="37:25">3</literal></expr>;</expr_stmt>

    

        <for pos:start="41:9" pos:end="47:9">for<control pos:start="41:12" pos:end="41:26">(<init pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">=</operator><literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</init> <condition pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:18">i</name><operator pos:start="41:19" pos:end="41:19">&lt;</operator><literal type="number" pos:start="41:20" pos:end="41:20">4</literal></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:25">++</operator></expr></incr>)</control><block pos:start="41:27" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:51">

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:15">pic</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:21">data</name><index pos:start="43:22" pos:end="43:24">[<expr pos:start="43:23" pos:end="43:23"><name pos:start="43:23" pos:end="43:23">i</name></expr>]</index></name><operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:33">pic_arg</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">data</name><index pos:start="43:40" pos:end="43:42">[<expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:15">pic</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:25">linesize</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">i</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">=</operator> <name pos:start="45:31" pos:end="45:50"><name pos:start="45:31" pos:end="45:37">pic_arg</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:47">linesize</name><index pos:start="45:48" pos:end="45:50">[<expr pos:start="45:49" pos:end="45:49"><name pos:start="45:49" pos:end="45:49">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="49:9" pos:end="49:43"><expr pos:start="49:9" pos:end="49:42"><call pos:start="49:9" pos:end="49:42"><name pos:start="49:9" pos:end="49:21">alloc_picture</name><argument_list pos:start="49:22" pos:end="49:42">(<argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><name pos:start="49:23" pos:end="49:23">s</name></expr></argument>, <argument pos:start="49:26" pos:end="49:38"><expr pos:start="49:26" pos:end="49:38"><operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:33">Picture</name><operator pos:start="49:34" pos:end="49:34">*</operator><operator pos:start="49:35" pos:end="49:35">)</operator><name pos:start="49:36" pos:end="49:38">pic</name></expr></argument>, <argument pos:start="49:41" pos:end="49:41"><expr pos:start="49:41" pos:end="49:41"><literal type="number" pos:start="49:41" pos:end="49:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="51:6" pos:end="137:5">else<block pos:start="51:10" pos:end="137:5">{<block_content pos:start="53:9" pos:end="135:9">

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:9">i</name><operator pos:start="53:10" pos:end="53:10">=</operator> <call pos:start="53:12" pos:end="53:36"><name pos:start="53:12" pos:end="53:30">find_unused_picture</name><argument_list pos:start="53:31" pos:end="53:36">(<argument pos:start="53:32" pos:end="53:32"><expr pos:start="53:32" pos:end="53:32"><name pos:start="53:32" pos:end="53:32">s</name></expr></argument>, <argument pos:start="53:35" pos:end="53:35"><expr pos:start="53:35" pos:end="53:35"><literal type="number" pos:start="53:35" pos:end="53:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:11">pic</name><operator pos:start="57:12" pos:end="57:12">=</operator> <operator pos:start="57:14" pos:end="57:14">(</operator><name pos:start="57:15" pos:end="57:21">AVFrame</name><operator pos:start="57:22" pos:end="57:22">*</operator><operator pos:start="57:23" pos:end="57:23">)</operator><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:37"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:34">picture</name><index pos:start="57:35" pos:end="57:37">[<expr pos:start="57:36" pos:end="57:36"><name pos:start="57:36" pos:end="57:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:26"><expr pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:11">pic</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:22">reference</name></name><operator pos:start="59:23" pos:end="59:23">=</operator> <literal type="number" pos:start="59:25" pos:end="59:25">3</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><call pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:21">alloc_picture</name><argument_list pos:start="63:22" pos:end="63:42">(<argument pos:start="63:23" pos:end="63:23"><expr pos:start="63:23" pos:end="63:23"><name pos:start="63:23" pos:end="63:23">s</name></expr></argument>, <argument pos:start="63:26" pos:end="63:38"><expr pos:start="63:26" pos:end="63:38"><operator pos:start="63:26" pos:end="63:26">(</operator><name pos:start="63:27" pos:end="63:33">Picture</name><operator pos:start="63:34" pos:end="63:34">*</operator><operator pos:start="63:35" pos:end="63:35">)</operator><name pos:start="63:36" pos:end="63:38">pic</name></expr></argument>, <argument pos:start="63:41" pos:end="63:41"><expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="65:9" pos:end="75:9">for<control pos:start="65:12" pos:end="65:26">(<init pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">i</name><operator pos:start="65:14" pos:end="65:14">=</operator><literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>;</init> <condition pos:start="65:18" pos:end="65:21"><expr pos:start="65:18" pos:end="65:20"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><literal type="number" pos:start="65:20" pos:end="65:20">4</literal></expr>;</condition> <incr pos:start="65:23" pos:end="65:25"><expr pos:start="65:23" pos:end="65:25"><name pos:start="65:23" pos:end="65:23">i</name><operator pos:start="65:24" pos:end="65:25">++</operator></expr></incr>)</control><block pos:start="65:27" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:30">

            <comment type="block" pos:start="67:13" pos:end="71:15">/* the input will be 16 pixels to the right relative to the actual buffer start

             * and the current_pic, so the buffer can be reused, yes its not beatifull 

             */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:24"><name pos:start="73:13" pos:end="73:15">pic</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:21">data</name><index pos:start="73:22" pos:end="73:24">[<expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">i</name></expr>]</index></name><operator pos:start="73:25" pos:end="73:26">+=</operator> <literal type="number" pos:start="73:28" pos:end="73:29">16</literal></expr>;</expr_stmt> 

        </block_content>}</block></for>



        <if_stmt pos:start="79:9" pos:end="135:9"><if pos:start="79:9" pos:end="87:9">if<condition pos:start="79:11" pos:end="83:47">(   <expr pos:start="79:15" pos:end="83:46"><name pos:start="79:15" pos:end="79:26"><name pos:start="79:15" pos:end="79:17">pic</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:23">data</name><index pos:start="79:24" pos:end="79:26">[<expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">0</literal></expr>]</index></name> <operator pos:start="79:28" pos:end="79:29">==</operator> <name pos:start="79:31" pos:end="79:46"><name pos:start="79:31" pos:end="79:37">pic_arg</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:43">data</name><index pos:start="79:44" pos:end="79:46">[<expr pos:start="79:45" pos:end="79:45"><literal type="number" pos:start="79:45" pos:end="79:45">0</literal></expr>]</index></name> 

           <operator pos:start="81:12" pos:end="81:13">&amp;&amp;</operator> <name pos:start="81:15" pos:end="81:26"><name pos:start="81:15" pos:end="81:17">pic</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:23">data</name><index pos:start="81:24" pos:end="81:26">[<expr pos:start="81:25" pos:end="81:25"><literal type="number" pos:start="81:25" pos:end="81:25">1</literal></expr>]</index></name> <operator pos:start="81:28" pos:end="81:29">==</operator> <name pos:start="81:31" pos:end="81:46"><name pos:start="81:31" pos:end="81:37">pic_arg</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:43">data</name><index pos:start="81:44" pos:end="81:46">[<expr pos:start="81:45" pos:end="81:45"><literal type="number" pos:start="81:45" pos:end="81:45">1</literal></expr>]</index></name>

           <operator pos:start="83:12" pos:end="83:13">&amp;&amp;</operator> <name pos:start="83:15" pos:end="83:26"><name pos:start="83:15" pos:end="83:17">pic</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:23">data</name><index pos:start="83:24" pos:end="83:26">[<expr pos:start="83:25" pos:end="83:25"><literal type="number" pos:start="83:25" pos:end="83:25">2</literal></expr>]</index></name> <operator pos:start="83:28" pos:end="83:29">==</operator> <name pos:start="83:31" pos:end="83:46"><name pos:start="83:31" pos:end="83:37">pic_arg</name><operator pos:start="83:38" pos:end="83:39">-&gt;</operator><name pos:start="83:40" pos:end="83:43">data</name><index pos:start="83:44" pos:end="83:46">[<expr pos:start="83:45" pos:end="83:45"><literal type="number" pos:start="83:45" pos:end="83:45">2</literal></expr>]</index></name></expr>)</condition><block pos:start="83:48" pos:end="87:9">{<block_content>

       <comment type="line" pos:start="85:8" pos:end="85:15">// empty</comment>

        </block_content>}</block></if><else pos:start="87:10" pos:end="135:9">else<block pos:start="87:14" pos:end="135:9">{<block_content pos:start="89:13" pos:end="133:13">

            <decl_stmt pos:start="89:13" pos:end="89:47"><decl pos:start="89:13" pos:end="89:30"><type pos:start="89:13" pos:end="89:15"><name pos:start="89:13" pos:end="89:15">int</name></type> <name pos:start="89:17" pos:end="89:30">h_chroma_shift</name></decl>, <decl pos:start="89:33" pos:end="89:46"><type ref="prev" pos:start="89:13" pos:end="89:15"/><name pos:start="89:33" pos:end="89:46">v_chroma_shift</name></decl>;</decl_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:95"><expr pos:start="91:13" pos:end="91:94"><call pos:start="91:13" pos:end="91:94"><name pos:start="91:13" pos:end="91:41">avcodec_get_chroma_sub_sample</name><argument_list pos:start="91:42" pos:end="91:94">(<argument pos:start="91:43" pos:end="91:59"><expr pos:start="91:43" pos:end="91:59"><name pos:start="91:43" pos:end="91:59"><name pos:start="91:43" pos:end="91:43">s</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:50">avctx</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:59">pix_fmt</name></name></expr></argument>, <argument pos:start="91:62" pos:end="91:76"><expr pos:start="91:62" pos:end="91:76"><operator pos:start="91:62" pos:end="91:62">&amp;</operator><name pos:start="91:63" pos:end="91:76">h_chroma_shift</name></expr></argument>, <argument pos:start="91:79" pos:end="91:93"><expr pos:start="91:79" pos:end="91:93"><operator pos:start="91:79" pos:end="91:79">&amp;</operator><name pos:start="91:80" pos:end="91:93">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

            <for pos:start="95:13" pos:end="133:13">for<control pos:start="95:16" pos:end="95:30">(<init pos:start="95:17" pos:end="95:20"><expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:17">i</name><operator pos:start="95:18" pos:end="95:18">=</operator><literal type="number" pos:start="95:19" pos:end="95:19">0</literal></expr>;</init> <condition pos:start="95:22" pos:end="95:25"><expr pos:start="95:22" pos:end="95:24"><name pos:start="95:22" pos:end="95:22">i</name><operator pos:start="95:23" pos:end="95:23">&lt;</operator><literal type="number" pos:start="95:24" pos:end="95:24">3</literal></expr>;</condition> <incr pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:27">i</name><operator pos:start="95:28" pos:end="95:29">++</operator></expr></incr>)</control><block pos:start="95:31" pos:end="133:13">{<block_content pos:start="97:17" pos:end="131:17">

                <decl_stmt pos:start="97:17" pos:end="97:53"><decl pos:start="97:17" pos:end="97:52"><type pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:19">int</name></type> <name pos:start="97:21" pos:end="97:30">src_stride</name><init pos:start="97:31" pos:end="97:52">= <expr pos:start="97:33" pos:end="97:52"><name pos:start="97:33" pos:end="97:52"><name pos:start="97:33" pos:end="97:39">pic_arg</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:49">linesize</name><index pos:start="97:50" pos:end="97:52">[<expr pos:start="97:51" pos:end="97:51"><name pos:start="97:51" pos:end="97:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="99:17" pos:end="99:64"><decl pos:start="99:17" pos:end="99:63"><type pos:start="99:17" pos:end="99:19"><name pos:start="99:17" pos:end="99:19">int</name></type> <name pos:start="99:21" pos:end="99:30">dst_stride</name><init pos:start="99:31" pos:end="99:63">= <expr pos:start="99:33" pos:end="99:63"><ternary pos:start="99:33" pos:end="99:63"><condition pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:33"><name pos:start="99:33" pos:end="99:33">i</name></expr> ?</condition><then pos:start="99:37" pos:end="99:49"> <expr pos:start="99:37" pos:end="99:49"><name pos:start="99:37" pos:end="99:49"><name pos:start="99:37" pos:end="99:37">s</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:49">uvlinesize</name></name></expr> </then><else pos:start="99:51" pos:end="99:63">: <expr pos:start="99:53" pos:end="99:63"><name pos:start="99:53" pos:end="99:63"><name pos:start="99:53" pos:end="99:53">s</name><operator pos:start="99:54" pos:end="99:55">-&gt;</operator><name pos:start="99:56" pos:end="99:63">linesize</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="101:17" pos:end="101:52"><decl pos:start="101:17" pos:end="101:51"><type pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:19">int</name></type> <name pos:start="101:21" pos:end="101:27">h_shift</name><init pos:start="101:28" pos:end="101:51">= <expr pos:start="101:30" pos:end="101:51"><ternary pos:start="101:30" pos:end="101:51"><condition pos:start="101:30" pos:end="101:32"><expr pos:start="101:30" pos:end="101:30"><name pos:start="101:30" pos:end="101:30">i</name></expr> ?</condition><then pos:start="101:34" pos:end="101:47"> <expr pos:start="101:34" pos:end="101:47"><name pos:start="101:34" pos:end="101:47">h_chroma_shift</name></expr> </then><else pos:start="101:49" pos:end="101:51">: <expr pos:start="101:51" pos:end="101:51"><literal type="number" pos:start="101:51" pos:end="101:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="103:17" pos:end="103:52"><decl pos:start="103:17" pos:end="103:51"><type pos:start="103:17" pos:end="103:19"><name pos:start="103:17" pos:end="103:19">int</name></type> <name pos:start="103:21" pos:end="103:27">v_shift</name><init pos:start="103:28" pos:end="103:51">= <expr pos:start="103:30" pos:end="103:51"><ternary pos:start="103:30" pos:end="103:51"><condition pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:30"><name pos:start="103:30" pos:end="103:30">i</name></expr> ?</condition><then pos:start="103:34" pos:end="103:47"> <expr pos:start="103:34" pos:end="103:47"><name pos:start="103:34" pos:end="103:47">v_chroma_shift</name></expr> </then><else pos:start="103:49" pos:end="103:51">: <expr pos:start="103:51" pos:end="103:51"><literal type="number" pos:start="103:51" pos:end="103:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="105:17" pos:end="105:42"><decl pos:start="105:17" pos:end="105:41"><type pos:start="105:17" pos:end="105:19"><name pos:start="105:17" pos:end="105:19">int</name></type> <name pos:start="105:21" pos:end="105:21">w</name><init pos:start="105:22" pos:end="105:41">= <expr pos:start="105:24" pos:end="105:41"><name pos:start="105:24" pos:end="105:31"><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">width</name></name> <operator pos:start="105:33" pos:end="105:34">&gt;&gt;</operator><name pos:start="105:35" pos:end="105:41">h_shift</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="107:17" pos:end="107:42"><decl pos:start="107:17" pos:end="107:41"><type pos:start="107:17" pos:end="107:19"><name pos:start="107:17" pos:end="107:19">int</name></type> <name pos:start="107:21" pos:end="107:21">h</name><init pos:start="107:22" pos:end="107:41">= <expr pos:start="107:24" pos:end="107:41"><name pos:start="107:24" pos:end="107:32"><name pos:start="107:24" pos:end="107:24">s</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:32">height</name></name><operator pos:start="107:33" pos:end="107:34">&gt;&gt;</operator><name pos:start="107:35" pos:end="107:41">v_shift</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="109:17" pos:end="109:47"><decl pos:start="109:17" pos:end="109:46"><type pos:start="109:17" pos:end="109:25"><name pos:start="109:17" pos:end="109:23">uint8_t</name> <modifier pos:start="109:25" pos:end="109:25">*</modifier></type><name pos:start="109:26" pos:end="109:28">src</name><init pos:start="109:29" pos:end="109:46">= <expr pos:start="109:31" pos:end="109:46"><name pos:start="109:31" pos:end="109:46"><name pos:start="109:31" pos:end="109:37">pic_arg</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:43">data</name><index pos:start="109:44" pos:end="109:46">[<expr pos:start="109:45" pos:end="109:45"><name pos:start="109:45" pos:end="109:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="111:17" pos:end="111:43"><decl pos:start="111:17" pos:end="111:42"><type pos:start="111:17" pos:end="111:25"><name pos:start="111:17" pos:end="111:23">uint8_t</name> <modifier pos:start="111:25" pos:end="111:25">*</modifier></type><name pos:start="111:26" pos:end="111:28">dst</name><init pos:start="111:29" pos:end="111:42">= <expr pos:start="111:31" pos:end="111:42"><name pos:start="111:31" pos:end="111:42"><name pos:start="111:31" pos:end="111:33">pic</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:39">data</name><index pos:start="111:40" pos:end="111:42">[<expr pos:start="111:41" pos:end="111:41"><name pos:start="111:41" pos:end="111:41">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            

                <if_stmt pos:start="115:17" pos:end="131:17"><if pos:start="115:17" pos:end="117:51">if<condition pos:start="115:19" pos:end="115:42">(<expr pos:start="115:20" pos:end="115:41"><name pos:start="115:20" pos:end="115:29">src_stride</name><operator pos:start="115:30" pos:end="115:31">==</operator><name pos:start="115:32" pos:end="115:41">dst_stride</name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:51"><block_content pos:start="117:21" pos:end="117:51">

                    <expr_stmt pos:start="117:21" pos:end="117:51"><expr pos:start="117:21" pos:end="117:50"><call pos:start="117:21" pos:end="117:50"><name pos:start="117:21" pos:end="117:26">memcpy</name><argument_list pos:start="117:27" pos:end="117:50">(<argument pos:start="117:28" pos:end="117:30"><expr pos:start="117:28" pos:end="117:30"><name pos:start="117:28" pos:end="117:30">dst</name></expr></argument>, <argument pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:35">src</name></expr></argument>, <argument pos:start="117:38" pos:end="117:49"><expr pos:start="117:38" pos:end="117:49"><name pos:start="117:38" pos:end="117:47">src_stride</name><operator pos:start="117:48" pos:end="117:48">*</operator><name pos:start="117:49" pos:end="117:49">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="119:17" pos:end="131:17">else<block pos:start="119:21" pos:end="131:17">{<block_content pos:start="121:21" pos:end="129:21">

                    <while pos:start="121:21" pos:end="129:21">while<condition pos:start="121:26" pos:end="121:30">(<expr pos:start="121:27" pos:end="121:29"><name pos:start="121:27" pos:end="121:27">h</name><operator pos:start="121:28" pos:end="121:29">--</operator></expr>)</condition><block pos:start="121:31" pos:end="129:21">{<block_content pos:start="123:25" pos:end="127:42">

                        <expr_stmt pos:start="123:25" pos:end="123:44"><expr pos:start="123:25" pos:end="123:43"><call pos:start="123:25" pos:end="123:43"><name pos:start="123:25" pos:end="123:30">memcpy</name><argument_list pos:start="123:31" pos:end="123:43">(<argument pos:start="123:32" pos:end="123:34"><expr pos:start="123:32" pos:end="123:34"><name pos:start="123:32" pos:end="123:34">dst</name></expr></argument>, <argument pos:start="123:37" pos:end="123:39"><expr pos:start="123:37" pos:end="123:39"><name pos:start="123:37" pos:end="123:39">src</name></expr></argument>, <argument pos:start="123:42" pos:end="123:42"><expr pos:start="123:42" pos:end="123:42"><name pos:start="123:42" pos:end="123:42">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="125:25" pos:end="125:42"><expr pos:start="125:25" pos:end="125:41"><name pos:start="125:25" pos:end="125:27">dst</name> <operator pos:start="125:29" pos:end="125:30">+=</operator> <name pos:start="125:32" pos:end="125:41">dst_stride</name></expr>;</expr_stmt>

                        <expr_stmt pos:start="127:25" pos:end="127:42"><expr pos:start="127:25" pos:end="127:41"><name pos:start="127:25" pos:end="127:27">src</name> <operator pos:start="127:29" pos:end="127:30">+=</operator> <name pos:start="127:32" pos:end="127:41">src_stride</name></expr>;</expr_stmt>

                    </block_content>}</block></while>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:35"><expr pos:start="139:5" pos:end="139:34"><name pos:start="139:5" pos:end="139:16"><name pos:start="139:5" pos:end="139:7">pic</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:16">quality</name></name><operator pos:start="139:17" pos:end="139:17">=</operator> <name pos:start="139:19" pos:end="139:34"><name pos:start="139:19" pos:end="139:25">pic_arg</name><operator pos:start="139:26" pos:end="139:27">-&gt;</operator><name pos:start="139:28" pos:end="139:34">quality</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:39"><expr pos:start="141:5" pos:end="141:38"><name pos:start="141:5" pos:end="141:18"><name pos:start="141:5" pos:end="141:7">pic</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:18">pict_type</name></name><operator pos:start="141:19" pos:end="141:19">=</operator> <name pos:start="141:21" pos:end="141:38"><name pos:start="141:21" pos:end="141:27">pic_arg</name><operator pos:start="141:28" pos:end="141:29">-&gt;</operator><name pos:start="141:30" pos:end="141:38">pict_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:28"><expr pos:start="143:5" pos:end="143:27"><name pos:start="143:5" pos:end="143:12"><name pos:start="143:5" pos:end="143:7">pic</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:12">pts</name></name> <operator pos:start="143:14" pos:end="143:14">=</operator> <name pos:start="143:16" pos:end="143:27"><name pos:start="143:16" pos:end="143:22">pic_arg</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:27">pts</name></name></expr>;</expr_stmt>

    

    <if_stmt pos:start="147:5" pos:end="149:98"><if pos:start="147:5" pos:end="149:98">if<condition pos:start="147:7" pos:end="147:40">(<expr pos:start="147:8" pos:end="147:39"><name pos:start="147:8" pos:end="147:39"><name pos:start="147:8" pos:end="147:8">s</name><operator pos:start="147:9" pos:end="147:10">-&gt;</operator><name pos:start="147:11" pos:end="147:23">input_picture</name><index pos:start="147:24" pos:end="147:39">[<expr pos:start="147:25" pos:end="147:38"><name pos:start="147:25" pos:end="147:38">encoding_delay</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:98"><block_content pos:start="149:9" pos:end="149:98">

        <expr_stmt pos:start="149:9" pos:end="149:98"><expr pos:start="149:9" pos:end="149:97"><name pos:start="149:9" pos:end="149:35"><name pos:start="149:9" pos:end="149:11">pic</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:35">display_picture_number</name></name><operator pos:start="149:36" pos:end="149:36">=</operator> <name pos:start="149:38" pos:end="149:69"><name pos:start="149:38" pos:end="149:38">s</name><operator pos:start="149:39" pos:end="149:40">-&gt;</operator><name pos:start="149:41" pos:end="149:53">input_picture</name><index pos:start="149:54" pos:end="149:69">[<expr pos:start="149:55" pos:end="149:68"><name pos:start="149:55" pos:end="149:68">encoding_delay</name></expr>]</index></name><operator pos:start="149:70" pos:end="149:71">-&gt;</operator><name pos:start="149:72" pos:end="149:93">display_picture_number</name> <operator pos:start="149:95" pos:end="149:95">+</operator> <literal type="number" pos:start="149:97" pos:end="149:97">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    

  </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="157:5" pos:end="157:30">/* shift buffer entries */</comment>

    <for pos:start="159:5" pos:end="161:51">for<control pos:start="159:8" pos:end="159:62">(<init pos:start="159:9" pos:end="159:12"><expr pos:start="159:9" pos:end="159:11"><name pos:start="159:9" pos:end="159:9">i</name><operator pos:start="159:10" pos:end="159:10">=</operator><literal type="number" pos:start="159:11" pos:end="159:11">1</literal></expr>;</init> <condition pos:start="159:14" pos:end="159:57"><expr pos:start="159:14" pos:end="159:32"><name pos:start="159:14" pos:end="159:14">i</name><operator pos:start="159:15" pos:end="159:15">&lt;</operator><name pos:start="159:16" pos:end="159:32">MAX_PICTURE_COUNT</name></expr> <comment type="block" pos:start="159:34" pos:end="159:56">/*s-&gt;encoding_delay+1*/</comment>;</condition> <incr pos:start="159:59" pos:end="159:61"><expr pos:start="159:59" pos:end="159:61"><name pos:start="159:59" pos:end="159:59">i</name><operator pos:start="159:60" pos:end="159:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:9" pos:end="161:51"><block_content pos:start="161:9" pos:end="161:51">

        <expr_stmt pos:start="161:9" pos:end="161:51"><expr pos:start="161:9" pos:end="161:50"><name pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:24">input_picture</name><index pos:start="161:25" pos:end="161:29">[<expr pos:start="161:26" pos:end="161:28"><name pos:start="161:26" pos:end="161:26">i</name><operator pos:start="161:27" pos:end="161:27">-</operator><literal type="number" pos:start="161:28" pos:end="161:28">1</literal></expr>]</index></name><operator pos:start="161:30" pos:end="161:30">=</operator> <name pos:start="161:32" pos:end="161:50"><name pos:start="161:32" pos:end="161:32">s</name><operator pos:start="161:33" pos:end="161:34">-&gt;</operator><name pos:start="161:35" pos:end="161:47">input_picture</name><index pos:start="161:48" pos:end="161:50">[<expr pos:start="161:49" pos:end="161:49"><name pos:start="161:49" pos:end="161:49">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        

    <expr_stmt pos:start="165:5" pos:end="165:52"><expr pos:start="165:5" pos:end="165:51"><name pos:start="165:5" pos:end="165:36"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:20">input_picture</name><index pos:start="165:21" pos:end="165:36">[<expr pos:start="165:22" pos:end="165:35"><name pos:start="165:22" pos:end="165:35">encoding_delay</name></expr>]</index></name><operator pos:start="165:37" pos:end="165:37">=</operator> <operator pos:start="165:39" pos:end="165:39">(</operator><name pos:start="165:40" pos:end="165:46">Picture</name><operator pos:start="165:47" pos:end="165:47">*</operator><operator pos:start="165:48" pos:end="165:48">)</operator><name pos:start="165:49" pos:end="165:51">pic</name></expr>;</expr_stmt>



    <return pos:start="169:5" pos:end="169:13">return <expr pos:start="169:12" pos:end="169:12"><literal type="number" pos:start="169:12" pos:end="169:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
