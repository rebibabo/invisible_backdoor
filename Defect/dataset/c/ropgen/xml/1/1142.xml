<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1142.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:14"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">rom_add_file</name><parameter_list pos:start="1:17" pos:end="3:51">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><specifier pos:start="1:18" pos:end="1:22">const</specifier> <name pos:start="1:24" pos:end="1:27">char</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:33">file</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:53">fw_dir</name></decl></parameter>,
                 <parameter pos:start="2:18" pos:end="2:28"><decl pos:start="2:18" pos:end="2:28"><type pos:start="2:18" pos:end="2:28"><name pos:start="2:18" pos:end="2:23">hwaddr</name></type> <name pos:start="2:25" pos:end="2:28">addr</name></decl></parameter>, <parameter pos:start="2:31" pos:end="2:47"><decl pos:start="2:31" pos:end="2:47"><type pos:start="2:31" pos:end="2:47"><name pos:start="2:31" pos:end="2:37">int32_t</name></type> <name pos:start="2:39" pos:end="2:47">bootindex</name></decl></parameter>,
                 <parameter pos:start="3:18" pos:end="3:32"><decl pos:start="3:18" pos:end="3:32"><type pos:start="3:18" pos:end="3:32"><name pos:start="3:18" pos:end="3:21">bool</name></type> <name pos:start="3:23" pos:end="3:32">option_rom</name></decl></parameter>, <parameter pos:start="3:35" pos:end="3:50"><decl pos:start="3:35" pos:end="3:50"><type pos:start="3:35" pos:end="3:50"><name pos:start="3:35" pos:end="3:46">MemoryRegion</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:50">mr</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="69:14">{<block_content pos:start="5:5" pos:end="69:14">
    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:60"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MachineClass</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">mc</name> <init pos:start="5:22" pos:end="5:60">= <expr pos:start="5:24" pos:end="5:60"><call pos:start="5:24" pos:end="5:60"><name pos:start="5:24" pos:end="5:40">MACHINE_GET_CLASS</name><argument_list pos:start="5:41" pos:end="5:60">(<argument pos:start="5:42" pos:end="5:59"><expr pos:start="5:42" pos:end="5:59"><call pos:start="5:42" pos:end="5:59"><name pos:start="5:42" pos:end="5:57">qdev_get_machine</name><argument_list pos:start="5:58" pos:end="5:59">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:13"><decl pos:start="6:5" pos:end="6:12"><type pos:start="6:5" pos:end="6:9"><name pos:start="6:5" pos:end="6:7">Rom</name> <modifier pos:start="6:9" pos:end="6:9">*</modifier></type><name pos:start="6:10" pos:end="6:12">rom</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">rc</name></decl>, <decl pos:start="7:13" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:13" pos:end="7:14">fd</name> <init pos:start="7:16" pos:end="7:19">= <expr pos:start="7:18" pos:end="7:19"><operator pos:start="7:18" pos:end="7:18">-</operator><literal type="number" pos:start="7:19" pos:end="7:19">1</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:22"><decl pos:start="8:5" pos:end="8:21"><type pos:start="8:5" pos:end="8:8"><name pos:start="8:5" pos:end="8:8">char</name></type> <name pos:start="8:10" pos:end="8:21"><name pos:start="8:10" pos:end="8:16">devpath</name><index pos:start="8:17" pos:end="8:21">[<expr pos:start="8:18" pos:end="8:20"><literal type="number" pos:start="8:18" pos:end="8:20">100</literal></expr>]</index></name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:34"><expr pos:start="9:5" pos:end="9:33"><name pos:start="9:5" pos:end="9:7">rom</name> <operator pos:start="9:9" pos:end="9:9">=</operator> <call pos:start="9:11" pos:end="9:33"><name pos:start="9:11" pos:end="9:19">g_malloc0</name><argument_list pos:start="9:20" pos:end="9:33">(<argument pos:start="9:21" pos:end="9:32"><expr pos:start="9:21" pos:end="9:32"><sizeof pos:start="9:21" pos:end="9:32">sizeof<argument_list pos:start="9:27" pos:end="9:32">(<argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><operator pos:start="9:28" pos:end="9:28">*</operator><name pos:start="9:29" pos:end="9:31">rom</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:31"><expr pos:start="10:5" pos:end="10:30"><name pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:7">rom</name><operator pos:start="10:8" pos:end="10:9">-&gt;</operator><name pos:start="10:10" pos:end="10:13">name</name></name> <operator pos:start="10:15" pos:end="10:15">=</operator> <call pos:start="10:17" pos:end="10:30"><name pos:start="10:17" pos:end="10:24">g_strdup</name><argument_list pos:start="10:25" pos:end="10:30">(<argument pos:start="10:26" pos:end="10:29"><expr pos:start="10:26" pos:end="10:29"><name pos:start="10:26" pos:end="10:29">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:63"><expr pos:start="11:5" pos:end="11:62"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:7">rom</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:13">path</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <call pos:start="11:17" pos:end="11:62"><name pos:start="11:17" pos:end="11:30">qemu_find_file</name><argument_list pos:start="11:31" pos:end="11:62">(<argument pos:start="11:32" pos:end="11:50"><expr pos:start="11:32" pos:end="11:50"><name pos:start="11:32" pos:end="11:50">QEMU_FILE_TYPE_BIOS</name></expr></argument>, <argument pos:start="11:53" pos:end="11:61"><expr pos:start="11:53" pos:end="11:61"><name pos:start="11:53" pos:end="11:61"><name pos:start="11:53" pos:end="11:55">rom</name><operator pos:start="11:56" pos:end="11:57">-&gt;</operator><name pos:start="11:58" pos:end="11:61">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="69:14"><if pos:start="12:5" pos:end="69:14">if <condition pos:start="12:8" pos:end="12:26">(<expr pos:start="12:9" pos:end="12:25"><name pos:start="12:9" pos:end="12:17"><name pos:start="12:9" pos:end="12:11">rom</name><operator pos:start="12:12" pos:end="12:13">-&gt;</operator><name pos:start="12:14" pos:end="12:17">path</name></name> <operator pos:start="12:19" pos:end="12:20">==</operator> <name pos:start="12:22" pos:end="12:25">NULL</name></expr>)</condition> <block pos:start="12:28" pos:end="69:14">{<block_content pos:start="13:9" pos:end="69:14">
        <expr_stmt pos:start="13:9" pos:end="13:35"><expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:11">rom</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:17">path</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <call pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:28">g_strdup</name><argument_list pos:start="13:29" pos:end="13:34">(<argument pos:start="13:30" pos:end="13:33"><expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:46"><expr pos:start="14:5" pos:end="14:45"><name pos:start="14:5" pos:end="14:6">fd</name> <operator pos:start="14:8" pos:end="14:8">=</operator> <call pos:start="14:10" pos:end="14:45"><name pos:start="14:10" pos:end="14:13">open</name><argument_list pos:start="14:14" pos:end="14:45">(<argument pos:start="14:15" pos:end="14:23"><expr pos:start="14:15" pos:end="14:23"><name pos:start="14:15" pos:end="14:23"><name pos:start="14:15" pos:end="14:17">rom</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:23">path</name></name></expr></argument>, <argument pos:start="14:26" pos:end="14:44"><expr pos:start="14:26" pos:end="14:44"><name pos:start="14:26" pos:end="14:33">O_RDONLY</name> <operator pos:start="14:35" pos:end="14:35">|</operator> <name pos:start="14:37" pos:end="14:44">O_BINARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="15:5" pos:end="69:14"><if pos:start="15:5" pos:end="69:14">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:10">fd</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><literal type="number" pos:start="15:16" pos:end="15:16">1</literal></expr>)</condition> <block pos:start="15:19" pos:end="69:14">{<block_content pos:start="16:9" pos:end="69:14">
        <expr_stmt pos:start="16:9" pos:end="17:44"><expr pos:start="16:9" pos:end="17:43"><call pos:start="16:9" pos:end="17:43"><name pos:start="16:9" pos:end="16:15">fprintf</name><argument_list pos:start="16:16" pos:end="17:43">(<argument pos:start="16:17" pos:end="16:22"><expr pos:start="16:17" pos:end="16:22"><name pos:start="16:17" pos:end="16:22">stderr</name></expr></argument>, <argument pos:start="16:25" pos:end="16:62"><expr pos:start="16:25" pos:end="16:62"><literal type="string" pos:start="16:25" pos:end="16:62">"Could not open option rom '%s': %s\n"</literal></expr></argument>,
                <argument pos:start="17:17" pos:end="17:25"><expr pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:25"><name pos:start="17:17" pos:end="17:19">rom</name><operator pos:start="17:20" pos:end="17:21">-&gt;</operator><name pos:start="17:22" pos:end="17:25">path</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:42"><expr pos:start="17:28" pos:end="17:42"><call pos:start="17:28" pos:end="17:42"><name pos:start="17:28" pos:end="17:35">strerror</name><argument_list pos:start="17:36" pos:end="17:42">(<argument pos:start="17:37" pos:end="17:41"><expr pos:start="17:37" pos:end="17:41"><name pos:start="17:37" pos:end="17:41">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="18:9" pos:end="18:17">goto <name pos:start="18:14" pos:end="18:16">err</name>;</goto>
        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:11">rom</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:19">fw_dir</name></name>  <operator pos:start="19:22" pos:end="19:22">=</operator> <call pos:start="19:24" pos:end="19:39"><name pos:start="19:24" pos:end="19:31">g_strdup</name><argument_list pos:start="19:32" pos:end="19:39">(<argument pos:start="19:33" pos:end="19:38"><expr pos:start="19:33" pos:end="19:38"><name pos:start="19:33" pos:end="19:38">fw_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:38"><expr pos:start="20:9" pos:end="20:37"><name pos:start="20:9" pos:end="20:20"><name pos:start="20:9" pos:end="20:11">rom</name><operator pos:start="20:12" pos:end="20:13">-&gt;</operator><name pos:start="20:14" pos:end="20:20">fw_file</name></name> <operator pos:start="20:22" pos:end="20:22">=</operator> <call pos:start="20:24" pos:end="20:37"><name pos:start="20:24" pos:end="20:31">g_strdup</name><argument_list pos:start="20:32" pos:end="20:37">(<argument pos:start="20:33" pos:end="20:36"><expr pos:start="20:33" pos:end="20:36"><name pos:start="20:33" pos:end="20:36">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:7">rom</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:13">addr</name></name>     <operator pos:start="21:19" pos:end="21:19">=</operator> <name pos:start="21:21" pos:end="21:24">addr</name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:43"><expr pos:start="22:5" pos:end="22:42"><name pos:start="22:5" pos:end="22:16"><name pos:start="22:5" pos:end="22:7">rom</name><operator pos:start="22:8" pos:end="22:9">-&gt;</operator><name pos:start="22:10" pos:end="22:16">romsize</name></name>  <operator pos:start="22:19" pos:end="22:19">=</operator> <call pos:start="22:21" pos:end="22:42"><name pos:start="22:21" pos:end="22:25">lseek</name><argument_list pos:start="22:26" pos:end="22:42">(<argument pos:start="22:27" pos:end="22:28"><expr pos:start="22:27" pos:end="22:28"><name pos:start="22:27" pos:end="22:28">fd</name></expr></argument>, <argument pos:start="22:31" pos:end="22:31"><expr pos:start="22:31" pos:end="22:31"><literal type="number" pos:start="22:31" pos:end="22:31">0</literal></expr></argument>, <argument pos:start="22:34" pos:end="22:41"><expr pos:start="22:34" pos:end="22:41"><name pos:start="22:34" pos:end="22:41">SEEK_END</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="69:14"><if pos:start="23:5" pos:end="69:14">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:11">rom</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:20">romsize</name></name> <operator pos:start="23:22" pos:end="23:23">==</operator> <operator pos:start="23:25" pos:end="23:25">-</operator><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr>)</condition> <block pos:start="23:29" pos:end="69:14">{<block_content pos:start="24:9" pos:end="69:14">
        <expr_stmt pos:start="24:9" pos:end="25:44"><expr pos:start="24:9" pos:end="25:43"><call pos:start="24:9" pos:end="25:43"><name pos:start="24:9" pos:end="24:15">fprintf</name><argument_list pos:start="24:16" pos:end="25:43">(<argument pos:start="24:17" pos:end="24:22"><expr pos:start="24:17" pos:end="24:22"><name pos:start="24:17" pos:end="24:22">stderr</name></expr></argument>, <argument pos:start="24:25" pos:end="24:63"><expr pos:start="24:25" pos:end="24:63"><literal type="string" pos:start="24:25" pos:end="24:63">"rom: file %-20s: get size error: %s\n"</literal></expr></argument>,
                <argument pos:start="25:17" pos:end="25:25"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:19">rom</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:25">name</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:42"><expr pos:start="25:28" pos:end="25:42"><call pos:start="25:28" pos:end="25:42"><name pos:start="25:28" pos:end="25:35">strerror</name><argument_list pos:start="25:36" pos:end="25:42">(<argument pos:start="25:37" pos:end="25:41"><expr pos:start="25:37" pos:end="25:41"><name pos:start="25:37" pos:end="25:41">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="26:9" pos:end="26:17">goto <name pos:start="26:14" pos:end="26:16">err</name>;</goto>
    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:7">rom</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:17">datasize</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:23">rom</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:32">romsize</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:45"><expr pos:start="28:5" pos:end="28:44"><name pos:start="28:5" pos:end="28:13"><name pos:start="28:5" pos:end="28:7">rom</name><operator pos:start="28:8" pos:end="28:9">-&gt;</operator><name pos:start="28:10" pos:end="28:13">data</name></name>     <operator pos:start="28:19" pos:end="28:19">=</operator> <call pos:start="28:21" pos:end="28:44"><name pos:start="28:21" pos:end="28:29">g_malloc0</name><argument_list pos:start="28:30" pos:end="28:44">(<argument pos:start="28:31" pos:end="28:43"><expr pos:start="28:31" pos:end="28:43"><name pos:start="28:31" pos:end="28:43"><name pos:start="28:31" pos:end="28:33">rom</name><operator pos:start="28:34" pos:end="28:35">-&gt;</operator><name pos:start="28:36" pos:end="28:43">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><call pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:9">lseek</name><argument_list pos:start="29:10" pos:end="29:26">(<argument pos:start="29:11" pos:end="29:12"><expr pos:start="29:11" pos:end="29:12"><name pos:start="29:11" pos:end="29:12">fd</name></expr></argument>, <argument pos:start="29:15" pos:end="29:15"><expr pos:start="29:15" pos:end="29:15"><literal type="number" pos:start="29:15" pos:end="29:15">0</literal></expr></argument>, <argument pos:start="29:18" pos:end="29:25"><expr pos:start="29:18" pos:end="29:25"><name pos:start="29:18" pos:end="29:25">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:44"><expr pos:start="30:5" pos:end="30:43"><name pos:start="30:5" pos:end="30:6">rc</name> <operator pos:start="30:8" pos:end="30:8">=</operator> <call pos:start="30:10" pos:end="30:43"><name pos:start="30:10" pos:end="30:13">read</name><argument_list pos:start="30:14" pos:end="30:43">(<argument pos:start="30:15" pos:end="30:16"><expr pos:start="30:15" pos:end="30:16"><name pos:start="30:15" pos:end="30:16">fd</name></expr></argument>, <argument pos:start="30:19" pos:end="30:27"><expr pos:start="30:19" pos:end="30:27"><name pos:start="30:19" pos:end="30:27"><name pos:start="30:19" pos:end="30:21">rom</name><operator pos:start="30:22" pos:end="30:23">-&gt;</operator><name pos:start="30:24" pos:end="30:27">data</name></name></expr></argument>, <argument pos:start="30:30" pos:end="30:42"><expr pos:start="30:30" pos:end="30:42"><name pos:start="30:30" pos:end="30:42"><name pos:start="30:30" pos:end="30:32">rom</name><operator pos:start="30:33" pos:end="30:34">-&gt;</operator><name pos:start="30:35" pos:end="30:42">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="31:5" pos:end="69:14"><if pos:start="31:5" pos:end="69:14">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:10">rc</name> <operator pos:start="31:12" pos:end="31:13">!=</operator> <name pos:start="31:15" pos:end="31:27"><name pos:start="31:15" pos:end="31:17">rom</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">datasize</name></name></expr>)</condition> <block pos:start="31:30" pos:end="69:14">{<block_content pos:start="32:9" pos:end="69:14">
        <expr_stmt pos:start="32:9" pos:end="33:46"><expr pos:start="32:9" pos:end="33:45"><call pos:start="32:9" pos:end="33:45"><name pos:start="32:9" pos:end="32:15">fprintf</name><argument_list pos:start="32:16" pos:end="33:45">(<argument pos:start="32:17" pos:end="32:22"><expr pos:start="32:17" pos:end="32:22"><name pos:start="32:17" pos:end="32:22">stderr</name></expr></argument>, <argument pos:start="32:25" pos:end="32:77"><expr pos:start="32:25" pos:end="32:77"><literal type="string" pos:start="32:25" pos:end="32:77">"rom: file %-20s: read error: rc=%d (expected %zd)\n"</literal></expr></argument>,
                <argument pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:25"><name pos:start="33:17" pos:end="33:19">rom</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:25">name</name></name></expr></argument>, <argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">rc</name></expr></argument>, <argument pos:start="33:32" pos:end="33:44"><expr pos:start="33:32" pos:end="33:44"><name pos:start="33:32" pos:end="33:44"><name pos:start="33:32" pos:end="33:34">rom</name><operator pos:start="33:35" pos:end="33:36">-&gt;</operator><name pos:start="33:37" pos:end="33:44">datasize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <goto pos:start="34:9" pos:end="34:17">goto <name pos:start="34:14" pos:end="34:16">err</name>;</goto>
    <expr_stmt pos:start="35:5" pos:end="35:14"><expr pos:start="35:5" pos:end="35:13"><call pos:start="35:5" pos:end="35:13"><name pos:start="35:5" pos:end="35:9">close</name><argument_list pos:start="35:10" pos:end="35:13">(<argument pos:start="35:11" pos:end="35:12"><expr pos:start="35:11" pos:end="35:12"><name pos:start="35:11" pos:end="35:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:20"><expr pos:start="36:5" pos:end="36:19"><call pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:14">rom_insert</name><argument_list pos:start="36:15" pos:end="36:19">(<argument pos:start="36:16" pos:end="36:18"><expr pos:start="36:16" pos:end="36:18"><name pos:start="36:16" pos:end="36:18">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="37:5" pos:end="69:14"><if pos:start="37:5" pos:end="69:14">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:11">rom</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:20">fw_file</name></name> <operator pos:start="37:22" pos:end="37:23">&amp;&amp;</operator> <name pos:start="37:25" pos:end="37:30">fw_cfg</name></expr>)</condition> <block pos:start="37:33" pos:end="69:14">{<block_content pos:start="38:9" pos:end="69:14">
        <decl_stmt pos:start="38:9" pos:end="38:29"><decl pos:start="38:9" pos:end="38:28"><type pos:start="38:9" pos:end="38:20"><specifier pos:start="38:9" pos:end="38:13">const</specifier> <name pos:start="38:15" pos:end="38:18">char</name> <modifier pos:start="38:20" pos:end="38:20">*</modifier></type><name pos:start="38:21" pos:end="38:28">basename</name></decl>;</decl_stmt>
        <decl_stmt pos:start="39:9" pos:end="39:48"><decl pos:start="39:9" pos:end="39:47"><type pos:start="39:9" pos:end="39:12"><name pos:start="39:9" pos:end="39:12">char</name></type> <name pos:start="39:14" pos:end="39:47"><name pos:start="39:14" pos:end="39:25">fw_file_name</name><index pos:start="39:26" pos:end="39:47">[<expr pos:start="39:27" pos:end="39:46"><name pos:start="39:27" pos:end="39:46">FW_CFG_MAX_FILE_PATH</name></expr>]</index></name></decl>;</decl_stmt>
        <decl_stmt pos:start="40:9" pos:end="40:19"><decl pos:start="40:9" pos:end="40:18"><type pos:start="40:9" pos:end="40:14"><name pos:start="40:9" pos:end="40:12">void</name> <modifier pos:start="40:14" pos:end="40:14">*</modifier></type><name pos:start="40:15" pos:end="40:18">data</name></decl>;</decl_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:16">basename</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:45"><name pos:start="41:20" pos:end="41:26">strrchr</name><argument_list pos:start="41:27" pos:end="41:45">(<argument pos:start="41:28" pos:end="41:39"><expr pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:30">rom</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:39">fw_file</name></name></expr></argument>, <argument pos:start="41:42" pos:end="41:44"><expr pos:start="41:42" pos:end="41:44"><literal type="char" pos:start="41:42" pos:end="41:44">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="42:9" pos:end="69:14"><if pos:start="42:9" pos:end="44:9">if <condition pos:start="42:12" pos:end="42:21">(<expr pos:start="42:13" pos:end="42:20"><name pos:start="42:13" pos:end="42:20">basename</name></expr>)</condition> <block pos:start="42:23" pos:end="44:9">{<block_content pos:start="43:13" pos:end="43:23">
            <expr_stmt pos:start="43:13" pos:end="43:23"><expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:20">basename</name><operator pos:start="43:21" pos:end="43:22">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="44:11" pos:end="69:14">else <block pos:start="44:16" pos:end="69:14">{<block_content pos:start="45:13" pos:end="69:14">
            <expr_stmt pos:start="45:13" pos:end="45:36"><expr pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:20">basename</name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:35"><name pos:start="45:24" pos:end="45:26">rom</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:35">fw_file</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="46:9" pos:end="47:27"><expr pos:start="46:9" pos:end="47:26"><call pos:start="46:9" pos:end="47:26"><name pos:start="46:9" pos:end="46:16">snprintf</name><argument_list pos:start="46:17" pos:end="47:26">(<argument pos:start="46:18" pos:end="46:29"><expr pos:start="46:18" pos:end="46:29"><name pos:start="46:18" pos:end="46:29">fw_file_name</name></expr></argument>, <argument pos:start="46:32" pos:end="46:51"><expr pos:start="46:32" pos:end="46:51"><sizeof pos:start="46:32" pos:end="46:51">sizeof<argument_list pos:start="46:38" pos:end="46:51">(<argument pos:start="46:39" pos:end="46:50"><expr pos:start="46:39" pos:end="46:50"><name pos:start="46:39" pos:end="46:50">fw_file_name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="46:54" pos:end="46:60"><expr pos:start="46:54" pos:end="46:60"><literal type="string" pos:start="46:54" pos:end="46:60">"%s/%s"</literal></expr></argument>, <argument pos:start="46:63" pos:end="46:73"><expr pos:start="46:63" pos:end="46:73"><name pos:start="46:63" pos:end="46:73"><name pos:start="46:63" pos:end="46:65">rom</name><operator pos:start="46:66" pos:end="46:67">-&gt;</operator><name pos:start="46:68" pos:end="46:73">fw_dir</name></name></expr></argument>,
                 <argument pos:start="47:18" pos:end="47:25"><expr pos:start="47:18" pos:end="47:25"><name pos:start="47:18" pos:end="47:25">basename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="48:9" pos:end="48:68"><expr pos:start="48:9" pos:end="48:67"><call pos:start="48:9" pos:end="48:67"><name pos:start="48:9" pos:end="48:16">snprintf</name><argument_list pos:start="48:17" pos:end="48:67">(<argument pos:start="48:18" pos:end="48:24"><expr pos:start="48:18" pos:end="48:24"><name pos:start="48:18" pos:end="48:24">devpath</name></expr></argument>, <argument pos:start="48:27" pos:end="48:41"><expr pos:start="48:27" pos:end="48:41"><sizeof pos:start="48:27" pos:end="48:41">sizeof<argument_list pos:start="48:33" pos:end="48:41">(<argument pos:start="48:34" pos:end="48:40"><expr pos:start="48:34" pos:end="48:40"><name pos:start="48:34" pos:end="48:40">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="48:44" pos:end="48:52"><expr pos:start="48:44" pos:end="48:52"><literal type="string" pos:start="48:44" pos:end="48:52">"/rom@%s"</literal></expr></argument>, <argument pos:start="48:55" pos:end="48:66"><expr pos:start="48:55" pos:end="48:66"><name pos:start="48:55" pos:end="48:66">fw_file_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="49:9" pos:end="54:5"><if pos:start="49:9" pos:end="51:9">if <condition pos:start="49:12" pos:end="49:74">(<expr pos:start="49:13" pos:end="49:73"><operator pos:start="49:13" pos:end="49:13">(</operator><operator pos:start="49:14" pos:end="49:14">!</operator><name pos:start="49:15" pos:end="49:24">option_rom</name> <operator pos:start="49:26" pos:end="49:27">||</operator> <name pos:start="49:29" pos:end="49:49"><name pos:start="49:29" pos:end="49:30">mc</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:49">option_rom_has_mr</name></name><operator pos:start="49:50" pos:end="49:50">)</operator> <operator pos:start="49:52" pos:end="49:53">&amp;&amp;</operator> <name pos:start="49:55" pos:end="49:73"><name pos:start="49:55" pos:end="49:56">mc</name><operator pos:start="49:57" pos:end="49:58">-&gt;</operator><name pos:start="49:59" pos:end="49:73">rom_file_has_mr</name></name></expr>)</condition> <block pos:start="49:76" pos:end="51:9">{<block_content pos:start="50:13" pos:end="50:60">
            <expr_stmt pos:start="50:13" pos:end="50:60"><expr pos:start="50:13" pos:end="50:59"><name pos:start="50:13" pos:end="50:16">data</name> <operator pos:start="50:18" pos:end="50:18">=</operator> <call pos:start="50:20" pos:end="50:59"><name pos:start="50:20" pos:end="50:29">rom_set_mr</name><argument_list pos:start="50:30" pos:end="50:59">(<argument pos:start="50:31" pos:end="50:33"><expr pos:start="50:31" pos:end="50:33"><name pos:start="50:31" pos:end="50:33">rom</name></expr></argument>, <argument pos:start="50:36" pos:end="50:49"><expr pos:start="50:36" pos:end="50:49"><call pos:start="50:36" pos:end="50:49"><name pos:start="50:36" pos:end="50:41">OBJECT</name><argument_list pos:start="50:42" pos:end="50:49">(<argument pos:start="50:43" pos:end="50:48"><expr pos:start="50:43" pos:end="50:48"><name pos:start="50:43" pos:end="50:48">fw_cfg</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="50:52" pos:end="50:58"><expr pos:start="50:52" pos:end="50:58"><name pos:start="50:52" pos:end="50:58">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="51:11" pos:end="54:5">else <block pos:start="51:16" pos:end="54:5">{<block_content pos:start="52:13" pos:end="53:66">
            <expr_stmt pos:start="52:13" pos:end="52:29"><expr pos:start="52:13" pos:end="52:28"><name pos:start="52:13" pos:end="52:16">data</name> <operator pos:start="52:18" pos:end="52:18">=</operator> <name pos:start="52:20" pos:end="52:28"><name pos:start="52:20" pos:end="52:22">rom</name><operator pos:start="52:23" pos:end="52:24">-&gt;</operator><name pos:start="52:25" pos:end="52:28">data</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="53:9" pos:end="53:66"><expr pos:start="53:9" pos:end="53:65"><call pos:start="53:9" pos:end="53:65"><name pos:start="53:9" pos:end="53:23">fw_cfg_add_file</name><argument_list pos:start="53:24" pos:end="53:65">(<argument pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:30"><name pos:start="53:25" pos:end="53:30">fw_cfg</name></expr></argument>, <argument pos:start="53:33" pos:end="53:44"><expr pos:start="53:33" pos:end="53:44"><name pos:start="53:33" pos:end="53:44">fw_file_name</name></expr></argument>, <argument pos:start="53:47" pos:end="53:50"><expr pos:start="53:47" pos:end="53:50"><name pos:start="53:47" pos:end="53:50">data</name></expr></argument>, <argument pos:start="53:53" pos:end="53:64"><expr pos:start="53:53" pos:end="53:64"><name pos:start="53:53" pos:end="53:64"><name pos:start="53:53" pos:end="53:55">rom</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:64">romsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt> <if_stmt pos:start="54:7" pos:end="69:14"><else pos:start="54:7" pos:end="69:14">else <block pos:start="54:12" pos:end="69:14">{<block_content pos:start="55:9" pos:end="69:14">
        <if_stmt pos:start="55:9" pos:end="69:14"><if pos:start="55:9" pos:end="58:9">if <condition pos:start="55:12" pos:end="55:15">(<expr pos:start="55:13" pos:end="55:14"><name pos:start="55:13" pos:end="55:14">mr</name></expr>)</condition> <block pos:start="55:17" pos:end="58:9">{<block_content pos:start="56:13" pos:end="57:64">
            <expr_stmt pos:start="56:13" pos:end="56:25"><expr pos:start="56:13" pos:end="56:24"><name pos:start="56:13" pos:end="56:19"><name pos:start="56:13" pos:end="56:15">rom</name><operator pos:start="56:16" pos:end="56:17">-&gt;</operator><name pos:start="56:18" pos:end="56:19">mr</name></name> <operator pos:start="56:21" pos:end="56:21">=</operator> <name pos:start="56:23" pos:end="56:24">mr</name></expr>;</expr_stmt>
            <expr_stmt pos:start="57:13" pos:end="57:64"><expr pos:start="57:13" pos:end="57:63"><call pos:start="57:13" pos:end="57:63"><name pos:start="57:13" pos:end="57:20">snprintf</name><argument_list pos:start="57:21" pos:end="57:63">(<argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><name pos:start="57:22" pos:end="57:28">devpath</name></expr></argument>, <argument pos:start="57:31" pos:end="57:45"><expr pos:start="57:31" pos:end="57:45"><sizeof pos:start="57:31" pos:end="57:45">sizeof<argument_list pos:start="57:37" pos:end="57:45">(<argument pos:start="57:38" pos:end="57:44"><expr pos:start="57:38" pos:end="57:44"><name pos:start="57:38" pos:end="57:44">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="57:48" pos:end="57:56"><expr pos:start="57:48" pos:end="57:56"><literal type="string" pos:start="57:48" pos:end="57:56">"/rom@%s"</literal></expr></argument>, <argument pos:start="57:59" pos:end="57:62"><expr pos:start="57:59" pos:end="57:62"><name pos:start="57:59" pos:end="57:62">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else pos:start="58:11" pos:end="69:14">else <block pos:start="58:16" pos:end="69:14">{<block_content pos:start="59:13" pos:end="69:14">
            <expr_stmt pos:start="59:13" pos:end="59:77"><expr pos:start="59:13" pos:end="59:76"><call pos:start="59:13" pos:end="59:76"><name pos:start="59:13" pos:end="59:20">snprintf</name><argument_list pos:start="59:21" pos:end="59:76">(<argument pos:start="59:22" pos:end="59:28"><expr pos:start="59:22" pos:end="59:28"><name pos:start="59:22" pos:end="59:28">devpath</name></expr></argument>, <argument pos:start="59:31" pos:end="59:45"><expr pos:start="59:31" pos:end="59:45"><sizeof pos:start="59:31" pos:end="59:45">sizeof<argument_list pos:start="59:37" pos:end="59:45">(<argument pos:start="59:38" pos:end="59:44"><expr pos:start="59:38" pos:end="59:44"><name pos:start="59:38" pos:end="59:44">devpath</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="59:48" pos:end="59:69"><expr pos:start="59:48" pos:end="59:69"><literal type="string" pos:start="59:48" pos:end="59:54">"/rom@"</literal> <name pos:start="59:56" pos:end="59:69">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="59:72" pos:end="59:75"><expr pos:start="59:72" pos:end="59:75"><name pos:start="59:72" pos:end="59:75">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="60:5" pos:end="60:51"><expr pos:start="60:5" pos:end="60:50"><call pos:start="60:5" pos:end="60:50"><name pos:start="60:5" pos:end="60:24">add_boot_device_path</name><argument_list pos:start="60:25" pos:end="60:50">(<argument pos:start="60:26" pos:end="60:34"><expr pos:start="60:26" pos:end="60:34"><name pos:start="60:26" pos:end="60:34">bootindex</name></expr></argument>, <argument pos:start="60:37" pos:end="60:40"><expr pos:start="60:37" pos:end="60:40"><name pos:start="60:37" pos:end="60:40">NULL</name></expr></argument>, <argument pos:start="60:43" pos:end="60:49"><expr pos:start="60:43" pos:end="60:49"><name pos:start="60:43" pos:end="60:49">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>
<label pos:start="62:1" pos:end="62:4"><name pos:start="62:1" pos:end="62:3">err</name>:</label>
    <if_stmt pos:start="63:5" pos:end="64:18"><if pos:start="63:5" pos:end="64:18">if <condition pos:start="63:8" pos:end="63:17">(<expr pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:10">fd</name> <operator pos:start="63:12" pos:end="63:13">!=</operator> <operator pos:start="63:15" pos:end="63:15">-</operator><literal type="number" pos:start="63:16" pos:end="63:16">1</literal></expr>)</condition><block type="pseudo" pos:start="64:9" pos:end="64:18"><block_content pos:start="64:9" pos:end="64:18">
        <expr_stmt pos:start="64:9" pos:end="64:18"><expr pos:start="64:9" pos:end="64:17"><call pos:start="64:9" pos:end="64:17"><name pos:start="64:9" pos:end="64:13">close</name><argument_list pos:start="64:14" pos:end="64:17">(<argument pos:start="64:15" pos:end="64:16"><expr pos:start="64:15" pos:end="64:16"><name pos:start="64:15" pos:end="64:16">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="65:5" pos:end="65:22"><expr pos:start="65:5" pos:end="65:21"><call pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:10">g_free</name><argument_list pos:start="65:11" pos:end="65:21">(<argument pos:start="65:12" pos:end="65:20"><expr pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:20"><name pos:start="65:12" pos:end="65:14">rom</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:20">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="66:5" pos:end="66:22"><expr pos:start="66:5" pos:end="66:21"><call pos:start="66:5" pos:end="66:21"><name pos:start="66:5" pos:end="66:10">g_free</name><argument_list pos:start="66:11" pos:end="66:21">(<argument pos:start="66:12" pos:end="66:20"><expr pos:start="66:12" pos:end="66:20"><name pos:start="66:12" pos:end="66:20"><name pos:start="66:12" pos:end="66:14">rom</name><operator pos:start="66:15" pos:end="66:16">-&gt;</operator><name pos:start="66:17" pos:end="66:20">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="67:5" pos:end="67:22"><expr pos:start="67:5" pos:end="67:21"><call pos:start="67:5" pos:end="67:21"><name pos:start="67:5" pos:end="67:10">g_free</name><argument_list pos:start="67:11" pos:end="67:21">(<argument pos:start="67:12" pos:end="67:20"><expr pos:start="67:12" pos:end="67:20"><name pos:start="67:12" pos:end="67:20"><name pos:start="67:12" pos:end="67:14">rom</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:20">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="68:5" pos:end="68:16"><expr pos:start="68:5" pos:end="68:15"><call pos:start="68:5" pos:end="68:15"><name pos:start="68:5" pos:end="68:10">g_free</name><argument_list pos:start="68:11" pos:end="68:15">(<argument pos:start="68:12" pos:end="68:14"><expr pos:start="68:12" pos:end="68:14"><name pos:start="68:12" pos:end="68:14">rom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="69:5" pos:end="69:14">return <expr pos:start="69:12" pos:end="69:13"><operator pos:start="69:12" pos:end="69:12">-</operator><literal type="number" pos:start="69:13" pos:end="69:13">1</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
