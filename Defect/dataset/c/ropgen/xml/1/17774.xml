<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17774.c" pos:tabs="8"><function pos:start="1:1" pos:end="147:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">kmvc_decode_intra_8x8</name><parameter_list pos:start="1:34" pos:end="1:87">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:45">KmvcContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type> <name pos:start="1:49" pos:end="1:51">ctx</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:79"><decl pos:start="1:75" pos:end="1:79"><type pos:start="1:75" pos:end="1:79"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:79">w</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:86"><decl pos:start="1:82" pos:end="1:86"><type pos:start="1:82" pos:end="1:86"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:86">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="147:1">{<block_content pos:start="5:5" pos:end="145:9">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">BitBuf</name></type> <name pos:start="5:12" pos:end="5:13">bb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">bx</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">by</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">l0x</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">l1x</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">l0y</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">l1y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">mx</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">my</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:21">kmvc_init_getbits</name><argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">bb</name></expr></argument>, <argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="23:5" pos:end="145:9">for <control pos:start="23:9" pos:end="23:33">(<init pos:start="23:10" pos:end="23:16"><expr pos:start="23:10" pos:end="23:15"><name pos:start="23:10" pos:end="23:11">by</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>;</init> <condition pos:start="23:18" pos:end="23:24"><expr pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:19">by</name> <operator pos:start="23:21" pos:end="23:21">&lt;</operator> <name pos:start="23:23" pos:end="23:23">h</name></expr>;</condition> <incr pos:start="23:26" pos:end="23:32"><expr pos:start="23:26" pos:end="23:32"><name pos:start="23:26" pos:end="23:27">by</name> <operator pos:start="23:29" pos:end="23:30">+=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">8</literal></expr></incr>)</control><block type="pseudo" pos:start="25:9" pos:end="145:9"><block_content pos:start="25:9" pos:end="145:9">

        <for pos:start="25:9" pos:end="145:9">for <control pos:start="25:13" pos:end="25:37">(<init pos:start="25:14" pos:end="25:20"><expr pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:15">bx</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>;</init> <condition pos:start="25:22" pos:end="25:28"><expr pos:start="25:22" pos:end="25:27"><name pos:start="25:22" pos:end="25:23">bx</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:27">w</name></expr>;</condition> <incr pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:31">bx</name> <operator pos:start="25:33" pos:end="25:34">+=</operator> <literal type="number" pos:start="25:36" pos:end="25:36">8</literal></expr></incr>)</control> <block pos:start="25:39" pos:end="145:9">{<block_content pos:start="27:13" pos:end="143:13">

            <expr_stmt pos:start="27:13" pos:end="27:38"><expr pos:start="27:13" pos:end="27:37"><call pos:start="27:13" pos:end="27:37"><name pos:start="27:13" pos:end="27:23">kmvc_getbit</name><argument_list pos:start="27:24" pos:end="27:37">(<argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">bb</name></expr></argument>, <argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">src</name></expr></argument>, <argument pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:36">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="143:13"><if pos:start="29:13" pos:end="37:13">if <condition pos:start="29:16" pos:end="29:21">(<expr pos:start="29:17" pos:end="29:20"><operator pos:start="29:17" pos:end="29:17">!</operator><name pos:start="29:18" pos:end="29:20">res</name></expr>)</condition> <block pos:start="29:23" pos:end="37:13">{<block_content pos:start="31:17" pos:end="35:71">         <comment type="line" pos:start="29:33" pos:end="29:55">// fill whole 8x8 block</comment>

                <expr_stmt pos:start="31:17" pos:end="31:29"><expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:19">val</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <operator pos:start="31:23" pos:end="31:23">*</operator><name pos:start="31:24" pos:end="31:26">src</name><operator pos:start="31:27" pos:end="31:28">++</operator></expr>;</expr_stmt>

                <for pos:start="33:17" pos:end="35:71">for <control pos:start="33:21" pos:end="33:40">(<init pos:start="33:22" pos:end="33:27"><expr pos:start="33:22" pos:end="33:26"><name pos:start="33:22" pos:end="33:22">i</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <literal type="number" pos:start="33:26" pos:end="33:26">0</literal></expr>;</init> <condition pos:start="33:29" pos:end="33:35"><expr pos:start="33:29" pos:end="33:34"><name pos:start="33:29" pos:end="33:29">i</name> <operator pos:start="33:31" pos:end="33:31">&lt;</operator> <literal type="number" pos:start="33:33" pos:end="33:34">64</literal></expr>;</condition> <incr pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:37">i</name><operator pos:start="33:38" pos:end="33:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:21" pos:end="35:71"><block_content pos:start="35:21" pos:end="35:71">

                    <expr_stmt pos:start="35:21" pos:end="35:71"><expr pos:start="35:21" pos:end="35:70"><call pos:start="35:21" pos:end="35:64"><name pos:start="35:21" pos:end="35:23">BLK</name><argument_list pos:start="35:24" pos:end="35:64">(<argument pos:start="35:25" pos:end="35:32"><expr pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:32"><name pos:start="35:25" pos:end="35:27">ctx</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:32">cur</name></name></expr></argument>, <argument pos:start="35:35" pos:end="35:48"><expr pos:start="35:35" pos:end="35:48"><name pos:start="35:35" pos:end="35:36">bx</name> <operator pos:start="35:38" pos:end="35:38">+</operator> <operator pos:start="35:40" pos:end="35:40">(</operator><name pos:start="35:41" pos:end="35:41">i</name> <operator pos:start="35:43" pos:end="35:43">&amp;</operator> <literal type="number" pos:start="35:45" pos:end="35:47">0x7</literal><operator pos:start="35:48" pos:end="35:48">)</operator></expr></argument>, <argument pos:start="35:51" pos:end="35:63"><expr pos:start="35:51" pos:end="35:63"><name pos:start="35:51" pos:end="35:52">by</name> <operator pos:start="35:54" pos:end="35:54">+</operator> <operator pos:start="35:56" pos:end="35:56">(</operator><name pos:start="35:57" pos:end="35:57">i</name> <operator pos:start="35:59" pos:end="35:60">&gt;&gt;</operator> <literal type="number" pos:start="35:62" pos:end="35:62">3</literal><operator pos:start="35:63" pos:end="35:63">)</operator></expr></argument>)</argument_list></call> <operator pos:start="35:66" pos:end="35:66">=</operator> <name pos:start="35:68" pos:end="35:70">val</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="37:15" pos:end="143:13">else <block pos:start="37:20" pos:end="143:13">{<block_content pos:start="39:17" pos:end="141:17">            <comment type="line" pos:start="37:33" pos:end="37:60">// handle four 4x4 subblocks</comment>

                <for pos:start="39:17" pos:end="141:17">for <control pos:start="39:21" pos:end="39:39">(<init pos:start="39:22" pos:end="39:27"><expr pos:start="39:22" pos:end="39:26"><name pos:start="39:22" pos:end="39:22">i</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr>;</init> <condition pos:start="39:29" pos:end="39:34"><expr pos:start="39:29" pos:end="39:33"><name pos:start="39:29" pos:end="39:29">i</name> <operator pos:start="39:31" pos:end="39:31">&lt;</operator> <literal type="number" pos:start="39:33" pos:end="39:33">4</literal></expr>;</condition> <incr pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:36">i</name><operator pos:start="39:37" pos:end="39:38">++</operator></expr></incr>)</control> <block pos:start="39:41" pos:end="141:17">{<block_content pos:start="41:21" pos:end="139:21">

                    <expr_stmt pos:start="41:21" pos:end="41:43"><expr pos:start="41:21" pos:end="41:42"><name pos:start="41:21" pos:end="41:23">l0x</name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:28">bx</name> <operator pos:start="41:30" pos:end="41:30">+</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><name pos:start="41:33" pos:end="41:33">i</name> <operator pos:start="41:35" pos:end="41:35">&amp;</operator> <literal type="number" pos:start="41:37" pos:end="41:37">1</literal><operator pos:start="41:38" pos:end="41:38">)</operator> <operator pos:start="41:40" pos:end="41:40">*</operator> <literal type="number" pos:start="41:42" pos:end="41:42">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:43"><expr pos:start="43:21" pos:end="43:42"><name pos:start="43:21" pos:end="43:23">l0y</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <name pos:start="43:27" pos:end="43:28">by</name> <operator pos:start="43:30" pos:end="43:30">+</operator> <operator pos:start="43:32" pos:end="43:32">(</operator><name pos:start="43:33" pos:end="43:33">i</name> <operator pos:start="43:35" pos:end="43:35">&amp;</operator> <literal type="number" pos:start="43:37" pos:end="43:37">2</literal><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:40">*</operator> <literal type="number" pos:start="43:42" pos:end="43:42">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:46"><expr pos:start="45:21" pos:end="45:45"><call pos:start="45:21" pos:end="45:45"><name pos:start="45:21" pos:end="45:31">kmvc_getbit</name><argument_list pos:start="45:32" pos:end="45:45">(<argument pos:start="45:33" pos:end="45:34"><expr pos:start="45:33" pos:end="45:34"><name pos:start="45:33" pos:end="45:34">bb</name></expr></argument>, <argument pos:start="45:37" pos:end="45:39"><expr pos:start="45:37" pos:end="45:39"><name pos:start="45:37" pos:end="45:39">src</name></expr></argument>, <argument pos:start="45:42" pos:end="45:44"><expr pos:start="45:42" pos:end="45:44"><name pos:start="45:42" pos:end="45:44">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="47:21" pos:end="139:21"><if pos:start="47:21" pos:end="75:21">if <condition pos:start="47:24" pos:end="47:29">(<expr pos:start="47:25" pos:end="47:28"><operator pos:start="47:25" pos:end="47:25">!</operator><name pos:start="47:26" pos:end="47:28">res</name></expr>)</condition> <block pos:start="47:31" pos:end="75:21">{<block_content pos:start="49:25" pos:end="73:25">

                        <expr_stmt pos:start="49:25" pos:end="49:50"><expr pos:start="49:25" pos:end="49:49"><call pos:start="49:25" pos:end="49:49"><name pos:start="49:25" pos:end="49:35">kmvc_getbit</name><argument_list pos:start="49:36" pos:end="49:49">(<argument pos:start="49:37" pos:end="49:38"><expr pos:start="49:37" pos:end="49:38"><name pos:start="49:37" pos:end="49:38">bb</name></expr></argument>, <argument pos:start="49:41" pos:end="49:43"><expr pos:start="49:41" pos:end="49:43"><name pos:start="49:41" pos:end="49:43">src</name></expr></argument>, <argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:48">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="51:25" pos:end="73:25"><if pos:start="51:25" pos:end="59:25">if <condition pos:start="51:28" pos:end="51:33">(<expr pos:start="51:29" pos:end="51:32"><operator pos:start="51:29" pos:end="51:29">!</operator><name pos:start="51:30" pos:end="51:32">res</name></expr>)</condition> <block pos:start="51:35" pos:end="59:25">{<block_content pos:start="53:29" pos:end="57:83">     <comment type="line" pos:start="51:41" pos:end="51:63">// fill whole 4x4 block</comment>

                            <expr_stmt pos:start="53:29" pos:end="53:41"><expr pos:start="53:29" pos:end="53:40"><name pos:start="53:29" pos:end="53:31">val</name> <operator pos:start="53:33" pos:end="53:33">=</operator> <operator pos:start="53:35" pos:end="53:35">*</operator><name pos:start="53:36" pos:end="53:38">src</name><operator pos:start="53:39" pos:end="53:40">++</operator></expr>;</expr_stmt>

                            <for pos:start="55:29" pos:end="57:83">for <control pos:start="55:33" pos:end="55:52">(<init pos:start="55:34" pos:end="55:39"><expr pos:start="55:34" pos:end="55:38"><name pos:start="55:34" pos:end="55:34">j</name> <operator pos:start="55:36" pos:end="55:36">=</operator> <literal type="number" pos:start="55:38" pos:end="55:38">0</literal></expr>;</init> <condition pos:start="55:41" pos:end="55:47"><expr pos:start="55:41" pos:end="55:46"><name pos:start="55:41" pos:end="55:41">j</name> <operator pos:start="55:43" pos:end="55:43">&lt;</operator> <literal type="number" pos:start="55:45" pos:end="55:46">16</literal></expr>;</condition> <incr pos:start="55:49" pos:end="55:51"><expr pos:start="55:49" pos:end="55:51"><name pos:start="55:49" pos:end="55:49">j</name><operator pos:start="55:50" pos:end="55:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:33" pos:end="57:83"><block_content pos:start="57:33" pos:end="57:83">

                                <expr_stmt pos:start="57:33" pos:end="57:83"><expr pos:start="57:33" pos:end="57:82"><call pos:start="57:33" pos:end="57:76"><name pos:start="57:33" pos:end="57:35">BLK</name><argument_list pos:start="57:36" pos:end="57:76">(<argument pos:start="57:37" pos:end="57:44"><expr pos:start="57:37" pos:end="57:44"><name pos:start="57:37" pos:end="57:44"><name pos:start="57:37" pos:end="57:39">ctx</name><operator pos:start="57:40" pos:end="57:41">-&gt;</operator><name pos:start="57:42" pos:end="57:44">cur</name></name></expr></argument>, <argument pos:start="57:47" pos:end="57:59"><expr pos:start="57:47" pos:end="57:59"><name pos:start="57:47" pos:end="57:49">l0x</name> <operator pos:start="57:51" pos:end="57:51">+</operator> <operator pos:start="57:53" pos:end="57:53">(</operator><name pos:start="57:54" pos:end="57:54">j</name> <operator pos:start="57:56" pos:end="57:56">&amp;</operator> <literal type="number" pos:start="57:58" pos:end="57:58">3</literal><operator pos:start="57:59" pos:end="57:59">)</operator></expr></argument>, <argument pos:start="57:62" pos:end="57:75"><expr pos:start="57:62" pos:end="57:75"><name pos:start="57:62" pos:end="57:64">l0y</name> <operator pos:start="57:66" pos:end="57:66">+</operator> <operator pos:start="57:68" pos:end="57:68">(</operator><name pos:start="57:69" pos:end="57:69">j</name> <operator pos:start="57:71" pos:end="57:72">&gt;&gt;</operator> <literal type="number" pos:start="57:74" pos:end="57:74">2</literal><operator pos:start="57:75" pos:end="57:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="57:78" pos:end="57:78">=</operator> <name pos:start="57:80" pos:end="57:82">val</name></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="59:27" pos:end="73:25">else <block pos:start="59:32" pos:end="73:25">{<block_content pos:start="61:29" pos:end="71:91">        <comment type="line" pos:start="59:41" pos:end="59:80">// copy block from already decoded place</comment>

                            <expr_stmt pos:start="61:29" pos:end="61:41"><expr pos:start="61:29" pos:end="61:40"><name pos:start="61:29" pos:end="61:31">val</name> <operator pos:start="61:33" pos:end="61:33">=</operator> <operator pos:start="61:35" pos:end="61:35">*</operator><name pos:start="61:36" pos:end="61:38">src</name><operator pos:start="61:39" pos:end="61:40">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="63:29" pos:end="63:43"><expr pos:start="63:29" pos:end="63:42"><name pos:start="63:29" pos:end="63:30">mx</name> <operator pos:start="63:32" pos:end="63:32">=</operator> <name pos:start="63:34" pos:end="63:36">val</name> <operator pos:start="63:38" pos:end="63:38">&amp;</operator> <literal type="number" pos:start="63:40" pos:end="63:42">0xF</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="65:29" pos:end="65:42"><expr pos:start="65:29" pos:end="65:41"><name pos:start="65:29" pos:end="65:30">my</name> <operator pos:start="65:32" pos:end="65:32">=</operator> <name pos:start="65:34" pos:end="65:36">val</name> <operator pos:start="65:38" pos:end="65:39">&gt;&gt;</operator> <literal type="number" pos:start="65:41" pos:end="65:41">4</literal></expr>;</expr_stmt>

                            <for pos:start="67:29" pos:end="71:91">for <control pos:start="67:33" pos:end="67:52">(<init pos:start="67:34" pos:end="67:39"><expr pos:start="67:34" pos:end="67:38"><name pos:start="67:34" pos:end="67:34">j</name> <operator pos:start="67:36" pos:end="67:36">=</operator> <literal type="number" pos:start="67:38" pos:end="67:38">0</literal></expr>;</init> <condition pos:start="67:41" pos:end="67:47"><expr pos:start="67:41" pos:end="67:46"><name pos:start="67:41" pos:end="67:41">j</name> <operator pos:start="67:43" pos:end="67:43">&lt;</operator> <literal type="number" pos:start="67:45" pos:end="67:46">16</literal></expr>;</condition> <incr pos:start="67:49" pos:end="67:51"><expr pos:start="67:49" pos:end="67:51"><name pos:start="67:49" pos:end="67:49">j</name><operator pos:start="67:50" pos:end="67:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:33" pos:end="71:91"><block_content pos:start="69:33" pos:end="71:91">

                                <expr_stmt pos:start="69:33" pos:end="71:91"><expr pos:start="69:33" pos:end="71:90"><call pos:start="69:33" pos:end="69:76"><name pos:start="69:33" pos:end="69:35">BLK</name><argument_list pos:start="69:36" pos:end="69:76">(<argument pos:start="69:37" pos:end="69:44"><expr pos:start="69:37" pos:end="69:44"><name pos:start="69:37" pos:end="69:44"><name pos:start="69:37" pos:end="69:39">ctx</name><operator pos:start="69:40" pos:end="69:41">-&gt;</operator><name pos:start="69:42" pos:end="69:44">cur</name></name></expr></argument>, <argument pos:start="69:47" pos:end="69:59"><expr pos:start="69:47" pos:end="69:59"><name pos:start="69:47" pos:end="69:49">l0x</name> <operator pos:start="69:51" pos:end="69:51">+</operator> <operator pos:start="69:53" pos:end="69:53">(</operator><name pos:start="69:54" pos:end="69:54">j</name> <operator pos:start="69:56" pos:end="69:56">&amp;</operator> <literal type="number" pos:start="69:58" pos:end="69:58">3</literal><operator pos:start="69:59" pos:end="69:59">)</operator></expr></argument>, <argument pos:start="69:62" pos:end="69:75"><expr pos:start="69:62" pos:end="69:75"><name pos:start="69:62" pos:end="69:64">l0y</name> <operator pos:start="69:66" pos:end="69:66">+</operator> <operator pos:start="69:68" pos:end="69:68">(</operator><name pos:start="69:69" pos:end="69:69">j</name> <operator pos:start="69:71" pos:end="69:72">&gt;&gt;</operator> <literal type="number" pos:start="69:74" pos:end="69:74">2</literal><operator pos:start="69:75" pos:end="69:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="69:78" pos:end="69:78">=</operator>

                                    <call pos:start="71:37" pos:end="71:90"><name pos:start="71:37" pos:end="71:39">BLK</name><argument_list pos:start="71:40" pos:end="71:90">(<argument pos:start="71:41" pos:end="71:48"><expr pos:start="71:41" pos:end="71:48"><name pos:start="71:41" pos:end="71:48"><name pos:start="71:41" pos:end="71:43">ctx</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">cur</name></name></expr></argument>, <argument pos:start="71:51" pos:end="71:68"><expr pos:start="71:51" pos:end="71:68"><name pos:start="71:51" pos:end="71:53">l0x</name> <operator pos:start="71:55" pos:end="71:55">+</operator> <operator pos:start="71:57" pos:end="71:57">(</operator><name pos:start="71:58" pos:end="71:58">j</name> <operator pos:start="71:60" pos:end="71:60">&amp;</operator> <literal type="number" pos:start="71:62" pos:end="71:62">3</literal><operator pos:start="71:63" pos:end="71:63">)</operator> <operator pos:start="71:65" pos:end="71:65">-</operator> <name pos:start="71:67" pos:end="71:68">mx</name></expr></argument>, <argument pos:start="71:71" pos:end="71:89"><expr pos:start="71:71" pos:end="71:89"><name pos:start="71:71" pos:end="71:73">l0y</name> <operator pos:start="71:75" pos:end="71:75">+</operator> <operator pos:start="71:77" pos:end="71:77">(</operator><name pos:start="71:78" pos:end="71:78">j</name> <operator pos:start="71:80" pos:end="71:81">&gt;&gt;</operator> <literal type="number" pos:start="71:83" pos:end="71:83">2</literal><operator pos:start="71:84" pos:end="71:84">)</operator> <operator pos:start="71:86" pos:end="71:86">-</operator> <name pos:start="71:88" pos:end="71:89">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="75:23" pos:end="139:21">else <block pos:start="75:28" pos:end="139:21">{<block_content pos:start="77:25" pos:end="137:25">    <comment type="line" pos:start="75:33" pos:end="75:64">// descend to 2x2 sub-sub-blocks</comment>

                        <for pos:start="77:25" pos:end="137:25">for <control pos:start="77:29" pos:end="77:47">(<init pos:start="77:30" pos:end="77:35"><expr pos:start="77:30" pos:end="77:34"><name pos:start="77:30" pos:end="77:30">j</name> <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>;</init> <condition pos:start="77:37" pos:end="77:42"><expr pos:start="77:37" pos:end="77:41"><name pos:start="77:37" pos:end="77:37">j</name> <operator pos:start="77:39" pos:end="77:39">&lt;</operator> <literal type="number" pos:start="77:41" pos:end="77:41">4</literal></expr>;</condition> <incr pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:44">j</name><operator pos:start="77:45" pos:end="77:46">++</operator></expr></incr>)</control> <block pos:start="77:49" pos:end="137:25">{<block_content pos:start="79:29" pos:end="135:29">

                            <expr_stmt pos:start="79:29" pos:end="79:52"><expr pos:start="79:29" pos:end="79:51"><name pos:start="79:29" pos:end="79:31">l1x</name> <operator pos:start="79:33" pos:end="79:33">=</operator> <name pos:start="79:35" pos:end="79:37">l0x</name> <operator pos:start="79:39" pos:end="79:39">+</operator> <operator pos:start="79:41" pos:end="79:41">(</operator><name pos:start="79:42" pos:end="79:42">j</name> <operator pos:start="79:44" pos:end="79:44">&amp;</operator> <literal type="number" pos:start="79:46" pos:end="79:46">1</literal><operator pos:start="79:47" pos:end="79:47">)</operator> <operator pos:start="79:49" pos:end="79:49">*</operator> <literal type="number" pos:start="79:51" pos:end="79:51">2</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="81:29" pos:end="81:48"><expr pos:start="81:29" pos:end="81:47"><name pos:start="81:29" pos:end="81:31">l1y</name> <operator pos:start="81:33" pos:end="81:33">=</operator> <name pos:start="81:35" pos:end="81:37">l0y</name> <operator pos:start="81:39" pos:end="81:39">+</operator> <operator pos:start="81:41" pos:end="81:41">(</operator><name pos:start="81:42" pos:end="81:42">j</name> <operator pos:start="81:44" pos:end="81:44">&amp;</operator> <literal type="number" pos:start="81:46" pos:end="81:46">2</literal><operator pos:start="81:47" pos:end="81:47">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="83:29" pos:end="83:54"><expr pos:start="83:29" pos:end="83:53"><call pos:start="83:29" pos:end="83:53"><name pos:start="83:29" pos:end="83:39">kmvc_getbit</name><argument_list pos:start="83:40" pos:end="83:53">(<argument pos:start="83:41" pos:end="83:42"><expr pos:start="83:41" pos:end="83:42"><name pos:start="83:41" pos:end="83:42">bb</name></expr></argument>, <argument pos:start="83:45" pos:end="83:47"><expr pos:start="83:45" pos:end="83:47"><name pos:start="83:45" pos:end="83:47">src</name></expr></argument>, <argument pos:start="83:50" pos:end="83:52"><expr pos:start="83:50" pos:end="83:52"><name pos:start="83:50" pos:end="83:52">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="85:29" pos:end="135:29"><if pos:start="85:29" pos:end="125:29">if <condition pos:start="85:32" pos:end="85:37">(<expr pos:start="85:33" pos:end="85:36"><operator pos:start="85:33" pos:end="85:33">!</operator><name pos:start="85:34" pos:end="85:36">res</name></expr>)</condition> <block pos:start="85:39" pos:end="125:29">{<block_content pos:start="87:33" pos:end="123:33">

                                <expr_stmt pos:start="87:33" pos:end="87:58"><expr pos:start="87:33" pos:end="87:57"><call pos:start="87:33" pos:end="87:57"><name pos:start="87:33" pos:end="87:43">kmvc_getbit</name><argument_list pos:start="87:44" pos:end="87:57">(<argument pos:start="87:45" pos:end="87:46"><expr pos:start="87:45" pos:end="87:46"><name pos:start="87:45" pos:end="87:46">bb</name></expr></argument>, <argument pos:start="87:49" pos:end="87:51"><expr pos:start="87:49" pos:end="87:51"><name pos:start="87:49" pos:end="87:51">src</name></expr></argument>, <argument pos:start="87:54" pos:end="87:56"><expr pos:start="87:54" pos:end="87:56"><name pos:start="87:54" pos:end="87:56">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="89:33" pos:end="123:33"><if pos:start="89:33" pos:end="101:33">if <condition pos:start="89:36" pos:end="89:41">(<expr pos:start="89:37" pos:end="89:40"><operator pos:start="89:37" pos:end="89:37">!</operator><name pos:start="89:38" pos:end="89:40">res</name></expr>)</condition> <block pos:start="89:43" pos:end="101:33">{<block_content pos:start="91:37" pos:end="99:74">     <comment type="line" pos:start="89:49" pos:end="89:71">// fill whole 2x2 block</comment>

                                    <expr_stmt pos:start="91:37" pos:end="91:49"><expr pos:start="91:37" pos:end="91:48"><name pos:start="91:37" pos:end="91:39">val</name> <operator pos:start="91:41" pos:end="91:41">=</operator> <operator pos:start="91:43" pos:end="91:43">*</operator><name pos:start="91:44" pos:end="91:46">src</name><operator pos:start="91:47" pos:end="91:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="93:37" pos:end="93:66"><expr pos:start="93:37" pos:end="93:65"><call pos:start="93:37" pos:end="93:59"><name pos:start="93:37" pos:end="93:39">BLK</name><argument_list pos:start="93:40" pos:end="93:59">(<argument pos:start="93:41" pos:end="93:48"><expr pos:start="93:41" pos:end="93:48"><name pos:start="93:41" pos:end="93:48"><name pos:start="93:41" pos:end="93:43">ctx</name><operator pos:start="93:44" pos:end="93:45">-&gt;</operator><name pos:start="93:46" pos:end="93:48">cur</name></name></expr></argument>, <argument pos:start="93:51" pos:end="93:53"><expr pos:start="93:51" pos:end="93:53"><name pos:start="93:51" pos:end="93:53">l1x</name></expr></argument>, <argument pos:start="93:56" pos:end="93:58"><expr pos:start="93:56" pos:end="93:58"><name pos:start="93:56" pos:end="93:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="93:61" pos:end="93:61">=</operator> <name pos:start="93:63" pos:end="93:65">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="95:37" pos:end="95:70"><expr pos:start="95:37" pos:end="95:69"><call pos:start="95:37" pos:end="95:63"><name pos:start="95:37" pos:end="95:39">BLK</name><argument_list pos:start="95:40" pos:end="95:63">(<argument pos:start="95:41" pos:end="95:48"><expr pos:start="95:41" pos:end="95:48"><name pos:start="95:41" pos:end="95:48"><name pos:start="95:41" pos:end="95:43">ctx</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:48">cur</name></name></expr></argument>, <argument pos:start="95:51" pos:end="95:57"><expr pos:start="95:51" pos:end="95:57"><name pos:start="95:51" pos:end="95:53">l1x</name> <operator pos:start="95:55" pos:end="95:55">+</operator> <literal type="number" pos:start="95:57" pos:end="95:57">1</literal></expr></argument>, <argument pos:start="95:60" pos:end="95:62"><expr pos:start="95:60" pos:end="95:62"><name pos:start="95:60" pos:end="95:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="95:65" pos:end="95:65">=</operator> <name pos:start="95:67" pos:end="95:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="97:37" pos:end="97:70"><expr pos:start="97:37" pos:end="97:69"><call pos:start="97:37" pos:end="97:63"><name pos:start="97:37" pos:end="97:39">BLK</name><argument_list pos:start="97:40" pos:end="97:63">(<argument pos:start="97:41" pos:end="97:48"><expr pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:43">ctx</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:48">cur</name></name></expr></argument>, <argument pos:start="97:51" pos:end="97:53"><expr pos:start="97:51" pos:end="97:53"><name pos:start="97:51" pos:end="97:53">l1x</name></expr></argument>, <argument pos:start="97:56" pos:end="97:62"><expr pos:start="97:56" pos:end="97:62"><name pos:start="97:56" pos:end="97:58">l1y</name> <operator pos:start="97:60" pos:end="97:60">+</operator> <literal type="number" pos:start="97:62" pos:end="97:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="97:65" pos:end="97:65">=</operator> <name pos:start="97:67" pos:end="97:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="99:37" pos:end="99:74"><expr pos:start="99:37" pos:end="99:73"><call pos:start="99:37" pos:end="99:67"><name pos:start="99:37" pos:end="99:39">BLK</name><argument_list pos:start="99:40" pos:end="99:67">(<argument pos:start="99:41" pos:end="99:48"><expr pos:start="99:41" pos:end="99:48"><name pos:start="99:41" pos:end="99:48"><name pos:start="99:41" pos:end="99:43">ctx</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:48">cur</name></name></expr></argument>, <argument pos:start="99:51" pos:end="99:57"><expr pos:start="99:51" pos:end="99:57"><name pos:start="99:51" pos:end="99:53">l1x</name> <operator pos:start="99:55" pos:end="99:55">+</operator> <literal type="number" pos:start="99:57" pos:end="99:57">1</literal></expr></argument>, <argument pos:start="99:60" pos:end="99:66"><expr pos:start="99:60" pos:end="99:66"><name pos:start="99:60" pos:end="99:62">l1y</name> <operator pos:start="99:64" pos:end="99:64">+</operator> <literal type="number" pos:start="99:66" pos:end="99:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="99:69" pos:end="99:69">=</operator> <name pos:start="99:71" pos:end="99:73">val</name></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="101:35" pos:end="123:33">else <block pos:start="101:40" pos:end="123:33">{<block_content pos:start="103:37" pos:end="121:82">        <comment type="line" pos:start="101:49" pos:end="101:88">// copy block from already decoded place</comment>

                                    <expr_stmt pos:start="103:37" pos:end="103:49"><expr pos:start="103:37" pos:end="103:48"><name pos:start="103:37" pos:end="103:39">val</name> <operator pos:start="103:41" pos:end="103:41">=</operator> <operator pos:start="103:43" pos:end="103:43">*</operator><name pos:start="103:44" pos:end="103:46">src</name><operator pos:start="103:47" pos:end="103:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="105:37" pos:end="105:51"><expr pos:start="105:37" pos:end="105:50"><name pos:start="105:37" pos:end="105:38">mx</name> <operator pos:start="105:40" pos:end="105:40">=</operator> <name pos:start="105:42" pos:end="105:44">val</name> <operator pos:start="105:46" pos:end="105:46">&amp;</operator> <literal type="number" pos:start="105:48" pos:end="105:50">0xF</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="107:37" pos:end="107:50"><expr pos:start="107:37" pos:end="107:49"><name pos:start="107:37" pos:end="107:38">my</name> <operator pos:start="107:40" pos:end="107:40">=</operator> <name pos:start="107:42" pos:end="107:44">val</name> <operator pos:start="107:46" pos:end="107:47">&gt;&gt;</operator> <literal type="number" pos:start="107:49" pos:end="107:49">4</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="109:37" pos:end="109:96"><expr pos:start="109:37" pos:end="109:95"><call pos:start="109:37" pos:end="109:59"><name pos:start="109:37" pos:end="109:39">BLK</name><argument_list pos:start="109:40" pos:end="109:59">(<argument pos:start="109:41" pos:end="109:48"><expr pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:48"><name pos:start="109:41" pos:end="109:43">ctx</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:48">cur</name></name></expr></argument>, <argument pos:start="109:51" pos:end="109:53"><expr pos:start="109:51" pos:end="109:53"><name pos:start="109:51" pos:end="109:53">l1x</name></expr></argument>, <argument pos:start="109:56" pos:end="109:58"><expr pos:start="109:56" pos:end="109:58"><name pos:start="109:56" pos:end="109:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="109:61" pos:end="109:61">=</operator> <call pos:start="109:63" pos:end="109:95"><name pos:start="109:63" pos:end="109:65">BLK</name><argument_list pos:start="109:66" pos:end="109:95">(<argument pos:start="109:67" pos:end="109:74"><expr pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:74"><name pos:start="109:67" pos:end="109:69">ctx</name><operator pos:start="109:70" pos:end="109:71">-&gt;</operator><name pos:start="109:72" pos:end="109:74">cur</name></name></expr></argument>, <argument pos:start="109:77" pos:end="109:84"><expr pos:start="109:77" pos:end="109:84"><name pos:start="109:77" pos:end="109:79">l1x</name> <operator pos:start="109:81" pos:end="109:81">-</operator> <name pos:start="109:83" pos:end="109:84">mx</name></expr></argument>, <argument pos:start="109:87" pos:end="109:94"><expr pos:start="109:87" pos:end="109:94"><name pos:start="109:87" pos:end="109:89">l1y</name> <operator pos:start="109:91" pos:end="109:91">-</operator> <name pos:start="109:93" pos:end="109:94">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="111:37" pos:end="113:78"><expr pos:start="111:37" pos:end="113:77"><call pos:start="111:37" pos:end="111:63"><name pos:start="111:37" pos:end="111:39">BLK</name><argument_list pos:start="111:40" pos:end="111:63">(<argument pos:start="111:41" pos:end="111:48"><expr pos:start="111:41" pos:end="111:48"><name pos:start="111:41" pos:end="111:48"><name pos:start="111:41" pos:end="111:43">ctx</name><operator pos:start="111:44" pos:end="111:45">-&gt;</operator><name pos:start="111:46" pos:end="111:48">cur</name></name></expr></argument>, <argument pos:start="111:51" pos:end="111:57"><expr pos:start="111:51" pos:end="111:57"><name pos:start="111:51" pos:end="111:53">l1x</name> <operator pos:start="111:55" pos:end="111:55">+</operator> <literal type="number" pos:start="111:57" pos:end="111:57">1</literal></expr></argument>, <argument pos:start="111:60" pos:end="111:62"><expr pos:start="111:60" pos:end="111:62"><name pos:start="111:60" pos:end="111:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="111:65" pos:end="111:65">=</operator>

                                        <call pos:start="113:41" pos:end="113:77"><name pos:start="113:41" pos:end="113:43">BLK</name><argument_list pos:start="113:44" pos:end="113:77">(<argument pos:start="113:45" pos:end="113:52"><expr pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:47">ctx</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:52">cur</name></name></expr></argument>, <argument pos:start="113:55" pos:end="113:66"><expr pos:start="113:55" pos:end="113:66"><name pos:start="113:55" pos:end="113:57">l1x</name> <operator pos:start="113:59" pos:end="113:59">+</operator> <literal type="number" pos:start="113:61" pos:end="113:63">1</literal> <operator pos:start="113:63" pos:end="113:63">-</operator> <name pos:start="113:65" pos:end="113:66">mx</name></expr></argument>, <argument pos:start="113:69" pos:end="113:76"><expr pos:start="113:69" pos:end="113:76"><name pos:start="113:69" pos:end="113:71">l1y</name> <operator pos:start="113:73" pos:end="113:73">-</operator> <name pos:start="113:75" pos:end="113:76">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="115:37" pos:end="117:78"><expr pos:start="115:37" pos:end="117:77"><call pos:start="115:37" pos:end="115:63"><name pos:start="115:37" pos:end="115:39">BLK</name><argument_list pos:start="115:40" pos:end="115:63">(<argument pos:start="115:41" pos:end="115:48"><expr pos:start="115:41" pos:end="115:48"><name pos:start="115:41" pos:end="115:48"><name pos:start="115:41" pos:end="115:43">ctx</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:48">cur</name></name></expr></argument>, <argument pos:start="115:51" pos:end="115:53"><expr pos:start="115:51" pos:end="115:53"><name pos:start="115:51" pos:end="115:53">l1x</name></expr></argument>, <argument pos:start="115:56" pos:end="115:62"><expr pos:start="115:56" pos:end="115:62"><name pos:start="115:56" pos:end="115:58">l1y</name> <operator pos:start="115:60" pos:end="115:60">+</operator> <literal type="number" pos:start="115:62" pos:end="115:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="115:65" pos:end="115:65">=</operator>

                                        <call pos:start="117:41" pos:end="117:77"><name pos:start="117:41" pos:end="117:43">BLK</name><argument_list pos:start="117:44" pos:end="117:77">(<argument pos:start="117:45" pos:end="117:52"><expr pos:start="117:45" pos:end="117:52"><name pos:start="117:45" pos:end="117:52"><name pos:start="117:45" pos:end="117:47">ctx</name><operator pos:start="117:48" pos:end="117:49">-&gt;</operator><name pos:start="117:50" pos:end="117:52">cur</name></name></expr></argument>, <argument pos:start="117:55" pos:end="117:62"><expr pos:start="117:55" pos:end="117:62"><name pos:start="117:55" pos:end="117:57">l1x</name> <operator pos:start="117:59" pos:end="117:59">-</operator> <name pos:start="117:61" pos:end="117:62">mx</name></expr></argument>, <argument pos:start="117:65" pos:end="117:76"><expr pos:start="117:65" pos:end="117:76"><name pos:start="117:65" pos:end="117:67">l1y</name> <operator pos:start="117:69" pos:end="117:69">+</operator> <literal type="number" pos:start="117:71" pos:end="117:73">1</literal> <operator pos:start="117:73" pos:end="117:73">-</operator> <name pos:start="117:75" pos:end="117:76">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="119:37" pos:end="121:82"><expr pos:start="119:37" pos:end="121:81"><call pos:start="119:37" pos:end="119:67"><name pos:start="119:37" pos:end="119:39">BLK</name><argument_list pos:start="119:40" pos:end="119:67">(<argument pos:start="119:41" pos:end="119:48"><expr pos:start="119:41" pos:end="119:48"><name pos:start="119:41" pos:end="119:48"><name pos:start="119:41" pos:end="119:43">ctx</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:48">cur</name></name></expr></argument>, <argument pos:start="119:51" pos:end="119:57"><expr pos:start="119:51" pos:end="119:57"><name pos:start="119:51" pos:end="119:53">l1x</name> <operator pos:start="119:55" pos:end="119:55">+</operator> <literal type="number" pos:start="119:57" pos:end="119:57">1</literal></expr></argument>, <argument pos:start="119:60" pos:end="119:66"><expr pos:start="119:60" pos:end="119:66"><name pos:start="119:60" pos:end="119:62">l1y</name> <operator pos:start="119:64" pos:end="119:64">+</operator> <literal type="number" pos:start="119:66" pos:end="119:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="119:69" pos:end="119:69">=</operator>

                                        <call pos:start="121:41" pos:end="121:81"><name pos:start="121:41" pos:end="121:43">BLK</name><argument_list pos:start="121:44" pos:end="121:81">(<argument pos:start="121:45" pos:end="121:52"><expr pos:start="121:45" pos:end="121:52"><name pos:start="121:45" pos:end="121:52"><name pos:start="121:45" pos:end="121:47">ctx</name><operator pos:start="121:48" pos:end="121:49">-&gt;</operator><name pos:start="121:50" pos:end="121:52">cur</name></name></expr></argument>, <argument pos:start="121:55" pos:end="121:66"><expr pos:start="121:55" pos:end="121:66"><name pos:start="121:55" pos:end="121:57">l1x</name> <operator pos:start="121:59" pos:end="121:59">+</operator> <literal type="number" pos:start="121:61" pos:end="121:63">1</literal> <operator pos:start="121:63" pos:end="121:63">-</operator> <name pos:start="121:65" pos:end="121:66">mx</name></expr></argument>, <argument pos:start="121:69" pos:end="121:80"><expr pos:start="121:69" pos:end="121:80"><name pos:start="121:69" pos:end="121:71">l1y</name> <operator pos:start="121:73" pos:end="121:73">+</operator> <literal type="number" pos:start="121:75" pos:end="121:77">1</literal> <operator pos:start="121:77" pos:end="121:77">-</operator> <name pos:start="121:79" pos:end="121:80">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>

                            </block_content>}</block></if> <else pos:start="125:31" pos:end="135:29">else <block pos:start="125:36" pos:end="135:29">{<block_content pos:start="127:33" pos:end="133:73">    <comment type="line" pos:start="125:41" pos:end="125:64">// read values for block</comment>

                                <expr_stmt pos:start="127:33" pos:end="127:65"><expr pos:start="127:33" pos:end="127:64"><call pos:start="127:33" pos:end="127:55"><name pos:start="127:33" pos:end="127:35">BLK</name><argument_list pos:start="127:36" pos:end="127:55">(<argument pos:start="127:37" pos:end="127:44"><expr pos:start="127:37" pos:end="127:44"><name pos:start="127:37" pos:end="127:44"><name pos:start="127:37" pos:end="127:39">ctx</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:44">cur</name></name></expr></argument>, <argument pos:start="127:47" pos:end="127:49"><expr pos:start="127:47" pos:end="127:49"><name pos:start="127:47" pos:end="127:49">l1x</name></expr></argument>, <argument pos:start="127:52" pos:end="127:54"><expr pos:start="127:52" pos:end="127:54"><name pos:start="127:52" pos:end="127:54">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="127:57" pos:end="127:57">=</operator> <operator pos:start="127:59" pos:end="127:59">*</operator><name pos:start="127:60" pos:end="127:62">src</name><operator pos:start="127:63" pos:end="127:64">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="129:33" pos:end="129:69"><expr pos:start="129:33" pos:end="129:68"><call pos:start="129:33" pos:end="129:59"><name pos:start="129:33" pos:end="129:35">BLK</name><argument_list pos:start="129:36" pos:end="129:59">(<argument pos:start="129:37" pos:end="129:44"><expr pos:start="129:37" pos:end="129:44"><name pos:start="129:37" pos:end="129:44"><name pos:start="129:37" pos:end="129:39">ctx</name><operator pos:start="129:40" pos:end="129:41">-&gt;</operator><name pos:start="129:42" pos:end="129:44">cur</name></name></expr></argument>, <argument pos:start="129:47" pos:end="129:53"><expr pos:start="129:47" pos:end="129:53"><name pos:start="129:47" pos:end="129:49">l1x</name> <operator pos:start="129:51" pos:end="129:51">+</operator> <literal type="number" pos:start="129:53" pos:end="129:53">1</literal></expr></argument>, <argument pos:start="129:56" pos:end="129:58"><expr pos:start="129:56" pos:end="129:58"><name pos:start="129:56" pos:end="129:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="129:61" pos:end="129:61">=</operator> <operator pos:start="129:63" pos:end="129:63">*</operator><name pos:start="129:64" pos:end="129:66">src</name><operator pos:start="129:67" pos:end="129:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="131:33" pos:end="131:69"><expr pos:start="131:33" pos:end="131:68"><call pos:start="131:33" pos:end="131:59"><name pos:start="131:33" pos:end="131:35">BLK</name><argument_list pos:start="131:36" pos:end="131:59">(<argument pos:start="131:37" pos:end="131:44"><expr pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:44"><name pos:start="131:37" pos:end="131:39">ctx</name><operator pos:start="131:40" pos:end="131:41">-&gt;</operator><name pos:start="131:42" pos:end="131:44">cur</name></name></expr></argument>, <argument pos:start="131:47" pos:end="131:49"><expr pos:start="131:47" pos:end="131:49"><name pos:start="131:47" pos:end="131:49">l1x</name></expr></argument>, <argument pos:start="131:52" pos:end="131:58"><expr pos:start="131:52" pos:end="131:58"><name pos:start="131:52" pos:end="131:54">l1y</name> <operator pos:start="131:56" pos:end="131:56">+</operator> <literal type="number" pos:start="131:58" pos:end="131:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:61" pos:end="131:61">=</operator> <operator pos:start="131:63" pos:end="131:63">*</operator><name pos:start="131:64" pos:end="131:66">src</name><operator pos:start="131:67" pos:end="131:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="133:33" pos:end="133:73"><expr pos:start="133:33" pos:end="133:72"><call pos:start="133:33" pos:end="133:63"><name pos:start="133:33" pos:end="133:35">BLK</name><argument_list pos:start="133:36" pos:end="133:63">(<argument pos:start="133:37" pos:end="133:44"><expr pos:start="133:37" pos:end="133:44"><name pos:start="133:37" pos:end="133:44"><name pos:start="133:37" pos:end="133:39">ctx</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:44">cur</name></name></expr></argument>, <argument pos:start="133:47" pos:end="133:53"><expr pos:start="133:47" pos:end="133:53"><name pos:start="133:47" pos:end="133:49">l1x</name> <operator pos:start="133:51" pos:end="133:51">+</operator> <literal type="number" pos:start="133:53" pos:end="133:53">1</literal></expr></argument>, <argument pos:start="133:56" pos:end="133:62"><expr pos:start="133:56" pos:end="133:62"><name pos:start="133:56" pos:end="133:58">l1y</name> <operator pos:start="133:60" pos:end="133:60">+</operator> <literal type="number" pos:start="133:62" pos:end="133:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="133:65" pos:end="133:65">=</operator> <operator pos:start="133:67" pos:end="133:67">*</operator><name pos:start="133:68" pos:end="133:70">src</name><operator pos:start="133:71" pos:end="133:72">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for></block_content></block></for>

</block_content>}</block></function>
</unit>
