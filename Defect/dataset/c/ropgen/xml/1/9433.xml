<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9433.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">read_rle_sgi</name><parameter_list pos:start="1:24" pos:end="3:59">(<parameter pos:start="1:25" pos:end="1:46"><decl pos:start="1:25" pos:end="1:46"><type pos:start="1:25" pos:end="1:46"><name pos:start="1:25" pos:end="1:32">unsigned</name> <name pos:start="1:34" pos:end="1:37">char</name><modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:46">out_buf</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:69"><decl pos:start="1:49" pos:end="1:69"><type pos:start="1:49" pos:end="1:69"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:61">uint8_t</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:69">in_buf</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:45"><decl pos:start="3:25" pos:end="3:45"><type pos:start="3:25" pos:end="3:45"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">uint8_t</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">in_end</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:58"><decl pos:start="3:48" pos:end="3:58"><type pos:start="3:48" pos:end="3:58"><name pos:start="3:48" pos:end="3:55">SgiState</name><modifier pos:start="3:56" pos:end="3:56">*</modifier></type> <name pos:start="3:58" pos:end="3:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:13">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">dest_row</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:47"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:20">len</name> <init pos:start="9:22" pos:end="9:47">= <expr pos:start="9:24" pos:end="9:47"><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">height</name></name> <operator pos:start="9:34" pos:end="9:34">*</operator> <name pos:start="9:36" pos:end="9:43"><name pos:start="9:36" pos:end="9:36">s</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:43">depth</name></name> <operator pos:start="9:45" pos:end="9:45">*</operator> <literal type="number" pos:start="9:47" pos:end="9:47">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:30">start_table</name> <init pos:start="11:32" pos:end="11:39">= <expr pos:start="11:34" pos:end="11:39"><name pos:start="11:34" pos:end="11:39">in_buf</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">y</name></decl>, <decl pos:start="13:21" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:21" pos:end="13:21">z</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:29">start_offset</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:47">/* size of  RLE offset and length tables */</comment>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if<condition pos:start="21:7" pos:end="21:34">(<expr pos:start="21:8" pos:end="21:33"><name pos:start="21:8" pos:end="21:10">len</name> <operator pos:start="21:12" pos:end="21:12">*</operator> <literal type="number" pos:start="21:14" pos:end="21:14">2</literal>  <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <name pos:start="21:19" pos:end="21:24">in_end</name> <operator pos:start="21:26" pos:end="21:26">-</operator> <name pos:start="21:28" pos:end="21:33">in_buf</name></expr>)</condition> <block pos:start="21:36" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:10">in_buf</name> <operator pos:start="29:12" pos:end="29:13">-=</operator> <name pos:start="29:15" pos:end="29:29">SGI_HEADER_SIZE</name></expr>;</expr_stmt>

    <for pos:start="31:5" pos:end="55:5">for <control pos:start="31:9" pos:end="31:34">(<init pos:start="31:10" pos:end="31:15"><expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:10">z</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <literal type="number" pos:start="31:14" pos:end="31:14">0</literal></expr>;</init> <condition pos:start="31:17" pos:end="31:29"><expr pos:start="31:17" pos:end="31:28"><name pos:start="31:17" pos:end="31:17">z</name> <operator pos:start="31:19" pos:end="31:19">&lt;</operator> <name pos:start="31:21" pos:end="31:28"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:28">depth</name></name></expr>;</condition> <incr pos:start="31:31" pos:end="31:33"><expr pos:start="31:31" pos:end="31:33"><name pos:start="31:31" pos:end="31:31">z</name><operator pos:start="31:32" pos:end="31:33">++</operator></expr></incr>)</control> <block pos:start="31:36" pos:end="55:5">{<block_content pos:start="33:9" pos:end="53:9">

        <expr_stmt pos:start="33:9" pos:end="33:27"><expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:16">dest_row</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:26">out_buf</name></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="53:9">for <control pos:start="35:13" pos:end="35:39">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">y</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:34"><expr pos:start="35:21" pos:end="35:33"><name pos:start="35:21" pos:end="35:21">y</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:33"><name pos:start="35:25" pos:end="35:25">s</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:33">height</name></name></expr>;</condition> <incr pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:36">y</name><operator pos:start="35:37" pos:end="35:38">++</operator></expr></incr>)</control> <block pos:start="35:41" pos:end="53:9">{<block_content pos:start="37:13" pos:end="51:43">

            <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:20">dest_row</name> <operator pos:start="37:22" pos:end="37:23">-=</operator> <name pos:start="37:25" pos:end="37:35"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:35">linesize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:24">start_offset</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:60"><name pos:start="39:28" pos:end="39:46">bytestream_get_be32</name><argument_list pos:start="39:47" pos:end="39:60">(<argument pos:start="39:48" pos:end="39:59"><expr pos:start="39:48" pos:end="39:59"><operator pos:start="39:48" pos:end="39:48">&amp;</operator><name pos:start="39:49" pos:end="39:59">start_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if<condition pos:start="41:15" pos:end="41:46">(<expr pos:start="41:16" pos:end="41:45"><name pos:start="41:16" pos:end="41:27">start_offset</name> <operator pos:start="41:29" pos:end="41:29">&gt;</operator> <name pos:start="41:31" pos:end="41:36">in_end</name> <operator pos:start="41:38" pos:end="41:38">-</operator> <name pos:start="41:40" pos:end="41:45">in_buf</name></expr>)</condition> <block pos:start="41:48" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:43">

                <return pos:start="43:17" pos:end="43:43">return <expr pos:start="43:24" pos:end="43:42"><name pos:start="43:24" pos:end="43:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="51:43"><if pos:start="47:13" pos:end="51:43">if <condition pos:start="47:16" pos:end="49:69">(<expr pos:start="47:17" pos:end="49:68"><call pos:start="47:17" pos:end="49:56"><name pos:start="47:17" pos:end="47:30">expand_rle_row</name><argument_list pos:start="47:31" pos:end="49:56">(<argument pos:start="47:32" pos:end="47:52"><expr pos:start="47:32" pos:end="47:52"><name pos:start="47:32" pos:end="47:37">in_buf</name> <operator pos:start="47:39" pos:end="47:39">+</operator> <name pos:start="47:41" pos:end="47:52">start_offset</name></expr></argument>, <argument pos:start="47:55" pos:end="47:60"><expr pos:start="47:55" pos:end="47:60"><name pos:start="47:55" pos:end="47:60">in_end</name></expr></argument>, <argument pos:start="47:63" pos:end="47:74"><expr pos:start="47:63" pos:end="47:74"><name pos:start="47:63" pos:end="47:70">dest_row</name> <operator pos:start="47:72" pos:end="47:72">+</operator> <name pos:start="47:74" pos:end="47:74">z</name></expr></argument>,

                <argument pos:start="49:17" pos:end="49:45"><expr pos:start="49:17" pos:end="49:45"><name pos:start="49:17" pos:end="49:24">dest_row</name> <operator pos:start="49:26" pos:end="49:26">+</operator> <call pos:start="49:28" pos:end="49:45"><name pos:start="49:28" pos:end="49:32">FFABS</name><argument_list pos:start="49:33" pos:end="49:45">(<argument pos:start="49:34" pos:end="49:44"><expr pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:44"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:44">linesize</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="49:48" pos:end="49:55"><expr pos:start="49:48" pos:end="49:55"><name pos:start="49:48" pos:end="49:55"><name pos:start="49:48" pos:end="49:48">s</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:55">depth</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:58" pos:end="49:59">!=</operator> <name pos:start="49:61" pos:end="49:68"><name pos:start="49:61" pos:end="49:61">s</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:68">width</name></name></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="51:43"><block_content pos:start="51:17" pos:end="51:43">

                <return pos:start="51:17" pos:end="51:43">return <expr pos:start="51:24" pos:end="51:42"><name pos:start="51:24" pos:end="51:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
