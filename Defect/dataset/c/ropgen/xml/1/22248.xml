<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22248.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">test_dummy_createcmdl</name><parameter_list pos:start="1:34" pos:end="1:39">(<parameter pos:start="1:35" pos:end="1:38"><decl pos:start="1:35" pos:end="1:38"><type pos:start="1:35" pos:end="1:38"><name pos:start="1:35" pos:end="1:38">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="35:1">{<block_content pos:start="3:5" pos:end="34:61">
    <decl_stmt pos:start="3:5" pos:end="3:19"><decl pos:start="3:5" pos:end="3:18"><type pos:start="3:5" pos:end="3:14"><name pos:start="3:5" pos:end="3:12">QemuOpts</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:18">opts</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:22"><decl pos:start="4:5" pos:end="4:21"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:15">DummyObject</name> <modifier pos:start="4:17" pos:end="4:17">*</modifier></type><name pos:start="4:18" pos:end="4:21">dobj</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="8:64"><decl pos:start="6:5" pos:end="8:63"><type pos:start="6:5" pos:end="6:16"><specifier pos:start="6:5" pos:end="6:9">const</specifier> <name pos:start="6:11" pos:end="6:14">char</name> <modifier pos:start="6:16" pos:end="6:16">*</modifier></type><name pos:start="6:17" pos:end="6:22">params</name> <init pos:start="6:24" pos:end="8:63">= <expr pos:start="6:26" pos:end="8:63"><name pos:start="6:26" pos:end="6:35">TYPE_DUMMY</name> \
                         <literal type="string" pos:start="7:26" pos:end="7:36">",id=dev0,"</literal> \
                         <literal type="string" pos:start="8:26" pos:end="8:63">"bv=yes,sv=Hiss hiss hiss,av=platypus"</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:37"><expr pos:start="9:5" pos:end="9:36"><call pos:start="9:5" pos:end="9:36"><name pos:start="9:5" pos:end="9:17">qemu_add_opts</name><argument_list pos:start="9:18" pos:end="9:36">(<argument pos:start="9:19" pos:end="9:35"><expr pos:start="9:19" pos:end="9:35"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:35">qemu_object_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:66"><expr pos:start="10:5" pos:end="10:65"><name pos:start="10:5" pos:end="10:8">opts</name> <operator pos:start="10:10" pos:end="10:10">=</operator> <call pos:start="10:12" pos:end="10:65"><name pos:start="10:12" pos:end="10:26">qemu_opts_parse</name><argument_list pos:start="10:27" pos:end="10:65">(<argument pos:start="10:28" pos:end="10:44"><expr pos:start="10:28" pos:end="10:44"><operator pos:start="10:28" pos:end="10:28">&amp;</operator><name pos:start="10:29" pos:end="10:44">qemu_object_opts</name></expr></argument>, <argument pos:start="10:47" pos:end="10:52"><expr pos:start="10:47" pos:end="10:52"><name pos:start="10:47" pos:end="10:52">params</name></expr></argument>, <argument pos:start="10:55" pos:end="10:58"><expr pos:start="10:55" pos:end="10:58"><name pos:start="10:55" pos:end="10:58">true</name></expr></argument>, <argument pos:start="10:61" pos:end="10:64"><expr pos:start="10:61" pos:end="10:64"><operator pos:start="10:61" pos:end="10:61">&amp;</operator><name pos:start="10:62" pos:end="10:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><call pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:12">g_assert</name><argument_list pos:start="11:13" pos:end="11:25">(<argument pos:start="11:14" pos:end="11:24"><expr pos:start="11:14" pos:end="11:24"><name pos:start="11:14" pos:end="11:16">err</name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:19"><expr pos:start="12:5" pos:end="12:18"><call pos:start="12:5" pos:end="12:18"><name pos:start="12:5" pos:end="12:12">g_assert</name><argument_list pos:start="12:13" pos:end="12:18">(<argument pos:start="12:14" pos:end="12:17"><expr pos:start="12:14" pos:end="12:17"><name pos:start="12:14" pos:end="12:17">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:61"><expr pos:start="13:5" pos:end="13:60"><name pos:start="13:5" pos:end="13:8">dobj</name> <operator pos:start="13:10" pos:end="13:10">=</operator> <call pos:start="13:12" pos:end="13:60"><name pos:start="13:12" pos:end="13:23">DUMMY_OBJECT</name><argument_list pos:start="13:24" pos:end="13:60">(<argument pos:start="13:25" pos:end="13:59"><expr pos:start="13:25" pos:end="13:59"><call pos:start="13:25" pos:end="13:59"><name pos:start="13:25" pos:end="13:47">user_creatable_add_opts</name><argument_list pos:start="13:48" pos:end="13:59">(<argument pos:start="13:49" pos:end="13:52"><expr pos:start="13:49" pos:end="13:52"><name pos:start="13:49" pos:end="13:52">opts</name></expr></argument>, <argument pos:start="13:55" pos:end="13:58"><expr pos:start="13:55" pos:end="13:58"><operator pos:start="13:55" pos:end="13:55">&amp;</operator><name pos:start="13:56" pos:end="13:58">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:26"><expr pos:start="14:5" pos:end="14:25"><call pos:start="14:5" pos:end="14:25"><name pos:start="14:5" pos:end="14:12">g_assert</name><argument_list pos:start="14:13" pos:end="14:25">(<argument pos:start="14:14" pos:end="14:24"><expr pos:start="14:14" pos:end="14:24"><name pos:start="14:14" pos:end="14:16">err</name> <operator pos:start="14:18" pos:end="14:19">==</operator> <name pos:start="14:21" pos:end="14:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><call pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12">g_assert</name><argument_list pos:start="15:13" pos:end="15:18">(<argument pos:start="15:14" pos:end="15:17"><expr pos:start="15:14" pos:end="15:17"><name pos:start="15:14" pos:end="15:17">dobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:52"><expr pos:start="16:5" pos:end="16:51"><call pos:start="16:5" pos:end="16:51"><name pos:start="16:5" pos:end="16:19">g_assert_cmpstr</name><argument_list pos:start="16:20" pos:end="16:51">(<argument pos:start="16:21" pos:end="16:28"><expr pos:start="16:21" pos:end="16:28"><name pos:start="16:21" pos:end="16:28"><name pos:start="16:21" pos:end="16:24">dobj</name><operator pos:start="16:25" pos:end="16:26">-&gt;</operator><name pos:start="16:27" pos:end="16:28">sv</name></name></expr></argument>, <argument pos:start="16:31" pos:end="16:32"><expr pos:start="16:31" pos:end="16:32"><operator pos:start="16:31" pos:end="16:32">==</operator></expr></argument>, <argument pos:start="16:35" pos:end="16:50"><expr pos:start="16:35" pos:end="16:50"><literal type="string" pos:start="16:35" pos:end="16:50">"Hiss hiss hiss"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:12">g_assert</name><argument_list pos:start="17:13" pos:end="17:30">(<argument pos:start="17:14" pos:end="17:29"><expr pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:21"><name pos:start="17:14" pos:end="17:17">dobj</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:21">bv</name></name> <operator pos:start="17:23" pos:end="17:24">==</operator> <name pos:start="17:26" pos:end="17:29">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:41"><expr pos:start="18:5" pos:end="18:40"><call pos:start="18:5" pos:end="18:40"><name pos:start="18:5" pos:end="18:12">g_assert</name><argument_list pos:start="18:13" pos:end="18:40">(<argument pos:start="18:14" pos:end="18:39"><expr pos:start="18:14" pos:end="18:39"><name pos:start="18:14" pos:end="18:21"><name pos:start="18:14" pos:end="18:17">dobj</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:21">av</name></name> <operator pos:start="18:23" pos:end="18:24">==</operator> <name pos:start="18:26" pos:end="18:39">DUMMY_PLATYPUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><call pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:22">user_creatable_del</name><argument_list pos:start="19:23" pos:end="19:36">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><literal type="string" pos:start="19:24" pos:end="19:29">"dev0"</literal></expr></argument>, <argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><operator pos:start="19:32" pos:end="19:32">&amp;</operator><name pos:start="19:33" pos:end="19:35">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:26"><expr pos:start="20:5" pos:end="20:25"><call pos:start="20:5" pos:end="20:25"><name pos:start="20:5" pos:end="20:12">g_assert</name><argument_list pos:start="20:13" pos:end="20:25">(<argument pos:start="20:14" pos:end="20:24"><expr pos:start="20:14" pos:end="20:24"><name pos:start="20:14" pos:end="20:16">err</name> <operator pos:start="20:18" pos:end="20:19">==</operator> <name pos:start="20:21" pos:end="20:24">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><call pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:14">error_free</name><argument_list pos:start="21:15" pos:end="21:19">(<argument pos:start="21:16" pos:end="21:18"><expr pos:start="21:16" pos:end="21:18"><name pos:start="21:16" pos:end="21:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="22:5" pos:end="33:7">/*
     * cmdline-parsing via qemu_opts_parse() results in a QemuOpts entry
     * corresponding to the Object's ID to be added to the QemuOptsList
     * for objects. To avoid having this entry conflict with future
     * Objects using the same ID (which can happen in cases where
     * qemu_opts_parse() is used to parse the object params, such as
     * with hmp_object_add() at the time of this comment), we need to
     * check for this in user_creatable_del() and remove the QemuOpts if
     * it is present.
     *
     * The below check ensures this works as expected.
     */</comment>
    <expr_stmt pos:start="34:5" pos:end="34:61"><expr pos:start="34:5" pos:end="34:60"><call pos:start="34:5" pos:end="34:60"><name pos:start="34:5" pos:end="34:17">g_assert_null</name><argument_list pos:start="34:18" pos:end="34:60">(<argument pos:start="34:19" pos:end="34:59"><expr pos:start="34:19" pos:end="34:59"><call pos:start="34:19" pos:end="34:59"><name pos:start="34:19" pos:end="34:32">qemu_opts_find</name><argument_list pos:start="34:33" pos:end="34:59">(<argument pos:start="34:34" pos:end="34:50"><expr pos:start="34:34" pos:end="34:50"><operator pos:start="34:34" pos:end="34:34">&amp;</operator><name pos:start="34:35" pos:end="34:50">qemu_object_opts</name></expr></argument>, <argument pos:start="34:53" pos:end="34:58"><expr pos:start="34:53" pos:end="34:58"><literal type="string" pos:start="34:53" pos:end="34:58">"dev0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
