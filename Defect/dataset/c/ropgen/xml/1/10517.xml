<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10517.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">png_decode_idat</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:40">PNGDecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:55">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:76"><expr pos:start="7:5" pos:end="7:75"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:14">zstream</name><operator pos:start="7:15" pos:end="7:15">.</operator><name pos:start="7:16" pos:end="7:23">avail_in</name></name> <operator pos:start="7:25" pos:end="7:25">=</operator> <call pos:start="7:27" pos:end="7:75"><name pos:start="7:27" pos:end="7:31">FFMIN</name><argument_list pos:start="7:32" pos:end="7:75">(<argument pos:start="7:33" pos:end="7:38"><expr pos:start="7:33" pos:end="7:38"><name pos:start="7:33" pos:end="7:38">length</name></expr></argument>, <argument pos:start="7:41" pos:end="7:74"><expr pos:start="7:41" pos:end="7:74"><call pos:start="7:41" pos:end="7:74"><name pos:start="7:41" pos:end="7:66">bytestream2_get_bytes_left</name><argument_list pos:start="7:67" pos:end="7:74">(<argument pos:start="7:68" pos:end="7:73"><expr pos:start="7:68" pos:end="7:73"><operator pos:start="7:68" pos:end="7:68">&amp;</operator><name pos:start="7:69" pos:end="7:73"><name pos:start="7:69" pos:end="7:69">s</name><operator pos:start="7:70" pos:end="7:71">-&gt;</operator><name pos:start="7:72" pos:end="7:73">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:56"><expr pos:start="9:5" pos:end="9:55"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">zstream</name><operator pos:start="9:15" pos:end="9:15">.</operator><name pos:start="9:16" pos:end="9:22">next_in</name></name>  <operator pos:start="9:25" pos:end="9:25">=</operator> <operator pos:start="9:27" pos:end="9:27">(</operator><name pos:start="9:28" pos:end="9:35">unsigned</name> <name pos:start="9:37" pos:end="9:40">char</name> <operator pos:start="9:42" pos:end="9:42">*</operator><operator pos:start="9:43" pos:end="9:43">)</operator><name pos:start="9:44" pos:end="9:55"><name pos:start="9:44" pos:end="9:44">s</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:48">gb</name><operator pos:start="9:49" pos:end="9:49">.</operator><name pos:start="9:50" pos:end="9:55">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:20">bytestream2_skip</name><argument_list pos:start="11:21" pos:end="11:36">(<argument pos:start="11:22" pos:end="11:27"><expr pos:start="11:22" pos:end="11:27"><operator pos:start="11:22" pos:end="11:22">&amp;</operator><name pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">gb</name></name></expr></argument>, <argument pos:start="11:30" pos:end="11:35"><expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:37">/* decode one line if possible */</comment>

    <while pos:start="17:5" pos:end="53:5">while <condition pos:start="17:11" pos:end="17:35">(<expr pos:start="17:12" pos:end="17:34"><name pos:start="17:12" pos:end="17:30"><name pos:start="17:12" pos:end="17:12">s</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">zstream</name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:30">avail_in</name></name> <operator pos:start="17:32" pos:end="17:32">&gt;</operator> <literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr>)</condition> <block pos:start="17:37" pos:end="53:5">{<block_content pos:start="19:9" pos:end="51:9">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:51"><name pos:start="19:15" pos:end="19:21">inflate</name><argument_list pos:start="19:22" pos:end="19:51">(<argument pos:start="19:23" pos:end="19:33"><expr pos:start="19:23" pos:end="19:33"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:33"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:33">zstream</name></name></expr></argument>, <argument pos:start="19:36" pos:end="19:50"><expr pos:start="19:36" pos:end="19:50"><name pos:start="19:36" pos:end="19:50">Z_PARTIAL_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:47">(<expr pos:start="21:13" pos:end="21:46"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:18">!=</operator> <name pos:start="21:20" pos:end="21:23">Z_OK</name> <operator pos:start="21:25" pos:end="21:26">&amp;&amp;</operator> <name pos:start="21:28" pos:end="21:30">ret</name> <operator pos:start="21:32" pos:end="21:33">!=</operator> <name pos:start="21:35" pos:end="21:46">Z_STREAM_END</name></expr>)</condition> <block pos:start="21:49" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:36">

            <expr_stmt pos:start="23:13" pos:end="23:79"><expr pos:start="23:13" pos:end="23:78"><call pos:start="23:13" pos:end="23:78"><name pos:start="23:13" pos:end="23:18">av_log</name><argument_list pos:start="23:19" pos:end="23:78">(<argument pos:start="23:20" pos:end="23:27"><expr pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:27"><name pos:start="23:20" pos:end="23:20">s</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:27">avctx</name></name></expr></argument>, <argument pos:start="23:30" pos:end="23:41"><expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:44" pos:end="23:72"><expr pos:start="23:44" pos:end="23:72"><literal type="string" pos:start="23:44" pos:end="23:72">"inflate returned error %d\n"</literal></expr></argument>, <argument pos:start="23:75" pos:end="23:77"><expr pos:start="23:75" pos:end="23:77"><name pos:start="23:75" pos:end="23:77">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:36">return <expr pos:start="25:20" pos:end="25:35"><name pos:start="25:20" pos:end="25:35">AVERROR_EXTERNAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="41:9"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:38">(<expr pos:start="29:13" pos:end="29:37"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">zstream</name><operator pos:start="29:23" pos:end="29:23">.</operator><name pos:start="29:24" pos:end="29:32">avail_out</name></name> <operator pos:start="29:34" pos:end="29:35">==</operator> <literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>)</condition> <block pos:start="29:40" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:47">

            <if_stmt pos:start="31:13" pos:end="35:13"><if pos:start="31:13" pos:end="35:13">if <condition pos:start="31:16" pos:end="31:43">(<expr pos:start="31:17" pos:end="31:42"><operator pos:start="31:17" pos:end="31:17">!</operator><operator pos:start="31:18" pos:end="31:18">(</operator><name pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:26">state</name></name> <operator pos:start="31:28" pos:end="31:28">&amp;</operator> <name pos:start="31:30" pos:end="31:41">PNG_ALLIMAGE</name><operator pos:start="31:42" pos:end="31:42">)</operator></expr>)</condition> <block pos:start="31:45" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:34">

                <expr_stmt pos:start="33:17" pos:end="33:34"><expr pos:start="33:17" pos:end="33:33"><call pos:start="33:17" pos:end="33:33"><name pos:start="33:17" pos:end="33:30">png_handle_row</name><argument_list pos:start="33:31" pos:end="33:33">(<argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:48"><expr pos:start="37:13" pos:end="37:47"><name pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">zstream</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:32">avail_out</name></name> <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:47"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:47">crow_size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:47"><expr pos:start="39:13" pos:end="39:46"><name pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:22">zstream</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:31">next_out</name></name>  <operator pos:start="39:34" pos:end="39:34">=</operator> <name pos:start="39:36" pos:end="39:46"><name pos:start="39:36" pos:end="39:36">s</name><operator pos:start="39:37" pos:end="39:38">-&gt;</operator><name pos:start="39:39" pos:end="39:46">crow_buf</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:59">(<expr pos:start="43:13" pos:end="43:58"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:18">==</operator> <name pos:start="43:20" pos:end="43:31">Z_STREAM_END</name> <operator pos:start="43:33" pos:end="43:34">&amp;&amp;</operator> <name pos:start="43:36" pos:end="43:54"><name pos:start="43:36" pos:end="43:36">s</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:45">zstream</name><operator pos:start="43:46" pos:end="43:46">.</operator><name pos:start="43:47" pos:end="43:54">avail_in</name></name> <operator pos:start="43:56" pos:end="43:56">&gt;</operator> <literal type="number" pos:start="43:58" pos:end="43:58">0</literal></expr>)</condition> <block pos:start="43:61" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:21">

            <expr_stmt pos:start="45:13" pos:end="47:84"><expr pos:start="45:13" pos:end="47:83"><call pos:start="45:13" pos:end="47:83"><name pos:start="45:13" pos:end="45:18">av_log</name><argument_list pos:start="45:19" pos:end="47:83">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">NULL</name></expr></argument>, <argument pos:start="45:26" pos:end="45:39"><expr pos:start="45:26" pos:end="45:39"><name pos:start="45:26" pos:end="45:39">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:61"><expr pos:start="47:20" pos:end="47:61"><literal type="string" pos:start="47:20" pos:end="47:61">"%d undecompressed bytes left in buffer\n"</literal></expr></argument>, <argument pos:start="47:64" pos:end="47:82"><expr pos:start="47:64" pos:end="47:82"><name pos:start="47:64" pos:end="47:82"><name pos:start="47:64" pos:end="47:64">s</name><operator pos:start="47:65" pos:end="47:66">-&gt;</operator><name pos:start="47:67" pos:end="47:73">zstream</name><operator pos:start="47:74" pos:end="47:74">.</operator><name pos:start="47:75" pos:end="47:82">avail_in</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:21">return <expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
