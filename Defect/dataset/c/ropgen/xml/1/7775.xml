<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7775.c" pos:tabs="8"><function pos:start="1:1" pos:end="142:23"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">zerocodec_decode_frame</name><parameter_list pos:start="1:34" pos:end="3:66">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:61">void</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:67">data</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:48"><decl pos:start="3:35" pos:end="3:48"><type pos:start="3:35" pos:end="3:48"><name pos:start="3:35" pos:end="3:37">int</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:48">data_size</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><name pos:start="3:51" pos:end="3:58">AVPacket</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:65">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="142:23">{<block_content pos:start="7:5" pos:end="142:23">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">ZeroCodecContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">zc</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:32">avctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">pic</name>         <init pos:start="9:26" pos:end="9:45">= <expr pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:32">avctx</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:45">coded_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:21">prev_pic</name>    <init pos:start="11:26" pos:end="11:46">= <expr pos:start="11:28" pos:end="11:46"><operator pos:start="11:28" pos:end="11:28">&amp;</operator><name pos:start="11:29" pos:end="11:46"><name pos:start="11:29" pos:end="11:30">zc</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:46">previous_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:40"><decl pos:start="13:5" pos:end="13:39"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">z_stream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">zstream</name>    <init pos:start="13:26" pos:end="13:39">= <expr pos:start="13:28" pos:end="13:39"><operator pos:start="13:28" pos:end="13:28">&amp;</operator><name pos:start="13:29" pos:end="13:39"><name pos:start="13:29" pos:end="13:30">zc</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:39">zstream</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:17">prev</name></decl>, <decl pos:start="15:20" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:20" pos:end="15:20">*</modifier></type><name pos:start="15:21" pos:end="15:23">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">zret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:7">pic</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:18">reference</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">3</literal></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="142:23"><if pos:start="25:5" pos:end="142:23">if <condition pos:start="25:8" pos:end="25:42">(<expr pos:start="25:9" pos:end="25:41"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:25">get_buffer</name></name><argument_list pos:start="25:26" pos:end="25:37">(<argument pos:start="25:27" pos:end="25:31"><expr pos:start="25:27" pos:end="25:31"><name pos:start="25:27" pos:end="25:31">avctx</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">pic</name></expr></argument>)</argument_list></call> <operator pos:start="25:39" pos:end="25:39">&lt;</operator> <literal type="number" pos:start="25:41" pos:end="25:41">0</literal></expr>)</condition> <block pos:start="25:44" pos:end="142:23">{<block_content pos:start="27:9" pos:end="142:23">

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><call pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:67">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20">avctx</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:66"><expr pos:start="27:37" pos:end="27:66"><literal type="string" pos:start="27:37" pos:end="27:66">"Could not allocate buffer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="34:5" pos:end="34:33"><expr pos:start="34:5" pos:end="34:32"><name pos:start="34:5" pos:end="34:8">zret</name> <operator pos:start="34:10" pos:end="34:10">=</operator> <call pos:start="34:12" pos:end="34:32"><name pos:start="34:12" pos:end="34:23">inflateReset</name><argument_list pos:start="34:24" pos:end="34:32">(<argument pos:start="34:25" pos:end="34:31"><expr pos:start="34:25" pos:end="34:31"><name pos:start="34:25" pos:end="34:31">zstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="38:5" pos:end="142:23"><if pos:start="38:5" pos:end="142:23">if <condition pos:start="38:8" pos:end="38:21">(<expr pos:start="38:9" pos:end="38:20"><name pos:start="38:9" pos:end="38:12">zret</name> <operator pos:start="38:14" pos:end="38:15">!=</operator> <name pos:start="38:17" pos:end="38:20">Z_OK</name></expr>)</condition> <block pos:start="38:23" pos:end="142:23">{<block_content pos:start="40:9" pos:end="142:23">

        <expr_stmt pos:start="40:9" pos:end="40:75"><expr pos:start="40:9" pos:end="40:74"><call pos:start="40:9" pos:end="40:74"><name pos:start="40:9" pos:end="40:14">av_log</name><argument_list pos:start="40:15" pos:end="40:74">(<argument pos:start="40:16" pos:end="40:20"><expr pos:start="40:16" pos:end="40:20"><name pos:start="40:16" pos:end="40:20">avctx</name></expr></argument>, <argument pos:start="40:23" pos:end="40:34"><expr pos:start="40:23" pos:end="40:34"><name pos:start="40:23" pos:end="40:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="40:37" pos:end="40:67"><expr pos:start="40:37" pos:end="40:67"><literal type="string" pos:start="40:37" pos:end="40:67">"Could not reset inflate: %d\n"</literal></expr></argument>, <argument pos:start="40:70" pos:end="40:73"><expr pos:start="40:70" pos:end="40:73"><name pos:start="40:70" pos:end="40:73">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="42:9" pos:end="42:31">return <expr pos:start="42:16" pos:end="42:30"><call pos:start="42:16" pos:end="42:30"><name pos:start="42:16" pos:end="42:22">AVERROR</name><argument_list pos:start="42:23" pos:end="42:30">(<argument pos:start="42:24" pos:end="42:29"><expr pos:start="42:24" pos:end="42:29"><name pos:start="42:24" pos:end="42:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




    <expr_stmt pos:start="47:5" pos:end="47:37"><expr pos:start="47:5" pos:end="47:36"><name pos:start="47:5" pos:end="47:20"><name pos:start="47:5" pos:end="47:11">zstream</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:20">next_in</name></name>   <operator pos:start="47:24" pos:end="47:24">=</operator> <name pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:30">avpkt</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:36">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:37"><expr pos:start="49:5" pos:end="49:36"><name pos:start="49:5" pos:end="49:21"><name pos:start="49:5" pos:end="49:11">zstream</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:21">avail_in</name></name>  <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:36"><name pos:start="49:26" pos:end="49:30">avpkt</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:36">size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:8">prev</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <name pos:start="53:12" pos:end="53:28"><name pos:start="53:12" pos:end="53:19">prev_pic</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">data</name><index pos:start="53:26" pos:end="53:28">[<expr pos:start="53:27" pos:end="53:27"><literal type="number" pos:start="53:27" pos:end="53:27">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:7">dst</name>  <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:23"><name pos:start="55:12" pos:end="55:14">pic</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:20">data</name><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><literal type="number" pos:start="55:22" pos:end="55:22">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" format="doxygen" pos:start="59:5" pos:end="65:7">/**

     * ZeroCodec has very simple interframe compression. If a value

     * is the same as the previous frame, set it to 0.

     */</comment>



    <if_stmt pos:start="69:5" pos:end="142:23"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:39">(<expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:13">avpkt</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:20">flags</name></name> <operator pos:start="69:22" pos:end="69:22">&amp;</operator> <name pos:start="69:24" pos:end="69:38">AV_PKT_FLAG_KEY</name></expr>)</condition> <block pos:start="69:41" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:43">

        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:11">pic</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:22">key_frame</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:43"><expr pos:start="73:9" pos:end="73:42"><name pos:start="73:9" pos:end="73:22"><name pos:start="73:9" pos:end="73:11">pic</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:22">pict_type</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:42">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="75:7" pos:end="142:23">else <block pos:start="75:12" pos:end="142:23">{<block_content pos:start="81:9" pos:end="142:23">





        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">pic</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">key_frame</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:11">pic</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">pict_type</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:42">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>




    <for pos:start="88:5" pos:end="142:23">for <control pos:start="88:9" pos:end="88:39">(<init pos:start="88:10" pos:end="88:15"><expr pos:start="88:10" pos:end="88:14"><name pos:start="88:10" pos:end="88:10">i</name> <operator pos:start="88:12" pos:end="88:12">=</operator> <literal type="number" pos:start="88:14" pos:end="88:14">0</literal></expr>;</init> <condition pos:start="88:17" pos:end="88:34"><expr pos:start="88:17" pos:end="88:33"><name pos:start="88:17" pos:end="88:17">i</name> <operator pos:start="88:19" pos:end="88:19">&lt;</operator> <name pos:start="88:21" pos:end="88:33"><name pos:start="88:21" pos:end="88:25">avctx</name><operator pos:start="88:26" pos:end="88:27">-&gt;</operator><name pos:start="88:28" pos:end="88:33">height</name></name></expr>;</condition> <incr pos:start="88:36" pos:end="88:38"><expr pos:start="88:36" pos:end="88:38"><name pos:start="88:36" pos:end="88:36">i</name><operator pos:start="88:37" pos:end="88:38">++</operator></expr></incr>)</control> <block pos:start="88:41" pos:end="142:23">{<block_content pos:start="90:9" pos:end="142:23">

        <expr_stmt pos:start="90:9" pos:end="90:33"><expr pos:start="90:9" pos:end="90:32"><name pos:start="90:9" pos:end="90:25"><name pos:start="90:9" pos:end="90:15">zstream</name><operator pos:start="90:16" pos:end="90:17">-&gt;</operator><name pos:start="90:18" pos:end="90:25">next_out</name></name>  <operator pos:start="90:28" pos:end="90:28">=</operator> <name pos:start="90:30" pos:end="90:32">dst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="92:9" pos:end="92:47"><expr pos:start="92:9" pos:end="92:46"><name pos:start="92:9" pos:end="92:26"><name pos:start="92:9" pos:end="92:15">zstream</name><operator pos:start="92:16" pos:end="92:17">-&gt;</operator><name pos:start="92:18" pos:end="92:26">avail_out</name></name> <operator pos:start="92:28" pos:end="92:28">=</operator> <name pos:start="92:30" pos:end="92:41"><name pos:start="92:30" pos:end="92:34">avctx</name><operator pos:start="92:35" pos:end="92:36">-&gt;</operator><name pos:start="92:37" pos:end="92:41">width</name></name> <operator pos:start="92:43" pos:end="92:44">&lt;&lt;</operator> <literal type="number" pos:start="92:46" pos:end="92:46">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="94:9" pos:end="94:46"><expr pos:start="94:9" pos:end="94:45"><name pos:start="94:9" pos:end="94:12">zret</name> <operator pos:start="94:14" pos:end="94:14">=</operator> <call pos:start="94:16" pos:end="94:45"><name pos:start="94:16" pos:end="94:22">inflate</name><argument_list pos:start="94:23" pos:end="94:45">(<argument pos:start="94:24" pos:end="94:30"><expr pos:start="94:24" pos:end="94:30"><name pos:start="94:24" pos:end="94:30">zstream</name></expr></argument>, <argument pos:start="94:33" pos:end="94:44"><expr pos:start="94:33" pos:end="94:44"><name pos:start="94:33" pos:end="94:44">Z_SYNC_FLUSH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="96:9" pos:end="142:23"><if pos:start="96:9" pos:end="142:23">if <condition pos:start="96:12" pos:end="96:49">(<expr pos:start="96:13" pos:end="96:48"><name pos:start="96:13" pos:end="96:16">zret</name> <operator pos:start="96:18" pos:end="96:19">!=</operator> <name pos:start="96:21" pos:end="96:24">Z_OK</name> <operator pos:start="96:26" pos:end="96:27">&amp;&amp;</operator> <name pos:start="96:29" pos:end="96:32">zret</name> <operator pos:start="96:34" pos:end="96:35">!=</operator> <name pos:start="96:37" pos:end="96:48">Z_STREAM_END</name></expr>)</condition> <block pos:start="96:51" pos:end="142:23">{<block_content pos:start="98:13" pos:end="142:23">

            <expr_stmt pos:start="98:13" pos:end="100:66"><expr pos:start="98:13" pos:end="100:65"><call pos:start="98:13" pos:end="100:65"><name pos:start="98:13" pos:end="98:18">av_log</name><argument_list pos:start="98:19" pos:end="100:65">(<argument pos:start="98:20" pos:end="98:24"><expr pos:start="98:20" pos:end="98:24"><name pos:start="98:20" pos:end="98:24">avctx</name></expr></argument>, <argument pos:start="98:27" pos:end="98:38"><expr pos:start="98:27" pos:end="98:38"><name pos:start="98:27" pos:end="98:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="100:20" pos:end="100:58"><expr pos:start="100:20" pos:end="100:58"><literal type="string" pos:start="100:20" pos:end="100:58">"Inflate failed with return code: %d\n"</literal></expr></argument>, <argument pos:start="100:61" pos:end="100:64"><expr pos:start="100:61" pos:end="100:64"><name pos:start="100:61" pos:end="100:64">zret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="102:13" pos:end="102:35">return <expr pos:start="102:20" pos:end="102:34"><call pos:start="102:20" pos:end="102:34"><name pos:start="102:20" pos:end="102:26">AVERROR</name><argument_list pos:start="102:27" pos:end="102:34">(<argument pos:start="102:28" pos:end="102:33"><expr pos:start="102:28" pos:end="102:33"><name pos:start="102:28" pos:end="102:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>




        <if_stmt pos:start="107:9" pos:end="111:45"><if pos:start="107:9" pos:end="111:45">if <condition pos:start="107:12" pos:end="107:46">(<expr pos:start="107:13" pos:end="107:45"><operator pos:start="107:13" pos:end="107:13">!</operator><operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:26"><name pos:start="107:15" pos:end="107:19">avpkt</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:26">flags</name></name> <operator pos:start="107:28" pos:end="107:28">&amp;</operator> <name pos:start="107:30" pos:end="107:44">AV_PKT_FLAG_KEY</name><operator pos:start="107:45" pos:end="107:45">)</operator></expr>)</condition><block type="pseudo" pos:start="109:13" pos:end="111:45"><block_content pos:start="109:13" pos:end="111:45">

            <for pos:start="109:13" pos:end="111:45">for <control pos:start="109:17" pos:end="109:51">(<init pos:start="109:18" pos:end="109:23"><expr pos:start="109:18" pos:end="109:22"><name pos:start="109:18" pos:end="109:18">j</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">0</literal></expr>;</init> <condition pos:start="109:25" pos:end="109:46"><expr pos:start="109:25" pos:end="109:45"><name pos:start="109:25" pos:end="109:25">j</name> <operator pos:start="109:27" pos:end="109:27">&lt;</operator> <name pos:start="109:29" pos:end="109:40"><name pos:start="109:29" pos:end="109:33">avctx</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:40">width</name></name> <operator pos:start="109:42" pos:end="109:43">&lt;&lt;</operator> <literal type="number" pos:start="109:45" pos:end="109:45">1</literal></expr>;</condition> <incr pos:start="109:48" pos:end="109:50"><expr pos:start="109:48" pos:end="109:50"><name pos:start="109:48" pos:end="109:48">j</name><operator pos:start="109:49" pos:end="109:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="111:17" pos:end="111:45"><block_content pos:start="111:17" pos:end="111:45">

                <expr_stmt pos:start="111:17" pos:end="111:45"><expr pos:start="111:17" pos:end="111:44"><name pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:19">dst</name><index pos:start="111:20" pos:end="111:22">[<expr pos:start="111:21" pos:end="111:21"><name pos:start="111:21" pos:end="111:21">j</name></expr>]</index></name> <operator pos:start="111:24" pos:end="111:25">+=</operator> <name pos:start="111:27" pos:end="111:33"><name pos:start="111:27" pos:end="111:30">prev</name><index pos:start="111:31" pos:end="111:33">[<expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">j</name></expr>]</index></name> <operator pos:start="111:35" pos:end="111:35">&amp;</operator> <operator pos:start="111:37" pos:end="111:37">-</operator><operator pos:start="111:38" pos:end="111:38">!</operator><name pos:start="111:39" pos:end="111:44"><name pos:start="111:39" pos:end="111:41">dst</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><name pos:start="111:43" pos:end="111:43">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:38"><expr pos:start="115:9" pos:end="115:37"><name pos:start="115:9" pos:end="115:12">prev</name> <operator pos:start="115:14" pos:end="115:15">+=</operator> <name pos:start="115:17" pos:end="115:37"><name pos:start="115:17" pos:end="115:24">prev_pic</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:34">linesize</name><index pos:start="115:35" pos:end="115:37">[<expr pos:start="115:36" pos:end="115:36"><literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:33"><expr pos:start="117:9" pos:end="117:32"><name pos:start="117:9" pos:end="117:11">dst</name>  <operator pos:start="117:14" pos:end="117:15">+=</operator> <name pos:start="117:17" pos:end="117:32"><name pos:start="117:17" pos:end="117:19">pic</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:29">linesize</name><index pos:start="117:30" pos:end="117:32">[<expr pos:start="117:31" pos:end="117:31"><literal type="number" pos:start="117:31" pos:end="117:31">0</literal></expr>]</index></name></expr>;</expr_stmt>




    <comment type="block" pos:start="122:5" pos:end="122:48">/* Release the previous buffer if need be */</comment>

    <if_stmt pos:start="124:5" pos:end="126:47"><if pos:start="124:5" pos:end="126:47">if <condition pos:start="124:8" pos:end="124:26">(<expr pos:start="124:9" pos:end="124:25"><name pos:start="124:9" pos:end="124:25"><name pos:start="124:9" pos:end="124:16">prev_pic</name><operator pos:start="124:17" pos:end="124:18">-&gt;</operator><name pos:start="124:19" pos:end="124:22">data</name><index pos:start="124:23" pos:end="124:25">[<expr pos:start="124:24" pos:end="124:24"><literal type="number" pos:start="124:24" pos:end="124:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="126:9" pos:end="126:47"><block_content pos:start="126:9" pos:end="126:47">

        <expr_stmt pos:start="126:9" pos:end="126:47"><expr pos:start="126:9" pos:end="126:46"><call pos:start="126:9" pos:end="126:46"><name pos:start="126:9" pos:end="126:29"><name pos:start="126:9" pos:end="126:13">avctx</name><operator pos:start="126:14" pos:end="126:15">-&gt;</operator><name pos:start="126:16" pos:end="126:29">release_buffer</name></name><argument_list pos:start="126:30" pos:end="126:46">(<argument pos:start="126:31" pos:end="126:35"><expr pos:start="126:31" pos:end="126:35"><name pos:start="126:31" pos:end="126:35">avctx</name></expr></argument>, <argument pos:start="126:38" pos:end="126:45"><expr pos:start="126:38" pos:end="126:45"><name pos:start="126:38" pos:end="126:45">prev_pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="130:5" pos:end="130:49">/* Store the previouse frame for use later */</comment>

    <expr_stmt pos:start="132:5" pos:end="132:21"><expr pos:start="132:5" pos:end="132:20"><operator pos:start="132:5" pos:end="132:5">*</operator><name pos:start="132:6" pos:end="132:13">prev_pic</name> <operator pos:start="132:15" pos:end="132:15">=</operator> <operator pos:start="132:17" pos:end="132:17">*</operator><name pos:start="132:18" pos:end="132:20">pic</name></expr>;</expr_stmt>



    <expr_stmt pos:start="136:5" pos:end="136:33"><expr pos:start="136:5" pos:end="136:32"><operator pos:start="136:5" pos:end="136:5">*</operator><name pos:start="136:6" pos:end="136:14">data_size</name> <operator pos:start="136:16" pos:end="136:16">=</operator> <sizeof pos:start="136:18" pos:end="136:32">sizeof<argument_list pos:start="136:24" pos:end="136:32">(<argument pos:start="136:25" pos:end="136:31"><expr pos:start="136:25" pos:end="136:31"><name pos:start="136:25" pos:end="136:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="138:5" pos:end="138:28"><expr pos:start="138:5" pos:end="138:27"><operator pos:start="138:5" pos:end="138:5">*</operator><operator pos:start="138:6" pos:end="138:6">(</operator><name pos:start="138:7" pos:end="138:13">AVFrame</name> <operator pos:start="138:15" pos:end="138:15">*</operator><operator pos:start="138:16" pos:end="138:16">)</operator><name pos:start="138:17" pos:end="138:20">data</name> <operator pos:start="138:22" pos:end="138:22">=</operator> <operator pos:start="138:24" pos:end="138:24">*</operator><name pos:start="138:25" pos:end="138:27">pic</name></expr>;</expr_stmt>



    <return pos:start="142:5" pos:end="142:23">return <expr pos:start="142:12" pos:end="142:22"><name pos:start="142:12" pos:end="142:22"><name pos:start="142:12" pos:end="142:16">avpkt</name><operator pos:start="142:17" pos:end="142:18">-&gt;</operator><name pos:start="142:19" pos:end="142:22">size</name></name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
