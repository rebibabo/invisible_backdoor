<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3374.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">vhost_client_migration_log</name><parameter_list pos:start="1:38" pos:end="3:49">(<parameter pos:start="1:39" pos:end="1:65"><decl pos:start="1:39" pos:end="1:65"><type pos:start="1:39" pos:end="1:65"><name pos:start="1:39" pos:end="1:57">CPUPhysMemoryClient</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">client</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:48"><decl pos:start="3:39" pos:end="3:48"><type pos:start="3:39" pos:end="3:48"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:48">enable</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:13">

    <decl_stmt pos:start="7:5" pos:end="7:75"><decl pos:start="7:5" pos:end="7:74"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:20">vhost_dev</name></name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">dev</name> <init pos:start="7:27" pos:end="7:74">= <expr pos:start="7:29" pos:end="7:74"><call pos:start="7:29" pos:end="7:74"><name pos:start="7:29" pos:end="7:40">container_of</name><argument_list pos:start="7:41" pos:end="7:74">(<argument pos:start="7:42" pos:end="7:47"><expr pos:start="7:42" pos:end="7:47"><name pos:start="7:42" pos:end="7:47">client</name></expr></argument>, <argument pos:start="7:50" pos:end="7:65"><expr pos:start="7:50" pos:end="7:65">struct <name pos:start="7:57" pos:end="7:65">vhost_dev</name></expr></argument>, <argument pos:start="7:68" pos:end="7:73"><expr pos:start="7:68" pos:end="7:73"><name pos:start="7:68" pos:end="7:73">client</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><operator pos:start="11:9" pos:end="11:9">!</operator><operator pos:start="11:10" pos:end="11:10">!</operator><name pos:start="11:11" pos:end="11:16">enable</name> <operator pos:start="11:18" pos:end="11:19">==</operator> <name pos:start="11:21" pos:end="11:36"><name pos:start="11:21" pos:end="11:23">dev</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:36">log_enabled</name></name></expr>)</condition> <block pos:start="11:39" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:22">(<expr pos:start="17:9" pos:end="17:21"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:12">dev</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:21">started</name></name></expr>)</condition> <block pos:start="17:24" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:34"><expr pos:start="19:9" pos:end="19:33"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:11">dev</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:24">log_enabled</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:33">enable</name></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="57:5"><if pos:start="25:5" pos:end="45:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:15">enable</name></expr>)</condition> <block pos:start="25:18" pos:end="45:5">{<block_content pos:start="27:9" pos:end="43:26">

        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:9">r</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:29">vhost_dev_set_log</name><argument_list pos:start="27:30" pos:end="27:41">(<argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">dev</name></expr></argument>, <argument pos:start="27:36" pos:end="27:40"><expr pos:start="27:36" pos:end="27:40"><name pos:start="27:36" pos:end="27:40">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:18">(<expr pos:start="29:13" pos:end="29:17"><name pos:start="29:13" pos:end="29:13">r</name> <operator pos:start="29:15" pos:end="29:15">&lt;</operator> <literal type="number" pos:start="29:17" pos:end="29:17">0</literal></expr>)</condition> <block pos:start="29:20" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:21">

            <return pos:start="31:13" pos:end="31:21">return <expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">dev</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:20">log</name></name></expr>)</condition> <block pos:start="35:23" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:29">

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><call pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:18">g_free</name><argument_list pos:start="37:19" pos:end="37:28">(<argument pos:start="37:20" pos:end="37:27"><expr pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:22">dev</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:27">log</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">dev</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">log</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:23">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">dev</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:21">log_size</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="number" pos:start="43:25" pos:end="43:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="57:5">else <block pos:start="45:12" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><call pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:28">vhost_dev_log_resize</name><argument_list pos:start="47:29" pos:end="47:58">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">dev</name></expr></argument>, <argument pos:start="47:35" pos:end="47:57"><expr pos:start="47:35" pos:end="47:57"><call pos:start="47:35" pos:end="47:57"><name pos:start="47:35" pos:end="47:52">vhost_get_log_size</name><argument_list pos:start="47:53" pos:end="47:57">(<argument pos:start="47:54" pos:end="47:56"><expr pos:start="47:54" pos:end="47:56"><name pos:start="47:54" pos:end="47:56">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:41"><expr pos:start="49:9" pos:end="49:40"><name pos:start="49:9" pos:end="49:9">r</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:40"><name pos:start="49:13" pos:end="49:29">vhost_dev_set_log</name><argument_list pos:start="49:30" pos:end="49:40">(<argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">dev</name></expr></argument>, <argument pos:start="49:36" pos:end="49:39"><expr pos:start="49:36" pos:end="49:39"><name pos:start="49:36" pos:end="49:39">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:18">(<expr pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:13">r</name> <operator pos:start="51:15" pos:end="51:15">&lt;</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>)</condition> <block pos:start="51:20" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:21">

            <return pos:start="53:13" pos:end="53:21">return <expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">r</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:7">dev</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:20">log_enabled</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:29">enable</name></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
