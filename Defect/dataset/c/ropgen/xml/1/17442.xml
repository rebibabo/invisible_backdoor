<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17442.c" pos:tabs="8"><function pos:start="1:1" pos:end="223:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">gem_write</name><parameter_list pos:start="1:22" pos:end="3:22">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:34">opaque</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:42">hwaddr</name></type> <name pos:start="1:44" pos:end="1:49">offset</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:59">uint64_t</name></type> <name pos:start="1:61" pos:end="1:63">val</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:16">unsigned</name></type> <name pos:start="3:18" pos:end="3:21">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="223:1">{<block_content pos:start="7:5" pos:end="221:50">

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CadenceGEMState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:50">= <expr pos:start="7:26" pos:end="7:50"><operator pos:start="7:26" pos:end="7:26">(</operator><name pos:start="7:27" pos:end="7:41">CadenceGEMState</name> <operator pos:start="7:43" pos:end="7:43">*</operator><operator pos:start="7:44" pos:end="7:44">)</operator><name pos:start="7:45" pos:end="7:50">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:21">readonly</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:79"><expr pos:start="15:5" pos:end="15:78"><call pos:start="15:5" pos:end="15:78"><name pos:start="15:5" pos:end="15:12">DB_PRINT</name><argument_list pos:start="15:13" pos:end="15:78">(<argument pos:start="15:14" pos:end="15:44"><expr pos:start="15:14" pos:end="15:44"><literal type="string" pos:start="15:14" pos:end="15:44">"offset: 0x%04x write: 0x%08x "</literal></expr></argument>, <argument pos:start="15:47" pos:end="15:62"><expr pos:start="15:47" pos:end="15:62"><operator pos:start="15:47" pos:end="15:47">(</operator><name pos:start="15:48" pos:end="15:55">unsigned</name><operator pos:start="15:56" pos:end="15:56">)</operator><name pos:start="15:57" pos:end="15:62">offset</name></expr></argument>, <argument pos:start="15:65" pos:end="15:77"><expr pos:start="15:65" pos:end="15:77"><operator pos:start="15:65" pos:end="15:65">(</operator><name pos:start="15:66" pos:end="15:73">unsigned</name><operator pos:start="15:74" pos:end="15:74">)</operator><name pos:start="15:75" pos:end="15:77">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:10">offset</name> <operator pos:start="17:12" pos:end="17:14">&gt;&gt;=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:56">/* Squash bits which are read only in write value */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">val</name> <operator pos:start="23:9" pos:end="23:10">&amp;=</operator> <operator pos:start="23:12" pos:end="23:12">~</operator><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:31"><name pos:start="23:14" pos:end="23:14">s</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:23">regs_ro</name><index pos:start="23:24" pos:end="23:31">[<expr pos:start="23:25" pos:end="23:30"><name pos:start="23:25" pos:end="23:30">offset</name></expr>]</index></name><operator pos:start="23:32" pos:end="23:32">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="25:5" pos:end="25:70">/* Preserve (only) bits which are read only and wtc in register */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:76"><expr pos:start="27:5" pos:end="27:75"><name pos:start="27:5" pos:end="27:12">readonly</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:30"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:22">regs</name><index pos:start="27:23" pos:end="27:30">[<expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">offset</name></expr>]</index></name> <operator pos:start="27:32" pos:end="27:32">&amp;</operator> <operator pos:start="27:34" pos:end="27:34">(</operator><name pos:start="27:35" pos:end="27:52"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:44">regs_ro</name><index pos:start="27:45" pos:end="27:52">[<expr pos:start="27:46" pos:end="27:51"><name pos:start="27:46" pos:end="27:51">offset</name></expr>]</index></name> <operator pos:start="27:54" pos:end="27:54">|</operator> <name pos:start="27:56" pos:end="27:74"><name pos:start="27:56" pos:end="27:56">s</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:66">regs_w1c</name><index pos:start="27:67" pos:end="27:74">[<expr pos:start="27:68" pos:end="27:73"><name pos:start="27:68" pos:end="27:73">offset</name></expr>]</index></name><operator pos:start="27:75" pos:end="27:75">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:46">/* Copy register write to backing store */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">regs</name><index pos:start="33:12" pos:end="33:19">[<expr pos:start="33:13" pos:end="33:18"><name pos:start="33:13" pos:end="33:18">offset</name></expr>]</index></name> <operator pos:start="33:21" pos:end="33:21">=</operator> <operator pos:start="33:23" pos:end="33:23">(</operator><name pos:start="33:24" pos:end="33:26">val</name> <operator pos:start="33:28" pos:end="33:28">&amp;</operator> <operator pos:start="33:30" pos:end="33:30">~</operator><name pos:start="33:31" pos:end="33:49"><name pos:start="33:31" pos:end="33:31">s</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:41">regs_w1c</name><index pos:start="33:42" pos:end="33:49">[<expr pos:start="33:43" pos:end="33:48"><name pos:start="33:43" pos:end="33:48">offset</name></expr>]</index></name><operator pos:start="33:50" pos:end="33:50">)</operator> <operator pos:start="33:52" pos:end="33:52">|</operator> <name pos:start="33:54" pos:end="33:61">readonly</name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:16">/* do w1c */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:52"><expr pos:start="39:5" pos:end="39:51"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:11">regs</name><index pos:start="39:12" pos:end="39:19">[<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">offset</name></expr>]</index></name> <operator pos:start="39:21" pos:end="39:22">&amp;=</operator> <operator pos:start="39:24" pos:end="39:24">~</operator><operator pos:start="39:25" pos:end="39:25">(</operator><name pos:start="39:26" pos:end="39:44"><name pos:start="39:26" pos:end="39:26">s</name><operator pos:start="39:27" pos:end="39:28">-&gt;</operator><name pos:start="39:29" pos:end="39:36">regs_w1c</name><index pos:start="39:37" pos:end="39:44">[<expr pos:start="39:38" pos:end="39:43"><name pos:start="39:38" pos:end="39:43">offset</name></expr>]</index></name> <operator pos:start="39:46" pos:end="39:46">&amp;</operator> <name pos:start="39:48" pos:end="39:50">val</name><operator pos:start="39:51" pos:end="39:51">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:44">/* Handle register write side effects */</comment>

    <switch pos:start="45:5" pos:end="217:5">switch <condition pos:start="45:12" pos:end="45:19">(<expr pos:start="45:13" pos:end="45:18"><name pos:start="45:13" pos:end="45:18">offset</name></expr>)</condition> <block pos:start="45:21" pos:end="217:5">{<block_content pos:start="47:5" pos:end="215:14">

    <case pos:start="47:5" pos:end="47:20">case <expr pos:start="47:10" pos:end="47:19"><name pos:start="47:10" pos:end="47:19">GEM_NWCTRL</name></expr>:</case>

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:35">(<expr pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:15">val</name> <operator pos:start="49:17" pos:end="49:17">&amp;</operator> <name pos:start="49:19" pos:end="49:34">GEM_NWCTRL_RXENA</name></expr>)</condition> <block pos:start="49:37" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:13">

            <for pos:start="51:13" pos:end="55:13">for <control pos:start="51:17" pos:end="51:56">(<init pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">i</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>;</init> <condition pos:start="51:25" pos:end="51:51"><expr pos:start="51:25" pos:end="51:50"><name pos:start="51:25" pos:end="51:25">i</name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <name pos:start="51:29" pos:end="51:50"><name pos:start="51:29" pos:end="51:29">s</name><operator pos:start="51:30" pos:end="51:31">-&gt;</operator><name pos:start="51:32" pos:end="51:50">num_priority_queues</name></name></expr>;</condition> <incr pos:start="51:53" pos:end="51:55"><expr pos:start="51:53" pos:end="51:55"><operator pos:start="51:53" pos:end="51:54">++</operator><name pos:start="51:55" pos:end="51:55">i</name></expr></incr>)</control> <block pos:start="51:58" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:38">

                <expr_stmt pos:start="53:17" pos:end="53:38"><expr pos:start="53:17" pos:end="53:37"><call pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:31">gem_get_rx_desc</name><argument_list pos:start="53:32" pos:end="53:37">(<argument pos:start="53:33" pos:end="53:33"><expr pos:start="53:33" pos:end="53:33"><name pos:start="53:33" pos:end="53:33">s</name></expr></argument>, <argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:37">(<expr pos:start="59:13" pos:end="59:36"><name pos:start="59:13" pos:end="59:15">val</name> <operator pos:start="59:17" pos:end="59:17">&amp;</operator> <name pos:start="59:19" pos:end="59:36">GEM_NWCTRL_TXSTART</name></expr>)</condition> <block pos:start="59:39" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:28">

            <expr_stmt pos:start="61:13" pos:end="61:28"><expr pos:start="61:13" pos:end="61:27"><call pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:24">gem_transmit</name><argument_list pos:start="61:25" pos:end="61:27">(<argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><name pos:start="61:26" pos:end="61:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="75:9"><if pos:start="65:9" pos:end="75:9">if <condition pos:start="65:12" pos:end="65:38">(<expr pos:start="65:13" pos:end="65:37"><operator pos:start="65:13" pos:end="65:13">!</operator><operator pos:start="65:14" pos:end="65:14">(</operator><name pos:start="65:15" pos:end="65:17">val</name> <operator pos:start="65:19" pos:end="65:19">&amp;</operator> <name pos:start="65:21" pos:end="65:36">GEM_NWCTRL_TXENA</name><operator pos:start="65:37" pos:end="65:37">)</operator></expr>)</condition> <block pos:start="65:40" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:13">

            <comment type="block" pos:start="67:13" pos:end="67:61">/* Reset to start of Q when transmit disabled. */</comment>

            <for pos:start="69:13" pos:end="73:13">for <control pos:start="69:17" pos:end="69:56">(<init pos:start="69:18" pos:end="69:23"><expr pos:start="69:18" pos:end="69:22"><name pos:start="69:18" pos:end="69:18">i</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>;</init> <condition pos:start="69:25" pos:end="69:51"><expr pos:start="69:25" pos:end="69:50"><name pos:start="69:25" pos:end="69:25">i</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <name pos:start="69:29" pos:end="69:50"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:50">num_priority_queues</name></name></expr>;</condition> <incr pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><name pos:start="69:53" pos:end="69:53">i</name><operator pos:start="69:54" pos:end="69:55">++</operator></expr></incr>)</control> <block pos:start="69:58" pos:end="73:13">{<block_content pos:start="71:17" pos:end="71:58">

                <expr_stmt pos:start="71:17" pos:end="71:58"><expr pos:start="71:17" pos:end="71:57"><name pos:start="71:17" pos:end="71:34"><name pos:start="71:17" pos:end="71:17">s</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:31">tx_desc_addr</name><index pos:start="71:32" pos:end="71:34">[<expr pos:start="71:33" pos:end="71:33"><name pos:start="71:33" pos:end="71:33">i</name></expr>]</index></name> <operator pos:start="71:36" pos:end="71:36">=</operator> <name pos:start="71:38" pos:end="71:57"><name pos:start="71:38" pos:end="71:38">s</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:44">regs</name><index pos:start="71:45" pos:end="71:57">[<expr pos:start="71:46" pos:end="71:56"><name pos:start="71:46" pos:end="71:56">GEM_TXQBASE</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="77:9" pos:end="81:9"><if pos:start="77:9" pos:end="81:9">if <condition pos:start="77:12" pos:end="77:52">(<expr pos:start="77:13" pos:end="77:51"><call pos:start="77:13" pos:end="77:51"><name pos:start="77:13" pos:end="77:27">gem_can_receive</name><argument_list pos:start="77:28" pos:end="77:51">(<argument pos:start="77:29" pos:end="77:50"><expr pos:start="77:29" pos:end="77:50"><call pos:start="77:29" pos:end="77:50"><name pos:start="77:29" pos:end="77:42">qemu_get_queue</name><argument_list pos:start="77:43" pos:end="77:50">(<argument pos:start="77:44" pos:end="77:49"><expr pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:49"><name pos:start="77:44" pos:end="77:44">s</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:49">nic</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:54" pos:end="81:9">{<block_content pos:start="79:13" pos:end="79:62">

            <expr_stmt pos:start="79:13" pos:end="79:62"><expr pos:start="79:13" pos:end="79:61"><call pos:start="79:13" pos:end="79:61"><name pos:start="79:13" pos:end="79:37">qemu_flush_queued_packets</name><argument_list pos:start="79:38" pos:end="79:61">(<argument pos:start="79:39" pos:end="79:60"><expr pos:start="79:39" pos:end="79:60"><call pos:start="79:39" pos:end="79:60"><name pos:start="79:39" pos:end="79:52">qemu_get_queue</name><argument_list pos:start="79:53" pos:end="79:60">(<argument pos:start="79:54" pos:end="79:59"><expr pos:start="79:54" pos:end="79:59"><name pos:start="79:54" pos:end="79:59"><name pos:start="79:54" pos:end="79:54">s</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:59">nic</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>



    <case pos:start="87:5" pos:end="87:22">case <expr pos:start="87:10" pos:end="87:21"><name pos:start="87:10" pos:end="87:21">GEM_TXSTATUS</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:33"><expr pos:start="89:9" pos:end="89:32"><call pos:start="89:9" pos:end="89:32"><name pos:start="89:9" pos:end="89:29">gem_update_int_status</name><argument_list pos:start="89:30" pos:end="89:32">(<argument pos:start="89:31" pos:end="89:31"><expr pos:start="89:31" pos:end="89:31"><name pos:start="89:31" pos:end="89:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:21">case <expr pos:start="93:10" pos:end="93:20"><name pos:start="93:10" pos:end="93:20">GEM_RXQBASE</name></expr>:</case>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">rx_desc_addr</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><literal type="number" pos:start="95:25" pos:end="95:25">0</literal></expr>]</index></name> <operator pos:start="95:28" pos:end="95:28">=</operator> <name pos:start="95:30" pos:end="95:32">val</name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:52">case <expr pos:start="99:10" pos:end="99:51"><name pos:start="99:10" pos:end="99:27">GEM_RECEIVE_Q1_PTR</name> <operator pos:start="99:29" pos:end="99:31">...</operator> <name pos:start="99:33" pos:end="99:51">GEM_RECEIVE_Q15_PTR</name></expr>:</case>

        <expr_stmt pos:start="101:9" pos:end="101:63"><expr pos:start="101:9" pos:end="101:62"><name pos:start="101:9" pos:end="101:56"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:23">rx_desc_addr</name><index pos:start="101:24" pos:end="101:56">[<expr pos:start="101:25" pos:end="101:55"><name pos:start="101:25" pos:end="101:30">offset</name> <operator pos:start="101:32" pos:end="101:32">-</operator> <name pos:start="101:34" pos:end="101:51">GEM_RECEIVE_Q1_PTR</name> <operator pos:start="101:53" pos:end="101:53">+</operator> <literal type="number" pos:start="101:55" pos:end="101:55">1</literal></expr>]</index></name> <operator pos:start="101:58" pos:end="101:58">=</operator> <name pos:start="101:60" pos:end="101:62">val</name></expr>;</expr_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:21">case <expr pos:start="105:10" pos:end="105:20"><name pos:start="105:10" pos:end="105:20">GEM_TXQBASE</name></expr>:</case>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:26"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:23">tx_desc_addr</name><index pos:start="107:24" pos:end="107:26">[<expr pos:start="107:25" pos:end="107:25"><literal type="number" pos:start="107:25" pos:end="107:25">0</literal></expr>]</index></name> <operator pos:start="107:28" pos:end="107:28">=</operator> <name pos:start="107:30" pos:end="107:32">val</name></expr>;</expr_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:54">case <expr pos:start="111:10" pos:end="111:53"><name pos:start="111:10" pos:end="111:28">GEM_TRANSMIT_Q1_PTR</name> <operator pos:start="111:30" pos:end="111:32">...</operator> <name pos:start="111:34" pos:end="111:53">GEM_TRANSMIT_Q15_PTR</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:64"><expr pos:start="113:9" pos:end="113:63"><name pos:start="113:9" pos:end="113:57"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:23">tx_desc_addr</name><index pos:start="113:24" pos:end="113:57">[<expr pos:start="113:25" pos:end="113:56"><name pos:start="113:25" pos:end="113:30">offset</name> <operator pos:start="113:32" pos:end="113:32">-</operator> <name pos:start="113:34" pos:end="113:52">GEM_TRANSMIT_Q1_PTR</name> <operator pos:start="113:54" pos:end="113:54">+</operator> <literal type="number" pos:start="113:56" pos:end="113:56">1</literal></expr>]</index></name> <operator pos:start="113:59" pos:end="113:59">=</operator> <name pos:start="113:61" pos:end="113:63">val</name></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:22">case <expr pos:start="117:10" pos:end="117:21"><name pos:start="117:10" pos:end="117:21">GEM_RXSTATUS</name></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:33"><expr pos:start="119:9" pos:end="119:32"><call pos:start="119:9" pos:end="119:32"><name pos:start="119:9" pos:end="119:29">gem_update_int_status</name><argument_list pos:start="119:30" pos:end="119:32">(<argument pos:start="119:31" pos:end="119:31"><expr pos:start="119:31" pos:end="119:31"><name pos:start="119:31" pos:end="119:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:17">case <expr pos:start="123:10" pos:end="123:16"><name pos:start="123:10" pos:end="123:16">GEM_IER</name></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:24"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:15">regs</name><index pos:start="125:16" pos:end="125:24">[<expr pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:23">GEM_IMR</name></expr>]</index></name> <operator pos:start="125:26" pos:end="125:27">&amp;=</operator> <operator pos:start="125:29" pos:end="125:29">~</operator><name pos:start="125:30" pos:end="125:32">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><call pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:29">gem_update_int_status</name><argument_list pos:start="127:30" pos:end="127:32">(<argument pos:start="127:31" pos:end="127:31"><expr pos:start="127:31" pos:end="127:31"><name pos:start="127:31" pos:end="127:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:49">case <expr pos:start="131:10" pos:end="131:48"><name pos:start="131:10" pos:end="131:26">GEM_INT_Q1_ENABLE</name> <operator pos:start="131:28" pos:end="131:30">...</operator> <name pos:start="131:32" pos:end="131:48">GEM_INT_Q7_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="133:9" pos:end="133:70"><expr pos:start="133:9" pos:end="133:69"><name pos:start="133:9" pos:end="133:61"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:15">regs</name><index pos:start="133:16" pos:end="133:61">[<expr pos:start="133:17" pos:end="133:60"><name pos:start="133:17" pos:end="133:31">GEM_INT_Q1_MASK</name> <operator pos:start="133:33" pos:end="133:33">+</operator> <name pos:start="133:35" pos:end="133:40">offset</name> <operator pos:start="133:42" pos:end="133:42">-</operator> <name pos:start="133:44" pos:end="133:60">GEM_INT_Q1_ENABLE</name></expr>]</index></name> <operator pos:start="133:63" pos:end="133:64">&amp;=</operator> <operator pos:start="133:66" pos:end="133:66">~</operator><name pos:start="133:67" pos:end="133:69">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:33"><expr pos:start="135:9" pos:end="135:32"><call pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:29">gem_update_int_status</name><argument_list pos:start="135:30" pos:end="135:32">(<argument pos:start="135:31" pos:end="135:31"><expr pos:start="135:31" pos:end="135:31"><name pos:start="135:31" pos:end="135:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="137:9" pos:end="137:14">break;</break>

    <case pos:start="139:5" pos:end="139:50">case <expr pos:start="139:10" pos:end="139:49"><name pos:start="139:10" pos:end="139:26">GEM_INT_Q8_ENABLE</name> <operator pos:start="139:28" pos:end="139:30">...</operator> <name pos:start="139:32" pos:end="139:49">GEM_INT_Q15_ENABLE</name></expr>:</case>

        <expr_stmt pos:start="141:9" pos:end="141:70"><expr pos:start="141:9" pos:end="141:69"><name pos:start="141:9" pos:end="141:61"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:15">regs</name><index pos:start="141:16" pos:end="141:61">[<expr pos:start="141:17" pos:end="141:60"><name pos:start="141:17" pos:end="141:31">GEM_INT_Q8_MASK</name> <operator pos:start="141:33" pos:end="141:33">+</operator> <name pos:start="141:35" pos:end="141:40">offset</name> <operator pos:start="141:42" pos:end="141:42">-</operator> <name pos:start="141:44" pos:end="141:60">GEM_INT_Q8_ENABLE</name></expr>]</index></name> <operator pos:start="141:63" pos:end="141:64">&amp;=</operator> <operator pos:start="141:66" pos:end="141:66">~</operator><name pos:start="141:67" pos:end="141:69">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:33"><expr pos:start="143:9" pos:end="143:32"><call pos:start="143:9" pos:end="143:32"><name pos:start="143:9" pos:end="143:29">gem_update_int_status</name><argument_list pos:start="143:30" pos:end="143:32">(<argument pos:start="143:31" pos:end="143:31"><expr pos:start="143:31" pos:end="143:31"><name pos:start="143:31" pos:end="143:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="145:9" pos:end="145:14">break;</break>

    <case pos:start="147:5" pos:end="147:17">case <expr pos:start="147:10" pos:end="147:16"><name pos:start="147:10" pos:end="147:16">GEM_IDR</name></expr>:</case>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:15">regs</name><index pos:start="149:16" pos:end="149:24">[<expr pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:23">GEM_IMR</name></expr>]</index></name> <operator pos:start="149:26" pos:end="149:27">|=</operator> <name pos:start="149:29" pos:end="149:31">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><call pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:29">gem_update_int_status</name><argument_list pos:start="151:30" pos:end="151:32">(<argument pos:start="151:31" pos:end="151:31"><expr pos:start="151:31" pos:end="151:31"><name pos:start="151:31" pos:end="151:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:51">case <expr pos:start="155:10" pos:end="155:50"><name pos:start="155:10" pos:end="155:27">GEM_INT_Q1_DISABLE</name> <operator pos:start="155:29" pos:end="155:31">...</operator> <name pos:start="155:33" pos:end="155:50">GEM_INT_Q7_DISABLE</name></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:70"><expr pos:start="157:9" pos:end="157:69"><name pos:start="157:9" pos:end="157:62"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:15">regs</name><index pos:start="157:16" pos:end="157:62">[<expr pos:start="157:17" pos:end="157:61"><name pos:start="157:17" pos:end="157:31">GEM_INT_Q1_MASK</name> <operator pos:start="157:33" pos:end="157:33">+</operator> <name pos:start="157:35" pos:end="157:40">offset</name> <operator pos:start="157:42" pos:end="157:42">-</operator> <name pos:start="157:44" pos:end="157:61">GEM_INT_Q1_DISABLE</name></expr>]</index></name> <operator pos:start="157:64" pos:end="157:65">|=</operator> <name pos:start="157:67" pos:end="157:69">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:33"><expr pos:start="159:9" pos:end="159:32"><call pos:start="159:9" pos:end="159:32"><name pos:start="159:9" pos:end="159:29">gem_update_int_status</name><argument_list pos:start="159:30" pos:end="159:32">(<argument pos:start="159:31" pos:end="159:31"><expr pos:start="159:31" pos:end="159:31"><name pos:start="159:31" pos:end="159:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <case pos:start="163:5" pos:end="163:52">case <expr pos:start="163:10" pos:end="163:51"><name pos:start="163:10" pos:end="163:27">GEM_INT_Q8_DISABLE</name> <operator pos:start="163:29" pos:end="163:31">...</operator> <name pos:start="163:33" pos:end="163:51">GEM_INT_Q15_DISABLE</name></expr>:</case>

        <expr_stmt pos:start="165:9" pos:end="165:70"><expr pos:start="165:9" pos:end="165:69"><name pos:start="165:9" pos:end="165:62"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:15">regs</name><index pos:start="165:16" pos:end="165:62">[<expr pos:start="165:17" pos:end="165:61"><name pos:start="165:17" pos:end="165:31">GEM_INT_Q8_MASK</name> <operator pos:start="165:33" pos:end="165:33">+</operator> <name pos:start="165:35" pos:end="165:40">offset</name> <operator pos:start="165:42" pos:end="165:42">-</operator> <name pos:start="165:44" pos:end="165:61">GEM_INT_Q8_DISABLE</name></expr>]</index></name> <operator pos:start="165:64" pos:end="165:65">|=</operator> <name pos:start="165:67" pos:end="165:69">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:33"><expr pos:start="167:9" pos:end="167:32"><call pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:29">gem_update_int_status</name><argument_list pos:start="167:30" pos:end="167:32">(<argument pos:start="167:31" pos:end="167:31"><expr pos:start="167:31" pos:end="167:31"><name pos:start="167:31" pos:end="167:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="169:9" pos:end="169:14">break;</break>

    <case pos:start="171:5" pos:end="171:23">case <expr pos:start="171:10" pos:end="171:22"><name pos:start="171:10" pos:end="171:22">GEM_SPADDR1LO</name></expr>:</case>

    <case pos:start="173:5" pos:end="173:23">case <expr pos:start="173:10" pos:end="173:22"><name pos:start="173:10" pos:end="173:22">GEM_SPADDR2LO</name></expr>:</case>

    <case pos:start="175:5" pos:end="175:23">case <expr pos:start="175:10" pos:end="175:22"><name pos:start="175:10" pos:end="175:22">GEM_SPADDR3LO</name></expr>:</case>

    <case pos:start="177:5" pos:end="177:23">case <expr pos:start="177:10" pos:end="177:22"><name pos:start="177:10" pos:end="177:22">GEM_SPADDR4LO</name></expr>:</case>

        <expr_stmt pos:start="179:9" pos:end="179:60"><expr pos:start="179:9" pos:end="179:59"><name pos:start="179:9" pos:end="179:51"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:21">sar_active</name><index pos:start="179:22" pos:end="179:51">[<expr pos:start="179:23" pos:end="179:50"><operator pos:start="179:23" pos:end="179:23">(</operator><name pos:start="179:24" pos:end="179:29">offset</name> <operator pos:start="179:31" pos:end="179:31">-</operator> <name pos:start="179:33" pos:end="179:45">GEM_SPADDR1LO</name><operator pos:start="179:46" pos:end="179:46">)</operator> <operator pos:start="179:48" pos:end="179:48">/</operator> <literal type="number" pos:start="179:50" pos:end="179:50">2</literal></expr>]</index></name> <operator pos:start="179:53" pos:end="179:53">=</operator> <name pos:start="179:55" pos:end="179:59">false</name></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:23">case <expr pos:start="183:10" pos:end="183:22"><name pos:start="183:10" pos:end="183:22">GEM_SPADDR1HI</name></expr>:</case>

    <case pos:start="185:5" pos:end="185:23">case <expr pos:start="185:10" pos:end="185:22"><name pos:start="185:10" pos:end="185:22">GEM_SPADDR2HI</name></expr>:</case>

    <case pos:start="187:5" pos:end="187:23">case <expr pos:start="187:10" pos:end="187:22"><name pos:start="187:10" pos:end="187:22">GEM_SPADDR3HI</name></expr>:</case>

    <case pos:start="189:5" pos:end="189:23">case <expr pos:start="189:10" pos:end="189:22"><name pos:start="189:10" pos:end="189:22">GEM_SPADDR4HI</name></expr>:</case>

        <expr_stmt pos:start="191:9" pos:end="191:59"><expr pos:start="191:9" pos:end="191:58"><name pos:start="191:9" pos:end="191:51"><name pos:start="191:9" pos:end="191:9">s</name><operator pos:start="191:10" pos:end="191:11">-&gt;</operator><name pos:start="191:12" pos:end="191:21">sar_active</name><index pos:start="191:22" pos:end="191:51">[<expr pos:start="191:23" pos:end="191:50"><operator pos:start="191:23" pos:end="191:23">(</operator><name pos:start="191:24" pos:end="191:29">offset</name> <operator pos:start="191:31" pos:end="191:31">-</operator> <name pos:start="191:33" pos:end="191:45">GEM_SPADDR1HI</name><operator pos:start="191:46" pos:end="191:46">)</operator> <operator pos:start="191:48" pos:end="191:48">/</operator> <literal type="number" pos:start="191:50" pos:end="191:50">2</literal></expr>]</index></name> <operator pos:start="191:53" pos:end="191:53">=</operator> <name pos:start="191:55" pos:end="191:58">true</name></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <case pos:start="195:5" pos:end="195:22">case <expr pos:start="195:10" pos:end="195:21"><name pos:start="195:10" pos:end="195:21">GEM_PHYMNTNC</name></expr>:</case>

        <if_stmt pos:start="197:9" pos:end="213:9"><if pos:start="197:9" pos:end="213:9">if <condition pos:start="197:12" pos:end="197:36">(<expr pos:start="197:13" pos:end="197:35"><name pos:start="197:13" pos:end="197:15">val</name> <operator pos:start="197:17" pos:end="197:17">&amp;</operator> <name pos:start="197:19" pos:end="197:35">GEM_PHYMNTNC_OP_W</name></expr>)</condition> <block pos:start="197:38" pos:end="213:9">{<block_content pos:start="199:13" pos:end="211:13">

            <decl_stmt pos:start="199:13" pos:end="199:39"><decl pos:start="199:13" pos:end="199:29"><type pos:start="199:13" pos:end="199:20"><name pos:start="199:13" pos:end="199:20">uint32_t</name></type> <name pos:start="199:22" pos:end="199:29">phy_addr</name></decl>, <decl pos:start="199:32" pos:end="199:38"><type ref="prev" pos:start="199:13" pos:end="199:20"/><name pos:start="199:32" pos:end="199:38">reg_num</name></decl>;</decl_stmt>



            <expr_stmt pos:start="203:13" pos:end="203:75"><expr pos:start="203:13" pos:end="203:74"><name pos:start="203:13" pos:end="203:20">phy_addr</name> <operator pos:start="203:22" pos:end="203:22">=</operator> <operator pos:start="203:24" pos:end="203:24">(</operator><name pos:start="203:25" pos:end="203:27">val</name> <operator pos:start="203:29" pos:end="203:29">&amp;</operator> <name pos:start="203:31" pos:end="203:47">GEM_PHYMNTNC_ADDR</name><operator pos:start="203:48" pos:end="203:48">)</operator> <operator pos:start="203:50" pos:end="203:51">&gt;&gt;</operator> <name pos:start="203:53" pos:end="203:74">GEM_PHYMNTNC_ADDR_SHFT</name></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="211:13"><if pos:start="205:13" pos:end="211:13">if <condition pos:start="205:16" pos:end="205:63">(<expr pos:start="205:17" pos:end="205:62"><name pos:start="205:17" pos:end="205:24">phy_addr</name> <operator pos:start="205:26" pos:end="205:27">==</operator> <name pos:start="205:29" pos:end="205:45">BOARD_PHY_ADDRESS</name> <operator pos:start="205:47" pos:end="205:48">||</operator> <name pos:start="205:50" pos:end="205:57">phy_addr</name> <operator pos:start="205:59" pos:end="205:60">==</operator> <literal type="number" pos:start="205:62" pos:end="205:62">0</literal></expr>)</condition> <block pos:start="205:65" pos:end="211:13">{<block_content pos:start="207:17" pos:end="209:47">

                <expr_stmt pos:start="207:17" pos:end="207:77"><expr pos:start="207:17" pos:end="207:76"><name pos:start="207:17" pos:end="207:23">reg_num</name> <operator pos:start="207:25" pos:end="207:25">=</operator> <operator pos:start="207:27" pos:end="207:27">(</operator><name pos:start="207:28" pos:end="207:30">val</name> <operator pos:start="207:32" pos:end="207:32">&amp;</operator> <name pos:start="207:34" pos:end="207:49">GEM_PHYMNTNC_REG</name><operator pos:start="207:50" pos:end="207:50">)</operator> <operator pos:start="207:52" pos:end="207:53">&gt;&gt;</operator> <name pos:start="207:55" pos:end="207:76">GEM_PHYMNTNC_REG_SHIFT</name></expr>;</expr_stmt>

                <expr_stmt pos:start="209:17" pos:end="209:47"><expr pos:start="209:17" pos:end="209:46"><call pos:start="209:17" pos:end="209:46"><name pos:start="209:17" pos:end="209:29">gem_phy_write</name><argument_list pos:start="209:30" pos:end="209:46">(<argument pos:start="209:31" pos:end="209:31"><expr pos:start="209:31" pos:end="209:31"><name pos:start="209:31" pos:end="209:31">s</name></expr></argument>, <argument pos:start="209:34" pos:end="209:40"><expr pos:start="209:34" pos:end="209:40"><name pos:start="209:34" pos:end="209:40">reg_num</name></expr></argument>, <argument pos:start="209:43" pos:end="209:45"><expr pos:start="209:43" pos:end="209:45"><name pos:start="209:43" pos:end="209:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="221:5" pos:end="221:50"><expr pos:start="221:5" pos:end="221:49"><call pos:start="221:5" pos:end="221:49"><name pos:start="221:5" pos:end="221:12">DB_PRINT</name><argument_list pos:start="221:13" pos:end="221:49">(<argument pos:start="221:14" pos:end="221:31"><expr pos:start="221:14" pos:end="221:31"><literal type="string" pos:start="221:14" pos:end="221:31">"newval: 0x%08x\n"</literal></expr></argument>, <argument pos:start="221:34" pos:end="221:48"><expr pos:start="221:34" pos:end="221:48"><name pos:start="221:34" pos:end="221:48"><name pos:start="221:34" pos:end="221:34">s</name><operator pos:start="221:35" pos:end="221:36">-&gt;</operator><name pos:start="221:37" pos:end="221:40">regs</name><index pos:start="221:41" pos:end="221:48">[<expr pos:start="221:42" pos:end="221:47"><name pos:start="221:42" pos:end="221:47">offset</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
