<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11747.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">ff_srtp_decrypt</name><parameter_list pos:start="1:20" pos:end="1:69">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><name pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:38">SRTPContext</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:55"><name pos:start="1:44" pos:end="1:50">uint8_t</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:55">buf</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:68"><decl pos:start="1:58" pos:end="1:68"><type pos:start="1:58" pos:end="1:68"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:68">lenptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:18"><name pos:start="5:13" pos:end="5:14">iv</name><index pos:start="5:15" pos:end="5:18">[<expr pos:start="5:16" pos:end="5:17"><literal type="number" pos:start="5:16" pos:end="5:17">16</literal></expr>]</index></name> <init pos:start="5:20" pos:end="5:26">= <expr pos:start="5:22" pos:end="5:26"><block pos:start="5:22" pos:end="5:26">{ <expr pos:start="5:24" pos:end="5:24"><literal type="number" pos:start="5:24" pos:end="5:24">0</literal></expr> }</block></expr></init></decl>, <decl pos:start="5:29" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:11"/><name pos:start="5:29" pos:end="5:36"><name pos:start="5:29" pos:end="5:32">hmac</name><index pos:start="5:33" pos:end="5:36">[<expr pos:start="5:34" pos:end="5:35"><literal type="number" pos:start="5:34" pos:end="5:35">20</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name> <init pos:start="7:13" pos:end="7:21">= <expr pos:start="7:15" pos:end="7:21"><operator pos:start="7:15" pos:end="7:15">*</operator><name pos:start="7:16" pos:end="7:21">lenptr</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ext</name></decl>, <decl pos:start="9:14" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:24">seq_largest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:17">ssrc</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:22">roc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:18">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:12"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:12">rtcp</name></decl>;</decl_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:38">// TODO: Missing replay protection</comment>



    <if_stmt pos:start="23:5" pos:end="25:35"><if pos:start="23:5" pos:end="25:35">if <condition pos:start="23:8" pos:end="23:27">(<expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <name pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:26">hmac_size</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:35"><block_content pos:start="25:9" pos:end="25:35">

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:8">rtcp</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:33"><name pos:start="29:12" pos:end="29:25">RTP_PT_IS_RTCP</name><argument_list pos:start="29:26" pos:end="29:33">(<argument pos:start="29:27" pos:end="29:32"><expr pos:start="29:27" pos:end="29:32"><name pos:start="29:27" pos:end="29:32"><name pos:start="29:27" pos:end="29:29">buf</name><index pos:start="29:30" pos:end="29:32">[<expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="33:5" pos:end="33:26">// Authentication HMAC</comment>

    <expr_stmt pos:start="35:5" pos:end="35:82"><expr pos:start="35:5" pos:end="35:81"><call pos:start="35:5" pos:end="35:81"><name pos:start="35:5" pos:end="35:16">av_hmac_init</name><argument_list pos:start="35:17" pos:end="35:81">(<argument pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:18">s</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">hmac</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:59"><expr pos:start="35:27" pos:end="35:59"><ternary pos:start="35:27" pos:end="35:59"><condition pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:30"><name pos:start="35:27" pos:end="35:30">rtcp</name></expr> ?</condition><then pos:start="35:34" pos:end="35:45"> <expr pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:45"><name pos:start="35:34" pos:end="35:34">s</name><operator pos:start="35:35" pos:end="35:36">-&gt;</operator><name pos:start="35:37" pos:end="35:45">rtcp_auth</name></name></expr> </then><else pos:start="35:47" pos:end="35:59">: <expr pos:start="35:49" pos:end="35:59"><name pos:start="35:49" pos:end="35:59"><name pos:start="35:49" pos:end="35:49">s</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:59">rtp_auth</name></name></expr></else></ternary></expr></argument>, <argument pos:start="35:62" pos:end="35:80"><expr pos:start="35:62" pos:end="35:80"><sizeof pos:start="35:62" pos:end="35:80">sizeof<argument_list pos:start="35:68" pos:end="35:80">(<argument pos:start="35:69" pos:end="35:79"><expr pos:start="35:69" pos:end="35:79"><name pos:start="35:69" pos:end="35:79"><name pos:start="35:69" pos:end="35:69">s</name><operator pos:start="35:70" pos:end="35:71">-&gt;</operator><name pos:start="35:72" pos:end="35:79">rtp_auth</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="37:5" pos:end="37:58">// If MKI is used, this should exclude the MKI as well</comment>

    <expr_stmt pos:start="39:5" pos:end="39:53"><expr pos:start="39:5" pos:end="39:52"><call pos:start="39:5" pos:end="39:52"><name pos:start="39:5" pos:end="39:18">av_hmac_update</name><argument_list pos:start="39:19" pos:end="39:52">(<argument pos:start="39:20" pos:end="39:26"><expr pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:26">hmac</name></name></expr></argument>, <argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">buf</name></expr></argument>, <argument pos:start="39:34" pos:end="39:51"><expr pos:start="39:34" pos:end="39:51"><name pos:start="39:34" pos:end="39:36">len</name> <operator pos:start="39:38" pos:end="39:38">-</operator> <name pos:start="39:40" pos:end="39:51"><name pos:start="39:40" pos:end="39:40">s</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">hmac_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="93:5"><if pos:start="43:5" pos:end="93:5">if <condition pos:start="43:8" pos:end="43:14">(<expr pos:start="43:9" pos:end="43:13"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:13">rtcp</name></expr>)</condition> <block pos:start="43:16" pos:end="93:5">{<block_content pos:start="45:9" pos:end="91:43">

        <decl_stmt pos:start="45:9" pos:end="45:35"><decl pos:start="45:9" pos:end="45:34"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:15">seq</name> <init pos:start="45:17" pos:end="45:34">= <expr pos:start="45:19" pos:end="45:34"><call pos:start="45:19" pos:end="45:34"><name pos:start="45:19" pos:end="45:25">AV_RB16</name><argument_list pos:start="45:26" pos:end="45:34">(<argument pos:start="45:27" pos:end="45:33"><expr pos:start="45:27" pos:end="45:33"><name pos:start="45:27" pos:end="45:29">buf</name> <operator pos:start="45:31" pos:end="45:31">+</operator> <literal type="number" pos:start="45:33" pos:end="45:33">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:19"><decl pos:start="47:9" pos:end="47:18"><type pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:16">uint32_t</name></type> <name pos:start="47:18" pos:end="47:18">v</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:26"><decl pos:start="49:9" pos:end="49:25"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">uint8_t</name></type> <name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:22">rocbuf</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">4</literal></expr>]</index></name></decl>;</decl_stmt>



        <comment type="line" pos:start="53:9" pos:end="53:45">// RFC 3711 section 3.3.1, appendix A</comment>

        <expr_stmt pos:start="55:9" pos:end="55:64"><expr pos:start="55:9" pos:end="55:63"><name pos:start="55:9" pos:end="55:19">seq_largest</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <ternary pos:start="55:23" pos:end="55:63"><condition pos:start="55:23" pos:end="55:42"><expr pos:start="55:23" pos:end="55:40"><name pos:start="55:23" pos:end="55:40"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:40">seq_initialized</name></name></expr> ?</condition><then pos:start="55:44" pos:end="55:57"> <expr pos:start="55:44" pos:end="55:57"><name pos:start="55:44" pos:end="55:57"><name pos:start="55:44" pos:end="55:44">s</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:57">seq_largest</name></name></expr> </then><else pos:start="55:59" pos:end="55:63">: <expr pos:start="55:61" pos:end="55:63"><name pos:start="55:61" pos:end="55:63">seq</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:9">v</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <name pos:start="57:13" pos:end="57:15">roc</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:24"><name pos:start="57:19" pos:end="57:19">s</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:24">roc</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="71:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:23">seq_largest</name> <operator pos:start="59:25" pos:end="59:25">&lt;</operator> <literal type="number" pos:start="59:27" pos:end="59:31">32768</literal></expr>)</condition> <block pos:start="59:34" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:28">

            <if_stmt pos:start="61:13" pos:end="63:28"><if pos:start="61:13" pos:end="63:28">if <condition pos:start="61:16" pos:end="61:42">(<expr pos:start="61:17" pos:end="61:41"><name pos:start="61:17" pos:end="61:19">seq</name> <operator pos:start="61:21" pos:end="61:21">-</operator> <name pos:start="61:23" pos:end="61:33">seq_largest</name> <operator pos:start="61:35" pos:end="61:35">&gt;</operator> <literal type="number" pos:start="61:37" pos:end="61:41">32768</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:28"><block_content pos:start="63:17" pos:end="63:28">

                <expr_stmt pos:start="63:17" pos:end="63:28"><expr pos:start="63:17" pos:end="63:27"><name pos:start="63:17" pos:end="63:17">v</name> <operator pos:start="63:19" pos:end="63:19">=</operator> <name pos:start="63:21" pos:end="63:23">roc</name> <operator pos:start="63:25" pos:end="63:25">-</operator> <literal type="number" pos:start="63:27" pos:end="63:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="71:9">else <block pos:start="65:16" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:28">

            <if_stmt pos:start="67:13" pos:end="69:28"><if pos:start="67:13" pos:end="69:28">if <condition pos:start="67:16" pos:end="67:42">(<expr pos:start="67:17" pos:end="67:41"><name pos:start="67:17" pos:end="67:27">seq_largest</name> <operator pos:start="67:29" pos:end="67:29">-</operator> <literal type="number" pos:start="67:31" pos:end="67:35">32768</literal> <operator pos:start="67:37" pos:end="67:37">&gt;</operator> <name pos:start="67:39" pos:end="67:41">seq</name></expr>)</condition><block type="pseudo" pos:start="69:17" pos:end="69:28"><block_content pos:start="69:17" pos:end="69:28">

                <expr_stmt pos:start="69:17" pos:end="69:28"><expr pos:start="69:17" pos:end="69:27"><name pos:start="69:17" pos:end="69:17">v</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:23">roc</name> <operator pos:start="69:25" pos:end="69:25">+</operator> <literal type="number" pos:start="69:27" pos:end="69:27">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="73:9" pos:end="83:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:21">(<expr pos:start="73:13" pos:end="73:20"><name pos:start="73:13" pos:end="73:13">v</name> <operator pos:start="73:15" pos:end="73:16">==</operator> <name pos:start="73:18" pos:end="73:20">roc</name></expr>)</condition> <block pos:start="73:23" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:50">

            <expr_stmt pos:start="75:13" pos:end="75:50"><expr pos:start="75:13" pos:end="75:49"><name pos:start="75:13" pos:end="75:23">seq_largest</name> <operator pos:start="75:25" pos:end="75:25">=</operator> <call pos:start="75:27" pos:end="75:49"><name pos:start="75:27" pos:end="75:31">FFMAX</name><argument_list pos:start="75:32" pos:end="75:49">(<argument pos:start="75:33" pos:end="75:43"><expr pos:start="75:33" pos:end="75:43"><name pos:start="75:33" pos:end="75:43">seq_largest</name></expr></argument>, <argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">seq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="77:11" pos:end="83:9">else if <condition pos:start="77:19" pos:end="77:32">(<expr pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:20">v</name> <operator pos:start="77:22" pos:end="77:23">==</operator> <name pos:start="77:25" pos:end="77:27">roc</name> <operator pos:start="77:29" pos:end="77:29">+</operator> <literal type="number" pos:start="77:31" pos:end="77:31">1</literal></expr>)</condition> <block pos:start="77:34" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:20">

            <expr_stmt pos:start="79:13" pos:end="79:30"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:23">seq_largest</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:29">seq</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:20"><expr pos:start="81:13" pos:end="81:19"><name pos:start="81:13" pos:end="81:15">roc</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:19">v</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:13">index</name> <operator pos:start="85:15" pos:end="85:15">=</operator> <name pos:start="85:17" pos:end="85:19">seq</name> <operator pos:start="85:21" pos:end="85:21">+</operator> <operator pos:start="85:23" pos:end="85:23">(</operator><operator pos:start="85:24" pos:end="85:24">(</operator><operator pos:start="85:25" pos:end="85:25">(</operator><name pos:start="85:26" pos:end="85:33">uint64_t</name><operator pos:start="85:34" pos:end="85:34">)</operator><name pos:start="85:35" pos:end="85:35">v</name><operator pos:start="85:36" pos:end="85:36">)</operator> <operator pos:start="85:38" pos:end="85:39">&lt;&lt;</operator> <literal type="number" pos:start="85:41" pos:end="85:42">16</literal><operator pos:start="85:43" pos:end="85:43">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:15">AV_WB32</name><argument_list pos:start="89:16" pos:end="89:28">(<argument pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:22">rocbuf</name></expr></argument>, <argument pos:start="89:25" pos:end="89:27"><expr pos:start="89:25" pos:end="89:27"><name pos:start="89:25" pos:end="89:27">roc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:43"><expr pos:start="91:9" pos:end="91:42"><call pos:start="91:9" pos:end="91:42"><name pos:start="91:9" pos:end="91:22">av_hmac_update</name><argument_list pos:start="91:23" pos:end="91:42">(<argument pos:start="91:24" pos:end="91:30"><expr pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:30"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">hmac</name></name></expr></argument>, <argument pos:start="91:33" pos:end="91:38"><expr pos:start="91:33" pos:end="91:38"><name pos:start="91:33" pos:end="91:38">rocbuf</name></expr></argument>, <argument pos:start="91:41" pos:end="91:41"><expr pos:start="91:41" pos:end="91:41"><literal type="number" pos:start="91:41" pos:end="91:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:47"><expr pos:start="97:5" pos:end="97:46"><call pos:start="97:5" pos:end="97:46"><name pos:start="97:5" pos:end="97:17">av_hmac_final</name><argument_list pos:start="97:18" pos:end="97:46">(<argument pos:start="97:19" pos:end="97:25"><expr pos:start="97:19" pos:end="97:25"><name pos:start="97:19" pos:end="97:25"><name pos:start="97:19" pos:end="97:19">s</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:25">hmac</name></name></expr></argument>, <argument pos:start="97:28" pos:end="97:31"><expr pos:start="97:28" pos:end="97:31"><name pos:start="97:28" pos:end="97:31">hmac</name></expr></argument>, <argument pos:start="97:34" pos:end="97:45"><expr pos:start="97:34" pos:end="97:45"><sizeof pos:start="97:34" pos:end="97:45">sizeof<argument_list pos:start="97:40" pos:end="97:45">(<argument pos:start="97:41" pos:end="97:44"><expr pos:start="97:41" pos:end="97:44"><name pos:start="97:41" pos:end="97:44">hmac</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:61">(<expr pos:start="99:9" pos:end="99:60"><call pos:start="99:9" pos:end="99:60"><name pos:start="99:9" pos:end="99:14">memcmp</name><argument_list pos:start="99:15" pos:end="99:60">(<argument pos:start="99:16" pos:end="99:19"><expr pos:start="99:16" pos:end="99:19"><name pos:start="99:16" pos:end="99:19">hmac</name></expr></argument>, <argument pos:start="99:22" pos:end="99:45"><expr pos:start="99:22" pos:end="99:45"><name pos:start="99:22" pos:end="99:24">buf</name> <operator pos:start="99:26" pos:end="99:26">+</operator> <name pos:start="99:28" pos:end="99:30">len</name> <operator pos:start="99:32" pos:end="99:32">-</operator> <name pos:start="99:34" pos:end="99:45"><name pos:start="99:34" pos:end="99:34">s</name><operator pos:start="99:35" pos:end="99:36">-&gt;</operator><name pos:start="99:37" pos:end="99:45">hmac_size</name></name></expr></argument>, <argument pos:start="99:48" pos:end="99:59"><expr pos:start="99:48" pos:end="99:59"><name pos:start="99:48" pos:end="99:59"><name pos:start="99:48" pos:end="99:48">s</name><operator pos:start="99:49" pos:end="99:50">-&gt;</operator><name pos:start="99:51" pos:end="99:59">hmac_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:63" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:35">

        <expr_stmt pos:start="101:9" pos:end="101:56"><expr pos:start="101:9" pos:end="101:55"><call pos:start="101:9" pos:end="101:55"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:55">(<argument pos:start="101:16" pos:end="101:19"><expr pos:start="101:16" pos:end="101:19"><name pos:start="101:16" pos:end="101:19">NULL</name></expr></argument>, <argument pos:start="101:22" pos:end="101:35"><expr pos:start="101:22" pos:end="101:35"><name pos:start="101:22" pos:end="101:35">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="101:38" pos:end="101:54"><expr pos:start="101:38" pos:end="101:54"><literal type="string" pos:start="101:38" pos:end="101:54">"HMAC mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:7">len</name> <operator pos:start="109:9" pos:end="109:10">-=</operator> <name pos:start="109:12" pos:end="109:23"><name pos:start="109:12" pos:end="109:12">s</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:23">hmac_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:18"><expr pos:start="111:5" pos:end="111:17"><operator pos:start="111:5" pos:end="111:5">*</operator><name pos:start="111:6" pos:end="111:11">lenptr</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:17">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:35"><if pos:start="115:5" pos:end="117:35">if <condition pos:start="115:8" pos:end="115:17">(<expr pos:start="115:9" pos:end="115:16"><name pos:start="115:9" pos:end="115:11">len</name> <operator pos:start="115:13" pos:end="115:13">&lt;</operator> <literal type="number" pos:start="115:15" pos:end="115:16">12</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:35"><block_content pos:start="117:9" pos:end="117:35">

        <return pos:start="117:9" pos:end="117:35">return <expr pos:start="117:16" pos:end="117:34"><name pos:start="117:16" pos:end="117:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="185:5"><if pos:start="121:5" pos:end="145:5">if <condition pos:start="121:8" pos:end="121:13">(<expr pos:start="121:9" pos:end="121:12"><name pos:start="121:9" pos:end="121:12">rtcp</name></expr>)</condition> <block pos:start="121:15" pos:end="145:5">{<block_content pos:start="123:9" pos:end="143:21">

        <decl_stmt pos:start="123:9" pos:end="123:54"><decl pos:start="123:9" pos:end="123:53"><type pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:16">uint32_t</name></type> <name pos:start="123:18" pos:end="123:28">srtcp_index</name> <init pos:start="123:30" pos:end="123:53">= <expr pos:start="123:32" pos:end="123:53"><call pos:start="123:32" pos:end="123:53"><name pos:start="123:32" pos:end="123:38">AV_RB32</name><argument_list pos:start="123:39" pos:end="123:53">(<argument pos:start="123:40" pos:end="123:52"><expr pos:start="123:40" pos:end="123:52"><name pos:start="123:40" pos:end="123:42">buf</name> <operator pos:start="123:44" pos:end="123:44">+</operator> <name pos:start="123:46" pos:end="123:48">len</name> <operator pos:start="123:50" pos:end="123:50">-</operator> <literal type="number" pos:start="123:52" pos:end="123:52">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:17"><expr pos:start="125:9" pos:end="125:16"><name pos:start="125:9" pos:end="125:11">len</name> <operator pos:start="125:13" pos:end="125:14">-=</operator> <literal type="number" pos:start="125:16" pos:end="125:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:22"><expr pos:start="127:9" pos:end="127:21"><operator pos:start="127:9" pos:end="127:9">*</operator><name pos:start="127:10" pos:end="127:15">lenptr</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:21">len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="131:9" pos:end="131:32"><expr pos:start="131:9" pos:end="131:31"><name pos:start="131:9" pos:end="131:12">ssrc</name> <operator pos:start="131:14" pos:end="131:14">=</operator> <call pos:start="131:16" pos:end="131:31"><name pos:start="131:16" pos:end="131:22">AV_RB32</name><argument_list pos:start="131:23" pos:end="131:31">(<argument pos:start="131:24" pos:end="131:30"><expr pos:start="131:24" pos:end="131:30"><name pos:start="131:24" pos:end="131:26">buf</name> <operator pos:start="131:28" pos:end="131:28">+</operator> <literal type="number" pos:start="131:30" pos:end="131:30">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:41"><expr pos:start="133:9" pos:end="133:40"><name pos:start="133:9" pos:end="133:13">index</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <name pos:start="133:17" pos:end="133:27">srtcp_index</name> <operator pos:start="133:29" pos:end="133:29">&amp;</operator> <literal type="number" pos:start="133:31" pos:end="133:40">0x7fffffff</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="137:9" pos:end="137:17"><expr pos:start="137:9" pos:end="137:16"><name pos:start="137:9" pos:end="137:11">buf</name> <operator pos:start="137:13" pos:end="137:14">+=</operator> <literal type="number" pos:start="137:16" pos:end="137:16">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:17"><expr pos:start="139:9" pos:end="139:16"><name pos:start="139:9" pos:end="139:11">len</name> <operator pos:start="139:13" pos:end="139:14">-=</operator> <literal type="number" pos:start="139:16" pos:end="139:16">8</literal></expr>;</expr_stmt>

        <if_stmt pos:start="141:9" pos:end="143:21"><if pos:start="141:9" pos:end="143:21">if <condition pos:start="141:12" pos:end="141:40">(<expr pos:start="141:13" pos:end="141:39"><operator pos:start="141:13" pos:end="141:13">!</operator><operator pos:start="141:14" pos:end="141:14">(</operator><name pos:start="141:15" pos:end="141:25">srtcp_index</name> <operator pos:start="141:27" pos:end="141:27">&amp;</operator> <literal type="number" pos:start="141:29" pos:end="141:38">0x80000000</literal><operator pos:start="141:39" pos:end="141:39">)</operator></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:21"><block_content pos:start="143:13" pos:end="143:21">

            <return pos:start="143:13" pos:end="143:21">return <expr pos:start="143:20" pos:end="143:20"><literal type="number" pos:start="143:20" pos:end="143:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="145:7" pos:end="185:5">else <block pos:start="145:12" pos:end="185:5">{<block_content pos:start="147:9" pos:end="183:9">

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:26">seq_initialized</name></name> <operator pos:start="147:28" pos:end="147:28">=</operator> <literal type="number" pos:start="147:30" pos:end="147:30">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:41"><expr pos:start="149:9" pos:end="149:40"><name pos:start="149:9" pos:end="149:22"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:22">seq_largest</name></name>     <operator pos:start="149:28" pos:end="149:28">=</operator> <name pos:start="149:30" pos:end="149:40">seq_largest</name></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:14"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:14">roc</name></name>             <operator pos:start="151:28" pos:end="151:28">=</operator> <name pos:start="151:30" pos:end="151:32">roc</name></expr>;</expr_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:29"><expr pos:start="155:9" pos:end="155:28"><name pos:start="155:9" pos:end="155:11">ext</name>  <operator pos:start="155:14" pos:end="155:14">=</operator> <name pos:start="155:16" pos:end="155:21"><name pos:start="155:16" pos:end="155:18">buf</name><index pos:start="155:19" pos:end="155:21">[<expr pos:start="155:20" pos:end="155:20"><literal type="number" pos:start="155:20" pos:end="155:20">0</literal></expr>]</index></name> <operator pos:start="155:23" pos:end="155:23">&amp;</operator> <literal type="number" pos:start="155:25" pos:end="155:28">0x10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:12">ssrc</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <call pos:start="157:16" pos:end="157:31"><name pos:start="157:16" pos:end="157:22">AV_RB32</name><argument_list pos:start="157:23" pos:end="157:31">(<argument pos:start="157:24" pos:end="157:30"><expr pos:start="157:24" pos:end="157:30"><name pos:start="157:24" pos:end="157:26">buf</name> <operator pos:start="157:28" pos:end="157:28">+</operator> <literal type="number" pos:start="157:30" pos:end="157:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:18"><expr pos:start="161:9" pos:end="161:17"><name pos:start="161:9" pos:end="161:11">buf</name> <operator pos:start="161:13" pos:end="161:14">+=</operator> <literal type="number" pos:start="161:16" pos:end="161:17">12</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:18"><expr pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:11">len</name> <operator pos:start="163:13" pos:end="163:14">-=</operator> <literal type="number" pos:start="163:16" pos:end="163:17">12</literal></expr>;</expr_stmt>



        <if_stmt pos:start="167:9" pos:end="183:9"><if pos:start="167:9" pos:end="183:9">if <condition pos:start="167:12" pos:end="167:16">(<expr pos:start="167:13" pos:end="167:15"><name pos:start="167:13" pos:end="167:15">ext</name></expr>)</condition> <block pos:start="167:18" pos:end="183:9">{<block_content pos:start="169:13" pos:end="181:23">

            <if_stmt pos:start="169:13" pos:end="171:43"><if pos:start="169:13" pos:end="171:43">if <condition pos:start="169:16" pos:end="169:24">(<expr pos:start="169:17" pos:end="169:23"><name pos:start="169:17" pos:end="169:19">len</name> <operator pos:start="169:21" pos:end="169:21">&lt;</operator> <literal type="number" pos:start="169:23" pos:end="169:23">4</literal></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:43"><block_content pos:start="171:17" pos:end="171:43">

                <return pos:start="171:17" pos:end="171:43">return <expr pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:45"><expr pos:start="173:13" pos:end="173:44"><name pos:start="173:13" pos:end="173:15">ext</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <operator pos:start="173:19" pos:end="173:19">(</operator><call pos:start="173:20" pos:end="173:35"><name pos:start="173:20" pos:end="173:26">AV_RB16</name><argument_list pos:start="173:27" pos:end="173:35">(<argument pos:start="173:28" pos:end="173:34"><expr pos:start="173:28" pos:end="173:34"><name pos:start="173:28" pos:end="173:30">buf</name> <operator pos:start="173:32" pos:end="173:32">+</operator> <literal type="number" pos:start="173:34" pos:end="173:34">2</literal></expr></argument>)</argument_list></call> <operator pos:start="173:37" pos:end="173:37">+</operator> <literal type="number" pos:start="173:39" pos:end="173:39">1</literal><operator pos:start="173:40" pos:end="173:40">)</operator> <operator pos:start="173:42" pos:end="173:42">*</operator> <literal type="number" pos:start="173:44" pos:end="173:44">4</literal></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="177:43"><if pos:start="175:13" pos:end="177:43">if <condition pos:start="175:16" pos:end="175:26">(<expr pos:start="175:17" pos:end="175:25"><name pos:start="175:17" pos:end="175:19">len</name> <operator pos:start="175:21" pos:end="175:21">&lt;</operator> <name pos:start="175:23" pos:end="175:25">ext</name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:43"><block_content pos:start="177:17" pos:end="177:43">

                <return pos:start="177:17" pos:end="177:43">return <expr pos:start="177:24" pos:end="177:42"><name pos:start="177:24" pos:end="177:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:23"><expr pos:start="179:13" pos:end="179:22"><name pos:start="179:13" pos:end="179:15">len</name> <operator pos:start="179:17" pos:end="179:18">-=</operator> <name pos:start="179:20" pos:end="179:22">ext</name></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:23"><expr pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:15">buf</name> <operator pos:start="181:17" pos:end="181:18">+=</operator> <name pos:start="181:20" pos:end="181:22">ext</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:66"><expr pos:start="189:5" pos:end="189:65"><call pos:start="189:5" pos:end="189:65"><name pos:start="189:5" pos:end="189:13">create_iv</name><argument_list pos:start="189:14" pos:end="189:65">(<argument pos:start="189:15" pos:end="189:16"><expr pos:start="189:15" pos:end="189:16"><name pos:start="189:15" pos:end="189:16">iv</name></expr></argument>, <argument pos:start="189:19" pos:end="189:51"><expr pos:start="189:19" pos:end="189:51"><ternary pos:start="189:19" pos:end="189:51"><condition pos:start="189:19" pos:end="189:24"><expr pos:start="189:19" pos:end="189:22"><name pos:start="189:19" pos:end="189:22">rtcp</name></expr> ?</condition><then pos:start="189:26" pos:end="189:37"> <expr pos:start="189:26" pos:end="189:37"><name pos:start="189:26" pos:end="189:37"><name pos:start="189:26" pos:end="189:26">s</name><operator pos:start="189:27" pos:end="189:28">-&gt;</operator><name pos:start="189:29" pos:end="189:37">rtcp_salt</name></name></expr> </then><else pos:start="189:39" pos:end="189:51">: <expr pos:start="189:41" pos:end="189:51"><name pos:start="189:41" pos:end="189:51"><name pos:start="189:41" pos:end="189:41">s</name><operator pos:start="189:42" pos:end="189:43">-&gt;</operator><name pos:start="189:44" pos:end="189:51">rtp_salt</name></name></expr></else></ternary></expr></argument>, <argument pos:start="189:54" pos:end="189:58"><expr pos:start="189:54" pos:end="189:58"><name pos:start="189:54" pos:end="189:58">index</name></expr></argument>, <argument pos:start="189:61" pos:end="189:64"><expr pos:start="189:61" pos:end="189:64"><name pos:start="189:61" pos:end="189:64">ssrc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:65"><expr pos:start="191:5" pos:end="191:64"><call pos:start="191:5" pos:end="191:64"><name pos:start="191:5" pos:end="191:15">av_aes_init</name><argument_list pos:start="191:16" pos:end="191:64">(<argument pos:start="191:17" pos:end="191:22"><expr pos:start="191:17" pos:end="191:22"><name pos:start="191:17" pos:end="191:22"><name pos:start="191:17" pos:end="191:17">s</name><operator pos:start="191:18" pos:end="191:19">-&gt;</operator><name pos:start="191:20" pos:end="191:22">aes</name></name></expr></argument>, <argument pos:start="191:25" pos:end="191:55"><expr pos:start="191:25" pos:end="191:55"><ternary pos:start="191:25" pos:end="191:55"><condition pos:start="191:25" pos:end="191:30"><expr pos:start="191:25" pos:end="191:28"><name pos:start="191:25" pos:end="191:28">rtcp</name></expr> ?</condition><then pos:start="191:32" pos:end="191:42"> <expr pos:start="191:32" pos:end="191:42"><name pos:start="191:32" pos:end="191:42"><name pos:start="191:32" pos:end="191:32">s</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:42">rtcp_key</name></name></expr> </then><else pos:start="191:44" pos:end="191:55">: <expr pos:start="191:46" pos:end="191:55"><name pos:start="191:46" pos:end="191:55"><name pos:start="191:46" pos:end="191:46">s</name><operator pos:start="191:47" pos:end="191:48">-&gt;</operator><name pos:start="191:49" pos:end="191:55">rtp_key</name></name></expr></else></ternary></expr></argument>, <argument pos:start="191:58" pos:end="191:60"><expr pos:start="191:58" pos:end="191:60"><literal type="number" pos:start="191:58" pos:end="191:60">128</literal></expr></argument>, <argument pos:start="191:63" pos:end="191:63"><expr pos:start="191:63" pos:end="191:63"><literal type="number" pos:start="191:63" pos:end="191:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:42"><expr pos:start="193:5" pos:end="193:41"><call pos:start="193:5" pos:end="193:41"><name pos:start="193:5" pos:end="193:19">encrypt_counter</name><argument_list pos:start="193:20" pos:end="193:41">(<argument pos:start="193:21" pos:end="193:26"><expr pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:21">s</name><operator pos:start="193:22" pos:end="193:23">-&gt;</operator><name pos:start="193:24" pos:end="193:26">aes</name></name></expr></argument>, <argument pos:start="193:29" pos:end="193:30"><expr pos:start="193:29" pos:end="193:30"><name pos:start="193:29" pos:end="193:30">iv</name></expr></argument>, <argument pos:start="193:33" pos:end="193:35"><expr pos:start="193:33" pos:end="193:35"><name pos:start="193:33" pos:end="193:35">buf</name></expr></argument>, <argument pos:start="193:38" pos:end="193:40"><expr pos:start="193:38" pos:end="193:40"><name pos:start="193:38" pos:end="193:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="197:5" pos:end="197:13">return <expr pos:start="197:12" pos:end="197:12"><literal type="number" pos:start="197:12" pos:end="197:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
