<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22298.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:30">encode_init</name><parameter_list pos:start="1:31" pos:end="1:59">(<parameter pos:start="1:32" pos:end="1:58"><decl pos:start="1:32" pos:end="1:58"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name><modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:58">avc_context</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">theora_info</name></type> <name pos:start="5:17" pos:end="5:22">t_info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:18">theora_comment</name></type> <name pos:start="7:20" pos:end="7:28">t_comment</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">ogg_packet</name></type> <name pos:start="9:16" pos:end="9:23">o_packet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:23">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">TheoraContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">h</name> <init pos:start="13:22" pos:end="13:45">= <expr pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:45"><name pos:start="13:24" pos:end="13:34">avc_context</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:45">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:39">/* Set up the theora_info struct */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:20">theora_info_init</name><argument_list pos:start="19:21" pos:end="19:31">( <argument pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><operator pos:start="19:23" pos:end="19:23">&amp;</operator><name pos:start="19:24" pos:end="19:29">t_info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:10">t_info</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:16">width</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="21:50"><name pos:start="21:20" pos:end="21:26">FFALIGN</name><argument_list pos:start="21:27" pos:end="21:50">(<argument pos:start="21:28" pos:end="21:45"><expr pos:start="21:28" pos:end="21:45"><name pos:start="21:28" pos:end="21:45"><name pos:start="21:28" pos:end="21:38">avc_context</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:45">width</name></name></expr></argument>, <argument pos:start="21:48" pos:end="21:49"><expr pos:start="21:48" pos:end="21:49"><literal type="number" pos:start="21:48" pos:end="21:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:10">t_info</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:17">height</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:52"><name pos:start="23:21" pos:end="23:27">FFALIGN</name><argument_list pos:start="23:28" pos:end="23:52">(<argument pos:start="23:29" pos:end="23:47"><expr pos:start="23:29" pos:end="23:47"><name pos:start="23:29" pos:end="23:47"><name pos:start="23:29" pos:end="23:39">avc_context</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:47">height</name></name></expr></argument>, <argument pos:start="23:50" pos:end="23:51"><expr pos:start="23:50" pos:end="23:51"><literal type="number" pos:start="23:50" pos:end="23:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:10">t_info</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:22">frame_width</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:43"><name pos:start="25:26" pos:end="25:36">avc_context</name><operator pos:start="25:37" pos:end="25:38">-&gt;</operator><name pos:start="25:39" pos:end="25:43">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:10">t_info</name><operator pos:start="27:11" pos:end="27:11">.</operator><name pos:start="27:12" pos:end="27:23">frame_height</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <name pos:start="27:27" pos:end="27:45"><name pos:start="27:27" pos:end="27:37">avc_context</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:45">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:10">t_info</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:19">offset_x</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:10">t_info</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:19">offset_y</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:41"><name pos:start="31:23" pos:end="31:33">avc_context</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">height</name></name> <operator pos:start="31:43" pos:end="31:43">&amp;</operator> <literal type="number" pos:start="31:45" pos:end="31:47">0xf</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="35:75">/* Swap numerator and denominator as time_base in AVCodecContext gives the

     * time period between frames, but theora_info needs the framerate.  */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:10">t_info</name><operator pos:start="37:11" pos:end="37:11">.</operator><name pos:start="37:12" pos:end="37:24">fps_numerator</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:53"><name pos:start="37:28" pos:end="37:38">avc_context</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:49">time_base</name><operator pos:start="37:50" pos:end="37:50">.</operator><name pos:start="37:51" pos:end="37:53">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:10">t_info</name><operator pos:start="39:11" pos:end="39:11">.</operator><name pos:start="39:12" pos:end="39:26">fps_denominator</name></name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:55"><name pos:start="39:30" pos:end="39:40">avc_context</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:51">time_base</name><operator pos:start="39:52" pos:end="39:52">.</operator><name pos:start="39:53" pos:end="39:55">num</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:50">(<expr pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:19">avc_context</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:40">sample_aspect_ratio</name><operator pos:start="41:41" pos:end="41:41">.</operator><name pos:start="41:42" pos:end="41:44">num</name></name> <operator pos:start="41:46" pos:end="41:47">!=</operator> <literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr>)</condition> <block pos:start="41:52" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:73">

        <expr_stmt pos:start="43:9" pos:end="43:71"><expr pos:start="43:9" pos:end="43:70"><name pos:start="43:9" pos:end="43:31"><name pos:start="43:9" pos:end="43:14">t_info</name><operator pos:start="43:15" pos:end="43:15">.</operator><name pos:start="43:16" pos:end="43:31">aspect_numerator</name></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:70"><name pos:start="43:35" pos:end="43:45">avc_context</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:66">sample_aspect_ratio</name><operator pos:start="43:67" pos:end="43:67">.</operator><name pos:start="43:68" pos:end="43:70">num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:73"><expr pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:14">t_info</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:33">aspect_denominator</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <name pos:start="45:37" pos:end="45:72"><name pos:start="45:37" pos:end="45:47">avc_context</name><operator pos:start="45:48" pos:end="45:49">-&gt;</operator><name pos:start="45:50" pos:end="45:68">sample_aspect_ratio</name><operator pos:start="45:69" pos:end="45:69">.</operator><name pos:start="45:70" pos:end="45:72">den</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="53:5">else <block pos:start="47:12" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:38">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:14">t_info</name><operator pos:start="49:15" pos:end="49:15">.</operator><name pos:start="49:16" pos:end="49:31">aspect_numerator</name></name> <operator pos:start="49:33" pos:end="49:33">=</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:38"><expr pos:start="51:9" pos:end="51:37"><name pos:start="51:9" pos:end="51:33"><name pos:start="51:9" pos:end="51:14">t_info</name><operator pos:start="51:15" pos:end="51:15">.</operator><name pos:start="51:16" pos:end="51:33">aspect_denominator</name></name> <operator pos:start="51:35" pos:end="51:35">=</operator> <literal type="number" pos:start="51:37" pos:end="51:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:10">t_info</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:21">colorspace</name></name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:41">OC_CS_UNSPECIFIED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:10">t_info</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:22">pixelformat</name></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:34">OC_PF_420</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:50"><expr pos:start="59:5" pos:end="59:49"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:10">t_info</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:25">target_bitrate</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:49"><name pos:start="59:29" pos:end="59:39">avc_context</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:49">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:54"><expr pos:start="61:5" pos:end="61:53"><name pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:10">t_info</name><operator pos:start="61:11" pos:end="61:11">.</operator><name pos:start="61:12" pos:end="61:29">keyframe_frequency</name></name> <operator pos:start="61:31" pos:end="61:31">=</operator> <name pos:start="61:33" pos:end="61:53"><name pos:start="61:33" pos:end="61:43">avc_context</name><operator pos:start="61:44" pos:end="61:45">-&gt;</operator><name pos:start="61:46" pos:end="61:53">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:60"><expr pos:start="63:5" pos:end="63:59"><name pos:start="63:5" pos:end="63:35"><name pos:start="63:5" pos:end="63:10">t_info</name><operator pos:start="63:11" pos:end="63:11">.</operator><name pos:start="63:12" pos:end="63:35">keyframe_frequency_force</name></name> <operator pos:start="63:37" pos:end="63:37">=</operator> <name pos:start="63:39" pos:end="63:59"><name pos:start="63:39" pos:end="63:49">avc_context</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:59">gop_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:10">t_info</name><operator pos:start="65:11" pos:end="65:11">.</operator><name pos:start="65:12" pos:end="65:31">keyframe_mindistance</name></name> <operator pos:start="65:33" pos:end="65:33">=</operator> <name pos:start="65:35" pos:end="65:57"><name pos:start="65:35" pos:end="65:45">avc_context</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:57">keyint_min</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:23"><expr pos:start="67:5" pos:end="67:22"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:10">t_info</name><operator pos:start="67:11" pos:end="67:11">.</operator><name pos:start="67:12" pos:end="67:18">quality</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:23"><expr pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:10">t_info</name><operator pos:start="71:11" pos:end="71:11">.</operator><name pos:start="71:12" pos:end="71:18">quick_p</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:28"><expr pos:start="73:5" pos:end="73:27"><name pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:10">t_info</name><operator pos:start="73:11" pos:end="73:11">.</operator><name pos:start="73:12" pos:end="73:23">dropframes_p</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:31"><expr pos:start="75:5" pos:end="75:30"><name pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:10">t_info</name><operator pos:start="75:11" pos:end="75:11">.</operator><name pos:start="75:12" pos:end="75:26">keyframe_auto_p</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:70"><expr pos:start="77:5" pos:end="77:69"><name pos:start="77:5" pos:end="77:39"><name pos:start="77:5" pos:end="77:10">t_info</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:39">keyframe_data_target_bitrate</name></name> <operator pos:start="77:41" pos:end="77:41">=</operator> <name pos:start="77:43" pos:end="77:63"><name pos:start="77:43" pos:end="77:48">t_info</name><operator pos:start="77:49" pos:end="77:49">.</operator><name pos:start="77:50" pos:end="77:63">target_bitrate</name></name> <operator pos:start="77:65" pos:end="77:65">*</operator> <literal type="number" pos:start="77:67" pos:end="77:69">1.5</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:40"><expr pos:start="79:5" pos:end="79:39"><name pos:start="79:5" pos:end="79:34"><name pos:start="79:5" pos:end="79:10">t_info</name><operator pos:start="79:11" pos:end="79:11">.</operator><name pos:start="79:12" pos:end="79:34">keyframe_auto_threshold</name></name> <operator pos:start="79:36" pos:end="79:36">=</operator> <literal type="number" pos:start="79:38" pos:end="79:39">80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:33"><expr pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:10">t_info</name><operator pos:start="81:11" pos:end="81:11">.</operator><name pos:start="81:12" pos:end="81:28">noise_sensitivity</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <literal type="number" pos:start="81:32" pos:end="81:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:25"><expr pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:10">t_info</name><operator pos:start="83:11" pos:end="83:11">.</operator><name pos:start="83:12" pos:end="83:20">sharpness</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <literal type="number" pos:start="83:24" pos:end="83:24">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="87:5" pos:end="87:34">/* Now initialise libtheora */</comment>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:58">(<expr pos:start="89:9" pos:end="89:57"><call pos:start="89:9" pos:end="89:52"><name pos:start="89:9" pos:end="89:26">theora_encode_init</name><argument_list pos:start="89:27" pos:end="89:52">( <argument pos:start="89:29" pos:end="89:41"><expr pos:start="89:29" pos:end="89:41"><operator pos:start="89:29" pos:end="89:29">&amp;</operator><operator pos:start="89:30" pos:end="89:30">(</operator><name pos:start="89:31" pos:end="89:40"><name pos:start="89:31" pos:end="89:31">h</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:40">t_state</name></name><operator pos:start="89:41" pos:end="89:41">)</operator></expr></argument>, <argument pos:start="89:44" pos:end="89:50"><expr pos:start="89:44" pos:end="89:50"><operator pos:start="89:44" pos:end="89:44">&amp;</operator><name pos:start="89:45" pos:end="89:50">t_info</name></expr></argument> )</argument_list></call> <operator pos:start="89:54" pos:end="89:55">!=</operator> <literal type="number" pos:start="89:57" pos:end="89:57">0</literal></expr>)</condition> <block pos:start="89:60" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:18">

        <expr_stmt pos:start="91:9" pos:end="91:73"><expr pos:start="91:9" pos:end="91:72"><call pos:start="91:9" pos:end="91:72"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:72">(<argument pos:start="91:16" pos:end="91:26"><expr pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:26">avc_context</name></expr></argument>, <argument pos:start="91:29" pos:end="91:40"><expr pos:start="91:29" pos:end="91:40"><name pos:start="91:29" pos:end="91:40">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:43" pos:end="91:71"><expr pos:start="91:43" pos:end="91:71"><literal type="string" pos:start="91:43" pos:end="91:71">"theora_encode_init failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:18">return <expr pos:start="93:16" pos:end="93:17"><operator pos:start="93:16" pos:end="93:16">-</operator><literal type="number" pos:start="93:17" pos:end="93:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:37">/* Clear up theora_info struct */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:33"><expr pos:start="101:5" pos:end="101:32"><call pos:start="101:5" pos:end="101:32"><name pos:start="101:5" pos:end="101:21">theora_info_clear</name><argument_list pos:start="101:22" pos:end="101:32">( <argument pos:start="101:24" pos:end="101:30"><expr pos:start="101:24" pos:end="101:30"><operator pos:start="101:24" pos:end="101:24">&amp;</operator><name pos:start="101:25" pos:end="101:30">t_info</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="105:5" pos:end="117:6">/*

        Output first header packet consisting of theora

        header, comment, and tables.



        Each one is prefixed with a 16bit size, then they

        are concatenated together into ffmpeg's extradata.

    */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:15"><expr pos:start="119:5" pos:end="119:14"><name pos:start="119:5" pos:end="119:10">offset</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <literal type="number" pos:start="119:14" pos:end="119:14">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:16">/* Header */</comment>

    <expr_stmt pos:start="125:5" pos:end="125:53"><expr pos:start="125:5" pos:end="125:52"><call pos:start="125:5" pos:end="125:52"><name pos:start="125:5" pos:end="125:24">theora_encode_header</name><argument_list pos:start="125:25" pos:end="125:52">( <argument pos:start="125:27" pos:end="125:39"><expr pos:start="125:27" pos:end="125:39"><operator pos:start="125:27" pos:end="125:27">&amp;</operator><operator pos:start="125:28" pos:end="125:28">(</operator><name pos:start="125:29" pos:end="125:38"><name pos:start="125:29" pos:end="125:29">h</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:38">t_state</name></name><operator pos:start="125:39" pos:end="125:39">)</operator></expr></argument>, <argument pos:start="125:42" pos:end="125:50"><expr pos:start="125:42" pos:end="125:50"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:50">o_packet</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="131:5"><if pos:start="127:5" pos:end="131:5">if <condition pos:start="127:8" pos:end="127:67">(<expr pos:start="127:9" pos:end="127:66"><call pos:start="127:9" pos:end="127:61"><name pos:start="127:9" pos:end="127:26">concatenate_packet</name><argument_list pos:start="127:27" pos:end="127:61">( <argument pos:start="127:29" pos:end="127:35"><expr pos:start="127:29" pos:end="127:35"><operator pos:start="127:29" pos:end="127:29">&amp;</operator><name pos:start="127:30" pos:end="127:35">offset</name></expr></argument>, <argument pos:start="127:38" pos:end="127:48"><expr pos:start="127:38" pos:end="127:48"><name pos:start="127:38" pos:end="127:48">avc_context</name></expr></argument>, <argument pos:start="127:51" pos:end="127:59"><expr pos:start="127:51" pos:end="127:59"><operator pos:start="127:51" pos:end="127:51">&amp;</operator><name pos:start="127:52" pos:end="127:59">o_packet</name></expr></argument> )</argument_list></call> <operator pos:start="127:63" pos:end="127:64">!=</operator> <literal type="number" pos:start="127:66" pos:end="127:66">0</literal></expr>)</condition> <block pos:start="127:69" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:18">

        <return pos:start="129:9" pos:end="129:18">return <expr pos:start="129:16" pos:end="129:17"><operator pos:start="129:16" pos:end="129:16">-</operator><literal type="number" pos:start="129:17" pos:end="129:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:17">/* Comment */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:38"><expr pos:start="137:5" pos:end="137:37"><call pos:start="137:5" pos:end="137:37"><name pos:start="137:5" pos:end="137:23">theora_comment_init</name><argument_list pos:start="137:24" pos:end="137:37">( <argument pos:start="137:26" pos:end="137:35"><expr pos:start="137:26" pos:end="137:35"><operator pos:start="137:26" pos:end="137:26">&amp;</operator><name pos:start="137:27" pos:end="137:35">t_comment</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><call pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:25">theora_encode_comment</name><argument_list pos:start="139:26" pos:end="139:50">( <argument pos:start="139:28" pos:end="139:37"><expr pos:start="139:28" pos:end="139:37"><operator pos:start="139:28" pos:end="139:28">&amp;</operator><name pos:start="139:29" pos:end="139:37">t_comment</name></expr></argument>, <argument pos:start="139:40" pos:end="139:48"><expr pos:start="139:40" pos:end="139:48"><operator pos:start="139:40" pos:end="139:40">&amp;</operator><name pos:start="139:41" pos:end="139:48">o_packet</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="145:5"><if pos:start="141:5" pos:end="145:5">if <condition pos:start="141:8" pos:end="141:67">(<expr pos:start="141:9" pos:end="141:66"><call pos:start="141:9" pos:end="141:61"><name pos:start="141:9" pos:end="141:26">concatenate_packet</name><argument_list pos:start="141:27" pos:end="141:61">( <argument pos:start="141:29" pos:end="141:35"><expr pos:start="141:29" pos:end="141:35"><operator pos:start="141:29" pos:end="141:29">&amp;</operator><name pos:start="141:30" pos:end="141:35">offset</name></expr></argument>, <argument pos:start="141:38" pos:end="141:48"><expr pos:start="141:38" pos:end="141:48"><name pos:start="141:38" pos:end="141:48">avc_context</name></expr></argument>, <argument pos:start="141:51" pos:end="141:59"><expr pos:start="141:51" pos:end="141:59"><operator pos:start="141:51" pos:end="141:51">&amp;</operator><name pos:start="141:52" pos:end="141:59">o_packet</name></expr></argument> )</argument_list></call> <operator pos:start="141:63" pos:end="141:64">!=</operator> <literal type="number" pos:start="141:66" pos:end="141:66">0</literal></expr>)</condition> <block pos:start="141:69" pos:end="145:5">{<block_content pos:start="143:9" pos:end="143:18">

        <return pos:start="143:9" pos:end="143:18">return <expr pos:start="143:16" pos:end="143:17"><operator pos:start="143:16" pos:end="143:16">-</operator><literal type="number" pos:start="143:17" pos:end="143:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:16">/* Tables */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:53"><expr pos:start="151:5" pos:end="151:52"><call pos:start="151:5" pos:end="151:52"><name pos:start="151:5" pos:end="151:24">theora_encode_tables</name><argument_list pos:start="151:25" pos:end="151:52">( <argument pos:start="151:27" pos:end="151:39"><expr pos:start="151:27" pos:end="151:39"><operator pos:start="151:27" pos:end="151:27">&amp;</operator><operator pos:start="151:28" pos:end="151:28">(</operator><name pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:29">h</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:38">t_state</name></name><operator pos:start="151:39" pos:end="151:39">)</operator></expr></argument>, <argument pos:start="151:42" pos:end="151:50"><expr pos:start="151:42" pos:end="151:50"><operator pos:start="151:42" pos:end="151:42">&amp;</operator><name pos:start="151:43" pos:end="151:50">o_packet</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="153:5" pos:end="157:5"><if pos:start="153:5" pos:end="157:5">if <condition pos:start="153:8" pos:end="153:67">(<expr pos:start="153:9" pos:end="153:66"><call pos:start="153:9" pos:end="153:61"><name pos:start="153:9" pos:end="153:26">concatenate_packet</name><argument_list pos:start="153:27" pos:end="153:61">( <argument pos:start="153:29" pos:end="153:35"><expr pos:start="153:29" pos:end="153:35"><operator pos:start="153:29" pos:end="153:29">&amp;</operator><name pos:start="153:30" pos:end="153:35">offset</name></expr></argument>, <argument pos:start="153:38" pos:end="153:48"><expr pos:start="153:38" pos:end="153:48"><name pos:start="153:38" pos:end="153:48">avc_context</name></expr></argument>, <argument pos:start="153:51" pos:end="153:59"><expr pos:start="153:51" pos:end="153:59"><operator pos:start="153:51" pos:end="153:51">&amp;</operator><name pos:start="153:52" pos:end="153:59">o_packet</name></expr></argument> )</argument_list></call> <operator pos:start="153:63" pos:end="153:64">!=</operator> <literal type="number" pos:start="153:66" pos:end="153:66">0</literal></expr>)</condition> <block pos:start="153:69" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:18">

        <return pos:start="155:9" pos:end="155:18">return <expr pos:start="155:16" pos:end="155:17"><operator pos:start="155:16" pos:end="155:16">-</operator><literal type="number" pos:start="155:17" pos:end="155:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:40">/* Clear up theora_comment struct */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:39"><expr pos:start="163:5" pos:end="163:38"><call pos:start="163:5" pos:end="163:38"><name pos:start="163:5" pos:end="163:24">theora_comment_clear</name><argument_list pos:start="163:25" pos:end="163:38">( <argument pos:start="163:27" pos:end="163:36"><expr pos:start="163:27" pos:end="163:36"><operator pos:start="163:27" pos:end="163:27">&amp;</operator><name pos:start="163:28" pos:end="163:36">t_comment</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:35">/* Set up the output AVFrame */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:52"><expr pos:start="169:5" pos:end="169:51"><name pos:start="169:5" pos:end="169:28"><name pos:start="169:5" pos:end="169:15">avc_context</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:28">coded_frame</name></name><operator pos:start="169:29" pos:end="169:29">=</operator> <call pos:start="169:31" pos:end="169:51"><name pos:start="169:31" pos:end="169:49">avcodec_alloc_frame</name><argument_list pos:start="169:50" pos:end="169:51">()</argument_list></call></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
