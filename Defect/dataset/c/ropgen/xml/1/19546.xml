<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19546.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">decode_frame_png</name><parameter_list pos:start="1:28" pos:end="5:40">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">got_frame</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="117:1">{<block_content pos:start="9:5" pos:end="115:15">

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:17">PNGDecContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier><specifier pos:start="9:20" pos:end="9:24">const</specifier></type> <name pos:start="9:26" pos:end="9:26">s</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">buf</name>     <init pos:start="11:28" pos:end="11:40">= <expr pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:40"><name pos:start="11:30" pos:end="11:34">avpkt</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:40">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:40"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">buf_size</name>           <init pos:start="13:28" pos:end="13:40">= <expr pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:40"><name pos:start="13:30" pos:end="13:34">avpkt</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:40">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">sig</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:54"><expr pos:start="23:5" pos:end="23:53"><call pos:start="23:5" pos:end="23:53"><name pos:start="23:5" pos:end="23:28">ff_thread_release_buffer</name><argument_list pos:start="23:29" pos:end="23:53">(<argument pos:start="23:30" pos:end="23:34"><expr pos:start="23:30" pos:end="23:34"><name pos:start="23:30" pos:end="23:34">avctx</name></expr></argument>, <argument pos:start="23:37" pos:end="23:52"><expr pos:start="23:37" pos:end="23:52"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:52">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><call pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:10">FFSWAP</name><argument_list pos:start="25:11" pos:end="25:52">(<argument pos:start="25:12" pos:end="25:22"><expr pos:start="25:12" pos:end="25:22"><name pos:start="25:12" pos:end="25:22">ThreadFrame</name></expr></argument>, <argument pos:start="25:25" pos:end="25:34"><expr pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:34"><name pos:start="25:25" pos:end="25:25">s</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:34">picture</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:51"><expr pos:start="25:37" pos:end="25:51"><name pos:start="25:37" pos:end="25:51"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:51">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">picture</name><operator pos:start="27:19" pos:end="27:19">.</operator><name pos:start="27:20" pos:end="27:20">f</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:44"><expr pos:start="31:5" pos:end="31:43"><call pos:start="31:5" pos:end="31:43"><name pos:start="31:5" pos:end="31:20">bytestream2_init</name><argument_list pos:start="31:21" pos:end="31:43">(<argument pos:start="31:22" pos:end="31:27"><expr pos:start="31:22" pos:end="31:27"><operator pos:start="31:22" pos:end="31:22">&amp;</operator><name pos:start="31:23" pos:end="31:27"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:27">gb</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">buf</name></expr></argument>, <argument pos:start="31:35" pos:end="31:42"><expr pos:start="31:35" pos:end="31:42"><name pos:start="31:35" pos:end="31:42">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:25">/* check signature */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:7">sig</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:38"><name pos:start="37:11" pos:end="37:30">bytestream2_get_be64</name><argument_list pos:start="37:31" pos:end="37:38">(<argument pos:start="37:32" pos:end="37:37"><expr pos:start="37:32" pos:end="37:37"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:37"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="41:22">(<expr pos:start="39:9" pos:end="41:21"><name pos:start="39:9" pos:end="39:11">sig</name> <operator pos:start="39:13" pos:end="39:14">!=</operator> <name pos:start="39:16" pos:end="39:21">PNGSIG</name> <operator pos:start="39:23" pos:end="39:24">&amp;&amp;</operator>

        <name pos:start="41:9" pos:end="41:11">sig</name> <operator pos:start="41:13" pos:end="41:14">!=</operator> <name pos:start="41:16" pos:end="41:21">MNGSIG</name></expr>)</condition> <block pos:start="41:24" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:35">

        <expr_stmt pos:start="43:9" pos:end="43:83"><expr pos:start="43:9" pos:end="43:82"><call pos:start="43:9" pos:end="43:82"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:82">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:37" pos:end="43:76"><expr pos:start="43:37" pos:end="43:76"><literal type="string" pos:start="43:37" pos:end="43:65">"Invalid PNG signature 0x%08"</literal><name pos:start="43:66" pos:end="43:71">PRIX64</name><literal type="string" pos:start="43:72" pos:end="43:76">".\n"</literal></expr></argument>, <argument pos:start="43:79" pos:end="43:81"><expr pos:start="43:79" pos:end="43:81"><name pos:start="43:79" pos:end="43:81">sig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:35">return <expr pos:start="45:16" pos:end="45:34"><name pos:start="45:16" pos:end="45:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:8"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:8">y</name></name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:22"><name pos:start="51:12" pos:end="51:12">s</name><operator pos:start="51:13" pos:end="51:14">-&gt;</operator><name pos:start="51:15" pos:end="51:22">has_trns</name></name> <operator pos:start="51:24" pos:end="51:24">=</operator> <literal type="number" pos:start="51:26" pos:end="51:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:21"><expr pos:start="53:5" pos:end="53:20"><name pos:start="53:5" pos:end="53:16"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:16">hdr_state</name></name> <operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:21"><expr pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:16">pic_state</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:20">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:23">/* init the zlib */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:38"><expr pos:start="61:5" pos:end="61:37"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:14">zstream</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:21">zalloc</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:37">ff_png_zalloc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:14">zstream</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:20">zfree</name></name>  <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:36">ff_png_zfree</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:29"><expr pos:start="65:5" pos:end="65:28"><name pos:start="65:5" pos:end="65:21"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:14">zstream</name><operator pos:start="65:15" pos:end="65:15">.</operator><name pos:start="65:16" pos:end="65:21">opaque</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:28">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:35"><expr pos:start="67:5" pos:end="67:34"><name pos:start="67:5" pos:end="67:7">ret</name> <operator pos:start="67:9" pos:end="67:9">=</operator> <call pos:start="67:11" pos:end="67:34"><name pos:start="67:11" pos:end="67:21">inflateInit</name><argument_list pos:start="67:22" pos:end="67:34">(<argument pos:start="67:23" pos:end="67:33"><expr pos:start="67:23" pos:end="67:33"><operator pos:start="67:23" pos:end="67:23">&amp;</operator><name pos:start="67:24" pos:end="67:33"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:33">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:14">!=</operator> <name pos:start="69:16" pos:end="69:19">Z_OK</name></expr>)</condition> <block pos:start="69:22" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:32">

        <expr_stmt pos:start="71:9" pos:end="71:76"><expr pos:start="71:9" pos:end="71:75"><call pos:start="71:9" pos:end="71:75"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:75">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">avctx</name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:37" pos:end="71:69"><expr pos:start="71:37" pos:end="71:69"><literal type="string" pos:start="71:37" pos:end="71:69">"inflateInit returned error %d\n"</literal></expr></argument>, <argument pos:start="71:72" pos:end="71:74"><expr pos:start="71:72" pos:end="71:74"><name pos:start="71:72" pos:end="71:74">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:32">return <expr pos:start="73:16" pos:end="73:31"><name pos:start="73:16" pos:end="73:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:21"><if pos:start="79:5" pos:end="81:21">if <condition pos:start="79:8" pos:end="79:60">(<expr pos:start="79:9" pos:end="79:59"><operator pos:start="79:9" pos:end="79:9">(</operator><name pos:start="79:10" pos:end="79:12">ret</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:54"><name pos:start="79:16" pos:end="79:34">decode_frame_common</name><argument_list pos:start="79:35" pos:end="79:54">(<argument pos:start="79:36" pos:end="79:40"><expr pos:start="79:36" pos:end="79:40"><name pos:start="79:36" pos:end="79:40">avctx</name></expr></argument>, <argument pos:start="79:43" pos:end="79:43"><expr pos:start="79:43" pos:end="79:43"><name pos:start="79:43" pos:end="79:43">s</name></expr></argument>, <argument pos:start="79:46" pos:end="79:46"><expr pos:start="79:46" pos:end="79:46"><name pos:start="79:46" pos:end="79:46">p</name></expr></argument>, <argument pos:start="79:49" pos:end="79:53"><expr pos:start="79:49" pos:end="79:53"><name pos:start="79:49" pos:end="79:53">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="79:55" pos:end="79:55">)</operator> <operator pos:start="79:57" pos:end="79:57">&lt;</operator> <literal type="number" pos:start="79:59" pos:end="79:59">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:21"><block_content pos:start="81:9" pos:end="81:21">

        <goto pos:start="81:9" pos:end="81:21">goto <name pos:start="81:14" pos:end="81:20">the_end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:43">(<expr pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:25">skip_frame</name></name> <operator pos:start="85:27" pos:end="85:28">==</operator> <name pos:start="85:30" pos:end="85:42">AVDISCARD_ALL</name></expr>)</condition> <block pos:start="85:45" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:21">

        <expr_stmt pos:start="87:9" pos:end="87:23"><expr pos:start="87:9" pos:end="87:22"><operator pos:start="87:9" pos:end="87:9">*</operator><name pos:start="87:10" pos:end="87:18">got_frame</name> <operator pos:start="87:20" pos:end="87:20">=</operator> <literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:38"><name pos:start="89:15" pos:end="89:30">bytestream2_tell</name><argument_list pos:start="89:31" pos:end="89:38">(<argument pos:start="89:32" pos:end="89:37"><expr pos:start="89:32" pos:end="89:37"><operator pos:start="89:32" pos:end="89:32">&amp;</operator><name pos:start="89:33" pos:end="89:37"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="91:9" pos:end="91:21">goto <name pos:start="91:14" pos:end="91:20">the_end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="99:19"><if pos:start="97:5" pos:end="99:19">if <condition pos:start="97:8" pos:end="97:53">(<expr pos:start="97:9" pos:end="97:52"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:12">ret</name> <operator pos:start="97:14" pos:end="97:14">=</operator> <call pos:start="97:16" pos:end="97:47"><name pos:start="97:16" pos:end="97:27">av_frame_ref</name><argument_list pos:start="97:28" pos:end="97:47">(<argument pos:start="97:29" pos:end="97:32"><expr pos:start="97:29" pos:end="97:32"><name pos:start="97:29" pos:end="97:32">data</name></expr></argument>, <argument pos:start="97:35" pos:end="97:46"><expr pos:start="97:35" pos:end="97:46"><name pos:start="97:35" pos:end="97:46"><name pos:start="97:35" pos:end="97:35">s</name><operator pos:start="97:36" pos:end="97:37">-&gt;</operator><name pos:start="97:38" pos:end="97:44">picture</name><operator pos:start="97:45" pos:end="97:45">.</operator><name pos:start="97:46" pos:end="97:46">f</name></name></expr></argument>)</argument_list></call><operator pos:start="97:48" pos:end="97:48">)</operator> <operator pos:start="97:50" pos:end="97:50">&lt;</operator> <literal type="number" pos:start="97:52" pos:end="97:52">0</literal></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:19"><block_content pos:start="99:9" pos:end="99:19">

        <return pos:start="99:9" pos:end="99:19">return <expr pos:start="99:16" pos:end="99:18"><name pos:start="99:16" pos:end="99:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:19"><expr pos:start="103:5" pos:end="103:18"><operator pos:start="103:5" pos:end="103:5">*</operator><name pos:start="103:6" pos:end="103:14">got_frame</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:7">ret</name> <operator pos:start="107:9" pos:end="107:9">=</operator> <call pos:start="107:11" pos:end="107:34"><name pos:start="107:11" pos:end="107:26">bytestream2_tell</name><argument_list pos:start="107:27" pos:end="107:34">(<argument pos:start="107:28" pos:end="107:33"><expr pos:start="107:28" pos:end="107:33"><operator pos:start="107:28" pos:end="107:28">&amp;</operator><name pos:start="107:29" pos:end="107:33"><name pos:start="107:29" pos:end="107:29">s</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="109:1" pos:end="109:8"><name pos:start="109:1" pos:end="109:7">the_end</name>:</label>

    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><call pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:14">inflateEnd</name><argument_list pos:start="111:15" pos:end="111:27">(<argument pos:start="111:16" pos:end="111:26"><expr pos:start="111:16" pos:end="111:26"><operator pos:start="111:16" pos:end="111:16">&amp;</operator><name pos:start="111:17" pos:end="111:26"><name pos:start="111:17" pos:end="111:17">s</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:26">zstream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:23"><expr pos:start="113:5" pos:end="113:22"><name pos:start="113:5" pos:end="113:15"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:15">crow_buf</name></name> <operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:22">NULL</name></expr>;</expr_stmt>

    <return pos:start="115:5" pos:end="115:15">return <expr pos:start="115:12" pos:end="115:14"><name pos:start="115:12" pos:end="115:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
