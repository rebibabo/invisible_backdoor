<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9597.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">filter_frame</name><parameter_list pos:start="1:24" pos:end="1:61">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:36">AVFilterLink</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">inlink</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:53">AVFrame</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:60">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:55">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">AVFilterContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:38">= <expr pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:38"><name pos:start="5:28" pos:end="5:33">inlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">dst</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">AudioEchoContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:35"><name pos:start="7:27" pos:end="7:29">ctx</name><operator pos:start="7:30" pos:end="7:31">-&gt;</operator><name pos:start="7:32" pos:end="7:35">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:22">out_frame</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:36">(<expr pos:start="13:9" pos:end="13:35"><call pos:start="13:9" pos:end="13:35"><name pos:start="13:9" pos:end="13:28">av_frame_is_writable</name><argument_list pos:start="13:29" pos:end="13:35">(<argument pos:start="13:30" pos:end="13:34"><expr pos:start="13:30" pos:end="13:34"><name pos:start="13:30" pos:end="13:34">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:38" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:26">

        <expr_stmt pos:start="15:9" pos:end="15:26"><expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:17">out_frame</name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:25">frame</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="27:5">else <block pos:start="17:12" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:46">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:17">out_frame</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:66"><name pos:start="19:21" pos:end="19:39">ff_get_audio_buffer</name><argument_list pos:start="19:40" pos:end="19:66">(<argument pos:start="19:41" pos:end="19:46"><expr pos:start="19:41" pos:end="19:46"><name pos:start="19:41" pos:end="19:46">inlink</name></expr></argument>, <argument pos:start="19:49" pos:end="19:65"><expr pos:start="19:49" pos:end="19:65"><name pos:start="19:49" pos:end="19:65"><name pos:start="19:49" pos:end="19:53">frame</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:65">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:35"><if pos:start="21:9" pos:end="23:35">if <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><operator pos:start="21:13" pos:end="21:13">!</operator><name pos:start="21:14" pos:end="21:22">out_frame</name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:35"><block_content pos:start="23:13" pos:end="23:35">

            <return pos:start="23:13" pos:end="23:35">return <expr pos:start="23:20" pos:end="23:34"><call pos:start="23:20" pos:end="23:34"><name pos:start="23:20" pos:end="23:26">AVERROR</name><argument_list pos:start="23:27" pos:end="23:34">(<argument pos:start="23:28" pos:end="23:33"><expr pos:start="23:28" pos:end="23:33"><name pos:start="23:28" pos:end="23:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:46"><expr pos:start="25:9" pos:end="25:45"><call pos:start="25:9" pos:end="25:45"><name pos:start="25:9" pos:end="25:27">av_frame_copy_props</name><argument_list pos:start="25:28" pos:end="25:45">(<argument pos:start="25:29" pos:end="25:37"><expr pos:start="25:29" pos:end="25:37"><name pos:start="25:29" pos:end="25:37">out_frame</name></expr></argument>, <argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:44">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:57"><expr pos:start="31:5" pos:end="33:56"><call pos:start="31:5" pos:end="33:56"><name pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:19">echo_samples</name></name><argument_list pos:start="31:20" pos:end="33:56">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">s</name></expr></argument>, <argument pos:start="31:24" pos:end="31:35"><expr pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:35"><name pos:start="31:24" pos:end="31:24">s</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">delayptrs</name></name></expr></argument>, <argument pos:start="31:38" pos:end="31:57"><expr pos:start="31:38" pos:end="31:57"><name pos:start="31:38" pos:end="31:57"><name pos:start="31:38" pos:end="31:42">frame</name><operator pos:start="31:43" pos:end="31:44">-&gt;</operator><name pos:start="31:45" pos:end="31:57">extended_data</name></name></expr></argument>, <argument pos:start="31:60" pos:end="31:83"><expr pos:start="31:60" pos:end="31:83"><name pos:start="31:60" pos:end="31:83"><name pos:start="31:60" pos:end="31:68">out_frame</name><operator pos:start="31:69" pos:end="31:70">-&gt;</operator><name pos:start="31:71" pos:end="31:83">extended_data</name></name></expr></argument>,

                    <argument pos:start="33:21" pos:end="33:37"><expr pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:25">frame</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">nb_samples</name></name></expr></argument>, <argument pos:start="33:40" pos:end="33:55"><expr pos:start="33:40" pos:end="33:55"><name pos:start="33:40" pos:end="33:55"><name pos:start="33:40" pos:end="33:45">inlink</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:55">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:120"><expr pos:start="37:5" pos:end="37:119"><name pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:15">next_pts</name></name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:28"><name pos:start="37:19" pos:end="37:23">frame</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:28">pts</name></name> <operator pos:start="37:30" pos:end="37:30">+</operator> <macro pos:start="37:32" pos:end="37:119"><name pos:start="37:32" pos:end="37:43">av_rescale_q</name><argument_list pos:start="37:44" pos:end="37:119">(<argument pos:start="37:45" pos:end="37:61">frame-&gt;nb_samples</argument>, <argument pos:start="37:64" pos:end="37:77">(AVRational){<literal type="number" pos:start="37:77" pos:end="37:77">1</literal></argument>, <argument pos:start="37:80" pos:end="37:99">inlink-&gt;sample_rate}</argument>, <argument pos:start="37:102" pos:end="37:118">inlink-&gt;time_base</argument>)</argument_list></macro></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:30"><if pos:start="41:5" pos:end="43:30">if <condition pos:start="41:8" pos:end="41:27">(<expr pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:13">frame</name> <operator pos:start="41:15" pos:end="41:16">!=</operator> <name pos:start="41:18" pos:end="41:26">out_frame</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:30"><block_content pos:start="43:9" pos:end="43:30">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><call pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:21">av_frame_free</name><argument_list pos:start="43:22" pos:end="43:29">(<argument pos:start="43:23" pos:end="43:28"><expr pos:start="43:23" pos:end="43:28"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:28">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="47:5" pos:end="47:55">return <expr pos:start="47:12" pos:end="47:54"><call pos:start="47:12" pos:end="47:54"><name pos:start="47:12" pos:end="47:26">ff_filter_frame</name><argument_list pos:start="47:27" pos:end="47:54">(<argument pos:start="47:28" pos:end="47:42"><expr pos:start="47:28" pos:end="47:42"><name pos:start="47:28" pos:end="47:42"><name pos:start="47:28" pos:end="47:30">ctx</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:39">outputs</name><index pos:start="47:40" pos:end="47:42">[<expr pos:start="47:41" pos:end="47:41"><literal type="number" pos:start="47:41" pos:end="47:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:45" pos:end="47:53"><expr pos:start="47:45" pos:end="47:53"><name pos:start="47:45" pos:end="47:53">out_frame</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
